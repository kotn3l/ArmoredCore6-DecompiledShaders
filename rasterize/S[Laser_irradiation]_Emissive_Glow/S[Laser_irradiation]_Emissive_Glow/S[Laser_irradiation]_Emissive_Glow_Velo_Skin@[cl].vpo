#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_6;
layout(location = 7) out vec4 TEXCOORD_14;
layout(location = 8) out vec4 TEXCOORD_15;
layout(location = 6, component = 1) out vec3 TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_14.x = 0.0;
    TEXCOORD_14.y = 0.0;
    TEXCOORD_14.z = 0.0;
    TEXCOORD_14.w = 0.0;
    TEXCOORD_15.x = 0.0;
    TEXCOORD_15.y = 0.0;
    TEXCOORD_15.z = 0.0;
    TEXCOORD_15.w = 0.0;
    TEXCOORD_16.x = 0.0;
    TEXCOORD_16.y = 0.0;
    TEXCOORD_16.z = 0.0;
    float _197 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _221 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _223 = texelFetch(g_InstanceIndexBuffer, int(_221));
    uint _224 = _223.x;
    precise float _225 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _230 = isnan(_225) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _225 : max(0.001000000047497451305389404296875, _225));
    precise float _232 = BLENDWEIGHT.x / _230;
    precise float _233 = BLENDWEIGHT.y / _230;
    precise float _234 = BLENDWEIGHT.z / _230;
    precise float _235 = BLENDWEIGHT.w / _230;
    uvec4 _242 = floatBitsToUint(cbInstanceData._m0[(_224 * 13u) + 4u]);
    uint _243 = _242.x;
    uint _245 = (_243 + uint(float(BLENDINDICES.x))) * 3u;
    uint _252 = _245 + 1u;
    uint _259 = _245 + 2u;
    precise float _266 = _232 * cbObjMatrix._m0[_245].x;
    precise float _267 = _232 * cbObjMatrix._m0[_252].x;
    precise float _268 = _232 * cbObjMatrix._m0[_259].x;
    precise float _269 = _232 * cbObjMatrix._m0[_245].y;
    precise float _270 = _232 * cbObjMatrix._m0[_252].y;
    precise float _271 = _232 * cbObjMatrix._m0[_259].y;
    precise float _272 = _232 * cbObjMatrix._m0[_245].z;
    precise float _273 = _232 * cbObjMatrix._m0[_252].z;
    precise float _274 = _232 * cbObjMatrix._m0[_259].z;
    precise float _275 = _232 * cbObjMatrix._m0[_245].w;
    precise float _276 = _232 * cbObjMatrix._m0[_252].w;
    precise float _277 = _232 * cbObjMatrix._m0[_259].w;
    uint _280 = (_243 + uint(float(BLENDINDICES.y))) * 3u;
    uint _287 = _280 + 1u;
    uint _294 = _280 + 2u;
    precise float _301 = _233 * cbObjMatrix._m0[_280].x;
    precise float _302 = _233 * cbObjMatrix._m0[_287].x;
    precise float _303 = _233 * cbObjMatrix._m0[_294].x;
    precise float _304 = _233 * cbObjMatrix._m0[_280].y;
    precise float _305 = _233 * cbObjMatrix._m0[_287].y;
    precise float _306 = _233 * cbObjMatrix._m0[_294].y;
    precise float _307 = _233 * cbObjMatrix._m0[_280].z;
    precise float _308 = _233 * cbObjMatrix._m0[_287].z;
    precise float _309 = _233 * cbObjMatrix._m0[_294].z;
    precise float _310 = _233 * cbObjMatrix._m0[_280].w;
    precise float _311 = _233 * cbObjMatrix._m0[_287].w;
    precise float _312 = _233 * cbObjMatrix._m0[_294].w;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    uint _327 = (_243 + uint(float(BLENDINDICES.z))) * 3u;
    uint _334 = _327 + 1u;
    uint _341 = _327 + 2u;
    precise float _348 = _234 * cbObjMatrix._m0[_327].x;
    precise float _349 = _234 * cbObjMatrix._m0[_334].x;
    precise float _350 = _234 * cbObjMatrix._m0[_341].x;
    precise float _351 = _234 * cbObjMatrix._m0[_327].y;
    precise float _352 = _234 * cbObjMatrix._m0[_334].y;
    precise float _353 = _234 * cbObjMatrix._m0[_341].y;
    precise float _354 = _234 * cbObjMatrix._m0[_327].z;
    precise float _355 = _234 * cbObjMatrix._m0[_334].z;
    precise float _356 = _234 * cbObjMatrix._m0[_341].z;
    precise float _357 = _234 * cbObjMatrix._m0[_327].w;
    precise float _358 = _234 * cbObjMatrix._m0[_334].w;
    precise float _359 = _234 * cbObjMatrix._m0[_341].w;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    uint _374 = (_243 + uint(float(BLENDINDICES.w))) * 3u;
    uint _381 = _374 + 1u;
    uint _388 = _374 + 2u;
    precise float _395 = _235 * cbObjMatrix._m0[_374].x;
    precise float _396 = _235 * cbObjMatrix._m0[_381].x;
    precise float _397 = _235 * cbObjMatrix._m0[_388].x;
    precise float _398 = _235 * cbObjMatrix._m0[_374].y;
    precise float _399 = _235 * cbObjMatrix._m0[_381].y;
    precise float _400 = _235 * cbObjMatrix._m0[_388].y;
    precise float _401 = _235 * cbObjMatrix._m0[_374].z;
    precise float _402 = _235 * cbObjMatrix._m0[_381].z;
    precise float _403 = _235 * cbObjMatrix._m0[_388].z;
    precise float _404 = _235 * cbObjMatrix._m0[_374].w;
    precise float _405 = _235 * cbObjMatrix._m0[_381].w;
    precise float _406 = _235 * cbObjMatrix._m0[_388].w;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = POSITION.x * _407;
    precise float _420 = POSITION.y * _410;
    precise float _421 = _420 + _419;
    precise float _422 = POSITION.z * _413;
    precise float _423 = _422 + _421;
    precise float _424 = 1.0 * _416;
    precise float _425 = _424 + _423;
    precise float _426 = POSITION.x * _408;
    precise float _427 = POSITION.y * _411;
    precise float _428 = _427 + _426;
    precise float _429 = POSITION.z * _414;
    precise float _430 = _429 + _428;
    precise float _431 = 1.0 * _417;
    precise float _432 = _431 + _430;
    precise float _433 = POSITION.x * _409;
    precise float _434 = POSITION.y * _412;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.z * _415;
    precise float _437 = _436 + _435;
    precise float _438 = 1.0 * _418;
    precise float _439 = _438 + _437;
    float _614 = (((((cbPrevObjMatrix._m0[_280].w * _233) + (cbPrevObjMatrix._m0[_245].w * _232)) + (cbPrevObjMatrix._m0[_327].w * _234)) + (cbPrevObjMatrix._m0[_374].w * _235)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_280].z * _233) + (cbPrevObjMatrix._m0[_245].z * _232)) + (cbPrevObjMatrix._m0[_327].z * _234)) + (cbPrevObjMatrix._m0[_374].z * _235), fma(POSITION.y, (((cbPrevObjMatrix._m0[_280].y * _233) + (cbPrevObjMatrix._m0[_245].y * _232)) + (cbPrevObjMatrix._m0[_327].y * _234)) + (cbPrevObjMatrix._m0[_374].y * _235), ((((cbPrevObjMatrix._m0[_280].x * _233) + (cbPrevObjMatrix._m0[_245].x * _232)) + (cbPrevObjMatrix._m0[_327].x * _234)) + (cbPrevObjMatrix._m0[_374].x * _235)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _615 = (((((cbPrevObjMatrix._m0[_287].w * _233) + (cbPrevObjMatrix._m0[_252].w * _232)) + (cbPrevObjMatrix._m0[_334].w * _234)) + (cbPrevObjMatrix._m0[_381].w * _235)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_287].z * _233) + (cbPrevObjMatrix._m0[_252].z * _232)) + (cbPrevObjMatrix._m0[_334].z * _234)) + (cbPrevObjMatrix._m0[_381].z * _235), fma(POSITION.y, (((cbPrevObjMatrix._m0[_287].y * _233) + (cbPrevObjMatrix._m0[_252].y * _232)) + (cbPrevObjMatrix._m0[_334].y * _234)) + (cbPrevObjMatrix._m0[_381].y * _235), ((((cbPrevObjMatrix._m0[_287].x * _233) + (cbPrevObjMatrix._m0[_252].x * _232)) + (cbPrevObjMatrix._m0[_334].x * _234)) + (cbPrevObjMatrix._m0[_381].x * _235)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _616 = (((((cbPrevObjMatrix._m0[_294].w * _233) + (cbPrevObjMatrix._m0[_259].w * _232)) + (cbPrevObjMatrix._m0[_341].w * _234)) + (cbPrevObjMatrix._m0[_388].w * _235)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_294].z * _233) + (cbPrevObjMatrix._m0[_259].z * _232)) + (cbPrevObjMatrix._m0[_341].z * _234)) + (cbPrevObjMatrix._m0[_388].z * _235), fma(POSITION.y, (((cbPrevObjMatrix._m0[_294].y * _233) + (cbPrevObjMatrix._m0[_259].y * _232)) + (cbPrevObjMatrix._m0[_341].y * _234)) + (cbPrevObjMatrix._m0[_388].y * _235), ((((cbPrevObjMatrix._m0[_294].x * _233) + (cbPrevObjMatrix._m0[_259].x * _232)) + (cbPrevObjMatrix._m0[_341].x * _234)) + (cbPrevObjMatrix._m0[_388].x * _235)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _663 = fma(_200, _413, fma(_199, _410, _407 * _197));
    float _666 = fma(_200, _414, fma(_199, _411, _408 * _197));
    float _669 = fma(_200, _415, fma(_199, _412, _409 * _197));
    precise float _685 = _425 - cbSceneParam._m0[3u].x;
    precise float _686 = _432 - cbSceneParam._m0[3u].y;
    precise float _687 = _439 - cbSceneParam._m0[3u].z;
    precise float _715 = _685 * cbSceneParam._m0[24u].x;
    precise float _716 = _686 * cbSceneParam._m0[24u].y;
    precise float _717 = _716 + _715;
    precise float _718 = _687 * cbSceneParam._m0[24u].z;
    precise float _719 = _718 + _717;
    precise float _720 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _721 = _720 + _719;
    precise float _722 = _685 * cbSceneParam._m0[25u].x;
    precise float _723 = _686 * cbSceneParam._m0[25u].y;
    precise float _724 = _723 + _722;
    precise float _725 = _687 * cbSceneParam._m0[25u].z;
    precise float _726 = _725 + _724;
    precise float _727 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _728 = _727 + _726;
    precise float _729 = _685 * cbSceneParam._m0[26u].x;
    precise float _730 = _686 * cbSceneParam._m0[26u].y;
    precise float _731 = _730 + _729;
    precise float _732 = _687 * cbSceneParam._m0[26u].z;
    precise float _733 = _732 + _731;
    precise float _734 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _735 = _734 + _733;
    precise float _736 = _685 * cbSceneParam._m0[27u].x;
    precise float _737 = _686 * cbSceneParam._m0[27u].y;
    precise float _738 = _737 + _736;
    precise float _739 = _687 * cbSceneParam._m0[27u].z;
    precise float _740 = _739 + _738;
    precise float _741 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _742 = _741 + _740;
    gl_Position.x = _721;
    gl_Position.y = _728;
    gl_Position.z = _735;
    gl_Position.w = _742;
    POSITION_1.x = _721;
    POSITION_1.y = _728;
    POSITION_1.z = _735;
    POSITION_1.w = _742;
    NORMAL_1.x = _663;
    NORMAL_1.y = _666;
    NORMAL_1.z = _669;
    NORMAL_1.w = float(_224);
    TANGENT_1.x = fma(_211, _413, fma(_210, _410, _407 * _209));
    TANGENT_1.y = fma(_211, _414, fma(_210, _411, _408 * _209));
    TANGENT_1.z = fma(_211, _415, fma(_210, _412, _409 * _209));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = TEXCOORD_3.x;
    TEXCOORD_4.w = TEXCOORD_3.y;
    TEXCOORD_6 = COLOR_1.x;
    TEXCOORD_14.x = _721;
    TEXCOORD_14.y = _728;
    TEXCOORD_14.z = _735;
    TEXCOORD_14.w = _742;
    TEXCOORD_15.x = fma(_616, cbSceneParam._m0[29u].z, fma(_615, cbSceneParam._m0[29u].y, _614 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_15.y = fma(_616, cbSceneParam._m0[30u].z, fma(_615, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _614)) + cbSceneParam._m0[30u].w;
    TEXCOORD_15.z = fma(_616, cbSceneParam._m0[31u].z, fma(_615, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _614)) + cbSceneParam._m0[31u].w;
    TEXCOORD_15.w = fma(_616, cbSceneParam._m0[32u].z, fma(_615, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _614)) + cbSceneParam._m0[32u].w;
    TEXCOORD_16.x = _663;
    TEXCOORD_16.y = _666;
    TEXCOORD_16.z = _669;
}


