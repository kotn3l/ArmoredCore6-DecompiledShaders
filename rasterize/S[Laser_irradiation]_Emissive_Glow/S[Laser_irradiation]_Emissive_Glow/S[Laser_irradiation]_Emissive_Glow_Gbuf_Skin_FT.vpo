#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out float TEXCOORD_9;
layout(location = 5, component = 1) out float TEXCOORD_13;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_13 = 0.0;
    float _179 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _203 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _205 = texelFetch(g_InstanceIndexBuffer, int(_203));
    uint _206 = _205.x;
    float _207 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _212 = isnan(_207) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _207 : max(0.001000000047497451305389404296875, _207));
    float _214 = BLENDWEIGHT.x / _212;
    float _215 = BLENDWEIGHT.y / _212;
    float _216 = BLENDWEIGHT.z / _212;
    float _217 = BLENDWEIGHT.w / _212;
    uvec4 _224 = floatBitsToUint(cbInstanceData._m0[(_206 * 13u) + 4u]);
    uint _225 = _224.x;
    uint _227 = (_225 + uint(float(BLENDINDICES.x))) * 3u;
    uint _234 = _227 + 1u;
    uint _241 = _227 + 2u;
    uint _262 = (_225 + uint(float(BLENDINDICES.y))) * 3u;
    uint _269 = _262 + 1u;
    uint _276 = _262 + 2u;
    uint _309 = (_225 + uint(float(BLENDINDICES.z))) * 3u;
    uint _316 = _309 + 1u;
    uint _323 = _309 + 2u;
    uint _356 = (_225 + uint(float(BLENDINDICES.w))) * 3u;
    uint _363 = _356 + 1u;
    uint _370 = _356 + 2u;
    float _389 = (((cbObjMatrix._m0[_262].x * _215) + (cbObjMatrix._m0[_227].x * _214)) + (cbObjMatrix._m0[_309].x * _216)) + (cbObjMatrix._m0[_356].x * _217);
    float _390 = (((cbObjMatrix._m0[_269].x * _215) + (cbObjMatrix._m0[_234].x * _214)) + (cbObjMatrix._m0[_316].x * _216)) + (cbObjMatrix._m0[_363].x * _217);
    float _391 = (((cbObjMatrix._m0[_276].x * _215) + (cbObjMatrix._m0[_241].x * _214)) + (cbObjMatrix._m0[_323].x * _216)) + (cbObjMatrix._m0[_370].x * _217);
    float _392 = (((cbObjMatrix._m0[_262].y * _215) + (cbObjMatrix._m0[_227].y * _214)) + (cbObjMatrix._m0[_309].y * _216)) + (cbObjMatrix._m0[_356].y * _217);
    float _393 = (((cbObjMatrix._m0[_269].y * _215) + (cbObjMatrix._m0[_234].y * _214)) + (cbObjMatrix._m0[_316].y * _216)) + (cbObjMatrix._m0[_363].y * _217);
    float _394 = (((cbObjMatrix._m0[_276].y * _215) + (cbObjMatrix._m0[_241].y * _214)) + (cbObjMatrix._m0[_323].y * _216)) + (cbObjMatrix._m0[_370].y * _217);
    float _395 = (((cbObjMatrix._m0[_262].z * _215) + (cbObjMatrix._m0[_227].z * _214)) + (cbObjMatrix._m0[_309].z * _216)) + (cbObjMatrix._m0[_356].z * _217);
    float _396 = (((cbObjMatrix._m0[_269].z * _215) + (cbObjMatrix._m0[_234].z * _214)) + (cbObjMatrix._m0[_316].z * _216)) + (cbObjMatrix._m0[_363].z * _217);
    float _397 = (((cbObjMatrix._m0[_276].z * _215) + (cbObjMatrix._m0[_241].z * _214)) + (cbObjMatrix._m0[_323].z * _216)) + (cbObjMatrix._m0[_370].z * _217);
    float _404 = ((((cbObjMatrix._m0[_262].w * _215) + (cbObjMatrix._m0[_227].w * _214)) + (cbObjMatrix._m0[_309].w * _216)) + (cbObjMatrix._m0[_356].w * _217)) + fma(POSITION.z, _395, fma(POSITION.y, _392, _389 * POSITION.x));
    float _408 = ((((cbObjMatrix._m0[_269].w * _215) + (cbObjMatrix._m0[_234].w * _214)) + (cbObjMatrix._m0[_316].w * _216)) + (cbObjMatrix._m0[_363].w * _217)) + fma(POSITION.z, _396, fma(POSITION.y, _393, _390 * POSITION.x));
    float _412 = ((((cbObjMatrix._m0[_276].w * _215) + (cbObjMatrix._m0[_241].w * _214)) + (cbObjMatrix._m0[_323].w * _216)) + (cbObjMatrix._m0[_370].w * _217)) + fma(POSITION.z, _397, fma(POSITION.y, _394, _391 * POSITION.x));
    float _418 = cbSceneParam._m0[3u].x - _404;
    float _419 = cbSceneParam._m0[3u].y - _408;
    float _420 = cbSceneParam._m0[3u].z - _412;
    float _453 = cbMtdParam._m0[17u].z - cbMtdParam._m0[17u].w;
    POSITION_1.x = _404;
    POSITION_1.y = _408;
    POSITION_1.z = _412;
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_182, _395, fma(_181, _392, _389 * _179));
    NORMAL_1.y = fma(_182, _396, fma(_181, _393, _390 * _179));
    NORMAL_1.z = fma(_182, _397, fma(_181, _394, _391 * _179));
    NORMAL_1.w = float(_206);
    TANGENT_1.x = fma(_193, _395, fma(_192, _392, _389 * _191));
    TANGENT_1.y = fma(_193, _396, fma(_192, _393, _390 * _191));
    TANGENT_1.z = fma(_193, _397, fma(_192, _394, _391 * _191));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = TEXCOORD_3.x;
    TEXCOORD_4.w = TEXCOORD_3.y;
    TEXCOORD_9 = COLOR_1.x;
    TEXCOORD_13 = ((floatBitsToUint(cbSceneParam._m0[69u]).w != 0u) ? (1.0 - ((sqrt(((_418 * _418) + (_419 * _419)) + (_420 * _420)) - cbMtdParam._m0[17u].w) / (isnan(0.001000000047497451305389404296875) ? _453 : (isnan(_453) ? 0.001000000047497451305389404296875 : max(_453, 0.001000000047497451305389404296875))))) : 0.0) * cbMtdParam._m0[17u].y;
}


