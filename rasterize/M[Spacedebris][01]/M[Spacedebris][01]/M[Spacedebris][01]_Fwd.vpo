#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _164 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _181 = POSITION.x + 0.0;
    precise float _182 = POSITION.y + 0.0;
    precise float _183 = POSITION.z + 0.0;
    uint _188 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _190 = texelFetch(g_InstanceIndexBuffer, int(_188));
    uint _191 = _190.x;
    uint _193 = _191 * 13u;
    uint _201 = (floatBitsToUint(cbInstanceData._m0[_193 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _208 = _201 + 1u;
    uint _215 = _201 + 2u;
    precise float _222 = _181 * cbObjMatrix._m0[_201].x;
    precise float _223 = _182 * cbObjMatrix._m0[_201].y;
    precise float _224 = _223 + _222;
    precise float _225 = _183 * cbObjMatrix._m0[_201].z;
    precise float _226 = _225 + _224;
    precise float _227 = 1.0 * cbObjMatrix._m0[_201].w;
    precise float _229 = _227 + _226;
    precise float _230 = _181 * cbObjMatrix._m0[_208].x;
    precise float _231 = _182 * cbObjMatrix._m0[_208].y;
    precise float _232 = _231 + _230;
    precise float _233 = _183 * cbObjMatrix._m0[_208].z;
    precise float _234 = _233 + _232;
    precise float _235 = 1.0 * cbObjMatrix._m0[_208].w;
    precise float _236 = _235 + _234;
    precise float _237 = _181 * cbObjMatrix._m0[_215].x;
    precise float _238 = _182 * cbObjMatrix._m0[_215].y;
    precise float _239 = _238 + _237;
    precise float _240 = _183 * cbObjMatrix._m0[_215].z;
    precise float _241 = _240 + _239;
    precise float _242 = 1.0 * cbObjMatrix._m0[_215].w;
    precise float _243 = _242 + _241;
    precise float _274 = cbPerFrame._m0[22u].x * cbMtdParam._m0[10u].y;
    precise float _276 = _274 - cbMtdParam._m0[11u].w;
    precise float _277 = cbMtdParam._m0[11u].z * _276;
    precise float _278 = cbMtdParam._m0[11u].w + _277;
    precise float _279 = TEXCOORD_1.x * _278;
    precise float _281 = cbMtdParam._m0[10u].x * sin(_279);
    precise float _282 = cbMtdParam._m0[10u].z * _281;
    precise float _283 = _282 + 0.0;
    precise float _285 = _281 * cbMtdParam._m0[11u].x;
    precise float _286 = _285 + 0.0;
    precise float _289 = cbMtdParam._m0[10u].x * cos(_279);
    precise float _290 = cbMtdParam._m0[11u].y * _289;
    precise float _291 = _290 + 0.0;
    precise float _292 = _229 + _291;
    precise float _293 = _236 + _286;
    precise float _294 = _243 + _283;
    precise float _300 = _292 - cbSceneParam._m0[3u].x;
    precise float _301 = _293 - cbSceneParam._m0[3u].y;
    precise float _302 = _294 - cbSceneParam._m0[3u].z;
    precise float _330 = cbSceneParam._m0[24u].x * _300;
    precise float _331 = _301 * cbSceneParam._m0[24u].y;
    precise float _332 = _331 + _330;
    precise float _333 = _302 * cbSceneParam._m0[24u].z;
    precise float _334 = _333 + _332;
    precise float _335 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _336 = _335 + _334;
    precise float _337 = cbSceneParam._m0[25u].x * _300;
    precise float _338 = _301 * cbSceneParam._m0[25u].y;
    precise float _339 = _338 + _337;
    precise float _340 = _302 * cbSceneParam._m0[25u].z;
    precise float _341 = _340 + _339;
    precise float _342 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _343 = _342 + _341;
    precise float _344 = _300 * cbSceneParam._m0[26u].x;
    precise float _345 = _301 * cbSceneParam._m0[26u].y;
    precise float _346 = _345 + _344;
    precise float _347 = _302 * cbSceneParam._m0[26u].z;
    precise float _348 = _347 + _346;
    precise float _349 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _350 = _349 + _348;
    precise float _351 = _300 * cbSceneParam._m0[27u].x;
    precise float _352 = _301 * cbSceneParam._m0[27u].y;
    precise float _353 = _352 + _351;
    precise float _354 = _302 * cbSceneParam._m0[27u].z;
    precise float _355 = _354 + _353;
    precise float _356 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _357 = _356 + _355;
    gl_Position.x = _336;
    gl_Position.y = _343;
    gl_Position.z = _350;
    gl_Position.w = _357;
    POSITION_1.x = _336;
    POSITION_1.y = _343;
    POSITION_1.z = _350;
    POSITION_1.w = _357;
    NORMAL_1.x = fma(_167, cbObjMatrix._m0[_201].z, fma(_166, cbObjMatrix._m0[_201].y, cbObjMatrix._m0[_201].x * _164));
    NORMAL_1.y = fma(_167, cbObjMatrix._m0[_208].z, fma(_166, cbObjMatrix._m0[_208].y, cbObjMatrix._m0[_208].x * _164));
    NORMAL_1.z = fma(_167, cbObjMatrix._m0[_215].z, fma(_166, cbObjMatrix._m0[_215].y, cbObjMatrix._m0[_215].x * _164));
    NORMAL_1.w = float(_191);
    TANGENT_1.x = fma(_179, cbObjMatrix._m0[_201].z, fma(_178, cbObjMatrix._m0[_201].y, cbObjMatrix._m0[_201].x * _177));
    TANGENT_1.y = fma(_179, cbObjMatrix._m0[_208].z, fma(_178, cbObjMatrix._m0[_208].y, cbObjMatrix._m0[_208].x * _177));
    TANGENT_1.z = fma(_179, cbObjMatrix._m0[_215].z, fma(_178, cbObjMatrix._m0[_215].y, cbObjMatrix._m0[_215].x * _177));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = COLOR_1.x;
    TEXCOORD_2.w = TEXCOORD_1.x;
    gl_ClipDistance[0u] = dot(vec4(_336, _343, _350, _357), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_336, _343, _350, _357), vec4(cbInstanceData._m0[_193 + 3u]));
}


