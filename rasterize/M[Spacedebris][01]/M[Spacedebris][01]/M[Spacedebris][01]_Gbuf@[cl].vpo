#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_2;
layout(location = 4) out float TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_9 = 0.0;
    float _155 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _157 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _158 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _172 = POSITION.x + 0.0;
    precise float _173 = POSITION.y + 0.0;
    precise float _174 = POSITION.z + 0.0;
    uint _179 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _181 = texelFetch(g_InstanceIndexBuffer, int(_179));
    uint _182 = _181.x;
    uint _192 = (floatBitsToUint(cbInstanceData._m0[(_182 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _199 = _192 + 1u;
    uint _206 = _192 + 2u;
    precise float _213 = _172 * cbObjMatrix._m0[_192].x;
    precise float _214 = _173 * cbObjMatrix._m0[_192].y;
    precise float _215 = _214 + _213;
    precise float _216 = _174 * cbObjMatrix._m0[_192].z;
    precise float _217 = _216 + _215;
    precise float _218 = 1.0 * cbObjMatrix._m0[_192].w;
    precise float _220 = _218 + _217;
    precise float _221 = _172 * cbObjMatrix._m0[_199].x;
    precise float _222 = _173 * cbObjMatrix._m0[_199].y;
    precise float _223 = _222 + _221;
    precise float _224 = _174 * cbObjMatrix._m0[_199].z;
    precise float _225 = _224 + _223;
    precise float _226 = 1.0 * cbObjMatrix._m0[_199].w;
    precise float _227 = _226 + _225;
    precise float _228 = _172 * cbObjMatrix._m0[_206].x;
    precise float _229 = _173 * cbObjMatrix._m0[_206].y;
    precise float _230 = _229 + _228;
    precise float _231 = _174 * cbObjMatrix._m0[_206].z;
    precise float _232 = _231 + _230;
    precise float _233 = 1.0 * cbObjMatrix._m0[_206].w;
    precise float _234 = _233 + _232;
    float _240 = cbSceneParam._m0[3u].x - _220;
    float _241 = cbSceneParam._m0[3u].y - _227;
    float _242 = cbSceneParam._m0[3u].z - _234;
    precise float _279 = cbPerFrame._m0[22u].x * cbMtdParam._m0[10u].y;
    precise float _281 = _279 - cbMtdParam._m0[11u].w;
    precise float _282 = cbMtdParam._m0[11u].z * _281;
    precise float _283 = cbMtdParam._m0[11u].w + _282;
    precise float _284 = TEXCOORD_1.x * _283;
    precise float _286 = cbMtdParam._m0[10u].x * sin(_284);
    precise float _287 = cbMtdParam._m0[10u].z * _286;
    precise float _288 = _287 + 0.0;
    precise float _290 = _286 * cbMtdParam._m0[11u].x;
    precise float _291 = _290 + 0.0;
    precise float _294 = cbMtdParam._m0[10u].x * cos(_284);
    precise float _295 = cbMtdParam._m0[11u].y * _294;
    precise float _296 = _295 + 0.0;
    precise float _297 = _220 + _296;
    precise float _298 = _227 + _291;
    precise float _299 = _234 + _288;
    precise float _300 = _297 - cbSceneParam._m0[3u].x;
    precise float _301 = _298 - cbSceneParam._m0[3u].y;
    precise float _302 = _299 - cbSceneParam._m0[3u].z;
    precise float _330 = cbSceneParam._m0[24u].x * _300;
    precise float _331 = _301 * cbSceneParam._m0[24u].y;
    precise float _332 = _331 + _330;
    precise float _333 = _302 * cbSceneParam._m0[24u].z;
    precise float _334 = _333 + _332;
    precise float _335 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _336 = _335 + _334;
    precise float _337 = cbSceneParam._m0[25u].x * _300;
    precise float _338 = _301 * cbSceneParam._m0[25u].y;
    precise float _339 = _338 + _337;
    precise float _340 = _302 * cbSceneParam._m0[25u].z;
    precise float _341 = _340 + _339;
    precise float _342 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _343 = _342 + _341;
    precise float _344 = _300 * cbSceneParam._m0[26u].x;
    precise float _345 = _301 * cbSceneParam._m0[26u].y;
    precise float _346 = _345 + _344;
    precise float _347 = _302 * cbSceneParam._m0[26u].z;
    precise float _348 = _347 + _346;
    precise float _349 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _350 = _349 + _348;
    precise float _351 = _300 * cbSceneParam._m0[27u].x;
    precise float _352 = _301 * cbSceneParam._m0[27u].y;
    precise float _353 = _352 + _351;
    precise float _354 = _302 * cbSceneParam._m0[27u].z;
    precise float _355 = _354 + _353;
    precise float _356 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _357 = _356 + _355;
    gl_Position.x = _336;
    gl_Position.y = _343;
    gl_Position.z = _350;
    gl_Position.w = _357;
    NORMAL_1.x = fma(_158, cbObjMatrix._m0[_192].z, fma(_157, cbObjMatrix._m0[_192].y, cbObjMatrix._m0[_192].x * _155));
    NORMAL_1.y = fma(_158, cbObjMatrix._m0[_199].z, fma(_157, cbObjMatrix._m0[_199].y, cbObjMatrix._m0[_199].x * _155));
    NORMAL_1.z = fma(_158, cbObjMatrix._m0[_206].z, fma(_157, cbObjMatrix._m0[_206].y, cbObjMatrix._m0[_206].x * _155));
    NORMAL_1.w = float(_182);
    TANGENT_1.x = fma(_170, cbObjMatrix._m0[_192].z, fma(_169, cbObjMatrix._m0[_192].y, cbObjMatrix._m0[_192].x * _168));
    TANGENT_1.y = fma(_170, cbObjMatrix._m0[_199].z, fma(_169, cbObjMatrix._m0[_199].y, cbObjMatrix._m0[_199].x * _168));
    TANGENT_1.z = fma(_170, cbObjMatrix._m0[_206].z, fma(_169, cbObjMatrix._m0[_206].y, cbObjMatrix._m0[_206].x * _168));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = COLOR_1.x;
    TEXCOORD_2.w = TEXCOORD_1.x;
    TEXCOORD_9 = sqrt(((_240 * _240) + (_241 * _241)) + (_242 * _242));
}


