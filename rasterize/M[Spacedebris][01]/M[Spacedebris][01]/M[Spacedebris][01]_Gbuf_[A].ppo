#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Spacedebris_01_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _172 = texture(sampler2D(M_Spacedebris_01_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _180 = (_172.x * 2.0) + (-1.0);
    float _182 = (_172.y * 2.0) + (-1.0);
    float _183 = dot(vec2(_180, _182), vec2(_180, _182));
    float _385 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _189 = sqrt(1.0 - (isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0))));
    float _192 = fma(_189, _138 * NORMAL.x, fma(_182, _145 * TANGENT.x, (_131 * _123) * _180));
    float _195 = fma(_189, _138 * NORMAL.y, fma(_182, _145 * TANGENT.y, (_131 * _124) * _180));
    float _198 = fma(_189, _138 * NORMAL.z, fma(_182, _145 * TANGENT.z, (_131 * _125) * _180));
    float _202 = inversesqrt(dot(vec3(_192, _195, _198), vec3(_192, _195, _198)));
    float _396 = isnan(0.0) ? cbMtdParam._m0[10u].w : (isnan(cbMtdParam._m0[10u].w) ? 0.0 : max(cbMtdParam._m0[10u].w, 0.0));
    float _407 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _204 = isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0));
    float _418 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _205 = isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0));
    float _429 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _206 = isnan(1.0) ? _429 : (isnan(_429) ? 1.0 : min(_429, 1.0));
    uint _208 = uint(roundEven(NORMAL.w));
    vec4 _213 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _215 = _213.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _278 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _440 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        float _279 = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
        float _283 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _451 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _451 : (isnan(_451) ? 1.0 : min(_451, 1.0))) - _279)) + _279) < ((_215 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _312;
    uint _235;
    vec4 _240;
    float _247;
    float _248;
    float _249;
    float _253;
    vec4 _257;
    float _259;
    float _260;
    bool _271;
    for (;;)
    {
        _235 = _208 * 13u;
        _240 = cbInstanceData._m0[(_235 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _244 = (cbMtdParam._m0[0u].x * _204) * _240.x;
        float _245 = (cbMtdParam._m0[0u].y * _205) * _240.y;
        float _246 = (cbMtdParam._m0[0u].z * _206) * _240.z;
        float _462 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
        _247 = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
        float _473 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
        _248 = isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0));
        float _484 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
        _249 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
        _253 = cbInstanceData._m0[_235 + 6u].w;
        float _254 = _215 + (-0.5);
        _257 = cbMtdParam._m0[1u];
        _259 = _257.y * _254;
        _260 = _254 * 0.999000012874603271484375;
        _271 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_271)
        {
            if ((cbInstanceData._m0[_235 + 7u].x + _260) < 0.5)
            {
                _312 = true;
                break;
            }
        }
        if ((_240.w < 1.0) && ((_240.w + _260) < 0.5))
        {
            _312 = true;
            break;
        }
        if ((_259 + 1.0) < _257.x)
        {
            _312 = true;
            break;
        }
        _312 = false;
        break;
    }
    if (_312)
    {
        discard_state = true;
    }
    bool _338 = cbMtdParam._m0[1u].z != 0.0;
    float _339 = _338 ? _253 : 0.0;
    SV_Target.x = ((_192 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.y = ((_195 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.z = ((_198 * 0.5) * _202) + 0.500488758087158203125;
    SV_Target.w = _339;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _338 ? _253 : TEXCOORD.z;
    SV_Target_2.x = _247;
    SV_Target_2.y = _248;
    SV_Target_2.z = _249;
    SV_Target_2.w = _338 ? _253 : (float(floatBitsToUint(cbInstanceData._m0[_235 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _339;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _339;
    discard_exit();
}


