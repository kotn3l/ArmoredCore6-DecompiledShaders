#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _152 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _153 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _154 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _159 = inversesqrt(dot(vec3(_152, _153, _154), vec3(_152, _153, _154)));
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _173 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _181;
    float _182;
    float _183;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _181 = (-0.0) - _167;
        _182 = (-0.0) - _168;
        _183 = (-0.0) - _169;
    }
    else
    {
        _181 = _167;
        _182 = _168;
        _183 = _169;
    }
    float _229 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _239 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _229);
    float _240 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _229);
    float _241 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _229);
    float _257 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _258 = _257 * _239;
    float _259 = _257 * _240;
    float _260 = _257 * _241;
    float _261 = dot(vec4(_258, _259, _260, 0.0), vec4(_181, _182, _183, 0.0));
    float _264 = _261 - cbMtdParam._m0[20u].w;
    float _1353 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _274 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1353 : (isnan(_1353) ? 1.0 : min(_1353, 1.0)))))) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[21u].w);
    float _1364 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _293 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    vec4 _349 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].x * _293) + TEXCOORD.x) * cbMtdParam._m0[27u].z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[27u].w) * ((cbMtdParam._m0[27u].y * _293) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _351 = _349.x;
    float _363 = dot(vec3(_239, _240, _241), vec3(_159 * _152, _159 * _153, _159 * _154));
    float _366 = dot(vec3(_239, _240, _241), vec3(_173 * TANGENT.x, _173 * TANGENT.y, _173 * TANGENT.z));
    float _369 = dot(vec3(_239, _240, _241), vec3(_181, _182, _183));
    float _375 = inversesqrt(dot(vec3(_363, _366, _369), vec3(_363, _366, _369)));
    float _376 = _363 * 0.5;
    vec4 _403 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((((_351 * cbMtdParam._m0[22u].z) + TEXCOORD.x) + (cbMtdParam._m0[23u].x * _293)) + cbMtdParam._m0[24u].x) + ((_376 * cbMtdParam._m0[16u].z) * _375)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((((_351 * cbMtdParam._m0[22u].w) + TEXCOORD.y) + (cbMtdParam._m0[23u].y * _293)) + cbMtdParam._m0[24u].y) + (((cbMtdParam._m0[16u].z * 0.5) * _366) * _375)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _408 = _403.w;
    vec4 _448 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[28u].x + TEXCOORD.x) * cbMtdParam._m0[26u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[28u].y + TEXCOORD.y) * cbMtdParam._m0[26u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _458 = (_448.x + (-0.5)) * cbMtdParam._m0[17u].x;
    float _459 = (_448.y + (-0.5)) * cbMtdParam._m0[17u].x;
    vec4 _481 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((((cbMtdParam._m0[26u].z * _351) + TEXCOORD.x) + (cbMtdParam._m0[23u].z * _293)) + cbMtdParam._m0[22u].x) + ((_376 * cbMtdParam._m0[16u].y) * _375)) + _458) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((((cbMtdParam._m0[26u].w * _351) + TEXCOORD.y) + (cbMtdParam._m0[23u].w * _293)) + cbMtdParam._m0[22u].y) + (((cbMtdParam._m0[16u].y * 0.5) * _366) * _375)) + _459) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _483 = _481.x;
    float _484 = _481.y;
    float _485 = _481.z;
    vec4 _530 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_3, SS_WrapLinear), vec2(((((((_458 + TEXCOORD.x) + (cbMtdParam._m0[28u].z * _351)) + (cbMtdParam._m0[29u].x * _293)) + cbMtdParam._m0[29u].z) + ((_376 * cbMtdParam._m0[19u].y) * _375)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((((_459 + TEXCOORD.y) + (cbMtdParam._m0[28u].w * _351)) + (cbMtdParam._m0[29u].y * _293)) + cbMtdParam._m0[29u].w) + (((cbMtdParam._m0[19u].y * 0.5) * _366) * _375)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _535 = _530.w;
    float _547 = cbMtdParam._m0[19u].x - cbMtdParam._m0[18u].w;
    float _549 = (sqrt(((_239 * _239) + (_240 * _240)) + (_241 * _241)) - cbMtdParam._m0[18u].w) / (isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0)));
    float _1380 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    vec4 _560 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _562 = _560.x;
    bool _569 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _585 = ((_569 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _562)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _562))) - POSITION_1.w) / cbMtdParam._m0[18u].z;
    float _1391 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _590 = (((texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_5, SS_WrapLinear), vec2(((((cbMtdParam._m0[25u].z + TEXCOORD.x) + (_293 * cbMtdParam._m0[25u].x)) * cbMtdParam._m0[24u].z) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbTextureTilingScale._m0[5u].y * cbMtdParam._m0[24u].w) * ((cbMtdParam._m0[25u].w + TEXCOORD.y) + (_293 * cbMtdParam._m0[25u].y))) + cbTextureTilingScale._m0[5u].w)).x * cbMtdParam._m0[15u].z) * ((_481.w + _408) + _535)) * (isnan(1.0) ? _1380 : (isnan(_1380) ? 1.0 : min(_1380, 1.0)))) * (isnan(1.0) ? _1391 : (isnan(_1391) ? 1.0 : min(_1391, 1.0)));
    float _1402 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _605 = _261 - cbMtdParam._m0[18u].y;
    float _1413 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _613 = exp2(log2(1.0 - (isnan(1.0) ? _1413 : (isnan(_1413) ? 1.0 : min(_1413, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].z, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].w;
    float _614 = _613 + (cbMtdParam._m0[15u].w * (isnan(1.0) ? _1402 : (isnan(_1402) ? 1.0 : min(_1402, 1.0))));
    float _1429 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _616 = (isnan(1.0) ? _1429 : (isnan(_1429) ? 1.0 : min(_1429, 1.0))) * (isnan(1.0) ? _1364 : (isnan(_1364) ? 1.0 : min(_1364, 1.0)));
    float _641 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _645 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _649 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _653 = inversesqrt(dot(vec3(_641, _645, _649), vec3(_641, _645, _649)));
    float _654 = _653 * _641;
    float _655 = _653 * _645;
    float _656 = _653 * _649;
    uvec4 _659 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _661 = _659.y != 0u;
    float _671 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].xyz), vec3(cbMtdParam._m0[30u].xyz)));
    uint _675 = uint(roundEven(NORMAL.w)) * 13u;
    uint _682 = floatBitsToUint(cbInstanceData._m0[_675 + 5u]).x * 14u;
    float _689 = _661 ? cbLight._m0[_682].x : (_671 * cbMtdParam._m0[30u].x);
    float _690 = _661 ? cbLight._m0[_682].y : (_671 * cbMtdParam._m0[30u].y);
    float _691 = _661 ? cbLight._m0[_682].z : (_671 * cbMtdParam._m0[30u].z);
    float _695 = inversesqrt(dot(vec3(_689, _690, _691), vec3(_689, _690, _691)));
    float _696 = _689 * _695;
    float _697 = _690 * _695;
    float _698 = _691 * _695;
    float _699 = dot(vec4(_654, _655, _656, 0.0), vec4(_696, _697, _698, 0.0));
    float _1440 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _702 = isnan(1.0) ? _1440 : (isnan(_1440) ? 1.0 : min(_1440, 1.0));
    float _704 = 1.0 - (_702 * _702);
    float _706 = (-0.0) - (_704 - cbMtdParam._m0[20u].y);
    float _707 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _730 = (-0.0) - (_704 - cbMtdParam._m0[21u].x);
    float _731 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _752 = ((_530.x - _483) * _535) + _483;
    float _753 = ((_530.y - _484) * _535) + _484;
    float _754 = ((_530.z - _485) * _535) + _485;
    float _790 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _258, (-0.0) - _259, (-0.0) - _260)) * 0.5;
    float _791 = _790 + 0.5;
    float _801 = 0.5 - _790;
    float _818 = (((cbSceneParam._m0[83u].x * _801) + (cbSceneParam._m0[82u].x * _791)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _819 = (((cbSceneParam._m0[83u].y * _801) + (cbSceneParam._m0[82u].y * _791)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _820 = (((cbSceneParam._m0[83u].z * _801) + (cbSceneParam._m0[82u].z * _791)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _827 = ((_818 - cbMtdParam._m0[13u].z) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].z;
    float _828 = ((_819 - cbMtdParam._m0[13u].w) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].w;
    float _829 = ((_820 - cbMtdParam._m0[14u].x) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[14u].x;
    float _845 = inversesqrt(dot(vec3(_696, _697, _698), vec3(_696, _697, _698)));
    float _860 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_654, _655, _656, 0.0), vec4(_845 * _696, _845 * _697, _845 * _698, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1471 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
    float _862 = isnan(1.0) ? _1471 : (isnan(_1471) ? 1.0 : min(_1471, 1.0));
    float _868 = exp2(log2(_862 * 6.5) * 7.0);
    float _1482 = isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0));
    float _870 = (isnan(1.0) ? _1482 : (isnan(_1482) ? 1.0 : min(_1482, 1.0))) + _862;
    float _1493 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _871 = isnan(1.0) ? _1493 : (isnan(_1493) ? 1.0 : min(_1493, 1.0));
    float _881 = ((_871 * ((((_818 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[12u].z) - _827)) + _827) * (((_403.x - _752) * _408) + _752);
    float _882 = ((_871 * ((((_819 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[12u].w) - _828)) + _828) * (((_403.y - _753) * _408) + _753);
    float _883 = ((_871 * ((((_820 - cbMtdParam._m0[13u].x) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].x) - _829)) + _829) * (((_403.z - _754) * _408) + _754);
    float _884 = isnan(_882) ? _881 : (isnan(_881) ? _882 : max(_881, _882));
    float _885 = isnan(_883) ? _884 : (isnan(_884) ? _883 : max(_884, _883));
    float _888;
    float _890;
    if (_885 < 1.1920928955078125e-07)
    {
        _888 = 0.0;
        _890 = 0.0;
    }
    else
    {
        float _915 = isnan(_882) ? _881 : (isnan(_881) ? _882 : min(_881, _882));
        float _917 = _885 - (isnan(_883) ? _915 : (isnan(_915) ? _883 : min(_915, _883)));
        float _891 = _917 / _885;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_917 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _891;
        }
        else
        {
            float _1258;
            if (_885 == _881)
            {
                _1258 = ((_882 - _883) / _917) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_16_12_ladder;
                if (_885 == _882)
                {
                    frontier_phi_16_12_ladder = (((_883 - _881) / _917) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_16_12_ladder = (((_881 - _882) / _917) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1258 = frontier_phi_16_12_ladder;
            }
            float _1263 = (_1258 < 0.0) ? (_1258 + 1.0) : _1258;
            precise float _889 = (_1263 - floor(_1263)) * 6.0;
            frontier_phi_3_4_ladder = _889;
            frontier_phi_3_4_ladder_1 = _891;
        }
        _888 = frontier_phi_3_4_ladder;
        _890 = frontier_phi_3_4_ladder_1;
    }
    float _893 = cbMtdParam._m0[20u].z + _885;
    float _1524 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
    float _894 = isnan(1.0) ? _1524 : (isnan(_1524) ? 1.0 : min(_1524, 1.0));
    float _896 = cbMtdParam._m0[21u].y + _890;
    float _1535 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
    float _897 = isnan(1.0) ? _1535 : (isnan(_1535) ? 1.0 : min(_1535, 1.0));
    uint _899 = uint(int(floor(_888)));
    float _901 = _888 - float(int(_899));
    float _903 = (1.0 - _897) * _894;
    float _906 = (1.0 - (_901 * _897)) * _894;
    float _910 = (1.0 - ((1.0 - _901) * _897)) * _894;
    float _919;
    float _921;
    float _922;
    if ((_899 == 0u) || (_899 == 6u))
    {
        _919 = _894;
        _921 = _910;
        _922 = _903;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_899 == 1u)
        {
            frontier_phi_5_6_ladder = _906;
            frontier_phi_5_6_ladder_1 = _894;
            frontier_phi_5_6_ladder_2 = _903;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_899 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _903;
                frontier_phi_5_6_ladder_10_ladder_1 = _894;
                frontier_phi_5_6_ladder_10_ladder_2 = _910;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_15_ladder;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
                if (_899 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _903;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _906;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _894;
                }
                else
                {
                    bool _1313 = _899 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _1313 ? _910 : _894;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _903;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _1313 ? _894 : _906;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_15_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _919 = frontier_phi_5_6_ladder;
        _921 = frontier_phi_5_6_ladder_1;
        _922 = frontier_phi_5_6_ladder_2;
    }
    float _931 = exp2(log2(_919) * cbMtdParam._m0[21u].z);
    float _932 = exp2(log2(_921) * cbMtdParam._m0[21u].z);
    float _933 = exp2(log2(_922) * cbMtdParam._m0[21u].z);
    float _946 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy), vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy)));
    float _954 = (dot(vec4(_654, _655, _656, 0.0), vec4(_946 * cbMtdParam._m0[30u].w, _946 * cbMtdParam._m0[31u].x, _946 * cbMtdParam._m0[31u].y, 0.0)) + 1.0) * 0.5;
    float _1546 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _961 = cbMtdParam._m0[17u].y * exp2(log2(isnan(1.0) ? _1546 : (isnan(_1546) ? 1.0 : min(_1546, 1.0))) * cbMtdParam._m0[17u].w);
    float _1557 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _962 = isnan(1.0) ? _1557 : (isnan(_1557) ? 1.0 : min(_1557, 1.0));
    float _969 = (cbMtdParam._m0[19u].z * exp2(log2(isnan(64.0) ? _731 : (isnan(_731) ? 64.0 : min(_731, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[19u].w * exp2(log2(isnan(64.0) ? _707 : (isnan(_707) ? 64.0 : min(_707, 64.0))) * 1.64999997615814208984375));
    float _972 = ((_962 * ((_931 * cbMtdParam._m0[9u].z) - _931)) + _931) + (_969 * cbMtdParam._m0[11u].z);
    float _975 = ((_962 * ((_932 * cbMtdParam._m0[9u].w) - _932)) + _932) + (_969 * cbMtdParam._m0[11u].w);
    float _978 = ((_962 * ((_933 * cbMtdParam._m0[10u].x) - _933)) + _933) + (_969 * cbMtdParam._m0[12u].x);
    bool _984 = _659.x != 0u;
    float _1583 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _1012 = _569 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1022 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _1036 = (_675 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1042 = cbInstanceData._m0[_1036].x * ((_984 ? (((_871 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z) * _613) : 0.0) + (isnan(4.0) ? _972 : (isnan(_972) ? 4.0 : min(_972, 4.0))));
    float _1043 = cbInstanceData._m0[_1036].y * ((_984 ? (_613 * ((_871 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _975 : (isnan(_975) ? 4.0 : min(_975, 4.0))));
    float _1044 = cbInstanceData._m0[_1036].z * ((_984 ? (_613 * ((_871 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x)) : 0.0) + (isnan(4.0) ? _978 : (isnan(_978) ? 4.0 : min(_978, 4.0))));
    float _1609 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1057 = isnan(1.0) ? _1609 : (isnan(_1609) ? 1.0 : min(_1609, 1.0));
    float _1062 = cbInstanceData._m0[_675 + 6u].w * (isnan(1.0) ? _1583 : (isnan(_1583) ? 1.0 : min(_1583, 1.0)));
    float _1068 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _1069 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _1084 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1068, _1069, (log2((isnan(cbSceneParam._m0[77u].w) ? _1012 : (isnan(_1012) ? cbSceneParam._m0[77u].w : min(_1012, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1086 = _1084.x;
    float _1087 = _1084.y;
    float _1088 = _1084.z;
    float _1089 = _1084.w;
    float _1151;
    float _1153;
    float _1155;
    float _1157;
    if (_1012 > cbSceneParam._m0[78u].w)
    {
        float _1113 = isnan(_1012) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1012 : min(cbSceneParam._m0[80u].w, _1012));
        float _1114 = _1113 / _1012;
        float _1125 = _1114 * (cbSceneParam._m0[71u].x - (_641 / _1022));
        float _1126 = (cbSceneParam._m0[71u].y - (_645 / _1022)) * _1114;
        float _1127 = (-0.0) - _1126;
        float _1128 = _1114 * (cbSceneParam._m0[71u].z - (_649 / _1022));
        float _1130 = (cbSceneParam._m0[77u].w * _1127) / _1113;
        float _1131 = _1130 + cbSceneParam._m0[79u].w;
        float _1132 = cbSceneParam._m0[79u].w - _1126;
        float _1138 = sqrt(((_1125 * _1125) + (_1126 * _1126)) + (_1128 * _1128));
        float _1141 = (1.0 - (cbSceneParam._m0[77u].w / _1113)) * _1138;
        float _1147 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1149 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1275;
        if (abs((_1127 - _1130) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1275 = ((((_1131 > 0.0) ? exp2(_1147 * _1131) : (2.0 - exp2(_1149 * _1131))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1141;
        }
        else
        {
            float _1230 = 1.0 / cbSceneParam._m0[80u].x;
            float _1231 = isnan(_1132) ? _1131 : (isnan(_1131) ? _1132 : max(_1131, _1132));
            float _1232 = isnan(_1132) ? _1131 : (isnan(_1131) ? _1132 : min(_1131, _1132));
            float _1241 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : min(_1231, 0.0));
            float _1242 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : min(_1232, 0.0));
            _1275 = ((abs(_1138 / _1127) * cbSceneParam._m0[80u].y) * ((((_1241 - _1242) * 2.0) - ((exp2(_1147 * (isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0)))) - exp2(_1147 * (isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0))))) * _1230)) - ((exp2(_1149 * _1241) - exp2(_1149 * _1242)) * _1230))) + (_1141 * cbSceneParam._m0[80u].z);
        }
        vec4 _1277 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1068, _1069, 1.0), 0.0);
        float _1286 = exp2((_1275 * (-1.44269502162933349609375)) * (1.0 - _1277.w));
        float _1287 = log2(_1286);
        float _1303 = log2(_1089);
        _1151 = (exp2(_1303 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1287 * cbSceneParam._m0[78u].x)) * _1277.x) / cbSceneParam._m0[78u].x)) + _1086;
        _1153 = (exp2(_1303 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1287 * cbSceneParam._m0[78u].y)) * _1277.y) / cbSceneParam._m0[78u].y)) + _1087;
        _1155 = (exp2(_1303 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1287 * cbSceneParam._m0[78u].z)) * _1277.z) / cbSceneParam._m0[78u].z)) + _1088;
        _1157 = _1286 * _1089;
    }
    else
    {
        _1151 = _1086;
        _1153 = _1087;
        _1155 = _1088;
        _1157 = _1089;
    }
    float _1169 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1170 = _1169 == 3.0;
    float _1172 = log2(_1157);
    float _1176 = exp2(_1172 * cbSceneParam._m0[78u].x);
    float _1177 = exp2(_1172 * cbSceneParam._m0[78u].y);
    float _1178 = exp2(_1172 * cbSceneParam._m0[78u].z);
    float _1179 = _1176 * (isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0)));
    float _1180 = _1177 * (isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0)));
    float _1181 = _1178 * (isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0)));
    float _1191 = (_1169 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1191 * (_1170 ? _1179 : (_1179 + (cbSceneParam._m0[72u].w * _1151)));
    SV_Target.y = _1191 * (_1170 ? _1180 : (_1180 + (cbSceneParam._m0[72u].w * _1153)));
    SV_Target.z = _1191 * (_1170 ? _1181 : (_1181 + (cbSceneParam._m0[72u].w * _1155)));
    SV_Target.w = _1062;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1042) * _1057) * _1176) * _1191;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1043) * _1057) * _1177) * _1191;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1044) * _1057) * _1178) * _1191;
    SV_Target_1.w = _1062;
}


