#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[32];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Planet_Coral_001_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1421;
float _1422;
float _1423;
float _1424;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _161 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _162 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _163 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _168 = inversesqrt(dot(vec3(_161, _162, _163), vec3(_161, _162, _163)));
    float _175 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _176 = _175 * NORMAL.x;
    float _177 = _175 * NORMAL.y;
    float _178 = _175 * NORMAL.z;
    float _182 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _190;
    float _191;
    float _192;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _190 = (-0.0) - _176;
        _191 = (-0.0) - _177;
        _192 = (-0.0) - _178;
    }
    else
    {
        _190 = _176;
        _191 = _177;
        _192 = _178;
    }
    float _238 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _248 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _238);
    float _249 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _238);
    float _250 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _238);
    float _266 = inversesqrt(dot(vec3(_248, _249, _250), vec3(_248, _249, _250)));
    float _267 = _266 * _248;
    float _268 = _266 * _249;
    float _269 = _266 * _250;
    float _270 = dot(vec4(_267, _268, _269, 0.0), vec4(_190, _191, _192, 0.0));
    float _273 = _270 - cbMtdParam._m0[20u].w;
    float _1433 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _283 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1433 : (isnan(_1433) ? 1.0 : min(_1433, 1.0)))))) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[21u].w);
    float _1444 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    float _302 = cbMtdParam._m0[18u].x * cbPerFrame._m0[22u].x;
    vec4 _358 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].x * _302) + TEXCOORD.x) * cbMtdParam._m0[27u].z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[27u].w) * ((cbMtdParam._m0[27u].y * _302) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _360 = _358.x;
    float _372 = dot(vec3(_248, _249, _250), vec3(_168 * _161, _168 * _162, _168 * _163));
    float _375 = dot(vec3(_248, _249, _250), vec3(_182 * TANGENT.x, _182 * TANGENT.y, _182 * TANGENT.z));
    float _378 = dot(vec3(_248, _249, _250), vec3(_190, _191, _192));
    float _384 = inversesqrt(dot(vec3(_372, _375, _378), vec3(_372, _375, _378)));
    float _385 = _372 * 0.5;
    vec4 _412 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((((_360 * cbMtdParam._m0[22u].z) + TEXCOORD.x) + (cbMtdParam._m0[23u].x * _302)) + cbMtdParam._m0[24u].x) + ((_385 * cbMtdParam._m0[16u].z) * _384)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((((_360 * cbMtdParam._m0[22u].w) + TEXCOORD.y) + (cbMtdParam._m0[23u].y * _302)) + cbMtdParam._m0[24u].y) + (((cbMtdParam._m0[16u].z * 0.5) * _375) * _384)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _417 = _412.w;
    vec4 _457 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[28u].x + TEXCOORD.x) * cbMtdParam._m0[26u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[28u].y + TEXCOORD.y) * cbMtdParam._m0[26u].y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _467 = (_457.x + (-0.5)) * cbMtdParam._m0[17u].x;
    float _468 = (_457.y + (-0.5)) * cbMtdParam._m0[17u].x;
    vec4 _490 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((((cbMtdParam._m0[26u].z * _360) + TEXCOORD.x) + (cbMtdParam._m0[23u].z * _302)) + cbMtdParam._m0[22u].x) + ((_385 * cbMtdParam._m0[16u].y) * _384)) + _467) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((((cbMtdParam._m0[26u].w * _360) + TEXCOORD.y) + (cbMtdParam._m0[23u].w * _302)) + cbMtdParam._m0[22u].y) + (((cbMtdParam._m0[16u].y * 0.5) * _375) * _384)) + _468) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _492 = _490.x;
    float _493 = _490.y;
    float _494 = _490.z;
    vec4 _539 = texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_3, SS_WrapLinear), vec2(((((((_467 + TEXCOORD.x) + (cbMtdParam._m0[28u].z * _360)) + (cbMtdParam._m0[29u].x * _302)) + cbMtdParam._m0[29u].z) + ((_385 * cbMtdParam._m0[19u].y) * _384)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((((((_468 + TEXCOORD.y) + (cbMtdParam._m0[28u].w * _360)) + (cbMtdParam._m0[29u].y * _302)) + cbMtdParam._m0[29u].w) + (((cbMtdParam._m0[19u].y * 0.5) * _375) * _384)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _544 = _539.w;
    float _556 = cbMtdParam._m0[19u].x - cbMtdParam._m0[18u].w;
    float _558 = (sqrt(((_248 * _248) + (_249 * _249)) + (_250 * _250)) - cbMtdParam._m0[18u].w) / (isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0)));
    float _1460 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    vec4 _569 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _571 = _569.x;
    bool _578 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _594 = ((_578 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _571)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _571))) - POSITION_1.w) / cbMtdParam._m0[18u].z;
    float _1471 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
    float _599 = (((texture(sampler2D(M_Planet_Coral_001_snp_0_Texture2D_5, SS_WrapLinear), vec2(((((cbMtdParam._m0[25u].z + TEXCOORD.x) + (_302 * cbMtdParam._m0[25u].x)) * cbMtdParam._m0[24u].z) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbTextureTilingScale._m0[5u].y * cbMtdParam._m0[24u].w) * ((cbMtdParam._m0[25u].w + TEXCOORD.y) + (_302 * cbMtdParam._m0[25u].y))) + cbTextureTilingScale._m0[5u].w)).x * cbMtdParam._m0[15u].z) * ((_490.w + _417) + _544)) * (isnan(1.0) ? _1460 : (isnan(_1460) ? 1.0 : min(_1460, 1.0)))) * (isnan(1.0) ? _1471 : (isnan(_1471) ? 1.0 : min(_1471, 1.0)));
    float _1482 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _614 = _270 - cbMtdParam._m0[18u].y;
    float _1493 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _622 = exp2(log2(1.0 - (isnan(1.0) ? _1493 : (isnan(_1493) ? 1.0 : min(_1493, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].z, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].w;
    float _623 = _622 + (cbMtdParam._m0[15u].w * (isnan(1.0) ? _1482 : (isnan(_1482) ? 1.0 : min(_1482, 1.0))));
    float _1509 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _625 = (isnan(1.0) ? _1509 : (isnan(_1509) ? 1.0 : min(_1509, 1.0))) * (isnan(1.0) ? _1444 : (isnan(_1444) ? 1.0 : min(_1444, 1.0)));
    float _650 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _654 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _658 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _662 = inversesqrt(dot(vec3(_650, _654, _658), vec3(_650, _654, _658)));
    float _663 = _662 * _650;
    float _664 = _662 * _654;
    float _665 = _662 * _658;
    uvec4 _668 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _670 = _668.y != 0u;
    float _680 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].xyz), vec3(cbMtdParam._m0[30u].xyz)));
    uint _684 = uint(roundEven(NORMAL.w)) * 13u;
    uint _691 = floatBitsToUint(cbInstanceData._m0[_684 + 5u]).x * 14u;
    float _698 = _670 ? cbLight._m0[_691].x : (_680 * cbMtdParam._m0[30u].x);
    float _699 = _670 ? cbLight._m0[_691].y : (_680 * cbMtdParam._m0[30u].y);
    float _700 = _670 ? cbLight._m0[_691].z : (_680 * cbMtdParam._m0[30u].z);
    float _704 = inversesqrt(dot(vec3(_698, _699, _700), vec3(_698, _699, _700)));
    float _705 = _698 * _704;
    float _706 = _699 * _704;
    float _707 = _700 * _704;
    float _708 = dot(vec4(_663, _664, _665, 0.0), vec4(_705, _706, _707, 0.0));
    float _1520 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _711 = isnan(1.0) ? _1520 : (isnan(_1520) ? 1.0 : min(_1520, 1.0));
    float _713 = 1.0 - (_711 * _711);
    float _715 = (-0.0) - (_713 - cbMtdParam._m0[20u].y);
    float _716 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _739 = (-0.0) - (_713 - cbMtdParam._m0[21u].x);
    float _740 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _761 = ((_539.x - _492) * _544) + _492;
    float _762 = ((_539.y - _493) * _544) + _493;
    float _763 = ((_539.z - _494) * _544) + _494;
    float _799 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _267, (-0.0) - _268, (-0.0) - _269)) * 0.5;
    float _800 = _799 + 0.5;
    float _810 = 0.5 - _799;
    float _827 = (((cbSceneParam._m0[83u].x * _810) + (cbSceneParam._m0[82u].x * _800)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _828 = (((cbSceneParam._m0[83u].y * _810) + (cbSceneParam._m0[82u].y * _800)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _829 = (((cbSceneParam._m0[83u].z * _810) + (cbSceneParam._m0[82u].z * _800)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _836 = ((_827 - cbMtdParam._m0[13u].z) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].z;
    float _837 = ((_828 - cbMtdParam._m0[13u].w) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].w;
    float _838 = ((_829 - cbMtdParam._m0[14u].x) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[14u].x;
    float _854 = inversesqrt(dot(vec3(_705, _706, _707), vec3(_705, _706, _707)));
    float _869 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_663, _664, _665, 0.0), vec4(_854 * _705, _854 * _706, _854 * _707, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1551 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
    float _871 = isnan(1.0) ? _1551 : (isnan(_1551) ? 1.0 : min(_1551, 1.0));
    float _877 = exp2(log2(_871 * 6.5) * 7.0);
    float _1562 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _879 = (isnan(1.0) ? _1562 : (isnan(_1562) ? 1.0 : min(_1562, 1.0))) + _871;
    float _1573 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _880 = isnan(1.0) ? _1573 : (isnan(_1573) ? 1.0 : min(_1573, 1.0));
    float _890 = ((_880 * ((((_827 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[12u].z) - _836)) + _836) * (((_412.x - _761) * _417) + _761);
    float _891 = ((_880 * ((((_828 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[12u].w) - _837)) + _837) * (((_412.y - _762) * _417) + _762);
    float _892 = ((_880 * ((((_829 - cbMtdParam._m0[13u].x) * cbMtdParam._m0[20u].x) + cbMtdParam._m0[13u].x) - _838)) + _838) * (((_412.z - _763) * _417) + _763);
    float _893 = isnan(_891) ? _890 : (isnan(_890) ? _891 : max(_890, _891));
    float _894 = isnan(_892) ? _893 : (isnan(_893) ? _892 : max(_893, _892));
    float _897;
    float _899;
    if (_894 < 1.1920928955078125e-07)
    {
        _897 = 0.0;
        _899 = 0.0;
    }
    else
    {
        float _924 = isnan(_891) ? _890 : (isnan(_890) ? _891 : min(_890, _891));
        float _926 = _894 - (isnan(_892) ? _924 : (isnan(_924) ? _892 : min(_924, _892)));
        float _900 = _926 / _894;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_926 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _900;
        }
        else
        {
            float _1300;
            if (_894 == _890)
            {
                _1300 = ((_891 - _892) / _926) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_18_12_ladder;
                if (_894 == _891)
                {
                    frontier_phi_18_12_ladder = (((_892 - _890) / _926) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_18_12_ladder = (((_890 - _891) / _926) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1300 = frontier_phi_18_12_ladder;
            }
            float _1305 = (_1300 < 0.0) ? (_1300 + 1.0) : _1300;
            precise float _898 = (_1305 - floor(_1305)) * 6.0;
            frontier_phi_3_4_ladder = _898;
            frontier_phi_3_4_ladder_1 = _900;
        }
        _897 = frontier_phi_3_4_ladder;
        _899 = frontier_phi_3_4_ladder_1;
    }
    float _902 = cbMtdParam._m0[20u].z + _894;
    float _1604 = isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0));
    float _903 = isnan(1.0) ? _1604 : (isnan(_1604) ? 1.0 : min(_1604, 1.0));
    float _905 = cbMtdParam._m0[21u].y + _899;
    float _1615 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _906 = isnan(1.0) ? _1615 : (isnan(_1615) ? 1.0 : min(_1615, 1.0));
    uint _908 = uint(int(floor(_897)));
    float _910 = _897 - float(int(_908));
    float _912 = (1.0 - _906) * _903;
    float _915 = (1.0 - (_910 * _906)) * _903;
    float _919 = (1.0 - ((1.0 - _910) * _906)) * _903;
    float _928;
    float _930;
    float _931;
    if ((_908 == 0u) || (_908 == 6u))
    {
        _928 = _903;
        _930 = _919;
        _931 = _912;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_908 == 1u)
        {
            frontier_phi_5_6_ladder = _915;
            frontier_phi_5_6_ladder_1 = _903;
            frontier_phi_5_6_ladder_2 = _912;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_908 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _912;
                frontier_phi_5_6_ladder_10_ladder_1 = _903;
                frontier_phi_5_6_ladder_10_ladder_2 = _919;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_17_ladder;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
                if (_908 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _912;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _915;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _903;
                }
                else
                {
                    bool _1361 = _908 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _1361 ? _919 : _903;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _912;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _1361 ? _903 : _915;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_17_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _928 = frontier_phi_5_6_ladder;
        _930 = frontier_phi_5_6_ladder_1;
        _931 = frontier_phi_5_6_ladder_2;
    }
    float _940 = exp2(log2(_928) * cbMtdParam._m0[21u].z);
    float _941 = exp2(log2(_930) * cbMtdParam._m0[21u].z);
    float _942 = exp2(log2(_931) * cbMtdParam._m0[21u].z);
    float _955 = inversesqrt(dot(vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy), vec3(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy)));
    float _963 = (dot(vec4(_663, _664, _665, 0.0), vec4(_955 * cbMtdParam._m0[30u].w, _955 * cbMtdParam._m0[31u].x, _955 * cbMtdParam._m0[31u].y, 0.0)) + 1.0) * 0.5;
    float _1626 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _970 = cbMtdParam._m0[17u].y * exp2(log2(isnan(1.0) ? _1626 : (isnan(_1626) ? 1.0 : min(_1626, 1.0))) * cbMtdParam._m0[17u].w);
    float _1637 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _971 = isnan(1.0) ? _1637 : (isnan(_1637) ? 1.0 : min(_1637, 1.0));
    float _978 = (cbMtdParam._m0[19u].z * exp2(log2(isnan(64.0) ? _740 : (isnan(_740) ? 64.0 : min(_740, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[19u].w * exp2(log2(isnan(64.0) ? _716 : (isnan(_716) ? 64.0 : min(_716, 64.0))) * 1.64999997615814208984375));
    float _981 = ((_971 * ((_940 * cbMtdParam._m0[9u].z) - _940)) + _940) + (_978 * cbMtdParam._m0[11u].z);
    float _984 = ((_971 * ((_941 * cbMtdParam._m0[9u].w) - _941)) + _941) + (_978 * cbMtdParam._m0[11u].w);
    float _987 = ((_971 * ((_942 * cbMtdParam._m0[10u].x) - _942)) + _942) + (_978 * cbMtdParam._m0[12u].x);
    bool _993 = _668.x != 0u;
    float _1663 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _1021 = _578 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1031 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _1038 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1040 = _1038.w;
    uint _1051 = _684 + 9u;
    uint _1052 = _1051 + uint(cbMatDynParam._m0[0u].w);
    float _1058 = cbInstanceData._m0[_1052].x * ((_993 ? (((_880 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z) * _622) : 0.0) + (isnan(4.0) ? _981 : (isnan(_981) ? 4.0 : min(_981, 4.0))));
    float _1059 = cbInstanceData._m0[_1052].y * ((_993 ? (_622 * ((_880 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _984 : (isnan(_984) ? 4.0 : min(_984, 4.0))));
    float _1060 = cbInstanceData._m0[_1052].z * ((_993 ? (_622 * ((_880 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x)) : 0.0) + (isnan(4.0) ? _987 : (isnan(_987) ? 4.0 : min(_987, 4.0))));
    float _1061 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
    float _1062 = isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0));
    float _1063 = isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0));
    float _1069 = cbMtdParam._m0[2u].x * _1058;
    float _1070 = cbMtdParam._m0[2u].y * _1059;
    float _1071 = cbMtdParam._m0[2u].z * _1060;
    float _1689 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1073 = isnan(1.0) ? _1689 : (isnan(_1689) ? 1.0 : min(_1689, 1.0));
    float _1078 = cbInstanceData._m0[_684 + 6u].w * (isnan(1.0) ? _1663 : (isnan(_1663) ? 1.0 : min(_1663, 1.0)));
    float _1084 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _1085 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _1100 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1084, _1085, (log2((isnan(cbSceneParam._m0[77u].w) ? _1021 : (isnan(_1021) ? cbSceneParam._m0[77u].w : min(_1021, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1102 = _1100.x;
    float _1103 = _1100.y;
    float _1104 = _1100.z;
    float _1105 = _1100.w;
    float _1167;
    float _1169;
    float _1171;
    float _1173;
    if (_1021 > cbSceneParam._m0[78u].w)
    {
        float _1129 = isnan(_1021) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1021 : min(cbSceneParam._m0[80u].w, _1021));
        float _1130 = _1129 / _1021;
        float _1141 = _1130 * (cbSceneParam._m0[71u].x - (_650 / _1031));
        float _1142 = (cbSceneParam._m0[71u].y - (_654 / _1031)) * _1130;
        float _1143 = (-0.0) - _1142;
        float _1144 = _1130 * (cbSceneParam._m0[71u].z - (_658 / _1031));
        float _1146 = (cbSceneParam._m0[77u].w * _1143) / _1129;
        float _1147 = _1146 + cbSceneParam._m0[79u].w;
        float _1148 = cbSceneParam._m0[79u].w - _1142;
        float _1154 = sqrt(((_1141 * _1141) + (_1142 * _1142)) + (_1144 * _1144));
        float _1157 = (1.0 - (cbSceneParam._m0[77u].w / _1129)) * _1154;
        float _1163 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1165 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1317;
        if (abs((_1143 - _1146) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1317 = ((((_1147 > 0.0) ? exp2(_1163 * _1147) : (2.0 - exp2(_1165 * _1147))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1157;
        }
        else
        {
            float _1255 = 1.0 / cbSceneParam._m0[80u].x;
            float _1256 = isnan(_1148) ? _1147 : (isnan(_1147) ? _1148 : max(_1147, _1148));
            float _1257 = isnan(_1148) ? _1147 : (isnan(_1147) ? _1148 : min(_1147, _1148));
            float _1266 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : min(_1256, 0.0));
            float _1267 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : min(_1257, 0.0));
            _1317 = ((abs(_1154 / _1143) * cbSceneParam._m0[80u].y) * ((((_1266 - _1267) * 2.0) - ((exp2(_1163 * (isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0)))) - exp2(_1163 * (isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0))))) * _1255)) - ((exp2(_1165 * _1266) - exp2(_1165 * _1267)) * _1255))) + (_1157 * cbSceneParam._m0[80u].z);
        }
        vec4 _1319 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1084, _1085, 1.0), 0.0);
        float _1328 = exp2((_1317 * (-1.44269502162933349609375)) * (1.0 - _1319.w));
        float _1329 = log2(_1328);
        float _1345 = log2(_1105);
        _1167 = (exp2(_1345 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1329 * cbSceneParam._m0[78u].x)) * _1319.x) / cbSceneParam._m0[78u].x)) + _1102;
        _1169 = (exp2(_1345 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1329 * cbSceneParam._m0[78u].y)) * _1319.y) / cbSceneParam._m0[78u].y)) + _1103;
        _1171 = (exp2(_1345 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1329 * cbSceneParam._m0[78u].z)) * _1319.z) / cbSceneParam._m0[78u].z)) + _1104;
        _1173 = _1328 * _1105;
    }
    else
    {
        _1167 = _1102;
        _1169 = _1103;
        _1171 = _1104;
        _1173 = _1105;
    }
    bool _1355;
    vec4 _1183;
    vec4 _1206;
    float _1208;
    float _1213;
    float _1214;
    float _1215;
    float _1218;
    float _1221;
    float _1224;
    float _1225;
    bool _1236;
    for (;;)
    {
        _1183 = cbMatDynParam._m0[0u];
        float _1185 = roundEven(_1183.y);
        bool _1186 = _1185 == 3.0;
        float _1188 = log2(_1173);
        float _1192 = exp2(_1188 * cbSceneParam._m0[78u].x);
        float _1193 = exp2(_1188 * cbSceneParam._m0[78u].y);
        float _1194 = exp2(_1188 * cbSceneParam._m0[78u].z);
        float _1195 = _1192 * _1061;
        float _1196 = _1193 * _1062;
        float _1197 = _1194 * _1063;
        float _1204 = _1040 + (-0.5);
        _1206 = cbMtdParam._m0[1u];
        _1208 = _1206.y * _1204;
        float _1212 = (_1185 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1213 = _1212 * (_1186 ? _1195 : (_1195 + (cbSceneParam._m0[72u].w * _1167)));
        _1214 = _1212 * (_1186 ? _1196 : (_1196 + (cbSceneParam._m0[72u].w * _1169)));
        _1215 = _1212 * (_1186 ? _1197 : (_1197 + (cbSceneParam._m0[72u].w * _1171)));
        _1218 = ((_1069 * _1073) * _1192) * _1212;
        _1221 = ((_1070 * _1073) * _1193) * _1212;
        _1224 = ((_1071 * _1073) * _1194) * _1212;
        _1225 = _1204 * 0.999000012874603271484375;
        _1236 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1236)
        {
            if ((cbInstanceData._m0[_684 + 7u].x + _1225) < 0.5)
            {
                _1355 = true;
                break;
            }
        }
        uint _1291 = _1051 + uint(_1183.w);
        if ((cbInstanceData._m0[_1291].w < 1.0) && ((cbInstanceData._m0[_1291].w + _1225) < 0.5))
        {
            _1355 = true;
            break;
        }
        if ((_1208 + 1.0) < _1206.x)
        {
            _1355 = true;
            break;
        }
        _1355 = false;
        break;
    }
    float _1364;
    if (_1355)
    {
        discard_state = true;
        _1364 = 0.0;
    }
    else
    {
        _1364 = _1078;
    }
    SV_Target.x = _1213;
    SV_Target.y = _1214;
    SV_Target.z = _1215;
    SV_Target.w = _1364;
    SV_Target_1.x = _1218;
    SV_Target_1.y = _1221;
    SV_Target_1.z = _1224;
    SV_Target_1.w = _1078;
    discard_exit();
}


