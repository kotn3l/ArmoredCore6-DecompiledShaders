#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _147 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _154 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _155 = _154 * NORMAL.x;
    float _156 = _154 * NORMAL.y;
    float _157 = _154 * NORMAL.z;
    float _161 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _169;
    float _170;
    float _171;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _169 = (-0.0) - _155;
        _170 = (-0.0) - _156;
        _171 = (-0.0) - _157;
    }
    else
    {
        _169 = _155;
        _170 = _156;
        _171 = _157;
    }
    vec4 _185 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _188 = _185.x;
    float _189 = _185.y;
    float _190 = _185.z;
    vec4 _206 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _210 = _206.z;
    float _214 = (_206.x * 2.0) + (-1.0);
    float _216 = (_206.y * 2.0) + (-1.0);
    float _217 = dot(vec2(_214, _216), vec2(_214, _216));
    float _458 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _223 = sqrt(1.0 - (isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0))));
    vec4 _236 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _241 = _236.x * cbMtdParam._m0[9u].x;
    float _242 = _236.y * cbMtdParam._m0[9u].x;
    float _243 = _236.z * cbMtdParam._m0[9u].x;
    float _246 = fma(_223, _169, fma(_216, _161 * TANGENT.x, (_147 * _140) * _214));
    float _249 = fma(_223, _170, fma(_216, _161 * TANGENT.y, (_147 * _141) * _214));
    float _252 = fma(_223, _171, fma(_216, _161 * TANGENT.z, (_147 * _142) * _214));
    float _256 = inversesqrt(dot(vec3(_246, _249, _252), vec3(_246, _249, _252)));
    float _469 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    float _480 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _258 = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
    float _491 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _259 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
    float _502 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _260 = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
    float _513 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    uint _263 = uint(roundEven(NORMAL.w));
    vec4 _268 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _270 = _268.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _339 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _524 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
        float _340 = isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0));
        float _344 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _535 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _535 : (isnan(_535) ? 1.0 : min(_535, 1.0))) - _340)) + _340) < ((_270 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _373;
    uint _290;
    vec4 _295;
    float _302;
    float _303;
    float _304;
    float _305;
    float _306;
    float _307;
    float _310;
    float _314;
    vec4 _318;
    float _320;
    float _321;
    bool _332;
    for (;;)
    {
        _290 = _263 * 13u;
        _295 = cbInstanceData._m0[(_290 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _299 = (cbMtdParam._m0[0u].x * _258) * _295.x;
        float _300 = (cbMtdParam._m0[0u].y * _259) * _295.y;
        float _301 = (cbMtdParam._m0[0u].z * _260) * _295.z;
        float _546 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        _302 = isnan(1.0) ? _546 : (isnan(_546) ? 1.0 : min(_546, 1.0));
        float _557 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        _303 = isnan(1.0) ? _557 : (isnan(_557) ? 1.0 : min(_557, 1.0));
        float _568 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        _304 = isnan(1.0) ? _568 : (isnan(_568) ? 1.0 : min(_568, 1.0));
        _305 = _241 * _295.x;
        _306 = _242 * _295.y;
        _307 = _243 * _295.z;
        _310 = cbMtdParam._m0[2u].w;
        _314 = cbInstanceData._m0[_290 + 6u].w;
        float _315 = _270 + (-0.5);
        _318 = cbMtdParam._m0[1u];
        _320 = _318.y * _315;
        _321 = _315 * 0.999000012874603271484375;
        _332 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_332)
        {
            if ((cbInstanceData._m0[_290 + 7u].x + _321) < 0.5)
            {
                _373 = true;
                break;
            }
        }
        if ((_295.w < 1.0) && ((_295.w + _321) < 0.5))
        {
            _373 = true;
            break;
        }
        if ((_320 + 1.0) < _318.x)
        {
            _373 = true;
            break;
        }
        _373 = false;
        break;
    }
    if (_373)
    {
        discard_state = true;
    }
    float _407;
    float _408;
    float _409;
    float _410;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _407 = _314;
        _408 = _314;
        _409 = _314;
        _410 = _314;
    }
    else
    {
        _407 = _310;
        _408 = 0.0;
        _409 = float(floatBitsToUint(cbInstanceData._m0[_290 + 5u]).x) * 0.0039215688593685626983642578125;
        _410 = TEXCOORD.z;
    }
    SV_Target.x = ((_246 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.y = ((_249 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.z = ((_252 * 0.5) * _256) + 0.500488758087158203125;
    SV_Target.w = _408;
    SV_Target_1.x = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
    SV_Target_1.y = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _410;
    SV_Target_2.x = _302;
    SV_Target_2.y = _303;
    SV_Target_2.z = _304;
    SV_Target_2.w = _409;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _408;
    SV_Target_4.x = _305 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _306 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _307 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _407;
    discard_exit();
}


