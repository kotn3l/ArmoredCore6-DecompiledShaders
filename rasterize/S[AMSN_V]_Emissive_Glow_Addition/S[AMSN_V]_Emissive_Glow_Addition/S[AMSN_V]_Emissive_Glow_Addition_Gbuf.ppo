#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _141 = _140 * NORMAL.x;
    float _142 = _140 * NORMAL.y;
    float _143 = _140 * NORMAL.z;
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _155;
    float _156;
    float _157;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _155 = (-0.0) - _141;
        _156 = (-0.0) - _142;
        _157 = (-0.0) - _143;
    }
    else
    {
        _155 = _141;
        _156 = _142;
        _157 = _143;
    }
    vec4 _171 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _174 = _171.x;
    float _175 = _171.y;
    float _176 = _171.z;
    vec4 _192 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _196 = _192.z;
    float _200 = (_192.x * 2.0) + (-1.0);
    float _202 = (_192.y * 2.0) + (-1.0);
    float _203 = dot(vec2(_200, _202), vec2(_200, _202));
    float _350 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _209 = sqrt(1.0 - (isnan(1.0) ? _350 : (isnan(_350) ? 1.0 : min(_350, 1.0))));
    vec4 _222 = texture(sampler2D(S_AMSN_V_Emissive_Glow_Addition_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _232 = fma(_209, _155, fma(_202, _147 * TANGENT.x, (_133 * _126) * _200));
    float _235 = fma(_209, _156, fma(_202, _147 * TANGENT.y, (_133 * _127) * _200));
    float _238 = fma(_209, _157, fma(_202, _147 * TANGENT.z, (_133 * _128) * _200));
    float _242 = inversesqrt(dot(vec3(_232, _235, _238), vec3(_232, _235, _238)));
    float _361 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _372 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _383 = isnan(0.0) ? _175 : (isnan(_175) ? 0.0 : max(_175, 0.0));
    float _394 = isnan(0.0) ? _176 : (isnan(_176) ? 0.0 : max(_176, 0.0));
    float _405 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    uint _262 = uint(roundEven(NORMAL.w)) * 13u;
    uint _265 = (_262 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _271 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0)))) * cbInstanceData._m0[_265].x;
    float _272 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0)))) * cbInstanceData._m0[_265].y;
    float _273 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0)))) * cbInstanceData._m0[_265].z;
    float _416 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    float _427 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _438 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    uint _283 = _262 + 6u;
    float _320;
    float _321;
    float _322;
    float _323;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _320 = cbInstanceData._m0[_283].w;
        _321 = cbInstanceData._m0[_283].w;
        _322 = cbInstanceData._m0[_283].w;
        _323 = cbInstanceData._m0[_283].w;
    }
    else
    {
        _320 = cbMtdParam._m0[2u].w;
        _321 = 0.0;
        _322 = float(floatBitsToUint(cbInstanceData._m0[_262 + 5u]).x) * 0.0039215688593685626983642578125;
        _323 = TEXCOORD.z;
    }
    SV_Target.x = ((_232 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.y = ((_235 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.z = ((_238 * 0.5) * _242) + 0.500488758087158203125;
    SV_Target.w = _321;
    SV_Target_1.x = isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0));
    SV_Target_1.y = isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _323;
    SV_Target_2.x = isnan(1.0) ? _416 : (isnan(_416) ? 1.0 : min(_416, 1.0));
    SV_Target_2.y = isnan(1.0) ? _427 : (isnan(_427) ? 1.0 : min(_427, 1.0));
    SV_Target_2.z = isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0));
    SV_Target_2.w = _322;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _321;
    SV_Target_4.x = ((_222.x * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_265].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = ((_222.y * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_265].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = ((_222.z * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_265].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _320;
}


