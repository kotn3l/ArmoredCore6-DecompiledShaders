#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _77 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _78 = _77 * NORMAL.x;
    float _79 = _77 * NORMAL.y;
    float _80 = _77 * NORMAL.z;
    float _85;
    float _86;
    float _87;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _85 = (-0.0) - _78;
        _86 = (-0.0) - _79;
        _87 = (-0.0) - _80;
    }
    else
    {
        _85 = _78;
        _86 = _79;
        _87 = _80;
    }
    float _102 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _103 = POSITION_1.x / POSITION_1.w;
    float _104 = POSITION_1.y / POSITION_1.w;
    float _108 = (_103 * 0.5) + 0.5;
    float _109 = 0.5 - (_104 * 0.5);
    float _116;
    float _118;
    float _120;
    float _122;
    if (cbPerScene._m0[22u].z > 1.0)
    {
        _116 = 0.0;
        _118 = 0.0;
        _120 = 0.0;
        _122 = 0.0;
    }
    else
    {
        float _128 = 1.0 / _102;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        float frontier_phi_3_4_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _128))
        {
            float _154 = fma(_87, cbPerScene._m0[8u].z, fma(_86, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _85));
            float _157 = fma(_87, cbPerScene._m0[9u].z, fma(_86, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _85));
            float _160 = fma(_87, cbPerScene._m0[10u].z, fma(_86, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _85));
            float _167 = (_102 * _103) * cbPerScene._m0[28u].x;
            float _169 = (_102 * _104) * cbPerScene._m0[28u].y;
            float _173 = inversesqrt(dot(vec3(_167, _169, _102), vec3(_167, _169, _102)));
            float _174 = _167 * _173;
            float _175 = _169 * _173;
            float _176 = _173 * _102;
            float _180 = dot(vec3(_174, _175, _176), vec3(_154, _157, _160)) * 2.0;
            float _185 = _174 - (_180 * _154);
            float _186 = _175 - (_180 * _157);
            float _187 = _176 - (_180 * _160);
            float _191 = inversesqrt(dot(vec3(_185, _186, _187), vec3(_185, _186, _187)));
            float _194 = _187 * _191;
            float frontier_phi_3_4_ladder_5_ladder;
            float frontier_phi_3_4_ladder_5_ladder_1;
            float frontier_phi_3_4_ladder_5_ladder_2;
            float frontier_phi_3_4_ladder_5_ladder_3;
            if (_194 < cbPerScene._m0[16u].x)
            {
                frontier_phi_3_4_ladder_5_ladder = 0.0;
                frontier_phi_3_4_ladder_5_ladder_1 = 0.0;
                frontier_phi_3_4_ladder_5_ladder_2 = 0.0;
                frontier_phi_3_4_ladder_5_ladder_3 = 0.0;
            }
            else
            {
                float _206 = abs(dot(vec3((-0.0) - _174, (-0.0) - _175, (-0.0) - _176), vec3(_154, _157, _160)));
                float _639 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
                float _215 = (exp2(log2(1.0 - (isnan(1.0) ? _639 : (isnan(_639) ? 1.0 : min(_639, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
                float _650 = isnan(0.0) ? cbPerScene._m0[29u].y : (isnan(cbPerScene._m0[29u].y) ? 0.0 : max(cbPerScene._m0[29u].y, 0.0));
                float _229 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _650 : (isnan(_650) ? 1.0 : min(_650, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_1;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_2;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_3;
                if (_215 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_3_4_ladder_5_ladder_6_ladder = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_1 = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_2 = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_3 = 0.0;
                }
                else
                {
                    float _232 = _194 - cbPerScene._m0[16u].x;
                    float _661 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
                    float _233 = isnan(1.0) ? _661 : (isnan(_661) ? 1.0 : min(_661, 1.0));
                    float _234 = _233 * _233;
                    float _236 = (_215 - cbPerScene._m0[22u].x) * 10.0;
                    float _672 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
                    float _238 = isnan(1.0) ? _672 : (isnan(_672) ? 1.0 : min(_672, 1.0));
                    float _239 = isnan(_238) ? _234 : (isnan(_234) ? _238 : min(_234, _238));
                    float _243 = (cbPerScene._m0[21u].x - _102) * cbPerScene._m0[21u].z;
                    float _688 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
                    float _244 = isnan(1.0) ? _688 : (isnan(_688) ? 1.0 : min(_688, 1.0));
                    float _245 = isnan(_244) ? _239 : (isnan(_239) ? _244 : min(_239, _244));
                    float _246 = (_185 * _191) + _167;
                    float _247 = (_186 * _191) + _169;
                    float _248 = _194 + _102;
                    float _281 = fma(_248, cbPerScene._m0[7u].z, fma(_247, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _246)) + cbPerScene._m0[7u].w;
                    float _285 = ((fma(_248, cbPerScene._m0[4u].z, fma(_247, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _246)) + cbPerScene._m0[4u].w) / _281) - _108;
                    float _286 = ((fma(_248, cbPerScene._m0[5u].z, fma(_247, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _246)) + cbPerScene._m0[5u].w) / _281) - _109;
                    float _293 = cbPerScene._m0[18u].x * _285;
                    float _294 = cbPerScene._m0[18u].y * _286;
                    float _299 = sqrt((_293 * _293) + (_294 * _294)) + 9.9999997473787516355514526367188e-06;
                    float _304 = (_285 / _299) * _229;
                    float _305 = (_286 / _299) * _229;
                    float _306 = (((1.0 / _248) - _128) / _299) * _229;
                    float _335 = abs(float(_304 > 0.0) - _108) / (abs(_304) + 1.0000000116860974230803549289703e-07);
                    float _336 = abs(float(_305 > 0.0) - _109) / (abs(_305) + 1.0000000116860974230803549289703e-07);
                    float _338 = (abs(((_306 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _128) / (abs(_306) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _339 = isnan(_336) ? _335 : (isnan(_335) ? _336 : min(_335, _336));
                    float _340 = isnan(_338) ? _339 : (isnan(_339) ? _338 : min(_339, _338));
                    uint _343 = uint(int(isnan(cbPerScene._m0[23u].y) ? _340 : (isnan(_340) ? cbPerScene._m0[23u].y : min(_340, cbPerScene._m0[23u].y))));
                    float _123;
                    float _348;
                    float _350;
                    float _352;
                    if (int(_343) > int(0u))
                    {
                        float _345 = _306 + _128;
                        float _346 = _305 + _109;
                        float _347 = _304 + _108;
                        float _349;
                        float _351;
                        float _353;
                        float _354;
                        uint _365;
                        float _367;
                        float _369;
                        float _371;
                        float _373;
                        float _375;
                        float _377;
                        float _379;
                        uint _381;
                        float _383;
                        float _385;
                        float _387;
                        float _360 = 0.0;
                        float _361 = 0.0;
                        float _362 = 0.0;
                        float _363 = 0.0;
                        uint _364 = 0u;
                        float _366 = _128;
                        float _368 = _347;
                        float _370 = _346;
                        float _372 = _345;
                        float _374 = _108;
                        float _376 = _109;
                        float _378 = _128;
                        uint _380 = 1u;
                        float _382 = 0.0;
                        float _384 = 0.0;
                        float _386 = 0.0;
                        float _400;
                        float _406;
                        float _407;
                        float _408;
                        float _409;
                        float _410;
                        float _411;
                        uint _412;
                        float _413;
                        bool _420;
                        for (;;)
                        {
                            _400 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _368, cbSceneParam._m0[86u].y * _370), 0.0).x;
                            bool _405 = _364 == (_343 + 4294967295u);
                            _406 = _405 ? _382 : _368;
                            _407 = _405 ? _384 : _370;
                            _408 = _405 ? _386 : _372;
                            _409 = _405 ? _382 : _374;
                            _410 = _405 ? _384 : _376;
                            _411 = _405 ? _386 : _378;
                            _412 = _405 ? 1u : _380;
                            _413 = _405 ? (-1.0) : (_372 - _400);
                            _420 = (_412 != 0u) && ((_413 <= 0.0) && ((_405 ? (-1.0) : (_400 - (_366 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_16_pred;
                            float frontier_phi_16_pred_1;
                            float frontier_phi_16_pred_2;
                            float frontier_phi_16_pred_3;
                            float frontier_phi_16_pred_4;
                            float frontier_phi_16_pred_5;
                            float frontier_phi_16_pred_6;
                            uint frontier_phi_16_pred_7;
                            float frontier_phi_16_pred_8;
                            float frontier_phi_16_pred_9;
                            float frontier_phi_16_pred_10;
                            float frontier_phi_16_pred_11;
                            float frontier_phi_16_pred_12;
                            float frontier_phi_16_pred_13;
                            float frontier_phi_16_pred_14;
                            uint frontier_phi_16_pred_15;
                            if (_420)
                            {
                                uint _430 = uint(int(log2(_229) + 0.999000012874603271484375));
                                float _441;
                                float _443;
                                float _445;
                                float _447;
                                float _449;
                                float _451;
                                float _453;
                                if (int(_430) > int(0u))
                                {
                                    uint _552;
                                    float _554;
                                    float _555;
                                    float _556;
                                    float _557;
                                    float _558;
                                    float _559;
                                    float _560;
                                    _552 = 0u;
                                    _554 = _406;
                                    _555 = _407;
                                    _556 = _408;
                                    _557 = _409;
                                    _558 = _410;
                                    _559 = _411;
                                    _560 = _400;
                                    float _442;
                                    float _444;
                                    float _446;
                                    float _448;
                                    float _450;
                                    float _452;
                                    float _454;
                                    for (;;)
                                    {
                                        float _564 = (_557 + _554) * 0.5;
                                        float _565 = (_558 + _555) * 0.5;
                                        float _566 = (_559 + _556) * 0.5;
                                        vec4 _574 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _564, cbSceneParam._m0[86u].y * _565), 0.0);
                                        float _576 = _574.x;
                                        bool _578 = (_566 - _576) < 0.0;
                                        _442 = _578 ? _564 : _554;
                                        _444 = _578 ? _565 : _555;
                                        _446 = _578 ? _566 : _556;
                                        _448 = _578 ? _557 : _564;
                                        _450 = _578 ? _558 : _565;
                                        _452 = _578 ? _559 : _566;
                                        _454 = _578 ? _576 : _560;
                                        uint _553 = _552 + 1u;
                                        if (_553 == _430)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _552 = _553;
                                            _554 = _442;
                                            _555 = _444;
                                            _556 = _446;
                                            _557 = _448;
                                            _558 = _450;
                                            _559 = _452;
                                            _560 = _454;
                                        }
                                    }
                                    _441 = _442;
                                    _443 = _444;
                                    _445 = _446;
                                    _447 = _448;
                                    _449 = _450;
                                    _451 = _452;
                                    _453 = _454;
                                }
                                else
                                {
                                    _441 = _406;
                                    _443 = _407;
                                    _445 = _408;
                                    _447 = _409;
                                    _449 = _410;
                                    _451 = _411;
                                    _453 = _400;
                                }
                                float _463 = cbPerScene._m0[28u].x * ((_441 * 2.0) + (-1.0));
                                float _464 = cbPerScene._m0[28u].y * (1.0 - (_443 * 2.0));
                                float _497 = fma(_453, cbPerScene._m0[27u].w, fma(_464, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _463) + cbPerScene._m0[27u].z);
                                float _498 = fma(_453, cbPerScene._m0[24u].w, fma(_464, cbPerScene._m0[24u].y, _463 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _497;
                                float _499 = fma(_453, cbPerScene._m0[25u].w, fma(_464, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _463) + cbPerScene._m0[25u].z) / _497;
                                vec4 _508 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _498, cbSceneParam._m0[87u].w * _499), 0.0);
                                float _513 = isnan(_245) ? 1.0 : (isnan(1.0) ? _245 : min(1.0, _245));
                                float _514 = 0.5 - _498;
                                float _515 = 0.5 - _499;
                                float _516 = _514 * 2.0;
                                float _517 = _515 * 2.0;
                                float _518 = _516 * _516;
                                float _519 = _517 * _517;
                                float _724 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
                                float _735 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
                                float _528 = inversesqrt(dot(vec2(_304, _305), vec2(_304, _305)));
                                float _534 = inversesqrt(dot(vec2(_516, _517), vec2(_516, _517)));
                                float _540 = dot(vec2((_514 * (-2.0)) * _534, (_515 * (-2.0)) * _534), vec2(_528 * _304, _528 * _305));
                                float _746 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
                                float _547 = ((1.0 - (isnan(1.0) ? _735 : (isnan(_735) ? 1.0 : min(_735, 1.0)))) * (1.0 - (isnan(1.0) ? _724 : (isnan(_724) ? 1.0 : min(_724, 1.0))))) * (4.0 - ((isnan(1.0) ? _746 : (isnan(_746) ? 1.0 : min(_746, 1.0))) * 2.0));
                                float _757 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
                                float _548 = isnan(1.0) ? _757 : (isnan(_757) ? 1.0 : min(_757, 1.0));
                                float _549 = _548 * _548;
                                frontier_phi_16_pred = _451;
                                frontier_phi_16_pred_1 = _449;
                                frontier_phi_16_pred_2 = _384;
                                frontier_phi_16_pred_3 = _447;
                                frontier_phi_16_pred_4 = _445;
                                frontier_phi_16_pred_5 = _443;
                                frontier_phi_16_pred_6 = _366;
                                frontier_phi_16_pred_7 = _343;
                                frontier_phi_16_pred_8 = isnan(_549) ? _513 : (isnan(_513) ? _549 : min(_513, _549));
                                frontier_phi_16_pred_9 = _508.z;
                                frontier_phi_16_pred_10 = _508.y;
                                frontier_phi_16_pred_11 = _508.x;
                                frontier_phi_16_pred_12 = _441;
                                frontier_phi_16_pred_13 = _386;
                                frontier_phi_16_pred_14 = _382;
                                frontier_phi_16_pred_15 = _412;
                            }
                            else
                            {
                                bool _432 = _413 > 0.0;
                                frontier_phi_16_pred = _408;
                                frontier_phi_16_pred_1 = _407;
                                frontier_phi_16_pred_2 = _432 ? _407 : _384;
                                frontier_phi_16_pred_3 = _406;
                                frontier_phi_16_pred_4 = _408 + _306;
                                frontier_phi_16_pred_5 = _407 + _305;
                                frontier_phi_16_pred_6 = _400;
                                frontier_phi_16_pred_7 = _364 + 1u;
                                frontier_phi_16_pred_8 = _363;
                                frontier_phi_16_pred_9 = _362;
                                frontier_phi_16_pred_10 = _361;
                                frontier_phi_16_pred_11 = _360;
                                frontier_phi_16_pred_12 = _406 + _304;
                                frontier_phi_16_pred_13 = _432 ? _408 : _386;
                                frontier_phi_16_pred_14 = _432 ? _406 : _382;
                                frontier_phi_16_pred_15 = uint(_432);
                            }
                            _379 = frontier_phi_16_pred;
                            _377 = frontier_phi_16_pred_1;
                            _385 = frontier_phi_16_pred_2;
                            _375 = frontier_phi_16_pred_3;
                            _373 = frontier_phi_16_pred_4;
                            _371 = frontier_phi_16_pred_5;
                            _367 = frontier_phi_16_pred_6;
                            _365 = frontier_phi_16_pred_7;
                            _354 = frontier_phi_16_pred_8;
                            _353 = frontier_phi_16_pred_9;
                            _351 = frontier_phi_16_pred_10;
                            _349 = frontier_phi_16_pred_11;
                            _369 = frontier_phi_16_pred_12;
                            _387 = frontier_phi_16_pred_13;
                            _383 = frontier_phi_16_pred_14;
                            _381 = frontier_phi_16_pred_15;
                            if (int(_365) < int(_343))
                            {
                                _360 = _349;
                                _361 = _351;
                                _362 = _353;
                                _363 = _354;
                                _364 = _365;
                                _366 = _367;
                                _368 = _369;
                                _370 = _371;
                                _372 = _373;
                                _374 = _375;
                                _376 = _377;
                                _378 = _379;
                                _380 = _381;
                                _382 = _383;
                                _384 = _385;
                                _386 = _387;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _348 = _349;
                        _350 = _351;
                        _352 = _353;
                        _123 = _354;
                    }
                    else
                    {
                        _348 = 0.0;
                        _350 = 0.0;
                        _352 = 0.0;
                        _123 = 0.0;
                    }
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3;
                    if ((isnan(_348) || isnan(_350)) || isnan(_352))
                    {
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1 = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2 = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder = (_123 * _348) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1 = _123;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2 = (_123 * _352) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3 = (_123 * _350) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_3_4_ladder_5_ladder_6_ladder = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_1 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_2 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_3 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3;
                }
                frontier_phi_3_4_ladder_5_ladder = frontier_phi_3_4_ladder_5_ladder_6_ladder;
                frontier_phi_3_4_ladder_5_ladder_1 = frontier_phi_3_4_ladder_5_ladder_6_ladder_1;
                frontier_phi_3_4_ladder_5_ladder_2 = frontier_phi_3_4_ladder_5_ladder_6_ladder_2;
                frontier_phi_3_4_ladder_5_ladder_3 = frontier_phi_3_4_ladder_5_ladder_6_ladder_3;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_5_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_5_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_5_ladder_2;
            frontier_phi_3_4_ladder_3 = frontier_phi_3_4_ladder_5_ladder_3;
        }
        else
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = 0.0;
            frontier_phi_3_4_ladder_2 = 0.0;
            frontier_phi_3_4_ladder_3 = 0.0;
        }
        _116 = frontier_phi_3_4_ladder;
        _118 = frontier_phi_3_4_ladder_3;
        _120 = frontier_phi_3_4_ladder_2;
        _122 = frontier_phi_3_4_ladder_1;
    }
    SV_Target.x = _116;
    SV_Target.y = _118;
    SV_Target.z = _120;
    SV_Target.w = _122;
}


