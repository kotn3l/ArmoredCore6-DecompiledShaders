#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _90 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _91 = _90 * NORMAL.x;
    float _92 = _90 * NORMAL.y;
    float _93 = _90 * NORMAL.z;
    float _98;
    float _99;
    float _100;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _98 = (-0.0) - _91;
        _99 = (-0.0) - _92;
        _100 = (-0.0) - _93;
    }
    else
    {
        _98 = _91;
        _99 = _92;
        _100 = _93;
    }
    float _115 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _159 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _169 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _159);
    float _170 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _159);
    float _171 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _159);
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _205 = sqrt(((_169 * _169) + (_170 * _170)) + (_171 * _171));
        float _212 = (cbMatDynParam._m0[5u].x * _205) + cbMatDynParam._m0[5u].y;
        float _762 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
        float _213 = isnan(1.0) ? _762 : (isnan(_762) ? 1.0 : min(_762, 1.0));
        float _217 = (cbMatDynParam._m0[5u].z * _205) + cbMatDynParam._m0[5u].w;
        float _773 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _773 : (isnan(_773) ? 1.0 : min(_773, 1.0))) - _213)) + _213) < ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _181 = POSITION_1.x / POSITION_1.w;
    float _182 = POSITION_1.y / POSITION_1.w;
    float _186 = (_181 * 0.5) + 0.5;
    float _187 = 0.5 - (_182 * 0.5);
    float _230;
    float _232;
    float _234;
    float _236;
    if (cbPerScene._m0[22u].z > 1.0)
    {
        _230 = 0.0;
        _232 = 0.0;
        _234 = 0.0;
        _236 = 0.0;
    }
    else
    {
        float _242 = 1.0 / _115;
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        float frontier_phi_5_6_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _242))
        {
            float _268 = fma(_100, cbPerScene._m0[8u].z, fma(_99, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _98));
            float _271 = fma(_100, cbPerScene._m0[9u].z, fma(_99, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _98));
            float _274 = fma(_100, cbPerScene._m0[10u].z, fma(_99, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _98));
            float _281 = (_181 * _115) * cbPerScene._m0[28u].x;
            float _283 = (_182 * _115) * cbPerScene._m0[28u].y;
            float _287 = inversesqrt(dot(vec3(_281, _283, _115), vec3(_281, _283, _115)));
            float _288 = _281 * _287;
            float _289 = _283 * _287;
            float _290 = _287 * _115;
            float _294 = dot(vec3(_288, _289, _290), vec3(_268, _271, _274)) * 2.0;
            float _299 = _288 - (_294 * _268);
            float _300 = _289 - (_294 * _271);
            float _301 = _290 - (_294 * _274);
            float _305 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
            float _308 = _301 * _305;
            float frontier_phi_5_6_ladder_8_ladder;
            float frontier_phi_5_6_ladder_8_ladder_1;
            float frontier_phi_5_6_ladder_8_ladder_2;
            float frontier_phi_5_6_ladder_8_ladder_3;
            if (_308 < cbPerScene._m0[16u].x)
            {
                frontier_phi_5_6_ladder_8_ladder = 0.0;
                frontier_phi_5_6_ladder_8_ladder_1 = 0.0;
                frontier_phi_5_6_ladder_8_ladder_2 = 0.0;
                frontier_phi_5_6_ladder_8_ladder_3 = 0.0;
            }
            else
            {
                float _320 = abs(dot(vec3((-0.0) - _288, (-0.0) - _289, (-0.0) - _290), vec3(_268, _271, _274)));
                float _784 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
                float _329 = (exp2(log2(1.0 - (isnan(1.0) ? _784 : (isnan(_784) ? 1.0 : min(_784, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
                float _795 = isnan(0.0) ? cbPerScene._m0[29u].y : (isnan(cbPerScene._m0[29u].y) ? 0.0 : max(cbPerScene._m0[29u].y, 0.0));
                float _343 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _795 : (isnan(_795) ? 1.0 : min(_795, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_5_6_ladder_8_ladder_9_ladder;
                float frontier_phi_5_6_ladder_8_ladder_9_ladder_1;
                float frontier_phi_5_6_ladder_8_ladder_9_ladder_2;
                float frontier_phi_5_6_ladder_8_ladder_9_ladder_3;
                if (_329 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_5_6_ladder_8_ladder_9_ladder = 0.0;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_1 = 0.0;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_2 = 0.0;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_3 = 0.0;
                }
                else
                {
                    float _346 = _308 - cbPerScene._m0[16u].x;
                    float _806 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
                    float _347 = isnan(1.0) ? _806 : (isnan(_806) ? 1.0 : min(_806, 1.0));
                    float _348 = _347 * _347;
                    float _350 = (_329 - cbPerScene._m0[22u].x) * 10.0;
                    float _817 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
                    float _352 = isnan(1.0) ? _817 : (isnan(_817) ? 1.0 : min(_817, 1.0));
                    float _353 = isnan(_352) ? _348 : (isnan(_348) ? _352 : min(_348, _352));
                    float _357 = (cbPerScene._m0[21u].x - _115) * cbPerScene._m0[21u].z;
                    float _833 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
                    float _358 = isnan(1.0) ? _833 : (isnan(_833) ? 1.0 : min(_833, 1.0));
                    float _359 = isnan(_358) ? _353 : (isnan(_353) ? _358 : min(_353, _358));
                    float _360 = (_299 * _305) + _281;
                    float _361 = (_300 * _305) + _283;
                    float _362 = _308 + _115;
                    float _394 = fma(_362, cbPerScene._m0[7u].z, fma(_361, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _360)) + cbPerScene._m0[7u].w;
                    float _398 = ((fma(_362, cbPerScene._m0[4u].z, fma(_361, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _360)) + cbPerScene._m0[4u].w) / _394) - _186;
                    float _399 = ((fma(_362, cbPerScene._m0[5u].z, fma(_361, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _360)) + cbPerScene._m0[5u].w) / _394) - _187;
                    float _406 = cbPerScene._m0[18u].x * _398;
                    float _407 = cbPerScene._m0[18u].y * _399;
                    float _412 = sqrt((_406 * _406) + (_407 * _407)) + 9.9999997473787516355514526367188e-06;
                    float _417 = (_398 / _412) * _343;
                    float _418 = (_399 / _412) * _343;
                    float _419 = (((1.0 / _362) - _242) / _412) * _343;
                    float _448 = abs(float(_417 > 0.0) - _186) / (abs(_417) + 1.0000000116860974230803549289703e-07);
                    float _449 = abs(float(_418 > 0.0) - _187) / (abs(_418) + 1.0000000116860974230803549289703e-07);
                    float _451 = (abs(((_419 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _242) / (abs(_419) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _452 = isnan(_449) ? _448 : (isnan(_448) ? _449 : min(_448, _449));
                    float _453 = isnan(_451) ? _452 : (isnan(_452) ? _451 : min(_452, _451));
                    uint _456 = uint(int(isnan(cbPerScene._m0[23u].y) ? _453 : (isnan(_453) ? cbPerScene._m0[23u].y : min(_453, cbPerScene._m0[23u].y))));
                    float _237;
                    float _461;
                    float _463;
                    float _465;
                    if (int(_456) > int(0u))
                    {
                        float _458 = _419 + _242;
                        float _459 = _418 + _187;
                        float _460 = _417 + _186;
                        float _462;
                        float _464;
                        float _466;
                        float _467;
                        uint _478;
                        float _480;
                        float _482;
                        float _484;
                        float _486;
                        float _488;
                        float _490;
                        float _492;
                        uint _494;
                        float _496;
                        float _498;
                        float _500;
                        float _473 = 0.0;
                        float _474 = 0.0;
                        float _475 = 0.0;
                        float _476 = 0.0;
                        uint _477 = 0u;
                        float _479 = _242;
                        float _481 = _460;
                        float _483 = _459;
                        float _485 = _458;
                        float _487 = _186;
                        float _489 = _187;
                        float _491 = _242;
                        uint _493 = 1u;
                        float _495 = 0.0;
                        float _497 = 0.0;
                        float _499 = 0.0;
                        float _511;
                        float _517;
                        float _518;
                        float _519;
                        float _520;
                        float _521;
                        float _522;
                        uint _523;
                        float _524;
                        bool _531;
                        for (;;)
                        {
                            _511 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _481, cbSceneParam._m0[86u].y * _483), 0.0).x;
                            bool _516 = _477 == (_456 + 4294967295u);
                            _517 = _516 ? _495 : _481;
                            _518 = _516 ? _497 : _483;
                            _519 = _516 ? _499 : _485;
                            _520 = _516 ? _495 : _487;
                            _521 = _516 ? _497 : _489;
                            _522 = _516 ? _499 : _491;
                            _523 = _516 ? 1u : _493;
                            _524 = _516 ? (-1.0) : (_485 - _511);
                            _531 = (_523 != 0u) && ((_524 <= 0.0) && ((_516 ? (-1.0) : (_511 - (_479 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_19_pred;
                            float frontier_phi_19_pred_1;
                            float frontier_phi_19_pred_2;
                            float frontier_phi_19_pred_3;
                            float frontier_phi_19_pred_4;
                            float frontier_phi_19_pred_5;
                            float frontier_phi_19_pred_6;
                            uint frontier_phi_19_pred_7;
                            float frontier_phi_19_pred_8;
                            float frontier_phi_19_pred_9;
                            float frontier_phi_19_pred_10;
                            float frontier_phi_19_pred_11;
                            float frontier_phi_19_pred_12;
                            float frontier_phi_19_pred_13;
                            float frontier_phi_19_pred_14;
                            uint frontier_phi_19_pred_15;
                            if (_531)
                            {
                                uint _541 = uint(int(log2(_343) + 0.999000012874603271484375));
                                float _552;
                                float _554;
                                float _556;
                                float _558;
                                float _560;
                                float _562;
                                float _564;
                                if (int(_541) > int(0u))
                                {
                                    uint _663;
                                    float _665;
                                    float _666;
                                    float _667;
                                    float _668;
                                    float _669;
                                    float _670;
                                    float _671;
                                    _663 = 0u;
                                    _665 = _517;
                                    _666 = _518;
                                    _667 = _519;
                                    _668 = _520;
                                    _669 = _521;
                                    _670 = _522;
                                    _671 = _511;
                                    float _553;
                                    float _555;
                                    float _557;
                                    float _559;
                                    float _561;
                                    float _563;
                                    float _565;
                                    for (;;)
                                    {
                                        float _675 = (_668 + _665) * 0.5;
                                        float _676 = (_669 + _666) * 0.5;
                                        float _677 = (_670 + _667) * 0.5;
                                        vec4 _685 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _675, cbSceneParam._m0[86u].y * _676), 0.0);
                                        float _687 = _685.x;
                                        bool _689 = (_677 - _687) < 0.0;
                                        _553 = _689 ? _675 : _665;
                                        _555 = _689 ? _676 : _666;
                                        _557 = _689 ? _677 : _667;
                                        _559 = _689 ? _668 : _675;
                                        _561 = _689 ? _669 : _676;
                                        _563 = _689 ? _670 : _677;
                                        _565 = _689 ? _687 : _671;
                                        uint _664 = _663 + 1u;
                                        if (_664 == _541)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _663 = _664;
                                            _665 = _553;
                                            _666 = _555;
                                            _667 = _557;
                                            _668 = _559;
                                            _669 = _561;
                                            _670 = _563;
                                            _671 = _565;
                                        }
                                    }
                                    _552 = _553;
                                    _554 = _555;
                                    _556 = _557;
                                    _558 = _559;
                                    _560 = _561;
                                    _562 = _563;
                                    _564 = _565;
                                }
                                else
                                {
                                    _552 = _517;
                                    _554 = _518;
                                    _556 = _519;
                                    _558 = _520;
                                    _560 = _521;
                                    _562 = _522;
                                    _564 = _511;
                                }
                                float _574 = cbPerScene._m0[28u].x * ((_552 * 2.0) + (-1.0));
                                float _575 = cbPerScene._m0[28u].y * (1.0 - (_554 * 2.0));
                                float _608 = fma(_564, cbPerScene._m0[27u].w, fma(_575, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _574) + cbPerScene._m0[27u].z);
                                float _609 = fma(_564, cbPerScene._m0[24u].w, fma(_575, cbPerScene._m0[24u].y, _574 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _608;
                                float _610 = fma(_564, cbPerScene._m0[25u].w, fma(_575, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _574) + cbPerScene._m0[25u].z) / _608;
                                vec4 _619 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _609, cbSceneParam._m0[87u].w * _610), 0.0);
                                float _624 = isnan(_359) ? 1.0 : (isnan(1.0) ? _359 : min(1.0, _359));
                                float _625 = 0.5 - _609;
                                float _626 = 0.5 - _610;
                                float _627 = _625 * 2.0;
                                float _628 = _626 * 2.0;
                                float _629 = _627 * _627;
                                float _630 = _628 * _628;
                                float _869 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
                                float _880 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
                                float _639 = inversesqrt(dot(vec2(_417, _418), vec2(_417, _418)));
                                float _645 = inversesqrt(dot(vec2(_627, _628), vec2(_627, _628)));
                                float _651 = dot(vec2((_625 * (-2.0)) * _645, (_626 * (-2.0)) * _645), vec2(_639 * _417, _639 * _418));
                                float _891 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
                                float _658 = ((1.0 - (isnan(1.0) ? _880 : (isnan(_880) ? 1.0 : min(_880, 1.0)))) * (1.0 - (isnan(1.0) ? _869 : (isnan(_869) ? 1.0 : min(_869, 1.0))))) * (4.0 - ((isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0))) * 2.0));
                                float _902 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
                                float _659 = isnan(1.0) ? _902 : (isnan(_902) ? 1.0 : min(_902, 1.0));
                                float _660 = _659 * _659;
                                frontier_phi_19_pred = _562;
                                frontier_phi_19_pred_1 = _560;
                                frontier_phi_19_pred_2 = _497;
                                frontier_phi_19_pred_3 = _558;
                                frontier_phi_19_pred_4 = _556;
                                frontier_phi_19_pred_5 = _554;
                                frontier_phi_19_pred_6 = _479;
                                frontier_phi_19_pred_7 = _456;
                                frontier_phi_19_pred_8 = isnan(_660) ? _624 : (isnan(_624) ? _660 : min(_624, _660));
                                frontier_phi_19_pred_9 = _619.z;
                                frontier_phi_19_pred_10 = _619.y;
                                frontier_phi_19_pred_11 = _619.x;
                                frontier_phi_19_pred_12 = _552;
                                frontier_phi_19_pred_13 = _499;
                                frontier_phi_19_pred_14 = _495;
                                frontier_phi_19_pred_15 = _523;
                            }
                            else
                            {
                                bool _543 = _524 > 0.0;
                                frontier_phi_19_pred = _519;
                                frontier_phi_19_pred_1 = _518;
                                frontier_phi_19_pred_2 = _543 ? _518 : _497;
                                frontier_phi_19_pred_3 = _517;
                                frontier_phi_19_pred_4 = _519 + _419;
                                frontier_phi_19_pred_5 = _518 + _418;
                                frontier_phi_19_pred_6 = _511;
                                frontier_phi_19_pred_7 = _477 + 1u;
                                frontier_phi_19_pred_8 = _476;
                                frontier_phi_19_pred_9 = _475;
                                frontier_phi_19_pred_10 = _474;
                                frontier_phi_19_pred_11 = _473;
                                frontier_phi_19_pred_12 = _517 + _417;
                                frontier_phi_19_pred_13 = _543 ? _519 : _499;
                                frontier_phi_19_pred_14 = _543 ? _517 : _495;
                                frontier_phi_19_pred_15 = uint(_543);
                            }
                            _492 = frontier_phi_19_pred;
                            _490 = frontier_phi_19_pred_1;
                            _498 = frontier_phi_19_pred_2;
                            _488 = frontier_phi_19_pred_3;
                            _486 = frontier_phi_19_pred_4;
                            _484 = frontier_phi_19_pred_5;
                            _480 = frontier_phi_19_pred_6;
                            _478 = frontier_phi_19_pred_7;
                            _467 = frontier_phi_19_pred_8;
                            _466 = frontier_phi_19_pred_9;
                            _464 = frontier_phi_19_pred_10;
                            _462 = frontier_phi_19_pred_11;
                            _482 = frontier_phi_19_pred_12;
                            _500 = frontier_phi_19_pred_13;
                            _496 = frontier_phi_19_pred_14;
                            _494 = frontier_phi_19_pred_15;
                            if (int(_478) < int(_456))
                            {
                                _473 = _462;
                                _474 = _464;
                                _475 = _466;
                                _476 = _467;
                                _477 = _478;
                                _479 = _480;
                                _481 = _482;
                                _483 = _484;
                                _485 = _486;
                                _487 = _488;
                                _489 = _490;
                                _491 = _492;
                                _493 = _494;
                                _495 = _496;
                                _497 = _498;
                                _499 = _500;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _461 = _462;
                        _463 = _464;
                        _465 = _466;
                        _237 = _467;
                    }
                    else
                    {
                        _461 = 0.0;
                        _463 = 0.0;
                        _465 = 0.0;
                        _237 = 0.0;
                    }
                    float frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder;
                    float frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_1;
                    float frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_2;
                    float frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_3;
                    if ((isnan(_461) || isnan(_463)) || isnan(_465))
                    {
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder = 0.0;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_1 = 0.0;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_2 = 0.0;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder = (_237 * _461) * cbPerScene._m0[28u].w;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_1 = _237;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_2 = (_237 * _465) * cbPerScene._m0[28u].w;
                        frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_3 = (_237 * _463) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_5_6_ladder_8_ladder_9_ladder = frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_1 = frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_1;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_2 = frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_2;
                    frontier_phi_5_6_ladder_8_ladder_9_ladder_3 = frontier_phi_5_6_ladder_8_ladder_9_ladder_12_ladder_3;
                }
                frontier_phi_5_6_ladder_8_ladder = frontier_phi_5_6_ladder_8_ladder_9_ladder;
                frontier_phi_5_6_ladder_8_ladder_1 = frontier_phi_5_6_ladder_8_ladder_9_ladder_1;
                frontier_phi_5_6_ladder_8_ladder_2 = frontier_phi_5_6_ladder_8_ladder_9_ladder_2;
                frontier_phi_5_6_ladder_8_ladder_3 = frontier_phi_5_6_ladder_8_ladder_9_ladder_3;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_8_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_8_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_8_ladder_2;
            frontier_phi_5_6_ladder_3 = frontier_phi_5_6_ladder_8_ladder_3;
        }
        else
        {
            frontier_phi_5_6_ladder = 0.0;
            frontier_phi_5_6_ladder_1 = 0.0;
            frontier_phi_5_6_ladder_2 = 0.0;
            frontier_phi_5_6_ladder_3 = 0.0;
        }
        _230 = frontier_phi_5_6_ladder;
        _232 = frontier_phi_5_6_ladder_3;
        _234 = frontier_phi_5_6_ladder_2;
        _236 = frontier_phi_5_6_ladder_1;
    }
    SV_Target.x = _230;
    SV_Target.y = _232;
    SV_Target.z = _234;
    SV_Target.w = _236;
    discard_exit();
}


