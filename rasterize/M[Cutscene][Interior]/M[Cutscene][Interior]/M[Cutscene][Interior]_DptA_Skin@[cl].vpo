#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 9) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;
layout(location = 8) out vec2 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    float _239 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _263 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _275 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _276 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _277 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _287 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _289 = texelFetch(g_InstanceIndexBuffer, int(_287));
    uint _290 = _289.x;
    precise float _291 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _296 = isnan(_291) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _291 : max(0.001000000047497451305389404296875, _291));
    precise float _298 = BLENDWEIGHT.x / _296;
    precise float _299 = BLENDWEIGHT.y / _296;
    precise float _300 = BLENDWEIGHT.z / _296;
    precise float _301 = BLENDWEIGHT.w / _296;
    uvec4 _308 = floatBitsToUint(cbInstanceData._m0[(_290 * 13u) + 4u]);
    uint _309 = _308.x;
    uint _311 = (_309 + uint(float(BLENDINDICES.x))) * 3u;
    uint _318 = _311 + 1u;
    uint _325 = _311 + 2u;
    precise float _332 = _298 * cbObjMatrix._m0[_311].x;
    precise float _333 = _298 * cbObjMatrix._m0[_318].x;
    precise float _334 = _298 * cbObjMatrix._m0[_325].x;
    precise float _335 = _298 * cbObjMatrix._m0[_311].y;
    precise float _336 = _298 * cbObjMatrix._m0[_318].y;
    precise float _337 = _298 * cbObjMatrix._m0[_325].y;
    precise float _338 = _298 * cbObjMatrix._m0[_311].z;
    precise float _339 = _298 * cbObjMatrix._m0[_318].z;
    precise float _340 = _298 * cbObjMatrix._m0[_325].z;
    precise float _341 = _298 * cbObjMatrix._m0[_311].w;
    precise float _342 = _298 * cbObjMatrix._m0[_318].w;
    precise float _343 = _298 * cbObjMatrix._m0[_325].w;
    uint _346 = (_309 + uint(float(BLENDINDICES.y))) * 3u;
    uint _353 = _346 + 1u;
    uint _360 = _346 + 2u;
    precise float _367 = _299 * cbObjMatrix._m0[_346].x;
    precise float _368 = _299 * cbObjMatrix._m0[_353].x;
    precise float _369 = _299 * cbObjMatrix._m0[_360].x;
    precise float _370 = _299 * cbObjMatrix._m0[_346].y;
    precise float _371 = _299 * cbObjMatrix._m0[_353].y;
    precise float _372 = _299 * cbObjMatrix._m0[_360].y;
    precise float _373 = _299 * cbObjMatrix._m0[_346].z;
    precise float _374 = _299 * cbObjMatrix._m0[_353].z;
    precise float _375 = _299 * cbObjMatrix._m0[_360].z;
    precise float _376 = _299 * cbObjMatrix._m0[_346].w;
    precise float _377 = _299 * cbObjMatrix._m0[_353].w;
    precise float _378 = _299 * cbObjMatrix._m0[_360].w;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    uint _393 = (_309 + uint(float(BLENDINDICES.z))) * 3u;
    uint _400 = _393 + 1u;
    uint _407 = _393 + 2u;
    precise float _414 = _300 * cbObjMatrix._m0[_393].x;
    precise float _415 = _300 * cbObjMatrix._m0[_400].x;
    precise float _416 = _300 * cbObjMatrix._m0[_407].x;
    precise float _417 = _300 * cbObjMatrix._m0[_393].y;
    precise float _418 = _300 * cbObjMatrix._m0[_400].y;
    precise float _419 = _300 * cbObjMatrix._m0[_407].y;
    precise float _420 = _300 * cbObjMatrix._m0[_393].z;
    precise float _421 = _300 * cbObjMatrix._m0[_400].z;
    precise float _422 = _300 * cbObjMatrix._m0[_407].z;
    precise float _423 = _300 * cbObjMatrix._m0[_393].w;
    precise float _424 = _300 * cbObjMatrix._m0[_400].w;
    precise float _425 = _300 * cbObjMatrix._m0[_407].w;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    uint _440 = (_309 + uint(float(BLENDINDICES.w))) * 3u;
    uint _447 = _440 + 1u;
    uint _454 = _440 + 2u;
    precise float _461 = _301 * cbObjMatrix._m0[_440].x;
    precise float _462 = _301 * cbObjMatrix._m0[_447].x;
    precise float _463 = _301 * cbObjMatrix._m0[_454].x;
    precise float _464 = _301 * cbObjMatrix._m0[_440].y;
    precise float _465 = _301 * cbObjMatrix._m0[_447].y;
    precise float _466 = _301 * cbObjMatrix._m0[_454].y;
    precise float _467 = _301 * cbObjMatrix._m0[_440].z;
    precise float _468 = _301 * cbObjMatrix._m0[_447].z;
    precise float _469 = _301 * cbObjMatrix._m0[_454].z;
    precise float _470 = _301 * cbObjMatrix._m0[_440].w;
    precise float _471 = _301 * cbObjMatrix._m0[_447].w;
    precise float _472 = _301 * cbObjMatrix._m0[_454].w;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = POSITION.x * _473;
    precise float _486 = POSITION.y * _476;
    precise float _487 = _486 + _485;
    precise float _488 = POSITION.z * _479;
    precise float _489 = _488 + _487;
    precise float _490 = 1.0 * _482;
    precise float _491 = _490 + _489;
    precise float _492 = POSITION.x * _474;
    precise float _493 = POSITION.y * _477;
    precise float _494 = _493 + _492;
    precise float _495 = POSITION.z * _480;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * _483;
    precise float _498 = _497 + _496;
    precise float _499 = POSITION.x * _475;
    precise float _500 = POSITION.y * _478;
    precise float _501 = _500 + _499;
    precise float _502 = POSITION.z * _481;
    precise float _503 = _502 + _501;
    precise float _504 = 1.0 * _484;
    precise float _505 = _504 + _503;
    precise float _548 = _491 - cbSceneParam._m0[3u].x;
    precise float _549 = _498 - cbSceneParam._m0[3u].y;
    precise float _550 = _505 - cbSceneParam._m0[3u].z;
    precise float _578 = _548 * cbSceneParam._m0[24u].x;
    precise float _579 = _549 * cbSceneParam._m0[24u].y;
    precise float _580 = _579 + _578;
    precise float _581 = _550 * cbSceneParam._m0[24u].z;
    precise float _582 = _581 + _580;
    precise float _583 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _584 = _583 + _582;
    precise float _585 = _548 * cbSceneParam._m0[25u].x;
    precise float _586 = _549 * cbSceneParam._m0[25u].y;
    precise float _587 = _586 + _585;
    precise float _588 = _550 * cbSceneParam._m0[25u].z;
    precise float _589 = _588 + _587;
    precise float _590 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _591 = _590 + _589;
    precise float _592 = _548 * cbSceneParam._m0[26u].x;
    precise float _593 = _549 * cbSceneParam._m0[26u].y;
    precise float _594 = _593 + _592;
    precise float _595 = _550 * cbSceneParam._m0[26u].z;
    precise float _596 = _595 + _594;
    precise float _597 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _598 = _597 + _596;
    precise float _599 = _548 * cbSceneParam._m0[27u].x;
    precise float _600 = _549 * cbSceneParam._m0[27u].y;
    precise float _601 = _600 + _599;
    precise float _602 = _550 * cbSceneParam._m0[27u].z;
    precise float _603 = _602 + _601;
    precise float _604 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _605 = _604 + _603;
    gl_Position.x = _584;
    gl_Position.y = _591;
    gl_Position.z = _598;
    gl_Position.w = _605;
    POSITION_1.x = _584;
    POSITION_1.y = _591;
    POSITION_1.z = _598;
    POSITION_1.w = _605;
    NORMAL_1.x = fma(_242, _479, fma(_241, _476, _473 * _239));
    NORMAL_1.y = fma(_242, _480, fma(_241, _477, _474 * _239));
    NORMAL_1.z = fma(_242, _481, fma(_241, _478, _475 * _239));
    NORMAL_1.w = float(_290);
    TANGENT_1.x = fma(_253, _479, fma(_252, _476, _473 * _251));
    TANGENT_1.y = fma(_253, _480, fma(_252, _477, _474 * _251));
    TANGENT_1.z = fma(_253, _481, fma(_252, _478, _475 * _251));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_265, _479, fma(_264, _476, _473 * _263));
    TANGENT_2_1.y = fma(_265, _480, fma(_264, _477, _474 * _263));
    TANGENT_2_1.z = fma(_265, _481, fma(_264, _478, _475 * _263));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_277, _479, fma(_276, _476, _473 * _275));
    TANGENT_4_1.y = fma(_277, _480, fma(_276, _477, _474 * _275));
    TANGENT_4_1.z = fma(_277, _481, fma(_276, _478, _475 * _275));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_8.x = _598;
    TEXCOORD_8.y = _605;
}


