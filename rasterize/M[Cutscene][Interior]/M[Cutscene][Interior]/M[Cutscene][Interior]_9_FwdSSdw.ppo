#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _453;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _196 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _197 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _198 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _203 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _204 = _203 * _196;
    float _205 = _203 * _197;
    float _206 = _203 * _198;
    float _210 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _211 = _210 * NORMAL.x;
    float _212 = _210 * NORMAL.y;
    float _213 = _210 * NORMAL.z;
    float _217 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _218 = _217 * TANGENT.x;
    float _219 = _217 * TANGENT.y;
    float _220 = _217 * TANGENT.z;
    float _265 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _275 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _265);
    float _276 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _265);
    float _277 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _265);
    vec4 _290 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _293 = _290.x;
    vec4 _311 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _328 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _293) + cbMtdParam._m0[12u].x) * _311.x;
    float _330 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _293) + cbMtdParam._m0[12u].y) * _311.y;
    float _332 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _293) + cbMtdParam._m0[12u].z) * _311.z;
    vec4 _366 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _381 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _388 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _400 = cbMtdParam._m0[24u].w + _275;
    float _401 = cbMtdParam._m0[25u].x + _276;
    float _402 = cbMtdParam._m0[25u].y + _277;
    float _416 = (-0.0) - dot(vec3(_400, _401, _402), vec3(_381 * _204, _381 * _205, _381 * _206));
    float _417 = (-0.0) - dot(vec3(_400, _401, _402), vec3(_388 * _218, _388 * _219, _388 * _220));
    float _418 = (-0.0) - dot(vec3(_400, _401, _402), vec3((-0.0) - _211, (-0.0) - _212, (-0.0) - _213));
    float _422 = inversesqrt(dot(vec3(_416, _417, _418), vec3(_416, _417, _418)));
    float _423 = _422 * _418;
    float _428 = ((cbMtdParam._m0[21u].z * _416) * _422) + (((_366.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _429 = ((cbMtdParam._m0[21u].w * _417) * _422) + (((_366.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _432 = fract(cbMtdParam._m0[21u].z * TEXCOORD.x);
    float _433 = fract(cbMtdParam._m0[21u].w * TEXCOORD.y);
    float _451;
    float _454;
    float _456;
    if (_428 > 0.0)
    {
        float _437 = (1.0 - _432) / _428;
        _451 = _437;
        _454 = ((cbMtdParam._m0[18u].w + 1.0) - fract(_437 * _423)) * 0.16666667163372039794921875;
        _456 = (fract((_437 * _429) + _433) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_428 < 0.0)
        {
            float _452 = ((-0.0) - _432) / _428;
            frontier_phi_3_2_ladder = (fract((_452 * _429) + _433) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _452;
            frontier_phi_3_2_ladder_2 = (fract(_452 * _423) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _453;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _451 = frontier_phi_3_2_ladder_1;
        _454 = frontier_phi_3_2_ladder_2;
        _456 = frontier_phi_3_2_ladder;
    }
    float _482;
    float _484;
    float _486;
    if (_429 > 0.0)
    {
        float _469 = (1.0 - _433) / _429;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_469 < _451)
        {
            frontier_phi_8_5_ladder = (fract((_469 * _428) + _432) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _469;
            frontier_phi_8_5_ladder_2 = (fract(_469 * _423) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _454;
            frontier_phi_8_5_ladder_1 = _451;
            frontier_phi_8_5_ladder_2 = _456;
        }
        _482 = frontier_phi_8_5_ladder_1;
        _484 = frontier_phi_8_5_ladder;
        _486 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_429 < 0.0)
        {
            float _483 = ((-0.0) - _433) / _429;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_483 < _451)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_483 * _428) + _432) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _483;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_483 * _423) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _454;
                frontier_phi_8_6_ladder_9_ladder_1 = _451;
                frontier_phi_8_6_ladder_9_ladder_2 = _456;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _454;
            frontier_phi_8_6_ladder_1 = _451;
            frontier_phi_8_6_ladder_2 = _456;
        }
        _482 = frontier_phi_8_6_ladder_1;
        _484 = frontier_phi_8_6_ladder;
        _486 = frontier_phi_8_6_ladder_2;
    }
    float _490 = (_423 > 0.0) ? (cbMtdParam._m0[18u].z / _423) : 5000.0;
    float _503;
    float _504;
    if (_490 < _482)
    {
        _503 = ((_432 + cbMtdParam._m0[18u].w) + (_490 * _428)) * 0.16666667163372039794921875;
        _504 = (((_490 * _429) + _433) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _503 = _484;
        _504 = _486;
    }
    vec4 _506 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_503, _504));
    float _3218 = isnan(0.0) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.0 : max(cbMtdParam._m0[17u].z, 0.0));
    float _520 = isnan(1.0) ? _3218 : (isnan(_3218) ? 1.0 : min(_3218, 1.0));
    float _3229 = isnan(0.0) ? cbMtdParam._m0[17u].y : (isnan(cbMtdParam._m0[17u].y) ? 0.0 : max(cbMtdParam._m0[17u].y, 0.0));
    float _563 = ((_520 - ((1.0 - (isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0)))) * (_520 + 1.0))) + (((cbMtdParam._m0[18u].y * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[3u].w)).x) + (cbMtdParam._m0[17u].x * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w)).x)) / cbMtdParam._m0[17u].w)) / _520;
    float _3240 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0));
    float _566 = 3.0 - (_564 * 2.0);
    float _571 = _564 * _564;
    vec4 _593 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _597 = _593.z;
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _3251 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _607 = sqrt(1.0 - (isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0))));
    float _610 = fma(_607, _211, fma(_601, _218, _600 * _204));
    float _613 = fma(_607, _212, fma(_601, _219, _600 * _205));
    float _616 = fma(_607, _213, fma(_601, _220, _600 * _206));
    float _620 = inversesqrt(dot(vec3(_610, _613, _616), vec3(_610, _613, _616)));
    float _621 = _620 * _610;
    float _622 = _620 * _613;
    float _623 = _620 * _616;
    float _3262 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _624 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
    float _3273 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _3284 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _3295 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _643 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _647 = inversesqrt(dot(vec3(_275, _276, _277), vec3(_275, _276, _277)));
    float _648 = _275 * _647;
    float _649 = _276 * _647;
    float _650 = _277 * _647;
    float _656 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _657 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _677 = fma(_623, cbSceneParam._m0[5u].z, fma(_622, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _621));
    float _680 = fma(_623, cbSceneParam._m0[6u].z, fma(_622, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _621));
    float _683 = fma(_623, cbSceneParam._m0[7u].z, fma(_622, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _621));
    uint _696 = uint(roundEven(NORMAL.w)) * 13u;
    uint _697 = _696 + 9u;
    uint _698 = _697 + uint(cbMatDynParam._m0[0u].w);
    float _704 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0)))) * cbInstanceData._m0[_698].x;
    float _705 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0)))) * cbInstanceData._m0[_698].y;
    float _706 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0)))) * cbInstanceData._m0[_698].z;
    float _3306 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
    float _707 = isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0));
    float _3317 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
    float _708 = isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0));
    float _3328 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _709 = isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0));
    vec4 _718 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _656, cbSceneParam._m0[86u].y * _657));
    float _721 = _718.x * TEXCOORD_4.z;
    float _722 = dot(vec3(_621, _622, _623), vec3(_648, _649, _650));
    float _725 = _722 * 2.0;
    float _729 = (_725 * _621) - _648;
    float _730 = (_725 * _622) - _649;
    float _731 = (_725 * _623) - _650;
    float _735 = abs(dot(vec3(_648, _649, _650), vec3(_621, _622, _623)));
    float _3339 = isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0));
    float _737 = sqrt(_624);
    float _749 = exp2((_737 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_737 * 3.0));
    float _781 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _785 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _789 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    float _1107;
    float _1108;
    float _1109;
    float _1110;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _822 = fma(_789, cbModelParam._m0[26u].z, fma(_785, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _781));
        float _826 = fma(_789, cbModelParam._m0[27u].z, fma(_785, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _781));
        float _830 = fma(_789, cbModelParam._m0[28u].z, fma(_785, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _781));
        float _854 = _781 + _621;
        float _855 = _785 + _622;
        float _856 = _789 + _623;
        float _866 = fma(_856, cbModelParam._m0[26u].z, fma(_855, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _854)) - _822;
        float _867 = fma(_856, cbModelParam._m0[27u].z, fma(_855, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _854)) - _826;
        float _868 = fma(_856, cbModelParam._m0[28u].z, fma(_855, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _854)) - _830;
        float _872 = inversesqrt(dot(vec3(_866, _867, _868), vec3(_866, _867, _868)));
        float _885 = ((_872 * _866) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_822 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _886 = ((_872 * _867) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_826 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _887 = ((_872 * _868) / cbModelParam._m0[34u].z) + ((((((_830 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _890 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _897 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _904 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        vec4 _911 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_885, _886, _887), 0.0);
        float _924 = exp2((_890.w + (-0.5)) * 20.0) * 2.0;
        float _925 = _924 * (_890.x + (-0.5));
        float _926 = _924 * (_890.y + (-0.5));
        float _927 = _924 * (_890.z + (-0.5));
        float _934 = exp2((_897.w + (-0.5)) * 20.0) * 2.0;
        float _935 = _934 * (_897.x + (-0.5));
        float _936 = _934 * (_897.y + (-0.5));
        float _937 = _934 * (_897.z + (-0.5));
        float _944 = exp2((_904.w + (-0.5)) * 20.0) * 2.0;
        float _945 = _944 * (_904.x + (-0.5));
        float _946 = _944 * (_904.y + (-0.5));
        float _947 = _944 * (_904.z + (-0.5));
        float _954 = exp2((_911.w + (-0.5)) * 20.0) * 2.0;
        float _955 = _954 * (_911.x + (-0.5));
        float _956 = _954 * (_911.y + (-0.5));
        float _957 = _954 * (_911.z + (-0.5));
        float _958 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _959 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
        float _960 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        float _961 = _925 * 0.5;
        float _962 = _935 * 0.5;
        float _963 = _945 * 0.5;
        float _964 = dot(vec3(_961, _962, _963), vec3(_961, _962, _963));
        float _969 = (_964 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_964);
        float _978 = (dot(vec3(_621, _622, _623), vec3(_969 * _961, _969 * _962, _969 * _963)) + 1.0) * 0.5;
        float _3365 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _988 = sqrt(((_962 * _962) + (_961 * _961)) + (_963 * _963)) / (_958 + 9.9999997473787516355514526367188e-06);
        float _3376 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _989 = isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0));
        float _990 = _989 * 2.0;
        float _994 = (1.0 - _989) / (_989 + 1.0);
        float _3387 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _995 = isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0));
        float _1004 = ((((1.0 - _995) * (_990 + 2.0)) * exp2(log2(isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0))) * (_990 + 1.0))) + _995) * _958;
        float _1005 = _926 * 0.5;
        float _1006 = _936 * 0.5;
        float _1007 = _946 * 0.5;
        float _1008 = dot(vec3(_1005, _1006, _1007), vec3(_1005, _1006, _1007));
        float _1013 = (_1008 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1008);
        float _1021 = (dot(vec3(_621, _622, _623), vec3(_1013 * _1005, _1013 * _1006, _1013 * _1007)) + 1.0) * 0.5;
        float _3398 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1030 = sqrt(((_1006 * _1006) + (_1005 * _1005)) + (_1007 * _1007)) / (_959 + 9.9999997473787516355514526367188e-06);
        float _3409 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0));
        float _1032 = _1031 * 2.0;
        float _1036 = (1.0 - _1031) / (_1031 + 1.0);
        float _3420 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1037 = isnan(1.0) ? _3420 : (isnan(_3420) ? 1.0 : min(_3420, 1.0));
        float _1046 = ((((1.0 - _1037) * (_1032 + 2.0)) * exp2(log2(isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0))) * (_1032 + 1.0))) + _1037) * _959;
        float _1047 = _927 * 0.5;
        float _1048 = _937 * 0.5;
        float _1049 = _947 * 0.5;
        float _1050 = dot(vec3(_1047, _1048, _1049), vec3(_1047, _1048, _1049));
        float _1055 = (_1050 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1050);
        float _1063 = (dot(vec3(_621, _622, _623), vec3(_1055 * _1047, _1055 * _1048, _1055 * _1049)) + 1.0) * 0.5;
        float _3431 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
        float _1072 = sqrt(((_1048 * _1048) + (_1047 * _1047)) + (_1049 * _1049)) / (_960 + 9.9999997473787516355514526367188e-06);
        float _3442 = isnan(0.0) ? _1072 : (isnan(_1072) ? 0.0 : max(_1072, 0.0));
        float _1073 = isnan(1.0) ? _3442 : (isnan(_3442) ? 1.0 : min(_3442, 1.0));
        float _1074 = _1073 * 2.0;
        float _1078 = (1.0 - _1073) / (_1073 + 1.0);
        float _3453 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
        float _1079 = isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0));
        float _1088 = ((((1.0 - _1079) * (_1074 + 2.0)) * exp2(log2(isnan(1.0) ? _3431 : (isnan(_3431) ? 1.0 : min(_3431, 1.0))) * (_1074 + 1.0))) + _1079) * _960;
        _1096 = _927;
        _1097 = _926;
        _1098 = _925;
        _1099 = _937;
        _1100 = _936;
        _1101 = _935;
        _1102 = _947;
        _1103 = _946;
        _1104 = _945;
        _1105 = _960;
        _1106 = _959;
        _1107 = _958;
        _1108 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0)));
        _1109 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0)));
        _1110 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0)));
    }
    else
    {
        _1096 = _453;
        _1097 = _453;
        _1098 = _453;
        _1099 = _453;
        _1100 = _453;
        _1101 = _453;
        _1102 = _453;
        _1103 = _453;
        _1104 = _453;
        _1105 = _453;
        _1106 = _453;
        _1107 = _453;
        _1108 = 0.0;
        _1109 = 0.0;
        _1110 = 0.0;
    }
    float _1405;
    float _1406;
    float _1407;
    float _1408;
    float _1409;
    float _1410;
    float _1411;
    float _1412;
    float _1413;
    float _1414;
    float _1415;
    float _1416;
    float _1417;
    float _1418;
    float _1419;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1136 = fma(_789, cbModelParam._m0[30u].z, fma(_785, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _781));
        float _1140 = fma(_789, cbModelParam._m0[31u].z, fma(_785, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _781));
        float _1144 = fma(_789, cbModelParam._m0[32u].z, fma(_785, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _781));
        float _1167 = _781 + _621;
        float _1168 = _785 + _622;
        float _1169 = _789 + _623;
        float _1179 = fma(_1169, cbModelParam._m0[30u].z, fma(_1168, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1167)) - _1136;
        float _1180 = fma(_1169, cbModelParam._m0[31u].z, fma(_1168, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1167)) - _1140;
        float _1181 = fma(_1169, cbModelParam._m0[32u].z, fma(_1168, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1167)) - _1144;
        float _1185 = inversesqrt(dot(vec3(_1179, _1180, _1181), vec3(_1179, _1180, _1181)));
        float _1198 = ((_1185 * _1179) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1136 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1199 = ((_1185 * _1180) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1140 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1200 = ((_1185 * _1181) / cbModelParam._m0[35u].z) + ((((((_1144 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1202 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1198, _1199, _1200), 0.0);
        vec4 _1209 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1198, _1199, _1200), 0.0);
        vec4 _1216 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1198, _1199, _1200), 0.0);
        vec4 _1223 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1198, _1199, _1200), 0.0);
        float _1235 = exp2((_1202.w + (-0.5)) * 20.0) * 2.0;
        float _1236 = _1235 * (_1202.x + (-0.5));
        float _1237 = _1235 * (_1202.y + (-0.5));
        float _1238 = _1235 * (_1202.z + (-0.5));
        float _1245 = exp2((_1209.w + (-0.5)) * 20.0) * 2.0;
        float _1246 = _1245 * (_1209.x + (-0.5));
        float _1247 = _1245 * (_1209.y + (-0.5));
        float _1248 = _1245 * (_1209.z + (-0.5));
        float _1255 = exp2((_1216.w + (-0.5)) * 20.0) * 2.0;
        float _1256 = _1255 * (_1216.x + (-0.5));
        float _1257 = _1255 * (_1216.y + (-0.5));
        float _1258 = _1255 * (_1216.z + (-0.5));
        float _1265 = exp2((_1223.w + (-0.5)) * 20.0) * 2.0;
        float _1266 = _1265 * (_1223.x + (-0.5));
        float _1267 = _1265 * (_1223.y + (-0.5));
        float _1268 = _1265 * (_1223.z + (-0.5));
        float _1269 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1270 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1271 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
        float _1272 = _1236 * 0.5;
        float _1273 = _1246 * 0.5;
        float _1274 = _1256 * 0.5;
        float _1275 = dot(vec3(_1272, _1273, _1274), vec3(_1272, _1273, _1274));
        float _1280 = (_1275 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1275);
        float _1288 = (dot(vec3(_621, _622, _623), vec3(_1280 * _1272, _1280 * _1273, _1280 * _1274)) + 1.0) * 0.5;
        float _3494 = isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0));
        float _1297 = sqrt(((_1273 * _1273) + (_1272 * _1272)) + (_1274 * _1274)) / (_1269 + 9.9999997473787516355514526367188e-06);
        float _3505 = isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0));
        float _1298 = isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0));
        float _1299 = _1298 * 2.0;
        float _1303 = (1.0 - _1298) / (_1298 + 1.0);
        float _3516 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1304 = isnan(1.0) ? _3516 : (isnan(_3516) ? 1.0 : min(_3516, 1.0));
        float _1313 = ((((1.0 - _1304) * (_1299 + 2.0)) * exp2(log2(isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0))) * (_1299 + 1.0))) + _1304) * _1269;
        float _1314 = _1237 * 0.5;
        float _1315 = _1247 * 0.5;
        float _1316 = _1257 * 0.5;
        float _1317 = dot(vec3(_1314, _1315, _1316), vec3(_1314, _1315, _1316));
        float _1322 = (_1317 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1317);
        float _1330 = (dot(vec3(_621, _622, _623), vec3(_1322 * _1314, _1322 * _1315, _1322 * _1316)) + 1.0) * 0.5;
        float _3527 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
        float _1339 = sqrt(((_1315 * _1315) + (_1314 * _1314)) + (_1316 * _1316)) / (_1270 + 9.9999997473787516355514526367188e-06);
        float _3538 = isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0));
        float _1340 = isnan(1.0) ? _3538 : (isnan(_3538) ? 1.0 : min(_3538, 1.0));
        float _1341 = _1340 * 2.0;
        float _1345 = (1.0 - _1340) / (_1340 + 1.0);
        float _3549 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1346 = isnan(1.0) ? _3549 : (isnan(_3549) ? 1.0 : min(_3549, 1.0));
        float _1355 = ((((1.0 - _1346) * (_1341 + 2.0)) * exp2(log2(isnan(1.0) ? _3527 : (isnan(_3527) ? 1.0 : min(_3527, 1.0))) * (_1341 + 1.0))) + _1346) * _1270;
        float _1356 = _1238 * 0.5;
        float _1357 = _1248 * 0.5;
        float _1358 = _1258 * 0.5;
        float _1359 = dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358));
        float _1364 = (_1359 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1359);
        float _1372 = (dot(vec3(_621, _622, _623), vec3(_1364 * _1356, _1364 * _1357, _1364 * _1358)) + 1.0) * 0.5;
        float _3560 = isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0));
        float _1381 = sqrt(((_1357 * _1357) + (_1356 * _1356)) + (_1358 * _1358)) / (_1271 + 9.9999997473787516355514526367188e-06);
        float _3571 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1382 = isnan(1.0) ? _3571 : (isnan(_3571) ? 1.0 : min(_3571, 1.0));
        float _1383 = _1382 * 2.0;
        float _1387 = (1.0 - _1382) / (_1382 + 1.0);
        float _3582 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1388 = isnan(1.0) ? _3582 : (isnan(_3582) ? 1.0 : min(_3582, 1.0));
        float _1397 = ((((1.0 - _1388) * (_1383 + 2.0)) * exp2(log2(isnan(1.0) ? _3560 : (isnan(_3560) ? 1.0 : min(_3560, 1.0))) * (_1383 + 1.0))) + _1388) * _1271;
        _1405 = _1238;
        _1406 = _1237;
        _1407 = _1236;
        _1408 = _1248;
        _1409 = _1247;
        _1410 = _1246;
        _1411 = _1258;
        _1412 = _1257;
        _1413 = _1256;
        _1414 = _1271;
        _1415 = _1270;
        _1416 = _1269;
        _1417 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0)));
        _1418 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0)));
        _1419 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0)));
    }
    else
    {
        _1405 = _453;
        _1406 = _453;
        _1407 = _453;
        _1408 = _453;
        _1409 = _453;
        _1410 = _453;
        _1411 = _453;
        _1412 = _453;
        _1413 = _453;
        _1414 = _453;
        _1415 = _453;
        _1416 = _453;
        _1417 = 0.0;
        _1418 = 0.0;
        _1419 = 0.0;
    }
    float _1429 = (cbModelParam._m0[1u].x * (_1417 - _1108)) + _1108;
    float _1430 = (cbModelParam._m0[1u].x * (_1418 - _1109)) + _1109;
    float _1431 = (cbModelParam._m0[1u].x * (_1419 - _1110)) + _1110;
    float _1452 = fma(_1431, cbSceneParam._m0[89u].z, fma(_1430, cbSceneParam._m0[89u].y, _1429 * cbSceneParam._m0[89u].x));
    float _1455 = fma(_1431, cbSceneParam._m0[90u].z, fma(_1430, cbSceneParam._m0[90u].y, _1429 * cbSceneParam._m0[90u].x));
    float _1458 = fma(_1431, cbSceneParam._m0[91u].z, fma(_1430, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1429));
    float _1473 = _729 * 0.5;
    float _1474 = _730 * 0.5;
    float _1475 = _731 * 0.5;
    float _1476 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1407, _1410, _1413, _1416));
    float _1479 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1406, _1409, _1412, _1415));
    float _1482 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1405, _1408, _1411, _1414));
    float _1516;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1489 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1096, _1099, _1102, _1105));
        float _1493 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1097, _1100, _1103, _1106));
        float _1497 = dot(vec4(_1473, _1474, _1475, 1.0), vec4(_1098, _1101, _1104, _1107));
        float _1504 = dot(vec4(cbModelParam._m0[39u]), vec4(_1473, _1474, _1475, 1.0));
        _1516 = dot(vec3(isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0)), isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0)), isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1504) ? 0.0 : (isnan(0.0) ? _1504 : max(0.0, _1504))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1516 = 1.0;
    }
    float _1527;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1518 = dot(vec4(cbModelParam._m0[40u]), vec4(_1473, _1474, _1475, 1.0));
        _1527 = dot(vec3(isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0)), isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0)), isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1518) ? 0.0 : (isnan(0.0) ? _1518 : max(0.0, _1518))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1527 = 1.0;
    }
    float _1531 = (_1527 * cbModelParam._m0[1u].x) + (_1516 * (1.0 - cbModelParam._m0[1u].x));
    float _1541 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _624);
    float _1542 = isnan(_1541) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1541 : min(cbModelParam._m0[25u].z, _1541));
    float _1623;
    float _1625;
    float _1627;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1590 = fma(_789, cbModelParam._m0[13u].z, fma(_785, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _781)) + cbModelParam._m0[13u].w;
        float _1594 = fma(_789, cbModelParam._m0[14u].z, fma(_785, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _781)) + cbModelParam._m0[14u].w;
        float _1598 = fma(_789, cbModelParam._m0[15u].z, fma(_785, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _781)) + cbModelParam._m0[15u].w;
        float _1601 = fma(_731, cbModelParam._m0[13u].z, fma(_730, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _729));
        float _1604 = fma(_731, cbModelParam._m0[14u].z, fma(_730, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _729));
        float _1607 = fma(_731, cbModelParam._m0[15u].z, fma(_730, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _729));
        float _1635;
        if (_1601 > 0.0)
        {
            _1635 = abs((1.0 - _1590) / _1601);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1601 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1590 + 1.0) / _1601);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1635 = frontier_phi_26_24_ladder;
        }
        float _2005;
        if (_1604 > 0.0)
        {
            _2005 = abs((1.0 - _1594) / _1604);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1604 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1594 + 1.0) / _1604);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _2005 = frontier_phi_35_31_ladder;
        }
        float _2327;
        if (_1607 > 0.0)
        {
            _2327 = abs((1.0 - _1598) / _1607);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1607 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1598 + 1.0) / _1607);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _2327 = frontier_phi_49_42_ladder;
        }
        float _2329 = isnan(_2005) ? _1635 : (isnan(_1635) ? _2005 : min(_1635, _2005));
        float _2330 = isnan(_2327) ? _2329 : (isnan(_2329) ? _2327 : min(_2329, _2327));
        float _2334 = (_2330 * _1601) + _1590;
        float _2335 = (_2330 * _1604) + _1594;
        float _2336 = (_2330 * _1607) + _1598;
        float _2337 = _2330 * 9.9999997473787516355514526367188e-05;
        float _2338 = (-1.0) - _2337;
        float _2340 = _2337 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2336 > _2340) || ((_2336 < _2338) || ((_2335 > _2340) || ((_2335 < _2338) || ((_2334 < _2338) || (_2334 > _2340))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2462 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2336, cbModelParam._m0[9u].z, fma(_2335, cbModelParam._m0[9u].y, _2334 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2336, cbModelParam._m0[10u].z, fma(_2335, cbModelParam._m0[10u].y, _2334 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2336, cbModelParam._m0[11u].z, fma(_2335, cbModelParam._m0[11u].y, _2334 * cbModelParam._m0[11u].x))), _1542);
            frontier_phi_25_49_ladder = _2462.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2462.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2462.x * cbModelParam._m0[1u].y;
        }
        _1623 = frontier_phi_25_49_ladder_2;
        _1625 = frontier_phi_25_49_ladder_1;
        _1627 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1611 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_729, _730, _731), _1542);
        _1623 = _1611.x * cbModelParam._m0[1u].y;
        _1625 = _1611.y * cbModelParam._m0[1u].y;
        _1627 = _1611.z * cbModelParam._m0[1u].y;
    }
    float _1631 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _624);
    float _1632 = isnan(_1631) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1631 : min(cbModelParam._m0[25u].w, _1631));
    float _1721;
    float _1723;
    float _1725;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1685 = fma(_789, cbModelParam._m0[21u].z, fma(_785, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _781)) + cbModelParam._m0[21u].w;
        float _1689 = fma(_789, cbModelParam._m0[22u].z, fma(_785, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _781)) + cbModelParam._m0[22u].w;
        float _1693 = fma(_789, cbModelParam._m0[23u].z, fma(_785, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _781)) + cbModelParam._m0[23u].w;
        float _1696 = fma(_731, cbModelParam._m0[21u].z, fma(_730, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _729));
        float _1699 = fma(_731, cbModelParam._m0[22u].z, fma(_730, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _729));
        float _1702 = fma(_731, cbModelParam._m0[23u].z, fma(_730, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _729));
        float _2010;
        if (_1696 > 0.0)
        {
            _2010 = abs((1.0 - _1685) / _1696);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1696 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1685 + 1.0) / _1696);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _2010 = frontier_phi_37_33_ladder;
        }
        float _2353;
        if (_1699 > 0.0)
        {
            _2353 = abs((1.0 - _1689) / _1699);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1699 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1689 + 1.0) / _1699);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _2353 = frontier_phi_51_44_ladder;
        }
        float _2522;
        if (_1702 > 0.0)
        {
            _2522 = abs((1.0 - _1693) / _1702);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1702 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1693 + 1.0) / _1702);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2522 = frontier_phi_65_60_ladder;
        }
        float _2524 = isnan(_2353) ? _2010 : (isnan(_2010) ? _2353 : min(_2010, _2353));
        float _2525 = isnan(_2522) ? _2524 : (isnan(_2524) ? _2522 : min(_2524, _2522));
        float _2529 = (_2525 * _1696) + _1685;
        float _2530 = (_2525 * _1699) + _1689;
        float _2531 = (_2525 * _1702) + _1693;
        float _2532 = _2525 * 9.9999997473787516355514526367188e-05;
        float _2533 = (-1.0) - _2532;
        float _2535 = _2532 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2531 > _2535) || ((_2531 < _2533) || ((_2530 > _2535) || ((_2530 < _2533) || ((_2529 < _2533) || (_2529 > _2535))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2764 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2531, cbModelParam._m0[17u].z, fma(_2530, cbModelParam._m0[17u].y, _2529 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2531, cbModelParam._m0[18u].z, fma(_2530, cbModelParam._m0[18u].y, _2529 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2531, cbModelParam._m0[19u].z, fma(_2530, cbModelParam._m0[19u].y, _2529 * cbModelParam._m0[19u].x))), _1632);
            frontier_phi_34_65_ladder = _2764.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2764.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2764.z * cbModelParam._m0[1u].z;
        }
        _1721 = frontier_phi_34_65_ladder_1;
        _1723 = frontier_phi_34_65_ladder;
        _1725 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1705 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_729, _730, _731), _1632);
        _1721 = _1705.x * cbModelParam._m0[1u].z;
        _1723 = _1705.y * cbModelParam._m0[1u].z;
        _1725 = _1705.z * cbModelParam._m0[1u].z;
    }
    float _1737 = ((((1.0 - _749) * ((_737 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_749 * _737)) * _721;
    float _1738 = _1737 * ((cbModelParam._m0[1u].w * (_1721 - _1623)) + _1623);
    float _1739 = _1737 * ((cbModelParam._m0[1u].w * (_1723 - _1625)) + _1625);
    float _1740 = _1737 * ((cbModelParam._m0[1u].w * (_1725 - _1627)) + _1627);
    float _1743 = fma(_1740, cbSceneParam._m0[89u].z, fma(_1739, cbSceneParam._m0[89u].y, _1738 * cbSceneParam._m0[89u].x));
    float _1746 = fma(_1740, cbSceneParam._m0[90u].z, fma(_1739, cbSceneParam._m0[90u].y, _1738 * cbSceneParam._m0[90u].x));
    float _1749 = fma(_1740, cbSceneParam._m0[91u].z, fma(_1739, cbSceneParam._m0[91u].y, _1738 * cbSceneParam._m0[91u].x));
    vec4 _1757 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_656, _657));
    float _1759 = _1757.w;
    float _1771 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1759);
    float _1772 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1759);
    float _1773 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1759);
    uvec4 _1777 = floatBitsToUint(cbInstanceData._m0[_696 + 5u]);
    uint _1779 = _1777.x * 14u;
    uint _1780 = _1779 + 13u;
    float _1785 = _721 + (-1.0);
    float _1788 = (cbLight._m0[_1780].x * _1785) + 1.0;
    float _1789 = (cbLight._m0[_1780].y * _1785) + 1.0;
    uint _1790 = _1779 + 5u;
    float _1796 = isnan(1.0) ? _1789 : (isnan(_1789) ? 1.0 : min(_1789, 1.0));
    uint _1800 = _1779 + 4u;
    float _1809 = isnan(1.0) ? _1788 : (isnan(_1788) ? 1.0 : min(_1788, 1.0));
    uint _1813 = _1779 | 1u;
    float _1824 = dot(vec3(cbLight._m0[_1779].xyz), vec3(_621, _622, _623));
    float _1827 = dot(vec3(cbLight._m0[_1813].xyz), vec3(_621, _622, _623));
    float _3718 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
    float _3729 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
    float _1832 = (isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0))) * 0.3183098733425140380859375;
    float _1834 = (isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0))) * 0.3183098733425140380859375;
    float _1841 = ((cbLight._m0[_1790].x * _1796) * _1834) + (((cbLight._m0[_1800].x * _1771) * _1809) * _1832);
    float _1842 = ((_1796 * cbLight._m0[_1790].y) * _1834) + (((cbLight._m0[_1800].y * _1772) * _1809) * _1832);
    float _1843 = ((_1796 * cbLight._m0[_1790].z) * _1834) + (((cbLight._m0[_1800].z * _1773) * _1809) * _1832);
    uint _1845 = _1779 + 8u;
    float _1858 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1779].w)) * _624) * 0.949999988079071044921875);
    float _1859 = _1858 * _1858;
    float _1860 = cbLight._m0[_1779].x + _648;
    float _1861 = cbLight._m0[_1779].y + _649;
    float _1862 = cbLight._m0[_1779].z + _650;
    float _1866 = inversesqrt(dot(vec3(_1860, _1861, _1862), vec3(_1860, _1861, _1862)));
    float _1867 = _1866 * _1860;
    float _1868 = _1866 * _1861;
    float _1869 = _1866 * _1862;
    float _1870 = dot(vec3(_621, _622, _623), vec3(cbLight._m0[_1779].xyz));
    float _3740 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
    float _1873 = isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0));
    float _3751 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _1874 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
    float _1875 = dot(vec3(_621, _622, _623), vec3(_1867, _1868, _1869));
    float _3762 = isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0));
    float _1878 = isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0));
    float _1879 = dot(vec3(cbLight._m0[_1779].xyz), vec3(_1867, _1868, _1869));
    float _3773 = isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0));
    float _1883 = _1859 * _1859;
    float _1887 = ((_1878 * _1878) * (_1883 + (-1.0))) + 1.0;
    float _1898 = (exp2(log2(1.0 - (isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1899 = 1.0 - _1859;
    float _1910 = (0.5 / (((_1874 * ((_1873 * _1899) + _1859)) + 9.9999999392252902907785028219223e-09) + (((_1874 * _1899) + _1859) * _1873))) * _1873;
    float _3784 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
    float _1912 = (isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0))) * (_1883 / ((_1887 * _1887) * 3.141590118408203125));
    uint _1926 = _1779 + 9u;
    float _1937 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1813].w)) * _624) * 0.949999988079071044921875);
    float _1938 = _1937 * _1937;
    float _1939 = cbLight._m0[_1813].x + _648;
    float _1940 = cbLight._m0[_1813].y + _649;
    float _1941 = cbLight._m0[_1813].z + _650;
    float _1945 = inversesqrt(dot(vec3(_1939, _1940, _1941), vec3(_1939, _1940, _1941)));
    float _1946 = _1945 * _1939;
    float _1947 = _1945 * _1940;
    float _1948 = _1945 * _1941;
    float _1949 = dot(vec3(_621, _622, _623), vec3(cbLight._m0[_1813].xyz));
    float _3795 = isnan(0.0) ? _1949 : (isnan(_1949) ? 0.0 : max(_1949, 0.0));
    float _1952 = isnan(1.0) ? _3795 : (isnan(_3795) ? 1.0 : min(_3795, 1.0));
    float _1953 = dot(vec3(_621, _622, _623), vec3(_1946, _1947, _1948));
    float _3806 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
    float _1956 = isnan(1.0) ? _3806 : (isnan(_3806) ? 1.0 : min(_3806, 1.0));
    float _1957 = dot(vec3(cbLight._m0[_1813].xyz), vec3(_1946, _1947, _1948));
    float _3817 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
    float _1961 = _1938 * _1938;
    float _1965 = ((_1956 * _1956) * (_1961 + (-1.0))) + 1.0;
    float _1974 = (exp2(log2(1.0 - (isnan(1.0) ? _3817 : (isnan(_3817) ? 1.0 : min(_3817, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1975 = 1.0 - _1938;
    float _1985 = (0.5 / (((_1874 * ((_1952 * _1975) + _1938)) + 9.9999999392252902907785028219223e-09) + (((_1874 * _1975) + _1938) * _1952))) * _1952;
    float _3828 = isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0));
    float _1987 = (isnan(1.0) ? _3828 : (isnan(_3828) ? 1.0 : min(_3828, 1.0))) * (_1961 / ((_1965 * _1965) * 3.141590118408203125));
    float _1997 = (((_1974 * cbLight._m0[_1926].x) * _1987) * _1796) + ((((cbLight._m0[_1845].x * _1771) * _1898) * _1912) * _1809);
    float _1998 = (((_1974 * cbLight._m0[_1926].y) * _1987) * _1796) + ((((cbLight._m0[_1845].y * _1772) * _1898) * _1912) * _1809);
    float _1999 = (((_1974 * cbLight._m0[_1926].z) * _1987) * _1796) + ((((cbLight._m0[_1845].z * _1773) * _1898) * _1912) * _1809);
    float _2114;
    float _2116;
    float _2118;
    float _2120;
    float _2122;
    float _2124;
    if (_1777.y == 0u)
    {
        float _2054 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2055 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2054;
        float _2056 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2054;
        float _2057 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2054;
        uvec4 _2069 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2070 = _2069.x;
        uint _2081 = uint((float(_2069.y) * floor(float(uint(cbSceneParam._m0[85u].y * _657) / _2070))) + floor(float(uint(cbSceneParam._m0[85u].x * _656) / _2070)));
        float _2091 = (log2(_2057 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2092 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
        uint _2095 = uint(isnan(14.0) ? _2092 : (isnan(_2092) ? 14.0 : min(_2092, 14.0)));
        uvec4 _2100 = texelFetch(g_lightClusterGridBuffer, int(((_2095 << 2u) + (_2081 << 6u)) >> 2u));
        uint _2101 = _2100.x;
        uint _2102 = _2069.z;
        float _2214;
        float _2216;
        float _2218;
        float _2220;
        float _2222;
        float _2224;
        if (((((1u << ((_2102 >> 4u) & 15u)) + 4294967295u) & _2101) == 0u) || ((_2102 & 240u) == 0u))
        {
            _2214 = 0.0;
            _2216 = 0.0;
            _2218 = 0.0;
            _2220 = 0.0;
            _2222 = 0.0;
            _2224 = 0.0;
        }
        else
        {
            float _2215;
            float _2217;
            float _2219;
            float _2221;
            float _2223;
            float _2225;
            float _2390 = 0.0;
            float _2391 = 0.0;
            float _2392 = 0.0;
            float _2393 = 0.0;
            float _2394 = 0.0;
            float _2395 = 0.0;
            uint _2396 = 0u;
            uint _2405;
            bool _2406;
            for (;;)
            {
                _2405 = texelFetch(g_lightClassification, int((((_2095 << 5u) + (_2081 << 9u)) + (_2396 << 2u)) >> 2u)).x;
                _2406 = _2405 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_2406)
                {
                    frontier_phi_62_pred = _2391;
                    frontier_phi_62_pred_1 = _2390;
                    frontier_phi_62_pred_2 = _2392;
                    frontier_phi_62_pred_3 = _2395;
                    frontier_phi_62_pred_4 = _2394;
                    frontier_phi_62_pred_5 = _2393;
                }
                else
                {
                    float _2565;
                    float _2566;
                    float _2567;
                    float _2568;
                    float _2569;
                    float _2570;
                    uint _2571;
                    _2565 = _2390;
                    _2566 = _2391;
                    _2567 = _2392;
                    _2568 = _2393;
                    _2569 = _2394;
                    _2570 = _2395;
                    _2571 = _2405;
                    float _2471;
                    float _2472;
                    float _2473;
                    float _2474;
                    float _2475;
                    float _2476;
                    for (;;)
                    {
                        uint _2575 = uint(findLSB(_2571)) + (_2396 << 5u);
                        uint _2572 = (_2571 + 4294967295u) & _2571;
                        uint _2577 = _2575 * 48u;
                        vec4 _2591 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2577)).x, texelFetch(g_PointLightRenderingBuffer, int(_2577 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2577 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2577 + 3u)).x));
                        uint _2597 = (_2575 * 48u) + 4u;
                        vec4 _2610 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2597)).x, texelFetch(g_PointLightRenderingBuffer, int(_2597 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2597 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2597 + 3u)).x));
                        uint _2616 = (_2575 * 48u) + 8u;
                        vec3 _2627 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2616)).x, texelFetch(g_PointLightRenderingBuffer, int(_2616 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2616 + 2u)).x));
                        float _2631 = _2591.x - _2055;
                        float _2632 = _2591.y - _2056;
                        float _2633 = _2591.z - _2057;
                        float _2634 = dot(vec3(_2631, _2632, _2633), vec3(_2631, _2632, _2633));
                        float _2637 = inversesqrt(_2634);
                        float _2638 = _2637 * _2631;
                        float _2639 = _2637 * _2632;
                        float _2640 = _2637 * _2633;
                        float _2641 = dot(vec3(_677, _680, _683), vec3(_2638, _2639, _2640));
                        float _2646 = 1.0 - (_2634 * _2591.w);
                        float _3849 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
                        float _2647 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
                        float _2648 = sqrt(_2634) * _2610.w;
                        float _2651 = 1.39999997615814208984375 / (_2648 + 1.39999997615814208984375);
                        float _2652 = _2651 * _2651;
                        float _2655 = ((1.0 - _2652) * _2641) + _2652;
                        float _2658 = _2648 * _2648;
                        float _2662 = ((isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0))) * _2647) / ((_2658 * 0.699999988079071044921875) + 1.0);
                        float _2666 = (-0.0) - _2055;
                        float _2667 = (-0.0) - _2056;
                        float _2668 = (-0.0) - _2057;
                        float _2672 = inversesqrt(dot(vec3(_2666, _2667, _2668), vec3(_2666, _2667, _2668)));
                        float _2673 = _2672 * _2666;
                        float _2674 = _2672 * _2667;
                        float _2675 = _2672 * _2668;
                        float _2683 = exp2(log2(1.0 / ((_2658 * 3.5) + 5.0)) * 0.25);
                        float _2684 = 1.0 - _737;
                        float _2691 = sqrt(1.0 - ((1.0 - (_2684 * _2684)) * (1.0 - (_2683 * _2683))));
                        float _2692 = _2691 * _2691;
                        float _2693 = _2692 * _2692;
                        float _2694 = _2673 + _2638;
                        float _2695 = _2674 + _2639;
                        float _2696 = _2675 + _2640;
                        float _2700 = inversesqrt(dot(vec3(_2694, _2695, _2696), vec3(_2694, _2695, _2696)));
                        float _2704 = dot(vec3(_677, _680, _683), vec3(_2673, _2674, _2675));
                        float _3865 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
                        float _2707 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
                        float _2708 = dot(vec3(_677, _680, _683), vec3(_2700 * _2694, _2700 * _2695, _2700 * _2696));
                        float _3876 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
                        float _2711 = isnan(1.0) ? _3876 : (isnan(_3876) ? 1.0 : min(_3876, 1.0));
                        float _2715 = ((_2711 * _2711) * (_2693 + (-1.0))) + 1.0;
                        float _2716 = _2651 * _2692;
                        float _2717 = _2716 * _2716;
                        float _2720 = ((1.0 - _2717) * _2641) + _2717;
                        float _3887 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
                        float _2721 = isnan(1.0) ? _3887 : (isnan(_3887) ? 1.0 : min(_3887, 1.0));
                        float _2722 = 1.0 - _2692;
                        float _2732 = (0.5 / (((_2721 * ((_2707 * _2722) + _2692)) + 9.9999999392252902907785028219223e-09) + (((_2721 * _2722) + _2692) * _2707))) * _2721;
                        float _3898 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
                        float _2743 = (((_2693 * 3.1415927410125732421875) * (isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0)))) / ((_2715 * _2715) * ((_2658 * 2.1991131305694580078125) + 3.141590118408203125))) * _2647;
                        _2474 = (_2662 * _2610.x) + _2568;
                        _2475 = (_2662 * _2610.y) + _2569;
                        _2476 = (_2662 * _2610.z) + _2570;
                        _2471 = (_2743 * _2627.x) + _2565;
                        _2472 = (_2743 * _2627.y) + _2566;
                        _2473 = (_2743 * _2627.z) + _2567;
                        if (_2572 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2565 = _2471;
                            _2566 = _2472;
                            _2567 = _2473;
                            _2568 = _2474;
                            _2569 = _2475;
                            _2570 = _2476;
                            _2571 = _2572;
                        }
                    }
                    frontier_phi_62_pred = _2472;
                    frontier_phi_62_pred_1 = _2471;
                    frontier_phi_62_pred_2 = _2473;
                    frontier_phi_62_pred_3 = _2476;
                    frontier_phi_62_pred_4 = _2475;
                    frontier_phi_62_pred_5 = _2474;
                }
                _2217 = frontier_phi_62_pred;
                _2215 = frontier_phi_62_pred_1;
                _2219 = frontier_phi_62_pred_2;
                _2225 = frontier_phi_62_pred_3;
                _2223 = frontier_phi_62_pred_4;
                _2221 = frontier_phi_62_pred_5;
                uint _2397 = _2396 + 1u;
                if (_2397 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2390 = _2215;
                    _2391 = _2217;
                    _2392 = _2219;
                    _2393 = _2221;
                    _2394 = _2223;
                    _2395 = _2225;
                    _2396 = _2397;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2214 = _2215;
            _2216 = _2217;
            _2218 = _2219;
            _2220 = _2221;
            _2222 = _2223;
            _2224 = _2225;
        }
        uvec4 _2228 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2229 = _2228.z;
        uint _2231 = (_2229 >> 8u) & 15u;
        float _2358;
        float _2360;
        float _2362;
        float _2364;
        float _2366;
        float _2368;
        if (((4294967295u << _2231) & _2101) == 0u)
        {
            _2358 = _2214;
            _2360 = _2216;
            _2362 = _2218;
            _2364 = _2220;
            _2366 = _2222;
            _2368 = _2224;
        }
        else
        {
            float _2383 = inversesqrt(dot(vec3(_2055, _2056, _2057), vec3(_2055, _2056, _2057)));
            float _2384 = _2383 * _2055;
            float _2385 = _2383 * _2056;
            float _2386 = _2383 * _2057;
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_2231 < ((_2229 >> 12u) & 15u))
            {
                float _2359;
                float _2361;
                float _2363;
                float _2365;
                float _2367;
                float _2369;
                float _2548 = _2214;
                float _2549 = _2216;
                float _2550 = _2218;
                float _2551 = _2220;
                float _2552 = _2222;
                float _2553 = _2224;
                uint _2554 = _2231;
                uint _2563;
                bool _2564;
                for (;;)
                {
                    _2563 = texelFetch(g_lightClassification, int((((_2095 << 5u) + (_2081 << 9u)) + (_2554 << 2u)) >> 2u)).x;
                    _2564 = _2563 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2564)
                    {
                        frontier_phi_71_pred = _2549;
                        frontier_phi_71_pred_1 = _2548;
                        frontier_phi_71_pred_2 = _2553;
                        frontier_phi_71_pred_3 = _2552;
                        frontier_phi_71_pred_4 = _2551;
                        frontier_phi_71_pred_5 = _2550;
                    }
                    else
                    {
                        float _2769;
                        float _2770;
                        float _2771;
                        float _2772;
                        float _2773;
                        float _2774;
                        float _3064;
                        float _3065;
                        float _3066;
                        float _3067;
                        float _3068;
                        float _3069;
                        float _2782 = _2548;
                        float _2783 = _2549;
                        float _2784 = _2550;
                        float _2785 = _2551;
                        float _2786 = _2552;
                        float _2787 = _2553;
                        uint _2788 = _2563;
                        uint _2789;
                        vec4 _2814;
                        float _2815;
                        vec4 _2830;
                        vec3 _2842;
                        vec4 _2858;
                        vec4 _2874;
                        float _2920;
                        bool _2921;
                        for (;;)
                        {
                            uint _2799 = ((_2554 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2788));
                            _2789 = (_2788 + 4294967295u) & _2788;
                            uint _2801 = _2799 * 40u;
                            _2814 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2801)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2801 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2801 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2801 + 3u)).x));
                            _2815 = _2814.w;
                            uint _2817 = (_2799 * 40u) + 4u;
                            _2830 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2817)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2817 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2817 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2817 + 3u)).x));
                            uint _2832 = (_2799 * 40u) + 8u;
                            _2842 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2832)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2832 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2832 + 2u)).x));
                            uint _2845 = (_2799 * 40u) + 16u;
                            _2858 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2845)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2845 + 3u)).x));
                            uint _2861 = (_2799 * 40u) + 20u;
                            _2874 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2861)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2861 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2861 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2861 + 3u)).x));
                            uint _2876 = (_2799 * 40u) + 24u;
                            vec4 _2889 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2876)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2876 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2876 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2876 + 3u)).x));
                            uint _2895 = (_2799 * 40u) + 28u;
                            vec4 _2908 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2895)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2895 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2895 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2895 + 3u)).x));
                            _2920 = fma(_2057, _2908.z, fma(_2056, _2908.y, _2908.x * _2055)) + _2908.w;
                            _2921 = !((fma(_2057, _2889.z, fma(_2056, _2889.y, _2889.x * _2055)) + _2889.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_2921)
                            {
                                float _2948 = _2814.x - _2055;
                                float _2949 = _2814.y - _2056;
                                float _2950 = _2814.z - _2057;
                                float _2951 = dot(vec3(_2948, _2949, _2950), vec3(_2948, _2949, _2950));
                                float _2954 = inversesqrt(_2951);
                                float _2955 = _2954 * _2948;
                                float _2956 = _2954 * _2949;
                                float _2957 = _2954 * _2950;
                                float _2961 = 1.0 - (_2951 / (_2815 * _2815));
                                float _3909 = isnan(0.0) ? _2961 : (isnan(_2961) ? 0.0 : max(_2961, 0.0));
                                float _2962 = isnan(1.0) ? _3909 : (isnan(_3909) ? 1.0 : min(_3909, 1.0));
                                float _2966 = sqrt(_2951) * _2830.w;
                                float _2968 = 1.39999997615814208984375 / (_2966 + 1.39999997615814208984375);
                                float _2969 = _2968 * _2968;
                                float _2972 = ((1.0 - _2969) * dot(vec3(_2955, _2956, _2957), vec3(_677, _680, _683))) + _2969;
                                float _2975 = _2966 * _2966;
                                float _2979 = (fma(_2057, _2858.z, fma(_2056, _2858.y, _2858.x * _2055)) + _2858.w) / _2920;
                                float _2980 = (fma(_2057, _2874.z, fma(_2056, _2874.y, _2874.x * _2055)) + _2874.w) / _2920;
                                float _2984 = 1.0 - dot(vec2(_2979, _2980), vec2(_2979, _2980));
                                float _3925 = isnan(0.0) ? _2984 : (isnan(_2984) ? 0.0 : max(_2984, 0.0));
                                float _2985 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
                                float _2986 = _2985 * (((isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0))) * _2962) / ((_2975 * 0.699999988079071044921875) + 1.0));
                                float _2998 = exp2(log2(1.0 / ((_2975 * 3.5) + 5.0)) * 0.25);
                                float _2999 = 1.0 - _737;
                                float _3006 = sqrt(1.0 - ((1.0 - (_2999 * _2999)) * (1.0 - (_2998 * _2998))));
                                float _3007 = _3006 * _3006;
                                float _3008 = _3007 * _3007;
                                float _3009 = _2955 - _2384;
                                float _3010 = _2956 - _2385;
                                float _3011 = _2957 - _2386;
                                float _3015 = inversesqrt(dot(vec3(_3009, _3010, _3011), vec3(_3009, _3010, _3011)));
                                float _3019 = dot(vec3(_677, _680, _683), vec3((-0.0) - _2384, (-0.0) - _2385, (-0.0) - _2386));
                                float _3936 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
                                float _3022 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
                                float _3023 = dot(vec3(_677, _680, _683), vec3(_3015 * _3009, _3015 * _3010, _3015 * _3011));
                                float _3947 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
                                float _3026 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
                                float _3030 = ((_3026 * _3026) * (_3008 + (-1.0))) + 1.0;
                                float _3031 = _2968 * _3007;
                                float _3032 = _3031 * _3031;
                                float _3038 = ((1.0 - _3032) * dot(vec3(_677, _680, _683), vec3(_2955, _2956, _2957))) + _3032;
                                float _3958 = isnan(0.0) ? _3038 : (isnan(_3038) ? 0.0 : max(_3038, 0.0));
                                float _3039 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
                                float _3040 = 1.0 - _3007;
                                float _3050 = (0.5 / (((_3039 * ((_3022 * _3040) + _3007)) + 9.9999999392252902907785028219223e-09) + (((_3039 * _3040) + _3007) * _3022))) * _3039;
                                float _3969 = isnan(0.0) ? _3050 : (isnan(_3050) ? 0.0 : max(_3050, 0.0));
                                float _3060 = (_2985 * _2962) * (((_3008 * 3.1415927410125732421875) * (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0)))) / ((_3030 * _3030) * ((_2975 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_77_pred = _3060 * _2842.y;
                                frontier_phi_77_pred_1 = _3060 * _2842.x;
                                frontier_phi_77_pred_2 = _2986 * _2830.z;
                                frontier_phi_77_pred_3 = _2986 * _2830.y;
                                frontier_phi_77_pred_4 = _2986 * _2830.x;
                                frontier_phi_77_pred_5 = _3060 * _2842.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _3065 = frontier_phi_77_pred;
                            _3064 = frontier_phi_77_pred_1;
                            _3069 = frontier_phi_77_pred_2;
                            _3068 = frontier_phi_77_pred_3;
                            _3067 = frontier_phi_77_pred_4;
                            _3066 = frontier_phi_77_pred_5;
                            _2772 = _3067 + _2785;
                            _2773 = _3068 + _2786;
                            _2774 = _3069 + _2787;
                            _2769 = _3064 + _2782;
                            _2770 = _3065 + _2783;
                            _2771 = _3066 + _2784;
                            if (_2789 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2782 = _2769;
                                _2783 = _2770;
                                _2784 = _2771;
                                _2785 = _2772;
                                _2786 = _2773;
                                _2787 = _2774;
                                _2788 = _2789;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2770;
                        frontier_phi_71_pred_1 = _2769;
                        frontier_phi_71_pred_2 = _2774;
                        frontier_phi_71_pred_3 = _2773;
                        frontier_phi_71_pred_4 = _2772;
                        frontier_phi_71_pred_5 = _2771;
                    }
                    _2361 = frontier_phi_71_pred;
                    _2359 = frontier_phi_71_pred_1;
                    _2369 = frontier_phi_71_pred_2;
                    _2367 = frontier_phi_71_pred_3;
                    _2365 = frontier_phi_71_pred_4;
                    _2363 = frontier_phi_71_pred_5;
                    uint _2555 = _2554 + 1u;
                    if (_2555 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2548 = _2359;
                        _2549 = _2361;
                        _2550 = _2363;
                        _2551 = _2365;
                        _2552 = _2367;
                        _2553 = _2369;
                        _2554 = _2555;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _2369;
                frontier_phi_53_54_ladder_1 = _2365;
                frontier_phi_53_54_ladder_2 = _2363;
                frontier_phi_53_54_ladder_3 = _2361;
                frontier_phi_53_54_ladder_4 = _2359;
                frontier_phi_53_54_ladder_5 = _2367;
            }
            else
            {
                frontier_phi_53_54_ladder = _2224;
                frontier_phi_53_54_ladder_1 = _2220;
                frontier_phi_53_54_ladder_2 = _2218;
                frontier_phi_53_54_ladder_3 = _2216;
                frontier_phi_53_54_ladder_4 = _2214;
                frontier_phi_53_54_ladder_5 = _2222;
            }
            _2358 = frontier_phi_53_54_ladder_4;
            _2360 = frontier_phi_53_54_ladder_3;
            _2362 = frontier_phi_53_54_ladder_2;
            _2364 = frontier_phi_53_54_ladder_1;
            _2366 = frontier_phi_53_54_ladder_5;
            _2368 = frontier_phi_53_54_ladder;
        }
        float _2373 = isnan(1.0) ? _721 : (isnan(_721) ? 1.0 : min(_721, 1.0));
        _2114 = (_2373 * _2364) + _1841;
        _2116 = (_2373 * _2366) + _1842;
        _2118 = (_2373 * _2368) + _1843;
        _2120 = ((_2358 * 0.039999999105930328369140625) * _2373) + _1997;
        _2122 = ((_2360 * 0.039999999105930328369140625) * _2373) + _1998;
        _2124 = ((_2362 * 0.039999999105930328369140625) * _2373) + _1999;
    }
    else
    {
        _2114 = _1841;
        _2116 = _1842;
        _2118 = _1843;
        _2120 = _1997;
        _2122 = _1998;
        _2124 = _1999;
    }
    uint _2130 = _697 + uint(cbMatDynParam._m0[0u].w);
    float _3985 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
    float _3996 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _4007 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _2161 = (((isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0))) * (_2114 + ((isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0))) * _721))) + ((_2120 + ((isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0))) * _1531)) * cbPerFrame._m0[3u].x)) + (((_506.x * _293) * (((_571 * (cbMtdParam._m0[15u].x - cbMtdParam._m0[13u].x)) * _566) + cbMtdParam._m0[13u].x)) * cbInstanceData._m0[_2130].x);
    float _2163 = ((((_506.y * _293) * (((_571 * (cbMtdParam._m0[15u].y - cbMtdParam._m0[13u].y)) * _566) + cbMtdParam._m0[13u].y)) * cbInstanceData._m0[_2130].y) + ((_2122 + ((isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0))) * _1531)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) * (_2116 + ((isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0))) * _721)));
    float _2165 = ((((_506.z * _293) * (((_571 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[13u].z)) * _566) + cbMtdParam._m0[13u].z)) * cbInstanceData._m0[_2130].z) + ((_2124 + ((isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0))) * _1531)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * (_2118 + ((isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0))) * _721)));
    uint _2169 = _696 + 6u;
    float _2177 = _656 / cbSceneParam._m0[86u].x;
    float _2178 = _657 / cbSceneParam._m0[86u].y;
    vec4 _2192 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2177, _2178, (log2((isnan(cbSceneParam._m0[77u].w) ? _643 : (isnan(_643) ? cbSceneParam._m0[77u].w : min(_643, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2194 = _2192.x;
    float _2195 = _2192.y;
    float _2196 = _2192.z;
    float _2197 = _2192.w;
    float _2277;
    float _2279;
    float _2281;
    float _2283;
    if (_643 > cbSceneParam._m0[78u].w)
    {
        float _2239 = isnan(_643) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _643 : min(cbSceneParam._m0[80u].w, _643));
        float _2240 = _2239 / _643;
        float _2251 = _2240 * _275;
        float _2252 = _276 * _2240;
        float _2253 = (-0.0) - _2252;
        float _2254 = _2240 * _277;
        float _2256 = (cbSceneParam._m0[77u].w * _2253) / _2239;
        float _2257 = _2256 + cbSceneParam._m0[79u].w;
        float _2258 = cbSceneParam._m0[79u].w - _2252;
        float _2264 = sqrt(((_2251 * _2251) + (_2252 * _2252)) + (_2254 * _2254));
        float _2267 = (1.0 - (cbSceneParam._m0[77u].w / _2239)) * _2264;
        float _2273 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2275 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2484;
        if (abs((_2253 - _2256) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2484 = ((((_2257 > 0.0) ? exp2(_2273 * _2257) : (2.0 - exp2(_2275 * _2257))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2267;
        }
        else
        {
            float _2419 = 1.0 / cbSceneParam._m0[80u].x;
            float _2420 = isnan(_2258) ? _2257 : (isnan(_2257) ? _2258 : max(_2257, _2258));
            float _2421 = isnan(_2258) ? _2257 : (isnan(_2257) ? _2258 : min(_2257, _2258));
            float _2430 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : min(_2420, 0.0));
            float _2431 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : min(_2421, 0.0));
            _2484 = ((abs(_2264 / _2253) * cbSceneParam._m0[80u].y) * ((((_2430 - _2431) * 2.0) - ((exp2(_2273 * (isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0)))) - exp2(_2273 * (isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0))))) * _2419)) - ((exp2(_2275 * _2430) - exp2(_2275 * _2431)) * _2419))) + (_2267 * cbSceneParam._m0[80u].z);
        }
        vec4 _2486 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2177, _2178, 1.0), 0.0);
        float _2495 = exp2((_2484 * (-1.44269502162933349609375)) * (1.0 - _2486.w));
        float _2496 = log2(_2495);
        float _2512 = log2(_2197);
        _2277 = (exp2(_2512 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2496 * cbSceneParam._m0[78u].x)) * _2486.x) / cbSceneParam._m0[78u].x)) + _2194;
        _2279 = (exp2(_2512 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2496 * cbSceneParam._m0[78u].y)) * _2486.y) / cbSceneParam._m0[78u].y)) + _2195;
        _2281 = (exp2(_2512 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2496 * cbSceneParam._m0[78u].z)) * _2486.z) / cbSceneParam._m0[78u].z)) + _2196;
        _2283 = _2495 * _2197;
    }
    else
    {
        _2277 = _2194;
        _2279 = _2195;
        _2281 = _2196;
        _2283 = _2197;
    }
    float _2295 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2296 = _2295 == 3.0;
    float _2297 = log2(_2283);
    float _2304 = exp2(_2297 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0)));
    float _2305 = exp2(_2297 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0)));
    float _2306 = exp2(_2297 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2165 : (isnan(_2165) ? 0.0 : max(_2165, 0.0)));
    float _2315 = (_2295 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2315 * (_2296 ? _2304 : (_2304 + (cbSceneParam._m0[72u].w * _2277)));
    SV_Target.y = _2315 * (_2296 ? _2305 : (_2305 + (cbSceneParam._m0[72u].w * _2279)));
    SV_Target.z = _2315 * (_2296 ? _2306 : (_2306 + (cbSceneParam._m0[72u].w * _2281)));
    SV_Target.w = cbInstanceData._m0[_2169].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2169].w;
}


