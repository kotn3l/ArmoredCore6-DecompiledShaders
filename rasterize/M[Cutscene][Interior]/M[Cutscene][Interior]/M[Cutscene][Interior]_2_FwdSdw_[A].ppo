#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _800;
uint _2270;
uint _2271;
uint _2272;
uint _2494;
uint _2495;
uint _2496;
float _2752;
float _2753;
float _2754;
float _2755;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _188 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _189 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _190 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_188, _189, _190), vec3(_188, _189, _190)));
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _267 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _257);
    float _268 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _257);
    float _269 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _257);
    vec4 _288 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _323 = cbMtdParam._m0[24u].x + _267;
    float _324 = cbMtdParam._m0[24u].y + _268;
    float _325 = cbMtdParam._m0[24u].z + _269;
    float _339 = (-0.0) - dot(vec3(_323, _324, _325), vec3(_195 * _188, _195 * _189, _195 * _190));
    float _340 = (-0.0) - dot(vec3(_323, _324, _325), vec3(_209 * TANGENT.x, _209 * TANGENT.y, _209 * TANGENT.z));
    float _341 = (-0.0) - dot(vec3(_323, _324, _325), vec3((-0.0) - (_202 * NORMAL.x), (-0.0) - (_202 * NORMAL.y), (-0.0) - (_202 * NORMAL.z)));
    float _345 = inversesqrt(dot(vec3(_339, _340, _341), vec3(_339, _340, _341)));
    float _348 = _345 * _341;
    float _349 = (_345 * _339) + (((_288.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _350 = (_345 * _340) + (((_288.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _351 = _349 * cbMtdParam._m0[20u].w;
    float _352 = _350 * cbMtdParam._m0[20u].z;
    float _353 = fract(TEXCOORD.x);
    float _354 = fract(TEXCOORD.y);
    float _360;
    if (_351 > 0.0)
    {
        _360 = (1.0 - _353) / _351;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_351 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _353) / _351;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _360 = frontier_phi_3_2_ladder;
    }
    float _368;
    if (_352 > 0.0)
    {
        _368 = (1.0 - _354) / _352;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_352 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _354) / _352;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _368 = frontier_phi_7_6_ladder;
    }
    bool _370 = _348 > 0.0;
    float _372 = _370 ? (cbMtdParam._m0[16u].x / _348) : 5000.0;
    float _373 = isnan(_368) ? _360 : (isnan(_360) ? _368 : min(_360, _368));
    float _374 = isnan(_372) ? _373 : (isnan(_373) ? _372 : min(_373, _372));
    float _378 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _379 = _353 + (-0.5);
    float _382 = _354 + (-0.5);
    float _385 = ((_374 * _348) + _378) / _378;
    vec4 _410 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_379 + (_374 * _351)) / _385) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_382 + (_374 * _352)) / _385) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _420 = cbMtdParam._m0[9u].x * _410.x;
    float _421 = cbMtdParam._m0[9u].y * _410.y;
    float _422 = cbMtdParam._m0[9u].z * _410.z;
    float _441 = _349 * cbMtdParam._m0[22u].w;
    float _442 = _350 * cbMtdParam._m0[22u].z;
    bool _443 = _441 > 0.0;
    float _448;
    if (_443)
    {
        _448 = (1.0 - _353) / _441;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _353) / _441;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _448 = frontier_phi_11_10_ladder;
    }
    bool _450 = _442 > 0.0;
    float _455;
    if (_450)
    {
        _455 = (1.0 - _354) / _442;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _354) / _442;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _455 = frontier_phi_15_14_ladder;
    }
    float _458 = _370 ? (cbMtdParam._m0[18u].x / _348) : 5000.0;
    float _459 = isnan(_455) ? _448 : (isnan(_448) ? _455 : min(_448, _455));
    float _460 = isnan(_458) ? _459 : (isnan(_459) ? _458 : min(_459, _458));
    float _464 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _468 = ((_460 * _348) + _464) / _464;
    float _473 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _475 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _491 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_379 + (_460 * _441)) / _468) + 0.5) + _473) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_382 + (_460 * _442)) / _468) + 0.5) + _475) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _503;
    if (_443)
    {
        _503 = (1.0 - _353) / _441;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _353) / _441;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _503 = frontier_phi_19_18_ladder;
    }
    float _509;
    if (_450)
    {
        _509 = (1.0 - _354) / _442;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _354) / _442;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _509 = frontier_phi_23_22_ladder;
    }
    float _511 = isnan(_509) ? _503 : (isnan(_503) ? _509 : min(_503, _509));
    float _512 = isnan(_458) ? _511 : (isnan(_511) ? _458 : min(_511, _458));
    float _519 = ((_512 * _348) + _464) / _464;
    vec4 _539 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_379 + (_512 * _441)) / _519) + 0.5) + _473) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_382 + (_512 * _442)) / _519) + 0.5) + _475) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _541 = _539.x;
    float _566 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _570 = inversesqrt(dot(vec3(_267, _268, _269), vec3(_267, _268, _269)));
    float _571 = _267 * _570;
    float _572 = _268 * _570;
    float _573 = _269 * _570;
    vec4 _578 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _580 = _578.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _649 = sqrt(((_267 * _267) + (_268 * _268)) + (_269 * _269));
        float _655 = (cbMatDynParam._m0[5u].x * _649) + cbMatDynParam._m0[5u].y;
        float _2794 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
        float _656 = isnan(1.0) ? _2794 : (isnan(_2794) ? 1.0 : min(_2794, 1.0));
        float _660 = (cbMatDynParam._m0[5u].z * _649) + cbMatDynParam._m0[5u].w;
        float _2805 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2805 : (isnan(_2805) ? 1.0 : min(_2805, 1.0))) - _656)) + _656) < ((_580 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _592 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _593 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _602 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_592 * cbSceneParam._m0[86u].x, _593 * cbSceneParam._m0[86u].y));
    float _605 = _602.x * TEXCOORD_4.z;
    float _606 = (-0.0) - _571;
    float _607 = (-0.0) - _572;
    float _608 = (-0.0) - _573;
    float _630 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _634 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _638 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _799;
    float _801;
    float _802;
    float _803;
    float _804;
    float _805;
    float _806;
    float _807;
    float _808;
    float _809;
    float _810;
    float _811;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _722 = (cbModelParam._m0[37u].x * ((((fma(_638, cbModelParam._m0[26u].z, fma(_634, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _630)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _724 = (cbModelParam._m0[37u].y * ((((fma(_638, cbModelParam._m0[27u].z, fma(_634, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _630)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _725 = (((((fma(_638, cbModelParam._m0[28u].z, fma(_634, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _630)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _728 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_722, _724, _725), 0.0);
        vec4 _735 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_722, _724, _725), 0.0);
        vec4 _742 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_722, _724, _725), 0.0);
        vec4 _749 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_722, _724, _725), 0.0);
        float _762 = exp2((_728.w + (-0.5)) * 20.0) * 2.0;
        float _772 = exp2((_735.w + (-0.5)) * 20.0) * 2.0;
        float _782 = exp2((_742.w + (-0.5)) * 20.0) * 2.0;
        float _792 = exp2((_749.w + (-0.5)) * 20.0) * 2.0;
        float _793 = _792 * (_749.x + (-0.5));
        float _794 = _792 * (_749.y + (-0.5));
        float _795 = _792 * (_749.z + (-0.5));
        _799 = _762 * (_728.z + (-0.5));
        _801 = _762 * (_728.y + (-0.5));
        _802 = _762 * (_728.x + (-0.5));
        _803 = _772 * (_735.z + (-0.5));
        _804 = _772 * (_735.y + (-0.5));
        _805 = _772 * (_735.x + (-0.5));
        _806 = _782 * (_742.z + (-0.5));
        _807 = _782 * (_742.y + (-0.5));
        _808 = _782 * (_742.x + (-0.5));
        _809 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
        _810 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
        _811 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    }
    else
    {
        _799 = _800;
        _801 = _800;
        _802 = _800;
        _803 = _800;
        _804 = _800;
        _805 = _800;
        _806 = _800;
        _807 = _800;
        _808 = _800;
        _809 = _800;
        _810 = _800;
        _811 = _800;
    }
    float _942;
    float _943;
    float _944;
    float _945;
    float _946;
    float _947;
    float _948;
    float _949;
    float _950;
    float _951;
    float _952;
    float _953;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _868 = (cbModelParam._m0[38u].x * ((((fma(_638, cbModelParam._m0[30u].z, fma(_634, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _630)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _869 = (cbModelParam._m0[38u].y * ((((fma(_638, cbModelParam._m0[31u].z, fma(_634, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _630)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _870 = (((((fma(_638, cbModelParam._m0[32u].z, fma(_634, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _630)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _872 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_868, _869, _870), 0.0);
        vec4 _879 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_868, _869, _870), 0.0);
        vec4 _886 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_868, _869, _870), 0.0);
        vec4 _893 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_868, _869, _870), 0.0);
        float _905 = exp2((_872.w + (-0.5)) * 20.0) * 2.0;
        float _915 = exp2((_879.w + (-0.5)) * 20.0) * 2.0;
        float _925 = exp2((_886.w + (-0.5)) * 20.0) * 2.0;
        float _935 = exp2((_893.w + (-0.5)) * 20.0) * 2.0;
        float _936 = _935 * (_893.x + (-0.5));
        float _937 = _935 * (_893.y + (-0.5));
        float _938 = _935 * (_893.z + (-0.5));
        _942 = _905 * (_872.z + (-0.5));
        _943 = _905 * (_872.y + (-0.5));
        _944 = _905 * (_872.x + (-0.5));
        _945 = _915 * (_879.z + (-0.5));
        _946 = _915 * (_879.y + (-0.5));
        _947 = _915 * (_879.x + (-0.5));
        _948 = _925 * (_886.z + (-0.5));
        _949 = _925 * (_886.y + (-0.5));
        _950 = _925 * (_886.x + (-0.5));
        _951 = isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0));
        _952 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
        _953 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    }
    else
    {
        _942 = _800;
        _943 = _800;
        _944 = _800;
        _945 = _800;
        _946 = _800;
        _947 = _800;
        _948 = _800;
        _949 = _800;
        _950 = _800;
        _951 = _800;
        _952 = _800;
        _953 = _800;
    }
    float _968 = _571 * (-0.5);
    float _969 = _572 * (-0.5);
    float _970 = _573 * (-0.5);
    float _971 = dot(vec4(_968, _969, _970, 1.0), vec4(_944, _947, _950, _953));
    float _974 = dot(vec4(_968, _969, _970, 1.0), vec4(_943, _946, _949, _952));
    float _977 = dot(vec4(_968, _969, _970, 1.0), vec4(_942, _945, _948, _951));
    float _1012;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _984 = dot(vec4(_968, _969, _970, 1.0), vec4(_799, _803, _806, _809));
        float _988 = dot(vec4(_968, _969, _970, 1.0), vec4(_801, _804, _807, _810));
        float _992 = dot(vec4(_968, _969, _970, 1.0), vec4(_802, _805, _808, _811));
        float _999 = dot(vec4(cbModelParam._m0[39u]), vec4(_968, _969, _970, 1.0));
        _1012 = dot(vec3(isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0)), isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0)), isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_999) ? 0.0 : (isnan(0.0) ? _999 : max(0.0, _999))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1012 = 1.0;
    }
    float _1023;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1014 = dot(vec4(cbModelParam._m0[40u]), vec4(_968, _969, _970, 1.0));
        _1023 = dot(vec3(isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0)), isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0)), isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1014) ? 0.0 : (isnan(0.0) ? _1014 : max(0.0, _1014))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1023 = 1.0;
    }
    float _1027 = (_1023 * cbModelParam._m0[1u].x) + (_1012 * (1.0 - cbModelParam._m0[1u].x));
    float _1033 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1117;
    float _1119;
    float _1121;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1084 = fma(_638, cbModelParam._m0[13u].z, fma(_634, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _630)) + cbModelParam._m0[13u].w;
        float _1088 = fma(_638, cbModelParam._m0[14u].z, fma(_634, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _630)) + cbModelParam._m0[14u].w;
        float _1092 = fma(_638, cbModelParam._m0[15u].z, fma(_634, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _630)) + cbModelParam._m0[15u].w;
        float _1095 = fma(_608, cbModelParam._m0[13u].z, fma(_607, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _606));
        float _1098 = fma(_608, cbModelParam._m0[14u].z, fma(_607, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _606));
        float _1101 = fma(_608, cbModelParam._m0[15u].z, fma(_607, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _606));
        float _1127;
        if (_1095 > 0.0)
        {
            _1127 = abs((1.0 - _1084) / _1095);
        }
        else
        {
            float frontier_phi_41_39_ladder;
            if (_1095 < 0.0)
            {
                frontier_phi_41_39_ladder = abs((_1084 + 1.0) / _1095);
            }
            else
            {
                frontier_phi_41_39_ladder = 5000.0;
            }
            _1127 = frontier_phi_41_39_ladder;
        }
        float _1315;
        if (_1098 > 0.0)
        {
            _1315 = abs((1.0 - _1088) / _1098);
        }
        else
        {
            float frontier_phi_50_46_ladder;
            if (_1098 < 0.0)
            {
                frontier_phi_50_46_ladder = abs((_1088 + 1.0) / _1098);
            }
            else
            {
                frontier_phi_50_46_ladder = 5000.0;
            }
            _1315 = frontier_phi_50_46_ladder;
        }
        float _1669;
        if (_1101 > 0.0)
        {
            _1669 = abs((1.0 - _1092) / _1101);
        }
        else
        {
            float frontier_phi_62_57_ladder;
            if (_1101 < 0.0)
            {
                frontier_phi_62_57_ladder = abs((_1092 + 1.0) / _1101);
            }
            else
            {
                frontier_phi_62_57_ladder = 5000.0;
            }
            _1669 = frontier_phi_62_57_ladder;
        }
        float _1671 = isnan(_1315) ? _1127 : (isnan(_1127) ? _1315 : min(_1127, _1315));
        float _1672 = isnan(_1669) ? _1671 : (isnan(_1671) ? _1669 : min(_1671, _1669));
        float _1676 = (_1672 * _1095) + _1084;
        float _1677 = (_1672 * _1098) + _1088;
        float _1678 = (_1672 * _1101) + _1092;
        float _1679 = _1672 * 9.9999997473787516355514526367188e-05;
        float _1681 = (-1.0) - _1679;
        float _1683 = _1679 + 1.0;
        float frontier_phi_40_62_ladder;
        float frontier_phi_40_62_ladder_1;
        float frontier_phi_40_62_ladder_2;
        if ((_1678 > _1683) || ((_1678 < _1681) || ((_1677 > _1683) || ((_1677 < _1681) || ((_1676 < _1681) || (_1676 > _1683))))))
        {
            frontier_phi_40_62_ladder = 0.0;
            frontier_phi_40_62_ladder_1 = 0.0;
            frontier_phi_40_62_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1912 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1678, cbModelParam._m0[9u].z, fma(_1677, cbModelParam._m0[9u].y, _1676 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1678, cbModelParam._m0[10u].z, fma(_1677, cbModelParam._m0[10u].y, _1676 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1678, cbModelParam._m0[11u].z, fma(_1677, cbModelParam._m0[11u].y, _1676 * cbModelParam._m0[11u].x))), _1033);
            frontier_phi_40_62_ladder = _1912.z * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_1 = _1912.y * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_2 = _1912.x * cbModelParam._m0[1u].y;
        }
        _1117 = frontier_phi_40_62_ladder_2;
        _1119 = frontier_phi_40_62_ladder_1;
        _1121 = frontier_phi_40_62_ladder;
    }
    else
    {
        vec4 _1105 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_606, _607, _608), _1033);
        _1117 = _1105.x * cbModelParam._m0[1u].y;
        _1119 = _1105.y * cbModelParam._m0[1u].y;
        _1121 = _1105.z * cbModelParam._m0[1u].y;
    }
    float _1124 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1212;
    float _1214;
    float _1216;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1176 = fma(_638, cbModelParam._m0[21u].z, fma(_634, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _630)) + cbModelParam._m0[21u].w;
        float _1180 = fma(_638, cbModelParam._m0[22u].z, fma(_634, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _630)) + cbModelParam._m0[22u].w;
        float _1184 = fma(_638, cbModelParam._m0[23u].z, fma(_634, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _630)) + cbModelParam._m0[23u].w;
        float _1187 = fma(_608, cbModelParam._m0[21u].z, fma(_607, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _606));
        float _1190 = fma(_608, cbModelParam._m0[22u].z, fma(_607, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _606));
        float _1193 = fma(_608, cbModelParam._m0[23u].z, fma(_607, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _606));
        float _1320;
        if (_1187 > 0.0)
        {
            _1320 = abs((1.0 - _1176) / _1187);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1187 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1176 + 1.0) / _1187);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1320 = frontier_phi_52_48_ladder;
        }
        float _1696;
        if (_1190 > 0.0)
        {
            _1696 = abs((1.0 - _1180) / _1190);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1190 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1180 + 1.0) / _1190);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _1696 = frontier_phi_64_59_ladder;
        }
        float _2037;
        if (_1193 > 0.0)
        {
            _2037 = abs((1.0 - _1184) / _1193);
        }
        else
        {
            float frontier_phi_76_71_ladder;
            if (_1193 < 0.0)
            {
                frontier_phi_76_71_ladder = abs((_1184 + 1.0) / _1193);
            }
            else
            {
                frontier_phi_76_71_ladder = 5000.0;
            }
            _2037 = frontier_phi_76_71_ladder;
        }
        float _2039 = isnan(_1696) ? _1320 : (isnan(_1320) ? _1696 : min(_1320, _1696));
        float _2040 = isnan(_2037) ? _2039 : (isnan(_2039) ? _2037 : min(_2039, _2037));
        float _2044 = (_2040 * _1187) + _1176;
        float _2045 = (_2040 * _1190) + _1180;
        float _2046 = (_2040 * _1193) + _1184;
        float _2047 = _2040 * 9.9999997473787516355514526367188e-05;
        float _2048 = (-1.0) - _2047;
        float _2050 = _2047 + 1.0;
        float frontier_phi_49_76_ladder;
        float frontier_phi_49_76_ladder_1;
        float frontier_phi_49_76_ladder_2;
        if ((_2046 > _2050) || ((_2046 < _2048) || ((_2045 > _2050) || ((_2045 < _2048) || ((_2044 < _2048) || (_2044 > _2050))))))
        {
            frontier_phi_49_76_ladder = 0.0;
            frontier_phi_49_76_ladder_1 = 0.0;
            frontier_phi_49_76_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2168 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2046, cbModelParam._m0[17u].z, fma(_2045, cbModelParam._m0[17u].y, _2044 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2046, cbModelParam._m0[18u].z, fma(_2045, cbModelParam._m0[18u].y, _2044 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2046, cbModelParam._m0[19u].z, fma(_2045, cbModelParam._m0[19u].y, _2044 * cbModelParam._m0[19u].x))), _1124);
            frontier_phi_49_76_ladder = _2168.z * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_1 = _2168.y * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_2 = _2168.x * cbModelParam._m0[1u].z;
        }
        _1212 = frontier_phi_49_76_ladder_2;
        _1214 = frontier_phi_49_76_ladder_1;
        _1216 = frontier_phi_49_76_ladder;
    }
    else
    {
        vec4 _1196 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_606, _607, _608), _1124);
        _1212 = _1196.x * cbModelParam._m0[1u].z;
        _1214 = _1196.y * cbModelParam._m0[1u].z;
        _1216 = _1196.z * cbModelParam._m0[1u].z;
    }
    float _1228 = _605 * 0.01200000010430812835693359375;
    float _1230 = _1228 * ((cbModelParam._m0[1u].w * (_1212 - _1117)) + _1117);
    float _1231 = _1228 * ((cbModelParam._m0[1u].w * (_1214 - _1119)) + _1119);
    float _1232 = _1228 * ((cbModelParam._m0[1u].w * (_1216 - _1121)) + _1121);
    float _1253 = fma(_1232, cbSceneParam._m0[89u].z, fma(_1231, cbSceneParam._m0[89u].y, _1230 * cbSceneParam._m0[89u].x));
    float _1256 = fma(_1232, cbSceneParam._m0[90u].z, fma(_1231, cbSceneParam._m0[90u].y, _1230 * cbSceneParam._m0[90u].x));
    float _1259 = fma(_1232, cbSceneParam._m0[91u].z, fma(_1231, cbSceneParam._m0[91u].y, _1230 * cbSceneParam._m0[91u].x));
    float _1294 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1298 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1302 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1306 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1307 = _1294 / _1306;
    float _1308 = _1298 / _1306;
    float _1309 = _1302 / _1306;
    float _1457;
    float _1458;
    float _1459;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1336 = ((uint(_1309 > cbSceneParam._m0[59u].y) + uint(_1309 > cbSceneParam._m0[59u].x)) + uint(_1309 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1337 = _1336 + 43u;
        uint _1345 = _1336 + 44u;
        uint _1353 = _1336 + 45u;
        uint _1361 = _1336 + 46u;
        float _1372 = fma(_1306, cbSceneParam._m0[_1337].w, fma(_1302, cbSceneParam._m0[_1337].z, fma(_1298, cbSceneParam._m0[_1337].y, _1294 * cbSceneParam._m0[_1337].x)));
        float _1376 = fma(_1306, cbSceneParam._m0[_1345].w, fma(_1302, cbSceneParam._m0[_1345].z, fma(_1298, cbSceneParam._m0[_1345].y, _1294 * cbSceneParam._m0[_1345].x)));
        float _1384 = fma(_1306, cbSceneParam._m0[_1361].w, fma(_1302, cbSceneParam._m0[_1361].z, fma(_1298, cbSceneParam._m0[_1361].y, _1294 * cbSceneParam._m0[_1361].x)));
        float _1389 = cbSceneParam._m0[33u].z * _1384;
        float _1391 = cbSceneParam._m0[33u].w * _1384;
        float _1394 = fma(_1306, cbSceneParam._m0[_1353].w, fma(_1302, cbSceneParam._m0[_1353].z, fma(_1298, cbSceneParam._m0[_1353].y, _1294 * cbSceneParam._m0[_1353].x))) / _1384;
        float _1442 = (cbSceneParam._m0[33u].x - sqrt(((_1308 * _1308) + (_1307 * _1307)) + (_1309 * _1309))) * cbSceneParam._m0[33u].y;
        float _2931 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1450 = (isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1389 + _1372) / _1384, (_1391 + _1376) / _1384), _1394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1391 + _1372) / _1384, (_1376 - _1389) / _1384), _1394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1372 - _1389) / _1384, (_1376 - _1391) / _1384), _1394), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1372 - _1391) / _1384, (_1389 + _1376) / _1384), _1394), 0.0)).x), vec4(0.25)));
        _1457 = 1.0 - (_1450 * cbSceneParam._m0[34u].x);
        _1458 = 1.0 - (_1450 * cbSceneParam._m0[34u].y);
        _1459 = 1.0 - (_1450 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1457 = 1.0;
        _1458 = 1.0;
        _1459 = 1.0;
    }
    float _1523;
    float _1525;
    float _1527;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1511 = fma(_1306, cbSceneParam._m0[63u].w, fma(_1302, cbSceneParam._m0[63u].z, fma(_1298, cbSceneParam._m0[63u].y, _1294 * cbSceneParam._m0[63u].x)));
        float _1512 = fma(_1306, cbSceneParam._m0[60u].w, fma(_1302, cbSceneParam._m0[60u].z, fma(_1298, cbSceneParam._m0[60u].y, _1294 * cbSceneParam._m0[60u].x))) / _1511;
        float _1513 = fma(_1306, cbSceneParam._m0[61u].w, fma(_1302, cbSceneParam._m0[61u].z, fma(_1298, cbSceneParam._m0[61u].y, _1294 * cbSceneParam._m0[61u].x))) / _1511;
        float frontier_phi_61_60_ladder;
        float frontier_phi_61_60_ladder_1;
        float frontier_phi_61_60_ladder_2;
        if ((((_1512 >= cbSceneParam._m0[64u].x) && (_1513 >= cbSceneParam._m0[64u].y)) && (_1512 <= cbSceneParam._m0[64u].z)) && (_1513 <= cbSceneParam._m0[64u].w))
        {
            float _1709 = fma(_1306, cbSceneParam._m0[62u].w, fma(_1302, cbSceneParam._m0[62u].z, fma(_1298, cbSceneParam._m0[62u].y, _1294 * cbSceneParam._m0[62u].x))) / _1511;
            float _1713 = isnan(cbSceneParam._m0[41u].w) ? _1709 : (isnan(_1709) ? cbSceneParam._m0[41u].w : max(_1709, cbSceneParam._m0[41u].w));
            float _1756 = (cbSceneParam._m0[33u].x - sqrt(((_1308 * _1308) + (_1307 * _1307)) + (_1309 * _1309))) * cbSceneParam._m0[33u].y;
            float _2947 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
            float _1763 = (isnan(1.0) ? _2947 : (isnan(_2947) ? 1.0 : min(_2947, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1512, cbSceneParam._m0[33u].w + _1513), _1713), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1512, _1513 - cbSceneParam._m0[33u].z), _1713), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1512 - cbSceneParam._m0[33u].z, _1513 - cbSceneParam._m0[33u].w), _1713), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1512 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1513), _1713), 0.0)).x), vec4(0.25)));
            float _1767 = 1.0 - (_1763 * cbSceneParam._m0[34u].x);
            float _1768 = 1.0 - (_1763 * cbSceneParam._m0[34u].y);
            float _1769 = 1.0 - (_1763 * cbSceneParam._m0[34u].z);
            frontier_phi_61_60_ladder = isnan(_1769) ? _1459 : (isnan(_1459) ? _1769 : min(_1459, _1769));
            frontier_phi_61_60_ladder_1 = isnan(_1768) ? _1458 : (isnan(_1458) ? _1768 : min(_1458, _1768));
            frontier_phi_61_60_ladder_2 = isnan(_1767) ? _1457 : (isnan(_1457) ? _1767 : min(_1457, _1767));
        }
        else
        {
            frontier_phi_61_60_ladder = _1459;
            frontier_phi_61_60_ladder_1 = _1458;
            frontier_phi_61_60_ladder_2 = _1457;
        }
        _1523 = frontier_phi_61_60_ladder_2;
        _1525 = frontier_phi_61_60_ladder_1;
        _1527 = frontier_phi_61_60_ladder;
    }
    else
    {
        _1523 = _1457;
        _1525 = _1458;
        _1527 = _1459;
    }
    uint _1529 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1533 = floatBitsToUint(cbInstanceData._m0[_1529 + 5u]);
    uint _1535 = _1533.x * 14u;
    uint _1536 = _1535 + 13u;
    float _1541 = _605 + (-1.0);
    float _1544 = (cbLight._m0[_1536].x * _1541) + 1.0;
    float _1545 = (cbLight._m0[_1536].y * _1541) + 1.0;
    uint _1546 = _1535 + 8u;
    float _1557 = cbLight._m0[_1535].x + _571;
    float _1558 = cbLight._m0[_1535].y + _572;
    float _1559 = cbLight._m0[_1535].z + _573;
    float _1563 = inversesqrt(dot(vec3(_1557, _1558, _1559), vec3(_1557, _1558, _1559)));
    float _1567 = dot(vec3(0.0), vec3(cbLight._m0[_1535].xyz));
    float _2973 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
    float _1570 = isnan(1.0) ? _2973 : (isnan(_2973) ? 1.0 : min(_2973, 1.0));
    float _1571 = dot(vec3(0.0), vec3(_571, _572, _573));
    float _2984 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1574 = isnan(1.0) ? _2984 : (isnan(_2984) ? 1.0 : min(_2984, 1.0));
    float _1575 = dot(vec3(cbLight._m0[_1535].xyz), vec3(_1557 * _1563, _1558 * _1563, _1559 * _1563));
    float _2995 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
    float _1586 = (exp2(log2(1.0 - (isnan(1.0) ? _2995 : (isnan(_2995) ? 1.0 : min(_2995, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1592 = (0.5 / ((_1570 + 9.9999999392252902907785028219223e-09) + _1574)) * _1570;
    float _3006 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    float _1594 = (isnan(1.0) ? _3006 : (isnan(_3006) ? 1.0 : min(_3006, 1.0))) * 0.31831014156341552734375;
    float _1596 = isnan(1.0) ? _1544 : (isnan(_1544) ? 1.0 : min(_1544, 1.0));
    uint _1609 = _1535 + 9u;
    uint _1615 = _1535 | 1u;
    float _1621 = cbLight._m0[_1615].x + _571;
    float _1622 = cbLight._m0[_1615].y + _572;
    float _1623 = cbLight._m0[_1615].z + _573;
    float _1627 = inversesqrt(dot(vec3(_1621, _1622, _1623), vec3(_1621, _1622, _1623)));
    float _1631 = dot(vec3(0.0), vec3(cbLight._m0[_1615].xyz));
    float _3022 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
    float _1634 = isnan(1.0) ? _3022 : (isnan(_3022) ? 1.0 : min(_3022, 1.0));
    float _1635 = dot(vec3(cbLight._m0[_1615].xyz), vec3(_1621 * _1627, _1622 * _1627, _1623 * _1627));
    float _3033 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    float _1644 = (exp2(log2(1.0 - (isnan(1.0) ? _3033 : (isnan(_3033) ? 1.0 : min(_3033, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1648 = (0.5 / ((_1634 + 9.9999999392252902907785028219223e-09) + _1574)) * _1634;
    float _3044 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
    float _1650 = (isnan(1.0) ? _3044 : (isnan(_3044) ? 1.0 : min(_3044, 1.0))) * 0.31831014156341552734375;
    float _1651 = isnan(1.0) ? _1545 : (isnan(_1545) ? 1.0 : min(_1545, 1.0));
    float _1661 = (((_1644 * cbLight._m0[_1609].x) * _1650) * _1651) + ((((cbLight._m0[_1546].x * _1523) * _1586) * _1594) * _1596);
    float _1662 = (((_1644 * cbLight._m0[_1609].y) * _1650) * _1651) + ((((cbLight._m0[_1546].y * _1525) * _1586) * _1594) * _1596);
    float _1663 = (((_1644 * cbLight._m0[_1609].z) * _1650) * _1651) + ((((cbLight._m0[_1546].z * _1527) * _1586) * _1594) * _1596);
    float _1827;
    float _1829;
    float _1831;
    if (_1533.y == 0u)
    {
        uvec4 _1781 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1782 = _1781.x;
        uint _1793 = uint((float(_1781.y) * floor(float(uint(cbSceneParam._m0[85u].y * _593) / _1782))) + floor(float(uint(cbSceneParam._m0[85u].x * _592) / _1782)));
        float _1803 = (log2(_1309 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1804 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
        uint _1807 = uint(isnan(14.0) ? _1804 : (isnan(_1804) ? 14.0 : min(_1804, 14.0)));
        uvec4 _1812 = texelFetch(g_lightClusterGridBuffer, int(((_1807 << 2u) + (_1793 << 6u)) >> 2u));
        uint _1813 = _1812.x;
        uint _1814 = _1781.z;
        float _1921;
        float _1923;
        float _1925;
        if (((((1u << ((_1814 >> 4u) & 15u)) + 4294967295u) & _1813) == 0u) || ((_1814 & 240u) == 0u))
        {
            _1921 = 0.0;
            _1923 = 0.0;
            _1925 = 0.0;
        }
        else
        {
            float _1922;
            float _1924;
            float _1926;
            float _2083 = 0.0;
            float _2084 = 0.0;
            float _2085 = 0.0;
            uint _2086 = 0u;
            uint _2095;
            bool _2096;
            for (;;)
            {
                _2095 = texelFetch(g_lightClassification, int((((_1807 << 5u) + (_1793 << 9u)) + (_2086 << 2u)) >> 2u)).x;
                _2096 = _2095 == 0u;
                float frontier_phi_87_pred;
                float frontier_phi_87_pred_1;
                float frontier_phi_87_pred_2;
                if (_2096)
                {
                    frontier_phi_87_pred = _2085;
                    frontier_phi_87_pred_1 = _2084;
                    frontier_phi_87_pred_2 = _2083;
                }
                else
                {
                    float _2240;
                    float _2241;
                    float _2242;
                    uint _2243;
                    _2240 = _2083;
                    _2241 = _2084;
                    _2242 = _2085;
                    _2243 = _2095;
                    float _2173;
                    float _2174;
                    float _2175;
                    for (;;)
                    {
                        uint _2247 = uint(findLSB(_2243)) + (_2086 << 5u);
                        uint _2244 = (_2243 + 4294967295u) & _2243;
                        uint _2249 = _2247 * 48u;
                        vec4 _2263 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2249)).x, texelFetch(g_PointLightRenderingBuffer, int(_2249 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2249 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2249 + 3u)).x));
                        uint _2280 = (_2247 * 48u) + 8u;
                        vec3 _2291 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2280)).x, texelFetch(g_PointLightRenderingBuffer, int(_2280 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2280 + 2u)).x));
                        float _2295 = _2263.x - _1307;
                        float _2296 = _2263.y - _1308;
                        float _2297 = _2263.z - _1309;
                        float _2298 = dot(vec3(_2295, _2296, _2297), vec3(_2295, _2296, _2297));
                        float _2301 = inversesqrt(_2298);
                        float _2310 = 1.0 - (_2298 * _2263.w);
                        float _3070 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
                        float _2312 = sqrt(_2298) * uintBitsToFloat(uvec4(_2270, _2271, _2272, texelFetch(g_PointLightRenderingBuffer, int(((_2247 * 48u) + 4u) + 3u)).x)).w;
                        float _2315 = 1.39999997615814208984375 / (_2312 + 1.39999997615814208984375);
                        float _2316 = _2315 * _2315;
                        float _2319 = ((1.0 - _2316) * dot(vec3(0.0), vec3(_2301 * _2295, _2301 * _2296, _2301 * _2297))) + _2316;
                        float _2321 = (-0.0) - _1307;
                        float _2322 = (-0.0) - _1308;
                        float _2323 = (-0.0) - _1309;
                        float _2327 = inversesqrt(dot(vec3(_2321, _2322, _2323), vec3(_2321, _2322, _2323)));
                        float _2331 = dot(vec3(0.0), vec3(_2327 * _2321, _2327 * _2322, _2327 * _2323));
                        float _3081 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
                        float _3092 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
                        float _2335 = isnan(1.0) ? _3092 : (isnan(_3092) ? 1.0 : min(_3092, 1.0));
                        float _2339 = (0.5 / (((isnan(1.0) ? _3081 : (isnan(_3081) ? 1.0 : min(_3081, 1.0))) + 9.9999999392252902907785028219223e-09) + _2335)) * _2335;
                        float _3103 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
                        float _2348 = (((isnan(1.0) ? _3103 : (isnan(_3103) ? 1.0 : min(_3103, 1.0))) * 3.1415927410125732421875) / (((_2312 * _2312) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _3070 : (isnan(_3070) ? 1.0 : min(_3070, 1.0)));
                        _2173 = (_2348 * _2291.x) + _2240;
                        _2174 = (_2348 * _2291.y) + _2241;
                        _2175 = (_2348 * _2291.z) + _2242;
                        if (_2244 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2240 = _2173;
                            _2241 = _2174;
                            _2242 = _2175;
                            _2243 = _2244;
                        }
                    }
                    frontier_phi_87_pred = _2175;
                    frontier_phi_87_pred_1 = _2174;
                    frontier_phi_87_pred_2 = _2173;
                }
                _1926 = frontier_phi_87_pred;
                _1924 = frontier_phi_87_pred_1;
                _1922 = frontier_phi_87_pred_2;
                uint _2087 = _2086 + 1u;
                if (_2087 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2083 = _1922;
                    _2084 = _1924;
                    _2085 = _1926;
                    _2086 = _2087;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1921 = _1922;
            _1923 = _1924;
            _1925 = _1926;
        }
        uvec4 _1929 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1930 = _1929.z;
        uint _1932 = (_1930 >> 8u) & 15u;
        float _2063;
        float _2065;
        float _2067;
        if (((4294967295u << _1932) & _1813) == 0u)
        {
            _2063 = _1921;
            _2065 = _1923;
            _2067 = _1925;
        }
        else
        {
            float _2079 = inversesqrt(dot(vec3(_1307, _1308, _1309), vec3(_1307, _1308, _1309)));
            float frontier_phi_78_79_ladder;
            float frontier_phi_78_79_ladder_1;
            float frontier_phi_78_79_ladder_2;
            if (_1932 < ((_1930 >> 12u) & 15u))
            {
                float _2064;
                float _2066;
                float _2068;
                float _2226 = _1921;
                float _2227 = _1923;
                float _2228 = _1925;
                uint _2229 = _1932;
                uint _2238;
                bool _2239;
                for (;;)
                {
                    _2238 = texelFetch(g_lightClassification, int((((_1807 << 5u) + (_1793 << 9u)) + (_2229 << 2u)) >> 2u)).x;
                    _2239 = _2238 == 0u;
                    float frontier_phi_98_pred;
                    float frontier_phi_98_pred_1;
                    float frontier_phi_98_pred_2;
                    if (_2239)
                    {
                        frontier_phi_98_pred = _2228;
                        frontier_phi_98_pred_1 = _2227;
                        frontier_phi_98_pred_2 = _2226;
                    }
                    else
                    {
                        float _2362;
                        float _2363;
                        float _2364;
                        float _2583;
                        float _2584;
                        float _2585;
                        float _2372 = _2226;
                        float _2373 = _2227;
                        float _2374 = _2228;
                        uint _2375 = _2238;
                        uint _2376;
                        uint _2386;
                        vec4 _2401;
                        float _2402;
                        vec3 _2414;
                        vec4 _2429;
                        vec4 _2444;
                        float _2490;
                        bool _2491;
                        for (;;)
                        {
                            _2386 = ((_2229 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2375));
                            _2376 = (_2375 + 4294967295u) & _2375;
                            uint _2388 = _2386 * 40u;
                            _2401 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2388 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2388 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2388 + 3u)).x));
                            _2402 = _2401.w;
                            uint _2404 = (_2386 * 40u) + 8u;
                            _2414 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2404)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2404 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2404 + 2u)).x));
                            uint _2416 = (_2386 * 40u) + 16u;
                            _2429 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2416)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2416 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2416 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2416 + 3u)).x));
                            uint _2431 = (_2386 * 40u) + 20u;
                            _2444 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2431)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2431 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2431 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2431 + 3u)).x));
                            uint _2446 = (_2386 * 40u) + 24u;
                            vec4 _2459 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2446)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2446 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2446 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2446 + 3u)).x));
                            uint _2465 = (_2386 * 40u) + 28u;
                            vec4 _2478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 3u)).x));
                            _2490 = fma(_1309, _2478.z, fma(_1308, _2478.y, _2478.x * _1307)) + _2478.w;
                            _2491 = !((fma(_1309, _2459.z, fma(_1308, _2459.y, _2459.x * _1307)) + _2459.w) <= 0.0);
                            float frontier_phi_104_pred;
                            float frontier_phi_104_pred_1;
                            float frontier_phi_104_pred_2;
                            if (_2491)
                            {
                                float _2525 = _2401.x - _1307;
                                float _2526 = _2401.y - _1308;
                                float _2527 = _2401.z - _1309;
                                float _2528 = dot(vec3(_2525, _2526, _2527), vec3(_2525, _2526, _2527));
                                float _2531 = inversesqrt(_2528);
                                float _2538 = 1.0 - (_2528 / (_2402 * _2402));
                                float _3114 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
                                float _2540 = sqrt(_2528) * uintBitsToFloat(uvec4(_2494, _2495, _2496, texelFetch(g_SpotLightRenderingBuffer, int(((_2386 * 40u) + 4u) + 3u)).x)).w;
                                float _2542 = 1.39999997615814208984375 / (_2540 + 1.39999997615814208984375);
                                float _2543 = _2542 * _2542;
                                float _2546 = (fma(_1309, _2429.z, fma(_1308, _2429.y, _2429.x * _1307)) + _2429.w) / _2490;
                                float _2547 = (fma(_1309, _2444.z, fma(_1308, _2444.y, _2444.x * _1307)) + _2444.w) / _2490;
                                float _2551 = 1.0 - dot(vec2(_2546, _2547), vec2(_2546, _2547));
                                float _3125 = isnan(0.0) ? _2551 : (isnan(_2551) ? 0.0 : max(_2551, 0.0));
                                float _2559 = dot(vec3(0.0), vec3((-0.0) - (_1307 * _2079), (-0.0) - (_1308 * _2079), (-0.0) - (_1309 * _2079)));
                                float _3136 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
                                float _2567 = ((1.0 - _2543) * dot(vec3(0.0), vec3(_2531 * _2525, _2531 * _2526, _2531 * _2527))) + _2543;
                                float _3147 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
                                float _2568 = isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0));
                                float _2572 = (0.5 / (((isnan(1.0) ? _3136 : (isnan(_3136) ? 1.0 : min(_3136, 1.0))) + 9.9999999392252902907785028219223e-09) + _2568)) * _2568;
                                float _3158 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
                                float _2579 = ((isnan(1.0) ? _3125 : (isnan(_3125) ? 1.0 : min(_3125, 1.0))) * (isnan(1.0) ? _3114 : (isnan(_3114) ? 1.0 : min(_3114, 1.0)))) * (((isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0))) * 3.1415927410125732421875) / (((_2540 * _2540) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_104_pred = _2579 * _2414.y;
                                frontier_phi_104_pred_1 = _2579 * _2414.x;
                                frontier_phi_104_pred_2 = _2579 * _2414.z;
                            }
                            else
                            {
                                frontier_phi_104_pred = 0.0;
                                frontier_phi_104_pred_1 = 0.0;
                                frontier_phi_104_pred_2 = 0.0;
                            }
                            _2584 = frontier_phi_104_pred;
                            _2583 = frontier_phi_104_pred_1;
                            _2585 = frontier_phi_104_pred_2;
                            _2362 = _2583 + _2372;
                            _2363 = _2584 + _2373;
                            _2364 = _2585 + _2374;
                            if (_2376 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2372 = _2362;
                                _2373 = _2363;
                                _2374 = _2364;
                                _2375 = _2376;
                                continue;
                            }
                        }
                        frontier_phi_98_pred = _2364;
                        frontier_phi_98_pred_1 = _2363;
                        frontier_phi_98_pred_2 = _2362;
                    }
                    _2068 = frontier_phi_98_pred;
                    _2066 = frontier_phi_98_pred_1;
                    _2064 = frontier_phi_98_pred_2;
                    uint _2230 = _2229 + 1u;
                    if (_2230 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2226 = _2064;
                        _2227 = _2066;
                        _2228 = _2068;
                        _2229 = _2230;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_78_79_ladder = _2068;
                frontier_phi_78_79_ladder_1 = _2066;
                frontier_phi_78_79_ladder_2 = _2064;
            }
            else
            {
                frontier_phi_78_79_ladder = _1925;
                frontier_phi_78_79_ladder_1 = _1923;
                frontier_phi_78_79_ladder_2 = _1921;
            }
            _2063 = frontier_phi_78_79_ladder_2;
            _2065 = frontier_phi_78_79_ladder_1;
            _2067 = frontier_phi_78_79_ladder;
        }
        float _2072 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
        _1827 = ((_2063 * 0.039999999105930328369140625) * _2072) + _1661;
        _1829 = ((_2065 * 0.039999999105930328369140625) * _2072) + _1662;
        _1831 = ((_2067 * 0.039999999105930328369140625) * _2072) + _1663;
    }
    else
    {
        _1827 = _1661;
        _1829 = _1662;
        _1831 = _1663;
    }
    uint _1837 = _1529 + 9u;
    uint _1838 = _1837 + uint(cbMatDynParam._m0[0u].w);
    float _1853 = (cbInstanceData._m0[_1838].x * ((_541 * ((_491.x * cbMtdParam._m0[10u].x) - _420)) + _420)) + ((_1827 + ((isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0))) * _1027)) * cbPerFrame._m0[3u].x);
    float _1854 = (cbInstanceData._m0[_1838].y * ((_541 * ((_491.y * cbMtdParam._m0[10u].y) - _421)) + _421)) + ((_1829 + ((isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0))) * _1027)) * cbPerFrame._m0[3u].x);
    float _1855 = (cbInstanceData._m0[_1838].z * ((_541 * ((_491.z * cbMtdParam._m0[10u].z) - _422)) + _422)) + ((_1831 + ((isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0))) * _1027)) * cbPerFrame._m0[3u].x);
    float _1856 = isnan(0.0) ? _1853 : (isnan(_1853) ? 0.0 : max(_1853, 0.0));
    float _1857 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
    float _1858 = isnan(0.0) ? _1855 : (isnan(_1855) ? 0.0 : max(_1855, 0.0));
    uint _1859 = _1529 + 6u;
    float _1867 = _592 / cbSceneParam._m0[86u].x;
    float _1868 = _593 / cbSceneParam._m0[86u].y;
    vec4 _1882 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1867, _1868, (log2((isnan(cbSceneParam._m0[77u].w) ? _566 : (isnan(_566) ? cbSceneParam._m0[77u].w : min(_566, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1884 = _1882.x;
    float _1885 = _1882.y;
    float _1886 = _1882.z;
    float _1887 = _1882.w;
    float _1977;
    float _1979;
    float _1981;
    float _1983;
    if (_566 > cbSceneParam._m0[78u].w)
    {
        float _1940 = isnan(_566) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _566 : min(cbSceneParam._m0[80u].w, _566));
        float _1941 = _1940 / _566;
        float _1952 = _1941 * _267;
        float _1953 = _268 * _1941;
        float _1954 = (-0.0) - _1953;
        float _1955 = _1941 * _269;
        float _1957 = (cbSceneParam._m0[77u].w * _1954) / _1940;
        float _1958 = _1957 + cbSceneParam._m0[79u].w;
        float _1959 = cbSceneParam._m0[79u].w - _1953;
        float _1965 = sqrt(((_1952 * _1952) + (_1953 * _1953)) + (_1955 * _1955));
        float _1968 = (1.0 - (cbSceneParam._m0[77u].w / _1940)) * _1965;
        float _1973 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1975 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2183;
        if (abs((_1954 - _1957) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2183 = ((((_1958 > 0.0) ? exp2(_1973 * _1958) : (2.0 - exp2(_1975 * _1958))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1968;
        }
        else
        {
            float _2109 = 1.0 / cbSceneParam._m0[80u].x;
            float _2110 = isnan(_1959) ? _1958 : (isnan(_1958) ? _1959 : max(_1958, _1959));
            float _2111 = isnan(_1959) ? _1958 : (isnan(_1958) ? _1959 : min(_1958, _1959));
            float _2120 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : min(_2110, 0.0));
            float _2121 = isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : min(_2111, 0.0));
            _2183 = ((abs(_1965 / _1954) * cbSceneParam._m0[80u].y) * ((((_2120 - _2121) * 2.0) - ((exp2(_1973 * (isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0)))) - exp2(_1973 * (isnan(0.0) ? _2111 : (isnan(_2111) ? 0.0 : max(_2111, 0.0))))) * _2109)) - ((exp2(_1975 * _2120) - exp2(_1975 * _2121)) * _2109))) + (_1968 * cbSceneParam._m0[80u].z);
        }
        vec4 _2185 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1867, _1868, 1.0), 0.0);
        float _2194 = exp2((_2183 * (-1.44269502162933349609375)) * (1.0 - _2185.w));
        float _2195 = log2(_2194);
        float _2211 = log2(_1887);
        _1977 = (exp2(_2211 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2195 * cbSceneParam._m0[78u].x)) * _2185.x) / cbSceneParam._m0[78u].x)) + _1884;
        _1979 = (exp2(_2211 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2195 * cbSceneParam._m0[78u].y)) * _2185.y) / cbSceneParam._m0[78u].y)) + _1885;
        _1981 = (exp2(_2211 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2195 * cbSceneParam._m0[78u].z)) * _2185.z) / cbSceneParam._m0[78u].z)) + _1886;
        _1983 = _2194 * _1887;
    }
    else
    {
        _1977 = _1884;
        _1979 = _1885;
        _1981 = _1886;
        _1983 = _1887;
    }
    bool _2221;
    vec4 _1993;
    vec4 _2016;
    float _2018;
    float _2022;
    float _2023;
    float _2024;
    float _2025;
    bool _2036;
    for (;;)
    {
        _1993 = cbMatDynParam._m0[0u];
        float _1995 = roundEven(_1993.y);
        bool _1996 = _1995 == 3.0;
        float _1998 = log2(_1983);
        float _2005 = exp2(_1998 * cbSceneParam._m0[78u].x) * _1856;
        float _2006 = exp2(_1998 * cbSceneParam._m0[78u].y) * _1857;
        float _2007 = exp2(_1998 * cbSceneParam._m0[78u].z) * _1858;
        float _2014 = _580 + (-0.5);
        _2016 = cbMtdParam._m0[1u];
        _2018 = _2016.y * _2014;
        float _2021 = (_1995 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2022 = _2021 * (_1996 ? _2005 : (_2005 + (cbSceneParam._m0[72u].w * _1977)));
        _2023 = _2021 * (_1996 ? _2006 : (_2006 + (cbSceneParam._m0[72u].w * _1979)));
        _2024 = _2021 * (_1996 ? _2007 : (_2007 + (cbSceneParam._m0[72u].w * _1981)));
        _2025 = _2014 * 0.999000012874603271484375;
        _2036 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2036)
        {
            if ((cbInstanceData._m0[_1529 + 7u].x + _2025) < 0.5)
            {
                _2221 = true;
                break;
            }
        }
        uint _2144 = _1837 + uint(_1993.w);
        if ((cbInstanceData._m0[_2144].w < 1.0) && ((cbInstanceData._m0[_2144].w + _2025) < 0.5))
        {
            _2221 = true;
            break;
        }
        if ((_2018 + 1.0) < _2016.x)
        {
            _2221 = true;
            break;
        }
        _2221 = false;
        break;
    }
    float _2353;
    if (_2221)
    {
        discard_state = true;
        _2353 = 0.0;
    }
    else
    {
        _2353 = cbInstanceData._m0[_1859].w;
    }
    SV_Target.x = _2022;
    SV_Target.y = _2023;
    SV_Target.z = _2024;
    SV_Target.w = _2353;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1859].w;
    discard_exit();
}


