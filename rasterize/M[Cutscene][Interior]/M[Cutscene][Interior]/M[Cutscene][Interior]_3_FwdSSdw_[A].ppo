#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_8;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _927;
uint _2124;
uint _2125;
uint _2126;
uint _2369;
uint _2370;
uint _2371;
float _2642;
float _2643;
float _2644;
float _2645;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _190 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _191 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _192 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _197 = inversesqrt(dot(vec3(_190, _191, _192), vec3(_190, _191, _192)));
    float _204 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _211 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _259 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _269 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _259);
    float _270 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _259);
    float _271 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _259);
    vec4 _290 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _325 = cbMtdParam._m0[24u].x + _269;
    float _326 = cbMtdParam._m0[24u].y + _270;
    float _327 = cbMtdParam._m0[24u].z + _271;
    float _341 = (-0.0) - dot(vec3(_325, _326, _327), vec3(_197 * _190, _197 * _191, _197 * _192));
    float _342 = (-0.0) - dot(vec3(_325, _326, _327), vec3(_211 * TANGENT.x, _211 * TANGENT.y, _211 * TANGENT.z));
    float _343 = (-0.0) - dot(vec3(_325, _326, _327), vec3((-0.0) - (_204 * NORMAL.x), (-0.0) - (_204 * NORMAL.y), (-0.0) - (_204 * NORMAL.z)));
    float _347 = inversesqrt(dot(vec3(_341, _342, _343), vec3(_341, _342, _343)));
    float _350 = _347 * _343;
    float _351 = (_347 * _341) + (((_290.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _352 = (_347 * _342) + (((_290.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _353 = _351 * cbMtdParam._m0[20u].w;
    float _354 = _352 * cbMtdParam._m0[20u].z;
    float _355 = fract(TEXCOORD.x);
    float _356 = fract(TEXCOORD.y);
    float _362;
    if (_353 > 0.0)
    {
        _362 = (1.0 - _355) / _353;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_353 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _355) / _353;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _362 = frontier_phi_3_2_ladder;
    }
    float _370;
    if (_354 > 0.0)
    {
        _370 = (1.0 - _356) / _354;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_354 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _356) / _354;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _370 = frontier_phi_7_6_ladder;
    }
    bool _372 = _350 > 0.0;
    float _374 = _372 ? (cbMtdParam._m0[16u].x / _350) : 5000.0;
    float _375 = isnan(_370) ? _362 : (isnan(_362) ? _370 : min(_362, _370));
    float _376 = isnan(_374) ? _375 : (isnan(_375) ? _374 : min(_375, _374));
    float _380 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _381 = _355 + (-0.5);
    float _384 = _356 + (-0.5);
    float _387 = ((_376 * _350) + _380) / _380;
    vec4 _412 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_381 + (_376 * _353)) / _387) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_384 + (_376 * _354)) / _387) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _422 = cbMtdParam._m0[9u].x * _412.x;
    float _423 = cbMtdParam._m0[9u].y * _412.y;
    float _424 = cbMtdParam._m0[9u].z * _412.z;
    float _443 = _351 * cbMtdParam._m0[22u].w;
    float _444 = _352 * cbMtdParam._m0[22u].z;
    bool _445 = _443 > 0.0;
    float _450;
    if (_445)
    {
        _450 = (1.0 - _355) / _443;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_443 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _355) / _443;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _450 = frontier_phi_11_10_ladder;
    }
    bool _452 = _444 > 0.0;
    float _457;
    if (_452)
    {
        _457 = (1.0 - _356) / _444;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_444 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _356) / _444;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _457 = frontier_phi_15_14_ladder;
    }
    float _460 = _372 ? (cbMtdParam._m0[18u].x / _350) : 5000.0;
    float _461 = isnan(_457) ? _450 : (isnan(_450) ? _457 : min(_450, _457));
    float _462 = isnan(_460) ? _461 : (isnan(_461) ? _460 : min(_461, _460));
    float _466 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _470 = ((_462 * _350) + _466) / _466;
    float _475 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _477 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _493 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_381 + (_462 * _443)) / _470) + 0.5) + _475) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_384 + (_462 * _444)) / _470) + 0.5) + _477) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _505;
    if (_445)
    {
        _505 = (1.0 - _355) / _443;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_443 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _355) / _443;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _505 = frontier_phi_19_18_ladder;
    }
    float _511;
    if (_452)
    {
        _511 = (1.0 - _356) / _444;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_444 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _356) / _444;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _511 = frontier_phi_23_22_ladder;
    }
    float _513 = isnan(_511) ? _505 : (isnan(_505) ? _511 : min(_505, _511));
    float _514 = isnan(_460) ? _513 : (isnan(_513) ? _460 : min(_513, _460));
    float _521 = ((_514 * _350) + _466) / _466;
    vec4 _541 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_381 + (_514 * _443)) / _521) + 0.5) + _475) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_384 + (_514 * _444)) / _521) + 0.5) + _477) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _543 = _541.x;
    float _550 = (_543 * ((_493.x * cbMtdParam._m0[10u].x) - _422)) + _422;
    float _551 = (_543 * ((_493.y * cbMtdParam._m0[10u].y) - _423)) + _423;
    float _552 = (_543 * ((_493.z * cbMtdParam._m0[10u].z) - _424)) + _424;
    float _568 = _351 * cbMtdParam._m0[23u].y;
    float _569 = _352 * cbMtdParam._m0[23u].x;
    bool _570 = _568 > 0.0;
    float _575;
    if (_570)
    {
        _575 = (1.0 - _355) / _568;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_568 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _355) / _568;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _575 = frontier_phi_27_26_ladder;
    }
    bool _577 = _569 > 0.0;
    float _582;
    if (_577)
    {
        _582 = (1.0 - _356) / _569;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_569 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _356) / _569;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _582 = frontier_phi_31_30_ladder;
    }
    float _585 = _372 ? (cbMtdParam._m0[19u].w / _350) : 5000.0;
    float _586 = isnan(_582) ? _575 : (isnan(_575) ? _582 : min(_575, _582));
    float _587 = isnan(_585) ? _586 : (isnan(_586) ? _585 : min(_586, _585));
    float _591 = cbMtdParam._m0[19u].w * cbMtdParam._m0[16u].z;
    float _595 = ((_587 * _350) + _591) / _591;
    float _600 = cbMtdParam._m0[19u].z - cbMtdParam._m0[23u].z * trunc(cbMtdParam._m0[19u].z / cbMtdParam._m0[23u].z);
    float _602 = floor(cbMtdParam._m0[19u].z / cbMtdParam._m0[23u].z);
    vec4 _618 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * (((((_381 + (_587 * _568)) / _595) + 0.5) + _600) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * (((((_384 + (_587 * _569)) / _595) + 0.5) + _602) / cbMtdParam._m0[23u].w)) + cbTextureTilingScale._m0[9u].w));
    float _630;
    if (_570)
    {
        _630 = (1.0 - _355) / _568;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_568 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _355) / _568;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _630 = frontier_phi_35_34_ladder;
    }
    float _636;
    if (_577)
    {
        _636 = (1.0 - _356) / _569;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_569 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _356) / _569;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _636 = frontier_phi_39_38_ladder;
    }
    float _638 = isnan(_636) ? _630 : (isnan(_630) ? _636 : min(_630, _636));
    float _639 = isnan(_585) ? _638 : (isnan(_638) ? _585 : min(_638, _585));
    float _646 = ((_639 * _350) + _591) / _591;
    vec4 _666 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * (((((_381 + (_639 * _568)) / _646) + 0.5) + _600) / cbMtdParam._m0[23u].z)) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (((((_384 + (_639 * _569)) / _646) + 0.5) + _602) / cbMtdParam._m0[23u].w)) + cbTextureTilingScale._m0[10u].w));
    float _668 = _666.x;
    float _693 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _697 = inversesqrt(dot(vec3(_269, _270, _271), vec3(_269, _270, _271)));
    float _698 = _269 * _697;
    float _699 = _270 * _697;
    float _700 = _271 * _697;
    vec4 _705 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _707 = _705.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _776 = sqrt(((_269 * _269) + (_270 * _270)) + (_271 * _271));
        float _782 = (cbMatDynParam._m0[5u].x * _776) + cbMatDynParam._m0[5u].y;
        float _2704 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        float _783 = isnan(1.0) ? _2704 : (isnan(_2704) ? 1.0 : min(_2704, 1.0));
        float _787 = (cbMatDynParam._m0[5u].z * _776) + cbMatDynParam._m0[5u].w;
        float _2715 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2715 : (isnan(_2715) ? 1.0 : min(_2715, 1.0))) - _783)) + _783) < ((_707 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _719 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _720 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _729 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_719 * cbSceneParam._m0[86u].x, _720 * cbSceneParam._m0[86u].y));
    float _732 = _729.x * TEXCOORD_4.z;
    float _733 = (-0.0) - _698;
    float _734 = (-0.0) - _699;
    float _735 = (-0.0) - _700;
    float _757 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _761 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _765 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _926;
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    float _933;
    float _934;
    float _935;
    float _936;
    float _937;
    float _938;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _849 = (cbModelParam._m0[37u].x * ((((fma(_765, cbModelParam._m0[26u].z, fma(_761, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _757)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _851 = (cbModelParam._m0[37u].y * ((((fma(_765, cbModelParam._m0[27u].z, fma(_761, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _757)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _852 = (((((fma(_765, cbModelParam._m0[28u].z, fma(_761, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _757)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _855 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_849, _851, _852), 0.0);
        vec4 _862 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_849, _851, _852), 0.0);
        vec4 _869 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_849, _851, _852), 0.0);
        vec4 _876 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_849, _851, _852), 0.0);
        float _889 = exp2((_855.w + (-0.5)) * 20.0) * 2.0;
        float _899 = exp2((_862.w + (-0.5)) * 20.0) * 2.0;
        float _909 = exp2((_869.w + (-0.5)) * 20.0) * 2.0;
        float _919 = exp2((_876.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_876.x + (-0.5));
        float _921 = _919 * (_876.y + (-0.5));
        float _922 = _919 * (_876.z + (-0.5));
        _926 = _889 * (_855.z + (-0.5));
        _928 = _889 * (_855.y + (-0.5));
        _929 = _889 * (_855.x + (-0.5));
        _930 = _899 * (_862.z + (-0.5));
        _931 = _899 * (_862.y + (-0.5));
        _932 = _899 * (_862.x + (-0.5));
        _933 = _909 * (_869.z + (-0.5));
        _934 = _909 * (_869.y + (-0.5));
        _935 = _909 * (_869.x + (-0.5));
        _936 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        _937 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        _938 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    }
    else
    {
        _926 = _927;
        _928 = _927;
        _929 = _927;
        _930 = _927;
        _931 = _927;
        _932 = _927;
        _933 = _927;
        _934 = _927;
        _935 = _927;
        _936 = _927;
        _937 = _927;
        _938 = _927;
    }
    float _1069;
    float _1070;
    float _1071;
    float _1072;
    float _1073;
    float _1074;
    float _1075;
    float _1076;
    float _1077;
    float _1078;
    float _1079;
    float _1080;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _995 = (cbModelParam._m0[38u].x * ((((fma(_765, cbModelParam._m0[30u].z, fma(_761, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _757)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _996 = (cbModelParam._m0[38u].y * ((((fma(_765, cbModelParam._m0[31u].z, fma(_761, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _757)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _997 = (((((fma(_765, cbModelParam._m0[32u].z, fma(_761, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _757)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _999 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_995, _996, _997), 0.0);
        vec4 _1006 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_995, _996, _997), 0.0);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_995, _996, _997), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_995, _996, _997), 0.0);
        float _1032 = exp2((_999.w + (-0.5)) * 20.0) * 2.0;
        float _1042 = exp2((_1006.w + (-0.5)) * 20.0) * 2.0;
        float _1052 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1062 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1063 = _1062 * (_1020.x + (-0.5));
        float _1064 = _1062 * (_1020.y + (-0.5));
        float _1065 = _1062 * (_1020.z + (-0.5));
        _1069 = _1032 * (_999.z + (-0.5));
        _1070 = _1032 * (_999.y + (-0.5));
        _1071 = _1032 * (_999.x + (-0.5));
        _1072 = _1042 * (_1006.z + (-0.5));
        _1073 = _1042 * (_1006.y + (-0.5));
        _1074 = _1042 * (_1006.x + (-0.5));
        _1075 = _1052 * (_1013.z + (-0.5));
        _1076 = _1052 * (_1013.y + (-0.5));
        _1077 = _1052 * (_1013.x + (-0.5));
        _1078 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        _1079 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        _1080 = isnan(0.0) ? _1063 : (isnan(_1063) ? 0.0 : max(_1063, 0.0));
    }
    else
    {
        _1069 = _927;
        _1070 = _927;
        _1071 = _927;
        _1072 = _927;
        _1073 = _927;
        _1074 = _927;
        _1075 = _927;
        _1076 = _927;
        _1077 = _927;
        _1078 = _927;
        _1079 = _927;
        _1080 = _927;
    }
    float _1095 = _698 * (-0.5);
    float _1096 = _699 * (-0.5);
    float _1097 = _700 * (-0.5);
    float _1098 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_1071, _1074, _1077, _1080));
    float _1101 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_1070, _1073, _1076, _1079));
    float _1104 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_1069, _1072, _1075, _1078));
    float _1139;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1111 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_926, _930, _933, _936));
        float _1115 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_928, _931, _934, _937));
        float _1119 = dot(vec4(_1095, _1096, _1097, 1.0), vec4(_929, _932, _935, _938));
        float _1126 = dot(vec4(cbModelParam._m0[39u]), vec4(_1095, _1096, _1097, 1.0));
        _1139 = dot(vec3(isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0)), isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0)), isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1126) ? 0.0 : (isnan(0.0) ? _1126 : max(0.0, _1126))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1139 = 1.0;
    }
    float _1150;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1141 = dot(vec4(cbModelParam._m0[40u]), vec4(_1095, _1096, _1097, 1.0));
        _1150 = dot(vec3(isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)), isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0)), isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1141) ? 0.0 : (isnan(0.0) ? _1141 : max(0.0, _1141))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1150 = 1.0;
    }
    float _1154 = (_1150 * cbModelParam._m0[1u].x) + (_1139 * (1.0 - cbModelParam._m0[1u].x));
    float _1160 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1243;
    float _1245;
    float _1247;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1210 = fma(_765, cbModelParam._m0[13u].z, fma(_761, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _757)) + cbModelParam._m0[13u].w;
        float _1214 = fma(_765, cbModelParam._m0[14u].z, fma(_761, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _757)) + cbModelParam._m0[14u].w;
        float _1218 = fma(_765, cbModelParam._m0[15u].z, fma(_761, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _757)) + cbModelParam._m0[15u].w;
        float _1221 = fma(_735, cbModelParam._m0[13u].z, fma(_734, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _733));
        float _1224 = fma(_735, cbModelParam._m0[14u].z, fma(_734, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _733));
        float _1227 = fma(_735, cbModelParam._m0[15u].z, fma(_734, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _733));
        float _1253;
        if (_1221 > 0.0)
        {
            _1253 = abs((1.0 - _1210) / _1221);
        }
        else
        {
            float frontier_phi_57_55_ladder;
            if (_1221 < 0.0)
            {
                frontier_phi_57_55_ladder = abs((_1210 + 1.0) / _1221);
            }
            else
            {
                frontier_phi_57_55_ladder = 5000.0;
            }
            _1253 = frontier_phi_57_55_ladder;
        }
        float _1551;
        if (_1224 > 0.0)
        {
            _1551 = abs((1.0 - _1214) / _1224);
        }
        else
        {
            float frontier_phi_66_62_ladder;
            if (_1224 < 0.0)
            {
                frontier_phi_66_62_ladder = abs((_1214 + 1.0) / _1224);
            }
            else
            {
                frontier_phi_66_62_ladder = 5000.0;
            }
            _1551 = frontier_phi_66_62_ladder;
        }
        float _1856;
        if (_1227 > 0.0)
        {
            _1856 = abs((1.0 - _1218) / _1227);
        }
        else
        {
            float frontier_phi_80_73_ladder;
            if (_1227 < 0.0)
            {
                frontier_phi_80_73_ladder = abs((_1218 + 1.0) / _1227);
            }
            else
            {
                frontier_phi_80_73_ladder = 5000.0;
            }
            _1856 = frontier_phi_80_73_ladder;
        }
        float _1858 = isnan(_1551) ? _1253 : (isnan(_1253) ? _1551 : min(_1253, _1551));
        float _1859 = isnan(_1856) ? _1858 : (isnan(_1858) ? _1856 : min(_1858, _1856));
        float _1863 = (_1859 * _1221) + _1210;
        float _1864 = (_1859 * _1224) + _1214;
        float _1865 = (_1859 * _1227) + _1218;
        float _1866 = _1859 * 9.9999997473787516355514526367188e-05;
        float _1867 = (-1.0) - _1866;
        float _1869 = _1866 + 1.0;
        float frontier_phi_56_80_ladder;
        float frontier_phi_56_80_ladder_1;
        float frontier_phi_56_80_ladder_2;
        if ((_1865 > _1869) || ((_1865 < _1867) || ((_1864 > _1869) || ((_1864 < _1867) || ((_1863 < _1867) || (_1863 > _1869))))))
        {
            frontier_phi_56_80_ladder = 0.0;
            frontier_phi_56_80_ladder_1 = 0.0;
            frontier_phi_56_80_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1992 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1865, cbModelParam._m0[9u].z, fma(_1864, cbModelParam._m0[9u].y, _1863 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1865, cbModelParam._m0[10u].z, fma(_1864, cbModelParam._m0[10u].y, _1863 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1865, cbModelParam._m0[11u].z, fma(_1864, cbModelParam._m0[11u].y, _1863 * cbModelParam._m0[11u].x))), _1160);
            frontier_phi_56_80_ladder = _1992.z * cbModelParam._m0[1u].y;
            frontier_phi_56_80_ladder_1 = _1992.y * cbModelParam._m0[1u].y;
            frontier_phi_56_80_ladder_2 = _1992.x * cbModelParam._m0[1u].y;
        }
        _1243 = frontier_phi_56_80_ladder_2;
        _1245 = frontier_phi_56_80_ladder_1;
        _1247 = frontier_phi_56_80_ladder;
    }
    else
    {
        vec4 _1231 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_733, _734, _735), _1160);
        _1243 = _1231.x * cbModelParam._m0[1u].y;
        _1245 = _1231.y * cbModelParam._m0[1u].y;
        _1247 = _1231.z * cbModelParam._m0[1u].y;
    }
    float _1250 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1338;
    float _1340;
    float _1342;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1302 = fma(_765, cbModelParam._m0[21u].z, fma(_761, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _757)) + cbModelParam._m0[21u].w;
        float _1306 = fma(_765, cbModelParam._m0[22u].z, fma(_761, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _757)) + cbModelParam._m0[22u].w;
        float _1310 = fma(_765, cbModelParam._m0[23u].z, fma(_761, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _757)) + cbModelParam._m0[23u].w;
        float _1313 = fma(_735, cbModelParam._m0[21u].z, fma(_734, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _733));
        float _1316 = fma(_735, cbModelParam._m0[22u].z, fma(_734, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _733));
        float _1319 = fma(_735, cbModelParam._m0[23u].z, fma(_734, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _733));
        float _1556;
        if (_1313 > 0.0)
        {
            _1556 = abs((1.0 - _1302) / _1313);
        }
        else
        {
            float frontier_phi_68_64_ladder;
            if (_1313 < 0.0)
            {
                frontier_phi_68_64_ladder = abs((_1302 + 1.0) / _1313);
            }
            else
            {
                frontier_phi_68_64_ladder = 5000.0;
            }
            _1556 = frontier_phi_68_64_ladder;
        }
        float _1882;
        if (_1316 > 0.0)
        {
            _1882 = abs((1.0 - _1306) / _1316);
        }
        else
        {
            float frontier_phi_82_75_ladder;
            if (_1316 < 0.0)
            {
                frontier_phi_82_75_ladder = abs((_1306 + 1.0) / _1316);
            }
            else
            {
                frontier_phi_82_75_ladder = 5000.0;
            }
            _1882 = frontier_phi_82_75_ladder;
        }
        float _2054;
        if (_1319 > 0.0)
        {
            _2054 = abs((1.0 - _1310) / _1319);
        }
        else
        {
            float frontier_phi_100_93_ladder;
            if (_1319 < 0.0)
            {
                frontier_phi_100_93_ladder = abs((_1310 + 1.0) / _1319);
            }
            else
            {
                frontier_phi_100_93_ladder = 5000.0;
            }
            _2054 = frontier_phi_100_93_ladder;
        }
        float _2056 = isnan(_1882) ? _1556 : (isnan(_1556) ? _1882 : min(_1556, _1882));
        float _2057 = isnan(_2054) ? _2056 : (isnan(_2056) ? _2054 : min(_2056, _2054));
        float _2061 = (_2057 * _1313) + _1302;
        float _2062 = (_2057 * _1316) + _1306;
        float _2063 = (_2057 * _1319) + _1310;
        float _2064 = _2057 * 9.9999997473787516355514526367188e-05;
        float _2065 = (-1.0) - _2064;
        float _2067 = _2064 + 1.0;
        float frontier_phi_65_100_ladder;
        float frontier_phi_65_100_ladder_1;
        float frontier_phi_65_100_ladder_2;
        if ((_2063 > _2067) || ((_2063 < _2065) || ((_2062 > _2067) || ((_2062 < _2065) || ((_2061 < _2065) || (_2061 > _2067))))))
        {
            frontier_phi_65_100_ladder = 0.0;
            frontier_phi_65_100_ladder_1 = 0.0;
            frontier_phi_65_100_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2232 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2063, cbModelParam._m0[17u].z, fma(_2062, cbModelParam._m0[17u].y, _2061 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2063, cbModelParam._m0[18u].z, fma(_2062, cbModelParam._m0[18u].y, _2061 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2063, cbModelParam._m0[19u].z, fma(_2062, cbModelParam._m0[19u].y, _2061 * cbModelParam._m0[19u].x))), _1250);
            frontier_phi_65_100_ladder = _2232.z * cbModelParam._m0[1u].z;
            frontier_phi_65_100_ladder_1 = _2232.y * cbModelParam._m0[1u].z;
            frontier_phi_65_100_ladder_2 = _2232.x * cbModelParam._m0[1u].z;
        }
        _1338 = frontier_phi_65_100_ladder_2;
        _1340 = frontier_phi_65_100_ladder_1;
        _1342 = frontier_phi_65_100_ladder;
    }
    else
    {
        vec4 _1322 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_733, _734, _735), _1250);
        _1338 = _1322.x * cbModelParam._m0[1u].z;
        _1340 = _1322.y * cbModelParam._m0[1u].z;
        _1342 = _1322.z * cbModelParam._m0[1u].z;
    }
    float _1354 = _732 * 0.01200000010430812835693359375;
    float _1356 = _1354 * ((cbModelParam._m0[1u].w * (_1338 - _1243)) + _1243);
    float _1357 = _1354 * ((cbModelParam._m0[1u].w * (_1340 - _1245)) + _1245);
    float _1358 = _1354 * ((cbModelParam._m0[1u].w * (_1342 - _1247)) + _1247);
    float _1379 = fma(_1358, cbSceneParam._m0[89u].z, fma(_1357, cbSceneParam._m0[89u].y, _1356 * cbSceneParam._m0[89u].x));
    float _1382 = fma(_1358, cbSceneParam._m0[90u].z, fma(_1357, cbSceneParam._m0[90u].y, _1356 * cbSceneParam._m0[90u].x));
    float _1385 = fma(_1358, cbSceneParam._m0[91u].z, fma(_1357, cbSceneParam._m0[91u].y, _1356 * cbSceneParam._m0[91u].x));
    vec4 _1393 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_719, _720));
    float _1395 = _1393.w;
    uint _1411 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1415 = floatBitsToUint(cbInstanceData._m0[_1411 + 5u]);
    uint _1417 = _1415.x * 14u;
    uint _1418 = _1417 + 13u;
    float _1423 = _732 + (-1.0);
    float _1426 = (cbLight._m0[_1418].x * _1423) + 1.0;
    float _1427 = (cbLight._m0[_1418].y * _1423) + 1.0;
    uint _1428 = _1417 + 8u;
    float _1439 = cbLight._m0[_1417].x + _698;
    float _1440 = cbLight._m0[_1417].y + _699;
    float _1441 = cbLight._m0[_1417].z + _700;
    float _1445 = inversesqrt(dot(vec3(_1439, _1440, _1441), vec3(_1439, _1440, _1441)));
    float _1449 = dot(vec3(0.0), vec3(cbLight._m0[_1417].xyz));
    float _2841 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
    float _1452 = isnan(1.0) ? _2841 : (isnan(_2841) ? 1.0 : min(_2841, 1.0));
    float _1453 = dot(vec3(0.0), vec3(_698, _699, _700));
    float _2852 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
    float _1456 = isnan(1.0) ? _2852 : (isnan(_2852) ? 1.0 : min(_2852, 1.0));
    float _1457 = dot(vec3(cbLight._m0[_1417].xyz), vec3(_1439 * _1445, _1440 * _1445, _1441 * _1445));
    float _2863 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _1468 = (exp2(log2(1.0 - (isnan(1.0) ? _2863 : (isnan(_2863) ? 1.0 : min(_2863, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1474 = (0.5 / ((_1452 + 9.9999999392252902907785028219223e-09) + _1456)) * _1452;
    float _2874 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    float _1476 = (isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0))) * 0.31831014156341552734375;
    float _1478 = isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0));
    uint _1491 = _1417 + 9u;
    uint _1497 = _1417 | 1u;
    float _1503 = cbLight._m0[_1497].x + _698;
    float _1504 = cbLight._m0[_1497].y + _699;
    float _1505 = cbLight._m0[_1497].z + _700;
    float _1509 = inversesqrt(dot(vec3(_1503, _1504, _1505), vec3(_1503, _1504, _1505)));
    float _1513 = dot(vec3(0.0), vec3(cbLight._m0[_1497].xyz));
    float _2890 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
    float _1516 = isnan(1.0) ? _2890 : (isnan(_2890) ? 1.0 : min(_2890, 1.0));
    float _1517 = dot(vec3(cbLight._m0[_1497].xyz), vec3(_1503 * _1509, _1504 * _1509, _1505 * _1509));
    float _2901 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _1526 = (exp2(log2(1.0 - (isnan(1.0) ? _2901 : (isnan(_2901) ? 1.0 : min(_2901, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1530 = (0.5 / ((_1516 + 9.9999999392252902907785028219223e-09) + _1456)) * _1516;
    float _2912 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    float _1532 = (isnan(1.0) ? _2912 : (isnan(_2912) ? 1.0 : min(_2912, 1.0))) * 0.31831014156341552734375;
    float _1533 = isnan(1.0) ? _1427 : (isnan(_1427) ? 1.0 : min(_1427, 1.0));
    float _1543 = (((_1526 * cbLight._m0[_1491].x) * _1532) * _1533) + ((((cbLight._m0[_1428].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1395))) * _1468) * _1476) * _1478);
    float _1544 = (((_1526 * cbLight._m0[_1491].y) * _1532) * _1533) + ((((cbLight._m0[_1428].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1395))) * _1468) * _1476) * _1478);
    float _1545 = (((_1526 * cbLight._m0[_1491].z) * _1532) * _1533) + ((((cbLight._m0[_1428].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1395))) * _1468) * _1476) * _1478);
    float _1662;
    float _1664;
    float _1666;
    if (_1415.y == 0u)
    {
        float _1601 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1602 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1601;
        float _1603 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1601;
        float _1604 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1601;
        uvec4 _1616 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1617 = _1616.x;
        uint _1628 = uint((float(_1616.y) * floor(float(uint(cbSceneParam._m0[85u].y * _720) / _1617))) + floor(float(uint(cbSceneParam._m0[85u].x * _719) / _1617)));
        float _1638 = (log2(_1604 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1639 = isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0));
        uint _1642 = uint(isnan(14.0) ? _1639 : (isnan(_1639) ? 14.0 : min(_1639, 14.0)));
        uvec4 _1647 = texelFetch(g_lightClusterGridBuffer, int(((_1642 << 2u) + (_1628 << 6u)) >> 2u));
        uint _1648 = _1647.x;
        uint _1649 = _1616.z;
        float _1739;
        float _1741;
        float _1743;
        if (((((1u << ((_1649 >> 4u) & 15u)) + 4294967295u) & _1648) == 0u) || ((_1649 & 240u) == 0u))
        {
            _1739 = 0.0;
            _1741 = 0.0;
            _1743 = 0.0;
        }
        else
        {
            float _1740;
            float _1742;
            float _1744;
            float _1907 = 0.0;
            float _1908 = 0.0;
            float _1909 = 0.0;
            uint _1910 = 0u;
            uint _1919;
            bool _1920;
            for (;;)
            {
                _1919 = texelFetch(g_lightClassification, int((((_1642 << 5u) + (_1628 << 9u)) + (_1910 << 2u)) >> 2u)).x;
                _1920 = _1919 == 0u;
                float frontier_phi_95_pred;
                float frontier_phi_95_pred_1;
                float frontier_phi_95_pred_2;
                if (_1920)
                {
                    frontier_phi_95_pred = _1909;
                    frontier_phi_95_pred_1 = _1908;
                    frontier_phi_95_pred_2 = _1907;
                }
                else
                {
                    float _2094;
                    float _2095;
                    float _2096;
                    uint _2097;
                    _2094 = _1907;
                    _2095 = _1908;
                    _2096 = _1909;
                    _2097 = _1919;
                    float _2001;
                    float _2002;
                    float _2003;
                    for (;;)
                    {
                        uint _2101 = uint(findLSB(_2097)) + (_1910 << 5u);
                        uint _2098 = (_2097 + 4294967295u) & _2097;
                        uint _2103 = _2101 * 48u;
                        vec4 _2117 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2103)).x, texelFetch(g_PointLightRenderingBuffer, int(_2103 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2103 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2103 + 3u)).x));
                        uint _2134 = (_2101 * 48u) + 8u;
                        vec3 _2145 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2134)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 2u)).x));
                        float _2149 = _2117.x - _1602;
                        float _2150 = _2117.y - _1603;
                        float _2151 = _2117.z - _1604;
                        float _2152 = dot(vec3(_2149, _2150, _2151), vec3(_2149, _2150, _2151));
                        float _2155 = inversesqrt(_2152);
                        float _2164 = 1.0 - (_2152 * _2117.w);
                        float _2938 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
                        float _2166 = sqrt(_2152) * uintBitsToFloat(uvec4(_2124, _2125, _2126, texelFetch(g_PointLightRenderingBuffer, int(((_2101 * 48u) + 4u) + 3u)).x)).w;
                        float _2169 = 1.39999997615814208984375 / (_2166 + 1.39999997615814208984375);
                        float _2170 = _2169 * _2169;
                        float _2173 = ((1.0 - _2170) * dot(vec3(0.0), vec3(_2155 * _2149, _2155 * _2150, _2155 * _2151))) + _2170;
                        float _2175 = (-0.0) - _1602;
                        float _2176 = (-0.0) - _1603;
                        float _2177 = (-0.0) - _1604;
                        float _2181 = inversesqrt(dot(vec3(_2175, _2176, _2177), vec3(_2175, _2176, _2177)));
                        float _2185 = dot(vec3(0.0), vec3(_2181 * _2175, _2181 * _2176, _2181 * _2177));
                        float _2949 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
                        float _2960 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
                        float _2189 = isnan(1.0) ? _2960 : (isnan(_2960) ? 1.0 : min(_2960, 1.0));
                        float _2193 = (0.5 / (((isnan(1.0) ? _2949 : (isnan(_2949) ? 1.0 : min(_2949, 1.0))) + 9.9999999392252902907785028219223e-09) + _2189)) * _2189;
                        float _2971 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
                        float _2202 = (((isnan(1.0) ? _2971 : (isnan(_2971) ? 1.0 : min(_2971, 1.0))) * 3.1415927410125732421875) / (((_2166 * _2166) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0)));
                        _2001 = (_2202 * _2145.x) + _2094;
                        _2002 = (_2202 * _2145.y) + _2095;
                        _2003 = (_2202 * _2145.z) + _2096;
                        if (_2098 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2094 = _2001;
                            _2095 = _2002;
                            _2096 = _2003;
                            _2097 = _2098;
                        }
                    }
                    frontier_phi_95_pred = _2003;
                    frontier_phi_95_pred_1 = _2002;
                    frontier_phi_95_pred_2 = _2001;
                }
                _1744 = frontier_phi_95_pred;
                _1742 = frontier_phi_95_pred_1;
                _1740 = frontier_phi_95_pred_2;
                uint _1911 = _1910 + 1u;
                if (_1911 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1907 = _1740;
                    _1908 = _1742;
                    _1909 = _1744;
                    _1910 = _1911;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1739 = _1740;
            _1741 = _1742;
            _1743 = _1744;
        }
        uvec4 _1747 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1748 = _1747.z;
        uint _1750 = (_1748 >> 8u) & 15u;
        float _1887;
        float _1889;
        float _1891;
        if (((4294967295u << _1750) & _1648) == 0u)
        {
            _1887 = _1739;
            _1889 = _1741;
            _1891 = _1743;
        }
        else
        {
            float _1903 = inversesqrt(dot(vec3(_1602, _1603, _1604), vec3(_1602, _1603, _1604)));
            float frontier_phi_84_85_ladder;
            float frontier_phi_84_85_ladder_1;
            float frontier_phi_84_85_ladder_2;
            if (_1750 < ((_1748 >> 12u) & 15u))
            {
                float _1888;
                float _1890;
                float _1892;
                float _2080 = _1739;
                float _2081 = _1741;
                float _2082 = _1743;
                uint _2083 = _1750;
                uint _2092;
                bool _2093;
                for (;;)
                {
                    _2092 = texelFetch(g_lightClassification, int((((_1642 << 5u) + (_1628 << 9u)) + (_2083 << 2u)) >> 2u)).x;
                    _2093 = _2092 == 0u;
                    float frontier_phi_109_pred;
                    float frontier_phi_109_pred_1;
                    float frontier_phi_109_pred_2;
                    if (_2093)
                    {
                        frontier_phi_109_pred = _2082;
                        frontier_phi_109_pred_1 = _2081;
                        frontier_phi_109_pred_2 = _2080;
                    }
                    else
                    {
                        float _2237;
                        float _2238;
                        float _2239;
                        float _2458;
                        float _2459;
                        float _2460;
                        float _2247 = _2080;
                        float _2248 = _2081;
                        float _2249 = _2082;
                        uint _2250 = _2092;
                        uint _2251;
                        uint _2261;
                        vec4 _2276;
                        float _2277;
                        vec3 _2289;
                        vec4 _2304;
                        vec4 _2319;
                        float _2365;
                        bool _2366;
                        for (;;)
                        {
                            _2261 = ((_2083 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2250));
                            _2251 = (_2250 + 4294967295u) & _2250;
                            uint _2263 = _2261 * 40u;
                            _2276 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2263)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2263 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2263 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2263 + 3u)).x));
                            _2277 = _2276.w;
                            uint _2279 = (_2261 * 40u) + 8u;
                            _2289 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2279)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2279 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2279 + 2u)).x));
                            uint _2291 = (_2261 * 40u) + 16u;
                            _2304 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2291)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2291 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2291 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2291 + 3u)).x));
                            uint _2306 = (_2261 * 40u) + 20u;
                            _2319 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2306)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 3u)).x));
                            uint _2321 = (_2261 * 40u) + 24u;
                            vec4 _2334 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2321)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 3u)).x));
                            uint _2340 = (_2261 * 40u) + 28u;
                            vec4 _2353 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2340)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2340 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2340 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2340 + 3u)).x));
                            _2365 = fma(_1604, _2353.z, fma(_1603, _2353.y, _2353.x * _1602)) + _2353.w;
                            _2366 = !((fma(_1604, _2334.z, fma(_1603, _2334.y, _2334.x * _1602)) + _2334.w) <= 0.0);
                            float frontier_phi_115_pred;
                            float frontier_phi_115_pred_1;
                            float frontier_phi_115_pred_2;
                            if (_2366)
                            {
                                float _2400 = _2276.x - _1602;
                                float _2401 = _2276.y - _1603;
                                float _2402 = _2276.z - _1604;
                                float _2403 = dot(vec3(_2400, _2401, _2402), vec3(_2400, _2401, _2402));
                                float _2406 = inversesqrt(_2403);
                                float _2413 = 1.0 - (_2403 / (_2277 * _2277));
                                float _2982 = isnan(0.0) ? _2413 : (isnan(_2413) ? 0.0 : max(_2413, 0.0));
                                float _2415 = sqrt(_2403) * uintBitsToFloat(uvec4(_2369, _2370, _2371, texelFetch(g_SpotLightRenderingBuffer, int(((_2261 * 40u) + 4u) + 3u)).x)).w;
                                float _2417 = 1.39999997615814208984375 / (_2415 + 1.39999997615814208984375);
                                float _2418 = _2417 * _2417;
                                float _2421 = (fma(_1604, _2304.z, fma(_1603, _2304.y, _2304.x * _1602)) + _2304.w) / _2365;
                                float _2422 = (fma(_1604, _2319.z, fma(_1603, _2319.y, _2319.x * _1602)) + _2319.w) / _2365;
                                float _2426 = 1.0 - dot(vec2(_2421, _2422), vec2(_2421, _2422));
                                float _2993 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
                                float _2434 = dot(vec3(0.0), vec3((-0.0) - (_1602 * _1903), (-0.0) - (_1603 * _1903), (-0.0) - (_1604 * _1903)));
                                float _3004 = isnan(0.0) ? _2434 : (isnan(_2434) ? 0.0 : max(_2434, 0.0));
                                float _2442 = ((1.0 - _2418) * dot(vec3(0.0), vec3(_2406 * _2400, _2406 * _2401, _2406 * _2402))) + _2418;
                                float _3015 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
                                float _2443 = isnan(1.0) ? _3015 : (isnan(_3015) ? 1.0 : min(_3015, 1.0));
                                float _2447 = (0.5 / (((isnan(1.0) ? _3004 : (isnan(_3004) ? 1.0 : min(_3004, 1.0))) + 9.9999999392252902907785028219223e-09) + _2443)) * _2443;
                                float _3026 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
                                float _2454 = ((isnan(1.0) ? _2993 : (isnan(_2993) ? 1.0 : min(_2993, 1.0))) * (isnan(1.0) ? _2982 : (isnan(_2982) ? 1.0 : min(_2982, 1.0)))) * (((isnan(1.0) ? _3026 : (isnan(_3026) ? 1.0 : min(_3026, 1.0))) * 3.1415927410125732421875) / (((_2415 * _2415) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_115_pred = _2454 * _2289.y;
                                frontier_phi_115_pred_1 = _2454 * _2289.x;
                                frontier_phi_115_pred_2 = _2454 * _2289.z;
                            }
                            else
                            {
                                frontier_phi_115_pred = 0.0;
                                frontier_phi_115_pred_1 = 0.0;
                                frontier_phi_115_pred_2 = 0.0;
                            }
                            _2459 = frontier_phi_115_pred;
                            _2458 = frontier_phi_115_pred_1;
                            _2460 = frontier_phi_115_pred_2;
                            _2237 = _2458 + _2247;
                            _2238 = _2459 + _2248;
                            _2239 = _2460 + _2249;
                            if (_2251 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2247 = _2237;
                                _2248 = _2238;
                                _2249 = _2239;
                                _2250 = _2251;
                                continue;
                            }
                        }
                        frontier_phi_109_pred = _2239;
                        frontier_phi_109_pred_1 = _2238;
                        frontier_phi_109_pred_2 = _2237;
                    }
                    _1892 = frontier_phi_109_pred;
                    _1890 = frontier_phi_109_pred_1;
                    _1888 = frontier_phi_109_pred_2;
                    uint _2084 = _2083 + 1u;
                    if (_2084 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2080 = _1888;
                        _2081 = _1890;
                        _2082 = _1892;
                        _2083 = _2084;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_84_85_ladder = _1892;
                frontier_phi_84_85_ladder_1 = _1890;
                frontier_phi_84_85_ladder_2 = _1888;
            }
            else
            {
                frontier_phi_84_85_ladder = _1743;
                frontier_phi_84_85_ladder_1 = _1741;
                frontier_phi_84_85_ladder_2 = _1739;
            }
            _1887 = frontier_phi_84_85_ladder_2;
            _1889 = frontier_phi_84_85_ladder_1;
            _1891 = frontier_phi_84_85_ladder;
        }
        float _1896 = isnan(1.0) ? _732 : (isnan(_732) ? 1.0 : min(_732, 1.0));
        _1662 = ((_1887 * 0.039999999105930328369140625) * _1896) + _1543;
        _1664 = ((_1889 * 0.039999999105930328369140625) * _1896) + _1544;
        _1666 = ((_1891 * 0.039999999105930328369140625) * _1896) + _1545;
    }
    else
    {
        _1662 = _1543;
        _1664 = _1544;
        _1666 = _1545;
    }
    uint _1672 = _1411 + 9u;
    uint _1673 = _1672 + uint(cbMatDynParam._m0[0u].w);
    float _1688 = (cbInstanceData._m0[_1673].x * ((_668 * ((_618.x * cbMtdParam._m0[14u].x) - _550)) + _550)) + ((_1662 + ((isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0))) * _1154)) * cbPerFrame._m0[3u].x);
    float _1689 = (cbInstanceData._m0[_1673].y * ((_668 * ((_618.y * cbMtdParam._m0[14u].y) - _551)) + _551)) + ((_1664 + ((isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0))) * _1154)) * cbPerFrame._m0[3u].x);
    float _1690 = (cbInstanceData._m0[_1673].z * ((_668 * ((_618.z * cbMtdParam._m0[14u].z) - _552)) + _552)) + ((_1666 + ((isnan(0.0) ? _1385 : (isnan(_1385) ? 0.0 : max(_1385, 0.0))) * _1154)) * cbPerFrame._m0[3u].x);
    float _1691 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
    float _1692 = isnan(0.0) ? _1689 : (isnan(_1689) ? 0.0 : max(_1689, 0.0));
    float _1693 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
    uint _1694 = _1411 + 6u;
    float _1702 = _719 / cbSceneParam._m0[86u].x;
    float _1703 = _720 / cbSceneParam._m0[86u].y;
    vec4 _1717 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1702, _1703, (log2((isnan(cbSceneParam._m0[77u].w) ? _693 : (isnan(_693) ? cbSceneParam._m0[77u].w : min(_693, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1719 = _1717.x;
    float _1720 = _1717.y;
    float _1721 = _1717.z;
    float _1722 = _1717.w;
    float _1796;
    float _1798;
    float _1800;
    float _1802;
    if (_693 > cbSceneParam._m0[78u].w)
    {
        float _1758 = isnan(_693) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _693 : min(cbSceneParam._m0[80u].w, _693));
        float _1759 = _1758 / _693;
        float _1770 = _1759 * _269;
        float _1771 = _270 * _1759;
        float _1772 = (-0.0) - _1771;
        float _1773 = _1759 * _271;
        float _1775 = (cbSceneParam._m0[77u].w * _1772) / _1758;
        float _1776 = _1775 + cbSceneParam._m0[79u].w;
        float _1777 = cbSceneParam._m0[79u].w - _1771;
        float _1783 = sqrt(((_1770 * _1770) + (_1771 * _1771)) + (_1773 * _1773));
        float _1786 = (1.0 - (cbSceneParam._m0[77u].w / _1758)) * _1783;
        float _1792 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1794 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2011;
        if (abs((_1772 - _1775) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2011 = ((((_1776 > 0.0) ? exp2(_1792 * _1776) : (2.0 - exp2(_1794 * _1776))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1786;
        }
        else
        {
            float _1933 = 1.0 / cbSceneParam._m0[80u].x;
            float _1934 = isnan(_1777) ? _1776 : (isnan(_1776) ? _1777 : max(_1776, _1777));
            float _1935 = isnan(_1777) ? _1776 : (isnan(_1776) ? _1777 : min(_1776, _1777));
            float _1944 = isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : min(_1934, 0.0));
            float _1945 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : min(_1935, 0.0));
            _2011 = ((abs(_1783 / _1772) * cbSceneParam._m0[80u].y) * ((((_1944 - _1945) * 2.0) - ((exp2(_1792 * (isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0)))) - exp2(_1792 * (isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0))))) * _1933)) - ((exp2(_1794 * _1944) - exp2(_1794 * _1945)) * _1933))) + (_1786 * cbSceneParam._m0[80u].z);
        }
        vec4 _2013 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1702, _1703, 1.0), 0.0);
        float _2022 = exp2((_2011 * (-1.44269502162933349609375)) * (1.0 - _2013.w));
        float _2023 = log2(_2022);
        float _2039 = log2(_1722);
        _1796 = (exp2(_2039 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2023 * cbSceneParam._m0[78u].x)) * _2013.x) / cbSceneParam._m0[78u].x)) + _1719;
        _1798 = (exp2(_2039 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2023 * cbSceneParam._m0[78u].y)) * _2013.y) / cbSceneParam._m0[78u].y)) + _1720;
        _1800 = (exp2(_2039 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2023 * cbSceneParam._m0[78u].z)) * _2013.z) / cbSceneParam._m0[78u].z)) + _1721;
        _1802 = _2022 * _1722;
    }
    else
    {
        _1796 = _1719;
        _1798 = _1720;
        _1800 = _1721;
        _1802 = _1722;
    }
    bool _2049;
    vec4 _1812;
    vec4 _1835;
    float _1837;
    float _1841;
    float _1842;
    float _1843;
    float _1844;
    bool _1855;
    for (;;)
    {
        _1812 = cbMatDynParam._m0[0u];
        float _1814 = roundEven(_1812.y);
        bool _1815 = _1814 == 3.0;
        float _1817 = log2(_1802);
        float _1824 = exp2(_1817 * cbSceneParam._m0[78u].x) * _1691;
        float _1825 = exp2(_1817 * cbSceneParam._m0[78u].y) * _1692;
        float _1826 = exp2(_1817 * cbSceneParam._m0[78u].z) * _1693;
        float _1833 = _707 + (-0.5);
        _1835 = cbMtdParam._m0[1u];
        _1837 = _1835.y * _1833;
        float _1840 = (_1814 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1841 = _1840 * (_1815 ? _1824 : (_1824 + (cbSceneParam._m0[72u].w * _1796)));
        _1842 = _1840 * (_1815 ? _1825 : (_1825 + (cbSceneParam._m0[72u].w * _1798)));
        _1843 = _1840 * (_1815 ? _1826 : (_1826 + (cbSceneParam._m0[72u].w * _1800)));
        _1844 = _1833 * 0.999000012874603271484375;
        _1855 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1855)
        {
            if ((cbInstanceData._m0[_1411 + 7u].x + _1844) < 0.5)
            {
                _2049 = true;
                break;
            }
        }
        uint _1968 = _1672 + uint(_1812.w);
        if ((cbInstanceData._m0[_1968].w < 1.0) && ((cbInstanceData._m0[_1968].w + _1844) < 0.5))
        {
            _2049 = true;
            break;
        }
        if ((_1837 + 1.0) < _1835.x)
        {
            _2049 = true;
            break;
        }
        _2049 = false;
        break;
    }
    float _2207;
    if (_2049)
    {
        discard_state = true;
        _2207 = 0.0;
    }
    else
    {
        _2207 = cbInstanceData._m0[_1694].w;
    }
    SV_Target.x = _1841;
    SV_Target.y = _1842;
    SV_Target.z = _1843;
    SV_Target.w = _2207;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1694].w;
    discard_exit();
}


