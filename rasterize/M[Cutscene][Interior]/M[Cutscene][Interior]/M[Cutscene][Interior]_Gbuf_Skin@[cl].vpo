#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 9) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    float _234 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _271 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _272 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _282 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _284 = texelFetch(g_InstanceIndexBuffer, int(_282));
    uint _285 = _284.x;
    precise float _286 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _291 = isnan(_286) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _286 : max(0.001000000047497451305389404296875, _286));
    precise float _293 = BLENDWEIGHT.x / _291;
    precise float _294 = BLENDWEIGHT.y / _291;
    precise float _295 = BLENDWEIGHT.z / _291;
    precise float _296 = BLENDWEIGHT.w / _291;
    uvec4 _303 = floatBitsToUint(cbInstanceData._m0[(_285 * 13u) + 4u]);
    uint _304 = _303.x;
    uint _306 = (_304 + uint(float(BLENDINDICES.x))) * 3u;
    uint _313 = _306 + 1u;
    uint _320 = _306 + 2u;
    precise float _327 = _293 * cbObjMatrix._m0[_306].x;
    precise float _328 = _293 * cbObjMatrix._m0[_313].x;
    precise float _329 = _293 * cbObjMatrix._m0[_320].x;
    precise float _330 = _293 * cbObjMatrix._m0[_306].y;
    precise float _331 = _293 * cbObjMatrix._m0[_313].y;
    precise float _332 = _293 * cbObjMatrix._m0[_320].y;
    precise float _333 = _293 * cbObjMatrix._m0[_306].z;
    precise float _334 = _293 * cbObjMatrix._m0[_313].z;
    precise float _335 = _293 * cbObjMatrix._m0[_320].z;
    precise float _336 = _293 * cbObjMatrix._m0[_306].w;
    precise float _337 = _293 * cbObjMatrix._m0[_313].w;
    precise float _338 = _293 * cbObjMatrix._m0[_320].w;
    uint _341 = (_304 + uint(float(BLENDINDICES.y))) * 3u;
    uint _348 = _341 + 1u;
    uint _355 = _341 + 2u;
    precise float _362 = _294 * cbObjMatrix._m0[_341].x;
    precise float _363 = _294 * cbObjMatrix._m0[_348].x;
    precise float _364 = _294 * cbObjMatrix._m0[_355].x;
    precise float _365 = _294 * cbObjMatrix._m0[_341].y;
    precise float _366 = _294 * cbObjMatrix._m0[_348].y;
    precise float _367 = _294 * cbObjMatrix._m0[_355].y;
    precise float _368 = _294 * cbObjMatrix._m0[_341].z;
    precise float _369 = _294 * cbObjMatrix._m0[_348].z;
    precise float _370 = _294 * cbObjMatrix._m0[_355].z;
    precise float _371 = _294 * cbObjMatrix._m0[_341].w;
    precise float _372 = _294 * cbObjMatrix._m0[_348].w;
    precise float _373 = _294 * cbObjMatrix._m0[_355].w;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    uint _388 = (_304 + uint(float(BLENDINDICES.z))) * 3u;
    uint _395 = _388 + 1u;
    uint _402 = _388 + 2u;
    precise float _409 = _295 * cbObjMatrix._m0[_388].x;
    precise float _410 = _295 * cbObjMatrix._m0[_395].x;
    precise float _411 = _295 * cbObjMatrix._m0[_402].x;
    precise float _412 = _295 * cbObjMatrix._m0[_388].y;
    precise float _413 = _295 * cbObjMatrix._m0[_395].y;
    precise float _414 = _295 * cbObjMatrix._m0[_402].y;
    precise float _415 = _295 * cbObjMatrix._m0[_388].z;
    precise float _416 = _295 * cbObjMatrix._m0[_395].z;
    precise float _417 = _295 * cbObjMatrix._m0[_402].z;
    precise float _418 = _295 * cbObjMatrix._m0[_388].w;
    precise float _419 = _295 * cbObjMatrix._m0[_395].w;
    precise float _420 = _295 * cbObjMatrix._m0[_402].w;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    uint _435 = (_304 + uint(float(BLENDINDICES.w))) * 3u;
    uint _442 = _435 + 1u;
    uint _449 = _435 + 2u;
    precise float _456 = _296 * cbObjMatrix._m0[_435].x;
    precise float _457 = _296 * cbObjMatrix._m0[_442].x;
    precise float _458 = _296 * cbObjMatrix._m0[_449].x;
    precise float _459 = _296 * cbObjMatrix._m0[_435].y;
    precise float _460 = _296 * cbObjMatrix._m0[_442].y;
    precise float _461 = _296 * cbObjMatrix._m0[_449].y;
    precise float _462 = _296 * cbObjMatrix._m0[_435].z;
    precise float _463 = _296 * cbObjMatrix._m0[_442].z;
    precise float _464 = _296 * cbObjMatrix._m0[_449].z;
    precise float _465 = _296 * cbObjMatrix._m0[_435].w;
    precise float _466 = _296 * cbObjMatrix._m0[_442].w;
    precise float _467 = _296 * cbObjMatrix._m0[_449].w;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = POSITION.x * _468;
    precise float _481 = POSITION.y * _471;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.z * _474;
    precise float _484 = _483 + _482;
    precise float _485 = 1.0 * _477;
    precise float _486 = _485 + _484;
    precise float _487 = POSITION.x * _469;
    precise float _488 = POSITION.y * _472;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.z * _475;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * _478;
    precise float _493 = _492 + _491;
    precise float _494 = POSITION.x * _470;
    precise float _495 = POSITION.y * _473;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.z * _476;
    precise float _498 = _497 + _496;
    precise float _499 = 1.0 * _479;
    precise float _500 = _499 + _498;
    precise float _543 = _486 - cbSceneParam._m0[3u].x;
    precise float _544 = _493 - cbSceneParam._m0[3u].y;
    precise float _545 = _500 - cbSceneParam._m0[3u].z;
    precise float _573 = _543 * cbSceneParam._m0[24u].x;
    precise float _574 = _544 * cbSceneParam._m0[24u].y;
    precise float _575 = _574 + _573;
    precise float _576 = _545 * cbSceneParam._m0[24u].z;
    precise float _577 = _576 + _575;
    precise float _578 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _579 = _578 + _577;
    precise float _580 = _543 * cbSceneParam._m0[25u].x;
    precise float _581 = _544 * cbSceneParam._m0[25u].y;
    precise float _582 = _581 + _580;
    precise float _583 = _545 * cbSceneParam._m0[25u].z;
    precise float _584 = _583 + _582;
    precise float _585 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _586 = _585 + _584;
    precise float _587 = _543 * cbSceneParam._m0[26u].x;
    precise float _588 = _544 * cbSceneParam._m0[26u].y;
    precise float _589 = _588 + _587;
    precise float _590 = _545 * cbSceneParam._m0[26u].z;
    precise float _591 = _590 + _589;
    precise float _592 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _593 = _592 + _591;
    precise float _594 = _543 * cbSceneParam._m0[27u].x;
    precise float _595 = _544 * cbSceneParam._m0[27u].y;
    precise float _596 = _595 + _594;
    precise float _597 = _545 * cbSceneParam._m0[27u].z;
    precise float _598 = _597 + _596;
    precise float _599 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _600 = _599 + _598;
    gl_Position.x = _579;
    gl_Position.y = _586;
    gl_Position.z = _593;
    gl_Position.w = _600;
    POSITION_1.x = _579;
    POSITION_1.y = _586;
    POSITION_1.z = _593;
    POSITION_1.w = _600;
    NORMAL_1.x = fma(_237, _474, fma(_236, _471, _468 * _234));
    NORMAL_1.y = fma(_237, _475, fma(_236, _472, _469 * _234));
    NORMAL_1.z = fma(_237, _476, fma(_236, _473, _470 * _234));
    NORMAL_1.w = float(_285);
    TANGENT_1.x = fma(_248, _474, fma(_247, _471, _468 * _246));
    TANGENT_1.y = fma(_248, _475, fma(_247, _472, _469 * _246));
    TANGENT_1.z = fma(_248, _476, fma(_247, _473, _470 * _246));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_260, _474, fma(_259, _471, _468 * _258));
    TANGENT_2_1.y = fma(_260, _475, fma(_259, _472, _469 * _258));
    TANGENT_2_1.z = fma(_260, _476, fma(_259, _473, _470 * _258));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_272, _474, fma(_271, _471, _468 * _270));
    TANGENT_4_1.y = fma(_272, _475, fma(_271, _472, _469 * _270));
    TANGENT_4_1.z = fma(_272, _476, fma(_271, _473, _470 * _270));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
}


