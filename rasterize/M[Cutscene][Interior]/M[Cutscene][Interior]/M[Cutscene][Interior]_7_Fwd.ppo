#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _392;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _188 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _189 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _190 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_188, _189, _190), vec3(_188, _189, _190)));
    float _196 = _195 * _188;
    float _197 = _195 * _189;
    float _198 = _195 * _190;
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _206 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _207 = _206 * TANGENT.x;
    float _208 = _206 * TANGENT.y;
    float _209 = _206 * TANGENT.z;
    float _254 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _264 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _254);
    float _265 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _254);
    float _266 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _254);
    vec4 _301 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _317 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _324 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _336 = cbMtdParam._m0[24u].w + _264;
    float _337 = cbMtdParam._m0[25u].x + _265;
    float _338 = cbMtdParam._m0[25u].y + _266;
    float _355 = (-0.0) - dot(vec3(_336, _337, _338), vec3(_317 * _196, _317 * _197, _317 * _198));
    float _356 = (-0.0) - dot(vec3(_336, _337, _338), vec3(_324 * _207, _324 * _208, _324 * _209));
    float _357 = (-0.0) - dot(vec3(_336, _337, _338), vec3((-0.0) - (NORMAL.x * _202), (-0.0) - (NORMAL.y * _202), (-0.0) - (NORMAL.z * _202)));
    float _361 = inversesqrt(dot(vec3(_355, _356, _357), vec3(_355, _356, _357)));
    float _362 = _361 * _357;
    float _367 = ((cbMtdParam._m0[21u].z * _355) * _361) + (((_301.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _368 = ((cbMtdParam._m0[21u].w * _356) * _361) + (((_301.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _371 = fract(cbMtdParam._m0[21u].z * TEXCOORD.x);
    float _372 = fract(cbMtdParam._m0[21u].w * TEXCOORD.y);
    float _390;
    float _393;
    float _395;
    if (_367 > 0.0)
    {
        float _376 = (1.0 - _371) / _367;
        _390 = _376;
        _393 = ((cbMtdParam._m0[18u].w + 1.0) - fract(_376 * _362)) * 0.16666667163372039794921875;
        _395 = (fract((_376 * _368) + _372) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_367 < 0.0)
        {
            float _391 = ((-0.0) - _371) / _367;
            frontier_phi_3_2_ladder = (fract((_391 * _368) + _372) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _391;
            frontier_phi_3_2_ladder_2 = (fract(_391 * _362) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _392;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _390 = frontier_phi_3_2_ladder_1;
        _393 = frontier_phi_3_2_ladder_2;
        _395 = frontier_phi_3_2_ladder;
    }
    float _421;
    float _423;
    float _425;
    if (_368 > 0.0)
    {
        float _408 = (1.0 - _372) / _368;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_408 < _390)
        {
            frontier_phi_8_5_ladder = (fract((_408 * _367) + _371) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _408;
            frontier_phi_8_5_ladder_2 = (fract(_408 * _362) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _393;
            frontier_phi_8_5_ladder_1 = _390;
            frontier_phi_8_5_ladder_2 = _395;
        }
        _421 = frontier_phi_8_5_ladder_1;
        _423 = frontier_phi_8_5_ladder;
        _425 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_368 < 0.0)
        {
            float _422 = ((-0.0) - _372) / _368;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_422 < _390)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_422 * _367) + _371) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _422;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_422 * _362) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _393;
                frontier_phi_8_6_ladder_9_ladder_1 = _390;
                frontier_phi_8_6_ladder_9_ladder_2 = _395;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _393;
            frontier_phi_8_6_ladder_1 = _390;
            frontier_phi_8_6_ladder_2 = _395;
        }
        _421 = frontier_phi_8_6_ladder_1;
        _423 = frontier_phi_8_6_ladder;
        _425 = frontier_phi_8_6_ladder_2;
    }
    float _429 = (_362 > 0.0) ? (cbMtdParam._m0[18u].z / _362) : 5000.0;
    float _442;
    float _443;
    if (_429 < _421)
    {
        _442 = ((_371 + cbMtdParam._m0[18u].w) + (_429 * _367)) * 0.16666667163372039794921875;
        _443 = (((_429 * _368) + _372) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _442 = _423;
        _443 = _425;
    }
    vec4 _445 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_442, _443));
    float _2795 = isnan(0.0) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.0 : max(cbMtdParam._m0[17u].z, 0.0));
    float _459 = isnan(1.0) ? _2795 : (isnan(_2795) ? 1.0 : min(_2795, 1.0));
    float _2806 = isnan(0.0) ? cbMtdParam._m0[17u].y : (isnan(cbMtdParam._m0[17u].y) ? 0.0 : max(cbMtdParam._m0[17u].y, 0.0));
    float _502 = ((_459 - ((1.0 - (isnan(1.0) ? _2806 : (isnan(_2806) ? 1.0 : min(_2806, 1.0)))) * (_459 + 1.0))) + (((cbMtdParam._m0[18u].y * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[3u].w)).x) + (cbMtdParam._m0[17u].x * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w)).x)) / cbMtdParam._m0[17u].w)) / _459;
    float _2817 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _503 = isnan(1.0) ? _2817 : (isnan(_2817) ? 1.0 : min(_2817, 1.0));
    float _505 = 3.0 - (_503 * 2.0);
    float _510 = _503 * _503;
    float _518 = (((_510 * (cbMtdParam._m0[15u].x - cbMtdParam._m0[13u].x)) * _505) + cbMtdParam._m0[13u].x) * _445.x;
    float _520 = (((_510 * (cbMtdParam._m0[15u].y - cbMtdParam._m0[13u].y)) * _505) + cbMtdParam._m0[13u].y) * _445.y;
    float _522 = (((_510 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[13u].z)) * _505) + cbMtdParam._m0[13u].z) * _445.z;
    float _2828 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _2839 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _2850 = isnan(0.0) ? _522 : (isnan(_522) ? 0.0 : max(_522, 0.0));
    float _541 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _545 = inversesqrt(dot(vec3(_264, _265, _266), vec3(_264, _265, _266)));
    float _546 = _264 * _545;
    float _547 = _265 * _545;
    float _548 = _266 * _545;
    float _554 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _555 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _568 = uint(roundEven(NORMAL.w)) * 13u;
    uint _570 = (_568 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _576 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2828 : (isnan(_2828) ? 1.0 : min(_2828, 1.0)))) * cbInstanceData._m0[_570].x;
    float _577 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2839 : (isnan(_2839) ? 1.0 : min(_2839, 1.0)))) * cbInstanceData._m0[_570].y;
    float _578 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2850 : (isnan(_2850) ? 1.0 : min(_2850, 1.0)))) * cbInstanceData._m0[_570].z;
    float _2861 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _579 = isnan(1.0) ? _2861 : (isnan(_2861) ? 1.0 : min(_2861, 1.0));
    float _2872 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _580 = isnan(1.0) ? _2872 : (isnan(_2872) ? 1.0 : min(_2872, 1.0));
    float _2883 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _581 = isnan(1.0) ? _2883 : (isnan(_2883) ? 1.0 : min(_2883, 1.0));
    vec4 _590 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _554, cbSceneParam._m0[86u].y * _555));
    float _593 = _590.x * TEXCOORD_4.z;
    float _594 = (-0.0) - _546;
    float _595 = (-0.0) - _547;
    float _596 = (-0.0) - _548;
    float _618 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _622 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _626 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _900;
    float _901;
    float _902;
    float _903;
    float _904;
    float _905;
    float _906;
    float _907;
    float _908;
    float _909;
    float _910;
    float _911;
    float _912;
    float _913;
    float _914;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _688 = (cbModelParam._m0[37u].x * ((((fma(_626, cbModelParam._m0[26u].z, fma(_622, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _618)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _690 = (cbModelParam._m0[37u].y * ((((fma(_626, cbModelParam._m0[27u].z, fma(_622, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _618)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _691 = (((((fma(_626, cbModelParam._m0[28u].z, fma(_622, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _618)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _694 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_688, _690, _691), 0.0);
        vec4 _701 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_688, _690, _691), 0.0);
        vec4 _708 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_688, _690, _691), 0.0);
        vec4 _715 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_688, _690, _691), 0.0);
        float _728 = exp2((_694.w + (-0.5)) * 20.0) * 2.0;
        float _729 = _728 * (_694.x + (-0.5));
        float _730 = _728 * (_694.y + (-0.5));
        float _731 = _728 * (_694.z + (-0.5));
        float _738 = exp2((_701.w + (-0.5)) * 20.0) * 2.0;
        float _739 = _738 * (_701.x + (-0.5));
        float _740 = _738 * (_701.y + (-0.5));
        float _741 = _738 * (_701.z + (-0.5));
        float _748 = exp2((_708.w + (-0.5)) * 20.0) * 2.0;
        float _749 = _748 * (_708.x + (-0.5));
        float _750 = _748 * (_708.y + (-0.5));
        float _751 = _748 * (_708.z + (-0.5));
        float _758 = exp2((_715.w + (-0.5)) * 20.0) * 2.0;
        float _759 = _758 * (_715.x + (-0.5));
        float _760 = _758 * (_715.y + (-0.5));
        float _761 = _758 * (_715.z + (-0.5));
        float _762 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
        float _763 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
        float _764 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        float _765 = _729 * 0.5;
        float _766 = _739 * 0.5;
        float _767 = _749 * 0.5;
        float _768 = dot(vec3(_765, _766, _767), vec3(_765, _766, _767));
        float _773 = (_768 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_768);
        float _782 = (dot(vec3(0.0), vec3(_773 * _765, _773 * _766, _773 * _767)) + 1.0) * 0.5;
        float _2909 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        float _792 = sqrt(((_766 * _766) + (_765 * _765)) + (_767 * _767)) / (_762 + 9.9999997473787516355514526367188e-06);
        float _2920 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
        float _793 = isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0));
        float _794 = _793 * 2.0;
        float _798 = (1.0 - _793) / (_793 + 1.0);
        float _2931 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        float _799 = isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0));
        float _808 = ((((1.0 - _799) * (_794 + 2.0)) * exp2(log2(isnan(1.0) ? _2909 : (isnan(_2909) ? 1.0 : min(_2909, 1.0))) * (_794 + 1.0))) + _799) * _762;
        float _809 = _730 * 0.5;
        float _810 = _740 * 0.5;
        float _811 = _750 * 0.5;
        float _812 = dot(vec3(_809, _810, _811), vec3(_809, _810, _811));
        float _817 = (_812 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_812);
        float _825 = (dot(vec3(0.0), vec3(_817 * _809, _817 * _810, _817 * _811)) + 1.0) * 0.5;
        float _2942 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
        float _834 = sqrt(((_810 * _810) + (_809 * _809)) + (_811 * _811)) / (_763 + 9.9999997473787516355514526367188e-06);
        float _2953 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
        float _835 = isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0));
        float _836 = _835 * 2.0;
        float _840 = (1.0 - _835) / (_835 + 1.0);
        float _2964 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
        float _841 = isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0));
        float _850 = ((((1.0 - _841) * (_836 + 2.0)) * exp2(log2(isnan(1.0) ? _2942 : (isnan(_2942) ? 1.0 : min(_2942, 1.0))) * (_836 + 1.0))) + _841) * _763;
        float _851 = _731 * 0.5;
        float _852 = _741 * 0.5;
        float _853 = _751 * 0.5;
        float _854 = dot(vec3(_851, _852, _853), vec3(_851, _852, _853));
        float _859 = (_854 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_854);
        float _867 = (dot(vec3(0.0), vec3(_859 * _851, _859 * _852, _859 * _853)) + 1.0) * 0.5;
        float _2975 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
        float _876 = sqrt(((_852 * _852) + (_851 * _851)) + (_853 * _853)) / (_764 + 9.9999997473787516355514526367188e-06);
        float _2986 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        float _877 = isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0));
        float _878 = _877 * 2.0;
        float _882 = (1.0 - _877) / (_877 + 1.0);
        float _2997 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _883 = isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0));
        float _892 = ((((1.0 - _883) * (_878 + 2.0)) * exp2(log2(isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0))) * (_878 + 1.0))) + _883) * _764;
        _900 = _731;
        _901 = _730;
        _902 = _729;
        _903 = _741;
        _904 = _740;
        _905 = _739;
        _906 = _751;
        _907 = _750;
        _908 = _749;
        _909 = _764;
        _910 = _763;
        _911 = _762;
        _912 = cbModelParam._m0[36u].z * (isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0)));
        _913 = cbModelParam._m0[36u].z * (isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0)));
        _914 = cbModelParam._m0[36u].z * (isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0)));
    }
    else
    {
        _900 = _392;
        _901 = _392;
        _902 = _392;
        _903 = _392;
        _904 = _392;
        _905 = _392;
        _906 = _392;
        _907 = _392;
        _908 = _392;
        _909 = _392;
        _910 = _392;
        _911 = _392;
        _912 = 0.0;
        _913 = 0.0;
        _914 = 0.0;
    }
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _968 = (cbModelParam._m0[38u].x * ((((fma(_626, cbModelParam._m0[30u].z, fma(_622, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _618)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _969 = (cbModelParam._m0[38u].y * ((((fma(_626, cbModelParam._m0[31u].z, fma(_622, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _618)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _970 = (((((fma(_626, cbModelParam._m0[32u].z, fma(_622, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _618)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _972 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_968, _969, _970), 0.0);
        vec4 _979 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_968, _969, _970), 0.0);
        vec4 _986 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_968, _969, _970), 0.0);
        vec4 _993 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_968, _969, _970), 0.0);
        float _1005 = exp2((_972.w + (-0.5)) * 20.0) * 2.0;
        float _1006 = _1005 * (_972.x + (-0.5));
        float _1007 = _1005 * (_972.y + (-0.5));
        float _1008 = _1005 * (_972.z + (-0.5));
        float _1015 = exp2((_979.w + (-0.5)) * 20.0) * 2.0;
        float _1016 = _1015 * (_979.x + (-0.5));
        float _1017 = _1015 * (_979.y + (-0.5));
        float _1018 = _1015 * (_979.z + (-0.5));
        float _1025 = exp2((_986.w + (-0.5)) * 20.0) * 2.0;
        float _1026 = _1025 * (_986.x + (-0.5));
        float _1027 = _1025 * (_986.y + (-0.5));
        float _1028 = _1025 * (_986.z + (-0.5));
        float _1035 = exp2((_993.w + (-0.5)) * 20.0) * 2.0;
        float _1036 = _1035 * (_993.x + (-0.5));
        float _1037 = _1035 * (_993.y + (-0.5));
        float _1038 = _1035 * (_993.z + (-0.5));
        float _1039 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1040 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1041 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
        float _1042 = _1006 * 0.5;
        float _1043 = _1016 * 0.5;
        float _1044 = _1026 * 0.5;
        float _1045 = dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044));
        float _1050 = (_1045 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1045);
        float _1058 = (dot(vec3(0.0), vec3(_1050 * _1042, _1050 * _1043, _1050 * _1044)) + 1.0) * 0.5;
        float _3038 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1067 = sqrt(((_1043 * _1043) + (_1042 * _1042)) + (_1044 * _1044)) / (_1039 + 9.9999997473787516355514526367188e-06);
        float _3049 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _3049 : (isnan(_3049) ? 1.0 : min(_3049, 1.0));
        float _1069 = _1068 * 2.0;
        float _1073 = (1.0 - _1068) / (_1068 + 1.0);
        float _3060 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1074 = isnan(1.0) ? _3060 : (isnan(_3060) ? 1.0 : min(_3060, 1.0));
        float _1083 = ((((1.0 - _1074) * (_1069 + 2.0)) * exp2(log2(isnan(1.0) ? _3038 : (isnan(_3038) ? 1.0 : min(_3038, 1.0))) * (_1069 + 1.0))) + _1074) * _1039;
        float _1084 = _1007 * 0.5;
        float _1085 = _1017 * 0.5;
        float _1086 = _1027 * 0.5;
        float _1087 = dot(vec3(_1084, _1085, _1086), vec3(_1084, _1085, _1086));
        float _1092 = (_1087 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1087);
        float _1100 = (dot(vec3(0.0), vec3(_1092 * _1084, _1092 * _1085, _1092 * _1086)) + 1.0) * 0.5;
        float _3071 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1109 = sqrt(((_1085 * _1085) + (_1084 * _1084)) + (_1086 * _1086)) / (_1040 + 9.9999997473787516355514526367188e-06);
        float _3082 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1110 = isnan(1.0) ? _3082 : (isnan(_3082) ? 1.0 : min(_3082, 1.0));
        float _1111 = _1110 * 2.0;
        float _1115 = (1.0 - _1110) / (_1110 + 1.0);
        float _3093 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        float _1116 = isnan(1.0) ? _3093 : (isnan(_3093) ? 1.0 : min(_3093, 1.0));
        float _1125 = ((((1.0 - _1116) * (_1111 + 2.0)) * exp2(log2(isnan(1.0) ? _3071 : (isnan(_3071) ? 1.0 : min(_3071, 1.0))) * (_1111 + 1.0))) + _1116) * _1040;
        float _1126 = _1008 * 0.5;
        float _1127 = _1018 * 0.5;
        float _1128 = _1028 * 0.5;
        float _1129 = dot(vec3(_1126, _1127, _1128), vec3(_1126, _1127, _1128));
        float _1134 = (_1129 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1129);
        float _1142 = (dot(vec3(0.0), vec3(_1134 * _1126, _1134 * _1127, _1134 * _1128)) + 1.0) * 0.5;
        float _3104 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1151 = sqrt(((_1127 * _1127) + (_1126 * _1126)) + (_1128 * _1128)) / (_1041 + 9.9999997473787516355514526367188e-06);
        float _3115 = isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0));
        float _1152 = isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0));
        float _1153 = _1152 * 2.0;
        float _1157 = (1.0 - _1152) / (_1152 + 1.0);
        float _3126 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1158 = isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0));
        float _1167 = ((((1.0 - _1158) * (_1153 + 2.0)) * exp2(log2(isnan(1.0) ? _3104 : (isnan(_3104) ? 1.0 : min(_3104, 1.0))) * (_1153 + 1.0))) + _1158) * _1041;
        _1175 = _1008;
        _1176 = _1007;
        _1177 = _1006;
        _1178 = _1018;
        _1179 = _1017;
        _1180 = _1016;
        _1181 = _1028;
        _1182 = _1027;
        _1183 = _1026;
        _1184 = _1041;
        _1185 = _1040;
        _1186 = _1039;
        _1187 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0)));
        _1188 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0)));
        _1189 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0)));
    }
    else
    {
        _1175 = _392;
        _1176 = _392;
        _1177 = _392;
        _1178 = _392;
        _1179 = _392;
        _1180 = _392;
        _1181 = _392;
        _1182 = _392;
        _1183 = _392;
        _1184 = _392;
        _1185 = _392;
        _1186 = _392;
        _1187 = 0.0;
        _1188 = 0.0;
        _1189 = 0.0;
    }
    float _1199 = (cbModelParam._m0[1u].x * (_1187 - _912)) + _912;
    float _1200 = (cbModelParam._m0[1u].x * (_1188 - _913)) + _913;
    float _1201 = (cbModelParam._m0[1u].x * (_1189 - _914)) + _914;
    float _1222 = fma(_1201, cbSceneParam._m0[89u].z, fma(_1200, cbSceneParam._m0[89u].y, _1199 * cbSceneParam._m0[89u].x));
    float _1225 = fma(_1201, cbSceneParam._m0[90u].z, fma(_1200, cbSceneParam._m0[90u].y, _1199 * cbSceneParam._m0[90u].x));
    float _1228 = fma(_1201, cbSceneParam._m0[91u].z, fma(_1200, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1199));
    float _1243 = _546 * (-0.5);
    float _1244 = _547 * (-0.5);
    float _1245 = _548 * (-0.5);
    float _1246 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_1177, _1180, _1183, _1186));
    float _1249 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_1176, _1179, _1182, _1185));
    float _1252 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_1175, _1178, _1181, _1184));
    float _1286;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1259 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_900, _903, _906, _909));
        float _1263 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_901, _904, _907, _910));
        float _1267 = dot(vec4(_1243, _1244, _1245, 1.0), vec4(_902, _905, _908, _911));
        float _1274 = dot(vec4(cbModelParam._m0[39u]), vec4(_1243, _1244, _1245, 1.0));
        _1286 = dot(vec3(isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0)), isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0)), isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1274) ? 0.0 : (isnan(0.0) ? _1274 : max(0.0, _1274))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1286 = 1.0;
    }
    float _1297;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1288 = dot(vec4(cbModelParam._m0[40u]), vec4(_1243, _1244, _1245, 1.0));
        _1297 = dot(vec3(isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0)), isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0)), isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1288) ? 0.0 : (isnan(0.0) ? _1288 : max(0.0, _1288))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1297 = 1.0;
    }
    float _1301 = (_1297 * cbModelParam._m0[1u].x) + (_1286 * (1.0 - cbModelParam._m0[1u].x));
    float _1310 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1392;
    float _1394;
    float _1396;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1359 = fma(_626, cbModelParam._m0[13u].z, fma(_622, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _618)) + cbModelParam._m0[13u].w;
        float _1363 = fma(_626, cbModelParam._m0[14u].z, fma(_622, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _618)) + cbModelParam._m0[14u].w;
        float _1367 = fma(_626, cbModelParam._m0[15u].z, fma(_622, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _618)) + cbModelParam._m0[15u].w;
        float _1370 = fma(_596, cbModelParam._m0[13u].z, fma(_595, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _594));
        float _1373 = fma(_596, cbModelParam._m0[14u].z, fma(_595, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _594));
        float _1376 = fma(_596, cbModelParam._m0[15u].z, fma(_595, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _594));
        float _1402;
        if (_1370 > 0.0)
        {
            _1402 = abs((1.0 - _1359) / _1370);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1370 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1359 + 1.0) / _1370);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1402 = frontier_phi_26_24_ladder;
        }
        float _1700;
        if (_1373 > 0.0)
        {
            _1700 = abs((1.0 - _1363) / _1373);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1373 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1363 + 1.0) / _1373);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1700 = frontier_phi_35_31_ladder;
        }
        float _2001;
        if (_1376 > 0.0)
        {
            _2001 = abs((1.0 - _1367) / _1376);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1376 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1367 + 1.0) / _1376);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _2001 = frontier_phi_49_42_ladder;
        }
        float _2003 = isnan(_1700) ? _1402 : (isnan(_1402) ? _1700 : min(_1402, _1700));
        float _2004 = isnan(_2001) ? _2003 : (isnan(_2003) ? _2001 : min(_2003, _2001));
        float _2008 = (_2004 * _1370) + _1359;
        float _2009 = (_2004 * _1373) + _1363;
        float _2010 = (_2004 * _1376) + _1367;
        float _2011 = _2004 * 9.9999997473787516355514526367188e-05;
        float _2012 = (-1.0) - _2011;
        float _2014 = _2011 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2010 > _2014) || ((_2010 < _2012) || ((_2009 > _2014) || ((_2009 < _2012) || ((_2008 < _2012) || (_2008 > _2014))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2133 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2010, cbModelParam._m0[9u].z, fma(_2009, cbModelParam._m0[9u].y, _2008 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2010, cbModelParam._m0[10u].z, fma(_2009, cbModelParam._m0[10u].y, _2008 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2010, cbModelParam._m0[11u].z, fma(_2009, cbModelParam._m0[11u].y, _2008 * cbModelParam._m0[11u].x))), _1310);
            frontier_phi_25_49_ladder = _2133.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2133.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2133.x * cbModelParam._m0[1u].y;
        }
        _1392 = frontier_phi_25_49_ladder_2;
        _1394 = frontier_phi_25_49_ladder_1;
        _1396 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1380 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_594, _595, _596), _1310);
        _1392 = _1380.x * cbModelParam._m0[1u].y;
        _1394 = _1380.y * cbModelParam._m0[1u].y;
        _1396 = _1380.z * cbModelParam._m0[1u].y;
    }
    float _1399 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1488;
    float _1490;
    float _1492;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1452 = fma(_626, cbModelParam._m0[21u].z, fma(_622, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _618)) + cbModelParam._m0[21u].w;
        float _1456 = fma(_626, cbModelParam._m0[22u].z, fma(_622, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _618)) + cbModelParam._m0[22u].w;
        float _1460 = fma(_626, cbModelParam._m0[23u].z, fma(_622, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _618)) + cbModelParam._m0[23u].w;
        float _1463 = fma(_596, cbModelParam._m0[21u].z, fma(_595, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _594));
        float _1466 = fma(_596, cbModelParam._m0[22u].z, fma(_595, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _594));
        float _1469 = fma(_596, cbModelParam._m0[23u].z, fma(_595, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _594));
        float _1705;
        if (_1463 > 0.0)
        {
            _1705 = abs((1.0 - _1452) / _1463);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1463 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1452 + 1.0) / _1463);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1705 = frontier_phi_37_33_ladder;
        }
        float _2027;
        if (_1466 > 0.0)
        {
            _2027 = abs((1.0 - _1456) / _1466);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1466 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1456 + 1.0) / _1466);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _2027 = frontier_phi_51_44_ladder;
        }
        float _2193;
        if (_1469 > 0.0)
        {
            _2193 = abs((1.0 - _1460) / _1469);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1469 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1460 + 1.0) / _1469);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2193 = frontier_phi_65_60_ladder;
        }
        float _2195 = isnan(_2027) ? _1705 : (isnan(_1705) ? _2027 : min(_1705, _2027));
        float _2196 = isnan(_2193) ? _2195 : (isnan(_2195) ? _2193 : min(_2195, _2193));
        float _2200 = (_2196 * _1463) + _1452;
        float _2201 = (_2196 * _1466) + _1456;
        float _2202 = (_2196 * _1469) + _1460;
        float _2203 = _2196 * 9.9999997473787516355514526367188e-05;
        float _2204 = (-1.0) - _2203;
        float _2206 = _2203 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2202 > _2206) || ((_2202 < _2204) || ((_2201 > _2206) || ((_2201 < _2204) || ((_2200 < _2204) || (_2200 > _2206))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2385 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2202, cbModelParam._m0[17u].z, fma(_2201, cbModelParam._m0[17u].y, _2200 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2202, cbModelParam._m0[18u].z, fma(_2201, cbModelParam._m0[18u].y, _2200 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2202, cbModelParam._m0[19u].z, fma(_2201, cbModelParam._m0[19u].y, _2200 * cbModelParam._m0[19u].x))), _1399);
            frontier_phi_34_65_ladder = _2385.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2385.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2385.z * cbModelParam._m0[1u].z;
        }
        _1488 = frontier_phi_34_65_ladder_1;
        _1490 = frontier_phi_34_65_ladder;
        _1492 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1472 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_594, _595, _596), _1399);
        _1488 = _1472.x * cbModelParam._m0[1u].z;
        _1490 = _1472.y * cbModelParam._m0[1u].z;
        _1492 = _1472.z * cbModelParam._m0[1u].z;
    }
    float _1504 = _593 * 0.01200000010430812835693359375;
    float _1506 = _1504 * ((cbModelParam._m0[1u].w * (_1488 - _1392)) + _1392);
    float _1507 = _1504 * ((cbModelParam._m0[1u].w * (_1490 - _1394)) + _1394);
    float _1508 = _1504 * ((cbModelParam._m0[1u].w * (_1492 - _1396)) + _1396);
    float _1511 = fma(_1508, cbSceneParam._m0[89u].z, fma(_1507, cbSceneParam._m0[89u].y, _1506 * cbSceneParam._m0[89u].x));
    float _1514 = fma(_1508, cbSceneParam._m0[90u].z, fma(_1507, cbSceneParam._m0[90u].y, _1506 * cbSceneParam._m0[90u].x));
    float _1517 = fma(_1508, cbSceneParam._m0[91u].z, fma(_1507, cbSceneParam._m0[91u].y, _1506 * cbSceneParam._m0[91u].x));
    uvec4 _1528 = floatBitsToUint(cbInstanceData._m0[_568 + 5u]);
    uint _1530 = _1528.x * 14u;
    uint _1531 = _1530 + 13u;
    float _1536 = _593 + (-1.0);
    float _1539 = (cbLight._m0[_1531].x * _1536) + 1.0;
    float _1540 = (cbLight._m0[_1531].y * _1536) + 1.0;
    uint _1541 = _1530 + 5u;
    float _1547 = isnan(1.0) ? _1540 : (isnan(_1540) ? 1.0 : min(_1540, 1.0));
    uint _1551 = _1530 + 4u;
    float _1558 = isnan(1.0) ? _1539 : (isnan(_1539) ? 1.0 : min(_1539, 1.0));
    uint _1562 = _1530 | 1u;
    float _1573 = dot(vec3(cbLight._m0[_1530].xyz), vec3(0.0));
    float _1576 = dot(vec3(cbLight._m0[_1562].xyz), vec3(0.0));
    float _3262 = isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0));
    float _3273 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    float _1581 = (isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0))) * 0.3183098733425140380859375;
    float _1583 = (isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0))) * 0.3183098733425140380859375;
    float _1590 = ((cbLight._m0[_1541].x * _1547) * _1583) + ((cbLight._m0[_1551].x * _1558) * _1581);
    float _1591 = ((_1547 * cbLight._m0[_1541].y) * _1583) + ((_1558 * cbLight._m0[_1551].y) * _1581);
    float _1592 = ((_1547 * cbLight._m0[_1541].z) * _1583) + ((_1558 * cbLight._m0[_1551].z) * _1581);
    uint _1593 = _1530 + 8u;
    float _1599 = cbLight._m0[_1530].x + _546;
    float _1600 = cbLight._m0[_1530].y + _547;
    float _1601 = cbLight._m0[_1530].z + _548;
    float _1605 = inversesqrt(dot(vec3(_1599, _1600, _1601), vec3(_1599, _1600, _1601)));
    float _1609 = dot(vec3(0.0), vec3(cbLight._m0[_1530].xyz));
    float _3284 = isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0));
    float _1612 = isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0));
    float _1613 = dot(vec3(0.0), vec3(_546, _547, _548));
    float _3295 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
    float _1616 = isnan(1.0) ? _3295 : (isnan(_3295) ? 1.0 : min(_3295, 1.0));
    float _1617 = dot(vec3(cbLight._m0[_1530].xyz), vec3(_1599 * _1605, _1600 * _1605, _1601 * _1605));
    float _3306 = isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0));
    float _1628 = (exp2(log2(1.0 - (isnan(1.0) ? _3306 : (isnan(_3306) ? 1.0 : min(_3306, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1634 = (0.5 / ((_1612 + 9.9999999392252902907785028219223e-09) + _1616)) * _1612;
    float _3317 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
    float _1636 = (isnan(1.0) ? _3317 : (isnan(_3317) ? 1.0 : min(_3317, 1.0))) * 0.31831014156341552734375;
    uint _1647 = _1530 + 9u;
    float _1653 = cbLight._m0[_1562].x + _546;
    float _1654 = cbLight._m0[_1562].y + _547;
    float _1655 = cbLight._m0[_1562].z + _548;
    float _1659 = inversesqrt(dot(vec3(_1653, _1654, _1655), vec3(_1653, _1654, _1655)));
    float _1663 = dot(vec3(0.0), vec3(cbLight._m0[_1562].xyz));
    float _3328 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
    float _1666 = isnan(1.0) ? _3328 : (isnan(_3328) ? 1.0 : min(_3328, 1.0));
    float _1667 = dot(vec3(cbLight._m0[_1562].xyz), vec3(_1653 * _1659, _1654 * _1659, _1655 * _1659));
    float _3339 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
    float _1676 = (exp2(log2(1.0 - (isnan(1.0) ? _3339 : (isnan(_3339) ? 1.0 : min(_3339, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1680 = (0.5 / ((_1666 + 9.9999999392252902907785028219223e-09) + _1616)) * _1666;
    float _3350 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
    float _1682 = (isnan(1.0) ? _3350 : (isnan(_3350) ? 1.0 : min(_3350, 1.0))) * 0.31831014156341552734375;
    float _1692 = (((_1676 * cbLight._m0[_1647].x) * _1682) * _1547) + (((_1628 * cbLight._m0[_1593].x) * _1636) * _1558);
    float _1693 = (((_1676 * cbLight._m0[_1647].y) * _1682) * _1547) + (((_1628 * cbLight._m0[_1593].y) * _1636) * _1558);
    float _1694 = (((_1676 * cbLight._m0[_1647].z) * _1682) * _1547) + (((_1628 * cbLight._m0[_1593].z) * _1636) * _1558);
    float _1810;
    float _1812;
    float _1814;
    float _1816;
    float _1818;
    float _1820;
    if (_1528.y == 0u)
    {
        float _1750 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1751 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1750;
        float _1752 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1750;
        float _1753 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1750;
        uvec4 _1765 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1766 = _1765.x;
        uint _1777 = uint((float(_1765.y) * floor(float(uint(cbSceneParam._m0[85u].y * _555) / _1766))) + floor(float(uint(cbSceneParam._m0[85u].x * _554) / _1766)));
        float _1787 = (log2(_1753 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1788 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        uint _1791 = uint(isnan(14.0) ? _1788 : (isnan(_1788) ? 14.0 : min(_1788, 14.0)));
        uvec4 _1796 = texelFetch(g_lightClusterGridBuffer, int(((_1791 << 2u) + (_1777 << 6u)) >> 2u));
        uint _1797 = _1796.x;
        uint _1798 = _1765.z;
        float _1888;
        float _1890;
        float _1892;
        float _1894;
        float _1896;
        float _1898;
        if (((((1u << ((_1798 >> 4u) & 15u)) + 4294967295u) & _1797) == 0u) || ((_1798 & 240u) == 0u))
        {
            _1888 = 0.0;
            _1890 = 0.0;
            _1892 = 0.0;
            _1894 = 0.0;
            _1896 = 0.0;
            _1898 = 0.0;
        }
        else
        {
            float _1889;
            float _1891;
            float _1893;
            float _1895;
            float _1897;
            float _1899;
            float _2061 = 0.0;
            float _2062 = 0.0;
            float _2063 = 0.0;
            float _2064 = 0.0;
            float _2065 = 0.0;
            float _2066 = 0.0;
            uint _2067 = 0u;
            uint _2076;
            bool _2077;
            for (;;)
            {
                _2076 = texelFetch(g_lightClassification, int((((_1791 << 5u) + (_1777 << 9u)) + (_2067 << 2u)) >> 2u)).x;
                _2077 = _2076 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_2077)
                {
                    frontier_phi_62_pred = _2062;
                    frontier_phi_62_pred_1 = _2061;
                    frontier_phi_62_pred_2 = _2063;
                    frontier_phi_62_pred_3 = _2066;
                    frontier_phi_62_pred_4 = _2065;
                    frontier_phi_62_pred_5 = _2064;
                }
                else
                {
                    float _2236;
                    float _2237;
                    float _2238;
                    float _2239;
                    float _2240;
                    float _2241;
                    uint _2242;
                    _2236 = _2061;
                    _2237 = _2062;
                    _2238 = _2063;
                    _2239 = _2064;
                    _2240 = _2065;
                    _2241 = _2066;
                    _2242 = _2076;
                    float _2142;
                    float _2143;
                    float _2144;
                    float _2145;
                    float _2146;
                    float _2147;
                    for (;;)
                    {
                        uint _2246 = uint(findLSB(_2242)) + (_2067 << 5u);
                        uint _2243 = (_2242 + 4294967295u) & _2242;
                        uint _2248 = _2246 * 48u;
                        vec4 _2262 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2248)).x, texelFetch(g_PointLightRenderingBuffer, int(_2248 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2248 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2248 + 3u)).x));
                        uint _2268 = (_2246 * 48u) + 4u;
                        vec4 _2281 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2268)).x, texelFetch(g_PointLightRenderingBuffer, int(_2268 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2268 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2268 + 3u)).x));
                        uint _2287 = (_2246 * 48u) + 8u;
                        vec3 _2298 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2287)).x, texelFetch(g_PointLightRenderingBuffer, int(_2287 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2287 + 2u)).x));
                        float _2302 = _2262.x - _1751;
                        float _2303 = _2262.y - _1752;
                        float _2304 = _2262.z - _1753;
                        float _2305 = dot(vec3(_2302, _2303, _2304), vec3(_2302, _2303, _2304));
                        float _2308 = inversesqrt(_2305);
                        float _2317 = 1.0 - (_2305 * _2262.w);
                        float _3371 = isnan(0.0) ? _2317 : (isnan(_2317) ? 0.0 : max(_2317, 0.0));
                        float _2318 = isnan(1.0) ? _3371 : (isnan(_3371) ? 1.0 : min(_3371, 1.0));
                        float _2319 = sqrt(_2305) * _2281.w;
                        float _2322 = 1.39999997615814208984375 / (_2319 + 1.39999997615814208984375);
                        float _2323 = _2322 * _2322;
                        float _2326 = ((1.0 - _2323) * dot(vec3(0.0), vec3(_2308 * _2302, _2308 * _2303, _2308 * _2304))) + _2323;
                        float _2329 = _2319 * _2319;
                        float _2333 = ((isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0))) * _2318) / ((_2329 * 0.699999988079071044921875) + 1.0);
                        float _2337 = (-0.0) - _1751;
                        float _2338 = (-0.0) - _1752;
                        float _2339 = (-0.0) - _1753;
                        float _2343 = inversesqrt(dot(vec3(_2337, _2338, _2339), vec3(_2337, _2338, _2339)));
                        float _2347 = dot(vec3(0.0), vec3(_2343 * _2337, _2343 * _2338, _2343 * _2339));
                        float _3387 = isnan(0.0) ? _2347 : (isnan(_2347) ? 0.0 : max(_2347, 0.0));
                        float _3398 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
                        float _2351 = isnan(1.0) ? _3398 : (isnan(_3398) ? 1.0 : min(_3398, 1.0));
                        float _2355 = (0.5 / (((isnan(1.0) ? _3387 : (isnan(_3387) ? 1.0 : min(_3387, 1.0))) + 9.9999999392252902907785028219223e-09) + _2351)) * _2351;
                        float _3409 = isnan(0.0) ? _2355 : (isnan(_2355) ? 0.0 : max(_2355, 0.0));
                        float _2364 = (((isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0))) * 3.1415927410125732421875) / ((_2329 * 2.1991131305694580078125) + 3.141590118408203125)) * _2318;
                        _2145 = (_2333 * _2281.x) + _2239;
                        _2146 = (_2333 * _2281.y) + _2240;
                        _2147 = (_2333 * _2281.z) + _2241;
                        _2142 = (_2364 * _2298.x) + _2236;
                        _2143 = (_2364 * _2298.y) + _2237;
                        _2144 = (_2364 * _2298.z) + _2238;
                        if (_2243 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2236 = _2142;
                            _2237 = _2143;
                            _2238 = _2144;
                            _2239 = _2145;
                            _2240 = _2146;
                            _2241 = _2147;
                            _2242 = _2243;
                        }
                    }
                    frontier_phi_62_pred = _2143;
                    frontier_phi_62_pred_1 = _2142;
                    frontier_phi_62_pred_2 = _2144;
                    frontier_phi_62_pred_3 = _2147;
                    frontier_phi_62_pred_4 = _2146;
                    frontier_phi_62_pred_5 = _2145;
                }
                _1891 = frontier_phi_62_pred;
                _1889 = frontier_phi_62_pred_1;
                _1893 = frontier_phi_62_pred_2;
                _1899 = frontier_phi_62_pred_3;
                _1897 = frontier_phi_62_pred_4;
                _1895 = frontier_phi_62_pred_5;
                uint _2068 = _2067 + 1u;
                if (_2068 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2061 = _1889;
                    _2062 = _1891;
                    _2063 = _1893;
                    _2064 = _1895;
                    _2065 = _1897;
                    _2066 = _1899;
                    _2067 = _2068;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1888 = _1889;
            _1890 = _1891;
            _1892 = _1893;
            _1894 = _1895;
            _1896 = _1897;
            _1898 = _1899;
        }
        uvec4 _1902 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1903 = _1902.z;
        uint _1905 = (_1903 >> 8u) & 15u;
        float _2032;
        float _2034;
        float _2036;
        float _2038;
        float _2040;
        float _2042;
        if (((4294967295u << _1905) & _1797) == 0u)
        {
            _2032 = _1888;
            _2034 = _1890;
            _2036 = _1892;
            _2038 = _1894;
            _2040 = _1896;
            _2042 = _1898;
        }
        else
        {
            float _2057 = inversesqrt(dot(vec3(_1751, _1752, _1753), vec3(_1751, _1752, _1753)));
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_1905 < ((_1903 >> 12u) & 15u))
            {
                float _2033;
                float _2035;
                float _2037;
                float _2039;
                float _2041;
                float _2043;
                float _2219 = _1888;
                float _2220 = _1890;
                float _2221 = _1892;
                float _2222 = _1894;
                float _2223 = _1896;
                float _2224 = _1898;
                uint _2225 = _1905;
                uint _2234;
                bool _2235;
                for (;;)
                {
                    _2234 = texelFetch(g_lightClassification, int((((_1791 << 5u) + (_1777 << 9u)) + (_2225 << 2u)) >> 2u)).x;
                    _2235 = _2234 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2235)
                    {
                        frontier_phi_71_pred = _2220;
                        frontier_phi_71_pred_1 = _2219;
                        frontier_phi_71_pred_2 = _2224;
                        frontier_phi_71_pred_3 = _2223;
                        frontier_phi_71_pred_4 = _2222;
                        frontier_phi_71_pred_5 = _2221;
                    }
                    else
                    {
                        float _2390;
                        float _2391;
                        float _2392;
                        float _2393;
                        float _2394;
                        float _2395;
                        float _2641;
                        float _2642;
                        float _2643;
                        float _2644;
                        float _2645;
                        float _2646;
                        float _2403 = _2219;
                        float _2404 = _2220;
                        float _2405 = _2221;
                        float _2406 = _2222;
                        float _2407 = _2223;
                        float _2408 = _2224;
                        uint _2409 = _2234;
                        uint _2410;
                        vec4 _2435;
                        float _2436;
                        vec4 _2451;
                        vec3 _2463;
                        vec4 _2479;
                        vec4 _2495;
                        float _2541;
                        bool _2542;
                        for (;;)
                        {
                            uint _2420 = ((_2225 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2409));
                            _2410 = (_2409 + 4294967295u) & _2409;
                            uint _2422 = _2420 * 40u;
                            _2435 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2422)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2422 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2422 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2422 + 3u)).x));
                            _2436 = _2435.w;
                            uint _2438 = (_2420 * 40u) + 4u;
                            _2451 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2438)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2438 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2438 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2438 + 3u)).x));
                            uint _2453 = (_2420 * 40u) + 8u;
                            _2463 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2453)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2453 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2453 + 2u)).x));
                            uint _2466 = (_2420 * 40u) + 16u;
                            _2479 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2466)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2466 + 3u)).x));
                            uint _2482 = (_2420 * 40u) + 20u;
                            _2495 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2482)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2482 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2482 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2482 + 3u)).x));
                            uint _2497 = (_2420 * 40u) + 24u;
                            vec4 _2510 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2497)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2497 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2497 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2497 + 3u)).x));
                            uint _2516 = (_2420 * 40u) + 28u;
                            vec4 _2529 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2516)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2516 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2516 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2516 + 3u)).x));
                            _2541 = fma(_1753, _2529.z, fma(_1752, _2529.y, _2529.x * _1751)) + _2529.w;
                            _2542 = !((fma(_1753, _2510.z, fma(_1752, _2510.y, _2510.x * _1751)) + _2510.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_2542)
                            {
                                float _2569 = _2435.x - _1751;
                                float _2570 = _2435.y - _1752;
                                float _2571 = _2435.z - _1753;
                                float _2572 = dot(vec3(_2569, _2570, _2571), vec3(_2569, _2570, _2571));
                                float _2575 = inversesqrt(_2572);
                                float _2576 = _2575 * _2569;
                                float _2577 = _2575 * _2570;
                                float _2578 = _2575 * _2571;
                                float _2582 = 1.0 - (_2572 / (_2436 * _2436));
                                float _3420 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
                                float _2583 = isnan(1.0) ? _3420 : (isnan(_3420) ? 1.0 : min(_3420, 1.0));
                                float _2587 = sqrt(_2572) * _2451.w;
                                float _2589 = 1.39999997615814208984375 / (_2587 + 1.39999997615814208984375);
                                float _2590 = _2589 * _2589;
                                float _2591 = 1.0 - _2590;
                                float _2593 = (_2591 * dot(vec3(_2576, _2577, _2578), vec3(0.0))) + _2590;
                                float _2596 = _2587 * _2587;
                                float _2600 = (fma(_1753, _2479.z, fma(_1752, _2479.y, _2479.x * _1751)) + _2479.w) / _2541;
                                float _2601 = (fma(_1753, _2495.z, fma(_1752, _2495.y, _2495.x * _1751)) + _2495.w) / _2541;
                                float _2605 = 1.0 - dot(vec2(_2600, _2601), vec2(_2600, _2601));
                                float _3436 = isnan(0.0) ? _2605 : (isnan(_2605) ? 0.0 : max(_2605, 0.0));
                                float _2606 = isnan(1.0) ? _3436 : (isnan(_3436) ? 1.0 : min(_3436, 1.0));
                                float _2607 = _2606 * (((isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0))) * _2583) / ((_2596 * 0.699999988079071044921875) + 1.0));
                                float _2617 = dot(vec3(0.0), vec3((-0.0) - (_1751 * _2057), (-0.0) - (_1752 * _2057), (-0.0) - (_1753 * _2057)));
                                float _3447 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
                                float _2625 = (_2591 * dot(vec3(0.0), vec3(_2576, _2577, _2578))) + _2590;
                                float _3458 = isnan(0.0) ? _2625 : (isnan(_2625) ? 0.0 : max(_2625, 0.0));
                                float _2626 = isnan(1.0) ? _3458 : (isnan(_3458) ? 1.0 : min(_3458, 1.0));
                                float _2630 = (0.5 / (((isnan(1.0) ? _3447 : (isnan(_3447) ? 1.0 : min(_3447, 1.0))) + 9.9999999392252902907785028219223e-09) + _2626)) * _2626;
                                float _3469 = isnan(0.0) ? _2630 : (isnan(_2630) ? 0.0 : max(_2630, 0.0));
                                float _2637 = (_2606 * _2583) * (((isnan(1.0) ? _3469 : (isnan(_3469) ? 1.0 : min(_3469, 1.0))) * 3.1415927410125732421875) / ((_2596 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_77_pred = _2637 * _2463.y;
                                frontier_phi_77_pred_1 = _2637 * _2463.x;
                                frontier_phi_77_pred_2 = _2607 * _2451.z;
                                frontier_phi_77_pred_3 = _2607 * _2451.y;
                                frontier_phi_77_pred_4 = _2607 * _2451.x;
                                frontier_phi_77_pred_5 = _2637 * _2463.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _2642 = frontier_phi_77_pred;
                            _2641 = frontier_phi_77_pred_1;
                            _2646 = frontier_phi_77_pred_2;
                            _2645 = frontier_phi_77_pred_3;
                            _2644 = frontier_phi_77_pred_4;
                            _2643 = frontier_phi_77_pred_5;
                            _2393 = _2644 + _2406;
                            _2394 = _2645 + _2407;
                            _2395 = _2646 + _2408;
                            _2390 = _2641 + _2403;
                            _2391 = _2642 + _2404;
                            _2392 = _2643 + _2405;
                            if (_2410 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2403 = _2390;
                                _2404 = _2391;
                                _2405 = _2392;
                                _2406 = _2393;
                                _2407 = _2394;
                                _2408 = _2395;
                                _2409 = _2410;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2391;
                        frontier_phi_71_pred_1 = _2390;
                        frontier_phi_71_pred_2 = _2395;
                        frontier_phi_71_pred_3 = _2394;
                        frontier_phi_71_pred_4 = _2393;
                        frontier_phi_71_pred_5 = _2392;
                    }
                    _2035 = frontier_phi_71_pred;
                    _2033 = frontier_phi_71_pred_1;
                    _2043 = frontier_phi_71_pred_2;
                    _2041 = frontier_phi_71_pred_3;
                    _2039 = frontier_phi_71_pred_4;
                    _2037 = frontier_phi_71_pred_5;
                    uint _2226 = _2225 + 1u;
                    if (_2226 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2219 = _2033;
                        _2220 = _2035;
                        _2221 = _2037;
                        _2222 = _2039;
                        _2223 = _2041;
                        _2224 = _2043;
                        _2225 = _2226;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _2043;
                frontier_phi_53_54_ladder_1 = _2039;
                frontier_phi_53_54_ladder_2 = _2037;
                frontier_phi_53_54_ladder_3 = _2035;
                frontier_phi_53_54_ladder_4 = _2033;
                frontier_phi_53_54_ladder_5 = _2041;
            }
            else
            {
                frontier_phi_53_54_ladder = _1898;
                frontier_phi_53_54_ladder_1 = _1894;
                frontier_phi_53_54_ladder_2 = _1892;
                frontier_phi_53_54_ladder_3 = _1890;
                frontier_phi_53_54_ladder_4 = _1888;
                frontier_phi_53_54_ladder_5 = _1896;
            }
            _2032 = frontier_phi_53_54_ladder_4;
            _2034 = frontier_phi_53_54_ladder_3;
            _2036 = frontier_phi_53_54_ladder_2;
            _2038 = frontier_phi_53_54_ladder_1;
            _2040 = frontier_phi_53_54_ladder_5;
            _2042 = frontier_phi_53_54_ladder;
        }
        float _2047 = isnan(1.0) ? _593 : (isnan(_593) ? 1.0 : min(_593, 1.0));
        _1810 = (_2047 * _2038) + _1590;
        _1812 = (_2047 * _2040) + _1591;
        _1814 = (_2047 * _2042) + _1592;
        _1816 = ((_2032 * 0.039999999105930328369140625) * _2047) + _1692;
        _1818 = ((_2034 * 0.039999999105930328369140625) * _2047) + _1693;
        _1820 = ((_2036 * 0.039999999105930328369140625) * _2047) + _1694;
    }
    else
    {
        _1810 = _1590;
        _1812 = _1591;
        _1814 = _1592;
        _1816 = _1692;
        _1818 = _1693;
        _1820 = _1694;
    }
    float _3485 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _3496 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _3507 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _1837 = ((isnan(1.0) ? _3485 : (isnan(_3485) ? 1.0 : min(_3485, 1.0))) * (_1810 + ((isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0))) * _593))) + ((_1816 + ((isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0))) * _1301)) * cbPerFrame._m0[3u].x);
    float _1838 = ((isnan(1.0) ? _3496 : (isnan(_3496) ? 1.0 : min(_3496, 1.0))) * (_1812 + ((isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0))) * _593))) + ((_1818 + ((isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0))) * _1301)) * cbPerFrame._m0[3u].x);
    float _1839 = ((isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0))) * (_1814 + ((isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0))) * _593))) + ((_1820 + ((isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0))) * _1301)) * cbPerFrame._m0[3u].x);
    uint _1843 = _568 + 6u;
    float _1851 = _554 / cbSceneParam._m0[86u].x;
    float _1852 = _555 / cbSceneParam._m0[86u].y;
    vec4 _1866 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1851, _1852, (log2((isnan(cbSceneParam._m0[77u].w) ? _541 : (isnan(_541) ? cbSceneParam._m0[77u].w : min(_541, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1868 = _1866.x;
    float _1869 = _1866.y;
    float _1870 = _1866.z;
    float _1871 = _1866.w;
    float _1951;
    float _1953;
    float _1955;
    float _1957;
    if (_541 > cbSceneParam._m0[78u].w)
    {
        float _1913 = isnan(_541) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _541 : min(cbSceneParam._m0[80u].w, _541));
        float _1914 = _1913 / _541;
        float _1925 = _1914 * _264;
        float _1926 = _265 * _1914;
        float _1927 = (-0.0) - _1926;
        float _1928 = _1914 * _266;
        float _1930 = (cbSceneParam._m0[77u].w * _1927) / _1913;
        float _1931 = _1930 + cbSceneParam._m0[79u].w;
        float _1932 = cbSceneParam._m0[79u].w - _1926;
        float _1938 = sqrt(((_1925 * _1925) + (_1926 * _1926)) + (_1928 * _1928));
        float _1941 = (1.0 - (cbSceneParam._m0[77u].w / _1913)) * _1938;
        float _1947 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1949 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2155;
        if (abs((_1927 - _1930) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2155 = ((((_1931 > 0.0) ? exp2(_1947 * _1931) : (2.0 - exp2(_1949 * _1931))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1941;
        }
        else
        {
            float _2090 = 1.0 / cbSceneParam._m0[80u].x;
            float _2091 = isnan(_1932) ? _1931 : (isnan(_1931) ? _1932 : max(_1931, _1932));
            float _2092 = isnan(_1932) ? _1931 : (isnan(_1931) ? _1932 : min(_1931, _1932));
            float _2101 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : min(_2091, 0.0));
            float _2102 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : min(_2092, 0.0));
            _2155 = ((abs(_1938 / _1927) * cbSceneParam._m0[80u].y) * ((((_2101 - _2102) * 2.0) - ((exp2(_1947 * (isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0)))) - exp2(_1947 * (isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0))))) * _2090)) - ((exp2(_1949 * _2101) - exp2(_1949 * _2102)) * _2090))) + (_1941 * cbSceneParam._m0[80u].z);
        }
        vec4 _2157 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1851, _1852, 1.0), 0.0);
        float _2166 = exp2((_2155 * (-1.44269502162933349609375)) * (1.0 - _2157.w));
        float _2167 = log2(_2166);
        float _2183 = log2(_1871);
        _1951 = (exp2(_2183 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2167 * cbSceneParam._m0[78u].x)) * _2157.x) / cbSceneParam._m0[78u].x)) + _1868;
        _1953 = (exp2(_2183 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2167 * cbSceneParam._m0[78u].y)) * _2157.y) / cbSceneParam._m0[78u].y)) + _1869;
        _1955 = (exp2(_2183 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2167 * cbSceneParam._m0[78u].z)) * _2157.z) / cbSceneParam._m0[78u].z)) + _1870;
        _1957 = _2166 * _1871;
    }
    else
    {
        _1951 = _1868;
        _1953 = _1869;
        _1955 = _1870;
        _1957 = _1871;
    }
    float _1969 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1970 = _1969 == 3.0;
    float _1971 = log2(_1957);
    float _1978 = exp2(_1971 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)));
    float _1979 = exp2(_1971 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1838 : (isnan(_1838) ? 0.0 : max(_1838, 0.0)));
    float _1980 = exp2(_1971 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1839 : (isnan(_1839) ? 0.0 : max(_1839, 0.0)));
    float _1989 = (_1969 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1989 * (_1970 ? _1978 : (_1978 + (cbSceneParam._m0[72u].w * _1951)));
    SV_Target.y = _1989 * (_1970 ? _1979 : (_1979 + (cbSceneParam._m0[72u].w * _1953)));
    SV_Target.z = _1989 * (_1970 ? _1980 : (_1980 + (cbSceneParam._m0[72u].w * _1955)));
    SV_Target.w = cbInstanceData._m0[_1843].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1843].w;
}


