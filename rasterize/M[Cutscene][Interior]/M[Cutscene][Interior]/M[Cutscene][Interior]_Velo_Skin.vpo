#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 9) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;
layout(location = 8) out vec4 TEXCOORD_9;
layout(location = 9) out vec4 TEXCOORD_10;
layout(location = 10) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _257 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _271 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _281 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _282 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _283 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _293 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _294 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _295 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _305 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _307 = texelFetch(g_InstanceIndexBuffer, int(_305));
    uint _308 = _307.x;
    precise float _309 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _314 = isnan(_309) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _309 : max(0.001000000047497451305389404296875, _309));
    precise float _316 = BLENDWEIGHT.x / _314;
    precise float _317 = BLENDWEIGHT.y / _314;
    precise float _318 = BLENDWEIGHT.z / _314;
    precise float _319 = BLENDWEIGHT.w / _314;
    uint _321 = _308 * 13u;
    uvec4 _326 = floatBitsToUint(cbInstanceData._m0[_321 + 4u]);
    uint _327 = _326.x;
    uint _329 = (_327 + uint(float(BLENDINDICES.x))) * 3u;
    uint _336 = _329 + 1u;
    uint _343 = _329 + 2u;
    precise float _350 = _316 * cbObjMatrix._m0[_329].x;
    precise float _351 = _316 * cbObjMatrix._m0[_336].x;
    precise float _352 = _316 * cbObjMatrix._m0[_343].x;
    precise float _353 = _316 * cbObjMatrix._m0[_329].y;
    precise float _354 = _316 * cbObjMatrix._m0[_336].y;
    precise float _355 = _316 * cbObjMatrix._m0[_343].y;
    precise float _356 = _316 * cbObjMatrix._m0[_329].z;
    precise float _357 = _316 * cbObjMatrix._m0[_336].z;
    precise float _358 = _316 * cbObjMatrix._m0[_343].z;
    precise float _359 = _316 * cbObjMatrix._m0[_329].w;
    precise float _360 = _316 * cbObjMatrix._m0[_336].w;
    precise float _361 = _316 * cbObjMatrix._m0[_343].w;
    uint _364 = (_327 + uint(float(BLENDINDICES.y))) * 3u;
    uint _371 = _364 + 1u;
    uint _378 = _364 + 2u;
    precise float _385 = _317 * cbObjMatrix._m0[_364].x;
    precise float _386 = _317 * cbObjMatrix._m0[_371].x;
    precise float _387 = _317 * cbObjMatrix._m0[_378].x;
    precise float _388 = _317 * cbObjMatrix._m0[_364].y;
    precise float _389 = _317 * cbObjMatrix._m0[_371].y;
    precise float _390 = _317 * cbObjMatrix._m0[_378].y;
    precise float _391 = _317 * cbObjMatrix._m0[_364].z;
    precise float _392 = _317 * cbObjMatrix._m0[_371].z;
    precise float _393 = _317 * cbObjMatrix._m0[_378].z;
    precise float _394 = _317 * cbObjMatrix._m0[_364].w;
    precise float _395 = _317 * cbObjMatrix._m0[_371].w;
    precise float _396 = _317 * cbObjMatrix._m0[_378].w;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    uint _411 = (_327 + uint(float(BLENDINDICES.z))) * 3u;
    uint _418 = _411 + 1u;
    uint _425 = _411 + 2u;
    precise float _432 = _318 * cbObjMatrix._m0[_411].x;
    precise float _433 = _318 * cbObjMatrix._m0[_418].x;
    precise float _434 = _318 * cbObjMatrix._m0[_425].x;
    precise float _435 = _318 * cbObjMatrix._m0[_411].y;
    precise float _436 = _318 * cbObjMatrix._m0[_418].y;
    precise float _437 = _318 * cbObjMatrix._m0[_425].y;
    precise float _438 = _318 * cbObjMatrix._m0[_411].z;
    precise float _439 = _318 * cbObjMatrix._m0[_418].z;
    precise float _440 = _318 * cbObjMatrix._m0[_425].z;
    precise float _441 = _318 * cbObjMatrix._m0[_411].w;
    precise float _442 = _318 * cbObjMatrix._m0[_418].w;
    precise float _443 = _318 * cbObjMatrix._m0[_425].w;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    uint _458 = (_327 + uint(float(BLENDINDICES.w))) * 3u;
    uint _465 = _458 + 1u;
    uint _472 = _458 + 2u;
    precise float _479 = _319 * cbObjMatrix._m0[_458].x;
    precise float _480 = _319 * cbObjMatrix._m0[_465].x;
    precise float _481 = _319 * cbObjMatrix._m0[_472].x;
    precise float _482 = _319 * cbObjMatrix._m0[_458].y;
    precise float _483 = _319 * cbObjMatrix._m0[_465].y;
    precise float _484 = _319 * cbObjMatrix._m0[_472].y;
    precise float _485 = _319 * cbObjMatrix._m0[_458].z;
    precise float _486 = _319 * cbObjMatrix._m0[_465].z;
    precise float _487 = _319 * cbObjMatrix._m0[_472].z;
    precise float _488 = _319 * cbObjMatrix._m0[_458].w;
    precise float _489 = _319 * cbObjMatrix._m0[_465].w;
    precise float _490 = _319 * cbObjMatrix._m0[_472].w;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = _451 + _486;
    precise float _499 = _452 + _487;
    precise float _500 = _453 + _488;
    precise float _501 = _454 + _489;
    precise float _502 = _455 + _490;
    precise float _503 = POSITION.x * _491;
    precise float _504 = POSITION.y * _494;
    precise float _505 = _504 + _503;
    precise float _506 = POSITION.z * _497;
    precise float _507 = _506 + _505;
    precise float _508 = 1.0 * _500;
    precise float _509 = _508 + _507;
    precise float _510 = POSITION.x * _492;
    precise float _511 = POSITION.y * _495;
    precise float _512 = _511 + _510;
    precise float _513 = POSITION.z * _498;
    precise float _514 = _513 + _512;
    precise float _515 = 1.0 * _501;
    precise float _516 = _515 + _514;
    precise float _517 = POSITION.x * _493;
    precise float _518 = POSITION.y * _496;
    precise float _519 = _518 + _517;
    precise float _520 = POSITION.z * _499;
    precise float _521 = _520 + _519;
    precise float _522 = 1.0 * _502;
    precise float _523 = _522 + _521;
    float _698 = (((((cbPrevObjMatrix._m0[_364].w * _317) + (cbPrevObjMatrix._m0[_329].w * _316)) + (cbPrevObjMatrix._m0[_411].w * _318)) + (cbPrevObjMatrix._m0[_458].w * _319)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_364].z * _317) + (cbPrevObjMatrix._m0[_329].z * _316)) + (cbPrevObjMatrix._m0[_411].z * _318)) + (cbPrevObjMatrix._m0[_458].z * _319), fma(POSITION.y, (((cbPrevObjMatrix._m0[_364].y * _317) + (cbPrevObjMatrix._m0[_329].y * _316)) + (cbPrevObjMatrix._m0[_411].y * _318)) + (cbPrevObjMatrix._m0[_458].y * _319), ((((cbPrevObjMatrix._m0[_364].x * _317) + (cbPrevObjMatrix._m0[_329].x * _316)) + (cbPrevObjMatrix._m0[_411].x * _318)) + (cbPrevObjMatrix._m0[_458].x * _319)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _699 = (((((cbPrevObjMatrix._m0[_371].w * _317) + (cbPrevObjMatrix._m0[_336].w * _316)) + (cbPrevObjMatrix._m0[_418].w * _318)) + (cbPrevObjMatrix._m0[_465].w * _319)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_371].z * _317) + (cbPrevObjMatrix._m0[_336].z * _316)) + (cbPrevObjMatrix._m0[_418].z * _318)) + (cbPrevObjMatrix._m0[_465].z * _319), fma(POSITION.y, (((cbPrevObjMatrix._m0[_371].y * _317) + (cbPrevObjMatrix._m0[_336].y * _316)) + (cbPrevObjMatrix._m0[_418].y * _318)) + (cbPrevObjMatrix._m0[_465].y * _319), ((((cbPrevObjMatrix._m0[_371].x * _317) + (cbPrevObjMatrix._m0[_336].x * _316)) + (cbPrevObjMatrix._m0[_418].x * _318)) + (cbPrevObjMatrix._m0[_465].x * _319)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _700 = (((((cbPrevObjMatrix._m0[_378].w * _317) + (cbPrevObjMatrix._m0[_343].w * _316)) + (cbPrevObjMatrix._m0[_425].w * _318)) + (cbPrevObjMatrix._m0[_472].w * _319)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_378].z * _317) + (cbPrevObjMatrix._m0[_343].z * _316)) + (cbPrevObjMatrix._m0[_425].z * _318)) + (cbPrevObjMatrix._m0[_472].z * _319), fma(POSITION.y, (((cbPrevObjMatrix._m0[_378].y * _317) + (cbPrevObjMatrix._m0[_343].y * _316)) + (cbPrevObjMatrix._m0[_425].y * _318)) + (cbPrevObjMatrix._m0[_472].y * _319), ((((cbPrevObjMatrix._m0[_378].x * _317) + (cbPrevObjMatrix._m0[_343].x * _316)) + (cbPrevObjMatrix._m0[_425].x * _318)) + (cbPrevObjMatrix._m0[_472].x * _319)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _747 = fma(_260, _497, fma(_259, _494, _491 * _257));
    float _750 = fma(_260, _498, fma(_259, _495, _492 * _257));
    float _753 = fma(_260, _499, fma(_259, _496, _493 * _257));
    precise float _787 = _509 - cbSceneParam._m0[3u].x;
    precise float _788 = _516 - cbSceneParam._m0[3u].y;
    precise float _789 = _523 - cbSceneParam._m0[3u].z;
    precise float _817 = _787 * cbSceneParam._m0[24u].x;
    precise float _818 = _788 * cbSceneParam._m0[24u].y;
    precise float _819 = _818 + _817;
    precise float _820 = _789 * cbSceneParam._m0[24u].z;
    precise float _821 = _820 + _819;
    precise float _822 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _823 = _822 + _821;
    precise float _824 = _787 * cbSceneParam._m0[25u].x;
    precise float _825 = _788 * cbSceneParam._m0[25u].y;
    precise float _826 = _825 + _824;
    precise float _827 = _789 * cbSceneParam._m0[25u].z;
    precise float _828 = _827 + _826;
    precise float _829 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _830 = _829 + _828;
    precise float _831 = _787 * cbSceneParam._m0[26u].x;
    precise float _832 = _788 * cbSceneParam._m0[26u].y;
    precise float _833 = _832 + _831;
    precise float _834 = _789 * cbSceneParam._m0[26u].z;
    precise float _835 = _834 + _833;
    precise float _836 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _837 = _836 + _835;
    precise float _838 = _787 * cbSceneParam._m0[27u].x;
    precise float _839 = _788 * cbSceneParam._m0[27u].y;
    precise float _840 = _839 + _838;
    precise float _841 = _789 * cbSceneParam._m0[27u].z;
    precise float _842 = _841 + _840;
    precise float _843 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _844 = _843 + _842;
    gl_Position.x = _823;
    gl_Position.y = _830;
    gl_Position.z = _837;
    gl_Position.w = _844;
    POSITION_1.x = _823;
    POSITION_1.y = _830;
    POSITION_1.z = _837;
    POSITION_1.w = _844;
    NORMAL_1.x = _747;
    NORMAL_1.y = _750;
    NORMAL_1.z = _753;
    NORMAL_1.w = float(_308);
    TANGENT_1.x = fma(_271, _497, fma(_270, _494, _491 * _269));
    TANGENT_1.y = fma(_271, _498, fma(_270, _495, _492 * _269));
    TANGENT_1.z = fma(_271, _499, fma(_270, _496, _493 * _269));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_283, _497, fma(_282, _494, _491 * _281));
    TANGENT_2_1.y = fma(_283, _498, fma(_282, _495, _492 * _281));
    TANGENT_2_1.z = fma(_283, _499, fma(_282, _496, _493 * _281));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_295, _497, fma(_294, _494, _491 * _293));
    TANGENT_4_1.y = fma(_295, _498, fma(_294, _495, _492 * _293));
    TANGENT_4_1.z = fma(_295, _499, fma(_294, _496, _493 * _293));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_9.x = _823;
    TEXCOORD_9.y = _830;
    TEXCOORD_9.z = _837;
    TEXCOORD_9.w = _844;
    TEXCOORD_10.x = fma(_700, cbSceneParam._m0[29u].z, fma(_699, cbSceneParam._m0[29u].y, _698 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_700, cbSceneParam._m0[30u].z, fma(_699, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _698)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_700, cbSceneParam._m0[31u].z, fma(_699, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _698)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_700, cbSceneParam._m0[32u].z, fma(_699, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _698)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _747;
    TEXCOORD_11.y = _750;
    TEXCOORD_11.z = _753;
    gl_ClipDistance[0u] = dot(vec4(_823, _830, _837, _844), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_823, _830, _837, _844), vec4(cbInstanceData._m0[_321 + 3u]));
}


