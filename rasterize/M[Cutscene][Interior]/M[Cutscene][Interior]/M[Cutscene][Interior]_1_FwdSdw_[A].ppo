#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _668;
uint _2140;
uint _2141;
uint _2142;
uint _2364;
uint _2365;
uint _2366;
float _2598;
float _2599;
float _2600;
float _2601;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _184 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _185 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _186 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _191 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _198 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _202 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _250 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _260 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _250);
    float _261 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _250);
    float _262 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _250);
    vec4 _281 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _316 = cbMtdParam._m0[24u].x + _260;
    float _317 = cbMtdParam._m0[24u].y + _261;
    float _318 = cbMtdParam._m0[24u].z + _262;
    float _335 = (-0.0) - dot(vec3(_316, _317, _318), vec3(_191 * _184, _191 * _185, _191 * _186));
    float _336 = (-0.0) - dot(vec3(_316, _317, _318), vec3(_202 * TANGENT.x, _202 * TANGENT.y, _202 * TANGENT.z));
    float _337 = (-0.0) - dot(vec3(_316, _317, _318), vec3((-0.0) - (NORMAL.x * _198), (-0.0) - (NORMAL.y * _198), (-0.0) - (NORMAL.z * _198)));
    float _341 = inversesqrt(dot(vec3(_335, _336, _337), vec3(_335, _336, _337)));
    float _344 = _341 * _337;
    float _347 = ((_341 * _335) + (((_281.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x)) * cbMtdParam._m0[20u].w;
    float _348 = ((_341 * _336) + (((_281.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y)) * cbMtdParam._m0[20u].z;
    float _349 = fract(TEXCOORD.x);
    float _350 = fract(TEXCOORD.y);
    float _356;
    if (_347 > 0.0)
    {
        _356 = (1.0 - _349) / _347;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_347 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _349) / _347;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _356 = frontier_phi_3_2_ladder;
    }
    float _364;
    if (_348 > 0.0)
    {
        _364 = (1.0 - _350) / _348;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_348 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _350) / _348;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _364 = frontier_phi_7_6_ladder;
    }
    float _368 = (_344 > 0.0) ? (cbMtdParam._m0[16u].x / _344) : 5000.0;
    float _369 = isnan(_364) ? _356 : (isnan(_356) ? _364 : min(_356, _364));
    float _370 = isnan(_368) ? _369 : (isnan(_369) ? _368 : min(_369, _368));
    float _374 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _381 = ((_370 * _344) + _374) / _374;
    vec4 _406 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * ((((((_349 + (-0.5)) + (_370 * _347)) / _381) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * ((((((_350 + (-0.5)) + (_370 * _348)) / _381) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _434 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _438 = inversesqrt(dot(vec3(_260, _261, _262), vec3(_260, _261, _262)));
    float _439 = _260 * _438;
    float _440 = _261 * _438;
    float _441 = _262 * _438;
    vec4 _446 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _448 = _446.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _517 = sqrt(((_260 * _260) + (_261 * _261)) + (_262 * _262));
        float _523 = (cbMatDynParam._m0[5u].x * _517) + cbMatDynParam._m0[5u].y;
        float _2620 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
        float _524 = isnan(1.0) ? _2620 : (isnan(_2620) ? 1.0 : min(_2620, 1.0));
        float _528 = (cbMatDynParam._m0[5u].z * _517) + cbMatDynParam._m0[5u].w;
        float _2631 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2631 : (isnan(_2631) ? 1.0 : min(_2631, 1.0))) - _524)) + _524) < ((_448 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _460 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _461 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _470 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_460 * cbSceneParam._m0[86u].x, _461 * cbSceneParam._m0[86u].y));
    float _473 = _470.x * TEXCOORD_4.z;
    float _474 = (-0.0) - _439;
    float _475 = (-0.0) - _440;
    float _476 = (-0.0) - _441;
    float _498 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _502 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _506 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _667;
    float _669;
    float _670;
    float _671;
    float _672;
    float _673;
    float _674;
    float _675;
    float _676;
    float _677;
    float _678;
    float _679;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _590 = (cbModelParam._m0[37u].x * ((((fma(_506, cbModelParam._m0[26u].z, fma(_502, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _498)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _592 = (cbModelParam._m0[37u].y * ((((fma(_506, cbModelParam._m0[27u].z, fma(_502, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _498)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _593 = (((((fma(_506, cbModelParam._m0[28u].z, fma(_502, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _498)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _596 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_590, _592, _593), 0.0);
        vec4 _603 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_590, _592, _593), 0.0);
        vec4 _610 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_590, _592, _593), 0.0);
        vec4 _617 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_590, _592, _593), 0.0);
        float _630 = exp2((_596.w + (-0.5)) * 20.0) * 2.0;
        float _640 = exp2((_603.w + (-0.5)) * 20.0) * 2.0;
        float _650 = exp2((_610.w + (-0.5)) * 20.0) * 2.0;
        float _660 = exp2((_617.w + (-0.5)) * 20.0) * 2.0;
        float _661 = _660 * (_617.x + (-0.5));
        float _662 = _660 * (_617.y + (-0.5));
        float _663 = _660 * (_617.z + (-0.5));
        _667 = _630 * (_596.z + (-0.5));
        _669 = _630 * (_596.y + (-0.5));
        _670 = _630 * (_596.x + (-0.5));
        _671 = _640 * (_603.z + (-0.5));
        _672 = _640 * (_603.y + (-0.5));
        _673 = _640 * (_603.x + (-0.5));
        _674 = _650 * (_610.z + (-0.5));
        _675 = _650 * (_610.y + (-0.5));
        _676 = _650 * (_610.x + (-0.5));
        _677 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        _678 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
        _679 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    }
    else
    {
        _667 = _668;
        _669 = _668;
        _670 = _668;
        _671 = _668;
        _672 = _668;
        _673 = _668;
        _674 = _668;
        _675 = _668;
        _676 = _668;
        _677 = _668;
        _678 = _668;
        _679 = _668;
    }
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    float _820;
    float _821;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _736 = (cbModelParam._m0[38u].x * ((((fma(_506, cbModelParam._m0[30u].z, fma(_502, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _498)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _737 = (cbModelParam._m0[38u].y * ((((fma(_506, cbModelParam._m0[31u].z, fma(_502, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _498)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _738 = (((((fma(_506, cbModelParam._m0[32u].z, fma(_502, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _498)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _740 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _747 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _754 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        vec4 _761 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_736, _737, _738), 0.0);
        float _773 = exp2((_740.w + (-0.5)) * 20.0) * 2.0;
        float _783 = exp2((_747.w + (-0.5)) * 20.0) * 2.0;
        float _793 = exp2((_754.w + (-0.5)) * 20.0) * 2.0;
        float _803 = exp2((_761.w + (-0.5)) * 20.0) * 2.0;
        float _804 = _803 * (_761.x + (-0.5));
        float _805 = _803 * (_761.y + (-0.5));
        float _806 = _803 * (_761.z + (-0.5));
        _810 = _773 * (_740.z + (-0.5));
        _811 = _773 * (_740.y + (-0.5));
        _812 = _773 * (_740.x + (-0.5));
        _813 = _783 * (_747.z + (-0.5));
        _814 = _783 * (_747.y + (-0.5));
        _815 = _783 * (_747.x + (-0.5));
        _816 = _793 * (_754.z + (-0.5));
        _817 = _793 * (_754.y + (-0.5));
        _818 = _793 * (_754.x + (-0.5));
        _819 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
        _820 = isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0));
        _821 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    }
    else
    {
        _810 = _668;
        _811 = _668;
        _812 = _668;
        _813 = _668;
        _814 = _668;
        _815 = _668;
        _816 = _668;
        _817 = _668;
        _818 = _668;
        _819 = _668;
        _820 = _668;
        _821 = _668;
    }
    float _836 = _439 * (-0.5);
    float _837 = _440 * (-0.5);
    float _838 = _441 * (-0.5);
    float _839 = dot(vec4(_836, _837, _838, 1.0), vec4(_812, _815, _818, _821));
    float _842 = dot(vec4(_836, _837, _838, 1.0), vec4(_811, _814, _817, _820));
    float _845 = dot(vec4(_836, _837, _838, 1.0), vec4(_810, _813, _816, _819));
    float _880;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _852 = dot(vec4(_836, _837, _838, 1.0), vec4(_667, _671, _674, _677));
        float _856 = dot(vec4(_836, _837, _838, 1.0), vec4(_669, _672, _675, _678));
        float _860 = dot(vec4(_836, _837, _838, 1.0), vec4(_670, _673, _676, _679));
        float _867 = dot(vec4(cbModelParam._m0[39u]), vec4(_836, _837, _838, 1.0));
        _880 = dot(vec3(isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0)), isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0)), isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_867) ? 0.0 : (isnan(0.0) ? _867 : max(0.0, _867))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _880 = 1.0;
    }
    float _891;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _882 = dot(vec4(cbModelParam._m0[40u]), vec4(_836, _837, _838, 1.0));
        _891 = dot(vec3(isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0)), isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0)), isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_882) ? 0.0 : (isnan(0.0) ? _882 : max(0.0, _882))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _891 = 1.0;
    }
    float _895 = (_891 * cbModelParam._m0[1u].x) + (_880 * (1.0 - cbModelParam._m0[1u].x));
    float _901 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _985;
    float _987;
    float _989;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _952 = fma(_506, cbModelParam._m0[13u].z, fma(_502, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _498)) + cbModelParam._m0[13u].w;
        float _956 = fma(_506, cbModelParam._m0[14u].z, fma(_502, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _498)) + cbModelParam._m0[14u].w;
        float _960 = fma(_506, cbModelParam._m0[15u].z, fma(_502, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _498)) + cbModelParam._m0[15u].w;
        float _963 = fma(_476, cbModelParam._m0[13u].z, fma(_475, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _474));
        float _966 = fma(_476, cbModelParam._m0[14u].z, fma(_475, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _474));
        float _969 = fma(_476, cbModelParam._m0[15u].z, fma(_475, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _474));
        float _995;
        if (_963 > 0.0)
        {
            _995 = abs((1.0 - _952) / _963);
        }
        else
        {
            float frontier_phi_25_23_ladder;
            if (_963 < 0.0)
            {
                frontier_phi_25_23_ladder = abs((_952 + 1.0) / _963);
            }
            else
            {
                frontier_phi_25_23_ladder = 5000.0;
            }
            _995 = frontier_phi_25_23_ladder;
        }
        float _1185;
        if (_966 > 0.0)
        {
            _1185 = abs((1.0 - _956) / _966);
        }
        else
        {
            float frontier_phi_34_30_ladder;
            if (_966 < 0.0)
            {
                frontier_phi_34_30_ladder = abs((_956 + 1.0) / _966);
            }
            else
            {
                frontier_phi_34_30_ladder = 5000.0;
            }
            _1185 = frontier_phi_34_30_ladder;
        }
        float _1539;
        if (_969 > 0.0)
        {
            _1539 = abs((1.0 - _960) / _969);
        }
        else
        {
            float frontier_phi_46_41_ladder;
            if (_969 < 0.0)
            {
                frontier_phi_46_41_ladder = abs((_960 + 1.0) / _969);
            }
            else
            {
                frontier_phi_46_41_ladder = 5000.0;
            }
            _1539 = frontier_phi_46_41_ladder;
        }
        float _1541 = isnan(_1185) ? _995 : (isnan(_995) ? _1185 : min(_995, _1185));
        float _1542 = isnan(_1539) ? _1541 : (isnan(_1541) ? _1539 : min(_1541, _1539));
        float _1546 = (_1542 * _963) + _952;
        float _1547 = (_1542 * _966) + _956;
        float _1548 = (_1542 * _969) + _960;
        float _1549 = _1542 * 9.9999997473787516355514526367188e-05;
        float _1551 = (-1.0) - _1549;
        float _1553 = _1549 + 1.0;
        float frontier_phi_24_46_ladder;
        float frontier_phi_24_46_ladder_1;
        float frontier_phi_24_46_ladder_2;
        if ((_1548 > _1553) || ((_1548 < _1551) || ((_1547 > _1553) || ((_1547 < _1551) || ((_1546 < _1551) || (_1546 > _1553))))))
        {
            frontier_phi_24_46_ladder = 0.0;
            frontier_phi_24_46_ladder_1 = 0.0;
            frontier_phi_24_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1782 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1548, cbModelParam._m0[9u].z, fma(_1547, cbModelParam._m0[9u].y, _1546 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1548, cbModelParam._m0[10u].z, fma(_1547, cbModelParam._m0[10u].y, _1546 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1548, cbModelParam._m0[11u].z, fma(_1547, cbModelParam._m0[11u].y, _1546 * cbModelParam._m0[11u].x))), _901);
            frontier_phi_24_46_ladder = _1782.z * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_1 = _1782.y * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_2 = _1782.x * cbModelParam._m0[1u].y;
        }
        _985 = frontier_phi_24_46_ladder_2;
        _987 = frontier_phi_24_46_ladder_1;
        _989 = frontier_phi_24_46_ladder;
    }
    else
    {
        vec4 _973 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_474, _475, _476), _901);
        _985 = _973.x * cbModelParam._m0[1u].y;
        _987 = _973.y * cbModelParam._m0[1u].y;
        _989 = _973.z * cbModelParam._m0[1u].y;
    }
    float _992 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1082;
    float _1084;
    float _1086;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1046 = fma(_506, cbModelParam._m0[21u].z, fma(_502, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _498)) + cbModelParam._m0[21u].w;
        float _1050 = fma(_506, cbModelParam._m0[22u].z, fma(_502, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _498)) + cbModelParam._m0[22u].w;
        float _1054 = fma(_506, cbModelParam._m0[23u].z, fma(_502, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _498)) + cbModelParam._m0[23u].w;
        float _1057 = fma(_476, cbModelParam._m0[21u].z, fma(_475, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _474));
        float _1060 = fma(_476, cbModelParam._m0[22u].z, fma(_475, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _474));
        float _1063 = fma(_476, cbModelParam._m0[23u].z, fma(_475, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _474));
        float _1190;
        if (_1057 > 0.0)
        {
            _1190 = abs((1.0 - _1046) / _1057);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1057 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1046 + 1.0) / _1057);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _1190 = frontier_phi_36_32_ladder;
        }
        float _1566;
        if (_1060 > 0.0)
        {
            _1566 = abs((1.0 - _1050) / _1060);
        }
        else
        {
            float frontier_phi_48_43_ladder;
            if (_1060 < 0.0)
            {
                frontier_phi_48_43_ladder = abs((_1050 + 1.0) / _1060);
            }
            else
            {
                frontier_phi_48_43_ladder = 5000.0;
            }
            _1566 = frontier_phi_48_43_ladder;
        }
        float _1907;
        if (_1063 > 0.0)
        {
            _1907 = abs((1.0 - _1054) / _1063);
        }
        else
        {
            float frontier_phi_60_55_ladder;
            if (_1063 < 0.0)
            {
                frontier_phi_60_55_ladder = abs((_1054 + 1.0) / _1063);
            }
            else
            {
                frontier_phi_60_55_ladder = 5000.0;
            }
            _1907 = frontier_phi_60_55_ladder;
        }
        float _1909 = isnan(_1566) ? _1190 : (isnan(_1190) ? _1566 : min(_1190, _1566));
        float _1910 = isnan(_1907) ? _1909 : (isnan(_1909) ? _1907 : min(_1909, _1907));
        float _1914 = (_1910 * _1057) + _1046;
        float _1915 = (_1910 * _1060) + _1050;
        float _1916 = (_1910 * _1063) + _1054;
        float _1917 = _1910 * 9.9999997473787516355514526367188e-05;
        float _1918 = (-1.0) - _1917;
        float _1920 = _1917 + 1.0;
        float frontier_phi_33_60_ladder;
        float frontier_phi_33_60_ladder_1;
        float frontier_phi_33_60_ladder_2;
        if ((_1916 > _1920) || ((_1916 < _1918) || ((_1915 > _1920) || ((_1915 < _1918) || ((_1914 < _1918) || (_1914 > _1920))))))
        {
            frontier_phi_33_60_ladder = 0.0;
            frontier_phi_33_60_ladder_1 = 0.0;
            frontier_phi_33_60_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2038 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1916, cbModelParam._m0[17u].z, fma(_1915, cbModelParam._m0[17u].y, _1914 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1916, cbModelParam._m0[18u].z, fma(_1915, cbModelParam._m0[18u].y, _1914 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1916, cbModelParam._m0[19u].z, fma(_1915, cbModelParam._m0[19u].y, _1914 * cbModelParam._m0[19u].x))), _992);
            frontier_phi_33_60_ladder = _2038.z * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_1 = _2038.y * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_2 = _2038.x * cbModelParam._m0[1u].z;
        }
        _1082 = frontier_phi_33_60_ladder_2;
        _1084 = frontier_phi_33_60_ladder_1;
        _1086 = frontier_phi_33_60_ladder;
    }
    else
    {
        vec4 _1066 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_474, _475, _476), _992);
        _1082 = _1066.x * cbModelParam._m0[1u].z;
        _1084 = _1066.y * cbModelParam._m0[1u].z;
        _1086 = _1066.z * cbModelParam._m0[1u].z;
    }
    float _1098 = _473 * 0.01200000010430812835693359375;
    float _1100 = _1098 * ((cbModelParam._m0[1u].w * (_1082 - _985)) + _985);
    float _1101 = _1098 * ((cbModelParam._m0[1u].w * (_1084 - _987)) + _987);
    float _1102 = _1098 * ((cbModelParam._m0[1u].w * (_1086 - _989)) + _989);
    float _1123 = fma(_1102, cbSceneParam._m0[89u].z, fma(_1101, cbSceneParam._m0[89u].y, _1100 * cbSceneParam._m0[89u].x));
    float _1126 = fma(_1102, cbSceneParam._m0[90u].z, fma(_1101, cbSceneParam._m0[90u].y, _1100 * cbSceneParam._m0[90u].x));
    float _1129 = fma(_1102, cbSceneParam._m0[91u].z, fma(_1101, cbSceneParam._m0[91u].y, _1100 * cbSceneParam._m0[91u].x));
    float _1164 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1168 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1172 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1176 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1177 = _1164 / _1176;
    float _1178 = _1168 / _1176;
    float _1179 = _1172 / _1176;
    float _1327;
    float _1328;
    float _1329;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1206 = ((uint(_1179 > cbSceneParam._m0[59u].y) + uint(_1179 > cbSceneParam._m0[59u].x)) + uint(_1179 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1207 = _1206 + 43u;
        uint _1215 = _1206 + 44u;
        uint _1223 = _1206 + 45u;
        uint _1231 = _1206 + 46u;
        float _1242 = fma(_1176, cbSceneParam._m0[_1207].w, fma(_1172, cbSceneParam._m0[_1207].z, fma(_1168, cbSceneParam._m0[_1207].y, _1164 * cbSceneParam._m0[_1207].x)));
        float _1246 = fma(_1176, cbSceneParam._m0[_1215].w, fma(_1172, cbSceneParam._m0[_1215].z, fma(_1168, cbSceneParam._m0[_1215].y, _1164 * cbSceneParam._m0[_1215].x)));
        float _1254 = fma(_1176, cbSceneParam._m0[_1231].w, fma(_1172, cbSceneParam._m0[_1231].z, fma(_1168, cbSceneParam._m0[_1231].y, _1164 * cbSceneParam._m0[_1231].x)));
        float _1259 = cbSceneParam._m0[33u].z * _1254;
        float _1261 = cbSceneParam._m0[33u].w * _1254;
        float _1264 = fma(_1176, cbSceneParam._m0[_1223].w, fma(_1172, cbSceneParam._m0[_1223].z, fma(_1168, cbSceneParam._m0[_1223].y, _1164 * cbSceneParam._m0[_1223].x))) / _1254;
        float _1312 = (cbSceneParam._m0[33u].x - sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179))) * cbSceneParam._m0[33u].y;
        float _2757 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1320 = (isnan(1.0) ? _2757 : (isnan(_2757) ? 1.0 : min(_2757, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1259 + _1242) / _1254, (_1261 + _1246) / _1254), _1264), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1261 + _1242) / _1254, (_1246 - _1259) / _1254), _1264), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1242 - _1259) / _1254, (_1246 - _1261) / _1254), _1264), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1242 - _1261) / _1254, (_1259 + _1246) / _1254), _1264), 0.0)).x), vec4(0.25)));
        _1327 = 1.0 - (_1320 * cbSceneParam._m0[34u].x);
        _1328 = 1.0 - (_1320 * cbSceneParam._m0[34u].y);
        _1329 = 1.0 - (_1320 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1327 = 1.0;
        _1328 = 1.0;
        _1329 = 1.0;
    }
    float _1393;
    float _1395;
    float _1397;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1381 = fma(_1176, cbSceneParam._m0[63u].w, fma(_1172, cbSceneParam._m0[63u].z, fma(_1168, cbSceneParam._m0[63u].y, _1164 * cbSceneParam._m0[63u].x)));
        float _1382 = fma(_1176, cbSceneParam._m0[60u].w, fma(_1172, cbSceneParam._m0[60u].z, fma(_1168, cbSceneParam._m0[60u].y, _1164 * cbSceneParam._m0[60u].x))) / _1381;
        float _1383 = fma(_1176, cbSceneParam._m0[61u].w, fma(_1172, cbSceneParam._m0[61u].z, fma(_1168, cbSceneParam._m0[61u].y, _1164 * cbSceneParam._m0[61u].x))) / _1381;
        float frontier_phi_45_44_ladder;
        float frontier_phi_45_44_ladder_1;
        float frontier_phi_45_44_ladder_2;
        if ((((_1382 >= cbSceneParam._m0[64u].x) && (_1383 >= cbSceneParam._m0[64u].y)) && (_1382 <= cbSceneParam._m0[64u].z)) && (_1383 <= cbSceneParam._m0[64u].w))
        {
            float _1579 = fma(_1176, cbSceneParam._m0[62u].w, fma(_1172, cbSceneParam._m0[62u].z, fma(_1168, cbSceneParam._m0[62u].y, _1164 * cbSceneParam._m0[62u].x))) / _1381;
            float _1583 = isnan(cbSceneParam._m0[41u].w) ? _1579 : (isnan(_1579) ? cbSceneParam._m0[41u].w : max(_1579, cbSceneParam._m0[41u].w));
            float _1626 = (cbSceneParam._m0[33u].x - sqrt(((_1178 * _1178) + (_1177 * _1177)) + (_1179 * _1179))) * cbSceneParam._m0[33u].y;
            float _2773 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
            float _1633 = (isnan(1.0) ? _2773 : (isnan(_2773) ? 1.0 : min(_2773, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1382, cbSceneParam._m0[33u].w + _1383), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1382, _1383 - cbSceneParam._m0[33u].z), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1382 - cbSceneParam._m0[33u].z, _1383 - cbSceneParam._m0[33u].w), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1382 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1383), _1583), 0.0)).x), vec4(0.25)));
            float _1637 = 1.0 - (_1633 * cbSceneParam._m0[34u].x);
            float _1638 = 1.0 - (_1633 * cbSceneParam._m0[34u].y);
            float _1639 = 1.0 - (_1633 * cbSceneParam._m0[34u].z);
            frontier_phi_45_44_ladder = isnan(_1639) ? _1329 : (isnan(_1329) ? _1639 : min(_1329, _1639));
            frontier_phi_45_44_ladder_1 = isnan(_1637) ? _1327 : (isnan(_1327) ? _1637 : min(_1327, _1637));
            frontier_phi_45_44_ladder_2 = isnan(_1638) ? _1328 : (isnan(_1328) ? _1638 : min(_1328, _1638));
        }
        else
        {
            frontier_phi_45_44_ladder = _1329;
            frontier_phi_45_44_ladder_1 = _1327;
            frontier_phi_45_44_ladder_2 = _1328;
        }
        _1393 = frontier_phi_45_44_ladder_1;
        _1395 = frontier_phi_45_44_ladder_2;
        _1397 = frontier_phi_45_44_ladder;
    }
    else
    {
        _1393 = _1327;
        _1395 = _1328;
        _1397 = _1329;
    }
    uint _1399 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1403 = floatBitsToUint(cbInstanceData._m0[_1399 + 5u]);
    uint _1405 = _1403.x * 14u;
    uint _1406 = _1405 + 13u;
    float _1411 = _473 + (-1.0);
    float _1414 = (cbLight._m0[_1406].x * _1411) + 1.0;
    float _1415 = (cbLight._m0[_1406].y * _1411) + 1.0;
    uint _1416 = _1405 + 8u;
    float _1427 = cbLight._m0[_1405].x + _439;
    float _1428 = cbLight._m0[_1405].y + _440;
    float _1429 = cbLight._m0[_1405].z + _441;
    float _1433 = inversesqrt(dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429)));
    float _1437 = dot(vec3(0.0), vec3(cbLight._m0[_1405].xyz));
    float _2799 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
    float _1440 = isnan(1.0) ? _2799 : (isnan(_2799) ? 1.0 : min(_2799, 1.0));
    float _1441 = dot(vec3(0.0), vec3(_439, _440, _441));
    float _2810 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
    float _1444 = isnan(1.0) ? _2810 : (isnan(_2810) ? 1.0 : min(_2810, 1.0));
    float _1445 = dot(vec3(cbLight._m0[_1405].xyz), vec3(_1427 * _1433, _1428 * _1433, _1429 * _1433));
    float _2821 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
    float _1456 = (exp2(log2(1.0 - (isnan(1.0) ? _2821 : (isnan(_2821) ? 1.0 : min(_2821, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1462 = (0.5 / ((_1440 + 9.9999999392252902907785028219223e-09) + _1444)) * _1440;
    float _2832 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
    float _1464 = (isnan(1.0) ? _2832 : (isnan(_2832) ? 1.0 : min(_2832, 1.0))) * 0.31831014156341552734375;
    float _1466 = isnan(1.0) ? _1414 : (isnan(_1414) ? 1.0 : min(_1414, 1.0));
    uint _1479 = _1405 + 9u;
    uint _1485 = _1405 | 1u;
    float _1491 = cbLight._m0[_1485].x + _439;
    float _1492 = cbLight._m0[_1485].y + _440;
    float _1493 = cbLight._m0[_1485].z + _441;
    float _1497 = inversesqrt(dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493)));
    float _1501 = dot(vec3(0.0), vec3(cbLight._m0[_1485].xyz));
    float _2848 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    float _1504 = isnan(1.0) ? _2848 : (isnan(_2848) ? 1.0 : min(_2848, 1.0));
    float _1505 = dot(vec3(cbLight._m0[_1485].xyz), vec3(_1491 * _1497, _1492 * _1497, _1493 * _1497));
    float _2859 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
    float _1514 = (exp2(log2(1.0 - (isnan(1.0) ? _2859 : (isnan(_2859) ? 1.0 : min(_2859, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1518 = (0.5 / ((_1504 + 9.9999999392252902907785028219223e-09) + _1444)) * _1504;
    float _2870 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1520 = (isnan(1.0) ? _2870 : (isnan(_2870) ? 1.0 : min(_2870, 1.0))) * 0.31831014156341552734375;
    float _1521 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
    float _1531 = (((_1514 * cbLight._m0[_1479].x) * _1520) * _1521) + ((((cbLight._m0[_1416].x * _1393) * _1456) * _1464) * _1466);
    float _1532 = (((_1514 * cbLight._m0[_1479].y) * _1520) * _1521) + ((((cbLight._m0[_1416].y * _1395) * _1456) * _1464) * _1466);
    float _1533 = (((_1514 * cbLight._m0[_1479].z) * _1520) * _1521) + ((((cbLight._m0[_1416].z * _1397) * _1456) * _1464) * _1466);
    float _1697;
    float _1699;
    float _1701;
    if (_1403.y == 0u)
    {
        uvec4 _1651 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1652 = _1651.x;
        uint _1663 = uint((float(_1651.y) * floor(float(uint(cbSceneParam._m0[85u].y * _461) / _1652))) + floor(float(uint(cbSceneParam._m0[85u].x * _460) / _1652)));
        float _1673 = (log2(_1179 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1674 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        uint _1677 = uint(isnan(14.0) ? _1674 : (isnan(_1674) ? 14.0 : min(_1674, 14.0)));
        uvec4 _1682 = texelFetch(g_lightClusterGridBuffer, int(((_1677 << 2u) + (_1663 << 6u)) >> 2u));
        uint _1683 = _1682.x;
        uint _1684 = _1651.z;
        float _1791;
        float _1793;
        float _1795;
        if (((((1u << ((_1684 >> 4u) & 15u)) + 4294967295u) & _1683) == 0u) || ((_1684 & 240u) == 0u))
        {
            _1791 = 0.0;
            _1793 = 0.0;
            _1795 = 0.0;
        }
        else
        {
            float _1792;
            float _1794;
            float _1796;
            float _1953 = 0.0;
            float _1954 = 0.0;
            float _1955 = 0.0;
            uint _1956 = 0u;
            uint _1965;
            bool _1966;
            for (;;)
            {
                _1965 = texelFetch(g_lightClassification, int((((_1677 << 5u) + (_1663 << 9u)) + (_1956 << 2u)) >> 2u)).x;
                _1966 = _1965 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                if (_1966)
                {
                    frontier_phi_71_pred = _1955;
                    frontier_phi_71_pred_1 = _1954;
                    frontier_phi_71_pred_2 = _1953;
                }
                else
                {
                    float _2110;
                    float _2111;
                    float _2112;
                    uint _2113;
                    _2110 = _1953;
                    _2111 = _1954;
                    _2112 = _1955;
                    _2113 = _1965;
                    float _2043;
                    float _2044;
                    float _2045;
                    for (;;)
                    {
                        uint _2117 = uint(findLSB(_2113)) + (_1956 << 5u);
                        uint _2114 = (_2113 + 4294967295u) & _2113;
                        uint _2119 = _2117 * 48u;
                        vec4 _2133 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2119)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 3u)).x));
                        uint _2150 = (_2117 * 48u) + 8u;
                        vec3 _2161 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2150)).x, texelFetch(g_PointLightRenderingBuffer, int(_2150 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2150 + 2u)).x));
                        float _2165 = _2133.x - _1177;
                        float _2166 = _2133.y - _1178;
                        float _2167 = _2133.z - _1179;
                        float _2168 = dot(vec3(_2165, _2166, _2167), vec3(_2165, _2166, _2167));
                        float _2171 = inversesqrt(_2168);
                        float _2180 = 1.0 - (_2168 * _2133.w);
                        float _2896 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
                        float _2182 = sqrt(_2168) * uintBitsToFloat(uvec4(_2140, _2141, _2142, texelFetch(g_PointLightRenderingBuffer, int(((_2117 * 48u) + 4u) + 3u)).x)).w;
                        float _2185 = 1.39999997615814208984375 / (_2182 + 1.39999997615814208984375);
                        float _2186 = _2185 * _2185;
                        float _2189 = ((1.0 - _2186) * dot(vec3(0.0), vec3(_2171 * _2165, _2171 * _2166, _2171 * _2167))) + _2186;
                        float _2191 = (-0.0) - _1177;
                        float _2192 = (-0.0) - _1178;
                        float _2193 = (-0.0) - _1179;
                        float _2197 = inversesqrt(dot(vec3(_2191, _2192, _2193), vec3(_2191, _2192, _2193)));
                        float _2201 = dot(vec3(0.0), vec3(_2197 * _2191, _2197 * _2192, _2197 * _2193));
                        float _2907 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
                        float _2918 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
                        float _2205 = isnan(1.0) ? _2918 : (isnan(_2918) ? 1.0 : min(_2918, 1.0));
                        float _2209 = (0.5 / (((isnan(1.0) ? _2907 : (isnan(_2907) ? 1.0 : min(_2907, 1.0))) + 9.9999999392252902907785028219223e-09) + _2205)) * _2205;
                        float _2929 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
                        float _2218 = (((isnan(1.0) ? _2929 : (isnan(_2929) ? 1.0 : min(_2929, 1.0))) * 3.1415927410125732421875) / (((_2182 * _2182) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2896 : (isnan(_2896) ? 1.0 : min(_2896, 1.0)));
                        _2043 = (_2218 * _2161.x) + _2110;
                        _2044 = (_2218 * _2161.y) + _2111;
                        _2045 = (_2218 * _2161.z) + _2112;
                        if (_2114 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2110 = _2043;
                            _2111 = _2044;
                            _2112 = _2045;
                            _2113 = _2114;
                        }
                    }
                    frontier_phi_71_pred = _2045;
                    frontier_phi_71_pred_1 = _2044;
                    frontier_phi_71_pred_2 = _2043;
                }
                _1796 = frontier_phi_71_pred;
                _1794 = frontier_phi_71_pred_1;
                _1792 = frontier_phi_71_pred_2;
                uint _1957 = _1956 + 1u;
                if (_1957 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1953 = _1792;
                    _1954 = _1794;
                    _1955 = _1796;
                    _1956 = _1957;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1791 = _1792;
            _1793 = _1794;
            _1795 = _1796;
        }
        uvec4 _1799 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1800 = _1799.z;
        uint _1802 = (_1800 >> 8u) & 15u;
        float _1933;
        float _1935;
        float _1937;
        if (((4294967295u << _1802) & _1683) == 0u)
        {
            _1933 = _1791;
            _1935 = _1793;
            _1937 = _1795;
        }
        else
        {
            float _1949 = inversesqrt(dot(vec3(_1177, _1178, _1179), vec3(_1177, _1178, _1179)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            if (_1802 < ((_1800 >> 12u) & 15u))
            {
                float _1934;
                float _1936;
                float _1938;
                float _2096 = _1791;
                float _2097 = _1793;
                float _2098 = _1795;
                uint _2099 = _1802;
                uint _2108;
                bool _2109;
                for (;;)
                {
                    _2108 = texelFetch(g_lightClassification, int((((_1677 << 5u) + (_1663 << 9u)) + (_2099 << 2u)) >> 2u)).x;
                    _2109 = _2108 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    if (_2109)
                    {
                        frontier_phi_82_pred = _2096;
                        frontier_phi_82_pred_1 = _2098;
                        frontier_phi_82_pred_2 = _2097;
                    }
                    else
                    {
                        float _2232;
                        float _2233;
                        float _2234;
                        float _2453;
                        float _2454;
                        float _2455;
                        float _2242 = _2096;
                        float _2243 = _2097;
                        float _2244 = _2098;
                        uint _2245 = _2108;
                        uint _2246;
                        uint _2256;
                        vec4 _2271;
                        float _2272;
                        vec3 _2284;
                        vec4 _2299;
                        vec4 _2314;
                        float _2360;
                        bool _2361;
                        for (;;)
                        {
                            _2256 = ((_2099 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2245));
                            _2246 = (_2245 + 4294967295u) & _2245;
                            uint _2258 = _2256 * 40u;
                            _2271 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2258)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 3u)).x));
                            _2272 = _2271.w;
                            uint _2274 = (_2256 * 40u) + 8u;
                            _2284 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2274)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 2u)).x));
                            uint _2286 = (_2256 * 40u) + 16u;
                            _2299 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2286)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 3u)).x));
                            uint _2301 = (_2256 * 40u) + 20u;
                            _2314 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2301)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 3u)).x));
                            uint _2316 = (_2256 * 40u) + 24u;
                            vec4 _2329 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2316)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 3u)).x));
                            uint _2335 = (_2256 * 40u) + 28u;
                            vec4 _2348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 3u)).x));
                            _2360 = fma(_1179, _2348.z, fma(_1178, _2348.y, _2348.x * _1177)) + _2348.w;
                            _2361 = !((fma(_1179, _2329.z, fma(_1178, _2329.y, _2329.x * _1177)) + _2329.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            if (_2361)
                            {
                                float _2395 = _2271.x - _1177;
                                float _2396 = _2271.y - _1178;
                                float _2397 = _2271.z - _1179;
                                float _2398 = dot(vec3(_2395, _2396, _2397), vec3(_2395, _2396, _2397));
                                float _2401 = inversesqrt(_2398);
                                float _2408 = 1.0 - (_2398 / (_2272 * _2272));
                                float _2940 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
                                float _2410 = sqrt(_2398) * uintBitsToFloat(uvec4(_2364, _2365, _2366, texelFetch(g_SpotLightRenderingBuffer, int(((_2256 * 40u) + 4u) + 3u)).x)).w;
                                float _2412 = 1.39999997615814208984375 / (_2410 + 1.39999997615814208984375);
                                float _2413 = _2412 * _2412;
                                float _2416 = (fma(_1179, _2299.z, fma(_1178, _2299.y, _2299.x * _1177)) + _2299.w) / _2360;
                                float _2417 = (fma(_1179, _2314.z, fma(_1178, _2314.y, _2314.x * _1177)) + _2314.w) / _2360;
                                float _2421 = 1.0 - dot(vec2(_2416, _2417), vec2(_2416, _2417));
                                float _2951 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
                                float _2429 = dot(vec3(0.0), vec3((-0.0) - (_1177 * _1949), (-0.0) - (_1178 * _1949), (-0.0) - (_1179 * _1949)));
                                float _2962 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
                                float _2437 = ((1.0 - _2413) * dot(vec3(0.0), vec3(_2401 * _2395, _2401 * _2396, _2401 * _2397))) + _2413;
                                float _2973 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
                                float _2438 = isnan(1.0) ? _2973 : (isnan(_2973) ? 1.0 : min(_2973, 1.0));
                                float _2442 = (0.5 / (((isnan(1.0) ? _2962 : (isnan(_2962) ? 1.0 : min(_2962, 1.0))) + 9.9999999392252902907785028219223e-09) + _2438)) * _2438;
                                float _2984 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
                                float _2449 = ((isnan(1.0) ? _2951 : (isnan(_2951) ? 1.0 : min(_2951, 1.0))) * (isnan(1.0) ? _2940 : (isnan(_2940) ? 1.0 : min(_2940, 1.0)))) * (((isnan(1.0) ? _2984 : (isnan(_2984) ? 1.0 : min(_2984, 1.0))) * 3.1415927410125732421875) / (((_2410 * _2410) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_88_pred = _2449 * _2284.x;
                                frontier_phi_88_pred_1 = _2449 * _2284.y;
                                frontier_phi_88_pred_2 = _2449 * _2284.z;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                            }
                            _2453 = frontier_phi_88_pred;
                            _2454 = frontier_phi_88_pred_1;
                            _2455 = frontier_phi_88_pred_2;
                            _2232 = _2453 + _2242;
                            _2233 = _2454 + _2243;
                            _2234 = _2455 + _2244;
                            if (_2246 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2242 = _2232;
                                _2243 = _2233;
                                _2244 = _2234;
                                _2245 = _2246;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _2232;
                        frontier_phi_82_pred_1 = _2234;
                        frontier_phi_82_pred_2 = _2233;
                    }
                    _1934 = frontier_phi_82_pred;
                    _1938 = frontier_phi_82_pred_1;
                    _1936 = frontier_phi_82_pred_2;
                    uint _2100 = _2099 + 1u;
                    if (_2100 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2096 = _1934;
                        _2097 = _1936;
                        _2098 = _1938;
                        _2099 = _2100;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _1938;
                frontier_phi_62_63_ladder_1 = _1936;
                frontier_phi_62_63_ladder_2 = _1934;
            }
            else
            {
                frontier_phi_62_63_ladder = _1795;
                frontier_phi_62_63_ladder_1 = _1793;
                frontier_phi_62_63_ladder_2 = _1791;
            }
            _1933 = frontier_phi_62_63_ladder_2;
            _1935 = frontier_phi_62_63_ladder_1;
            _1937 = frontier_phi_62_63_ladder;
        }
        float _1942 = isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0));
        _1697 = ((_1933 * 0.039999999105930328369140625) * _1942) + _1531;
        _1699 = ((_1935 * 0.039999999105930328369140625) * _1942) + _1532;
        _1701 = ((_1937 * 0.039999999105930328369140625) * _1942) + _1533;
    }
    else
    {
        _1697 = _1531;
        _1699 = _1532;
        _1701 = _1533;
    }
    uint _1707 = _1399 + 9u;
    uint _1708 = _1707 + uint(cbMatDynParam._m0[0u].w);
    float _1723 = ((cbMtdParam._m0[9u].x * _406.x) * cbInstanceData._m0[_1708].x) + ((_1697 + ((isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0))) * _895)) * cbPerFrame._m0[3u].x);
    float _1724 = ((cbMtdParam._m0[9u].y * _406.y) * cbInstanceData._m0[_1708].y) + ((_1699 + ((isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0))) * _895)) * cbPerFrame._m0[3u].x);
    float _1725 = ((cbMtdParam._m0[9u].z * _406.z) * cbInstanceData._m0[_1708].z) + ((_1701 + ((isnan(0.0) ? _1129 : (isnan(_1129) ? 0.0 : max(_1129, 0.0))) * _895)) * cbPerFrame._m0[3u].x);
    float _1726 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
    float _1727 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
    float _1728 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0));
    uint _1729 = _1399 + 6u;
    float _1737 = _460 / cbSceneParam._m0[86u].x;
    float _1738 = _461 / cbSceneParam._m0[86u].y;
    vec4 _1752 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1737, _1738, (log2((isnan(cbSceneParam._m0[77u].w) ? _434 : (isnan(_434) ? cbSceneParam._m0[77u].w : min(_434, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1754 = _1752.x;
    float _1755 = _1752.y;
    float _1756 = _1752.z;
    float _1757 = _1752.w;
    float _1847;
    float _1849;
    float _1851;
    float _1853;
    if (_434 > cbSceneParam._m0[78u].w)
    {
        float _1810 = isnan(_434) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _434 : min(cbSceneParam._m0[80u].w, _434));
        float _1811 = _1810 / _434;
        float _1822 = _1811 * _260;
        float _1823 = _261 * _1811;
        float _1824 = (-0.0) - _1823;
        float _1825 = _1811 * _262;
        float _1827 = (cbSceneParam._m0[77u].w * _1824) / _1810;
        float _1828 = _1827 + cbSceneParam._m0[79u].w;
        float _1829 = cbSceneParam._m0[79u].w - _1823;
        float _1835 = sqrt(((_1822 * _1822) + (_1823 * _1823)) + (_1825 * _1825));
        float _1838 = (1.0 - (cbSceneParam._m0[77u].w / _1810)) * _1835;
        float _1843 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1845 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2053;
        if (abs((_1824 - _1827) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2053 = ((((_1828 > 0.0) ? exp2(_1843 * _1828) : (2.0 - exp2(_1845 * _1828))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1838;
        }
        else
        {
            float _1979 = 1.0 / cbSceneParam._m0[80u].x;
            float _1980 = isnan(_1829) ? _1828 : (isnan(_1828) ? _1829 : max(_1828, _1829));
            float _1981 = isnan(_1829) ? _1828 : (isnan(_1828) ? _1829 : min(_1828, _1829));
            float _1990 = isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : min(_1980, 0.0));
            float _1991 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : min(_1981, 0.0));
            _2053 = ((abs(_1835 / _1824) * cbSceneParam._m0[80u].y) * ((((_1990 - _1991) * 2.0) - ((exp2(_1843 * (isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)))) - exp2(_1843 * (isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))))) * _1979)) - ((exp2(_1845 * _1990) - exp2(_1845 * _1991)) * _1979))) + (_1838 * cbSceneParam._m0[80u].z);
        }
        vec4 _2055 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1737, _1738, 1.0), 0.0);
        float _2064 = exp2((_2053 * (-1.44269502162933349609375)) * (1.0 - _2055.w));
        float _2065 = log2(_2064);
        float _2081 = log2(_1757);
        _1847 = (exp2(_2081 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].x)) * _2055.x) / cbSceneParam._m0[78u].x)) + _1754;
        _1849 = (exp2(_2081 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].y)) * _2055.y) / cbSceneParam._m0[78u].y)) + _1755;
        _1851 = (exp2(_2081 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].z)) * _2055.z) / cbSceneParam._m0[78u].z)) + _1756;
        _1853 = _2064 * _1757;
    }
    else
    {
        _1847 = _1754;
        _1849 = _1755;
        _1851 = _1756;
        _1853 = _1757;
    }
    bool _2091;
    vec4 _1863;
    vec4 _1886;
    float _1888;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    bool _1906;
    for (;;)
    {
        _1863 = cbMatDynParam._m0[0u];
        float _1865 = roundEven(_1863.y);
        bool _1866 = _1865 == 3.0;
        float _1868 = log2(_1853);
        float _1875 = exp2(_1868 * cbSceneParam._m0[78u].x) * _1726;
        float _1876 = exp2(_1868 * cbSceneParam._m0[78u].y) * _1727;
        float _1877 = exp2(_1868 * cbSceneParam._m0[78u].z) * _1728;
        float _1884 = _448 + (-0.5);
        _1886 = cbMtdParam._m0[1u];
        _1888 = _1886.y * _1884;
        float _1891 = (_1865 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1892 = _1891 * (_1866 ? _1875 : (_1875 + (cbSceneParam._m0[72u].w * _1847)));
        _1893 = _1891 * (_1866 ? _1876 : (_1876 + (cbSceneParam._m0[72u].w * _1849)));
        _1894 = _1891 * (_1866 ? _1877 : (_1877 + (cbSceneParam._m0[72u].w * _1851)));
        _1895 = _1884 * 0.999000012874603271484375;
        _1906 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1906)
        {
            if ((cbInstanceData._m0[_1399 + 7u].x + _1895) < 0.5)
            {
                _2091 = true;
                break;
            }
        }
        uint _2014 = _1707 + uint(_1863.w);
        if ((cbInstanceData._m0[_2014].w < 1.0) && ((cbInstanceData._m0[_2014].w + _1895) < 0.5))
        {
            _2091 = true;
            break;
        }
        if ((_1888 + 1.0) < _1886.x)
        {
            _2091 = true;
            break;
        }
        _2091 = false;
        break;
    }
    float _2223;
    if (_2091)
    {
        discard_state = true;
        _2223 = 0.0;
    }
    else
    {
        _2223 = cbInstanceData._m0[_1729].w;
    }
    SV_Target.x = _1892;
    SV_Target.y = _1893;
    SV_Target.z = _1894;
    SV_Target.w = _2223;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1729].w;
    discard_exit();
}


