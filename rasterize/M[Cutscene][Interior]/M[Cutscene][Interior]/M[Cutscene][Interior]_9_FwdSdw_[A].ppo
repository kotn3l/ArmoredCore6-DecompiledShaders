#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_12;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _459;
float _3578;
float _3579;
float _3580;
float _3581;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _202 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _203 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _204 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _209 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _210 = _209 * _202;
    float _211 = _209 * _203;
    float _212 = _209 * _204;
    float _216 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _217 = _216 * NORMAL.x;
    float _218 = _216 * NORMAL.y;
    float _219 = _216 * NORMAL.z;
    float _223 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _224 = _223 * TANGENT.x;
    float _225 = _223 * TANGENT.y;
    float _226 = _223 * TANGENT.z;
    float _271 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _281 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _271);
    float _282 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _271);
    float _283 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _271);
    vec4 _296 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _299 = _296.x;
    vec4 _317 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _334 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _299) + cbMtdParam._m0[12u].x) * _317.x;
    float _336 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _299) + cbMtdParam._m0[12u].y) * _317.y;
    float _338 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _299) + cbMtdParam._m0[12u].z) * _317.z;
    vec4 _372 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _387 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _394 = inversesqrt(dot(vec3(_224, _225, _226), vec3(_224, _225, _226)));
    float _406 = cbMtdParam._m0[24u].w + _281;
    float _407 = cbMtdParam._m0[25u].x + _282;
    float _408 = cbMtdParam._m0[25u].y + _283;
    float _422 = (-0.0) - dot(vec3(_406, _407, _408), vec3(_387 * _210, _387 * _211, _387 * _212));
    float _423 = (-0.0) - dot(vec3(_406, _407, _408), vec3(_394 * _224, _394 * _225, _394 * _226));
    float _424 = (-0.0) - dot(vec3(_406, _407, _408), vec3((-0.0) - _217, (-0.0) - _218, (-0.0) - _219));
    float _428 = inversesqrt(dot(vec3(_422, _423, _424), vec3(_422, _423, _424)));
    float _429 = _428 * _424;
    float _434 = ((cbMtdParam._m0[21u].z * _422) * _428) + (((_372.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _435 = ((cbMtdParam._m0[21u].w * _423) * _428) + (((_372.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _438 = fract(cbMtdParam._m0[21u].z * TEXCOORD.x);
    float _439 = fract(cbMtdParam._m0[21u].w * TEXCOORD.y);
    float _457;
    float _460;
    float _462;
    if (_434 > 0.0)
    {
        float _443 = (1.0 - _438) / _434;
        _457 = _443;
        _460 = ((cbMtdParam._m0[18u].w + 1.0) - fract(_443 * _429)) * 0.16666667163372039794921875;
        _462 = (fract((_443 * _435) + _439) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_434 < 0.0)
        {
            float _458 = ((-0.0) - _438) / _434;
            frontier_phi_3_2_ladder = (fract(_458 * _429) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_1 = _458;
            frontier_phi_3_2_ladder_2 = (fract((_458 * _435) + _439) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _459;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _457 = frontier_phi_3_2_ladder_1;
        _460 = frontier_phi_3_2_ladder;
        _462 = frontier_phi_3_2_ladder_2;
    }
    float _488;
    float _490;
    float _492;
    if (_435 > 0.0)
    {
        float _475 = (1.0 - _439) / _435;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_475 < _457)
        {
            frontier_phi_8_5_ladder = (fract(_475 * _429) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_1 = (fract((_475 * _434) + _438) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = _475;
        }
        else
        {
            frontier_phi_8_5_ladder = _462;
            frontier_phi_8_5_ladder_1 = _460;
            frontier_phi_8_5_ladder_2 = _457;
        }
        _488 = frontier_phi_8_5_ladder_2;
        _490 = frontier_phi_8_5_ladder_1;
        _492 = frontier_phi_8_5_ladder;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_435 < 0.0)
        {
            float _489 = ((-0.0) - _439) / _435;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_489 < _457)
            {
                frontier_phi_8_6_ladder_9_ladder = fract(_489 * _429) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_489 * _434) + _438) + cbMtdParam._m0[18u].w) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = _489;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _462;
                frontier_phi_8_6_ladder_9_ladder_1 = _460;
                frontier_phi_8_6_ladder_9_ladder_2 = _457;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _462;
            frontier_phi_8_6_ladder_1 = _460;
            frontier_phi_8_6_ladder_2 = _457;
        }
        _488 = frontier_phi_8_6_ladder_2;
        _490 = frontier_phi_8_6_ladder_1;
        _492 = frontier_phi_8_6_ladder;
    }
    float _496 = (_429 > 0.0) ? (cbMtdParam._m0[18u].z / _429) : 5000.0;
    float _509;
    float _510;
    if (_496 < _488)
    {
        _509 = ((_438 + cbMtdParam._m0[18u].w) + (_496 * _434)) * 0.16666667163372039794921875;
        _510 = (((_496 * _435) + _439) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _509 = _490;
        _510 = _492;
    }
    vec4 _512 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_509, _510));
    float _3590 = isnan(0.0) ? cbMtdParam._m0[17u].z : (isnan(cbMtdParam._m0[17u].z) ? 0.0 : max(cbMtdParam._m0[17u].z, 0.0));
    float _526 = isnan(1.0) ? _3590 : (isnan(_3590) ? 1.0 : min(_3590, 1.0));
    float _3601 = isnan(0.0) ? cbMtdParam._m0[17u].y : (isnan(cbMtdParam._m0[17u].y) ? 0.0 : max(cbMtdParam._m0[17u].y, 0.0));
    float _569 = ((_526 - ((1.0 - (isnan(1.0) ? _3601 : (isnan(_3601) ? 1.0 : min(_3601, 1.0)))) * (_526 + 1.0))) + (((cbMtdParam._m0[18u].y * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[3u].w)).x) + (cbMtdParam._m0[17u].x * texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w)).x)) / cbMtdParam._m0[17u].w)) / _526;
    float _3612 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _570 = isnan(1.0) ? _3612 : (isnan(_3612) ? 1.0 : min(_3612, 1.0));
    float _572 = 3.0 - (_570 * 2.0);
    float _577 = _570 * _570;
    vec4 _599 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _603 = _599.z;
    float _606 = (_599.x * 2.0) + (-1.0);
    float _607 = (_599.y * 2.0) + (-1.0);
    float _608 = dot(vec2(_606, _607), vec2(_606, _607));
    float _3623 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _613 = sqrt(1.0 - (isnan(1.0) ? _3623 : (isnan(_3623) ? 1.0 : min(_3623, 1.0))));
    float _616 = fma(_613, _217, fma(_607, _224, _606 * _210));
    float _619 = fma(_613, _218, fma(_607, _225, _606 * _211));
    float _622 = fma(_613, _219, fma(_607, _226, _606 * _212));
    float _626 = inversesqrt(dot(vec3(_616, _619, _622), vec3(_616, _619, _622)));
    float _627 = _626 * _616;
    float _628 = _626 * _619;
    float _629 = _626 * _622;
    float _3634 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _630 = isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0));
    float _3645 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _3656 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _3667 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _649 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _653 = inversesqrt(dot(vec3(_281, _282, _283), vec3(_281, _282, _283)));
    float _654 = _281 * _653;
    float _655 = _282 * _653;
    float _656 = _283 * _653;
    vec4 _661 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _663 = _661.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _824 = sqrt(((_281 * _281) + (_282 * _282)) + (_283 * _283));
        float _830 = (cbMatDynParam._m0[5u].x * _824) + cbMatDynParam._m0[5u].y;
        float _3678 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
        float _831 = isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0));
        float _835 = (cbMatDynParam._m0[5u].z * _824) + cbMatDynParam._m0[5u].w;
        float _3689 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3689 : (isnan(_3689) ? 1.0 : min(_3689, 1.0))) - _831)) + _831) < ((_663 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _680 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _681 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _701 = fma(_629, cbSceneParam._m0[5u].z, fma(_628, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _627));
    float _704 = fma(_629, cbSceneParam._m0[6u].z, fma(_628, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _627));
    float _707 = fma(_629, cbSceneParam._m0[7u].z, fma(_628, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _627));
    uint _720 = uint(roundEven(NORMAL.w)) * 13u;
    uint _721 = _720 + 9u;
    uint _722 = _721 + uint(cbMatDynParam._m0[0u].w);
    float _728 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0)))) * cbInstanceData._m0[_722].x;
    float _729 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0)))) * cbInstanceData._m0[_722].y;
    float _730 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0)))) * cbInstanceData._m0[_722].z;
    float _3700 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _731 = isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0));
    float _3711 = isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0));
    float _732 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
    float _3722 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _733 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
    vec4 _742 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _680, cbSceneParam._m0[86u].y * _681));
    float _745 = _742.x * TEXCOORD_4.z;
    float _746 = dot(vec3(_627, _628, _629), vec3(_654, _655, _656));
    float _749 = _746 * 2.0;
    float _753 = (_749 * _627) - _654;
    float _754 = (_749 * _628) - _655;
    float _755 = (_749 * _629) - _656;
    float _759 = abs(dot(vec3(_654, _655, _656), vec3(_627, _628, _629)));
    float _3733 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _761 = sqrt(_630);
    float _773 = exp2((_761 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_761 * 3.0));
    float _805 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _809 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _813 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1143;
    float _1144;
    float _1145;
    float _1146;
    float _1147;
    float _1148;
    float _1149;
    float _1150;
    float _1151;
    float _1152;
    float _1153;
    float _1154;
    float _1155;
    float _1156;
    float _1157;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _869 = fma(_813, cbModelParam._m0[26u].z, fma(_809, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _805));
        float _873 = fma(_813, cbModelParam._m0[27u].z, fma(_809, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _805));
        float _877 = fma(_813, cbModelParam._m0[28u].z, fma(_809, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _805));
        float _901 = _805 + _627;
        float _902 = _809 + _628;
        float _903 = _813 + _629;
        float _913 = fma(_903, cbModelParam._m0[26u].z, fma(_902, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _901)) - _869;
        float _914 = fma(_903, cbModelParam._m0[27u].z, fma(_902, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _901)) - _873;
        float _915 = fma(_903, cbModelParam._m0[28u].z, fma(_902, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _901)) - _877;
        float _919 = inversesqrt(dot(vec3(_913, _914, _915), vec3(_913, _914, _915)));
        float _932 = ((_919 * _913) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_869 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _933 = ((_919 * _914) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_873 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _934 = ((_919 * _915) / cbModelParam._m0[34u].z) + ((((((_877 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _937 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_932, _933, _934), 0.0);
        vec4 _944 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_932, _933, _934), 0.0);
        vec4 _951 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_932, _933, _934), 0.0);
        vec4 _958 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_932, _933, _934), 0.0);
        float _971 = exp2((_937.w + (-0.5)) * 20.0) * 2.0;
        float _972 = _971 * (_937.x + (-0.5));
        float _973 = _971 * (_937.y + (-0.5));
        float _974 = _971 * (_937.z + (-0.5));
        float _981 = exp2((_944.w + (-0.5)) * 20.0) * 2.0;
        float _982 = _981 * (_944.x + (-0.5));
        float _983 = _981 * (_944.y + (-0.5));
        float _984 = _981 * (_944.z + (-0.5));
        float _991 = exp2((_951.w + (-0.5)) * 20.0) * 2.0;
        float _992 = _991 * (_951.x + (-0.5));
        float _993 = _991 * (_951.y + (-0.5));
        float _994 = _991 * (_951.z + (-0.5));
        float _1001 = exp2((_958.w + (-0.5)) * 20.0) * 2.0;
        float _1002 = _1001 * (_958.x + (-0.5));
        float _1003 = _1001 * (_958.y + (-0.5));
        float _1004 = _1001 * (_958.z + (-0.5));
        float _1005 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
        float _1006 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
        float _1007 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
        float _1008 = _972 * 0.5;
        float _1009 = _982 * 0.5;
        float _1010 = _992 * 0.5;
        float _1011 = dot(vec3(_1008, _1009, _1010), vec3(_1008, _1009, _1010));
        float _1016 = (_1011 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1011);
        float _1025 = (dot(vec3(_627, _628, _629), vec3(_1016 * _1008, _1016 * _1009, _1016 * _1010)) + 1.0) * 0.5;
        float _3759 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1035 = sqrt(((_1009 * _1009) + (_1008 * _1008)) + (_1010 * _1010)) / (_1005 + 9.9999997473787516355514526367188e-06);
        float _3770 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1036 = isnan(1.0) ? _3770 : (isnan(_3770) ? 1.0 : min(_3770, 1.0));
        float _1037 = _1036 * 2.0;
        float _1041 = (1.0 - _1036) / (_1036 + 1.0);
        float _3781 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
        float _1042 = isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0));
        float _1051 = ((((1.0 - _1042) * (_1037 + 2.0)) * exp2(log2(isnan(1.0) ? _3759 : (isnan(_3759) ? 1.0 : min(_3759, 1.0))) * (_1037 + 1.0))) + _1042) * _1005;
        float _1052 = _973 * 0.5;
        float _1053 = _983 * 0.5;
        float _1054 = _993 * 0.5;
        float _1055 = dot(vec3(_1052, _1053, _1054), vec3(_1052, _1053, _1054));
        float _1060 = (_1055 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1055);
        float _1068 = (dot(vec3(_627, _628, _629), vec3(_1060 * _1052, _1060 * _1053, _1060 * _1054)) + 1.0) * 0.5;
        float _3792 = isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0));
        float _1077 = sqrt(((_1053 * _1053) + (_1052 * _1052)) + (_1054 * _1054)) / (_1006 + 9.9999997473787516355514526367188e-06);
        float _3803 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1078 = isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0));
        float _1079 = _1078 * 2.0;
        float _1083 = (1.0 - _1078) / (_1078 + 1.0);
        float _3814 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1084 = isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0));
        float _1093 = ((((1.0 - _1084) * (_1079 + 2.0)) * exp2(log2(isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0))) * (_1079 + 1.0))) + _1084) * _1006;
        float _1094 = _974 * 0.5;
        float _1095 = _984 * 0.5;
        float _1096 = _994 * 0.5;
        float _1097 = dot(vec3(_1094, _1095, _1096), vec3(_1094, _1095, _1096));
        float _1102 = (_1097 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1097);
        float _1110 = (dot(vec3(_627, _628, _629), vec3(_1102 * _1094, _1102 * _1095, _1102 * _1096)) + 1.0) * 0.5;
        float _3825 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1119 = sqrt(((_1095 * _1095) + (_1094 * _1094)) + (_1096 * _1096)) / (_1007 + 9.9999997473787516355514526367188e-06);
        float _3836 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
        float _1120 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
        float _1121 = _1120 * 2.0;
        float _1125 = (1.0 - _1120) / (_1120 + 1.0);
        float _3847 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1126 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
        float _1135 = ((((1.0 - _1126) * (_1121 + 2.0)) * exp2(log2(isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0))) * (_1121 + 1.0))) + _1126) * _1007;
        _1143 = _974;
        _1144 = _973;
        _1145 = _972;
        _1146 = _984;
        _1147 = _983;
        _1148 = _982;
        _1149 = _994;
        _1150 = _993;
        _1151 = _992;
        _1152 = _1007;
        _1153 = _1006;
        _1154 = _1005;
        _1155 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0)));
        _1156 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0)));
        _1157 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0)));
    }
    else
    {
        _1143 = _459;
        _1144 = _459;
        _1145 = _459;
        _1146 = _459;
        _1147 = _459;
        _1148 = _459;
        _1149 = _459;
        _1150 = _459;
        _1151 = _459;
        _1152 = _459;
        _1153 = _459;
        _1154 = _459;
        _1155 = 0.0;
        _1156 = 0.0;
        _1157 = 0.0;
    }
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    float _1460;
    float _1461;
    float _1462;
    float _1463;
    float _1464;
    float _1465;
    float _1466;
    float _1467;
    float _1468;
    float _1469;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1186 = fma(_813, cbModelParam._m0[30u].z, fma(_809, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _805));
        float _1190 = fma(_813, cbModelParam._m0[31u].z, fma(_809, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _805));
        float _1194 = fma(_813, cbModelParam._m0[32u].z, fma(_809, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _805));
        float _1217 = _805 + _627;
        float _1218 = _809 + _628;
        float _1219 = _813 + _629;
        float _1229 = fma(_1219, cbModelParam._m0[30u].z, fma(_1218, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1217)) - _1186;
        float _1230 = fma(_1219, cbModelParam._m0[31u].z, fma(_1218, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1217)) - _1190;
        float _1231 = fma(_1219, cbModelParam._m0[32u].z, fma(_1218, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1217)) - _1194;
        float _1235 = inversesqrt(dot(vec3(_1229, _1230, _1231), vec3(_1229, _1230, _1231)));
        float _1248 = ((_1235 * _1229) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1186 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1249 = ((_1235 * _1230) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1190 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1250 = ((_1235 * _1231) / cbModelParam._m0[35u].z) + ((((((_1194 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1252 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1248, _1249, _1250), 0.0);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1248, _1249, _1250), 0.0);
        vec4 _1266 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1248, _1249, _1250), 0.0);
        vec4 _1273 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1248, _1249, _1250), 0.0);
        float _1285 = exp2((_1252.w + (-0.5)) * 20.0) * 2.0;
        float _1286 = _1285 * (_1252.x + (-0.5));
        float _1287 = _1285 * (_1252.y + (-0.5));
        float _1288 = _1285 * (_1252.z + (-0.5));
        float _1295 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1296 = _1295 * (_1259.x + (-0.5));
        float _1297 = _1295 * (_1259.y + (-0.5));
        float _1298 = _1295 * (_1259.z + (-0.5));
        float _1305 = exp2((_1266.w + (-0.5)) * 20.0) * 2.0;
        float _1306 = _1305 * (_1266.x + (-0.5));
        float _1307 = _1305 * (_1266.y + (-0.5));
        float _1308 = _1305 * (_1266.z + (-0.5));
        float _1315 = exp2((_1273.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1273.x + (-0.5));
        float _1317 = _1315 * (_1273.y + (-0.5));
        float _1318 = _1315 * (_1273.z + (-0.5));
        float _1319 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
        float _1320 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1321 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1322 = _1286 * 0.5;
        float _1323 = _1296 * 0.5;
        float _1324 = _1306 * 0.5;
        float _1325 = dot(vec3(_1322, _1323, _1324), vec3(_1322, _1323, _1324));
        float _1330 = (_1325 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1325);
        float _1338 = (dot(vec3(_627, _628, _629), vec3(_1330 * _1322, _1330 * _1323, _1330 * _1324)) + 1.0) * 0.5;
        float _3888 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1347 = sqrt(((_1323 * _1323) + (_1322 * _1322)) + (_1324 * _1324)) / (_1319 + 9.9999997473787516355514526367188e-06);
        float _3899 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1348 = isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0));
        float _1349 = _1348 * 2.0;
        float _1353 = (1.0 - _1348) / (_1348 + 1.0);
        float _3910 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1354 = isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0));
        float _1363 = ((((1.0 - _1354) * (_1349 + 2.0)) * exp2(log2(isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0))) * (_1349 + 1.0))) + _1354) * _1319;
        float _1364 = _1287 * 0.5;
        float _1365 = _1297 * 0.5;
        float _1366 = _1307 * 0.5;
        float _1367 = dot(vec3(_1364, _1365, _1366), vec3(_1364, _1365, _1366));
        float _1372 = (_1367 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1367);
        float _1380 = (dot(vec3(_627, _628, _629), vec3(_1372 * _1364, _1372 * _1365, _1372 * _1366)) + 1.0) * 0.5;
        float _3921 = isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0));
        float _1389 = sqrt(((_1365 * _1365) + (_1364 * _1364)) + (_1366 * _1366)) / (_1320 + 9.9999997473787516355514526367188e-06);
        float _3932 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1390 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
        float _1391 = _1390 * 2.0;
        float _1395 = (1.0 - _1390) / (_1390 + 1.0);
        float _3943 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1396 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
        float _1405 = ((((1.0 - _1396) * (_1391 + 2.0)) * exp2(log2(isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0))) * (_1391 + 1.0))) + _1396) * _1320;
        float _1406 = _1288 * 0.5;
        float _1407 = _1298 * 0.5;
        float _1408 = _1308 * 0.5;
        float _1409 = dot(vec3(_1406, _1407, _1408), vec3(_1406, _1407, _1408));
        float _1414 = (_1409 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1409);
        float _1422 = (dot(vec3(_627, _628, _629), vec3(_1414 * _1406, _1414 * _1407, _1414 * _1408)) + 1.0) * 0.5;
        float _3954 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1431 = sqrt(((_1407 * _1407) + (_1406 * _1406)) + (_1408 * _1408)) / (_1321 + 9.9999997473787516355514526367188e-06);
        float _3965 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1432 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
        float _1433 = _1432 * 2.0;
        float _1437 = (1.0 - _1432) / (_1432 + 1.0);
        float _3976 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1438 = isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0));
        float _1447 = ((((1.0 - _1438) * (_1433 + 2.0)) * exp2(log2(isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0))) * (_1433 + 1.0))) + _1438) * _1321;
        _1455 = _1288;
        _1456 = _1287;
        _1457 = _1286;
        _1458 = _1298;
        _1459 = _1297;
        _1460 = _1296;
        _1461 = _1308;
        _1462 = _1307;
        _1463 = _1306;
        _1464 = _1321;
        _1465 = _1320;
        _1466 = _1319;
        _1467 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0)));
        _1468 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0)));
        _1469 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0)));
    }
    else
    {
        _1455 = _459;
        _1456 = _459;
        _1457 = _459;
        _1458 = _459;
        _1459 = _459;
        _1460 = _459;
        _1461 = _459;
        _1462 = _459;
        _1463 = _459;
        _1464 = _459;
        _1465 = _459;
        _1466 = _459;
        _1467 = 0.0;
        _1468 = 0.0;
        _1469 = 0.0;
    }
    float _1479 = (cbModelParam._m0[1u].x * (_1467 - _1155)) + _1155;
    float _1480 = (cbModelParam._m0[1u].x * (_1468 - _1156)) + _1156;
    float _1481 = (cbModelParam._m0[1u].x * (_1469 - _1157)) + _1157;
    float _1502 = fma(_1481, cbSceneParam._m0[89u].z, fma(_1480, cbSceneParam._m0[89u].y, _1479 * cbSceneParam._m0[89u].x));
    float _1505 = fma(_1481, cbSceneParam._m0[90u].z, fma(_1480, cbSceneParam._m0[90u].y, _1479 * cbSceneParam._m0[90u].x));
    float _1508 = fma(_1481, cbSceneParam._m0[91u].z, fma(_1480, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1479));
    float _1523 = _753 * 0.5;
    float _1524 = _754 * 0.5;
    float _1525 = _755 * 0.5;
    float _1526 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1457, _1460, _1463, _1466));
    float _1529 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1456, _1459, _1462, _1465));
    float _1532 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1455, _1458, _1461, _1464));
    float _1566;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1539 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1143, _1146, _1149, _1152));
        float _1543 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1144, _1147, _1150, _1153));
        float _1547 = dot(vec4(_1523, _1524, _1525, 1.0), vec4(_1145, _1148, _1151, _1154));
        float _1554 = dot(vec4(cbModelParam._m0[39u]), vec4(_1523, _1524, _1525, 1.0));
        _1566 = dot(vec3(isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0)), isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0)), isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1554) ? 0.0 : (isnan(0.0) ? _1554 : max(0.0, _1554))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1566 = 1.0;
    }
    float _1577;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1568 = dot(vec4(cbModelParam._m0[40u]), vec4(_1523, _1524, _1525, 1.0));
        _1577 = dot(vec3(isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0)), isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0)), isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1568) ? 0.0 : (isnan(0.0) ? _1568 : max(0.0, _1568))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1577 = 1.0;
    }
    float _1581 = (_1577 * cbModelParam._m0[1u].x) + (_1566 * (1.0 - cbModelParam._m0[1u].x));
    float _1591 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _630);
    float _1592 = isnan(_1591) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1591 : min(cbModelParam._m0[25u].z, _1591));
    float _1673;
    float _1675;
    float _1677;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1640 = fma(_813, cbModelParam._m0[13u].z, fma(_809, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _805)) + cbModelParam._m0[13u].w;
        float _1644 = fma(_813, cbModelParam._m0[14u].z, fma(_809, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _805)) + cbModelParam._m0[14u].w;
        float _1648 = fma(_813, cbModelParam._m0[15u].z, fma(_809, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _805)) + cbModelParam._m0[15u].w;
        float _1651 = fma(_755, cbModelParam._m0[13u].z, fma(_754, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _753));
        float _1654 = fma(_755, cbModelParam._m0[14u].z, fma(_754, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _753));
        float _1657 = fma(_755, cbModelParam._m0[15u].z, fma(_754, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _753));
        float _1685;
        if (_1651 > 0.0)
        {
            _1685 = abs((1.0 - _1640) / _1651);
        }
        else
        {
            float frontier_phi_29_27_ladder;
            if (_1651 < 0.0)
            {
                frontier_phi_29_27_ladder = abs((_1640 + 1.0) / _1651);
            }
            else
            {
                frontier_phi_29_27_ladder = 5000.0;
            }
            _1685 = frontier_phi_29_27_ladder;
        }
        float _1854;
        if (_1654 > 0.0)
        {
            _1854 = abs((1.0 - _1644) / _1654);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1654 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1644 + 1.0) / _1654);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _1854 = frontier_phi_38_34_ladder;
        }
        float _2298;
        if (_1657 > 0.0)
        {
            _2298 = abs((1.0 - _1648) / _1657);
        }
        else
        {
            float frontier_phi_50_45_ladder;
            if (_1657 < 0.0)
            {
                frontier_phi_50_45_ladder = abs((_1648 + 1.0) / _1657);
            }
            else
            {
                frontier_phi_50_45_ladder = 5000.0;
            }
            _2298 = frontier_phi_50_45_ladder;
        }
        float _2300 = isnan(_1854) ? _1685 : (isnan(_1685) ? _1854 : min(_1685, _1854));
        float _2301 = isnan(_2298) ? _2300 : (isnan(_2300) ? _2298 : min(_2300, _2298));
        float _2305 = (_2301 * _1651) + _1640;
        float _2306 = (_2301 * _1654) + _1644;
        float _2307 = (_2301 * _1657) + _1648;
        float _2308 = _2301 * 9.9999997473787516355514526367188e-05;
        float _2310 = (-1.0) - _2308;
        float _2312 = _2308 + 1.0;
        float frontier_phi_28_50_ladder;
        float frontier_phi_28_50_ladder_1;
        float frontier_phi_28_50_ladder_2;
        if ((_2307 > _2312) || ((_2307 < _2310) || ((_2306 > _2312) || ((_2306 < _2310) || ((_2305 < _2310) || (_2305 > _2312))))))
        {
            frontier_phi_28_50_ladder = 0.0;
            frontier_phi_28_50_ladder_1 = 0.0;
            frontier_phi_28_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2563 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2307, cbModelParam._m0[9u].z, fma(_2306, cbModelParam._m0[9u].y, _2305 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2307, cbModelParam._m0[10u].z, fma(_2306, cbModelParam._m0[10u].y, _2305 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2307, cbModelParam._m0[11u].z, fma(_2306, cbModelParam._m0[11u].y, _2305 * cbModelParam._m0[11u].x))), _1592);
            frontier_phi_28_50_ladder = _2563.z * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_1 = _2563.y * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_2 = _2563.x * cbModelParam._m0[1u].y;
        }
        _1673 = frontier_phi_28_50_ladder_2;
        _1675 = frontier_phi_28_50_ladder_1;
        _1677 = frontier_phi_28_50_ladder;
    }
    else
    {
        vec4 _1661 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_753, _754, _755), _1592);
        _1673 = _1661.x * cbModelParam._m0[1u].y;
        _1675 = _1661.y * cbModelParam._m0[1u].y;
        _1677 = _1661.z * cbModelParam._m0[1u].y;
    }
    float _1681 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _630);
    float _1682 = isnan(_1681) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1681 : min(cbModelParam._m0[25u].w, _1681));
    float _1771;
    float _1773;
    float _1775;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1735 = fma(_813, cbModelParam._m0[21u].z, fma(_809, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _805)) + cbModelParam._m0[21u].w;
        float _1739 = fma(_813, cbModelParam._m0[22u].z, fma(_809, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _805)) + cbModelParam._m0[22u].w;
        float _1743 = fma(_813, cbModelParam._m0[23u].z, fma(_809, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _805)) + cbModelParam._m0[23u].w;
        float _1746 = fma(_755, cbModelParam._m0[21u].z, fma(_754, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _753));
        float _1749 = fma(_755, cbModelParam._m0[22u].z, fma(_754, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _753));
        float _1752 = fma(_755, cbModelParam._m0[23u].z, fma(_754, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _753));
        float _1859;
        if (_1746 > 0.0)
        {
            _1859 = abs((1.0 - _1735) / _1746);
        }
        else
        {
            float frontier_phi_40_36_ladder;
            if (_1746 < 0.0)
            {
                frontier_phi_40_36_ladder = abs((_1735 + 1.0) / _1746);
            }
            else
            {
                frontier_phi_40_36_ladder = 5000.0;
            }
            _1859 = frontier_phi_40_36_ladder;
        }
        float _2325;
        if (_1749 > 0.0)
        {
            _2325 = abs((1.0 - _1739) / _1749);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1749 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1739 + 1.0) / _1749);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _2325 = frontier_phi_52_47_ladder;
        }
        float _2692;
        if (_1752 > 0.0)
        {
            _2692 = abs((1.0 - _1743) / _1752);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1752 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1743 + 1.0) / _1752);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _2692 = frontier_phi_64_59_ladder;
        }
        float _2694 = isnan(_2325) ? _1859 : (isnan(_1859) ? _2325 : min(_1859, _2325));
        float _2695 = isnan(_2692) ? _2694 : (isnan(_2694) ? _2692 : min(_2694, _2692));
        float _2699 = (_2695 * _1746) + _1735;
        float _2700 = (_2695 * _1749) + _1739;
        float _2701 = (_2695 * _1752) + _1743;
        float _2702 = _2695 * 9.9999997473787516355514526367188e-05;
        float _2703 = (-1.0) - _2702;
        float _2705 = _2702 + 1.0;
        float frontier_phi_37_64_ladder;
        float frontier_phi_37_64_ladder_1;
        float frontier_phi_37_64_ladder_2;
        if ((_2701 > _2705) || ((_2701 < _2703) || ((_2700 > _2705) || ((_2700 < _2703) || ((_2699 < _2703) || (_2699 > _2705))))))
        {
            frontier_phi_37_64_ladder = 0.0;
            frontier_phi_37_64_ladder_1 = 0.0;
            frontier_phi_37_64_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2838 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2701, cbModelParam._m0[17u].z, fma(_2700, cbModelParam._m0[17u].y, _2699 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2701, cbModelParam._m0[18u].z, fma(_2700, cbModelParam._m0[18u].y, _2699 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2701, cbModelParam._m0[19u].z, fma(_2700, cbModelParam._m0[19u].y, _2699 * cbModelParam._m0[19u].x))), _1682);
            frontier_phi_37_64_ladder = _2838.z * cbModelParam._m0[1u].z;
            frontier_phi_37_64_ladder_1 = _2838.y * cbModelParam._m0[1u].z;
            frontier_phi_37_64_ladder_2 = _2838.x * cbModelParam._m0[1u].z;
        }
        _1771 = frontier_phi_37_64_ladder_2;
        _1773 = frontier_phi_37_64_ladder_1;
        _1775 = frontier_phi_37_64_ladder;
    }
    else
    {
        vec4 _1755 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_753, _754, _755), _1682);
        _1771 = _1755.x * cbModelParam._m0[1u].z;
        _1773 = _1755.y * cbModelParam._m0[1u].z;
        _1775 = _1755.z * cbModelParam._m0[1u].z;
    }
    float _1787 = ((((1.0 - _773) * ((_761 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_773 * _761)) * _745;
    float _1788 = _1787 * ((cbModelParam._m0[1u].w * (_1771 - _1673)) + _1673);
    float _1789 = _1787 * ((cbModelParam._m0[1u].w * (_1773 - _1675)) + _1675);
    float _1790 = _1787 * ((cbModelParam._m0[1u].w * (_1775 - _1677)) + _1677);
    float _1793 = fma(_1790, cbSceneParam._m0[89u].z, fma(_1789, cbSceneParam._m0[89u].y, _1788 * cbSceneParam._m0[89u].x));
    float _1796 = fma(_1790, cbSceneParam._m0[90u].z, fma(_1789, cbSceneParam._m0[90u].y, _1788 * cbSceneParam._m0[90u].x));
    float _1799 = fma(_1790, cbSceneParam._m0[91u].z, fma(_1789, cbSceneParam._m0[91u].y, _1788 * cbSceneParam._m0[91u].x));
    float _1833 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1837 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1841 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1845 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1846 = _1833 / _1845;
    float _1847 = _1837 / _1845;
    float _1848 = _1841 / _1845;
    float _1995;
    float _1996;
    float _1997;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1875 = ((uint(_1848 > cbSceneParam._m0[59u].y) + uint(_1848 > cbSceneParam._m0[59u].x)) + uint(_1848 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1876 = _1875 + 43u;
        uint _1884 = _1875 + 44u;
        uint _1892 = _1875 + 45u;
        uint _1900 = _1875 + 46u;
        float _1911 = fma(_1845, cbSceneParam._m0[_1876].w, fma(_1841, cbSceneParam._m0[_1876].z, fma(_1837, cbSceneParam._m0[_1876].y, _1833 * cbSceneParam._m0[_1876].x)));
        float _1915 = fma(_1845, cbSceneParam._m0[_1884].w, fma(_1841, cbSceneParam._m0[_1884].z, fma(_1837, cbSceneParam._m0[_1884].y, _1833 * cbSceneParam._m0[_1884].x)));
        float _1923 = fma(_1845, cbSceneParam._m0[_1900].w, fma(_1841, cbSceneParam._m0[_1900].z, fma(_1837, cbSceneParam._m0[_1900].y, _1833 * cbSceneParam._m0[_1900].x)));
        float _1928 = cbSceneParam._m0[33u].z * _1923;
        float _1930 = cbSceneParam._m0[33u].w * _1923;
        float _1933 = fma(_1845, cbSceneParam._m0[_1892].w, fma(_1841, cbSceneParam._m0[_1892].z, fma(_1837, cbSceneParam._m0[_1892].y, _1833 * cbSceneParam._m0[_1892].x))) / _1923;
        float _1981 = (cbSceneParam._m0[33u].x - sqrt(((_1847 * _1847) + (_1846 * _1846)) + (_1848 * _1848))) * cbSceneParam._m0[33u].y;
        float _4102 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
        float _1988 = (isnan(1.0) ? _4102 : (isnan(_4102) ? 1.0 : min(_4102, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1928 + _1911) / _1923, (_1930 + _1915) / _1923), _1933), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1930 + _1911) / _1923, (_1915 - _1928) / _1923), _1933), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1911 - _1928) / _1923, (_1915 - _1930) / _1923), _1933), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1911 - _1930) / _1923, (_1928 + _1915) / _1923), _1933), 0.0)).x), vec4(0.25)));
        _1995 = 1.0 - (_1988 * cbSceneParam._m0[34u].x);
        _1996 = 1.0 - (_1988 * cbSceneParam._m0[34u].y);
        _1997 = 1.0 - (_1988 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1995 = 1.0;
        _1996 = 1.0;
        _1997 = 1.0;
    }
    float _2061;
    float _2063;
    float _2065;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2049 = fma(_1845, cbSceneParam._m0[63u].w, fma(_1841, cbSceneParam._m0[63u].z, fma(_1837, cbSceneParam._m0[63u].y, _1833 * cbSceneParam._m0[63u].x)));
        float _2050 = fma(_1845, cbSceneParam._m0[60u].w, fma(_1841, cbSceneParam._m0[60u].z, fma(_1837, cbSceneParam._m0[60u].y, _1833 * cbSceneParam._m0[60u].x))) / _2049;
        float _2051 = fma(_1845, cbSceneParam._m0[61u].w, fma(_1841, cbSceneParam._m0[61u].z, fma(_1837, cbSceneParam._m0[61u].y, _1833 * cbSceneParam._m0[61u].x))) / _2049;
        float frontier_phi_49_48_ladder;
        float frontier_phi_49_48_ladder_1;
        float frontier_phi_49_48_ladder_2;
        if ((((_2050 >= cbSceneParam._m0[64u].x) && (_2051 >= cbSceneParam._m0[64u].y)) && (_2050 <= cbSceneParam._m0[64u].z)) && (_2051 <= cbSceneParam._m0[64u].w))
        {
            float _2338 = fma(_1845, cbSceneParam._m0[62u].w, fma(_1841, cbSceneParam._m0[62u].z, fma(_1837, cbSceneParam._m0[62u].y, _1833 * cbSceneParam._m0[62u].x))) / _2049;
            float _2342 = isnan(cbSceneParam._m0[41u].w) ? _2338 : (isnan(_2338) ? cbSceneParam._m0[41u].w : max(_2338, cbSceneParam._m0[41u].w));
            float _2385 = (cbSceneParam._m0[33u].x - sqrt(((_1847 * _1847) + (_1846 * _1846)) + (_1848 * _1848))) * cbSceneParam._m0[33u].y;
            float _4118 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
            float _2392 = (isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2050, cbSceneParam._m0[33u].w + _2051), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2050, _2051 - cbSceneParam._m0[33u].z), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2050 - cbSceneParam._m0[33u].z, _2051 - cbSceneParam._m0[33u].w), _2342), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2050 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2051), _2342), 0.0)).x), vec4(0.25)));
            float _2396 = 1.0 - (_2392 * cbSceneParam._m0[34u].x);
            float _2397 = 1.0 - (_2392 * cbSceneParam._m0[34u].y);
            float _2398 = 1.0 - (_2392 * cbSceneParam._m0[34u].z);
            frontier_phi_49_48_ladder = isnan(_2398) ? _1997 : (isnan(_1997) ? _2398 : min(_1997, _2398));
            frontier_phi_49_48_ladder_1 = isnan(_2397) ? _1996 : (isnan(_1996) ? _2397 : min(_1996, _2397));
            frontier_phi_49_48_ladder_2 = isnan(_2396) ? _1995 : (isnan(_1995) ? _2396 : min(_1995, _2396));
        }
        else
        {
            frontier_phi_49_48_ladder = _1997;
            frontier_phi_49_48_ladder_1 = _1996;
            frontier_phi_49_48_ladder_2 = _1995;
        }
        _2061 = frontier_phi_49_48_ladder_2;
        _2063 = frontier_phi_49_48_ladder_1;
        _2065 = frontier_phi_49_48_ladder;
    }
    else
    {
        _2061 = _1995;
        _2063 = _1996;
        _2065 = _1997;
    }
    uvec4 _2070 = floatBitsToUint(cbInstanceData._m0[_720 + 5u]);
    uint _2072 = _2070.x * 14u;
    uint _2073 = _2072 + 13u;
    float _2078 = _745 + (-1.0);
    float _2081 = (cbLight._m0[_2073].x * _2078) + 1.0;
    float _2082 = (cbLight._m0[_2073].y * _2078) + 1.0;
    uint _2083 = _2072 + 5u;
    float _2089 = isnan(1.0) ? _2082 : (isnan(_2082) ? 1.0 : min(_2082, 1.0));
    uint _2093 = _2072 + 4u;
    float _2102 = isnan(1.0) ? _2081 : (isnan(_2081) ? 1.0 : min(_2081, 1.0));
    uint _2106 = _2072 | 1u;
    float _2117 = dot(vec3(cbLight._m0[_2072].xyz), vec3(_627, _628, _629));
    float _2120 = dot(vec3(cbLight._m0[_2106].xyz), vec3(_627, _628, _629));
    float _4154 = isnan(0.0) ? _2117 : (isnan(_2117) ? 0.0 : max(_2117, 0.0));
    float _4165 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
    float _2125 = (isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0))) * 0.3183098733425140380859375;
    float _2127 = (isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0))) * 0.3183098733425140380859375;
    float _2134 = ((cbLight._m0[_2083].x * _2089) * _2127) + (((cbLight._m0[_2093].x * _2061) * _2102) * _2125);
    float _2135 = ((_2089 * cbLight._m0[_2083].y) * _2127) + (((cbLight._m0[_2093].y * _2063) * _2102) * _2125);
    float _2136 = ((_2089 * cbLight._m0[_2083].z) * _2127) + (((cbLight._m0[_2093].z * _2065) * _2102) * _2125);
    uint _2138 = _2072 + 8u;
    float _2151 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2072].w)) * _630) * 0.949999988079071044921875);
    float _2152 = _2151 * _2151;
    float _2153 = cbLight._m0[_2072].x + _654;
    float _2154 = cbLight._m0[_2072].y + _655;
    float _2155 = cbLight._m0[_2072].z + _656;
    float _2159 = inversesqrt(dot(vec3(_2153, _2154, _2155), vec3(_2153, _2154, _2155)));
    float _2160 = _2159 * _2153;
    float _2161 = _2159 * _2154;
    float _2162 = _2159 * _2155;
    float _2163 = dot(vec3(_627, _628, _629), vec3(cbLight._m0[_2072].xyz));
    float _4176 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
    float _2166 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
    float _4187 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _2167 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
    float _2168 = dot(vec3(_627, _628, _629), vec3(_2160, _2161, _2162));
    float _4198 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
    float _2171 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
    float _2172 = dot(vec3(cbLight._m0[_2072].xyz), vec3(_2160, _2161, _2162));
    float _4209 = isnan(0.0) ? _2172 : (isnan(_2172) ? 0.0 : max(_2172, 0.0));
    float _2176 = _2152 * _2152;
    float _2180 = ((_2171 * _2171) * (_2176 + (-1.0))) + 1.0;
    float _2191 = (exp2(log2(1.0 - (isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2192 = 1.0 - _2152;
    float _2203 = (0.5 / (((_2167 * ((_2166 * _2192) + _2152)) + 9.9999999392252902907785028219223e-09) + (((_2167 * _2192) + _2152) * _2166))) * _2166;
    float _4220 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
    float _2205 = (isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0))) * (_2176 / ((_2180 * _2180) * 3.141590118408203125));
    uint _2219 = _2072 + 9u;
    float _2230 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2106].w)) * _630) * 0.949999988079071044921875);
    float _2231 = _2230 * _2230;
    float _2232 = cbLight._m0[_2106].x + _654;
    float _2233 = cbLight._m0[_2106].y + _655;
    float _2234 = cbLight._m0[_2106].z + _656;
    float _2238 = inversesqrt(dot(vec3(_2232, _2233, _2234), vec3(_2232, _2233, _2234)));
    float _2239 = _2238 * _2232;
    float _2240 = _2238 * _2233;
    float _2241 = _2238 * _2234;
    float _2242 = dot(vec3(_627, _628, _629), vec3(cbLight._m0[_2106].xyz));
    float _4231 = isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0));
    float _2245 = isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0));
    float _2246 = dot(vec3(_627, _628, _629), vec3(_2239, _2240, _2241));
    float _4242 = isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0));
    float _2249 = isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0));
    float _2250 = dot(vec3(cbLight._m0[_2106].xyz), vec3(_2239, _2240, _2241));
    float _4253 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
    float _2254 = _2231 * _2231;
    float _2258 = ((_2249 * _2249) * (_2254 + (-1.0))) + 1.0;
    float _2267 = (exp2(log2(1.0 - (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2268 = 1.0 - _2231;
    float _2278 = (0.5 / (((_2167 * ((_2245 * _2268) + _2231)) + 9.9999999392252902907785028219223e-09) + (((_2167 * _2268) + _2231) * _2245))) * _2245;
    float _4264 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
    float _2280 = (isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))) * (_2254 / ((_2258 * _2258) * 3.141590118408203125));
    float _2290 = (((_2267 * cbLight._m0[_2219].x) * _2280) * _2089) + ((((cbLight._m0[_2138].x * _2061) * _2191) * _2205) * _2102);
    float _2291 = (((_2267 * cbLight._m0[_2219].y) * _2280) * _2089) + ((((cbLight._m0[_2138].y * _2063) * _2191) * _2205) * _2102);
    float _2292 = (((_2267 * cbLight._m0[_2219].z) * _2280) * _2089) + ((((cbLight._m0[_2138].z * _2065) * _2191) * _2205) * _2102);
    float _2455;
    float _2457;
    float _2459;
    float _2461;
    float _2463;
    float _2465;
    if (_2070.y == 0u)
    {
        uvec4 _2410 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2411 = _2410.x;
        uint _2422 = uint((float(_2410.y) * floor(float(uint(cbSceneParam._m0[85u].y * _681) / _2411))) + floor(float(uint(cbSceneParam._m0[85u].x * _680) / _2411)));
        float _2432 = (log2(_1848 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2433 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
        uint _2436 = uint(isnan(14.0) ? _2433 : (isnan(_2433) ? 14.0 : min(_2433, 14.0)));
        uvec4 _2441 = texelFetch(g_lightClusterGridBuffer, int(((_2436 << 2u) + (_2422 << 6u)) >> 2u));
        uint _2442 = _2441.x;
        uint _2443 = _2410.z;
        float _2572;
        float _2574;
        float _2576;
        float _2578;
        float _2580;
        float _2582;
        if (((((1u << ((_2443 >> 4u) & 15u)) + 4294967295u) & _2442) == 0u) || ((_2443 & 240u) == 0u))
        {
            _2572 = 0.0;
            _2574 = 0.0;
            _2576 = 0.0;
            _2578 = 0.0;
            _2580 = 0.0;
            _2582 = 0.0;
        }
        else
        {
            float _2573;
            float _2575;
            float _2577;
            float _2579;
            float _2581;
            float _2583;
            float _2750 = 0.0;
            float _2751 = 0.0;
            float _2752 = 0.0;
            float _2753 = 0.0;
            float _2754 = 0.0;
            float _2755 = 0.0;
            uint _2756 = 0u;
            uint _2765;
            bool _2766;
            for (;;)
            {
                _2765 = texelFetch(g_lightClassification, int((((_2436 << 5u) + (_2422 << 9u)) + (_2756 << 2u)) >> 2u)).x;
                _2766 = _2765 == 0u;
                float frontier_phi_75_pred;
                float frontier_phi_75_pred_1;
                float frontier_phi_75_pred_2;
                float frontier_phi_75_pred_3;
                float frontier_phi_75_pred_4;
                float frontier_phi_75_pred_5;
                if (_2766)
                {
                    frontier_phi_75_pred = _2753;
                    frontier_phi_75_pred_1 = _2755;
                    frontier_phi_75_pred_2 = _2754;
                    frontier_phi_75_pred_3 = _2752;
                    frontier_phi_75_pred_4 = _2751;
                    frontier_phi_75_pred_5 = _2750;
                }
                else
                {
                    float _2916;
                    float _2917;
                    float _2918;
                    float _2919;
                    float _2920;
                    float _2921;
                    uint _2922;
                    _2916 = _2750;
                    _2917 = _2751;
                    _2918 = _2752;
                    _2919 = _2753;
                    _2920 = _2754;
                    _2921 = _2755;
                    _2922 = _2765;
                    float _2843;
                    float _2844;
                    float _2845;
                    float _2846;
                    float _2847;
                    float _2848;
                    for (;;)
                    {
                        uint _2926 = uint(findLSB(_2922)) + (_2756 << 5u);
                        uint _2923 = (_2922 + 4294967295u) & _2922;
                        uint _2928 = _2926 * 48u;
                        vec4 _2942 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2928)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2928 + 3u)).x));
                        uint _2948 = (_2926 * 48u) + 4u;
                        vec4 _2961 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2948)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2948 + 3u)).x));
                        uint _2967 = (_2926 * 48u) + 8u;
                        vec3 _2978 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2967)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 2u)).x));
                        float _2982 = _2942.x - _1846;
                        float _2983 = _2942.y - _1847;
                        float _2984 = _2942.z - _1848;
                        float _2985 = dot(vec3(_2982, _2983, _2984), vec3(_2982, _2983, _2984));
                        float _2988 = inversesqrt(_2985);
                        float _2989 = _2988 * _2982;
                        float _2990 = _2988 * _2983;
                        float _2991 = _2988 * _2984;
                        float _2992 = dot(vec3(_701, _704, _707), vec3(_2989, _2990, _2991));
                        float _2997 = 1.0 - (_2985 * _2942.w);
                        float _4285 = isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0));
                        float _2998 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
                        float _2999 = sqrt(_2985) * _2961.w;
                        float _3002 = 1.39999997615814208984375 / (_2999 + 1.39999997615814208984375);
                        float _3003 = _3002 * _3002;
                        float _3006 = ((1.0 - _3003) * _2992) + _3003;
                        float _3009 = _2999 * _2999;
                        float _3013 = ((isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0))) * _2998) / ((_3009 * 0.699999988079071044921875) + 1.0);
                        float _3017 = (-0.0) - _1846;
                        float _3018 = (-0.0) - _1847;
                        float _3019 = (-0.0) - _1848;
                        float _3023 = inversesqrt(dot(vec3(_3017, _3018, _3019), vec3(_3017, _3018, _3019)));
                        float _3024 = _3023 * _3017;
                        float _3025 = _3023 * _3018;
                        float _3026 = _3023 * _3019;
                        float _3033 = exp2(log2(1.0 / ((_3009 * 3.5) + 5.0)) * 0.25);
                        float _3034 = 1.0 - _761;
                        float _3041 = sqrt(1.0 - ((1.0 - (_3034 * _3034)) * (1.0 - (_3033 * _3033))));
                        float _3042 = _3041 * _3041;
                        float _3043 = _3042 * _3042;
                        float _3044 = _3024 + _2989;
                        float _3045 = _3025 + _2990;
                        float _3046 = _3026 + _2991;
                        float _3050 = inversesqrt(dot(vec3(_3044, _3045, _3046), vec3(_3044, _3045, _3046)));
                        float _3054 = dot(vec3(_701, _704, _707), vec3(_3024, _3025, _3026));
                        float _4301 = isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0));
                        float _3057 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
                        float _3058 = dot(vec3(_701, _704, _707), vec3(_3050 * _3044, _3050 * _3045, _3050 * _3046));
                        float _4312 = isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0));
                        float _3061 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
                        float _3065 = ((_3061 * _3061) * (_3043 + (-1.0))) + 1.0;
                        float _3066 = _3002 * _3042;
                        float _3067 = _3066 * _3066;
                        float _3070 = ((1.0 - _3067) * _2992) + _3067;
                        float _4323 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
                        float _3071 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
                        float _3072 = 1.0 - _3042;
                        float _3082 = (0.5 / (((_3071 * ((_3057 * _3072) + _3042)) + 9.9999999392252902907785028219223e-09) + (((_3071 * _3072) + _3042) * _3057))) * _3071;
                        float _4334 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
                        float _3093 = (((_3043 * 3.1415927410125732421875) * (isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0)))) / ((_3065 * _3065) * ((_3009 * 2.1991131305694580078125) + 3.141590118408203125))) * _2998;
                        _2846 = (_3013 * _2961.x) + _2919;
                        _2847 = (_3013 * _2961.y) + _2920;
                        _2848 = (_3013 * _2961.z) + _2921;
                        _2843 = (_3093 * _2978.x) + _2916;
                        _2844 = (_3093 * _2978.y) + _2917;
                        _2845 = (_3093 * _2978.z) + _2918;
                        if (_2923 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2916 = _2843;
                            _2917 = _2844;
                            _2918 = _2845;
                            _2919 = _2846;
                            _2920 = _2847;
                            _2921 = _2848;
                            _2922 = _2923;
                        }
                    }
                    frontier_phi_75_pred = _2846;
                    frontier_phi_75_pred_1 = _2848;
                    frontier_phi_75_pred_2 = _2847;
                    frontier_phi_75_pred_3 = _2845;
                    frontier_phi_75_pred_4 = _2844;
                    frontier_phi_75_pred_5 = _2843;
                }
                _2579 = frontier_phi_75_pred;
                _2583 = frontier_phi_75_pred_1;
                _2581 = frontier_phi_75_pred_2;
                _2577 = frontier_phi_75_pred_3;
                _2575 = frontier_phi_75_pred_4;
                _2573 = frontier_phi_75_pred_5;
                uint _2757 = _2756 + 1u;
                if (_2757 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2750 = _2573;
                    _2751 = _2575;
                    _2752 = _2577;
                    _2753 = _2579;
                    _2754 = _2581;
                    _2755 = _2583;
                    _2756 = _2757;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2572 = _2573;
            _2574 = _2575;
            _2576 = _2577;
            _2578 = _2579;
            _2580 = _2581;
            _2582 = _2583;
        }
        uvec4 _2586 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2587 = _2586.z;
        uint _2589 = (_2587 >> 8u) & 15u;
        float _2718;
        float _2720;
        float _2722;
        float _2724;
        float _2726;
        float _2728;
        if (((4294967295u << _2589) & _2442) == 0u)
        {
            _2718 = _2572;
            _2720 = _2574;
            _2722 = _2576;
            _2724 = _2578;
            _2726 = _2580;
            _2728 = _2582;
        }
        else
        {
            float _2743 = inversesqrt(dot(vec3(_1846, _1847, _1848), vec3(_1846, _1847, _1848)));
            float _2744 = _2743 * _1846;
            float _2745 = _2743 * _1847;
            float _2746 = _2743 * _1848;
            float frontier_phi_66_67_ladder;
            float frontier_phi_66_67_ladder_1;
            float frontier_phi_66_67_ladder_2;
            float frontier_phi_66_67_ladder_3;
            float frontier_phi_66_67_ladder_4;
            float frontier_phi_66_67_ladder_5;
            if (_2589 < ((_2587 >> 12u) & 15u))
            {
                float _2719;
                float _2721;
                float _2723;
                float _2725;
                float _2727;
                float _2729;
                float _2899 = _2572;
                float _2900 = _2574;
                float _2901 = _2576;
                float _2902 = _2578;
                float _2903 = _2580;
                float _2904 = _2582;
                uint _2905 = _2589;
                uint _2914;
                bool _2915;
                for (;;)
                {
                    _2914 = texelFetch(g_lightClassification, int((((_2436 << 5u) + (_2422 << 9u)) + (_2905 << 2u)) >> 2u)).x;
                    _2915 = _2914 == 0u;
                    float frontier_phi_86_pred;
                    float frontier_phi_86_pred_1;
                    float frontier_phi_86_pred_2;
                    float frontier_phi_86_pred_3;
                    float frontier_phi_86_pred_4;
                    float frontier_phi_86_pred_5;
                    if (_2915)
                    {
                        frontier_phi_86_pred = _2904;
                        frontier_phi_86_pred_1 = _2903;
                        frontier_phi_86_pred_2 = _2902;
                        frontier_phi_86_pred_3 = _2901;
                        frontier_phi_86_pred_4 = _2900;
                        frontier_phi_86_pred_5 = _2899;
                    }
                    else
                    {
                        float _3107;
                        float _3108;
                        float _3109;
                        float _3110;
                        float _3111;
                        float _3112;
                        float _3402;
                        float _3403;
                        float _3404;
                        float _3405;
                        float _3406;
                        float _3407;
                        float _3120 = _2899;
                        float _3121 = _2900;
                        float _3122 = _2901;
                        float _3123 = _2902;
                        float _3124 = _2903;
                        float _3125 = _2904;
                        uint _3126 = _2914;
                        uint _3127;
                        vec4 _3152;
                        float _3153;
                        vec4 _3168;
                        vec3 _3180;
                        vec4 _3196;
                        vec4 _3212;
                        float _3258;
                        bool _3259;
                        for (;;)
                        {
                            uint _3137 = ((_2905 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3126));
                            _3127 = (_3126 + 4294967295u) & _3126;
                            uint _3139 = _3137 * 40u;
                            _3152 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3139)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3139 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3139 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3139 + 3u)).x));
                            _3153 = _3152.w;
                            uint _3155 = (_3137 * 40u) + 4u;
                            _3168 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3155)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 3u)).x));
                            uint _3170 = (_3137 * 40u) + 8u;
                            _3180 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3170)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3170 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3170 + 2u)).x));
                            uint _3183 = (_3137 * 40u) + 16u;
                            _3196 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3183)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3183 + 3u)).x));
                            uint _3199 = (_3137 * 40u) + 20u;
                            _3212 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3199)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3199 + 3u)).x));
                            uint _3214 = (_3137 * 40u) + 24u;
                            vec4 _3227 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3214)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 3u)).x));
                            uint _3233 = (_3137 * 40u) + 28u;
                            vec4 _3246 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3233)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3233 + 3u)).x));
                            _3258 = fma(_1848, _3246.z, fma(_1847, _3246.y, _3246.x * _1846)) + _3246.w;
                            _3259 = !((fma(_1848, _3227.z, fma(_1847, _3227.y, _3227.x * _1846)) + _3227.w) <= 0.0);
                            float frontier_phi_92_pred;
                            float frontier_phi_92_pred_1;
                            float frontier_phi_92_pred_2;
                            float frontier_phi_92_pred_3;
                            float frontier_phi_92_pred_4;
                            float frontier_phi_92_pred_5;
                            if (_3259)
                            {
                                float _3286 = _3152.x - _1846;
                                float _3287 = _3152.y - _1847;
                                float _3288 = _3152.z - _1848;
                                float _3289 = dot(vec3(_3286, _3287, _3288), vec3(_3286, _3287, _3288));
                                float _3292 = inversesqrt(_3289);
                                float _3293 = _3292 * _3286;
                                float _3294 = _3292 * _3287;
                                float _3295 = _3292 * _3288;
                                float _3299 = 1.0 - (_3289 / (_3153 * _3153));
                                float _4345 = isnan(0.0) ? _3299 : (isnan(_3299) ? 0.0 : max(_3299, 0.0));
                                float _3300 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
                                float _3304 = sqrt(_3289) * _3168.w;
                                float _3306 = 1.39999997615814208984375 / (_3304 + 1.39999997615814208984375);
                                float _3307 = _3306 * _3306;
                                float _3310 = ((1.0 - _3307) * dot(vec3(_3293, _3294, _3295), vec3(_701, _704, _707))) + _3307;
                                float _3313 = _3304 * _3304;
                                float _3317 = (fma(_1848, _3196.z, fma(_1847, _3196.y, _3196.x * _1846)) + _3196.w) / _3258;
                                float _3318 = (fma(_1848, _3212.z, fma(_1847, _3212.y, _3212.x * _1846)) + _3212.w) / _3258;
                                float _3322 = 1.0 - dot(vec2(_3317, _3318), vec2(_3317, _3318));
                                float _4361 = isnan(0.0) ? _3322 : (isnan(_3322) ? 0.0 : max(_3322, 0.0));
                                float _3323 = isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0));
                                float _3324 = _3323 * (((isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : max(_3310, 0.0))) * _3300) / ((_3313 * 0.699999988079071044921875) + 1.0));
                                float _3336 = exp2(log2(1.0 / ((_3313 * 3.5) + 5.0)) * 0.25);
                                float _3337 = 1.0 - _761;
                                float _3344 = sqrt(1.0 - ((1.0 - (_3337 * _3337)) * (1.0 - (_3336 * _3336))));
                                float _3345 = _3344 * _3344;
                                float _3346 = _3345 * _3345;
                                float _3347 = _3293 - _2744;
                                float _3348 = _3294 - _2745;
                                float _3349 = _3295 - _2746;
                                float _3353 = inversesqrt(dot(vec3(_3347, _3348, _3349), vec3(_3347, _3348, _3349)));
                                float _3357 = dot(vec3(_701, _704, _707), vec3((-0.0) - _2744, (-0.0) - _2745, (-0.0) - _2746));
                                float _4372 = isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0));
                                float _3360 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
                                float _3361 = dot(vec3(_701, _704, _707), vec3(_3353 * _3347, _3353 * _3348, _3353 * _3349));
                                float _4383 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0));
                                float _3364 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
                                float _3368 = ((_3364 * _3364) * (_3346 + (-1.0))) + 1.0;
                                float _3369 = _3306 * _3345;
                                float _3370 = _3369 * _3369;
                                float _3376 = ((1.0 - _3370) * dot(vec3(_701, _704, _707), vec3(_3293, _3294, _3295))) + _3370;
                                float _4394 = isnan(0.0) ? _3376 : (isnan(_3376) ? 0.0 : max(_3376, 0.0));
                                float _3377 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
                                float _3378 = 1.0 - _3345;
                                float _3388 = (0.5 / (((_3377 * ((_3360 * _3378) + _3345)) + 9.9999999392252902907785028219223e-09) + (((_3377 * _3378) + _3345) * _3360))) * _3377;
                                float _4405 = isnan(0.0) ? _3388 : (isnan(_3388) ? 0.0 : max(_3388, 0.0));
                                float _3398 = (_3323 * _3300) * (((_3346 * 3.1415927410125732421875) * (isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0)))) / ((_3368 * _3368) * ((_3313 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_92_pred = _3324 * _3168.z;
                                frontier_phi_92_pred_1 = _3324 * _3168.y;
                                frontier_phi_92_pred_2 = _3324 * _3168.x;
                                frontier_phi_92_pred_3 = _3398 * _3180.z;
                                frontier_phi_92_pred_4 = _3398 * _3180.y;
                                frontier_phi_92_pred_5 = _3398 * _3180.x;
                            }
                            else
                            {
                                frontier_phi_92_pred = 0.0;
                                frontier_phi_92_pred_1 = 0.0;
                                frontier_phi_92_pred_2 = 0.0;
                                frontier_phi_92_pred_3 = 0.0;
                                frontier_phi_92_pred_4 = 0.0;
                                frontier_phi_92_pred_5 = 0.0;
                            }
                            _3407 = frontier_phi_92_pred;
                            _3406 = frontier_phi_92_pred_1;
                            _3405 = frontier_phi_92_pred_2;
                            _3404 = frontier_phi_92_pred_3;
                            _3403 = frontier_phi_92_pred_4;
                            _3402 = frontier_phi_92_pred_5;
                            _3110 = _3405 + _3123;
                            _3111 = _3406 + _3124;
                            _3112 = _3407 + _3125;
                            _3107 = _3402 + _3120;
                            _3108 = _3403 + _3121;
                            _3109 = _3404 + _3122;
                            if (_3127 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3120 = _3107;
                                _3121 = _3108;
                                _3122 = _3109;
                                _3123 = _3110;
                                _3124 = _3111;
                                _3125 = _3112;
                                _3126 = _3127;
                                continue;
                            }
                        }
                        frontier_phi_86_pred = _3112;
                        frontier_phi_86_pred_1 = _3111;
                        frontier_phi_86_pred_2 = _3110;
                        frontier_phi_86_pred_3 = _3109;
                        frontier_phi_86_pred_4 = _3108;
                        frontier_phi_86_pred_5 = _3107;
                    }
                    _2729 = frontier_phi_86_pred;
                    _2727 = frontier_phi_86_pred_1;
                    _2725 = frontier_phi_86_pred_2;
                    _2723 = frontier_phi_86_pred_3;
                    _2721 = frontier_phi_86_pred_4;
                    _2719 = frontier_phi_86_pred_5;
                    uint _2906 = _2905 + 1u;
                    if (_2906 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2899 = _2719;
                        _2900 = _2721;
                        _2901 = _2723;
                        _2902 = _2725;
                        _2903 = _2727;
                        _2904 = _2729;
                        _2905 = _2906;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_66_67_ladder = _2725;
                frontier_phi_66_67_ladder_1 = _2729;
                frontier_phi_66_67_ladder_2 = _2727;
                frontier_phi_66_67_ladder_3 = _2723;
                frontier_phi_66_67_ladder_4 = _2721;
                frontier_phi_66_67_ladder_5 = _2719;
            }
            else
            {
                frontier_phi_66_67_ladder = _2578;
                frontier_phi_66_67_ladder_1 = _2582;
                frontier_phi_66_67_ladder_2 = _2580;
                frontier_phi_66_67_ladder_3 = _2576;
                frontier_phi_66_67_ladder_4 = _2574;
                frontier_phi_66_67_ladder_5 = _2572;
            }
            _2718 = frontier_phi_66_67_ladder_5;
            _2720 = frontier_phi_66_67_ladder_4;
            _2722 = frontier_phi_66_67_ladder_3;
            _2724 = frontier_phi_66_67_ladder;
            _2726 = frontier_phi_66_67_ladder_2;
            _2728 = frontier_phi_66_67_ladder_1;
        }
        float _2733 = isnan(1.0) ? _745 : (isnan(_745) ? 1.0 : min(_745, 1.0));
        _2455 = (_2733 * _2724) + _2134;
        _2457 = (_2733 * _2726) + _2135;
        _2459 = (_2733 * _2728) + _2136;
        _2461 = ((_2718 * 0.039999999105930328369140625) * _2733) + _2290;
        _2463 = ((_2720 * 0.039999999105930328369140625) * _2733) + _2291;
        _2465 = ((_2722 * 0.039999999105930328369140625) * _2733) + _2292;
    }
    else
    {
        _2455 = _2134;
        _2457 = _2135;
        _2459 = _2136;
        _2461 = _2290;
        _2463 = _2291;
        _2465 = _2292;
    }
    uint _2471 = _721 + uint(cbMatDynParam._m0[0u].w);
    float _4421 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _4432 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _4443 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
    float _2502 = (((isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_2455 + ((isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0))) * _745))) + ((_2461 + ((isnan(0.0) ? _1793 : (isnan(_1793) ? 0.0 : max(_1793, 0.0))) * _1581)) * cbPerFrame._m0[3u].x)) + (((_512.x * _299) * (((_577 * (cbMtdParam._m0[15u].x - cbMtdParam._m0[13u].x)) * _572) + cbMtdParam._m0[13u].x)) * cbInstanceData._m0[_2471].x);
    float _2504 = ((((_512.y * _299) * (((_577 * (cbMtdParam._m0[15u].y - cbMtdParam._m0[13u].y)) * _572) + cbMtdParam._m0[13u].y)) * cbInstanceData._m0[_2471].y) + ((_2463 + ((isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0))) * _1581)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_2457 + ((isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0))) * _745)));
    float _2506 = ((((_512.z * _299) * (((_577 * (cbMtdParam._m0[15u].z - cbMtdParam._m0[13u].z)) * _572) + cbMtdParam._m0[13u].z)) * cbInstanceData._m0[_2471].z) + ((_2465 + ((isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0))) * _1581)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * (_2459 + ((isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0))) * _745)));
    float _2507 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
    float _2508 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2509 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
    uint _2510 = _720 + 6u;
    float _2518 = _680 / cbSceneParam._m0[86u].x;
    float _2519 = _681 / cbSceneParam._m0[86u].y;
    vec4 _2533 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2518, _2519, (log2((isnan(cbSceneParam._m0[77u].w) ? _649 : (isnan(_649) ? cbSceneParam._m0[77u].w : min(_649, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2535 = _2533.x;
    float _2536 = _2533.y;
    float _2537 = _2533.z;
    float _2538 = _2533.w;
    float _2634;
    float _2636;
    float _2638;
    float _2640;
    if (_649 > cbSceneParam._m0[78u].w)
    {
        float _2597 = isnan(_649) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _649 : min(cbSceneParam._m0[80u].w, _649));
        float _2598 = _2597 / _649;
        float _2609 = _2598 * _281;
        float _2610 = _282 * _2598;
        float _2611 = (-0.0) - _2610;
        float _2612 = _2598 * _283;
        float _2614 = (cbSceneParam._m0[77u].w * _2611) / _2597;
        float _2615 = _2614 + cbSceneParam._m0[79u].w;
        float _2616 = cbSceneParam._m0[79u].w - _2610;
        float _2622 = sqrt(((_2609 * _2609) + (_2610 * _2610)) + (_2612 * _2612));
        float _2625 = (1.0 - (cbSceneParam._m0[77u].w / _2597)) * _2622;
        float _2630 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2632 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2856;
        if (abs((_2611 - _2614) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2856 = ((((_2615 > 0.0) ? exp2(_2630 * _2615) : (2.0 - exp2(_2632 * _2615))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2625;
        }
        else
        {
            float _2779 = 1.0 / cbSceneParam._m0[80u].x;
            float _2780 = isnan(_2616) ? _2615 : (isnan(_2615) ? _2616 : max(_2615, _2616));
            float _2781 = isnan(_2616) ? _2615 : (isnan(_2615) ? _2616 : min(_2615, _2616));
            float _2790 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : min(_2780, 0.0));
            float _2791 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : min(_2781, 0.0));
            _2856 = ((abs(_2622 / _2611) * cbSceneParam._m0[80u].y) * ((((_2790 - _2791) * 2.0) - ((exp2(_2630 * (isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0)))) - exp2(_2630 * (isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0))))) * _2779)) - ((exp2(_2632 * _2790) - exp2(_2632 * _2791)) * _2779))) + (_2625 * cbSceneParam._m0[80u].z);
        }
        vec4 _2858 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2518, _2519, 1.0), 0.0);
        float _2867 = exp2((_2856 * (-1.44269502162933349609375)) * (1.0 - _2858.w));
        float _2868 = log2(_2867);
        float _2884 = log2(_2538);
        _2634 = (exp2(_2884 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2868 * cbSceneParam._m0[78u].x)) * _2858.x) / cbSceneParam._m0[78u].x)) + _2535;
        _2636 = (exp2(_2884 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2868 * cbSceneParam._m0[78u].y)) * _2858.y) / cbSceneParam._m0[78u].y)) + _2536;
        _2638 = (exp2(_2884 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2868 * cbSceneParam._m0[78u].z)) * _2858.z) / cbSceneParam._m0[78u].z)) + _2537;
        _2640 = _2867 * _2538;
    }
    else
    {
        _2634 = _2535;
        _2636 = _2536;
        _2638 = _2537;
        _2640 = _2538;
    }
    bool _2894;
    vec4 _2650;
    vec4 _2672;
    float _2674;
    float _2678;
    float _2679;
    float _2680;
    float _2681;
    bool _2691;
    for (;;)
    {
        _2650 = cbMatDynParam._m0[0u];
        float _2652 = roundEven(_2650.y);
        bool _2653 = _2652 == 3.0;
        float _2654 = log2(_2640);
        float _2661 = exp2(_2654 * cbSceneParam._m0[78u].x) * _2507;
        float _2662 = exp2(_2654 * cbSceneParam._m0[78u].y) * _2508;
        float _2663 = exp2(_2654 * cbSceneParam._m0[78u].z) * _2509;
        float _2670 = _663 + (-0.5);
        _2672 = cbMtdParam._m0[1u];
        _2674 = _2672.y * _2670;
        float _2677 = (_2652 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2678 = _2677 * (_2653 ? _2661 : (_2661 + (cbSceneParam._m0[72u].w * _2634)));
        _2679 = _2677 * (_2653 ? _2662 : (_2662 + (cbSceneParam._m0[72u].w * _2636)));
        _2680 = _2677 * (_2653 ? _2663 : (_2663 + (cbSceneParam._m0[72u].w * _2638)));
        _2681 = _2670 * 0.999000012874603271484375;
        _2691 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2691)
        {
            if ((cbInstanceData._m0[_720 + 7u].x + _2681) < 0.5)
            {
                _2894 = true;
                break;
            }
        }
        uint _2814 = _721 + uint(_2650.w);
        if ((cbInstanceData._m0[_2814].w < 1.0) && ((cbInstanceData._m0[_2814].w + _2681) < 0.5))
        {
            _2894 = true;
            break;
        }
        if ((_2674 + 1.0) < _2672.x)
        {
            _2894 = true;
            break;
        }
        _2894 = false;
        break;
    }
    float _3098;
    if (_2894)
    {
        discard_state = true;
        _3098 = 0.0;
    }
    else
    {
        _3098 = cbInstanceData._m0[_2510].w;
    }
    SV_Target.x = _2678;
    SV_Target.y = _2679;
    SV_Target.z = _2680;
    SV_Target.w = _3098;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2510].w;
    discard_exit();
}


