#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _965;
float _3206;
float _3207;
float _3208;
float _3209;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _188 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _189 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _190 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_188, _189, _190), vec3(_188, _189, _190)));
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _257 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _267 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _257);
    float _268 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _257);
    float _269 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _257);
    vec4 _288 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _323 = cbMtdParam._m0[24u].x + _267;
    float _324 = cbMtdParam._m0[24u].y + _268;
    float _325 = cbMtdParam._m0[24u].z + _269;
    float _339 = (-0.0) - dot(vec3(_323, _324, _325), vec3(_195 * _188, _195 * _189, _195 * _190));
    float _340 = (-0.0) - dot(vec3(_323, _324, _325), vec3(_209 * TANGENT.x, _209 * TANGENT.y, _209 * TANGENT.z));
    float _341 = (-0.0) - dot(vec3(_323, _324, _325), vec3((-0.0) - (_202 * NORMAL.x), (-0.0) - (_202 * NORMAL.y), (-0.0) - (_202 * NORMAL.z)));
    float _345 = inversesqrt(dot(vec3(_339, _340, _341), vec3(_339, _340, _341)));
    float _348 = _345 * _341;
    float _349 = (_345 * _339) + (((_288.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _350 = (_345 * _340) + (((_288.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _351 = _349 * cbMtdParam._m0[20u].w;
    float _352 = _350 * cbMtdParam._m0[20u].z;
    float _353 = fract(TEXCOORD.x);
    float _354 = fract(TEXCOORD.y);
    float _360;
    if (_351 > 0.0)
    {
        _360 = (1.0 - _353) / _351;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_351 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _353) / _351;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _360 = frontier_phi_3_2_ladder;
    }
    float _368;
    if (_352 > 0.0)
    {
        _368 = (1.0 - _354) / _352;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_352 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _354) / _352;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _368 = frontier_phi_7_6_ladder;
    }
    bool _370 = _348 > 0.0;
    float _372 = _370 ? (cbMtdParam._m0[16u].x / _348) : 5000.0;
    float _373 = isnan(_368) ? _360 : (isnan(_360) ? _368 : min(_360, _368));
    float _374 = isnan(_372) ? _373 : (isnan(_373) ? _372 : min(_373, _372));
    float _378 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _379 = _353 + (-0.5);
    float _382 = _354 + (-0.5);
    float _385 = ((_374 * _348) + _378) / _378;
    vec4 _410 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_379 + (_374 * _351)) / _385) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_382 + (_374 * _352)) / _385) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _420 = cbMtdParam._m0[9u].x * _410.x;
    float _421 = cbMtdParam._m0[9u].y * _410.y;
    float _422 = cbMtdParam._m0[9u].z * _410.z;
    float _441 = _349 * cbMtdParam._m0[22u].w;
    float _442 = _350 * cbMtdParam._m0[22u].z;
    bool _443 = _441 > 0.0;
    float _448;
    if (_443)
    {
        _448 = (1.0 - _353) / _441;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _353) / _441;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _448 = frontier_phi_11_10_ladder;
    }
    bool _450 = _442 > 0.0;
    float _455;
    if (_450)
    {
        _455 = (1.0 - _354) / _442;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _354) / _442;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _455 = frontier_phi_15_14_ladder;
    }
    float _458 = _370 ? (cbMtdParam._m0[18u].x / _348) : 5000.0;
    float _459 = isnan(_455) ? _448 : (isnan(_448) ? _455 : min(_448, _455));
    float _460 = isnan(_458) ? _459 : (isnan(_459) ? _458 : min(_459, _458));
    float _464 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _468 = ((_460 * _348) + _464) / _464;
    float _473 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _475 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _491 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_379 + (_460 * _441)) / _468) + 0.5) + _473) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_382 + (_460 * _442)) / _468) + 0.5) + _475) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _503;
    if (_443)
    {
        _503 = (1.0 - _353) / _441;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_441 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _353) / _441;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _503 = frontier_phi_19_18_ladder;
    }
    float _509;
    if (_450)
    {
        _509 = (1.0 - _354) / _442;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_442 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _354) / _442;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _509 = frontier_phi_23_22_ladder;
    }
    float _511 = isnan(_509) ? _503 : (isnan(_503) ? _509 : min(_503, _509));
    float _512 = isnan(_458) ? _511 : (isnan(_511) ? _458 : min(_511, _458));
    float _519 = ((_512 * _348) + _464) / _464;
    vec4 _539 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_379 + (_512 * _441)) / _519) + 0.5) + _473) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_382 + (_512 * _442)) / _519) + 0.5) + _475) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _541 = _539.x;
    float _548 = (_541 * ((_491.x * cbMtdParam._m0[10u].x) - _420)) + _420;
    float _549 = (_541 * ((_491.y * cbMtdParam._m0[10u].y) - _421)) + _421;
    float _550 = (_541 * ((_491.z * cbMtdParam._m0[10u].z) - _422)) + _422;
    float _3248 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _3259 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    float _3270 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _569 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _573 = inversesqrt(dot(vec3(_267, _268, _269), vec3(_267, _268, _269)));
    float _574 = _267 * _573;
    float _575 = _268 * _573;
    float _576 = _269 * _573;
    vec4 _581 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _583 = _581.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _679 = sqrt(((_267 * _267) + (_268 * _268)) + (_269 * _269));
        float _685 = (cbMatDynParam._m0[5u].x * _679) + cbMatDynParam._m0[5u].y;
        float _3281 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
        float _686 = isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0));
        float _690 = (cbMatDynParam._m0[5u].z * _679) + cbMatDynParam._m0[5u].w;
        float _3292 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0))) - _686)) + _686) < ((_583 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _595 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _596 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _609 = uint(roundEven(NORMAL.w)) * 13u;
    uint _611 = _609 + 9u;
    uint _612 = _611 + uint(cbMatDynParam._m0[0u].w);
    float _618 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3248 : (isnan(_3248) ? 1.0 : min(_3248, 1.0)))) * cbInstanceData._m0[_612].x;
    float _619 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0)))) * cbInstanceData._m0[_612].y;
    float _620 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0)))) * cbInstanceData._m0[_612].z;
    float _3303 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _621 = isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0));
    float _3314 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _622 = isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0));
    float _3325 = isnan(0.0) ? _620 : (isnan(_620) ? 0.0 : max(_620, 0.0));
    float _623 = isnan(1.0) ? _3325 : (isnan(_3325) ? 1.0 : min(_3325, 1.0));
    vec4 _632 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _595, cbSceneParam._m0[86u].y * _596));
    float _635 = _632.x * TEXCOORD_4.z;
    float _636 = (-0.0) - _574;
    float _637 = (-0.0) - _575;
    float _638 = (-0.0) - _576;
    float _660 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _664 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _668 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _964;
    float _966;
    float _967;
    float _968;
    float _969;
    float _970;
    float _971;
    float _972;
    float _973;
    float _974;
    float _975;
    float _976;
    float _977;
    float _978;
    float _979;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _752 = (cbModelParam._m0[37u].x * ((((fma(_668, cbModelParam._m0[26u].z, fma(_664, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _660)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _754 = (cbModelParam._m0[37u].y * ((((fma(_668, cbModelParam._m0[27u].z, fma(_664, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _660)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _755 = (((((fma(_668, cbModelParam._m0[28u].z, fma(_664, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _660)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _758 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_752, _754, _755), 0.0);
        vec4 _765 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_752, _754, _755), 0.0);
        vec4 _772 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_752, _754, _755), 0.0);
        vec4 _779 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_752, _754, _755), 0.0);
        float _792 = exp2((_758.w + (-0.5)) * 20.0) * 2.0;
        float _793 = _792 * (_758.x + (-0.5));
        float _794 = _792 * (_758.y + (-0.5));
        float _795 = _792 * (_758.z + (-0.5));
        float _802 = exp2((_765.w + (-0.5)) * 20.0) * 2.0;
        float _803 = _802 * (_765.x + (-0.5));
        float _804 = _802 * (_765.y + (-0.5));
        float _805 = _802 * (_765.z + (-0.5));
        float _812 = exp2((_772.w + (-0.5)) * 20.0) * 2.0;
        float _813 = _812 * (_772.x + (-0.5));
        float _814 = _812 * (_772.y + (-0.5));
        float _815 = _812 * (_772.z + (-0.5));
        float _822 = exp2((_779.w + (-0.5)) * 20.0) * 2.0;
        float _823 = _822 * (_779.x + (-0.5));
        float _824 = _822 * (_779.y + (-0.5));
        float _825 = _822 * (_779.z + (-0.5));
        float _826 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
        float _827 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
        float _828 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
        float _829 = _793 * 0.5;
        float _830 = _803 * 0.5;
        float _831 = _813 * 0.5;
        float _832 = dot(vec3(_829, _830, _831), vec3(_829, _830, _831));
        float _837 = (_832 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_832);
        float _846 = (dot(vec3(0.0), vec3(_837 * _829, _837 * _830, _837 * _831)) + 1.0) * 0.5;
        float _3351 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
        float _856 = sqrt(((_830 * _830) + (_829 * _829)) + (_831 * _831)) / (_826 + 9.9999997473787516355514526367188e-06);
        float _3362 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
        float _857 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
        float _858 = _857 * 2.0;
        float _862 = (1.0 - _857) / (_857 + 1.0);
        float _3373 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
        float _863 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
        float _872 = ((((1.0 - _863) * (_858 + 2.0)) * exp2(log2(isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0))) * (_858 + 1.0))) + _863) * _826;
        float _873 = _794 * 0.5;
        float _874 = _804 * 0.5;
        float _875 = _814 * 0.5;
        float _876 = dot(vec3(_873, _874, _875), vec3(_873, _874, _875));
        float _881 = (_876 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_876);
        float _889 = (dot(vec3(0.0), vec3(_881 * _873, _881 * _874, _881 * _875)) + 1.0) * 0.5;
        float _3384 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
        float _898 = sqrt(((_874 * _874) + (_873 * _873)) + (_875 * _875)) / (_827 + 9.9999997473787516355514526367188e-06);
        float _3395 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _899 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
        float _900 = _899 * 2.0;
        float _904 = (1.0 - _899) / (_899 + 1.0);
        float _3406 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
        float _905 = isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0));
        float _914 = ((((1.0 - _905) * (_900 + 2.0)) * exp2(log2(isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0))) * (_900 + 1.0))) + _905) * _827;
        float _915 = _795 * 0.5;
        float _916 = _805 * 0.5;
        float _917 = _815 * 0.5;
        float _918 = dot(vec3(_915, _916, _917), vec3(_915, _916, _917));
        float _923 = (_918 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_918);
        float _931 = (dot(vec3(0.0), vec3(_923 * _915, _923 * _916, _923 * _917)) + 1.0) * 0.5;
        float _3417 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _940 = sqrt(((_916 * _916) + (_915 * _915)) + (_917 * _917)) / (_828 + 9.9999997473787516355514526367188e-06);
        float _3428 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _941 = isnan(1.0) ? _3428 : (isnan(_3428) ? 1.0 : min(_3428, 1.0));
        float _942 = _941 * 2.0;
        float _946 = (1.0 - _941) / (_941 + 1.0);
        float _3439 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _947 = isnan(1.0) ? _3439 : (isnan(_3439) ? 1.0 : min(_3439, 1.0));
        float _956 = ((((1.0 - _947) * (_942 + 2.0)) * exp2(log2(isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0))) * (_942 + 1.0))) + _947) * _828;
        _964 = _795;
        _966 = _794;
        _967 = _793;
        _968 = _805;
        _969 = _804;
        _970 = _803;
        _971 = _815;
        _972 = _814;
        _973 = _813;
        _974 = _828;
        _975 = _827;
        _976 = _826;
        _977 = cbModelParam._m0[36u].z * (isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0)));
        _978 = cbModelParam._m0[36u].z * (isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0)));
        _979 = cbModelParam._m0[36u].z * (isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0)));
    }
    else
    {
        _964 = _965;
        _966 = _965;
        _967 = _965;
        _968 = _965;
        _969 = _965;
        _970 = _965;
        _971 = _965;
        _972 = _965;
        _973 = _965;
        _974 = _965;
        _975 = _965;
        _976 = _965;
        _977 = 0.0;
        _978 = 0.0;
        _979 = 0.0;
    }
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1036 = (cbModelParam._m0[38u].x * ((((fma(_668, cbModelParam._m0[30u].z, fma(_664, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _660)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1037 = (cbModelParam._m0[38u].y * ((((fma(_668, cbModelParam._m0[31u].z, fma(_664, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _660)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1038 = (((((fma(_668, cbModelParam._m0[32u].z, fma(_664, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _660)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1040 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1047 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1054 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        vec4 _1061 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1036, _1037, _1038), 0.0);
        float _1073 = exp2((_1040.w + (-0.5)) * 20.0) * 2.0;
        float _1074 = _1073 * (_1040.x + (-0.5));
        float _1075 = _1073 * (_1040.y + (-0.5));
        float _1076 = _1073 * (_1040.z + (-0.5));
        float _1083 = exp2((_1047.w + (-0.5)) * 20.0) * 2.0;
        float _1084 = _1083 * (_1047.x + (-0.5));
        float _1085 = _1083 * (_1047.y + (-0.5));
        float _1086 = _1083 * (_1047.z + (-0.5));
        float _1093 = exp2((_1054.w + (-0.5)) * 20.0) * 2.0;
        float _1094 = _1093 * (_1054.x + (-0.5));
        float _1095 = _1093 * (_1054.y + (-0.5));
        float _1096 = _1093 * (_1054.z + (-0.5));
        float _1103 = exp2((_1061.w + (-0.5)) * 20.0) * 2.0;
        float _1104 = _1103 * (_1061.x + (-0.5));
        float _1105 = _1103 * (_1061.y + (-0.5));
        float _1106 = _1103 * (_1061.z + (-0.5));
        float _1107 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1108 = isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0));
        float _1109 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1110 = _1074 * 0.5;
        float _1111 = _1084 * 0.5;
        float _1112 = _1094 * 0.5;
        float _1113 = dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112));
        float _1118 = (_1113 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1113);
        float _1126 = (dot(vec3(0.0), vec3(_1118 * _1110, _1118 * _1111, _1118 * _1112)) + 1.0) * 0.5;
        float _3480 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1135 = sqrt(((_1111 * _1111) + (_1110 * _1110)) + (_1112 * _1112)) / (_1107 + 9.9999997473787516355514526367188e-06);
        float _3491 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1136 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
        float _1137 = _1136 * 2.0;
        float _1141 = (1.0 - _1136) / (_1136 + 1.0);
        float _3502 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
        float _1151 = ((((1.0 - _1142) * (_1137 + 2.0)) * exp2(log2(isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0))) * (_1137 + 1.0))) + _1142) * _1107;
        float _1152 = _1075 * 0.5;
        float _1153 = _1085 * 0.5;
        float _1154 = _1095 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1168 = (dot(vec3(0.0), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _3513 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1177 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1108 + 9.9999997473787516355514526367188e-06);
        float _3524 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
        float _1179 = _1178 * 2.0;
        float _1183 = (1.0 - _1178) / (_1178 + 1.0);
        float _3535 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3535 : (isnan(_3535) ? 1.0 : min(_3535, 1.0));
        float _1193 = ((((1.0 - _1184) * (_1179 + 2.0)) * exp2(log2(isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0))) * (_1179 + 1.0))) + _1184) * _1108;
        float _1194 = _1076 * 0.5;
        float _1195 = _1086 * 0.5;
        float _1196 = _1096 * 0.5;
        float _1197 = dot(vec3(_1194, _1195, _1196), vec3(_1194, _1195, _1196));
        float _1202 = (_1197 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1197);
        float _1210 = (dot(vec3(0.0), vec3(_1202 * _1194, _1202 * _1195, _1202 * _1196)) + 1.0) * 0.5;
        float _3546 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1219 = sqrt(((_1195 * _1195) + (_1194 * _1194)) + (_1196 * _1196)) / (_1109 + 9.9999997473787516355514526367188e-06);
        float _3557 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1220 = isnan(1.0) ? _3557 : (isnan(_3557) ? 1.0 : min(_3557, 1.0));
        float _1221 = _1220 * 2.0;
        float _1225 = (1.0 - _1220) / (_1220 + 1.0);
        float _3568 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _3568 : (isnan(_3568) ? 1.0 : min(_3568, 1.0));
        float _1235 = ((((1.0 - _1226) * (_1221 + 2.0)) * exp2(log2(isnan(1.0) ? _3546 : (isnan(_3546) ? 1.0 : min(_3546, 1.0))) * (_1221 + 1.0))) + _1226) * _1109;
        _1243 = _1076;
        _1244 = _1075;
        _1245 = _1074;
        _1246 = _1086;
        _1247 = _1085;
        _1248 = _1084;
        _1249 = _1096;
        _1250 = _1095;
        _1251 = _1094;
        _1252 = _1109;
        _1253 = _1108;
        _1254 = _1107;
        _1255 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)));
        _1256 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0)));
        _1257 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0)));
    }
    else
    {
        _1243 = _965;
        _1244 = _965;
        _1245 = _965;
        _1246 = _965;
        _1247 = _965;
        _1248 = _965;
        _1249 = _965;
        _1250 = _965;
        _1251 = _965;
        _1252 = _965;
        _1253 = _965;
        _1254 = _965;
        _1255 = 0.0;
        _1256 = 0.0;
        _1257 = 0.0;
    }
    float _1267 = (cbModelParam._m0[1u].x * (_1255 - _977)) + _977;
    float _1268 = (cbModelParam._m0[1u].x * (_1256 - _978)) + _978;
    float _1269 = (cbModelParam._m0[1u].x * (_1257 - _979)) + _979;
    float _1290 = fma(_1269, cbSceneParam._m0[89u].z, fma(_1268, cbSceneParam._m0[89u].y, _1267 * cbSceneParam._m0[89u].x));
    float _1293 = fma(_1269, cbSceneParam._m0[90u].z, fma(_1268, cbSceneParam._m0[90u].y, _1267 * cbSceneParam._m0[90u].x));
    float _1296 = fma(_1269, cbSceneParam._m0[91u].z, fma(_1268, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1267));
    float _1311 = _574 * (-0.5);
    float _1312 = _575 * (-0.5);
    float _1313 = _576 * (-0.5);
    float _1314 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_1245, _1248, _1251, _1254));
    float _1317 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_1244, _1247, _1250, _1253));
    float _1320 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_1243, _1246, _1249, _1252));
    float _1354;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1327 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_964, _968, _971, _974));
        float _1331 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_966, _969, _972, _975));
        float _1335 = dot(vec4(_1311, _1312, _1313, 1.0), vec4(_967, _970, _973, _976));
        float _1342 = dot(vec4(cbModelParam._m0[39u]), vec4(_1311, _1312, _1313, 1.0));
        _1354 = dot(vec3(isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0)), isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0)), isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1342) ? 0.0 : (isnan(0.0) ? _1342 : max(0.0, _1342))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1354 = 1.0;
    }
    float _1365;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1356 = dot(vec4(cbModelParam._m0[40u]), vec4(_1311, _1312, _1313, 1.0));
        _1365 = dot(vec3(isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0)), isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0)), isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1356) ? 0.0 : (isnan(0.0) ? _1356 : max(0.0, _1356))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1365 = 1.0;
    }
    float _1369 = (_1365 * cbModelParam._m0[1u].x) + (_1354 * (1.0 - cbModelParam._m0[1u].x));
    float _1378 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1461;
    float _1463;
    float _1465;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1428 = fma(_668, cbModelParam._m0[13u].z, fma(_664, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _660)) + cbModelParam._m0[13u].w;
        float _1432 = fma(_668, cbModelParam._m0[14u].z, fma(_664, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _660)) + cbModelParam._m0[14u].w;
        float _1436 = fma(_668, cbModelParam._m0[15u].z, fma(_664, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _660)) + cbModelParam._m0[15u].w;
        float _1439 = fma(_638, cbModelParam._m0[13u].z, fma(_637, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _636));
        float _1442 = fma(_638, cbModelParam._m0[14u].z, fma(_637, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _636));
        float _1445 = fma(_638, cbModelParam._m0[15u].z, fma(_637, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _636));
        float _1471;
        if (_1439 > 0.0)
        {
            _1471 = abs((1.0 - _1428) / _1439);
        }
        else
        {
            float frontier_phi_41_39_ladder;
            if (_1439 < 0.0)
            {
                frontier_phi_41_39_ladder = abs((_1428 + 1.0) / _1439);
            }
            else
            {
                frontier_phi_41_39_ladder = 5000.0;
            }
            _1471 = frontier_phi_41_39_ladder;
        }
        float _1641;
        if (_1442 > 0.0)
        {
            _1641 = abs((1.0 - _1432) / _1442);
        }
        else
        {
            float frontier_phi_50_46_ladder;
            if (_1442 < 0.0)
            {
                frontier_phi_50_46_ladder = abs((_1432 + 1.0) / _1442);
            }
            else
            {
                frontier_phi_50_46_ladder = 5000.0;
            }
            _1641 = frontier_phi_50_46_ladder;
        }
        float _2036;
        if (_1445 > 0.0)
        {
            _2036 = abs((1.0 - _1436) / _1445);
        }
        else
        {
            float frontier_phi_62_57_ladder;
            if (_1445 < 0.0)
            {
                frontier_phi_62_57_ladder = abs((_1436 + 1.0) / _1445);
            }
            else
            {
                frontier_phi_62_57_ladder = 5000.0;
            }
            _2036 = frontier_phi_62_57_ladder;
        }
        float _2038 = isnan(_1641) ? _1471 : (isnan(_1471) ? _1641 : min(_1471, _1641));
        float _2039 = isnan(_2036) ? _2038 : (isnan(_2038) ? _2036 : min(_2038, _2036));
        float _2043 = (_2039 * _1439) + _1428;
        float _2044 = (_2039 * _1442) + _1432;
        float _2045 = (_2039 * _1445) + _1436;
        float _2046 = _2039 * 9.9999997473787516355514526367188e-05;
        float _2048 = (-1.0) - _2046;
        float _2050 = _2046 + 1.0;
        float frontier_phi_40_62_ladder;
        float frontier_phi_40_62_ladder_1;
        float frontier_phi_40_62_ladder_2;
        if ((_2045 > _2050) || ((_2045 < _2048) || ((_2044 > _2050) || ((_2044 < _2048) || ((_2043 < _2048) || (_2043 > _2050))))))
        {
            frontier_phi_40_62_ladder = 0.0;
            frontier_phi_40_62_ladder_1 = 0.0;
            frontier_phi_40_62_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2279 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2045, cbModelParam._m0[9u].z, fma(_2044, cbModelParam._m0[9u].y, _2043 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2045, cbModelParam._m0[10u].z, fma(_2044, cbModelParam._m0[10u].y, _2043 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2045, cbModelParam._m0[11u].z, fma(_2044, cbModelParam._m0[11u].y, _2043 * cbModelParam._m0[11u].x))), _1378);
            frontier_phi_40_62_ladder = _2279.z * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_1 = _2279.y * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_2 = _2279.x * cbModelParam._m0[1u].y;
        }
        _1461 = frontier_phi_40_62_ladder_2;
        _1463 = frontier_phi_40_62_ladder_1;
        _1465 = frontier_phi_40_62_ladder;
    }
    else
    {
        vec4 _1449 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_636, _637, _638), _1378);
        _1461 = _1449.x * cbModelParam._m0[1u].y;
        _1463 = _1449.y * cbModelParam._m0[1u].y;
        _1465 = _1449.z * cbModelParam._m0[1u].y;
    }
    float _1468 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1556;
    float _1558;
    float _1560;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1520 = fma(_668, cbModelParam._m0[21u].z, fma(_664, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _660)) + cbModelParam._m0[21u].w;
        float _1524 = fma(_668, cbModelParam._m0[22u].z, fma(_664, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _660)) + cbModelParam._m0[22u].w;
        float _1528 = fma(_668, cbModelParam._m0[23u].z, fma(_664, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _660)) + cbModelParam._m0[23u].w;
        float _1531 = fma(_638, cbModelParam._m0[21u].z, fma(_637, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _636));
        float _1534 = fma(_638, cbModelParam._m0[22u].z, fma(_637, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _636));
        float _1537 = fma(_638, cbModelParam._m0[23u].z, fma(_637, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _636));
        float _1646;
        if (_1531 > 0.0)
        {
            _1646 = abs((1.0 - _1520) / _1531);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1531 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1520 + 1.0) / _1531);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1646 = frontier_phi_52_48_ladder;
        }
        float _2063;
        if (_1534 > 0.0)
        {
            _2063 = abs((1.0 - _1524) / _1534);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1534 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1524 + 1.0) / _1534);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _2063 = frontier_phi_64_59_ladder;
        }
        float _2410;
        if (_1537 > 0.0)
        {
            _2410 = abs((1.0 - _1528) / _1537);
        }
        else
        {
            float frontier_phi_76_71_ladder;
            if (_1537 < 0.0)
            {
                frontier_phi_76_71_ladder = abs((_1528 + 1.0) / _1537);
            }
            else
            {
                frontier_phi_76_71_ladder = 5000.0;
            }
            _2410 = frontier_phi_76_71_ladder;
        }
        float _2412 = isnan(_2063) ? _1646 : (isnan(_1646) ? _2063 : min(_1646, _2063));
        float _2413 = isnan(_2410) ? _2412 : (isnan(_2412) ? _2410 : min(_2412, _2410));
        float _2417 = (_2413 * _1531) + _1520;
        float _2418 = (_2413 * _1534) + _1524;
        float _2419 = (_2413 * _1537) + _1528;
        float _2420 = _2413 * 9.9999997473787516355514526367188e-05;
        float _2421 = (-1.0) - _2420;
        float _2423 = _2420 + 1.0;
        float frontier_phi_49_76_ladder;
        float frontier_phi_49_76_ladder_1;
        float frontier_phi_49_76_ladder_2;
        if ((_2419 > _2423) || ((_2419 < _2421) || ((_2418 > _2423) || ((_2418 < _2421) || ((_2417 < _2421) || (_2417 > _2423))))))
        {
            frontier_phi_49_76_ladder = 0.0;
            frontier_phi_49_76_ladder_1 = 0.0;
            frontier_phi_49_76_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2553 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2419, cbModelParam._m0[17u].z, fma(_2418, cbModelParam._m0[17u].y, _2417 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2419, cbModelParam._m0[18u].z, fma(_2418, cbModelParam._m0[18u].y, _2417 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2419, cbModelParam._m0[19u].z, fma(_2418, cbModelParam._m0[19u].y, _2417 * cbModelParam._m0[19u].x))), _1468);
            frontier_phi_49_76_ladder = _2553.z * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_1 = _2553.x * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_2 = _2553.y * cbModelParam._m0[1u].z;
        }
        _1556 = frontier_phi_49_76_ladder_1;
        _1558 = frontier_phi_49_76_ladder_2;
        _1560 = frontier_phi_49_76_ladder;
    }
    else
    {
        vec4 _1540 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_636, _637, _638), _1468);
        _1556 = _1540.x * cbModelParam._m0[1u].z;
        _1558 = _1540.y * cbModelParam._m0[1u].z;
        _1560 = _1540.z * cbModelParam._m0[1u].z;
    }
    float _1572 = _635 * 0.01200000010430812835693359375;
    float _1574 = _1572 * ((cbModelParam._m0[1u].w * (_1556 - _1461)) + _1461);
    float _1575 = _1572 * ((cbModelParam._m0[1u].w * (_1558 - _1463)) + _1463);
    float _1576 = _1572 * ((cbModelParam._m0[1u].w * (_1560 - _1465)) + _1465);
    float _1579 = fma(_1576, cbSceneParam._m0[89u].z, fma(_1575, cbSceneParam._m0[89u].y, _1574 * cbSceneParam._m0[89u].x));
    float _1582 = fma(_1576, cbSceneParam._m0[90u].z, fma(_1575, cbSceneParam._m0[90u].y, _1574 * cbSceneParam._m0[90u].x));
    float _1585 = fma(_1576, cbSceneParam._m0[91u].z, fma(_1575, cbSceneParam._m0[91u].y, _1574 * cbSceneParam._m0[91u].x));
    float _1620 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1624 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1628 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1632 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1633 = _1620 / _1632;
    float _1634 = _1624 / _1632;
    float _1635 = _1628 / _1632;
    float _1783;
    float _1784;
    float _1785;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1662 = ((uint(_1635 > cbSceneParam._m0[59u].y) + uint(_1635 > cbSceneParam._m0[59u].x)) + uint(_1635 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1663 = _1662 + 43u;
        uint _1671 = _1662 + 44u;
        uint _1679 = _1662 + 45u;
        uint _1687 = _1662 + 46u;
        float _1698 = fma(_1632, cbSceneParam._m0[_1663].w, fma(_1628, cbSceneParam._m0[_1663].z, fma(_1624, cbSceneParam._m0[_1663].y, _1620 * cbSceneParam._m0[_1663].x)));
        float _1702 = fma(_1632, cbSceneParam._m0[_1671].w, fma(_1628, cbSceneParam._m0[_1671].z, fma(_1624, cbSceneParam._m0[_1671].y, _1620 * cbSceneParam._m0[_1671].x)));
        float _1710 = fma(_1632, cbSceneParam._m0[_1687].w, fma(_1628, cbSceneParam._m0[_1687].z, fma(_1624, cbSceneParam._m0[_1687].y, _1620 * cbSceneParam._m0[_1687].x)));
        float _1715 = cbSceneParam._m0[33u].z * _1710;
        float _1717 = cbSceneParam._m0[33u].w * _1710;
        float _1720 = fma(_1632, cbSceneParam._m0[_1679].w, fma(_1628, cbSceneParam._m0[_1679].z, fma(_1624, cbSceneParam._m0[_1679].y, _1620 * cbSceneParam._m0[_1679].x))) / _1710;
        float _1768 = (cbSceneParam._m0[33u].x - sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635))) * cbSceneParam._m0[33u].y;
        float _3694 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1776 = (isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1715 + _1698) / _1710, (_1717 + _1702) / _1710), _1720), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1717 + _1698) / _1710, (_1702 - _1715) / _1710), _1720), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1698 - _1715) / _1710, (_1702 - _1717) / _1710), _1720), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1698 - _1717) / _1710, (_1715 + _1702) / _1710), _1720), 0.0)).x), vec4(0.25)));
        _1783 = 1.0 - (_1776 * cbSceneParam._m0[34u].x);
        _1784 = 1.0 - (_1776 * cbSceneParam._m0[34u].y);
        _1785 = 1.0 - (_1776 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1783 = 1.0;
        _1784 = 1.0;
        _1785 = 1.0;
    }
    float _1849;
    float _1851;
    float _1853;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1837 = fma(_1632, cbSceneParam._m0[63u].w, fma(_1628, cbSceneParam._m0[63u].z, fma(_1624, cbSceneParam._m0[63u].y, _1620 * cbSceneParam._m0[63u].x)));
        float _1838 = fma(_1632, cbSceneParam._m0[60u].w, fma(_1628, cbSceneParam._m0[60u].z, fma(_1624, cbSceneParam._m0[60u].y, _1620 * cbSceneParam._m0[60u].x))) / _1837;
        float _1839 = fma(_1632, cbSceneParam._m0[61u].w, fma(_1628, cbSceneParam._m0[61u].z, fma(_1624, cbSceneParam._m0[61u].y, _1620 * cbSceneParam._m0[61u].x))) / _1837;
        float frontier_phi_61_60_ladder;
        float frontier_phi_61_60_ladder_1;
        float frontier_phi_61_60_ladder_2;
        if ((((_1838 >= cbSceneParam._m0[64u].x) && (_1839 >= cbSceneParam._m0[64u].y)) && (_1838 <= cbSceneParam._m0[64u].z)) && (_1839 <= cbSceneParam._m0[64u].w))
        {
            float _2076 = fma(_1632, cbSceneParam._m0[62u].w, fma(_1628, cbSceneParam._m0[62u].z, fma(_1624, cbSceneParam._m0[62u].y, _1620 * cbSceneParam._m0[62u].x))) / _1837;
            float _2080 = isnan(cbSceneParam._m0[41u].w) ? _2076 : (isnan(_2076) ? cbSceneParam._m0[41u].w : max(_2076, cbSceneParam._m0[41u].w));
            float _2123 = (cbSceneParam._m0[33u].x - sqrt(((_1634 * _1634) + (_1633 * _1633)) + (_1635 * _1635))) * cbSceneParam._m0[33u].y;
            float _3710 = isnan(0.0) ? _2123 : (isnan(_2123) ? 0.0 : max(_2123, 0.0));
            float _2130 = (isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1838, cbSceneParam._m0[33u].w + _1839), _2080), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1838, _1839 - cbSceneParam._m0[33u].z), _2080), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1838 - cbSceneParam._m0[33u].z, _1839 - cbSceneParam._m0[33u].w), _2080), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1838 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1839), _2080), 0.0)).x), vec4(0.25)));
            float _2134 = 1.0 - (_2130 * cbSceneParam._m0[34u].x);
            float _2135 = 1.0 - (_2130 * cbSceneParam._m0[34u].y);
            float _2136 = 1.0 - (_2130 * cbSceneParam._m0[34u].z);
            frontier_phi_61_60_ladder = isnan(_2136) ? _1785 : (isnan(_1785) ? _2136 : min(_1785, _2136));
            frontier_phi_61_60_ladder_1 = isnan(_2135) ? _1784 : (isnan(_1784) ? _2135 : min(_1784, _2135));
            frontier_phi_61_60_ladder_2 = isnan(_2134) ? _1783 : (isnan(_1783) ? _2134 : min(_1783, _2134));
        }
        else
        {
            frontier_phi_61_60_ladder = _1785;
            frontier_phi_61_60_ladder_1 = _1784;
            frontier_phi_61_60_ladder_2 = _1783;
        }
        _1849 = frontier_phi_61_60_ladder_2;
        _1851 = frontier_phi_61_60_ladder_1;
        _1853 = frontier_phi_61_60_ladder;
    }
    else
    {
        _1849 = _1783;
        _1851 = _1784;
        _1853 = _1785;
    }
    uvec4 _1858 = floatBitsToUint(cbInstanceData._m0[_609 + 5u]);
    uint _1860 = _1858.x * 14u;
    uint _1861 = _1860 + 13u;
    float _1866 = _635 + (-1.0);
    float _1869 = (cbLight._m0[_1861].x * _1866) + 1.0;
    float _1870 = (cbLight._m0[_1861].y * _1866) + 1.0;
    uint _1871 = _1860 + 5u;
    float _1877 = isnan(1.0) ? _1870 : (isnan(_1870) ? 1.0 : min(_1870, 1.0));
    uint _1881 = _1860 + 4u;
    float _1891 = isnan(1.0) ? _1869 : (isnan(_1869) ? 1.0 : min(_1869, 1.0));
    uint _1895 = _1860 | 1u;
    float _1906 = dot(vec3(cbLight._m0[_1860].xyz), vec3(0.0));
    float _1909 = dot(vec3(cbLight._m0[_1895].xyz), vec3(0.0));
    float _3746 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
    float _3757 = isnan(0.0) ? _1909 : (isnan(_1909) ? 0.0 : max(_1909, 0.0));
    float _1914 = (isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0))) * 0.3183098733425140380859375;
    float _1916 = (isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0))) * 0.3183098733425140380859375;
    float _1923 = ((cbLight._m0[_1871].x * _1877) * _1916) + (((cbLight._m0[_1881].x * _1849) * _1891) * _1914);
    float _1924 = ((_1877 * cbLight._m0[_1871].y) * _1916) + (((cbLight._m0[_1881].y * _1851) * _1891) * _1914);
    float _1925 = ((_1877 * cbLight._m0[_1871].z) * _1916) + (((cbLight._m0[_1881].z * _1853) * _1891) * _1914);
    uint _1926 = _1860 + 8u;
    float _1932 = cbLight._m0[_1860].x + _574;
    float _1933 = cbLight._m0[_1860].y + _575;
    float _1934 = cbLight._m0[_1860].z + _576;
    float _1938 = inversesqrt(dot(vec3(_1932, _1933, _1934), vec3(_1932, _1933, _1934)));
    float _1942 = dot(vec3(0.0), vec3(cbLight._m0[_1860].xyz));
    float _3768 = isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0));
    float _1945 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
    float _1946 = dot(vec3(0.0), vec3(_574, _575, _576));
    float _3779 = isnan(0.0) ? _1946 : (isnan(_1946) ? 0.0 : max(_1946, 0.0));
    float _1949 = isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0));
    float _1950 = dot(vec3(cbLight._m0[_1860].xyz), vec3(_1932 * _1938, _1933 * _1938, _1934 * _1938));
    float _3790 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
    float _1961 = (exp2(log2(1.0 - (isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1967 = (0.5 / ((_1945 + 9.9999999392252902907785028219223e-09) + _1949)) * _1945;
    float _3801 = isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0));
    float _1969 = (isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0))) * 0.31831014156341552734375;
    uint _1983 = _1860 + 9u;
    float _1989 = cbLight._m0[_1895].x + _574;
    float _1990 = cbLight._m0[_1895].y + _575;
    float _1991 = cbLight._m0[_1895].z + _576;
    float _1995 = inversesqrt(dot(vec3(_1989, _1990, _1991), vec3(_1989, _1990, _1991)));
    float _1999 = dot(vec3(0.0), vec3(cbLight._m0[_1895].xyz));
    float _3812 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
    float _2002 = isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0));
    float _2003 = dot(vec3(cbLight._m0[_1895].xyz), vec3(_1989 * _1995, _1990 * _1995, _1991 * _1995));
    float _3823 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
    float _2012 = (exp2(log2(1.0 - (isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2016 = (0.5 / ((_2002 + 9.9999999392252902907785028219223e-09) + _1949)) * _2002;
    float _3834 = isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0));
    float _2018 = (isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0))) * 0.31831014156341552734375;
    float _2028 = (((_2012 * cbLight._m0[_1983].x) * _2018) * _1877) + ((((cbLight._m0[_1926].x * _1849) * _1961) * _1969) * _1891);
    float _2029 = (((_2012 * cbLight._m0[_1983].y) * _2018) * _1877) + ((((cbLight._m0[_1926].y * _1851) * _1961) * _1969) * _1891);
    float _2030 = (((_2012 * cbLight._m0[_1983].z) * _2018) * _1877) + ((((cbLight._m0[_1926].z * _1853) * _1961) * _1969) * _1891);
    float _2193;
    float _2195;
    float _2197;
    float _2199;
    float _2201;
    float _2203;
    if (_1858.y == 0u)
    {
        uvec4 _2148 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2149 = _2148.x;
        uint _2160 = uint((float(_2148.y) * floor(float(uint(cbSceneParam._m0[85u].y * _596) / _2149))) + floor(float(uint(cbSceneParam._m0[85u].x * _595) / _2149)));
        float _2170 = (log2(_1635 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2171 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
        uint _2174 = uint(isnan(14.0) ? _2171 : (isnan(_2171) ? 14.0 : min(_2171, 14.0)));
        uvec4 _2179 = texelFetch(g_lightClusterGridBuffer, int(((_2174 << 2u) + (_2160 << 6u)) >> 2u));
        uint _2180 = _2179.x;
        uint _2181 = _2148.z;
        float _2288;
        float _2290;
        float _2292;
        float _2294;
        float _2296;
        float _2298;
        if (((((1u << ((_2181 >> 4u) & 15u)) + 4294967295u) & _2180) == 0u) || ((_2181 & 240u) == 0u))
        {
            _2288 = 0.0;
            _2290 = 0.0;
            _2292 = 0.0;
            _2294 = 0.0;
            _2296 = 0.0;
            _2298 = 0.0;
        }
        else
        {
            float _2289;
            float _2291;
            float _2293;
            float _2295;
            float _2297;
            float _2299;
            float _2465 = 0.0;
            float _2466 = 0.0;
            float _2467 = 0.0;
            float _2468 = 0.0;
            float _2469 = 0.0;
            float _2470 = 0.0;
            uint _2471 = 0u;
            uint _2480;
            bool _2481;
            for (;;)
            {
                _2480 = texelFetch(g_lightClassification, int((((_2174 << 5u) + (_2160 << 9u)) + (_2471 << 2u)) >> 2u)).x;
                _2481 = _2480 == 0u;
                float frontier_phi_87_pred;
                float frontier_phi_87_pred_1;
                float frontier_phi_87_pred_2;
                float frontier_phi_87_pred_3;
                float frontier_phi_87_pred_4;
                float frontier_phi_87_pred_5;
                if (_2481)
                {
                    frontier_phi_87_pred = _2465;
                    frontier_phi_87_pred_1 = _2470;
                    frontier_phi_87_pred_2 = _2469;
                    frontier_phi_87_pred_3 = _2468;
                    frontier_phi_87_pred_4 = _2467;
                    frontier_phi_87_pred_5 = _2466;
                }
                else
                {
                    float _2631;
                    float _2632;
                    float _2633;
                    float _2634;
                    float _2635;
                    float _2636;
                    uint _2637;
                    _2631 = _2465;
                    _2632 = _2466;
                    _2633 = _2467;
                    _2634 = _2468;
                    _2635 = _2469;
                    _2636 = _2470;
                    _2637 = _2480;
                    float _2558;
                    float _2559;
                    float _2560;
                    float _2561;
                    float _2562;
                    float _2563;
                    for (;;)
                    {
                        uint _2641 = uint(findLSB(_2637)) + (_2471 << 5u);
                        uint _2638 = (_2637 + 4294967295u) & _2637;
                        uint _2643 = _2641 * 48u;
                        vec4 _2657 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2643)).x, texelFetch(g_PointLightRenderingBuffer, int(_2643 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2643 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2643 + 3u)).x));
                        uint _2663 = (_2641 * 48u) + 4u;
                        vec4 _2676 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2663)).x, texelFetch(g_PointLightRenderingBuffer, int(_2663 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2663 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2663 + 3u)).x));
                        uint _2682 = (_2641 * 48u) + 8u;
                        vec3 _2693 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2682)).x, texelFetch(g_PointLightRenderingBuffer, int(_2682 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2682 + 2u)).x));
                        float _2697 = _2657.x - _1633;
                        float _2698 = _2657.y - _1634;
                        float _2699 = _2657.z - _1635;
                        float _2700 = dot(vec3(_2697, _2698, _2699), vec3(_2697, _2698, _2699));
                        float _2703 = inversesqrt(_2700);
                        float _2712 = 1.0 - (_2700 * _2657.w);
                        float _3855 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
                        float _2713 = isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0));
                        float _2714 = sqrt(_2700) * _2676.w;
                        float _2717 = 1.39999997615814208984375 / (_2714 + 1.39999997615814208984375);
                        float _2718 = _2717 * _2717;
                        float _2721 = ((1.0 - _2718) * dot(vec3(0.0), vec3(_2703 * _2697, _2703 * _2698, _2703 * _2699))) + _2718;
                        float _2724 = _2714 * _2714;
                        float _2728 = ((isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0))) * _2713) / ((_2724 * 0.699999988079071044921875) + 1.0);
                        float _2732 = (-0.0) - _1633;
                        float _2733 = (-0.0) - _1634;
                        float _2734 = (-0.0) - _1635;
                        float _2738 = inversesqrt(dot(vec3(_2732, _2733, _2734), vec3(_2732, _2733, _2734)));
                        float _2742 = dot(vec3(0.0), vec3(_2738 * _2732, _2738 * _2733, _2738 * _2734));
                        float _3871 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
                        float _3882 = isnan(0.0) ? _2721 : (isnan(_2721) ? 0.0 : max(_2721, 0.0));
                        float _2746 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
                        float _2750 = (0.5 / (((isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))) + 9.9999999392252902907785028219223e-09) + _2746)) * _2746;
                        float _3893 = isnan(0.0) ? _2750 : (isnan(_2750) ? 0.0 : max(_2750, 0.0));
                        float _2759 = (((isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * 3.1415927410125732421875) / ((_2724 * 2.1991131305694580078125) + 3.141590118408203125)) * _2713;
                        _2561 = (_2728 * _2676.x) + _2634;
                        _2562 = (_2728 * _2676.y) + _2635;
                        _2563 = (_2728 * _2676.z) + _2636;
                        _2558 = (_2759 * _2693.x) + _2631;
                        _2559 = (_2759 * _2693.y) + _2632;
                        _2560 = (_2759 * _2693.z) + _2633;
                        if (_2638 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2631 = _2558;
                            _2632 = _2559;
                            _2633 = _2560;
                            _2634 = _2561;
                            _2635 = _2562;
                            _2636 = _2563;
                            _2637 = _2638;
                        }
                    }
                    frontier_phi_87_pred = _2558;
                    frontier_phi_87_pred_1 = _2563;
                    frontier_phi_87_pred_2 = _2562;
                    frontier_phi_87_pred_3 = _2561;
                    frontier_phi_87_pred_4 = _2560;
                    frontier_phi_87_pred_5 = _2559;
                }
                _2289 = frontier_phi_87_pred;
                _2299 = frontier_phi_87_pred_1;
                _2297 = frontier_phi_87_pred_2;
                _2295 = frontier_phi_87_pred_3;
                _2293 = frontier_phi_87_pred_4;
                _2291 = frontier_phi_87_pred_5;
                uint _2472 = _2471 + 1u;
                if (_2472 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2465 = _2289;
                    _2466 = _2291;
                    _2467 = _2293;
                    _2468 = _2295;
                    _2469 = _2297;
                    _2470 = _2299;
                    _2471 = _2472;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2288 = _2289;
            _2290 = _2291;
            _2292 = _2293;
            _2294 = _2295;
            _2296 = _2297;
            _2298 = _2299;
        }
        uvec4 _2302 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2303 = _2302.z;
        uint _2305 = (_2303 >> 8u) & 15u;
        float _2436;
        float _2438;
        float _2440;
        float _2442;
        float _2444;
        float _2446;
        if (((4294967295u << _2305) & _2180) == 0u)
        {
            _2436 = _2288;
            _2438 = _2290;
            _2440 = _2292;
            _2442 = _2294;
            _2444 = _2296;
            _2446 = _2298;
        }
        else
        {
            float _2461 = inversesqrt(dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635)));
            float frontier_phi_78_79_ladder;
            float frontier_phi_78_79_ladder_1;
            float frontier_phi_78_79_ladder_2;
            float frontier_phi_78_79_ladder_3;
            float frontier_phi_78_79_ladder_4;
            float frontier_phi_78_79_ladder_5;
            if (_2305 < ((_2303 >> 12u) & 15u))
            {
                float _2437;
                float _2439;
                float _2441;
                float _2443;
                float _2445;
                float _2447;
                float _2614 = _2288;
                float _2615 = _2290;
                float _2616 = _2292;
                float _2617 = _2294;
                float _2618 = _2296;
                float _2619 = _2298;
                uint _2620 = _2305;
                uint _2629;
                bool _2630;
                for (;;)
                {
                    _2629 = texelFetch(g_lightClassification, int((((_2174 << 5u) + (_2160 << 9u)) + (_2620 << 2u)) >> 2u)).x;
                    _2630 = _2629 == 0u;
                    float frontier_phi_98_pred;
                    float frontier_phi_98_pred_1;
                    float frontier_phi_98_pred_2;
                    float frontier_phi_98_pred_3;
                    float frontier_phi_98_pred_4;
                    float frontier_phi_98_pred_5;
                    if (_2630)
                    {
                        frontier_phi_98_pred = _2619;
                        frontier_phi_98_pred_1 = _2618;
                        frontier_phi_98_pred_2 = _2617;
                        frontier_phi_98_pred_3 = _2616;
                        frontier_phi_98_pred_4 = _2615;
                        frontier_phi_98_pred_5 = _2614;
                    }
                    else
                    {
                        float _2773;
                        float _2774;
                        float _2775;
                        float _2776;
                        float _2777;
                        float _2778;
                        float _3022;
                        float _3023;
                        float _3024;
                        float _3025;
                        float _3026;
                        float _3027;
                        float _2786 = _2614;
                        float _2787 = _2615;
                        float _2788 = _2616;
                        float _2789 = _2617;
                        float _2790 = _2618;
                        float _2791 = _2619;
                        uint _2792 = _2629;
                        uint _2793;
                        vec4 _2818;
                        float _2819;
                        vec4 _2834;
                        vec3 _2846;
                        vec4 _2861;
                        vec4 _2876;
                        float _2922;
                        bool _2923;
                        for (;;)
                        {
                            uint _2803 = ((_2620 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2792));
                            _2793 = (_2792 + 4294967295u) & _2792;
                            uint _2805 = _2803 * 40u;
                            _2818 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2805)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 3u)).x));
                            _2819 = _2818.w;
                            uint _2821 = (_2803 * 40u) + 4u;
                            _2834 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2821)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2821 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2821 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2821 + 3u)).x));
                            uint _2836 = (_2803 * 40u) + 8u;
                            _2846 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2836)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2836 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2836 + 2u)).x));
                            uint _2848 = (_2803 * 40u) + 16u;
                            _2861 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2848)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2848 + 3u)).x));
                            uint _2863 = (_2803 * 40u) + 20u;
                            _2876 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2863)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2863 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2863 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2863 + 3u)).x));
                            uint _2878 = (_2803 * 40u) + 24u;
                            vec4 _2891 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2878)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2878 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2878 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2878 + 3u)).x));
                            uint _2897 = (_2803 * 40u) + 28u;
                            vec4 _2910 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2897)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2897 + 3u)).x));
                            _2922 = fma(_1635, _2910.z, fma(_1634, _2910.y, _2910.x * _1633)) + _2910.w;
                            _2923 = !((fma(_1635, _2891.z, fma(_1634, _2891.y, _2891.x * _1633)) + _2891.w) <= 0.0);
                            float frontier_phi_104_pred;
                            float frontier_phi_104_pred_1;
                            float frontier_phi_104_pred_2;
                            float frontier_phi_104_pred_3;
                            float frontier_phi_104_pred_4;
                            float frontier_phi_104_pred_5;
                            if (_2923)
                            {
                                float _2950 = _2818.x - _1633;
                                float _2951 = _2818.y - _1634;
                                float _2952 = _2818.z - _1635;
                                float _2953 = dot(vec3(_2950, _2951, _2952), vec3(_2950, _2951, _2952));
                                float _2956 = inversesqrt(_2953);
                                float _2957 = _2956 * _2950;
                                float _2958 = _2956 * _2951;
                                float _2959 = _2956 * _2952;
                                float _2963 = 1.0 - (_2953 / (_2819 * _2819));
                                float _3904 = isnan(0.0) ? _2963 : (isnan(_2963) ? 0.0 : max(_2963, 0.0));
                                float _2964 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
                                float _2968 = sqrt(_2953) * _2834.w;
                                float _2970 = 1.39999997615814208984375 / (_2968 + 1.39999997615814208984375);
                                float _2971 = _2970 * _2970;
                                float _2972 = 1.0 - _2971;
                                float _2974 = (_2972 * dot(vec3(_2957, _2958, _2959), vec3(0.0))) + _2971;
                                float _2977 = _2968 * _2968;
                                float _2981 = (fma(_1635, _2861.z, fma(_1634, _2861.y, _2861.x * _1633)) + _2861.w) / _2922;
                                float _2982 = (fma(_1635, _2876.z, fma(_1634, _2876.y, _2876.x * _1633)) + _2876.w) / _2922;
                                float _2986 = 1.0 - dot(vec2(_2981, _2982), vec2(_2981, _2982));
                                float _3920 = isnan(0.0) ? _2986 : (isnan(_2986) ? 0.0 : max(_2986, 0.0));
                                float _2987 = isnan(1.0) ? _3920 : (isnan(_3920) ? 1.0 : min(_3920, 1.0));
                                float _2988 = _2987 * (((isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0))) * _2964) / ((_2977 * 0.699999988079071044921875) + 1.0));
                                float _2998 = dot(vec3(0.0), vec3((-0.0) - (_1633 * _2461), (-0.0) - (_1634 * _2461), (-0.0) - (_1635 * _2461)));
                                float _3931 = isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0));
                                float _3006 = (_2972 * dot(vec3(0.0), vec3(_2957, _2958, _2959))) + _2971;
                                float _3942 = isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0));
                                float _3007 = isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0));
                                float _3011 = (0.5 / (((isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0))) + 9.9999999392252902907785028219223e-09) + _3007)) * _3007;
                                float _3953 = isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0));
                                float _3018 = (_2987 * _2964) * (((isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0))) * 3.1415927410125732421875) / ((_2977 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_104_pred = _2988 * _2834.y;
                                frontier_phi_104_pred_1 = _2988 * _2834.x;
                                frontier_phi_104_pred_2 = _3018 * _2846.z;
                                frontier_phi_104_pred_3 = _3018 * _2846.y;
                                frontier_phi_104_pred_4 = _3018 * _2846.x;
                                frontier_phi_104_pred_5 = _2988 * _2834.z;
                            }
                            else
                            {
                                frontier_phi_104_pred = 0.0;
                                frontier_phi_104_pred_1 = 0.0;
                                frontier_phi_104_pred_2 = 0.0;
                                frontier_phi_104_pred_3 = 0.0;
                                frontier_phi_104_pred_4 = 0.0;
                                frontier_phi_104_pred_5 = 0.0;
                            }
                            _3026 = frontier_phi_104_pred;
                            _3025 = frontier_phi_104_pred_1;
                            _3024 = frontier_phi_104_pred_2;
                            _3023 = frontier_phi_104_pred_3;
                            _3022 = frontier_phi_104_pred_4;
                            _3027 = frontier_phi_104_pred_5;
                            _2776 = _3025 + _2789;
                            _2777 = _3026 + _2790;
                            _2778 = _3027 + _2791;
                            _2773 = _3022 + _2786;
                            _2774 = _3023 + _2787;
                            _2775 = _3024 + _2788;
                            if (_2793 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2786 = _2773;
                                _2787 = _2774;
                                _2788 = _2775;
                                _2789 = _2776;
                                _2790 = _2777;
                                _2791 = _2778;
                                _2792 = _2793;
                                continue;
                            }
                        }
                        frontier_phi_98_pred = _2778;
                        frontier_phi_98_pred_1 = _2777;
                        frontier_phi_98_pred_2 = _2776;
                        frontier_phi_98_pred_3 = _2775;
                        frontier_phi_98_pred_4 = _2774;
                        frontier_phi_98_pred_5 = _2773;
                    }
                    _2447 = frontier_phi_98_pred;
                    _2445 = frontier_phi_98_pred_1;
                    _2443 = frontier_phi_98_pred_2;
                    _2441 = frontier_phi_98_pred_3;
                    _2439 = frontier_phi_98_pred_4;
                    _2437 = frontier_phi_98_pred_5;
                    uint _2621 = _2620 + 1u;
                    if (_2621 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2614 = _2437;
                        _2615 = _2439;
                        _2616 = _2441;
                        _2617 = _2443;
                        _2618 = _2445;
                        _2619 = _2447;
                        _2620 = _2621;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_78_79_ladder = _2441;
                frontier_phi_78_79_ladder_1 = _2447;
                frontier_phi_78_79_ladder_2 = _2445;
                frontier_phi_78_79_ladder_3 = _2443;
                frontier_phi_78_79_ladder_4 = _2439;
                frontier_phi_78_79_ladder_5 = _2437;
            }
            else
            {
                frontier_phi_78_79_ladder = _2292;
                frontier_phi_78_79_ladder_1 = _2298;
                frontier_phi_78_79_ladder_2 = _2296;
                frontier_phi_78_79_ladder_3 = _2294;
                frontier_phi_78_79_ladder_4 = _2290;
                frontier_phi_78_79_ladder_5 = _2288;
            }
            _2436 = frontier_phi_78_79_ladder_5;
            _2438 = frontier_phi_78_79_ladder_4;
            _2440 = frontier_phi_78_79_ladder;
            _2442 = frontier_phi_78_79_ladder_3;
            _2444 = frontier_phi_78_79_ladder_2;
            _2446 = frontier_phi_78_79_ladder_1;
        }
        float _2451 = isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0));
        _2193 = (_2451 * _2442) + _1923;
        _2195 = (_2451 * _2444) + _1924;
        _2197 = (_2451 * _2446) + _1925;
        _2199 = ((_2436 * 0.039999999105930328369140625) * _2451) + _2028;
        _2201 = ((_2438 * 0.039999999105930328369140625) * _2451) + _2029;
        _2203 = ((_2440 * 0.039999999105930328369140625) * _2451) + _2030;
    }
    else
    {
        _2193 = _1923;
        _2195 = _1924;
        _2197 = _1925;
        _2199 = _2028;
        _2201 = _2029;
        _2203 = _2030;
    }
    float _3969 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _3980 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _3991 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _2220 = ((isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))) * (_2193 + ((isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0))) * _635))) + ((_2199 + ((isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0))) * _1369)) * cbPerFrame._m0[3u].x);
    float _2221 = ((isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0))) * (_2195 + ((isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0))) * _635))) + ((_2201 + ((isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0))) * _1369)) * cbPerFrame._m0[3u].x);
    float _2222 = ((isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0))) * (_2197 + ((isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0))) * _635))) + ((_2203 + ((isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0))) * _1369)) * cbPerFrame._m0[3u].x);
    float _2223 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
    float _2224 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
    float _2225 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
    uint _2226 = _609 + 6u;
    float _2234 = _595 / cbSceneParam._m0[86u].x;
    float _2235 = _596 / cbSceneParam._m0[86u].y;
    vec4 _2249 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2234, _2235, (log2((isnan(cbSceneParam._m0[77u].w) ? _569 : (isnan(_569) ? cbSceneParam._m0[77u].w : min(_569, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2251 = _2249.x;
    float _2252 = _2249.y;
    float _2253 = _2249.z;
    float _2254 = _2249.w;
    float _2350;
    float _2352;
    float _2354;
    float _2356;
    if (_569 > cbSceneParam._m0[78u].w)
    {
        float _2313 = isnan(_569) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _569 : min(cbSceneParam._m0[80u].w, _569));
        float _2314 = _2313 / _569;
        float _2325 = _2314 * _267;
        float _2326 = _268 * _2314;
        float _2327 = (-0.0) - _2326;
        float _2328 = _2314 * _269;
        float _2330 = (cbSceneParam._m0[77u].w * _2327) / _2313;
        float _2331 = _2330 + cbSceneParam._m0[79u].w;
        float _2332 = cbSceneParam._m0[79u].w - _2326;
        float _2338 = sqrt(((_2325 * _2325) + (_2326 * _2326)) + (_2328 * _2328));
        float _2341 = (1.0 - (cbSceneParam._m0[77u].w / _2313)) * _2338;
        float _2346 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2348 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2571;
        if (abs((_2327 - _2330) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2571 = ((((_2331 > 0.0) ? exp2(_2346 * _2331) : (2.0 - exp2(_2348 * _2331))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2341;
        }
        else
        {
            float _2494 = 1.0 / cbSceneParam._m0[80u].x;
            float _2495 = isnan(_2332) ? _2331 : (isnan(_2331) ? _2332 : max(_2331, _2332));
            float _2496 = isnan(_2332) ? _2331 : (isnan(_2331) ? _2332 : min(_2331, _2332));
            float _2505 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : min(_2495, 0.0));
            float _2506 = isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : min(_2496, 0.0));
            _2571 = ((abs(_2338 / _2327) * cbSceneParam._m0[80u].y) * ((((_2505 - _2506) * 2.0) - ((exp2(_2346 * (isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0)))) - exp2(_2346 * (isnan(0.0) ? _2496 : (isnan(_2496) ? 0.0 : max(_2496, 0.0))))) * _2494)) - ((exp2(_2348 * _2505) - exp2(_2348 * _2506)) * _2494))) + (_2341 * cbSceneParam._m0[80u].z);
        }
        vec4 _2573 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2234, _2235, 1.0), 0.0);
        float _2582 = exp2((_2571 * (-1.44269502162933349609375)) * (1.0 - _2573.w));
        float _2583 = log2(_2582);
        float _2599 = log2(_2254);
        _2350 = (exp2(_2599 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].x)) * _2573.x) / cbSceneParam._m0[78u].x)) + _2251;
        _2352 = (exp2(_2599 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].y)) * _2573.y) / cbSceneParam._m0[78u].y)) + _2252;
        _2354 = (exp2(_2599 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2583 * cbSceneParam._m0[78u].z)) * _2573.z) / cbSceneParam._m0[78u].z)) + _2253;
        _2356 = _2582 * _2254;
    }
    else
    {
        _2350 = _2251;
        _2352 = _2252;
        _2354 = _2253;
        _2356 = _2254;
    }
    bool _2609;
    vec4 _2366;
    vec4 _2389;
    float _2391;
    float _2395;
    float _2396;
    float _2397;
    float _2398;
    bool _2409;
    for (;;)
    {
        _2366 = cbMatDynParam._m0[0u];
        float _2368 = roundEven(_2366.y);
        bool _2369 = _2368 == 3.0;
        float _2371 = log2(_2356);
        float _2378 = exp2(_2371 * cbSceneParam._m0[78u].x) * _2223;
        float _2379 = exp2(_2371 * cbSceneParam._m0[78u].y) * _2224;
        float _2380 = exp2(_2371 * cbSceneParam._m0[78u].z) * _2225;
        float _2387 = _583 + (-0.5);
        _2389 = cbMtdParam._m0[1u];
        _2391 = _2389.y * _2387;
        float _2394 = (_2368 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2395 = _2394 * (_2369 ? _2378 : (_2378 + (cbSceneParam._m0[72u].w * _2350)));
        _2396 = _2394 * (_2369 ? _2379 : (_2379 + (cbSceneParam._m0[72u].w * _2352)));
        _2397 = _2394 * (_2369 ? _2380 : (_2380 + (cbSceneParam._m0[72u].w * _2354)));
        _2398 = _2387 * 0.999000012874603271484375;
        _2409 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2409)
        {
            if ((cbInstanceData._m0[_609 + 7u].x + _2398) < 0.5)
            {
                _2609 = true;
                break;
            }
        }
        uint _2529 = _611 + uint(_2366.w);
        if ((cbInstanceData._m0[_2529].w < 1.0) && ((cbInstanceData._m0[_2529].w + _2398) < 0.5))
        {
            _2609 = true;
            break;
        }
        if ((_2391 + 1.0) < _2389.x)
        {
            _2609 = true;
            break;
        }
        _2609 = false;
        break;
    }
    float _2764;
    if (_2609)
    {
        discard_state = true;
        _2764 = 0.0;
    }
    else
    {
        _2764 = cbInstanceData._m0[_2226].w;
    }
    SV_Target.x = _2395;
    SV_Target.y = _2396;
    SV_Target.z = _2397;
    SV_Target.w = _2764;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2226].w;
    discard_exit();
}


