#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1184;
float _3603;
float _3604;
float _3605;
float _3606;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _194 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _195 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _196 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _201 = inversesqrt(dot(vec3(_194, _195, _196), vec3(_194, _195, _196)));
    float _202 = _201 * _194;
    float _203 = _201 * _195;
    float _204 = _201 * _196;
    float _208 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = _208 * NORMAL.x;
    float _210 = _208 * NORMAL.y;
    float _211 = _208 * NORMAL.z;
    float _215 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _216 = _215 * TANGENT.x;
    float _217 = _215 * TANGENT.y;
    float _218 = _215 * TANGENT.z;
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    vec4 _288 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _291 = _288.x;
    vec4 _309 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _326 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _291) + cbMtdParam._m0[12u].x) * _309.x;
    float _328 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _291) + cbMtdParam._m0[12u].y) * _309.y;
    float _330 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _291) + cbMtdParam._m0[12u].z) * _309.z;
    vec4 _348 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _384 = cbMtdParam._m0[24u].x + _273;
    float _385 = cbMtdParam._m0[24u].y + _274;
    float _386 = cbMtdParam._m0[24u].z + _275;
    float _400 = (-0.0) - dot(vec3(_384, _385, _386), vec3(_202, _203, _204));
    float _401 = (-0.0) - dot(vec3(_384, _385, _386), vec3(_216, _217, _218));
    float _402 = (-0.0) - dot(vec3(_384, _385, _386), vec3((-0.0) - _209, (-0.0) - _210, (-0.0) - _211));
    float _406 = inversesqrt(dot(vec3(_400, _401, _402), vec3(_400, _401, _402)));
    float _409 = _406 * _402;
    float _410 = (_406 * _400) + ((cbMtdParam._m0[22u].x * _291) * ((_348.x * 2.0) + (-1.0)));
    float _411 = (_406 * _401) + ((cbMtdParam._m0[22u].y * _291) * ((_348.y * 2.0) + (-1.0)));
    float _412 = _410 * cbMtdParam._m0[20u].w;
    float _413 = _411 * cbMtdParam._m0[20u].z;
    float _414 = fract(TEXCOORD.x);
    float _415 = fract(TEXCOORD.y);
    float _421;
    if (_412 > 0.0)
    {
        _421 = (1.0 - _414) / _412;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_412 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _414) / _412;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _421 = frontier_phi_3_2_ladder;
    }
    float _429;
    if (_413 > 0.0)
    {
        _429 = (1.0 - _415) / _413;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_413 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _415) / _413;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _429 = frontier_phi_7_6_ladder;
    }
    bool _431 = _409 > 0.0;
    float _433 = _431 ? (cbMtdParam._m0[16u].x / _409) : 5000.0;
    float _434 = isnan(_429) ? _421 : (isnan(_421) ? _429 : min(_421, _429));
    float _435 = isnan(_433) ? _434 : (isnan(_434) ? _433 : min(_434, _433));
    float _439 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _440 = _414 + (-0.5);
    float _443 = _415 + (-0.5);
    float _446 = ((_435 * _409) + _439) / _439;
    vec4 _471 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_440 + (_435 * _412)) / _446) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_443 + (_435 * _413)) / _446) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _484 = (_471.x * _291) * cbMtdParam._m0[9u].x;
    float _485 = (_471.y * _291) * cbMtdParam._m0[9u].y;
    float _486 = (_471.z * _291) * cbMtdParam._m0[9u].z;
    float _505 = _410 * cbMtdParam._m0[22u].w;
    float _506 = _411 * cbMtdParam._m0[22u].z;
    bool _507 = _505 > 0.0;
    float _512;
    if (_507)
    {
        _512 = (1.0 - _414) / _505;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_505 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _414) / _505;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _512 = frontier_phi_11_10_ladder;
    }
    bool _514 = _506 > 0.0;
    float _519;
    if (_514)
    {
        _519 = (1.0 - _415) / _506;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_506 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _415) / _506;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _519 = frontier_phi_15_14_ladder;
    }
    float _522 = _431 ? (cbMtdParam._m0[18u].x / _409) : 5000.0;
    float _523 = isnan(_519) ? _512 : (isnan(_512) ? _519 : min(_512, _519));
    float _524 = isnan(_522) ? _523 : (isnan(_523) ? _522 : min(_523, _522));
    float _528 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _532 = ((_524 * _409) + _528) / _528;
    float _537 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _539 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _555 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_440 + (_524 * _505)) / _532) + 0.5) + _537) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_443 + (_524 * _506)) / _532) + 0.5) + _539) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _570;
    if (_507)
    {
        _570 = (1.0 - _414) / _505;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_505 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _414) / _505;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _570 = frontier_phi_19_18_ladder;
    }
    float _576;
    if (_514)
    {
        _576 = (1.0 - _415) / _506;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_506 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _415) / _506;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _576 = frontier_phi_23_22_ladder;
    }
    float _578 = isnan(_576) ? _570 : (isnan(_570) ? _576 : min(_570, _576));
    float _579 = isnan(_522) ? _578 : (isnan(_578) ? _522 : min(_578, _522));
    float _586 = ((_579 * _409) + _528) / _528;
    vec4 _606 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_440 + (_579 * _505)) / _586) + 0.5) + _537) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_443 + (_579 * _506)) / _586) + 0.5) + _539) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _608 = _606.x;
    float _618 = _291 * 0.1500000059604644775390625;
    float _629 = (_618 * ((_484 - _326) + (((((cbMtdParam._m0[10u].x * _291) * _555.x) - _484) * _291) * _608))) + _326;
    float _630 = (_618 * ((_485 - _328) + (((((cbMtdParam._m0[10u].y * _291) * _555.y) - _485) * _291) * _608))) + _328;
    float _631 = (_618 * ((_486 - _330) + (((((cbMtdParam._m0[10u].z * _291) * _555.z) - _486) * _291) * _608))) + _330;
    vec4 _644 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _648 = _644.z;
    float _651 = (_644.x * 2.0) + (-1.0);
    float _652 = (_644.y * 2.0) + (-1.0);
    float _653 = dot(vec2(_651, _652), vec2(_651, _652));
    float _3645 = isnan(0.0) ? _653 : (isnan(_653) ? 0.0 : max(_653, 0.0));
    float _658 = sqrt(1.0 - (isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0))));
    float _661 = fma(_658, _209, fma(_652, _216, _651 * _202));
    float _664 = fma(_658, _210, fma(_652, _217, _651 * _203));
    float _667 = fma(_658, _211, fma(_652, _218, _651 * _204));
    float _671 = inversesqrt(dot(vec3(_661, _664, _667), vec3(_661, _664, _667)));
    float _672 = _671 * _661;
    float _673 = _671 * _664;
    float _674 = _671 * _667;
    float _3656 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _675 = isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0));
    float _3667 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _3678 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _3689 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _694 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _698 = inversesqrt(dot(vec3(_273, _274, _275), vec3(_273, _274, _275)));
    float _699 = _273 * _698;
    float _700 = _274 * _698;
    float _701 = _275 * _698;
    vec4 _706 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _708 = _706.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _865 = sqrt(((_273 * _273) + (_274 * _274)) + (_275 * _275));
        float _871 = (cbMatDynParam._m0[5u].x * _865) + cbMatDynParam._m0[5u].y;
        float _3700 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        float _872 = isnan(1.0) ? _3700 : (isnan(_3700) ? 1.0 : min(_3700, 1.0));
        float _876 = (cbMatDynParam._m0[5u].z * _865) + cbMatDynParam._m0[5u].w;
        float _3711 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0))) - _872)) + _872) < ((_708 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _720 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _721 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _740 = fma(_674, cbSceneParam._m0[5u].z, fma(_673, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _672));
    float _743 = fma(_674, cbSceneParam._m0[6u].z, fma(_673, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _672));
    float _746 = fma(_674, cbSceneParam._m0[7u].z, fma(_673, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _672));
    uint _759 = uint(roundEven(NORMAL.w)) * 13u;
    uint _761 = _759 + 9u;
    uint _762 = _761 + uint(cbMatDynParam._m0[0u].w);
    float _768 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0)))) * cbInstanceData._m0[_762].x;
    float _769 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0)))) * cbInstanceData._m0[_762].y;
    float _770 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3689 : (isnan(_3689) ? 1.0 : min(_3689, 1.0)))) * cbInstanceData._m0[_762].z;
    float _3722 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    float _771 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
    float _3733 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _772 = isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0));
    float _3744 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
    float _773 = isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0));
    vec4 _782 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _720, cbSceneParam._m0[86u].y * _721));
    float _785 = _782.x * TEXCOORD_4.z;
    float _786 = dot(vec3(_672, _673, _674), vec3(_699, _700, _701));
    float _789 = _786 * 2.0;
    float _793 = (_789 * _672) - _699;
    float _794 = (_789 * _673) - _700;
    float _795 = (_789 * _674) - _701;
    float _799 = abs(dot(vec3(_699, _700, _701), vec3(_672, _673, _674)));
    float _3755 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _801 = sqrt(_675);
    float _814 = exp2((_801 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_801 * 3.0));
    float _846 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _850 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _854 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1183;
    float _1185;
    float _1186;
    float _1187;
    float _1188;
    float _1189;
    float _1190;
    float _1191;
    float _1192;
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _910 = fma(_854, cbModelParam._m0[26u].z, fma(_850, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _846));
        float _914 = fma(_854, cbModelParam._m0[27u].z, fma(_850, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _846));
        float _918 = fma(_854, cbModelParam._m0[28u].z, fma(_850, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _846));
        float _941 = _846 + _672;
        float _942 = _850 + _673;
        float _943 = _854 + _674;
        float _953 = fma(_943, cbModelParam._m0[26u].z, fma(_942, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _941)) - _910;
        float _954 = fma(_943, cbModelParam._m0[27u].z, fma(_942, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _941)) - _914;
        float _955 = fma(_943, cbModelParam._m0[28u].z, fma(_942, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _941)) - _918;
        float _959 = inversesqrt(dot(vec3(_953, _954, _955), vec3(_953, _954, _955)));
        float _972 = ((_959 * _953) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_910 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _973 = ((_959 * _954) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_914 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _974 = ((_959 * _955) / cbModelParam._m0[34u].z) + ((((((_918 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _977 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_972, _973, _974), 0.0);
        vec4 _984 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_972, _973, _974), 0.0);
        vec4 _991 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_972, _973, _974), 0.0);
        vec4 _998 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_972, _973, _974), 0.0);
        float _1011 = exp2((_977.w + (-0.5)) * 20.0) * 2.0;
        float _1012 = _1011 * (_977.x + (-0.5));
        float _1013 = _1011 * (_977.y + (-0.5));
        float _1014 = _1011 * (_977.z + (-0.5));
        float _1021 = exp2((_984.w + (-0.5)) * 20.0) * 2.0;
        float _1022 = _1021 * (_984.x + (-0.5));
        float _1023 = _1021 * (_984.y + (-0.5));
        float _1024 = _1021 * (_984.z + (-0.5));
        float _1031 = exp2((_991.w + (-0.5)) * 20.0) * 2.0;
        float _1032 = _1031 * (_991.x + (-0.5));
        float _1033 = _1031 * (_991.y + (-0.5));
        float _1034 = _1031 * (_991.z + (-0.5));
        float _1041 = exp2((_998.w + (-0.5)) * 20.0) * 2.0;
        float _1042 = _1041 * (_998.x + (-0.5));
        float _1043 = _1041 * (_998.y + (-0.5));
        float _1044 = _1041 * (_998.z + (-0.5));
        float _1045 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1046 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1047 = isnan(0.0) ? _1044 : (isnan(_1044) ? 0.0 : max(_1044, 0.0));
        float _1048 = _1012 * 0.5;
        float _1049 = _1022 * 0.5;
        float _1050 = _1032 * 0.5;
        float _1051 = dot(vec3(_1048, _1049, _1050), vec3(_1048, _1049, _1050));
        float _1056 = (_1051 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1051);
        float _1065 = (dot(vec3(_672, _673, _674), vec3(_1056 * _1048, _1056 * _1049, _1056 * _1050)) + 1.0) * 0.5;
        float _3781 = isnan(0.0) ? _1065 : (isnan(_1065) ? 0.0 : max(_1065, 0.0));
        float _1075 = sqrt(((_1049 * _1049) + (_1048 * _1048)) + (_1050 * _1050)) / (_1045 + 9.9999997473787516355514526367188e-06);
        float _3792 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1076 = isnan(1.0) ? _3792 : (isnan(_3792) ? 1.0 : min(_3792, 1.0));
        float _1077 = _1076 * 2.0;
        float _1081 = (1.0 - _1076) / (_1076 + 1.0);
        float _3803 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1082 = isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0));
        float _1091 = ((((1.0 - _1082) * (_1077 + 2.0)) * exp2(log2(isnan(1.0) ? _3781 : (isnan(_3781) ? 1.0 : min(_3781, 1.0))) * (_1077 + 1.0))) + _1082) * _1045;
        float _1092 = _1013 * 0.5;
        float _1093 = _1023 * 0.5;
        float _1094 = _1033 * 0.5;
        float _1095 = dot(vec3(_1092, _1093, _1094), vec3(_1092, _1093, _1094));
        float _1100 = (_1095 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1095);
        float _1108 = (dot(vec3(_672, _673, _674), vec3(_1100 * _1092, _1100 * _1093, _1100 * _1094)) + 1.0) * 0.5;
        float _3814 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1117 = sqrt(((_1093 * _1093) + (_1092 * _1092)) + (_1094 * _1094)) / (_1046 + 9.9999997473787516355514526367188e-06);
        float _3825 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
        float _1118 = isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0));
        float _1119 = _1118 * 2.0;
        float _1123 = (1.0 - _1118) / (_1118 + 1.0);
        float _3836 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1124 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
        float _1133 = ((((1.0 - _1124) * (_1119 + 2.0)) * exp2(log2(isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0))) * (_1119 + 1.0))) + _1124) * _1046;
        float _1134 = _1014 * 0.5;
        float _1135 = _1024 * 0.5;
        float _1136 = _1034 * 0.5;
        float _1137 = dot(vec3(_1134, _1135, _1136), vec3(_1134, _1135, _1136));
        float _1142 = (_1137 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1137);
        float _1150 = (dot(vec3(_672, _673, _674), vec3(_1142 * _1134, _1142 * _1135, _1142 * _1136)) + 1.0) * 0.5;
        float _3847 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1159 = sqrt(((_1135 * _1135) + (_1134 * _1134)) + (_1136 * _1136)) / (_1047 + 9.9999997473787516355514526367188e-06);
        float _3858 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0));
        float _1161 = _1160 * 2.0;
        float _1165 = (1.0 - _1160) / (_1160 + 1.0);
        float _3869 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1166 = isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0));
        float _1175 = ((((1.0 - _1166) * (_1161 + 2.0)) * exp2(log2(isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0))) * (_1161 + 1.0))) + _1166) * _1047;
        _1183 = _1014;
        _1185 = _1013;
        _1186 = _1012;
        _1187 = _1024;
        _1188 = _1023;
        _1189 = _1022;
        _1190 = _1034;
        _1191 = _1033;
        _1192 = _1032;
        _1193 = _1047;
        _1194 = _1046;
        _1195 = _1045;
        _1196 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0)));
        _1197 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0)));
        _1198 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0)));
    }
    else
    {
        _1183 = _1184;
        _1185 = _1184;
        _1186 = _1184;
        _1187 = _1184;
        _1188 = _1184;
        _1189 = _1184;
        _1190 = _1184;
        _1191 = _1184;
        _1192 = _1184;
        _1193 = _1184;
        _1194 = _1184;
        _1195 = _1184;
        _1196 = 0.0;
        _1197 = 0.0;
        _1198 = 0.0;
    }
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    float _1500;
    float _1501;
    float _1502;
    float _1503;
    float _1504;
    float _1505;
    float _1506;
    float _1507;
    float _1508;
    float _1509;
    float _1510;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1227 = fma(_854, cbModelParam._m0[30u].z, fma(_850, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _846));
        float _1231 = fma(_854, cbModelParam._m0[31u].z, fma(_850, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _846));
        float _1235 = fma(_854, cbModelParam._m0[32u].z, fma(_850, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _846));
        float _1258 = _846 + _672;
        float _1259 = _850 + _673;
        float _1260 = _854 + _674;
        float _1270 = fma(_1260, cbModelParam._m0[30u].z, fma(_1259, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1258)) - _1227;
        float _1271 = fma(_1260, cbModelParam._m0[31u].z, fma(_1259, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1258)) - _1231;
        float _1272 = fma(_1260, cbModelParam._m0[32u].z, fma(_1259, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1258)) - _1235;
        float _1276 = inversesqrt(dot(vec3(_1270, _1271, _1272), vec3(_1270, _1271, _1272)));
        float _1289 = ((_1276 * _1270) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1227 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1290 = ((_1276 * _1271) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1231 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1291 = ((_1276 * _1272) / cbModelParam._m0[35u].z) + ((((((_1235 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1293 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1289, _1290, _1291), 0.0);
        vec4 _1300 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1289, _1290, _1291), 0.0);
        vec4 _1307 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1289, _1290, _1291), 0.0);
        vec4 _1314 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1289, _1290, _1291), 0.0);
        float _1326 = exp2((_1293.w + (-0.5)) * 20.0) * 2.0;
        float _1327 = _1326 * (_1293.x + (-0.5));
        float _1328 = _1326 * (_1293.y + (-0.5));
        float _1329 = _1326 * (_1293.z + (-0.5));
        float _1336 = exp2((_1300.w + (-0.5)) * 20.0) * 2.0;
        float _1337 = _1336 * (_1300.x + (-0.5));
        float _1338 = _1336 * (_1300.y + (-0.5));
        float _1339 = _1336 * (_1300.z + (-0.5));
        float _1346 = exp2((_1307.w + (-0.5)) * 20.0) * 2.0;
        float _1347 = _1346 * (_1307.x + (-0.5));
        float _1348 = _1346 * (_1307.y + (-0.5));
        float _1349 = _1346 * (_1307.z + (-0.5));
        float _1356 = exp2((_1314.w + (-0.5)) * 20.0) * 2.0;
        float _1357 = _1356 * (_1314.x + (-0.5));
        float _1358 = _1356 * (_1314.y + (-0.5));
        float _1359 = _1356 * (_1314.z + (-0.5));
        float _1360 = isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0));
        float _1361 = isnan(0.0) ? _1358 : (isnan(_1358) ? 0.0 : max(_1358, 0.0));
        float _1362 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1363 = _1327 * 0.5;
        float _1364 = _1337 * 0.5;
        float _1365 = _1347 * 0.5;
        float _1366 = dot(vec3(_1363, _1364, _1365), vec3(_1363, _1364, _1365));
        float _1371 = (_1366 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1366);
        float _1379 = (dot(vec3(_672, _673, _674), vec3(_1371 * _1363, _1371 * _1364, _1371 * _1365)) + 1.0) * 0.5;
        float _3910 = isnan(0.0) ? _1379 : (isnan(_1379) ? 0.0 : max(_1379, 0.0));
        float _1388 = sqrt(((_1364 * _1364) + (_1363 * _1363)) + (_1365 * _1365)) / (_1360 + 9.9999997473787516355514526367188e-06);
        float _3921 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1389 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
        float _1390 = _1389 * 2.0;
        float _1394 = (1.0 - _1389) / (_1389 + 1.0);
        float _3932 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1395 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
        float _1404 = ((((1.0 - _1395) * (_1390 + 2.0)) * exp2(log2(isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0))) * (_1390 + 1.0))) + _1395) * _1360;
        float _1405 = _1328 * 0.5;
        float _1406 = _1338 * 0.5;
        float _1407 = _1348 * 0.5;
        float _1408 = dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407));
        float _1413 = (_1408 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1408);
        float _1421 = (dot(vec3(_672, _673, _674), vec3(_1413 * _1405, _1413 * _1406, _1413 * _1407)) + 1.0) * 0.5;
        float _3943 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1430 = sqrt(((_1406 * _1406) + (_1405 * _1405)) + (_1407 * _1407)) / (_1361 + 9.9999997473787516355514526367188e-06);
        float _3954 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
        float _1432 = _1431 * 2.0;
        float _1436 = (1.0 - _1431) / (_1431 + 1.0);
        float _3965 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
        float _1446 = ((((1.0 - _1437) * (_1432 + 2.0)) * exp2(log2(isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0))) * (_1432 + 1.0))) + _1437) * _1361;
        float _1447 = _1329 * 0.5;
        float _1448 = _1339 * 0.5;
        float _1449 = _1349 * 0.5;
        float _1450 = dot(vec3(_1447, _1448, _1449), vec3(_1447, _1448, _1449));
        float _1455 = (_1450 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1450);
        float _1463 = (dot(vec3(_672, _673, _674), vec3(_1455 * _1447, _1455 * _1448, _1455 * _1449)) + 1.0) * 0.5;
        float _3976 = isnan(0.0) ? _1463 : (isnan(_1463) ? 0.0 : max(_1463, 0.0));
        float _1472 = sqrt(((_1448 * _1448) + (_1447 * _1447)) + (_1449 * _1449)) / (_1362 + 9.9999997473787516355514526367188e-06);
        float _3987 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0));
        float _1474 = _1473 * 2.0;
        float _1478 = (1.0 - _1473) / (_1473 + 1.0);
        float _3998 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1479 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
        float _1488 = ((((1.0 - _1479) * (_1474 + 2.0)) * exp2(log2(isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0))) * (_1474 + 1.0))) + _1479) * _1362;
        _1496 = _1329;
        _1497 = _1328;
        _1498 = _1327;
        _1499 = _1339;
        _1500 = _1338;
        _1501 = _1337;
        _1502 = _1349;
        _1503 = _1348;
        _1504 = _1347;
        _1505 = _1362;
        _1506 = _1361;
        _1507 = _1360;
        _1508 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0)));
        _1509 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)));
        _1510 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0)));
    }
    else
    {
        _1496 = _1184;
        _1497 = _1184;
        _1498 = _1184;
        _1499 = _1184;
        _1500 = _1184;
        _1501 = _1184;
        _1502 = _1184;
        _1503 = _1184;
        _1504 = _1184;
        _1505 = _1184;
        _1506 = _1184;
        _1507 = _1184;
        _1508 = 0.0;
        _1509 = 0.0;
        _1510 = 0.0;
    }
    float _1520 = (cbModelParam._m0[1u].x * (_1508 - _1196)) + _1196;
    float _1521 = (cbModelParam._m0[1u].x * (_1509 - _1197)) + _1197;
    float _1522 = (cbModelParam._m0[1u].x * (_1510 - _1198)) + _1198;
    float _1543 = fma(_1522, cbSceneParam._m0[89u].z, fma(_1521, cbSceneParam._m0[89u].y, _1520 * cbSceneParam._m0[89u].x));
    float _1546 = fma(_1522, cbSceneParam._m0[90u].z, fma(_1521, cbSceneParam._m0[90u].y, _1520 * cbSceneParam._m0[90u].x));
    float _1549 = fma(_1522, cbSceneParam._m0[91u].z, fma(_1521, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1520));
    float _1564 = _793 * 0.5;
    float _1565 = _794 * 0.5;
    float _1566 = _795 * 0.5;
    float _1567 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1498, _1501, _1504, _1507));
    float _1570 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1497, _1500, _1503, _1506));
    float _1573 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1496, _1499, _1502, _1505));
    float _1607;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1580 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1183, _1187, _1190, _1193));
        float _1584 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1185, _1188, _1191, _1194));
        float _1588 = dot(vec4(_1564, _1565, _1566, 1.0), vec4(_1186, _1189, _1192, _1195));
        float _1595 = dot(vec4(cbModelParam._m0[39u]), vec4(_1564, _1565, _1566, 1.0));
        _1607 = dot(vec3(isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)), isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0)), isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1595) ? 0.0 : (isnan(0.0) ? _1595 : max(0.0, _1595))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1607 = 1.0;
    }
    float _1618;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1609 = dot(vec4(cbModelParam._m0[40u]), vec4(_1564, _1565, _1566, 1.0));
        _1618 = dot(vec3(isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0)), isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0)), isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1609) ? 0.0 : (isnan(0.0) ? _1609 : max(0.0, _1609))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1618 = 1.0;
    }
    float _1622 = (_1618 * cbModelParam._m0[1u].x) + (_1607 * (1.0 - cbModelParam._m0[1u].x));
    float _1632 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _675);
    float _1633 = isnan(_1632) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1632 : min(cbModelParam._m0[25u].z, _1632));
    float _1715;
    float _1717;
    float _1719;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1682 = fma(_854, cbModelParam._m0[13u].z, fma(_850, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _846)) + cbModelParam._m0[13u].w;
        float _1686 = fma(_854, cbModelParam._m0[14u].z, fma(_850, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _846)) + cbModelParam._m0[14u].w;
        float _1690 = fma(_854, cbModelParam._m0[15u].z, fma(_850, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _846)) + cbModelParam._m0[15u].w;
        float _1693 = fma(_795, cbModelParam._m0[13u].z, fma(_794, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _793));
        float _1696 = fma(_795, cbModelParam._m0[14u].z, fma(_794, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _793));
        float _1699 = fma(_795, cbModelParam._m0[15u].z, fma(_794, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _793));
        float _1727;
        if (_1693 > 0.0)
        {
            _1727 = abs((1.0 - _1682) / _1693);
        }
        else
        {
            float frontier_phi_41_39_ladder;
            if (_1693 < 0.0)
            {
                frontier_phi_41_39_ladder = abs((_1682 + 1.0) / _1693);
            }
            else
            {
                frontier_phi_41_39_ladder = 5000.0;
            }
            _1727 = frontier_phi_41_39_ladder;
        }
        float _1895;
        if (_1696 > 0.0)
        {
            _1895 = abs((1.0 - _1686) / _1696);
        }
        else
        {
            float frontier_phi_50_46_ladder;
            if (_1696 < 0.0)
            {
                frontier_phi_50_46_ladder = abs((_1686 + 1.0) / _1696);
            }
            else
            {
                frontier_phi_50_46_ladder = 5000.0;
            }
            _1895 = frontier_phi_50_46_ladder;
        }
        float _2339;
        if (_1699 > 0.0)
        {
            _2339 = abs((1.0 - _1690) / _1699);
        }
        else
        {
            float frontier_phi_62_57_ladder;
            if (_1699 < 0.0)
            {
                frontier_phi_62_57_ladder = abs((_1690 + 1.0) / _1699);
            }
            else
            {
                frontier_phi_62_57_ladder = 5000.0;
            }
            _2339 = frontier_phi_62_57_ladder;
        }
        float _2341 = isnan(_1895) ? _1727 : (isnan(_1727) ? _1895 : min(_1727, _1895));
        float _2342 = isnan(_2339) ? _2341 : (isnan(_2341) ? _2339 : min(_2341, _2339));
        float _2346 = (_2342 * _1693) + _1682;
        float _2347 = (_2342 * _1696) + _1686;
        float _2348 = (_2342 * _1699) + _1690;
        float _2349 = _2342 * 9.9999997473787516355514526367188e-05;
        float _2351 = (-1.0) - _2349;
        float _2353 = _2349 + 1.0;
        float frontier_phi_40_62_ladder;
        float frontier_phi_40_62_ladder_1;
        float frontier_phi_40_62_ladder_2;
        if ((_2348 > _2353) || ((_2348 < _2351) || ((_2347 > _2353) || ((_2347 < _2351) || ((_2346 < _2351) || (_2346 > _2353))))))
        {
            frontier_phi_40_62_ladder = 0.0;
            frontier_phi_40_62_ladder_1 = 0.0;
            frontier_phi_40_62_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2582 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2348, cbModelParam._m0[9u].z, fma(_2347, cbModelParam._m0[9u].y, _2346 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2348, cbModelParam._m0[10u].z, fma(_2347, cbModelParam._m0[10u].y, _2346 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2348, cbModelParam._m0[11u].z, fma(_2347, cbModelParam._m0[11u].y, _2346 * cbModelParam._m0[11u].x))), _1633);
            frontier_phi_40_62_ladder = _2582.z * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_1 = _2582.y * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_2 = _2582.x * cbModelParam._m0[1u].y;
        }
        _1715 = frontier_phi_40_62_ladder_2;
        _1717 = frontier_phi_40_62_ladder_1;
        _1719 = frontier_phi_40_62_ladder;
    }
    else
    {
        vec4 _1703 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_793, _794, _795), _1633);
        _1715 = _1703.x * cbModelParam._m0[1u].y;
        _1717 = _1703.y * cbModelParam._m0[1u].y;
        _1719 = _1703.z * cbModelParam._m0[1u].y;
    }
    float _1723 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _675);
    float _1724 = isnan(_1723) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1723 : min(cbModelParam._m0[25u].w, _1723));
    float _1812;
    float _1814;
    float _1816;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1776 = fma(_854, cbModelParam._m0[21u].z, fma(_850, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _846)) + cbModelParam._m0[21u].w;
        float _1780 = fma(_854, cbModelParam._m0[22u].z, fma(_850, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _846)) + cbModelParam._m0[22u].w;
        float _1784 = fma(_854, cbModelParam._m0[23u].z, fma(_850, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _846)) + cbModelParam._m0[23u].w;
        float _1787 = fma(_795, cbModelParam._m0[21u].z, fma(_794, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _793));
        float _1790 = fma(_795, cbModelParam._m0[22u].z, fma(_794, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _793));
        float _1793 = fma(_795, cbModelParam._m0[23u].z, fma(_794, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _793));
        float _1900;
        if (_1787 > 0.0)
        {
            _1900 = abs((1.0 - _1776) / _1787);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1787 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1776 + 1.0) / _1787);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1900 = frontier_phi_52_48_ladder;
        }
        float _2366;
        if (_1790 > 0.0)
        {
            _2366 = abs((1.0 - _1780) / _1790);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1790 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1780 + 1.0) / _1790);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _2366 = frontier_phi_64_59_ladder;
        }
        float _2711;
        if (_1793 > 0.0)
        {
            _2711 = abs((1.0 - _1784) / _1793);
        }
        else
        {
            float frontier_phi_76_71_ladder;
            if (_1793 < 0.0)
            {
                frontier_phi_76_71_ladder = abs((_1784 + 1.0) / _1793);
            }
            else
            {
                frontier_phi_76_71_ladder = 5000.0;
            }
            _2711 = frontier_phi_76_71_ladder;
        }
        float _2713 = isnan(_2366) ? _1900 : (isnan(_1900) ? _2366 : min(_1900, _2366));
        float _2714 = isnan(_2711) ? _2713 : (isnan(_2713) ? _2711 : min(_2713, _2711));
        float _2718 = (_2714 * _1787) + _1776;
        float _2719 = (_2714 * _1790) + _1780;
        float _2720 = (_2714 * _1793) + _1784;
        float _2721 = _2714 * 9.9999997473787516355514526367188e-05;
        float _2722 = (-1.0) - _2721;
        float _2724 = _2721 + 1.0;
        float frontier_phi_49_76_ladder;
        float frontier_phi_49_76_ladder_1;
        float frontier_phi_49_76_ladder_2;
        if ((_2720 > _2724) || ((_2720 < _2722) || ((_2719 > _2724) || ((_2719 < _2722) || ((_2718 < _2722) || (_2718 > _2724))))))
        {
            frontier_phi_49_76_ladder = 0.0;
            frontier_phi_49_76_ladder_1 = 0.0;
            frontier_phi_49_76_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2857 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2720, cbModelParam._m0[17u].z, fma(_2719, cbModelParam._m0[17u].y, _2718 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2720, cbModelParam._m0[18u].z, fma(_2719, cbModelParam._m0[18u].y, _2718 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2720, cbModelParam._m0[19u].z, fma(_2719, cbModelParam._m0[19u].y, _2718 * cbModelParam._m0[19u].x))), _1724);
            frontier_phi_49_76_ladder = _2857.z * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_1 = _2857.x * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_2 = _2857.y * cbModelParam._m0[1u].z;
        }
        _1812 = frontier_phi_49_76_ladder_1;
        _1814 = frontier_phi_49_76_ladder_2;
        _1816 = frontier_phi_49_76_ladder;
    }
    else
    {
        vec4 _1796 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_793, _794, _795), _1724);
        _1812 = _1796.x * cbModelParam._m0[1u].z;
        _1814 = _1796.y * cbModelParam._m0[1u].z;
        _1816 = _1796.z * cbModelParam._m0[1u].z;
    }
    float _1828 = ((((1.0 - _814) * ((_801 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_814 * _801)) * _785;
    float _1829 = _1828 * ((cbModelParam._m0[1u].w * (_1812 - _1715)) + _1715);
    float _1830 = _1828 * ((cbModelParam._m0[1u].w * (_1814 - _1717)) + _1717);
    float _1831 = _1828 * ((cbModelParam._m0[1u].w * (_1816 - _1719)) + _1719);
    float _1834 = fma(_1831, cbSceneParam._m0[89u].z, fma(_1830, cbSceneParam._m0[89u].y, _1829 * cbSceneParam._m0[89u].x));
    float _1837 = fma(_1831, cbSceneParam._m0[90u].z, fma(_1830, cbSceneParam._m0[90u].y, _1829 * cbSceneParam._m0[90u].x));
    float _1840 = fma(_1831, cbSceneParam._m0[91u].z, fma(_1830, cbSceneParam._m0[91u].y, _1829 * cbSceneParam._m0[91u].x));
    float _1874 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1878 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1882 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1886 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1887 = _1874 / _1886;
    float _1888 = _1878 / _1886;
    float _1889 = _1882 / _1886;
    float _2036;
    float _2037;
    float _2038;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1916 = ((uint(_1889 > cbSceneParam._m0[59u].y) + uint(_1889 > cbSceneParam._m0[59u].x)) + uint(_1889 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1917 = _1916 + 43u;
        uint _1925 = _1916 + 44u;
        uint _1933 = _1916 + 45u;
        uint _1941 = _1916 + 46u;
        float _1952 = fma(_1886, cbSceneParam._m0[_1917].w, fma(_1882, cbSceneParam._m0[_1917].z, fma(_1878, cbSceneParam._m0[_1917].y, _1874 * cbSceneParam._m0[_1917].x)));
        float _1956 = fma(_1886, cbSceneParam._m0[_1925].w, fma(_1882, cbSceneParam._m0[_1925].z, fma(_1878, cbSceneParam._m0[_1925].y, _1874 * cbSceneParam._m0[_1925].x)));
        float _1964 = fma(_1886, cbSceneParam._m0[_1941].w, fma(_1882, cbSceneParam._m0[_1941].z, fma(_1878, cbSceneParam._m0[_1941].y, _1874 * cbSceneParam._m0[_1941].x)));
        float _1969 = cbSceneParam._m0[33u].z * _1964;
        float _1971 = cbSceneParam._m0[33u].w * _1964;
        float _1974 = fma(_1886, cbSceneParam._m0[_1933].w, fma(_1882, cbSceneParam._m0[_1933].z, fma(_1878, cbSceneParam._m0[_1933].y, _1874 * cbSceneParam._m0[_1933].x))) / _1964;
        float _2022 = (cbSceneParam._m0[33u].x - sqrt(((_1888 * _1888) + (_1887 * _1887)) + (_1889 * _1889))) * cbSceneParam._m0[33u].y;
        float _4124 = isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0));
        float _2029 = (isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1969 + _1952) / _1964, (_1971 + _1956) / _1964), _1974), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1971 + _1952) / _1964, (_1956 - _1969) / _1964), _1974), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1952 - _1969) / _1964, (_1956 - _1971) / _1964), _1974), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1952 - _1971) / _1964, (_1969 + _1956) / _1964), _1974), 0.0)).x), vec4(0.25)));
        _2036 = 1.0 - (_2029 * cbSceneParam._m0[34u].x);
        _2037 = 1.0 - (_2029 * cbSceneParam._m0[34u].y);
        _2038 = 1.0 - (_2029 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2036 = 1.0;
        _2037 = 1.0;
        _2038 = 1.0;
    }
    float _2102;
    float _2104;
    float _2106;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2090 = fma(_1886, cbSceneParam._m0[63u].w, fma(_1882, cbSceneParam._m0[63u].z, fma(_1878, cbSceneParam._m0[63u].y, _1874 * cbSceneParam._m0[63u].x)));
        float _2091 = fma(_1886, cbSceneParam._m0[60u].w, fma(_1882, cbSceneParam._m0[60u].z, fma(_1878, cbSceneParam._m0[60u].y, _1874 * cbSceneParam._m0[60u].x))) / _2090;
        float _2092 = fma(_1886, cbSceneParam._m0[61u].w, fma(_1882, cbSceneParam._m0[61u].z, fma(_1878, cbSceneParam._m0[61u].y, _1874 * cbSceneParam._m0[61u].x))) / _2090;
        float frontier_phi_61_60_ladder;
        float frontier_phi_61_60_ladder_1;
        float frontier_phi_61_60_ladder_2;
        if ((((_2091 >= cbSceneParam._m0[64u].x) && (_2092 >= cbSceneParam._m0[64u].y)) && (_2091 <= cbSceneParam._m0[64u].z)) && (_2092 <= cbSceneParam._m0[64u].w))
        {
            float _2379 = fma(_1886, cbSceneParam._m0[62u].w, fma(_1882, cbSceneParam._m0[62u].z, fma(_1878, cbSceneParam._m0[62u].y, _1874 * cbSceneParam._m0[62u].x))) / _2090;
            float _2383 = isnan(cbSceneParam._m0[41u].w) ? _2379 : (isnan(_2379) ? cbSceneParam._m0[41u].w : max(_2379, cbSceneParam._m0[41u].w));
            float _2426 = (cbSceneParam._m0[33u].x - sqrt(((_1888 * _1888) + (_1887 * _1887)) + (_1889 * _1889))) * cbSceneParam._m0[33u].y;
            float _4140 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
            float _2433 = (isnan(1.0) ? _4140 : (isnan(_4140) ? 1.0 : min(_4140, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2091, cbSceneParam._m0[33u].w + _2092), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2091, _2092 - cbSceneParam._m0[33u].z), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2091 - cbSceneParam._m0[33u].z, _2092 - cbSceneParam._m0[33u].w), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2091 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2092), _2383), 0.0)).x), vec4(0.25)));
            float _2437 = 1.0 - (_2433 * cbSceneParam._m0[34u].x);
            float _2438 = 1.0 - (_2433 * cbSceneParam._m0[34u].y);
            float _2439 = 1.0 - (_2433 * cbSceneParam._m0[34u].z);
            frontier_phi_61_60_ladder = isnan(_2439) ? _2038 : (isnan(_2038) ? _2439 : min(_2038, _2439));
            frontier_phi_61_60_ladder_1 = isnan(_2438) ? _2037 : (isnan(_2037) ? _2438 : min(_2037, _2438));
            frontier_phi_61_60_ladder_2 = isnan(_2437) ? _2036 : (isnan(_2036) ? _2437 : min(_2036, _2437));
        }
        else
        {
            frontier_phi_61_60_ladder = _2038;
            frontier_phi_61_60_ladder_1 = _2037;
            frontier_phi_61_60_ladder_2 = _2036;
        }
        _2102 = frontier_phi_61_60_ladder_2;
        _2104 = frontier_phi_61_60_ladder_1;
        _2106 = frontier_phi_61_60_ladder;
    }
    else
    {
        _2102 = _2036;
        _2104 = _2037;
        _2106 = _2038;
    }
    uvec4 _2111 = floatBitsToUint(cbInstanceData._m0[_759 + 5u]);
    uint _2113 = _2111.x * 14u;
    uint _2114 = _2113 + 13u;
    float _2119 = _785 + (-1.0);
    float _2122 = (cbLight._m0[_2114].x * _2119) + 1.0;
    float _2123 = (cbLight._m0[_2114].y * _2119) + 1.0;
    uint _2124 = _2113 + 5u;
    float _2130 = isnan(1.0) ? _2123 : (isnan(_2123) ? 1.0 : min(_2123, 1.0));
    uint _2134 = _2113 + 4u;
    float _2143 = isnan(1.0) ? _2122 : (isnan(_2122) ? 1.0 : min(_2122, 1.0));
    uint _2147 = _2113 | 1u;
    float _2158 = dot(vec3(cbLight._m0[_2113].xyz), vec3(_672, _673, _674));
    float _2161 = dot(vec3(cbLight._m0[_2147].xyz), vec3(_672, _673, _674));
    float _4176 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
    float _4187 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
    float _2166 = (isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0))) * 0.3183098733425140380859375;
    float _2168 = (isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0))) * 0.3183098733425140380859375;
    float _2175 = ((cbLight._m0[_2124].x * _2130) * _2168) + (((cbLight._m0[_2134].x * _2102) * _2143) * _2166);
    float _2176 = ((_2130 * cbLight._m0[_2124].y) * _2168) + (((cbLight._m0[_2134].y * _2104) * _2143) * _2166);
    float _2177 = ((_2130 * cbLight._m0[_2124].z) * _2168) + (((cbLight._m0[_2134].z * _2106) * _2143) * _2166);
    uint _2179 = _2113 + 8u;
    float _2192 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2113].w)) * _675) * 0.949999988079071044921875);
    float _2193 = _2192 * _2192;
    float _2194 = cbLight._m0[_2113].x + _699;
    float _2195 = cbLight._m0[_2113].y + _700;
    float _2196 = cbLight._m0[_2113].z + _701;
    float _2200 = inversesqrt(dot(vec3(_2194, _2195, _2196), vec3(_2194, _2195, _2196)));
    float _2201 = _2200 * _2194;
    float _2202 = _2200 * _2195;
    float _2203 = _2200 * _2196;
    float _2204 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2113].xyz));
    float _4198 = isnan(0.0) ? _2204 : (isnan(_2204) ? 0.0 : max(_2204, 0.0));
    float _2207 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
    float _4209 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _2208 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
    float _2209 = dot(vec3(_672, _673, _674), vec3(_2201, _2202, _2203));
    float _4220 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2212 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
    float _2213 = dot(vec3(cbLight._m0[_2113].xyz), vec3(_2201, _2202, _2203));
    float _4231 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
    float _2217 = _2193 * _2193;
    float _2221 = ((_2212 * _2212) * (_2217 + (-1.0))) + 1.0;
    float _2232 = (exp2(log2(1.0 - (isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2233 = 1.0 - _2193;
    float _2244 = (0.5 / (((_2208 * ((_2207 * _2233) + _2193)) + 9.9999999392252902907785028219223e-09) + (((_2208 * _2233) + _2193) * _2207))) * _2207;
    float _4242 = isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0));
    float _2246 = (isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0))) * (_2217 / ((_2221 * _2221) * 3.141590118408203125));
    uint _2260 = _2113 + 9u;
    float _2271 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2147].w)) * _675) * 0.949999988079071044921875);
    float _2272 = _2271 * _2271;
    float _2273 = cbLight._m0[_2147].x + _699;
    float _2274 = cbLight._m0[_2147].y + _700;
    float _2275 = cbLight._m0[_2147].z + _701;
    float _2279 = inversesqrt(dot(vec3(_2273, _2274, _2275), vec3(_2273, _2274, _2275)));
    float _2280 = _2279 * _2273;
    float _2281 = _2279 * _2274;
    float _2282 = _2279 * _2275;
    float _2283 = dot(vec3(_672, _673, _674), vec3(cbLight._m0[_2147].xyz));
    float _4253 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2286 = isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0));
    float _2287 = dot(vec3(_672, _673, _674), vec3(_2280, _2281, _2282));
    float _4264 = isnan(0.0) ? _2287 : (isnan(_2287) ? 0.0 : max(_2287, 0.0));
    float _2290 = isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0));
    float _2291 = dot(vec3(cbLight._m0[_2147].xyz), vec3(_2280, _2281, _2282));
    float _4275 = isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0));
    float _2295 = _2272 * _2272;
    float _2299 = ((_2290 * _2290) * (_2295 + (-1.0))) + 1.0;
    float _2308 = (exp2(log2(1.0 - (isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2309 = 1.0 - _2272;
    float _2319 = (0.5 / (((_2208 * ((_2286 * _2309) + _2272)) + 9.9999999392252902907785028219223e-09) + (((_2208 * _2309) + _2272) * _2286))) * _2286;
    float _4286 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
    float _2321 = (isnan(1.0) ? _4286 : (isnan(_4286) ? 1.0 : min(_4286, 1.0))) * (_2295 / ((_2299 * _2299) * 3.141590118408203125));
    float _2331 = (((_2308 * cbLight._m0[_2260].x) * _2321) * _2130) + ((((cbLight._m0[_2179].x * _2102) * _2232) * _2246) * _2143);
    float _2332 = (((_2308 * cbLight._m0[_2260].y) * _2321) * _2130) + ((((cbLight._m0[_2179].y * _2104) * _2232) * _2246) * _2143);
    float _2333 = (((_2308 * cbLight._m0[_2260].z) * _2321) * _2130) + ((((cbLight._m0[_2179].z * _2106) * _2232) * _2246) * _2143);
    float _2496;
    float _2498;
    float _2500;
    float _2502;
    float _2504;
    float _2506;
    if (_2111.y == 0u)
    {
        uvec4 _2451 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2452 = _2451.x;
        uint _2463 = uint((float(_2451.y) * floor(float(uint(cbSceneParam._m0[85u].y * _721) / _2452))) + floor(float(uint(cbSceneParam._m0[85u].x * _720) / _2452)));
        float _2473 = (log2(_1889 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2474 = isnan(0.0) ? _2473 : (isnan(_2473) ? 0.0 : max(_2473, 0.0));
        uint _2477 = uint(isnan(14.0) ? _2474 : (isnan(_2474) ? 14.0 : min(_2474, 14.0)));
        uvec4 _2482 = texelFetch(g_lightClusterGridBuffer, int(((_2477 << 2u) + (_2463 << 6u)) >> 2u));
        uint _2483 = _2482.x;
        uint _2484 = _2451.z;
        float _2591;
        float _2593;
        float _2595;
        float _2597;
        float _2599;
        float _2601;
        if (((((1u << ((_2484 >> 4u) & 15u)) + 4294967295u) & _2483) == 0u) || ((_2484 & 240u) == 0u))
        {
            _2591 = 0.0;
            _2593 = 0.0;
            _2595 = 0.0;
            _2597 = 0.0;
            _2599 = 0.0;
            _2601 = 0.0;
        }
        else
        {
            float _2592;
            float _2594;
            float _2596;
            float _2598;
            float _2600;
            float _2602;
            float _2769 = 0.0;
            float _2770 = 0.0;
            float _2771 = 0.0;
            float _2772 = 0.0;
            float _2773 = 0.0;
            float _2774 = 0.0;
            uint _2775 = 0u;
            uint _2784;
            bool _2785;
            for (;;)
            {
                _2784 = texelFetch(g_lightClassification, int((((_2477 << 5u) + (_2463 << 9u)) + (_2775 << 2u)) >> 2u)).x;
                _2785 = _2784 == 0u;
                float frontier_phi_87_pred;
                float frontier_phi_87_pred_1;
                float frontier_phi_87_pred_2;
                float frontier_phi_87_pred_3;
                float frontier_phi_87_pred_4;
                float frontier_phi_87_pred_5;
                if (_2785)
                {
                    frontier_phi_87_pred = _2769;
                    frontier_phi_87_pred_1 = _2774;
                    frontier_phi_87_pred_2 = _2773;
                    frontier_phi_87_pred_3 = _2772;
                    frontier_phi_87_pred_4 = _2771;
                    frontier_phi_87_pred_5 = _2770;
                }
                else
                {
                    float _2935;
                    float _2936;
                    float _2937;
                    float _2938;
                    float _2939;
                    float _2940;
                    uint _2941;
                    _2935 = _2769;
                    _2936 = _2770;
                    _2937 = _2771;
                    _2938 = _2772;
                    _2939 = _2773;
                    _2940 = _2774;
                    _2941 = _2784;
                    float _2862;
                    float _2863;
                    float _2864;
                    float _2865;
                    float _2866;
                    float _2867;
                    for (;;)
                    {
                        uint _2945 = uint(findLSB(_2941)) + (_2775 << 5u);
                        uint _2942 = (_2941 + 4294967295u) & _2941;
                        uint _2947 = _2945 * 48u;
                        vec4 _2961 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2947)).x, texelFetch(g_PointLightRenderingBuffer, int(_2947 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2947 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2947 + 3u)).x));
                        uint _2967 = (_2945 * 48u) + 4u;
                        vec4 _2980 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2967)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2967 + 3u)).x));
                        uint _2986 = (_2945 * 48u) + 8u;
                        vec3 _2997 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2986)).x, texelFetch(g_PointLightRenderingBuffer, int(_2986 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2986 + 2u)).x));
                        float _3001 = _2961.x - _1887;
                        float _3002 = _2961.y - _1888;
                        float _3003 = _2961.z - _1889;
                        float _3004 = dot(vec3(_3001, _3002, _3003), vec3(_3001, _3002, _3003));
                        float _3007 = inversesqrt(_3004);
                        float _3008 = _3007 * _3001;
                        float _3009 = _3007 * _3002;
                        float _3010 = _3007 * _3003;
                        float _3011 = dot(vec3(_740, _743, _746), vec3(_3008, _3009, _3010));
                        float _3016 = 1.0 - (_3004 * _2961.w);
                        float _4307 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
                        float _3017 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
                        float _3018 = sqrt(_3004) * _2980.w;
                        float _3021 = 1.39999997615814208984375 / (_3018 + 1.39999997615814208984375);
                        float _3022 = _3021 * _3021;
                        float _3025 = ((1.0 - _3022) * _3011) + _3022;
                        float _3028 = _3018 * _3018;
                        float _3032 = ((isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0))) * _3017) / ((_3028 * 0.699999988079071044921875) + 1.0);
                        float _3036 = (-0.0) - _1887;
                        float _3037 = (-0.0) - _1888;
                        float _3038 = (-0.0) - _1889;
                        float _3042 = inversesqrt(dot(vec3(_3036, _3037, _3038), vec3(_3036, _3037, _3038)));
                        float _3043 = _3042 * _3036;
                        float _3044 = _3042 * _3037;
                        float _3045 = _3042 * _3038;
                        float _3052 = exp2(log2(1.0 / ((_3028 * 3.5) + 5.0)) * 0.25);
                        float _3053 = 1.0 - _801;
                        float _3060 = sqrt(1.0 - ((1.0 - (_3053 * _3053)) * (1.0 - (_3052 * _3052))));
                        float _3061 = _3060 * _3060;
                        float _3062 = _3061 * _3061;
                        float _3063 = _3043 + _3008;
                        float _3064 = _3044 + _3009;
                        float _3065 = _3045 + _3010;
                        float _3069 = inversesqrt(dot(vec3(_3063, _3064, _3065), vec3(_3063, _3064, _3065)));
                        float _3073 = dot(vec3(_740, _743, _746), vec3(_3043, _3044, _3045));
                        float _4323 = isnan(0.0) ? _3073 : (isnan(_3073) ? 0.0 : max(_3073, 0.0));
                        float _3076 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
                        float _3077 = dot(vec3(_740, _743, _746), vec3(_3069 * _3063, _3069 * _3064, _3069 * _3065));
                        float _4334 = isnan(0.0) ? _3077 : (isnan(_3077) ? 0.0 : max(_3077, 0.0));
                        float _3080 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
                        float _3084 = ((_3080 * _3080) * (_3062 + (-1.0))) + 1.0;
                        float _3085 = _3021 * _3061;
                        float _3086 = _3085 * _3085;
                        float _3089 = ((1.0 - _3086) * _3011) + _3086;
                        float _4345 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0));
                        float _3090 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
                        float _3091 = 1.0 - _3061;
                        float _3101 = (0.5 / (((_3090 * ((_3076 * _3091) + _3061)) + 9.9999999392252902907785028219223e-09) + (((_3090 * _3091) + _3061) * _3076))) * _3090;
                        float _4356 = isnan(0.0) ? _3101 : (isnan(_3101) ? 0.0 : max(_3101, 0.0));
                        float _3112 = (((_3062 * 3.1415927410125732421875) * (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0)))) / ((_3084 * _3084) * ((_3028 * 2.1991131305694580078125) + 3.141590118408203125))) * _3017;
                        _2865 = (_3032 * _2980.x) + _2938;
                        _2866 = (_3032 * _2980.y) + _2939;
                        _2867 = (_3032 * _2980.z) + _2940;
                        _2862 = (_3112 * _2997.x) + _2935;
                        _2863 = (_3112 * _2997.y) + _2936;
                        _2864 = (_3112 * _2997.z) + _2937;
                        if (_2942 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2935 = _2862;
                            _2936 = _2863;
                            _2937 = _2864;
                            _2938 = _2865;
                            _2939 = _2866;
                            _2940 = _2867;
                            _2941 = _2942;
                        }
                    }
                    frontier_phi_87_pred = _2862;
                    frontier_phi_87_pred_1 = _2867;
                    frontier_phi_87_pred_2 = _2866;
                    frontier_phi_87_pred_3 = _2865;
                    frontier_phi_87_pred_4 = _2864;
                    frontier_phi_87_pred_5 = _2863;
                }
                _2592 = frontier_phi_87_pred;
                _2602 = frontier_phi_87_pred_1;
                _2600 = frontier_phi_87_pred_2;
                _2598 = frontier_phi_87_pred_3;
                _2596 = frontier_phi_87_pred_4;
                _2594 = frontier_phi_87_pred_5;
                uint _2776 = _2775 + 1u;
                if (_2776 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2769 = _2592;
                    _2770 = _2594;
                    _2771 = _2596;
                    _2772 = _2598;
                    _2773 = _2600;
                    _2774 = _2602;
                    _2775 = _2776;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2591 = _2592;
            _2593 = _2594;
            _2595 = _2596;
            _2597 = _2598;
            _2599 = _2600;
            _2601 = _2602;
        }
        uvec4 _2605 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2606 = _2605.z;
        uint _2608 = (_2606 >> 8u) & 15u;
        float _2737;
        float _2739;
        float _2741;
        float _2743;
        float _2745;
        float _2747;
        if (((4294967295u << _2608) & _2483) == 0u)
        {
            _2737 = _2591;
            _2739 = _2593;
            _2741 = _2595;
            _2743 = _2597;
            _2745 = _2599;
            _2747 = _2601;
        }
        else
        {
            float _2762 = inversesqrt(dot(vec3(_1887, _1888, _1889), vec3(_1887, _1888, _1889)));
            float _2763 = _2762 * _1887;
            float _2764 = _2762 * _1888;
            float _2765 = _2762 * _1889;
            float frontier_phi_78_79_ladder;
            float frontier_phi_78_79_ladder_1;
            float frontier_phi_78_79_ladder_2;
            float frontier_phi_78_79_ladder_3;
            float frontier_phi_78_79_ladder_4;
            float frontier_phi_78_79_ladder_5;
            if (_2608 < ((_2606 >> 12u) & 15u))
            {
                float _2738;
                float _2740;
                float _2742;
                float _2744;
                float _2746;
                float _2748;
                float _2918 = _2591;
                float _2919 = _2593;
                float _2920 = _2595;
                float _2921 = _2597;
                float _2922 = _2599;
                float _2923 = _2601;
                uint _2924 = _2608;
                uint _2933;
                bool _2934;
                for (;;)
                {
                    _2933 = texelFetch(g_lightClassification, int((((_2477 << 5u) + (_2463 << 9u)) + (_2924 << 2u)) >> 2u)).x;
                    _2934 = _2933 == 0u;
                    float frontier_phi_98_pred;
                    float frontier_phi_98_pred_1;
                    float frontier_phi_98_pred_2;
                    float frontier_phi_98_pred_3;
                    float frontier_phi_98_pred_4;
                    float frontier_phi_98_pred_5;
                    if (_2934)
                    {
                        frontier_phi_98_pred = _2923;
                        frontier_phi_98_pred_1 = _2922;
                        frontier_phi_98_pred_2 = _2921;
                        frontier_phi_98_pred_3 = _2920;
                        frontier_phi_98_pred_4 = _2919;
                        frontier_phi_98_pred_5 = _2918;
                    }
                    else
                    {
                        float _3126;
                        float _3127;
                        float _3128;
                        float _3129;
                        float _3130;
                        float _3131;
                        float _3419;
                        float _3420;
                        float _3421;
                        float _3422;
                        float _3423;
                        float _3424;
                        float _3139 = _2918;
                        float _3140 = _2919;
                        float _3141 = _2920;
                        float _3142 = _2921;
                        float _3143 = _2922;
                        float _3144 = _2923;
                        uint _3145 = _2933;
                        uint _3146;
                        vec4 _3171;
                        float _3172;
                        vec4 _3187;
                        vec3 _3199;
                        vec4 _3214;
                        vec4 _3229;
                        float _3275;
                        bool _3276;
                        for (;;)
                        {
                            uint _3156 = ((_2924 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3145));
                            _3146 = (_3145 + 4294967295u) & _3145;
                            uint _3158 = _3156 * 40u;
                            _3171 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3158)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3158 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3158 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3158 + 3u)).x));
                            _3172 = _3171.w;
                            uint _3174 = (_3156 * 40u) + 4u;
                            _3187 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3174)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3174 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3174 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3174 + 3u)).x));
                            uint _3189 = (_3156 * 40u) + 8u;
                            _3199 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3189)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3189 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3189 + 2u)).x));
                            uint _3201 = (_3156 * 40u) + 16u;
                            _3214 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3201)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3201 + 3u)).x));
                            uint _3216 = (_3156 * 40u) + 20u;
                            _3229 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3216)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3216 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3216 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3216 + 3u)).x));
                            uint _3231 = (_3156 * 40u) + 24u;
                            vec4 _3244 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3231)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3231 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3231 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3231 + 3u)).x));
                            uint _3250 = (_3156 * 40u) + 28u;
                            vec4 _3263 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3250)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3250 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3250 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3250 + 3u)).x));
                            _3275 = fma(_1889, _3263.z, fma(_1888, _3263.y, _3263.x * _1887)) + _3263.w;
                            _3276 = !((fma(_1889, _3244.z, fma(_1888, _3244.y, _3244.x * _1887)) + _3244.w) <= 0.0);
                            float frontier_phi_104_pred;
                            float frontier_phi_104_pred_1;
                            float frontier_phi_104_pred_2;
                            float frontier_phi_104_pred_3;
                            float frontier_phi_104_pred_4;
                            float frontier_phi_104_pred_5;
                            if (_3276)
                            {
                                float _3303 = _3171.x - _1887;
                                float _3304 = _3171.y - _1888;
                                float _3305 = _3171.z - _1889;
                                float _3306 = dot(vec3(_3303, _3304, _3305), vec3(_3303, _3304, _3305));
                                float _3309 = inversesqrt(_3306);
                                float _3310 = _3309 * _3303;
                                float _3311 = _3309 * _3304;
                                float _3312 = _3309 * _3305;
                                float _3316 = 1.0 - (_3306 / (_3172 * _3172));
                                float _4367 = isnan(0.0) ? _3316 : (isnan(_3316) ? 0.0 : max(_3316, 0.0));
                                float _3317 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
                                float _3321 = sqrt(_3306) * _3187.w;
                                float _3323 = 1.39999997615814208984375 / (_3321 + 1.39999997615814208984375);
                                float _3324 = _3323 * _3323;
                                float _3327 = ((1.0 - _3324) * dot(vec3(_3310, _3311, _3312), vec3(_740, _743, _746))) + _3324;
                                float _3330 = _3321 * _3321;
                                float _3334 = (fma(_1889, _3214.z, fma(_1888, _3214.y, _3214.x * _1887)) + _3214.w) / _3275;
                                float _3335 = (fma(_1889, _3229.z, fma(_1888, _3229.y, _3229.x * _1887)) + _3229.w) / _3275;
                                float _3339 = 1.0 - dot(vec2(_3334, _3335), vec2(_3334, _3335));
                                float _4383 = isnan(0.0) ? _3339 : (isnan(_3339) ? 0.0 : max(_3339, 0.0));
                                float _3340 = isnan(1.0) ? _4383 : (isnan(_4383) ? 1.0 : min(_4383, 1.0));
                                float _3341 = _3340 * (((isnan(0.0) ? _3327 : (isnan(_3327) ? 0.0 : max(_3327, 0.0))) * _3317) / ((_3330 * 0.699999988079071044921875) + 1.0));
                                float _3353 = exp2(log2(1.0 / ((_3330 * 3.5) + 5.0)) * 0.25);
                                float _3354 = 1.0 - _801;
                                float _3361 = sqrt(1.0 - ((1.0 - (_3354 * _3354)) * (1.0 - (_3353 * _3353))));
                                float _3362 = _3361 * _3361;
                                float _3363 = _3362 * _3362;
                                float _3364 = _3310 - _2763;
                                float _3365 = _3311 - _2764;
                                float _3366 = _3312 - _2765;
                                float _3370 = inversesqrt(dot(vec3(_3364, _3365, _3366), vec3(_3364, _3365, _3366)));
                                float _3374 = dot(vec3(_740, _743, _746), vec3((-0.0) - _2763, (-0.0) - _2764, (-0.0) - _2765));
                                float _4394 = isnan(0.0) ? _3374 : (isnan(_3374) ? 0.0 : max(_3374, 0.0));
                                float _3377 = isnan(1.0) ? _4394 : (isnan(_4394) ? 1.0 : min(_4394, 1.0));
                                float _3378 = dot(vec3(_740, _743, _746), vec3(_3370 * _3364, _3370 * _3365, _3370 * _3366));
                                float _4405 = isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0));
                                float _3381 = isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0));
                                float _3385 = ((_3381 * _3381) * (_3363 + (-1.0))) + 1.0;
                                float _3386 = _3323 * _3362;
                                float _3387 = _3386 * _3386;
                                float _3393 = ((1.0 - _3387) * dot(vec3(_740, _743, _746), vec3(_3310, _3311, _3312))) + _3387;
                                float _4416 = isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0));
                                float _3394 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
                                float _3395 = 1.0 - _3362;
                                float _3405 = (0.5 / (((_3394 * ((_3377 * _3395) + _3362)) + 9.9999999392252902907785028219223e-09) + (((_3394 * _3395) + _3362) * _3377))) * _3394;
                                float _4427 = isnan(0.0) ? _3405 : (isnan(_3405) ? 0.0 : max(_3405, 0.0));
                                float _3415 = (_3340 * _3317) * (((_3363 * 3.1415927410125732421875) * (isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0)))) / ((_3385 * _3385) * ((_3330 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_104_pred = _3341 * _3187.y;
                                frontier_phi_104_pred_1 = _3341 * _3187.x;
                                frontier_phi_104_pred_2 = _3415 * _3199.z;
                                frontier_phi_104_pred_3 = _3415 * _3199.y;
                                frontier_phi_104_pred_4 = _3415 * _3199.x;
                                frontier_phi_104_pred_5 = _3341 * _3187.z;
                            }
                            else
                            {
                                frontier_phi_104_pred = 0.0;
                                frontier_phi_104_pred_1 = 0.0;
                                frontier_phi_104_pred_2 = 0.0;
                                frontier_phi_104_pred_3 = 0.0;
                                frontier_phi_104_pred_4 = 0.0;
                                frontier_phi_104_pred_5 = 0.0;
                            }
                            _3423 = frontier_phi_104_pred;
                            _3422 = frontier_phi_104_pred_1;
                            _3421 = frontier_phi_104_pred_2;
                            _3420 = frontier_phi_104_pred_3;
                            _3419 = frontier_phi_104_pred_4;
                            _3424 = frontier_phi_104_pred_5;
                            _3129 = _3422 + _3142;
                            _3130 = _3423 + _3143;
                            _3131 = _3424 + _3144;
                            _3126 = _3419 + _3139;
                            _3127 = _3420 + _3140;
                            _3128 = _3421 + _3141;
                            if (_3146 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3139 = _3126;
                                _3140 = _3127;
                                _3141 = _3128;
                                _3142 = _3129;
                                _3143 = _3130;
                                _3144 = _3131;
                                _3145 = _3146;
                                continue;
                            }
                        }
                        frontier_phi_98_pred = _3131;
                        frontier_phi_98_pred_1 = _3130;
                        frontier_phi_98_pred_2 = _3129;
                        frontier_phi_98_pred_3 = _3128;
                        frontier_phi_98_pred_4 = _3127;
                        frontier_phi_98_pred_5 = _3126;
                    }
                    _2748 = frontier_phi_98_pred;
                    _2746 = frontier_phi_98_pred_1;
                    _2744 = frontier_phi_98_pred_2;
                    _2742 = frontier_phi_98_pred_3;
                    _2740 = frontier_phi_98_pred_4;
                    _2738 = frontier_phi_98_pred_5;
                    uint _2925 = _2924 + 1u;
                    if (_2925 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2918 = _2738;
                        _2919 = _2740;
                        _2920 = _2742;
                        _2921 = _2744;
                        _2922 = _2746;
                        _2923 = _2748;
                        _2924 = _2925;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_78_79_ladder = _2742;
                frontier_phi_78_79_ladder_1 = _2748;
                frontier_phi_78_79_ladder_2 = _2746;
                frontier_phi_78_79_ladder_3 = _2744;
                frontier_phi_78_79_ladder_4 = _2740;
                frontier_phi_78_79_ladder_5 = _2738;
            }
            else
            {
                frontier_phi_78_79_ladder = _2595;
                frontier_phi_78_79_ladder_1 = _2601;
                frontier_phi_78_79_ladder_2 = _2599;
                frontier_phi_78_79_ladder_3 = _2597;
                frontier_phi_78_79_ladder_4 = _2593;
                frontier_phi_78_79_ladder_5 = _2591;
            }
            _2737 = frontier_phi_78_79_ladder_5;
            _2739 = frontier_phi_78_79_ladder_4;
            _2741 = frontier_phi_78_79_ladder;
            _2743 = frontier_phi_78_79_ladder_3;
            _2745 = frontier_phi_78_79_ladder_2;
            _2747 = frontier_phi_78_79_ladder_1;
        }
        float _2752 = isnan(1.0) ? _785 : (isnan(_785) ? 1.0 : min(_785, 1.0));
        _2496 = (_2752 * _2743) + _2175;
        _2498 = (_2752 * _2745) + _2176;
        _2500 = (_2752 * _2747) + _2177;
        _2502 = ((_2737 * 0.039999999105930328369140625) * _2752) + _2331;
        _2504 = ((_2739 * 0.039999999105930328369140625) * _2752) + _2332;
        _2506 = ((_2741 * 0.039999999105930328369140625) * _2752) + _2333;
    }
    else
    {
        _2496 = _2175;
        _2498 = _2176;
        _2500 = _2177;
        _2502 = _2331;
        _2504 = _2332;
        _2506 = _2333;
    }
    float _4443 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
    float _4454 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _4465 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _2523 = ((isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0))) * (_2496 + ((isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0))) * _785))) + ((_2502 + ((isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0))) * _1622)) * cbPerFrame._m0[3u].x);
    float _2524 = ((isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0))) * (_2498 + ((isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0))) * _785))) + ((_2504 + ((isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0))) * _1622)) * cbPerFrame._m0[3u].x);
    float _2525 = ((isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0))) * (_2500 + ((isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0))) * _785))) + ((_2506 + ((isnan(0.0) ? _1840 : (isnan(_1840) ? 0.0 : max(_1840, 0.0))) * _1622)) * cbPerFrame._m0[3u].x);
    float _2526 = isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0));
    float _2527 = isnan(0.0) ? _2524 : (isnan(_2524) ? 0.0 : max(_2524, 0.0));
    float _2528 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
    uint _2529 = _759 + 6u;
    float _2537 = _720 / cbSceneParam._m0[86u].x;
    float _2538 = _721 / cbSceneParam._m0[86u].y;
    vec4 _2552 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2537, _2538, (log2((isnan(cbSceneParam._m0[77u].w) ? _694 : (isnan(_694) ? cbSceneParam._m0[77u].w : min(_694, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2554 = _2552.x;
    float _2555 = _2552.y;
    float _2556 = _2552.z;
    float _2557 = _2552.w;
    float _2653;
    float _2655;
    float _2657;
    float _2659;
    if (_694 > cbSceneParam._m0[78u].w)
    {
        float _2616 = isnan(_694) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _694 : min(cbSceneParam._m0[80u].w, _694));
        float _2617 = _2616 / _694;
        float _2628 = _2617 * _273;
        float _2629 = _274 * _2617;
        float _2630 = (-0.0) - _2629;
        float _2631 = _2617 * _275;
        float _2633 = (cbSceneParam._m0[77u].w * _2630) / _2616;
        float _2634 = _2633 + cbSceneParam._m0[79u].w;
        float _2635 = cbSceneParam._m0[79u].w - _2629;
        float _2641 = sqrt(((_2628 * _2628) + (_2629 * _2629)) + (_2631 * _2631));
        float _2644 = (1.0 - (cbSceneParam._m0[77u].w / _2616)) * _2641;
        float _2649 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2651 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2875;
        if (abs((_2630 - _2633) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2875 = ((((_2634 > 0.0) ? exp2(_2649 * _2634) : (2.0 - exp2(_2651 * _2634))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2644;
        }
        else
        {
            float _2798 = 1.0 / cbSceneParam._m0[80u].x;
            float _2799 = isnan(_2635) ? _2634 : (isnan(_2634) ? _2635 : max(_2634, _2635));
            float _2800 = isnan(_2635) ? _2634 : (isnan(_2634) ? _2635 : min(_2634, _2635));
            float _2809 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : min(_2799, 0.0));
            float _2810 = isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : min(_2800, 0.0));
            _2875 = ((abs(_2641 / _2630) * cbSceneParam._m0[80u].y) * ((((_2809 - _2810) * 2.0) - ((exp2(_2649 * (isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0)))) - exp2(_2649 * (isnan(0.0) ? _2800 : (isnan(_2800) ? 0.0 : max(_2800, 0.0))))) * _2798)) - ((exp2(_2651 * _2809) - exp2(_2651 * _2810)) * _2798))) + (_2644 * cbSceneParam._m0[80u].z);
        }
        vec4 _2877 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2537, _2538, 1.0), 0.0);
        float _2886 = exp2((_2875 * (-1.44269502162933349609375)) * (1.0 - _2877.w));
        float _2887 = log2(_2886);
        float _2903 = log2(_2557);
        _2653 = (exp2(_2903 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2887 * cbSceneParam._m0[78u].x)) * _2877.x) / cbSceneParam._m0[78u].x)) + _2554;
        _2655 = (exp2(_2903 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2887 * cbSceneParam._m0[78u].y)) * _2877.y) / cbSceneParam._m0[78u].y)) + _2555;
        _2657 = (exp2(_2903 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2887 * cbSceneParam._m0[78u].z)) * _2877.z) / cbSceneParam._m0[78u].z)) + _2556;
        _2659 = _2886 * _2557;
    }
    else
    {
        _2653 = _2554;
        _2655 = _2555;
        _2657 = _2556;
        _2659 = _2557;
    }
    bool _2913;
    vec4 _2669;
    vec4 _2691;
    float _2693;
    float _2697;
    float _2698;
    float _2699;
    float _2700;
    bool _2710;
    for (;;)
    {
        _2669 = cbMatDynParam._m0[0u];
        float _2671 = roundEven(_2669.y);
        bool _2672 = _2671 == 3.0;
        float _2673 = log2(_2659);
        float _2680 = exp2(_2673 * cbSceneParam._m0[78u].x) * _2526;
        float _2681 = exp2(_2673 * cbSceneParam._m0[78u].y) * _2527;
        float _2682 = exp2(_2673 * cbSceneParam._m0[78u].z) * _2528;
        float _2689 = _708 + (-0.5);
        _2691 = cbMtdParam._m0[1u];
        _2693 = _2691.y * _2689;
        float _2696 = (_2671 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2697 = _2696 * (_2672 ? _2680 : (_2680 + (cbSceneParam._m0[72u].w * _2653)));
        _2698 = _2696 * (_2672 ? _2681 : (_2681 + (cbSceneParam._m0[72u].w * _2655)));
        _2699 = _2696 * (_2672 ? _2682 : (_2682 + (cbSceneParam._m0[72u].w * _2657)));
        _2700 = _2689 * 0.999000012874603271484375;
        _2710 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2710)
        {
            if ((cbInstanceData._m0[_759 + 7u].x + _2700) < 0.5)
            {
                _2913 = true;
                break;
            }
        }
        uint _2833 = _761 + uint(_2669.w);
        if ((cbInstanceData._m0[_2833].w < 1.0) && ((cbInstanceData._m0[_2833].w + _2700) < 0.5))
        {
            _2913 = true;
            break;
        }
        if ((_2693 + 1.0) < _2691.x)
        {
            _2913 = true;
            break;
        }
        _2913 = false;
        break;
    }
    float _3117;
    if (_2913)
    {
        discard_state = true;
        _3117 = 0.0;
    }
    else
    {
        _3117 = cbInstanceData._m0[_2529].w;
    }
    SV_Target.x = _2697;
    SV_Target.y = _2698;
    SV_Target.z = _2699;
    SV_Target.w = _3117;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2529].w;
    discard_exit();
}


