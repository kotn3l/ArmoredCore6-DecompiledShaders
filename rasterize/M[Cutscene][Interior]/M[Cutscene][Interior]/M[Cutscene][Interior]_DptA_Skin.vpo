#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 9) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;
layout(location = 8) out vec2 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _244 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _268 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _280 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _281 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _282 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _292 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _294 = texelFetch(g_InstanceIndexBuffer, int(_292));
    uint _295 = _294.x;
    precise float _296 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _301 = isnan(_296) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _296 : max(0.001000000047497451305389404296875, _296));
    precise float _303 = BLENDWEIGHT.x / _301;
    precise float _304 = BLENDWEIGHT.y / _301;
    precise float _305 = BLENDWEIGHT.z / _301;
    precise float _306 = BLENDWEIGHT.w / _301;
    uint _308 = _295 * 13u;
    uvec4 _313 = floatBitsToUint(cbInstanceData._m0[_308 + 4u]);
    uint _314 = _313.x;
    uint _316 = (_314 + uint(float(BLENDINDICES.x))) * 3u;
    uint _323 = _316 + 1u;
    uint _330 = _316 + 2u;
    precise float _337 = _303 * cbObjMatrix._m0[_316].x;
    precise float _338 = _303 * cbObjMatrix._m0[_323].x;
    precise float _339 = _303 * cbObjMatrix._m0[_330].x;
    precise float _340 = _303 * cbObjMatrix._m0[_316].y;
    precise float _341 = _303 * cbObjMatrix._m0[_323].y;
    precise float _342 = _303 * cbObjMatrix._m0[_330].y;
    precise float _343 = _303 * cbObjMatrix._m0[_316].z;
    precise float _344 = _303 * cbObjMatrix._m0[_323].z;
    precise float _345 = _303 * cbObjMatrix._m0[_330].z;
    precise float _346 = _303 * cbObjMatrix._m0[_316].w;
    precise float _347 = _303 * cbObjMatrix._m0[_323].w;
    precise float _348 = _303 * cbObjMatrix._m0[_330].w;
    uint _351 = (_314 + uint(float(BLENDINDICES.y))) * 3u;
    uint _358 = _351 + 1u;
    uint _365 = _351 + 2u;
    precise float _372 = _304 * cbObjMatrix._m0[_351].x;
    precise float _373 = _304 * cbObjMatrix._m0[_358].x;
    precise float _374 = _304 * cbObjMatrix._m0[_365].x;
    precise float _375 = _304 * cbObjMatrix._m0[_351].y;
    precise float _376 = _304 * cbObjMatrix._m0[_358].y;
    precise float _377 = _304 * cbObjMatrix._m0[_365].y;
    precise float _378 = _304 * cbObjMatrix._m0[_351].z;
    precise float _379 = _304 * cbObjMatrix._m0[_358].z;
    precise float _380 = _304 * cbObjMatrix._m0[_365].z;
    precise float _381 = _304 * cbObjMatrix._m0[_351].w;
    precise float _382 = _304 * cbObjMatrix._m0[_358].w;
    precise float _383 = _304 * cbObjMatrix._m0[_365].w;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    uint _398 = (_314 + uint(float(BLENDINDICES.z))) * 3u;
    uint _405 = _398 + 1u;
    uint _412 = _398 + 2u;
    precise float _419 = _305 * cbObjMatrix._m0[_398].x;
    precise float _420 = _305 * cbObjMatrix._m0[_405].x;
    precise float _421 = _305 * cbObjMatrix._m0[_412].x;
    precise float _422 = _305 * cbObjMatrix._m0[_398].y;
    precise float _423 = _305 * cbObjMatrix._m0[_405].y;
    precise float _424 = _305 * cbObjMatrix._m0[_412].y;
    precise float _425 = _305 * cbObjMatrix._m0[_398].z;
    precise float _426 = _305 * cbObjMatrix._m0[_405].z;
    precise float _427 = _305 * cbObjMatrix._m0[_412].z;
    precise float _428 = _305 * cbObjMatrix._m0[_398].w;
    precise float _429 = _305 * cbObjMatrix._m0[_405].w;
    precise float _430 = _305 * cbObjMatrix._m0[_412].w;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    uint _445 = (_314 + uint(float(BLENDINDICES.w))) * 3u;
    uint _452 = _445 + 1u;
    uint _459 = _445 + 2u;
    precise float _466 = _306 * cbObjMatrix._m0[_445].x;
    precise float _467 = _306 * cbObjMatrix._m0[_452].x;
    precise float _468 = _306 * cbObjMatrix._m0[_459].x;
    precise float _469 = _306 * cbObjMatrix._m0[_445].y;
    precise float _470 = _306 * cbObjMatrix._m0[_452].y;
    precise float _471 = _306 * cbObjMatrix._m0[_459].y;
    precise float _472 = _306 * cbObjMatrix._m0[_445].z;
    precise float _473 = _306 * cbObjMatrix._m0[_452].z;
    precise float _474 = _306 * cbObjMatrix._m0[_459].z;
    precise float _475 = _306 * cbObjMatrix._m0[_445].w;
    precise float _476 = _306 * cbObjMatrix._m0[_452].w;
    precise float _477 = _306 * cbObjMatrix._m0[_459].w;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = POSITION.x * _478;
    precise float _491 = POSITION.y * _481;
    precise float _492 = _491 + _490;
    precise float _493 = POSITION.z * _484;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * _487;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.x * _479;
    precise float _498 = POSITION.y * _482;
    precise float _499 = _498 + _497;
    precise float _500 = POSITION.z * _485;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _488;
    precise float _503 = _502 + _501;
    precise float _504 = POSITION.x * _480;
    precise float _505 = POSITION.y * _483;
    precise float _506 = _505 + _504;
    precise float _507 = POSITION.z * _486;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * _489;
    precise float _510 = _509 + _508;
    precise float _553 = _496 - cbSceneParam._m0[3u].x;
    precise float _554 = _503 - cbSceneParam._m0[3u].y;
    precise float _555 = _510 - cbSceneParam._m0[3u].z;
    precise float _583 = _553 * cbSceneParam._m0[24u].x;
    precise float _584 = _554 * cbSceneParam._m0[24u].y;
    precise float _585 = _584 + _583;
    precise float _586 = _555 * cbSceneParam._m0[24u].z;
    precise float _587 = _586 + _585;
    precise float _588 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _589 = _588 + _587;
    precise float _590 = _553 * cbSceneParam._m0[25u].x;
    precise float _591 = _554 * cbSceneParam._m0[25u].y;
    precise float _592 = _591 + _590;
    precise float _593 = _555 * cbSceneParam._m0[25u].z;
    precise float _594 = _593 + _592;
    precise float _595 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _596 = _595 + _594;
    precise float _597 = _553 * cbSceneParam._m0[26u].x;
    precise float _598 = _554 * cbSceneParam._m0[26u].y;
    precise float _599 = _598 + _597;
    precise float _600 = _555 * cbSceneParam._m0[26u].z;
    precise float _601 = _600 + _599;
    precise float _602 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _603 = _602 + _601;
    precise float _604 = _553 * cbSceneParam._m0[27u].x;
    precise float _605 = _554 * cbSceneParam._m0[27u].y;
    precise float _606 = _605 + _604;
    precise float _607 = _555 * cbSceneParam._m0[27u].z;
    precise float _608 = _607 + _606;
    precise float _609 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _610 = _609 + _608;
    gl_Position.x = _589;
    gl_Position.y = _596;
    gl_Position.z = _603;
    gl_Position.w = _610;
    POSITION_1.x = _589;
    POSITION_1.y = _596;
    POSITION_1.z = _603;
    POSITION_1.w = _610;
    NORMAL_1.x = fma(_247, _484, fma(_246, _481, _478 * _244));
    NORMAL_1.y = fma(_247, _485, fma(_246, _482, _479 * _244));
    NORMAL_1.z = fma(_247, _486, fma(_246, _483, _480 * _244));
    NORMAL_1.w = float(_295);
    TANGENT_1.x = fma(_258, _484, fma(_257, _481, _478 * _256));
    TANGENT_1.y = fma(_258, _485, fma(_257, _482, _479 * _256));
    TANGENT_1.z = fma(_258, _486, fma(_257, _483, _480 * _256));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_270, _484, fma(_269, _481, _478 * _268));
    TANGENT_2_1.y = fma(_270, _485, fma(_269, _482, _479 * _268));
    TANGENT_2_1.z = fma(_270, _486, fma(_269, _483, _480 * _268));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_282, _484, fma(_281, _481, _478 * _280));
    TANGENT_4_1.y = fma(_282, _485, fma(_281, _482, _479 * _280));
    TANGENT_4_1.z = fma(_282, _486, fma(_281, _483, _480 * _280));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_8.x = _603;
    TEXCOORD_8.y = _610;
    gl_ClipDistance[0u] = dot(vec4(_589, _596, _603, _610), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_589, _596, _603, _610), vec4(cbInstanceData._m0[_308 + 3u]));
}


