#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1173;
float _3608;
float _3609;
float _3610;
float _3611;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _194 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _195 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _196 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _201 = inversesqrt(dot(vec3(_194, _195, _196), vec3(_194, _195, _196)));
    float _202 = _201 * _194;
    float _203 = _201 * _195;
    float _204 = _201 * _196;
    float _208 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = _208 * NORMAL.x;
    float _210 = _208 * NORMAL.y;
    float _211 = _208 * NORMAL.z;
    float _215 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _216 = _215 * TANGENT.x;
    float _217 = _215 * TANGENT.y;
    float _218 = _215 * TANGENT.z;
    float _263 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _273 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _263);
    float _274 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _263);
    float _275 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _263);
    vec4 _288 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _291 = _288.x;
    vec4 _309 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _326 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _291) + cbMtdParam._m0[12u].x) * _309.x;
    float _328 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _291) + cbMtdParam._m0[12u].y) * _309.y;
    float _330 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _291) + cbMtdParam._m0[12u].z) * _309.z;
    vec4 _348 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _384 = cbMtdParam._m0[24u].x + _273;
    float _385 = cbMtdParam._m0[24u].y + _274;
    float _386 = cbMtdParam._m0[24u].z + _275;
    float _400 = (-0.0) - dot(vec3(_384, _385, _386), vec3(_202, _203, _204));
    float _401 = (-0.0) - dot(vec3(_384, _385, _386), vec3(_216, _217, _218));
    float _402 = (-0.0) - dot(vec3(_384, _385, _386), vec3((-0.0) - _209, (-0.0) - _210, (-0.0) - _211));
    float _406 = inversesqrt(dot(vec3(_400, _401, _402), vec3(_400, _401, _402)));
    float _409 = _406 * _402;
    float _410 = (_406 * _400) + ((cbMtdParam._m0[22u].x * _291) * ((_348.x * 2.0) + (-1.0)));
    float _411 = (_406 * _401) + ((cbMtdParam._m0[22u].y * _291) * ((_348.y * 2.0) + (-1.0)));
    float _412 = _410 * cbMtdParam._m0[20u].w;
    float _413 = _411 * cbMtdParam._m0[20u].z;
    float _414 = fract(TEXCOORD.x);
    float _415 = fract(TEXCOORD.y);
    float _421;
    if (_412 > 0.0)
    {
        _421 = (1.0 - _414) / _412;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_412 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _414) / _412;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _421 = frontier_phi_3_2_ladder;
    }
    float _429;
    if (_413 > 0.0)
    {
        _429 = (1.0 - _415) / _413;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_413 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _415) / _413;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _429 = frontier_phi_7_6_ladder;
    }
    bool _431 = _409 > 0.0;
    float _433 = _431 ? (cbMtdParam._m0[16u].x / _409) : 5000.0;
    float _434 = isnan(_429) ? _421 : (isnan(_421) ? _429 : min(_421, _429));
    float _435 = isnan(_433) ? _434 : (isnan(_434) ? _433 : min(_434, _433));
    float _439 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _440 = _414 + (-0.5);
    float _443 = _415 + (-0.5);
    float _446 = ((_435 * _409) + _439) / _439;
    vec4 _471 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_440 + (_435 * _412)) / _446) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_443 + (_435 * _413)) / _446) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _484 = (_471.x * _291) * cbMtdParam._m0[9u].x;
    float _485 = (_471.y * _291) * cbMtdParam._m0[9u].y;
    float _486 = (_471.z * _291) * cbMtdParam._m0[9u].z;
    float _505 = _410 * cbMtdParam._m0[22u].w;
    float _506 = _411 * cbMtdParam._m0[22u].z;
    bool _507 = _505 > 0.0;
    float _512;
    if (_507)
    {
        _512 = (1.0 - _414) / _505;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_505 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _414) / _505;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _512 = frontier_phi_11_10_ladder;
    }
    bool _514 = _506 > 0.0;
    float _519;
    if (_514)
    {
        _519 = (1.0 - _415) / _506;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_506 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _415) / _506;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _519 = frontier_phi_15_14_ladder;
    }
    float _522 = _431 ? (cbMtdParam._m0[18u].x / _409) : 5000.0;
    float _523 = isnan(_519) ? _512 : (isnan(_512) ? _519 : min(_512, _519));
    float _524 = isnan(_522) ? _523 : (isnan(_523) ? _522 : min(_523, _522));
    float _528 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _532 = ((_524 * _409) + _528) / _528;
    float _537 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _539 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _555 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_440 + (_524 * _505)) / _532) + 0.5) + _537) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_443 + (_524 * _506)) / _532) + 0.5) + _539) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _570;
    if (_507)
    {
        _570 = (1.0 - _414) / _505;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_505 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _414) / _505;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _570 = frontier_phi_19_18_ladder;
    }
    float _576;
    if (_514)
    {
        _576 = (1.0 - _415) / _506;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_506 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _415) / _506;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _576 = frontier_phi_23_22_ladder;
    }
    float _578 = isnan(_576) ? _570 : (isnan(_570) ? _576 : min(_570, _576));
    float _579 = isnan(_522) ? _578 : (isnan(_578) ? _522 : min(_578, _522));
    float _586 = ((_579 * _409) + _528) / _528;
    vec4 _606 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_440 + (_579 * _505)) / _586) + 0.5) + _537) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_443 + (_579 * _506)) / _586) + 0.5) + _539) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _608 = _606.x;
    vec4 _633 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _637 = _633.z;
    float _640 = (_633.x * 2.0) + (-1.0);
    float _641 = (_633.y * 2.0) + (-1.0);
    float _642 = dot(vec2(_640, _641), vec2(_640, _641));
    float _3650 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _647 = sqrt(1.0 - (isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0))));
    float _650 = fma(_647, _209, fma(_641, _216, _640 * _202));
    float _653 = fma(_647, _210, fma(_641, _217, _640 * _203));
    float _656 = fma(_647, _211, fma(_641, _218, _640 * _204));
    float _660 = inversesqrt(dot(vec3(_650, _653, _656), vec3(_650, _653, _656)));
    float _661 = _660 * _650;
    float _662 = _660 * _653;
    float _663 = _660 * _656;
    float _3661 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _664 = isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0));
    float _3672 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _3683 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _3694 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _683 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _687 = inversesqrt(dot(vec3(_273, _274, _275), vec3(_273, _274, _275)));
    float _688 = _273 * _687;
    float _689 = _274 * _687;
    float _690 = _275 * _687;
    vec4 _695 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _697 = _695.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _854 = sqrt(((_273 * _273) + (_274 * _274)) + (_275 * _275));
        float _860 = (cbMatDynParam._m0[5u].x * _854) + cbMatDynParam._m0[5u].y;
        float _3705 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
        float _861 = isnan(1.0) ? _3705 : (isnan(_3705) ? 1.0 : min(_3705, 1.0));
        float _865 = (cbMatDynParam._m0[5u].z * _854) + cbMatDynParam._m0[5u].w;
        float _3716 = isnan(0.0) ? _865 : (isnan(_865) ? 0.0 : max(_865, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3716 : (isnan(_3716) ? 1.0 : min(_3716, 1.0))) - _861)) + _861) < ((_697 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _709 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _710 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _729 = fma(_663, cbSceneParam._m0[5u].z, fma(_662, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _661));
    float _732 = fma(_663, cbSceneParam._m0[6u].z, fma(_662, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _661));
    float _735 = fma(_663, cbSceneParam._m0[7u].z, fma(_662, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _661));
    uint _748 = uint(roundEven(NORMAL.w)) * 13u;
    uint _750 = _748 + 9u;
    uint _751 = _750 + uint(cbMatDynParam._m0[0u].w);
    float _757 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0)))) * cbInstanceData._m0[_751].x;
    float _758 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0)))) * cbInstanceData._m0[_751].y;
    float _759 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3694 : (isnan(_3694) ? 1.0 : min(_3694, 1.0)))) * cbInstanceData._m0[_751].z;
    float _3727 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _760 = isnan(1.0) ? _3727 : (isnan(_3727) ? 1.0 : min(_3727, 1.0));
    float _3738 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _761 = isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0));
    float _3749 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _762 = isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0));
    vec4 _771 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _709, cbSceneParam._m0[86u].y * _710));
    float _774 = _771.x * TEXCOORD_4.z;
    float _775 = dot(vec3(_661, _662, _663), vec3(_688, _689, _690));
    float _778 = _775 * 2.0;
    float _782 = (_778 * _661) - _688;
    float _783 = (_778 * _662) - _689;
    float _784 = (_778 * _663) - _690;
    float _788 = abs(dot(vec3(_688, _689, _690), vec3(_661, _662, _663)));
    float _3760 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _790 = sqrt(_664);
    float _803 = exp2((_790 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_790 * 3.0));
    float _835 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _839 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _843 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1172;
    float _1174;
    float _1175;
    float _1176;
    float _1177;
    float _1178;
    float _1179;
    float _1180;
    float _1181;
    float _1182;
    float _1183;
    float _1184;
    float _1185;
    float _1186;
    float _1187;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _899 = fma(_843, cbModelParam._m0[26u].z, fma(_839, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _835));
        float _903 = fma(_843, cbModelParam._m0[27u].z, fma(_839, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _835));
        float _907 = fma(_843, cbModelParam._m0[28u].z, fma(_839, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _835));
        float _930 = _835 + _661;
        float _931 = _839 + _662;
        float _932 = _843 + _663;
        float _942 = fma(_932, cbModelParam._m0[26u].z, fma(_931, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _930)) - _899;
        float _943 = fma(_932, cbModelParam._m0[27u].z, fma(_931, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _930)) - _903;
        float _944 = fma(_932, cbModelParam._m0[28u].z, fma(_931, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _930)) - _907;
        float _948 = inversesqrt(dot(vec3(_942, _943, _944), vec3(_942, _943, _944)));
        float _961 = ((_948 * _942) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_899 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _962 = ((_948 * _943) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_903 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _963 = ((_948 * _944) / cbModelParam._m0[34u].z) + ((((((_907 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _966 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _973 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _980 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        vec4 _987 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_961, _962, _963), 0.0);
        float _1000 = exp2((_966.w + (-0.5)) * 20.0) * 2.0;
        float _1001 = _1000 * (_966.x + (-0.5));
        float _1002 = _1000 * (_966.y + (-0.5));
        float _1003 = _1000 * (_966.z + (-0.5));
        float _1010 = exp2((_973.w + (-0.5)) * 20.0) * 2.0;
        float _1011 = _1010 * (_973.x + (-0.5));
        float _1012 = _1010 * (_973.y + (-0.5));
        float _1013 = _1010 * (_973.z + (-0.5));
        float _1020 = exp2((_980.w + (-0.5)) * 20.0) * 2.0;
        float _1021 = _1020 * (_980.x + (-0.5));
        float _1022 = _1020 * (_980.y + (-0.5));
        float _1023 = _1020 * (_980.z + (-0.5));
        float _1030 = exp2((_987.w + (-0.5)) * 20.0) * 2.0;
        float _1031 = _1030 * (_987.x + (-0.5));
        float _1032 = _1030 * (_987.y + (-0.5));
        float _1033 = _1030 * (_987.z + (-0.5));
        float _1034 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
        float _1035 = isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0));
        float _1036 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
        float _1037 = _1001 * 0.5;
        float _1038 = _1011 * 0.5;
        float _1039 = _1021 * 0.5;
        float _1040 = dot(vec3(_1037, _1038, _1039), vec3(_1037, _1038, _1039));
        float _1045 = (_1040 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1040);
        float _1054 = (dot(vec3(_661, _662, _663), vec3(_1045 * _1037, _1045 * _1038, _1045 * _1039)) + 1.0) * 0.5;
        float _3786 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1064 = sqrt(((_1038 * _1038) + (_1037 * _1037)) + (_1039 * _1039)) / (_1034 + 9.9999997473787516355514526367188e-06);
        float _3797 = isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0));
        float _1065 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
        float _1066 = _1065 * 2.0;
        float _1070 = (1.0 - _1065) / (_1065 + 1.0);
        float _3808 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1071 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
        float _1080 = ((((1.0 - _1071) * (_1066 + 2.0)) * exp2(log2(isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0))) * (_1066 + 1.0))) + _1071) * _1034;
        float _1081 = _1002 * 0.5;
        float _1082 = _1012 * 0.5;
        float _1083 = _1022 * 0.5;
        float _1084 = dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083));
        float _1089 = (_1084 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1084);
        float _1097 = (dot(vec3(_661, _662, _663), vec3(_1089 * _1081, _1089 * _1082, _1089 * _1083)) + 1.0) * 0.5;
        float _3819 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1106 = sqrt(((_1082 * _1082) + (_1081 * _1081)) + (_1083 * _1083)) / (_1035 + 9.9999997473787516355514526367188e-06);
        float _3830 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1107 = isnan(1.0) ? _3830 : (isnan(_3830) ? 1.0 : min(_3830, 1.0));
        float _1108 = _1107 * 2.0;
        float _1112 = (1.0 - _1107) / (_1107 + 1.0);
        float _3841 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0));
        float _1122 = ((((1.0 - _1113) * (_1108 + 2.0)) * exp2(log2(isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0))) * (_1108 + 1.0))) + _1113) * _1035;
        float _1123 = _1003 * 0.5;
        float _1124 = _1013 * 0.5;
        float _1125 = _1023 * 0.5;
        float _1126 = dot(vec3(_1123, _1124, _1125), vec3(_1123, _1124, _1125));
        float _1131 = (_1126 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1126);
        float _1139 = (dot(vec3(_661, _662, _663), vec3(_1131 * _1123, _1131 * _1124, _1131 * _1125)) + 1.0) * 0.5;
        float _3852 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1148 = sqrt(((_1124 * _1124) + (_1123 * _1123)) + (_1125 * _1125)) / (_1036 + 9.9999997473787516355514526367188e-06);
        float _3863 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1149 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
        float _1150 = _1149 * 2.0;
        float _1154 = (1.0 - _1149) / (_1149 + 1.0);
        float _3874 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
        float _1164 = ((((1.0 - _1155) * (_1150 + 2.0)) * exp2(log2(isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0))) * (_1150 + 1.0))) + _1155) * _1036;
        _1172 = _1003;
        _1174 = _1002;
        _1175 = _1001;
        _1176 = _1013;
        _1177 = _1012;
        _1178 = _1011;
        _1179 = _1023;
        _1180 = _1022;
        _1181 = _1021;
        _1182 = _1036;
        _1183 = _1035;
        _1184 = _1034;
        _1185 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0)));
        _1186 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0)));
        _1187 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0)));
    }
    else
    {
        _1172 = _1173;
        _1174 = _1173;
        _1175 = _1173;
        _1176 = _1173;
        _1177 = _1173;
        _1178 = _1173;
        _1179 = _1173;
        _1180 = _1173;
        _1181 = _1173;
        _1182 = _1173;
        _1183 = _1173;
        _1184 = _1173;
        _1185 = 0.0;
        _1186 = 0.0;
        _1187 = 0.0;
    }
    float _1485;
    float _1486;
    float _1487;
    float _1488;
    float _1489;
    float _1490;
    float _1491;
    float _1492;
    float _1493;
    float _1494;
    float _1495;
    float _1496;
    float _1497;
    float _1498;
    float _1499;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1216 = fma(_843, cbModelParam._m0[30u].z, fma(_839, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _835));
        float _1220 = fma(_843, cbModelParam._m0[31u].z, fma(_839, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _835));
        float _1224 = fma(_843, cbModelParam._m0[32u].z, fma(_839, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _835));
        float _1247 = _835 + _661;
        float _1248 = _839 + _662;
        float _1249 = _843 + _663;
        float _1259 = fma(_1249, cbModelParam._m0[30u].z, fma(_1248, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1247)) - _1216;
        float _1260 = fma(_1249, cbModelParam._m0[31u].z, fma(_1248, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1247)) - _1220;
        float _1261 = fma(_1249, cbModelParam._m0[32u].z, fma(_1248, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1247)) - _1224;
        float _1265 = inversesqrt(dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261)));
        float _1278 = ((_1265 * _1259) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1216 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1279 = ((_1265 * _1260) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1220 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1280 = ((_1265 * _1261) / cbModelParam._m0[35u].z) + ((((((_1224 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1282 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1289 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1296 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        vec4 _1303 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1278, _1279, _1280), 0.0);
        float _1315 = exp2((_1282.w + (-0.5)) * 20.0) * 2.0;
        float _1316 = _1315 * (_1282.x + (-0.5));
        float _1317 = _1315 * (_1282.y + (-0.5));
        float _1318 = _1315 * (_1282.z + (-0.5));
        float _1325 = exp2((_1289.w + (-0.5)) * 20.0) * 2.0;
        float _1326 = _1325 * (_1289.x + (-0.5));
        float _1327 = _1325 * (_1289.y + (-0.5));
        float _1328 = _1325 * (_1289.z + (-0.5));
        float _1335 = exp2((_1296.w + (-0.5)) * 20.0) * 2.0;
        float _1336 = _1335 * (_1296.x + (-0.5));
        float _1337 = _1335 * (_1296.y + (-0.5));
        float _1338 = _1335 * (_1296.z + (-0.5));
        float _1345 = exp2((_1303.w + (-0.5)) * 20.0) * 2.0;
        float _1346 = _1345 * (_1303.x + (-0.5));
        float _1347 = _1345 * (_1303.y + (-0.5));
        float _1348 = _1345 * (_1303.z + (-0.5));
        float _1349 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
        float _1350 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1351 = isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0));
        float _1352 = _1316 * 0.5;
        float _1353 = _1326 * 0.5;
        float _1354 = _1336 * 0.5;
        float _1355 = dot(vec3(_1352, _1353, _1354), vec3(_1352, _1353, _1354));
        float _1360 = (_1355 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1355);
        float _1368 = (dot(vec3(_661, _662, _663), vec3(_1360 * _1352, _1360 * _1353, _1360 * _1354)) + 1.0) * 0.5;
        float _3915 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1377 = sqrt(((_1353 * _1353) + (_1352 * _1352)) + (_1354 * _1354)) / (_1349 + 9.9999997473787516355514526367188e-06);
        float _3926 = isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0));
        float _1378 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
        float _1379 = _1378 * 2.0;
        float _1383 = (1.0 - _1378) / (_1378 + 1.0);
        float _3937 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1384 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
        float _1393 = ((((1.0 - _1384) * (_1379 + 2.0)) * exp2(log2(isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0))) * (_1379 + 1.0))) + _1384) * _1349;
        float _1394 = _1317 * 0.5;
        float _1395 = _1327 * 0.5;
        float _1396 = _1337 * 0.5;
        float _1397 = dot(vec3(_1394, _1395, _1396), vec3(_1394, _1395, _1396));
        float _1402 = (_1397 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1397);
        float _1410 = (dot(vec3(_661, _662, _663), vec3(_1402 * _1394, _1402 * _1395, _1402 * _1396)) + 1.0) * 0.5;
        float _3948 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1419 = sqrt(((_1395 * _1395) + (_1394 * _1394)) + (_1396 * _1396)) / (_1350 + 9.9999997473787516355514526367188e-06);
        float _3959 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
        float _1420 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
        float _1421 = _1420 * 2.0;
        float _1425 = (1.0 - _1420) / (_1420 + 1.0);
        float _3970 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1426 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
        float _1435 = ((((1.0 - _1426) * (_1421 + 2.0)) * exp2(log2(isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0))) * (_1421 + 1.0))) + _1426) * _1350;
        float _1436 = _1318 * 0.5;
        float _1437 = _1328 * 0.5;
        float _1438 = _1338 * 0.5;
        float _1439 = dot(vec3(_1436, _1437, _1438), vec3(_1436, _1437, _1438));
        float _1444 = (_1439 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1439);
        float _1452 = (dot(vec3(_661, _662, _663), vec3(_1444 * _1436, _1444 * _1437, _1444 * _1438)) + 1.0) * 0.5;
        float _3981 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1461 = sqrt(((_1437 * _1437) + (_1436 * _1436)) + (_1438 * _1438)) / (_1351 + 9.9999997473787516355514526367188e-06);
        float _3992 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
        float _1462 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
        float _1463 = _1462 * 2.0;
        float _1467 = (1.0 - _1462) / (_1462 + 1.0);
        float _4003 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
        float _1477 = ((((1.0 - _1468) * (_1463 + 2.0)) * exp2(log2(isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0))) * (_1463 + 1.0))) + _1468) * _1351;
        _1485 = _1318;
        _1486 = _1317;
        _1487 = _1316;
        _1488 = _1328;
        _1489 = _1327;
        _1490 = _1326;
        _1491 = _1338;
        _1492 = _1337;
        _1493 = _1336;
        _1494 = _1351;
        _1495 = _1350;
        _1496 = _1349;
        _1497 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0)));
        _1498 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0)));
        _1499 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0)));
    }
    else
    {
        _1485 = _1173;
        _1486 = _1173;
        _1487 = _1173;
        _1488 = _1173;
        _1489 = _1173;
        _1490 = _1173;
        _1491 = _1173;
        _1492 = _1173;
        _1493 = _1173;
        _1494 = _1173;
        _1495 = _1173;
        _1496 = _1173;
        _1497 = 0.0;
        _1498 = 0.0;
        _1499 = 0.0;
    }
    float _1509 = (cbModelParam._m0[1u].x * (_1497 - _1185)) + _1185;
    float _1510 = (cbModelParam._m0[1u].x * (_1498 - _1186)) + _1186;
    float _1511 = (cbModelParam._m0[1u].x * (_1499 - _1187)) + _1187;
    float _1532 = fma(_1511, cbSceneParam._m0[89u].z, fma(_1510, cbSceneParam._m0[89u].y, _1509 * cbSceneParam._m0[89u].x));
    float _1535 = fma(_1511, cbSceneParam._m0[90u].z, fma(_1510, cbSceneParam._m0[90u].y, _1509 * cbSceneParam._m0[90u].x));
    float _1538 = fma(_1511, cbSceneParam._m0[91u].z, fma(_1510, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1509));
    float _1553 = _782 * 0.5;
    float _1554 = _783 * 0.5;
    float _1555 = _784 * 0.5;
    float _1556 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1487, _1490, _1493, _1496));
    float _1559 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1486, _1489, _1492, _1495));
    float _1562 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1485, _1488, _1491, _1494));
    float _1596;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1569 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1172, _1176, _1179, _1182));
        float _1573 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1174, _1177, _1180, _1183));
        float _1577 = dot(vec4(_1553, _1554, _1555, 1.0), vec4(_1175, _1178, _1181, _1184));
        float _1584 = dot(vec4(cbModelParam._m0[39u]), vec4(_1553, _1554, _1555, 1.0));
        _1596 = dot(vec3(isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0)), isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0)), isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1584) ? 0.0 : (isnan(0.0) ? _1584 : max(0.0, _1584))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1596 = 1.0;
    }
    float _1607;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1598 = dot(vec4(cbModelParam._m0[40u]), vec4(_1553, _1554, _1555, 1.0));
        _1607 = dot(vec3(isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0)), isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0)), isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1598) ? 0.0 : (isnan(0.0) ? _1598 : max(0.0, _1598))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1607 = 1.0;
    }
    float _1611 = (_1607 * cbModelParam._m0[1u].x) + (_1596 * (1.0 - cbModelParam._m0[1u].x));
    float _1621 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _664);
    float _1622 = isnan(_1621) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1621 : min(cbModelParam._m0[25u].z, _1621));
    float _1704;
    float _1706;
    float _1708;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1671 = fma(_843, cbModelParam._m0[13u].z, fma(_839, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _835)) + cbModelParam._m0[13u].w;
        float _1675 = fma(_843, cbModelParam._m0[14u].z, fma(_839, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _835)) + cbModelParam._m0[14u].w;
        float _1679 = fma(_843, cbModelParam._m0[15u].z, fma(_839, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _835)) + cbModelParam._m0[15u].w;
        float _1682 = fma(_784, cbModelParam._m0[13u].z, fma(_783, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _782));
        float _1685 = fma(_784, cbModelParam._m0[14u].z, fma(_783, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _782));
        float _1688 = fma(_784, cbModelParam._m0[15u].z, fma(_783, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _782));
        float _1716;
        if (_1682 > 0.0)
        {
            _1716 = abs((1.0 - _1671) / _1682);
        }
        else
        {
            float frontier_phi_41_39_ladder;
            if (_1682 < 0.0)
            {
                frontier_phi_41_39_ladder = abs((_1671 + 1.0) / _1682);
            }
            else
            {
                frontier_phi_41_39_ladder = 5000.0;
            }
            _1716 = frontier_phi_41_39_ladder;
        }
        float _1884;
        if (_1685 > 0.0)
        {
            _1884 = abs((1.0 - _1675) / _1685);
        }
        else
        {
            float frontier_phi_50_46_ladder;
            if (_1685 < 0.0)
            {
                frontier_phi_50_46_ladder = abs((_1675 + 1.0) / _1685);
            }
            else
            {
                frontier_phi_50_46_ladder = 5000.0;
            }
            _1884 = frontier_phi_50_46_ladder;
        }
        float _2328;
        if (_1688 > 0.0)
        {
            _2328 = abs((1.0 - _1679) / _1688);
        }
        else
        {
            float frontier_phi_62_57_ladder;
            if (_1688 < 0.0)
            {
                frontier_phi_62_57_ladder = abs((_1679 + 1.0) / _1688);
            }
            else
            {
                frontier_phi_62_57_ladder = 5000.0;
            }
            _2328 = frontier_phi_62_57_ladder;
        }
        float _2330 = isnan(_1884) ? _1716 : (isnan(_1716) ? _1884 : min(_1716, _1884));
        float _2331 = isnan(_2328) ? _2330 : (isnan(_2330) ? _2328 : min(_2330, _2328));
        float _2335 = (_2331 * _1682) + _1671;
        float _2336 = (_2331 * _1685) + _1675;
        float _2337 = (_2331 * _1688) + _1679;
        float _2338 = _2331 * 9.9999997473787516355514526367188e-05;
        float _2340 = (-1.0) - _2338;
        float _2342 = _2338 + 1.0;
        float frontier_phi_40_62_ladder;
        float frontier_phi_40_62_ladder_1;
        float frontier_phi_40_62_ladder_2;
        if ((_2337 > _2342) || ((_2337 < _2340) || ((_2336 > _2342) || ((_2336 < _2340) || ((_2335 < _2340) || (_2335 > _2342))))))
        {
            frontier_phi_40_62_ladder = 0.0;
            frontier_phi_40_62_ladder_1 = 0.0;
            frontier_phi_40_62_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2587 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2337, cbModelParam._m0[9u].z, fma(_2336, cbModelParam._m0[9u].y, _2335 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2337, cbModelParam._m0[10u].z, fma(_2336, cbModelParam._m0[10u].y, _2335 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2337, cbModelParam._m0[11u].z, fma(_2336, cbModelParam._m0[11u].y, _2335 * cbModelParam._m0[11u].x))), _1622);
            frontier_phi_40_62_ladder = _2587.z * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_1 = _2587.y * cbModelParam._m0[1u].y;
            frontier_phi_40_62_ladder_2 = _2587.x * cbModelParam._m0[1u].y;
        }
        _1704 = frontier_phi_40_62_ladder_2;
        _1706 = frontier_phi_40_62_ladder_1;
        _1708 = frontier_phi_40_62_ladder;
    }
    else
    {
        vec4 _1692 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_782, _783, _784), _1622);
        _1704 = _1692.x * cbModelParam._m0[1u].y;
        _1706 = _1692.y * cbModelParam._m0[1u].y;
        _1708 = _1692.z * cbModelParam._m0[1u].y;
    }
    float _1712 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _664);
    float _1713 = isnan(_1712) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1712 : min(cbModelParam._m0[25u].w, _1712));
    float _1801;
    float _1803;
    float _1805;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1765 = fma(_843, cbModelParam._m0[21u].z, fma(_839, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _835)) + cbModelParam._m0[21u].w;
        float _1769 = fma(_843, cbModelParam._m0[22u].z, fma(_839, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _835)) + cbModelParam._m0[22u].w;
        float _1773 = fma(_843, cbModelParam._m0[23u].z, fma(_839, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _835)) + cbModelParam._m0[23u].w;
        float _1776 = fma(_784, cbModelParam._m0[21u].z, fma(_783, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _782));
        float _1779 = fma(_784, cbModelParam._m0[22u].z, fma(_783, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _782));
        float _1782 = fma(_784, cbModelParam._m0[23u].z, fma(_783, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _782));
        float _1889;
        if (_1776 > 0.0)
        {
            _1889 = abs((1.0 - _1765) / _1776);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1776 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1765 + 1.0) / _1776);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1889 = frontier_phi_52_48_ladder;
        }
        float _2355;
        if (_1779 > 0.0)
        {
            _2355 = abs((1.0 - _1769) / _1779);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1779 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1769 + 1.0) / _1779);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _2355 = frontier_phi_64_59_ladder;
        }
        float _2716;
        if (_1782 > 0.0)
        {
            _2716 = abs((1.0 - _1773) / _1782);
        }
        else
        {
            float frontier_phi_76_71_ladder;
            if (_1782 < 0.0)
            {
                frontier_phi_76_71_ladder = abs((_1773 + 1.0) / _1782);
            }
            else
            {
                frontier_phi_76_71_ladder = 5000.0;
            }
            _2716 = frontier_phi_76_71_ladder;
        }
        float _2718 = isnan(_2355) ? _1889 : (isnan(_1889) ? _2355 : min(_1889, _2355));
        float _2719 = isnan(_2716) ? _2718 : (isnan(_2718) ? _2716 : min(_2718, _2716));
        float _2723 = (_2719 * _1776) + _1765;
        float _2724 = (_2719 * _1779) + _1769;
        float _2725 = (_2719 * _1782) + _1773;
        float _2726 = _2719 * 9.9999997473787516355514526367188e-05;
        float _2727 = (-1.0) - _2726;
        float _2729 = _2726 + 1.0;
        float frontier_phi_49_76_ladder;
        float frontier_phi_49_76_ladder_1;
        float frontier_phi_49_76_ladder_2;
        if ((_2725 > _2729) || ((_2725 < _2727) || ((_2724 > _2729) || ((_2724 < _2727) || ((_2723 < _2727) || (_2723 > _2729))))))
        {
            frontier_phi_49_76_ladder = 0.0;
            frontier_phi_49_76_ladder_1 = 0.0;
            frontier_phi_49_76_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2862 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2725, cbModelParam._m0[17u].z, fma(_2724, cbModelParam._m0[17u].y, _2723 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2725, cbModelParam._m0[18u].z, fma(_2724, cbModelParam._m0[18u].y, _2723 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2725, cbModelParam._m0[19u].z, fma(_2724, cbModelParam._m0[19u].y, _2723 * cbModelParam._m0[19u].x))), _1713);
            frontier_phi_49_76_ladder = _2862.z * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_1 = _2862.x * cbModelParam._m0[1u].z;
            frontier_phi_49_76_ladder_2 = _2862.y * cbModelParam._m0[1u].z;
        }
        _1801 = frontier_phi_49_76_ladder_1;
        _1803 = frontier_phi_49_76_ladder_2;
        _1805 = frontier_phi_49_76_ladder;
    }
    else
    {
        vec4 _1785 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_782, _783, _784), _1713);
        _1801 = _1785.x * cbModelParam._m0[1u].z;
        _1803 = _1785.y * cbModelParam._m0[1u].z;
        _1805 = _1785.z * cbModelParam._m0[1u].z;
    }
    float _1817 = ((((1.0 - _803) * ((_790 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_803 * _790)) * _774;
    float _1818 = _1817 * ((cbModelParam._m0[1u].w * (_1801 - _1704)) + _1704);
    float _1819 = _1817 * ((cbModelParam._m0[1u].w * (_1803 - _1706)) + _1706);
    float _1820 = _1817 * ((cbModelParam._m0[1u].w * (_1805 - _1708)) + _1708);
    float _1823 = fma(_1820, cbSceneParam._m0[89u].z, fma(_1819, cbSceneParam._m0[89u].y, _1818 * cbSceneParam._m0[89u].x));
    float _1826 = fma(_1820, cbSceneParam._m0[90u].z, fma(_1819, cbSceneParam._m0[90u].y, _1818 * cbSceneParam._m0[90u].x));
    float _1829 = fma(_1820, cbSceneParam._m0[91u].z, fma(_1819, cbSceneParam._m0[91u].y, _1818 * cbSceneParam._m0[91u].x));
    float _1863 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1867 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1871 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1875 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1876 = _1863 / _1875;
    float _1877 = _1867 / _1875;
    float _1878 = _1871 / _1875;
    float _2025;
    float _2026;
    float _2027;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1905 = ((uint(_1878 > cbSceneParam._m0[59u].y) + uint(_1878 > cbSceneParam._m0[59u].x)) + uint(_1878 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1906 = _1905 + 43u;
        uint _1914 = _1905 + 44u;
        uint _1922 = _1905 + 45u;
        uint _1930 = _1905 + 46u;
        float _1941 = fma(_1875, cbSceneParam._m0[_1906].w, fma(_1871, cbSceneParam._m0[_1906].z, fma(_1867, cbSceneParam._m0[_1906].y, _1863 * cbSceneParam._m0[_1906].x)));
        float _1945 = fma(_1875, cbSceneParam._m0[_1914].w, fma(_1871, cbSceneParam._m0[_1914].z, fma(_1867, cbSceneParam._m0[_1914].y, _1863 * cbSceneParam._m0[_1914].x)));
        float _1953 = fma(_1875, cbSceneParam._m0[_1930].w, fma(_1871, cbSceneParam._m0[_1930].z, fma(_1867, cbSceneParam._m0[_1930].y, _1863 * cbSceneParam._m0[_1930].x)));
        float _1958 = cbSceneParam._m0[33u].z * _1953;
        float _1960 = cbSceneParam._m0[33u].w * _1953;
        float _1963 = fma(_1875, cbSceneParam._m0[_1922].w, fma(_1871, cbSceneParam._m0[_1922].z, fma(_1867, cbSceneParam._m0[_1922].y, _1863 * cbSceneParam._m0[_1922].x))) / _1953;
        float _2011 = (cbSceneParam._m0[33u].x - sqrt(((_1877 * _1877) + (_1876 * _1876)) + (_1878 * _1878))) * cbSceneParam._m0[33u].y;
        float _4129 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0));
        float _2018 = (isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1958 + _1941) / _1953, (_1960 + _1945) / _1953), _1963), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1960 + _1941) / _1953, (_1945 - _1958) / _1953), _1963), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1941 - _1958) / _1953, (_1945 - _1960) / _1953), _1963), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1941 - _1960) / _1953, (_1958 + _1945) / _1953), _1963), 0.0)).x), vec4(0.25)));
        _2025 = 1.0 - (_2018 * cbSceneParam._m0[34u].x);
        _2026 = 1.0 - (_2018 * cbSceneParam._m0[34u].y);
        _2027 = 1.0 - (_2018 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2025 = 1.0;
        _2026 = 1.0;
        _2027 = 1.0;
    }
    float _2091;
    float _2093;
    float _2095;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2079 = fma(_1875, cbSceneParam._m0[63u].w, fma(_1871, cbSceneParam._m0[63u].z, fma(_1867, cbSceneParam._m0[63u].y, _1863 * cbSceneParam._m0[63u].x)));
        float _2080 = fma(_1875, cbSceneParam._m0[60u].w, fma(_1871, cbSceneParam._m0[60u].z, fma(_1867, cbSceneParam._m0[60u].y, _1863 * cbSceneParam._m0[60u].x))) / _2079;
        float _2081 = fma(_1875, cbSceneParam._m0[61u].w, fma(_1871, cbSceneParam._m0[61u].z, fma(_1867, cbSceneParam._m0[61u].y, _1863 * cbSceneParam._m0[61u].x))) / _2079;
        float frontier_phi_61_60_ladder;
        float frontier_phi_61_60_ladder_1;
        float frontier_phi_61_60_ladder_2;
        if ((((_2080 >= cbSceneParam._m0[64u].x) && (_2081 >= cbSceneParam._m0[64u].y)) && (_2080 <= cbSceneParam._m0[64u].z)) && (_2081 <= cbSceneParam._m0[64u].w))
        {
            float _2368 = fma(_1875, cbSceneParam._m0[62u].w, fma(_1871, cbSceneParam._m0[62u].z, fma(_1867, cbSceneParam._m0[62u].y, _1863 * cbSceneParam._m0[62u].x))) / _2079;
            float _2372 = isnan(cbSceneParam._m0[41u].w) ? _2368 : (isnan(_2368) ? cbSceneParam._m0[41u].w : max(_2368, cbSceneParam._m0[41u].w));
            float _2415 = (cbSceneParam._m0[33u].x - sqrt(((_1877 * _1877) + (_1876 * _1876)) + (_1878 * _1878))) * cbSceneParam._m0[33u].y;
            float _4145 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
            float _2422 = (isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2080, cbSceneParam._m0[33u].w + _2081), _2372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2080, _2081 - cbSceneParam._m0[33u].z), _2372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2080 - cbSceneParam._m0[33u].z, _2081 - cbSceneParam._m0[33u].w), _2372), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2080 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2081), _2372), 0.0)).x), vec4(0.25)));
            float _2426 = 1.0 - (_2422 * cbSceneParam._m0[34u].x);
            float _2427 = 1.0 - (_2422 * cbSceneParam._m0[34u].y);
            float _2428 = 1.0 - (_2422 * cbSceneParam._m0[34u].z);
            frontier_phi_61_60_ladder = isnan(_2428) ? _2027 : (isnan(_2027) ? _2428 : min(_2027, _2428));
            frontier_phi_61_60_ladder_1 = isnan(_2427) ? _2026 : (isnan(_2026) ? _2427 : min(_2026, _2427));
            frontier_phi_61_60_ladder_2 = isnan(_2426) ? _2025 : (isnan(_2025) ? _2426 : min(_2025, _2426));
        }
        else
        {
            frontier_phi_61_60_ladder = _2027;
            frontier_phi_61_60_ladder_1 = _2026;
            frontier_phi_61_60_ladder_2 = _2025;
        }
        _2091 = frontier_phi_61_60_ladder_2;
        _2093 = frontier_phi_61_60_ladder_1;
        _2095 = frontier_phi_61_60_ladder;
    }
    else
    {
        _2091 = _2025;
        _2093 = _2026;
        _2095 = _2027;
    }
    uvec4 _2100 = floatBitsToUint(cbInstanceData._m0[_748 + 5u]);
    uint _2102 = _2100.x * 14u;
    uint _2103 = _2102 + 13u;
    float _2108 = _774 + (-1.0);
    float _2111 = (cbLight._m0[_2103].x * _2108) + 1.0;
    float _2112 = (cbLight._m0[_2103].y * _2108) + 1.0;
    uint _2113 = _2102 + 5u;
    float _2119 = isnan(1.0) ? _2112 : (isnan(_2112) ? 1.0 : min(_2112, 1.0));
    uint _2123 = _2102 + 4u;
    float _2132 = isnan(1.0) ? _2111 : (isnan(_2111) ? 1.0 : min(_2111, 1.0));
    uint _2136 = _2102 | 1u;
    float _2147 = dot(vec3(cbLight._m0[_2102].xyz), vec3(_661, _662, _663));
    float _2150 = dot(vec3(cbLight._m0[_2136].xyz), vec3(_661, _662, _663));
    float _4181 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
    float _4192 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
    float _2155 = (isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0))) * 0.3183098733425140380859375;
    float _2157 = (isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0))) * 0.3183098733425140380859375;
    float _2164 = ((cbLight._m0[_2113].x * _2119) * _2157) + (((cbLight._m0[_2123].x * _2091) * _2132) * _2155);
    float _2165 = ((_2119 * cbLight._m0[_2113].y) * _2157) + (((cbLight._m0[_2123].y * _2093) * _2132) * _2155);
    float _2166 = ((_2119 * cbLight._m0[_2113].z) * _2157) + (((cbLight._m0[_2123].z * _2095) * _2132) * _2155);
    uint _2168 = _2102 + 8u;
    float _2181 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2102].w)) * _664) * 0.949999988079071044921875);
    float _2182 = _2181 * _2181;
    float _2183 = cbLight._m0[_2102].x + _688;
    float _2184 = cbLight._m0[_2102].y + _689;
    float _2185 = cbLight._m0[_2102].z + _690;
    float _2189 = inversesqrt(dot(vec3(_2183, _2184, _2185), vec3(_2183, _2184, _2185)));
    float _2190 = _2189 * _2183;
    float _2191 = _2189 * _2184;
    float _2192 = _2189 * _2185;
    float _2193 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2102].xyz));
    float _4203 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
    float _2196 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _4214 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _2197 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _2198 = dot(vec3(_661, _662, _663), vec3(_2190, _2191, _2192));
    float _4225 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    float _2201 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _2202 = dot(vec3(cbLight._m0[_2102].xyz), vec3(_2190, _2191, _2192));
    float _4236 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _2206 = _2182 * _2182;
    float _2210 = ((_2201 * _2201) * (_2206 + (-1.0))) + 1.0;
    float _2221 = (exp2(log2(1.0 - (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2222 = 1.0 - _2182;
    float _2233 = (0.5 / (((_2197 * ((_2196 * _2222) + _2182)) + 9.9999999392252902907785028219223e-09) + (((_2197 * _2222) + _2182) * _2196))) * _2196;
    float _4247 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _2235 = (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0))) * (_2206 / ((_2210 * _2210) * 3.141590118408203125));
    uint _2249 = _2102 + 9u;
    float _2260 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2136].w)) * _664) * 0.949999988079071044921875);
    float _2261 = _2260 * _2260;
    float _2262 = cbLight._m0[_2136].x + _688;
    float _2263 = cbLight._m0[_2136].y + _689;
    float _2264 = cbLight._m0[_2136].z + _690;
    float _2268 = inversesqrt(dot(vec3(_2262, _2263, _2264), vec3(_2262, _2263, _2264)));
    float _2269 = _2268 * _2262;
    float _2270 = _2268 * _2263;
    float _2271 = _2268 * _2264;
    float _2272 = dot(vec3(_661, _662, _663), vec3(cbLight._m0[_2136].xyz));
    float _4258 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
    float _2275 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    float _2276 = dot(vec3(_661, _662, _663), vec3(_2269, _2270, _2271));
    float _4269 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
    float _2279 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
    float _2280 = dot(vec3(cbLight._m0[_2136].xyz), vec3(_2269, _2270, _2271));
    float _4280 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _2284 = _2261 * _2261;
    float _2288 = ((_2279 * _2279) * (_2284 + (-1.0))) + 1.0;
    float _2297 = (exp2(log2(1.0 - (isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2298 = 1.0 - _2261;
    float _2308 = (0.5 / (((_2197 * ((_2275 * _2298) + _2261)) + 9.9999999392252902907785028219223e-09) + (((_2197 * _2298) + _2261) * _2275))) * _2275;
    float _4291 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
    float _2310 = (isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0))) * (_2284 / ((_2288 * _2288) * 3.141590118408203125));
    float _2320 = (((_2297 * cbLight._m0[_2249].x) * _2310) * _2119) + ((((cbLight._m0[_2168].x * _2091) * _2221) * _2235) * _2132);
    float _2321 = (((_2297 * cbLight._m0[_2249].y) * _2310) * _2119) + ((((cbLight._m0[_2168].y * _2093) * _2221) * _2235) * _2132);
    float _2322 = (((_2297 * cbLight._m0[_2249].z) * _2310) * _2119) + ((((cbLight._m0[_2168].z * _2095) * _2221) * _2235) * _2132);
    float _2485;
    float _2487;
    float _2489;
    float _2491;
    float _2493;
    float _2495;
    if (_2100.y == 0u)
    {
        uvec4 _2440 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2441 = _2440.x;
        uint _2452 = uint((float(_2440.y) * floor(float(uint(cbSceneParam._m0[85u].y * _710) / _2441))) + floor(float(uint(cbSceneParam._m0[85u].x * _709) / _2441)));
        float _2462 = (log2(_1878 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2463 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
        uint _2466 = uint(isnan(14.0) ? _2463 : (isnan(_2463) ? 14.0 : min(_2463, 14.0)));
        uvec4 _2471 = texelFetch(g_lightClusterGridBuffer, int(((_2466 << 2u) + (_2452 << 6u)) >> 2u));
        uint _2472 = _2471.x;
        uint _2473 = _2440.z;
        float _2596;
        float _2598;
        float _2600;
        float _2602;
        float _2604;
        float _2606;
        if (((((1u << ((_2473 >> 4u) & 15u)) + 4294967295u) & _2472) == 0u) || ((_2473 & 240u) == 0u))
        {
            _2596 = 0.0;
            _2598 = 0.0;
            _2600 = 0.0;
            _2602 = 0.0;
            _2604 = 0.0;
            _2606 = 0.0;
        }
        else
        {
            float _2597;
            float _2599;
            float _2601;
            float _2603;
            float _2605;
            float _2607;
            float _2774 = 0.0;
            float _2775 = 0.0;
            float _2776 = 0.0;
            float _2777 = 0.0;
            float _2778 = 0.0;
            float _2779 = 0.0;
            uint _2780 = 0u;
            uint _2789;
            bool _2790;
            for (;;)
            {
                _2789 = texelFetch(g_lightClassification, int((((_2466 << 5u) + (_2452 << 9u)) + (_2780 << 2u)) >> 2u)).x;
                _2790 = _2789 == 0u;
                float frontier_phi_87_pred;
                float frontier_phi_87_pred_1;
                float frontier_phi_87_pred_2;
                float frontier_phi_87_pred_3;
                float frontier_phi_87_pred_4;
                float frontier_phi_87_pred_5;
                if (_2790)
                {
                    frontier_phi_87_pred = _2774;
                    frontier_phi_87_pred_1 = _2779;
                    frontier_phi_87_pred_2 = _2778;
                    frontier_phi_87_pred_3 = _2777;
                    frontier_phi_87_pred_4 = _2776;
                    frontier_phi_87_pred_5 = _2775;
                }
                else
                {
                    float _2940;
                    float _2941;
                    float _2942;
                    float _2943;
                    float _2944;
                    float _2945;
                    uint _2946;
                    _2940 = _2774;
                    _2941 = _2775;
                    _2942 = _2776;
                    _2943 = _2777;
                    _2944 = _2778;
                    _2945 = _2779;
                    _2946 = _2789;
                    float _2867;
                    float _2868;
                    float _2869;
                    float _2870;
                    float _2871;
                    float _2872;
                    for (;;)
                    {
                        uint _2950 = uint(findLSB(_2946)) + (_2780 << 5u);
                        uint _2947 = (_2946 + 4294967295u) & _2946;
                        uint _2952 = _2950 * 48u;
                        vec4 _2966 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2952)).x, texelFetch(g_PointLightRenderingBuffer, int(_2952 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2952 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2952 + 3u)).x));
                        uint _2972 = (_2950 * 48u) + 4u;
                        vec4 _2985 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2972)).x, texelFetch(g_PointLightRenderingBuffer, int(_2972 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2972 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2972 + 3u)).x));
                        uint _2991 = (_2950 * 48u) + 8u;
                        vec3 _3002 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2991)).x, texelFetch(g_PointLightRenderingBuffer, int(_2991 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2991 + 2u)).x));
                        float _3006 = _2966.x - _1876;
                        float _3007 = _2966.y - _1877;
                        float _3008 = _2966.z - _1878;
                        float _3009 = dot(vec3(_3006, _3007, _3008), vec3(_3006, _3007, _3008));
                        float _3012 = inversesqrt(_3009);
                        float _3013 = _3012 * _3006;
                        float _3014 = _3012 * _3007;
                        float _3015 = _3012 * _3008;
                        float _3016 = dot(vec3(_729, _732, _735), vec3(_3013, _3014, _3015));
                        float _3021 = 1.0 - (_3009 * _2966.w);
                        float _4312 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
                        float _3022 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
                        float _3023 = sqrt(_3009) * _2985.w;
                        float _3026 = 1.39999997615814208984375 / (_3023 + 1.39999997615814208984375);
                        float _3027 = _3026 * _3026;
                        float _3030 = ((1.0 - _3027) * _3016) + _3027;
                        float _3033 = _3023 * _3023;
                        float _3037 = ((isnan(0.0) ? _3030 : (isnan(_3030) ? 0.0 : max(_3030, 0.0))) * _3022) / ((_3033 * 0.699999988079071044921875) + 1.0);
                        float _3041 = (-0.0) - _1876;
                        float _3042 = (-0.0) - _1877;
                        float _3043 = (-0.0) - _1878;
                        float _3047 = inversesqrt(dot(vec3(_3041, _3042, _3043), vec3(_3041, _3042, _3043)));
                        float _3048 = _3047 * _3041;
                        float _3049 = _3047 * _3042;
                        float _3050 = _3047 * _3043;
                        float _3057 = exp2(log2(1.0 / ((_3033 * 3.5) + 5.0)) * 0.25);
                        float _3058 = 1.0 - _790;
                        float _3065 = sqrt(1.0 - ((1.0 - (_3058 * _3058)) * (1.0 - (_3057 * _3057))));
                        float _3066 = _3065 * _3065;
                        float _3067 = _3066 * _3066;
                        float _3068 = _3048 + _3013;
                        float _3069 = _3049 + _3014;
                        float _3070 = _3050 + _3015;
                        float _3074 = inversesqrt(dot(vec3(_3068, _3069, _3070), vec3(_3068, _3069, _3070)));
                        float _3078 = dot(vec3(_729, _732, _735), vec3(_3048, _3049, _3050));
                        float _4328 = isnan(0.0) ? _3078 : (isnan(_3078) ? 0.0 : max(_3078, 0.0));
                        float _3081 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
                        float _3082 = dot(vec3(_729, _732, _735), vec3(_3074 * _3068, _3074 * _3069, _3074 * _3070));
                        float _4339 = isnan(0.0) ? _3082 : (isnan(_3082) ? 0.0 : max(_3082, 0.0));
                        float _3085 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
                        float _3089 = ((_3085 * _3085) * (_3067 + (-1.0))) + 1.0;
                        float _3090 = _3026 * _3066;
                        float _3091 = _3090 * _3090;
                        float _3094 = ((1.0 - _3091) * _3016) + _3091;
                        float _4350 = isnan(0.0) ? _3094 : (isnan(_3094) ? 0.0 : max(_3094, 0.0));
                        float _3095 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
                        float _3096 = 1.0 - _3066;
                        float _3106 = (0.5 / (((_3095 * ((_3081 * _3096) + _3066)) + 9.9999999392252902907785028219223e-09) + (((_3095 * _3096) + _3066) * _3081))) * _3095;
                        float _4361 = isnan(0.0) ? _3106 : (isnan(_3106) ? 0.0 : max(_3106, 0.0));
                        float _3117 = (((_3067 * 3.1415927410125732421875) * (isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0)))) / ((_3089 * _3089) * ((_3033 * 2.1991131305694580078125) + 3.141590118408203125))) * _3022;
                        _2870 = (_3037 * _2985.x) + _2943;
                        _2871 = (_3037 * _2985.y) + _2944;
                        _2872 = (_3037 * _2985.z) + _2945;
                        _2867 = (_3117 * _3002.x) + _2940;
                        _2868 = (_3117 * _3002.y) + _2941;
                        _2869 = (_3117 * _3002.z) + _2942;
                        if (_2947 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2940 = _2867;
                            _2941 = _2868;
                            _2942 = _2869;
                            _2943 = _2870;
                            _2944 = _2871;
                            _2945 = _2872;
                            _2946 = _2947;
                        }
                    }
                    frontier_phi_87_pred = _2867;
                    frontier_phi_87_pred_1 = _2872;
                    frontier_phi_87_pred_2 = _2871;
                    frontier_phi_87_pred_3 = _2870;
                    frontier_phi_87_pred_4 = _2869;
                    frontier_phi_87_pred_5 = _2868;
                }
                _2597 = frontier_phi_87_pred;
                _2607 = frontier_phi_87_pred_1;
                _2605 = frontier_phi_87_pred_2;
                _2603 = frontier_phi_87_pred_3;
                _2601 = frontier_phi_87_pred_4;
                _2599 = frontier_phi_87_pred_5;
                uint _2781 = _2780 + 1u;
                if (_2781 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2774 = _2597;
                    _2775 = _2599;
                    _2776 = _2601;
                    _2777 = _2603;
                    _2778 = _2605;
                    _2779 = _2607;
                    _2780 = _2781;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2596 = _2597;
            _2598 = _2599;
            _2600 = _2601;
            _2602 = _2603;
            _2604 = _2605;
            _2606 = _2607;
        }
        uvec4 _2610 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2611 = _2610.z;
        uint _2613 = (_2611 >> 8u) & 15u;
        float _2742;
        float _2744;
        float _2746;
        float _2748;
        float _2750;
        float _2752;
        if (((4294967295u << _2613) & _2472) == 0u)
        {
            _2742 = _2596;
            _2744 = _2598;
            _2746 = _2600;
            _2748 = _2602;
            _2750 = _2604;
            _2752 = _2606;
        }
        else
        {
            float _2767 = inversesqrt(dot(vec3(_1876, _1877, _1878), vec3(_1876, _1877, _1878)));
            float _2768 = _2767 * _1876;
            float _2769 = _2767 * _1877;
            float _2770 = _2767 * _1878;
            float frontier_phi_78_79_ladder;
            float frontier_phi_78_79_ladder_1;
            float frontier_phi_78_79_ladder_2;
            float frontier_phi_78_79_ladder_3;
            float frontier_phi_78_79_ladder_4;
            float frontier_phi_78_79_ladder_5;
            if (_2613 < ((_2611 >> 12u) & 15u))
            {
                float _2743;
                float _2745;
                float _2747;
                float _2749;
                float _2751;
                float _2753;
                float _2923 = _2596;
                float _2924 = _2598;
                float _2925 = _2600;
                float _2926 = _2602;
                float _2927 = _2604;
                float _2928 = _2606;
                uint _2929 = _2613;
                uint _2938;
                bool _2939;
                for (;;)
                {
                    _2938 = texelFetch(g_lightClassification, int((((_2466 << 5u) + (_2452 << 9u)) + (_2929 << 2u)) >> 2u)).x;
                    _2939 = _2938 == 0u;
                    float frontier_phi_98_pred;
                    float frontier_phi_98_pred_1;
                    float frontier_phi_98_pred_2;
                    float frontier_phi_98_pred_3;
                    float frontier_phi_98_pred_4;
                    float frontier_phi_98_pred_5;
                    if (_2939)
                    {
                        frontier_phi_98_pred = _2928;
                        frontier_phi_98_pred_1 = _2927;
                        frontier_phi_98_pred_2 = _2926;
                        frontier_phi_98_pred_3 = _2925;
                        frontier_phi_98_pred_4 = _2924;
                        frontier_phi_98_pred_5 = _2923;
                    }
                    else
                    {
                        float _3131;
                        float _3132;
                        float _3133;
                        float _3134;
                        float _3135;
                        float _3136;
                        float _3424;
                        float _3425;
                        float _3426;
                        float _3427;
                        float _3428;
                        float _3429;
                        float _3144 = _2923;
                        float _3145 = _2924;
                        float _3146 = _2925;
                        float _3147 = _2926;
                        float _3148 = _2927;
                        float _3149 = _2928;
                        uint _3150 = _2938;
                        uint _3151;
                        vec4 _3176;
                        float _3177;
                        vec4 _3192;
                        vec3 _3204;
                        vec4 _3219;
                        vec4 _3234;
                        float _3280;
                        bool _3281;
                        for (;;)
                        {
                            uint _3161 = ((_2929 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3150));
                            _3151 = (_3150 + 4294967295u) & _3150;
                            uint _3163 = _3161 * 40u;
                            _3176 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3163)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3163 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3163 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3163 + 3u)).x));
                            _3177 = _3176.w;
                            uint _3179 = (_3161 * 40u) + 4u;
                            _3192 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3179)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3179 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3179 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3179 + 3u)).x));
                            uint _3194 = (_3161 * 40u) + 8u;
                            _3204 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3194)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3194 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3194 + 2u)).x));
                            uint _3206 = (_3161 * 40u) + 16u;
                            _3219 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3206)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3206 + 3u)).x));
                            uint _3221 = (_3161 * 40u) + 20u;
                            _3234 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3221)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3221 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3221 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3221 + 3u)).x));
                            uint _3236 = (_3161 * 40u) + 24u;
                            vec4 _3249 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3236)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3236 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3236 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3236 + 3u)).x));
                            uint _3255 = (_3161 * 40u) + 28u;
                            vec4 _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            _3280 = fma(_1878, _3268.z, fma(_1877, _3268.y, _3268.x * _1876)) + _3268.w;
                            _3281 = !((fma(_1878, _3249.z, fma(_1877, _3249.y, _3249.x * _1876)) + _3249.w) <= 0.0);
                            float frontier_phi_104_pred;
                            float frontier_phi_104_pred_1;
                            float frontier_phi_104_pred_2;
                            float frontier_phi_104_pred_3;
                            float frontier_phi_104_pred_4;
                            float frontier_phi_104_pred_5;
                            if (_3281)
                            {
                                float _3308 = _3176.x - _1876;
                                float _3309 = _3176.y - _1877;
                                float _3310 = _3176.z - _1878;
                                float _3311 = dot(vec3(_3308, _3309, _3310), vec3(_3308, _3309, _3310));
                                float _3314 = inversesqrt(_3311);
                                float _3315 = _3314 * _3308;
                                float _3316 = _3314 * _3309;
                                float _3317 = _3314 * _3310;
                                float _3321 = 1.0 - (_3311 / (_3177 * _3177));
                                float _4372 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0));
                                float _3322 = isnan(1.0) ? _4372 : (isnan(_4372) ? 1.0 : min(_4372, 1.0));
                                float _3326 = sqrt(_3311) * _3192.w;
                                float _3328 = 1.39999997615814208984375 / (_3326 + 1.39999997615814208984375);
                                float _3329 = _3328 * _3328;
                                float _3332 = ((1.0 - _3329) * dot(vec3(_3315, _3316, _3317), vec3(_729, _732, _735))) + _3329;
                                float _3335 = _3326 * _3326;
                                float _3339 = (fma(_1878, _3219.z, fma(_1877, _3219.y, _3219.x * _1876)) + _3219.w) / _3280;
                                float _3340 = (fma(_1878, _3234.z, fma(_1877, _3234.y, _3234.x * _1876)) + _3234.w) / _3280;
                                float _3344 = 1.0 - dot(vec2(_3339, _3340), vec2(_3339, _3340));
                                float _4388 = isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0));
                                float _3345 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
                                float _3346 = _3345 * (((isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0))) * _3322) / ((_3335 * 0.699999988079071044921875) + 1.0));
                                float _3358 = exp2(log2(1.0 / ((_3335 * 3.5) + 5.0)) * 0.25);
                                float _3359 = 1.0 - _790;
                                float _3366 = sqrt(1.0 - ((1.0 - (_3359 * _3359)) * (1.0 - (_3358 * _3358))));
                                float _3367 = _3366 * _3366;
                                float _3368 = _3367 * _3367;
                                float _3369 = _3315 - _2768;
                                float _3370 = _3316 - _2769;
                                float _3371 = _3317 - _2770;
                                float _3375 = inversesqrt(dot(vec3(_3369, _3370, _3371), vec3(_3369, _3370, _3371)));
                                float _3379 = dot(vec3(_729, _732, _735), vec3((-0.0) - _2768, (-0.0) - _2769, (-0.0) - _2770));
                                float _4399 = isnan(0.0) ? _3379 : (isnan(_3379) ? 0.0 : max(_3379, 0.0));
                                float _3382 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
                                float _3383 = dot(vec3(_729, _732, _735), vec3(_3375 * _3369, _3375 * _3370, _3375 * _3371));
                                float _4410 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                                float _3386 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
                                float _3390 = ((_3386 * _3386) * (_3368 + (-1.0))) + 1.0;
                                float _3391 = _3328 * _3367;
                                float _3392 = _3391 * _3391;
                                float _3398 = ((1.0 - _3392) * dot(vec3(_729, _732, _735), vec3(_3315, _3316, _3317))) + _3392;
                                float _4421 = isnan(0.0) ? _3398 : (isnan(_3398) ? 0.0 : max(_3398, 0.0));
                                float _3399 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
                                float _3400 = 1.0 - _3367;
                                float _3410 = (0.5 / (((_3399 * ((_3382 * _3400) + _3367)) + 9.9999999392252902907785028219223e-09) + (((_3399 * _3400) + _3367) * _3382))) * _3399;
                                float _4432 = isnan(0.0) ? _3410 : (isnan(_3410) ? 0.0 : max(_3410, 0.0));
                                float _3420 = (_3345 * _3322) * (((_3368 * 3.1415927410125732421875) * (isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0)))) / ((_3390 * _3390) * ((_3335 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_104_pred = _3346 * _3192.y;
                                frontier_phi_104_pred_1 = _3346 * _3192.x;
                                frontier_phi_104_pred_2 = _3420 * _3204.z;
                                frontier_phi_104_pred_3 = _3420 * _3204.y;
                                frontier_phi_104_pred_4 = _3420 * _3204.x;
                                frontier_phi_104_pred_5 = _3346 * _3192.z;
                            }
                            else
                            {
                                frontier_phi_104_pred = 0.0;
                                frontier_phi_104_pred_1 = 0.0;
                                frontier_phi_104_pred_2 = 0.0;
                                frontier_phi_104_pred_3 = 0.0;
                                frontier_phi_104_pred_4 = 0.0;
                                frontier_phi_104_pred_5 = 0.0;
                            }
                            _3428 = frontier_phi_104_pred;
                            _3427 = frontier_phi_104_pred_1;
                            _3426 = frontier_phi_104_pred_2;
                            _3425 = frontier_phi_104_pred_3;
                            _3424 = frontier_phi_104_pred_4;
                            _3429 = frontier_phi_104_pred_5;
                            _3134 = _3427 + _3147;
                            _3135 = _3428 + _3148;
                            _3136 = _3429 + _3149;
                            _3131 = _3424 + _3144;
                            _3132 = _3425 + _3145;
                            _3133 = _3426 + _3146;
                            if (_3151 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3144 = _3131;
                                _3145 = _3132;
                                _3146 = _3133;
                                _3147 = _3134;
                                _3148 = _3135;
                                _3149 = _3136;
                                _3150 = _3151;
                                continue;
                            }
                        }
                        frontier_phi_98_pred = _3136;
                        frontier_phi_98_pred_1 = _3135;
                        frontier_phi_98_pred_2 = _3134;
                        frontier_phi_98_pred_3 = _3133;
                        frontier_phi_98_pred_4 = _3132;
                        frontier_phi_98_pred_5 = _3131;
                    }
                    _2753 = frontier_phi_98_pred;
                    _2751 = frontier_phi_98_pred_1;
                    _2749 = frontier_phi_98_pred_2;
                    _2747 = frontier_phi_98_pred_3;
                    _2745 = frontier_phi_98_pred_4;
                    _2743 = frontier_phi_98_pred_5;
                    uint _2930 = _2929 + 1u;
                    if (_2930 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2923 = _2743;
                        _2924 = _2745;
                        _2925 = _2747;
                        _2926 = _2749;
                        _2927 = _2751;
                        _2928 = _2753;
                        _2929 = _2930;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_78_79_ladder = _2747;
                frontier_phi_78_79_ladder_1 = _2753;
                frontier_phi_78_79_ladder_2 = _2751;
                frontier_phi_78_79_ladder_3 = _2749;
                frontier_phi_78_79_ladder_4 = _2745;
                frontier_phi_78_79_ladder_5 = _2743;
            }
            else
            {
                frontier_phi_78_79_ladder = _2600;
                frontier_phi_78_79_ladder_1 = _2606;
                frontier_phi_78_79_ladder_2 = _2604;
                frontier_phi_78_79_ladder_3 = _2602;
                frontier_phi_78_79_ladder_4 = _2598;
                frontier_phi_78_79_ladder_5 = _2596;
            }
            _2742 = frontier_phi_78_79_ladder_5;
            _2744 = frontier_phi_78_79_ladder_4;
            _2746 = frontier_phi_78_79_ladder;
            _2748 = frontier_phi_78_79_ladder_3;
            _2750 = frontier_phi_78_79_ladder_2;
            _2752 = frontier_phi_78_79_ladder_1;
        }
        float _2757 = isnan(1.0) ? _774 : (isnan(_774) ? 1.0 : min(_774, 1.0));
        _2485 = (_2757 * _2748) + _2164;
        _2487 = (_2757 * _2750) + _2165;
        _2489 = (_2757 * _2752) + _2166;
        _2491 = ((_2742 * 0.039999999105930328369140625) * _2757) + _2320;
        _2493 = ((_2744 * 0.039999999105930328369140625) * _2757) + _2321;
        _2495 = ((_2746 * 0.039999999105930328369140625) * _2757) + _2322;
    }
    else
    {
        _2485 = _2164;
        _2487 = _2165;
        _2489 = _2166;
        _2491 = _2320;
        _2493 = _2321;
        _2495 = _2322;
    }
    uint _2501 = _750 + uint(cbMatDynParam._m0[0u].w);
    float _4448 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _4459 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _4470 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _2526 = (((isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0))) * (_2485 + ((isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))) * _774))) + ((_2491 + ((isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0))) * _1611)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_2501].x * ((((((cbMtdParam._m0[10u].x * _291) * _555.x) - _484) * _291) * _608) + _484));
    float _2528 = ((cbInstanceData._m0[_2501].y * ((((((cbMtdParam._m0[10u].y * _291) * _555.y) - _485) * _291) * _608) + _485)) + ((_2493 + ((isnan(0.0) ? _1826 : (isnan(_1826) ? 0.0 : max(_1826, 0.0))) * _1611)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * (_2487 + ((isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0))) * _774)));
    float _2530 = ((cbInstanceData._m0[_2501].z * ((((((cbMtdParam._m0[10u].z * _291) * _555.z) - _486) * _291) * _608) + _486)) + ((_2495 + ((isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0))) * _1611)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0))) * (_2489 + ((isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0))) * _774)));
    float _2531 = isnan(0.0) ? _2526 : (isnan(_2526) ? 0.0 : max(_2526, 0.0));
    float _2532 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
    float _2533 = isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0));
    uint _2534 = _748 + 6u;
    float _2542 = _709 / cbSceneParam._m0[86u].x;
    float _2543 = _710 / cbSceneParam._m0[86u].y;
    vec4 _2557 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2542, _2543, (log2((isnan(cbSceneParam._m0[77u].w) ? _683 : (isnan(_683) ? cbSceneParam._m0[77u].w : min(_683, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2559 = _2557.x;
    float _2560 = _2557.y;
    float _2561 = _2557.z;
    float _2562 = _2557.w;
    float _2658;
    float _2660;
    float _2662;
    float _2664;
    if (_683 > cbSceneParam._m0[78u].w)
    {
        float _2621 = isnan(_683) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _683 : min(cbSceneParam._m0[80u].w, _683));
        float _2622 = _2621 / _683;
        float _2633 = _2622 * _273;
        float _2634 = _274 * _2622;
        float _2635 = (-0.0) - _2634;
        float _2636 = _2622 * _275;
        float _2638 = (cbSceneParam._m0[77u].w * _2635) / _2621;
        float _2639 = _2638 + cbSceneParam._m0[79u].w;
        float _2640 = cbSceneParam._m0[79u].w - _2634;
        float _2646 = sqrt(((_2633 * _2633) + (_2634 * _2634)) + (_2636 * _2636));
        float _2649 = (1.0 - (cbSceneParam._m0[77u].w / _2621)) * _2646;
        float _2654 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2656 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2880;
        if (abs((_2635 - _2638) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2880 = ((((_2639 > 0.0) ? exp2(_2654 * _2639) : (2.0 - exp2(_2656 * _2639))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2649;
        }
        else
        {
            float _2803 = 1.0 / cbSceneParam._m0[80u].x;
            float _2804 = isnan(_2640) ? _2639 : (isnan(_2639) ? _2640 : max(_2639, _2640));
            float _2805 = isnan(_2640) ? _2639 : (isnan(_2639) ? _2640 : min(_2639, _2640));
            float _2814 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : min(_2804, 0.0));
            float _2815 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : min(_2805, 0.0));
            _2880 = ((abs(_2646 / _2635) * cbSceneParam._m0[80u].y) * ((((_2814 - _2815) * 2.0) - ((exp2(_2654 * (isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0)))) - exp2(_2654 * (isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0))))) * _2803)) - ((exp2(_2656 * _2814) - exp2(_2656 * _2815)) * _2803))) + (_2649 * cbSceneParam._m0[80u].z);
        }
        vec4 _2882 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2542, _2543, 1.0), 0.0);
        float _2891 = exp2((_2880 * (-1.44269502162933349609375)) * (1.0 - _2882.w));
        float _2892 = log2(_2891);
        float _2908 = log2(_2562);
        _2658 = (exp2(_2908 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2892 * cbSceneParam._m0[78u].x)) * _2882.x) / cbSceneParam._m0[78u].x)) + _2559;
        _2660 = (exp2(_2908 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2892 * cbSceneParam._m0[78u].y)) * _2882.y) / cbSceneParam._m0[78u].y)) + _2560;
        _2662 = (exp2(_2908 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2892 * cbSceneParam._m0[78u].z)) * _2882.z) / cbSceneParam._m0[78u].z)) + _2561;
        _2664 = _2891 * _2562;
    }
    else
    {
        _2658 = _2559;
        _2660 = _2560;
        _2662 = _2561;
        _2664 = _2562;
    }
    bool _2918;
    vec4 _2674;
    vec4 _2696;
    float _2698;
    float _2702;
    float _2703;
    float _2704;
    float _2705;
    bool _2715;
    for (;;)
    {
        _2674 = cbMatDynParam._m0[0u];
        float _2676 = roundEven(_2674.y);
        bool _2677 = _2676 == 3.0;
        float _2678 = log2(_2664);
        float _2685 = exp2(_2678 * cbSceneParam._m0[78u].x) * _2531;
        float _2686 = exp2(_2678 * cbSceneParam._m0[78u].y) * _2532;
        float _2687 = exp2(_2678 * cbSceneParam._m0[78u].z) * _2533;
        float _2694 = _697 + (-0.5);
        _2696 = cbMtdParam._m0[1u];
        _2698 = _2696.y * _2694;
        float _2701 = (_2676 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2702 = _2701 * (_2677 ? _2685 : (_2685 + (cbSceneParam._m0[72u].w * _2658)));
        _2703 = _2701 * (_2677 ? _2686 : (_2686 + (cbSceneParam._m0[72u].w * _2660)));
        _2704 = _2701 * (_2677 ? _2687 : (_2687 + (cbSceneParam._m0[72u].w * _2662)));
        _2705 = _2694 * 0.999000012874603271484375;
        _2715 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2715)
        {
            if ((cbInstanceData._m0[_748 + 7u].x + _2705) < 0.5)
            {
                _2918 = true;
                break;
            }
        }
        uint _2838 = _750 + uint(_2674.w);
        if ((cbInstanceData._m0[_2838].w < 1.0) && ((cbInstanceData._m0[_2838].w + _2705) < 0.5))
        {
            _2918 = true;
            break;
        }
        if ((_2698 + 1.0) < _2696.x)
        {
            _2918 = true;
            break;
        }
        _2918 = false;
        break;
    }
    float _3122;
    if (_2918)
    {
        discard_state = true;
        _3122 = 0.0;
    }
    else
    {
        _3122 = cbInstanceData._m0[_2534].w;
    }
    SV_Target.x = _2702;
    SV_Target.y = _2703;
    SV_Target.z = _2704;
    SV_Target.w = _3122;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2534].w;
    discard_exit();
}


