#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _784;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _194 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _242 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _252 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _242);
    float _253 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _242);
    float _254 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _242);
    vec4 _273 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _308 = cbMtdParam._m0[24u].x + _252;
    float _309 = cbMtdParam._m0[24u].y + _253;
    float _310 = cbMtdParam._m0[24u].z + _254;
    float _327 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_183 * _176, _183 * _177, _183 * _178));
    float _328 = (-0.0) - dot(vec3(_308, _309, _310), vec3(_194 * TANGENT.x, _194 * TANGENT.y, _194 * TANGENT.z));
    float _329 = (-0.0) - dot(vec3(_308, _309, _310), vec3((-0.0) - (NORMAL.x * _190), (-0.0) - (NORMAL.y * _190), (-0.0) - (NORMAL.z * _190)));
    float _333 = inversesqrt(dot(vec3(_327, _328, _329), vec3(_327, _328, _329)));
    float _336 = _333 * _329;
    float _339 = ((_333 * _327) + (((_273.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x)) * cbMtdParam._m0[20u].w;
    float _340 = ((_333 * _328) + (((_273.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y)) * cbMtdParam._m0[20u].z;
    float _341 = fract(TEXCOORD.x);
    float _342 = fract(TEXCOORD.y);
    float _348;
    if (_339 > 0.0)
    {
        _348 = (1.0 - _341) / _339;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_339 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _341) / _339;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _348 = frontier_phi_3_2_ladder;
    }
    float _356;
    if (_340 > 0.0)
    {
        _356 = (1.0 - _342) / _340;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_340 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _342) / _340;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _356 = frontier_phi_7_6_ladder;
    }
    float _360 = (_336 > 0.0) ? (cbMtdParam._m0[16u].x / _336) : 5000.0;
    float _361 = isnan(_356) ? _348 : (isnan(_348) ? _356 : min(_348, _356));
    float _362 = isnan(_360) ? _361 : (isnan(_361) ? _360 : min(_361, _360));
    float _366 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _373 = ((_362 * _336) + _366) / _366;
    vec4 _398 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * ((((((_341 + (-0.5)) + (_362 * _339)) / _373) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * ((((((_342 + (-0.5)) + (_362 * _340)) / _373) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _408 = cbMtdParam._m0[9u].x * _398.x;
    float _409 = cbMtdParam._m0[9u].y * _398.y;
    float _410 = cbMtdParam._m0[9u].z * _398.z;
    float _2673 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _2684 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _2695 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _429 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _433 = inversesqrt(dot(vec3(_252, _253, _254), vec3(_252, _253, _254)));
    float _434 = _252 * _433;
    float _435 = _253 * _433;
    float _436 = _254 * _433;
    float _442 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _443 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _456 = uint(roundEven(NORMAL.w)) * 13u;
    uint _459 = (_456 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _465 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2673 : (isnan(_2673) ? 1.0 : min(_2673, 1.0)))) * cbInstanceData._m0[_459].x;
    float _466 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2684 : (isnan(_2684) ? 1.0 : min(_2684, 1.0)))) * cbInstanceData._m0[_459].y;
    float _467 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2695 : (isnan(_2695) ? 1.0 : min(_2695, 1.0)))) * cbInstanceData._m0[_459].z;
    float _2706 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _468 = isnan(1.0) ? _2706 : (isnan(_2706) ? 1.0 : min(_2706, 1.0));
    float _2717 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _469 = isnan(1.0) ? _2717 : (isnan(_2717) ? 1.0 : min(_2717, 1.0));
    float _2728 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _470 = isnan(1.0) ? _2728 : (isnan(_2728) ? 1.0 : min(_2728, 1.0));
    vec4 _479 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _442, cbSceneParam._m0[86u].y * _443));
    float _482 = _479.x * TEXCOORD_4.z;
    float _483 = (-0.0) - _434;
    float _484 = (-0.0) - _435;
    float _485 = (-0.0) - _436;
    float _507 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _511 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _515 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _783;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    float _796;
    float _797;
    float _798;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _571 = (cbModelParam._m0[37u].x * ((((fma(_515, cbModelParam._m0[26u].z, fma(_511, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _507)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _573 = (cbModelParam._m0[37u].y * ((((fma(_515, cbModelParam._m0[27u].z, fma(_511, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _507)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _574 = (((((fma(_515, cbModelParam._m0[28u].z, fma(_511, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _507)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _577 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _584 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _591 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _598 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        float _611 = exp2((_577.w + (-0.5)) * 20.0) * 2.0;
        float _612 = _611 * (_577.x + (-0.5));
        float _613 = _611 * (_577.y + (-0.5));
        float _614 = _611 * (_577.z + (-0.5));
        float _621 = exp2((_584.w + (-0.5)) * 20.0) * 2.0;
        float _622 = _621 * (_584.x + (-0.5));
        float _623 = _621 * (_584.y + (-0.5));
        float _624 = _621 * (_584.z + (-0.5));
        float _631 = exp2((_591.w + (-0.5)) * 20.0) * 2.0;
        float _632 = _631 * (_591.x + (-0.5));
        float _633 = _631 * (_591.y + (-0.5));
        float _634 = _631 * (_591.z + (-0.5));
        float _641 = exp2((_598.w + (-0.5)) * 20.0) * 2.0;
        float _642 = _641 * (_598.x + (-0.5));
        float _643 = _641 * (_598.y + (-0.5));
        float _644 = _641 * (_598.z + (-0.5));
        float _645 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _646 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
        float _647 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
        float _648 = _612 * 0.5;
        float _649 = _622 * 0.5;
        float _650 = _632 * 0.5;
        float _651 = dot(vec3(_648, _649, _650), vec3(_648, _649, _650));
        float _656 = (_651 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_651);
        float _665 = (dot(vec3(0.0), vec3(_656 * _648, _656 * _649, _656 * _650)) + 1.0) * 0.5;
        float _2754 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        float _675 = sqrt(((_649 * _649) + (_648 * _648)) + (_650 * _650)) / (_645 + 9.9999997473787516355514526367188e-06);
        float _2765 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        float _676 = isnan(1.0) ? _2765 : (isnan(_2765) ? 1.0 : min(_2765, 1.0));
        float _677 = _676 * 2.0;
        float _681 = (1.0 - _676) / (_676 + 1.0);
        float _2776 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _682 = isnan(1.0) ? _2776 : (isnan(_2776) ? 1.0 : min(_2776, 1.0));
        float _691 = ((((1.0 - _682) * (_677 + 2.0)) * exp2(log2(isnan(1.0) ? _2754 : (isnan(_2754) ? 1.0 : min(_2754, 1.0))) * (_677 + 1.0))) + _682) * _645;
        float _692 = _613 * 0.5;
        float _693 = _623 * 0.5;
        float _694 = _633 * 0.5;
        float _695 = dot(vec3(_692, _693, _694), vec3(_692, _693, _694));
        float _700 = (_695 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_695);
        float _708 = (dot(vec3(0.0), vec3(_700 * _692, _700 * _693, _700 * _694)) + 1.0) * 0.5;
        float _2787 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _717 = sqrt(((_693 * _693) + (_692 * _692)) + (_694 * _694)) / (_646 + 9.9999997473787516355514526367188e-06);
        float _2798 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
        float _718 = isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0));
        float _719 = _718 * 2.0;
        float _723 = (1.0 - _718) / (_718 + 1.0);
        float _2809 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
        float _724 = isnan(1.0) ? _2809 : (isnan(_2809) ? 1.0 : min(_2809, 1.0));
        float _733 = ((((1.0 - _724) * (_719 + 2.0)) * exp2(log2(isnan(1.0) ? _2787 : (isnan(_2787) ? 1.0 : min(_2787, 1.0))) * (_719 + 1.0))) + _724) * _646;
        float _734 = _614 * 0.5;
        float _735 = _624 * 0.5;
        float _736 = _634 * 0.5;
        float _737 = dot(vec3(_734, _735, _736), vec3(_734, _735, _736));
        float _742 = (_737 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_737);
        float _750 = (dot(vec3(0.0), vec3(_742 * _734, _742 * _735, _742 * _736)) + 1.0) * 0.5;
        float _2820 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        float _759 = sqrt(((_735 * _735) + (_734 * _734)) + (_736 * _736)) / (_647 + 9.9999997473787516355514526367188e-06);
        float _2831 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
        float _760 = isnan(1.0) ? _2831 : (isnan(_2831) ? 1.0 : min(_2831, 1.0));
        float _761 = _760 * 2.0;
        float _765 = (1.0 - _760) / (_760 + 1.0);
        float _2842 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _766 = isnan(1.0) ? _2842 : (isnan(_2842) ? 1.0 : min(_2842, 1.0));
        float _775 = ((((1.0 - _766) * (_761 + 2.0)) * exp2(log2(isnan(1.0) ? _2820 : (isnan(_2820) ? 1.0 : min(_2820, 1.0))) * (_761 + 1.0))) + _766) * _647;
        _783 = _614;
        _785 = _613;
        _786 = _612;
        _787 = _624;
        _788 = _623;
        _789 = _622;
        _790 = _634;
        _791 = _633;
        _792 = _632;
        _793 = _647;
        _794 = _646;
        _795 = _645;
        _796 = cbModelParam._m0[36u].z * (isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0)));
        _797 = cbModelParam._m0[36u].z * (isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0)));
        _798 = cbModelParam._m0[36u].z * (isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0)));
    }
    else
    {
        _783 = _784;
        _785 = _784;
        _786 = _784;
        _787 = _784;
        _788 = _784;
        _789 = _784;
        _790 = _784;
        _791 = _784;
        _792 = _784;
        _793 = _784;
        _794 = _784;
        _795 = _784;
        _796 = 0.0;
        _797 = 0.0;
        _798 = 0.0;
    }
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    float _1071;
    float _1072;
    float _1073;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _852 = (cbModelParam._m0[38u].x * ((((fma(_515, cbModelParam._m0[30u].z, fma(_511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _507)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _853 = (cbModelParam._m0[38u].y * ((((fma(_515, cbModelParam._m0[31u].z, fma(_511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _507)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _854 = (((((fma(_515, cbModelParam._m0[32u].z, fma(_511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _507)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _856 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _863 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _870 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _877 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        float _889 = exp2((_856.w + (-0.5)) * 20.0) * 2.0;
        float _890 = _889 * (_856.x + (-0.5));
        float _891 = _889 * (_856.y + (-0.5));
        float _892 = _889 * (_856.z + (-0.5));
        float _899 = exp2((_863.w + (-0.5)) * 20.0) * 2.0;
        float _900 = _899 * (_863.x + (-0.5));
        float _901 = _899 * (_863.y + (-0.5));
        float _902 = _899 * (_863.z + (-0.5));
        float _909 = exp2((_870.w + (-0.5)) * 20.0) * 2.0;
        float _910 = _909 * (_870.x + (-0.5));
        float _911 = _909 * (_870.y + (-0.5));
        float _912 = _909 * (_870.z + (-0.5));
        float _919 = exp2((_877.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_877.x + (-0.5));
        float _921 = _919 * (_877.y + (-0.5));
        float _922 = _919 * (_877.z + (-0.5));
        float _923 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
        float _924 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _925 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _926 = _890 * 0.5;
        float _927 = _900 * 0.5;
        float _928 = _910 * 0.5;
        float _929 = dot(vec3(_926, _927, _928), vec3(_926, _927, _928));
        float _934 = (_929 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_929);
        float _942 = (dot(vec3(0.0), vec3(_934 * _926, _934 * _927, _934 * _928)) + 1.0) * 0.5;
        float _2883 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _951 = sqrt(((_927 * _927) + (_926 * _926)) + (_928 * _928)) / (_923 + 9.9999997473787516355514526367188e-06);
        float _2894 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        float _952 = isnan(1.0) ? _2894 : (isnan(_2894) ? 1.0 : min(_2894, 1.0));
        float _953 = _952 * 2.0;
        float _957 = (1.0 - _952) / (_952 + 1.0);
        float _2905 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        float _958 = isnan(1.0) ? _2905 : (isnan(_2905) ? 1.0 : min(_2905, 1.0));
        float _967 = ((((1.0 - _958) * (_953 + 2.0)) * exp2(log2(isnan(1.0) ? _2883 : (isnan(_2883) ? 1.0 : min(_2883, 1.0))) * (_953 + 1.0))) + _958) * _923;
        float _968 = _891 * 0.5;
        float _969 = _901 * 0.5;
        float _970 = _911 * 0.5;
        float _971 = dot(vec3(_968, _969, _970), vec3(_968, _969, _970));
        float _976 = (_971 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_971);
        float _984 = (dot(vec3(0.0), vec3(_976 * _968, _976 * _969, _976 * _970)) + 1.0) * 0.5;
        float _2916 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _993 = sqrt(((_969 * _969) + (_968 * _968)) + (_970 * _970)) / (_924 + 9.9999997473787516355514526367188e-06);
        float _2927 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _994 = isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0));
        float _995 = _994 * 2.0;
        float _999 = (1.0 - _994) / (_994 + 1.0);
        float _2938 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
        float _1000 = isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0));
        float _1009 = ((((1.0 - _1000) * (_995 + 2.0)) * exp2(log2(isnan(1.0) ? _2916 : (isnan(_2916) ? 1.0 : min(_2916, 1.0))) * (_995 + 1.0))) + _1000) * _924;
        float _1010 = _892 * 0.5;
        float _1011 = _902 * 0.5;
        float _1012 = _912 * 0.5;
        float _1013 = dot(vec3(_1010, _1011, _1012), vec3(_1010, _1011, _1012));
        float _1018 = (_1013 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1013);
        float _1026 = (dot(vec3(0.0), vec3(_1018 * _1010, _1018 * _1011, _1018 * _1012)) + 1.0) * 0.5;
        float _2949 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1035 = sqrt(((_1011 * _1011) + (_1010 * _1010)) + (_1012 * _1012)) / (_925 + 9.9999997473787516355514526367188e-06);
        float _2960 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1036 = isnan(1.0) ? _2960 : (isnan(_2960) ? 1.0 : min(_2960, 1.0));
        float _1037 = _1036 * 2.0;
        float _1041 = (1.0 - _1036) / (_1036 + 1.0);
        float _2971 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
        float _1042 = isnan(1.0) ? _2971 : (isnan(_2971) ? 1.0 : min(_2971, 1.0));
        float _1051 = ((((1.0 - _1042) * (_1037 + 2.0)) * exp2(log2(isnan(1.0) ? _2949 : (isnan(_2949) ? 1.0 : min(_2949, 1.0))) * (_1037 + 1.0))) + _1042) * _925;
        _1059 = _892;
        _1060 = _891;
        _1061 = _890;
        _1062 = _902;
        _1063 = _901;
        _1064 = _900;
        _1065 = _912;
        _1066 = _911;
        _1067 = _910;
        _1068 = _925;
        _1069 = _924;
        _1070 = _923;
        _1071 = cbModelParam._m0[36u].w * (isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0)));
        _1072 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0)));
        _1073 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0)));
    }
    else
    {
        _1059 = _784;
        _1060 = _784;
        _1061 = _784;
        _1062 = _784;
        _1063 = _784;
        _1064 = _784;
        _1065 = _784;
        _1066 = _784;
        _1067 = _784;
        _1068 = _784;
        _1069 = _784;
        _1070 = _784;
        _1071 = 0.0;
        _1072 = 0.0;
        _1073 = 0.0;
    }
    float _1083 = (cbModelParam._m0[1u].x * (_1071 - _796)) + _796;
    float _1084 = (cbModelParam._m0[1u].x * (_1072 - _797)) + _797;
    float _1085 = (cbModelParam._m0[1u].x * (_1073 - _798)) + _798;
    float _1106 = fma(_1085, cbSceneParam._m0[89u].z, fma(_1084, cbSceneParam._m0[89u].y, _1083 * cbSceneParam._m0[89u].x));
    float _1109 = fma(_1085, cbSceneParam._m0[90u].z, fma(_1084, cbSceneParam._m0[90u].y, _1083 * cbSceneParam._m0[90u].x));
    float _1112 = fma(_1085, cbSceneParam._m0[91u].z, fma(_1084, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1083));
    float _1127 = _434 * (-0.5);
    float _1128 = _435 * (-0.5);
    float _1129 = _436 * (-0.5);
    float _1130 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1061, _1064, _1067, _1070));
    float _1133 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1060, _1063, _1066, _1069));
    float _1136 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1059, _1062, _1065, _1068));
    float _1170;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1143 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_783, _787, _790, _793));
        float _1147 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_785, _788, _791, _794));
        float _1151 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_786, _789, _792, _795));
        float _1158 = dot(vec4(cbModelParam._m0[39u]), vec4(_1127, _1128, _1129, 1.0));
        _1170 = dot(vec3(isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)), isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0)), isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1158) ? 0.0 : (isnan(0.0) ? _1158 : max(0.0, _1158))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1170 = 1.0;
    }
    float _1181;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1172 = dot(vec4(cbModelParam._m0[40u]), vec4(_1127, _1128, _1129, 1.0));
        _1181 = dot(vec3(isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0)), isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0)), isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1172) ? 0.0 : (isnan(0.0) ? _1172 : max(0.0, _1172))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1181 = 1.0;
    }
    float _1185 = (_1181 * cbModelParam._m0[1u].x) + (_1170 * (1.0 - cbModelParam._m0[1u].x));
    float _1194 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1277;
    float _1279;
    float _1281;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1244 = fma(_515, cbModelParam._m0[13u].z, fma(_511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _507)) + cbModelParam._m0[13u].w;
        float _1248 = fma(_515, cbModelParam._m0[14u].z, fma(_511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _507)) + cbModelParam._m0[14u].w;
        float _1252 = fma(_515, cbModelParam._m0[15u].z, fma(_511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _507)) + cbModelParam._m0[15u].w;
        float _1255 = fma(_485, cbModelParam._m0[13u].z, fma(_484, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _483));
        float _1258 = fma(_485, cbModelParam._m0[14u].z, fma(_484, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _483));
        float _1261 = fma(_485, cbModelParam._m0[15u].z, fma(_484, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _483));
        float _1287;
        if (_1255 > 0.0)
        {
            _1287 = abs((1.0 - _1244) / _1255);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1255 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1244 + 1.0) / _1255);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1287 = frontier_phi_22_20_ladder;
        }
        float _1585;
        if (_1258 > 0.0)
        {
            _1585 = abs((1.0 - _1248) / _1258);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1258 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1248 + 1.0) / _1258);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1585 = frontier_phi_31_27_ladder;
        }
        float _1887;
        if (_1261 > 0.0)
        {
            _1887 = abs((1.0 - _1252) / _1261);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1261 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1252 + 1.0) / _1261);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _1887 = frontier_phi_45_38_ladder;
        }
        float _1889 = isnan(_1585) ? _1287 : (isnan(_1287) ? _1585 : min(_1287, _1585));
        float _1890 = isnan(_1887) ? _1889 : (isnan(_1889) ? _1887 : min(_1889, _1887));
        float _1894 = (_1890 * _1255) + _1244;
        float _1895 = (_1890 * _1258) + _1248;
        float _1896 = (_1890 * _1261) + _1252;
        float _1897 = _1890 * 9.9999997473787516355514526367188e-05;
        float _1898 = (-1.0) - _1897;
        float _1900 = _1897 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_1896 > _1900) || ((_1896 < _1898) || ((_1895 > _1900) || ((_1895 < _1898) || ((_1894 < _1898) || (_1894 > _1900))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2019 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1896, cbModelParam._m0[9u].z, fma(_1895, cbModelParam._m0[9u].y, _1894 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1896, cbModelParam._m0[10u].z, fma(_1895, cbModelParam._m0[10u].y, _1894 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1896, cbModelParam._m0[11u].z, fma(_1895, cbModelParam._m0[11u].y, _1894 * cbModelParam._m0[11u].x))), _1194);
            frontier_phi_21_45_ladder = _2019.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2019.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2019.x * cbModelParam._m0[1u].y;
        }
        _1277 = frontier_phi_21_45_ladder_2;
        _1279 = frontier_phi_21_45_ladder_1;
        _1281 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1265 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_483, _484, _485), _1194);
        _1277 = _1265.x * cbModelParam._m0[1u].y;
        _1279 = _1265.y * cbModelParam._m0[1u].y;
        _1281 = _1265.z * cbModelParam._m0[1u].y;
    }
    float _1284 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1374;
    float _1376;
    float _1378;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1338 = fma(_515, cbModelParam._m0[21u].z, fma(_511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _507)) + cbModelParam._m0[21u].w;
        float _1342 = fma(_515, cbModelParam._m0[22u].z, fma(_511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _507)) + cbModelParam._m0[22u].w;
        float _1346 = fma(_515, cbModelParam._m0[23u].z, fma(_511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _507)) + cbModelParam._m0[23u].w;
        float _1349 = fma(_485, cbModelParam._m0[21u].z, fma(_484, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _483));
        float _1352 = fma(_485, cbModelParam._m0[22u].z, fma(_484, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _483));
        float _1355 = fma(_485, cbModelParam._m0[23u].z, fma(_484, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _483));
        float _1590;
        if (_1349 > 0.0)
        {
            _1590 = abs((1.0 - _1338) / _1349);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1349 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1338 + 1.0) / _1349);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1590 = frontier_phi_33_29_ladder;
        }
        float _1913;
        if (_1352 > 0.0)
        {
            _1913 = abs((1.0 - _1342) / _1352);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1352 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1342 + 1.0) / _1352);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _1913 = frontier_phi_47_40_ladder;
        }
        float _2079;
        if (_1355 > 0.0)
        {
            _2079 = abs((1.0 - _1346) / _1355);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1355 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1346 + 1.0) / _1355);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2079 = frontier_phi_61_56_ladder;
        }
        float _2081 = isnan(_1913) ? _1590 : (isnan(_1590) ? _1913 : min(_1590, _1913));
        float _2082 = isnan(_2079) ? _2081 : (isnan(_2081) ? _2079 : min(_2081, _2079));
        float _2086 = (_2082 * _1349) + _1338;
        float _2087 = (_2082 * _1352) + _1342;
        float _2088 = (_2082 * _1355) + _1346;
        float _2089 = _2082 * 9.9999997473787516355514526367188e-05;
        float _2090 = (-1.0) - _2089;
        float _2092 = _2089 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2088 > _2092) || ((_2088 < _2090) || ((_2087 > _2092) || ((_2087 < _2090) || ((_2086 < _2090) || (_2086 > _2092))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2271 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2088, cbModelParam._m0[17u].z, fma(_2087, cbModelParam._m0[17u].y, _2086 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2088, cbModelParam._m0[18u].z, fma(_2087, cbModelParam._m0[18u].y, _2086 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2088, cbModelParam._m0[19u].z, fma(_2087, cbModelParam._m0[19u].y, _2086 * cbModelParam._m0[19u].x))), _1284);
            frontier_phi_30_61_ladder = _2271.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2271.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2271.x * cbModelParam._m0[1u].z;
        }
        _1374 = frontier_phi_30_61_ladder_2;
        _1376 = frontier_phi_30_61_ladder_1;
        _1378 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1358 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_483, _484, _485), _1284);
        _1374 = _1358.x * cbModelParam._m0[1u].z;
        _1376 = _1358.y * cbModelParam._m0[1u].z;
        _1378 = _1358.z * cbModelParam._m0[1u].z;
    }
    float _1390 = _482 * 0.01200000010430812835693359375;
    float _1392 = _1390 * ((cbModelParam._m0[1u].w * (_1374 - _1277)) + _1277);
    float _1393 = _1390 * ((cbModelParam._m0[1u].w * (_1376 - _1279)) + _1279);
    float _1394 = _1390 * ((cbModelParam._m0[1u].w * (_1378 - _1281)) + _1281);
    float _1397 = fma(_1394, cbSceneParam._m0[89u].z, fma(_1393, cbSceneParam._m0[89u].y, _1392 * cbSceneParam._m0[89u].x));
    float _1400 = fma(_1394, cbSceneParam._m0[90u].z, fma(_1393, cbSceneParam._m0[90u].y, _1392 * cbSceneParam._m0[90u].x));
    float _1403 = fma(_1394, cbSceneParam._m0[91u].z, fma(_1393, cbSceneParam._m0[91u].y, _1392 * cbSceneParam._m0[91u].x));
    uvec4 _1413 = floatBitsToUint(cbInstanceData._m0[_456 + 5u]);
    uint _1415 = _1413.x * 14u;
    uint _1416 = _1415 + 13u;
    float _1421 = _482 + (-1.0);
    float _1424 = (cbLight._m0[_1416].x * _1421) + 1.0;
    float _1425 = (cbLight._m0[_1416].y * _1421) + 1.0;
    uint _1426 = _1415 + 5u;
    float _1432 = isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0));
    uint _1436 = _1415 + 4u;
    float _1443 = isnan(1.0) ? _1424 : (isnan(_1424) ? 1.0 : min(_1424, 1.0));
    uint _1447 = _1415 | 1u;
    float _1458 = dot(vec3(cbLight._m0[_1415].xyz), vec3(0.0));
    float _1461 = dot(vec3(cbLight._m0[_1447].xyz), vec3(0.0));
    float _3107 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
    float _3118 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
    float _1466 = (isnan(1.0) ? _3107 : (isnan(_3107) ? 1.0 : min(_3107, 1.0))) * 0.3183098733425140380859375;
    float _1468 = (isnan(1.0) ? _3118 : (isnan(_3118) ? 1.0 : min(_3118, 1.0))) * 0.3183098733425140380859375;
    float _1475 = ((cbLight._m0[_1426].x * _1432) * _1468) + ((cbLight._m0[_1436].x * _1443) * _1466);
    float _1476 = ((_1432 * cbLight._m0[_1426].y) * _1468) + ((_1443 * cbLight._m0[_1436].y) * _1466);
    float _1477 = ((_1432 * cbLight._m0[_1426].z) * _1468) + ((_1443 * cbLight._m0[_1436].z) * _1466);
    uint _1478 = _1415 + 8u;
    float _1484 = cbLight._m0[_1415].x + _434;
    float _1485 = cbLight._m0[_1415].y + _435;
    float _1486 = cbLight._m0[_1415].z + _436;
    float _1490 = inversesqrt(dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486)));
    float _1494 = dot(vec3(0.0), vec3(cbLight._m0[_1415].xyz));
    float _3129 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
    float _1497 = isnan(1.0) ? _3129 : (isnan(_3129) ? 1.0 : min(_3129, 1.0));
    float _1498 = dot(vec3(0.0), vec3(_434, _435, _436));
    float _3140 = isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0));
    float _1501 = isnan(1.0) ? _3140 : (isnan(_3140) ? 1.0 : min(_3140, 1.0));
    float _1502 = dot(vec3(cbLight._m0[_1415].xyz), vec3(_1484 * _1490, _1485 * _1490, _1486 * _1490));
    float _3151 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
    float _1513 = (exp2(log2(1.0 - (isnan(1.0) ? _3151 : (isnan(_3151) ? 1.0 : min(_3151, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1519 = (0.5 / ((_1497 + 9.9999999392252902907785028219223e-09) + _1501)) * _1497;
    float _3162 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
    float _1521 = (isnan(1.0) ? _3162 : (isnan(_3162) ? 1.0 : min(_3162, 1.0))) * 0.31831014156341552734375;
    uint _1532 = _1415 + 9u;
    float _1538 = cbLight._m0[_1447].x + _434;
    float _1539 = cbLight._m0[_1447].y + _435;
    float _1540 = cbLight._m0[_1447].z + _436;
    float _1544 = inversesqrt(dot(vec3(_1538, _1539, _1540), vec3(_1538, _1539, _1540)));
    float _1548 = dot(vec3(0.0), vec3(cbLight._m0[_1447].xyz));
    float _3173 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    float _1551 = isnan(1.0) ? _3173 : (isnan(_3173) ? 1.0 : min(_3173, 1.0));
    float _1552 = dot(vec3(cbLight._m0[_1447].xyz), vec3(_1538 * _1544, _1539 * _1544, _1540 * _1544));
    float _3184 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
    float _1561 = (exp2(log2(1.0 - (isnan(1.0) ? _3184 : (isnan(_3184) ? 1.0 : min(_3184, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1565 = (0.5 / ((_1551 + 9.9999999392252902907785028219223e-09) + _1501)) * _1551;
    float _3195 = isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0));
    float _1567 = (isnan(1.0) ? _3195 : (isnan(_3195) ? 1.0 : min(_3195, 1.0))) * 0.31831014156341552734375;
    float _1577 = (((_1561 * cbLight._m0[_1532].x) * _1567) * _1432) + (((_1513 * cbLight._m0[_1478].x) * _1521) * _1443);
    float _1578 = (((_1561 * cbLight._m0[_1532].y) * _1567) * _1432) + (((_1513 * cbLight._m0[_1478].y) * _1521) * _1443);
    float _1579 = (((_1561 * cbLight._m0[_1532].z) * _1567) * _1432) + (((_1513 * cbLight._m0[_1478].z) * _1521) * _1443);
    float _1695;
    float _1697;
    float _1699;
    float _1701;
    float _1703;
    float _1705;
    if (_1413.y == 0u)
    {
        float _1635 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1636 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1635;
        float _1637 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1635;
        float _1638 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1635;
        uvec4 _1650 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1651 = _1650.x;
        uint _1662 = uint((float(_1650.y) * floor(float(uint(cbSceneParam._m0[85u].y * _443) / _1651))) + floor(float(uint(cbSceneParam._m0[85u].x * _442) / _1651)));
        float _1672 = (log2(_1638 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1673 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        uint _1676 = uint(isnan(14.0) ? _1673 : (isnan(_1673) ? 14.0 : min(_1673, 14.0)));
        uvec4 _1681 = texelFetch(g_lightClusterGridBuffer, int(((_1676 << 2u) + (_1662 << 6u)) >> 2u));
        uint _1682 = _1681.x;
        uint _1683 = _1650.z;
        float _1773;
        float _1775;
        float _1777;
        float _1779;
        float _1781;
        float _1783;
        if (((((1u << ((_1683 >> 4u) & 15u)) + 4294967295u) & _1682) == 0u) || ((_1683 & 240u) == 0u))
        {
            _1773 = 0.0;
            _1775 = 0.0;
            _1777 = 0.0;
            _1779 = 0.0;
            _1781 = 0.0;
            _1783 = 0.0;
        }
        else
        {
            float _1774;
            float _1776;
            float _1778;
            float _1780;
            float _1782;
            float _1784;
            float _1947 = 0.0;
            float _1948 = 0.0;
            float _1949 = 0.0;
            float _1950 = 0.0;
            float _1951 = 0.0;
            float _1952 = 0.0;
            uint _1953 = 0u;
            uint _1962;
            bool _1963;
            for (;;)
            {
                _1962 = texelFetch(g_lightClassification, int((((_1676 << 5u) + (_1662 << 9u)) + (_1953 << 2u)) >> 2u)).x;
                _1963 = _1962 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_1963)
                {
                    frontier_phi_58_pred = _1948;
                    frontier_phi_58_pred_1 = _1952;
                    frontier_phi_58_pred_2 = _1951;
                    frontier_phi_58_pred_3 = _1950;
                    frontier_phi_58_pred_4 = _1949;
                    frontier_phi_58_pred_5 = _1947;
                }
                else
                {
                    float _2122;
                    float _2123;
                    float _2124;
                    float _2125;
                    float _2126;
                    float _2127;
                    uint _2128;
                    _2122 = _1947;
                    _2123 = _1948;
                    _2124 = _1949;
                    _2125 = _1950;
                    _2126 = _1951;
                    _2127 = _1952;
                    _2128 = _1962;
                    float _2028;
                    float _2029;
                    float _2030;
                    float _2031;
                    float _2032;
                    float _2033;
                    for (;;)
                    {
                        uint _2132 = uint(findLSB(_2128)) + (_1953 << 5u);
                        uint _2129 = (_2128 + 4294967295u) & _2128;
                        uint _2134 = _2132 * 48u;
                        vec4 _2148 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2134)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 3u)).x));
                        uint _2154 = (_2132 * 48u) + 4u;
                        vec4 _2167 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2154)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 3u)).x));
                        uint _2173 = (_2132 * 48u) + 8u;
                        vec3 _2184 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2173)).x, texelFetch(g_PointLightRenderingBuffer, int(_2173 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2173 + 2u)).x));
                        float _2188 = _2148.x - _1636;
                        float _2189 = _2148.y - _1637;
                        float _2190 = _2148.z - _1638;
                        float _2191 = dot(vec3(_2188, _2189, _2190), vec3(_2188, _2189, _2190));
                        float _2194 = inversesqrt(_2191);
                        float _2203 = 1.0 - (_2191 * _2148.w);
                        float _3216 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
                        float _2204 = isnan(1.0) ? _3216 : (isnan(_3216) ? 1.0 : min(_3216, 1.0));
                        float _2205 = sqrt(_2191) * _2167.w;
                        float _2208 = 1.39999997615814208984375 / (_2205 + 1.39999997615814208984375);
                        float _2209 = _2208 * _2208;
                        float _2212 = ((1.0 - _2209) * dot(vec3(0.0), vec3(_2194 * _2188, _2194 * _2189, _2194 * _2190))) + _2209;
                        float _2215 = _2205 * _2205;
                        float _2219 = ((isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0))) * _2204) / ((_2215 * 0.699999988079071044921875) + 1.0);
                        float _2223 = (-0.0) - _1636;
                        float _2224 = (-0.0) - _1637;
                        float _2225 = (-0.0) - _1638;
                        float _2229 = inversesqrt(dot(vec3(_2223, _2224, _2225), vec3(_2223, _2224, _2225)));
                        float _2233 = dot(vec3(0.0), vec3(_2229 * _2223, _2229 * _2224, _2229 * _2225));
                        float _3232 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
                        float _3243 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
                        float _2237 = isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0));
                        float _2241 = (0.5 / (((isnan(1.0) ? _3232 : (isnan(_3232) ? 1.0 : min(_3232, 1.0))) + 9.9999999392252902907785028219223e-09) + _2237)) * _2237;
                        float _3254 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
                        float _2250 = (((isnan(1.0) ? _3254 : (isnan(_3254) ? 1.0 : min(_3254, 1.0))) * 3.1415927410125732421875) / ((_2215 * 2.1991131305694580078125) + 3.141590118408203125)) * _2204;
                        _2031 = (_2219 * _2167.x) + _2125;
                        _2032 = (_2219 * _2167.y) + _2126;
                        _2033 = (_2219 * _2167.z) + _2127;
                        _2028 = (_2250 * _2184.x) + _2122;
                        _2029 = (_2250 * _2184.y) + _2123;
                        _2030 = (_2250 * _2184.z) + _2124;
                        if (_2129 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2122 = _2028;
                            _2123 = _2029;
                            _2124 = _2030;
                            _2125 = _2031;
                            _2126 = _2032;
                            _2127 = _2033;
                            _2128 = _2129;
                        }
                    }
                    frontier_phi_58_pred = _2029;
                    frontier_phi_58_pred_1 = _2033;
                    frontier_phi_58_pred_2 = _2032;
                    frontier_phi_58_pred_3 = _2031;
                    frontier_phi_58_pred_4 = _2030;
                    frontier_phi_58_pred_5 = _2028;
                }
                _1776 = frontier_phi_58_pred;
                _1784 = frontier_phi_58_pred_1;
                _1782 = frontier_phi_58_pred_2;
                _1780 = frontier_phi_58_pred_3;
                _1778 = frontier_phi_58_pred_4;
                _1774 = frontier_phi_58_pred_5;
                uint _1954 = _1953 + 1u;
                if (_1954 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1947 = _1774;
                    _1948 = _1776;
                    _1949 = _1778;
                    _1950 = _1780;
                    _1951 = _1782;
                    _1952 = _1784;
                    _1953 = _1954;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1773 = _1774;
            _1775 = _1776;
            _1777 = _1778;
            _1779 = _1780;
            _1781 = _1782;
            _1783 = _1784;
        }
        uvec4 _1787 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1788 = _1787.z;
        uint _1790 = (_1788 >> 8u) & 15u;
        float _1918;
        float _1920;
        float _1922;
        float _1924;
        float _1926;
        float _1928;
        if (((4294967295u << _1790) & _1682) == 0u)
        {
            _1918 = _1773;
            _1920 = _1775;
            _1922 = _1777;
            _1924 = _1779;
            _1926 = _1781;
            _1928 = _1783;
        }
        else
        {
            float _1943 = inversesqrt(dot(vec3(_1636, _1637, _1638), vec3(_1636, _1637, _1638)));
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_1790 < ((_1788 >> 12u) & 15u))
            {
                float _1919;
                float _1921;
                float _1923;
                float _1925;
                float _1927;
                float _1929;
                float _2105 = _1773;
                float _2106 = _1775;
                float _2107 = _1777;
                float _2108 = _1779;
                float _2109 = _1781;
                float _2110 = _1783;
                uint _2111 = _1790;
                uint _2120;
                bool _2121;
                for (;;)
                {
                    _2120 = texelFetch(g_lightClassification, int((((_1676 << 5u) + (_1662 << 9u)) + (_2111 << 2u)) >> 2u)).x;
                    _2121 = _2120 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2121)
                    {
                        frontier_phi_67_pred = _2110;
                        frontier_phi_67_pred_1 = _2109;
                        frontier_phi_67_pred_2 = _2108;
                        frontier_phi_67_pred_3 = _2107;
                        frontier_phi_67_pred_4 = _2106;
                        frontier_phi_67_pred_5 = _2105;
                    }
                    else
                    {
                        float _2276;
                        float _2277;
                        float _2278;
                        float _2279;
                        float _2280;
                        float _2281;
                        float _2525;
                        float _2526;
                        float _2527;
                        float _2528;
                        float _2529;
                        float _2530;
                        float _2289 = _2105;
                        float _2290 = _2106;
                        float _2291 = _2107;
                        float _2292 = _2108;
                        float _2293 = _2109;
                        float _2294 = _2110;
                        uint _2295 = _2120;
                        uint _2296;
                        vec4 _2321;
                        float _2322;
                        vec4 _2337;
                        vec3 _2349;
                        vec4 _2364;
                        vec4 _2379;
                        float _2425;
                        bool _2426;
                        for (;;)
                        {
                            uint _2306 = ((_2111 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2295));
                            _2296 = (_2295 + 4294967295u) & _2295;
                            uint _2308 = _2306 * 40u;
                            _2321 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2308)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 3u)).x));
                            _2322 = _2321.w;
                            uint _2324 = (_2306 * 40u) + 4u;
                            _2337 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2324)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 3u)).x));
                            uint _2339 = (_2306 * 40u) + 8u;
                            _2349 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2339)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2339 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2339 + 2u)).x));
                            uint _2351 = (_2306 * 40u) + 16u;
                            _2364 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2351)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 3u)).x));
                            uint _2366 = (_2306 * 40u) + 20u;
                            _2379 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 3u)).x));
                            uint _2381 = (_2306 * 40u) + 24u;
                            vec4 _2394 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2381)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 3u)).x));
                            uint _2400 = (_2306 * 40u) + 28u;
                            vec4 _2413 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2400)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 3u)).x));
                            _2425 = fma(_1638, _2413.z, fma(_1637, _2413.y, _2413.x * _1636)) + _2413.w;
                            _2426 = !((fma(_1638, _2394.z, fma(_1637, _2394.y, _2394.x * _1636)) + _2394.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2426)
                            {
                                float _2453 = _2321.x - _1636;
                                float _2454 = _2321.y - _1637;
                                float _2455 = _2321.z - _1638;
                                float _2456 = dot(vec3(_2453, _2454, _2455), vec3(_2453, _2454, _2455));
                                float _2459 = inversesqrt(_2456);
                                float _2460 = _2459 * _2453;
                                float _2461 = _2459 * _2454;
                                float _2462 = _2459 * _2455;
                                float _2466 = 1.0 - (_2456 / (_2322 * _2322));
                                float _3265 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
                                float _2467 = isnan(1.0) ? _3265 : (isnan(_3265) ? 1.0 : min(_3265, 1.0));
                                float _2471 = sqrt(_2456) * _2337.w;
                                float _2473 = 1.39999997615814208984375 / (_2471 + 1.39999997615814208984375);
                                float _2474 = _2473 * _2473;
                                float _2475 = 1.0 - _2474;
                                float _2477 = (_2475 * dot(vec3(_2460, _2461, _2462), vec3(0.0))) + _2474;
                                float _2480 = _2471 * _2471;
                                float _2484 = (fma(_1638, _2364.z, fma(_1637, _2364.y, _2364.x * _1636)) + _2364.w) / _2425;
                                float _2485 = (fma(_1638, _2379.z, fma(_1637, _2379.y, _2379.x * _1636)) + _2379.w) / _2425;
                                float _2489 = 1.0 - dot(vec2(_2484, _2485), vec2(_2484, _2485));
                                float _3281 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
                                float _2490 = isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0));
                                float _2491 = _2490 * (((isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0))) * _2467) / ((_2480 * 0.699999988079071044921875) + 1.0));
                                float _2501 = dot(vec3(0.0), vec3((-0.0) - (_1636 * _1943), (-0.0) - (_1637 * _1943), (-0.0) - (_1638 * _1943)));
                                float _3292 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
                                float _2509 = (_2475 * dot(vec3(0.0), vec3(_2460, _2461, _2462))) + _2474;
                                float _3303 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
                                float _2510 = isnan(1.0) ? _3303 : (isnan(_3303) ? 1.0 : min(_3303, 1.0));
                                float _2514 = (0.5 / (((isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0))) + 9.9999999392252902907785028219223e-09) + _2510)) * _2510;
                                float _3314 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
                                float _2521 = (_2490 * _2467) * (((isnan(1.0) ? _3314 : (isnan(_3314) ? 1.0 : min(_3314, 1.0))) * 3.1415927410125732421875) / ((_2480 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_73_pred = _2491 * _2337.z;
                                frontier_phi_73_pred_1 = _2491 * _2337.y;
                                frontier_phi_73_pred_2 = _2491 * _2337.x;
                                frontier_phi_73_pred_3 = _2521 * _2349.z;
                                frontier_phi_73_pred_4 = _2521 * _2349.y;
                                frontier_phi_73_pred_5 = _2521 * _2349.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2530 = frontier_phi_73_pred;
                            _2529 = frontier_phi_73_pred_1;
                            _2528 = frontier_phi_73_pred_2;
                            _2527 = frontier_phi_73_pred_3;
                            _2526 = frontier_phi_73_pred_4;
                            _2525 = frontier_phi_73_pred_5;
                            _2279 = _2528 + _2292;
                            _2280 = _2529 + _2293;
                            _2281 = _2530 + _2294;
                            _2276 = _2525 + _2289;
                            _2277 = _2526 + _2290;
                            _2278 = _2527 + _2291;
                            if (_2296 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2289 = _2276;
                                _2290 = _2277;
                                _2291 = _2278;
                                _2292 = _2279;
                                _2293 = _2280;
                                _2294 = _2281;
                                _2295 = _2296;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2281;
                        frontier_phi_67_pred_1 = _2280;
                        frontier_phi_67_pred_2 = _2279;
                        frontier_phi_67_pred_3 = _2278;
                        frontier_phi_67_pred_4 = _2277;
                        frontier_phi_67_pred_5 = _2276;
                    }
                    _1929 = frontier_phi_67_pred;
                    _1927 = frontier_phi_67_pred_1;
                    _1925 = frontier_phi_67_pred_2;
                    _1923 = frontier_phi_67_pred_3;
                    _1921 = frontier_phi_67_pred_4;
                    _1919 = frontier_phi_67_pred_5;
                    uint _2112 = _2111 + 1u;
                    if (_2112 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2105 = _1919;
                        _2106 = _1921;
                        _2107 = _1923;
                        _2108 = _1925;
                        _2109 = _1927;
                        _2110 = _1929;
                        _2111 = _2112;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _1925;
                frontier_phi_49_50_ladder_1 = _1929;
                frontier_phi_49_50_ladder_2 = _1927;
                frontier_phi_49_50_ladder_3 = _1923;
                frontier_phi_49_50_ladder_4 = _1921;
                frontier_phi_49_50_ladder_5 = _1919;
            }
            else
            {
                frontier_phi_49_50_ladder = _1779;
                frontier_phi_49_50_ladder_1 = _1783;
                frontier_phi_49_50_ladder_2 = _1781;
                frontier_phi_49_50_ladder_3 = _1777;
                frontier_phi_49_50_ladder_4 = _1775;
                frontier_phi_49_50_ladder_5 = _1773;
            }
            _1918 = frontier_phi_49_50_ladder_5;
            _1920 = frontier_phi_49_50_ladder_4;
            _1922 = frontier_phi_49_50_ladder_3;
            _1924 = frontier_phi_49_50_ladder;
            _1926 = frontier_phi_49_50_ladder_2;
            _1928 = frontier_phi_49_50_ladder_1;
        }
        float _1933 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
        _1695 = (_1933 * _1924) + _1475;
        _1697 = (_1933 * _1926) + _1476;
        _1699 = (_1933 * _1928) + _1477;
        _1701 = ((_1918 * 0.039999999105930328369140625) * _1933) + _1577;
        _1703 = ((_1920 * 0.039999999105930328369140625) * _1933) + _1578;
        _1705 = ((_1922 * 0.039999999105930328369140625) * _1933) + _1579;
    }
    else
    {
        _1695 = _1475;
        _1697 = _1476;
        _1699 = _1477;
        _1701 = _1577;
        _1703 = _1578;
        _1705 = _1579;
    }
    float _3330 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _3341 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _3352 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _1722 = ((isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0))) * (_1695 + ((isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0))) * _482))) + ((_1701 + ((isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    float _1723 = ((isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0))) * (_1697 + ((isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0))) * _482))) + ((_1703 + ((isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    float _1724 = ((isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0))) * (_1699 + ((isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0))) * _482))) + ((_1705 + ((isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    uint _1728 = _456 + 6u;
    float _1736 = _442 / cbSceneParam._m0[86u].x;
    float _1737 = _443 / cbSceneParam._m0[86u].y;
    vec4 _1751 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1736, _1737, (log2((isnan(cbSceneParam._m0[77u].w) ? _429 : (isnan(_429) ? cbSceneParam._m0[77u].w : min(_429, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1753 = _1751.x;
    float _1754 = _1751.y;
    float _1755 = _1751.z;
    float _1756 = _1751.w;
    float _1836;
    float _1838;
    float _1840;
    float _1842;
    if (_429 > cbSceneParam._m0[78u].w)
    {
        float _1798 = isnan(_429) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _429 : min(cbSceneParam._m0[80u].w, _429));
        float _1799 = _1798 / _429;
        float _1810 = _1799 * _252;
        float _1811 = _253 * _1799;
        float _1812 = (-0.0) - _1811;
        float _1813 = _1799 * _254;
        float _1815 = (cbSceneParam._m0[77u].w * _1812) / _1798;
        float _1816 = _1815 + cbSceneParam._m0[79u].w;
        float _1817 = cbSceneParam._m0[79u].w - _1811;
        float _1823 = sqrt(((_1810 * _1810) + (_1811 * _1811)) + (_1813 * _1813));
        float _1826 = (1.0 - (cbSceneParam._m0[77u].w / _1798)) * _1823;
        float _1832 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1834 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2041;
        if (abs((_1812 - _1815) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2041 = ((((_1816 > 0.0) ? exp2(_1832 * _1816) : (2.0 - exp2(_1834 * _1816))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1826;
        }
        else
        {
            float _1976 = 1.0 / cbSceneParam._m0[80u].x;
            float _1977 = isnan(_1817) ? _1816 : (isnan(_1816) ? _1817 : max(_1816, _1817));
            float _1978 = isnan(_1817) ? _1816 : (isnan(_1816) ? _1817 : min(_1816, _1817));
            float _1987 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : min(_1977, 0.0));
            float _1988 = isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : min(_1978, 0.0));
            _2041 = ((abs(_1823 / _1812) * cbSceneParam._m0[80u].y) * ((((_1987 - _1988) * 2.0) - ((exp2(_1832 * (isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0)))) - exp2(_1832 * (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0))))) * _1976)) - ((exp2(_1834 * _1987) - exp2(_1834 * _1988)) * _1976))) + (_1826 * cbSceneParam._m0[80u].z);
        }
        vec4 _2043 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1736, _1737, 1.0), 0.0);
        float _2052 = exp2((_2041 * (-1.44269502162933349609375)) * (1.0 - _2043.w));
        float _2053 = log2(_2052);
        float _2069 = log2(_1756);
        _1836 = (exp2(_2069 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].x)) * _2043.x) / cbSceneParam._m0[78u].x)) + _1753;
        _1838 = (exp2(_2069 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].y)) * _2043.y) / cbSceneParam._m0[78u].y)) + _1754;
        _1840 = (exp2(_2069 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].z)) * _2043.z) / cbSceneParam._m0[78u].z)) + _1755;
        _1842 = _2052 * _1756;
    }
    else
    {
        _1836 = _1753;
        _1838 = _1754;
        _1840 = _1755;
        _1842 = _1756;
    }
    float _1854 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1855 = _1854 == 3.0;
    float _1857 = log2(_1842);
    float _1864 = exp2(_1857 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
    float _1865 = exp2(_1857 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0)));
    float _1866 = exp2(_1857 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)));
    float _1875 = (_1854 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1875 * (_1855 ? _1864 : (_1864 + (cbSceneParam._m0[72u].w * _1836)));
    SV_Target.y = _1875 * (_1855 ? _1865 : (_1865 + (cbSceneParam._m0[72u].w * _1838)));
    SV_Target.z = _1875 * (_1855 ? _1866 : (_1866 + (cbSceneParam._m0[72u].w * _1840)));
    SV_Target.w = cbInstanceData._m0[_1728].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1728].w;
}


