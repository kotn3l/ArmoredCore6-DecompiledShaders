#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _786;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _254 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _244);
    float _255 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _244);
    float _256 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _244);
    vec4 _275 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _310 = cbMtdParam._m0[24u].x + _254;
    float _311 = cbMtdParam._m0[24u].y + _255;
    float _312 = cbMtdParam._m0[24u].z + _256;
    float _329 = (-0.0) - dot(vec3(_310, _311, _312), vec3(_185 * _178, _185 * _179, _185 * _180));
    float _330 = (-0.0) - dot(vec3(_310, _311, _312), vec3(_196 * TANGENT.x, _196 * TANGENT.y, _196 * TANGENT.z));
    float _331 = (-0.0) - dot(vec3(_310, _311, _312), vec3((-0.0) - (NORMAL.x * _192), (-0.0) - (NORMAL.y * _192), (-0.0) - (NORMAL.z * _192)));
    float _335 = inversesqrt(dot(vec3(_329, _330, _331), vec3(_329, _330, _331)));
    float _338 = _335 * _331;
    float _341 = ((_335 * _329) + (((_275.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x)) * cbMtdParam._m0[20u].w;
    float _342 = ((_335 * _330) + (((_275.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y)) * cbMtdParam._m0[20u].z;
    float _343 = fract(TEXCOORD.x);
    float _344 = fract(TEXCOORD.y);
    float _350;
    if (_341 > 0.0)
    {
        _350 = (1.0 - _343) / _341;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_341 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _343) / _341;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _350 = frontier_phi_3_2_ladder;
    }
    float _358;
    if (_342 > 0.0)
    {
        _358 = (1.0 - _344) / _342;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_342 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _344) / _342;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _358 = frontier_phi_7_6_ladder;
    }
    float _362 = (_338 > 0.0) ? (cbMtdParam._m0[16u].x / _338) : 5000.0;
    float _363 = isnan(_358) ? _350 : (isnan(_350) ? _358 : min(_350, _358));
    float _364 = isnan(_362) ? _363 : (isnan(_363) ? _362 : min(_363, _362));
    float _368 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _375 = ((_364 * _338) + _368) / _368;
    vec4 _400 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * ((((((_343 + (-0.5)) + (_364 * _341)) / _375) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * ((((((_344 + (-0.5)) + (_364 * _342)) / _375) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _410 = cbMtdParam._m0[9u].x * _400.x;
    float _411 = cbMtdParam._m0[9u].y * _400.y;
    float _412 = cbMtdParam._m0[9u].z * _400.z;
    float _2700 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _2711 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _2722 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _431 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _435 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _436 = _254 * _435;
    float _437 = _255 * _435;
    float _438 = _256 * _435;
    float _444 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _445 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _458 = uint(roundEven(NORMAL.w)) * 13u;
    uint _461 = (_458 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _467 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2700 : (isnan(_2700) ? 1.0 : min(_2700, 1.0)))) * cbInstanceData._m0[_461].x;
    float _468 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2711 : (isnan(_2711) ? 1.0 : min(_2711, 1.0)))) * cbInstanceData._m0[_461].y;
    float _469 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2722 : (isnan(_2722) ? 1.0 : min(_2722, 1.0)))) * cbInstanceData._m0[_461].z;
    float _2733 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _470 = isnan(1.0) ? _2733 : (isnan(_2733) ? 1.0 : min(_2733, 1.0));
    float _2744 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _471 = isnan(1.0) ? _2744 : (isnan(_2744) ? 1.0 : min(_2744, 1.0));
    float _2755 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _472 = isnan(1.0) ? _2755 : (isnan(_2755) ? 1.0 : min(_2755, 1.0));
    vec4 _481 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _444, cbSceneParam._m0[86u].y * _445));
    float _484 = _481.x * TEXCOORD_4.z;
    float _485 = (-0.0) - _436;
    float _486 = (-0.0) - _437;
    float _487 = (-0.0) - _438;
    float _509 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _513 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _517 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _785;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    float _796;
    float _797;
    float _798;
    float _799;
    float _800;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _573 = (cbModelParam._m0[37u].x * ((((fma(_517, cbModelParam._m0[26u].z, fma(_513, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _509)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _575 = (cbModelParam._m0[37u].y * ((((fma(_517, cbModelParam._m0[27u].z, fma(_513, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _509)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _576 = (((((fma(_517, cbModelParam._m0[28u].z, fma(_513, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _509)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _579 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_573, _575, _576), 0.0);
        vec4 _586 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_573, _575, _576), 0.0);
        vec4 _593 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_573, _575, _576), 0.0);
        vec4 _600 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_573, _575, _576), 0.0);
        float _613 = exp2((_579.w + (-0.5)) * 20.0) * 2.0;
        float _614 = _613 * (_579.x + (-0.5));
        float _615 = _613 * (_579.y + (-0.5));
        float _616 = _613 * (_579.z + (-0.5));
        float _623 = exp2((_586.w + (-0.5)) * 20.0) * 2.0;
        float _624 = _623 * (_586.x + (-0.5));
        float _625 = _623 * (_586.y + (-0.5));
        float _626 = _623 * (_586.z + (-0.5));
        float _633 = exp2((_593.w + (-0.5)) * 20.0) * 2.0;
        float _634 = _633 * (_593.x + (-0.5));
        float _635 = _633 * (_593.y + (-0.5));
        float _636 = _633 * (_593.z + (-0.5));
        float _643 = exp2((_600.w + (-0.5)) * 20.0) * 2.0;
        float _644 = _643 * (_600.x + (-0.5));
        float _645 = _643 * (_600.y + (-0.5));
        float _646 = _643 * (_600.z + (-0.5));
        float _647 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
        float _648 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
        float _649 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
        float _650 = _614 * 0.5;
        float _651 = _624 * 0.5;
        float _652 = _634 * 0.5;
        float _653 = dot(vec3(_650, _651, _652), vec3(_650, _651, _652));
        float _658 = (_653 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_653);
        float _667 = (dot(vec3(0.0), vec3(_658 * _650, _658 * _651, _658 * _652)) + 1.0) * 0.5;
        float _2781 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _677 = sqrt(((_651 * _651) + (_650 * _650)) + (_652 * _652)) / (_647 + 9.9999997473787516355514526367188e-06);
        float _2792 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
        float _678 = isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0));
        float _679 = _678 * 2.0;
        float _683 = (1.0 - _678) / (_678 + 1.0);
        float _2803 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
        float _684 = isnan(1.0) ? _2803 : (isnan(_2803) ? 1.0 : min(_2803, 1.0));
        float _693 = ((((1.0 - _684) * (_679 + 2.0)) * exp2(log2(isnan(1.0) ? _2781 : (isnan(_2781) ? 1.0 : min(_2781, 1.0))) * (_679 + 1.0))) + _684) * _647;
        float _694 = _615 * 0.5;
        float _695 = _625 * 0.5;
        float _696 = _635 * 0.5;
        float _697 = dot(vec3(_694, _695, _696), vec3(_694, _695, _696));
        float _702 = (_697 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_697);
        float _710 = (dot(vec3(0.0), vec3(_702 * _694, _702 * _695, _702 * _696)) + 1.0) * 0.5;
        float _2814 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
        float _719 = sqrt(((_695 * _695) + (_694 * _694)) + (_696 * _696)) / (_648 + 9.9999997473787516355514526367188e-06);
        float _2825 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
        float _720 = isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0));
        float _721 = _720 * 2.0;
        float _725 = (1.0 - _720) / (_720 + 1.0);
        float _2836 = isnan(0.0) ? _725 : (isnan(_725) ? 0.0 : max(_725, 0.0));
        float _726 = isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0));
        float _735 = ((((1.0 - _726) * (_721 + 2.0)) * exp2(log2(isnan(1.0) ? _2814 : (isnan(_2814) ? 1.0 : min(_2814, 1.0))) * (_721 + 1.0))) + _726) * _648;
        float _736 = _616 * 0.5;
        float _737 = _626 * 0.5;
        float _738 = _636 * 0.5;
        float _739 = dot(vec3(_736, _737, _738), vec3(_736, _737, _738));
        float _744 = (_739 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_739);
        float _752 = (dot(vec3(0.0), vec3(_744 * _736, _744 * _737, _744 * _738)) + 1.0) * 0.5;
        float _2847 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
        float _761 = sqrt(((_737 * _737) + (_736 * _736)) + (_738 * _738)) / (_649 + 9.9999997473787516355514526367188e-06);
        float _2858 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        float _762 = isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0));
        float _763 = _762 * 2.0;
        float _767 = (1.0 - _762) / (_762 + 1.0);
        float _2869 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
        float _768 = isnan(1.0) ? _2869 : (isnan(_2869) ? 1.0 : min(_2869, 1.0));
        float _777 = ((((1.0 - _768) * (_763 + 2.0)) * exp2(log2(isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0))) * (_763 + 1.0))) + _768) * _649;
        _785 = _616;
        _787 = _615;
        _788 = _614;
        _789 = _626;
        _790 = _625;
        _791 = _624;
        _792 = _636;
        _793 = _635;
        _794 = _634;
        _795 = _649;
        _796 = _648;
        _797 = _647;
        _798 = cbModelParam._m0[36u].z * (isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0)));
        _799 = cbModelParam._m0[36u].z * (isnan(0.0) ? _735 : (isnan(_735) ? 0.0 : max(_735, 0.0)));
        _800 = cbModelParam._m0[36u].z * (isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0)));
    }
    else
    {
        _785 = _786;
        _787 = _786;
        _788 = _786;
        _789 = _786;
        _790 = _786;
        _791 = _786;
        _792 = _786;
        _793 = _786;
        _794 = _786;
        _795 = _786;
        _796 = _786;
        _797 = _786;
        _798 = 0.0;
        _799 = 0.0;
        _800 = 0.0;
    }
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    float _1071;
    float _1072;
    float _1073;
    float _1074;
    float _1075;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _854 = (cbModelParam._m0[38u].x * ((((fma(_517, cbModelParam._m0[30u].z, fma(_513, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _509)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _855 = (cbModelParam._m0[38u].y * ((((fma(_517, cbModelParam._m0[31u].z, fma(_513, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _509)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _856 = (((((fma(_517, cbModelParam._m0[32u].z, fma(_513, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _509)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _858 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _865 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _872 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _879 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        float _891 = exp2((_858.w + (-0.5)) * 20.0) * 2.0;
        float _892 = _891 * (_858.x + (-0.5));
        float _893 = _891 * (_858.y + (-0.5));
        float _894 = _891 * (_858.z + (-0.5));
        float _901 = exp2((_865.w + (-0.5)) * 20.0) * 2.0;
        float _902 = _901 * (_865.x + (-0.5));
        float _903 = _901 * (_865.y + (-0.5));
        float _904 = _901 * (_865.z + (-0.5));
        float _911 = exp2((_872.w + (-0.5)) * 20.0) * 2.0;
        float _912 = _911 * (_872.x + (-0.5));
        float _913 = _911 * (_872.y + (-0.5));
        float _914 = _911 * (_872.z + (-0.5));
        float _921 = exp2((_879.w + (-0.5)) * 20.0) * 2.0;
        float _922 = _921 * (_879.x + (-0.5));
        float _923 = _921 * (_879.y + (-0.5));
        float _924 = _921 * (_879.z + (-0.5));
        float _925 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _926 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
        float _927 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _928 = _892 * 0.5;
        float _929 = _902 * 0.5;
        float _930 = _912 * 0.5;
        float _931 = dot(vec3(_928, _929, _930), vec3(_928, _929, _930));
        float _936 = (_931 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_931);
        float _944 = (dot(vec3(0.0), vec3(_936 * _928, _936 * _929, _936 * _930)) + 1.0) * 0.5;
        float _2910 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        float _953 = sqrt(((_929 * _929) + (_928 * _928)) + (_930 * _930)) / (_925 + 9.9999997473787516355514526367188e-06);
        float _2921 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        float _954 = isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0));
        float _955 = _954 * 2.0;
        float _959 = (1.0 - _954) / (_954 + 1.0);
        float _2932 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _960 = isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0));
        float _969 = ((((1.0 - _960) * (_955 + 2.0)) * exp2(log2(isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0))) * (_955 + 1.0))) + _960) * _925;
        float _970 = _893 * 0.5;
        float _971 = _903 * 0.5;
        float _972 = _913 * 0.5;
        float _973 = dot(vec3(_970, _971, _972), vec3(_970, _971, _972));
        float _978 = (_973 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_973);
        float _986 = (dot(vec3(0.0), vec3(_978 * _970, _978 * _971, _978 * _972)) + 1.0) * 0.5;
        float _2943 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _995 = sqrt(((_971 * _971) + (_970 * _970)) + (_972 * _972)) / (_926 + 9.9999997473787516355514526367188e-06);
        float _2954 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
        float _996 = isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0));
        float _997 = _996 * 2.0;
        float _1001 = (1.0 - _996) / (_996 + 1.0);
        float _2965 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
        float _1002 = isnan(1.0) ? _2965 : (isnan(_2965) ? 1.0 : min(_2965, 1.0));
        float _1011 = ((((1.0 - _1002) * (_997 + 2.0)) * exp2(log2(isnan(1.0) ? _2943 : (isnan(_2943) ? 1.0 : min(_2943, 1.0))) * (_997 + 1.0))) + _1002) * _926;
        float _1012 = _894 * 0.5;
        float _1013 = _904 * 0.5;
        float _1014 = _914 * 0.5;
        float _1015 = dot(vec3(_1012, _1013, _1014), vec3(_1012, _1013, _1014));
        float _1020 = (_1015 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1015);
        float _1028 = (dot(vec3(0.0), vec3(_1020 * _1012, _1020 * _1013, _1020 * _1014)) + 1.0) * 0.5;
        float _2976 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1037 = sqrt(((_1013 * _1013) + (_1012 * _1012)) + (_1014 * _1014)) / (_927 + 9.9999997473787516355514526367188e-06);
        float _2987 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1038 = isnan(1.0) ? _2987 : (isnan(_2987) ? 1.0 : min(_2987, 1.0));
        float _1039 = _1038 * 2.0;
        float _1043 = (1.0 - _1038) / (_1038 + 1.0);
        float _2998 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1044 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
        float _1053 = ((((1.0 - _1044) * (_1039 + 2.0)) * exp2(log2(isnan(1.0) ? _2976 : (isnan(_2976) ? 1.0 : min(_2976, 1.0))) * (_1039 + 1.0))) + _1044) * _927;
        _1061 = _894;
        _1062 = _893;
        _1063 = _892;
        _1064 = _904;
        _1065 = _903;
        _1066 = _902;
        _1067 = _914;
        _1068 = _913;
        _1069 = _912;
        _1070 = _927;
        _1071 = _926;
        _1072 = _925;
        _1073 = cbModelParam._m0[36u].w * (isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0)));
        _1074 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0)));
        _1075 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0)));
    }
    else
    {
        _1061 = _786;
        _1062 = _786;
        _1063 = _786;
        _1064 = _786;
        _1065 = _786;
        _1066 = _786;
        _1067 = _786;
        _1068 = _786;
        _1069 = _786;
        _1070 = _786;
        _1071 = _786;
        _1072 = _786;
        _1073 = 0.0;
        _1074 = 0.0;
        _1075 = 0.0;
    }
    float _1085 = (cbModelParam._m0[1u].x * (_1073 - _798)) + _798;
    float _1086 = (cbModelParam._m0[1u].x * (_1074 - _799)) + _799;
    float _1087 = (cbModelParam._m0[1u].x * (_1075 - _800)) + _800;
    float _1108 = fma(_1087, cbSceneParam._m0[89u].z, fma(_1086, cbSceneParam._m0[89u].y, _1085 * cbSceneParam._m0[89u].x));
    float _1111 = fma(_1087, cbSceneParam._m0[90u].z, fma(_1086, cbSceneParam._m0[90u].y, _1085 * cbSceneParam._m0[90u].x));
    float _1114 = fma(_1087, cbSceneParam._m0[91u].z, fma(_1086, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1085));
    float _1129 = _436 * (-0.5);
    float _1130 = _437 * (-0.5);
    float _1131 = _438 * (-0.5);
    float _1132 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1063, _1066, _1069, _1072));
    float _1135 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1062, _1065, _1068, _1071));
    float _1138 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1061, _1064, _1067, _1070));
    float _1172;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1145 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_785, _789, _792, _795));
        float _1149 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_787, _790, _793, _796));
        float _1153 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_788, _791, _794, _797));
        float _1160 = dot(vec4(cbModelParam._m0[39u]), vec4(_1129, _1130, _1131, 1.0));
        _1172 = dot(vec3(isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)), isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0)), isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1160) ? 0.0 : (isnan(0.0) ? _1160 : max(0.0, _1160))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1172 = 1.0;
    }
    float _1183;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1174 = dot(vec4(cbModelParam._m0[40u]), vec4(_1129, _1130, _1131, 1.0));
        _1183 = dot(vec3(isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0)), isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0)), isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1174) ? 0.0 : (isnan(0.0) ? _1174 : max(0.0, _1174))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1183 = 1.0;
    }
    float _1187 = (_1183 * cbModelParam._m0[1u].x) + (_1172 * (1.0 - cbModelParam._m0[1u].x));
    float _1196 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1279;
    float _1281;
    float _1283;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1246 = fma(_517, cbModelParam._m0[13u].z, fma(_513, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _509)) + cbModelParam._m0[13u].w;
        float _1250 = fma(_517, cbModelParam._m0[14u].z, fma(_513, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _509)) + cbModelParam._m0[14u].w;
        float _1254 = fma(_517, cbModelParam._m0[15u].z, fma(_513, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _509)) + cbModelParam._m0[15u].w;
        float _1257 = fma(_487, cbModelParam._m0[13u].z, fma(_486, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _485));
        float _1260 = fma(_487, cbModelParam._m0[14u].z, fma(_486, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _485));
        float _1263 = fma(_487, cbModelParam._m0[15u].z, fma(_486, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _485));
        float _1289;
        if (_1257 > 0.0)
        {
            _1289 = abs((1.0 - _1246) / _1257);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1257 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1246 + 1.0) / _1257);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1289 = frontier_phi_22_20_ladder;
        }
        float _1612;
        if (_1260 > 0.0)
        {
            _1612 = abs((1.0 - _1250) / _1260);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1260 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1250 + 1.0) / _1260);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1612 = frontier_phi_31_27_ladder;
        }
        float _1914;
        if (_1263 > 0.0)
        {
            _1914 = abs((1.0 - _1254) / _1263);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1263 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1254 + 1.0) / _1263);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _1914 = frontier_phi_45_38_ladder;
        }
        float _1916 = isnan(_1612) ? _1289 : (isnan(_1289) ? _1612 : min(_1289, _1612));
        float _1917 = isnan(_1914) ? _1916 : (isnan(_1916) ? _1914 : min(_1916, _1914));
        float _1921 = (_1917 * _1257) + _1246;
        float _1922 = (_1917 * _1260) + _1250;
        float _1923 = (_1917 * _1263) + _1254;
        float _1924 = _1917 * 9.9999997473787516355514526367188e-05;
        float _1925 = (-1.0) - _1924;
        float _1927 = _1924 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_1923 > _1927) || ((_1923 < _1925) || ((_1922 > _1927) || ((_1922 < _1925) || ((_1921 < _1925) || (_1921 > _1927))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2046 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1923, cbModelParam._m0[9u].z, fma(_1922, cbModelParam._m0[9u].y, _1921 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1923, cbModelParam._m0[10u].z, fma(_1922, cbModelParam._m0[10u].y, _1921 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1923, cbModelParam._m0[11u].z, fma(_1922, cbModelParam._m0[11u].y, _1921 * cbModelParam._m0[11u].x))), _1196);
            frontier_phi_21_45_ladder = _2046.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2046.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2046.x * cbModelParam._m0[1u].y;
        }
        _1279 = frontier_phi_21_45_ladder_2;
        _1281 = frontier_phi_21_45_ladder_1;
        _1283 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1267 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_485, _486, _487), _1196);
        _1279 = _1267.x * cbModelParam._m0[1u].y;
        _1281 = _1267.y * cbModelParam._m0[1u].y;
        _1283 = _1267.z * cbModelParam._m0[1u].y;
    }
    float _1286 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1376;
    float _1378;
    float _1380;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1340 = fma(_517, cbModelParam._m0[21u].z, fma(_513, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _509)) + cbModelParam._m0[21u].w;
        float _1344 = fma(_517, cbModelParam._m0[22u].z, fma(_513, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _509)) + cbModelParam._m0[22u].w;
        float _1348 = fma(_517, cbModelParam._m0[23u].z, fma(_513, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _509)) + cbModelParam._m0[23u].w;
        float _1351 = fma(_487, cbModelParam._m0[21u].z, fma(_486, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _485));
        float _1354 = fma(_487, cbModelParam._m0[22u].z, fma(_486, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _485));
        float _1357 = fma(_487, cbModelParam._m0[23u].z, fma(_486, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _485));
        float _1617;
        if (_1351 > 0.0)
        {
            _1617 = abs((1.0 - _1340) / _1351);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1351 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1340 + 1.0) / _1351);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1617 = frontier_phi_33_29_ladder;
        }
        float _1940;
        if (_1354 > 0.0)
        {
            _1940 = abs((1.0 - _1344) / _1354);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1354 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1344 + 1.0) / _1354);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _1940 = frontier_phi_47_40_ladder;
        }
        float _2106;
        if (_1357 > 0.0)
        {
            _2106 = abs((1.0 - _1348) / _1357);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1357 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1348 + 1.0) / _1357);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2106 = frontier_phi_61_56_ladder;
        }
        float _2108 = isnan(_1940) ? _1617 : (isnan(_1617) ? _1940 : min(_1617, _1940));
        float _2109 = isnan(_2106) ? _2108 : (isnan(_2108) ? _2106 : min(_2108, _2106));
        float _2113 = (_2109 * _1351) + _1340;
        float _2114 = (_2109 * _1354) + _1344;
        float _2115 = (_2109 * _1357) + _1348;
        float _2116 = _2109 * 9.9999997473787516355514526367188e-05;
        float _2117 = (-1.0) - _2116;
        float _2119 = _2116 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2115 > _2119) || ((_2115 < _2117) || ((_2114 > _2119) || ((_2114 < _2117) || ((_2113 < _2117) || (_2113 > _2119))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2298 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2115, cbModelParam._m0[17u].z, fma(_2114, cbModelParam._m0[17u].y, _2113 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2115, cbModelParam._m0[18u].z, fma(_2114, cbModelParam._m0[18u].y, _2113 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2115, cbModelParam._m0[19u].z, fma(_2114, cbModelParam._m0[19u].y, _2113 * cbModelParam._m0[19u].x))), _1286);
            frontier_phi_30_61_ladder = _2298.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2298.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2298.x * cbModelParam._m0[1u].z;
        }
        _1376 = frontier_phi_30_61_ladder_2;
        _1378 = frontier_phi_30_61_ladder_1;
        _1380 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1360 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_485, _486, _487), _1286);
        _1376 = _1360.x * cbModelParam._m0[1u].z;
        _1378 = _1360.y * cbModelParam._m0[1u].z;
        _1380 = _1360.z * cbModelParam._m0[1u].z;
    }
    float _1392 = _484 * 0.01200000010430812835693359375;
    float _1394 = _1392 * ((cbModelParam._m0[1u].w * (_1376 - _1279)) + _1279);
    float _1395 = _1392 * ((cbModelParam._m0[1u].w * (_1378 - _1281)) + _1281);
    float _1396 = _1392 * ((cbModelParam._m0[1u].w * (_1380 - _1283)) + _1283);
    float _1399 = fma(_1396, cbSceneParam._m0[89u].z, fma(_1395, cbSceneParam._m0[89u].y, _1394 * cbSceneParam._m0[89u].x));
    float _1402 = fma(_1396, cbSceneParam._m0[90u].z, fma(_1395, cbSceneParam._m0[90u].y, _1394 * cbSceneParam._m0[90u].x));
    float _1405 = fma(_1396, cbSceneParam._m0[91u].z, fma(_1395, cbSceneParam._m0[91u].y, _1394 * cbSceneParam._m0[91u].x));
    vec4 _1413 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_444, _445));
    float _1415 = _1413.w;
    float _1428 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1415);
    float _1429 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1415);
    float _1430 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1415);
    uvec4 _1434 = floatBitsToUint(cbInstanceData._m0[_458 + 5u]);
    uint _1436 = _1434.x * 14u;
    uint _1437 = _1436 + 13u;
    float _1442 = _484 + (-1.0);
    float _1445 = (cbLight._m0[_1437].x * _1442) + 1.0;
    float _1446 = (cbLight._m0[_1437].y * _1442) + 1.0;
    uint _1447 = _1436 + 5u;
    float _1453 = isnan(1.0) ? _1446 : (isnan(_1446) ? 1.0 : min(_1446, 1.0));
    uint _1457 = _1436 + 4u;
    float _1467 = isnan(1.0) ? _1445 : (isnan(_1445) ? 1.0 : min(_1445, 1.0));
    uint _1471 = _1436 | 1u;
    float _1482 = dot(vec3(cbLight._m0[_1436].xyz), vec3(0.0));
    float _1485 = dot(vec3(cbLight._m0[_1471].xyz), vec3(0.0));
    float _3134 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
    float _3145 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _1490 = (isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0))) * 0.3183098733425140380859375;
    float _1492 = (isnan(1.0) ? _3145 : (isnan(_3145) ? 1.0 : min(_3145, 1.0))) * 0.3183098733425140380859375;
    float _1499 = ((cbLight._m0[_1447].x * _1453) * _1492) + (((cbLight._m0[_1457].x * _1428) * _1467) * _1490);
    float _1500 = ((_1453 * cbLight._m0[_1447].y) * _1492) + (((cbLight._m0[_1457].y * _1429) * _1467) * _1490);
    float _1501 = ((_1453 * cbLight._m0[_1447].z) * _1492) + (((cbLight._m0[_1457].z * _1430) * _1467) * _1490);
    uint _1502 = _1436 + 8u;
    float _1508 = cbLight._m0[_1436].x + _436;
    float _1509 = cbLight._m0[_1436].y + _437;
    float _1510 = cbLight._m0[_1436].z + _438;
    float _1514 = inversesqrt(dot(vec3(_1508, _1509, _1510), vec3(_1508, _1509, _1510)));
    float _1518 = dot(vec3(0.0), vec3(cbLight._m0[_1436].xyz));
    float _3156 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1521 = isnan(1.0) ? _3156 : (isnan(_3156) ? 1.0 : min(_3156, 1.0));
    float _1522 = dot(vec3(0.0), vec3(_436, _437, _438));
    float _3167 = isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0));
    float _1525 = isnan(1.0) ? _3167 : (isnan(_3167) ? 1.0 : min(_3167, 1.0));
    float _1526 = dot(vec3(cbLight._m0[_1436].xyz), vec3(_1508 * _1514, _1509 * _1514, _1510 * _1514));
    float _3178 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
    float _1537 = (exp2(log2(1.0 - (isnan(1.0) ? _3178 : (isnan(_3178) ? 1.0 : min(_3178, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1543 = (0.5 / ((_1521 + 9.9999999392252902907785028219223e-09) + _1525)) * _1521;
    float _3189 = isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0));
    float _1545 = (isnan(1.0) ? _3189 : (isnan(_3189) ? 1.0 : min(_3189, 1.0))) * 0.31831014156341552734375;
    uint _1559 = _1436 + 9u;
    float _1565 = cbLight._m0[_1471].x + _436;
    float _1566 = cbLight._m0[_1471].y + _437;
    float _1567 = cbLight._m0[_1471].z + _438;
    float _1571 = inversesqrt(dot(vec3(_1565, _1566, _1567), vec3(_1565, _1566, _1567)));
    float _1575 = dot(vec3(0.0), vec3(cbLight._m0[_1471].xyz));
    float _3200 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
    float _1578 = isnan(1.0) ? _3200 : (isnan(_3200) ? 1.0 : min(_3200, 1.0));
    float _1579 = dot(vec3(cbLight._m0[_1471].xyz), vec3(_1565 * _1571, _1566 * _1571, _1567 * _1571));
    float _3211 = isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0));
    float _1588 = (exp2(log2(1.0 - (isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1592 = (0.5 / ((_1578 + 9.9999999392252902907785028219223e-09) + _1525)) * _1578;
    float _3222 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    float _1594 = (isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0))) * 0.31831014156341552734375;
    float _1604 = (((_1588 * cbLight._m0[_1559].x) * _1594) * _1453) + ((((cbLight._m0[_1502].x * _1428) * _1537) * _1545) * _1467);
    float _1605 = (((_1588 * cbLight._m0[_1559].y) * _1594) * _1453) + ((((cbLight._m0[_1502].y * _1429) * _1537) * _1545) * _1467);
    float _1606 = (((_1588 * cbLight._m0[_1559].z) * _1594) * _1453) + ((((cbLight._m0[_1502].z * _1430) * _1537) * _1545) * _1467);
    float _1722;
    float _1724;
    float _1726;
    float _1728;
    float _1730;
    float _1732;
    if (_1434.y == 0u)
    {
        float _1662 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1663 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1662;
        float _1664 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1662;
        float _1665 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1662;
        uvec4 _1677 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1678 = _1677.x;
        uint _1689 = uint((float(_1677.y) * floor(float(uint(cbSceneParam._m0[85u].y * _445) / _1678))) + floor(float(uint(cbSceneParam._m0[85u].x * _444) / _1678)));
        float _1699 = (log2(_1665 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1700 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        uint _1703 = uint(isnan(14.0) ? _1700 : (isnan(_1700) ? 14.0 : min(_1700, 14.0)));
        uvec4 _1708 = texelFetch(g_lightClusterGridBuffer, int(((_1703 << 2u) + (_1689 << 6u)) >> 2u));
        uint _1709 = _1708.x;
        uint _1710 = _1677.z;
        float _1800;
        float _1802;
        float _1804;
        float _1806;
        float _1808;
        float _1810;
        if (((((1u << ((_1710 >> 4u) & 15u)) + 4294967295u) & _1709) == 0u) || ((_1710 & 240u) == 0u))
        {
            _1800 = 0.0;
            _1802 = 0.0;
            _1804 = 0.0;
            _1806 = 0.0;
            _1808 = 0.0;
            _1810 = 0.0;
        }
        else
        {
            float _1801;
            float _1803;
            float _1805;
            float _1807;
            float _1809;
            float _1811;
            float _1974 = 0.0;
            float _1975 = 0.0;
            float _1976 = 0.0;
            float _1977 = 0.0;
            float _1978 = 0.0;
            float _1979 = 0.0;
            uint _1980 = 0u;
            uint _1989;
            bool _1990;
            for (;;)
            {
                _1989 = texelFetch(g_lightClassification, int((((_1703 << 5u) + (_1689 << 9u)) + (_1980 << 2u)) >> 2u)).x;
                _1990 = _1989 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_1990)
                {
                    frontier_phi_58_pred = _1975;
                    frontier_phi_58_pred_1 = _1979;
                    frontier_phi_58_pred_2 = _1978;
                    frontier_phi_58_pred_3 = _1977;
                    frontier_phi_58_pred_4 = _1976;
                    frontier_phi_58_pred_5 = _1974;
                }
                else
                {
                    float _2149;
                    float _2150;
                    float _2151;
                    float _2152;
                    float _2153;
                    float _2154;
                    uint _2155;
                    _2149 = _1974;
                    _2150 = _1975;
                    _2151 = _1976;
                    _2152 = _1977;
                    _2153 = _1978;
                    _2154 = _1979;
                    _2155 = _1989;
                    float _2055;
                    float _2056;
                    float _2057;
                    float _2058;
                    float _2059;
                    float _2060;
                    for (;;)
                    {
                        uint _2159 = uint(findLSB(_2155)) + (_1980 << 5u);
                        uint _2156 = (_2155 + 4294967295u) & _2155;
                        uint _2161 = _2159 * 48u;
                        vec4 _2175 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2161)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2161 + 3u)).x));
                        uint _2181 = (_2159 * 48u) + 4u;
                        vec4 _2194 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2181)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2181 + 3u)).x));
                        uint _2200 = (_2159 * 48u) + 8u;
                        vec3 _2211 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2200)).x, texelFetch(g_PointLightRenderingBuffer, int(_2200 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2200 + 2u)).x));
                        float _2215 = _2175.x - _1663;
                        float _2216 = _2175.y - _1664;
                        float _2217 = _2175.z - _1665;
                        float _2218 = dot(vec3(_2215, _2216, _2217), vec3(_2215, _2216, _2217));
                        float _2221 = inversesqrt(_2218);
                        float _2230 = 1.0 - (_2218 * _2175.w);
                        float _3243 = isnan(0.0) ? _2230 : (isnan(_2230) ? 0.0 : max(_2230, 0.0));
                        float _2231 = isnan(1.0) ? _3243 : (isnan(_3243) ? 1.0 : min(_3243, 1.0));
                        float _2232 = sqrt(_2218) * _2194.w;
                        float _2235 = 1.39999997615814208984375 / (_2232 + 1.39999997615814208984375);
                        float _2236 = _2235 * _2235;
                        float _2239 = ((1.0 - _2236) * dot(vec3(0.0), vec3(_2221 * _2215, _2221 * _2216, _2221 * _2217))) + _2236;
                        float _2242 = _2232 * _2232;
                        float _2246 = ((isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0))) * _2231) / ((_2242 * 0.699999988079071044921875) + 1.0);
                        float _2250 = (-0.0) - _1663;
                        float _2251 = (-0.0) - _1664;
                        float _2252 = (-0.0) - _1665;
                        float _2256 = inversesqrt(dot(vec3(_2250, _2251, _2252), vec3(_2250, _2251, _2252)));
                        float _2260 = dot(vec3(0.0), vec3(_2256 * _2250, _2256 * _2251, _2256 * _2252));
                        float _3259 = isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0));
                        float _3270 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
                        float _2264 = isnan(1.0) ? _3270 : (isnan(_3270) ? 1.0 : min(_3270, 1.0));
                        float _2268 = (0.5 / (((isnan(1.0) ? _3259 : (isnan(_3259) ? 1.0 : min(_3259, 1.0))) + 9.9999999392252902907785028219223e-09) + _2264)) * _2264;
                        float _3281 = isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0));
                        float _2277 = (((isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0))) * 3.1415927410125732421875) / ((_2242 * 2.1991131305694580078125) + 3.141590118408203125)) * _2231;
                        _2058 = (_2246 * _2194.x) + _2152;
                        _2059 = (_2246 * _2194.y) + _2153;
                        _2060 = (_2246 * _2194.z) + _2154;
                        _2055 = (_2277 * _2211.x) + _2149;
                        _2056 = (_2277 * _2211.y) + _2150;
                        _2057 = (_2277 * _2211.z) + _2151;
                        if (_2156 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2149 = _2055;
                            _2150 = _2056;
                            _2151 = _2057;
                            _2152 = _2058;
                            _2153 = _2059;
                            _2154 = _2060;
                            _2155 = _2156;
                        }
                    }
                    frontier_phi_58_pred = _2056;
                    frontier_phi_58_pred_1 = _2060;
                    frontier_phi_58_pred_2 = _2059;
                    frontier_phi_58_pred_3 = _2058;
                    frontier_phi_58_pred_4 = _2057;
                    frontier_phi_58_pred_5 = _2055;
                }
                _1803 = frontier_phi_58_pred;
                _1811 = frontier_phi_58_pred_1;
                _1809 = frontier_phi_58_pred_2;
                _1807 = frontier_phi_58_pred_3;
                _1805 = frontier_phi_58_pred_4;
                _1801 = frontier_phi_58_pred_5;
                uint _1981 = _1980 + 1u;
                if (_1981 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1974 = _1801;
                    _1975 = _1803;
                    _1976 = _1805;
                    _1977 = _1807;
                    _1978 = _1809;
                    _1979 = _1811;
                    _1980 = _1981;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1800 = _1801;
            _1802 = _1803;
            _1804 = _1805;
            _1806 = _1807;
            _1808 = _1809;
            _1810 = _1811;
        }
        uvec4 _1814 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1815 = _1814.z;
        uint _1817 = (_1815 >> 8u) & 15u;
        float _1945;
        float _1947;
        float _1949;
        float _1951;
        float _1953;
        float _1955;
        if (((4294967295u << _1817) & _1709) == 0u)
        {
            _1945 = _1800;
            _1947 = _1802;
            _1949 = _1804;
            _1951 = _1806;
            _1953 = _1808;
            _1955 = _1810;
        }
        else
        {
            float _1970 = inversesqrt(dot(vec3(_1663, _1664, _1665), vec3(_1663, _1664, _1665)));
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_1817 < ((_1815 >> 12u) & 15u))
            {
                float _1946;
                float _1948;
                float _1950;
                float _1952;
                float _1954;
                float _1956;
                float _2132 = _1800;
                float _2133 = _1802;
                float _2134 = _1804;
                float _2135 = _1806;
                float _2136 = _1808;
                float _2137 = _1810;
                uint _2138 = _1817;
                uint _2147;
                bool _2148;
                for (;;)
                {
                    _2147 = texelFetch(g_lightClassification, int((((_1703 << 5u) + (_1689 << 9u)) + (_2138 << 2u)) >> 2u)).x;
                    _2148 = _2147 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2148)
                    {
                        frontier_phi_67_pred = _2137;
                        frontier_phi_67_pred_1 = _2136;
                        frontier_phi_67_pred_2 = _2135;
                        frontier_phi_67_pred_3 = _2134;
                        frontier_phi_67_pred_4 = _2133;
                        frontier_phi_67_pred_5 = _2132;
                    }
                    else
                    {
                        float _2303;
                        float _2304;
                        float _2305;
                        float _2306;
                        float _2307;
                        float _2308;
                        float _2552;
                        float _2553;
                        float _2554;
                        float _2555;
                        float _2556;
                        float _2557;
                        float _2316 = _2132;
                        float _2317 = _2133;
                        float _2318 = _2134;
                        float _2319 = _2135;
                        float _2320 = _2136;
                        float _2321 = _2137;
                        uint _2322 = _2147;
                        uint _2323;
                        vec4 _2348;
                        float _2349;
                        vec4 _2364;
                        vec3 _2376;
                        vec4 _2391;
                        vec4 _2406;
                        float _2452;
                        bool _2453;
                        for (;;)
                        {
                            uint _2333 = ((_2138 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2322));
                            _2323 = (_2322 + 4294967295u) & _2322;
                            uint _2335 = _2333 * 40u;
                            _2348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 3u)).x));
                            _2349 = _2348.w;
                            uint _2351 = (_2333 * 40u) + 4u;
                            _2364 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2351)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 3u)).x));
                            uint _2366 = (_2333 * 40u) + 8u;
                            _2376 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 2u)).x));
                            uint _2378 = (_2333 * 40u) + 16u;
                            _2391 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2378)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2378 + 3u)).x));
                            uint _2393 = (_2333 * 40u) + 20u;
                            _2406 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2393)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2393 + 3u)).x));
                            uint _2408 = (_2333 * 40u) + 24u;
                            vec4 _2421 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2408)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2408 + 3u)).x));
                            uint _2427 = (_2333 * 40u) + 28u;
                            vec4 _2440 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2427)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2427 + 3u)).x));
                            _2452 = fma(_1665, _2440.z, fma(_1664, _2440.y, _2440.x * _1663)) + _2440.w;
                            _2453 = !((fma(_1665, _2421.z, fma(_1664, _2421.y, _2421.x * _1663)) + _2421.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2453)
                            {
                                float _2480 = _2348.x - _1663;
                                float _2481 = _2348.y - _1664;
                                float _2482 = _2348.z - _1665;
                                float _2483 = dot(vec3(_2480, _2481, _2482), vec3(_2480, _2481, _2482));
                                float _2486 = inversesqrt(_2483);
                                float _2487 = _2486 * _2480;
                                float _2488 = _2486 * _2481;
                                float _2489 = _2486 * _2482;
                                float _2493 = 1.0 - (_2483 / (_2349 * _2349));
                                float _3292 = isnan(0.0) ? _2493 : (isnan(_2493) ? 0.0 : max(_2493, 0.0));
                                float _2494 = isnan(1.0) ? _3292 : (isnan(_3292) ? 1.0 : min(_3292, 1.0));
                                float _2498 = sqrt(_2483) * _2364.w;
                                float _2500 = 1.39999997615814208984375 / (_2498 + 1.39999997615814208984375);
                                float _2501 = _2500 * _2500;
                                float _2502 = 1.0 - _2501;
                                float _2504 = (_2502 * dot(vec3(_2487, _2488, _2489), vec3(0.0))) + _2501;
                                float _2507 = _2498 * _2498;
                                float _2511 = (fma(_1665, _2391.z, fma(_1664, _2391.y, _2391.x * _1663)) + _2391.w) / _2452;
                                float _2512 = (fma(_1665, _2406.z, fma(_1664, _2406.y, _2406.x * _1663)) + _2406.w) / _2452;
                                float _2516 = 1.0 - dot(vec2(_2511, _2512), vec2(_2511, _2512));
                                float _3308 = isnan(0.0) ? _2516 : (isnan(_2516) ? 0.0 : max(_2516, 0.0));
                                float _2517 = isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0));
                                float _2518 = _2517 * (((isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0))) * _2494) / ((_2507 * 0.699999988079071044921875) + 1.0));
                                float _2528 = dot(vec3(0.0), vec3((-0.0) - (_1663 * _1970), (-0.0) - (_1664 * _1970), (-0.0) - (_1665 * _1970)));
                                float _3319 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
                                float _2536 = (_2502 * dot(vec3(0.0), vec3(_2487, _2488, _2489))) + _2501;
                                float _3330 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
                                float _2537 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
                                float _2541 = (0.5 / (((isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0))) + 9.9999999392252902907785028219223e-09) + _2537)) * _2537;
                                float _3341 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
                                float _2548 = (_2517 * _2494) * (((isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0))) * 3.1415927410125732421875) / ((_2507 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_73_pred = _2518 * _2364.z;
                                frontier_phi_73_pred_1 = _2518 * _2364.y;
                                frontier_phi_73_pred_2 = _2518 * _2364.x;
                                frontier_phi_73_pred_3 = _2548 * _2376.z;
                                frontier_phi_73_pred_4 = _2548 * _2376.y;
                                frontier_phi_73_pred_5 = _2548 * _2376.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2557 = frontier_phi_73_pred;
                            _2556 = frontier_phi_73_pred_1;
                            _2555 = frontier_phi_73_pred_2;
                            _2554 = frontier_phi_73_pred_3;
                            _2553 = frontier_phi_73_pred_4;
                            _2552 = frontier_phi_73_pred_5;
                            _2306 = _2555 + _2319;
                            _2307 = _2556 + _2320;
                            _2308 = _2557 + _2321;
                            _2303 = _2552 + _2316;
                            _2304 = _2553 + _2317;
                            _2305 = _2554 + _2318;
                            if (_2323 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2316 = _2303;
                                _2317 = _2304;
                                _2318 = _2305;
                                _2319 = _2306;
                                _2320 = _2307;
                                _2321 = _2308;
                                _2322 = _2323;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2308;
                        frontier_phi_67_pred_1 = _2307;
                        frontier_phi_67_pred_2 = _2306;
                        frontier_phi_67_pred_3 = _2305;
                        frontier_phi_67_pred_4 = _2304;
                        frontier_phi_67_pred_5 = _2303;
                    }
                    _1956 = frontier_phi_67_pred;
                    _1954 = frontier_phi_67_pred_1;
                    _1952 = frontier_phi_67_pred_2;
                    _1950 = frontier_phi_67_pred_3;
                    _1948 = frontier_phi_67_pred_4;
                    _1946 = frontier_phi_67_pred_5;
                    uint _2139 = _2138 + 1u;
                    if (_2139 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2132 = _1946;
                        _2133 = _1948;
                        _2134 = _1950;
                        _2135 = _1952;
                        _2136 = _1954;
                        _2137 = _1956;
                        _2138 = _2139;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _1952;
                frontier_phi_49_50_ladder_1 = _1956;
                frontier_phi_49_50_ladder_2 = _1954;
                frontier_phi_49_50_ladder_3 = _1950;
                frontier_phi_49_50_ladder_4 = _1948;
                frontier_phi_49_50_ladder_5 = _1946;
            }
            else
            {
                frontier_phi_49_50_ladder = _1806;
                frontier_phi_49_50_ladder_1 = _1810;
                frontier_phi_49_50_ladder_2 = _1808;
                frontier_phi_49_50_ladder_3 = _1804;
                frontier_phi_49_50_ladder_4 = _1802;
                frontier_phi_49_50_ladder_5 = _1800;
            }
            _1945 = frontier_phi_49_50_ladder_5;
            _1947 = frontier_phi_49_50_ladder_4;
            _1949 = frontier_phi_49_50_ladder_3;
            _1951 = frontier_phi_49_50_ladder;
            _1953 = frontier_phi_49_50_ladder_2;
            _1955 = frontier_phi_49_50_ladder_1;
        }
        float _1960 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
        _1722 = (_1960 * _1951) + _1499;
        _1724 = (_1960 * _1953) + _1500;
        _1726 = (_1960 * _1955) + _1501;
        _1728 = ((_1945 * 0.039999999105930328369140625) * _1960) + _1604;
        _1730 = ((_1947 * 0.039999999105930328369140625) * _1960) + _1605;
        _1732 = ((_1949 * 0.039999999105930328369140625) * _1960) + _1606;
    }
    else
    {
        _1722 = _1499;
        _1724 = _1500;
        _1726 = _1501;
        _1728 = _1604;
        _1730 = _1605;
        _1732 = _1606;
    }
    float _3357 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _3368 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _3379 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _1749 = ((isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0))) * (_1722 + ((isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0))) * _484))) + ((_1728 + ((isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0))) * _1187)) * cbPerFrame._m0[3u].x);
    float _1750 = ((isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0))) * (_1724 + ((isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0))) * _484))) + ((_1730 + ((isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0))) * _1187)) * cbPerFrame._m0[3u].x);
    float _1751 = ((isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0))) * (_1726 + ((isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0))) * _484))) + ((_1732 + ((isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0))) * _1187)) * cbPerFrame._m0[3u].x);
    uint _1755 = _458 + 6u;
    float _1763 = _444 / cbSceneParam._m0[86u].x;
    float _1764 = _445 / cbSceneParam._m0[86u].y;
    vec4 _1778 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1763, _1764, (log2((isnan(cbSceneParam._m0[77u].w) ? _431 : (isnan(_431) ? cbSceneParam._m0[77u].w : min(_431, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1780 = _1778.x;
    float _1781 = _1778.y;
    float _1782 = _1778.z;
    float _1783 = _1778.w;
    float _1863;
    float _1865;
    float _1867;
    float _1869;
    if (_431 > cbSceneParam._m0[78u].w)
    {
        float _1825 = isnan(_431) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _431 : min(cbSceneParam._m0[80u].w, _431));
        float _1826 = _1825 / _431;
        float _1837 = _1826 * _254;
        float _1838 = _255 * _1826;
        float _1839 = (-0.0) - _1838;
        float _1840 = _1826 * _256;
        float _1842 = (cbSceneParam._m0[77u].w * _1839) / _1825;
        float _1843 = _1842 + cbSceneParam._m0[79u].w;
        float _1844 = cbSceneParam._m0[79u].w - _1838;
        float _1850 = sqrt(((_1837 * _1837) + (_1838 * _1838)) + (_1840 * _1840));
        float _1853 = (1.0 - (cbSceneParam._m0[77u].w / _1825)) * _1850;
        float _1859 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1861 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2068;
        if (abs((_1839 - _1842) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2068 = ((((_1843 > 0.0) ? exp2(_1859 * _1843) : (2.0 - exp2(_1861 * _1843))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1853;
        }
        else
        {
            float _2003 = 1.0 / cbSceneParam._m0[80u].x;
            float _2004 = isnan(_1844) ? _1843 : (isnan(_1843) ? _1844 : max(_1843, _1844));
            float _2005 = isnan(_1844) ? _1843 : (isnan(_1843) ? _1844 : min(_1843, _1844));
            float _2014 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : min(_2004, 0.0));
            float _2015 = isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : min(_2005, 0.0));
            _2068 = ((abs(_1850 / _1839) * cbSceneParam._m0[80u].y) * ((((_2014 - _2015) * 2.0) - ((exp2(_1859 * (isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0)))) - exp2(_1859 * (isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0))))) * _2003)) - ((exp2(_1861 * _2014) - exp2(_1861 * _2015)) * _2003))) + (_1853 * cbSceneParam._m0[80u].z);
        }
        vec4 _2070 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1763, _1764, 1.0), 0.0);
        float _2079 = exp2((_2068 * (-1.44269502162933349609375)) * (1.0 - _2070.w));
        float _2080 = log2(_2079);
        float _2096 = log2(_1783);
        _1863 = (exp2(_2096 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].x)) * _2070.x) / cbSceneParam._m0[78u].x)) + _1780;
        _1865 = (exp2(_2096 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].y)) * _2070.y) / cbSceneParam._m0[78u].y)) + _1781;
        _1867 = (exp2(_2096 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2080 * cbSceneParam._m0[78u].z)) * _2070.z) / cbSceneParam._m0[78u].z)) + _1782;
        _1869 = _2079 * _1783;
    }
    else
    {
        _1863 = _1780;
        _1865 = _1781;
        _1867 = _1782;
        _1869 = _1783;
    }
    float _1881 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1882 = _1881 == 3.0;
    float _1884 = log2(_1869);
    float _1891 = exp2(_1884 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
    float _1892 = exp2(_1884 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0)));
    float _1893 = exp2(_1884 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1751 : (isnan(_1751) ? 0.0 : max(_1751, 0.0)));
    float _1902 = (_1881 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1902 * (_1882 ? _1891 : (_1891 + (cbSceneParam._m0[72u].w * _1863)));
    SV_Target.y = _1902 * (_1882 ? _1892 : (_1892 + (cbSceneParam._m0[72u].w * _1865)));
    SV_Target.z = _1902 * (_1882 ? _1893 : (_1893 + (cbSceneParam._m0[72u].w * _1867)));
    SV_Target.w = cbInstanceData._m0[_1755].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1755].w;
}


