#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    float _218 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _263 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _265 = texelFetch(g_InstanceIndexBuffer, int(_263));
    uint _266 = _265.x;
    uint _276 = (floatBitsToUint(cbInstanceData._m0[(_266 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _283 = _276 + 1u;
    uint _290 = _276 + 2u;
    precise float _297 = POSITION.x * cbObjMatrix._m0[_276].x;
    precise float _298 = POSITION.y * cbObjMatrix._m0[_276].y;
    precise float _299 = _298 + _297;
    precise float _300 = POSITION.z * cbObjMatrix._m0[_276].z;
    precise float _301 = _300 + _299;
    precise float _302 = 1.0 * cbObjMatrix._m0[_276].w;
    precise float _304 = _302 + _301;
    precise float _305 = POSITION.x * cbObjMatrix._m0[_283].x;
    precise float _306 = POSITION.y * cbObjMatrix._m0[_283].y;
    precise float _307 = _306 + _305;
    precise float _308 = POSITION.z * cbObjMatrix._m0[_283].z;
    precise float _309 = _308 + _307;
    precise float _310 = 1.0 * cbObjMatrix._m0[_283].w;
    precise float _311 = _310 + _309;
    precise float _312 = POSITION.x * cbObjMatrix._m0[_290].x;
    precise float _313 = POSITION.y * cbObjMatrix._m0[_290].y;
    precise float _314 = _313 + _312;
    precise float _315 = POSITION.z * cbObjMatrix._m0[_290].z;
    precise float _316 = _315 + _314;
    precise float _317 = 1.0 * cbObjMatrix._m0[_290].w;
    precise float _318 = _317 + _316;
    precise float _362 = _304 - cbSceneParam._m0[3u].x;
    precise float _363 = _311 - cbSceneParam._m0[3u].y;
    precise float _364 = _318 - cbSceneParam._m0[3u].z;
    precise float _392 = _362 * cbSceneParam._m0[24u].x;
    precise float _393 = _363 * cbSceneParam._m0[24u].y;
    precise float _394 = _393 + _392;
    precise float _395 = _364 * cbSceneParam._m0[24u].z;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _398 = _397 + _396;
    precise float _399 = _362 * cbSceneParam._m0[25u].x;
    precise float _400 = _363 * cbSceneParam._m0[25u].y;
    precise float _401 = _400 + _399;
    precise float _402 = _364 * cbSceneParam._m0[25u].z;
    precise float _403 = _402 + _401;
    precise float _404 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _405 = _404 + _403;
    precise float _406 = _362 * cbSceneParam._m0[26u].x;
    precise float _407 = _363 * cbSceneParam._m0[26u].y;
    precise float _408 = _407 + _406;
    precise float _409 = _364 * cbSceneParam._m0[26u].z;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _412 = _411 + _410;
    precise float _413 = _362 * cbSceneParam._m0[27u].x;
    precise float _414 = _363 * cbSceneParam._m0[27u].y;
    precise float _415 = _414 + _413;
    precise float _416 = _364 * cbSceneParam._m0[27u].z;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _419 = _418 + _417;
    gl_Position.x = _398;
    gl_Position.y = _405;
    gl_Position.z = _412;
    gl_Position.w = _419;
    POSITION_1.x = _398;
    POSITION_1.y = _405;
    POSITION_1.z = _412;
    POSITION_1.w = _419;
    NORMAL_1.x = fma(_221, cbObjMatrix._m0[_276].z, fma(_220, cbObjMatrix._m0[_276].y, cbObjMatrix._m0[_276].x * _218));
    NORMAL_1.y = fma(_221, cbObjMatrix._m0[_283].z, fma(_220, cbObjMatrix._m0[_283].y, cbObjMatrix._m0[_283].x * _218));
    NORMAL_1.z = fma(_221, cbObjMatrix._m0[_290].z, fma(_220, cbObjMatrix._m0[_290].y, cbObjMatrix._m0[_290].x * _218));
    NORMAL_1.w = float(_266);
    TANGENT_1.x = fma(_233, cbObjMatrix._m0[_276].z, fma(_232, cbObjMatrix._m0[_276].y, cbObjMatrix._m0[_276].x * _231));
    TANGENT_1.y = fma(_233, cbObjMatrix._m0[_283].z, fma(_232, cbObjMatrix._m0[_283].y, cbObjMatrix._m0[_283].x * _231));
    TANGENT_1.z = fma(_233, cbObjMatrix._m0[_290].z, fma(_232, cbObjMatrix._m0[_290].y, cbObjMatrix._m0[_290].x * _231));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_245, cbObjMatrix._m0[_276].z, fma(_244, cbObjMatrix._m0[_276].y, cbObjMatrix._m0[_276].x * _243));
    TANGENT_2_1.y = fma(_245, cbObjMatrix._m0[_283].z, fma(_244, cbObjMatrix._m0[_283].y, cbObjMatrix._m0[_283].x * _243));
    TANGENT_2_1.z = fma(_245, cbObjMatrix._m0[_290].z, fma(_244, cbObjMatrix._m0[_290].y, cbObjMatrix._m0[_290].x * _243));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_257, cbObjMatrix._m0[_276].z, fma(_256, cbObjMatrix._m0[_276].y, cbObjMatrix._m0[_276].x * _255));
    TANGENT_4_1.y = fma(_257, cbObjMatrix._m0[_283].z, fma(_256, cbObjMatrix._m0[_283].y, cbObjMatrix._m0[_283].x * _255));
    TANGENT_4_1.z = fma(_257, cbObjMatrix._m0[_290].z, fma(_256, cbObjMatrix._m0[_290].y, cbObjMatrix._m0[_290].x * _255));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
}


