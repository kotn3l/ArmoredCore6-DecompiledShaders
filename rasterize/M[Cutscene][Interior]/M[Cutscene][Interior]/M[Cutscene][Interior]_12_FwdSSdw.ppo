#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[26];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TANGENT_4;
layout(location = 6) in vec4 TEXCOORD;
layout(location = 7) in vec3 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _918;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _282 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _317 = cbMtdParam._m0[24u].x + _261;
    float _318 = cbMtdParam._m0[24u].y + _262;
    float _319 = cbMtdParam._m0[24u].z + _263;
    float _333 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_189 * _182, _189 * _183, _189 * _184));
    float _334 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_203 * TANGENT.x, _203 * TANGENT.y, _203 * TANGENT.z));
    float _335 = (-0.0) - dot(vec3(_317, _318, _319), vec3((-0.0) - (_196 * NORMAL.x), (-0.0) - (_196 * NORMAL.y), (-0.0) - (_196 * NORMAL.z)));
    float _339 = inversesqrt(dot(vec3(_333, _334, _335), vec3(_333, _334, _335)));
    float _342 = _339 * _335;
    float _343 = (_339 * _333) + (((_282.x * 2.0) + (-1.0)) * cbMtdParam._m0[22u].x);
    float _344 = (_339 * _334) + (((_282.y * 2.0) + (-1.0)) * cbMtdParam._m0[22u].y);
    float _345 = _343 * cbMtdParam._m0[20u].w;
    float _346 = _344 * cbMtdParam._m0[20u].z;
    float _347 = fract(TEXCOORD.x);
    float _348 = fract(TEXCOORD.y);
    float _354;
    if (_345 > 0.0)
    {
        _354 = (1.0 - _347) / _345;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_345 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _347) / _345;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _354 = frontier_phi_3_2_ladder;
    }
    float _362;
    if (_346 > 0.0)
    {
        _362 = (1.0 - _348) / _346;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_346 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _348) / _346;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _362 = frontier_phi_7_6_ladder;
    }
    bool _364 = _342 > 0.0;
    float _366 = _364 ? (cbMtdParam._m0[16u].x / _342) : 5000.0;
    float _367 = isnan(_362) ? _354 : (isnan(_354) ? _362 : min(_354, _362));
    float _368 = isnan(_366) ? _367 : (isnan(_367) ? _366 : min(_367, _366));
    float _372 = cbMtdParam._m0[16u].y * cbMtdParam._m0[16u].x;
    float _373 = _347 + (-0.5);
    float _376 = _348 + (-0.5);
    float _379 = ((_368 * _342) + _372) / _372;
    vec4 _404 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * (((((_373 + (_368 * _345)) / _379) + 0.5) + (cbMtdParam._m0[16u].w - cbMtdParam._m0[21u].x * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x))) / cbMtdParam._m0[21u].x)) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * (((((_376 + (_368 * _346)) / _379) + 0.5) + floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[21u].x)) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[5u].w));
    float _414 = cbMtdParam._m0[9u].x * _404.x;
    float _415 = cbMtdParam._m0[9u].y * _404.y;
    float _416 = cbMtdParam._m0[9u].z * _404.z;
    float _435 = _343 * cbMtdParam._m0[22u].w;
    float _436 = _344 * cbMtdParam._m0[22u].z;
    bool _437 = _435 > 0.0;
    float _442;
    if (_437)
    {
        _442 = (1.0 - _347) / _435;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_435 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _347) / _435;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _442 = frontier_phi_11_10_ladder;
    }
    bool _444 = _436 > 0.0;
    float _449;
    if (_444)
    {
        _449 = (1.0 - _348) / _436;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_436 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _348) / _436;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _449 = frontier_phi_15_14_ladder;
    }
    float _452 = _364 ? (cbMtdParam._m0[18u].x / _342) : 5000.0;
    float _453 = isnan(_449) ? _442 : (isnan(_442) ? _449 : min(_442, _449));
    float _454 = isnan(_452) ? _453 : (isnan(_453) ? _452 : min(_453, _452));
    float _458 = cbMtdParam._m0[19u].y * cbMtdParam._m0[18u].x;
    float _462 = ((_454 * _342) + _458) / _458;
    float _467 = cbMtdParam._m0[19u].x - cbMtdParam._m0[20u].x * trunc(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    float _469 = floor(cbMtdParam._m0[19u].x / cbMtdParam._m0[20u].x);
    vec4 _485 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_373 + (_454 * _435)) / _462) + 0.5) + _467) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_376 + (_454 * _436)) / _462) + 0.5) + _469) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[0u].w));
    float _497;
    if (_437)
    {
        _497 = (1.0 - _347) / _435;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_435 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _347) / _435;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _497 = frontier_phi_19_18_ladder;
    }
    float _503;
    if (_444)
    {
        _503 = (1.0 - _348) / _436;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_436 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _348) / _436;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _503 = frontier_phi_23_22_ladder;
    }
    float _505 = isnan(_503) ? _497 : (isnan(_497) ? _503 : min(_497, _503));
    float _506 = isnan(_452) ? _505 : (isnan(_505) ? _452 : min(_505, _452));
    float _513 = ((_506 * _342) + _458) / _458;
    vec4 _533 = texture(sampler2D(M_Cutscene_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_373 + (_506 * _435)) / _513) + 0.5) + _467) / cbMtdParam._m0[20u].x)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_376 + (_506 * _436)) / _513) + 0.5) + _469) / cbMtdParam._m0[20u].y)) + cbTextureTilingScale._m0[8u].w));
    float _535 = _533.x;
    float _542 = (_535 * ((_485.x * cbMtdParam._m0[10u].x) - _414)) + _414;
    float _543 = (_535 * ((_485.y * cbMtdParam._m0[10u].y) - _415)) + _415;
    float _544 = (_535 * ((_485.z * cbMtdParam._m0[10u].z) - _416)) + _416;
    float _2874 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _2885 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _2896 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _563 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _567 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _568 = _261 * _567;
    float _569 = _262 * _567;
    float _570 = _263 * _567;
    float _576 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _577 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _590 = uint(roundEven(NORMAL.w)) * 13u;
    uint _593 = (_590 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _599 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0)))) * cbInstanceData._m0[_593].x;
    float _600 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2885 : (isnan(_2885) ? 1.0 : min(_2885, 1.0)))) * cbInstanceData._m0[_593].y;
    float _601 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2896 : (isnan(_2896) ? 1.0 : min(_2896, 1.0)))) * cbInstanceData._m0[_593].z;
    float _2907 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _602 = isnan(1.0) ? _2907 : (isnan(_2907) ? 1.0 : min(_2907, 1.0));
    float _2918 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _603 = isnan(1.0) ? _2918 : (isnan(_2918) ? 1.0 : min(_2918, 1.0));
    float _2929 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _604 = isnan(1.0) ? _2929 : (isnan(_2929) ? 1.0 : min(_2929, 1.0));
    vec4 _613 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _576, cbSceneParam._m0[86u].y * _577));
    float _616 = _613.x * TEXCOORD_4.z;
    float _617 = (-0.0) - _568;
    float _618 = (-0.0) - _569;
    float _619 = (-0.0) - _570;
    float _641 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _645 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _649 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _917;
    float _919;
    float _920;
    float _921;
    float _922;
    float _923;
    float _924;
    float _925;
    float _926;
    float _927;
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _705 = (cbModelParam._m0[37u].x * ((((fma(_649, cbModelParam._m0[26u].z, fma(_645, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _641)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _707 = (cbModelParam._m0[37u].y * ((((fma(_649, cbModelParam._m0[27u].z, fma(_645, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _641)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _708 = (((((fma(_649, cbModelParam._m0[28u].z, fma(_645, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _641)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _711 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _718 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _725 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _732 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        float _745 = exp2((_711.w + (-0.5)) * 20.0) * 2.0;
        float _746 = _745 * (_711.x + (-0.5));
        float _747 = _745 * (_711.y + (-0.5));
        float _748 = _745 * (_711.z + (-0.5));
        float _755 = exp2((_718.w + (-0.5)) * 20.0) * 2.0;
        float _756 = _755 * (_718.x + (-0.5));
        float _757 = _755 * (_718.y + (-0.5));
        float _758 = _755 * (_718.z + (-0.5));
        float _765 = exp2((_725.w + (-0.5)) * 20.0) * 2.0;
        float _766 = _765 * (_725.x + (-0.5));
        float _767 = _765 * (_725.y + (-0.5));
        float _768 = _765 * (_725.z + (-0.5));
        float _775 = exp2((_732.w + (-0.5)) * 20.0) * 2.0;
        float _776 = _775 * (_732.x + (-0.5));
        float _777 = _775 * (_732.y + (-0.5));
        float _778 = _775 * (_732.z + (-0.5));
        float _779 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
        float _780 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
        float _781 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
        float _782 = _746 * 0.5;
        float _783 = _756 * 0.5;
        float _784 = _766 * 0.5;
        float _785 = dot(vec3(_782, _783, _784), vec3(_782, _783, _784));
        float _790 = (_785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_785);
        float _799 = (dot(vec3(0.0), vec3(_790 * _782, _790 * _783, _790 * _784)) + 1.0) * 0.5;
        float _2955 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
        float _809 = sqrt(((_783 * _783) + (_782 * _782)) + (_784 * _784)) / (_779 + 9.9999997473787516355514526367188e-06);
        float _2966 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
        float _810 = isnan(1.0) ? _2966 : (isnan(_2966) ? 1.0 : min(_2966, 1.0));
        float _811 = _810 * 2.0;
        float _815 = (1.0 - _810) / (_810 + 1.0);
        float _2977 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
        float _816 = isnan(1.0) ? _2977 : (isnan(_2977) ? 1.0 : min(_2977, 1.0));
        float _825 = ((((1.0 - _816) * (_811 + 2.0)) * exp2(log2(isnan(1.0) ? _2955 : (isnan(_2955) ? 1.0 : min(_2955, 1.0))) * (_811 + 1.0))) + _816) * _779;
        float _826 = _747 * 0.5;
        float _827 = _757 * 0.5;
        float _828 = _767 * 0.5;
        float _829 = dot(vec3(_826, _827, _828), vec3(_826, _827, _828));
        float _834 = (_829 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_829);
        float _842 = (dot(vec3(0.0), vec3(_834 * _826, _834 * _827, _834 * _828)) + 1.0) * 0.5;
        float _2988 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _851 = sqrt(((_827 * _827) + (_826 * _826)) + (_828 * _828)) / (_780 + 9.9999997473787516355514526367188e-06);
        float _2999 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        float _852 = isnan(1.0) ? _2999 : (isnan(_2999) ? 1.0 : min(_2999, 1.0));
        float _853 = _852 * 2.0;
        float _857 = (1.0 - _852) / (_852 + 1.0);
        float _3010 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
        float _858 = isnan(1.0) ? _3010 : (isnan(_3010) ? 1.0 : min(_3010, 1.0));
        float _867 = ((((1.0 - _858) * (_853 + 2.0)) * exp2(log2(isnan(1.0) ? _2988 : (isnan(_2988) ? 1.0 : min(_2988, 1.0))) * (_853 + 1.0))) + _858) * _780;
        float _868 = _748 * 0.5;
        float _869 = _758 * 0.5;
        float _870 = _768 * 0.5;
        float _871 = dot(vec3(_868, _869, _870), vec3(_868, _869, _870));
        float _876 = (_871 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_871);
        float _884 = (dot(vec3(0.0), vec3(_876 * _868, _876 * _869, _876 * _870)) + 1.0) * 0.5;
        float _3021 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _893 = sqrt(((_869 * _869) + (_868 * _868)) + (_870 * _870)) / (_781 + 9.9999997473787516355514526367188e-06);
        float _3032 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        float _894 = isnan(1.0) ? _3032 : (isnan(_3032) ? 1.0 : min(_3032, 1.0));
        float _895 = _894 * 2.0;
        float _899 = (1.0 - _894) / (_894 + 1.0);
        float _3043 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
        float _900 = isnan(1.0) ? _3043 : (isnan(_3043) ? 1.0 : min(_3043, 1.0));
        float _909 = ((((1.0 - _900) * (_895 + 2.0)) * exp2(log2(isnan(1.0) ? _3021 : (isnan(_3021) ? 1.0 : min(_3021, 1.0))) * (_895 + 1.0))) + _900) * _781;
        _917 = _748;
        _919 = _747;
        _920 = _746;
        _921 = _758;
        _922 = _757;
        _923 = _756;
        _924 = _768;
        _925 = _767;
        _926 = _766;
        _927 = _781;
        _928 = _780;
        _929 = _779;
        _930 = cbModelParam._m0[36u].z * (isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0)));
        _931 = cbModelParam._m0[36u].z * (isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0)));
        _932 = cbModelParam._m0[36u].z * (isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0)));
    }
    else
    {
        _917 = _918;
        _919 = _918;
        _920 = _918;
        _921 = _918;
        _922 = _918;
        _923 = _918;
        _924 = _918;
        _925 = _918;
        _926 = _918;
        _927 = _918;
        _928 = _918;
        _929 = _918;
        _930 = 0.0;
        _931 = 0.0;
        _932 = 0.0;
    }
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _986 = (cbModelParam._m0[38u].x * ((((fma(_649, cbModelParam._m0[30u].z, fma(_645, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _641)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _987 = (cbModelParam._m0[38u].y * ((((fma(_649, cbModelParam._m0[31u].z, fma(_645, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _641)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _988 = (((((fma(_649, cbModelParam._m0[32u].z, fma(_645, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _641)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _990 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _997 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        float _1023 = exp2((_990.w + (-0.5)) * 20.0) * 2.0;
        float _1024 = _1023 * (_990.x + (-0.5));
        float _1025 = _1023 * (_990.y + (-0.5));
        float _1026 = _1023 * (_990.z + (-0.5));
        float _1033 = exp2((_997.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_997.x + (-0.5));
        float _1035 = _1033 * (_997.y + (-0.5));
        float _1036 = _1033 * (_997.z + (-0.5));
        float _1043 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1044 = _1043 * (_1004.x + (-0.5));
        float _1045 = _1043 * (_1004.y + (-0.5));
        float _1046 = _1043 * (_1004.z + (-0.5));
        float _1053 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1054 = _1053 * (_1011.x + (-0.5));
        float _1055 = _1053 * (_1011.y + (-0.5));
        float _1056 = _1053 * (_1011.z + (-0.5));
        float _1057 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1058 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
        float _1059 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1060 = _1024 * 0.5;
        float _1061 = _1034 * 0.5;
        float _1062 = _1044 * 0.5;
        float _1063 = dot(vec3(_1060, _1061, _1062), vec3(_1060, _1061, _1062));
        float _1068 = (_1063 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1063);
        float _1076 = (dot(vec3(0.0), vec3(_1068 * _1060, _1068 * _1061, _1068 * _1062)) + 1.0) * 0.5;
        float _3084 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1085 = sqrt(((_1061 * _1061) + (_1060 * _1060)) + (_1062 * _1062)) / (_1057 + 9.9999997473787516355514526367188e-06);
        float _3095 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1086 = isnan(1.0) ? _3095 : (isnan(_3095) ? 1.0 : min(_3095, 1.0));
        float _1087 = _1086 * 2.0;
        float _1091 = (1.0 - _1086) / (_1086 + 1.0);
        float _3106 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1092 = isnan(1.0) ? _3106 : (isnan(_3106) ? 1.0 : min(_3106, 1.0));
        float _1101 = ((((1.0 - _1092) * (_1087 + 2.0)) * exp2(log2(isnan(1.0) ? _3084 : (isnan(_3084) ? 1.0 : min(_3084, 1.0))) * (_1087 + 1.0))) + _1092) * _1057;
        float _1102 = _1025 * 0.5;
        float _1103 = _1035 * 0.5;
        float _1104 = _1045 * 0.5;
        float _1105 = dot(vec3(_1102, _1103, _1104), vec3(_1102, _1103, _1104));
        float _1110 = (_1105 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1105);
        float _1118 = (dot(vec3(0.0), vec3(_1110 * _1102, _1110 * _1103, _1110 * _1104)) + 1.0) * 0.5;
        float _3117 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1127 = sqrt(((_1103 * _1103) + (_1102 * _1102)) + (_1104 * _1104)) / (_1058 + 9.9999997473787516355514526367188e-06);
        float _3128 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1128 = isnan(1.0) ? _3128 : (isnan(_3128) ? 1.0 : min(_3128, 1.0));
        float _1129 = _1128 * 2.0;
        float _1133 = (1.0 - _1128) / (_1128 + 1.0);
        float _3139 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1134 = isnan(1.0) ? _3139 : (isnan(_3139) ? 1.0 : min(_3139, 1.0));
        float _1143 = ((((1.0 - _1134) * (_1129 + 2.0)) * exp2(log2(isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0))) * (_1129 + 1.0))) + _1134) * _1058;
        float _1144 = _1026 * 0.5;
        float _1145 = _1036 * 0.5;
        float _1146 = _1046 * 0.5;
        float _1147 = dot(vec3(_1144, _1145, _1146), vec3(_1144, _1145, _1146));
        float _1152 = (_1147 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1147);
        float _1160 = (dot(vec3(0.0), vec3(_1152 * _1144, _1152 * _1145, _1152 * _1146)) + 1.0) * 0.5;
        float _3150 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1169 = sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146)) / (_1059 + 9.9999997473787516355514526367188e-06);
        float _3161 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1170 = isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0));
        float _1171 = _1170 * 2.0;
        float _1175 = (1.0 - _1170) / (_1170 + 1.0);
        float _3172 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1176 = isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0));
        float _1185 = ((((1.0 - _1176) * (_1171 + 2.0)) * exp2(log2(isnan(1.0) ? _3150 : (isnan(_3150) ? 1.0 : min(_3150, 1.0))) * (_1171 + 1.0))) + _1176) * _1059;
        _1193 = _1026;
        _1194 = _1025;
        _1195 = _1024;
        _1196 = _1036;
        _1197 = _1035;
        _1198 = _1034;
        _1199 = _1046;
        _1200 = _1045;
        _1201 = _1044;
        _1202 = _1059;
        _1203 = _1058;
        _1204 = _1057;
        _1205 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0)));
        _1206 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0)));
        _1207 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0)));
    }
    else
    {
        _1193 = _918;
        _1194 = _918;
        _1195 = _918;
        _1196 = _918;
        _1197 = _918;
        _1198 = _918;
        _1199 = _918;
        _1200 = _918;
        _1201 = _918;
        _1202 = _918;
        _1203 = _918;
        _1204 = _918;
        _1205 = 0.0;
        _1206 = 0.0;
        _1207 = 0.0;
    }
    float _1217 = (cbModelParam._m0[1u].x * (_1205 - _930)) + _930;
    float _1218 = (cbModelParam._m0[1u].x * (_1206 - _931)) + _931;
    float _1219 = (cbModelParam._m0[1u].x * (_1207 - _932)) + _932;
    float _1240 = fma(_1219, cbSceneParam._m0[89u].z, fma(_1218, cbSceneParam._m0[89u].y, _1217 * cbSceneParam._m0[89u].x));
    float _1243 = fma(_1219, cbSceneParam._m0[90u].z, fma(_1218, cbSceneParam._m0[90u].y, _1217 * cbSceneParam._m0[90u].x));
    float _1246 = fma(_1219, cbSceneParam._m0[91u].z, fma(_1218, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1217));
    float _1261 = _568 * (-0.5);
    float _1262 = _569 * (-0.5);
    float _1263 = _570 * (-0.5);
    float _1264 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1195, _1198, _1201, _1204));
    float _1267 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1194, _1197, _1200, _1203));
    float _1270 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1193, _1196, _1199, _1202));
    float _1304;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1277 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_917, _921, _924, _927));
        float _1281 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_919, _922, _925, _928));
        float _1285 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_920, _923, _926, _929));
        float _1292 = dot(vec4(cbModelParam._m0[39u]), vec4(_1261, _1262, _1263, 1.0));
        _1304 = dot(vec3(isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0)), isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0)), isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1292) ? 0.0 : (isnan(0.0) ? _1292 : max(0.0, _1292))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1304 = 1.0;
    }
    float _1315;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1306 = dot(vec4(cbModelParam._m0[40u]), vec4(_1261, _1262, _1263, 1.0));
        _1315 = dot(vec3(isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0)), isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0)), isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1306) ? 0.0 : (isnan(0.0) ? _1306 : max(0.0, _1306))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1315 = 1.0;
    }
    float _1319 = (_1315 * cbModelParam._m0[1u].x) + (_1304 * (1.0 - cbModelParam._m0[1u].x));
    float _1328 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1411;
    float _1413;
    float _1415;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1378 = fma(_649, cbModelParam._m0[13u].z, fma(_645, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _641)) + cbModelParam._m0[13u].w;
        float _1382 = fma(_649, cbModelParam._m0[14u].z, fma(_645, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _641)) + cbModelParam._m0[14u].w;
        float _1386 = fma(_649, cbModelParam._m0[15u].z, fma(_645, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _641)) + cbModelParam._m0[15u].w;
        float _1389 = fma(_619, cbModelParam._m0[13u].z, fma(_618, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _617));
        float _1392 = fma(_619, cbModelParam._m0[14u].z, fma(_618, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _617));
        float _1395 = fma(_619, cbModelParam._m0[15u].z, fma(_618, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _617));
        float _1421;
        if (_1389 > 0.0)
        {
            _1421 = abs((1.0 - _1378) / _1389);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1389 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1378 + 1.0) / _1389);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1421 = frontier_phi_38_36_ladder;
        }
        float _1742;
        if (_1392 > 0.0)
        {
            _1742 = abs((1.0 - _1382) / _1392);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1392 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1382 + 1.0) / _1392);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1742 = frontier_phi_47_43_ladder;
        }
        float _2044;
        if (_1395 > 0.0)
        {
            _2044 = abs((1.0 - _1386) / _1395);
        }
        else
        {
            float frontier_phi_61_54_ladder;
            if (_1395 < 0.0)
            {
                frontier_phi_61_54_ladder = abs((_1386 + 1.0) / _1395);
            }
            else
            {
                frontier_phi_61_54_ladder = 5000.0;
            }
            _2044 = frontier_phi_61_54_ladder;
        }
        float _2046 = isnan(_1742) ? _1421 : (isnan(_1421) ? _1742 : min(_1421, _1742));
        float _2047 = isnan(_2044) ? _2046 : (isnan(_2046) ? _2044 : min(_2046, _2044));
        float _2051 = (_2047 * _1389) + _1378;
        float _2052 = (_2047 * _1392) + _1382;
        float _2053 = (_2047 * _1395) + _1386;
        float _2054 = _2047 * 9.9999997473787516355514526367188e-05;
        float _2055 = (-1.0) - _2054;
        float _2057 = _2054 + 1.0;
        float frontier_phi_37_61_ladder;
        float frontier_phi_37_61_ladder_1;
        float frontier_phi_37_61_ladder_2;
        if ((_2053 > _2057) || ((_2053 < _2055) || ((_2052 > _2057) || ((_2052 < _2055) || ((_2051 < _2055) || (_2051 > _2057))))))
        {
            frontier_phi_37_61_ladder = 0.0;
            frontier_phi_37_61_ladder_1 = 0.0;
            frontier_phi_37_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2176 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2053, cbModelParam._m0[9u].z, fma(_2052, cbModelParam._m0[9u].y, _2051 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2053, cbModelParam._m0[10u].z, fma(_2052, cbModelParam._m0[10u].y, _2051 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2053, cbModelParam._m0[11u].z, fma(_2052, cbModelParam._m0[11u].y, _2051 * cbModelParam._m0[11u].x))), _1328);
            frontier_phi_37_61_ladder = _2176.z * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_1 = _2176.y * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_2 = _2176.x * cbModelParam._m0[1u].y;
        }
        _1411 = frontier_phi_37_61_ladder_2;
        _1413 = frontier_phi_37_61_ladder_1;
        _1415 = frontier_phi_37_61_ladder;
    }
    else
    {
        vec4 _1399 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_617, _618, _619), _1328);
        _1411 = _1399.x * cbModelParam._m0[1u].y;
        _1413 = _1399.y * cbModelParam._m0[1u].y;
        _1415 = _1399.z * cbModelParam._m0[1u].y;
    }
    float _1418 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1506;
    float _1508;
    float _1510;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1470 = fma(_649, cbModelParam._m0[21u].z, fma(_645, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _641)) + cbModelParam._m0[21u].w;
        float _1474 = fma(_649, cbModelParam._m0[22u].z, fma(_645, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _641)) + cbModelParam._m0[22u].w;
        float _1478 = fma(_649, cbModelParam._m0[23u].z, fma(_645, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _641)) + cbModelParam._m0[23u].w;
        float _1481 = fma(_619, cbModelParam._m0[21u].z, fma(_618, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _617));
        float _1484 = fma(_619, cbModelParam._m0[22u].z, fma(_618, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _617));
        float _1487 = fma(_619, cbModelParam._m0[23u].z, fma(_618, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _617));
        float _1747;
        if (_1481 > 0.0)
        {
            _1747 = abs((1.0 - _1470) / _1481);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1481 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1470 + 1.0) / _1481);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1747 = frontier_phi_49_45_ladder;
        }
        float _2070;
        if (_1484 > 0.0)
        {
            _2070 = abs((1.0 - _1474) / _1484);
        }
        else
        {
            float frontier_phi_63_56_ladder;
            if (_1484 < 0.0)
            {
                frontier_phi_63_56_ladder = abs((_1474 + 1.0) / _1484);
            }
            else
            {
                frontier_phi_63_56_ladder = 5000.0;
            }
            _2070 = frontier_phi_63_56_ladder;
        }
        float _2236;
        if (_1487 > 0.0)
        {
            _2236 = abs((1.0 - _1478) / _1487);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_1487 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_1478 + 1.0) / _1487);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _2236 = frontier_phi_77_72_ladder;
        }
        float _2238 = isnan(_2070) ? _1747 : (isnan(_1747) ? _2070 : min(_1747, _2070));
        float _2239 = isnan(_2236) ? _2238 : (isnan(_2238) ? _2236 : min(_2238, _2236));
        float _2243 = (_2239 * _1481) + _1470;
        float _2244 = (_2239 * _1484) + _1474;
        float _2245 = (_2239 * _1487) + _1478;
        float _2246 = _2239 * 9.9999997473787516355514526367188e-05;
        float _2247 = (-1.0) - _2246;
        float _2249 = _2246 + 1.0;
        float frontier_phi_46_77_ladder;
        float frontier_phi_46_77_ladder_1;
        float frontier_phi_46_77_ladder_2;
        if ((_2245 > _2249) || ((_2245 < _2247) || ((_2244 > _2249) || ((_2244 < _2247) || ((_2243 < _2247) || (_2243 > _2249))))))
        {
            frontier_phi_46_77_ladder = 0.0;
            frontier_phi_46_77_ladder_1 = 0.0;
            frontier_phi_46_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2428 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2245, cbModelParam._m0[17u].z, fma(_2244, cbModelParam._m0[17u].y, _2243 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2245, cbModelParam._m0[18u].z, fma(_2244, cbModelParam._m0[18u].y, _2243 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2245, cbModelParam._m0[19u].z, fma(_2244, cbModelParam._m0[19u].y, _2243 * cbModelParam._m0[19u].x))), _1418);
            frontier_phi_46_77_ladder = _2428.z * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_1 = _2428.y * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_2 = _2428.x * cbModelParam._m0[1u].z;
        }
        _1506 = frontier_phi_46_77_ladder_2;
        _1508 = frontier_phi_46_77_ladder_1;
        _1510 = frontier_phi_46_77_ladder;
    }
    else
    {
        vec4 _1490 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_617, _618, _619), _1418);
        _1506 = _1490.x * cbModelParam._m0[1u].z;
        _1508 = _1490.y * cbModelParam._m0[1u].z;
        _1510 = _1490.z * cbModelParam._m0[1u].z;
    }
    float _1522 = _616 * 0.01200000010430812835693359375;
    float _1524 = _1522 * ((cbModelParam._m0[1u].w * (_1506 - _1411)) + _1411);
    float _1525 = _1522 * ((cbModelParam._m0[1u].w * (_1508 - _1413)) + _1413);
    float _1526 = _1522 * ((cbModelParam._m0[1u].w * (_1510 - _1415)) + _1415);
    float _1529 = fma(_1526, cbSceneParam._m0[89u].z, fma(_1525, cbSceneParam._m0[89u].y, _1524 * cbSceneParam._m0[89u].x));
    float _1532 = fma(_1526, cbSceneParam._m0[90u].z, fma(_1525, cbSceneParam._m0[90u].y, _1524 * cbSceneParam._m0[90u].x));
    float _1535 = fma(_1526, cbSceneParam._m0[91u].z, fma(_1525, cbSceneParam._m0[91u].y, _1524 * cbSceneParam._m0[91u].x));
    vec4 _1543 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_576, _577));
    float _1545 = _1543.w;
    float _1558 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1545);
    float _1559 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1545);
    float _1560 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1545);
    uvec4 _1564 = floatBitsToUint(cbInstanceData._m0[_590 + 5u]);
    uint _1566 = _1564.x * 14u;
    uint _1567 = _1566 + 13u;
    float _1572 = _616 + (-1.0);
    float _1575 = (cbLight._m0[_1567].x * _1572) + 1.0;
    float _1576 = (cbLight._m0[_1567].y * _1572) + 1.0;
    uint _1577 = _1566 + 5u;
    float _1583 = isnan(1.0) ? _1576 : (isnan(_1576) ? 1.0 : min(_1576, 1.0));
    uint _1587 = _1566 + 4u;
    float _1597 = isnan(1.0) ? _1575 : (isnan(_1575) ? 1.0 : min(_1575, 1.0));
    uint _1601 = _1566 | 1u;
    float _1612 = dot(vec3(cbLight._m0[_1566].xyz), vec3(0.0));
    float _1615 = dot(vec3(cbLight._m0[_1601].xyz), vec3(0.0));
    float _3308 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
    float _3319 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
    float _1620 = (isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0))) * 0.3183098733425140380859375;
    float _1622 = (isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0))) * 0.3183098733425140380859375;
    float _1629 = ((cbLight._m0[_1577].x * _1583) * _1622) + (((cbLight._m0[_1587].x * _1558) * _1597) * _1620);
    float _1630 = ((_1583 * cbLight._m0[_1577].y) * _1622) + (((cbLight._m0[_1587].y * _1559) * _1597) * _1620);
    float _1631 = ((_1583 * cbLight._m0[_1577].z) * _1622) + (((cbLight._m0[_1587].z * _1560) * _1597) * _1620);
    uint _1632 = _1566 + 8u;
    float _1638 = cbLight._m0[_1566].x + _568;
    float _1639 = cbLight._m0[_1566].y + _569;
    float _1640 = cbLight._m0[_1566].z + _570;
    float _1644 = inversesqrt(dot(vec3(_1638, _1639, _1640), vec3(_1638, _1639, _1640)));
    float _1648 = dot(vec3(0.0), vec3(cbLight._m0[_1566].xyz));
    float _3330 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
    float _1651 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
    float _1652 = dot(vec3(0.0), vec3(_568, _569, _570));
    float _3341 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0));
    float _1655 = isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0));
    float _1656 = dot(vec3(cbLight._m0[_1566].xyz), vec3(_1638 * _1644, _1639 * _1644, _1640 * _1644));
    float _3352 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
    float _1667 = (exp2(log2(1.0 - (isnan(1.0) ? _3352 : (isnan(_3352) ? 1.0 : min(_3352, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1673 = (0.5 / ((_1651 + 9.9999999392252902907785028219223e-09) + _1655)) * _1651;
    float _3363 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
    float _1675 = (isnan(1.0) ? _3363 : (isnan(_3363) ? 1.0 : min(_3363, 1.0))) * 0.31831014156341552734375;
    uint _1689 = _1566 + 9u;
    float _1695 = cbLight._m0[_1601].x + _568;
    float _1696 = cbLight._m0[_1601].y + _569;
    float _1697 = cbLight._m0[_1601].z + _570;
    float _1701 = inversesqrt(dot(vec3(_1695, _1696, _1697), vec3(_1695, _1696, _1697)));
    float _1705 = dot(vec3(0.0), vec3(cbLight._m0[_1601].xyz));
    float _3374 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
    float _1708 = isnan(1.0) ? _3374 : (isnan(_3374) ? 1.0 : min(_3374, 1.0));
    float _1709 = dot(vec3(cbLight._m0[_1601].xyz), vec3(_1695 * _1701, _1696 * _1701, _1697 * _1701));
    float _3385 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
    float _1718 = (exp2(log2(1.0 - (isnan(1.0) ? _3385 : (isnan(_3385) ? 1.0 : min(_3385, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1722 = (0.5 / ((_1708 + 9.9999999392252902907785028219223e-09) + _1655)) * _1708;
    float _3396 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    float _1724 = (isnan(1.0) ? _3396 : (isnan(_3396) ? 1.0 : min(_3396, 1.0))) * 0.31831014156341552734375;
    float _1734 = (((_1718 * cbLight._m0[_1689].x) * _1724) * _1583) + ((((cbLight._m0[_1632].x * _1558) * _1667) * _1675) * _1597);
    float _1735 = (((_1718 * cbLight._m0[_1689].y) * _1724) * _1583) + ((((cbLight._m0[_1632].y * _1559) * _1667) * _1675) * _1597);
    float _1736 = (((_1718 * cbLight._m0[_1689].z) * _1724) * _1583) + ((((cbLight._m0[_1632].z * _1560) * _1667) * _1675) * _1597);
    float _1852;
    float _1854;
    float _1856;
    float _1858;
    float _1860;
    float _1862;
    if (_1564.y == 0u)
    {
        float _1792 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1793 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1792;
        float _1794 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1792;
        float _1795 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1792;
        uvec4 _1807 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1808 = _1807.x;
        uint _1819 = uint((float(_1807.y) * floor(float(uint(cbSceneParam._m0[85u].y * _577) / _1808))) + floor(float(uint(cbSceneParam._m0[85u].x * _576) / _1808)));
        float _1829 = (log2(_1795 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1830 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        uint _1833 = uint(isnan(14.0) ? _1830 : (isnan(_1830) ? 14.0 : min(_1830, 14.0)));
        uvec4 _1838 = texelFetch(g_lightClusterGridBuffer, int(((_1833 << 2u) + (_1819 << 6u)) >> 2u));
        uint _1839 = _1838.x;
        uint _1840 = _1807.z;
        float _1930;
        float _1932;
        float _1934;
        float _1936;
        float _1938;
        float _1940;
        if (((((1u << ((_1840 >> 4u) & 15u)) + 4294967295u) & _1839) == 0u) || ((_1840 & 240u) == 0u))
        {
            _1930 = 0.0;
            _1932 = 0.0;
            _1934 = 0.0;
            _1936 = 0.0;
            _1938 = 0.0;
            _1940 = 0.0;
        }
        else
        {
            float _1931;
            float _1933;
            float _1935;
            float _1937;
            float _1939;
            float _1941;
            float _2104 = 0.0;
            float _2105 = 0.0;
            float _2106 = 0.0;
            float _2107 = 0.0;
            float _2108 = 0.0;
            float _2109 = 0.0;
            uint _2110 = 0u;
            uint _2119;
            bool _2120;
            for (;;)
            {
                _2119 = texelFetch(g_lightClassification, int((((_1833 << 5u) + (_1819 << 9u)) + (_2110 << 2u)) >> 2u)).x;
                _2120 = _2119 == 0u;
                float frontier_phi_74_pred;
                float frontier_phi_74_pred_1;
                float frontier_phi_74_pred_2;
                float frontier_phi_74_pred_3;
                float frontier_phi_74_pred_4;
                float frontier_phi_74_pred_5;
                if (_2120)
                {
                    frontier_phi_74_pred = _2107;
                    frontier_phi_74_pred_1 = _2106;
                    frontier_phi_74_pred_2 = _2105;
                    frontier_phi_74_pred_3 = _2104;
                    frontier_phi_74_pred_4 = _2108;
                    frontier_phi_74_pred_5 = _2109;
                }
                else
                {
                    float _2279;
                    float _2280;
                    float _2281;
                    float _2282;
                    float _2283;
                    float _2284;
                    uint _2285;
                    _2279 = _2104;
                    _2280 = _2105;
                    _2281 = _2106;
                    _2282 = _2107;
                    _2283 = _2108;
                    _2284 = _2109;
                    _2285 = _2119;
                    float _2185;
                    float _2186;
                    float _2187;
                    float _2188;
                    float _2189;
                    float _2190;
                    for (;;)
                    {
                        uint _2289 = uint(findLSB(_2285)) + (_2110 << 5u);
                        uint _2286 = (_2285 + 4294967295u) & _2285;
                        uint _2291 = _2289 * 48u;
                        vec4 _2305 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2291)).x, texelFetch(g_PointLightRenderingBuffer, int(_2291 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2291 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2291 + 3u)).x));
                        uint _2311 = (_2289 * 48u) + 4u;
                        vec4 _2324 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2311)).x, texelFetch(g_PointLightRenderingBuffer, int(_2311 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2311 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2311 + 3u)).x));
                        uint _2330 = (_2289 * 48u) + 8u;
                        vec3 _2341 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2330)).x, texelFetch(g_PointLightRenderingBuffer, int(_2330 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2330 + 2u)).x));
                        float _2345 = _2305.x - _1793;
                        float _2346 = _2305.y - _1794;
                        float _2347 = _2305.z - _1795;
                        float _2348 = dot(vec3(_2345, _2346, _2347), vec3(_2345, _2346, _2347));
                        float _2351 = inversesqrt(_2348);
                        float _2360 = 1.0 - (_2348 * _2305.w);
                        float _3417 = isnan(0.0) ? _2360 : (isnan(_2360) ? 0.0 : max(_2360, 0.0));
                        float _2361 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
                        float _2362 = sqrt(_2348) * _2324.w;
                        float _2365 = 1.39999997615814208984375 / (_2362 + 1.39999997615814208984375);
                        float _2366 = _2365 * _2365;
                        float _2369 = ((1.0 - _2366) * dot(vec3(0.0), vec3(_2351 * _2345, _2351 * _2346, _2351 * _2347))) + _2366;
                        float _2372 = _2362 * _2362;
                        float _2376 = ((isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0))) * _2361) / ((_2372 * 0.699999988079071044921875) + 1.0);
                        float _2380 = (-0.0) - _1793;
                        float _2381 = (-0.0) - _1794;
                        float _2382 = (-0.0) - _1795;
                        float _2386 = inversesqrt(dot(vec3(_2380, _2381, _2382), vec3(_2380, _2381, _2382)));
                        float _2390 = dot(vec3(0.0), vec3(_2386 * _2380, _2386 * _2381, _2386 * _2382));
                        float _3433 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
                        float _3444 = isnan(0.0) ? _2369 : (isnan(_2369) ? 0.0 : max(_2369, 0.0));
                        float _2394 = isnan(1.0) ? _3444 : (isnan(_3444) ? 1.0 : min(_3444, 1.0));
                        float _2398 = (0.5 / (((isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0))) + 9.9999999392252902907785028219223e-09) + _2394)) * _2394;
                        float _3455 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
                        float _2407 = (((isnan(1.0) ? _3455 : (isnan(_3455) ? 1.0 : min(_3455, 1.0))) * 3.1415927410125732421875) / ((_2372 * 2.1991131305694580078125) + 3.141590118408203125)) * _2361;
                        _2188 = (_2376 * _2324.x) + _2282;
                        _2189 = (_2376 * _2324.y) + _2283;
                        _2190 = (_2376 * _2324.z) + _2284;
                        _2185 = (_2407 * _2341.x) + _2279;
                        _2186 = (_2407 * _2341.y) + _2280;
                        _2187 = (_2407 * _2341.z) + _2281;
                        if (_2286 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2279 = _2185;
                            _2280 = _2186;
                            _2281 = _2187;
                            _2282 = _2188;
                            _2283 = _2189;
                            _2284 = _2190;
                            _2285 = _2286;
                        }
                    }
                    frontier_phi_74_pred = _2188;
                    frontier_phi_74_pred_1 = _2187;
                    frontier_phi_74_pred_2 = _2186;
                    frontier_phi_74_pred_3 = _2185;
                    frontier_phi_74_pred_4 = _2189;
                    frontier_phi_74_pred_5 = _2190;
                }
                _1937 = frontier_phi_74_pred;
                _1935 = frontier_phi_74_pred_1;
                _1933 = frontier_phi_74_pred_2;
                _1931 = frontier_phi_74_pred_3;
                _1939 = frontier_phi_74_pred_4;
                _1941 = frontier_phi_74_pred_5;
                uint _2111 = _2110 + 1u;
                if (_2111 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2104 = _1931;
                    _2105 = _1933;
                    _2106 = _1935;
                    _2107 = _1937;
                    _2108 = _1939;
                    _2109 = _1941;
                    _2110 = _2111;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1930 = _1931;
            _1932 = _1933;
            _1934 = _1935;
            _1936 = _1937;
            _1938 = _1939;
            _1940 = _1941;
        }
        uvec4 _1944 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1945 = _1944.z;
        uint _1947 = (_1945 >> 8u) & 15u;
        float _2075;
        float _2077;
        float _2079;
        float _2081;
        float _2083;
        float _2085;
        if (((4294967295u << _1947) & _1839) == 0u)
        {
            _2075 = _1930;
            _2077 = _1932;
            _2079 = _1934;
            _2081 = _1936;
            _2083 = _1938;
            _2085 = _1940;
        }
        else
        {
            float _2100 = inversesqrt(dot(vec3(_1793, _1794, _1795), vec3(_1793, _1794, _1795)));
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_1947 < ((_1945 >> 12u) & 15u))
            {
                float _2076;
                float _2078;
                float _2080;
                float _2082;
                float _2084;
                float _2086;
                float _2262 = _1930;
                float _2263 = _1932;
                float _2264 = _1934;
                float _2265 = _1936;
                float _2266 = _1938;
                float _2267 = _1940;
                uint _2268 = _1947;
                uint _2277;
                bool _2278;
                for (;;)
                {
                    _2277 = texelFetch(g_lightClassification, int((((_1833 << 5u) + (_1819 << 9u)) + (_2268 << 2u)) >> 2u)).x;
                    _2278 = _2277 == 0u;
                    float frontier_phi_83_pred;
                    float frontier_phi_83_pred_1;
                    float frontier_phi_83_pred_2;
                    float frontier_phi_83_pred_3;
                    float frontier_phi_83_pred_4;
                    float frontier_phi_83_pred_5;
                    if (_2278)
                    {
                        frontier_phi_83_pred = _2265;
                        frontier_phi_83_pred_1 = _2264;
                        frontier_phi_83_pred_2 = _2263;
                        frontier_phi_83_pred_3 = _2262;
                        frontier_phi_83_pred_4 = _2267;
                        frontier_phi_83_pred_5 = _2266;
                    }
                    else
                    {
                        float _2433;
                        float _2434;
                        float _2435;
                        float _2436;
                        float _2437;
                        float _2438;
                        float _2682;
                        float _2683;
                        float _2684;
                        float _2685;
                        float _2686;
                        float _2687;
                        float _2446 = _2262;
                        float _2447 = _2263;
                        float _2448 = _2264;
                        float _2449 = _2265;
                        float _2450 = _2266;
                        float _2451 = _2267;
                        uint _2452 = _2277;
                        uint _2453;
                        vec4 _2478;
                        float _2479;
                        vec4 _2494;
                        vec3 _2506;
                        vec4 _2521;
                        vec4 _2536;
                        float _2582;
                        bool _2583;
                        for (;;)
                        {
                            uint _2463 = ((_2268 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2452));
                            _2453 = (_2452 + 4294967295u) & _2452;
                            uint _2465 = _2463 * 40u;
                            _2478 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2465)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2465 + 3u)).x));
                            _2479 = _2478.w;
                            uint _2481 = (_2463 * 40u) + 4u;
                            _2494 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2481)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2481 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2481 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2481 + 3u)).x));
                            uint _2496 = (_2463 * 40u) + 8u;
                            _2506 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2496)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2496 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2496 + 2u)).x));
                            uint _2508 = (_2463 * 40u) + 16u;
                            _2521 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2508)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2508 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2508 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2508 + 3u)).x));
                            uint _2523 = (_2463 * 40u) + 20u;
                            _2536 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2523)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2523 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2523 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2523 + 3u)).x));
                            uint _2538 = (_2463 * 40u) + 24u;
                            vec4 _2551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 3u)).x));
                            uint _2557 = (_2463 * 40u) + 28u;
                            vec4 _2570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2557 + 3u)).x));
                            _2582 = fma(_1795, _2570.z, fma(_1794, _2570.y, _2570.x * _1793)) + _2570.w;
                            _2583 = !((fma(_1795, _2551.z, fma(_1794, _2551.y, _2551.x * _1793)) + _2551.w) <= 0.0);
                            float frontier_phi_89_pred;
                            float frontier_phi_89_pred_1;
                            float frontier_phi_89_pred_2;
                            float frontier_phi_89_pred_3;
                            float frontier_phi_89_pred_4;
                            float frontier_phi_89_pred_5;
                            if (_2583)
                            {
                                float _2610 = _2478.x - _1793;
                                float _2611 = _2478.y - _1794;
                                float _2612 = _2478.z - _1795;
                                float _2613 = dot(vec3(_2610, _2611, _2612), vec3(_2610, _2611, _2612));
                                float _2616 = inversesqrt(_2613);
                                float _2617 = _2616 * _2610;
                                float _2618 = _2616 * _2611;
                                float _2619 = _2616 * _2612;
                                float _2623 = 1.0 - (_2613 / (_2479 * _2479));
                                float _3466 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
                                float _2624 = isnan(1.0) ? _3466 : (isnan(_3466) ? 1.0 : min(_3466, 1.0));
                                float _2628 = sqrt(_2613) * _2494.w;
                                float _2630 = 1.39999997615814208984375 / (_2628 + 1.39999997615814208984375);
                                float _2631 = _2630 * _2630;
                                float _2632 = 1.0 - _2631;
                                float _2634 = (_2632 * dot(vec3(_2617, _2618, _2619), vec3(0.0))) + _2631;
                                float _2637 = _2628 * _2628;
                                float _2641 = (fma(_1795, _2521.z, fma(_1794, _2521.y, _2521.x * _1793)) + _2521.w) / _2582;
                                float _2642 = (fma(_1795, _2536.z, fma(_1794, _2536.y, _2536.x * _1793)) + _2536.w) / _2582;
                                float _2646 = 1.0 - dot(vec2(_2641, _2642), vec2(_2641, _2642));
                                float _3482 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
                                float _2647 = isnan(1.0) ? _3482 : (isnan(_3482) ? 1.0 : min(_3482, 1.0));
                                float _2648 = _2647 * (((isnan(0.0) ? _2634 : (isnan(_2634) ? 0.0 : max(_2634, 0.0))) * _2624) / ((_2637 * 0.699999988079071044921875) + 1.0));
                                float _2658 = dot(vec3(0.0), vec3((-0.0) - (_1793 * _2100), (-0.0) - (_1794 * _2100), (-0.0) - (_1795 * _2100)));
                                float _3493 = isnan(0.0) ? _2658 : (isnan(_2658) ? 0.0 : max(_2658, 0.0));
                                float _2666 = (_2632 * dot(vec3(0.0), vec3(_2617, _2618, _2619))) + _2631;
                                float _3504 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
                                float _2667 = isnan(1.0) ? _3504 : (isnan(_3504) ? 1.0 : min(_3504, 1.0));
                                float _2671 = (0.5 / (((isnan(1.0) ? _3493 : (isnan(_3493) ? 1.0 : min(_3493, 1.0))) + 9.9999999392252902907785028219223e-09) + _2667)) * _2667;
                                float _3515 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
                                float _2678 = (_2647 * _2624) * (((isnan(1.0) ? _3515 : (isnan(_3515) ? 1.0 : min(_3515, 1.0))) * 3.1415927410125732421875) / ((_2637 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_89_pred = _2648 * _2494.x;
                                frontier_phi_89_pred_1 = _2678 * _2506.z;
                                frontier_phi_89_pred_2 = _2678 * _2506.y;
                                frontier_phi_89_pred_3 = _2678 * _2506.x;
                                frontier_phi_89_pred_4 = _2648 * _2494.z;
                                frontier_phi_89_pred_5 = _2648 * _2494.y;
                            }
                            else
                            {
                                frontier_phi_89_pred = 0.0;
                                frontier_phi_89_pred_1 = 0.0;
                                frontier_phi_89_pred_2 = 0.0;
                                frontier_phi_89_pred_3 = 0.0;
                                frontier_phi_89_pred_4 = 0.0;
                                frontier_phi_89_pred_5 = 0.0;
                            }
                            _2685 = frontier_phi_89_pred;
                            _2684 = frontier_phi_89_pred_1;
                            _2683 = frontier_phi_89_pred_2;
                            _2682 = frontier_phi_89_pred_3;
                            _2687 = frontier_phi_89_pred_4;
                            _2686 = frontier_phi_89_pred_5;
                            _2436 = _2685 + _2449;
                            _2437 = _2686 + _2450;
                            _2438 = _2687 + _2451;
                            _2433 = _2682 + _2446;
                            _2434 = _2683 + _2447;
                            _2435 = _2684 + _2448;
                            if (_2453 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2446 = _2433;
                                _2447 = _2434;
                                _2448 = _2435;
                                _2449 = _2436;
                                _2450 = _2437;
                                _2451 = _2438;
                                _2452 = _2453;
                                continue;
                            }
                        }
                        frontier_phi_83_pred = _2436;
                        frontier_phi_83_pred_1 = _2435;
                        frontier_phi_83_pred_2 = _2434;
                        frontier_phi_83_pred_3 = _2433;
                        frontier_phi_83_pred_4 = _2438;
                        frontier_phi_83_pred_5 = _2437;
                    }
                    _2082 = frontier_phi_83_pred;
                    _2080 = frontier_phi_83_pred_1;
                    _2078 = frontier_phi_83_pred_2;
                    _2076 = frontier_phi_83_pred_3;
                    _2086 = frontier_phi_83_pred_4;
                    _2084 = frontier_phi_83_pred_5;
                    uint _2269 = _2268 + 1u;
                    if (_2269 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2262 = _2076;
                        _2263 = _2078;
                        _2264 = _2080;
                        _2265 = _2082;
                        _2266 = _2084;
                        _2267 = _2086;
                        _2268 = _2269;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _2086;
                frontier_phi_65_66_ladder_1 = _2084;
                frontier_phi_65_66_ladder_2 = _2080;
                frontier_phi_65_66_ladder_3 = _2078;
                frontier_phi_65_66_ladder_4 = _2082;
                frontier_phi_65_66_ladder_5 = _2076;
            }
            else
            {
                frontier_phi_65_66_ladder = _1940;
                frontier_phi_65_66_ladder_1 = _1938;
                frontier_phi_65_66_ladder_2 = _1934;
                frontier_phi_65_66_ladder_3 = _1932;
                frontier_phi_65_66_ladder_4 = _1936;
                frontier_phi_65_66_ladder_5 = _1930;
            }
            _2075 = frontier_phi_65_66_ladder_5;
            _2077 = frontier_phi_65_66_ladder_3;
            _2079 = frontier_phi_65_66_ladder_2;
            _2081 = frontier_phi_65_66_ladder_4;
            _2083 = frontier_phi_65_66_ladder_1;
            _2085 = frontier_phi_65_66_ladder;
        }
        float _2090 = isnan(1.0) ? _616 : (isnan(_616) ? 1.0 : min(_616, 1.0));
        _1852 = (_2090 * _2081) + _1629;
        _1854 = (_2090 * _2083) + _1630;
        _1856 = (_2090 * _2085) + _1631;
        _1858 = ((_2075 * 0.039999999105930328369140625) * _2090) + _1734;
        _1860 = ((_2077 * 0.039999999105930328369140625) * _2090) + _1735;
        _1862 = ((_2079 * 0.039999999105930328369140625) * _2090) + _1736;
    }
    else
    {
        _1852 = _1629;
        _1854 = _1630;
        _1856 = _1631;
        _1858 = _1734;
        _1860 = _1735;
        _1862 = _1736;
    }
    float _3531 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _3542 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _3553 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _1879 = ((isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0))) * (_1852 + ((isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0))) * _616))) + ((_1858 + ((isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    float _1880 = ((isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0))) * (_1854 + ((isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0))) * _616))) + ((_1860 + ((isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    float _1881 = ((isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0))) * (_1856 + ((isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0))) * _616))) + ((_1862 + ((isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    uint _1885 = _590 + 6u;
    float _1893 = _576 / cbSceneParam._m0[86u].x;
    float _1894 = _577 / cbSceneParam._m0[86u].y;
    vec4 _1908 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1893, _1894, (log2((isnan(cbSceneParam._m0[77u].w) ? _563 : (isnan(_563) ? cbSceneParam._m0[77u].w : min(_563, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1910 = _1908.x;
    float _1911 = _1908.y;
    float _1912 = _1908.z;
    float _1913 = _1908.w;
    float _1993;
    float _1995;
    float _1997;
    float _1999;
    if (_563 > cbSceneParam._m0[78u].w)
    {
        float _1955 = isnan(_563) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _563 : min(cbSceneParam._m0[80u].w, _563));
        float _1956 = _1955 / _563;
        float _1967 = _1956 * _261;
        float _1968 = _262 * _1956;
        float _1969 = (-0.0) - _1968;
        float _1970 = _1956 * _263;
        float _1972 = (cbSceneParam._m0[77u].w * _1969) / _1955;
        float _1973 = _1972 + cbSceneParam._m0[79u].w;
        float _1974 = cbSceneParam._m0[79u].w - _1968;
        float _1980 = sqrt(((_1967 * _1967) + (_1968 * _1968)) + (_1970 * _1970));
        float _1983 = (1.0 - (cbSceneParam._m0[77u].w / _1955)) * _1980;
        float _1989 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1991 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2198;
        if (abs((_1969 - _1972) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2198 = ((((_1973 > 0.0) ? exp2(_1989 * _1973) : (2.0 - exp2(_1991 * _1973))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1983;
        }
        else
        {
            float _2133 = 1.0 / cbSceneParam._m0[80u].x;
            float _2134 = isnan(_1974) ? _1973 : (isnan(_1973) ? _1974 : max(_1973, _1974));
            float _2135 = isnan(_1974) ? _1973 : (isnan(_1973) ? _1974 : min(_1973, _1974));
            float _2144 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : min(_2134, 0.0));
            float _2145 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : min(_2135, 0.0));
            _2198 = ((abs(_1980 / _1969) * cbSceneParam._m0[80u].y) * ((((_2144 - _2145) * 2.0) - ((exp2(_1989 * (isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0)))) - exp2(_1989 * (isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0))))) * _2133)) - ((exp2(_1991 * _2144) - exp2(_1991 * _2145)) * _2133))) + (_1983 * cbSceneParam._m0[80u].z);
        }
        vec4 _2200 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1893, _1894, 1.0), 0.0);
        float _2209 = exp2((_2198 * (-1.44269502162933349609375)) * (1.0 - _2200.w));
        float _2210 = log2(_2209);
        float _2226 = log2(_1913);
        _1993 = (exp2(_2226 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2210 * cbSceneParam._m0[78u].x)) * _2200.x) / cbSceneParam._m0[78u].x)) + _1910;
        _1995 = (exp2(_2226 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2210 * cbSceneParam._m0[78u].y)) * _2200.y) / cbSceneParam._m0[78u].y)) + _1911;
        _1997 = (exp2(_2226 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2210 * cbSceneParam._m0[78u].z)) * _2200.z) / cbSceneParam._m0[78u].z)) + _1912;
        _1999 = _2209 * _1913;
    }
    else
    {
        _1993 = _1910;
        _1995 = _1911;
        _1997 = _1912;
        _1999 = _1913;
    }
    float _2011 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2012 = _2011 == 3.0;
    float _2014 = log2(_1999);
    float _2021 = exp2(_2014 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0)));
    float _2022 = exp2(_2014 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)));
    float _2023 = exp2(_2014 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1881 : (isnan(_1881) ? 0.0 : max(_1881, 0.0)));
    float _2032 = (_2011 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2032 * (_2012 ? _2021 : (_2021 + (cbSceneParam._m0[72u].w * _1993)));
    SV_Target.y = _2032 * (_2012 ? _2022 : (_2022 + (cbSceneParam._m0[72u].w * _1995)));
    SV_Target.z = _2032 * (_2012 ? _2023 : (_2023 + (cbSceneParam._m0[72u].w * _1997)));
    SV_Target.w = cbInstanceData._m0[_1885].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1885].w;
}


