#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 TANGENT_4;
layout(location = 5) in uvec4 BLENDINDICES;
layout(location = 6) in vec4 BLENDWEIGHT;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 9) in ivec2 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TANGENT_4_1;
layout(location = 6) out vec4 TEXCOORD_2;
layout(location = 7) out vec3 TEXCOORD_4;
layout(location = 8) out vec4 TEXCOORD_9;
layout(location = 9) out vec4 TEXCOORD_10;
layout(location = 10) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TANGENT_4_1.x = 0.0;
    TANGENT_4_1.y = 0.0;
    TANGENT_4_1.z = 0.0;
    TANGENT_4_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    float _252 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _266 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _276 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _277 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _278 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _288 = (float(TANGENT_4.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _289 = (float(TANGENT_4.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _290 = (float(TANGENT_4.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _300 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _302 = texelFetch(g_InstanceIndexBuffer, int(_300));
    uint _303 = _302.x;
    precise float _304 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _309 = isnan(_304) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _304 : max(0.001000000047497451305389404296875, _304));
    precise float _311 = BLENDWEIGHT.x / _309;
    precise float _312 = BLENDWEIGHT.y / _309;
    precise float _313 = BLENDWEIGHT.z / _309;
    precise float _314 = BLENDWEIGHT.w / _309;
    uvec4 _321 = floatBitsToUint(cbInstanceData._m0[(_303 * 13u) + 4u]);
    uint _322 = _321.x;
    uint _324 = (_322 + uint(float(BLENDINDICES.x))) * 3u;
    uint _331 = _324 + 1u;
    uint _338 = _324 + 2u;
    precise float _345 = _311 * cbObjMatrix._m0[_324].x;
    precise float _346 = _311 * cbObjMatrix._m0[_331].x;
    precise float _347 = _311 * cbObjMatrix._m0[_338].x;
    precise float _348 = _311 * cbObjMatrix._m0[_324].y;
    precise float _349 = _311 * cbObjMatrix._m0[_331].y;
    precise float _350 = _311 * cbObjMatrix._m0[_338].y;
    precise float _351 = _311 * cbObjMatrix._m0[_324].z;
    precise float _352 = _311 * cbObjMatrix._m0[_331].z;
    precise float _353 = _311 * cbObjMatrix._m0[_338].z;
    precise float _354 = _311 * cbObjMatrix._m0[_324].w;
    precise float _355 = _311 * cbObjMatrix._m0[_331].w;
    precise float _356 = _311 * cbObjMatrix._m0[_338].w;
    uint _359 = (_322 + uint(float(BLENDINDICES.y))) * 3u;
    uint _366 = _359 + 1u;
    uint _373 = _359 + 2u;
    precise float _380 = _312 * cbObjMatrix._m0[_359].x;
    precise float _381 = _312 * cbObjMatrix._m0[_366].x;
    precise float _382 = _312 * cbObjMatrix._m0[_373].x;
    precise float _383 = _312 * cbObjMatrix._m0[_359].y;
    precise float _384 = _312 * cbObjMatrix._m0[_366].y;
    precise float _385 = _312 * cbObjMatrix._m0[_373].y;
    precise float _386 = _312 * cbObjMatrix._m0[_359].z;
    precise float _387 = _312 * cbObjMatrix._m0[_366].z;
    precise float _388 = _312 * cbObjMatrix._m0[_373].z;
    precise float _389 = _312 * cbObjMatrix._m0[_359].w;
    precise float _390 = _312 * cbObjMatrix._m0[_366].w;
    precise float _391 = _312 * cbObjMatrix._m0[_373].w;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    uint _406 = (_322 + uint(float(BLENDINDICES.z))) * 3u;
    uint _413 = _406 + 1u;
    uint _420 = _406 + 2u;
    precise float _427 = _313 * cbObjMatrix._m0[_406].x;
    precise float _428 = _313 * cbObjMatrix._m0[_413].x;
    precise float _429 = _313 * cbObjMatrix._m0[_420].x;
    precise float _430 = _313 * cbObjMatrix._m0[_406].y;
    precise float _431 = _313 * cbObjMatrix._m0[_413].y;
    precise float _432 = _313 * cbObjMatrix._m0[_420].y;
    precise float _433 = _313 * cbObjMatrix._m0[_406].z;
    precise float _434 = _313 * cbObjMatrix._m0[_413].z;
    precise float _435 = _313 * cbObjMatrix._m0[_420].z;
    precise float _436 = _313 * cbObjMatrix._m0[_406].w;
    precise float _437 = _313 * cbObjMatrix._m0[_413].w;
    precise float _438 = _313 * cbObjMatrix._m0[_420].w;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    uint _453 = (_322 + uint(float(BLENDINDICES.w))) * 3u;
    uint _460 = _453 + 1u;
    uint _467 = _453 + 2u;
    precise float _474 = _314 * cbObjMatrix._m0[_453].x;
    precise float _475 = _314 * cbObjMatrix._m0[_460].x;
    precise float _476 = _314 * cbObjMatrix._m0[_467].x;
    precise float _477 = _314 * cbObjMatrix._m0[_453].y;
    precise float _478 = _314 * cbObjMatrix._m0[_460].y;
    precise float _479 = _314 * cbObjMatrix._m0[_467].y;
    precise float _480 = _314 * cbObjMatrix._m0[_453].z;
    precise float _481 = _314 * cbObjMatrix._m0[_460].z;
    precise float _482 = _314 * cbObjMatrix._m0[_467].z;
    precise float _483 = _314 * cbObjMatrix._m0[_453].w;
    precise float _484 = _314 * cbObjMatrix._m0[_460].w;
    precise float _485 = _314 * cbObjMatrix._m0[_467].w;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _450 + _485;
    precise float _498 = POSITION.x * _486;
    precise float _499 = POSITION.y * _489;
    precise float _500 = _499 + _498;
    precise float _501 = POSITION.z * _492;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _495;
    precise float _504 = _503 + _502;
    precise float _505 = POSITION.x * _487;
    precise float _506 = POSITION.y * _490;
    precise float _507 = _506 + _505;
    precise float _508 = POSITION.z * _493;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * _496;
    precise float _511 = _510 + _509;
    precise float _512 = POSITION.x * _488;
    precise float _513 = POSITION.y * _491;
    precise float _514 = _513 + _512;
    precise float _515 = POSITION.z * _494;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * _497;
    precise float _518 = _517 + _516;
    float _693 = (((((cbPrevObjMatrix._m0[_359].w * _312) + (cbPrevObjMatrix._m0[_324].w * _311)) + (cbPrevObjMatrix._m0[_406].w * _313)) + (cbPrevObjMatrix._m0[_453].w * _314)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_359].z * _312) + (cbPrevObjMatrix._m0[_324].z * _311)) + (cbPrevObjMatrix._m0[_406].z * _313)) + (cbPrevObjMatrix._m0[_453].z * _314), fma(POSITION.y, (((cbPrevObjMatrix._m0[_359].y * _312) + (cbPrevObjMatrix._m0[_324].y * _311)) + (cbPrevObjMatrix._m0[_406].y * _313)) + (cbPrevObjMatrix._m0[_453].y * _314), ((((cbPrevObjMatrix._m0[_359].x * _312) + (cbPrevObjMatrix._m0[_324].x * _311)) + (cbPrevObjMatrix._m0[_406].x * _313)) + (cbPrevObjMatrix._m0[_453].x * _314)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _694 = (((((cbPrevObjMatrix._m0[_366].w * _312) + (cbPrevObjMatrix._m0[_331].w * _311)) + (cbPrevObjMatrix._m0[_413].w * _313)) + (cbPrevObjMatrix._m0[_460].w * _314)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_366].z * _312) + (cbPrevObjMatrix._m0[_331].z * _311)) + (cbPrevObjMatrix._m0[_413].z * _313)) + (cbPrevObjMatrix._m0[_460].z * _314), fma(POSITION.y, (((cbPrevObjMatrix._m0[_366].y * _312) + (cbPrevObjMatrix._m0[_331].y * _311)) + (cbPrevObjMatrix._m0[_413].y * _313)) + (cbPrevObjMatrix._m0[_460].y * _314), ((((cbPrevObjMatrix._m0[_366].x * _312) + (cbPrevObjMatrix._m0[_331].x * _311)) + (cbPrevObjMatrix._m0[_413].x * _313)) + (cbPrevObjMatrix._m0[_460].x * _314)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _695 = (((((cbPrevObjMatrix._m0[_373].w * _312) + (cbPrevObjMatrix._m0[_338].w * _311)) + (cbPrevObjMatrix._m0[_420].w * _313)) + (cbPrevObjMatrix._m0[_467].w * _314)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_373].z * _312) + (cbPrevObjMatrix._m0[_338].z * _311)) + (cbPrevObjMatrix._m0[_420].z * _313)) + (cbPrevObjMatrix._m0[_467].z * _314), fma(POSITION.y, (((cbPrevObjMatrix._m0[_373].y * _312) + (cbPrevObjMatrix._m0[_338].y * _311)) + (cbPrevObjMatrix._m0[_420].y * _313)) + (cbPrevObjMatrix._m0[_467].y * _314), ((((cbPrevObjMatrix._m0[_373].x * _312) + (cbPrevObjMatrix._m0[_338].x * _311)) + (cbPrevObjMatrix._m0[_420].x * _313)) + (cbPrevObjMatrix._m0[_467].x * _314)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _742 = fma(_255, _492, fma(_254, _489, _486 * _252));
    float _745 = fma(_255, _493, fma(_254, _490, _487 * _252));
    float _748 = fma(_255, _494, fma(_254, _491, _488 * _252));
    precise float _782 = _504 - cbSceneParam._m0[3u].x;
    precise float _783 = _511 - cbSceneParam._m0[3u].y;
    precise float _784 = _518 - cbSceneParam._m0[3u].z;
    precise float _812 = _782 * cbSceneParam._m0[24u].x;
    precise float _813 = _783 * cbSceneParam._m0[24u].y;
    precise float _814 = _813 + _812;
    precise float _815 = _784 * cbSceneParam._m0[24u].z;
    precise float _816 = _815 + _814;
    precise float _817 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _818 = _817 + _816;
    precise float _819 = _782 * cbSceneParam._m0[25u].x;
    precise float _820 = _783 * cbSceneParam._m0[25u].y;
    precise float _821 = _820 + _819;
    precise float _822 = _784 * cbSceneParam._m0[25u].z;
    precise float _823 = _822 + _821;
    precise float _824 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _825 = _824 + _823;
    precise float _826 = _782 * cbSceneParam._m0[26u].x;
    precise float _827 = _783 * cbSceneParam._m0[26u].y;
    precise float _828 = _827 + _826;
    precise float _829 = _784 * cbSceneParam._m0[26u].z;
    precise float _830 = _829 + _828;
    precise float _831 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _832 = _831 + _830;
    precise float _833 = _782 * cbSceneParam._m0[27u].x;
    precise float _834 = _783 * cbSceneParam._m0[27u].y;
    precise float _835 = _834 + _833;
    precise float _836 = _784 * cbSceneParam._m0[27u].z;
    precise float _837 = _836 + _835;
    precise float _838 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _839 = _838 + _837;
    gl_Position.x = _818;
    gl_Position.y = _825;
    gl_Position.z = _832;
    gl_Position.w = _839;
    POSITION_1.x = _818;
    POSITION_1.y = _825;
    POSITION_1.z = _832;
    POSITION_1.w = _839;
    NORMAL_1.x = _742;
    NORMAL_1.y = _745;
    NORMAL_1.z = _748;
    NORMAL_1.w = float(_303);
    TANGENT_1.x = fma(_266, _492, fma(_265, _489, _486 * _264));
    TANGENT_1.y = fma(_266, _493, fma(_265, _490, _487 * _264));
    TANGENT_1.z = fma(_266, _494, fma(_265, _491, _488 * _264));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_278, _492, fma(_277, _489, _486 * _276));
    TANGENT_2_1.y = fma(_278, _493, fma(_277, _490, _487 * _276));
    TANGENT_2_1.z = fma(_278, _494, fma(_277, _491, _488 * _276));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_4_1.x = fma(_290, _492, fma(_289, _489, _486 * _288));
    TANGENT_4_1.y = fma(_290, _493, fma(_289, _490, _487 * _288));
    TANGENT_4_1.z = fma(_290, _494, fma(_289, _491, _488 * _288));
    TANGENT_4_1.w = (float(TANGENT_4.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_4.z = COLOR_1.x;
    TEXCOORD_9.x = _818;
    TEXCOORD_9.y = _825;
    TEXCOORD_9.z = _832;
    TEXCOORD_9.w = _839;
    TEXCOORD_10.x = fma(_695, cbSceneParam._m0[29u].z, fma(_694, cbSceneParam._m0[29u].y, _693 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_695, cbSceneParam._m0[30u].z, fma(_694, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _693)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_695, cbSceneParam._m0[31u].z, fma(_694, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _693)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_695, cbSceneParam._m0[32u].z, fma(_694, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _693)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _742;
    TEXCOORD_11.y = _745;
    TEXCOORD_11.z = _748;
}


