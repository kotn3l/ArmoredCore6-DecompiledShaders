#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _139 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _140 = _139 * NORMAL.x;
    float _141 = _139 * NORMAL.y;
    float _142 = _139 * NORMAL.z;
    float _147;
    float _148;
    float _149;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _147 = (-0.0) - _140;
        _148 = (-0.0) - _141;
        _149 = (-0.0) - _142;
    }
    else
    {
        _147 = _140;
        _148 = _141;
        _149 = _142;
    }
    vec4 _178 = texture(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _185 = _178.x * cbMtdParam._m0[9u].x;
    float _186 = _178.y * cbMtdParam._m0[9u].y;
    float _187 = _178.z * cbMtdParam._m0[9u].z;
    float _188 = _178.w * cbMtdParam._m0[9u].w;
    float _189 = _188 * TEXCOORD_1.z;
    float _193 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _436 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _195 = isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0));
    float _196 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _197 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _198 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    uint _200 = uint(roundEven(NORMAL.w));
    float _243 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _253 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _243);
    float _254 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _243);
    float _255 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _243);
    vec4 _260 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _262 = _260.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _322 = sqrt(((_253 * _253) + (_254 * _254)) + (_255 * _255));
        float _329 = (cbMatDynParam._m0[5u].x * _322) + cbMatDynParam._m0[5u].y;
        float _462 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
        float _330 = isnan(1.0) ? _462 : (isnan(_462) ? 1.0 : min(_462, 1.0));
        float _334 = (cbMatDynParam._m0[5u].z * _322) + cbMatDynParam._m0[5u].w;
        float _473 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _473 : (isnan(_473) ? 1.0 : min(_473, 1.0))) - _330)) + _330) < ((_262 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _363;
    uint _282;
    vec4 _287;
    float _291;
    float _292;
    float _293;
    float _298;
    vec4 _302;
    float _304;
    float _305;
    bool _316;
    for (;;)
    {
        _282 = _200 * 13u;
        _287 = cbInstanceData._m0[(_282 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _291 = (cbMtdParam._m0[0u].x * _196) * _287.x;
        _292 = (cbMtdParam._m0[0u].y * _197) * _287.y;
        _293 = (cbMtdParam._m0[0u].z * _198) * _287.z;
        _298 = cbInstanceData._m0[_282 + 6u].w * _195;
        float _299 = _262 + (-0.5);
        _302 = cbMtdParam._m0[1u];
        _304 = _302.y * _299;
        _305 = _299 * 0.999000012874603271484375;
        _316 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_316)
        {
            if ((cbInstanceData._m0[_282 + 7u].x + _305) < 0.5)
            {
                _363 = true;
                break;
            }
        }
        if ((_287.w < 1.0) && ((_287.w + _305) < 0.5))
        {
            _363 = true;
            break;
        }
        if ((_304 + _188) < _302.x)
        {
            _363 = true;
            break;
        }
        _363 = false;
        break;
    }
    if (_363)
    {
        discard_state = true;
    }
    bool _388 = cbMtdParam._m0[1u].z != 0.0;
    float _389 = _388 ? _298 : 0.0;
    SV_Target.x = ((_147 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.y = ((_148 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.z = ((_149 * 0.5) * _193) + 0.500488758087158203125;
    SV_Target.w = _389;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _388 ? _298 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _298;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _389;
    SV_Target_4.x = _291 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _292 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _293 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _389;
    discard_exit();
}


