#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _754;
float _755;
float _756;
float _757;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _132 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _133 = _132 * NORMAL.x;
    float _134 = _132 * NORMAL.y;
    float _135 = _132 * NORMAL.z;
    float _140;
    float _141;
    float _142;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _140 = (-0.0) - _133;
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
    }
    else
    {
        _140 = _133;
        _141 = _134;
        _142 = _135;
    }
    float _186 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _196 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _186);
    float _197 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _186);
    float _198 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _186);
    vec4 _226 = texture(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _233 = _226.x * cbMtdParam._m0[9u].x;
    float _234 = _226.y * cbMtdParam._m0[9u].y;
    float _235 = _226.z * cbMtdParam._m0[9u].z;
    float _236 = _226.w * cbMtdParam._m0[9u].w;
    float _237 = _236 * TEXCOORD_1.z;
    vec4 _263 = texture(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    vec4 _293 = texture(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _327 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _334 = dot(vec4(_327 * _196, _327 * _197, _327 * _198, 0.0), vec4(_140, _141, _142, 0.0)) - cbMtdParam._m0[13u].w;
    float _766 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _342 = exp2(log2(1.0 - (isnan(1.0) ? _766 : (isnan(_766) ? 1.0 : min(_766, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].x : (isnan(cbMtdParam._m0[14u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].x, 0.001000000047497451305389404296875))));
    float _350 = ((((_293.x * cbMtdParam._m0[11u].x) + (_263.x * cbMtdParam._m0[10u].x)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_342 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].x) - cbMtdParam._m0[13u].y));
    float _352 = ((((_293.y * cbMtdParam._m0[11u].y) + (_263.y * cbMtdParam._m0[10u].y)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_342 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].y) - cbMtdParam._m0[13u].y));
    float _354 = ((((_293.z * cbMtdParam._m0[11u].z) + (_263.z * cbMtdParam._m0[10u].z)) * cbMtdParam._m0[13u].x) + cbMtdParam._m0[13u].y) + (_342 * ((cbMtdParam._m0[13u].z * cbMtdParam._m0[12u].z) - cbMtdParam._m0[13u].y));
    float _782 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _374 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _379 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _381 = _379.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _482 = sqrt(((_196 * _196) + (_197 * _197)) + (_198 * _198));
        float _489 = (cbMatDynParam._m0[5u].x * _482) + cbMatDynParam._m0[5u].y;
        float _808 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
        float _490 = isnan(1.0) ? _808 : (isnan(_808) ? 1.0 : min(_808, 1.0));
        float _494 = (cbMatDynParam._m0[5u].z * _482) + cbMatDynParam._m0[5u].w;
        float _819 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _819 : (isnan(_819) ? 1.0 : min(_819, 1.0))) - _490)) + _490) < ((_381 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _407 = uint(roundEven(NORMAL.w)) * 13u;
    uint _408 = _407 + 9u;
    uint _409 = _408 + uint(cbMatDynParam._m0[0u].w);
    float _419 = cbInstanceData._m0[_409].x * (_350 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0)))));
    float _421 = cbInstanceData._m0[_409].y * (_352 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0)))));
    float _423 = cbInstanceData._m0[_409].z * (_354 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0)))));
    float _424 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _425 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _426 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _432 = cbMtdParam._m0[2u].x * (cbInstanceData._m0[_409].x * _350);
    float _433 = cbMtdParam._m0[2u].y * (cbInstanceData._m0[_409].y * _352);
    float _434 = cbMtdParam._m0[2u].z * (cbInstanceData._m0[_409].z * _354);
    float _845 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _436 = isnan(1.0) ? _845 : (isnan(_845) ? 1.0 : min(_845, 1.0));
    float _441 = cbInstanceData._m0[_407 + 6u].w * (isnan(1.0) ? _782 : (isnan(_782) ? 1.0 : min(_782, 1.0)));
    float _447 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _448 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _463 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_447, _448, (log2((isnan(cbSceneParam._m0[77u].w) ? _374 : (isnan(_374) ? cbSceneParam._m0[77u].w : min(_374, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _465 = _463.x;
    float _466 = _463.y;
    float _467 = _463.z;
    float _468 = _463.w;
    float _549;
    float _551;
    float _553;
    float _555;
    if (_374 > cbSceneParam._m0[78u].w)
    {
        float _511 = isnan(_374) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _374 : min(cbSceneParam._m0[80u].w, _374));
        float _512 = _511 / _374;
        float _523 = _512 * _196;
        float _524 = _197 * _512;
        float _525 = (-0.0) - _524;
        float _526 = _512 * _198;
        float _528 = (cbSceneParam._m0[77u].w * _525) / _511;
        float _529 = _528 + cbSceneParam._m0[79u].w;
        float _530 = cbSceneParam._m0[79u].w - _524;
        float _536 = sqrt(((_523 * _523) + (_524 * _524)) + (_526 * _526));
        float _539 = (1.0 - (cbSceneParam._m0[77u].w / _511)) * _536;
        float _545 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _547 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _680;
        if (abs((_525 - _528) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _680 = ((((_529 > 0.0) ? exp2(_545 * _529) : (2.0 - exp2(_547 * _529))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _539;
        }
        else
        {
            float _635 = 1.0 / cbSceneParam._m0[80u].x;
            float _636 = isnan(_530) ? _529 : (isnan(_529) ? _530 : max(_529, _530));
            float _637 = isnan(_530) ? _529 : (isnan(_529) ? _530 : min(_529, _530));
            float _646 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : min(_636, 0.0));
            float _647 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : min(_637, 0.0));
            _680 = ((abs(_536 / _525) * cbSceneParam._m0[80u].y) * ((((_646 - _647) * 2.0) - ((exp2(_545 * (isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0)))) - exp2(_545 * (isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0))))) * _635)) - ((exp2(_547 * _646) - exp2(_547 * _647)) * _635))) + (_539 * cbSceneParam._m0[80u].z);
        }
        vec4 _682 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_447, _448, 1.0), 0.0);
        float _691 = exp2((_680 * (-1.44269502162933349609375)) * (1.0 - _682.w));
        float _692 = log2(_691);
        float _708 = log2(_468);
        _549 = (exp2(_708 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_692 * cbSceneParam._m0[78u].x)) * _682.x) / cbSceneParam._m0[78u].x)) + _465;
        _551 = (exp2(_708 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_692 * cbSceneParam._m0[78u].y)) * _682.y) / cbSceneParam._m0[78u].y)) + _466;
        _553 = (exp2(_708 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_692 * cbSceneParam._m0[78u].z)) * _682.z) / cbSceneParam._m0[78u].z)) + _467;
        _555 = _691 * _468;
    }
    else
    {
        _549 = _465;
        _551 = _466;
        _553 = _467;
        _555 = _468;
    }
    bool _718;
    vec4 _565;
    vec4 _589;
    float _591;
    float _596;
    float _597;
    float _598;
    float _601;
    float _604;
    float _607;
    float _608;
    bool _619;
    for (;;)
    {
        _565 = cbMatDynParam._m0[0u];
        float _567 = roundEven(_565.y);
        bool _568 = _567 == 3.0;
        float _570 = log2(_555);
        float _574 = exp2(_570 * cbSceneParam._m0[78u].x);
        float _575 = exp2(_570 * cbSceneParam._m0[78u].y);
        float _576 = exp2(_570 * cbSceneParam._m0[78u].z);
        float _577 = _574 * _424;
        float _578 = _575 * _425;
        float _579 = _576 * _426;
        float _586 = _381 + (-0.5);
        _589 = cbMtdParam._m0[1u];
        _591 = _589.y * _586;
        float _595 = (_567 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _596 = _595 * (_568 ? _577 : (_577 + (cbSceneParam._m0[72u].w * _549)));
        _597 = _595 * (_568 ? _578 : (_578 + (cbSceneParam._m0[72u].w * _551)));
        _598 = _595 * (_568 ? _579 : (_579 + (cbSceneParam._m0[72u].w * _553)));
        _601 = ((_432 * _436) * _574) * _595;
        _604 = ((_433 * _436) * _575) * _595;
        _607 = ((_434 * _436) * _576) * _595;
        _608 = _586 * 0.999000012874603271484375;
        _619 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_619)
        {
            if ((cbInstanceData._m0[_407 + 7u].x + _608) < 0.5)
            {
                _718 = true;
                break;
            }
        }
        uint _672 = _408 + uint(_565.w);
        if ((cbInstanceData._m0[_672].w < 1.0) && ((cbInstanceData._m0[_672].w + _608) < 0.5))
        {
            _718 = true;
            break;
        }
        if ((_591 + _236) < _589.x)
        {
            _718 = true;
            break;
        }
        _718 = false;
        break;
    }
    float _723;
    if (_718)
    {
        discard_state = true;
        _723 = 0.0;
    }
    else
    {
        _723 = _441;
    }
    SV_Target.x = _596;
    SV_Target.y = _597;
    SV_Target.z = _598;
    SV_Target.w = _723;
    SV_Target_1.x = _601;
    SV_Target_1.y = _604;
    SV_Target_1.z = _607;
    SV_Target_1.w = _441;
    discard_exit();
}


