#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    vec4 _121 = texture(sampler2D(C_ER_FO_M0_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _124 = _121.w * cbMtdParam._m0[9u].w;
    uint _127 = uint(roundEven(NORMAL.w));
    float _170 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _180 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _170);
    float _181 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _170);
    float _182 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _170);
    vec4 _187 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _189 = _187.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _222 = sqrt(((_180 * _180) + (_181 * _181)) + (_182 * _182));
        float _229 = (cbMatDynParam._m0[5u].x * _222) + cbMatDynParam._m0[5u].y;
        float _300 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
        float _231 = isnan(1.0) ? _300 : (isnan(_300) ? 1.0 : min(_300, 1.0));
        float _235 = (cbMatDynParam._m0[5u].z * _222) + cbMatDynParam._m0[5u].w;
        float _311 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _311 : (isnan(_311) ? 1.0 : min(_311, 1.0))) - _231)) + _231) < ((_189 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _272;
    vec4 _200;
    float _202;
    float _203;
    bool _214;
    uint _215;
    for (;;)
    {
        float _197 = _189 + (-0.5);
        _200 = cbMtdParam._m0[1u];
        _202 = _200.y * _197;
        _203 = _197 * 0.999000012874603271484375;
        _214 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _215 = _127 * 13u;
        if (_214)
        {
            if ((cbInstanceData._m0[_215 + 7u].x + _203) < 0.5)
            {
                _272 = true;
                break;
            }
        }
        uint _261 = (_215 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_261].w < 1.0) && ((cbInstanceData._m0[_261].w + _203) < 0.5))
        {
            _272 = true;
            break;
        }
        if ((_202 + _124) < _200.x)
        {
            _272 = true;
            break;
        }
        _272 = false;
        break;
    }
    if (_272)
    {
        discard_state = true;
    }
    discard_exit();
}


