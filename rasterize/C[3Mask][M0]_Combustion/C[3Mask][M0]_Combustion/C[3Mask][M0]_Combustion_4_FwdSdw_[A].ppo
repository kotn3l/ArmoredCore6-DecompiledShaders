#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1326;
float _4023;
float _4024;
float _4025;
float _4026;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _264 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _270 = _264.x * cbMtdParam._m0[10u].x;
    float _271 = _264.y * cbMtdParam._m0[10u].y;
    float _272 = _264.z * cbMtdParam._m0[10u].z;
    vec4 _291 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _310 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _337 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _347 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _310.x) * 2.0) - _337)) + 1.0;
    float _4035 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _348 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
    float _355 = (_348 * ((_291.x * cbMtdParam._m0[11u].x) - _270)) + _270;
    float _356 = (_348 * ((_291.y * cbMtdParam._m0[11u].y) - _271)) + _271;
    float _357 = (_348 * ((_291.z * cbMtdParam._m0[11u].z) - _272)) + _272;
    vec4 _376 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _389 = (((((1.0 - _310.y) * 2.0) - _337) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4046 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
    float _397 = (((_376.x * cbMtdParam._m0[12u].x) - _355) * _390) + _355;
    float _398 = (_390 * ((_376.y * cbMtdParam._m0[12u].y) - _356)) + _356;
    float _399 = (_390 * ((_376.z * cbMtdParam._m0[12u].z) - _357)) + _357;
    vec4 _417 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _430 = (((((1.0 - _310.z) * 2.0) - _337) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4057 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
    vec4 _459 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _467 = ((((((_417.x * cbMtdParam._m0[13u].x) - _397) * _431) + _397) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _459.x;
    float _470 = ((((_431 * ((_417.y * cbMtdParam._m0[13u].y) - _398)) + _398) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _459.y;
    float _473 = ((((_431 * ((_417.z * cbMtdParam._m0[13u].z) - _399)) + _399) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _459.z;
    vec4 _486 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    vec4 _500 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _502 = _500.x;
    float _503 = _500.y;
    float _504 = _500.z;
    vec4 _516 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _527 = ((_516.x - _502) * _348) + _502;
    float _528 = ((_516.y - _503) * _348) + _503;
    float _529 = ((_516.z - _504) * _348) + _504;
    vec4 _542 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _553 = ((_542.x - _527) * _390) + _527;
    float _554 = ((_542.y - _528) * _390) + _528;
    float _555 = ((_542.z - _529) * _390) + _529;
    vec4 _568 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _581 = ((_568.z - _555) * _431) + _555;
    float _584 = ((((_568.x - _553) * _431) + _553) * 2.0) + (-1.0);
    float _586 = ((((_568.y - _554) * _431) + _554) * 2.0) + (-1.0);
    float _587 = dot(vec2(_584, _586), vec2(_584, _586));
    float _4068 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _592 = sqrt(1.0 - (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))));
    vec4 _625 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _639 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4079 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _640 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
    float _648 = (((_640 * _640) * (3.0 - (_640 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _656 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _664 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4090 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _665 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
    float _669 = (_665 * _665) * (3.0 - (_665 * 2.0));
    float _670 = _669 * cbMtdParam._m0[22u].x;
    float _671 = _669 * cbMtdParam._m0[22u].y;
    float _672 = sin(_656);
    float _673 = cos(_656);
    float _674 = TEXCOORD.z - _670;
    float _675 = TEXCOORD.w - _671;
    vec4 _695 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_670 + fma(_675, (-0.0) - _672, _674 * _673))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_675, _673, _674 * _672) + _671)) + cbTextureTilingScale._m0[2u].w));
    float _701 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _695.x;
    float _703 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _695.y;
    float _705 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _695.z;
    float _726 = (TEXCOORD_5.x - (((_486.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4101 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _727 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    vec4 _740 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _750 = (((_740.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _584;
    float _751 = (((_740.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z) + _586;
    float _754 = fma(_592, _235 * NORMAL.x, fma(_751, _242 * TANGENT.x, (_228 * _220) * _750));
    float _757 = fma(_592, _235 * NORMAL.y, fma(_751, _242 * TANGENT.y, (_228 * _221) * _750));
    float _760 = fma(_592, _235 * NORMAL.z, fma(_751, _242 * TANGENT.z, (_228 * _222) * _750));
    float _764 = inversesqrt(dot(vec3(_754, _757, _760), vec3(_754, _757, _760)));
    float _765 = _764 * _754;
    float _766 = _764 * _757;
    float _767 = _764 * _760;
    float _4112 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _768 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _4123 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _4134 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _4145 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _787 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _827 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _837 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _827);
    float _838 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _827);
    float _839 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _827);
    float _843 = inversesqrt(dot(vec3(_837, _838, _839), vec3(_837, _838, _839)));
    float _844 = _837 * _843;
    float _845 = _838 * _843;
    float _846 = _839 * _843;
    vec4 _851 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _853 = _851.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1006 = sqrt(((_837 * _837) + (_838 * _838)) + (_839 * _839));
        float _1012 = (cbMatDynParam._m0[5u].x * _1006) + cbMatDynParam._m0[5u].y;
        float _4156 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
        float _1013 = isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0));
        float _1017 = (cbMatDynParam._m0[5u].z * _1006) + cbMatDynParam._m0[5u].w;
        float _4167 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0))) - _1013)) + _1013) < ((_853 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _864 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _865 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _883 = fma(_767, cbSceneParam._m0[5u].z, fma(_766, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _765));
    float _886 = fma(_767, cbSceneParam._m0[6u].z, fma(_766, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _765));
    float _889 = fma(_767, cbSceneParam._m0[7u].z, fma(_766, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _765));
    uint _902 = uint(roundEven(NORMAL.w)) * 13u;
    uint _903 = _902 + 9u;
    uint _904 = _903 + uint(cbMatDynParam._m0[0u].w);
    float _910 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0)))) * cbInstanceData._m0[_904].x;
    float _911 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0)))) * cbInstanceData._m0[_904].y;
    float _912 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0)))) * cbInstanceData._m0[_904].z;
    float _4178 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _913 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _4189 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _914 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
    float _4200 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _915 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
    vec4 _924 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _864, cbSceneParam._m0[86u].y * _865));
    float _927 = _924.x * TEXCOORD_5.w;
    float _928 = dot(vec3(_765, _766, _767), vec3(_844, _845, _846));
    float _931 = _928 * 2.0;
    float _935 = (_931 * _765) - _844;
    float _936 = (_931 * _766) - _845;
    float _937 = (_931 * _767) - _846;
    float _941 = abs(dot(vec3(_844, _845, _846), vec3(_765, _766, _767)));
    float _4211 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    float _943 = sqrt(_768);
    float _955 = exp2((_943 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_943 * 3.0));
    float _987 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _991 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _995 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1325;
    float _1327;
    float _1328;
    float _1329;
    float _1330;
    float _1331;
    float _1332;
    float _1333;
    float _1334;
    float _1335;
    float _1336;
    float _1337;
    float _1338;
    float _1339;
    float _1340;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1050 = fma(_995, cbModelParam._m0[26u].z, fma(_991, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _987));
        float _1054 = fma(_995, cbModelParam._m0[27u].z, fma(_991, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _987));
        float _1058 = fma(_995, cbModelParam._m0[28u].z, fma(_991, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _987));
        float _1083 = _987 + _765;
        float _1084 = _991 + _766;
        float _1085 = _995 + _767;
        float _1095 = fma(_1085, cbModelParam._m0[26u].z, fma(_1084, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1083)) - _1050;
        float _1096 = fma(_1085, cbModelParam._m0[27u].z, fma(_1084, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1083)) - _1054;
        float _1097 = fma(_1085, cbModelParam._m0[28u].z, fma(_1084, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1083)) - _1058;
        float _1101 = inversesqrt(dot(vec3(_1095, _1096, _1097), vec3(_1095, _1096, _1097)));
        float _1114 = ((_1101 * _1095) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1050 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1115 = ((_1101 * _1096) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1054 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1116 = ((_1101 * _1097) / cbModelParam._m0[34u].z) + ((((((_1058 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1119 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1114, _1115, _1116), 0.0);
        vec4 _1126 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1114, _1115, _1116), 0.0);
        vec4 _1133 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1114, _1115, _1116), 0.0);
        vec4 _1140 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1114, _1115, _1116), 0.0);
        float _1153 = exp2((_1119.w + (-0.5)) * 20.0) * 2.0;
        float _1154 = _1153 * (_1119.x + (-0.5));
        float _1155 = _1153 * (_1119.y + (-0.5));
        float _1156 = _1153 * (_1119.z + (-0.5));
        float _1163 = exp2((_1126.w + (-0.5)) * 20.0) * 2.0;
        float _1164 = _1163 * (_1126.x + (-0.5));
        float _1165 = _1163 * (_1126.y + (-0.5));
        float _1166 = _1163 * (_1126.z + (-0.5));
        float _1173 = exp2((_1133.w + (-0.5)) * 20.0) * 2.0;
        float _1174 = _1173 * (_1133.x + (-0.5));
        float _1175 = _1173 * (_1133.y + (-0.5));
        float _1176 = _1173 * (_1133.z + (-0.5));
        float _1183 = exp2((_1140.w + (-0.5)) * 20.0) * 2.0;
        float _1184 = _1183 * (_1140.x + (-0.5));
        float _1185 = _1183 * (_1140.y + (-0.5));
        float _1186 = _1183 * (_1140.z + (-0.5));
        float _1187 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
        float _1188 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1189 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1190 = _1154 * 0.5;
        float _1191 = _1164 * 0.5;
        float _1192 = _1174 * 0.5;
        float _1193 = dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192));
        float _1198 = (_1193 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1193);
        float _1207 = (dot(vec3(_765, _766, _767), vec3(_1198 * _1190, _1198 * _1191, _1198 * _1192)) + 1.0) * 0.5;
        float _4237 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1217 = sqrt(((_1191 * _1191) + (_1190 * _1190)) + (_1192 * _1192)) / (_1187 + 9.9999997473787516355514526367188e-06);
        float _4248 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
        float _1218 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1219 = _1218 * 2.0;
        float _1223 = (1.0 - _1218) / (_1218 + 1.0);
        float _4259 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _1233 = ((((1.0 - _1224) * (_1219 + 2.0)) * exp2(log2(isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * (_1219 + 1.0))) + _1224) * _1187;
        float _1234 = _1155 * 0.5;
        float _1235 = _1165 * 0.5;
        float _1236 = _1175 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1250 = (dot(vec3(_765, _766, _767), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _4270 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1259 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1188 + 9.9999997473787516355514526367188e-06);
        float _4281 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1260 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1261 = _1260 * 2.0;
        float _1265 = (1.0 - _1260) / (_1260 + 1.0);
        float _4292 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1266 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
        float _1275 = ((((1.0 - _1266) * (_1261 + 2.0)) * exp2(log2(isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))) * (_1261 + 1.0))) + _1266) * _1188;
        float _1276 = _1156 * 0.5;
        float _1277 = _1166 * 0.5;
        float _1278 = _1176 * 0.5;
        float _1279 = dot(vec3(_1276, _1277, _1278), vec3(_1276, _1277, _1278));
        float _1284 = (_1279 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1279);
        float _1292 = (dot(vec3(_765, _766, _767), vec3(_1284 * _1276, _1284 * _1277, _1284 * _1278)) + 1.0) * 0.5;
        float _4303 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1301 = sqrt(((_1277 * _1277) + (_1276 * _1276)) + (_1278 * _1278)) / (_1189 + 9.9999997473787516355514526367188e-06);
        float _4314 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1303 = _1302 * 2.0;
        float _1307 = (1.0 - _1302) / (_1302 + 1.0);
        float _4325 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1308 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
        float _1317 = ((((1.0 - _1308) * (_1303 + 2.0)) * exp2(log2(isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_1303 + 1.0))) + _1308) * _1189;
        _1325 = _1156;
        _1327 = _1155;
        _1328 = _1154;
        _1329 = _1166;
        _1330 = _1165;
        _1331 = _1164;
        _1332 = _1176;
        _1333 = _1175;
        _1334 = _1174;
        _1335 = _1189;
        _1336 = _1188;
        _1337 = _1187;
        _1338 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0)));
        _1339 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0)));
        _1340 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0)));
    }
    else
    {
        _1325 = _1326;
        _1327 = _1326;
        _1328 = _1326;
        _1329 = _1326;
        _1330 = _1326;
        _1331 = _1326;
        _1332 = _1326;
        _1333 = _1326;
        _1334 = _1326;
        _1335 = _1326;
        _1336 = _1326;
        _1337 = _1326;
        _1338 = 0.0;
        _1339 = 0.0;
        _1340 = 0.0;
    }
    float _1638;
    float _1639;
    float _1640;
    float _1641;
    float _1642;
    float _1643;
    float _1644;
    float _1645;
    float _1646;
    float _1647;
    float _1648;
    float _1649;
    float _1650;
    float _1651;
    float _1652;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1369 = fma(_995, cbModelParam._m0[30u].z, fma(_991, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _987));
        float _1373 = fma(_995, cbModelParam._m0[31u].z, fma(_991, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _987));
        float _1377 = fma(_995, cbModelParam._m0[32u].z, fma(_991, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _987));
        float _1400 = _987 + _765;
        float _1401 = _991 + _766;
        float _1402 = _995 + _767;
        float _1412 = fma(_1402, cbModelParam._m0[30u].z, fma(_1401, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1400)) - _1369;
        float _1413 = fma(_1402, cbModelParam._m0[31u].z, fma(_1401, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1400)) - _1373;
        float _1414 = fma(_1402, cbModelParam._m0[32u].z, fma(_1401, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1400)) - _1377;
        float _1418 = inversesqrt(dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414)));
        float _1431 = ((_1418 * _1412) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1369 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1432 = ((_1418 * _1413) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1373 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1433 = ((_1418 * _1414) / cbModelParam._m0[35u].z) + ((((((_1377 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1435 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1431, _1432, _1433), 0.0);
        vec4 _1442 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1431, _1432, _1433), 0.0);
        vec4 _1449 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1431, _1432, _1433), 0.0);
        vec4 _1456 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1431, _1432, _1433), 0.0);
        float _1468 = exp2((_1435.w + (-0.5)) * 20.0) * 2.0;
        float _1469 = _1468 * (_1435.x + (-0.5));
        float _1470 = _1468 * (_1435.y + (-0.5));
        float _1471 = _1468 * (_1435.z + (-0.5));
        float _1478 = exp2((_1442.w + (-0.5)) * 20.0) * 2.0;
        float _1479 = _1478 * (_1442.x + (-0.5));
        float _1480 = _1478 * (_1442.y + (-0.5));
        float _1481 = _1478 * (_1442.z + (-0.5));
        float _1488 = exp2((_1449.w + (-0.5)) * 20.0) * 2.0;
        float _1489 = _1488 * (_1449.x + (-0.5));
        float _1490 = _1488 * (_1449.y + (-0.5));
        float _1491 = _1488 * (_1449.z + (-0.5));
        float _1498 = exp2((_1456.w + (-0.5)) * 20.0) * 2.0;
        float _1499 = _1498 * (_1456.x + (-0.5));
        float _1500 = _1498 * (_1456.y + (-0.5));
        float _1501 = _1498 * (_1456.z + (-0.5));
        float _1502 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1503 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1504 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1505 = _1469 * 0.5;
        float _1506 = _1479 * 0.5;
        float _1507 = _1489 * 0.5;
        float _1508 = dot(vec3(_1505, _1506, _1507), vec3(_1505, _1506, _1507));
        float _1513 = (_1508 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1508);
        float _1521 = (dot(vec3(_765, _766, _767), vec3(_1513 * _1505, _1513 * _1506, _1513 * _1507)) + 1.0) * 0.5;
        float _4366 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1530 = sqrt(((_1506 * _1506) + (_1505 * _1505)) + (_1507 * _1507)) / (_1502 + 9.9999997473787516355514526367188e-06);
        float _4377 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1531 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1532 = _1531 * 2.0;
        float _1536 = (1.0 - _1531) / (_1531 + 1.0);
        float _4388 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1537 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
        float _1546 = ((((1.0 - _1537) * (_1532 + 2.0)) * exp2(log2(isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0))) * (_1532 + 1.0))) + _1537) * _1502;
        float _1547 = _1470 * 0.5;
        float _1548 = _1480 * 0.5;
        float _1549 = _1490 * 0.5;
        float _1550 = dot(vec3(_1547, _1548, _1549), vec3(_1547, _1548, _1549));
        float _1555 = (_1550 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1550);
        float _1563 = (dot(vec3(_765, _766, _767), vec3(_1555 * _1547, _1555 * _1548, _1555 * _1549)) + 1.0) * 0.5;
        float _4399 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0));
        float _1572 = sqrt(((_1548 * _1548) + (_1547 * _1547)) + (_1549 * _1549)) / (_1503 + 9.9999997473787516355514526367188e-06);
        float _4410 = isnan(0.0) ? _1572 : (isnan(_1572) ? 0.0 : max(_1572, 0.0));
        float _1573 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1574 = _1573 * 2.0;
        float _1578 = (1.0 - _1573) / (_1573 + 1.0);
        float _4421 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1579 = isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0));
        float _1588 = ((((1.0 - _1579) * (_1574 + 2.0)) * exp2(log2(isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0))) * (_1574 + 1.0))) + _1579) * _1503;
        float _1589 = _1471 * 0.5;
        float _1590 = _1481 * 0.5;
        float _1591 = _1491 * 0.5;
        float _1592 = dot(vec3(_1589, _1590, _1591), vec3(_1589, _1590, _1591));
        float _1597 = (_1592 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1592);
        float _1605 = (dot(vec3(_765, _766, _767), vec3(_1597 * _1589, _1597 * _1590, _1597 * _1591)) + 1.0) * 0.5;
        float _4432 = isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0));
        float _1614 = sqrt(((_1590 * _1590) + (_1589 * _1589)) + (_1591 * _1591)) / (_1504 + 9.9999997473787516355514526367188e-06);
        float _4443 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1615 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1616 = _1615 * 2.0;
        float _1620 = (1.0 - _1615) / (_1615 + 1.0);
        float _4454 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1621 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
        float _1630 = ((((1.0 - _1621) * (_1616 + 2.0)) * exp2(log2(isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0))) * (_1616 + 1.0))) + _1621) * _1504;
        _1638 = _1471;
        _1639 = _1470;
        _1640 = _1469;
        _1641 = _1481;
        _1642 = _1480;
        _1643 = _1479;
        _1644 = _1491;
        _1645 = _1490;
        _1646 = _1489;
        _1647 = _1504;
        _1648 = _1503;
        _1649 = _1502;
        _1650 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1546 : (isnan(_1546) ? 0.0 : max(_1546, 0.0)));
        _1651 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1588 : (isnan(_1588) ? 0.0 : max(_1588, 0.0)));
        _1652 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)));
    }
    else
    {
        _1638 = _1326;
        _1639 = _1326;
        _1640 = _1326;
        _1641 = _1326;
        _1642 = _1326;
        _1643 = _1326;
        _1644 = _1326;
        _1645 = _1326;
        _1646 = _1326;
        _1647 = _1326;
        _1648 = _1326;
        _1649 = _1326;
        _1650 = 0.0;
        _1651 = 0.0;
        _1652 = 0.0;
    }
    float _1662 = (cbModelParam._m0[1u].x * (_1650 - _1338)) + _1338;
    float _1663 = (cbModelParam._m0[1u].x * (_1651 - _1339)) + _1339;
    float _1664 = (cbModelParam._m0[1u].x * (_1652 - _1340)) + _1340;
    float _1685 = fma(_1664, cbSceneParam._m0[89u].z, fma(_1663, cbSceneParam._m0[89u].y, _1662 * cbSceneParam._m0[89u].x));
    float _1688 = fma(_1664, cbSceneParam._m0[90u].z, fma(_1663, cbSceneParam._m0[90u].y, _1662 * cbSceneParam._m0[90u].x));
    float _1691 = fma(_1664, cbSceneParam._m0[91u].z, fma(_1663, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1662));
    float _1706 = _935 * 0.5;
    float _1707 = _936 * 0.5;
    float _1708 = _937 * 0.5;
    float _1709 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1640, _1643, _1646, _1649));
    float _1712 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1639, _1642, _1645, _1648));
    float _1715 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1638, _1641, _1644, _1647));
    float _1749;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1722 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1325, _1329, _1332, _1335));
        float _1726 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1327, _1330, _1333, _1336));
        float _1730 = dot(vec4(_1706, _1707, _1708, 1.0), vec4(_1328, _1331, _1334, _1337));
        float _1737 = dot(vec4(cbModelParam._m0[39u]), vec4(_1706, _1707, _1708, 1.0));
        _1749 = dot(vec3(isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0)), isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0)), isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1737) ? 0.0 : (isnan(0.0) ? _1737 : max(0.0, _1737))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1749 = 1.0;
    }
    float _1760;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1751 = dot(vec4(cbModelParam._m0[40u]), vec4(_1706, _1707, _1708, 1.0));
        _1760 = dot(vec3(isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)), isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)), isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1751) ? 0.0 : (isnan(0.0) ? _1751 : max(0.0, _1751))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1760 = 1.0;
    }
    float _1764 = (_1760 * cbModelParam._m0[1u].x) + (_1749 * (1.0 - cbModelParam._m0[1u].x));
    float _1774 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _768);
    float _1775 = isnan(_1774) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1774 : min(cbModelParam._m0[25u].z, _1774));
    float _1855;
    float _1857;
    float _1859;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1822 = fma(_995, cbModelParam._m0[13u].z, fma(_991, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _987)) + cbModelParam._m0[13u].w;
        float _1826 = fma(_995, cbModelParam._m0[14u].z, fma(_991, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _987)) + cbModelParam._m0[14u].w;
        float _1830 = fma(_995, cbModelParam._m0[15u].z, fma(_991, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _987)) + cbModelParam._m0[15u].w;
        float _1833 = fma(_937, cbModelParam._m0[13u].z, fma(_936, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _935));
        float _1836 = fma(_937, cbModelParam._m0[14u].z, fma(_936, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _935));
        float _1839 = fma(_937, cbModelParam._m0[15u].z, fma(_936, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _935));
        float _1867;
        if (_1833 > 0.0)
        {
            _1867 = abs((1.0 - _1822) / _1833);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1833 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1822 + 1.0) / _1833);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1867 = frontier_phi_17_15_ladder;
        }
        float _2036;
        if (_1836 > 0.0)
        {
            _2036 = abs((1.0 - _1826) / _1836);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1836 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1826 + 1.0) / _1836);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2036 = frontier_phi_26_22_ladder;
        }
        float _2332;
        if (_1839 > 0.0)
        {
            _2332 = abs((1.0 - _1830) / _1839);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1839 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1830 + 1.0) / _1839);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2332 = frontier_phi_38_33_ladder;
        }
        float _2334 = isnan(_2036) ? _1867 : (isnan(_1867) ? _2036 : min(_1867, _2036));
        float _2335 = isnan(_2332) ? _2334 : (isnan(_2334) ? _2332 : min(_2334, _2332));
        float _2339 = (_2335 * _1833) + _1822;
        float _2340 = (_2335 * _1836) + _1826;
        float _2341 = (_2335 * _1839) + _1830;
        float _2342 = _2335 * 9.9999997473787516355514526367188e-05;
        float _2344 = (-1.0) - _2342;
        float _2346 = _2342 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2341 > _2346) || ((_2341 < _2344) || ((_2340 > _2346) || ((_2340 < _2344) || ((_2339 < _2344) || (_2339 > _2346))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2486 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2341, cbModelParam._m0[9u].z, fma(_2340, cbModelParam._m0[9u].y, _2339 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2341, cbModelParam._m0[10u].z, fma(_2340, cbModelParam._m0[10u].y, _2339 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2341, cbModelParam._m0[11u].z, fma(_2340, cbModelParam._m0[11u].y, _2339 * cbModelParam._m0[11u].x))), _1775);
            frontier_phi_16_38_ladder = _2486.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2486.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2486.x * cbModelParam._m0[1u].y;
        }
        _1855 = frontier_phi_16_38_ladder_2;
        _1857 = frontier_phi_16_38_ladder_1;
        _1859 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1843 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_935, _936, _937), _1775);
        _1855 = _1843.x * cbModelParam._m0[1u].y;
        _1857 = _1843.y * cbModelParam._m0[1u].y;
        _1859 = _1843.z * cbModelParam._m0[1u].y;
    }
    float _1863 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _768);
    float _1864 = isnan(_1863) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1863 : min(cbModelParam._m0[25u].w, _1863));
    float _1953;
    float _1955;
    float _1957;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1917 = fma(_995, cbModelParam._m0[21u].z, fma(_991, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _987)) + cbModelParam._m0[21u].w;
        float _1921 = fma(_995, cbModelParam._m0[22u].z, fma(_991, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _987)) + cbModelParam._m0[22u].w;
        float _1925 = fma(_995, cbModelParam._m0[23u].z, fma(_991, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _987)) + cbModelParam._m0[23u].w;
        float _1928 = fma(_937, cbModelParam._m0[21u].z, fma(_936, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _935));
        float _1931 = fma(_937, cbModelParam._m0[22u].z, fma(_936, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _935));
        float _1934 = fma(_937, cbModelParam._m0[23u].z, fma(_936, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _935));
        float _2041;
        if (_1928 > 0.0)
        {
            _2041 = abs((1.0 - _1917) / _1928);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1917 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2041 = frontier_phi_28_24_ladder;
        }
        float _2359;
        if (_1931 > 0.0)
        {
            _2359 = abs((1.0 - _1921) / _1931);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1931 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1921 + 1.0) / _1931);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2359 = frontier_phi_40_35_ladder;
        }
        float _2686;
        if (_1934 > 0.0)
        {
            _2686 = abs((1.0 - _1925) / _1934);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1934 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1925 + 1.0) / _1934);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2686 = frontier_phi_50_47_ladder;
        }
        float _2688 = isnan(_2359) ? _2041 : (isnan(_2041) ? _2359 : min(_2041, _2359));
        float _2689 = isnan(_2686) ? _2688 : (isnan(_2688) ? _2686 : min(_2688, _2686));
        float _2693 = (_2689 * _1928) + _1917;
        float _2694 = (_2689 * _1931) + _1921;
        float _2695 = (_2689 * _1934) + _1925;
        float _2696 = _2689 * 9.9999997473787516355514526367188e-05;
        float _2697 = (-1.0) - _2696;
        float _2699 = _2696 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2695 > _2699) || ((_2695 < _2697) || ((_2694 > _2699) || ((_2694 < _2697) || ((_2693 < _2697) || (_2693 > _2699))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2813 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2695, cbModelParam._m0[17u].z, fma(_2694, cbModelParam._m0[17u].y, _2693 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2695, cbModelParam._m0[18u].z, fma(_2694, cbModelParam._m0[18u].y, _2693 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2695, cbModelParam._m0[19u].z, fma(_2694, cbModelParam._m0[19u].y, _2693 * cbModelParam._m0[19u].x))), _1864);
            frontier_phi_25_50_ladder = _2813.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2813.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2813.x * cbModelParam._m0[1u].z;
        }
        _1953 = frontier_phi_25_50_ladder_2;
        _1955 = frontier_phi_25_50_ladder_1;
        _1957 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1937 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_935, _936, _937), _1864);
        _1953 = _1937.x * cbModelParam._m0[1u].z;
        _1955 = _1937.y * cbModelParam._m0[1u].z;
        _1957 = _1937.z * cbModelParam._m0[1u].z;
    }
    float _1969 = ((((1.0 - _955) * ((_943 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_955 * _943)) * _927;
    float _1970 = _1969 * ((cbModelParam._m0[1u].w * (_1953 - _1855)) + _1855);
    float _1971 = _1969 * ((cbModelParam._m0[1u].w * (_1955 - _1857)) + _1857);
    float _1972 = _1969 * ((cbModelParam._m0[1u].w * (_1957 - _1859)) + _1859);
    float _1975 = fma(_1972, cbSceneParam._m0[89u].z, fma(_1971, cbSceneParam._m0[89u].y, _1970 * cbSceneParam._m0[89u].x));
    float _1978 = fma(_1972, cbSceneParam._m0[90u].z, fma(_1971, cbSceneParam._m0[90u].y, _1970 * cbSceneParam._m0[90u].x));
    float _1981 = fma(_1972, cbSceneParam._m0[91u].z, fma(_1971, cbSceneParam._m0[91u].y, _1970 * cbSceneParam._m0[91u].x));
    float _2015 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2019 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2023 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2027 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2028 = _2015 / _2027;
    float _2029 = _2019 / _2027;
    float _2030 = _2023 / _2027;
    float _2177;
    float _2178;
    float _2179;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2057 = ((uint(_2030 > cbSceneParam._m0[59u].y) + uint(_2030 > cbSceneParam._m0[59u].x)) + uint(_2030 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2058 = _2057 + 43u;
        uint _2066 = _2057 + 44u;
        uint _2074 = _2057 + 45u;
        uint _2082 = _2057 + 46u;
        float _2093 = fma(_2027, cbSceneParam._m0[_2058].w, fma(_2023, cbSceneParam._m0[_2058].z, fma(_2019, cbSceneParam._m0[_2058].y, _2015 * cbSceneParam._m0[_2058].x)));
        float _2097 = fma(_2027, cbSceneParam._m0[_2066].w, fma(_2023, cbSceneParam._m0[_2066].z, fma(_2019, cbSceneParam._m0[_2066].y, _2015 * cbSceneParam._m0[_2066].x)));
        float _2105 = fma(_2027, cbSceneParam._m0[_2082].w, fma(_2023, cbSceneParam._m0[_2082].z, fma(_2019, cbSceneParam._m0[_2082].y, _2015 * cbSceneParam._m0[_2082].x)));
        float _2110 = cbSceneParam._m0[33u].z * _2105;
        float _2112 = cbSceneParam._m0[33u].w * _2105;
        float _2115 = fma(_2027, cbSceneParam._m0[_2074].w, fma(_2023, cbSceneParam._m0[_2074].z, fma(_2019, cbSceneParam._m0[_2074].y, _2015 * cbSceneParam._m0[_2074].x))) / _2105;
        float _2163 = (cbSceneParam._m0[33u].x - sqrt(((_2029 * _2029) + (_2028 * _2028)) + (_2030 * _2030))) * cbSceneParam._m0[33u].y;
        float _4580 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2170 = (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2110 + _2093) / _2105, (_2112 + _2097) / _2105), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2112 + _2093) / _2105, (_2097 - _2110) / _2105), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2093 - _2110) / _2105, (_2097 - _2112) / _2105), _2115), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2093 - _2112) / _2105, (_2110 + _2097) / _2105), _2115), 0.0)).x), vec4(0.25)));
        _2177 = 1.0 - (_2170 * cbSceneParam._m0[34u].x);
        _2178 = 1.0 - (_2170 * cbSceneParam._m0[34u].y);
        _2179 = 1.0 - (_2170 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2177 = 1.0;
        _2178 = 1.0;
        _2179 = 1.0;
    }
    float _2243;
    float _2245;
    float _2247;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2231 = fma(_2027, cbSceneParam._m0[63u].w, fma(_2023, cbSceneParam._m0[63u].z, fma(_2019, cbSceneParam._m0[63u].y, _2015 * cbSceneParam._m0[63u].x)));
        float _2232 = fma(_2027, cbSceneParam._m0[60u].w, fma(_2023, cbSceneParam._m0[60u].z, fma(_2019, cbSceneParam._m0[60u].y, _2015 * cbSceneParam._m0[60u].x))) / _2231;
        float _2233 = fma(_2027, cbSceneParam._m0[61u].w, fma(_2023, cbSceneParam._m0[61u].z, fma(_2019, cbSceneParam._m0[61u].y, _2015 * cbSceneParam._m0[61u].x))) / _2231;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2232 >= cbSceneParam._m0[64u].x) && (_2233 >= cbSceneParam._m0[64u].y)) && (_2232 <= cbSceneParam._m0[64u].z)) && (_2233 <= cbSceneParam._m0[64u].w))
        {
            float _2372 = fma(_2027, cbSceneParam._m0[62u].w, fma(_2023, cbSceneParam._m0[62u].z, fma(_2019, cbSceneParam._m0[62u].y, _2015 * cbSceneParam._m0[62u].x))) / _2231;
            float _2376 = isnan(cbSceneParam._m0[41u].w) ? _2372 : (isnan(_2372) ? cbSceneParam._m0[41u].w : max(_2372, cbSceneParam._m0[41u].w));
            float _2419 = (cbSceneParam._m0[33u].x - sqrt(((_2029 * _2029) + (_2028 * _2028)) + (_2030 * _2030))) * cbSceneParam._m0[33u].y;
            float _4596 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
            float _2426 = (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2232, cbSceneParam._m0[33u].w + _2233), _2376), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2232, _2233 - cbSceneParam._m0[33u].z), _2376), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2232 - cbSceneParam._m0[33u].z, _2233 - cbSceneParam._m0[33u].w), _2376), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2232 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2233), _2376), 0.0)).x), vec4(0.25)));
            float _2430 = 1.0 - (_2426 * cbSceneParam._m0[34u].x);
            float _2431 = 1.0 - (_2426 * cbSceneParam._m0[34u].y);
            float _2432 = 1.0 - (_2426 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2432) ? _2179 : (isnan(_2179) ? _2432 : min(_2179, _2432));
            frontier_phi_37_36_ladder_1 = isnan(_2431) ? _2178 : (isnan(_2178) ? _2431 : min(_2178, _2431));
            frontier_phi_37_36_ladder_2 = isnan(_2430) ? _2177 : (isnan(_2177) ? _2430 : min(_2177, _2430));
        }
        else
        {
            frontier_phi_37_36_ladder = _2179;
            frontier_phi_37_36_ladder_1 = _2178;
            frontier_phi_37_36_ladder_2 = _2177;
        }
        _2243 = frontier_phi_37_36_ladder_2;
        _2245 = frontier_phi_37_36_ladder_1;
        _2247 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2243 = _2177;
        _2245 = _2178;
        _2247 = _2179;
    }
    uvec4 _2252 = floatBitsToUint(cbInstanceData._m0[_902 + 5u]);
    uint _2254 = _2252.x * 14u;
    uint _2255 = _2254 + 13u;
    float _2262 = _927 + (-1.0);
    float _2267 = (cbLight._m0[_2255].x * _2262) + 1.0;
    float _2268 = (cbLight._m0[_2255].y * _2262) + 1.0;
    float _2269 = (cbLight._m0[_2255].z * _2262) + 1.0;
    float _2270 = (cbLight._m0[_2255].w * _2262) + 1.0;
    uint _2271 = _2254 + 5u;
    float _2277 = isnan(1.0) ? _2268 : (isnan(_2268) ? 1.0 : min(_2268, 1.0));
    uint _2281 = _2254 + 4u;
    float _2291 = isnan(1.0) ? _2267 : (isnan(_2267) ? 1.0 : min(_2267, 1.0));
    uint _2295 = _2254 | 1u;
    float _2306 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_765, _766, _767));
    float _2309 = dot(vec3(cbLight._m0[_2295].xyz), vec3(_765, _766, _767));
    float _4632 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0));
    float _4643 = isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0));
    float _2314 = (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0))) * 0.3183098733425140380859375;
    float _2316 = (isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0))) * 0.3183098733425140380859375;
    float _2323 = ((cbLight._m0[_2271].x * _2277) * _2316) + (((cbLight._m0[_2281].x * _2243) * _2291) * _2314);
    float _2324 = ((_2277 * cbLight._m0[_2271].y) * _2316) + (((cbLight._m0[_2281].y * _2245) * _2291) * _2314);
    float _2325 = ((_2277 * cbLight._m0[_2271].z) * _2316) + (((cbLight._m0[_2281].z * _2247) * _2291) * _2314);
    uvec4 _2329 = floatBitsToUint(cbLight._m0[_2254 + 12u]);
    bool _2331 = _2329.x == 0u;
    float _2433;
    float _2435;
    float _2437;
    if (_2331)
    {
        _2433 = _2323;
        _2435 = _2324;
        _2437 = _2325;
    }
    else
    {
        uint _2441 = _2254 + 6u;
        float _2457 = (dot(vec3(cbLight._m0[_2254 + 2u].xyz), vec3(_765, _766, _767)) * 0.5) + 0.5;
        float _2458 = _2457 * _2457;
        float _4654 = isnan(0.0) ? _2458 : (isnan(_2458) ? 0.0 : max(_2458, 0.0));
        float _2459 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
        float _2460 = isnan(1.0) ? _2269 : (isnan(_2269) ? 1.0 : min(_2269, 1.0));
        _2433 = (((cbLight._m0[_2441].x * 0.3183098733425140380859375) * _2459) * _2460) + _2323;
        _2435 = (((cbLight._m0[_2441].y * 0.3183098733425140380859375) * _2459) * _2460) + _2324;
        _2437 = (((cbLight._m0[_2441].z * 0.3183098733425140380859375) * _2459) * _2460) + _2325;
    }
    bool _2440 = _2329.y == 0u;
    float _2495;
    float _2497;
    float _2499;
    if (_2440)
    {
        _2495 = _2433;
        _2497 = _2435;
        _2499 = _2437;
    }
    else
    {
        uint _2657 = _2254 + 7u;
        float _2673 = (dot(vec3(cbLight._m0[_2254 + 3u].xyz), vec3(_765, _766, _767)) * 0.5) + 0.5;
        float _2674 = _2673 * _2673;
        float _4670 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
        float _2675 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _2676 = isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0));
        _2495 = (((cbLight._m0[_2657].x * 0.3183098733425140380859375) * _2675) * _2676) + _2433;
        _2497 = (((cbLight._m0[_2657].y * 0.3183098733425140380859375) * _2675) * _2676) + _2435;
        _2499 = (((cbLight._m0[_2657].z * 0.3183098733425140380859375) * _2675) * _2676) + _2437;
    }
    uint _2502 = _2254 + 8u;
    float _2515 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2254].w)) * _768) * 0.949999988079071044921875);
    float _2516 = _2515 * _2515;
    float _2517 = cbLight._m0[_2254].x + _844;
    float _2518 = cbLight._m0[_2254].y + _845;
    float _2519 = cbLight._m0[_2254].z + _846;
    float _2523 = inversesqrt(dot(vec3(_2517, _2518, _2519), vec3(_2517, _2518, _2519)));
    float _2524 = _2523 * _2517;
    float _2525 = _2523 * _2518;
    float _2526 = _2523 * _2519;
    float _2527 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2254].xyz));
    float _4686 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
    float _2530 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
    float _4697 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _2531 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
    float _2532 = dot(vec3(_765, _766, _767), vec3(_2524, _2525, _2526));
    float _4708 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
    float _2535 = isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0));
    float _2536 = dot(vec3(cbLight._m0[_2254].xyz), vec3(_2524, _2525, _2526));
    float _4719 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
    float _2540 = _2516 * _2516;
    float _2544 = ((_2535 * _2535) * (_2540 + (-1.0))) + 1.0;
    float _2555 = (exp2(log2(1.0 - (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2556 = 1.0 - _2516;
    float _2567 = (0.5 / (((_2531 * ((_2530 * _2556) + _2516)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2556) + _2516) * _2530))) * _2530;
    float _4730 = isnan(0.0) ? _2567 : (isnan(_2567) ? 0.0 : max(_2567, 0.0));
    float _2569 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * (_2540 / ((_2544 * _2544) * 3.141590118408203125));
    uint _2583 = _2254 + 9u;
    float _2594 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2295].w)) * _768) * 0.949999988079071044921875);
    float _2595 = _2594 * _2594;
    float _2596 = cbLight._m0[_2295].x + _844;
    float _2597 = cbLight._m0[_2295].y + _845;
    float _2598 = cbLight._m0[_2295].z + _846;
    float _2602 = inversesqrt(dot(vec3(_2596, _2597, _2598), vec3(_2596, _2597, _2598)));
    float _2603 = _2602 * _2596;
    float _2604 = _2602 * _2597;
    float _2605 = _2602 * _2598;
    float _2606 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2295].xyz));
    float _4741 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
    float _2609 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
    float _2610 = dot(vec3(_765, _766, _767), vec3(_2603, _2604, _2605));
    float _4752 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
    float _2613 = isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0));
    float _2614 = dot(vec3(cbLight._m0[_2295].xyz), vec3(_2603, _2604, _2605));
    float _4763 = isnan(0.0) ? _2614 : (isnan(_2614) ? 0.0 : max(_2614, 0.0));
    float _2618 = _2595 * _2595;
    float _2622 = ((_2613 * _2613) * (_2618 + (-1.0))) + 1.0;
    float _2631 = (exp2(log2(1.0 - (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2632 = 1.0 - _2595;
    float _2642 = (0.5 / (((_2531 * ((_2609 * _2632) + _2595)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2632) + _2595) * _2609))) * _2609;
    float _4774 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
    float _2644 = (isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0))) * (_2618 / ((_2622 * _2622) * 3.141590118408203125));
    float _2654 = (((_2631 * cbLight._m0[_2583].x) * _2644) * _2277) + ((((cbLight._m0[_2502].x * _2243) * _2555) * _2569) * _2291);
    float _2655 = (((_2631 * cbLight._m0[_2583].y) * _2644) * _2277) + ((((cbLight._m0[_2502].y * _2245) * _2555) * _2569) * _2291);
    float _2656 = (((_2631 * cbLight._m0[_2583].z) * _2644) * _2277) + ((((cbLight._m0[_2502].z * _2247) * _2555) * _2569) * _2291);
    float _2712;
    float _2714;
    float _2716;
    if (_2331)
    {
        _2712 = _2654;
        _2714 = _2655;
        _2716 = _2656;
    }
    else
    {
        uint _2718 = _2254 + 2u;
        uint _2722 = _2254 + 10u;
        float _2736 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2718].w)) * _768) * 0.949999988079071044921875);
        float _2737 = _2736 * _2736;
        float _2738 = cbLight._m0[_2718].x + _844;
        float _2739 = cbLight._m0[_2718].y + _845;
        float _2740 = cbLight._m0[_2718].z + _846;
        float _2744 = inversesqrt(dot(vec3(_2738, _2739, _2740), vec3(_2738, _2739, _2740)));
        float _2745 = _2744 * _2738;
        float _2746 = _2744 * _2739;
        float _2747 = _2744 * _2740;
        float _2748 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2718].xyz));
        float _4785 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2751 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
        float _2752 = dot(vec3(_765, _766, _767), vec3(_2745, _2746, _2747));
        float _4796 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2755 = isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0));
        float _2756 = dot(vec3(cbLight._m0[_2718].xyz), vec3(_2745, _2746, _2747));
        float _4807 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
        float _2760 = _2737 * _2737;
        float _2764 = ((_2755 * _2755) * (_2760 + (-1.0))) + 1.0;
        float _2773 = (exp2(log2(1.0 - (isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2774 = 1.0 - _2737;
        float _2784 = (0.5 / (((_2531 * ((_2751 * _2774) + _2737)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2774) + _2737) * _2751))) * _2751;
        float _4818 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
        float _2786 = (isnan(1.0) ? _4818 : (isnan(_4818) ? 1.0 : min(_4818, 1.0))) * (_2760 / ((_2764 * _2764) * 3.141590118408203125));
        float _2787 = isnan(1.0) ? _2269 : (isnan(_2269) ? 1.0 : min(_2269, 1.0));
        _2712 = (((_2773 * cbLight._m0[_2722].x) * _2786) * _2787) + _2654;
        _2714 = (((_2773 * cbLight._m0[_2722].y) * _2786) * _2787) + _2655;
        _2716 = (((_2773 * cbLight._m0[_2722].z) * _2786) * _2787) + _2656;
    }
    float _2818;
    float _2820;
    float _2822;
    if (_2440)
    {
        _2818 = _2712;
        _2820 = _2714;
        _2822 = _2716;
    }
    else
    {
        uint _2829 = _2254 + 3u;
        uint _2833 = _2254 + 11u;
        float _2847 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2829].w)) * _768) * 0.949999988079071044921875);
        float _2848 = _2847 * _2847;
        float _2849 = cbLight._m0[_2829].x + _844;
        float _2850 = cbLight._m0[_2829].y + _845;
        float _2851 = cbLight._m0[_2829].z + _846;
        float _2855 = inversesqrt(dot(vec3(_2849, _2850, _2851), vec3(_2849, _2850, _2851)));
        float _2856 = _2855 * _2849;
        float _2857 = _2855 * _2850;
        float _2858 = _2855 * _2851;
        float _2859 = dot(vec3(_765, _766, _767), vec3(cbLight._m0[_2829].xyz));
        float _4834 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2862 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
        float _2863 = dot(vec3(_765, _766, _767), vec3(_2856, _2857, _2858));
        float _4845 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2866 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
        float _2867 = dot(vec3(cbLight._m0[_2829].xyz), vec3(_2856, _2857, _2858));
        float _4856 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
        float _2871 = _2848 * _2848;
        float _2875 = ((_2866 * _2866) * (_2871 + (-1.0))) + 1.0;
        float _2884 = (exp2(log2(1.0 - (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2885 = 1.0 - _2848;
        float _2895 = (0.5 / (((_2531 * ((_2862 * _2885) + _2848)) + 9.9999999392252902907785028219223e-09) + (((_2531 * _2885) + _2848) * _2862))) * _2862;
        float _4867 = isnan(0.0) ? _2895 : (isnan(_2895) ? 0.0 : max(_2895, 0.0));
        float _2897 = (isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0))) * (_2871 / ((_2875 * _2875) * 3.141590118408203125));
        float _2898 = isnan(1.0) ? _2270 : (isnan(_2270) ? 1.0 : min(_2270, 1.0));
        _2818 = (((_2884 * cbLight._m0[_2833].x) * _2897) * _2898) + _2712;
        _2820 = (((_2884 * cbLight._m0[_2833].y) * _2897) * _2898) + _2714;
        _2822 = (((_2884 * cbLight._m0[_2833].z) * _2897) * _2898) + _2716;
    }
    float _2964;
    float _2966;
    float _2968;
    float _2970;
    float _2972;
    float _2974;
    if (_2252.y == 0u)
    {
        uvec4 _2919 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2920 = _2919.x;
        uint _2931 = uint((float(_2919.y) * floor(float(uint(cbSceneParam._m0[85u].y * _865) / _2920))) + floor(float(uint(cbSceneParam._m0[85u].x * _864) / _2920)));
        float _2941 = (log2(_2030 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2942 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
        uint _2945 = uint(isnan(14.0) ? _2942 : (isnan(_2942) ? 14.0 : min(_2942, 14.0)));
        uvec4 _2950 = texelFetch(g_lightClusterGridBuffer, int(((_2945 << 2u) + (_2931 << 6u)) >> 2u));
        uint _2951 = _2950.x;
        uint _2952 = _2919.z;
        float _3076;
        float _3078;
        float _3080;
        float _3082;
        float _3084;
        float _3086;
        if (((((1u << ((_2952 >> 4u) & 15u)) + 4294967295u) & _2951) == 0u) || ((_2952 & 240u) == 0u))
        {
            _3076 = 0.0;
            _3078 = 0.0;
            _3080 = 0.0;
            _3082 = 0.0;
            _3084 = 0.0;
            _3086 = 0.0;
        }
        else
        {
            float _3077;
            float _3079;
            float _3081;
            float _3083;
            float _3085;
            float _3087;
            float _3237 = 0.0;
            float _3238 = 0.0;
            float _3239 = 0.0;
            float _3240 = 0.0;
            float _3241 = 0.0;
            float _3242 = 0.0;
            uint _3243 = 0u;
            uint _3252;
            bool _3253;
            for (;;)
            {
                _3252 = texelFetch(g_lightClassification, int((((_2945 << 5u) + (_2931 << 9u)) + (_3243 << 2u)) >> 2u)).x;
                _3253 = _3252 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3253)
                {
                    frontier_phi_71_pred = _3242;
                    frontier_phi_71_pred_1 = _3241;
                    frontier_phi_71_pred_2 = _3240;
                    frontier_phi_71_pred_3 = _3239;
                    frontier_phi_71_pred_4 = _3238;
                    frontier_phi_71_pred_5 = _3237;
                }
                else
                {
                    float _3382;
                    float _3383;
                    float _3384;
                    float _3385;
                    float _3386;
                    float _3387;
                    uint _3388;
                    _3382 = _3237;
                    _3383 = _3238;
                    _3384 = _3239;
                    _3385 = _3240;
                    _3386 = _3241;
                    _3387 = _3242;
                    _3388 = _3252;
                    float _3309;
                    float _3310;
                    float _3311;
                    float _3312;
                    float _3313;
                    float _3314;
                    for (;;)
                    {
                        uint _3392 = uint(findLSB(_3388)) + (_3243 << 5u);
                        uint _3389 = (_3388 + 4294967295u) & _3388;
                        uint _3394 = _3392 * 48u;
                        vec4 _3408 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3394)).x, texelFetch(g_PointLightRenderingBuffer, int(_3394 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3394 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3394 + 3u)).x));
                        uint _3414 = (_3392 * 48u) + 4u;
                        vec4 _3427 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3414)).x, texelFetch(g_PointLightRenderingBuffer, int(_3414 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3414 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3414 + 3u)).x));
                        uint _3433 = (_3392 * 48u) + 8u;
                        vec3 _3444 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3433)).x, texelFetch(g_PointLightRenderingBuffer, int(_3433 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3433 + 2u)).x));
                        float _3448 = _3408.x - _2028;
                        float _3449 = _3408.y - _2029;
                        float _3450 = _3408.z - _2030;
                        float _3451 = dot(vec3(_3448, _3449, _3450), vec3(_3448, _3449, _3450));
                        float _3454 = inversesqrt(_3451);
                        float _3455 = _3454 * _3448;
                        float _3456 = _3454 * _3449;
                        float _3457 = _3454 * _3450;
                        float _3458 = dot(vec3(_883, _886, _889), vec3(_3455, _3456, _3457));
                        float _3463 = 1.0 - (_3451 * _3408.w);
                        float _4893 = isnan(0.0) ? _3463 : (isnan(_3463) ? 0.0 : max(_3463, 0.0));
                        float _3464 = isnan(1.0) ? _4893 : (isnan(_4893) ? 1.0 : min(_4893, 1.0));
                        float _3465 = sqrt(_3451) * _3427.w;
                        float _3468 = 1.39999997615814208984375 / (_3465 + 1.39999997615814208984375);
                        float _3469 = _3468 * _3468;
                        float _3472 = ((1.0 - _3469) * _3458) + _3469;
                        float _3475 = _3465 * _3465;
                        float _3479 = ((isnan(0.0) ? _3472 : (isnan(_3472) ? 0.0 : max(_3472, 0.0))) * _3464) / ((_3475 * 0.699999988079071044921875) + 1.0);
                        float _3483 = (-0.0) - _2028;
                        float _3484 = (-0.0) - _2029;
                        float _3485 = (-0.0) - _2030;
                        float _3489 = inversesqrt(dot(vec3(_3483, _3484, _3485), vec3(_3483, _3484, _3485)));
                        float _3490 = _3489 * _3483;
                        float _3491 = _3489 * _3484;
                        float _3492 = _3489 * _3485;
                        float _3499 = exp2(log2(1.0 / ((_3475 * 3.5) + 5.0)) * 0.25);
                        float _3500 = 1.0 - _943;
                        float _3507 = sqrt(1.0 - ((1.0 - (_3500 * _3500)) * (1.0 - (_3499 * _3499))));
                        float _3508 = _3507 * _3507;
                        float _3509 = _3508 * _3508;
                        float _3510 = _3490 + _3455;
                        float _3511 = _3491 + _3456;
                        float _3512 = _3492 + _3457;
                        float _3516 = inversesqrt(dot(vec3(_3510, _3511, _3512), vec3(_3510, _3511, _3512)));
                        float _3520 = dot(vec3(_883, _886, _889), vec3(_3490, _3491, _3492));
                        float _4909 = isnan(0.0) ? _3520 : (isnan(_3520) ? 0.0 : max(_3520, 0.0));
                        float _3523 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                        float _3524 = dot(vec3(_883, _886, _889), vec3(_3516 * _3510, _3516 * _3511, _3516 * _3512));
                        float _4920 = isnan(0.0) ? _3524 : (isnan(_3524) ? 0.0 : max(_3524, 0.0));
                        float _3527 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
                        float _3531 = ((_3527 * _3527) * (_3509 + (-1.0))) + 1.0;
                        float _3532 = _3468 * _3508;
                        float _3533 = _3532 * _3532;
                        float _3536 = ((1.0 - _3533) * _3458) + _3533;
                        float _4931 = isnan(0.0) ? _3536 : (isnan(_3536) ? 0.0 : max(_3536, 0.0));
                        float _3537 = isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0));
                        float _3538 = 1.0 - _3508;
                        float _3548 = (0.5 / (((_3537 * ((_3523 * _3538) + _3508)) + 9.9999999392252902907785028219223e-09) + (((_3537 * _3538) + _3508) * _3523))) * _3537;
                        float _4942 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                        float _3559 = (((_3509 * 3.1415927410125732421875) * (isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0)))) / ((_3531 * _3531) * ((_3475 * 2.1991131305694580078125) + 3.141590118408203125))) * _3464;
                        _3312 = (_3479 * _3427.x) + _3385;
                        _3313 = (_3479 * _3427.y) + _3386;
                        _3314 = (_3479 * _3427.z) + _3387;
                        _3309 = (_3559 * _3444.x) + _3382;
                        _3310 = (_3559 * _3444.y) + _3383;
                        _3311 = (_3559 * _3444.z) + _3384;
                        if (_3389 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3382 = _3309;
                            _3383 = _3310;
                            _3384 = _3311;
                            _3385 = _3312;
                            _3386 = _3313;
                            _3387 = _3314;
                            _3388 = _3389;
                        }
                    }
                    frontier_phi_71_pred = _3314;
                    frontier_phi_71_pred_1 = _3313;
                    frontier_phi_71_pred_2 = _3312;
                    frontier_phi_71_pred_3 = _3311;
                    frontier_phi_71_pred_4 = _3310;
                    frontier_phi_71_pred_5 = _3309;
                }
                _3087 = frontier_phi_71_pred;
                _3085 = frontier_phi_71_pred_1;
                _3083 = frontier_phi_71_pred_2;
                _3081 = frontier_phi_71_pred_3;
                _3079 = frontier_phi_71_pred_4;
                _3077 = frontier_phi_71_pred_5;
                uint _3244 = _3243 + 1u;
                if (_3244 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3237 = _3077;
                    _3238 = _3079;
                    _3239 = _3081;
                    _3240 = _3083;
                    _3241 = _3085;
                    _3242 = _3087;
                    _3243 = _3244;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3076 = _3077;
            _3078 = _3079;
            _3080 = _3081;
            _3082 = _3083;
            _3084 = _3085;
            _3086 = _3087;
        }
        uvec4 _3090 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3091 = _3090.z;
        uint _3093 = (_3091 >> 8u) & 15u;
        float _3205;
        float _3207;
        float _3209;
        float _3211;
        float _3213;
        float _3215;
        if (((4294967295u << _3093) & _2951) == 0u)
        {
            _3205 = _3076;
            _3207 = _3078;
            _3209 = _3080;
            _3211 = _3082;
            _3213 = _3084;
            _3215 = _3086;
        }
        else
        {
            float _3230 = inversesqrt(dot(vec3(_2028, _2029, _2030), vec3(_2028, _2029, _2030)));
            float _3231 = _3230 * _2028;
            float _3232 = _3230 * _2029;
            float _3233 = _3230 * _2030;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3093 < ((_3091 >> 12u) & 15u))
            {
                float _3206;
                float _3208;
                float _3210;
                float _3212;
                float _3214;
                float _3216;
                float _3365 = _3076;
                float _3366 = _3078;
                float _3367 = _3080;
                float _3368 = _3082;
                float _3369 = _3084;
                float _3370 = _3086;
                uint _3371 = _3093;
                uint _3380;
                bool _3381;
                for (;;)
                {
                    _3380 = texelFetch(g_lightClassification, int((((_2945 << 5u) + (_2931 << 9u)) + (_3371 << 2u)) >> 2u)).x;
                    _3381 = _3380 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3381)
                    {
                        frontier_phi_82_pred = _3370;
                        frontier_phi_82_pred_1 = _3369;
                        frontier_phi_82_pred_2 = _3368;
                        frontier_phi_82_pred_3 = _3367;
                        frontier_phi_82_pred_4 = _3366;
                        frontier_phi_82_pred_5 = _3365;
                    }
                    else
                    {
                        float _3573;
                        float _3574;
                        float _3575;
                        float _3576;
                        float _3577;
                        float _3578;
                        float _3867;
                        float _3868;
                        float _3869;
                        float _3870;
                        float _3871;
                        float _3872;
                        float _3586 = _3365;
                        float _3587 = _3366;
                        float _3588 = _3367;
                        float _3589 = _3368;
                        float _3590 = _3369;
                        float _3591 = _3370;
                        uint _3592 = _3380;
                        uint _3593;
                        vec4 _3618;
                        float _3619;
                        vec4 _3634;
                        vec3 _3646;
                        vec4 _3661;
                        vec4 _3676;
                        float _3723;
                        bool _3724;
                        for (;;)
                        {
                            uint _3603 = ((_3371 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3592));
                            _3593 = (_3592 + 4294967295u) & _3592;
                            uint _3605 = _3603 * 40u;
                            _3618 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3605)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 3u)).x));
                            _3619 = _3618.w;
                            uint _3621 = (_3603 * 40u) + 4u;
                            _3634 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3621)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3621 + 3u)).x));
                            uint _3636 = (_3603 * 40u) + 8u;
                            _3646 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x));
                            uint _3648 = (_3603 * 40u) + 16u;
                            _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            uint _3663 = (_3603 * 40u) + 20u;
                            _3676 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3663)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 3u)).x));
                            uint _3679 = (_3603 * 40u) + 24u;
                            vec4 _3692 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3679)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3679 + 3u)).x));
                            uint _3698 = (_3603 * 40u) + 28u;
                            vec4 _3711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 3u)).x));
                            _3723 = fma(_2030, _3711.z, fma(_2029, _3711.y, _3711.x * _2028)) + _3711.w;
                            _3724 = !((fma(_2030, _3692.z, fma(_2029, _3692.y, _3692.x * _2028)) + _3692.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3724)
                            {
                                float _3751 = _3618.x - _2028;
                                float _3752 = _3618.y - _2029;
                                float _3753 = _3618.z - _2030;
                                float _3754 = dot(vec3(_3751, _3752, _3753), vec3(_3751, _3752, _3753));
                                float _3757 = inversesqrt(_3754);
                                float _3758 = _3757 * _3751;
                                float _3759 = _3757 * _3752;
                                float _3760 = _3757 * _3753;
                                float _3764 = 1.0 - (_3754 / (_3619 * _3619));
                                float _4953 = isnan(0.0) ? _3764 : (isnan(_3764) ? 0.0 : max(_3764, 0.0));
                                float _3765 = isnan(1.0) ? _4953 : (isnan(_4953) ? 1.0 : min(_4953, 1.0));
                                float _3769 = sqrt(_3754) * _3634.w;
                                float _3771 = 1.39999997615814208984375 / (_3769 + 1.39999997615814208984375);
                                float _3772 = _3771 * _3771;
                                float _3775 = ((1.0 - _3772) * dot(vec3(_3758, _3759, _3760), vec3(_883, _886, _889))) + _3772;
                                float _3778 = _3769 * _3769;
                                float _3782 = (fma(_2030, _3661.z, fma(_2029, _3661.y, _3661.x * _2028)) + _3661.w) / _3723;
                                float _3783 = (fma(_2030, _3676.z, fma(_2029, _3676.y, _3676.x * _2028)) + _3676.w) / _3723;
                                float _3787 = 1.0 - dot(vec2(_3782, _3783), vec2(_3782, _3783));
                                float _4969 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3788 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                                float _3789 = _3788 * (((isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0))) * _3765) / ((_3778 * 0.699999988079071044921875) + 1.0));
                                float _3801 = exp2(log2(1.0 / ((_3778 * 3.5) + 5.0)) * 0.25);
                                float _3802 = 1.0 - _943;
                                float _3809 = sqrt(1.0 - ((1.0 - (_3802 * _3802)) * (1.0 - (_3801 * _3801))));
                                float _3810 = _3809 * _3809;
                                float _3811 = _3810 * _3810;
                                float _3812 = _3758 - _3231;
                                float _3813 = _3759 - _3232;
                                float _3814 = _3760 - _3233;
                                float _3818 = inversesqrt(dot(vec3(_3812, _3813, _3814), vec3(_3812, _3813, _3814)));
                                float _3822 = dot(vec3(_883, _886, _889), vec3((-0.0) - _3231, (-0.0) - _3232, (-0.0) - _3233));
                                float _4980 = isnan(0.0) ? _3822 : (isnan(_3822) ? 0.0 : max(_3822, 0.0));
                                float _3825 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                                float _3826 = dot(vec3(_883, _886, _889), vec3(_3818 * _3812, _3818 * _3813, _3818 * _3814));
                                float _4991 = isnan(0.0) ? _3826 : (isnan(_3826) ? 0.0 : max(_3826, 0.0));
                                float _3829 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                                float _3833 = ((_3829 * _3829) * (_3811 + (-1.0))) + 1.0;
                                float _3834 = _3771 * _3810;
                                float _3835 = _3834 * _3834;
                                float _3841 = ((1.0 - _3835) * dot(vec3(_883, _886, _889), vec3(_3758, _3759, _3760))) + _3835;
                                float _5002 = isnan(0.0) ? _3841 : (isnan(_3841) ? 0.0 : max(_3841, 0.0));
                                float _3842 = isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0));
                                float _3843 = 1.0 - _3810;
                                float _3853 = (0.5 / (((_3842 * ((_3825 * _3843) + _3810)) + 9.9999999392252902907785028219223e-09) + (((_3842 * _3843) + _3810) * _3825))) * _3842;
                                float _5013 = isnan(0.0) ? _3853 : (isnan(_3853) ? 0.0 : max(_3853, 0.0));
                                float _3863 = (_3788 * _3765) * (((_3811 * 3.1415927410125732421875) * (isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0)))) / ((_3833 * _3833) * ((_3778 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3789 * _3634.z;
                                frontier_phi_88_pred_1 = _3789 * _3634.y;
                                frontier_phi_88_pred_2 = _3789 * _3634.x;
                                frontier_phi_88_pred_3 = _3863 * _3646.z;
                                frontier_phi_88_pred_4 = _3863 * _3646.y;
                                frontier_phi_88_pred_5 = _3863 * _3646.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3872 = frontier_phi_88_pred;
                            _3871 = frontier_phi_88_pred_1;
                            _3870 = frontier_phi_88_pred_2;
                            _3869 = frontier_phi_88_pred_3;
                            _3868 = frontier_phi_88_pred_4;
                            _3867 = frontier_phi_88_pred_5;
                            _3576 = _3870 + _3589;
                            _3577 = _3871 + _3590;
                            _3578 = _3872 + _3591;
                            _3573 = _3867 + _3586;
                            _3574 = _3868 + _3587;
                            _3575 = _3869 + _3588;
                            if (_3593 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3586 = _3573;
                                _3587 = _3574;
                                _3588 = _3575;
                                _3589 = _3576;
                                _3590 = _3577;
                                _3591 = _3578;
                                _3592 = _3593;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3578;
                        frontier_phi_82_pred_1 = _3577;
                        frontier_phi_82_pred_2 = _3576;
                        frontier_phi_82_pred_3 = _3575;
                        frontier_phi_82_pred_4 = _3574;
                        frontier_phi_82_pred_5 = _3573;
                    }
                    _3216 = frontier_phi_82_pred;
                    _3214 = frontier_phi_82_pred_1;
                    _3212 = frontier_phi_82_pred_2;
                    _3210 = frontier_phi_82_pred_3;
                    _3208 = frontier_phi_82_pred_4;
                    _3206 = frontier_phi_82_pred_5;
                    uint _3372 = _3371 + 1u;
                    if (_3372 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3365 = _3206;
                        _3366 = _3208;
                        _3367 = _3210;
                        _3368 = _3212;
                        _3369 = _3214;
                        _3370 = _3216;
                        _3371 = _3372;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3212;
                frontier_phi_63_64_ladder_1 = _3216;
                frontier_phi_63_64_ladder_2 = _3214;
                frontier_phi_63_64_ladder_3 = _3210;
                frontier_phi_63_64_ladder_4 = _3208;
                frontier_phi_63_64_ladder_5 = _3206;
            }
            else
            {
                frontier_phi_63_64_ladder = _3082;
                frontier_phi_63_64_ladder_1 = _3086;
                frontier_phi_63_64_ladder_2 = _3084;
                frontier_phi_63_64_ladder_3 = _3080;
                frontier_phi_63_64_ladder_4 = _3078;
                frontier_phi_63_64_ladder_5 = _3076;
            }
            _3205 = frontier_phi_63_64_ladder_5;
            _3207 = frontier_phi_63_64_ladder_4;
            _3209 = frontier_phi_63_64_ladder_3;
            _3211 = frontier_phi_63_64_ladder;
            _3213 = frontier_phi_63_64_ladder_2;
            _3215 = frontier_phi_63_64_ladder_1;
        }
        float _3220 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
        _2964 = (_3220 * _3211) + _2495;
        _2966 = (_3220 * _3213) + _2497;
        _2968 = (_3220 * _3215) + _2499;
        _2970 = ((_3205 * 0.039999999105930328369140625) * _3220) + _2818;
        _2972 = ((_3207 * 0.039999999105930328369140625) * _3220) + _2820;
        _2974 = ((_3209 * 0.039999999105930328369140625) * _3220) + _2822;
    }
    else
    {
        _2964 = _2495;
        _2966 = _2497;
        _2968 = _2499;
        _2970 = _2818;
        _2972 = _2820;
        _2974 = _2822;
    }
    uint _2980 = _903 + uint(cbMatDynParam._m0[0u].w);
    float _2986 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2992 = (((((_2986 * cbMtdParam._m0[14u].x) * _625.x) * _648) * _727) * (((1.0 - _701) * cbMtdParam._m0[20u].w) + _701)) * cbInstanceData._m0[_2980].x;
    float _2998 = (((((_2986 * cbMtdParam._m0[14u].y) * _625.y) * _648) * _727) * (((1.0 - _703) * cbMtdParam._m0[20u].w) + _703)) * cbInstanceData._m0[_2980].y;
    float _3004 = (((((_2986 * cbMtdParam._m0[14u].z) * _625.z) * _648) * _727) * (((1.0 - _705) * cbMtdParam._m0[20u].w) + _705)) * cbInstanceData._m0[_2980].z;
    float _5029 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
    float _5040 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _5051 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _3021 = (((isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0))) * (_2964 + ((isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0))) * _927))) + ((_2970 + ((isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0))) * _1764)) * cbPerFrame._m0[3u].x)) + _2992;
    float _3023 = (_2998 + ((_2972 + ((isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0))) * _1764)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0))) * (_2966 + ((isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0))) * _927)));
    float _3025 = (_3004 + ((_2974 + ((isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))) * _1764)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0))) * (_2968 + ((isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))) * _927)));
    float _3026 = isnan(0.0) ? _3021 : (isnan(_3021) ? 0.0 : max(_3021, 0.0));
    float _3027 = isnan(0.0) ? _3023 : (isnan(_3023) ? 0.0 : max(_3023, 0.0));
    float _3028 = isnan(0.0) ? _3025 : (isnan(_3025) ? 0.0 : max(_3025, 0.0));
    float _3034 = cbMtdParam._m0[2u].x * _2992;
    float _3035 = cbMtdParam._m0[2u].y * _2998;
    float _3036 = cbMtdParam._m0[2u].z * _3004;
    float _5077 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3038 = isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0));
    uint _3039 = _902 + 6u;
    float _3047 = _864 / cbSceneParam._m0[86u].x;
    float _3048 = _865 / cbSceneParam._m0[86u].y;
    vec4 _3062 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3047, _3048, (log2((isnan(cbSceneParam._m0[77u].w) ? _787 : (isnan(_787) ? cbSceneParam._m0[77u].w : min(_787, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3064 = _3062.x;
    float _3065 = _3062.y;
    float _3066 = _3062.z;
    float _3067 = _3062.w;
    float _3138;
    float _3140;
    float _3142;
    float _3144;
    if (_787 > cbSceneParam._m0[78u].w)
    {
        float _3101 = isnan(_787) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _787 : min(cbSceneParam._m0[80u].w, _787));
        float _3102 = _3101 / _787;
        float _3113 = _3102 * _837;
        float _3114 = _838 * _3102;
        float _3115 = (-0.0) - _3114;
        float _3116 = _3102 * _839;
        float _3118 = (cbSceneParam._m0[77u].w * _3115) / _3101;
        float _3119 = _3118 + cbSceneParam._m0[79u].w;
        float _3120 = cbSceneParam._m0[79u].w - _3114;
        float _3126 = sqrt(((_3113 * _3113) + (_3114 * _3114)) + (_3116 * _3116));
        float _3129 = (1.0 - (cbSceneParam._m0[77u].w / _3101)) * _3126;
        float _3134 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3136 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3322;
        if (abs((_3115 - _3118) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3322 = ((((_3119 > 0.0) ? exp2(_3134 * _3119) : (2.0 - exp2(_3136 * _3119))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3129;
        }
        else
        {
            float _3266 = 1.0 / cbSceneParam._m0[80u].x;
            float _3267 = isnan(_3120) ? _3119 : (isnan(_3119) ? _3120 : max(_3119, _3120));
            float _3268 = isnan(_3120) ? _3119 : (isnan(_3119) ? _3120 : min(_3119, _3120));
            float _3277 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : min(_3267, 0.0));
            float _3278 = isnan(0.0) ? _3268 : (isnan(_3268) ? 0.0 : min(_3268, 0.0));
            _3322 = ((abs(_3126 / _3115) * cbSceneParam._m0[80u].y) * ((((_3277 - _3278) * 2.0) - ((exp2(_3134 * (isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0)))) - exp2(_3134 * (isnan(0.0) ? _3268 : (isnan(_3268) ? 0.0 : max(_3268, 0.0))))) * _3266)) - ((exp2(_3136 * _3277) - exp2(_3136 * _3278)) * _3266))) + (_3129 * cbSceneParam._m0[80u].z);
        }
        vec4 _3324 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3047, _3048, 1.0), 0.0);
        float _3333 = exp2((_3322 * (-1.44269502162933349609375)) * (1.0 - _3324.w));
        float _3334 = log2(_3333);
        float _3350 = log2(_3067);
        _3138 = (exp2(_3350 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3334 * cbSceneParam._m0[78u].x)) * _3324.x) / cbSceneParam._m0[78u].x)) + _3064;
        _3140 = (exp2(_3350 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3334 * cbSceneParam._m0[78u].y)) * _3324.y) / cbSceneParam._m0[78u].y)) + _3065;
        _3142 = (exp2(_3350 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3334 * cbSceneParam._m0[78u].z)) * _3324.z) / cbSceneParam._m0[78u].z)) + _3066;
        _3144 = _3333 * _3067;
    }
    else
    {
        _3138 = _3064;
        _3140 = _3065;
        _3142 = _3066;
        _3144 = _3067;
    }
    bool _3360;
    vec4 _3154;
    vec4 _3176;
    float _3178;
    float _3182;
    float _3183;
    float _3184;
    float _3187;
    float _3190;
    float _3193;
    float _3194;
    bool _3204;
    for (;;)
    {
        _3154 = cbMatDynParam._m0[0u];
        float _3156 = roundEven(_3154.y);
        bool _3157 = _3156 == 3.0;
        float _3158 = log2(_3144);
        float _3162 = exp2(_3158 * cbSceneParam._m0[78u].x);
        float _3163 = exp2(_3158 * cbSceneParam._m0[78u].y);
        float _3164 = exp2(_3158 * cbSceneParam._m0[78u].z);
        float _3165 = _3162 * _3026;
        float _3166 = _3163 * _3027;
        float _3167 = _3164 * _3028;
        float _3174 = _853 + (-0.5);
        _3176 = cbMtdParam._m0[1u];
        _3178 = _3176.y * _3174;
        float _3181 = (_3156 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3182 = _3181 * (_3157 ? _3165 : (_3165 + (cbSceneParam._m0[72u].w * _3138)));
        _3183 = _3181 * (_3157 ? _3166 : (_3166 + (cbSceneParam._m0[72u].w * _3140)));
        _3184 = _3181 * (_3157 ? _3167 : (_3167 + (cbSceneParam._m0[72u].w * _3142)));
        _3187 = ((_3034 * _3038) * _3162) * _3181;
        _3190 = ((_3035 * _3038) * _3163) * _3181;
        _3193 = ((_3036 * _3038) * _3164) * _3181;
        _3194 = _3174 * 0.999000012874603271484375;
        _3204 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3204)
        {
            if ((cbInstanceData._m0[_902 + 7u].x + _3194) < 0.5)
            {
                _3360 = true;
                break;
            }
        }
        uint _3301 = _903 + uint(_3154.w);
        if ((cbInstanceData._m0[_3301].w < 1.0) && ((cbInstanceData._m0[_3301].w + _3194) < 0.5))
        {
            _3360 = true;
            break;
        }
        if ((_3178 + 1.0) < _3176.x)
        {
            _3360 = true;
            break;
        }
        _3360 = false;
        break;
    }
    float _3564;
    if (_3360)
    {
        discard_state = true;
        _3564 = 0.0;
    }
    else
    {
        _3564 = cbInstanceData._m0[_3039].w;
    }
    SV_Target.x = _3182;
    SV_Target.y = _3183;
    SV_Target.z = _3184;
    SV_Target.w = _3564;
    SV_Target_1.x = _3187;
    SV_Target_1.y = _3190;
    SV_Target_1.z = _3193;
    SV_Target_1.w = cbInstanceData._m0[_3039].w;
    discard_exit();
}


