#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1363;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _222 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _223 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _224 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _230 = inversesqrt(dot(vec3(_222, _223, _224), vec3(_222, _223, _224)));
    float _237 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _266 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _272 = _266.x * cbMtdParam._m0[10u].x;
    float _273 = _266.y * cbMtdParam._m0[10u].y;
    float _274 = _266.z * cbMtdParam._m0[10u].z;
    vec4 _293 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _312 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _339 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _349 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _312.x) * 2.0) - _339)) + 1.0;
    float _4005 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _350 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    float _357 = (_350 * ((_293.x * cbMtdParam._m0[11u].x) - _272)) + _272;
    float _358 = (_350 * ((_293.y * cbMtdParam._m0[11u].y) - _273)) + _273;
    float _359 = (_350 * ((_293.z * cbMtdParam._m0[11u].z) - _274)) + _274;
    vec4 _378 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _391 = (((((1.0 - _312.y) * 2.0) - _339) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _4016 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _392 = isnan(1.0) ? _4016 : (isnan(_4016) ? 1.0 : min(_4016, 1.0));
    float _399 = (((_378.x * cbMtdParam._m0[12u].x) - _357) * _392) + _357;
    float _400 = (_392 * ((_378.y * cbMtdParam._m0[12u].y) - _358)) + _358;
    float _401 = (_392 * ((_378.z * cbMtdParam._m0[12u].z) - _359)) + _359;
    vec4 _419 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _432 = (((((1.0 - _312.z) * 2.0) - _339) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4027 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _433 = isnan(1.0) ? _4027 : (isnan(_4027) ? 1.0 : min(_4027, 1.0));
    vec4 _461 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _469 = ((((((_419.x * cbMtdParam._m0[13u].x) - _399) * _433) + _399) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _461.x;
    float _472 = ((((_433 * ((_419.y * cbMtdParam._m0[13u].y) - _400)) + _400) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _461.y;
    float _475 = ((((_433 * ((_419.z * cbMtdParam._m0[13u].z) - _401)) + _401) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _461.z;
    vec4 _501 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    vec4 _520 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _523 = _520.x + 0.00999999977648258209228515625;
    float _530 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _523)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4038 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _4038 : (isnan(_4038) ? 1.0 : min(_4038, 1.0));
    float _538 = (_531 * ((_501.x * cbMtdParam._m0[16u].x) - _469)) + _469;
    float _539 = (_531 * ((_501.y * cbMtdParam._m0[16u].y) - _472)) + _472;
    float _540 = (_531 * ((_501.z * cbMtdParam._m0[16u].z) - _475)) + _475;
    vec4 _553 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _574 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _576 = _574.x;
    float _577 = _574.y;
    float _578 = _574.z;
    vec4 _590 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _601 = ((_590.x - _576) * _350) + _576;
    float _602 = ((_590.y - _577) * _350) + _577;
    float _603 = ((_590.z - _578) * _350) + _578;
    vec4 _616 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _627 = ((_616.x - _601) * _392) + _601;
    float _628 = ((_616.y - _602) * _392) + _602;
    float _629 = ((_616.z - _603) * _392) + _603;
    vec4 _642 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _655 = ((_642.z - _629) * _433) + _629;
    float _658 = ((((_642.x - _627) * _433) + _627) * 2.0) + (-1.0);
    float _659 = ((((_642.y - _628) * _433) + _628) * 2.0) + (-1.0);
    float _660 = dot(vec2(_658, _659), vec2(_658, _659));
    float _4049 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _665 = sqrt(1.0 - (isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0))));
    float _670 = (((_553.z - _655) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _655;
    vec4 _700 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _714 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4060 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
    float _715 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
    float _723 = (((_715 * _715) * (3.0 - (_715 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _731 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _739 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4071 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _740 = isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0));
    float _744 = (_740 * _740) * (3.0 - (_740 * 2.0));
    float _745 = _744 * cbMtdParam._m0[22u].x;
    float _746 = _744 * cbMtdParam._m0[22u].y;
    float _747 = sin(_731);
    float _748 = cos(_731);
    float _749 = TEXCOORD.z - _745;
    float _750 = TEXCOORD.w - _746;
    vec4 _770 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_745 + fma(_750, (-0.0) - _747, _749 * _748))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_750, _748, _749 * _747) + _746)) + cbTextureTilingScale._m0[2u].w));
    float _776 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _770.x;
    float _778 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _770.y;
    float _780 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _770.z;
    float _796 = (TEXCOORD_5.x - ((_523 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4082 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _797 = isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0));
    vec4 _810 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _826 = (((((_553.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _658) + (((_810.x * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _828 = (((((_553.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _659) + (((_810.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].z);
    float _831 = fma(_665, _237 * NORMAL.x, fma(_828, _244 * TANGENT.x, (_230 * _222) * _826));
    float _834 = fma(_665, _237 * NORMAL.y, fma(_828, _244 * TANGENT.y, (_230 * _223) * _826));
    float _837 = fma(_665, _237 * NORMAL.z, fma(_828, _244 * TANGENT.z, (_230 * _224) * _826));
    float _841 = inversesqrt(dot(vec3(_831, _834, _837), vec3(_831, _834, _837)));
    float _842 = _841 * _831;
    float _843 = _841 * _834;
    float _844 = _841 * _837;
    float _4093 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
    float _845 = isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0));
    float _4104 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _4115 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _4126 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _864 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _904 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _914 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _904);
    float _915 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _904);
    float _916 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _904);
    float _920 = inversesqrt(dot(vec3(_914, _915, _916), vec3(_914, _915, _916)));
    float _921 = _914 * _920;
    float _922 = _915 * _920;
    float _923 = _916 * _920;
    float _929 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _930 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _948 = fma(_844, cbSceneParam._m0[5u].z, fma(_843, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _842));
    float _951 = fma(_844, cbSceneParam._m0[6u].z, fma(_843, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _842));
    float _954 = fma(_844, cbSceneParam._m0[7u].z, fma(_843, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _842));
    uint _967 = uint(roundEven(NORMAL.w)) * 13u;
    uint _968 = _967 + 9u;
    uint _969 = _968 + uint(cbMatDynParam._m0[0u].w);
    float _975 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0)))) * cbInstanceData._m0[_969].x;
    float _976 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0)))) * cbInstanceData._m0[_969].y;
    float _977 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0)))) * cbInstanceData._m0[_969].z;
    float _4137 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _978 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _4148 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _979 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _4159 = isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0));
    float _980 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
    vec4 _989 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _929, cbSceneParam._m0[86u].y * _930));
    float _992 = _989.x * TEXCOORD_5.w;
    float _993 = dot(vec3(_842, _843, _844), vec3(_921, _922, _923));
    float _996 = _993 * 2.0;
    float _1000 = (_996 * _842) - _921;
    float _1001 = (_996 * _843) - _922;
    float _1002 = (_996 * _844) - _923;
    float _1006 = abs(dot(vec3(_921, _922, _923), vec3(_842, _843, _844)));
    float _4170 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _1008 = sqrt(_845);
    float _1020 = exp2((_1008 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1008 * 3.0));
    float _1052 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1056 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1060 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1362;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    float _1376;
    float _1377;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1087 = fma(_1060, cbModelParam._m0[26u].z, fma(_1056, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1052));
        float _1091 = fma(_1060, cbModelParam._m0[27u].z, fma(_1056, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1052));
        float _1095 = fma(_1060, cbModelParam._m0[28u].z, fma(_1056, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1052));
        float _1120 = _1052 + _842;
        float _1121 = _1056 + _843;
        float _1122 = _1060 + _844;
        float _1132 = fma(_1122, cbModelParam._m0[26u].z, fma(_1121, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1120)) - _1087;
        float _1133 = fma(_1122, cbModelParam._m0[27u].z, fma(_1121, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1120)) - _1091;
        float _1134 = fma(_1122, cbModelParam._m0[28u].z, fma(_1121, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1120)) - _1095;
        float _1138 = inversesqrt(dot(vec3(_1132, _1133, _1134), vec3(_1132, _1133, _1134)));
        float _1151 = ((_1138 * _1132) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1087 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1152 = ((_1138 * _1133) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1091 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1153 = ((_1138 * _1134) / cbModelParam._m0[34u].z) + ((((((_1095 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1156 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1163 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1170 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1177 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        float _1190 = exp2((_1156.w + (-0.5)) * 20.0) * 2.0;
        float _1191 = _1190 * (_1156.x + (-0.5));
        float _1192 = _1190 * (_1156.y + (-0.5));
        float _1193 = _1190 * (_1156.z + (-0.5));
        float _1200 = exp2((_1163.w + (-0.5)) * 20.0) * 2.0;
        float _1201 = _1200 * (_1163.x + (-0.5));
        float _1202 = _1200 * (_1163.y + (-0.5));
        float _1203 = _1200 * (_1163.z + (-0.5));
        float _1210 = exp2((_1170.w + (-0.5)) * 20.0) * 2.0;
        float _1211 = _1210 * (_1170.x + (-0.5));
        float _1212 = _1210 * (_1170.y + (-0.5));
        float _1213 = _1210 * (_1170.z + (-0.5));
        float _1220 = exp2((_1177.w + (-0.5)) * 20.0) * 2.0;
        float _1221 = _1220 * (_1177.x + (-0.5));
        float _1222 = _1220 * (_1177.y + (-0.5));
        float _1223 = _1220 * (_1177.z + (-0.5));
        float _1224 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1225 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1226 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1227 = _1191 * 0.5;
        float _1228 = _1201 * 0.5;
        float _1229 = _1211 * 0.5;
        float _1230 = dot(vec3(_1227, _1228, _1229), vec3(_1227, _1228, _1229));
        float _1235 = (_1230 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1230);
        float _1244 = (dot(vec3(_842, _843, _844), vec3(_1235 * _1227, _1235 * _1228, _1235 * _1229)) + 1.0) * 0.5;
        float _4196 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1254 = sqrt(((_1228 * _1228) + (_1227 * _1227)) + (_1229 * _1229)) / (_1224 + 9.9999997473787516355514526367188e-06);
        float _4207 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
        float _1256 = _1255 * 2.0;
        float _1260 = (1.0 - _1255) / (_1255 + 1.0);
        float _4218 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        float _1261 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
        float _1270 = ((((1.0 - _1261) * (_1256 + 2.0)) * exp2(log2(isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))) * (_1256 + 1.0))) + _1261) * _1224;
        float _1271 = _1192 * 0.5;
        float _1272 = _1202 * 0.5;
        float _1273 = _1212 * 0.5;
        float _1274 = dot(vec3(_1271, _1272, _1273), vec3(_1271, _1272, _1273));
        float _1279 = (_1274 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1274);
        float _1287 = (dot(vec3(_842, _843, _844), vec3(_1279 * _1271, _1279 * _1272, _1279 * _1273)) + 1.0) * 0.5;
        float _4229 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1296 = sqrt(((_1272 * _1272) + (_1271 * _1271)) + (_1273 * _1273)) / (_1225 + 9.9999997473787516355514526367188e-06);
        float _4240 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1297 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _1298 = _1297 * 2.0;
        float _1302 = (1.0 - _1297) / (_1297 + 1.0);
        float _4251 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1303 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
        float _1312 = ((((1.0 - _1303) * (_1298 + 2.0)) * exp2(log2(isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0))) * (_1298 + 1.0))) + _1303) * _1225;
        float _1313 = _1193 * 0.5;
        float _1314 = _1203 * 0.5;
        float _1315 = _1213 * 0.5;
        float _1316 = dot(vec3(_1313, _1314, _1315), vec3(_1313, _1314, _1315));
        float _1321 = (_1316 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1316);
        float _1329 = (dot(vec3(_842, _843, _844), vec3(_1321 * _1313, _1321 * _1314, _1321 * _1315)) + 1.0) * 0.5;
        float _4262 = isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0));
        float _1338 = sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315)) / (_1226 + 9.9999997473787516355514526367188e-06);
        float _4273 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
        float _1339 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1340 = _1339 * 2.0;
        float _1344 = (1.0 - _1339) / (_1339 + 1.0);
        float _4284 = isnan(0.0) ? _1344 : (isnan(_1344) ? 0.0 : max(_1344, 0.0));
        float _1345 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
        float _1354 = ((((1.0 - _1345) * (_1340 + 2.0)) * exp2(log2(isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0))) * (_1340 + 1.0))) + _1345) * _1226;
        _1362 = _1193;
        _1364 = _1192;
        _1365 = _1191;
        _1366 = _1203;
        _1367 = _1202;
        _1368 = _1201;
        _1369 = _1213;
        _1370 = _1212;
        _1371 = _1211;
        _1372 = _1226;
        _1373 = _1225;
        _1374 = _1224;
        _1375 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0)));
        _1376 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0)));
        _1377 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0)));
    }
    else
    {
        _1362 = _1363;
        _1364 = _1363;
        _1365 = _1363;
        _1366 = _1363;
        _1367 = _1363;
        _1368 = _1363;
        _1369 = _1363;
        _1370 = _1363;
        _1371 = _1363;
        _1372 = _1363;
        _1373 = _1363;
        _1374 = _1363;
        _1375 = 0.0;
        _1376 = 0.0;
        _1377 = 0.0;
    }
    float _1672;
    float _1673;
    float _1674;
    float _1675;
    float _1676;
    float _1677;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    float _1683;
    float _1684;
    float _1685;
    float _1686;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1403 = fma(_1060, cbModelParam._m0[30u].z, fma(_1056, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1052));
        float _1407 = fma(_1060, cbModelParam._m0[31u].z, fma(_1056, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1052));
        float _1411 = fma(_1060, cbModelParam._m0[32u].z, fma(_1056, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1052));
        float _1434 = _1052 + _842;
        float _1435 = _1056 + _843;
        float _1436 = _1060 + _844;
        float _1446 = fma(_1436, cbModelParam._m0[30u].z, fma(_1435, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1434)) - _1403;
        float _1447 = fma(_1436, cbModelParam._m0[31u].z, fma(_1435, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1434)) - _1407;
        float _1448 = fma(_1436, cbModelParam._m0[32u].z, fma(_1435, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1434)) - _1411;
        float _1452 = inversesqrt(dot(vec3(_1446, _1447, _1448), vec3(_1446, _1447, _1448)));
        float _1465 = ((_1452 * _1446) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1403 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1466 = ((_1452 * _1447) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1407 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1467 = ((_1452 * _1448) / cbModelParam._m0[35u].z) + ((((((_1411 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1469 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1476 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1483 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        vec4 _1490 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1465, _1466, _1467), 0.0);
        float _1502 = exp2((_1469.w + (-0.5)) * 20.0) * 2.0;
        float _1503 = _1502 * (_1469.x + (-0.5));
        float _1504 = _1502 * (_1469.y + (-0.5));
        float _1505 = _1502 * (_1469.z + (-0.5));
        float _1512 = exp2((_1476.w + (-0.5)) * 20.0) * 2.0;
        float _1513 = _1512 * (_1476.x + (-0.5));
        float _1514 = _1512 * (_1476.y + (-0.5));
        float _1515 = _1512 * (_1476.z + (-0.5));
        float _1522 = exp2((_1483.w + (-0.5)) * 20.0) * 2.0;
        float _1523 = _1522 * (_1483.x + (-0.5));
        float _1524 = _1522 * (_1483.y + (-0.5));
        float _1525 = _1522 * (_1483.z + (-0.5));
        float _1532 = exp2((_1490.w + (-0.5)) * 20.0) * 2.0;
        float _1533 = _1532 * (_1490.x + (-0.5));
        float _1534 = _1532 * (_1490.y + (-0.5));
        float _1535 = _1532 * (_1490.z + (-0.5));
        float _1536 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1537 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
        float _1538 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1539 = _1503 * 0.5;
        float _1540 = _1513 * 0.5;
        float _1541 = _1523 * 0.5;
        float _1542 = dot(vec3(_1539, _1540, _1541), vec3(_1539, _1540, _1541));
        float _1547 = (_1542 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1542);
        float _1555 = (dot(vec3(_842, _843, _844), vec3(_1547 * _1539, _1547 * _1540, _1547 * _1541)) + 1.0) * 0.5;
        float _4325 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1564 = sqrt(((_1540 * _1540) + (_1539 * _1539)) + (_1541 * _1541)) / (_1536 + 9.9999997473787516355514526367188e-06);
        float _4336 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        float _1565 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
        float _1566 = _1565 * 2.0;
        float _1570 = (1.0 - _1565) / (_1565 + 1.0);
        float _4347 = isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0));
        float _1571 = isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0));
        float _1580 = ((((1.0 - _1571) * (_1566 + 2.0)) * exp2(log2(isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0))) * (_1566 + 1.0))) + _1571) * _1536;
        float _1581 = _1504 * 0.5;
        float _1582 = _1514 * 0.5;
        float _1583 = _1524 * 0.5;
        float _1584 = dot(vec3(_1581, _1582, _1583), vec3(_1581, _1582, _1583));
        float _1589 = (_1584 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1584);
        float _1597 = (dot(vec3(_842, _843, _844), vec3(_1589 * _1581, _1589 * _1582, _1589 * _1583)) + 1.0) * 0.5;
        float _4358 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
        float _1606 = sqrt(((_1582 * _1582) + (_1581 * _1581)) + (_1583 * _1583)) / (_1537 + 9.9999997473787516355514526367188e-06);
        float _4369 = isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0));
        float _1607 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
        float _1608 = _1607 * 2.0;
        float _1612 = (1.0 - _1607) / (_1607 + 1.0);
        float _4380 = isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0));
        float _1613 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _1622 = ((((1.0 - _1613) * (_1608 + 2.0)) * exp2(log2(isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * (_1608 + 1.0))) + _1613) * _1537;
        float _1623 = _1505 * 0.5;
        float _1624 = _1515 * 0.5;
        float _1625 = _1525 * 0.5;
        float _1626 = dot(vec3(_1623, _1624, _1625), vec3(_1623, _1624, _1625));
        float _1631 = (_1626 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1626);
        float _1639 = (dot(vec3(_842, _843, _844), vec3(_1631 * _1623, _1631 * _1624, _1631 * _1625)) + 1.0) * 0.5;
        float _4391 = isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0));
        float _1648 = sqrt(((_1624 * _1624) + (_1623 * _1623)) + (_1625 * _1625)) / (_1538 + 9.9999997473787516355514526367188e-06);
        float _4402 = isnan(0.0) ? _1648 : (isnan(_1648) ? 0.0 : max(_1648, 0.0));
        float _1649 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1650 = _1649 * 2.0;
        float _1654 = (1.0 - _1649) / (_1649 + 1.0);
        float _4413 = isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0));
        float _1655 = isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0));
        float _1664 = ((((1.0 - _1655) * (_1650 + 2.0)) * exp2(log2(isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0))) * (_1650 + 1.0))) + _1655) * _1538;
        _1672 = _1505;
        _1673 = _1504;
        _1674 = _1503;
        _1675 = _1515;
        _1676 = _1514;
        _1677 = _1513;
        _1678 = _1525;
        _1679 = _1524;
        _1680 = _1523;
        _1681 = _1538;
        _1682 = _1537;
        _1683 = _1536;
        _1684 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0)));
        _1685 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)));
        _1686 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)));
    }
    else
    {
        _1672 = _1363;
        _1673 = _1363;
        _1674 = _1363;
        _1675 = _1363;
        _1676 = _1363;
        _1677 = _1363;
        _1678 = _1363;
        _1679 = _1363;
        _1680 = _1363;
        _1681 = _1363;
        _1682 = _1363;
        _1683 = _1363;
        _1684 = 0.0;
        _1685 = 0.0;
        _1686 = 0.0;
    }
    float _1696 = (cbModelParam._m0[1u].x * (_1684 - _1375)) + _1375;
    float _1697 = (cbModelParam._m0[1u].x * (_1685 - _1376)) + _1376;
    float _1698 = (cbModelParam._m0[1u].x * (_1686 - _1377)) + _1377;
    float _1719 = fma(_1698, cbSceneParam._m0[89u].z, fma(_1697, cbSceneParam._m0[89u].y, _1696 * cbSceneParam._m0[89u].x));
    float _1722 = fma(_1698, cbSceneParam._m0[90u].z, fma(_1697, cbSceneParam._m0[90u].y, _1696 * cbSceneParam._m0[90u].x));
    float _1725 = fma(_1698, cbSceneParam._m0[91u].z, fma(_1697, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1696));
    float _1740 = _1000 * 0.5;
    float _1741 = _1001 * 0.5;
    float _1742 = _1002 * 0.5;
    float _1743 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1674, _1677, _1680, _1683));
    float _1746 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1673, _1676, _1679, _1682));
    float _1749 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1672, _1675, _1678, _1681));
    float _1783;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1756 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1362, _1366, _1369, _1372));
        float _1760 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1364, _1367, _1370, _1373));
        float _1764 = dot(vec4(_1740, _1741, _1742, 1.0), vec4(_1365, _1368, _1371, _1374));
        float _1771 = dot(vec4(cbModelParam._m0[39u]), vec4(_1740, _1741, _1742, 1.0));
        _1783 = dot(vec3(isnan(0.0) ? _1764 : (isnan(_1764) ? 0.0 : max(_1764, 0.0)), isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0)), isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1771) ? 0.0 : (isnan(0.0) ? _1771 : max(0.0, _1771))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1783 = 1.0;
    }
    float _1794;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1785 = dot(vec4(cbModelParam._m0[40u]), vec4(_1740, _1741, _1742, 1.0));
        _1794 = dot(vec3(isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0)), isnan(0.0) ? _1746 : (isnan(_1746) ? 0.0 : max(_1746, 0.0)), isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1785) ? 0.0 : (isnan(0.0) ? _1785 : max(0.0, _1785))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1794 = 1.0;
    }
    float _1798 = (_1794 * cbModelParam._m0[1u].x) + (_1783 * (1.0 - cbModelParam._m0[1u].x));
    float _1808 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _845);
    float _1809 = isnan(_1808) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1808 : min(cbModelParam._m0[25u].z, _1808));
    float _1889;
    float _1891;
    float _1893;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1856 = fma(_1060, cbModelParam._m0[13u].z, fma(_1056, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1052)) + cbModelParam._m0[13u].w;
        float _1860 = fma(_1060, cbModelParam._m0[14u].z, fma(_1056, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1052)) + cbModelParam._m0[14u].w;
        float _1864 = fma(_1060, cbModelParam._m0[15u].z, fma(_1056, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1052)) + cbModelParam._m0[15u].w;
        float _1867 = fma(_1002, cbModelParam._m0[13u].z, fma(_1001, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1000));
        float _1870 = fma(_1002, cbModelParam._m0[14u].z, fma(_1001, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1000));
        float _1873 = fma(_1002, cbModelParam._m0[15u].z, fma(_1001, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1000));
        float _1901;
        if (_1867 > 0.0)
        {
            _1901 = abs((1.0 - _1856) / _1867);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1867 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1856 + 1.0) / _1867);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1901 = frontier_phi_14_12_ladder;
        }
        float _2070;
        if (_1870 > 0.0)
        {
            _2070 = abs((1.0 - _1860) / _1870);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1870 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1860 + 1.0) / _1870);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2070 = frontier_phi_23_19_ladder;
        }
        float _2365;
        if (_1873 > 0.0)
        {
            _2365 = abs((1.0 - _1864) / _1873);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1873 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1864 + 1.0) / _1873);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2365 = frontier_phi_35_30_ladder;
        }
        float _2367 = isnan(_2070) ? _1901 : (isnan(_1901) ? _2070 : min(_1901, _2070));
        float _2368 = isnan(_2365) ? _2367 : (isnan(_2367) ? _2365 : min(_2367, _2365));
        float _2372 = (_2368 * _1867) + _1856;
        float _2373 = (_2368 * _1870) + _1860;
        float _2374 = (_2368 * _1873) + _1864;
        float _2375 = _2368 * 9.9999997473787516355514526367188e-05;
        float _2377 = (-1.0) - _2375;
        float _2379 = _2375 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2374 > _2379) || ((_2374 < _2377) || ((_2373 > _2379) || ((_2373 < _2377) || ((_2372 < _2377) || (_2372 > _2379))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2519 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2374, cbModelParam._m0[9u].z, fma(_2373, cbModelParam._m0[9u].y, _2372 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2374, cbModelParam._m0[10u].z, fma(_2373, cbModelParam._m0[10u].y, _2372 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2374, cbModelParam._m0[11u].z, fma(_2373, cbModelParam._m0[11u].y, _2372 * cbModelParam._m0[11u].x))), _1809);
            frontier_phi_13_35_ladder = _2519.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2519.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2519.x * cbModelParam._m0[1u].y;
        }
        _1889 = frontier_phi_13_35_ladder_2;
        _1891 = frontier_phi_13_35_ladder_1;
        _1893 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1877 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1000, _1001, _1002), _1809);
        _1889 = _1877.x * cbModelParam._m0[1u].y;
        _1891 = _1877.y * cbModelParam._m0[1u].y;
        _1893 = _1877.z * cbModelParam._m0[1u].y;
    }
    float _1897 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _845);
    float _1898 = isnan(_1897) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1897 : min(cbModelParam._m0[25u].w, _1897));
    float _1987;
    float _1989;
    float _1991;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1951 = fma(_1060, cbModelParam._m0[21u].z, fma(_1056, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1052)) + cbModelParam._m0[21u].w;
        float _1955 = fma(_1060, cbModelParam._m0[22u].z, fma(_1056, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1052)) + cbModelParam._m0[22u].w;
        float _1959 = fma(_1060, cbModelParam._m0[23u].z, fma(_1056, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1052)) + cbModelParam._m0[23u].w;
        float _1962 = fma(_1002, cbModelParam._m0[21u].z, fma(_1001, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1000));
        float _1965 = fma(_1002, cbModelParam._m0[22u].z, fma(_1001, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1000));
        float _1968 = fma(_1002, cbModelParam._m0[23u].z, fma(_1001, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1000));
        float _2075;
        if (_1962 > 0.0)
        {
            _2075 = abs((1.0 - _1951) / _1962);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1962 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1951 + 1.0) / _1962);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2075 = frontier_phi_25_21_ladder;
        }
        float _2392;
        if (_1965 > 0.0)
        {
            _2392 = abs((1.0 - _1955) / _1965);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1965 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1955 + 1.0) / _1965);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2392 = frontier_phi_37_32_ladder;
        }
        float _2719;
        if (_1968 > 0.0)
        {
            _2719 = abs((1.0 - _1959) / _1968);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1968 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1959 + 1.0) / _1968);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2719 = frontier_phi_47_44_ladder;
        }
        float _2721 = isnan(_2392) ? _2075 : (isnan(_2075) ? _2392 : min(_2075, _2392));
        float _2722 = isnan(_2719) ? _2721 : (isnan(_2721) ? _2719 : min(_2721, _2719));
        float _2726 = (_2722 * _1962) + _1951;
        float _2727 = (_2722 * _1965) + _1955;
        float _2728 = (_2722 * _1968) + _1959;
        float _2729 = _2722 * 9.9999997473787516355514526367188e-05;
        float _2730 = (-1.0) - _2729;
        float _2732 = _2729 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2728 > _2732) || ((_2728 < _2730) || ((_2727 > _2732) || ((_2727 < _2730) || ((_2726 < _2730) || (_2726 > _2732))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2846 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2728, cbModelParam._m0[17u].z, fma(_2727, cbModelParam._m0[17u].y, _2726 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2728, cbModelParam._m0[18u].z, fma(_2727, cbModelParam._m0[18u].y, _2726 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2728, cbModelParam._m0[19u].z, fma(_2727, cbModelParam._m0[19u].y, _2726 * cbModelParam._m0[19u].x))), _1898);
            frontier_phi_22_47_ladder = _2846.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2846.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2846.x * cbModelParam._m0[1u].z;
        }
        _1987 = frontier_phi_22_47_ladder_2;
        _1989 = frontier_phi_22_47_ladder_1;
        _1991 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1971 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1000, _1001, _1002), _1898);
        _1987 = _1971.x * cbModelParam._m0[1u].z;
        _1989 = _1971.y * cbModelParam._m0[1u].z;
        _1991 = _1971.z * cbModelParam._m0[1u].z;
    }
    float _2003 = ((((1.0 - _1020) * ((_1008 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1020 * _1008)) * _992;
    float _2004 = _2003 * ((cbModelParam._m0[1u].w * (_1987 - _1889)) + _1889);
    float _2005 = _2003 * ((cbModelParam._m0[1u].w * (_1989 - _1891)) + _1891);
    float _2006 = _2003 * ((cbModelParam._m0[1u].w * (_1991 - _1893)) + _1893);
    float _2009 = fma(_2006, cbSceneParam._m0[89u].z, fma(_2005, cbSceneParam._m0[89u].y, _2004 * cbSceneParam._m0[89u].x));
    float _2012 = fma(_2006, cbSceneParam._m0[90u].z, fma(_2005, cbSceneParam._m0[90u].y, _2004 * cbSceneParam._m0[90u].x));
    float _2015 = fma(_2006, cbSceneParam._m0[91u].z, fma(_2005, cbSceneParam._m0[91u].y, _2004 * cbSceneParam._m0[91u].x));
    float _2049 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2053 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2057 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2061 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2062 = _2049 / _2061;
    float _2063 = _2053 / _2061;
    float _2064 = _2057 / _2061;
    float _2211;
    float _2212;
    float _2213;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2091 = ((uint(_2064 > cbSceneParam._m0[59u].y) + uint(_2064 > cbSceneParam._m0[59u].x)) + uint(_2064 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2092 = _2091 + 43u;
        uint _2100 = _2091 + 44u;
        uint _2108 = _2091 + 45u;
        uint _2116 = _2091 + 46u;
        float _2127 = fma(_2061, cbSceneParam._m0[_2092].w, fma(_2057, cbSceneParam._m0[_2092].z, fma(_2053, cbSceneParam._m0[_2092].y, _2049 * cbSceneParam._m0[_2092].x)));
        float _2131 = fma(_2061, cbSceneParam._m0[_2100].w, fma(_2057, cbSceneParam._m0[_2100].z, fma(_2053, cbSceneParam._m0[_2100].y, _2049 * cbSceneParam._m0[_2100].x)));
        float _2139 = fma(_2061, cbSceneParam._m0[_2116].w, fma(_2057, cbSceneParam._m0[_2116].z, fma(_2053, cbSceneParam._m0[_2116].y, _2049 * cbSceneParam._m0[_2116].x)));
        float _2144 = cbSceneParam._m0[33u].z * _2139;
        float _2146 = cbSceneParam._m0[33u].w * _2139;
        float _2149 = fma(_2061, cbSceneParam._m0[_2108].w, fma(_2057, cbSceneParam._m0[_2108].z, fma(_2053, cbSceneParam._m0[_2108].y, _2049 * cbSceneParam._m0[_2108].x))) / _2139;
        float _2197 = (cbSceneParam._m0[33u].x - sqrt(((_2063 * _2063) + (_2062 * _2062)) + (_2064 * _2064))) * cbSceneParam._m0[33u].y;
        float _4539 = isnan(0.0) ? _2197 : (isnan(_2197) ? 0.0 : max(_2197, 0.0));
        float _2204 = (isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2144 + _2127) / _2139, (_2146 + _2131) / _2139), _2149), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2146 + _2127) / _2139, (_2131 - _2144) / _2139), _2149), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2127 - _2144) / _2139, (_2131 - _2146) / _2139), _2149), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2127 - _2146) / _2139, (_2144 + _2131) / _2139), _2149), 0.0)).x), vec4(0.25)));
        _2211 = 1.0 - (_2204 * cbSceneParam._m0[34u].x);
        _2212 = 1.0 - (_2204 * cbSceneParam._m0[34u].y);
        _2213 = 1.0 - (_2204 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2211 = 1.0;
        _2212 = 1.0;
        _2213 = 1.0;
    }
    float _2277;
    float _2279;
    float _2281;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2265 = fma(_2061, cbSceneParam._m0[63u].w, fma(_2057, cbSceneParam._m0[63u].z, fma(_2053, cbSceneParam._m0[63u].y, _2049 * cbSceneParam._m0[63u].x)));
        float _2266 = fma(_2061, cbSceneParam._m0[60u].w, fma(_2057, cbSceneParam._m0[60u].z, fma(_2053, cbSceneParam._m0[60u].y, _2049 * cbSceneParam._m0[60u].x))) / _2265;
        float _2267 = fma(_2061, cbSceneParam._m0[61u].w, fma(_2057, cbSceneParam._m0[61u].z, fma(_2053, cbSceneParam._m0[61u].y, _2049 * cbSceneParam._m0[61u].x))) / _2265;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2266 >= cbSceneParam._m0[64u].x) && (_2267 >= cbSceneParam._m0[64u].y)) && (_2266 <= cbSceneParam._m0[64u].z)) && (_2267 <= cbSceneParam._m0[64u].w))
        {
            float _2405 = fma(_2061, cbSceneParam._m0[62u].w, fma(_2057, cbSceneParam._m0[62u].z, fma(_2053, cbSceneParam._m0[62u].y, _2049 * cbSceneParam._m0[62u].x))) / _2265;
            float _2409 = isnan(cbSceneParam._m0[41u].w) ? _2405 : (isnan(_2405) ? cbSceneParam._m0[41u].w : max(_2405, cbSceneParam._m0[41u].w));
            float _2452 = (cbSceneParam._m0[33u].x - sqrt(((_2063 * _2063) + (_2062 * _2062)) + (_2064 * _2064))) * cbSceneParam._m0[33u].y;
            float _4555 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
            float _2459 = (isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2266, cbSceneParam._m0[33u].w + _2267), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2266, _2267 - cbSceneParam._m0[33u].z), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2266 - cbSceneParam._m0[33u].z, _2267 - cbSceneParam._m0[33u].w), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2266 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2267), _2409), 0.0)).x), vec4(0.25)));
            float _2463 = 1.0 - (_2459 * cbSceneParam._m0[34u].x);
            float _2464 = 1.0 - (_2459 * cbSceneParam._m0[34u].y);
            float _2465 = 1.0 - (_2459 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2465) ? _2213 : (isnan(_2213) ? _2465 : min(_2213, _2465));
            frontier_phi_34_33_ladder_1 = isnan(_2464) ? _2212 : (isnan(_2212) ? _2464 : min(_2212, _2464));
            frontier_phi_34_33_ladder_2 = isnan(_2463) ? _2211 : (isnan(_2211) ? _2463 : min(_2211, _2463));
        }
        else
        {
            frontier_phi_34_33_ladder = _2213;
            frontier_phi_34_33_ladder_1 = _2212;
            frontier_phi_34_33_ladder_2 = _2211;
        }
        _2277 = frontier_phi_34_33_ladder_2;
        _2279 = frontier_phi_34_33_ladder_1;
        _2281 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2277 = _2211;
        _2279 = _2212;
        _2281 = _2213;
    }
    uvec4 _2286 = floatBitsToUint(cbInstanceData._m0[_967 + 5u]);
    uint _2288 = _2286.x * 14u;
    uint _2289 = _2288 + 13u;
    float _2296 = _992 + (-1.0);
    float _2301 = (cbLight._m0[_2289].x * _2296) + 1.0;
    float _2302 = (cbLight._m0[_2289].y * _2296) + 1.0;
    float _2303 = (cbLight._m0[_2289].z * _2296) + 1.0;
    float _2304 = (cbLight._m0[_2289].w * _2296) + 1.0;
    uint _2305 = _2288 + 5u;
    float _2311 = isnan(1.0) ? _2302 : (isnan(_2302) ? 1.0 : min(_2302, 1.0));
    uint _2315 = _2288 + 4u;
    float _2324 = isnan(1.0) ? _2301 : (isnan(_2301) ? 1.0 : min(_2301, 1.0));
    uint _2328 = _2288 | 1u;
    float _2339 = dot(vec3(cbLight._m0[_2288].xyz), vec3(_842, _843, _844));
    float _2342 = dot(vec3(cbLight._m0[_2328].xyz), vec3(_842, _843, _844));
    float _4591 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _4602 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
    float _2347 = (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0))) * 0.3183098733425140380859375;
    float _2349 = (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0))) * 0.3183098733425140380859375;
    float _2356 = ((cbLight._m0[_2305].x * _2311) * _2349) + (((cbLight._m0[_2315].x * _2277) * _2324) * _2347);
    float _2357 = ((_2311 * cbLight._m0[_2305].y) * _2349) + (((cbLight._m0[_2315].y * _2279) * _2324) * _2347);
    float _2358 = ((_2311 * cbLight._m0[_2305].z) * _2349) + (((cbLight._m0[_2315].z * _2281) * _2324) * _2347);
    uvec4 _2362 = floatBitsToUint(cbLight._m0[_2288 + 12u]);
    bool _2364 = _2362.x == 0u;
    float _2466;
    float _2468;
    float _2470;
    if (_2364)
    {
        _2466 = _2356;
        _2468 = _2357;
        _2470 = _2358;
    }
    else
    {
        uint _2474 = _2288 + 6u;
        float _2490 = (dot(vec3(cbLight._m0[_2288 + 2u].xyz), vec3(_842, _843, _844)) * 0.5) + 0.5;
        float _2491 = _2490 * _2490;
        float _4613 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
        float _2492 = isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0));
        float _2493 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
        _2466 = (((cbLight._m0[_2474].x * 0.3183098733425140380859375) * _2492) * _2493) + _2356;
        _2468 = (((cbLight._m0[_2474].y * 0.3183098733425140380859375) * _2492) * _2493) + _2357;
        _2470 = (((cbLight._m0[_2474].z * 0.3183098733425140380859375) * _2492) * _2493) + _2358;
    }
    bool _2473 = _2362.y == 0u;
    float _2528;
    float _2530;
    float _2532;
    if (_2473)
    {
        _2528 = _2466;
        _2530 = _2468;
        _2532 = _2470;
    }
    else
    {
        uint _2690 = _2288 + 7u;
        float _2706 = (dot(vec3(cbLight._m0[_2288 + 3u].xyz), vec3(_842, _843, _844)) * 0.5) + 0.5;
        float _2707 = _2706 * _2706;
        float _4629 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2708 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
        float _2709 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2528 = (((cbLight._m0[_2690].x * 0.3183098733425140380859375) * _2708) * _2709) + _2466;
        _2530 = (((cbLight._m0[_2690].y * 0.3183098733425140380859375) * _2708) * _2709) + _2468;
        _2532 = (((cbLight._m0[_2690].z * 0.3183098733425140380859375) * _2708) * _2709) + _2470;
    }
    uint _2535 = _2288 + 8u;
    float _2548 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2288].w)) * _845) * 0.949999988079071044921875);
    float _2549 = _2548 * _2548;
    float _2550 = cbLight._m0[_2288].x + _921;
    float _2551 = cbLight._m0[_2288].y + _922;
    float _2552 = cbLight._m0[_2288].z + _923;
    float _2556 = inversesqrt(dot(vec3(_2550, _2551, _2552), vec3(_2550, _2551, _2552)));
    float _2557 = _2556 * _2550;
    float _2558 = _2556 * _2551;
    float _2559 = _2556 * _2552;
    float _2560 = dot(vec3(_842, _843, _844), vec3(cbLight._m0[_2288].xyz));
    float _4645 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _2563 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
    float _4656 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
    float _2564 = isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0));
    float _2565 = dot(vec3(_842, _843, _844), vec3(_2557, _2558, _2559));
    float _4667 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2568 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
    float _2569 = dot(vec3(cbLight._m0[_2288].xyz), vec3(_2557, _2558, _2559));
    float _4678 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2573 = _2549 * _2549;
    float _2577 = ((_2568 * _2568) * (_2573 + (-1.0))) + 1.0;
    float _2588 = (exp2(log2(1.0 - (isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2589 = 1.0 - _2549;
    float _2600 = (0.5 / (((_2564 * ((_2563 * _2589) + _2549)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2589) + _2549) * _2563))) * _2563;
    float _4689 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
    float _2602 = (isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0))) * (_2573 / ((_2577 * _2577) * 3.141590118408203125));
    uint _2616 = _2288 + 9u;
    float _2627 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2328].w)) * _845) * 0.949999988079071044921875);
    float _2628 = _2627 * _2627;
    float _2629 = cbLight._m0[_2328].x + _921;
    float _2630 = cbLight._m0[_2328].y + _922;
    float _2631 = cbLight._m0[_2328].z + _923;
    float _2635 = inversesqrt(dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631)));
    float _2636 = _2635 * _2629;
    float _2637 = _2635 * _2630;
    float _2638 = _2635 * _2631;
    float _2639 = dot(vec3(_842, _843, _844), vec3(cbLight._m0[_2328].xyz));
    float _4700 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2642 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
    float _2643 = dot(vec3(_842, _843, _844), vec3(_2636, _2637, _2638));
    float _4711 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
    float _2646 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
    float _2647 = dot(vec3(cbLight._m0[_2328].xyz), vec3(_2636, _2637, _2638));
    float _4722 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
    float _2651 = _2628 * _2628;
    float _2655 = ((_2646 * _2646) * (_2651 + (-1.0))) + 1.0;
    float _2664 = (exp2(log2(1.0 - (isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2665 = 1.0 - _2628;
    float _2675 = (0.5 / (((_2564 * ((_2642 * _2665) + _2628)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2665) + _2628) * _2642))) * _2642;
    float _4733 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
    float _2677 = (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0))) * (_2651 / ((_2655 * _2655) * 3.141590118408203125));
    float _2687 = (((_2664 * cbLight._m0[_2616].x) * _2677) * _2311) + ((((cbLight._m0[_2535].x * _2277) * _2588) * _2602) * _2324);
    float _2688 = (((_2664 * cbLight._m0[_2616].y) * _2677) * _2311) + ((((cbLight._m0[_2535].y * _2279) * _2588) * _2602) * _2324);
    float _2689 = (((_2664 * cbLight._m0[_2616].z) * _2677) * _2311) + ((((cbLight._m0[_2535].z * _2281) * _2588) * _2602) * _2324);
    float _2745;
    float _2747;
    float _2749;
    if (_2364)
    {
        _2745 = _2687;
        _2747 = _2688;
        _2749 = _2689;
    }
    else
    {
        uint _2751 = _2288 + 2u;
        uint _2755 = _2288 + 10u;
        float _2769 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2751].w)) * _845) * 0.949999988079071044921875);
        float _2770 = _2769 * _2769;
        float _2771 = cbLight._m0[_2751].x + _921;
        float _2772 = cbLight._m0[_2751].y + _922;
        float _2773 = cbLight._m0[_2751].z + _923;
        float _2777 = inversesqrt(dot(vec3(_2771, _2772, _2773), vec3(_2771, _2772, _2773)));
        float _2778 = _2777 * _2771;
        float _2779 = _2777 * _2772;
        float _2780 = _2777 * _2773;
        float _2781 = dot(vec3(_842, _843, _844), vec3(cbLight._m0[_2751].xyz));
        float _4744 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
        float _2784 = isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0));
        float _2785 = dot(vec3(_842, _843, _844), vec3(_2778, _2779, _2780));
        float _4755 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
        float _2788 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
        float _2789 = dot(vec3(cbLight._m0[_2751].xyz), vec3(_2778, _2779, _2780));
        float _4766 = isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0));
        float _2793 = _2770 * _2770;
        float _2797 = ((_2788 * _2788) * (_2793 + (-1.0))) + 1.0;
        float _2806 = (exp2(log2(1.0 - (isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2807 = 1.0 - _2770;
        float _2817 = (0.5 / (((_2564 * ((_2784 * _2807) + _2770)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2807) + _2770) * _2784))) * _2784;
        float _4777 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
        float _2819 = (isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_2793 / ((_2797 * _2797) * 3.141590118408203125));
        float _2820 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
        _2745 = (((_2806 * cbLight._m0[_2755].x) * _2819) * _2820) + _2687;
        _2747 = (((_2806 * cbLight._m0[_2755].y) * _2819) * _2820) + _2688;
        _2749 = (((_2806 * cbLight._m0[_2755].z) * _2819) * _2820) + _2689;
    }
    float _2851;
    float _2853;
    float _2855;
    if (_2473)
    {
        _2851 = _2745;
        _2853 = _2747;
        _2855 = _2749;
    }
    else
    {
        uint _2862 = _2288 + 3u;
        uint _2866 = _2288 + 11u;
        float _2880 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2862].w)) * _845) * 0.949999988079071044921875);
        float _2881 = _2880 * _2880;
        float _2882 = cbLight._m0[_2862].x + _921;
        float _2883 = cbLight._m0[_2862].y + _922;
        float _2884 = cbLight._m0[_2862].z + _923;
        float _2888 = inversesqrt(dot(vec3(_2882, _2883, _2884), vec3(_2882, _2883, _2884)));
        float _2889 = _2888 * _2882;
        float _2890 = _2888 * _2883;
        float _2891 = _2888 * _2884;
        float _2892 = dot(vec3(_842, _843, _844), vec3(cbLight._m0[_2862].xyz));
        float _4793 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2895 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
        float _2896 = dot(vec3(_842, _843, _844), vec3(_2889, _2890, _2891));
        float _4804 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
        float _2899 = isnan(1.0) ? _4804 : (isnan(_4804) ? 1.0 : min(_4804, 1.0));
        float _2900 = dot(vec3(cbLight._m0[_2862].xyz), vec3(_2889, _2890, _2891));
        float _4815 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2904 = _2881 * _2881;
        float _2908 = ((_2899 * _2899) * (_2904 + (-1.0))) + 1.0;
        float _2917 = (exp2(log2(1.0 - (isnan(1.0) ? _4815 : (isnan(_4815) ? 1.0 : min(_4815, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2918 = 1.0 - _2881;
        float _2928 = (0.5 / (((_2564 * ((_2895 * _2918) + _2881)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2918) + _2881) * _2895))) * _2895;
        float _4826 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
        float _2930 = (isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0))) * (_2904 / ((_2908 * _2908) * 3.141590118408203125));
        float _2931 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2851 = (((_2917 * cbLight._m0[_2866].x) * _2930) * _2931) + _2745;
        _2853 = (((_2917 * cbLight._m0[_2866].y) * _2930) * _2931) + _2747;
        _2855 = (((_2917 * cbLight._m0[_2866].z) * _2930) * _2931) + _2749;
    }
    float _2997;
    float _2999;
    float _3001;
    float _3003;
    float _3005;
    float _3007;
    if (_2286.y == 0u)
    {
        uvec4 _2952 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2953 = _2952.x;
        uint _2964 = uint((float(_2952.y) * floor(float(uint(cbSceneParam._m0[85u].y * _930) / _2953))) + floor(float(uint(cbSceneParam._m0[85u].x * _929) / _2953)));
        float _2974 = (log2(_2064 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2975 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
        uint _2978 = uint(isnan(14.0) ? _2975 : (isnan(_2975) ? 14.0 : min(_2975, 14.0)));
        uvec4 _2983 = texelFetch(g_lightClusterGridBuffer, int(((_2978 << 2u) + (_2964 << 6u)) >> 2u));
        uint _2984 = _2983.x;
        uint _2985 = _2952.z;
        float _3109;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        if (((((1u << ((_2985 >> 4u) & 15u)) + 4294967295u) & _2984) == 0u) || ((_2985 & 240u) == 0u))
        {
            _3109 = 0.0;
            _3111 = 0.0;
            _3113 = 0.0;
            _3115 = 0.0;
            _3117 = 0.0;
            _3119 = 0.0;
        }
        else
        {
            float _3110;
            float _3112;
            float _3114;
            float _3116;
            float _3118;
            float _3120;
            float _3262 = 0.0;
            float _3263 = 0.0;
            float _3264 = 0.0;
            float _3265 = 0.0;
            float _3266 = 0.0;
            float _3267 = 0.0;
            uint _3268 = 0u;
            uint _3277;
            bool _3278;
            for (;;)
            {
                _3277 = texelFetch(g_lightClassification, int((((_2978 << 5u) + (_2964 << 9u)) + (_3268 << 2u)) >> 2u)).x;
                _3278 = _3277 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3278)
                {
                    frontier_phi_66_pred = _3267;
                    frontier_phi_66_pred_1 = _3266;
                    frontier_phi_66_pred_2 = _3265;
                    frontier_phi_66_pred_3 = _3264;
                    frontier_phi_66_pred_4 = _3263;
                    frontier_phi_66_pred_5 = _3262;
                }
                else
                {
                    float _3386;
                    float _3387;
                    float _3388;
                    float _3389;
                    float _3390;
                    float _3391;
                    uint _3392;
                    _3386 = _3262;
                    _3387 = _3263;
                    _3388 = _3264;
                    _3389 = _3265;
                    _3390 = _3266;
                    _3391 = _3267;
                    _3392 = _3277;
                    float _3318;
                    float _3319;
                    float _3320;
                    float _3321;
                    float _3322;
                    float _3323;
                    for (;;)
                    {
                        uint _3396 = uint(findLSB(_3392)) + (_3268 << 5u);
                        uint _3393 = (_3392 + 4294967295u) & _3392;
                        uint _3398 = _3396 * 48u;
                        vec4 _3412 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3398)).x, texelFetch(g_PointLightRenderingBuffer, int(_3398 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3398 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3398 + 3u)).x));
                        uint _3418 = (_3396 * 48u) + 4u;
                        vec4 _3431 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3418)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3418 + 3u)).x));
                        uint _3437 = (_3396 * 48u) + 8u;
                        vec3 _3448 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3437)).x, texelFetch(g_PointLightRenderingBuffer, int(_3437 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3437 + 2u)).x));
                        float _3452 = _3412.x - _2062;
                        float _3453 = _3412.y - _2063;
                        float _3454 = _3412.z - _2064;
                        float _3455 = dot(vec3(_3452, _3453, _3454), vec3(_3452, _3453, _3454));
                        float _3458 = inversesqrt(_3455);
                        float _3459 = _3458 * _3452;
                        float _3460 = _3458 * _3453;
                        float _3461 = _3458 * _3454;
                        float _3462 = dot(vec3(_948, _951, _954), vec3(_3459, _3460, _3461));
                        float _3467 = 1.0 - (_3455 * _3412.w);
                        float _4852 = isnan(0.0) ? _3467 : (isnan(_3467) ? 0.0 : max(_3467, 0.0));
                        float _3468 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
                        float _3469 = sqrt(_3455) * _3431.w;
                        float _3472 = 1.39999997615814208984375 / (_3469 + 1.39999997615814208984375);
                        float _3473 = _3472 * _3472;
                        float _3476 = ((1.0 - _3473) * _3462) + _3473;
                        float _3479 = _3469 * _3469;
                        float _3483 = ((isnan(0.0) ? _3476 : (isnan(_3476) ? 0.0 : max(_3476, 0.0))) * _3468) / ((_3479 * 0.699999988079071044921875) + 1.0);
                        float _3487 = (-0.0) - _2062;
                        float _3488 = (-0.0) - _2063;
                        float _3489 = (-0.0) - _2064;
                        float _3493 = inversesqrt(dot(vec3(_3487, _3488, _3489), vec3(_3487, _3488, _3489)));
                        float _3494 = _3493 * _3487;
                        float _3495 = _3493 * _3488;
                        float _3496 = _3493 * _3489;
                        float _3503 = exp2(log2(1.0 / ((_3479 * 3.5) + 5.0)) * 0.25);
                        float _3504 = 1.0 - _1008;
                        float _3511 = sqrt(1.0 - ((1.0 - (_3504 * _3504)) * (1.0 - (_3503 * _3503))));
                        float _3512 = _3511 * _3511;
                        float _3513 = _3512 * _3512;
                        float _3514 = _3494 + _3459;
                        float _3515 = _3495 + _3460;
                        float _3516 = _3496 + _3461;
                        float _3520 = inversesqrt(dot(vec3(_3514, _3515, _3516), vec3(_3514, _3515, _3516)));
                        float _3524 = dot(vec3(_948, _951, _954), vec3(_3494, _3495, _3496));
                        float _4868 = isnan(0.0) ? _3524 : (isnan(_3524) ? 0.0 : max(_3524, 0.0));
                        float _3527 = isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0));
                        float _3528 = dot(vec3(_948, _951, _954), vec3(_3520 * _3514, _3520 * _3515, _3520 * _3516));
                        float _4879 = isnan(0.0) ? _3528 : (isnan(_3528) ? 0.0 : max(_3528, 0.0));
                        float _3531 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
                        float _3535 = ((_3531 * _3531) * (_3513 + (-1.0))) + 1.0;
                        float _3536 = _3472 * _3512;
                        float _3537 = _3536 * _3536;
                        float _3540 = ((1.0 - _3537) * _3462) + _3537;
                        float _4890 = isnan(0.0) ? _3540 : (isnan(_3540) ? 0.0 : max(_3540, 0.0));
                        float _3541 = isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0));
                        float _3542 = 1.0 - _3512;
                        float _3552 = (0.5 / (((_3541 * ((_3527 * _3542) + _3512)) + 9.9999999392252902907785028219223e-09) + (((_3541 * _3542) + _3512) * _3527))) * _3541;
                        float _4901 = isnan(0.0) ? _3552 : (isnan(_3552) ? 0.0 : max(_3552, 0.0));
                        float _3563 = (((_3513 * 3.1415927410125732421875) * (isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0)))) / ((_3535 * _3535) * ((_3479 * 2.1991131305694580078125) + 3.141590118408203125))) * _3468;
                        _3321 = (_3483 * _3431.x) + _3389;
                        _3322 = (_3483 * _3431.y) + _3390;
                        _3323 = (_3483 * _3431.z) + _3391;
                        _3318 = (_3563 * _3448.x) + _3386;
                        _3319 = (_3563 * _3448.y) + _3387;
                        _3320 = (_3563 * _3448.z) + _3388;
                        if (_3393 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3386 = _3318;
                            _3387 = _3319;
                            _3388 = _3320;
                            _3389 = _3321;
                            _3390 = _3322;
                            _3391 = _3323;
                            _3392 = _3393;
                        }
                    }
                    frontier_phi_66_pred = _3323;
                    frontier_phi_66_pred_1 = _3322;
                    frontier_phi_66_pred_2 = _3321;
                    frontier_phi_66_pred_3 = _3320;
                    frontier_phi_66_pred_4 = _3319;
                    frontier_phi_66_pred_5 = _3318;
                }
                _3120 = frontier_phi_66_pred;
                _3118 = frontier_phi_66_pred_1;
                _3116 = frontier_phi_66_pred_2;
                _3114 = frontier_phi_66_pred_3;
                _3112 = frontier_phi_66_pred_4;
                _3110 = frontier_phi_66_pred_5;
                uint _3269 = _3268 + 1u;
                if (_3269 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3262 = _3110;
                    _3263 = _3112;
                    _3264 = _3114;
                    _3265 = _3116;
                    _3266 = _3118;
                    _3267 = _3120;
                    _3268 = _3269;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3109 = _3110;
            _3111 = _3112;
            _3113 = _3114;
            _3115 = _3116;
            _3117 = _3118;
            _3119 = _3120;
        }
        uvec4 _3123 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3124 = _3123.z;
        uint _3126 = (_3124 >> 8u) & 15u;
        float _3230;
        float _3232;
        float _3234;
        float _3236;
        float _3238;
        float _3240;
        if (((4294967295u << _3126) & _2984) == 0u)
        {
            _3230 = _3109;
            _3232 = _3111;
            _3234 = _3113;
            _3236 = _3115;
            _3238 = _3117;
            _3240 = _3119;
        }
        else
        {
            float _3255 = inversesqrt(dot(vec3(_2062, _2063, _2064), vec3(_2062, _2063, _2064)));
            float _3256 = _3255 * _2062;
            float _3257 = _3255 * _2063;
            float _3258 = _3255 * _2064;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3126 < ((_3124 >> 12u) & 15u))
            {
                float _3231;
                float _3233;
                float _3235;
                float _3237;
                float _3239;
                float _3241;
                float _3369 = _3109;
                float _3370 = _3111;
                float _3371 = _3113;
                float _3372 = _3115;
                float _3373 = _3117;
                float _3374 = _3119;
                uint _3375 = _3126;
                uint _3384;
                bool _3385;
                for (;;)
                {
                    _3384 = texelFetch(g_lightClassification, int((((_2978 << 5u) + (_2964 << 9u)) + (_3375 << 2u)) >> 2u)).x;
                    _3385 = _3384 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3385)
                    {
                        frontier_phi_72_pred = _3374;
                        frontier_phi_72_pred_1 = _3373;
                        frontier_phi_72_pred_2 = _3372;
                        frontier_phi_72_pred_3 = _3371;
                        frontier_phi_72_pred_4 = _3370;
                        frontier_phi_72_pred_5 = _3369;
                    }
                    else
                    {
                        float _3568;
                        float _3569;
                        float _3570;
                        float _3571;
                        float _3572;
                        float _3573;
                        float _3862;
                        float _3863;
                        float _3864;
                        float _3865;
                        float _3866;
                        float _3867;
                        float _3581 = _3369;
                        float _3582 = _3370;
                        float _3583 = _3371;
                        float _3584 = _3372;
                        float _3585 = _3373;
                        float _3586 = _3374;
                        uint _3587 = _3384;
                        uint _3588;
                        vec4 _3613;
                        float _3614;
                        vec4 _3629;
                        vec3 _3641;
                        vec4 _3656;
                        vec4 _3671;
                        float _3718;
                        bool _3719;
                        for (;;)
                        {
                            uint _3598 = ((_3375 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3587));
                            _3588 = (_3587 + 4294967295u) & _3587;
                            uint _3600 = _3598 * 40u;
                            _3613 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3600)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3600 + 3u)).x));
                            _3614 = _3613.w;
                            uint _3616 = (_3598 * 40u) + 4u;
                            _3629 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3616)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 3u)).x));
                            uint _3631 = (_3598 * 40u) + 8u;
                            _3641 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3631)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3631 + 2u)).x));
                            uint _3643 = (_3598 * 40u) + 16u;
                            _3656 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3643)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3643 + 3u)).x));
                            uint _3658 = (_3598 * 40u) + 20u;
                            _3671 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3658)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3658 + 3u)).x));
                            uint _3674 = (_3598 * 40u) + 24u;
                            vec4 _3687 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3674)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3674 + 3u)).x));
                            uint _3693 = (_3598 * 40u) + 28u;
                            vec4 _3706 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3693)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 3u)).x));
                            _3718 = fma(_2064, _3706.z, fma(_2063, _3706.y, _3706.x * _2062)) + _3706.w;
                            _3719 = !((fma(_2064, _3687.z, fma(_2063, _3687.y, _3687.x * _2062)) + _3687.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3719)
                            {
                                float _3746 = _3613.x - _2062;
                                float _3747 = _3613.y - _2063;
                                float _3748 = _3613.z - _2064;
                                float _3749 = dot(vec3(_3746, _3747, _3748), vec3(_3746, _3747, _3748));
                                float _3752 = inversesqrt(_3749);
                                float _3753 = _3752 * _3746;
                                float _3754 = _3752 * _3747;
                                float _3755 = _3752 * _3748;
                                float _3759 = 1.0 - (_3749 / (_3614 * _3614));
                                float _4912 = isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : max(_3759, 0.0));
                                float _3760 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                                float _3764 = sqrt(_3749) * _3629.w;
                                float _3766 = 1.39999997615814208984375 / (_3764 + 1.39999997615814208984375);
                                float _3767 = _3766 * _3766;
                                float _3770 = ((1.0 - _3767) * dot(vec3(_3753, _3754, _3755), vec3(_948, _951, _954))) + _3767;
                                float _3773 = _3764 * _3764;
                                float _3777 = (fma(_2064, _3656.z, fma(_2063, _3656.y, _3656.x * _2062)) + _3656.w) / _3718;
                                float _3778 = (fma(_2064, _3671.z, fma(_2063, _3671.y, _3671.x * _2062)) + _3671.w) / _3718;
                                float _3782 = 1.0 - dot(vec2(_3777, _3778), vec2(_3777, _3778));
                                float _4928 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                                float _3783 = isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0));
                                float _3784 = _3783 * (((isnan(0.0) ? _3770 : (isnan(_3770) ? 0.0 : max(_3770, 0.0))) * _3760) / ((_3773 * 0.699999988079071044921875) + 1.0));
                                float _3796 = exp2(log2(1.0 / ((_3773 * 3.5) + 5.0)) * 0.25);
                                float _3797 = 1.0 - _1008;
                                float _3804 = sqrt(1.0 - ((1.0 - (_3797 * _3797)) * (1.0 - (_3796 * _3796))));
                                float _3805 = _3804 * _3804;
                                float _3806 = _3805 * _3805;
                                float _3807 = _3753 - _3256;
                                float _3808 = _3754 - _3257;
                                float _3809 = _3755 - _3258;
                                float _3813 = inversesqrt(dot(vec3(_3807, _3808, _3809), vec3(_3807, _3808, _3809)));
                                float _3817 = dot(vec3(_948, _951, _954), vec3((-0.0) - _3256, (-0.0) - _3257, (-0.0) - _3258));
                                float _4939 = isnan(0.0) ? _3817 : (isnan(_3817) ? 0.0 : max(_3817, 0.0));
                                float _3820 = isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0));
                                float _3821 = dot(vec3(_948, _951, _954), vec3(_3813 * _3807, _3813 * _3808, _3813 * _3809));
                                float _4950 = isnan(0.0) ? _3821 : (isnan(_3821) ? 0.0 : max(_3821, 0.0));
                                float _3824 = isnan(1.0) ? _4950 : (isnan(_4950) ? 1.0 : min(_4950, 1.0));
                                float _3828 = ((_3824 * _3824) * (_3806 + (-1.0))) + 1.0;
                                float _3829 = _3766 * _3805;
                                float _3830 = _3829 * _3829;
                                float _3836 = ((1.0 - _3830) * dot(vec3(_948, _951, _954), vec3(_3753, _3754, _3755))) + _3830;
                                float _4961 = isnan(0.0) ? _3836 : (isnan(_3836) ? 0.0 : max(_3836, 0.0));
                                float _3837 = isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0));
                                float _3838 = 1.0 - _3805;
                                float _3848 = (0.5 / (((_3837 * ((_3820 * _3838) + _3805)) + 9.9999999392252902907785028219223e-09) + (((_3837 * _3838) + _3805) * _3820))) * _3837;
                                float _4972 = isnan(0.0) ? _3848 : (isnan(_3848) ? 0.0 : max(_3848, 0.0));
                                float _3858 = (_3783 * _3760) * (((_3806 * 3.1415927410125732421875) * (isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0)))) / ((_3828 * _3828) * ((_3773 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3784 * _3629.y;
                                frontier_phi_78_pred_1 = _3784 * _3629.x;
                                frontier_phi_78_pred_2 = _3858 * _3641.z;
                                frontier_phi_78_pred_3 = _3858 * _3641.y;
                                frontier_phi_78_pred_4 = _3858 * _3641.x;
                                frontier_phi_78_pred_5 = _3784 * _3629.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3866 = frontier_phi_78_pred;
                            _3865 = frontier_phi_78_pred_1;
                            _3864 = frontier_phi_78_pred_2;
                            _3863 = frontier_phi_78_pred_3;
                            _3862 = frontier_phi_78_pred_4;
                            _3867 = frontier_phi_78_pred_5;
                            _3571 = _3865 + _3584;
                            _3572 = _3866 + _3585;
                            _3573 = _3867 + _3586;
                            _3568 = _3862 + _3581;
                            _3569 = _3863 + _3582;
                            _3570 = _3864 + _3583;
                            if (_3588 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3581 = _3568;
                                _3582 = _3569;
                                _3583 = _3570;
                                _3584 = _3571;
                                _3585 = _3572;
                                _3586 = _3573;
                                _3587 = _3588;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3573;
                        frontier_phi_72_pred_1 = _3572;
                        frontier_phi_72_pred_2 = _3571;
                        frontier_phi_72_pred_3 = _3570;
                        frontier_phi_72_pred_4 = _3569;
                        frontier_phi_72_pred_5 = _3568;
                    }
                    _3241 = frontier_phi_72_pred;
                    _3239 = frontier_phi_72_pred_1;
                    _3237 = frontier_phi_72_pred_2;
                    _3235 = frontier_phi_72_pred_3;
                    _3233 = frontier_phi_72_pred_4;
                    _3231 = frontier_phi_72_pred_5;
                    uint _3376 = _3375 + 1u;
                    if (_3376 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3369 = _3231;
                        _3370 = _3233;
                        _3371 = _3235;
                        _3372 = _3237;
                        _3373 = _3239;
                        _3374 = _3241;
                        _3375 = _3376;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3241;
                frontier_phi_60_61_ladder_1 = _3239;
                frontier_phi_60_61_ladder_2 = _3235;
                frontier_phi_60_61_ladder_3 = _3233;
                frontier_phi_60_61_ladder_4 = _3231;
                frontier_phi_60_61_ladder_5 = _3237;
            }
            else
            {
                frontier_phi_60_61_ladder = _3119;
                frontier_phi_60_61_ladder_1 = _3117;
                frontier_phi_60_61_ladder_2 = _3113;
                frontier_phi_60_61_ladder_3 = _3111;
                frontier_phi_60_61_ladder_4 = _3109;
                frontier_phi_60_61_ladder_5 = _3115;
            }
            _3230 = frontier_phi_60_61_ladder_4;
            _3232 = frontier_phi_60_61_ladder_3;
            _3234 = frontier_phi_60_61_ladder_2;
            _3236 = frontier_phi_60_61_ladder_5;
            _3238 = frontier_phi_60_61_ladder_1;
            _3240 = frontier_phi_60_61_ladder;
        }
        float _3245 = isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0));
        _2997 = (_3245 * _3236) + _2528;
        _2999 = (_3245 * _3238) + _2530;
        _3001 = (_3245 * _3240) + _2532;
        _3003 = ((_3230 * 0.039999999105930328369140625) * _3245) + _2851;
        _3005 = ((_3232 * 0.039999999105930328369140625) * _3245) + _2853;
        _3007 = ((_3234 * 0.039999999105930328369140625) * _3245) + _2855;
    }
    else
    {
        _2997 = _2528;
        _2999 = _2530;
        _3001 = _2532;
        _3003 = _2851;
        _3005 = _2853;
        _3007 = _2855;
    }
    uint _3013 = _968 + uint(cbMatDynParam._m0[0u].w);
    float _3019 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _3025 = (((((_3019 * cbMtdParam._m0[14u].x) * _700.x) * _723) * _797) * (((1.0 - _776) * cbMtdParam._m0[20u].w) + _776)) * cbInstanceData._m0[_3013].x;
    float _3031 = (((((_3019 * cbMtdParam._m0[14u].y) * _700.y) * _723) * _797) * (((1.0 - _778) * cbMtdParam._m0[20u].w) + _778)) * cbInstanceData._m0[_3013].y;
    float _3037 = (((((_3019 * cbMtdParam._m0[14u].z) * _700.z) * _723) * _797) * (((1.0 - _780) * cbMtdParam._m0[20u].w) + _780)) * cbInstanceData._m0[_3013].z;
    float _4988 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _4999 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _5010 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _3054 = (((isnan(1.0) ? _4988 : (isnan(_4988) ? 1.0 : min(_4988, 1.0))) * (_2997 + ((isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0))) * _992))) + ((_3003 + ((isnan(0.0) ? _2009 : (isnan(_2009) ? 0.0 : max(_2009, 0.0))) * _1798)) * cbPerFrame._m0[3u].x)) + _3025;
    float _3056 = (_3031 + ((_3005 + ((isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0))) * _1798)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4999 : (isnan(_4999) ? 1.0 : min(_4999, 1.0))) * (_2999 + ((isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0))) * _992)));
    float _3058 = (_3037 + ((_3007 + ((isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0))) * _1798)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0))) * (_3001 + ((isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0))) * _992)));
    float _5036 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3071 = isnan(1.0) ? _5036 : (isnan(_5036) ? 1.0 : min(_5036, 1.0));
    uint _3072 = _967 + 6u;
    float _3080 = _929 / cbSceneParam._m0[86u].x;
    float _3081 = _930 / cbSceneParam._m0[86u].y;
    vec4 _3095 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3080, _3081, (log2((isnan(cbSceneParam._m0[77u].w) ? _864 : (isnan(_864) ? cbSceneParam._m0[77u].w : min(_864, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3097 = _3095.x;
    float _3098 = _3095.y;
    float _3099 = _3095.z;
    float _3100 = _3095.w;
    float _3171;
    float _3173;
    float _3175;
    float _3177;
    if (_864 > cbSceneParam._m0[78u].w)
    {
        float _3134 = isnan(_864) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _864 : min(cbSceneParam._m0[80u].w, _864));
        float _3135 = _3134 / _864;
        float _3146 = _3135 * _914;
        float _3147 = _915 * _3135;
        float _3148 = (-0.0) - _3147;
        float _3149 = _3135 * _916;
        float _3151 = (cbSceneParam._m0[77u].w * _3148) / _3134;
        float _3152 = _3151 + cbSceneParam._m0[79u].w;
        float _3153 = cbSceneParam._m0[79u].w - _3147;
        float _3159 = sqrt(((_3146 * _3146) + (_3147 * _3147)) + (_3149 * _3149));
        float _3162 = (1.0 - (cbSceneParam._m0[77u].w / _3134)) * _3159;
        float _3167 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3169 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3331;
        if (abs((_3148 - _3151) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3331 = ((((_3152 > 0.0) ? exp2(_3167 * _3152) : (2.0 - exp2(_3169 * _3152))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3162;
        }
        else
        {
            float _3291 = 1.0 / cbSceneParam._m0[80u].x;
            float _3292 = isnan(_3153) ? _3152 : (isnan(_3152) ? _3153 : max(_3152, _3153));
            float _3293 = isnan(_3153) ? _3152 : (isnan(_3152) ? _3153 : min(_3152, _3153));
            float _3302 = isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : min(_3292, 0.0));
            float _3303 = isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : min(_3293, 0.0));
            _3331 = ((abs(_3159 / _3148) * cbSceneParam._m0[80u].y) * ((((_3302 - _3303) * 2.0) - ((exp2(_3167 * (isnan(0.0) ? _3292 : (isnan(_3292) ? 0.0 : max(_3292, 0.0)))) - exp2(_3167 * (isnan(0.0) ? _3293 : (isnan(_3293) ? 0.0 : max(_3293, 0.0))))) * _3291)) - ((exp2(_3169 * _3302) - exp2(_3169 * _3303)) * _3291))) + (_3162 * cbSceneParam._m0[80u].z);
        }
        vec4 _3333 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3080, _3081, 1.0), 0.0);
        float _3342 = exp2((_3331 * (-1.44269502162933349609375)) * (1.0 - _3333.w));
        float _3343 = log2(_3342);
        float _3359 = log2(_3100);
        _3171 = (exp2(_3359 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3343 * cbSceneParam._m0[78u].x)) * _3333.x) / cbSceneParam._m0[78u].x)) + _3097;
        _3173 = (exp2(_3359 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3343 * cbSceneParam._m0[78u].y)) * _3333.y) / cbSceneParam._m0[78u].y)) + _3098;
        _3175 = (exp2(_3359 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3343 * cbSceneParam._m0[78u].z)) * _3333.z) / cbSceneParam._m0[78u].z)) + _3099;
        _3177 = _3342 * _3100;
    }
    else
    {
        _3171 = _3097;
        _3173 = _3098;
        _3175 = _3099;
        _3177 = _3100;
    }
    float _3189 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3190 = _3189 == 3.0;
    float _3191 = log2(_3177);
    float _3195 = exp2(_3191 * cbSceneParam._m0[78u].x);
    float _3196 = exp2(_3191 * cbSceneParam._m0[78u].y);
    float _3197 = exp2(_3191 * cbSceneParam._m0[78u].z);
    float _3198 = _3195 * (isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0)));
    float _3199 = _3196 * (isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0)));
    float _3200 = _3197 * (isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0)));
    float _3209 = (_3189 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3209 * (_3190 ? _3198 : (_3198 + (cbSceneParam._m0[72u].w * _3171)));
    SV_Target.y = _3209 * (_3190 ? _3199 : (_3199 + (cbSceneParam._m0[72u].w * _3173)));
    SV_Target.z = _3209 * (_3190 ? _3200 : (_3200 + (cbSceneParam._m0[72u].w * _3175)));
    SV_Target.w = cbInstanceData._m0[_3072].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3025) * _3071) * _3195) * _3209;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3031) * _3071) * _3196) * _3209;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3037) * _3071) * _3197) * _3209;
    SV_Target_1.w = cbInstanceData._m0[_3072].w;
}


