#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1304;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _218 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _219 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _220 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _226 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _233 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _240 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _262 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _268 = _262.x * cbMtdParam._m0[10u].x;
    float _269 = _262.y * cbMtdParam._m0[10u].y;
    float _270 = _262.z * cbMtdParam._m0[10u].z;
    vec4 _289 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _308 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _335 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _345 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _308.x) * 2.0) - _335)) + 1.0;
    float _3946 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _346 = isnan(1.0) ? _3946 : (isnan(_3946) ? 1.0 : min(_3946, 1.0));
    float _353 = (_346 * ((_289.x * cbMtdParam._m0[11u].x) - _268)) + _268;
    float _354 = (_346 * ((_289.y * cbMtdParam._m0[11u].y) - _269)) + _269;
    float _355 = (_346 * ((_289.z * cbMtdParam._m0[11u].z) - _270)) + _270;
    vec4 _374 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _387 = (((((1.0 - _308.y) * 2.0) - _335) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3957 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
    float _395 = (((_374.x * cbMtdParam._m0[12u].x) - _353) * _388) + _353;
    float _396 = (_388 * ((_374.y * cbMtdParam._m0[12u].y) - _354)) + _354;
    float _397 = (_388 * ((_374.z * cbMtdParam._m0[12u].z) - _355)) + _355;
    vec4 _415 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _428 = (((((1.0 - _308.z) * 2.0) - _335) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _3968 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _429 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
    float _436 = (((_415.x * cbMtdParam._m0[13u].x) - _395) * _429) + _395;
    float _437 = (_429 * ((_415.y * cbMtdParam._m0[13u].y) - _396)) + _396;
    float _438 = (_429 * ((_415.z * cbMtdParam._m0[13u].z) - _397)) + _397;
    vec4 _465 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    vec4 _484 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _487 = _484.x + 0.00999999977648258209228515625;
    float _494 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _487)) * (cbMtdParam._m0[19u].w + 1.0);
    float _3979 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _495 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _502 = (_495 * ((_465.x * cbMtdParam._m0[16u].x) - _436)) + _436;
    float _503 = (_495 * ((_465.y * cbMtdParam._m0[16u].y) - _437)) + _437;
    float _504 = (_495 * ((_465.z * cbMtdParam._m0[16u].z) - _438)) + _438;
    vec4 _517 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _538 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _540 = _538.x;
    float _541 = _538.y;
    float _542 = _538.z;
    vec4 _554 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _565 = ((_554.x - _540) * _346) + _540;
    float _566 = ((_554.y - _541) * _346) + _541;
    float _567 = ((_554.z - _542) * _346) + _542;
    vec4 _580 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _591 = ((_580.x - _565) * _388) + _565;
    float _592 = ((_580.y - _566) * _388) + _566;
    float _593 = ((_580.z - _567) * _388) + _567;
    vec4 _606 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _619 = ((_606.z - _593) * _429) + _593;
    float _622 = ((((_606.x - _591) * _429) + _591) * 2.0) + (-1.0);
    float _623 = ((((_606.y - _592) * _429) + _592) * 2.0) + (-1.0);
    float _624 = dot(vec2(_622, _623), vec2(_622, _623));
    float _3990 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _629 = sqrt(1.0 - (isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0))));
    float _634 = (((_517.z - _619) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _619;
    vec4 _664 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _678 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4001 = isnan(0.0) ? _678 : (isnan(_678) ? 0.0 : max(_678, 0.0));
    float _679 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
    float _687 = (((_679 * _679) * (3.0 - (_679 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _695 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _703 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4012 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
    float _704 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _708 = (_704 * _704) * (3.0 - (_704 * 2.0));
    float _709 = _708 * cbMtdParam._m0[22u].x;
    float _710 = _708 * cbMtdParam._m0[22u].y;
    float _711 = sin(_695);
    float _712 = cos(_695);
    float _713 = TEXCOORD.z - _709;
    float _714 = TEXCOORD.w - _710;
    vec4 _734 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_709 + fma(_714, (-0.0) - _711, _713 * _712))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_714, _712, _713 * _711) + _710)) + cbTextureTilingScale._m0[2u].w));
    float _740 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _734.x;
    float _742 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _734.y;
    float _744 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _734.z;
    float _760 = (TEXCOORD_5.x - ((_487 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4023 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _761 = isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0));
    float _767 = ((((_517.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _622;
    float _768 = ((((_517.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _623;
    float _771 = fma(_629, _233 * NORMAL.x, fma(_768, _240 * TANGENT.x, (_226 * _218) * _767));
    float _774 = fma(_629, _233 * NORMAL.y, fma(_768, _240 * TANGENT.y, (_226 * _219) * _767));
    float _777 = fma(_629, _233 * NORMAL.z, fma(_768, _240 * TANGENT.z, (_226 * _220) * _767));
    float _781 = inversesqrt(dot(vec3(_771, _774, _777), vec3(_771, _774, _777)));
    float _782 = _781 * _771;
    float _783 = _781 * _774;
    float _784 = _781 * _777;
    float _4034 = isnan(0.0) ? _634 : (isnan(_634) ? 0.0 : max(_634, 0.0));
    float _785 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
    float _4045 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0));
    float _4056 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _4067 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
    float _804 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _844 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _854 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _844);
    float _855 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _844);
    float _856 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _844);
    float _860 = inversesqrt(dot(vec3(_854, _855, _856), vec3(_854, _855, _856)));
    float _861 = _854 * _860;
    float _862 = _855 * _860;
    float _863 = _856 * _860;
    float _869 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _870 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _889 = fma(_784, cbSceneParam._m0[5u].z, fma(_783, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _782));
    float _892 = fma(_784, cbSceneParam._m0[6u].z, fma(_783, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _782));
    float _895 = fma(_784, cbSceneParam._m0[7u].z, fma(_783, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _782));
    uint _908 = uint(roundEven(NORMAL.w)) * 13u;
    uint _909 = _908 + 9u;
    uint _910 = _909 + uint(cbMatDynParam._m0[0u].w);
    float _916 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0)))) * cbInstanceData._m0[_910].x;
    float _917 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0)))) * cbInstanceData._m0[_910].y;
    float _918 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0)))) * cbInstanceData._m0[_910].z;
    float _4078 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _919 = isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0));
    float _4089 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _920 = isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0));
    float _4100 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _921 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
    vec4 _930 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _869, cbSceneParam._m0[86u].y * _870));
    float _933 = _930.x * TEXCOORD_5.w;
    float _934 = dot(vec3(_782, _783, _784), vec3(_861, _862, _863));
    float _937 = _934 * 2.0;
    float _941 = (_937 * _782) - _861;
    float _942 = (_937 * _783) - _862;
    float _943 = (_937 * _784) - _863;
    float _947 = abs(dot(vec3(_861, _862, _863), vec3(_782, _783, _784)));
    float _4111 = isnan(0.0) ? _947 : (isnan(_947) ? 0.0 : max(_947, 0.0));
    float _949 = sqrt(_785);
    float _961 = exp2((_949 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_949 * 3.0));
    float _993 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _997 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1001 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1303;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1028 = fma(_1001, cbModelParam._m0[26u].z, fma(_997, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _993));
        float _1032 = fma(_1001, cbModelParam._m0[27u].z, fma(_997, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _993));
        float _1036 = fma(_1001, cbModelParam._m0[28u].z, fma(_997, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _993));
        float _1061 = _993 + _782;
        float _1062 = _997 + _783;
        float _1063 = _1001 + _784;
        float _1073 = fma(_1063, cbModelParam._m0[26u].z, fma(_1062, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1061)) - _1028;
        float _1074 = fma(_1063, cbModelParam._m0[27u].z, fma(_1062, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1061)) - _1032;
        float _1075 = fma(_1063, cbModelParam._m0[28u].z, fma(_1062, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1061)) - _1036;
        float _1079 = inversesqrt(dot(vec3(_1073, _1074, _1075), vec3(_1073, _1074, _1075)));
        float _1092 = ((_1079 * _1073) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1028 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1093 = ((_1079 * _1074) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1032 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1094 = ((_1079 * _1075) / cbModelParam._m0[34u].z) + ((((((_1036 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1097 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1092, _1093, _1094), 0.0);
        vec4 _1104 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1092, _1093, _1094), 0.0);
        vec4 _1111 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1092, _1093, _1094), 0.0);
        vec4 _1118 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1092, _1093, _1094), 0.0);
        float _1131 = exp2((_1097.w + (-0.5)) * 20.0) * 2.0;
        float _1132 = _1131 * (_1097.x + (-0.5));
        float _1133 = _1131 * (_1097.y + (-0.5));
        float _1134 = _1131 * (_1097.z + (-0.5));
        float _1141 = exp2((_1104.w + (-0.5)) * 20.0) * 2.0;
        float _1142 = _1141 * (_1104.x + (-0.5));
        float _1143 = _1141 * (_1104.y + (-0.5));
        float _1144 = _1141 * (_1104.z + (-0.5));
        float _1151 = exp2((_1111.w + (-0.5)) * 20.0) * 2.0;
        float _1152 = _1151 * (_1111.x + (-0.5));
        float _1153 = _1151 * (_1111.y + (-0.5));
        float _1154 = _1151 * (_1111.z + (-0.5));
        float _1161 = exp2((_1118.w + (-0.5)) * 20.0) * 2.0;
        float _1162 = _1161 * (_1118.x + (-0.5));
        float _1163 = _1161 * (_1118.y + (-0.5));
        float _1164 = _1161 * (_1118.z + (-0.5));
        float _1165 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1166 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = _1132 * 0.5;
        float _1169 = _1142 * 0.5;
        float _1170 = _1152 * 0.5;
        float _1171 = dot(vec3(_1168, _1169, _1170), vec3(_1168, _1169, _1170));
        float _1176 = (_1171 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1171);
        float _1185 = (dot(vec3(_782, _783, _784), vec3(_1176 * _1168, _1176 * _1169, _1176 * _1170)) + 1.0) * 0.5;
        float _4137 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1195 = sqrt(((_1169 * _1169) + (_1168 * _1168)) + (_1170 * _1170)) / (_1165 + 9.9999997473787516355514526367188e-06);
        float _4148 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _4159 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0))) * (_1197 + 1.0))) + _1202) * _1165;
        float _1212 = _1133 * 0.5;
        float _1213 = _1143 * 0.5;
        float _1214 = _1153 * 0.5;
        float _1215 = dot(vec3(_1212, _1213, _1214), vec3(_1212, _1213, _1214));
        float _1220 = (_1215 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1215);
        float _1228 = (dot(vec3(_782, _783, _784), vec3(_1220 * _1212, _1220 * _1213, _1220 * _1214)) + 1.0) * 0.5;
        float _4170 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1237 = sqrt(((_1213 * _1213) + (_1212 * _1212)) + (_1214 * _1214)) / (_1166 + 9.9999997473787516355514526367188e-06);
        float _4181 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1238 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1239 = _1238 * 2.0;
        float _1243 = (1.0 - _1238) / (_1238 + 1.0);
        float _4192 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1253 = ((((1.0 - _1244) * (_1239 + 2.0)) * exp2(log2(isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_1239 + 1.0))) + _1244) * _1166;
        float _1254 = _1134 * 0.5;
        float _1255 = _1144 * 0.5;
        float _1256 = _1154 * 0.5;
        float _1257 = dot(vec3(_1254, _1255, _1256), vec3(_1254, _1255, _1256));
        float _1262 = (_1257 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1257);
        float _1270 = (dot(vec3(_782, _783, _784), vec3(_1262 * _1254, _1262 * _1255, _1262 * _1256)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1279 = sqrt(((_1255 * _1255) + (_1254 * _1254)) + (_1256 * _1256)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1280 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1281 = _1280 * 2.0;
        float _1285 = (1.0 - _1280) / (_1280 + 1.0);
        float _4225 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1286 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1295 = ((((1.0 - _1286) * (_1281 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1281 + 1.0))) + _1286) * _1167;
        _1303 = _1134;
        _1305 = _1133;
        _1306 = _1132;
        _1307 = _1144;
        _1308 = _1143;
        _1309 = _1142;
        _1310 = _1154;
        _1311 = _1153;
        _1312 = _1152;
        _1313 = _1167;
        _1314 = _1166;
        _1315 = _1165;
        _1316 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
        _1317 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0)));
        _1318 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1295 : (isnan(_1295) ? 0.0 : max(_1295, 0.0)));
    }
    else
    {
        _1303 = _1304;
        _1305 = _1304;
        _1306 = _1304;
        _1307 = _1304;
        _1308 = _1304;
        _1309 = _1304;
        _1310 = _1304;
        _1311 = _1304;
        _1312 = _1304;
        _1313 = _1304;
        _1314 = _1304;
        _1315 = _1304;
        _1316 = 0.0;
        _1317 = 0.0;
        _1318 = 0.0;
    }
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1344 = fma(_1001, cbModelParam._m0[30u].z, fma(_997, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _993));
        float _1348 = fma(_1001, cbModelParam._m0[31u].z, fma(_997, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _993));
        float _1352 = fma(_1001, cbModelParam._m0[32u].z, fma(_997, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _993));
        float _1375 = _993 + _782;
        float _1376 = _997 + _783;
        float _1377 = _1001 + _784;
        float _1387 = fma(_1377, cbModelParam._m0[30u].z, fma(_1376, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1375)) - _1344;
        float _1388 = fma(_1377, cbModelParam._m0[31u].z, fma(_1376, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1375)) - _1348;
        float _1389 = fma(_1377, cbModelParam._m0[32u].z, fma(_1376, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1375)) - _1352;
        float _1393 = inversesqrt(dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389)));
        float _1406 = ((_1393 * _1387) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1344 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1407 = ((_1393 * _1388) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1348 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1408 = ((_1393 * _1389) / cbModelParam._m0[35u].z) + ((((((_1352 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1410 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1417 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1424 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1431 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        float _1443 = exp2((_1410.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1410.x + (-0.5));
        float _1445 = _1443 * (_1410.y + (-0.5));
        float _1446 = _1443 * (_1410.z + (-0.5));
        float _1453 = exp2((_1417.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1417.x + (-0.5));
        float _1455 = _1453 * (_1417.y + (-0.5));
        float _1456 = _1453 * (_1417.z + (-0.5));
        float _1463 = exp2((_1424.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1424.x + (-0.5));
        float _1465 = _1463 * (_1424.y + (-0.5));
        float _1466 = _1463 * (_1424.z + (-0.5));
        float _1473 = exp2((_1431.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1431.x + (-0.5));
        float _1475 = _1473 * (_1431.y + (-0.5));
        float _1476 = _1473 * (_1431.z + (-0.5));
        float _1477 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1478 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = _1444 * 0.5;
        float _1481 = _1454 * 0.5;
        float _1482 = _1464 * 0.5;
        float _1483 = dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482));
        float _1488 = (_1483 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1483);
        float _1496 = (dot(vec3(_782, _783, _784), vec3(_1488 * _1480, _1488 * _1481, _1488 * _1482)) + 1.0) * 0.5;
        float _4266 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1505 = sqrt(((_1481 * _1481) + (_1480 * _1480)) + (_1482 * _1482)) / (_1477 + 9.9999997473787516355514526367188e-06);
        float _4277 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0));
        float _1507 = _1506 * 2.0;
        float _1511 = (1.0 - _1506) / (_1506 + 1.0);
        float _4288 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
        float _1521 = ((((1.0 - _1512) * (_1507 + 2.0)) * exp2(log2(isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0))) * (_1507 + 1.0))) + _1512) * _1477;
        float _1522 = _1445 * 0.5;
        float _1523 = _1455 * 0.5;
        float _1524 = _1465 * 0.5;
        float _1525 = dot(vec3(_1522, _1523, _1524), vec3(_1522, _1523, _1524));
        float _1530 = (_1525 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1525);
        float _1538 = (dot(vec3(_782, _783, _784), vec3(_1530 * _1522, _1530 * _1523, _1530 * _1524)) + 1.0) * 0.5;
        float _4299 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1547 = sqrt(((_1523 * _1523) + (_1522 * _1522)) + (_1524 * _1524)) / (_1478 + 9.9999997473787516355514526367188e-06);
        float _4310 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1549 = _1548 * 2.0;
        float _1553 = (1.0 - _1548) / (_1548 + 1.0);
        float _4321 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _1563 = ((((1.0 - _1554) * (_1549 + 2.0)) * exp2(log2(isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))) * (_1549 + 1.0))) + _1554) * _1478;
        float _1564 = _1446 * 0.5;
        float _1565 = _1456 * 0.5;
        float _1566 = _1466 * 0.5;
        float _1567 = dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566));
        float _1572 = (_1567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1567);
        float _1580 = (dot(vec3(_782, _783, _784), vec3(_1572 * _1564, _1572 * _1565, _1572 * _1566)) + 1.0) * 0.5;
        float _4332 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1589 = sqrt(((_1565 * _1565) + (_1564 * _1564)) + (_1566 * _1566)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4343 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1591 = _1590 * 2.0;
        float _1595 = (1.0 - _1590) / (_1590 + 1.0);
        float _4354 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1605 = ((((1.0 - _1596) * (_1591 + 2.0)) * exp2(log2(isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0))) * (_1591 + 1.0))) + _1596) * _1479;
        _1613 = _1446;
        _1614 = _1445;
        _1615 = _1444;
        _1616 = _1456;
        _1617 = _1455;
        _1618 = _1454;
        _1619 = _1466;
        _1620 = _1465;
        _1621 = _1464;
        _1622 = _1479;
        _1623 = _1478;
        _1624 = _1477;
        _1625 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0)));
        _1626 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0)));
        _1627 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)));
    }
    else
    {
        _1613 = _1304;
        _1614 = _1304;
        _1615 = _1304;
        _1616 = _1304;
        _1617 = _1304;
        _1618 = _1304;
        _1619 = _1304;
        _1620 = _1304;
        _1621 = _1304;
        _1622 = _1304;
        _1623 = _1304;
        _1624 = _1304;
        _1625 = 0.0;
        _1626 = 0.0;
        _1627 = 0.0;
    }
    float _1637 = (cbModelParam._m0[1u].x * (_1625 - _1316)) + _1316;
    float _1638 = (cbModelParam._m0[1u].x * (_1626 - _1317)) + _1317;
    float _1639 = (cbModelParam._m0[1u].x * (_1627 - _1318)) + _1318;
    float _1660 = fma(_1639, cbSceneParam._m0[89u].z, fma(_1638, cbSceneParam._m0[89u].y, _1637 * cbSceneParam._m0[89u].x));
    float _1663 = fma(_1639, cbSceneParam._m0[90u].z, fma(_1638, cbSceneParam._m0[90u].y, _1637 * cbSceneParam._m0[90u].x));
    float _1666 = fma(_1639, cbSceneParam._m0[91u].z, fma(_1638, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1637));
    float _1681 = _941 * 0.5;
    float _1682 = _942 * 0.5;
    float _1683 = _943 * 0.5;
    float _1684 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1615, _1618, _1621, _1624));
    float _1687 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1614, _1617, _1620, _1623));
    float _1690 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1613, _1616, _1619, _1622));
    float _1724;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1697 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1303, _1307, _1310, _1313));
        float _1701 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1305, _1308, _1311, _1314));
        float _1705 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1306, _1309, _1312, _1315));
        float _1712 = dot(vec4(cbModelParam._m0[39u]), vec4(_1681, _1682, _1683, 1.0));
        _1724 = dot(vec3(isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)), isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0)), isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1712) ? 0.0 : (isnan(0.0) ? _1712 : max(0.0, _1712))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1724 = 1.0;
    }
    float _1735;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1726 = dot(vec4(cbModelParam._m0[40u]), vec4(_1681, _1682, _1683, 1.0));
        _1735 = dot(vec3(isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)), isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1726) ? 0.0 : (isnan(0.0) ? _1726 : max(0.0, _1726))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1735 = 1.0;
    }
    float _1739 = (_1735 * cbModelParam._m0[1u].x) + (_1724 * (1.0 - cbModelParam._m0[1u].x));
    float _1749 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _785);
    float _1750 = isnan(_1749) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1749 : min(cbModelParam._m0[25u].z, _1749));
    float _1830;
    float _1832;
    float _1834;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1797 = fma(_1001, cbModelParam._m0[13u].z, fma(_997, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _993)) + cbModelParam._m0[13u].w;
        float _1801 = fma(_1001, cbModelParam._m0[14u].z, fma(_997, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _993)) + cbModelParam._m0[14u].w;
        float _1805 = fma(_1001, cbModelParam._m0[15u].z, fma(_997, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _993)) + cbModelParam._m0[15u].w;
        float _1808 = fma(_943, cbModelParam._m0[13u].z, fma(_942, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _941));
        float _1811 = fma(_943, cbModelParam._m0[14u].z, fma(_942, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _941));
        float _1814 = fma(_943, cbModelParam._m0[15u].z, fma(_942, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _941));
        float _1842;
        if (_1808 > 0.0)
        {
            _1842 = abs((1.0 - _1797) / _1808);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1797 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1842 = frontier_phi_14_12_ladder;
        }
        float _2011;
        if (_1811 > 0.0)
        {
            _2011 = abs((1.0 - _1801) / _1811);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1801 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2011 = frontier_phi_23_19_ladder;
        }
        float _2306;
        if (_1814 > 0.0)
        {
            _2306 = abs((1.0 - _1805) / _1814);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1805 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2306 = frontier_phi_35_30_ladder;
        }
        float _2308 = isnan(_2011) ? _1842 : (isnan(_1842) ? _2011 : min(_1842, _2011));
        float _2309 = isnan(_2306) ? _2308 : (isnan(_2308) ? _2306 : min(_2308, _2306));
        float _2313 = (_2309 * _1808) + _1797;
        float _2314 = (_2309 * _1811) + _1801;
        float _2315 = (_2309 * _1814) + _1805;
        float _2316 = _2309 * 9.9999997473787516355514526367188e-05;
        float _2318 = (-1.0) - _2316;
        float _2320 = _2316 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2315 > _2320) || ((_2315 < _2318) || ((_2314 > _2320) || ((_2314 < _2318) || ((_2313 < _2318) || (_2313 > _2320))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2460 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2315, cbModelParam._m0[9u].z, fma(_2314, cbModelParam._m0[9u].y, _2313 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2315, cbModelParam._m0[10u].z, fma(_2314, cbModelParam._m0[10u].y, _2313 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2315, cbModelParam._m0[11u].z, fma(_2314, cbModelParam._m0[11u].y, _2313 * cbModelParam._m0[11u].x))), _1750);
            frontier_phi_13_35_ladder = _2460.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2460.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2460.x * cbModelParam._m0[1u].y;
        }
        _1830 = frontier_phi_13_35_ladder_2;
        _1832 = frontier_phi_13_35_ladder_1;
        _1834 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_941, _942, _943), _1750);
        _1830 = _1818.x * cbModelParam._m0[1u].y;
        _1832 = _1818.y * cbModelParam._m0[1u].y;
        _1834 = _1818.z * cbModelParam._m0[1u].y;
    }
    float _1838 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _785);
    float _1839 = isnan(_1838) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1838 : min(cbModelParam._m0[25u].w, _1838));
    float _1928;
    float _1930;
    float _1932;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1892 = fma(_1001, cbModelParam._m0[21u].z, fma(_997, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _993)) + cbModelParam._m0[21u].w;
        float _1896 = fma(_1001, cbModelParam._m0[22u].z, fma(_997, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _993)) + cbModelParam._m0[22u].w;
        float _1900 = fma(_1001, cbModelParam._m0[23u].z, fma(_997, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _993)) + cbModelParam._m0[23u].w;
        float _1903 = fma(_943, cbModelParam._m0[21u].z, fma(_942, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _941));
        float _1906 = fma(_943, cbModelParam._m0[22u].z, fma(_942, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _941));
        float _1909 = fma(_943, cbModelParam._m0[23u].z, fma(_942, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _941));
        float _2016;
        if (_1903 > 0.0)
        {
            _2016 = abs((1.0 - _1892) / _1903);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1892 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2016 = frontier_phi_25_21_ladder;
        }
        float _2333;
        if (_1906 > 0.0)
        {
            _2333 = abs((1.0 - _1896) / _1906);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1896 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2333 = frontier_phi_37_32_ladder;
        }
        float _2660;
        if (_1909 > 0.0)
        {
            _2660 = abs((1.0 - _1900) / _1909);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1909 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1900 + 1.0) / _1909);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2660 = frontier_phi_47_44_ladder;
        }
        float _2662 = isnan(_2333) ? _2016 : (isnan(_2016) ? _2333 : min(_2016, _2333));
        float _2663 = isnan(_2660) ? _2662 : (isnan(_2662) ? _2660 : min(_2662, _2660));
        float _2667 = (_2663 * _1903) + _1892;
        float _2668 = (_2663 * _1906) + _1896;
        float _2669 = (_2663 * _1909) + _1900;
        float _2670 = _2663 * 9.9999997473787516355514526367188e-05;
        float _2671 = (-1.0) - _2670;
        float _2673 = _2670 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2669 > _2673) || ((_2669 < _2671) || ((_2668 > _2673) || ((_2668 < _2671) || ((_2667 < _2671) || (_2667 > _2673))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2787 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2669, cbModelParam._m0[17u].z, fma(_2668, cbModelParam._m0[17u].y, _2667 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2669, cbModelParam._m0[18u].z, fma(_2668, cbModelParam._m0[18u].y, _2667 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2669, cbModelParam._m0[19u].z, fma(_2668, cbModelParam._m0[19u].y, _2667 * cbModelParam._m0[19u].x))), _1839);
            frontier_phi_22_47_ladder = _2787.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2787.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2787.x * cbModelParam._m0[1u].z;
        }
        _1928 = frontier_phi_22_47_ladder_2;
        _1930 = frontier_phi_22_47_ladder_1;
        _1932 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_941, _942, _943), _1839);
        _1928 = _1912.x * cbModelParam._m0[1u].z;
        _1930 = _1912.y * cbModelParam._m0[1u].z;
        _1932 = _1912.z * cbModelParam._m0[1u].z;
    }
    float _1944 = ((((1.0 - _961) * ((_949 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_961 * _949)) * _933;
    float _1945 = _1944 * ((cbModelParam._m0[1u].w * (_1928 - _1830)) + _1830);
    float _1946 = _1944 * ((cbModelParam._m0[1u].w * (_1930 - _1832)) + _1832);
    float _1947 = _1944 * ((cbModelParam._m0[1u].w * (_1932 - _1834)) + _1834);
    float _1950 = fma(_1947, cbSceneParam._m0[89u].z, fma(_1946, cbSceneParam._m0[89u].y, _1945 * cbSceneParam._m0[89u].x));
    float _1953 = fma(_1947, cbSceneParam._m0[90u].z, fma(_1946, cbSceneParam._m0[90u].y, _1945 * cbSceneParam._m0[90u].x));
    float _1956 = fma(_1947, cbSceneParam._m0[91u].z, fma(_1946, cbSceneParam._m0[91u].y, _1945 * cbSceneParam._m0[91u].x));
    float _1990 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1994 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1998 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2002 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2003 = _1990 / _2002;
    float _2004 = _1994 / _2002;
    float _2005 = _1998 / _2002;
    float _2152;
    float _2153;
    float _2154;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2032 = ((uint(_2005 > cbSceneParam._m0[59u].y) + uint(_2005 > cbSceneParam._m0[59u].x)) + uint(_2005 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2033 = _2032 + 43u;
        uint _2041 = _2032 + 44u;
        uint _2049 = _2032 + 45u;
        uint _2057 = _2032 + 46u;
        float _2068 = fma(_2002, cbSceneParam._m0[_2033].w, fma(_1998, cbSceneParam._m0[_2033].z, fma(_1994, cbSceneParam._m0[_2033].y, _1990 * cbSceneParam._m0[_2033].x)));
        float _2072 = fma(_2002, cbSceneParam._m0[_2041].w, fma(_1998, cbSceneParam._m0[_2041].z, fma(_1994, cbSceneParam._m0[_2041].y, _1990 * cbSceneParam._m0[_2041].x)));
        float _2080 = fma(_2002, cbSceneParam._m0[_2057].w, fma(_1998, cbSceneParam._m0[_2057].z, fma(_1994, cbSceneParam._m0[_2057].y, _1990 * cbSceneParam._m0[_2057].x)));
        float _2085 = cbSceneParam._m0[33u].z * _2080;
        float _2087 = cbSceneParam._m0[33u].w * _2080;
        float _2090 = fma(_2002, cbSceneParam._m0[_2049].w, fma(_1998, cbSceneParam._m0[_2049].z, fma(_1994, cbSceneParam._m0[_2049].y, _1990 * cbSceneParam._m0[_2049].x))) / _2080;
        float _2138 = (cbSceneParam._m0[33u].x - sqrt(((_2004 * _2004) + (_2003 * _2003)) + (_2005 * _2005))) * cbSceneParam._m0[33u].y;
        float _4480 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
        float _2145 = (isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2085 + _2068) / _2080, (_2087 + _2072) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2087 + _2068) / _2080, (_2072 - _2085) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2068 - _2085) / _2080, (_2072 - _2087) / _2080), _2090), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2068 - _2087) / _2080, (_2085 + _2072) / _2080), _2090), 0.0)).x), vec4(0.25)));
        _2152 = 1.0 - (_2145 * cbSceneParam._m0[34u].x);
        _2153 = 1.0 - (_2145 * cbSceneParam._m0[34u].y);
        _2154 = 1.0 - (_2145 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2152 = 1.0;
        _2153 = 1.0;
        _2154 = 1.0;
    }
    float _2218;
    float _2220;
    float _2222;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2206 = fma(_2002, cbSceneParam._m0[63u].w, fma(_1998, cbSceneParam._m0[63u].z, fma(_1994, cbSceneParam._m0[63u].y, _1990 * cbSceneParam._m0[63u].x)));
        float _2207 = fma(_2002, cbSceneParam._m0[60u].w, fma(_1998, cbSceneParam._m0[60u].z, fma(_1994, cbSceneParam._m0[60u].y, _1990 * cbSceneParam._m0[60u].x))) / _2206;
        float _2208 = fma(_2002, cbSceneParam._m0[61u].w, fma(_1998, cbSceneParam._m0[61u].z, fma(_1994, cbSceneParam._m0[61u].y, _1990 * cbSceneParam._m0[61u].x))) / _2206;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2207 >= cbSceneParam._m0[64u].x) && (_2208 >= cbSceneParam._m0[64u].y)) && (_2207 <= cbSceneParam._m0[64u].z)) && (_2208 <= cbSceneParam._m0[64u].w))
        {
            float _2346 = fma(_2002, cbSceneParam._m0[62u].w, fma(_1998, cbSceneParam._m0[62u].z, fma(_1994, cbSceneParam._m0[62u].y, _1990 * cbSceneParam._m0[62u].x))) / _2206;
            float _2350 = isnan(cbSceneParam._m0[41u].w) ? _2346 : (isnan(_2346) ? cbSceneParam._m0[41u].w : max(_2346, cbSceneParam._m0[41u].w));
            float _2393 = (cbSceneParam._m0[33u].x - sqrt(((_2004 * _2004) + (_2003 * _2003)) + (_2005 * _2005))) * cbSceneParam._m0[33u].y;
            float _4496 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
            float _2400 = (isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2207, cbSceneParam._m0[33u].w + _2208), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2207, _2208 - cbSceneParam._m0[33u].z), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2207 - cbSceneParam._m0[33u].z, _2208 - cbSceneParam._m0[33u].w), _2350), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2207 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2208), _2350), 0.0)).x), vec4(0.25)));
            float _2404 = 1.0 - (_2400 * cbSceneParam._m0[34u].x);
            float _2405 = 1.0 - (_2400 * cbSceneParam._m0[34u].y);
            float _2406 = 1.0 - (_2400 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2406) ? _2154 : (isnan(_2154) ? _2406 : min(_2154, _2406));
            frontier_phi_34_33_ladder_1 = isnan(_2405) ? _2153 : (isnan(_2153) ? _2405 : min(_2153, _2405));
            frontier_phi_34_33_ladder_2 = isnan(_2404) ? _2152 : (isnan(_2152) ? _2404 : min(_2152, _2404));
        }
        else
        {
            frontier_phi_34_33_ladder = _2154;
            frontier_phi_34_33_ladder_1 = _2153;
            frontier_phi_34_33_ladder_2 = _2152;
        }
        _2218 = frontier_phi_34_33_ladder_2;
        _2220 = frontier_phi_34_33_ladder_1;
        _2222 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2218 = _2152;
        _2220 = _2153;
        _2222 = _2154;
    }
    uvec4 _2227 = floatBitsToUint(cbInstanceData._m0[_908 + 5u]);
    uint _2229 = _2227.x * 14u;
    uint _2230 = _2229 + 13u;
    float _2237 = _933 + (-1.0);
    float _2242 = (cbLight._m0[_2230].x * _2237) + 1.0;
    float _2243 = (cbLight._m0[_2230].y * _2237) + 1.0;
    float _2244 = (cbLight._m0[_2230].z * _2237) + 1.0;
    float _2245 = (cbLight._m0[_2230].w * _2237) + 1.0;
    uint _2246 = _2229 + 5u;
    float _2252 = isnan(1.0) ? _2243 : (isnan(_2243) ? 1.0 : min(_2243, 1.0));
    uint _2256 = _2229 + 4u;
    float _2265 = isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0));
    uint _2269 = _2229 | 1u;
    float _2280 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_782, _783, _784));
    float _2283 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_782, _783, _784));
    float _4532 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _4543 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
    float _2288 = (isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0))) * 0.3183098733425140380859375;
    float _2290 = (isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0))) * 0.3183098733425140380859375;
    float _2297 = ((cbLight._m0[_2246].x * _2252) * _2290) + (((cbLight._m0[_2256].x * _2218) * _2265) * _2288);
    float _2298 = ((_2252 * cbLight._m0[_2246].y) * _2290) + (((cbLight._m0[_2256].y * _2220) * _2265) * _2288);
    float _2299 = ((_2252 * cbLight._m0[_2246].z) * _2290) + (((cbLight._m0[_2256].z * _2222) * _2265) * _2288);
    uvec4 _2303 = floatBitsToUint(cbLight._m0[_2229 + 12u]);
    bool _2305 = _2303.x == 0u;
    float _2407;
    float _2409;
    float _2411;
    if (_2305)
    {
        _2407 = _2297;
        _2409 = _2298;
        _2411 = _2299;
    }
    else
    {
        uint _2415 = _2229 + 6u;
        float _2431 = (dot(vec3(cbLight._m0[_2229 + 2u].xyz), vec3(_782, _783, _784)) * 0.5) + 0.5;
        float _2432 = _2431 * _2431;
        float _4554 = isnan(0.0) ? _2432 : (isnan(_2432) ? 0.0 : max(_2432, 0.0));
        float _2433 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
        float _2434 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2407 = (((cbLight._m0[_2415].x * 0.3183098733425140380859375) * _2433) * _2434) + _2297;
        _2409 = (((cbLight._m0[_2415].y * 0.3183098733425140380859375) * _2433) * _2434) + _2298;
        _2411 = (((cbLight._m0[_2415].z * 0.3183098733425140380859375) * _2433) * _2434) + _2299;
    }
    bool _2414 = _2303.y == 0u;
    float _2469;
    float _2471;
    float _2473;
    if (_2414)
    {
        _2469 = _2407;
        _2471 = _2409;
        _2473 = _2411;
    }
    else
    {
        uint _2631 = _2229 + 7u;
        float _2647 = (dot(vec3(cbLight._m0[_2229 + 3u].xyz), vec3(_782, _783, _784)) * 0.5) + 0.5;
        float _2648 = _2647 * _2647;
        float _4570 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
        float _2649 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
        float _2650 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
        _2469 = (((cbLight._m0[_2631].x * 0.3183098733425140380859375) * _2649) * _2650) + _2407;
        _2471 = (((cbLight._m0[_2631].y * 0.3183098733425140380859375) * _2649) * _2650) + _2409;
        _2473 = (((cbLight._m0[_2631].z * 0.3183098733425140380859375) * _2649) * _2650) + _2411;
    }
    uint _2476 = _2229 + 8u;
    float _2489 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2229].w)) * _785) * 0.949999988079071044921875);
    float _2490 = _2489 * _2489;
    float _2491 = cbLight._m0[_2229].x + _861;
    float _2492 = cbLight._m0[_2229].y + _862;
    float _2493 = cbLight._m0[_2229].z + _863;
    float _2497 = inversesqrt(dot(vec3(_2491, _2492, _2493), vec3(_2491, _2492, _2493)));
    float _2498 = _2497 * _2491;
    float _2499 = _2497 * _2492;
    float _2500 = _2497 * _2493;
    float _2501 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2229].xyz));
    float _4586 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
    float _2504 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
    float _4597 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
    float _2505 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
    float _2506 = dot(vec3(_782, _783, _784), vec3(_2498, _2499, _2500));
    float _4608 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
    float _2509 = isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0));
    float _2510 = dot(vec3(cbLight._m0[_2229].xyz), vec3(_2498, _2499, _2500));
    float _4619 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2514 = _2490 * _2490;
    float _2518 = ((_2509 * _2509) * (_2514 + (-1.0))) + 1.0;
    float _2529 = (exp2(log2(1.0 - (isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2530 = 1.0 - _2490;
    float _2541 = (0.5 / (((_2505 * ((_2504 * _2530) + _2490)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2530) + _2490) * _2504))) * _2504;
    float _4630 = isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0));
    float _2543 = (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0))) * (_2514 / ((_2518 * _2518) * 3.141590118408203125));
    uint _2557 = _2229 + 9u;
    float _2568 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2269].w)) * _785) * 0.949999988079071044921875);
    float _2569 = _2568 * _2568;
    float _2570 = cbLight._m0[_2269].x + _861;
    float _2571 = cbLight._m0[_2269].y + _862;
    float _2572 = cbLight._m0[_2269].z + _863;
    float _2576 = inversesqrt(dot(vec3(_2570, _2571, _2572), vec3(_2570, _2571, _2572)));
    float _2577 = _2576 * _2570;
    float _2578 = _2576 * _2571;
    float _2579 = _2576 * _2572;
    float _2580 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2269].xyz));
    float _4641 = isnan(0.0) ? _2580 : (isnan(_2580) ? 0.0 : max(_2580, 0.0));
    float _2583 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _2584 = dot(vec3(_782, _783, _784), vec3(_2577, _2578, _2579));
    float _4652 = isnan(0.0) ? _2584 : (isnan(_2584) ? 0.0 : max(_2584, 0.0));
    float _2587 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
    float _2588 = dot(vec3(cbLight._m0[_2269].xyz), vec3(_2577, _2578, _2579));
    float _4663 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2592 = _2569 * _2569;
    float _2596 = ((_2587 * _2587) * (_2592 + (-1.0))) + 1.0;
    float _2605 = (exp2(log2(1.0 - (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2606 = 1.0 - _2569;
    float _2616 = (0.5 / (((_2505 * ((_2583 * _2606) + _2569)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2606) + _2569) * _2583))) * _2583;
    float _4674 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
    float _2618 = (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0))) * (_2592 / ((_2596 * _2596) * 3.141590118408203125));
    float _2628 = (((_2605 * cbLight._m0[_2557].x) * _2618) * _2252) + ((((cbLight._m0[_2476].x * _2218) * _2529) * _2543) * _2265);
    float _2629 = (((_2605 * cbLight._m0[_2557].y) * _2618) * _2252) + ((((cbLight._m0[_2476].y * _2220) * _2529) * _2543) * _2265);
    float _2630 = (((_2605 * cbLight._m0[_2557].z) * _2618) * _2252) + ((((cbLight._m0[_2476].z * _2222) * _2529) * _2543) * _2265);
    float _2686;
    float _2688;
    float _2690;
    if (_2305)
    {
        _2686 = _2628;
        _2688 = _2629;
        _2690 = _2630;
    }
    else
    {
        uint _2692 = _2229 + 2u;
        uint _2696 = _2229 + 10u;
        float _2710 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2692].w)) * _785) * 0.949999988079071044921875);
        float _2711 = _2710 * _2710;
        float _2712 = cbLight._m0[_2692].x + _861;
        float _2713 = cbLight._m0[_2692].y + _862;
        float _2714 = cbLight._m0[_2692].z + _863;
        float _2718 = inversesqrt(dot(vec3(_2712, _2713, _2714), vec3(_2712, _2713, _2714)));
        float _2719 = _2718 * _2712;
        float _2720 = _2718 * _2713;
        float _2721 = _2718 * _2714;
        float _2722 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2692].xyz));
        float _4685 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        float _2725 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
        float _2726 = dot(vec3(_782, _783, _784), vec3(_2719, _2720, _2721));
        float _4696 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
        float _2729 = isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0));
        float _2730 = dot(vec3(cbLight._m0[_2692].xyz), vec3(_2719, _2720, _2721));
        float _4707 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
        float _2734 = _2711 * _2711;
        float _2738 = ((_2729 * _2729) * (_2734 + (-1.0))) + 1.0;
        float _2747 = (exp2(log2(1.0 - (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2748 = 1.0 - _2711;
        float _2758 = (0.5 / (((_2505 * ((_2725 * _2748) + _2711)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2748) + _2711) * _2725))) * _2725;
        float _4718 = isnan(0.0) ? _2758 : (isnan(_2758) ? 0.0 : max(_2758, 0.0));
        float _2760 = (isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0))) * (_2734 / ((_2738 * _2738) * 3.141590118408203125));
        float _2761 = isnan(1.0) ? _2244 : (isnan(_2244) ? 1.0 : min(_2244, 1.0));
        _2686 = (((_2747 * cbLight._m0[_2696].x) * _2760) * _2761) + _2628;
        _2688 = (((_2747 * cbLight._m0[_2696].y) * _2760) * _2761) + _2629;
        _2690 = (((_2747 * cbLight._m0[_2696].z) * _2760) * _2761) + _2630;
    }
    float _2792;
    float _2794;
    float _2796;
    if (_2414)
    {
        _2792 = _2686;
        _2794 = _2688;
        _2796 = _2690;
    }
    else
    {
        uint _2803 = _2229 + 3u;
        uint _2807 = _2229 + 11u;
        float _2821 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2803].w)) * _785) * 0.949999988079071044921875);
        float _2822 = _2821 * _2821;
        float _2823 = cbLight._m0[_2803].x + _861;
        float _2824 = cbLight._m0[_2803].y + _862;
        float _2825 = cbLight._m0[_2803].z + _863;
        float _2829 = inversesqrt(dot(vec3(_2823, _2824, _2825), vec3(_2823, _2824, _2825)));
        float _2830 = _2829 * _2823;
        float _2831 = _2829 * _2824;
        float _2832 = _2829 * _2825;
        float _2833 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2803].xyz));
        float _4734 = isnan(0.0) ? _2833 : (isnan(_2833) ? 0.0 : max(_2833, 0.0));
        float _2836 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
        float _2837 = dot(vec3(_782, _783, _784), vec3(_2830, _2831, _2832));
        float _4745 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
        float _2840 = isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0));
        float _2841 = dot(vec3(cbLight._m0[_2803].xyz), vec3(_2830, _2831, _2832));
        float _4756 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
        float _2845 = _2822 * _2822;
        float _2849 = ((_2840 * _2840) * (_2845 + (-1.0))) + 1.0;
        float _2858 = (exp2(log2(1.0 - (isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2859 = 1.0 - _2822;
        float _2869 = (0.5 / (((_2505 * ((_2836 * _2859) + _2822)) + 9.9999999392252902907785028219223e-09) + (((_2505 * _2859) + _2822) * _2836))) * _2836;
        float _4767 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
        float _2871 = (isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0))) * (_2845 / ((_2849 * _2849) * 3.141590118408203125));
        float _2872 = isnan(1.0) ? _2245 : (isnan(_2245) ? 1.0 : min(_2245, 1.0));
        _2792 = (((_2858 * cbLight._m0[_2807].x) * _2871) * _2872) + _2686;
        _2794 = (((_2858 * cbLight._m0[_2807].y) * _2871) * _2872) + _2688;
        _2796 = (((_2858 * cbLight._m0[_2807].z) * _2871) * _2872) + _2690;
    }
    float _2938;
    float _2940;
    float _2942;
    float _2944;
    float _2946;
    float _2948;
    if (_2227.y == 0u)
    {
        uvec4 _2893 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2894 = _2893.x;
        uint _2905 = uint((float(_2893.y) * floor(float(uint(cbSceneParam._m0[85u].y * _870) / _2894))) + floor(float(uint(cbSceneParam._m0[85u].x * _869) / _2894)));
        float _2915 = (log2(_2005 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2916 = isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0));
        uint _2919 = uint(isnan(14.0) ? _2916 : (isnan(_2916) ? 14.0 : min(_2916, 14.0)));
        uvec4 _2924 = texelFetch(g_lightClusterGridBuffer, int(((_2919 << 2u) + (_2905 << 6u)) >> 2u));
        uint _2925 = _2924.x;
        uint _2926 = _2893.z;
        float _3050;
        float _3052;
        float _3054;
        float _3056;
        float _3058;
        float _3060;
        if (((((1u << ((_2926 >> 4u) & 15u)) + 4294967295u) & _2925) == 0u) || ((_2926 & 240u) == 0u))
        {
            _3050 = 0.0;
            _3052 = 0.0;
            _3054 = 0.0;
            _3056 = 0.0;
            _3058 = 0.0;
            _3060 = 0.0;
        }
        else
        {
            float _3051;
            float _3053;
            float _3055;
            float _3057;
            float _3059;
            float _3061;
            float _3203 = 0.0;
            float _3204 = 0.0;
            float _3205 = 0.0;
            float _3206 = 0.0;
            float _3207 = 0.0;
            float _3208 = 0.0;
            uint _3209 = 0u;
            uint _3218;
            bool _3219;
            for (;;)
            {
                _3218 = texelFetch(g_lightClassification, int((((_2919 << 5u) + (_2905 << 9u)) + (_3209 << 2u)) >> 2u)).x;
                _3219 = _3218 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3219)
                {
                    frontier_phi_66_pred = _3208;
                    frontier_phi_66_pred_1 = _3207;
                    frontier_phi_66_pred_2 = _3206;
                    frontier_phi_66_pred_3 = _3205;
                    frontier_phi_66_pred_4 = _3204;
                    frontier_phi_66_pred_5 = _3203;
                }
                else
                {
                    float _3327;
                    float _3328;
                    float _3329;
                    float _3330;
                    float _3331;
                    float _3332;
                    uint _3333;
                    _3327 = _3203;
                    _3328 = _3204;
                    _3329 = _3205;
                    _3330 = _3206;
                    _3331 = _3207;
                    _3332 = _3208;
                    _3333 = _3218;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    float _3263;
                    float _3264;
                    for (;;)
                    {
                        uint _3337 = uint(findLSB(_3333)) + (_3209 << 5u);
                        uint _3334 = (_3333 + 4294967295u) & _3333;
                        uint _3339 = _3337 * 48u;
                        vec4 _3353 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3339)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3339 + 3u)).x));
                        uint _3359 = (_3337 * 48u) + 4u;
                        vec4 _3372 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3359)).x, texelFetch(g_PointLightRenderingBuffer, int(_3359 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3359 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3359 + 3u)).x));
                        uint _3378 = (_3337 * 48u) + 8u;
                        vec3 _3389 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3378)).x, texelFetch(g_PointLightRenderingBuffer, int(_3378 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3378 + 2u)).x));
                        float _3393 = _3353.x - _2003;
                        float _3394 = _3353.y - _2004;
                        float _3395 = _3353.z - _2005;
                        float _3396 = dot(vec3(_3393, _3394, _3395), vec3(_3393, _3394, _3395));
                        float _3399 = inversesqrt(_3396);
                        float _3400 = _3399 * _3393;
                        float _3401 = _3399 * _3394;
                        float _3402 = _3399 * _3395;
                        float _3403 = dot(vec3(_889, _892, _895), vec3(_3400, _3401, _3402));
                        float _3408 = 1.0 - (_3396 * _3353.w);
                        float _4793 = isnan(0.0) ? _3408 : (isnan(_3408) ? 0.0 : max(_3408, 0.0));
                        float _3409 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
                        float _3410 = sqrt(_3396) * _3372.w;
                        float _3413 = 1.39999997615814208984375 / (_3410 + 1.39999997615814208984375);
                        float _3414 = _3413 * _3413;
                        float _3417 = ((1.0 - _3414) * _3403) + _3414;
                        float _3420 = _3410 * _3410;
                        float _3424 = ((isnan(0.0) ? _3417 : (isnan(_3417) ? 0.0 : max(_3417, 0.0))) * _3409) / ((_3420 * 0.699999988079071044921875) + 1.0);
                        float _3428 = (-0.0) - _2003;
                        float _3429 = (-0.0) - _2004;
                        float _3430 = (-0.0) - _2005;
                        float _3434 = inversesqrt(dot(vec3(_3428, _3429, _3430), vec3(_3428, _3429, _3430)));
                        float _3435 = _3434 * _3428;
                        float _3436 = _3434 * _3429;
                        float _3437 = _3434 * _3430;
                        float _3444 = exp2(log2(1.0 / ((_3420 * 3.5) + 5.0)) * 0.25);
                        float _3445 = 1.0 - _949;
                        float _3452 = sqrt(1.0 - ((1.0 - (_3445 * _3445)) * (1.0 - (_3444 * _3444))));
                        float _3453 = _3452 * _3452;
                        float _3454 = _3453 * _3453;
                        float _3455 = _3435 + _3400;
                        float _3456 = _3436 + _3401;
                        float _3457 = _3437 + _3402;
                        float _3461 = inversesqrt(dot(vec3(_3455, _3456, _3457), vec3(_3455, _3456, _3457)));
                        float _3465 = dot(vec3(_889, _892, _895), vec3(_3435, _3436, _3437));
                        float _4809 = isnan(0.0) ? _3465 : (isnan(_3465) ? 0.0 : max(_3465, 0.0));
                        float _3468 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
                        float _3469 = dot(vec3(_889, _892, _895), vec3(_3461 * _3455, _3461 * _3456, _3461 * _3457));
                        float _4820 = isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0));
                        float _3472 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
                        float _3476 = ((_3472 * _3472) * (_3454 + (-1.0))) + 1.0;
                        float _3477 = _3413 * _3453;
                        float _3478 = _3477 * _3477;
                        float _3481 = ((1.0 - _3478) * _3403) + _3478;
                        float _4831 = isnan(0.0) ? _3481 : (isnan(_3481) ? 0.0 : max(_3481, 0.0));
                        float _3482 = isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0));
                        float _3483 = 1.0 - _3453;
                        float _3493 = (0.5 / (((_3482 * ((_3468 * _3483) + _3453)) + 9.9999999392252902907785028219223e-09) + (((_3482 * _3483) + _3453) * _3468))) * _3482;
                        float _4842 = isnan(0.0) ? _3493 : (isnan(_3493) ? 0.0 : max(_3493, 0.0));
                        float _3504 = (((_3454 * 3.1415927410125732421875) * (isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0)))) / ((_3476 * _3476) * ((_3420 * 2.1991131305694580078125) + 3.141590118408203125))) * _3409;
                        _3262 = (_3424 * _3372.x) + _3330;
                        _3263 = (_3424 * _3372.y) + _3331;
                        _3264 = (_3424 * _3372.z) + _3332;
                        _3259 = (_3504 * _3389.x) + _3327;
                        _3260 = (_3504 * _3389.y) + _3328;
                        _3261 = (_3504 * _3389.z) + _3329;
                        if (_3334 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3327 = _3259;
                            _3328 = _3260;
                            _3329 = _3261;
                            _3330 = _3262;
                            _3331 = _3263;
                            _3332 = _3264;
                            _3333 = _3334;
                        }
                    }
                    frontier_phi_66_pred = _3264;
                    frontier_phi_66_pred_1 = _3263;
                    frontier_phi_66_pred_2 = _3262;
                    frontier_phi_66_pred_3 = _3261;
                    frontier_phi_66_pred_4 = _3260;
                    frontier_phi_66_pred_5 = _3259;
                }
                _3061 = frontier_phi_66_pred;
                _3059 = frontier_phi_66_pred_1;
                _3057 = frontier_phi_66_pred_2;
                _3055 = frontier_phi_66_pred_3;
                _3053 = frontier_phi_66_pred_4;
                _3051 = frontier_phi_66_pred_5;
                uint _3210 = _3209 + 1u;
                if (_3210 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3203 = _3051;
                    _3204 = _3053;
                    _3205 = _3055;
                    _3206 = _3057;
                    _3207 = _3059;
                    _3208 = _3061;
                    _3209 = _3210;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3050 = _3051;
            _3052 = _3053;
            _3054 = _3055;
            _3056 = _3057;
            _3058 = _3059;
            _3060 = _3061;
        }
        uvec4 _3064 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3065 = _3064.z;
        uint _3067 = (_3065 >> 8u) & 15u;
        float _3171;
        float _3173;
        float _3175;
        float _3177;
        float _3179;
        float _3181;
        if (((4294967295u << _3067) & _2925) == 0u)
        {
            _3171 = _3050;
            _3173 = _3052;
            _3175 = _3054;
            _3177 = _3056;
            _3179 = _3058;
            _3181 = _3060;
        }
        else
        {
            float _3196 = inversesqrt(dot(vec3(_2003, _2004, _2005), vec3(_2003, _2004, _2005)));
            float _3197 = _3196 * _2003;
            float _3198 = _3196 * _2004;
            float _3199 = _3196 * _2005;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3067 < ((_3065 >> 12u) & 15u))
            {
                float _3172;
                float _3174;
                float _3176;
                float _3178;
                float _3180;
                float _3182;
                float _3310 = _3050;
                float _3311 = _3052;
                float _3312 = _3054;
                float _3313 = _3056;
                float _3314 = _3058;
                float _3315 = _3060;
                uint _3316 = _3067;
                uint _3325;
                bool _3326;
                for (;;)
                {
                    _3325 = texelFetch(g_lightClassification, int((((_2919 << 5u) + (_2905 << 9u)) + (_3316 << 2u)) >> 2u)).x;
                    _3326 = _3325 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3326)
                    {
                        frontier_phi_72_pred = _3315;
                        frontier_phi_72_pred_1 = _3314;
                        frontier_phi_72_pred_2 = _3313;
                        frontier_phi_72_pred_3 = _3312;
                        frontier_phi_72_pred_4 = _3311;
                        frontier_phi_72_pred_5 = _3310;
                    }
                    else
                    {
                        float _3509;
                        float _3510;
                        float _3511;
                        float _3512;
                        float _3513;
                        float _3514;
                        float _3803;
                        float _3804;
                        float _3805;
                        float _3806;
                        float _3807;
                        float _3808;
                        float _3522 = _3310;
                        float _3523 = _3311;
                        float _3524 = _3312;
                        float _3525 = _3313;
                        float _3526 = _3314;
                        float _3527 = _3315;
                        uint _3528 = _3325;
                        uint _3529;
                        vec4 _3554;
                        float _3555;
                        vec4 _3570;
                        vec3 _3582;
                        vec4 _3597;
                        vec4 _3612;
                        float _3659;
                        bool _3660;
                        for (;;)
                        {
                            uint _3539 = ((_3316 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3528));
                            _3529 = (_3528 + 4294967295u) & _3528;
                            uint _3541 = _3539 * 40u;
                            _3554 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3541)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3541 + 3u)).x));
                            _3555 = _3554.w;
                            uint _3557 = (_3539 * 40u) + 4u;
                            _3570 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3557)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3557 + 3u)).x));
                            uint _3572 = (_3539 * 40u) + 8u;
                            _3582 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3572)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3572 + 2u)).x));
                            uint _3584 = (_3539 * 40u) + 16u;
                            _3597 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3584)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3584 + 3u)).x));
                            uint _3599 = (_3539 * 40u) + 20u;
                            _3612 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3599)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3599 + 3u)).x));
                            uint _3615 = (_3539 * 40u) + 24u;
                            vec4 _3628 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3615)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3615 + 3u)).x));
                            uint _3634 = (_3539 * 40u) + 28u;
                            vec4 _3647 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3634)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3634 + 3u)).x));
                            _3659 = fma(_2005, _3647.z, fma(_2004, _3647.y, _3647.x * _2003)) + _3647.w;
                            _3660 = !((fma(_2005, _3628.z, fma(_2004, _3628.y, _3628.x * _2003)) + _3628.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3660)
                            {
                                float _3687 = _3554.x - _2003;
                                float _3688 = _3554.y - _2004;
                                float _3689 = _3554.z - _2005;
                                float _3690 = dot(vec3(_3687, _3688, _3689), vec3(_3687, _3688, _3689));
                                float _3693 = inversesqrt(_3690);
                                float _3694 = _3693 * _3687;
                                float _3695 = _3693 * _3688;
                                float _3696 = _3693 * _3689;
                                float _3700 = 1.0 - (_3690 / (_3555 * _3555));
                                float _4853 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3701 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                                float _3705 = sqrt(_3690) * _3570.w;
                                float _3707 = 1.39999997615814208984375 / (_3705 + 1.39999997615814208984375);
                                float _3708 = _3707 * _3707;
                                float _3711 = ((1.0 - _3708) * dot(vec3(_3694, _3695, _3696), vec3(_889, _892, _895))) + _3708;
                                float _3714 = _3705 * _3705;
                                float _3718 = (fma(_2005, _3597.z, fma(_2004, _3597.y, _3597.x * _2003)) + _3597.w) / _3659;
                                float _3719 = (fma(_2005, _3612.z, fma(_2004, _3612.y, _3612.x * _2003)) + _3612.w) / _3659;
                                float _3723 = 1.0 - dot(vec2(_3718, _3719), vec2(_3718, _3719));
                                float _4869 = isnan(0.0) ? _3723 : (isnan(_3723) ? 0.0 : max(_3723, 0.0));
                                float _3724 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
                                float _3725 = _3724 * (((isnan(0.0) ? _3711 : (isnan(_3711) ? 0.0 : max(_3711, 0.0))) * _3701) / ((_3714 * 0.699999988079071044921875) + 1.0));
                                float _3737 = exp2(log2(1.0 / ((_3714 * 3.5) + 5.0)) * 0.25);
                                float _3738 = 1.0 - _949;
                                float _3745 = sqrt(1.0 - ((1.0 - (_3738 * _3738)) * (1.0 - (_3737 * _3737))));
                                float _3746 = _3745 * _3745;
                                float _3747 = _3746 * _3746;
                                float _3748 = _3694 - _3197;
                                float _3749 = _3695 - _3198;
                                float _3750 = _3696 - _3199;
                                float _3754 = inversesqrt(dot(vec3(_3748, _3749, _3750), vec3(_3748, _3749, _3750)));
                                float _3758 = dot(vec3(_889, _892, _895), vec3((-0.0) - _3197, (-0.0) - _3198, (-0.0) - _3199));
                                float _4880 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3761 = isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0));
                                float _3762 = dot(vec3(_889, _892, _895), vec3(_3754 * _3748, _3754 * _3749, _3754 * _3750));
                                float _4891 = isnan(0.0) ? _3762 : (isnan(_3762) ? 0.0 : max(_3762, 0.0));
                                float _3765 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
                                float _3769 = ((_3765 * _3765) * (_3747 + (-1.0))) + 1.0;
                                float _3770 = _3707 * _3746;
                                float _3771 = _3770 * _3770;
                                float _3777 = ((1.0 - _3771) * dot(vec3(_889, _892, _895), vec3(_3694, _3695, _3696))) + _3771;
                                float _4902 = isnan(0.0) ? _3777 : (isnan(_3777) ? 0.0 : max(_3777, 0.0));
                                float _3778 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
                                float _3779 = 1.0 - _3746;
                                float _3789 = (0.5 / (((_3778 * ((_3761 * _3779) + _3746)) + 9.9999999392252902907785028219223e-09) + (((_3778 * _3779) + _3746) * _3761))) * _3778;
                                float _4913 = isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0));
                                float _3799 = (_3724 * _3701) * (((_3747 * 3.1415927410125732421875) * (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0)))) / ((_3769 * _3769) * ((_3714 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3725 * _3570.y;
                                frontier_phi_78_pred_1 = _3725 * _3570.x;
                                frontier_phi_78_pred_2 = _3799 * _3582.z;
                                frontier_phi_78_pred_3 = _3799 * _3582.y;
                                frontier_phi_78_pred_4 = _3799 * _3582.x;
                                frontier_phi_78_pred_5 = _3725 * _3570.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3807 = frontier_phi_78_pred;
                            _3806 = frontier_phi_78_pred_1;
                            _3805 = frontier_phi_78_pred_2;
                            _3804 = frontier_phi_78_pred_3;
                            _3803 = frontier_phi_78_pred_4;
                            _3808 = frontier_phi_78_pred_5;
                            _3512 = _3806 + _3525;
                            _3513 = _3807 + _3526;
                            _3514 = _3808 + _3527;
                            _3509 = _3803 + _3522;
                            _3510 = _3804 + _3523;
                            _3511 = _3805 + _3524;
                            if (_3529 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3522 = _3509;
                                _3523 = _3510;
                                _3524 = _3511;
                                _3525 = _3512;
                                _3526 = _3513;
                                _3527 = _3514;
                                _3528 = _3529;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3514;
                        frontier_phi_72_pred_1 = _3513;
                        frontier_phi_72_pred_2 = _3512;
                        frontier_phi_72_pred_3 = _3511;
                        frontier_phi_72_pred_4 = _3510;
                        frontier_phi_72_pred_5 = _3509;
                    }
                    _3182 = frontier_phi_72_pred;
                    _3180 = frontier_phi_72_pred_1;
                    _3178 = frontier_phi_72_pred_2;
                    _3176 = frontier_phi_72_pred_3;
                    _3174 = frontier_phi_72_pred_4;
                    _3172 = frontier_phi_72_pred_5;
                    uint _3317 = _3316 + 1u;
                    if (_3317 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3310 = _3172;
                        _3311 = _3174;
                        _3312 = _3176;
                        _3313 = _3178;
                        _3314 = _3180;
                        _3315 = _3182;
                        _3316 = _3317;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3182;
                frontier_phi_60_61_ladder_1 = _3180;
                frontier_phi_60_61_ladder_2 = _3176;
                frontier_phi_60_61_ladder_3 = _3174;
                frontier_phi_60_61_ladder_4 = _3172;
                frontier_phi_60_61_ladder_5 = _3178;
            }
            else
            {
                frontier_phi_60_61_ladder = _3060;
                frontier_phi_60_61_ladder_1 = _3058;
                frontier_phi_60_61_ladder_2 = _3054;
                frontier_phi_60_61_ladder_3 = _3052;
                frontier_phi_60_61_ladder_4 = _3050;
                frontier_phi_60_61_ladder_5 = _3056;
            }
            _3171 = frontier_phi_60_61_ladder_4;
            _3173 = frontier_phi_60_61_ladder_3;
            _3175 = frontier_phi_60_61_ladder_2;
            _3177 = frontier_phi_60_61_ladder_5;
            _3179 = frontier_phi_60_61_ladder_1;
            _3181 = frontier_phi_60_61_ladder;
        }
        float _3186 = isnan(1.0) ? _933 : (isnan(_933) ? 1.0 : min(_933, 1.0));
        _2938 = (_3186 * _3177) + _2469;
        _2940 = (_3186 * _3179) + _2471;
        _2942 = (_3186 * _3181) + _2473;
        _2944 = ((_3171 * 0.039999999105930328369140625) * _3186) + _2792;
        _2946 = ((_3173 * 0.039999999105930328369140625) * _3186) + _2794;
        _2948 = ((_3175 * 0.039999999105930328369140625) * _3186) + _2796;
    }
    else
    {
        _2938 = _2469;
        _2940 = _2471;
        _2942 = _2473;
        _2944 = _2792;
        _2946 = _2794;
        _2948 = _2796;
    }
    uint _2954 = _909 + uint(cbMatDynParam._m0[0u].w);
    float _2960 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2966 = (((((_2960 * cbMtdParam._m0[14u].x) * _664.x) * _687) * _761) * (((1.0 - _740) * cbMtdParam._m0[20u].w) + _740)) * cbInstanceData._m0[_2954].x;
    float _2972 = (((((_2960 * cbMtdParam._m0[14u].y) * _664.y) * _687) * _761) * (((1.0 - _742) * cbMtdParam._m0[20u].w) + _742)) * cbInstanceData._m0[_2954].y;
    float _2978 = (((((_2960 * cbMtdParam._m0[14u].z) * _664.z) * _687) * _761) * (((1.0 - _744) * cbMtdParam._m0[20u].w) + _744)) * cbInstanceData._m0[_2954].z;
    float _4929 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    float _4940 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _4951 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
    float _2995 = (((isnan(1.0) ? _4929 : (isnan(_4929) ? 1.0 : min(_4929, 1.0))) * (_2938 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _933))) + ((_2944 + ((isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) * _1739)) * cbPerFrame._m0[3u].x)) + _2966;
    float _2997 = (_2972 + ((_2946 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1739)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4940 : (isnan(_4940) ? 1.0 : min(_4940, 1.0))) * (_2940 + ((isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))) * _933)));
    float _2999 = (_2978 + ((_2948 + ((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1739)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0))) * (_2942 + ((isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))) * _933)));
    float _4977 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3012 = isnan(1.0) ? _4977 : (isnan(_4977) ? 1.0 : min(_4977, 1.0));
    uint _3013 = _908 + 6u;
    float _3021 = _869 / cbSceneParam._m0[86u].x;
    float _3022 = _870 / cbSceneParam._m0[86u].y;
    vec4 _3036 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3021, _3022, (log2((isnan(cbSceneParam._m0[77u].w) ? _804 : (isnan(_804) ? cbSceneParam._m0[77u].w : min(_804, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3038 = _3036.x;
    float _3039 = _3036.y;
    float _3040 = _3036.z;
    float _3041 = _3036.w;
    float _3112;
    float _3114;
    float _3116;
    float _3118;
    if (_804 > cbSceneParam._m0[78u].w)
    {
        float _3075 = isnan(_804) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _804 : min(cbSceneParam._m0[80u].w, _804));
        float _3076 = _3075 / _804;
        float _3087 = _3076 * _854;
        float _3088 = _855 * _3076;
        float _3089 = (-0.0) - _3088;
        float _3090 = _3076 * _856;
        float _3092 = (cbSceneParam._m0[77u].w * _3089) / _3075;
        float _3093 = _3092 + cbSceneParam._m0[79u].w;
        float _3094 = cbSceneParam._m0[79u].w - _3088;
        float _3100 = sqrt(((_3087 * _3087) + (_3088 * _3088)) + (_3090 * _3090));
        float _3103 = (1.0 - (cbSceneParam._m0[77u].w / _3075)) * _3100;
        float _3108 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3110 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3272;
        if (abs((_3089 - _3092) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3272 = ((((_3093 > 0.0) ? exp2(_3108 * _3093) : (2.0 - exp2(_3110 * _3093))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3103;
        }
        else
        {
            float _3232 = 1.0 / cbSceneParam._m0[80u].x;
            float _3233 = isnan(_3094) ? _3093 : (isnan(_3093) ? _3094 : max(_3093, _3094));
            float _3234 = isnan(_3094) ? _3093 : (isnan(_3093) ? _3094 : min(_3093, _3094));
            float _3243 = isnan(0.0) ? _3233 : (isnan(_3233) ? 0.0 : min(_3233, 0.0));
            float _3244 = isnan(0.0) ? _3234 : (isnan(_3234) ? 0.0 : min(_3234, 0.0));
            _3272 = ((abs(_3100 / _3089) * cbSceneParam._m0[80u].y) * ((((_3243 - _3244) * 2.0) - ((exp2(_3108 * (isnan(0.0) ? _3233 : (isnan(_3233) ? 0.0 : max(_3233, 0.0)))) - exp2(_3108 * (isnan(0.0) ? _3234 : (isnan(_3234) ? 0.0 : max(_3234, 0.0))))) * _3232)) - ((exp2(_3110 * _3243) - exp2(_3110 * _3244)) * _3232))) + (_3103 * cbSceneParam._m0[80u].z);
        }
        vec4 _3274 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3021, _3022, 1.0), 0.0);
        float _3283 = exp2((_3272 * (-1.44269502162933349609375)) * (1.0 - _3274.w));
        float _3284 = log2(_3283);
        float _3300 = log2(_3041);
        _3112 = (exp2(_3300 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].x)) * _3274.x) / cbSceneParam._m0[78u].x)) + _3038;
        _3114 = (exp2(_3300 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].y)) * _3274.y) / cbSceneParam._m0[78u].y)) + _3039;
        _3116 = (exp2(_3300 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3284 * cbSceneParam._m0[78u].z)) * _3274.z) / cbSceneParam._m0[78u].z)) + _3040;
        _3118 = _3283 * _3041;
    }
    else
    {
        _3112 = _3038;
        _3114 = _3039;
        _3116 = _3040;
        _3118 = _3041;
    }
    float _3130 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3131 = _3130 == 3.0;
    float _3132 = log2(_3118);
    float _3136 = exp2(_3132 * cbSceneParam._m0[78u].x);
    float _3137 = exp2(_3132 * cbSceneParam._m0[78u].y);
    float _3138 = exp2(_3132 * cbSceneParam._m0[78u].z);
    float _3139 = _3136 * (isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0)));
    float _3140 = _3137 * (isnan(0.0) ? _2997 : (isnan(_2997) ? 0.0 : max(_2997, 0.0)));
    float _3141 = _3138 * (isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0)));
    float _3150 = (_3130 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3150 * (_3131 ? _3139 : (_3139 + (cbSceneParam._m0[72u].w * _3112)));
    SV_Target.y = _3150 * (_3131 ? _3140 : (_3140 + (cbSceneParam._m0[72u].w * _3114)));
    SV_Target.z = _3150 * (_3131 ? _3141 : (_3141 + (cbSceneParam._m0[72u].w * _3116)));
    SV_Target.w = cbInstanceData._m0[_3013].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2966) * _3012) * _3136) * _3150;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2972) * _3012) * _3137) * _3150;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2978) * _3012) * _3138) * _3150;
    SV_Target_1.w = cbInstanceData._m0[_3013].w;
}


