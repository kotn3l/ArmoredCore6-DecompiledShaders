#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_20;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1337;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _220 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _221 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _222 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _228 = inversesqrt(dot(vec3(_220, _221, _222), vec3(_220, _221, _222)));
    float _235 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _242 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _264 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _270 = _264.x * cbMtdParam._m0[10u].x;
    float _271 = _264.y * cbMtdParam._m0[10u].y;
    float _272 = _264.z * cbMtdParam._m0[10u].z;
    vec4 _291 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _310 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _337 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _347 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _310.x) * 2.0) - _337)) + 1.0;
    float _3979 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _348 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    float _355 = (_348 * ((_291.x * cbMtdParam._m0[11u].x) - _270)) + _270;
    float _356 = (_348 * ((_291.y * cbMtdParam._m0[11u].y) - _271)) + _271;
    float _357 = (_348 * ((_291.z * cbMtdParam._m0[11u].z) - _272)) + _272;
    vec4 _376 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _389 = (((((1.0 - _310.y) * 2.0) - _337) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3990 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3990 : (isnan(_3990) ? 1.0 : min(_3990, 1.0));
    float _397 = (((_376.x * cbMtdParam._m0[12u].x) - _355) * _390) + _355;
    float _398 = (_390 * ((_376.y * cbMtdParam._m0[12u].y) - _356)) + _356;
    float _399 = (_390 * ((_376.z * cbMtdParam._m0[12u].z) - _357)) + _357;
    vec4 _417 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _430 = (((((1.0 - _310.z) * 2.0) - _337) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _4001 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _4001 : (isnan(_4001) ? 1.0 : min(_4001, 1.0));
    vec4 _459 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _467 = ((((((_417.x * cbMtdParam._m0[13u].x) - _397) * _431) + _397) * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _459.x;
    float _470 = ((((_431 * ((_417.y * cbMtdParam._m0[13u].y) - _398)) + _398) * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _459.y;
    float _473 = ((((_431 * ((_417.z * cbMtdParam._m0[13u].z) - _399)) + _399) * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _459.z;
    vec4 _499 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    vec4 _518 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _521 = _518.x + 0.00999999977648258209228515625;
    float _528 = (TEXCOORD_8 - ((cbMtdParam._m0[20u].x * (1.0 - TEXCOORD_8)) * _521)) * (cbMtdParam._m0[19u].w + 1.0);
    float _4012 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _529 = isnan(1.0) ? _4012 : (isnan(_4012) ? 1.0 : min(_4012, 1.0));
    float _536 = (_529 * ((_499.x * cbMtdParam._m0[16u].x) - _467)) + _467;
    float _537 = (_529 * ((_499.y * cbMtdParam._m0[16u].y) - _470)) + _470;
    float _538 = (_529 * ((_499.z * cbMtdParam._m0[16u].z) - _473)) + _473;
    vec4 _551 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _572 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _574 = _572.x;
    float _575 = _572.y;
    float _576 = _572.z;
    vec4 _588 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _599 = ((_588.x - _574) * _348) + _574;
    float _600 = ((_588.y - _575) * _348) + _575;
    float _601 = ((_588.z - _576) * _348) + _576;
    vec4 _614 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _625 = ((_614.x - _599) * _390) + _599;
    float _626 = ((_614.y - _600) * _390) + _600;
    float _627 = ((_614.z - _601) * _390) + _601;
    vec4 _640 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _653 = ((_640.z - _627) * _431) + _627;
    float _656 = ((((_640.x - _625) * _431) + _625) * 2.0) + (-1.0);
    float _657 = ((((_640.y - _626) * _431) + _626) * 2.0) + (-1.0);
    float _658 = dot(vec2(_656, _657), vec2(_656, _657));
    float _4023 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _663 = sqrt(1.0 - (isnan(1.0) ? _4023 : (isnan(_4023) ? 1.0 : min(_4023, 1.0))));
    float _668 = (((_551.z - _653) * TEXCOORD_8) * cbMtdParam._m0[20u].y) + _653;
    vec4 _698 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _712 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4034 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _713 = isnan(1.0) ? _4034 : (isnan(_4034) ? 1.0 : min(_4034, 1.0));
    float _721 = (((_713 * _713) * (3.0 - (_713 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _729 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _737 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4045 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
    float _738 = isnan(1.0) ? _4045 : (isnan(_4045) ? 1.0 : min(_4045, 1.0));
    float _742 = (_738 * _738) * (3.0 - (_738 * 2.0));
    float _743 = _742 * cbMtdParam._m0[22u].x;
    float _744 = _742 * cbMtdParam._m0[22u].y;
    float _745 = sin(_729);
    float _746 = cos(_729);
    float _747 = TEXCOORD.z - _743;
    float _748 = TEXCOORD.w - _744;
    vec4 _768 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_743 + fma(_748, (-0.0) - _745, _747 * _746))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_748, _746, _747 * _745) + _744)) + cbTextureTilingScale._m0[2u].w));
    float _774 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _768.x;
    float _776 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _768.y;
    float _778 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _768.z;
    float _794 = (TEXCOORD_5.x - ((_521 * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _4056 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    float _795 = isnan(1.0) ? _4056 : (isnan(_4056) ? 1.0 : min(_4056, 1.0));
    float _801 = ((((_551.x * 2.0) + (-1.0)) * TEXCOORD_8) * cbMtdParam._m0[19u].y) + _656;
    float _802 = ((((_551.y * 2.0) + (-1.0)) * TEXCOORD_9) * cbMtdParam._m0[19u].y) + _657;
    float _805 = fma(_663, _235 * NORMAL.x, fma(_802, _242 * TANGENT.x, (_228 * _220) * _801));
    float _808 = fma(_663, _235 * NORMAL.y, fma(_802, _242 * TANGENT.y, (_228 * _221) * _801));
    float _811 = fma(_663, _235 * NORMAL.z, fma(_802, _242 * TANGENT.z, (_228 * _222) * _801));
    float _815 = inversesqrt(dot(vec3(_805, _808, _811), vec3(_805, _808, _811)));
    float _816 = _815 * _805;
    float _817 = _815 * _808;
    float _818 = _815 * _811;
    float _4067 = isnan(0.0) ? _668 : (isnan(_668) ? 0.0 : max(_668, 0.0));
    float _819 = isnan(1.0) ? _4067 : (isnan(_4067) ? 1.0 : min(_4067, 1.0));
    float _4078 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _4089 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _4100 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _838 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _878 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _888 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _878);
    float _889 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _878);
    float _890 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _878);
    float _894 = inversesqrt(dot(vec3(_888, _889, _890), vec3(_888, _889, _890)));
    float _895 = _888 * _894;
    float _896 = _889 * _894;
    float _897 = _890 * _894;
    float _903 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _904 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _922 = fma(_818, cbSceneParam._m0[5u].z, fma(_817, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _816));
    float _925 = fma(_818, cbSceneParam._m0[6u].z, fma(_817, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _816));
    float _928 = fma(_818, cbSceneParam._m0[7u].z, fma(_817, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _816));
    uint _941 = uint(roundEven(NORMAL.w)) * 13u;
    uint _942 = _941 + 9u;
    uint _943 = _942 + uint(cbMatDynParam._m0[0u].w);
    float _949 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4078 : (isnan(_4078) ? 1.0 : min(_4078, 1.0)))) * cbInstanceData._m0[_943].x;
    float _950 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0)))) * cbInstanceData._m0[_943].y;
    float _951 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0)))) * cbInstanceData._m0[_943].z;
    float _4111 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _952 = isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0));
    float _4122 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
    float _953 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
    float _4133 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
    float _954 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
    vec4 _963 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _903, cbSceneParam._m0[86u].y * _904));
    float _966 = _963.x * TEXCOORD_5.w;
    float _967 = dot(vec3(_816, _817, _818), vec3(_895, _896, _897));
    float _970 = _967 * 2.0;
    float _974 = (_970 * _816) - _895;
    float _975 = (_970 * _817) - _896;
    float _976 = (_970 * _818) - _897;
    float _980 = abs(dot(vec3(_895, _896, _897), vec3(_816, _817, _818)));
    float _4144 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _982 = sqrt(_819);
    float _994 = exp2((_982 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_982 * 3.0));
    float _1026 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1030 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1034 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1336;
    float _1338;
    float _1339;
    float _1340;
    float _1341;
    float _1342;
    float _1343;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1061 = fma(_1034, cbModelParam._m0[26u].z, fma(_1030, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1026));
        float _1065 = fma(_1034, cbModelParam._m0[27u].z, fma(_1030, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1026));
        float _1069 = fma(_1034, cbModelParam._m0[28u].z, fma(_1030, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1026));
        float _1094 = _1026 + _816;
        float _1095 = _1030 + _817;
        float _1096 = _1034 + _818;
        float _1106 = fma(_1096, cbModelParam._m0[26u].z, fma(_1095, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1094)) - _1061;
        float _1107 = fma(_1096, cbModelParam._m0[27u].z, fma(_1095, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1094)) - _1065;
        float _1108 = fma(_1096, cbModelParam._m0[28u].z, fma(_1095, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1094)) - _1069;
        float _1112 = inversesqrt(dot(vec3(_1106, _1107, _1108), vec3(_1106, _1107, _1108)));
        float _1125 = ((_1112 * _1106) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1061 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1126 = ((_1112 * _1107) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1065 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1127 = ((_1112 * _1108) / cbModelParam._m0[34u].z) + ((((((_1069 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1130 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1125, _1126, _1127), 0.0);
        vec4 _1137 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1125, _1126, _1127), 0.0);
        vec4 _1144 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1125, _1126, _1127), 0.0);
        vec4 _1151 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1125, _1126, _1127), 0.0);
        float _1164 = exp2((_1130.w + (-0.5)) * 20.0) * 2.0;
        float _1165 = _1164 * (_1130.x + (-0.5));
        float _1166 = _1164 * (_1130.y + (-0.5));
        float _1167 = _1164 * (_1130.z + (-0.5));
        float _1174 = exp2((_1137.w + (-0.5)) * 20.0) * 2.0;
        float _1175 = _1174 * (_1137.x + (-0.5));
        float _1176 = _1174 * (_1137.y + (-0.5));
        float _1177 = _1174 * (_1137.z + (-0.5));
        float _1184 = exp2((_1144.w + (-0.5)) * 20.0) * 2.0;
        float _1185 = _1184 * (_1144.x + (-0.5));
        float _1186 = _1184 * (_1144.y + (-0.5));
        float _1187 = _1184 * (_1144.z + (-0.5));
        float _1194 = exp2((_1151.w + (-0.5)) * 20.0) * 2.0;
        float _1195 = _1194 * (_1151.x + (-0.5));
        float _1196 = _1194 * (_1151.y + (-0.5));
        float _1197 = _1194 * (_1151.z + (-0.5));
        float _1198 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1199 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1200 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1201 = _1165 * 0.5;
        float _1202 = _1175 * 0.5;
        float _1203 = _1185 * 0.5;
        float _1204 = dot(vec3(_1201, _1202, _1203), vec3(_1201, _1202, _1203));
        float _1209 = (_1204 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1204);
        float _1218 = (dot(vec3(_816, _817, _818), vec3(_1209 * _1201, _1209 * _1202, _1209 * _1203)) + 1.0) * 0.5;
        float _4170 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1228 = sqrt(((_1202 * _1202) + (_1201 * _1201)) + (_1203 * _1203)) / (_1198 + 9.9999997473787516355514526367188e-06);
        float _4181 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
        float _1230 = _1229 * 2.0;
        float _1234 = (1.0 - _1229) / (_1229 + 1.0);
        float _4192 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
        float _1244 = ((((1.0 - _1235) * (_1230 + 2.0)) * exp2(log2(isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_1230 + 1.0))) + _1235) * _1198;
        float _1245 = _1166 * 0.5;
        float _1246 = _1176 * 0.5;
        float _1247 = _1186 * 0.5;
        float _1248 = dot(vec3(_1245, _1246, _1247), vec3(_1245, _1246, _1247));
        float _1253 = (_1248 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1248);
        float _1261 = (dot(vec3(_816, _817, _818), vec3(_1253 * _1245, _1253 * _1246, _1253 * _1247)) + 1.0) * 0.5;
        float _4203 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1270 = sqrt(((_1246 * _1246) + (_1245 * _1245)) + (_1247 * _1247)) / (_1199 + 9.9999997473787516355514526367188e-06);
        float _4214 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
        float _1272 = _1271 * 2.0;
        float _1276 = (1.0 - _1271) / (_1271 + 1.0);
        float _4225 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
        float _1286 = ((((1.0 - _1277) * (_1272 + 2.0)) * exp2(log2(isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0))) * (_1272 + 1.0))) + _1277) * _1199;
        float _1287 = _1167 * 0.5;
        float _1288 = _1177 * 0.5;
        float _1289 = _1187 * 0.5;
        float _1290 = dot(vec3(_1287, _1288, _1289), vec3(_1287, _1288, _1289));
        float _1295 = (_1290 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1290);
        float _1303 = (dot(vec3(_816, _817, _818), vec3(_1295 * _1287, _1295 * _1288, _1295 * _1289)) + 1.0) * 0.5;
        float _4236 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1312 = sqrt(((_1288 * _1288) + (_1287 * _1287)) + (_1289 * _1289)) / (_1200 + 9.9999997473787516355514526367188e-06);
        float _4247 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0));
        float _1314 = _1313 * 2.0;
        float _1318 = (1.0 - _1313) / (_1313 + 1.0);
        float _4258 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
        float _1328 = ((((1.0 - _1319) * (_1314 + 2.0)) * exp2(log2(isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * (_1314 + 1.0))) + _1319) * _1200;
        _1336 = _1167;
        _1338 = _1166;
        _1339 = _1165;
        _1340 = _1177;
        _1341 = _1176;
        _1342 = _1175;
        _1343 = _1187;
        _1344 = _1186;
        _1345 = _1185;
        _1346 = _1200;
        _1347 = _1199;
        _1348 = _1198;
        _1349 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0)));
        _1350 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0)));
        _1351 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)));
    }
    else
    {
        _1336 = _1337;
        _1338 = _1337;
        _1339 = _1337;
        _1340 = _1337;
        _1341 = _1337;
        _1342 = _1337;
        _1343 = _1337;
        _1344 = _1337;
        _1345 = _1337;
        _1346 = _1337;
        _1347 = _1337;
        _1348 = _1337;
        _1349 = 0.0;
        _1350 = 0.0;
        _1351 = 0.0;
    }
    float _1646;
    float _1647;
    float _1648;
    float _1649;
    float _1650;
    float _1651;
    float _1652;
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1377 = fma(_1034, cbModelParam._m0[30u].z, fma(_1030, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1026));
        float _1381 = fma(_1034, cbModelParam._m0[31u].z, fma(_1030, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1026));
        float _1385 = fma(_1034, cbModelParam._m0[32u].z, fma(_1030, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1026));
        float _1408 = _1026 + _816;
        float _1409 = _1030 + _817;
        float _1410 = _1034 + _818;
        float _1420 = fma(_1410, cbModelParam._m0[30u].z, fma(_1409, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1408)) - _1377;
        float _1421 = fma(_1410, cbModelParam._m0[31u].z, fma(_1409, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1408)) - _1381;
        float _1422 = fma(_1410, cbModelParam._m0[32u].z, fma(_1409, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1408)) - _1385;
        float _1426 = inversesqrt(dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422)));
        float _1439 = ((_1426 * _1420) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1377 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1440 = ((_1426 * _1421) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1381 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1441 = ((_1426 * _1422) / cbModelParam._m0[35u].z) + ((((((_1385 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1443 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1439, _1440, _1441), 0.0);
        vec4 _1450 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1439, _1440, _1441), 0.0);
        vec4 _1457 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1439, _1440, _1441), 0.0);
        vec4 _1464 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1439, _1440, _1441), 0.0);
        float _1476 = exp2((_1443.w + (-0.5)) * 20.0) * 2.0;
        float _1477 = _1476 * (_1443.x + (-0.5));
        float _1478 = _1476 * (_1443.y + (-0.5));
        float _1479 = _1476 * (_1443.z + (-0.5));
        float _1486 = exp2((_1450.w + (-0.5)) * 20.0) * 2.0;
        float _1487 = _1486 * (_1450.x + (-0.5));
        float _1488 = _1486 * (_1450.y + (-0.5));
        float _1489 = _1486 * (_1450.z + (-0.5));
        float _1496 = exp2((_1457.w + (-0.5)) * 20.0) * 2.0;
        float _1497 = _1496 * (_1457.x + (-0.5));
        float _1498 = _1496 * (_1457.y + (-0.5));
        float _1499 = _1496 * (_1457.z + (-0.5));
        float _1506 = exp2((_1464.w + (-0.5)) * 20.0) * 2.0;
        float _1507 = _1506 * (_1464.x + (-0.5));
        float _1508 = _1506 * (_1464.y + (-0.5));
        float _1509 = _1506 * (_1464.z + (-0.5));
        float _1510 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1511 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1512 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1513 = _1477 * 0.5;
        float _1514 = _1487 * 0.5;
        float _1515 = _1497 * 0.5;
        float _1516 = dot(vec3(_1513, _1514, _1515), vec3(_1513, _1514, _1515));
        float _1521 = (_1516 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1516);
        float _1529 = (dot(vec3(_816, _817, _818), vec3(_1521 * _1513, _1521 * _1514, _1521 * _1515)) + 1.0) * 0.5;
        float _4299 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1538 = sqrt(((_1514 * _1514) + (_1513 * _1513)) + (_1515 * _1515)) / (_1510 + 9.9999997473787516355514526367188e-06);
        float _4310 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1539 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1540 = _1539 * 2.0;
        float _1544 = (1.0 - _1539) / (_1539 + 1.0);
        float _4321 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1545 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _1554 = ((((1.0 - _1545) * (_1540 + 2.0)) * exp2(log2(isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))) * (_1540 + 1.0))) + _1545) * _1510;
        float _1555 = _1478 * 0.5;
        float _1556 = _1488 * 0.5;
        float _1557 = _1498 * 0.5;
        float _1558 = dot(vec3(_1555, _1556, _1557), vec3(_1555, _1556, _1557));
        float _1563 = (_1558 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1558);
        float _1571 = (dot(vec3(_816, _817, _818), vec3(_1563 * _1555, _1563 * _1556, _1563 * _1557)) + 1.0) * 0.5;
        float _4332 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
        float _1580 = sqrt(((_1556 * _1556) + (_1555 * _1555)) + (_1557 * _1557)) / (_1511 + 9.9999997473787516355514526367188e-06);
        float _4343 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1581 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1582 = _1581 * 2.0;
        float _1586 = (1.0 - _1581) / (_1581 + 1.0);
        float _4354 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1587 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1596 = ((((1.0 - _1587) * (_1582 + 2.0)) * exp2(log2(isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0))) * (_1582 + 1.0))) + _1587) * _1511;
        float _1597 = _1479 * 0.5;
        float _1598 = _1489 * 0.5;
        float _1599 = _1499 * 0.5;
        float _1600 = dot(vec3(_1597, _1598, _1599), vec3(_1597, _1598, _1599));
        float _1605 = (_1600 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1600);
        float _1613 = (dot(vec3(_816, _817, _818), vec3(_1605 * _1597, _1605 * _1598, _1605 * _1599)) + 1.0) * 0.5;
        float _4365 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1622 = sqrt(((_1598 * _1598) + (_1597 * _1597)) + (_1599 * _1599)) / (_1512 + 9.9999997473787516355514526367188e-06);
        float _4376 = isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0));
        float _1623 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1624 = _1623 * 2.0;
        float _1628 = (1.0 - _1623) / (_1623 + 1.0);
        float _4387 = isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0));
        float _1629 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1638 = ((((1.0 - _1629) * (_1624 + 2.0)) * exp2(log2(isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0))) * (_1624 + 1.0))) + _1629) * _1512;
        _1646 = _1479;
        _1647 = _1478;
        _1648 = _1477;
        _1649 = _1489;
        _1650 = _1488;
        _1651 = _1487;
        _1652 = _1499;
        _1653 = _1498;
        _1654 = _1497;
        _1655 = _1512;
        _1656 = _1511;
        _1657 = _1510;
        _1658 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0)));
        _1659 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0)));
        _1660 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0)));
    }
    else
    {
        _1646 = _1337;
        _1647 = _1337;
        _1648 = _1337;
        _1649 = _1337;
        _1650 = _1337;
        _1651 = _1337;
        _1652 = _1337;
        _1653 = _1337;
        _1654 = _1337;
        _1655 = _1337;
        _1656 = _1337;
        _1657 = _1337;
        _1658 = 0.0;
        _1659 = 0.0;
        _1660 = 0.0;
    }
    float _1670 = (cbModelParam._m0[1u].x * (_1658 - _1349)) + _1349;
    float _1671 = (cbModelParam._m0[1u].x * (_1659 - _1350)) + _1350;
    float _1672 = (cbModelParam._m0[1u].x * (_1660 - _1351)) + _1351;
    float _1693 = fma(_1672, cbSceneParam._m0[89u].z, fma(_1671, cbSceneParam._m0[89u].y, _1670 * cbSceneParam._m0[89u].x));
    float _1696 = fma(_1672, cbSceneParam._m0[90u].z, fma(_1671, cbSceneParam._m0[90u].y, _1670 * cbSceneParam._m0[90u].x));
    float _1699 = fma(_1672, cbSceneParam._m0[91u].z, fma(_1671, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1670));
    float _1714 = _974 * 0.5;
    float _1715 = _975 * 0.5;
    float _1716 = _976 * 0.5;
    float _1717 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1648, _1651, _1654, _1657));
    float _1720 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1647, _1650, _1653, _1656));
    float _1723 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1646, _1649, _1652, _1655));
    float _1757;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1730 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1336, _1340, _1343, _1346));
        float _1734 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1338, _1341, _1344, _1347));
        float _1738 = dot(vec4(_1714, _1715, _1716, 1.0), vec4(_1339, _1342, _1345, _1348));
        float _1745 = dot(vec4(cbModelParam._m0[39u]), vec4(_1714, _1715, _1716, 1.0));
        _1757 = dot(vec3(isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0)), isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0)), isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1745) ? 0.0 : (isnan(0.0) ? _1745 : max(0.0, _1745))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1757 = 1.0;
    }
    float _1768;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1759 = dot(vec4(cbModelParam._m0[40u]), vec4(_1714, _1715, _1716, 1.0));
        _1768 = dot(vec3(isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0)), isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0)), isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1759) ? 0.0 : (isnan(0.0) ? _1759 : max(0.0, _1759))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1768 = 1.0;
    }
    float _1772 = (_1768 * cbModelParam._m0[1u].x) + (_1757 * (1.0 - cbModelParam._m0[1u].x));
    float _1782 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _819);
    float _1783 = isnan(_1782) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1782 : min(cbModelParam._m0[25u].z, _1782));
    float _1863;
    float _1865;
    float _1867;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1830 = fma(_1034, cbModelParam._m0[13u].z, fma(_1030, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1026)) + cbModelParam._m0[13u].w;
        float _1834 = fma(_1034, cbModelParam._m0[14u].z, fma(_1030, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1026)) + cbModelParam._m0[14u].w;
        float _1838 = fma(_1034, cbModelParam._m0[15u].z, fma(_1030, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1026)) + cbModelParam._m0[15u].w;
        float _1841 = fma(_976, cbModelParam._m0[13u].z, fma(_975, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _974));
        float _1844 = fma(_976, cbModelParam._m0[14u].z, fma(_975, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _974));
        float _1847 = fma(_976, cbModelParam._m0[15u].z, fma(_975, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _974));
        float _1875;
        if (_1841 > 0.0)
        {
            _1875 = abs((1.0 - _1830) / _1841);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1841 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1830 + 1.0) / _1841);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1875 = frontier_phi_14_12_ladder;
        }
        float _2044;
        if (_1844 > 0.0)
        {
            _2044 = abs((1.0 - _1834) / _1844);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1834 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2044 = frontier_phi_23_19_ladder;
        }
        float _2339;
        if (_1847 > 0.0)
        {
            _2339 = abs((1.0 - _1838) / _1847);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1847 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1838 + 1.0) / _1847);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2339 = frontier_phi_35_30_ladder;
        }
        float _2341 = isnan(_2044) ? _1875 : (isnan(_1875) ? _2044 : min(_1875, _2044));
        float _2342 = isnan(_2339) ? _2341 : (isnan(_2341) ? _2339 : min(_2341, _2339));
        float _2346 = (_2342 * _1841) + _1830;
        float _2347 = (_2342 * _1844) + _1834;
        float _2348 = (_2342 * _1847) + _1838;
        float _2349 = _2342 * 9.9999997473787516355514526367188e-05;
        float _2351 = (-1.0) - _2349;
        float _2353 = _2349 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2348 > _2353) || ((_2348 < _2351) || ((_2347 > _2353) || ((_2347 < _2351) || ((_2346 < _2351) || (_2346 > _2353))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2493 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2348, cbModelParam._m0[9u].z, fma(_2347, cbModelParam._m0[9u].y, _2346 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2348, cbModelParam._m0[10u].z, fma(_2347, cbModelParam._m0[10u].y, _2346 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2348, cbModelParam._m0[11u].z, fma(_2347, cbModelParam._m0[11u].y, _2346 * cbModelParam._m0[11u].x))), _1783);
            frontier_phi_13_35_ladder = _2493.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2493.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2493.x * cbModelParam._m0[1u].y;
        }
        _1863 = frontier_phi_13_35_ladder_2;
        _1865 = frontier_phi_13_35_ladder_1;
        _1867 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1851 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_974, _975, _976), _1783);
        _1863 = _1851.x * cbModelParam._m0[1u].y;
        _1865 = _1851.y * cbModelParam._m0[1u].y;
        _1867 = _1851.z * cbModelParam._m0[1u].y;
    }
    float _1871 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _819);
    float _1872 = isnan(_1871) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1871 : min(cbModelParam._m0[25u].w, _1871));
    float _1961;
    float _1963;
    float _1965;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1925 = fma(_1034, cbModelParam._m0[21u].z, fma(_1030, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1026)) + cbModelParam._m0[21u].w;
        float _1929 = fma(_1034, cbModelParam._m0[22u].z, fma(_1030, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1026)) + cbModelParam._m0[22u].w;
        float _1933 = fma(_1034, cbModelParam._m0[23u].z, fma(_1030, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1026)) + cbModelParam._m0[23u].w;
        float _1936 = fma(_976, cbModelParam._m0[21u].z, fma(_975, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _974));
        float _1939 = fma(_976, cbModelParam._m0[22u].z, fma(_975, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _974));
        float _1942 = fma(_976, cbModelParam._m0[23u].z, fma(_975, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _974));
        float _2049;
        if (_1936 > 0.0)
        {
            _2049 = abs((1.0 - _1925) / _1936);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1936 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1925 + 1.0) / _1936);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2049 = frontier_phi_25_21_ladder;
        }
        float _2366;
        if (_1939 > 0.0)
        {
            _2366 = abs((1.0 - _1929) / _1939);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1939 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1929 + 1.0) / _1939);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2366 = frontier_phi_37_32_ladder;
        }
        float _2693;
        if (_1942 > 0.0)
        {
            _2693 = abs((1.0 - _1933) / _1942);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1942 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1933 + 1.0) / _1942);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2693 = frontier_phi_47_44_ladder;
        }
        float _2695 = isnan(_2366) ? _2049 : (isnan(_2049) ? _2366 : min(_2049, _2366));
        float _2696 = isnan(_2693) ? _2695 : (isnan(_2695) ? _2693 : min(_2695, _2693));
        float _2700 = (_2696 * _1936) + _1925;
        float _2701 = (_2696 * _1939) + _1929;
        float _2702 = (_2696 * _1942) + _1933;
        float _2703 = _2696 * 9.9999997473787516355514526367188e-05;
        float _2704 = (-1.0) - _2703;
        float _2706 = _2703 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2702 > _2706) || ((_2702 < _2704) || ((_2701 > _2706) || ((_2701 < _2704) || ((_2700 < _2704) || (_2700 > _2706))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2820 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2702, cbModelParam._m0[17u].z, fma(_2701, cbModelParam._m0[17u].y, _2700 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2702, cbModelParam._m0[18u].z, fma(_2701, cbModelParam._m0[18u].y, _2700 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2702, cbModelParam._m0[19u].z, fma(_2701, cbModelParam._m0[19u].y, _2700 * cbModelParam._m0[19u].x))), _1872);
            frontier_phi_22_47_ladder = _2820.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2820.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2820.x * cbModelParam._m0[1u].z;
        }
        _1961 = frontier_phi_22_47_ladder_2;
        _1963 = frontier_phi_22_47_ladder_1;
        _1965 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1945 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_974, _975, _976), _1872);
        _1961 = _1945.x * cbModelParam._m0[1u].z;
        _1963 = _1945.y * cbModelParam._m0[1u].z;
        _1965 = _1945.z * cbModelParam._m0[1u].z;
    }
    float _1977 = ((((1.0 - _994) * ((_982 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_994 * _982)) * _966;
    float _1978 = _1977 * ((cbModelParam._m0[1u].w * (_1961 - _1863)) + _1863);
    float _1979 = _1977 * ((cbModelParam._m0[1u].w * (_1963 - _1865)) + _1865);
    float _1980 = _1977 * ((cbModelParam._m0[1u].w * (_1965 - _1867)) + _1867);
    float _1983 = fma(_1980, cbSceneParam._m0[89u].z, fma(_1979, cbSceneParam._m0[89u].y, _1978 * cbSceneParam._m0[89u].x));
    float _1986 = fma(_1980, cbSceneParam._m0[90u].z, fma(_1979, cbSceneParam._m0[90u].y, _1978 * cbSceneParam._m0[90u].x));
    float _1989 = fma(_1980, cbSceneParam._m0[91u].z, fma(_1979, cbSceneParam._m0[91u].y, _1978 * cbSceneParam._m0[91u].x));
    float _2023 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2027 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2031 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2035 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2036 = _2023 / _2035;
    float _2037 = _2027 / _2035;
    float _2038 = _2031 / _2035;
    float _2185;
    float _2186;
    float _2187;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2065 = ((uint(_2038 > cbSceneParam._m0[59u].y) + uint(_2038 > cbSceneParam._m0[59u].x)) + uint(_2038 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2066 = _2065 + 43u;
        uint _2074 = _2065 + 44u;
        uint _2082 = _2065 + 45u;
        uint _2090 = _2065 + 46u;
        float _2101 = fma(_2035, cbSceneParam._m0[_2066].w, fma(_2031, cbSceneParam._m0[_2066].z, fma(_2027, cbSceneParam._m0[_2066].y, _2023 * cbSceneParam._m0[_2066].x)));
        float _2105 = fma(_2035, cbSceneParam._m0[_2074].w, fma(_2031, cbSceneParam._m0[_2074].z, fma(_2027, cbSceneParam._m0[_2074].y, _2023 * cbSceneParam._m0[_2074].x)));
        float _2113 = fma(_2035, cbSceneParam._m0[_2090].w, fma(_2031, cbSceneParam._m0[_2090].z, fma(_2027, cbSceneParam._m0[_2090].y, _2023 * cbSceneParam._m0[_2090].x)));
        float _2118 = cbSceneParam._m0[33u].z * _2113;
        float _2120 = cbSceneParam._m0[33u].w * _2113;
        float _2123 = fma(_2035, cbSceneParam._m0[_2082].w, fma(_2031, cbSceneParam._m0[_2082].z, fma(_2027, cbSceneParam._m0[_2082].y, _2023 * cbSceneParam._m0[_2082].x))) / _2113;
        float _2171 = (cbSceneParam._m0[33u].x - sqrt(((_2037 * _2037) + (_2036 * _2036)) + (_2038 * _2038))) * cbSceneParam._m0[33u].y;
        float _4513 = isnan(0.0) ? _2171 : (isnan(_2171) ? 0.0 : max(_2171, 0.0));
        float _2178 = (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2118 + _2101) / _2113, (_2120 + _2105) / _2113), _2123), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2120 + _2101) / _2113, (_2105 - _2118) / _2113), _2123), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2101 - _2118) / _2113, (_2105 - _2120) / _2113), _2123), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2101 - _2120) / _2113, (_2118 + _2105) / _2113), _2123), 0.0)).x), vec4(0.25)));
        _2185 = 1.0 - (_2178 * cbSceneParam._m0[34u].x);
        _2186 = 1.0 - (_2178 * cbSceneParam._m0[34u].y);
        _2187 = 1.0 - (_2178 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2185 = 1.0;
        _2186 = 1.0;
        _2187 = 1.0;
    }
    float _2251;
    float _2253;
    float _2255;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2239 = fma(_2035, cbSceneParam._m0[63u].w, fma(_2031, cbSceneParam._m0[63u].z, fma(_2027, cbSceneParam._m0[63u].y, _2023 * cbSceneParam._m0[63u].x)));
        float _2240 = fma(_2035, cbSceneParam._m0[60u].w, fma(_2031, cbSceneParam._m0[60u].z, fma(_2027, cbSceneParam._m0[60u].y, _2023 * cbSceneParam._m0[60u].x))) / _2239;
        float _2241 = fma(_2035, cbSceneParam._m0[61u].w, fma(_2031, cbSceneParam._m0[61u].z, fma(_2027, cbSceneParam._m0[61u].y, _2023 * cbSceneParam._m0[61u].x))) / _2239;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2240 >= cbSceneParam._m0[64u].x) && (_2241 >= cbSceneParam._m0[64u].y)) && (_2240 <= cbSceneParam._m0[64u].z)) && (_2241 <= cbSceneParam._m0[64u].w))
        {
            float _2379 = fma(_2035, cbSceneParam._m0[62u].w, fma(_2031, cbSceneParam._m0[62u].z, fma(_2027, cbSceneParam._m0[62u].y, _2023 * cbSceneParam._m0[62u].x))) / _2239;
            float _2383 = isnan(cbSceneParam._m0[41u].w) ? _2379 : (isnan(_2379) ? cbSceneParam._m0[41u].w : max(_2379, cbSceneParam._m0[41u].w));
            float _2426 = (cbSceneParam._m0[33u].x - sqrt(((_2037 * _2037) + (_2036 * _2036)) + (_2038 * _2038))) * cbSceneParam._m0[33u].y;
            float _4529 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
            float _2433 = (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2240, cbSceneParam._m0[33u].w + _2241), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2240, _2241 - cbSceneParam._m0[33u].z), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2240 - cbSceneParam._m0[33u].z, _2241 - cbSceneParam._m0[33u].w), _2383), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2240 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2241), _2383), 0.0)).x), vec4(0.25)));
            float _2437 = 1.0 - (_2433 * cbSceneParam._m0[34u].x);
            float _2438 = 1.0 - (_2433 * cbSceneParam._m0[34u].y);
            float _2439 = 1.0 - (_2433 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2439) ? _2187 : (isnan(_2187) ? _2439 : min(_2187, _2439));
            frontier_phi_34_33_ladder_1 = isnan(_2438) ? _2186 : (isnan(_2186) ? _2438 : min(_2186, _2438));
            frontier_phi_34_33_ladder_2 = isnan(_2437) ? _2185 : (isnan(_2185) ? _2437 : min(_2185, _2437));
        }
        else
        {
            frontier_phi_34_33_ladder = _2187;
            frontier_phi_34_33_ladder_1 = _2186;
            frontier_phi_34_33_ladder_2 = _2185;
        }
        _2251 = frontier_phi_34_33_ladder_2;
        _2253 = frontier_phi_34_33_ladder_1;
        _2255 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2251 = _2185;
        _2253 = _2186;
        _2255 = _2187;
    }
    uvec4 _2260 = floatBitsToUint(cbInstanceData._m0[_941 + 5u]);
    uint _2262 = _2260.x * 14u;
    uint _2263 = _2262 + 13u;
    float _2270 = _966 + (-1.0);
    float _2275 = (cbLight._m0[_2263].x * _2270) + 1.0;
    float _2276 = (cbLight._m0[_2263].y * _2270) + 1.0;
    float _2277 = (cbLight._m0[_2263].z * _2270) + 1.0;
    float _2278 = (cbLight._m0[_2263].w * _2270) + 1.0;
    uint _2279 = _2262 + 5u;
    float _2285 = isnan(1.0) ? _2276 : (isnan(_2276) ? 1.0 : min(_2276, 1.0));
    uint _2289 = _2262 + 4u;
    float _2298 = isnan(1.0) ? _2275 : (isnan(_2275) ? 1.0 : min(_2275, 1.0));
    uint _2302 = _2262 | 1u;
    float _2313 = dot(vec3(cbLight._m0[_2262].xyz), vec3(_816, _817, _818));
    float _2316 = dot(vec3(cbLight._m0[_2302].xyz), vec3(_816, _817, _818));
    float _4565 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
    float _4576 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2321 = (isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0))) * 0.3183098733425140380859375;
    float _2323 = (isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0))) * 0.3183098733425140380859375;
    float _2330 = ((cbLight._m0[_2279].x * _2285) * _2323) + (((cbLight._m0[_2289].x * _2251) * _2298) * _2321);
    float _2331 = ((_2285 * cbLight._m0[_2279].y) * _2323) + (((cbLight._m0[_2289].y * _2253) * _2298) * _2321);
    float _2332 = ((_2285 * cbLight._m0[_2279].z) * _2323) + (((cbLight._m0[_2289].z * _2255) * _2298) * _2321);
    uvec4 _2336 = floatBitsToUint(cbLight._m0[_2262 + 12u]);
    bool _2338 = _2336.x == 0u;
    float _2440;
    float _2442;
    float _2444;
    if (_2338)
    {
        _2440 = _2330;
        _2442 = _2331;
        _2444 = _2332;
    }
    else
    {
        uint _2448 = _2262 + 6u;
        float _2464 = (dot(vec3(cbLight._m0[_2262 + 2u].xyz), vec3(_816, _817, _818)) * 0.5) + 0.5;
        float _2465 = _2464 * _2464;
        float _4587 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
        float _2466 = isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0));
        float _2467 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2440 = (((cbLight._m0[_2448].x * 0.3183098733425140380859375) * _2466) * _2467) + _2330;
        _2442 = (((cbLight._m0[_2448].y * 0.3183098733425140380859375) * _2466) * _2467) + _2331;
        _2444 = (((cbLight._m0[_2448].z * 0.3183098733425140380859375) * _2466) * _2467) + _2332;
    }
    bool _2447 = _2336.y == 0u;
    float _2502;
    float _2504;
    float _2506;
    if (_2447)
    {
        _2502 = _2440;
        _2504 = _2442;
        _2506 = _2444;
    }
    else
    {
        uint _2664 = _2262 + 7u;
        float _2680 = (dot(vec3(cbLight._m0[_2262 + 3u].xyz), vec3(_816, _817, _818)) * 0.5) + 0.5;
        float _2681 = _2680 * _2680;
        float _4603 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
        float _2682 = isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0));
        float _2683 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
        _2502 = (((cbLight._m0[_2664].x * 0.3183098733425140380859375) * _2682) * _2683) + _2440;
        _2504 = (((cbLight._m0[_2664].y * 0.3183098733425140380859375) * _2682) * _2683) + _2442;
        _2506 = (((cbLight._m0[_2664].z * 0.3183098733425140380859375) * _2682) * _2683) + _2444;
    }
    uint _2509 = _2262 + 8u;
    float _2522 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2262].w)) * _819) * 0.949999988079071044921875);
    float _2523 = _2522 * _2522;
    float _2524 = cbLight._m0[_2262].x + _895;
    float _2525 = cbLight._m0[_2262].y + _896;
    float _2526 = cbLight._m0[_2262].z + _897;
    float _2530 = inversesqrt(dot(vec3(_2524, _2525, _2526), vec3(_2524, _2525, _2526)));
    float _2531 = _2530 * _2524;
    float _2532 = _2530 * _2525;
    float _2533 = _2530 * _2526;
    float _2534 = dot(vec3(_816, _817, _818), vec3(cbLight._m0[_2262].xyz));
    float _4619 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
    float _2537 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
    float _4630 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _2538 = isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0));
    float _2539 = dot(vec3(_816, _817, _818), vec3(_2531, _2532, _2533));
    float _4641 = isnan(0.0) ? _2539 : (isnan(_2539) ? 0.0 : max(_2539, 0.0));
    float _2542 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _2543 = dot(vec3(cbLight._m0[_2262].xyz), vec3(_2531, _2532, _2533));
    float _4652 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0));
    float _2547 = _2523 * _2523;
    float _2551 = ((_2542 * _2542) * (_2547 + (-1.0))) + 1.0;
    float _2562 = (exp2(log2(1.0 - (isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2563 = 1.0 - _2523;
    float _2574 = (0.5 / (((_2538 * ((_2537 * _2563) + _2523)) + 9.9999999392252902907785028219223e-09) + (((_2538 * _2563) + _2523) * _2537))) * _2537;
    float _4663 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
    float _2576 = (isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0))) * (_2547 / ((_2551 * _2551) * 3.141590118408203125));
    uint _2590 = _2262 + 9u;
    float _2601 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2302].w)) * _819) * 0.949999988079071044921875);
    float _2602 = _2601 * _2601;
    float _2603 = cbLight._m0[_2302].x + _895;
    float _2604 = cbLight._m0[_2302].y + _896;
    float _2605 = cbLight._m0[_2302].z + _897;
    float _2609 = inversesqrt(dot(vec3(_2603, _2604, _2605), vec3(_2603, _2604, _2605)));
    float _2610 = _2609 * _2603;
    float _2611 = _2609 * _2604;
    float _2612 = _2609 * _2605;
    float _2613 = dot(vec3(_816, _817, _818), vec3(cbLight._m0[_2302].xyz));
    float _4674 = isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : max(_2613, 0.0));
    float _2616 = isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0));
    float _2617 = dot(vec3(_816, _817, _818), vec3(_2610, _2611, _2612));
    float _4685 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
    float _2620 = isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0));
    float _2621 = dot(vec3(cbLight._m0[_2302].xyz), vec3(_2610, _2611, _2612));
    float _4696 = isnan(0.0) ? _2621 : (isnan(_2621) ? 0.0 : max(_2621, 0.0));
    float _2625 = _2602 * _2602;
    float _2629 = ((_2620 * _2620) * (_2625 + (-1.0))) + 1.0;
    float _2638 = (exp2(log2(1.0 - (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2639 = 1.0 - _2602;
    float _2649 = (0.5 / (((_2538 * ((_2616 * _2639) + _2602)) + 9.9999999392252902907785028219223e-09) + (((_2538 * _2639) + _2602) * _2616))) * _2616;
    float _4707 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0));
    float _2651 = (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * (_2625 / ((_2629 * _2629) * 3.141590118408203125));
    float _2661 = (((_2638 * cbLight._m0[_2590].x) * _2651) * _2285) + ((((cbLight._m0[_2509].x * _2251) * _2562) * _2576) * _2298);
    float _2662 = (((_2638 * cbLight._m0[_2590].y) * _2651) * _2285) + ((((cbLight._m0[_2509].y * _2253) * _2562) * _2576) * _2298);
    float _2663 = (((_2638 * cbLight._m0[_2590].z) * _2651) * _2285) + ((((cbLight._m0[_2509].z * _2255) * _2562) * _2576) * _2298);
    float _2719;
    float _2721;
    float _2723;
    if (_2338)
    {
        _2719 = _2661;
        _2721 = _2662;
        _2723 = _2663;
    }
    else
    {
        uint _2725 = _2262 + 2u;
        uint _2729 = _2262 + 10u;
        float _2743 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2725].w)) * _819) * 0.949999988079071044921875);
        float _2744 = _2743 * _2743;
        float _2745 = cbLight._m0[_2725].x + _895;
        float _2746 = cbLight._m0[_2725].y + _896;
        float _2747 = cbLight._m0[_2725].z + _897;
        float _2751 = inversesqrt(dot(vec3(_2745, _2746, _2747), vec3(_2745, _2746, _2747)));
        float _2752 = _2751 * _2745;
        float _2753 = _2751 * _2746;
        float _2754 = _2751 * _2747;
        float _2755 = dot(vec3(_816, _817, _818), vec3(cbLight._m0[_2725].xyz));
        float _4718 = isnan(0.0) ? _2755 : (isnan(_2755) ? 0.0 : max(_2755, 0.0));
        float _2758 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2759 = dot(vec3(_816, _817, _818), vec3(_2752, _2753, _2754));
        float _4729 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
        float _2762 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
        float _2763 = dot(vec3(cbLight._m0[_2725].xyz), vec3(_2752, _2753, _2754));
        float _4740 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
        float _2767 = _2744 * _2744;
        float _2771 = ((_2762 * _2762) * (_2767 + (-1.0))) + 1.0;
        float _2780 = (exp2(log2(1.0 - (isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2781 = 1.0 - _2744;
        float _2791 = (0.5 / (((_2538 * ((_2758 * _2781) + _2744)) + 9.9999999392252902907785028219223e-09) + (((_2538 * _2781) + _2744) * _2758))) * _2758;
        float _4751 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
        float _2793 = (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0))) * (_2767 / ((_2771 * _2771) * 3.141590118408203125));
        float _2794 = isnan(1.0) ? _2277 : (isnan(_2277) ? 1.0 : min(_2277, 1.0));
        _2719 = (((_2780 * cbLight._m0[_2729].x) * _2793) * _2794) + _2661;
        _2721 = (((_2780 * cbLight._m0[_2729].y) * _2793) * _2794) + _2662;
        _2723 = (((_2780 * cbLight._m0[_2729].z) * _2793) * _2794) + _2663;
    }
    float _2825;
    float _2827;
    float _2829;
    if (_2447)
    {
        _2825 = _2719;
        _2827 = _2721;
        _2829 = _2723;
    }
    else
    {
        uint _2836 = _2262 + 3u;
        uint _2840 = _2262 + 11u;
        float _2854 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2836].w)) * _819) * 0.949999988079071044921875);
        float _2855 = _2854 * _2854;
        float _2856 = cbLight._m0[_2836].x + _895;
        float _2857 = cbLight._m0[_2836].y + _896;
        float _2858 = cbLight._m0[_2836].z + _897;
        float _2862 = inversesqrt(dot(vec3(_2856, _2857, _2858), vec3(_2856, _2857, _2858)));
        float _2863 = _2862 * _2856;
        float _2864 = _2862 * _2857;
        float _2865 = _2862 * _2858;
        float _2866 = dot(vec3(_816, _817, _818), vec3(cbLight._m0[_2836].xyz));
        float _4767 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2869 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
        float _2870 = dot(vec3(_816, _817, _818), vec3(_2863, _2864, _2865));
        float _4778 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2873 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
        float _2874 = dot(vec3(cbLight._m0[_2836].xyz), vec3(_2863, _2864, _2865));
        float _4789 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
        float _2878 = _2855 * _2855;
        float _2882 = ((_2873 * _2873) * (_2878 + (-1.0))) + 1.0;
        float _2891 = (exp2(log2(1.0 - (isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2892 = 1.0 - _2855;
        float _2902 = (0.5 / (((_2538 * ((_2869 * _2892) + _2855)) + 9.9999999392252902907785028219223e-09) + (((_2538 * _2892) + _2855) * _2869))) * _2869;
        float _4800 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2904 = (isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0))) * (_2878 / ((_2882 * _2882) * 3.141590118408203125));
        float _2905 = isnan(1.0) ? _2278 : (isnan(_2278) ? 1.0 : min(_2278, 1.0));
        _2825 = (((_2891 * cbLight._m0[_2840].x) * _2904) * _2905) + _2719;
        _2827 = (((_2891 * cbLight._m0[_2840].y) * _2904) * _2905) + _2721;
        _2829 = (((_2891 * cbLight._m0[_2840].z) * _2904) * _2905) + _2723;
    }
    float _2971;
    float _2973;
    float _2975;
    float _2977;
    float _2979;
    float _2981;
    if (_2260.y == 0u)
    {
        uvec4 _2926 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2927 = _2926.x;
        uint _2938 = uint((float(_2926.y) * floor(float(uint(cbSceneParam._m0[85u].y * _904) / _2927))) + floor(float(uint(cbSceneParam._m0[85u].x * _903) / _2927)));
        float _2948 = (log2(_2038 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2949 = isnan(0.0) ? _2948 : (isnan(_2948) ? 0.0 : max(_2948, 0.0));
        uint _2952 = uint(isnan(14.0) ? _2949 : (isnan(_2949) ? 14.0 : min(_2949, 14.0)));
        uvec4 _2957 = texelFetch(g_lightClusterGridBuffer, int(((_2952 << 2u) + (_2938 << 6u)) >> 2u));
        uint _2958 = _2957.x;
        uint _2959 = _2926.z;
        float _3083;
        float _3085;
        float _3087;
        float _3089;
        float _3091;
        float _3093;
        if (((((1u << ((_2959 >> 4u) & 15u)) + 4294967295u) & _2958) == 0u) || ((_2959 & 240u) == 0u))
        {
            _3083 = 0.0;
            _3085 = 0.0;
            _3087 = 0.0;
            _3089 = 0.0;
            _3091 = 0.0;
            _3093 = 0.0;
        }
        else
        {
            float _3084;
            float _3086;
            float _3088;
            float _3090;
            float _3092;
            float _3094;
            float _3236 = 0.0;
            float _3237 = 0.0;
            float _3238 = 0.0;
            float _3239 = 0.0;
            float _3240 = 0.0;
            float _3241 = 0.0;
            uint _3242 = 0u;
            uint _3251;
            bool _3252;
            for (;;)
            {
                _3251 = texelFetch(g_lightClassification, int((((_2952 << 5u) + (_2938 << 9u)) + (_3242 << 2u)) >> 2u)).x;
                _3252 = _3251 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3252)
                {
                    frontier_phi_66_pred = _3241;
                    frontier_phi_66_pred_1 = _3240;
                    frontier_phi_66_pred_2 = _3239;
                    frontier_phi_66_pred_3 = _3238;
                    frontier_phi_66_pred_4 = _3237;
                    frontier_phi_66_pred_5 = _3236;
                }
                else
                {
                    float _3360;
                    float _3361;
                    float _3362;
                    float _3363;
                    float _3364;
                    float _3365;
                    uint _3366;
                    _3360 = _3236;
                    _3361 = _3237;
                    _3362 = _3238;
                    _3363 = _3239;
                    _3364 = _3240;
                    _3365 = _3241;
                    _3366 = _3251;
                    float _3292;
                    float _3293;
                    float _3294;
                    float _3295;
                    float _3296;
                    float _3297;
                    for (;;)
                    {
                        uint _3370 = uint(findLSB(_3366)) + (_3242 << 5u);
                        uint _3367 = (_3366 + 4294967295u) & _3366;
                        uint _3372 = _3370 * 48u;
                        vec4 _3386 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3372)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3372 + 3u)).x));
                        uint _3392 = (_3370 * 48u) + 4u;
                        vec4 _3405 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3392)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3392 + 3u)).x));
                        uint _3411 = (_3370 * 48u) + 8u;
                        vec3 _3422 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3411)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3411 + 2u)).x));
                        float _3426 = _3386.x - _2036;
                        float _3427 = _3386.y - _2037;
                        float _3428 = _3386.z - _2038;
                        float _3429 = dot(vec3(_3426, _3427, _3428), vec3(_3426, _3427, _3428));
                        float _3432 = inversesqrt(_3429);
                        float _3433 = _3432 * _3426;
                        float _3434 = _3432 * _3427;
                        float _3435 = _3432 * _3428;
                        float _3436 = dot(vec3(_922, _925, _928), vec3(_3433, _3434, _3435));
                        float _3441 = 1.0 - (_3429 * _3386.w);
                        float _4826 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                        float _3442 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                        float _3443 = sqrt(_3429) * _3405.w;
                        float _3446 = 1.39999997615814208984375 / (_3443 + 1.39999997615814208984375);
                        float _3447 = _3446 * _3446;
                        float _3450 = ((1.0 - _3447) * _3436) + _3447;
                        float _3453 = _3443 * _3443;
                        float _3457 = ((isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0))) * _3442) / ((_3453 * 0.699999988079071044921875) + 1.0);
                        float _3461 = (-0.0) - _2036;
                        float _3462 = (-0.0) - _2037;
                        float _3463 = (-0.0) - _2038;
                        float _3467 = inversesqrt(dot(vec3(_3461, _3462, _3463), vec3(_3461, _3462, _3463)));
                        float _3468 = _3467 * _3461;
                        float _3469 = _3467 * _3462;
                        float _3470 = _3467 * _3463;
                        float _3477 = exp2(log2(1.0 / ((_3453 * 3.5) + 5.0)) * 0.25);
                        float _3478 = 1.0 - _982;
                        float _3485 = sqrt(1.0 - ((1.0 - (_3478 * _3478)) * (1.0 - (_3477 * _3477))));
                        float _3486 = _3485 * _3485;
                        float _3487 = _3486 * _3486;
                        float _3488 = _3468 + _3433;
                        float _3489 = _3469 + _3434;
                        float _3490 = _3470 + _3435;
                        float _3494 = inversesqrt(dot(vec3(_3488, _3489, _3490), vec3(_3488, _3489, _3490)));
                        float _3498 = dot(vec3(_922, _925, _928), vec3(_3468, _3469, _3470));
                        float _4842 = isnan(0.0) ? _3498 : (isnan(_3498) ? 0.0 : max(_3498, 0.0));
                        float _3501 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
                        float _3502 = dot(vec3(_922, _925, _928), vec3(_3494 * _3488, _3494 * _3489, _3494 * _3490));
                        float _4853 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0));
                        float _3505 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
                        float _3509 = ((_3505 * _3505) * (_3487 + (-1.0))) + 1.0;
                        float _3510 = _3446 * _3486;
                        float _3511 = _3510 * _3510;
                        float _3514 = ((1.0 - _3511) * _3436) + _3511;
                        float _4864 = isnan(0.0) ? _3514 : (isnan(_3514) ? 0.0 : max(_3514, 0.0));
                        float _3515 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
                        float _3516 = 1.0 - _3486;
                        float _3526 = (0.5 / (((_3515 * ((_3501 * _3516) + _3486)) + 9.9999999392252902907785028219223e-09) + (((_3515 * _3516) + _3486) * _3501))) * _3515;
                        float _4875 = isnan(0.0) ? _3526 : (isnan(_3526) ? 0.0 : max(_3526, 0.0));
                        float _3537 = (((_3487 * 3.1415927410125732421875) * (isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0)))) / ((_3509 * _3509) * ((_3453 * 2.1991131305694580078125) + 3.141590118408203125))) * _3442;
                        _3295 = (_3457 * _3405.x) + _3363;
                        _3296 = (_3457 * _3405.y) + _3364;
                        _3297 = (_3457 * _3405.z) + _3365;
                        _3292 = (_3537 * _3422.x) + _3360;
                        _3293 = (_3537 * _3422.y) + _3361;
                        _3294 = (_3537 * _3422.z) + _3362;
                        if (_3367 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3360 = _3292;
                            _3361 = _3293;
                            _3362 = _3294;
                            _3363 = _3295;
                            _3364 = _3296;
                            _3365 = _3297;
                            _3366 = _3367;
                        }
                    }
                    frontier_phi_66_pred = _3297;
                    frontier_phi_66_pred_1 = _3296;
                    frontier_phi_66_pred_2 = _3295;
                    frontier_phi_66_pred_3 = _3294;
                    frontier_phi_66_pred_4 = _3293;
                    frontier_phi_66_pred_5 = _3292;
                }
                _3094 = frontier_phi_66_pred;
                _3092 = frontier_phi_66_pred_1;
                _3090 = frontier_phi_66_pred_2;
                _3088 = frontier_phi_66_pred_3;
                _3086 = frontier_phi_66_pred_4;
                _3084 = frontier_phi_66_pred_5;
                uint _3243 = _3242 + 1u;
                if (_3243 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3236 = _3084;
                    _3237 = _3086;
                    _3238 = _3088;
                    _3239 = _3090;
                    _3240 = _3092;
                    _3241 = _3094;
                    _3242 = _3243;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3083 = _3084;
            _3085 = _3086;
            _3087 = _3088;
            _3089 = _3090;
            _3091 = _3092;
            _3093 = _3094;
        }
        uvec4 _3097 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3098 = _3097.z;
        uint _3100 = (_3098 >> 8u) & 15u;
        float _3204;
        float _3206;
        float _3208;
        float _3210;
        float _3212;
        float _3214;
        if (((4294967295u << _3100) & _2958) == 0u)
        {
            _3204 = _3083;
            _3206 = _3085;
            _3208 = _3087;
            _3210 = _3089;
            _3212 = _3091;
            _3214 = _3093;
        }
        else
        {
            float _3229 = inversesqrt(dot(vec3(_2036, _2037, _2038), vec3(_2036, _2037, _2038)));
            float _3230 = _3229 * _2036;
            float _3231 = _3229 * _2037;
            float _3232 = _3229 * _2038;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3100 < ((_3098 >> 12u) & 15u))
            {
                float _3205;
                float _3207;
                float _3209;
                float _3211;
                float _3213;
                float _3215;
                float _3343 = _3083;
                float _3344 = _3085;
                float _3345 = _3087;
                float _3346 = _3089;
                float _3347 = _3091;
                float _3348 = _3093;
                uint _3349 = _3100;
                uint _3358;
                bool _3359;
                for (;;)
                {
                    _3358 = texelFetch(g_lightClassification, int((((_2952 << 5u) + (_2938 << 9u)) + (_3349 << 2u)) >> 2u)).x;
                    _3359 = _3358 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3359)
                    {
                        frontier_phi_72_pred = _3348;
                        frontier_phi_72_pred_1 = _3347;
                        frontier_phi_72_pred_2 = _3346;
                        frontier_phi_72_pred_3 = _3345;
                        frontier_phi_72_pred_4 = _3344;
                        frontier_phi_72_pred_5 = _3343;
                    }
                    else
                    {
                        float _3542;
                        float _3543;
                        float _3544;
                        float _3545;
                        float _3546;
                        float _3547;
                        float _3836;
                        float _3837;
                        float _3838;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3555 = _3343;
                        float _3556 = _3344;
                        float _3557 = _3345;
                        float _3558 = _3346;
                        float _3559 = _3347;
                        float _3560 = _3348;
                        uint _3561 = _3358;
                        uint _3562;
                        vec4 _3587;
                        float _3588;
                        vec4 _3603;
                        vec3 _3615;
                        vec4 _3630;
                        vec4 _3645;
                        float _3692;
                        bool _3693;
                        for (;;)
                        {
                            uint _3572 = ((_3349 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3561));
                            _3562 = (_3561 + 4294967295u) & _3561;
                            uint _3574 = _3572 * 40u;
                            _3587 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3574)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3574 + 3u)).x));
                            _3588 = _3587.w;
                            uint _3590 = (_3572 * 40u) + 4u;
                            _3603 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3590)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3590 + 3u)).x));
                            uint _3605 = (_3572 * 40u) + 8u;
                            _3615 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3605)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3605 + 2u)).x));
                            uint _3617 = (_3572 * 40u) + 16u;
                            _3630 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3617)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3617 + 3u)).x));
                            uint _3632 = (_3572 * 40u) + 20u;
                            _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            uint _3648 = (_3572 * 40u) + 24u;
                            vec4 _3661 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3648)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3648 + 3u)).x));
                            uint _3667 = (_3572 * 40u) + 28u;
                            vec4 _3680 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3667)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3667 + 3u)).x));
                            _3692 = fma(_2038, _3680.z, fma(_2037, _3680.y, _3680.x * _2036)) + _3680.w;
                            _3693 = !((fma(_2038, _3661.z, fma(_2037, _3661.y, _3661.x * _2036)) + _3661.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3693)
                            {
                                float _3720 = _3587.x - _2036;
                                float _3721 = _3587.y - _2037;
                                float _3722 = _3587.z - _2038;
                                float _3723 = dot(vec3(_3720, _3721, _3722), vec3(_3720, _3721, _3722));
                                float _3726 = inversesqrt(_3723);
                                float _3727 = _3726 * _3720;
                                float _3728 = _3726 * _3721;
                                float _3729 = _3726 * _3722;
                                float _3733 = 1.0 - (_3723 / (_3588 * _3588));
                                float _4886 = isnan(0.0) ? _3733 : (isnan(_3733) ? 0.0 : max(_3733, 0.0));
                                float _3734 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
                                float _3738 = sqrt(_3723) * _3603.w;
                                float _3740 = 1.39999997615814208984375 / (_3738 + 1.39999997615814208984375);
                                float _3741 = _3740 * _3740;
                                float _3744 = ((1.0 - _3741) * dot(vec3(_3727, _3728, _3729), vec3(_922, _925, _928))) + _3741;
                                float _3747 = _3738 * _3738;
                                float _3751 = (fma(_2038, _3630.z, fma(_2037, _3630.y, _3630.x * _2036)) + _3630.w) / _3692;
                                float _3752 = (fma(_2038, _3645.z, fma(_2037, _3645.y, _3645.x * _2036)) + _3645.w) / _3692;
                                float _3756 = 1.0 - dot(vec2(_3751, _3752), vec2(_3751, _3752));
                                float _4902 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                                float _3757 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
                                float _3758 = _3757 * (((isnan(0.0) ? _3744 : (isnan(_3744) ? 0.0 : max(_3744, 0.0))) * _3734) / ((_3747 * 0.699999988079071044921875) + 1.0));
                                float _3770 = exp2(log2(1.0 / ((_3747 * 3.5) + 5.0)) * 0.25);
                                float _3771 = 1.0 - _982;
                                float _3778 = sqrt(1.0 - ((1.0 - (_3771 * _3771)) * (1.0 - (_3770 * _3770))));
                                float _3779 = _3778 * _3778;
                                float _3780 = _3779 * _3779;
                                float _3781 = _3727 - _3230;
                                float _3782 = _3728 - _3231;
                                float _3783 = _3729 - _3232;
                                float _3787 = inversesqrt(dot(vec3(_3781, _3782, _3783), vec3(_3781, _3782, _3783)));
                                float _3791 = dot(vec3(_922, _925, _928), vec3((-0.0) - _3230, (-0.0) - _3231, (-0.0) - _3232));
                                float _4913 = isnan(0.0) ? _3791 : (isnan(_3791) ? 0.0 : max(_3791, 0.0));
                                float _3794 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
                                float _3795 = dot(vec3(_922, _925, _928), vec3(_3787 * _3781, _3787 * _3782, _3787 * _3783));
                                float _4924 = isnan(0.0) ? _3795 : (isnan(_3795) ? 0.0 : max(_3795, 0.0));
                                float _3798 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
                                float _3802 = ((_3798 * _3798) * (_3780 + (-1.0))) + 1.0;
                                float _3803 = _3740 * _3779;
                                float _3804 = _3803 * _3803;
                                float _3810 = ((1.0 - _3804) * dot(vec3(_922, _925, _928), vec3(_3727, _3728, _3729))) + _3804;
                                float _4935 = isnan(0.0) ? _3810 : (isnan(_3810) ? 0.0 : max(_3810, 0.0));
                                float _3811 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
                                float _3812 = 1.0 - _3779;
                                float _3822 = (0.5 / (((_3811 * ((_3794 * _3812) + _3779)) + 9.9999999392252902907785028219223e-09) + (((_3811 * _3812) + _3779) * _3794))) * _3811;
                                float _4946 = isnan(0.0) ? _3822 : (isnan(_3822) ? 0.0 : max(_3822, 0.0));
                                float _3832 = (_3757 * _3734) * (((_3780 * 3.1415927410125732421875) * (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0)))) / ((_3802 * _3802) * ((_3747 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3758 * _3603.y;
                                frontier_phi_78_pred_1 = _3758 * _3603.x;
                                frontier_phi_78_pred_2 = _3832 * _3615.z;
                                frontier_phi_78_pred_3 = _3832 * _3615.y;
                                frontier_phi_78_pred_4 = _3832 * _3615.x;
                                frontier_phi_78_pred_5 = _3758 * _3603.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3840 = frontier_phi_78_pred;
                            _3839 = frontier_phi_78_pred_1;
                            _3838 = frontier_phi_78_pred_2;
                            _3837 = frontier_phi_78_pred_3;
                            _3836 = frontier_phi_78_pred_4;
                            _3841 = frontier_phi_78_pred_5;
                            _3545 = _3839 + _3558;
                            _3546 = _3840 + _3559;
                            _3547 = _3841 + _3560;
                            _3542 = _3836 + _3555;
                            _3543 = _3837 + _3556;
                            _3544 = _3838 + _3557;
                            if (_3562 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3555 = _3542;
                                _3556 = _3543;
                                _3557 = _3544;
                                _3558 = _3545;
                                _3559 = _3546;
                                _3560 = _3547;
                                _3561 = _3562;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3547;
                        frontier_phi_72_pred_1 = _3546;
                        frontier_phi_72_pred_2 = _3545;
                        frontier_phi_72_pred_3 = _3544;
                        frontier_phi_72_pred_4 = _3543;
                        frontier_phi_72_pred_5 = _3542;
                    }
                    _3215 = frontier_phi_72_pred;
                    _3213 = frontier_phi_72_pred_1;
                    _3211 = frontier_phi_72_pred_2;
                    _3209 = frontier_phi_72_pred_3;
                    _3207 = frontier_phi_72_pred_4;
                    _3205 = frontier_phi_72_pred_5;
                    uint _3350 = _3349 + 1u;
                    if (_3350 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3343 = _3205;
                        _3344 = _3207;
                        _3345 = _3209;
                        _3346 = _3211;
                        _3347 = _3213;
                        _3348 = _3215;
                        _3349 = _3350;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3215;
                frontier_phi_60_61_ladder_1 = _3213;
                frontier_phi_60_61_ladder_2 = _3209;
                frontier_phi_60_61_ladder_3 = _3207;
                frontier_phi_60_61_ladder_4 = _3205;
                frontier_phi_60_61_ladder_5 = _3211;
            }
            else
            {
                frontier_phi_60_61_ladder = _3093;
                frontier_phi_60_61_ladder_1 = _3091;
                frontier_phi_60_61_ladder_2 = _3087;
                frontier_phi_60_61_ladder_3 = _3085;
                frontier_phi_60_61_ladder_4 = _3083;
                frontier_phi_60_61_ladder_5 = _3089;
            }
            _3204 = frontier_phi_60_61_ladder_4;
            _3206 = frontier_phi_60_61_ladder_3;
            _3208 = frontier_phi_60_61_ladder_2;
            _3210 = frontier_phi_60_61_ladder_5;
            _3212 = frontier_phi_60_61_ladder_1;
            _3214 = frontier_phi_60_61_ladder;
        }
        float _3219 = isnan(1.0) ? _966 : (isnan(_966) ? 1.0 : min(_966, 1.0));
        _2971 = (_3219 * _3210) + _2502;
        _2973 = (_3219 * _3212) + _2504;
        _2975 = (_3219 * _3214) + _2506;
        _2977 = ((_3204 * 0.039999999105930328369140625) * _3219) + _2825;
        _2979 = ((_3206 * 0.039999999105930328369140625) * _3219) + _2827;
        _2981 = ((_3208 * 0.039999999105930328369140625) * _3219) + _2829;
    }
    else
    {
        _2971 = _2502;
        _2973 = _2504;
        _2975 = _2506;
        _2977 = _2825;
        _2979 = _2827;
        _2981 = _2829;
    }
    uint _2987 = _942 + uint(cbMatDynParam._m0[0u].w);
    float _2993 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2999 = (((((_2993 * cbMtdParam._m0[14u].x) * _698.x) * _721) * _795) * (((1.0 - _774) * cbMtdParam._m0[20u].w) + _774)) * cbInstanceData._m0[_2987].x;
    float _3005 = (((((_2993 * cbMtdParam._m0[14u].y) * _698.y) * _721) * _795) * (((1.0 - _776) * cbMtdParam._m0[20u].w) + _776)) * cbInstanceData._m0[_2987].y;
    float _3011 = (((((_2993 * cbMtdParam._m0[14u].z) * _698.z) * _721) * _795) * (((1.0 - _778) * cbMtdParam._m0[20u].w) + _778)) * cbInstanceData._m0[_2987].z;
    float _4962 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _4973 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _4984 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _3028 = (((isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0))) * (_2971 + ((isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0))) * _966))) + ((_2977 + ((isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0))) * _1772)) * cbPerFrame._m0[3u].x)) + _2999;
    float _3030 = (_3005 + ((_2979 + ((isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0))) * _1772)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0))) * (_2973 + ((isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))) * _966)));
    float _3032 = (_3011 + ((_2981 + ((isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0))) * _1772)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0))) * (_2975 + ((isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0))) * _966)));
    float _5010 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3045 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
    uint _3046 = _941 + 6u;
    float _3054 = _903 / cbSceneParam._m0[86u].x;
    float _3055 = _904 / cbSceneParam._m0[86u].y;
    vec4 _3069 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3054, _3055, (log2((isnan(cbSceneParam._m0[77u].w) ? _838 : (isnan(_838) ? cbSceneParam._m0[77u].w : min(_838, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3071 = _3069.x;
    float _3072 = _3069.y;
    float _3073 = _3069.z;
    float _3074 = _3069.w;
    float _3145;
    float _3147;
    float _3149;
    float _3151;
    if (_838 > cbSceneParam._m0[78u].w)
    {
        float _3108 = isnan(_838) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _838 : min(cbSceneParam._m0[80u].w, _838));
        float _3109 = _3108 / _838;
        float _3120 = _3109 * _888;
        float _3121 = _889 * _3109;
        float _3122 = (-0.0) - _3121;
        float _3123 = _3109 * _890;
        float _3125 = (cbSceneParam._m0[77u].w * _3122) / _3108;
        float _3126 = _3125 + cbSceneParam._m0[79u].w;
        float _3127 = cbSceneParam._m0[79u].w - _3121;
        float _3133 = sqrt(((_3120 * _3120) + (_3121 * _3121)) + (_3123 * _3123));
        float _3136 = (1.0 - (cbSceneParam._m0[77u].w / _3108)) * _3133;
        float _3141 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3143 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3305;
        if (abs((_3122 - _3125) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3305 = ((((_3126 > 0.0) ? exp2(_3141 * _3126) : (2.0 - exp2(_3143 * _3126))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3136;
        }
        else
        {
            float _3265 = 1.0 / cbSceneParam._m0[80u].x;
            float _3266 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : max(_3126, _3127));
            float _3267 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : min(_3126, _3127));
            float _3276 = isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : min(_3266, 0.0));
            float _3277 = isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : min(_3267, 0.0));
            _3305 = ((abs(_3133 / _3122) * cbSceneParam._m0[80u].y) * ((((_3276 - _3277) * 2.0) - ((exp2(_3141 * (isnan(0.0) ? _3266 : (isnan(_3266) ? 0.0 : max(_3266, 0.0)))) - exp2(_3141 * (isnan(0.0) ? _3267 : (isnan(_3267) ? 0.0 : max(_3267, 0.0))))) * _3265)) - ((exp2(_3143 * _3276) - exp2(_3143 * _3277)) * _3265))) + (_3136 * cbSceneParam._m0[80u].z);
        }
        vec4 _3307 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3054, _3055, 1.0), 0.0);
        float _3316 = exp2((_3305 * (-1.44269502162933349609375)) * (1.0 - _3307.w));
        float _3317 = log2(_3316);
        float _3333 = log2(_3074);
        _3145 = (exp2(_3333 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].x)) * _3307.x) / cbSceneParam._m0[78u].x)) + _3071;
        _3147 = (exp2(_3333 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].y)) * _3307.y) / cbSceneParam._m0[78u].y)) + _3072;
        _3149 = (exp2(_3333 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3317 * cbSceneParam._m0[78u].z)) * _3307.z) / cbSceneParam._m0[78u].z)) + _3073;
        _3151 = _3316 * _3074;
    }
    else
    {
        _3145 = _3071;
        _3147 = _3072;
        _3149 = _3073;
        _3151 = _3074;
    }
    float _3163 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3164 = _3163 == 3.0;
    float _3165 = log2(_3151);
    float _3169 = exp2(_3165 * cbSceneParam._m0[78u].x);
    float _3170 = exp2(_3165 * cbSceneParam._m0[78u].y);
    float _3171 = exp2(_3165 * cbSceneParam._m0[78u].z);
    float _3172 = _3169 * (isnan(0.0) ? _3028 : (isnan(_3028) ? 0.0 : max(_3028, 0.0)));
    float _3173 = _3170 * (isnan(0.0) ? _3030 : (isnan(_3030) ? 0.0 : max(_3030, 0.0)));
    float _3174 = _3171 * (isnan(0.0) ? _3032 : (isnan(_3032) ? 0.0 : max(_3032, 0.0)));
    float _3183 = (_3163 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3183 * (_3164 ? _3172 : (_3172 + (cbSceneParam._m0[72u].w * _3145)));
    SV_Target.y = _3183 * (_3164 ? _3173 : (_3173 + (cbSceneParam._m0[72u].w * _3147)));
    SV_Target.z = _3183 * (_3164 ? _3174 : (_3174 + (cbSceneParam._m0[72u].w * _3149)));
    SV_Target.w = cbInstanceData._m0[_3046].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2999) * _3045) * _3169) * _3183;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3005) * _3045) * _3170) * _3183;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3011) * _3045) * _3171) * _3183;
    SV_Target_1.w = cbInstanceData._m0[_3046].w;
}


