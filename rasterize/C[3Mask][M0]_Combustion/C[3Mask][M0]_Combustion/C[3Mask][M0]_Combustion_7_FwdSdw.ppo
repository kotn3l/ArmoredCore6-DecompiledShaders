#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_6;
layout(set = 0, binding = 15) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_15;
layout(set = 0, binding = 7) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_16;
layout(set = 0, binding = 8) uniform texture2D C_3Mask_M0_Combustion_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1223;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _212 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _213 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _214 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _220 = inversesqrt(dot(vec3(_212, _213, _214), vec3(_212, _213, _214)));
    float _227 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _234 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _256 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _262 = _256.x * cbMtdParam._m0[10u].x;
    float _263 = _256.y * cbMtdParam._m0[10u].y;
    float _264 = _256.z * cbMtdParam._m0[10u].z;
    vec4 _283 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _302 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _329 = cbMtdParam._m0[21u].z * texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _339 = ((cbMtdParam._m0[17u].x * (-1.39999997615814208984375)) * (((1.0 - _302.x) * 2.0) - _329)) + 1.0;
    float _3866 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _340 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
    float _347 = (_340 * ((_283.x * cbMtdParam._m0[11u].x) - _262)) + _262;
    float _348 = (_340 * ((_283.y * cbMtdParam._m0[11u].y) - _263)) + _263;
    float _349 = (_340 * ((_283.z * cbMtdParam._m0[11u].z) - _264)) + _264;
    vec4 _368 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _381 = (((((1.0 - _302.y) * 2.0) - _329) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].x) + 1.0;
    float _3877 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _382 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
    float _389 = (((_368.x * cbMtdParam._m0[12u].x) - _347) * _382) + _347;
    float _390 = (_382 * ((_368.y * cbMtdParam._m0[12u].y) - _348)) + _348;
    float _391 = (_382 * ((_368.z * cbMtdParam._m0[12u].z) - _349)) + _349;
    vec4 _409 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _422 = (((((1.0 - _302.z) * 2.0) - _329) * (-1.39999997615814208984375)) * cbMtdParam._m0[21u].y) + 1.0;
    float _3888 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _423 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
    float _430 = (((_409.x * cbMtdParam._m0[13u].x) - _389) * _423) + _389;
    float _431 = (_423 * ((_409.y * cbMtdParam._m0[13u].y) - _390)) + _390;
    float _432 = (_423 * ((_409.z * cbMtdParam._m0[13u].z) - _391)) + _391;
    vec4 _445 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    vec4 _459 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _461 = _459.x;
    float _462 = _459.y;
    float _463 = _459.z;
    vec4 _475 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.x) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.y) + cbTextureTilingScale._m0[13u].w));
    float _486 = ((_475.x - _461) * _340) + _461;
    float _487 = ((_475.y - _462) * _340) + _462;
    float _488 = ((_475.z - _463) * _340) + _463;
    vec4 _501 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _512 = ((_501.x - _486) * _382) + _486;
    float _513 = ((_501.y - _487) * _382) + _487;
    float _514 = ((_501.z - _488) * _382) + _488;
    vec4 _527 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _540 = ((_527.z - _514) * _423) + _514;
    float _543 = ((((_527.x - _512) * _423) + _512) * 2.0) + (-1.0);
    float _545 = ((((_527.y - _513) * _423) + _513) * 2.0) + (-1.0);
    float _546 = dot(vec2(_543, _545), vec2(_543, _545));
    float _3899 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _551 = sqrt(1.0 - (isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0))));
    vec4 _584 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, (((cbMtdParam._m0[22u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _598 = abs((fract(cbMtdParam._m0[17u].w * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3910 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _599 = isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0));
    float _607 = (((_599 * _599) * (3.0 - (_599 * 2.0))) * cbMtdParam._m0[18u].y) - cbMtdParam._m0[18u].z;
    float _615 = cbMtdParam._m0[18u].w * cbPerFrame._m0[22u].x;
    float _623 = abs((fract(cbMtdParam._m0[19u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3921 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _624 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
    float _628 = (_624 * _624) * (3.0 - (_624 * 2.0));
    float _629 = _628 * cbMtdParam._m0[22u].x;
    float _630 = _628 * cbMtdParam._m0[22u].y;
    float _631 = sin(_615);
    float _632 = cos(_615);
    float _633 = TEXCOORD.z - _629;
    float _634 = TEXCOORD.w - _630;
    vec4 _654 = texture(sampler2D(C_3Mask_M0_Combustion_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * (_629 + fma(_634, (-0.0) - _631, _633 * _632))) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * (fma(_634, _632, _633 * _631) + _630)) + cbTextureTilingScale._m0[2u].w));
    float _660 = (cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _654.x;
    float _662 = (cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _654.y;
    float _664 = (cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _654.z;
    float _685 = (TEXCOORD_5.x - (((_445.x + 0.00999999977648258209228515625) * (1.0 - TEXCOORD_5.x)) * cbMtdParam._m0[21u].w)) * (cbMtdParam._m0[17u].y + 1.0);
    float _3932 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _686 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
    float _689 = fma(_551, _227 * NORMAL.x, fma(_545, _234 * TANGENT.x, (_220 * _212) * _543));
    float _692 = fma(_551, _227 * NORMAL.y, fma(_545, _234 * TANGENT.y, (_220 * _213) * _543));
    float _695 = fma(_551, _227 * NORMAL.z, fma(_545, _234 * TANGENT.z, (_220 * _214) * _543));
    float _699 = inversesqrt(dot(vec3(_689, _692, _695), vec3(_689, _692, _695)));
    float _700 = _699 * _689;
    float _701 = _699 * _692;
    float _702 = _699 * _695;
    float _3943 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _703 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
    float _3954 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _3965 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _3976 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _722 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _763 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _773 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _763);
    float _774 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _763);
    float _775 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _763);
    float _779 = inversesqrt(dot(vec3(_773, _774, _775), vec3(_773, _774, _775)));
    float _780 = _773 * _779;
    float _781 = _774 * _779;
    float _782 = _775 * _779;
    float _788 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _789 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _808 = fma(_702, cbSceneParam._m0[5u].z, fma(_701, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _700));
    float _811 = fma(_702, cbSceneParam._m0[6u].z, fma(_701, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _700));
    float _814 = fma(_702, cbSceneParam._m0[7u].z, fma(_701, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _700));
    uint _827 = uint(roundEven(NORMAL.w)) * 13u;
    uint _828 = _827 + 9u;
    uint _829 = _828 + uint(cbMatDynParam._m0[0u].w);
    float _835 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0)))) * cbInstanceData._m0[_829].x;
    float _836 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0)))) * cbInstanceData._m0[_829].y;
    float _837 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0)))) * cbInstanceData._m0[_829].z;
    float _3987 = isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0));
    float _838 = isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0));
    float _3998 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
    float _839 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
    float _4009 = isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0));
    float _840 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
    vec4 _849 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _788, cbSceneParam._m0[86u].y * _789));
    float _852 = _849.x * TEXCOORD_5.w;
    float _853 = dot(vec3(_700, _701, _702), vec3(_780, _781, _782));
    float _856 = _853 * 2.0;
    float _860 = (_856 * _700) - _780;
    float _861 = (_856 * _701) - _781;
    float _862 = (_856 * _702) - _782;
    float _866 = abs(dot(vec3(_780, _781, _782), vec3(_700, _701, _702)));
    float _4020 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _868 = sqrt(_703);
    float _880 = exp2((_868 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_868 * 3.0));
    float _912 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _916 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _920 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1222;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    float _1236;
    float _1237;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _947 = fma(_920, cbModelParam._m0[26u].z, fma(_916, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _912));
        float _951 = fma(_920, cbModelParam._m0[27u].z, fma(_916, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _912));
        float _955 = fma(_920, cbModelParam._m0[28u].z, fma(_916, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _912));
        float _980 = _912 + _700;
        float _981 = _916 + _701;
        float _982 = _920 + _702;
        float _992 = fma(_982, cbModelParam._m0[26u].z, fma(_981, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _980)) - _947;
        float _993 = fma(_982, cbModelParam._m0[27u].z, fma(_981, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _980)) - _951;
        float _994 = fma(_982, cbModelParam._m0[28u].z, fma(_981, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _980)) - _955;
        float _998 = inversesqrt(dot(vec3(_992, _993, _994), vec3(_992, _993, _994)));
        float _1011 = ((_998 * _992) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_947 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1012 = ((_998 * _993) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_951 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1013 = ((_998 * _994) / cbModelParam._m0[34u].z) + ((((((_955 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1011, _1012, _1013), 0.0);
        vec4 _1023 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1011, _1012, _1013), 0.0);
        vec4 _1030 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1011, _1012, _1013), 0.0);
        vec4 _1037 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1011, _1012, _1013), 0.0);
        float _1050 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1051 = _1050 * (_1016.x + (-0.5));
        float _1052 = _1050 * (_1016.y + (-0.5));
        float _1053 = _1050 * (_1016.z + (-0.5));
        float _1060 = exp2((_1023.w + (-0.5)) * 20.0) * 2.0;
        float _1061 = _1060 * (_1023.x + (-0.5));
        float _1062 = _1060 * (_1023.y + (-0.5));
        float _1063 = _1060 * (_1023.z + (-0.5));
        float _1070 = exp2((_1030.w + (-0.5)) * 20.0) * 2.0;
        float _1071 = _1070 * (_1030.x + (-0.5));
        float _1072 = _1070 * (_1030.y + (-0.5));
        float _1073 = _1070 * (_1030.z + (-0.5));
        float _1080 = exp2((_1037.w + (-0.5)) * 20.0) * 2.0;
        float _1081 = _1080 * (_1037.x + (-0.5));
        float _1082 = _1080 * (_1037.y + (-0.5));
        float _1083 = _1080 * (_1037.z + (-0.5));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
        float _1086 = isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0));
        float _1087 = _1051 * 0.5;
        float _1088 = _1061 * 0.5;
        float _1089 = _1071 * 0.5;
        float _1090 = dot(vec3(_1087, _1088, _1089), vec3(_1087, _1088, _1089));
        float _1095 = (_1090 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1090);
        float _1104 = (dot(vec3(_700, _701, _702), vec3(_1095 * _1087, _1095 * _1088, _1095 * _1089)) + 1.0) * 0.5;
        float _4046 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1114 = sqrt(((_1088 * _1088) + (_1087 * _1087)) + (_1089 * _1089)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _4057 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1115 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
        float _1116 = _1115 * 2.0;
        float _1120 = (1.0 - _1115) / (_1115 + 1.0);
        float _4068 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
        float _1121 = isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0));
        float _1130 = ((((1.0 - _1121) * (_1116 + 2.0)) * exp2(log2(isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0))) * (_1116 + 1.0))) + _1121) * _1084;
        float _1131 = _1052 * 0.5;
        float _1132 = _1062 * 0.5;
        float _1133 = _1072 * 0.5;
        float _1134 = dot(vec3(_1131, _1132, _1133), vec3(_1131, _1132, _1133));
        float _1139 = (_1134 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1134);
        float _1147 = (dot(vec3(_700, _701, _702), vec3(_1139 * _1131, _1139 * _1132, _1139 * _1133)) + 1.0) * 0.5;
        float _4079 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1156 = sqrt(((_1132 * _1132) + (_1131 * _1131)) + (_1133 * _1133)) / (_1085 + 9.9999997473787516355514526367188e-06);
        float _4090 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
        float _1158 = _1157 * 2.0;
        float _1162 = (1.0 - _1157) / (_1157 + 1.0);
        float _4101 = isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0));
        float _1163 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
        float _1172 = ((((1.0 - _1163) * (_1158 + 2.0)) * exp2(log2(isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0))) * (_1158 + 1.0))) + _1163) * _1085;
        float _1173 = _1053 * 0.5;
        float _1174 = _1063 * 0.5;
        float _1175 = _1073 * 0.5;
        float _1176 = dot(vec3(_1173, _1174, _1175), vec3(_1173, _1174, _1175));
        float _1181 = (_1176 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1176);
        float _1189 = (dot(vec3(_700, _701, _702), vec3(_1181 * _1173, _1181 * _1174, _1181 * _1175)) + 1.0) * 0.5;
        float _4112 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1198 = sqrt(((_1174 * _1174) + (_1173 * _1173)) + (_1175 * _1175)) / (_1086 + 9.9999997473787516355514526367188e-06);
        float _4123 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
        float _1200 = _1199 * 2.0;
        float _1204 = (1.0 - _1199) / (_1199 + 1.0);
        float _4134 = isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0));
        float _1205 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
        float _1214 = ((((1.0 - _1205) * (_1200 + 2.0)) * exp2(log2(isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0))) * (_1200 + 1.0))) + _1205) * _1086;
        _1222 = _1053;
        _1224 = _1052;
        _1225 = _1051;
        _1226 = _1063;
        _1227 = _1062;
        _1228 = _1061;
        _1229 = _1073;
        _1230 = _1072;
        _1231 = _1071;
        _1232 = _1086;
        _1233 = _1085;
        _1234 = _1084;
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0)));
        _1236 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0)));
        _1237 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1214 : (isnan(_1214) ? 0.0 : max(_1214, 0.0)));
    }
    else
    {
        _1222 = _1223;
        _1224 = _1223;
        _1225 = _1223;
        _1226 = _1223;
        _1227 = _1223;
        _1228 = _1223;
        _1229 = _1223;
        _1230 = _1223;
        _1231 = _1223;
        _1232 = _1223;
        _1233 = _1223;
        _1234 = _1223;
        _1235 = 0.0;
        _1236 = 0.0;
        _1237 = 0.0;
    }
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1263 = fma(_920, cbModelParam._m0[30u].z, fma(_916, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _912));
        float _1267 = fma(_920, cbModelParam._m0[31u].z, fma(_916, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _912));
        float _1271 = fma(_920, cbModelParam._m0[32u].z, fma(_916, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _912));
        float _1294 = _912 + _700;
        float _1295 = _916 + _701;
        float _1296 = _920 + _702;
        float _1306 = fma(_1296, cbModelParam._m0[30u].z, fma(_1295, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1294)) - _1263;
        float _1307 = fma(_1296, cbModelParam._m0[31u].z, fma(_1295, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1294)) - _1267;
        float _1308 = fma(_1296, cbModelParam._m0[32u].z, fma(_1295, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1294)) - _1271;
        float _1312 = inversesqrt(dot(vec3(_1306, _1307, _1308), vec3(_1306, _1307, _1308)));
        float _1325 = ((_1312 * _1306) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1263 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1326 = ((_1312 * _1307) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1267 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1327 = ((_1312 * _1308) / cbModelParam._m0[35u].z) + ((((((_1271 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1329 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1336 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1343 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1325, _1326, _1327), 0.0);
        float _1362 = exp2((_1329.w + (-0.5)) * 20.0) * 2.0;
        float _1363 = _1362 * (_1329.x + (-0.5));
        float _1364 = _1362 * (_1329.y + (-0.5));
        float _1365 = _1362 * (_1329.z + (-0.5));
        float _1372 = exp2((_1336.w + (-0.5)) * 20.0) * 2.0;
        float _1373 = _1372 * (_1336.x + (-0.5));
        float _1374 = _1372 * (_1336.y + (-0.5));
        float _1375 = _1372 * (_1336.z + (-0.5));
        float _1382 = exp2((_1343.w + (-0.5)) * 20.0) * 2.0;
        float _1383 = _1382 * (_1343.x + (-0.5));
        float _1384 = _1382 * (_1343.y + (-0.5));
        float _1385 = _1382 * (_1343.z + (-0.5));
        float _1392 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1393 = _1392 * (_1350.x + (-0.5));
        float _1394 = _1392 * (_1350.y + (-0.5));
        float _1395 = _1392 * (_1350.z + (-0.5));
        float _1396 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1397 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = _1363 * 0.5;
        float _1400 = _1373 * 0.5;
        float _1401 = _1383 * 0.5;
        float _1402 = dot(vec3(_1399, _1400, _1401), vec3(_1399, _1400, _1401));
        float _1407 = (_1402 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1402);
        float _1415 = (dot(vec3(_700, _701, _702), vec3(_1407 * _1399, _1407 * _1400, _1407 * _1401)) + 1.0) * 0.5;
        float _4175 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1424 = sqrt(((_1400 * _1400) + (_1399 * _1399)) + (_1401 * _1401)) / (_1396 + 9.9999997473787516355514526367188e-06);
        float _4186 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0));
        float _1426 = _1425 * 2.0;
        float _1430 = (1.0 - _1425) / (_1425 + 1.0);
        float _4197 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
        float _1431 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
        float _1440 = ((((1.0 - _1431) * (_1426 + 2.0)) * exp2(log2(isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0))) * (_1426 + 1.0))) + _1431) * _1396;
        float _1441 = _1364 * 0.5;
        float _1442 = _1374 * 0.5;
        float _1443 = _1384 * 0.5;
        float _1444 = dot(vec3(_1441, _1442, _1443), vec3(_1441, _1442, _1443));
        float _1449 = (_1444 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1444);
        float _1457 = (dot(vec3(_700, _701, _702), vec3(_1449 * _1441, _1449 * _1442, _1449 * _1443)) + 1.0) * 0.5;
        float _4208 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1466 = sqrt(((_1442 * _1442) + (_1441 * _1441)) + (_1443 * _1443)) / (_1397 + 9.9999997473787516355514526367188e-06);
        float _4219 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
        float _1468 = _1467 * 2.0;
        float _1472 = (1.0 - _1467) / (_1467 + 1.0);
        float _4230 = isnan(0.0) ? _1472 : (isnan(_1472) ? 0.0 : max(_1472, 0.0));
        float _1473 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
        float _1482 = ((((1.0 - _1473) * (_1468 + 2.0)) * exp2(log2(isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0))) * (_1468 + 1.0))) + _1473) * _1397;
        float _1483 = _1365 * 0.5;
        float _1484 = _1375 * 0.5;
        float _1485 = _1385 * 0.5;
        float _1486 = dot(vec3(_1483, _1484, _1485), vec3(_1483, _1484, _1485));
        float _1491 = (_1486 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1486);
        float _1499 = (dot(vec3(_700, _701, _702), vec3(_1491 * _1483, _1491 * _1484, _1491 * _1485)) + 1.0) * 0.5;
        float _4241 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1508 = sqrt(((_1484 * _1484) + (_1483 * _1483)) + (_1485 * _1485)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _4252 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
        float _1510 = _1509 * 2.0;
        float _1514 = (1.0 - _1509) / (_1509 + 1.0);
        float _4263 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1515 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
        float _1524 = ((((1.0 - _1515) * (_1510 + 2.0)) * exp2(log2(isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0))) * (_1510 + 1.0))) + _1515) * _1398;
        _1532 = _1365;
        _1533 = _1364;
        _1534 = _1363;
        _1535 = _1375;
        _1536 = _1374;
        _1537 = _1373;
        _1538 = _1385;
        _1539 = _1384;
        _1540 = _1383;
        _1541 = _1398;
        _1542 = _1397;
        _1543 = _1396;
        _1544 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0)));
        _1545 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0)));
        _1546 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1524 : (isnan(_1524) ? 0.0 : max(_1524, 0.0)));
    }
    else
    {
        _1532 = _1223;
        _1533 = _1223;
        _1534 = _1223;
        _1535 = _1223;
        _1536 = _1223;
        _1537 = _1223;
        _1538 = _1223;
        _1539 = _1223;
        _1540 = _1223;
        _1541 = _1223;
        _1542 = _1223;
        _1543 = _1223;
        _1544 = 0.0;
        _1545 = 0.0;
        _1546 = 0.0;
    }
    float _1556 = (cbModelParam._m0[1u].x * (_1544 - _1235)) + _1235;
    float _1557 = (cbModelParam._m0[1u].x * (_1545 - _1236)) + _1236;
    float _1558 = (cbModelParam._m0[1u].x * (_1546 - _1237)) + _1237;
    float _1579 = fma(_1558, cbSceneParam._m0[89u].z, fma(_1557, cbSceneParam._m0[89u].y, _1556 * cbSceneParam._m0[89u].x));
    float _1582 = fma(_1558, cbSceneParam._m0[90u].z, fma(_1557, cbSceneParam._m0[90u].y, _1556 * cbSceneParam._m0[90u].x));
    float _1585 = fma(_1558, cbSceneParam._m0[91u].z, fma(_1557, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1556));
    float _1600 = _860 * 0.5;
    float _1601 = _861 * 0.5;
    float _1602 = _862 * 0.5;
    float _1603 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1534, _1537, _1540, _1543));
    float _1606 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1533, _1536, _1539, _1542));
    float _1609 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1532, _1535, _1538, _1541));
    float _1643;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1616 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1222, _1226, _1229, _1232));
        float _1620 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1224, _1227, _1230, _1233));
        float _1624 = dot(vec4(_1600, _1601, _1602, 1.0), vec4(_1225, _1228, _1231, _1234));
        float _1631 = dot(vec4(cbModelParam._m0[39u]), vec4(_1600, _1601, _1602, 1.0));
        _1643 = dot(vec3(isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0)), isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1631) ? 0.0 : (isnan(0.0) ? _1631 : max(0.0, _1631))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1643 = 1.0;
    }
    float _1654;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1645 = dot(vec4(cbModelParam._m0[40u]), vec4(_1600, _1601, _1602, 1.0));
        _1654 = dot(vec3(isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0)), isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0)), isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1645) ? 0.0 : (isnan(0.0) ? _1645 : max(0.0, _1645))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1654 = 1.0;
    }
    float _1658 = (_1654 * cbModelParam._m0[1u].x) + (_1643 * (1.0 - cbModelParam._m0[1u].x));
    float _1668 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _703);
    float _1669 = isnan(_1668) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1668 : min(cbModelParam._m0[25u].z, _1668));
    float _1749;
    float _1751;
    float _1753;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1716 = fma(_920, cbModelParam._m0[13u].z, fma(_916, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _912)) + cbModelParam._m0[13u].w;
        float _1720 = fma(_920, cbModelParam._m0[14u].z, fma(_916, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _912)) + cbModelParam._m0[14u].w;
        float _1724 = fma(_920, cbModelParam._m0[15u].z, fma(_916, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _912)) + cbModelParam._m0[15u].w;
        float _1727 = fma(_862, cbModelParam._m0[13u].z, fma(_861, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _860));
        float _1730 = fma(_862, cbModelParam._m0[14u].z, fma(_861, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _860));
        float _1733 = fma(_862, cbModelParam._m0[15u].z, fma(_861, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _860));
        float _1761;
        if (_1727 > 0.0)
        {
            _1761 = abs((1.0 - _1716) / _1727);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1727 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1716 + 1.0) / _1727);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1761 = frontier_phi_14_12_ladder;
        }
        float _1930;
        if (_1730 > 0.0)
        {
            _1930 = abs((1.0 - _1720) / _1730);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1730 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1720 + 1.0) / _1730);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1930 = frontier_phi_23_19_ladder;
        }
        float _2226;
        if (_1733 > 0.0)
        {
            _2226 = abs((1.0 - _1724) / _1733);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1733 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1724 + 1.0) / _1733);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2226 = frontier_phi_35_30_ladder;
        }
        float _2228 = isnan(_1930) ? _1761 : (isnan(_1761) ? _1930 : min(_1761, _1930));
        float _2229 = isnan(_2226) ? _2228 : (isnan(_2228) ? _2226 : min(_2228, _2226));
        float _2233 = (_2229 * _1727) + _1716;
        float _2234 = (_2229 * _1730) + _1720;
        float _2235 = (_2229 * _1733) + _1724;
        float _2236 = _2229 * 9.9999997473787516355514526367188e-05;
        float _2238 = (-1.0) - _2236;
        float _2240 = _2236 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2235 > _2240) || ((_2235 < _2238) || ((_2234 > _2240) || ((_2234 < _2238) || ((_2233 < _2238) || (_2233 > _2240))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2380 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2235, cbModelParam._m0[9u].z, fma(_2234, cbModelParam._m0[9u].y, _2233 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2235, cbModelParam._m0[10u].z, fma(_2234, cbModelParam._m0[10u].y, _2233 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2235, cbModelParam._m0[11u].z, fma(_2234, cbModelParam._m0[11u].y, _2233 * cbModelParam._m0[11u].x))), _1669);
            frontier_phi_13_35_ladder = _2380.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2380.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2380.x * cbModelParam._m0[1u].y;
        }
        _1749 = frontier_phi_13_35_ladder_2;
        _1751 = frontier_phi_13_35_ladder_1;
        _1753 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1737 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_860, _861, _862), _1669);
        _1749 = _1737.x * cbModelParam._m0[1u].y;
        _1751 = _1737.y * cbModelParam._m0[1u].y;
        _1753 = _1737.z * cbModelParam._m0[1u].y;
    }
    float _1757 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _703);
    float _1758 = isnan(_1757) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1757 : min(cbModelParam._m0[25u].w, _1757));
    float _1847;
    float _1849;
    float _1851;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1811 = fma(_920, cbModelParam._m0[21u].z, fma(_916, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _912)) + cbModelParam._m0[21u].w;
        float _1815 = fma(_920, cbModelParam._m0[22u].z, fma(_916, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _912)) + cbModelParam._m0[22u].w;
        float _1819 = fma(_920, cbModelParam._m0[23u].z, fma(_916, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _912)) + cbModelParam._m0[23u].w;
        float _1822 = fma(_862, cbModelParam._m0[21u].z, fma(_861, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _860));
        float _1825 = fma(_862, cbModelParam._m0[22u].z, fma(_861, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _860));
        float _1828 = fma(_862, cbModelParam._m0[23u].z, fma(_861, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _860));
        float _1935;
        if (_1822 > 0.0)
        {
            _1935 = abs((1.0 - _1811) / _1822);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1822 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1811 + 1.0) / _1822);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1935 = frontier_phi_25_21_ladder;
        }
        float _2253;
        if (_1825 > 0.0)
        {
            _2253 = abs((1.0 - _1815) / _1825);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1815 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2253 = frontier_phi_37_32_ladder;
        }
        float _2580;
        if (_1828 > 0.0)
        {
            _2580 = abs((1.0 - _1819) / _1828);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1828 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1819 + 1.0) / _1828);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2580 = frontier_phi_47_44_ladder;
        }
        float _2582 = isnan(_2253) ? _1935 : (isnan(_1935) ? _2253 : min(_1935, _2253));
        float _2583 = isnan(_2580) ? _2582 : (isnan(_2582) ? _2580 : min(_2582, _2580));
        float _2587 = (_2583 * _1822) + _1811;
        float _2588 = (_2583 * _1825) + _1815;
        float _2589 = (_2583 * _1828) + _1819;
        float _2590 = _2583 * 9.9999997473787516355514526367188e-05;
        float _2591 = (-1.0) - _2590;
        float _2593 = _2590 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2589 > _2593) || ((_2589 < _2591) || ((_2588 > _2593) || ((_2588 < _2591) || ((_2587 < _2591) || (_2587 > _2593))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2707 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2589, cbModelParam._m0[17u].z, fma(_2588, cbModelParam._m0[17u].y, _2587 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2589, cbModelParam._m0[18u].z, fma(_2588, cbModelParam._m0[18u].y, _2587 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2589, cbModelParam._m0[19u].z, fma(_2588, cbModelParam._m0[19u].y, _2587 * cbModelParam._m0[19u].x))), _1758);
            frontier_phi_22_47_ladder = _2707.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2707.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2707.x * cbModelParam._m0[1u].z;
        }
        _1847 = frontier_phi_22_47_ladder_2;
        _1849 = frontier_phi_22_47_ladder_1;
        _1851 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1831 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_860, _861, _862), _1758);
        _1847 = _1831.x * cbModelParam._m0[1u].z;
        _1849 = _1831.y * cbModelParam._m0[1u].z;
        _1851 = _1831.z * cbModelParam._m0[1u].z;
    }
    float _1863 = ((((1.0 - _880) * ((_868 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_880 * _868)) * _852;
    float _1864 = _1863 * ((cbModelParam._m0[1u].w * (_1847 - _1749)) + _1749);
    float _1865 = _1863 * ((cbModelParam._m0[1u].w * (_1849 - _1751)) + _1751);
    float _1866 = _1863 * ((cbModelParam._m0[1u].w * (_1851 - _1753)) + _1753);
    float _1869 = fma(_1866, cbSceneParam._m0[89u].z, fma(_1865, cbSceneParam._m0[89u].y, _1864 * cbSceneParam._m0[89u].x));
    float _1872 = fma(_1866, cbSceneParam._m0[90u].z, fma(_1865, cbSceneParam._m0[90u].y, _1864 * cbSceneParam._m0[90u].x));
    float _1875 = fma(_1866, cbSceneParam._m0[91u].z, fma(_1865, cbSceneParam._m0[91u].y, _1864 * cbSceneParam._m0[91u].x));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1913 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1917 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1921 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1922 = _1909 / _1921;
    float _1923 = _1913 / _1921;
    float _1924 = _1917 / _1921;
    float _2071;
    float _2072;
    float _2073;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1951 = ((uint(_1924 > cbSceneParam._m0[59u].y) + uint(_1924 > cbSceneParam._m0[59u].x)) + uint(_1924 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1952 = _1951 + 43u;
        uint _1960 = _1951 + 44u;
        uint _1968 = _1951 + 45u;
        uint _1976 = _1951 + 46u;
        float _1987 = fma(_1921, cbSceneParam._m0[_1952].w, fma(_1917, cbSceneParam._m0[_1952].z, fma(_1913, cbSceneParam._m0[_1952].y, _1909 * cbSceneParam._m0[_1952].x)));
        float _1991 = fma(_1921, cbSceneParam._m0[_1960].w, fma(_1917, cbSceneParam._m0[_1960].z, fma(_1913, cbSceneParam._m0[_1960].y, _1909 * cbSceneParam._m0[_1960].x)));
        float _1999 = fma(_1921, cbSceneParam._m0[_1976].w, fma(_1917, cbSceneParam._m0[_1976].z, fma(_1913, cbSceneParam._m0[_1976].y, _1909 * cbSceneParam._m0[_1976].x)));
        float _2004 = cbSceneParam._m0[33u].z * _1999;
        float _2006 = cbSceneParam._m0[33u].w * _1999;
        float _2009 = fma(_1921, cbSceneParam._m0[_1968].w, fma(_1917, cbSceneParam._m0[_1968].z, fma(_1913, cbSceneParam._m0[_1968].y, _1909 * cbSceneParam._m0[_1968].x))) / _1999;
        float _2057 = (cbSceneParam._m0[33u].x - sqrt(((_1923 * _1923) + (_1922 * _1922)) + (_1924 * _1924))) * cbSceneParam._m0[33u].y;
        float _4389 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
        float _2064 = (isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2004 + _1987) / _1999, (_2006 + _1991) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2006 + _1987) / _1999, (_1991 - _2004) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1987 - _2004) / _1999, (_1991 - _2006) / _1999), _2009), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1987 - _2006) / _1999, (_2004 + _1991) / _1999), _2009), 0.0)).x), vec4(0.25)));
        _2071 = 1.0 - (_2064 * cbSceneParam._m0[34u].x);
        _2072 = 1.0 - (_2064 * cbSceneParam._m0[34u].y);
        _2073 = 1.0 - (_2064 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2071 = 1.0;
        _2072 = 1.0;
        _2073 = 1.0;
    }
    float _2137;
    float _2139;
    float _2141;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2125 = fma(_1921, cbSceneParam._m0[63u].w, fma(_1917, cbSceneParam._m0[63u].z, fma(_1913, cbSceneParam._m0[63u].y, _1909 * cbSceneParam._m0[63u].x)));
        float _2126 = fma(_1921, cbSceneParam._m0[60u].w, fma(_1917, cbSceneParam._m0[60u].z, fma(_1913, cbSceneParam._m0[60u].y, _1909 * cbSceneParam._m0[60u].x))) / _2125;
        float _2127 = fma(_1921, cbSceneParam._m0[61u].w, fma(_1917, cbSceneParam._m0[61u].z, fma(_1913, cbSceneParam._m0[61u].y, _1909 * cbSceneParam._m0[61u].x))) / _2125;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2126 >= cbSceneParam._m0[64u].x) && (_2127 >= cbSceneParam._m0[64u].y)) && (_2126 <= cbSceneParam._m0[64u].z)) && (_2127 <= cbSceneParam._m0[64u].w))
        {
            float _2266 = fma(_1921, cbSceneParam._m0[62u].w, fma(_1917, cbSceneParam._m0[62u].z, fma(_1913, cbSceneParam._m0[62u].y, _1909 * cbSceneParam._m0[62u].x))) / _2125;
            float _2270 = isnan(cbSceneParam._m0[41u].w) ? _2266 : (isnan(_2266) ? cbSceneParam._m0[41u].w : max(_2266, cbSceneParam._m0[41u].w));
            float _2313 = (cbSceneParam._m0[33u].x - sqrt(((_1923 * _1923) + (_1922 * _1922)) + (_1924 * _1924))) * cbSceneParam._m0[33u].y;
            float _4405 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
            float _2320 = (isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2126, cbSceneParam._m0[33u].w + _2127), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2126, _2127 - cbSceneParam._m0[33u].z), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2126 - cbSceneParam._m0[33u].z, _2127 - cbSceneParam._m0[33u].w), _2270), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2126 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2127), _2270), 0.0)).x), vec4(0.25)));
            float _2324 = 1.0 - (_2320 * cbSceneParam._m0[34u].x);
            float _2325 = 1.0 - (_2320 * cbSceneParam._m0[34u].y);
            float _2326 = 1.0 - (_2320 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2326) ? _2073 : (isnan(_2073) ? _2326 : min(_2073, _2326));
            frontier_phi_34_33_ladder_1 = isnan(_2325) ? _2072 : (isnan(_2072) ? _2325 : min(_2072, _2325));
            frontier_phi_34_33_ladder_2 = isnan(_2324) ? _2071 : (isnan(_2071) ? _2324 : min(_2071, _2324));
        }
        else
        {
            frontier_phi_34_33_ladder = _2073;
            frontier_phi_34_33_ladder_1 = _2072;
            frontier_phi_34_33_ladder_2 = _2071;
        }
        _2137 = frontier_phi_34_33_ladder_2;
        _2139 = frontier_phi_34_33_ladder_1;
        _2141 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2137 = _2071;
        _2139 = _2072;
        _2141 = _2073;
    }
    uvec4 _2146 = floatBitsToUint(cbInstanceData._m0[_827 + 5u]);
    uint _2148 = _2146.x * 14u;
    uint _2149 = _2148 + 13u;
    float _2156 = _852 + (-1.0);
    float _2161 = (cbLight._m0[_2149].x * _2156) + 1.0;
    float _2162 = (cbLight._m0[_2149].y * _2156) + 1.0;
    float _2163 = (cbLight._m0[_2149].z * _2156) + 1.0;
    float _2164 = (cbLight._m0[_2149].w * _2156) + 1.0;
    uint _2165 = _2148 + 5u;
    float _2171 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
    uint _2175 = _2148 + 4u;
    float _2185 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
    uint _2189 = _2148 | 1u;
    float _2200 = dot(vec3(cbLight._m0[_2148].xyz), vec3(_700, _701, _702));
    float _2203 = dot(vec3(cbLight._m0[_2189].xyz), vec3(_700, _701, _702));
    float _4441 = isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0));
    float _4452 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
    float _2208 = (isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0))) * 0.3183098733425140380859375;
    float _2210 = (isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0))) * 0.3183098733425140380859375;
    float _2217 = ((cbLight._m0[_2165].x * _2171) * _2210) + (((cbLight._m0[_2175].x * _2137) * _2185) * _2208);
    float _2218 = ((_2171 * cbLight._m0[_2165].y) * _2210) + (((cbLight._m0[_2175].y * _2139) * _2185) * _2208);
    float _2219 = ((_2171 * cbLight._m0[_2165].z) * _2210) + (((cbLight._m0[_2175].z * _2141) * _2185) * _2208);
    uvec4 _2223 = floatBitsToUint(cbLight._m0[_2148 + 12u]);
    bool _2225 = _2223.x == 0u;
    float _2327;
    float _2329;
    float _2331;
    if (_2225)
    {
        _2327 = _2217;
        _2329 = _2218;
        _2331 = _2219;
    }
    else
    {
        uint _2335 = _2148 + 6u;
        float _2351 = (dot(vec3(cbLight._m0[_2148 + 2u].xyz), vec3(_700, _701, _702)) * 0.5) + 0.5;
        float _2352 = _2351 * _2351;
        float _4463 = isnan(0.0) ? _2352 : (isnan(_2352) ? 0.0 : max(_2352, 0.0));
        float _2353 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
        float _2354 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2327 = (((cbLight._m0[_2335].x * 0.3183098733425140380859375) * _2353) * _2354) + _2217;
        _2329 = (((cbLight._m0[_2335].y * 0.3183098733425140380859375) * _2353) * _2354) + _2218;
        _2331 = (((cbLight._m0[_2335].z * 0.3183098733425140380859375) * _2353) * _2354) + _2219;
    }
    bool _2334 = _2223.y == 0u;
    float _2389;
    float _2391;
    float _2393;
    if (_2334)
    {
        _2389 = _2327;
        _2391 = _2329;
        _2393 = _2331;
    }
    else
    {
        uint _2551 = _2148 + 7u;
        float _2567 = (dot(vec3(cbLight._m0[_2148 + 3u].xyz), vec3(_700, _701, _702)) * 0.5) + 0.5;
        float _2568 = _2567 * _2567;
        float _4479 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
        float _2569 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
        float _2570 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2389 = (((cbLight._m0[_2551].x * 0.3183098733425140380859375) * _2569) * _2570) + _2327;
        _2391 = (((cbLight._m0[_2551].y * 0.3183098733425140380859375) * _2569) * _2570) + _2329;
        _2393 = (((cbLight._m0[_2551].z * 0.3183098733425140380859375) * _2569) * _2570) + _2331;
    }
    uint _2396 = _2148 + 8u;
    float _2409 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2148].w)) * _703) * 0.949999988079071044921875);
    float _2410 = _2409 * _2409;
    float _2411 = cbLight._m0[_2148].x + _780;
    float _2412 = cbLight._m0[_2148].y + _781;
    float _2413 = cbLight._m0[_2148].z + _782;
    float _2417 = inversesqrt(dot(vec3(_2411, _2412, _2413), vec3(_2411, _2412, _2413)));
    float _2418 = _2417 * _2411;
    float _2419 = _2417 * _2412;
    float _2420 = _2417 * _2413;
    float _2421 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2148].xyz));
    float _4495 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2424 = isnan(1.0) ? _4495 : (isnan(_4495) ? 1.0 : min(_4495, 1.0));
    float _4506 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _2425 = isnan(1.0) ? _4506 : (isnan(_4506) ? 1.0 : min(_4506, 1.0));
    float _2426 = dot(vec3(_700, _701, _702), vec3(_2418, _2419, _2420));
    float _4517 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
    float _2429 = isnan(1.0) ? _4517 : (isnan(_4517) ? 1.0 : min(_4517, 1.0));
    float _2430 = dot(vec3(cbLight._m0[_2148].xyz), vec3(_2418, _2419, _2420));
    float _4528 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _2434 = _2410 * _2410;
    float _2438 = ((_2429 * _2429) * (_2434 + (-1.0))) + 1.0;
    float _2449 = (exp2(log2(1.0 - (isnan(1.0) ? _4528 : (isnan(_4528) ? 1.0 : min(_4528, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2450 = 1.0 - _2410;
    float _2461 = (0.5 / (((_2425 * ((_2424 * _2450) + _2410)) + 9.9999999392252902907785028219223e-09) + (((_2425 * _2450) + _2410) * _2424))) * _2424;
    float _4539 = isnan(0.0) ? _2461 : (isnan(_2461) ? 0.0 : max(_2461, 0.0));
    float _2463 = (isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * (_2434 / ((_2438 * _2438) * 3.141590118408203125));
    uint _2477 = _2148 + 9u;
    float _2488 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2189].w)) * _703) * 0.949999988079071044921875);
    float _2489 = _2488 * _2488;
    float _2490 = cbLight._m0[_2189].x + _780;
    float _2491 = cbLight._m0[_2189].y + _781;
    float _2492 = cbLight._m0[_2189].z + _782;
    float _2496 = inversesqrt(dot(vec3(_2490, _2491, _2492), vec3(_2490, _2491, _2492)));
    float _2497 = _2496 * _2490;
    float _2498 = _2496 * _2491;
    float _2499 = _2496 * _2492;
    float _2500 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2189].xyz));
    float _4550 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0));
    float _2504 = dot(vec3(_700, _701, _702), vec3(_2497, _2498, _2499));
    float _4561 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2507 = isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0));
    float _2508 = dot(vec3(cbLight._m0[_2189].xyz), vec3(_2497, _2498, _2499));
    float _4572 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
    float _2512 = _2489 * _2489;
    float _2516 = ((_2507 * _2507) * (_2512 + (-1.0))) + 1.0;
    float _2525 = (exp2(log2(1.0 - (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2526 = 1.0 - _2489;
    float _2536 = (0.5 / (((_2425 * ((_2503 * _2526) + _2489)) + 9.9999999392252902907785028219223e-09) + (((_2425 * _2526) + _2489) * _2503))) * _2503;
    float _4583 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
    float _2538 = (isnan(1.0) ? _4583 : (isnan(_4583) ? 1.0 : min(_4583, 1.0))) * (_2512 / ((_2516 * _2516) * 3.141590118408203125));
    float _2548 = (((_2525 * cbLight._m0[_2477].x) * _2538) * _2171) + ((((cbLight._m0[_2396].x * _2137) * _2449) * _2463) * _2185);
    float _2549 = (((_2525 * cbLight._m0[_2477].y) * _2538) * _2171) + ((((cbLight._m0[_2396].y * _2139) * _2449) * _2463) * _2185);
    float _2550 = (((_2525 * cbLight._m0[_2477].z) * _2538) * _2171) + ((((cbLight._m0[_2396].z * _2141) * _2449) * _2463) * _2185);
    float _2606;
    float _2608;
    float _2610;
    if (_2225)
    {
        _2606 = _2548;
        _2608 = _2549;
        _2610 = _2550;
    }
    else
    {
        uint _2612 = _2148 + 2u;
        uint _2616 = _2148 + 10u;
        float _2630 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2612].w)) * _703) * 0.949999988079071044921875);
        float _2631 = _2630 * _2630;
        float _2632 = cbLight._m0[_2612].x + _780;
        float _2633 = cbLight._m0[_2612].y + _781;
        float _2634 = cbLight._m0[_2612].z + _782;
        float _2638 = inversesqrt(dot(vec3(_2632, _2633, _2634), vec3(_2632, _2633, _2634)));
        float _2639 = _2638 * _2632;
        float _2640 = _2638 * _2633;
        float _2641 = _2638 * _2634;
        float _2642 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2612].xyz));
        float _4594 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
        float _2645 = isnan(1.0) ? _4594 : (isnan(_4594) ? 1.0 : min(_4594, 1.0));
        float _2646 = dot(vec3(_700, _701, _702), vec3(_2639, _2640, _2641));
        float _4605 = isnan(0.0) ? _2646 : (isnan(_2646) ? 0.0 : max(_2646, 0.0));
        float _2649 = isnan(1.0) ? _4605 : (isnan(_4605) ? 1.0 : min(_4605, 1.0));
        float _2650 = dot(vec3(cbLight._m0[_2612].xyz), vec3(_2639, _2640, _2641));
        float _4616 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        float _2654 = _2631 * _2631;
        float _2658 = ((_2649 * _2649) * (_2654 + (-1.0))) + 1.0;
        float _2667 = (exp2(log2(1.0 - (isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2668 = 1.0 - _2631;
        float _2678 = (0.5 / (((_2425 * ((_2645 * _2668) + _2631)) + 9.9999999392252902907785028219223e-09) + (((_2425 * _2668) + _2631) * _2645))) * _2645;
        float _4627 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2680 = (isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0))) * (_2654 / ((_2658 * _2658) * 3.141590118408203125));
        float _2681 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2606 = (((_2667 * cbLight._m0[_2616].x) * _2680) * _2681) + _2548;
        _2608 = (((_2667 * cbLight._m0[_2616].y) * _2680) * _2681) + _2549;
        _2610 = (((_2667 * cbLight._m0[_2616].z) * _2680) * _2681) + _2550;
    }
    float _2712;
    float _2714;
    float _2716;
    if (_2334)
    {
        _2712 = _2606;
        _2714 = _2608;
        _2716 = _2610;
    }
    else
    {
        uint _2723 = _2148 + 3u;
        uint _2727 = _2148 + 11u;
        float _2741 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2723].w)) * _703) * 0.949999988079071044921875);
        float _2742 = _2741 * _2741;
        float _2743 = cbLight._m0[_2723].x + _780;
        float _2744 = cbLight._m0[_2723].y + _781;
        float _2745 = cbLight._m0[_2723].z + _782;
        float _2749 = inversesqrt(dot(vec3(_2743, _2744, _2745), vec3(_2743, _2744, _2745)));
        float _2750 = _2749 * _2743;
        float _2751 = _2749 * _2744;
        float _2752 = _2749 * _2745;
        float _2753 = dot(vec3(_700, _701, _702), vec3(cbLight._m0[_2723].xyz));
        float _4643 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
        float _2756 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
        float _2757 = dot(vec3(_700, _701, _702), vec3(_2750, _2751, _2752));
        float _4654 = isnan(0.0) ? _2757 : (isnan(_2757) ? 0.0 : max(_2757, 0.0));
        float _2760 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
        float _2761 = dot(vec3(cbLight._m0[_2723].xyz), vec3(_2750, _2751, _2752));
        float _4665 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2765 = _2742 * _2742;
        float _2769 = ((_2760 * _2760) * (_2765 + (-1.0))) + 1.0;
        float _2778 = (exp2(log2(1.0 - (isnan(1.0) ? _4665 : (isnan(_4665) ? 1.0 : min(_4665, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2779 = 1.0 - _2742;
        float _2789 = (0.5 / (((_2425 * ((_2756 * _2779) + _2742)) + 9.9999999392252902907785028219223e-09) + (((_2425 * _2779) + _2742) * _2756))) * _2756;
        float _4676 = isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0));
        float _2791 = (isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0))) * (_2765 / ((_2769 * _2769) * 3.141590118408203125));
        float _2792 = isnan(1.0) ? _2164 : (isnan(_2164) ? 1.0 : min(_2164, 1.0));
        _2712 = (((_2778 * cbLight._m0[_2727].x) * _2791) * _2792) + _2606;
        _2714 = (((_2778 * cbLight._m0[_2727].y) * _2791) * _2792) + _2608;
        _2716 = (((_2778 * cbLight._m0[_2727].z) * _2791) * _2792) + _2610;
    }
    float _2858;
    float _2860;
    float _2862;
    float _2864;
    float _2866;
    float _2868;
    if (_2146.y == 0u)
    {
        uvec4 _2813 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2814 = _2813.x;
        uint _2825 = uint((float(_2813.y) * floor(float(uint(cbSceneParam._m0[85u].y * _789) / _2814))) + floor(float(uint(cbSceneParam._m0[85u].x * _788) / _2814)));
        float _2835 = (log2(_1924 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2836 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
        uint _2839 = uint(isnan(14.0) ? _2836 : (isnan(_2836) ? 14.0 : min(_2836, 14.0)));
        uvec4 _2844 = texelFetch(g_lightClusterGridBuffer, int(((_2839 << 2u) + (_2825 << 6u)) >> 2u));
        uint _2845 = _2844.x;
        uint _2846 = _2813.z;
        float _2970;
        float _2972;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        if (((((1u << ((_2846 >> 4u) & 15u)) + 4294967295u) & _2845) == 0u) || ((_2846 & 240u) == 0u))
        {
            _2970 = 0.0;
            _2972 = 0.0;
            _2974 = 0.0;
            _2976 = 0.0;
            _2978 = 0.0;
            _2980 = 0.0;
        }
        else
        {
            float _2971;
            float _2973;
            float _2975;
            float _2977;
            float _2979;
            float _2981;
            float _3123 = 0.0;
            float _3124 = 0.0;
            float _3125 = 0.0;
            float _3126 = 0.0;
            float _3127 = 0.0;
            float _3128 = 0.0;
            uint _3129 = 0u;
            uint _3138;
            bool _3139;
            for (;;)
            {
                _3138 = texelFetch(g_lightClassification, int((((_2839 << 5u) + (_2825 << 9u)) + (_3129 << 2u)) >> 2u)).x;
                _3139 = _3138 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3139)
                {
                    frontier_phi_66_pred = _3128;
                    frontier_phi_66_pred_1 = _3127;
                    frontier_phi_66_pred_2 = _3126;
                    frontier_phi_66_pred_3 = _3125;
                    frontier_phi_66_pred_4 = _3124;
                    frontier_phi_66_pred_5 = _3123;
                }
                else
                {
                    float _3247;
                    float _3248;
                    float _3249;
                    float _3250;
                    float _3251;
                    float _3252;
                    uint _3253;
                    _3247 = _3123;
                    _3248 = _3124;
                    _3249 = _3125;
                    _3250 = _3126;
                    _3251 = _3127;
                    _3252 = _3128;
                    _3253 = _3138;
                    float _3179;
                    float _3180;
                    float _3181;
                    float _3182;
                    float _3183;
                    float _3184;
                    for (;;)
                    {
                        uint _3257 = uint(findLSB(_3253)) + (_3129 << 5u);
                        uint _3254 = (_3253 + 4294967295u) & _3253;
                        uint _3259 = _3257 * 48u;
                        vec4 _3273 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3259)).x, texelFetch(g_PointLightRenderingBuffer, int(_3259 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3259 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3259 + 3u)).x));
                        uint _3279 = (_3257 * 48u) + 4u;
                        vec4 _3292 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3279)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3279 + 3u)).x));
                        uint _3298 = (_3257 * 48u) + 8u;
                        vec3 _3309 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3298)).x, texelFetch(g_PointLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3298 + 2u)).x));
                        float _3313 = _3273.x - _1922;
                        float _3314 = _3273.y - _1923;
                        float _3315 = _3273.z - _1924;
                        float _3316 = dot(vec3(_3313, _3314, _3315), vec3(_3313, _3314, _3315));
                        float _3319 = inversesqrt(_3316);
                        float _3320 = _3319 * _3313;
                        float _3321 = _3319 * _3314;
                        float _3322 = _3319 * _3315;
                        float _3323 = dot(vec3(_808, _811, _814), vec3(_3320, _3321, _3322));
                        float _3328 = 1.0 - (_3316 * _3273.w);
                        float _4702 = isnan(0.0) ? _3328 : (isnan(_3328) ? 0.0 : max(_3328, 0.0));
                        float _3329 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
                        float _3330 = sqrt(_3316) * _3292.w;
                        float _3333 = 1.39999997615814208984375 / (_3330 + 1.39999997615814208984375);
                        float _3334 = _3333 * _3333;
                        float _3337 = ((1.0 - _3334) * _3323) + _3334;
                        float _3340 = _3330 * _3330;
                        float _3344 = ((isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0))) * _3329) / ((_3340 * 0.699999988079071044921875) + 1.0);
                        float _3348 = (-0.0) - _1922;
                        float _3349 = (-0.0) - _1923;
                        float _3350 = (-0.0) - _1924;
                        float _3354 = inversesqrt(dot(vec3(_3348, _3349, _3350), vec3(_3348, _3349, _3350)));
                        float _3355 = _3354 * _3348;
                        float _3356 = _3354 * _3349;
                        float _3357 = _3354 * _3350;
                        float _3364 = exp2(log2(1.0 / ((_3340 * 3.5) + 5.0)) * 0.25);
                        float _3365 = 1.0 - _868;
                        float _3372 = sqrt(1.0 - ((1.0 - (_3365 * _3365)) * (1.0 - (_3364 * _3364))));
                        float _3373 = _3372 * _3372;
                        float _3374 = _3373 * _3373;
                        float _3375 = _3355 + _3320;
                        float _3376 = _3356 + _3321;
                        float _3377 = _3357 + _3322;
                        float _3381 = inversesqrt(dot(vec3(_3375, _3376, _3377), vec3(_3375, _3376, _3377)));
                        float _3385 = dot(vec3(_808, _811, _814), vec3(_3355, _3356, _3357));
                        float _4718 = isnan(0.0) ? _3385 : (isnan(_3385) ? 0.0 : max(_3385, 0.0));
                        float _3388 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
                        float _3389 = dot(vec3(_808, _811, _814), vec3(_3381 * _3375, _3381 * _3376, _3381 * _3377));
                        float _4729 = isnan(0.0) ? _3389 : (isnan(_3389) ? 0.0 : max(_3389, 0.0));
                        float _3392 = isnan(1.0) ? _4729 : (isnan(_4729) ? 1.0 : min(_4729, 1.0));
                        float _3396 = ((_3392 * _3392) * (_3374 + (-1.0))) + 1.0;
                        float _3397 = _3333 * _3373;
                        float _3398 = _3397 * _3397;
                        float _3401 = ((1.0 - _3398) * _3323) + _3398;
                        float _4740 = isnan(0.0) ? _3401 : (isnan(_3401) ? 0.0 : max(_3401, 0.0));
                        float _3402 = isnan(1.0) ? _4740 : (isnan(_4740) ? 1.0 : min(_4740, 1.0));
                        float _3403 = 1.0 - _3373;
                        float _3413 = (0.5 / (((_3402 * ((_3388 * _3403) + _3373)) + 9.9999999392252902907785028219223e-09) + (((_3402 * _3403) + _3373) * _3388))) * _3402;
                        float _4751 = isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0));
                        float _3424 = (((_3374 * 3.1415927410125732421875) * (isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0)))) / ((_3396 * _3396) * ((_3340 * 2.1991131305694580078125) + 3.141590118408203125))) * _3329;
                        _3182 = (_3344 * _3292.x) + _3250;
                        _3183 = (_3344 * _3292.y) + _3251;
                        _3184 = (_3344 * _3292.z) + _3252;
                        _3179 = (_3424 * _3309.x) + _3247;
                        _3180 = (_3424 * _3309.y) + _3248;
                        _3181 = (_3424 * _3309.z) + _3249;
                        if (_3254 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3247 = _3179;
                            _3248 = _3180;
                            _3249 = _3181;
                            _3250 = _3182;
                            _3251 = _3183;
                            _3252 = _3184;
                            _3253 = _3254;
                        }
                    }
                    frontier_phi_66_pred = _3184;
                    frontier_phi_66_pred_1 = _3183;
                    frontier_phi_66_pred_2 = _3182;
                    frontier_phi_66_pred_3 = _3181;
                    frontier_phi_66_pred_4 = _3180;
                    frontier_phi_66_pred_5 = _3179;
                }
                _2981 = frontier_phi_66_pred;
                _2979 = frontier_phi_66_pred_1;
                _2977 = frontier_phi_66_pred_2;
                _2975 = frontier_phi_66_pred_3;
                _2973 = frontier_phi_66_pred_4;
                _2971 = frontier_phi_66_pred_5;
                uint _3130 = _3129 + 1u;
                if (_3130 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3123 = _2971;
                    _3124 = _2973;
                    _3125 = _2975;
                    _3126 = _2977;
                    _3127 = _2979;
                    _3128 = _2981;
                    _3129 = _3130;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2970 = _2971;
            _2972 = _2973;
            _2974 = _2975;
            _2976 = _2977;
            _2978 = _2979;
            _2980 = _2981;
        }
        uvec4 _2984 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2985 = _2984.z;
        uint _2987 = (_2985 >> 8u) & 15u;
        float _3091;
        float _3093;
        float _3095;
        float _3097;
        float _3099;
        float _3101;
        if (((4294967295u << _2987) & _2845) == 0u)
        {
            _3091 = _2970;
            _3093 = _2972;
            _3095 = _2974;
            _3097 = _2976;
            _3099 = _2978;
            _3101 = _2980;
        }
        else
        {
            float _3116 = inversesqrt(dot(vec3(_1922, _1923, _1924), vec3(_1922, _1923, _1924)));
            float _3117 = _3116 * _1922;
            float _3118 = _3116 * _1923;
            float _3119 = _3116 * _1924;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2987 < ((_2985 >> 12u) & 15u))
            {
                float _3092;
                float _3094;
                float _3096;
                float _3098;
                float _3100;
                float _3102;
                float _3230 = _2970;
                float _3231 = _2972;
                float _3232 = _2974;
                float _3233 = _2976;
                float _3234 = _2978;
                float _3235 = _2980;
                uint _3236 = _2987;
                uint _3245;
                bool _3246;
                for (;;)
                {
                    _3245 = texelFetch(g_lightClassification, int((((_2839 << 5u) + (_2825 << 9u)) + (_3236 << 2u)) >> 2u)).x;
                    _3246 = _3245 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3246)
                    {
                        frontier_phi_72_pred = _3235;
                        frontier_phi_72_pred_1 = _3234;
                        frontier_phi_72_pred_2 = _3233;
                        frontier_phi_72_pred_3 = _3232;
                        frontier_phi_72_pred_4 = _3231;
                        frontier_phi_72_pred_5 = _3230;
                    }
                    else
                    {
                        float _3429;
                        float _3430;
                        float _3431;
                        float _3432;
                        float _3433;
                        float _3434;
                        float _3723;
                        float _3724;
                        float _3725;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3442 = _3230;
                        float _3443 = _3231;
                        float _3444 = _3232;
                        float _3445 = _3233;
                        float _3446 = _3234;
                        float _3447 = _3235;
                        uint _3448 = _3245;
                        uint _3449;
                        vec4 _3474;
                        float _3475;
                        vec4 _3490;
                        vec3 _3502;
                        vec4 _3517;
                        vec4 _3532;
                        float _3579;
                        bool _3580;
                        for (;;)
                        {
                            uint _3459 = ((_3236 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3448));
                            _3449 = (_3448 + 4294967295u) & _3448;
                            uint _3461 = _3459 * 40u;
                            _3474 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3461)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3461 + 3u)).x));
                            _3475 = _3474.w;
                            uint _3477 = (_3459 * 40u) + 4u;
                            _3490 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3477)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3477 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3477 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3477 + 3u)).x));
                            uint _3492 = (_3459 * 40u) + 8u;
                            _3502 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3492)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3492 + 2u)).x));
                            uint _3504 = (_3459 * 40u) + 16u;
                            _3517 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3504)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3504 + 3u)).x));
                            uint _3519 = (_3459 * 40u) + 20u;
                            _3532 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3519)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3519 + 3u)).x));
                            uint _3535 = (_3459 * 40u) + 24u;
                            vec4 _3548 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3535)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3535 + 3u)).x));
                            uint _3554 = (_3459 * 40u) + 28u;
                            vec4 _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            _3579 = fma(_1924, _3567.z, fma(_1923, _3567.y, _3567.x * _1922)) + _3567.w;
                            _3580 = !((fma(_1924, _3548.z, fma(_1923, _3548.y, _3548.x * _1922)) + _3548.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3580)
                            {
                                float _3607 = _3474.x - _1922;
                                float _3608 = _3474.y - _1923;
                                float _3609 = _3474.z - _1924;
                                float _3610 = dot(vec3(_3607, _3608, _3609), vec3(_3607, _3608, _3609));
                                float _3613 = inversesqrt(_3610);
                                float _3614 = _3613 * _3607;
                                float _3615 = _3613 * _3608;
                                float _3616 = _3613 * _3609;
                                float _3620 = 1.0 - (_3610 / (_3475 * _3475));
                                float _4762 = isnan(0.0) ? _3620 : (isnan(_3620) ? 0.0 : max(_3620, 0.0));
                                float _3621 = isnan(1.0) ? _4762 : (isnan(_4762) ? 1.0 : min(_4762, 1.0));
                                float _3625 = sqrt(_3610) * _3490.w;
                                float _3627 = 1.39999997615814208984375 / (_3625 + 1.39999997615814208984375);
                                float _3628 = _3627 * _3627;
                                float _3631 = ((1.0 - _3628) * dot(vec3(_3614, _3615, _3616), vec3(_808, _811, _814))) + _3628;
                                float _3634 = _3625 * _3625;
                                float _3638 = (fma(_1924, _3517.z, fma(_1923, _3517.y, _3517.x * _1922)) + _3517.w) / _3579;
                                float _3639 = (fma(_1924, _3532.z, fma(_1923, _3532.y, _3532.x * _1922)) + _3532.w) / _3579;
                                float _3643 = 1.0 - dot(vec2(_3638, _3639), vec2(_3638, _3639));
                                float _4778 = isnan(0.0) ? _3643 : (isnan(_3643) ? 0.0 : max(_3643, 0.0));
                                float _3644 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
                                float _3645 = _3644 * (((isnan(0.0) ? _3631 : (isnan(_3631) ? 0.0 : max(_3631, 0.0))) * _3621) / ((_3634 * 0.699999988079071044921875) + 1.0));
                                float _3657 = exp2(log2(1.0 / ((_3634 * 3.5) + 5.0)) * 0.25);
                                float _3658 = 1.0 - _868;
                                float _3665 = sqrt(1.0 - ((1.0 - (_3658 * _3658)) * (1.0 - (_3657 * _3657))));
                                float _3666 = _3665 * _3665;
                                float _3667 = _3666 * _3666;
                                float _3668 = _3614 - _3117;
                                float _3669 = _3615 - _3118;
                                float _3670 = _3616 - _3119;
                                float _3674 = inversesqrt(dot(vec3(_3668, _3669, _3670), vec3(_3668, _3669, _3670)));
                                float _3678 = dot(vec3(_808, _811, _814), vec3((-0.0) - _3117, (-0.0) - _3118, (-0.0) - _3119));
                                float _4789 = isnan(0.0) ? _3678 : (isnan(_3678) ? 0.0 : max(_3678, 0.0));
                                float _3681 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
                                float _3682 = dot(vec3(_808, _811, _814), vec3(_3674 * _3668, _3674 * _3669, _3674 * _3670));
                                float _4800 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3685 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
                                float _3689 = ((_3685 * _3685) * (_3667 + (-1.0))) + 1.0;
                                float _3690 = _3627 * _3666;
                                float _3691 = _3690 * _3690;
                                float _3697 = ((1.0 - _3691) * dot(vec3(_808, _811, _814), vec3(_3614, _3615, _3616))) + _3691;
                                float _4811 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                                float _3698 = isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0));
                                float _3699 = 1.0 - _3666;
                                float _3709 = (0.5 / (((_3698 * ((_3681 * _3699) + _3666)) + 9.9999999392252902907785028219223e-09) + (((_3698 * _3699) + _3666) * _3681))) * _3698;
                                float _4822 = isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0));
                                float _3719 = (_3644 * _3621) * (((_3667 * 3.1415927410125732421875) * (isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0)))) / ((_3689 * _3689) * ((_3634 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3645 * _3490.y;
                                frontier_phi_78_pred_1 = _3645 * _3490.x;
                                frontier_phi_78_pred_2 = _3719 * _3502.z;
                                frontier_phi_78_pred_3 = _3719 * _3502.y;
                                frontier_phi_78_pred_4 = _3719 * _3502.x;
                                frontier_phi_78_pred_5 = _3645 * _3490.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3727 = frontier_phi_78_pred;
                            _3726 = frontier_phi_78_pred_1;
                            _3725 = frontier_phi_78_pred_2;
                            _3724 = frontier_phi_78_pred_3;
                            _3723 = frontier_phi_78_pred_4;
                            _3728 = frontier_phi_78_pred_5;
                            _3432 = _3726 + _3445;
                            _3433 = _3727 + _3446;
                            _3434 = _3728 + _3447;
                            _3429 = _3723 + _3442;
                            _3430 = _3724 + _3443;
                            _3431 = _3725 + _3444;
                            if (_3449 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3442 = _3429;
                                _3443 = _3430;
                                _3444 = _3431;
                                _3445 = _3432;
                                _3446 = _3433;
                                _3447 = _3434;
                                _3448 = _3449;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3434;
                        frontier_phi_72_pred_1 = _3433;
                        frontier_phi_72_pred_2 = _3432;
                        frontier_phi_72_pred_3 = _3431;
                        frontier_phi_72_pred_4 = _3430;
                        frontier_phi_72_pred_5 = _3429;
                    }
                    _3102 = frontier_phi_72_pred;
                    _3100 = frontier_phi_72_pred_1;
                    _3098 = frontier_phi_72_pred_2;
                    _3096 = frontier_phi_72_pred_3;
                    _3094 = frontier_phi_72_pred_4;
                    _3092 = frontier_phi_72_pred_5;
                    uint _3237 = _3236 + 1u;
                    if (_3237 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3230 = _3092;
                        _3231 = _3094;
                        _3232 = _3096;
                        _3233 = _3098;
                        _3234 = _3100;
                        _3235 = _3102;
                        _3236 = _3237;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3102;
                frontier_phi_60_61_ladder_1 = _3100;
                frontier_phi_60_61_ladder_2 = _3096;
                frontier_phi_60_61_ladder_3 = _3094;
                frontier_phi_60_61_ladder_4 = _3092;
                frontier_phi_60_61_ladder_5 = _3098;
            }
            else
            {
                frontier_phi_60_61_ladder = _2980;
                frontier_phi_60_61_ladder_1 = _2978;
                frontier_phi_60_61_ladder_2 = _2974;
                frontier_phi_60_61_ladder_3 = _2972;
                frontier_phi_60_61_ladder_4 = _2970;
                frontier_phi_60_61_ladder_5 = _2976;
            }
            _3091 = frontier_phi_60_61_ladder_4;
            _3093 = frontier_phi_60_61_ladder_3;
            _3095 = frontier_phi_60_61_ladder_2;
            _3097 = frontier_phi_60_61_ladder_5;
            _3099 = frontier_phi_60_61_ladder_1;
            _3101 = frontier_phi_60_61_ladder;
        }
        float _3106 = isnan(1.0) ? _852 : (isnan(_852) ? 1.0 : min(_852, 1.0));
        _2858 = (_3106 * _3097) + _2389;
        _2860 = (_3106 * _3099) + _2391;
        _2862 = (_3106 * _3101) + _2393;
        _2864 = ((_3091 * 0.039999999105930328369140625) * _3106) + _2712;
        _2866 = ((_3093 * 0.039999999105930328369140625) * _3106) + _2714;
        _2868 = ((_3095 * 0.039999999105930328369140625) * _3106) + _2716;
    }
    else
    {
        _2858 = _2389;
        _2860 = _2391;
        _2862 = _2393;
        _2864 = _2712;
        _2866 = _2714;
        _2868 = _2716;
    }
    uint _2874 = _828 + uint(cbMatDynParam._m0[0u].w);
    float _2880 = cbMtdParam._m0[17u].z * cbMtdParam._m0[19u].z;
    float _2886 = (((((_2880 * cbMtdParam._m0[14u].x) * _584.x) * _607) * _686) * (((1.0 - _660) * cbMtdParam._m0[20u].w) + _660)) * cbInstanceData._m0[_2874].x;
    float _2892 = (((((_2880 * cbMtdParam._m0[14u].y) * _584.y) * _607) * _686) * (((1.0 - _662) * cbMtdParam._m0[20u].w) + _662)) * cbInstanceData._m0[_2874].y;
    float _2898 = (((((_2880 * cbMtdParam._m0[14u].z) * _584.z) * _607) * _686) * (((1.0 - _664) * cbMtdParam._m0[20u].w) + _664)) * cbInstanceData._m0[_2874].z;
    float _4838 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
    float _4849 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0));
    float _4860 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _2915 = (((isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0))) * (_2858 + ((isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0))) * _852))) + ((_2864 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + _2886;
    float _2917 = (_2892 + ((_2866 + ((isnan(0.0) ? _1872 : (isnan(_1872) ? 0.0 : max(_1872, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0))) * (_2860 + ((isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0))) * _852)));
    float _2919 = (_2898 + ((_2868 + ((isnan(0.0) ? _1875 : (isnan(_1875) ? 0.0 : max(_1875, 0.0))) * _1658)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0))) * (_2862 + ((isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0))) * _852)));
    float _4886 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2932 = isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0));
    uint _2933 = _827 + 6u;
    float _2941 = _788 / cbSceneParam._m0[86u].x;
    float _2942 = _789 / cbSceneParam._m0[86u].y;
    vec4 _2956 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2941, _2942, (log2((isnan(cbSceneParam._m0[77u].w) ? _722 : (isnan(_722) ? cbSceneParam._m0[77u].w : min(_722, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2958 = _2956.x;
    float _2959 = _2956.y;
    float _2960 = _2956.z;
    float _2961 = _2956.w;
    float _3032;
    float _3034;
    float _3036;
    float _3038;
    if (_722 > cbSceneParam._m0[78u].w)
    {
        float _2995 = isnan(_722) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _722 : min(cbSceneParam._m0[80u].w, _722));
        float _2996 = _2995 / _722;
        float _3007 = _2996 * _773;
        float _3008 = _774 * _2996;
        float _3009 = (-0.0) - _3008;
        float _3010 = _2996 * _775;
        float _3012 = (cbSceneParam._m0[77u].w * _3009) / _2995;
        float _3013 = _3012 + cbSceneParam._m0[79u].w;
        float _3014 = cbSceneParam._m0[79u].w - _3008;
        float _3020 = sqrt(((_3007 * _3007) + (_3008 * _3008)) + (_3010 * _3010));
        float _3023 = (1.0 - (cbSceneParam._m0[77u].w / _2995)) * _3020;
        float _3028 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3030 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3192;
        if (abs((_3009 - _3012) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3192 = ((((_3013 > 0.0) ? exp2(_3028 * _3013) : (2.0 - exp2(_3030 * _3013))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3023;
        }
        else
        {
            float _3152 = 1.0 / cbSceneParam._m0[80u].x;
            float _3153 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : max(_3013, _3014));
            float _3154 = isnan(_3014) ? _3013 : (isnan(_3013) ? _3014 : min(_3013, _3014));
            float _3163 = isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : min(_3153, 0.0));
            float _3164 = isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : min(_3154, 0.0));
            _3192 = ((abs(_3020 / _3009) * cbSceneParam._m0[80u].y) * ((((_3163 - _3164) * 2.0) - ((exp2(_3028 * (isnan(0.0) ? _3153 : (isnan(_3153) ? 0.0 : max(_3153, 0.0)))) - exp2(_3028 * (isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : max(_3154, 0.0))))) * _3152)) - ((exp2(_3030 * _3163) - exp2(_3030 * _3164)) * _3152))) + (_3023 * cbSceneParam._m0[80u].z);
        }
        vec4 _3194 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2941, _2942, 1.0), 0.0);
        float _3203 = exp2((_3192 * (-1.44269502162933349609375)) * (1.0 - _3194.w));
        float _3204 = log2(_3203);
        float _3220 = log2(_2961);
        _3032 = (exp2(_3220 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].x)) * _3194.x) / cbSceneParam._m0[78u].x)) + _2958;
        _3034 = (exp2(_3220 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].y)) * _3194.y) / cbSceneParam._m0[78u].y)) + _2959;
        _3036 = (exp2(_3220 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3204 * cbSceneParam._m0[78u].z)) * _3194.z) / cbSceneParam._m0[78u].z)) + _2960;
        _3038 = _3203 * _2961;
    }
    else
    {
        _3032 = _2958;
        _3034 = _2959;
        _3036 = _2960;
        _3038 = _2961;
    }
    float _3050 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3051 = _3050 == 3.0;
    float _3052 = log2(_3038);
    float _3056 = exp2(_3052 * cbSceneParam._m0[78u].x);
    float _3057 = exp2(_3052 * cbSceneParam._m0[78u].y);
    float _3058 = exp2(_3052 * cbSceneParam._m0[78u].z);
    float _3059 = _3056 * (isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0)));
    float _3060 = _3057 * (isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0)));
    float _3061 = _3058 * (isnan(0.0) ? _2919 : (isnan(_2919) ? 0.0 : max(_2919, 0.0)));
    float _3070 = (_3050 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3070 * (_3051 ? _3059 : (_3059 + (cbSceneParam._m0[72u].w * _3032)));
    SV_Target.y = _3070 * (_3051 ? _3060 : (_3060 + (cbSceneParam._m0[72u].w * _3034)));
    SV_Target.z = _3070 * (_3051 ? _3061 : (_3061 + (cbSceneParam._m0[72u].w * _3036)));
    SV_Target.w = cbInstanceData._m0[_2933].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2886) * _2932) * _3056) * _3070;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2892) * _2932) * _3057) * _3070;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2898) * _2932) * _3058) * _3070;
    SV_Target_1.w = cbInstanceData._m0[_2933].w;
}


