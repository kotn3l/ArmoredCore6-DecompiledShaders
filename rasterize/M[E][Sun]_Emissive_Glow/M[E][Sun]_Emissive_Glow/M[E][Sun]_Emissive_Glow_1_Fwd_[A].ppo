#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Sun_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _708;
float _709;
float _710;
float _711;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _157 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _167 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _157);
    float _168 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _157);
    float _169 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _157);
    float _181 = cbMtdParam._m0[10u].x - cbMtdParam._m0[10u].z;
    float _185 = gl_FragCoord.x * 0.125;
    float _187 = gl_FragCoord.y * 0.125;
    vec4 _190 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_185, _187));
    float _200 = float(((sqrt(((_167 * _167) + (_168 * _168)) + (_169 * _169)) - cbMtdParam._m0[10u].z) / (isnan(0.001000000047497451305389404296875) ? _181 : (isnan(_181) ? 0.001000000047497451305389404296875 : max(_181, 0.001000000047497451305389404296875)))) >= ((_190.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _210 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _725 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    float _211 = isnan(1.0) ? _725 : (isnan(_725) ? 1.0 : min(_725, 1.0));
    float _218 = ((_211 * _211) * (3.0 - (_211 * 2.0))) - cbMtdParam._m0[11u].y;
    vec4 _238 = texture(sampler2D(M_E_Sun_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _244 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _238.x;
    float _246 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _238.y;
    float _248 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _238.z;
    float _260 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _736 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _261 = isnan(1.0) ? _736 : (isnan(_736) ? 1.0 : min(_736, 1.0));
    float _266 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _747 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _267 = isnan(1.0) ? _747 : (isnan(_747) ? 1.0 : min(_747, 1.0));
    float _271 = _244 - (_267 * _244);
    float _272 = _246 - (_267 * _246);
    float _273 = _248 - (_267 * _248);
    float _301 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _341 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _350 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _341);
    float _351 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _341);
    float _352 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _341);
    vec4 _353 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_185, _187));
    float _355 = _353.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _441 = sqrt(((_350 * _350) + (_351 * _351)) + (_352 * _352));
        float _448 = (cbMatDynParam._m0[5u].x * _441) + cbMatDynParam._m0[5u].y;
        float _758 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0));
        float _449 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
        float _453 = (cbMatDynParam._m0[5u].z * _441) + cbMatDynParam._m0[5u].w;
        float _769 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0))) - _449)) + _449) < ((_355 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _373 = uint(roundEven(NORMAL.w)) * 13u;
    uint _374 = _373 + 9u;
    uint _375 = _374 + uint(cbMatDynParam._m0[0u].w);
    float _381 = (((((_244 * cbMtdParam._m0[10u].y) - _271) * _261) + _271) * _218) * cbInstanceData._m0[_375].x;
    float _382 = (((((_246 * cbMtdParam._m0[10u].y) - _272) * _261) + _272) * _218) * cbInstanceData._m0[_375].y;
    float _383 = (((((_248 * cbMtdParam._m0[10u].y) - _273) * _261) + _273) * _218) * cbInstanceData._m0[_375].z;
    float _384 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
    float _385 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _386 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _392 = cbMtdParam._m0[2u].x * _381;
    float _393 = cbMtdParam._m0[2u].y * _382;
    float _394 = cbMtdParam._m0[2u].z * _383;
    float _795 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _396 = isnan(1.0) ? _795 : (isnan(_795) ? 1.0 : min(_795, 1.0));
    uint _397 = _373 + 6u;
    float _406 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _407 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _422 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_406, _407, (log2((isnan(cbSceneParam._m0[77u].w) ? _301 : (isnan(_301) ? cbSceneParam._m0[77u].w : min(_301, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _424 = _422.x;
    float _425 = _422.y;
    float _426 = _422.z;
    float _427 = _422.w;
    float _507;
    float _509;
    float _511;
    float _513;
    if (_301 > cbSceneParam._m0[78u].w)
    {
        float _468 = isnan(_301) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _301 : min(cbSceneParam._m0[80u].w, _301));
        float _469 = _468 / _301;
        float _480 = _469 * _350;
        float _481 = _351 * _469;
        float _482 = (-0.0) - _481;
        float _484 = _469 * _352;
        float _486 = (cbSceneParam._m0[77u].w * _482) / _468;
        float _487 = _486 + cbSceneParam._m0[79u].w;
        float _488 = cbSceneParam._m0[79u].w - _481;
        float _494 = sqrt(((_480 * _480) + (_481 * _481)) + (_484 * _484));
        float _497 = (1.0 - (cbSceneParam._m0[77u].w / _468)) * _494;
        float _503 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _505 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _636;
        if (abs((_482 - _486) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _636 = ((((_487 > 0.0) ? exp2(_503 * _487) : (2.0 - exp2(_505 * _487))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _497;
        }
        else
        {
            float _591 = 1.0 / cbSceneParam._m0[80u].x;
            float _592 = isnan(_488) ? _487 : (isnan(_487) ? _488 : max(_487, _488));
            float _593 = isnan(_488) ? _487 : (isnan(_487) ? _488 : min(_487, _488));
            float _602 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : min(_592, 0.0));
            float _603 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : min(_593, 0.0));
            _636 = ((abs(_494 / _482) * cbSceneParam._m0[80u].y) * ((((_602 - _603) * 2.0) - ((exp2(_503 * (isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0)))) - exp2(_503 * (isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0))))) * _591)) - ((exp2(_505 * _602) - exp2(_505 * _603)) * _591))) + (_497 * cbSceneParam._m0[80u].z);
        }
        vec4 _638 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_406, _407, 1.0), 0.0);
        float _647 = exp2((_636 * (-1.44269502162933349609375)) * (1.0 - _638.w));
        float _648 = log2(_647);
        float _664 = log2(_427);
        _507 = (exp2(_664 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].x)) * _638.x) / cbSceneParam._m0[78u].x)) + _424;
        _509 = (exp2(_664 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].y)) * _638.y) / cbSceneParam._m0[78u].y)) + _425;
        _511 = (exp2(_664 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_648 * cbSceneParam._m0[78u].z)) * _638.z) / cbSceneParam._m0[78u].z)) + _426;
        _513 = _647 * _427;
    }
    else
    {
        _507 = _424;
        _509 = _425;
        _511 = _426;
        _513 = _427;
    }
    bool _674;
    vec4 _523;
    vec4 _546;
    float _548;
    float _552;
    float _553;
    float _554;
    float _557;
    float _560;
    float _563;
    float _564;
    bool _575;
    for (;;)
    {
        _523 = cbMatDynParam._m0[0u];
        float _525 = roundEven(_523.y);
        bool _526 = _525 == 3.0;
        float _527 = log2(_513);
        float _531 = exp2(_527 * cbSceneParam._m0[78u].x);
        float _532 = exp2(_527 * cbSceneParam._m0[78u].y);
        float _533 = exp2(_527 * cbSceneParam._m0[78u].z);
        float _534 = _531 * _384;
        float _535 = _532 * _385;
        float _536 = _533 * _386;
        float _543 = _355 + (-0.5);
        _546 = cbMtdParam._m0[1u];
        _548 = _546.y * _543;
        float _551 = (_525 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _552 = _551 * (_526 ? _534 : (_534 + (cbSceneParam._m0[72u].w * _507)));
        _553 = _551 * (_526 ? _535 : (_535 + (cbSceneParam._m0[72u].w * _509)));
        _554 = _551 * (_526 ? _536 : (_536 + (cbSceneParam._m0[72u].w * _511)));
        _557 = ((_392 * _396) * _531) * _551;
        _560 = ((_393 * _396) * _532) * _551;
        _563 = ((_394 * _396) * _533) * _551;
        _564 = _543 * 0.999000012874603271484375;
        _575 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_575)
        {
            if ((cbInstanceData._m0[_373 + 7u].x + _564) < 0.5)
            {
                _674 = true;
                break;
            }
        }
        uint _628 = _374 + uint(_523.w);
        if ((cbInstanceData._m0[_628].w < 1.0) && ((cbInstanceData._m0[_628].w + _564) < 0.5))
        {
            _674 = true;
            break;
        }
        if ((_548 + _200) < _546.x)
        {
            _674 = true;
            break;
        }
        _674 = false;
        break;
    }
    float _679;
    if (_674)
    {
        discard_state = true;
        _679 = 0.0;
    }
    else
    {
        _679 = cbInstanceData._m0[_397].w;
    }
    SV_Target.x = _552;
    SV_Target.y = _553;
    SV_Target.z = _554;
    SV_Target.w = _679;
    SV_Target_1.x = _557;
    SV_Target_1.y = _560;
    SV_Target_1.z = _563;
    SV_Target_1.w = cbInstanceData._m0[_397].w;
    discard_exit();
}


