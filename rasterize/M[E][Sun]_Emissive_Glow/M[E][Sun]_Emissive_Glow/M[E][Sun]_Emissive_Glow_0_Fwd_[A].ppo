#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Sun_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _682;
float _683;
float _684;
float _685;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _148 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _158 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _148);
    float _159 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _148);
    float _160 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _148);
    float _172 = cbMtdParam._m0[10u].x - cbMtdParam._m0[10u].z;
    float _176 = gl_FragCoord.x * 0.125;
    float _178 = gl_FragCoord.y * 0.125;
    vec4 _181 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_176, _178));
    float _191 = float(((sqrt(((_158 * _158) + (_159 * _159)) + (_160 * _160)) - cbMtdParam._m0[10u].z) / (isnan(0.001000000047497451305389404296875) ? _172 : (isnan(_172) ? 0.001000000047497451305389404296875 : max(_172, 0.001000000047497451305389404296875)))) >= ((_181.w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    vec4 _211 = texture(sampler2D(M_E_Sun_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _217 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _211.x;
    float _219 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _211.y;
    float _221 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _211.z;
    float _233 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _699 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _234 = isnan(1.0) ? _699 : (isnan(_699) ? 1.0 : min(_699, 1.0));
    float _241 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _710 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _242 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    float _246 = _217 - (_242 * _217);
    float _247 = _219 - (_242 * _219);
    float _248 = _221 - (_242 * _221);
    float _273 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _313 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _322 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _313);
    float _323 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _313);
    float _324 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _313);
    vec4 _325 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_176, _178));
    float _327 = _325.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _413 = sqrt(((_322 * _322) + (_323 * _323)) + (_324 * _324));
        float _420 = (cbMatDynParam._m0[5u].x * _413) + cbMatDynParam._m0[5u].y;
        float _721 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
        float _421 = isnan(1.0) ? _721 : (isnan(_721) ? 1.0 : min(_721, 1.0));
        float _425 = (cbMatDynParam._m0[5u].z * _413) + cbMatDynParam._m0[5u].w;
        float _732 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _732 : (isnan(_732) ? 1.0 : min(_732, 1.0))) - _421)) + _421) < ((_327 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _345 = uint(roundEven(NORMAL.w)) * 13u;
    uint _346 = _345 + 9u;
    uint _347 = _346 + uint(cbMatDynParam._m0[0u].w);
    float _353 = cbInstanceData._m0[_347].x * ((((_217 * cbMtdParam._m0[10u].y) - _246) * _234) + _246);
    float _354 = cbInstanceData._m0[_347].y * ((((_219 * cbMtdParam._m0[10u].y) - _247) * _234) + _247);
    float _355 = cbInstanceData._m0[_347].z * ((((_221 * cbMtdParam._m0[10u].y) - _248) * _234) + _248);
    float _356 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _357 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _358 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _364 = cbMtdParam._m0[2u].x * _353;
    float _365 = cbMtdParam._m0[2u].y * _354;
    float _366 = cbMtdParam._m0[2u].z * _355;
    float _758 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _368 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
    uint _369 = _345 + 6u;
    float _378 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _379 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _394 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_378, _379, (log2((isnan(cbSceneParam._m0[77u].w) ? _273 : (isnan(_273) ? cbSceneParam._m0[77u].w : min(_273, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _396 = _394.x;
    float _397 = _394.y;
    float _398 = _394.z;
    float _399 = _394.w;
    float _479;
    float _481;
    float _483;
    float _485;
    if (_273 > cbSceneParam._m0[78u].w)
    {
        float _440 = isnan(_273) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _273 : min(cbSceneParam._m0[80u].w, _273));
        float _441 = _440 / _273;
        float _452 = _441 * _322;
        float _453 = _323 * _441;
        float _454 = (-0.0) - _453;
        float _456 = _441 * _324;
        float _458 = (cbSceneParam._m0[77u].w * _454) / _440;
        float _459 = _458 + cbSceneParam._m0[79u].w;
        float _460 = cbSceneParam._m0[79u].w - _453;
        float _466 = sqrt(((_452 * _452) + (_453 * _453)) + (_456 * _456));
        float _469 = (1.0 - (cbSceneParam._m0[77u].w / _440)) * _466;
        float _475 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _477 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _610;
        if (abs((_454 - _458) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _610 = ((((_459 > 0.0) ? exp2(_475 * _459) : (2.0 - exp2(_477 * _459))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _469;
        }
        else
        {
            float _565 = 1.0 / cbSceneParam._m0[80u].x;
            float _566 = isnan(_460) ? _459 : (isnan(_459) ? _460 : max(_459, _460));
            float _567 = isnan(_460) ? _459 : (isnan(_459) ? _460 : min(_459, _460));
            float _576 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : min(_566, 0.0));
            float _577 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : min(_567, 0.0));
            _610 = ((abs(_466 / _454) * cbSceneParam._m0[80u].y) * ((((_576 - _577) * 2.0) - ((exp2(_475 * (isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0)))) - exp2(_475 * (isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0))))) * _565)) - ((exp2(_477 * _576) - exp2(_477 * _577)) * _565))) + (_469 * cbSceneParam._m0[80u].z);
        }
        vec4 _612 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_378, _379, 1.0), 0.0);
        float _621 = exp2((_610 * (-1.44269502162933349609375)) * (1.0 - _612.w));
        float _622 = log2(_621);
        float _638 = log2(_399);
        _479 = (exp2(_638 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_622 * cbSceneParam._m0[78u].x)) * _612.x) / cbSceneParam._m0[78u].x)) + _396;
        _481 = (exp2(_638 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_622 * cbSceneParam._m0[78u].y)) * _612.y) / cbSceneParam._m0[78u].y)) + _397;
        _483 = (exp2(_638 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_622 * cbSceneParam._m0[78u].z)) * _612.z) / cbSceneParam._m0[78u].z)) + _398;
        _485 = _621 * _399;
    }
    else
    {
        _479 = _396;
        _481 = _397;
        _483 = _398;
        _485 = _399;
    }
    bool _648;
    vec4 _495;
    vec4 _519;
    float _521;
    float _526;
    float _527;
    float _528;
    float _531;
    float _534;
    float _537;
    float _538;
    bool _549;
    for (;;)
    {
        _495 = cbMatDynParam._m0[0u];
        float _497 = roundEven(_495.y);
        bool _498 = _497 == 3.0;
        float _500 = log2(_485);
        float _504 = exp2(_500 * cbSceneParam._m0[78u].x);
        float _505 = exp2(_500 * cbSceneParam._m0[78u].y);
        float _506 = exp2(_500 * cbSceneParam._m0[78u].z);
        float _507 = _504 * _356;
        float _508 = _505 * _357;
        float _509 = _506 * _358;
        float _516 = _327 + (-0.5);
        _519 = cbMtdParam._m0[1u];
        _521 = _519.y * _516;
        float _525 = (_497 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _526 = _525 * (_498 ? _507 : (_507 + (cbSceneParam._m0[72u].w * _479)));
        _527 = _525 * (_498 ? _508 : (_508 + (cbSceneParam._m0[72u].w * _481)));
        _528 = _525 * (_498 ? _509 : (_509 + (cbSceneParam._m0[72u].w * _483)));
        _531 = ((_364 * _368) * _504) * _525;
        _534 = ((_365 * _368) * _505) * _525;
        _537 = ((_366 * _368) * _506) * _525;
        _538 = _516 * 0.999000012874603271484375;
        _549 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_549)
        {
            if ((cbInstanceData._m0[_345 + 7u].x + _538) < 0.5)
            {
                _648 = true;
                break;
            }
        }
        uint _602 = _346 + uint(_495.w);
        if ((cbInstanceData._m0[_602].w < 1.0) && ((cbInstanceData._m0[_602].w + _538) < 0.5))
        {
            _648 = true;
            break;
        }
        if ((_521 + _191) < _519.x)
        {
            _648 = true;
            break;
        }
        _648 = false;
        break;
    }
    float _653;
    if (_648)
    {
        discard_state = true;
        _653 = 0.0;
    }
    else
    {
        _653 = cbInstanceData._m0[_369].w;
    }
    SV_Target.x = _526;
    SV_Target.y = _527;
    SV_Target.z = _528;
    SV_Target.w = _653;
    SV_Target_1.x = _531;
    SV_Target_1.y = _534;
    SV_Target_1.z = _537;
    SV_Target_1.w = cbInstanceData._m0[_369].w;
    discard_exit();
}


