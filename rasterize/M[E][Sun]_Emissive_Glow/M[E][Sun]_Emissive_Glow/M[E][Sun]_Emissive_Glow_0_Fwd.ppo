#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Sun_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _117 = texture(sampler2D(M_E_Sun_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _124 = (cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].w) * _117.x;
    float _126 = (cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].w) * _117.y;
    float _128 = (cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].w) * _117.z;
    float _141 = (POSITION_1.w - cbMtdParam._m0[12u].x) * (1.0 / cbMtdParam._m0[12u].y);
    float _500 = isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0));
    float _143 = isnan(1.0) ? _500 : (isnan(_500) ? 1.0 : min(_500, 1.0));
    float _151 = (POSITION_1.w - cbMtdParam._m0[11u].z) * (1.0 / cbMtdParam._m0[11u].w);
    float _511 = isnan(0.0) ? _151 : (isnan(_151) ? 0.0 : max(_151, 0.0));
    float _152 = isnan(1.0) ? _511 : (isnan(_511) ? 1.0 : min(_511, 1.0));
    float _156 = _124 - (_152 * _124);
    float _157 = _126 - (_152 * _126);
    float _158 = _128 - (_152 * _128);
    float _183 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _200 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _215 = uint(roundEven(NORMAL.w)) * 13u;
    uint _217 = (_215 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _223 = cbInstanceData._m0[_217].x * ((((_124 * cbMtdParam._m0[10u].y) - _156) * _143) + _156);
    float _224 = cbInstanceData._m0[_217].y * ((((_126 * cbMtdParam._m0[10u].y) - _157) * _143) + _157);
    float _225 = cbInstanceData._m0[_217].z * ((((_128 * cbMtdParam._m0[10u].y) - _158) * _143) + _158);
    float _537 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _238 = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
    uint _239 = _215 + 6u;
    float _249 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _250 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _265 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_249, _250, (log2((isnan(cbSceneParam._m0[77u].w) ? _183 : (isnan(_183) ? cbSceneParam._m0[77u].w : min(_183, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _267 = _265.x;
    float _268 = _265.y;
    float _269 = _265.z;
    float _270 = _265.w;
    float _355;
    float _357;
    float _359;
    float _361;
    if (_183 > cbSceneParam._m0[78u].w)
    {
        float _316 = isnan(_183) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _183 : min(cbSceneParam._m0[80u].w, _183));
        float _317 = _316 / _183;
        float _328 = _317 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _200));
        float _329 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _200)) * _317;
        float _330 = (-0.0) - _329;
        float _332 = _317 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _200));
        float _334 = (cbSceneParam._m0[77u].w * _330) / _316;
        float _335 = _334 + cbSceneParam._m0[79u].w;
        float _336 = cbSceneParam._m0[79u].w - _329;
        float _342 = sqrt(((_328 * _328) + (_329 * _329)) + (_332 * _332));
        float _345 = (1.0 - (cbSceneParam._m0[77u].w / _316)) * _342;
        float _351 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _353 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _455;
        if (abs((_330 - _334) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _455 = ((((_335 > 0.0) ? exp2(_351 * _335) : (2.0 - exp2(_353 * _335))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _345;
        }
        else
        {
            float _428 = 1.0 / cbSceneParam._m0[80u].x;
            float _429 = isnan(_336) ? _335 : (isnan(_335) ? _336 : max(_335, _336));
            float _430 = isnan(_336) ? _335 : (isnan(_335) ? _336 : min(_335, _336));
            float _439 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : min(_429, 0.0));
            float _440 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : min(_430, 0.0));
            _455 = ((abs(_342 / _330) * cbSceneParam._m0[80u].y) * ((((_439 - _440) * 2.0) - ((exp2(_351 * (isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0)))) - exp2(_351 * (isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0))))) * _428)) - ((exp2(_353 * _439) - exp2(_353 * _440)) * _428))) + (_345 * cbSceneParam._m0[80u].z);
        }
        vec4 _457 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_249, _250, 1.0), 0.0);
        float _466 = exp2((_455 * (-1.44269502162933349609375)) * (1.0 - _457.w));
        float _467 = log2(_466);
        float _483 = log2(_270);
        _355 = (exp2(_483 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_467 * cbSceneParam._m0[78u].x)) * _457.x) / cbSceneParam._m0[78u].x)) + _267;
        _357 = (exp2(_483 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_467 * cbSceneParam._m0[78u].y)) * _457.y) / cbSceneParam._m0[78u].y)) + _268;
        _359 = (exp2(_483 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_467 * cbSceneParam._m0[78u].z)) * _457.z) / cbSceneParam._m0[78u].z)) + _269;
        _361 = _466 * _270;
    }
    else
    {
        _355 = _267;
        _357 = _268;
        _359 = _269;
        _361 = _270;
    }
    float _373 = roundEven(cbMatDynParam._m0[0u].y);
    bool _374 = _373 == 3.0;
    float _376 = log2(_361);
    float _380 = exp2(_376 * cbSceneParam._m0[78u].x);
    float _381 = exp2(_376 * cbSceneParam._m0[78u].y);
    float _382 = exp2(_376 * cbSceneParam._m0[78u].z);
    float _383 = _380 * (isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0)));
    float _384 = _381 * (isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0)));
    float _385 = _382 * (isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0)));
    float _395 = (_373 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _395 * (_374 ? _383 : (_383 + (cbSceneParam._m0[72u].w * _355)));
    SV_Target.y = _395 * (_374 ? _384 : (_384 + (cbSceneParam._m0[72u].w * _357)));
    SV_Target.z = _395 * (_374 ? _385 : (_385 + (cbSceneParam._m0[72u].w * _359)));
    SV_Target.w = cbInstanceData._m0[_239].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _223) * _238) * _380) * _395;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _224) * _238) * _381) * _395;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _225) * _238) * _382) * _395;
    SV_Target_1.w = cbInstanceData._m0[_239].w;
}


