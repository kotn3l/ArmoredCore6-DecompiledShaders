#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _144 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _152 = _151 * NORMAL.x;
    float _153 = _151 * NORMAL.y;
    float _154 = _151 * NORMAL.z;
    float _158 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
    }
    else
    {
        _166 = _152;
        _167 = _153;
        _168 = _154;
    }
    vec4 _188 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _194 = _188.x * cbMtdParam._m0[9u].x;
    float _195 = _188.y * cbMtdParam._m0[9u].y;
    float _196 = _188.z * cbMtdParam._m0[9u].z;
    vec4 _208 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _210 = _208.x;
    vec4 _222 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _226 = _222.z;
    float _230 = (_222.x * 2.0) + (-1.0);
    float _232 = (_222.y * 2.0) + (-1.0);
    float _233 = dot(vec2(_230, _232), vec2(_230, _232));
    float _438 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _239 = sqrt(1.0 - (isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0))));
    float _242 = fma(_239, _166, fma(_232, _158 * TANGENT.x, (_144 * _137) * _230));
    float _245 = fma(_239, _167, fma(_232, _158 * TANGENT.y, (_144 * _138) * _230));
    float _248 = fma(_239, _168, fma(_232, _158 * TANGENT.z, (_144 * _139) * _230));
    float _252 = inversesqrt(dot(vec3(_242, _245, _248), vec3(_242, _245, _248)));
    float _449 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _460 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _254 = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    float _471 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _255 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    float _482 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _256 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
    float _493 = isnan(0.0) ? _210 : (isnan(_210) ? 0.0 : max(_210, 0.0));
    uint _259 = uint(roundEven(NORMAL.w));
    vec4 _264 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _266 = _264.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _329 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _504 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
        float _330 = isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0));
        float _334 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _515 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0))) - _330)) + _330) < ((_266 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _363;
    uint _286;
    vec4 _291;
    float _298;
    float _299;
    float _300;
    float _304;
    vec4 _308;
    float _310;
    float _311;
    bool _322;
    for (;;)
    {
        _286 = _259 * 13u;
        _291 = cbInstanceData._m0[(_286 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _295 = (cbMtdParam._m0[0u].x * _254) * _291.x;
        float _296 = (cbMtdParam._m0[0u].y * _255) * _291.y;
        float _297 = (cbMtdParam._m0[0u].z * _256) * _291.z;
        float _526 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
        _298 = isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0));
        float _537 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
        _299 = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
        float _548 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
        _300 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
        _304 = cbInstanceData._m0[_286 + 6u].w;
        float _305 = _266 + (-0.5);
        _308 = cbMtdParam._m0[1u];
        _310 = _308.y * _305;
        _311 = _305 * 0.999000012874603271484375;
        _322 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_322)
        {
            if ((cbInstanceData._m0[_286 + 7u].x + _311) < 0.5)
            {
                _363 = true;
                break;
            }
        }
        if ((_291.w < 1.0) && ((_291.w + _311) < 0.5))
        {
            _363 = true;
            break;
        }
        if ((_310 + 1.0) < _308.x)
        {
            _363 = true;
            break;
        }
        _363 = false;
        break;
    }
    if (_363)
    {
        discard_state = true;
    }
    bool _389 = cbMtdParam._m0[1u].z != 0.0;
    float _390 = _389 ? _304 : 0.0;
    SV_Target.x = ((_242 * 0.5) * _252) + 0.500488758087158203125;
    SV_Target.y = ((_245 * 0.5) * _252) + 0.500488758087158203125;
    SV_Target.z = ((_248 * 0.5) * _252) + 0.500488758087158203125;
    SV_Target.w = _390;
    SV_Target_1.x = isnan(1.0) ? _493 : (isnan(_493) ? 1.0 : min(_493, 1.0));
    SV_Target_1.y = isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _389 ? _304 : TEXCOORD.z;
    SV_Target_2.x = _298;
    SV_Target_2.y = _299;
    SV_Target_2.z = _300;
    SV_Target_2.w = _389 ? _304 : (float(floatBitsToUint(cbInstanceData._m0[_286 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _390;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _390;
    discard_exit();
}


