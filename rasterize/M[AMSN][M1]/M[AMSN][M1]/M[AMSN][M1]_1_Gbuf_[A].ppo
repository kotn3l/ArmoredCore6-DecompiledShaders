#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _148 = _147 * NORMAL.x;
    float _149 = _147 * NORMAL.y;
    float _150 = _147 * NORMAL.z;
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _162;
    float _163;
    float _164;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
    }
    else
    {
        _162 = _148;
        _163 = _149;
        _164 = _150;
    }
    vec4 _184 = texture(sampler2D(M_AMSN_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _190 = _184.x * cbMtdParam._m0[9u].x;
    float _191 = _184.y * cbMtdParam._m0[9u].y;
    float _192 = _184.z * cbMtdParam._m0[9u].z;
    vec4 _208 = texture(sampler2D(M_AMSN_M1_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _212 = _208.z;
    float _216 = (_208.x * 2.0) + (-1.0);
    float _218 = (_208.y * 2.0) + (-1.0);
    float _219 = dot(vec2(_216, _218), vec2(_216, _218));
    float _424 = isnan(0.0) ? _219 : (isnan(_219) ? 0.0 : max(_219, 0.0));
    float _225 = sqrt(1.0 - (isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0))));
    float _228 = fma(_225, _162, fma(_218, _154 * TANGENT.x, (_140 * _133) * _216));
    float _231 = fma(_225, _163, fma(_218, _154 * TANGENT.y, (_140 * _134) * _216));
    float _234 = fma(_225, _164, fma(_218, _154 * TANGENT.z, (_140 * _135) * _216));
    float _238 = inversesqrt(dot(vec3(_228, _231, _234), vec3(_228, _231, _234)));
    float _435 = isnan(0.0) ? _212 : (isnan(_212) ? 0.0 : max(_212, 0.0));
    float _446 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _240 = isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0));
    float _457 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _241 = isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0));
    float _468 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _242 = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
    float _479 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    uint _245 = uint(roundEven(NORMAL.w));
    vec4 _250 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _252 = _250.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _315 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _490 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        float _316 = isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0));
        float _320 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _501 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0))) - _316)) + _316) < ((_252 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _349;
    uint _272;
    vec4 _277;
    float _284;
    float _285;
    float _286;
    float _290;
    vec4 _294;
    float _296;
    float _297;
    bool _308;
    for (;;)
    {
        _272 = _245 * 13u;
        _277 = cbInstanceData._m0[(_272 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _281 = (cbMtdParam._m0[0u].x * _240) * _277.x;
        float _282 = (cbMtdParam._m0[0u].y * _241) * _277.y;
        float _283 = (cbMtdParam._m0[0u].z * _242) * _277.z;
        float _512 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
        _284 = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
        float _523 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
        _285 = isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0));
        float _534 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
        _286 = isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0));
        _290 = cbInstanceData._m0[_272 + 6u].w;
        float _291 = _252 + (-0.5);
        _294 = cbMtdParam._m0[1u];
        _296 = _294.y * _291;
        _297 = _291 * 0.999000012874603271484375;
        _308 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_308)
        {
            if ((cbInstanceData._m0[_272 + 7u].x + _297) < 0.5)
            {
                _349 = true;
                break;
            }
        }
        if ((_277.w < 1.0) && ((_277.w + _297) < 0.5))
        {
            _349 = true;
            break;
        }
        if ((_296 + 1.0) < _294.x)
        {
            _349 = true;
            break;
        }
        _349 = false;
        break;
    }
    if (_349)
    {
        discard_state = true;
    }
    bool _375 = cbMtdParam._m0[1u].z != 0.0;
    float _376 = _375 ? _290 : 0.0;
    SV_Target.x = ((_228 * 0.5) * _238) + 0.500488758087158203125;
    SV_Target.y = ((_231 * 0.5) * _238) + 0.500488758087158203125;
    SV_Target.z = ((_234 * 0.5) * _238) + 0.500488758087158203125;
    SV_Target.w = _376;
    SV_Target_1.x = isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : min(_479, 1.0));
    SV_Target_1.y = isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _375 ? _290 : TEXCOORD.z;
    SV_Target_2.x = _284;
    SV_Target_2.y = _285;
    SV_Target_2.z = _286;
    SV_Target_2.w = _375 ? _290 : (float(floatBitsToUint(cbInstanceData._m0[_272 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _376;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _376;
    discard_exit();
}


