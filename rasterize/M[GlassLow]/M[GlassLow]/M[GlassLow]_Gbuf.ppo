#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_GlassLow_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _111 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _112 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _113 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _118 = inversesqrt(dot(vec3(_111, _112, _113), vec3(_111, _112, _113)));
    float _125 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _132 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _161 = texture(sampler2D(M_GlassLow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _170 = (_161.x * 2.0) + (-1.0);
    float _172 = (_161.y * 2.0) + (-1.0);
    float _173 = dot(vec2(_170, _172), vec2(_170, _172));
    float _289 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _179 = sqrt(1.0 - (isnan(1.0) ? _289 : (isnan(_289) ? 1.0 : min(_289, 1.0))));
    float _184 = ((cbMtdParam._m0[10u].y + _161.z) * 0.5) + cbMtdParam._m0[10u].x;
    float _187 = fma(_179, _125 * NORMAL.x, fma(_172, _132 * TANGENT.x, (_118 * _111) * _170));
    float _190 = fma(_179, _125 * NORMAL.y, fma(_172, _132 * TANGENT.y, (_118 * _112) * _170));
    float _193 = fma(_179, _125 * NORMAL.z, fma(_172, _132 * TANGENT.z, (_118 * _113) * _170));
    float _197 = inversesqrt(dot(vec3(_187, _190, _193), vec3(_187, _190, _193)));
    float _300 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _198 = isnan(1.0) ? _300 : (isnan(_300) ? 1.0 : min(_300, 1.0));
    float _311 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _322 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    float _333 = isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0));
    float _344 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _355 = isnan(0.0) ? cbMtdParam._m0[10u].w : (isnan(cbMtdParam._m0[10u].w) ? 0.0 : max(cbMtdParam._m0[10u].w, 0.0));
    uint _218 = uint(roundEven(NORMAL.w)) * 13u;
    uint _221 = (_218 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _227 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _322 : (isnan(_322) ? 1.0 : min(_322, 1.0)))) * cbInstanceData._m0[_221].x;
    float _228 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _333 : (isnan(_333) ? 1.0 : min(_333, 1.0)))) * cbInstanceData._m0[_221].y;
    float _229 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _344 : (isnan(_344) ? 1.0 : min(_344, 1.0)))) * cbInstanceData._m0[_221].z;
    float _366 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _377 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _388 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _399 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _239 = cbInstanceData._m0[_218 + 6u].w * (isnan(1.0) ? _399 : (isnan(_399) ? 1.0 : min(_399, 1.0)));
    bool _263 = cbMtdParam._m0[1u].z != 0.0;
    float _264 = _263 ? _239 : 0.0;
    SV_Target.x = ((_187 * 0.5) * _197) + 0.500488758087158203125;
    SV_Target.y = ((_190 * 0.5) * _197) + 0.500488758087158203125;
    SV_Target.z = ((_193 * 0.5) * _197) + 0.500488758087158203125;
    SV_Target.w = _264;
    SV_Target_1.x = isnan(1.0) ? _355 : (isnan(_355) ? 1.0 : min(_355, 1.0));
    SV_Target_1.y = isnan(1.0) ? _311 : (isnan(_311) ? 1.0 : min(_311, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _263 ? _239 : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _366 : (isnan(_366) ? 1.0 : min(_366, 1.0));
    SV_Target_2.y = isnan(1.0) ? _377 : (isnan(_377) ? 1.0 : min(_377, 1.0));
    SV_Target_2.z = isnan(1.0) ? _388 : (isnan(_388) ? 1.0 : min(_388, 1.0));
    SV_Target_2.w = _263 ? _239 : (float(floatBitsToUint(cbInstanceData._m0[_218 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _264;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _264;
}


