#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 11) uniform sampler SS_ClampAniso;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1211;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _208 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _209 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _210 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_208, _209, _210), vec3(_208, _209, _210)));
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    vec4 _260 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1) + cbTextureTilingScale._m0[3u].w));
    float _263 = _260.x;
    float _264 = _260.y;
    float _265 = _260.z;
    float _280 = (POSITION_1.w - cbMtdParam._m0[14u].z) * (1.0 / cbMtdParam._m0[13u].y);
    float _3805 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _281 = isnan(1.0) ? _3805 : (isnan(_3805) ? 1.0 : min(_3805, 1.0));
    vec4 _293 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1) + cbTextureTilingScale._m0[1u].w));
    float _295 = _293.x;
    float _296 = _293.y;
    float _297 = _293.z;
    float _304 = (((_263 * cbMtdParam._m0[12u].x) - _295) * _281) + _295;
    float _305 = (((_264 * cbMtdParam._m0[12u].y) - _296) * _281) + _296;
    float _306 = (((_265 * cbMtdParam._m0[12u].z) - _297) * _281) + _297;
    vec4 _328 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1) + cbTextureTilingScale._m0[6u].w));
    float _330 = _328.x;
    float _331 = _328.y;
    float _332 = _328.z;
    vec4 _350 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_0, SS_ClampAniso), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _377 = cbMtdParam._m0[14u].y * texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1) + cbTextureTilingScale._m0[7u].w)).x;
    float _385 = ((cbMtdParam._m0[13u].x * (-1.39999997615814208984375)) * ((((1.0 - TEXCOORD_3.x) - _350.x) * 2.0) - _377)) + 1.0;
    float _3816 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
    float _396 = (_386 * ((_330 - _304) + (((cbMtdParam._m0[10u].x * _263) - _330) * _281))) + _304;
    float _397 = (_386 * ((_331 - _305) + (((cbMtdParam._m0[10u].y * _264) - _331) * _281))) + _305;
    float _398 = (_386 * ((_332 - _306) + (((cbMtdParam._m0[10u].z * _265) - _332) * _281))) + _306;
    vec4 _420 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1) + cbTextureTilingScale._m0[11u].w));
    float _422 = _420.x;
    float _423 = _420.y;
    float _424 = _420.z;
    float _436 = ((((((1.0 - TEXCOORD_3.y) - _350.y) * 2.0) - _377) * (-1.39999997615814208984375)) * cbMtdParam._m0[13u].w) + 1.0;
    float _3827 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0));
    float _447 = (((_422 - _396) + (((cbMtdParam._m0[9u].x * _263) - _422) * _281)) * _437) + _396;
    float _448 = (((_423 - _397) + (((cbMtdParam._m0[9u].y * _264) - _423) * _281)) * _437) + _397;
    float _449 = (_437 * ((_424 - _398) + (((cbMtdParam._m0[9u].z * _265) - _424) * _281))) + _398;
    vec4 _469 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1) + cbTextureTilingScale._m0[2u].w));
    float _471 = _469.x;
    float _472 = _469.y;
    float _473 = _469.z;
    float _485 = ((((((1.0 - TEXCOORD_3.z) - _350.z) * 2.0) - _377) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].x) + 1.0;
    float _3838 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _486 = isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0));
    float _496 = (((_471 - _447) + (((cbMtdParam._m0[11u].x * _263) - _471) * _281)) * _486) + _447;
    float _497 = (((_472 - _448) + (((cbMtdParam._m0[11u].y * _264) - _472) * _281)) * _486) + _448;
    float _498 = (_486 * ((_473 - _449) + (((cbMtdParam._m0[11u].z * _265) - _473) * _281))) + _449;
    vec4 _512 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1) + cbTextureTilingScale._m0[5u].w));
    float _514 = _512.x;
    float _515 = _512.y;
    float _516 = _512.z;
    vec4 _528 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1) + cbTextureTilingScale._m0[10u].w));
    float _530 = _528.x;
    float _531 = _528.y;
    float _532 = _528.z;
    vec4 _554 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1) + cbTextureTilingScale._m0[4u].w));
    float _556 = _554.x;
    float _557 = _554.y;
    float _558 = _554.z;
    vec4 _579 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1) + cbTextureTilingScale._m0[9u].w));
    float _581 = _579.x;
    float _582 = _579.y;
    float _583 = _579.z;
    vec4 _605 = texture(sampler2D(M_AMSN_V_Mb4_3Mask_Far_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1) + cbTextureTilingScale._m0[8u].w));
    float _607 = _605.x;
    float _608 = _605.y;
    float _609 = _605.z;
    float _616 = ((_530 - _607) * _281) + _607;
    float _617 = ((_531 - _608) * _281) + _608;
    float _618 = ((_532 - _609) * _281) + _609;
    float _625 = (((((_530 - _581) * _281) + _581) - _616) * _386) + _616;
    float _626 = (((((_531 - _582) * _281) + _582) - _617) * _386) + _617;
    float _627 = (((((_532 - _583) * _281) + _583) - _618) * _386) + _618;
    float _634 = (((((_530 - _556) * _281) + _556) - _625) * _437) + _625;
    float _635 = (((((_531 - _557) * _281) + _557) - _626) * _437) + _626;
    float _636 = (((((_532 - _558) * _281) + _558) - _627) * _437) + _627;
    float _647 = (((((((_530 - _514) * _281) + _514) - _634) * _486) + _634) * 2.0) + (-1.0);
    float _649 = (((((((_531 - _515) * _281) + _515) - _635) * _486) + _635) * 2.0) + (-1.0);
    float _650 = dot(vec2(_647, _649), vec2(_647, _649));
    float _3849 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _655 = sqrt(1.0 - (isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0))));
    float _657 = (_636 + cbMtdParam._m0[13u].z) + (((((_532 - _516) * _281) + _516) - _636) * _486);
    float _673 = (((_647 * cbMtdParam._m0[14u].w) - _647) * _281) + _647;
    float _674 = (((_649 * cbMtdParam._m0[15u].x) - _649) * _281) + _649;
    float _675 = (((cbMtdParam._m0[15u].y * _655) - _655) * _281) + _655;
    float _678 = fma(_675, _238, fma(_674, _230 * TANGENT.x, (_216 * _208) * _673));
    float _681 = fma(_675, _239, fma(_674, _230 * TANGENT.y, (_216 * _209) * _673));
    float _684 = fma(_675, _240, fma(_674, _230 * TANGENT.z, (_216 * _210) * _673));
    float _688 = inversesqrt(dot(vec3(_678, _681, _684), vec3(_678, _681, _684)));
    float _689 = _688 * _678;
    float _690 = _688 * _681;
    float _691 = _688 * _684;
    float _3860 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _692 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _3871 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _3882 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _3893 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _711 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _751 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _761 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _751);
    float _762 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _751);
    float _763 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _751);
    float _767 = inversesqrt(dot(vec3(_761, _762, _763), vec3(_761, _762, _763)));
    float _768 = _761 * _767;
    float _769 = _762 * _767;
    float _770 = _763 * _767;
    float _776 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _777 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _795 = fma(_691, cbSceneParam._m0[5u].z, fma(_690, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _689));
    float _798 = fma(_691, cbSceneParam._m0[6u].z, fma(_690, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _689));
    float _801 = fma(_691, cbSceneParam._m0[7u].z, fma(_690, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _689));
    uint _814 = uint(roundEven(NORMAL.w)) * 13u;
    uint _816 = (_814 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _822 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0)))) * cbInstanceData._m0[_816].x;
    float _823 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0)))) * cbInstanceData._m0[_816].y;
    float _824 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0)))) * cbInstanceData._m0[_816].z;
    float _3904 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
    float _825 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
    float _3915 = isnan(0.0) ? _823 : (isnan(_823) ? 0.0 : max(_823, 0.0));
    float _826 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
    float _3926 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _827 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
    vec4 _836 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _776, cbSceneParam._m0[86u].y * _777));
    float _839 = _836.x * TEXCOORD_3.w;
    float _840 = dot(vec3(_689, _690, _691), vec3(_768, _769, _770));
    float _843 = _840 * 2.0;
    float _847 = (_843 * _689) - _768;
    float _848 = (_843 * _690) - _769;
    float _849 = (_843 * _691) - _770;
    float _853 = abs(dot(vec3(_768, _769, _770), vec3(_689, _690, _691)));
    float _3937 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _855 = sqrt(_692);
    float _868 = exp2((_855 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_855 * 3.0));
    float _900 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _904 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _908 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1210;
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _935 = fma(_908, cbModelParam._m0[26u].z, fma(_904, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _900));
        float _939 = fma(_908, cbModelParam._m0[27u].z, fma(_904, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _900));
        float _943 = fma(_908, cbModelParam._m0[28u].z, fma(_904, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _900));
        float _968 = _900 + _689;
        float _969 = _904 + _690;
        float _970 = _908 + _691;
        float _980 = fma(_970, cbModelParam._m0[26u].z, fma(_969, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _968)) - _935;
        float _981 = fma(_970, cbModelParam._m0[27u].z, fma(_969, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _968)) - _939;
        float _982 = fma(_970, cbModelParam._m0[28u].z, fma(_969, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _968)) - _943;
        float _986 = inversesqrt(dot(vec3(_980, _981, _982), vec3(_980, _981, _982)));
        float _999 = ((_986 * _980) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_935 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1000 = ((_986 * _981) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_939 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1001 = ((_986 * _982) / cbModelParam._m0[34u].z) + ((((((_943 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        vec4 _1025 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_999, _1000, _1001), 0.0);
        float _1038 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1039 = _1038 * (_1004.x + (-0.5));
        float _1040 = _1038 * (_1004.y + (-0.5));
        float _1041 = _1038 * (_1004.z + (-0.5));
        float _1048 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1011.x + (-0.5));
        float _1050 = _1048 * (_1011.y + (-0.5));
        float _1051 = _1048 * (_1011.z + (-0.5));
        float _1058 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1018.x + (-0.5));
        float _1060 = _1058 * (_1018.y + (-0.5));
        float _1061 = _1058 * (_1018.z + (-0.5));
        float _1068 = exp2((_1025.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1025.x + (-0.5));
        float _1070 = _1068 * (_1025.y + (-0.5));
        float _1071 = _1068 * (_1025.z + (-0.5));
        float _1072 = isnan(0.0) ? _1069 : (isnan(_1069) ? 0.0 : max(_1069, 0.0));
        float _1073 = isnan(0.0) ? _1070 : (isnan(_1070) ? 0.0 : max(_1070, 0.0));
        float _1074 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1075 = _1039 * 0.5;
        float _1076 = _1049 * 0.5;
        float _1077 = _1059 * 0.5;
        float _1078 = dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077));
        float _1083 = (_1078 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1078);
        float _1092 = (dot(vec3(_689, _690, _691), vec3(_1083 * _1075, _1083 * _1076, _1083 * _1077)) + 1.0) * 0.5;
        float _3963 = isnan(0.0) ? _1092 : (isnan(_1092) ? 0.0 : max(_1092, 0.0));
        float _1102 = sqrt(((_1076 * _1076) + (_1075 * _1075)) + (_1077 * _1077)) / (_1072 + 9.9999997473787516355514526367188e-06);
        float _3974 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1103 = isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0));
        float _1104 = _1103 * 2.0;
        float _1108 = (1.0 - _1103) / (_1103 + 1.0);
        float _3985 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
        float _1118 = ((((1.0 - _1109) * (_1104 + 2.0)) * exp2(log2(isnan(1.0) ? _3963 : (isnan(_3963) ? 1.0 : min(_3963, 1.0))) * (_1104 + 1.0))) + _1109) * _1072;
        float _1119 = _1040 * 0.5;
        float _1120 = _1050 * 0.5;
        float _1121 = _1060 * 0.5;
        float _1122 = dot(vec3(_1119, _1120, _1121), vec3(_1119, _1120, _1121));
        float _1127 = (_1122 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1122);
        float _1135 = (dot(vec3(_689, _690, _691), vec3(_1127 * _1119, _1127 * _1120, _1127 * _1121)) + 1.0) * 0.5;
        float _3996 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1144 = sqrt(((_1120 * _1120) + (_1119 * _1119)) + (_1121 * _1121)) / (_1073 + 9.9999997473787516355514526367188e-06);
        float _4007 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1145 = isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0));
        float _1146 = _1145 * 2.0;
        float _1150 = (1.0 - _1145) / (_1145 + 1.0);
        float _4018 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
        float _1160 = ((((1.0 - _1151) * (_1146 + 2.0)) * exp2(log2(isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0))) * (_1146 + 1.0))) + _1151) * _1073;
        float _1161 = _1041 * 0.5;
        float _1162 = _1051 * 0.5;
        float _1163 = _1061 * 0.5;
        float _1164 = dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163));
        float _1169 = (_1164 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1164);
        float _1177 = (dot(vec3(_689, _690, _691), vec3(_1169 * _1161, _1169 * _1162, _1169 * _1163)) + 1.0) * 0.5;
        float _4029 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1186 = sqrt(((_1162 * _1162) + (_1161 * _1161)) + (_1163 * _1163)) / (_1074 + 9.9999997473787516355514526367188e-06);
        float _4040 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0));
        float _1188 = _1187 * 2.0;
        float _1192 = (1.0 - _1187) / (_1187 + 1.0);
        float _4051 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1202 = ((((1.0 - _1193) * (_1188 + 2.0)) * exp2(log2(isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0))) * (_1188 + 1.0))) + _1193) * _1074;
        _1210 = _1041;
        _1212 = _1040;
        _1213 = _1039;
        _1214 = _1051;
        _1215 = _1050;
        _1216 = _1049;
        _1217 = _1061;
        _1218 = _1060;
        _1219 = _1059;
        _1220 = _1074;
        _1221 = _1073;
        _1222 = _1072;
        _1223 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0)));
        _1224 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0)));
        _1225 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)));
    }
    else
    {
        _1210 = _1211;
        _1212 = _1211;
        _1213 = _1211;
        _1214 = _1211;
        _1215 = _1211;
        _1216 = _1211;
        _1217 = _1211;
        _1218 = _1211;
        _1219 = _1211;
        _1220 = _1211;
        _1221 = _1211;
        _1222 = _1211;
        _1223 = 0.0;
        _1224 = 0.0;
        _1225 = 0.0;
    }
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1251 = fma(_908, cbModelParam._m0[30u].z, fma(_904, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _900));
        float _1255 = fma(_908, cbModelParam._m0[31u].z, fma(_904, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _900));
        float _1259 = fma(_908, cbModelParam._m0[32u].z, fma(_904, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _900));
        float _1282 = _900 + _689;
        float _1283 = _904 + _690;
        float _1284 = _908 + _691;
        float _1294 = fma(_1284, cbModelParam._m0[30u].z, fma(_1283, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1282)) - _1251;
        float _1295 = fma(_1284, cbModelParam._m0[31u].z, fma(_1283, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1282)) - _1255;
        float _1296 = fma(_1284, cbModelParam._m0[32u].z, fma(_1283, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1282)) - _1259;
        float _1300 = inversesqrt(dot(vec3(_1294, _1295, _1296), vec3(_1294, _1295, _1296)));
        float _1313 = ((_1300 * _1294) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1251 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1314 = ((_1300 * _1295) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1255 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1315 = ((_1300 * _1296) / cbModelParam._m0[35u].z) + ((((((_1259 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1317 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1324 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1331 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        vec4 _1338 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1313, _1314, _1315), 0.0);
        float _1350 = exp2((_1317.w + (-0.5)) * 20.0) * 2.0;
        float _1351 = _1350 * (_1317.x + (-0.5));
        float _1352 = _1350 * (_1317.y + (-0.5));
        float _1353 = _1350 * (_1317.z + (-0.5));
        float _1360 = exp2((_1324.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1324.x + (-0.5));
        float _1362 = _1360 * (_1324.y + (-0.5));
        float _1363 = _1360 * (_1324.z + (-0.5));
        float _1370 = exp2((_1331.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1331.x + (-0.5));
        float _1372 = _1370 * (_1331.y + (-0.5));
        float _1373 = _1370 * (_1331.z + (-0.5));
        float _1380 = exp2((_1338.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1338.x + (-0.5));
        float _1382 = _1380 * (_1338.y + (-0.5));
        float _1383 = _1380 * (_1338.z + (-0.5));
        float _1384 = isnan(0.0) ? _1381 : (isnan(_1381) ? 0.0 : max(_1381, 0.0));
        float _1385 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
        float _1386 = isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0));
        float _1387 = _1351 * 0.5;
        float _1388 = _1361 * 0.5;
        float _1389 = _1371 * 0.5;
        float _1390 = dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389));
        float _1395 = (_1390 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1390);
        float _1403 = (dot(vec3(_689, _690, _691), vec3(_1395 * _1387, _1395 * _1388, _1395 * _1389)) + 1.0) * 0.5;
        float _4092 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
        float _1412 = sqrt(((_1388 * _1388) + (_1387 * _1387)) + (_1389 * _1389)) / (_1384 + 9.9999997473787516355514526367188e-06);
        float _4103 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
        float _1413 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
        float _1414 = _1413 * 2.0;
        float _1418 = (1.0 - _1413) / (_1413 + 1.0);
        float _4114 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
        float _1428 = ((((1.0 - _1419) * (_1414 + 2.0)) * exp2(log2(isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))) * (_1414 + 1.0))) + _1419) * _1384;
        float _1429 = _1352 * 0.5;
        float _1430 = _1362 * 0.5;
        float _1431 = _1372 * 0.5;
        float _1432 = dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431));
        float _1437 = (_1432 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1432);
        float _1445 = (dot(vec3(_689, _690, _691), vec3(_1437 * _1429, _1437 * _1430, _1437 * _1431)) + 1.0) * 0.5;
        float _4125 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1454 = sqrt(((_1430 * _1430) + (_1429 * _1429)) + (_1431 * _1431)) / (_1385 + 9.9999997473787516355514526367188e-06);
        float _4136 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1455 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1456 = _1455 * 2.0;
        float _1460 = (1.0 - _1455) / (_1455 + 1.0);
        float _4147 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
        float _1470 = ((((1.0 - _1461) * (_1456 + 2.0)) * exp2(log2(isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0))) * (_1456 + 1.0))) + _1461) * _1385;
        float _1471 = _1353 * 0.5;
        float _1472 = _1363 * 0.5;
        float _1473 = _1373 * 0.5;
        float _1474 = dot(vec3(_1471, _1472, _1473), vec3(_1471, _1472, _1473));
        float _1479 = (_1474 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1474);
        float _1487 = (dot(vec3(_689, _690, _691), vec3(_1479 * _1471, _1479 * _1472, _1479 * _1473)) + 1.0) * 0.5;
        float _4158 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1496 = sqrt(((_1472 * _1472) + (_1471 * _1471)) + (_1473 * _1473)) / (_1386 + 9.9999997473787516355514526367188e-06);
        float _4169 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1497 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1498 = _1497 * 2.0;
        float _1502 = (1.0 - _1497) / (_1497 + 1.0);
        float _4180 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _1512 = ((((1.0 - _1503) * (_1498 + 2.0)) * exp2(log2(isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0))) * (_1498 + 1.0))) + _1503) * _1386;
        _1520 = _1353;
        _1521 = _1352;
        _1522 = _1351;
        _1523 = _1363;
        _1524 = _1362;
        _1525 = _1361;
        _1526 = _1373;
        _1527 = _1372;
        _1528 = _1371;
        _1529 = _1386;
        _1530 = _1385;
        _1531 = _1384;
        _1532 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0)));
        _1533 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0)));
        _1534 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0)));
    }
    else
    {
        _1520 = _1211;
        _1521 = _1211;
        _1522 = _1211;
        _1523 = _1211;
        _1524 = _1211;
        _1525 = _1211;
        _1526 = _1211;
        _1527 = _1211;
        _1528 = _1211;
        _1529 = _1211;
        _1530 = _1211;
        _1531 = _1211;
        _1532 = 0.0;
        _1533 = 0.0;
        _1534 = 0.0;
    }
    float _1544 = (cbModelParam._m0[1u].x * (_1532 - _1223)) + _1223;
    float _1545 = (cbModelParam._m0[1u].x * (_1533 - _1224)) + _1224;
    float _1546 = (cbModelParam._m0[1u].x * (_1534 - _1225)) + _1225;
    float _1567 = fma(_1546, cbSceneParam._m0[89u].z, fma(_1545, cbSceneParam._m0[89u].y, _1544 * cbSceneParam._m0[89u].x));
    float _1570 = fma(_1546, cbSceneParam._m0[90u].z, fma(_1545, cbSceneParam._m0[90u].y, _1544 * cbSceneParam._m0[90u].x));
    float _1573 = fma(_1546, cbSceneParam._m0[91u].z, fma(_1545, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1544));
    float _1588 = _847 * 0.5;
    float _1589 = _848 * 0.5;
    float _1590 = _849 * 0.5;
    float _1591 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1522, _1525, _1528, _1531));
    float _1594 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1521, _1524, _1527, _1530));
    float _1597 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1520, _1523, _1526, _1529));
    float _1631;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1604 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1210, _1214, _1217, _1220));
        float _1608 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1212, _1215, _1218, _1221));
        float _1612 = dot(vec4(_1588, _1589, _1590, 1.0), vec4(_1213, _1216, _1219, _1222));
        float _1619 = dot(vec4(cbModelParam._m0[39u]), vec4(_1588, _1589, _1590, 1.0));
        _1631 = dot(vec3(isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0)), isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1619) ? 0.0 : (isnan(0.0) ? _1619 : max(0.0, _1619))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1631 = 1.0;
    }
    float _1642;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1633 = dot(vec4(cbModelParam._m0[40u]), vec4(_1588, _1589, _1590, 1.0));
        _1642 = dot(vec3(isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0)), isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0)), isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1633) ? 0.0 : (isnan(0.0) ? _1633 : max(0.0, _1633))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1642 = 1.0;
    }
    float _1646 = (_1642 * cbModelParam._m0[1u].x) + (_1631 * (1.0 - cbModelParam._m0[1u].x));
    float _1656 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _692);
    float _1657 = isnan(_1656) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1656 : min(cbModelParam._m0[25u].z, _1656));
    float _1737;
    float _1739;
    float _1741;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1704 = fma(_908, cbModelParam._m0[13u].z, fma(_904, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _900)) + cbModelParam._m0[13u].w;
        float _1708 = fma(_908, cbModelParam._m0[14u].z, fma(_904, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _900)) + cbModelParam._m0[14u].w;
        float _1712 = fma(_908, cbModelParam._m0[15u].z, fma(_904, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _900)) + cbModelParam._m0[15u].w;
        float _1715 = fma(_849, cbModelParam._m0[13u].z, fma(_848, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _847));
        float _1718 = fma(_849, cbModelParam._m0[14u].z, fma(_848, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _847));
        float _1721 = fma(_849, cbModelParam._m0[15u].z, fma(_848, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _847));
        float _1749;
        if (_1715 > 0.0)
        {
            _1749 = abs((1.0 - _1704) / _1715);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1715 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1704 + 1.0) / _1715);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1749 = frontier_phi_16_14_ladder;
        }
        float _1922;
        if (_1718 > 0.0)
        {
            _1922 = abs((1.0 - _1708) / _1718);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1708 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1922 = frontier_phi_25_21_ladder;
        }
        float _2217;
        if (_1721 > 0.0)
        {
            _2217 = abs((1.0 - _1712) / _1721);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1721 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1712 + 1.0) / _1721);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2217 = frontier_phi_37_32_ladder;
        }
        float _2219 = isnan(_1922) ? _1749 : (isnan(_1749) ? _1922 : min(_1749, _1922));
        float _2220 = isnan(_2217) ? _2219 : (isnan(_2219) ? _2217 : min(_2219, _2217));
        float _2224 = (_2220 * _1715) + _1704;
        float _2225 = (_2220 * _1718) + _1708;
        float _2226 = (_2220 * _1721) + _1712;
        float _2227 = _2220 * 9.9999997473787516355514526367188e-05;
        float _2229 = (-1.0) - _2227;
        float _2231 = _2227 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2226 > _2231) || ((_2226 < _2229) || ((_2225 > _2231) || ((_2225 < _2229) || ((_2224 < _2229) || (_2224 > _2231))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2371 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2226, cbModelParam._m0[9u].z, fma(_2225, cbModelParam._m0[9u].y, _2224 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2226, cbModelParam._m0[10u].z, fma(_2225, cbModelParam._m0[10u].y, _2224 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2226, cbModelParam._m0[11u].z, fma(_2225, cbModelParam._m0[11u].y, _2224 * cbModelParam._m0[11u].x))), _1657);
            frontier_phi_15_37_ladder = _2371.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2371.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2371.z * cbModelParam._m0[1u].y;
        }
        _1737 = frontier_phi_15_37_ladder_1;
        _1739 = frontier_phi_15_37_ladder;
        _1741 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1725 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_847, _848, _849), _1657);
        _1737 = _1725.x * cbModelParam._m0[1u].y;
        _1739 = _1725.y * cbModelParam._m0[1u].y;
        _1741 = _1725.z * cbModelParam._m0[1u].y;
    }
    float _1745 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _692);
    float _1746 = isnan(_1745) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1745 : min(cbModelParam._m0[25u].w, _1745));
    float _1839;
    float _1841;
    float _1843;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1803 = fma(_908, cbModelParam._m0[21u].z, fma(_904, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _900)) + cbModelParam._m0[21u].w;
        float _1807 = fma(_908, cbModelParam._m0[22u].z, fma(_904, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _900)) + cbModelParam._m0[22u].w;
        float _1811 = fma(_908, cbModelParam._m0[23u].z, fma(_904, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _900)) + cbModelParam._m0[23u].w;
        float _1814 = fma(_849, cbModelParam._m0[21u].z, fma(_848, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _847));
        float _1817 = fma(_849, cbModelParam._m0[22u].z, fma(_848, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _847));
        float _1820 = fma(_849, cbModelParam._m0[23u].z, fma(_848, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _847));
        float _1927;
        if (_1814 > 0.0)
        {
            _1927 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1927 = frontier_phi_27_23_ladder;
        }
        float _2244;
        if (_1817 > 0.0)
        {
            _2244 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2244 = frontier_phi_39_34_ladder;
        }
        float _2571;
        if (_1820 > 0.0)
        {
            _2571 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2571 = frontier_phi_49_46_ladder;
        }
        float _2573 = isnan(_2244) ? _1927 : (isnan(_1927) ? _2244 : min(_1927, _2244));
        float _2574 = isnan(_2571) ? _2573 : (isnan(_2573) ? _2571 : min(_2573, _2571));
        float _2578 = (_2574 * _1814) + _1803;
        float _2579 = (_2574 * _1817) + _1807;
        float _2580 = (_2574 * _1820) + _1811;
        float _2581 = _2574 * 9.9999997473787516355514526367188e-05;
        float _2582 = (-1.0) - _2581;
        float _2584 = _2581 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2580 > _2584) || ((_2580 < _2582) || ((_2579 > _2584) || ((_2579 < _2582) || ((_2578 < _2582) || (_2578 > _2584))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2698 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2580, cbModelParam._m0[17u].z, fma(_2579, cbModelParam._m0[17u].y, _2578 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2580, cbModelParam._m0[18u].z, fma(_2579, cbModelParam._m0[18u].y, _2578 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2580, cbModelParam._m0[19u].z, fma(_2579, cbModelParam._m0[19u].y, _2578 * cbModelParam._m0[19u].x))), _1746);
            frontier_phi_24_49_ladder = _2698.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2698.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2698.x * cbModelParam._m0[1u].z;
        }
        _1839 = frontier_phi_24_49_ladder_2;
        _1841 = frontier_phi_24_49_ladder_1;
        _1843 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1823 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_847, _848, _849), _1746);
        _1839 = _1823.x * cbModelParam._m0[1u].z;
        _1841 = _1823.y * cbModelParam._m0[1u].z;
        _1843 = _1823.z * cbModelParam._m0[1u].z;
    }
    float _1855 = ((((1.0 - _868) * ((_855 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_868 * _855)) * _839;
    float _1856 = _1855 * ((cbModelParam._m0[1u].w * (_1839 - _1737)) + _1737);
    float _1857 = _1855 * ((cbModelParam._m0[1u].w * (_1841 - _1739)) + _1739);
    float _1858 = _1855 * ((cbModelParam._m0[1u].w * (_1843 - _1741)) + _1741);
    float _1861 = fma(_1858, cbSceneParam._m0[89u].z, fma(_1857, cbSceneParam._m0[89u].y, _1856 * cbSceneParam._m0[89u].x));
    float _1864 = fma(_1858, cbSceneParam._m0[90u].z, fma(_1857, cbSceneParam._m0[90u].y, _1856 * cbSceneParam._m0[90u].x));
    float _1867 = fma(_1858, cbSceneParam._m0[91u].z, fma(_1857, cbSceneParam._m0[91u].y, _1856 * cbSceneParam._m0[91u].x));
    float _1901 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1905 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1909 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1913 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1914 = _1901 / _1913;
    float _1915 = _1905 / _1913;
    float _1916 = _1909 / _1913;
    float _2063;
    float _2064;
    float _2065;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1943 = ((uint(_1916 > cbSceneParam._m0[59u].y) + uint(_1916 > cbSceneParam._m0[59u].x)) + uint(_1916 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1944 = _1943 + 43u;
        uint _1952 = _1943 + 44u;
        uint _1960 = _1943 + 45u;
        uint _1968 = _1943 + 46u;
        float _1979 = fma(_1913, cbSceneParam._m0[_1944].w, fma(_1909, cbSceneParam._m0[_1944].z, fma(_1905, cbSceneParam._m0[_1944].y, _1901 * cbSceneParam._m0[_1944].x)));
        float _1983 = fma(_1913, cbSceneParam._m0[_1952].w, fma(_1909, cbSceneParam._m0[_1952].z, fma(_1905, cbSceneParam._m0[_1952].y, _1901 * cbSceneParam._m0[_1952].x)));
        float _1991 = fma(_1913, cbSceneParam._m0[_1968].w, fma(_1909, cbSceneParam._m0[_1968].z, fma(_1905, cbSceneParam._m0[_1968].y, _1901 * cbSceneParam._m0[_1968].x)));
        float _1996 = cbSceneParam._m0[33u].z * _1991;
        float _1998 = cbSceneParam._m0[33u].w * _1991;
        float _2001 = fma(_1913, cbSceneParam._m0[_1960].w, fma(_1909, cbSceneParam._m0[_1960].z, fma(_1905, cbSceneParam._m0[_1960].y, _1901 * cbSceneParam._m0[_1960].x))) / _1991;
        float _2049 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
        float _4306 = isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0));
        float _2056 = (isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1996 + _1979) / _1991, (_1998 + _1983) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1998 + _1979) / _1991, (_1983 - _1996) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1996) / _1991, (_1983 - _1998) / _1991), _2001), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1979 - _1998) / _1991, (_1996 + _1983) / _1991), _2001), 0.0)).x), vec4(0.25)));
        _2063 = 1.0 - (_2056 * cbSceneParam._m0[34u].x);
        _2064 = 1.0 - (_2056 * cbSceneParam._m0[34u].y);
        _2065 = 1.0 - (_2056 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2063 = 1.0;
        _2064 = 1.0;
        _2065 = 1.0;
    }
    float _2129;
    float _2131;
    float _2133;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2117 = fma(_1913, cbSceneParam._m0[63u].w, fma(_1909, cbSceneParam._m0[63u].z, fma(_1905, cbSceneParam._m0[63u].y, _1901 * cbSceneParam._m0[63u].x)));
        float _2118 = fma(_1913, cbSceneParam._m0[60u].w, fma(_1909, cbSceneParam._m0[60u].z, fma(_1905, cbSceneParam._m0[60u].y, _1901 * cbSceneParam._m0[60u].x))) / _2117;
        float _2119 = fma(_1913, cbSceneParam._m0[61u].w, fma(_1909, cbSceneParam._m0[61u].z, fma(_1905, cbSceneParam._m0[61u].y, _1901 * cbSceneParam._m0[61u].x))) / _2117;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2118 >= cbSceneParam._m0[64u].x) && (_2119 >= cbSceneParam._m0[64u].y)) && (_2118 <= cbSceneParam._m0[64u].z)) && (_2119 <= cbSceneParam._m0[64u].w))
        {
            float _2257 = fma(_1913, cbSceneParam._m0[62u].w, fma(_1909, cbSceneParam._m0[62u].z, fma(_1905, cbSceneParam._m0[62u].y, _1901 * cbSceneParam._m0[62u].x))) / _2117;
            float _2261 = isnan(cbSceneParam._m0[41u].w) ? _2257 : (isnan(_2257) ? cbSceneParam._m0[41u].w : max(_2257, cbSceneParam._m0[41u].w));
            float _2304 = (cbSceneParam._m0[33u].x - sqrt(((_1915 * _1915) + (_1914 * _1914)) + (_1916 * _1916))) * cbSceneParam._m0[33u].y;
            float _4322 = isnan(0.0) ? _2304 : (isnan(_2304) ? 0.0 : max(_2304, 0.0));
            float _2311 = (isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2118, cbSceneParam._m0[33u].w + _2119), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2118, _2119 - cbSceneParam._m0[33u].z), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].z, _2119 - cbSceneParam._m0[33u].w), _2261), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2118 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2119), _2261), 0.0)).x), vec4(0.25)));
            float _2315 = 1.0 - (_2311 * cbSceneParam._m0[34u].x);
            float _2316 = 1.0 - (_2311 * cbSceneParam._m0[34u].y);
            float _2317 = 1.0 - (_2311 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2316) ? _2064 : (isnan(_2064) ? _2316 : min(_2064, _2316));
            frontier_phi_36_35_ladder_1 = isnan(_2317) ? _2065 : (isnan(_2065) ? _2317 : min(_2065, _2317));
            frontier_phi_36_35_ladder_2 = isnan(_2315) ? _2063 : (isnan(_2063) ? _2315 : min(_2063, _2315));
        }
        else
        {
            frontier_phi_36_35_ladder = _2064;
            frontier_phi_36_35_ladder_1 = _2065;
            frontier_phi_36_35_ladder_2 = _2063;
        }
        _2129 = frontier_phi_36_35_ladder_2;
        _2131 = frontier_phi_36_35_ladder;
        _2133 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2129 = _2063;
        _2131 = _2064;
        _2133 = _2065;
    }
    uvec4 _2138 = floatBitsToUint(cbInstanceData._m0[_814 + 5u]);
    uint _2140 = _2138.x * 14u;
    uint _2141 = _2140 + 13u;
    float _2148 = _839 + (-1.0);
    float _2153 = (cbLight._m0[_2141].x * _2148) + 1.0;
    float _2154 = (cbLight._m0[_2141].y * _2148) + 1.0;
    float _2155 = (cbLight._m0[_2141].z * _2148) + 1.0;
    float _2156 = (cbLight._m0[_2141].w * _2148) + 1.0;
    uint _2157 = _2140 + 5u;
    float _2163 = isnan(1.0) ? _2154 : (isnan(_2154) ? 1.0 : min(_2154, 1.0));
    uint _2167 = _2140 + 4u;
    float _2176 = isnan(1.0) ? _2153 : (isnan(_2153) ? 1.0 : min(_2153, 1.0));
    uint _2180 = _2140 | 1u;
    float _2191 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_689, _690, _691));
    float _2194 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_689, _690, _691));
    float _4358 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0));
    float _4369 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
    float _2199 = (isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0))) * 0.3183098733425140380859375;
    float _2201 = (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * 0.3183098733425140380859375;
    float _2208 = ((cbLight._m0[_2157].x * _2163) * _2201) + (((cbLight._m0[_2167].x * _2129) * _2176) * _2199);
    float _2209 = ((_2163 * cbLight._m0[_2157].y) * _2201) + (((cbLight._m0[_2167].y * _2131) * _2176) * _2199);
    float _2210 = ((_2163 * cbLight._m0[_2157].z) * _2201) + (((cbLight._m0[_2167].z * _2133) * _2176) * _2199);
    uvec4 _2214 = floatBitsToUint(cbLight._m0[_2140 + 12u]);
    bool _2216 = _2214.x == 0u;
    float _2318;
    float _2320;
    float _2322;
    if (_2216)
    {
        _2318 = _2208;
        _2320 = _2209;
        _2322 = _2210;
    }
    else
    {
        uint _2326 = _2140 + 6u;
        float _2342 = (dot(vec3(cbLight._m0[_2140 + 2u].xyz), vec3(_689, _690, _691)) * 0.5) + 0.5;
        float _2343 = _2342 * _2342;
        float _4380 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
        float _2344 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
        float _2345 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2318 = (((cbLight._m0[_2326].x * 0.3183098733425140380859375) * _2344) * _2345) + _2208;
        _2320 = (((cbLight._m0[_2326].y * 0.3183098733425140380859375) * _2344) * _2345) + _2209;
        _2322 = (((cbLight._m0[_2326].z * 0.3183098733425140380859375) * _2344) * _2345) + _2210;
    }
    bool _2325 = _2214.y == 0u;
    float _2380;
    float _2382;
    float _2384;
    if (_2325)
    {
        _2380 = _2318;
        _2382 = _2320;
        _2384 = _2322;
    }
    else
    {
        uint _2542 = _2140 + 7u;
        float _2558 = (dot(vec3(cbLight._m0[_2140 + 3u].xyz), vec3(_689, _690, _691)) * 0.5) + 0.5;
        float _2559 = _2558 * _2558;
        float _4396 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2560 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
        float _2561 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2380 = (((cbLight._m0[_2542].x * 0.3183098733425140380859375) * _2560) * _2561) + _2318;
        _2382 = (((cbLight._m0[_2542].y * 0.3183098733425140380859375) * _2560) * _2561) + _2320;
        _2384 = (((cbLight._m0[_2542].z * 0.3183098733425140380859375) * _2560) * _2561) + _2322;
    }
    uint _2387 = _2140 + 8u;
    float _2400 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2140].w)) * _692) * 0.949999988079071044921875);
    float _2401 = _2400 * _2400;
    float _2402 = cbLight._m0[_2140].x + _768;
    float _2403 = cbLight._m0[_2140].y + _769;
    float _2404 = cbLight._m0[_2140].z + _770;
    float _2408 = inversesqrt(dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404)));
    float _2409 = _2408 * _2402;
    float _2410 = _2408 * _2403;
    float _2411 = _2408 * _2404;
    float _2412 = dot(vec3(_689, _690, _691), vec3(cbLight._m0[_2140].xyz));
    float _4412 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
    float _2415 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
    float _4423 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
    float _2416 = isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0));
    float _2417 = dot(vec3(_689, _690, _691), vec3(_2409, _2410, _2411));
    float _4434 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
    float _2420 = isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0));
    float _2421 = dot(vec3(cbLight._m0[_2140].xyz), vec3(_2409, _2410, _2411));
    float _4445 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
    float _2425 = _2401 * _2401;
    float _2429 = ((_2420 * _2420) * (_2425 + (-1.0))) + 1.0;
    float _2440 = (exp2(log2(1.0 - (isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2441 = 1.0 - _2401;
    float _2452 = (0.5 / (((_2416 * ((_2415 * _2441) + _2401)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2441) + _2401) * _2415))) * _2415;
    float _4456 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
    float _2454 = (isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0))) * (_2425 / ((_2429 * _2429) * 3.141590118408203125));
    uint _2468 = _2140 + 9u;
    float _2479 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2180].w)) * _692) * 0.949999988079071044921875);
    float _2480 = _2479 * _2479;
    float _2481 = cbLight._m0[_2180].x + _768;
    float _2482 = cbLight._m0[_2180].y + _769;
    float _2483 = cbLight._m0[_2180].z + _770;
    float _2487 = inversesqrt(dot(vec3(_2481, _2482, _2483), vec3(_2481, _2482, _2483)));
    float _2488 = _2487 * _2481;
    float _2489 = _2487 * _2482;
    float _2490 = _2487 * _2483;
    float _2491 = dot(vec3(_689, _690, _691), vec3(cbLight._m0[_2180].xyz));
    float _4467 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2494 = isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0));
    float _2495 = dot(vec3(_689, _690, _691), vec3(_2488, _2489, _2490));
    float _4478 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0));
    float _2499 = dot(vec3(cbLight._m0[_2180].xyz), vec3(_2488, _2489, _2490));
    float _4489 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
    float _2503 = _2480 * _2480;
    float _2507 = ((_2498 * _2498) * (_2503 + (-1.0))) + 1.0;
    float _2516 = (exp2(log2(1.0 - (isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2517 = 1.0 - _2480;
    float _2527 = (0.5 / (((_2416 * ((_2494 * _2517) + _2480)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2517) + _2480) * _2494))) * _2494;
    float _4500 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
    float _2529 = (isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0))) * (_2503 / ((_2507 * _2507) * 3.141590118408203125));
    float _2539 = (((_2516 * cbLight._m0[_2468].x) * _2529) * _2163) + ((((cbLight._m0[_2387].x * _2129) * _2440) * _2454) * _2176);
    float _2540 = (((_2516 * cbLight._m0[_2468].y) * _2529) * _2163) + ((((cbLight._m0[_2387].y * _2131) * _2440) * _2454) * _2176);
    float _2541 = (((_2516 * cbLight._m0[_2468].z) * _2529) * _2163) + ((((cbLight._m0[_2387].z * _2133) * _2440) * _2454) * _2176);
    float _2597;
    float _2599;
    float _2601;
    if (_2216)
    {
        _2597 = _2539;
        _2599 = _2540;
        _2601 = _2541;
    }
    else
    {
        uint _2603 = _2140 + 2u;
        uint _2607 = _2140 + 10u;
        float _2621 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2603].w)) * _692) * 0.949999988079071044921875);
        float _2622 = _2621 * _2621;
        float _2623 = cbLight._m0[_2603].x + _768;
        float _2624 = cbLight._m0[_2603].y + _769;
        float _2625 = cbLight._m0[_2603].z + _770;
        float _2629 = inversesqrt(dot(vec3(_2623, _2624, _2625), vec3(_2623, _2624, _2625)));
        float _2630 = _2629 * _2623;
        float _2631 = _2629 * _2624;
        float _2632 = _2629 * _2625;
        float _2633 = dot(vec3(_689, _690, _691), vec3(cbLight._m0[_2603].xyz));
        float _4511 = isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0));
        float _2636 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _2637 = dot(vec3(_689, _690, _691), vec3(_2630, _2631, _2632));
        float _4522 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
        float _2640 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _2641 = dot(vec3(cbLight._m0[_2603].xyz), vec3(_2630, _2631, _2632));
        float _4533 = isnan(0.0) ? _2641 : (isnan(_2641) ? 0.0 : max(_2641, 0.0));
        float _2645 = _2622 * _2622;
        float _2649 = ((_2640 * _2640) * (_2645 + (-1.0))) + 1.0;
        float _2658 = (exp2(log2(1.0 - (isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2659 = 1.0 - _2622;
        float _2669 = (0.5 / (((_2416 * ((_2636 * _2659) + _2622)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2659) + _2622) * _2636))) * _2636;
        float _4544 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
        float _2671 = (isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0))) * (_2645 / ((_2649 * _2649) * 3.141590118408203125));
        float _2672 = isnan(1.0) ? _2155 : (isnan(_2155) ? 1.0 : min(_2155, 1.0));
        _2597 = (((_2658 * cbLight._m0[_2607].x) * _2671) * _2672) + _2539;
        _2599 = (((_2658 * cbLight._m0[_2607].y) * _2671) * _2672) + _2540;
        _2601 = (((_2658 * cbLight._m0[_2607].z) * _2671) * _2672) + _2541;
    }
    float _2703;
    float _2705;
    float _2707;
    if (_2325)
    {
        _2703 = _2597;
        _2705 = _2599;
        _2707 = _2601;
    }
    else
    {
        uint _2714 = _2140 + 3u;
        uint _2718 = _2140 + 11u;
        float _2732 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2714].w)) * _692) * 0.949999988079071044921875);
        float _2733 = _2732 * _2732;
        float _2734 = cbLight._m0[_2714].x + _768;
        float _2735 = cbLight._m0[_2714].y + _769;
        float _2736 = cbLight._m0[_2714].z + _770;
        float _2740 = inversesqrt(dot(vec3(_2734, _2735, _2736), vec3(_2734, _2735, _2736)));
        float _2741 = _2740 * _2734;
        float _2742 = _2740 * _2735;
        float _2743 = _2740 * _2736;
        float _2744 = dot(vec3(_689, _690, _691), vec3(cbLight._m0[_2714].xyz));
        float _4560 = isnan(0.0) ? _2744 : (isnan(_2744) ? 0.0 : max(_2744, 0.0));
        float _2747 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2748 = dot(vec3(_689, _690, _691), vec3(_2741, _2742, _2743));
        float _4571 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
        float _2751 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _2752 = dot(vec3(cbLight._m0[_2714].xyz), vec3(_2741, _2742, _2743));
        float _4582 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2756 = _2733 * _2733;
        float _2760 = ((_2751 * _2751) * (_2756 + (-1.0))) + 1.0;
        float _2769 = (exp2(log2(1.0 - (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2770 = 1.0 - _2733;
        float _2780 = (0.5 / (((_2416 * ((_2747 * _2770) + _2733)) + 9.9999999392252902907785028219223e-09) + (((_2416 * _2770) + _2733) * _2747))) * _2747;
        float _4593 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2782 = (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0))) * (_2756 / ((_2760 * _2760) * 3.141590118408203125));
        float _2783 = isnan(1.0) ? _2156 : (isnan(_2156) ? 1.0 : min(_2156, 1.0));
        _2703 = (((_2769 * cbLight._m0[_2718].x) * _2782) * _2783) + _2597;
        _2705 = (((_2769 * cbLight._m0[_2718].y) * _2782) * _2783) + _2599;
        _2707 = (((_2769 * cbLight._m0[_2718].z) * _2782) * _2783) + _2601;
    }
    float _2848;
    float _2850;
    float _2852;
    float _2854;
    float _2856;
    float _2858;
    if (_2138.y == 0u)
    {
        uvec4 _2804 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2805 = _2804.x;
        uint _2816 = uint((float(_2804.y) * floor(float(uint(cbSceneParam._m0[85u].y * _777) / _2805))) + floor(float(uint(cbSceneParam._m0[85u].x * _776) / _2805)));
        float _2826 = (log2(_1916 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2827 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0));
        uint _2830 = uint(isnan(14.0) ? _2827 : (isnan(_2827) ? 14.0 : min(_2827, 14.0)));
        uvec4 _2835 = texelFetch(g_lightClusterGridBuffer, int(((_2830 << 2u) + (_2816 << 6u)) >> 2u));
        uint _2836 = _2835.x;
        uint _2837 = _2804.z;
        float _2915;
        float _2917;
        float _2919;
        float _2921;
        float _2923;
        float _2925;
        if (((((1u << ((_2837 >> 4u) & 15u)) + 4294967295u) & _2836) == 0u) || ((_2837 & 240u) == 0u))
        {
            _2915 = 0.0;
            _2917 = 0.0;
            _2919 = 0.0;
            _2921 = 0.0;
            _2923 = 0.0;
            _2925 = 0.0;
        }
        else
        {
            float _2916;
            float _2918;
            float _2920;
            float _2922;
            float _2924;
            float _2926;
            float _3059 = 0.0;
            float _3060 = 0.0;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            float _3064 = 0.0;
            uint _3065 = 0u;
            uint _3074;
            bool _3075;
            for (;;)
            {
                _3074 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3065 << 2u)) >> 2u)).x;
                _3075 = _3074 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3075)
                {
                    frontier_phi_68_pred = _3064;
                    frontier_phi_68_pred_1 = _3063;
                    frontier_phi_68_pred_2 = _3062;
                    frontier_phi_68_pred_3 = _3060;
                    frontier_phi_68_pred_4 = _3059;
                    frontier_phi_68_pred_5 = _3061;
                }
                else
                {
                    float _3183;
                    float _3184;
                    float _3185;
                    float _3186;
                    float _3187;
                    float _3188;
                    uint _3189;
                    _3183 = _3059;
                    _3184 = _3060;
                    _3185 = _3061;
                    _3186 = _3062;
                    _3187 = _3063;
                    _3188 = _3064;
                    _3189 = _3074;
                    float _3115;
                    float _3116;
                    float _3117;
                    float _3118;
                    float _3119;
                    float _3120;
                    for (;;)
                    {
                        uint _3193 = uint(findLSB(_3189)) + (_3065 << 5u);
                        uint _3190 = (_3189 + 4294967295u) & _3189;
                        uint _3195 = _3193 * 48u;
                        vec4 _3209 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3195)).x, texelFetch(g_PointLightRenderingBuffer, int(_3195 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3195 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3195 + 3u)).x));
                        uint _3215 = (_3193 * 48u) + 4u;
                        vec4 _3228 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3215)).x, texelFetch(g_PointLightRenderingBuffer, int(_3215 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3215 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3215 + 3u)).x));
                        uint _3234 = (_3193 * 48u) + 8u;
                        vec3 _3245 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3234)).x, texelFetch(g_PointLightRenderingBuffer, int(_3234 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3234 + 2u)).x));
                        float _3249 = _3209.x - _1914;
                        float _3250 = _3209.y - _1915;
                        float _3251 = _3209.z - _1916;
                        float _3252 = dot(vec3(_3249, _3250, _3251), vec3(_3249, _3250, _3251));
                        float _3255 = inversesqrt(_3252);
                        float _3256 = _3255 * _3249;
                        float _3257 = _3255 * _3250;
                        float _3258 = _3255 * _3251;
                        float _3259 = dot(vec3(_795, _798, _801), vec3(_3256, _3257, _3258));
                        float _3264 = 1.0 - (_3252 * _3209.w);
                        float _4619 = isnan(0.0) ? _3264 : (isnan(_3264) ? 0.0 : max(_3264, 0.0));
                        float _3265 = isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0));
                        float _3266 = sqrt(_3252) * _3228.w;
                        float _3269 = 1.39999997615814208984375 / (_3266 + 1.39999997615814208984375);
                        float _3270 = _3269 * _3269;
                        float _3273 = ((1.0 - _3270) * _3259) + _3270;
                        float _3276 = _3266 * _3266;
                        float _3280 = ((isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0))) * _3265) / ((_3276 * 0.699999988079071044921875) + 1.0);
                        float _3284 = (-0.0) - _1914;
                        float _3285 = (-0.0) - _1915;
                        float _3286 = (-0.0) - _1916;
                        float _3290 = inversesqrt(dot(vec3(_3284, _3285, _3286), vec3(_3284, _3285, _3286)));
                        float _3291 = _3290 * _3284;
                        float _3292 = _3290 * _3285;
                        float _3293 = _3290 * _3286;
                        float _3300 = exp2(log2(1.0 / ((_3276 * 3.5) + 5.0)) * 0.25);
                        float _3301 = 1.0 - _855;
                        float _3308 = sqrt(1.0 - ((1.0 - (_3301 * _3301)) * (1.0 - (_3300 * _3300))));
                        float _3309 = _3308 * _3308;
                        float _3310 = _3309 * _3309;
                        float _3311 = _3291 + _3256;
                        float _3312 = _3292 + _3257;
                        float _3313 = _3293 + _3258;
                        float _3317 = inversesqrt(dot(vec3(_3311, _3312, _3313), vec3(_3311, _3312, _3313)));
                        float _3321 = dot(vec3(_795, _798, _801), vec3(_3291, _3292, _3293));
                        float _4635 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0));
                        float _3324 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
                        float _3325 = dot(vec3(_795, _798, _801), vec3(_3317 * _3311, _3317 * _3312, _3317 * _3313));
                        float _4646 = isnan(0.0) ? _3325 : (isnan(_3325) ? 0.0 : max(_3325, 0.0));
                        float _3328 = isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0));
                        float _3332 = ((_3328 * _3328) * (_3310 + (-1.0))) + 1.0;
                        float _3333 = _3269 * _3309;
                        float _3334 = _3333 * _3333;
                        float _3337 = ((1.0 - _3334) * _3259) + _3334;
                        float _4657 = isnan(0.0) ? _3337 : (isnan(_3337) ? 0.0 : max(_3337, 0.0));
                        float _3338 = isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0));
                        float _3339 = 1.0 - _3309;
                        float _3349 = (0.5 / (((_3338 * ((_3324 * _3339) + _3309)) + 9.9999999392252902907785028219223e-09) + (((_3338 * _3339) + _3309) * _3324))) * _3338;
                        float _4668 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0));
                        float _3360 = (((_3310 * 3.1415927410125732421875) * (isnan(1.0) ? _4668 : (isnan(_4668) ? 1.0 : min(_4668, 1.0)))) / ((_3332 * _3332) * ((_3276 * 2.1991131305694580078125) + 3.141590118408203125))) * _3265;
                        _3118 = (_3280 * _3228.x) + _3186;
                        _3119 = (_3280 * _3228.y) + _3187;
                        _3120 = (_3280 * _3228.z) + _3188;
                        _3115 = (_3360 * _3245.x) + _3183;
                        _3116 = (_3360 * _3245.y) + _3184;
                        _3117 = (_3360 * _3245.z) + _3185;
                        if (_3190 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3183 = _3115;
                            _3184 = _3116;
                            _3185 = _3117;
                            _3186 = _3118;
                            _3187 = _3119;
                            _3188 = _3120;
                            _3189 = _3190;
                        }
                    }
                    frontier_phi_68_pred = _3120;
                    frontier_phi_68_pred_1 = _3119;
                    frontier_phi_68_pred_2 = _3118;
                    frontier_phi_68_pred_3 = _3116;
                    frontier_phi_68_pred_4 = _3115;
                    frontier_phi_68_pred_5 = _3117;
                }
                _2926 = frontier_phi_68_pred;
                _2924 = frontier_phi_68_pred_1;
                _2922 = frontier_phi_68_pred_2;
                _2918 = frontier_phi_68_pred_3;
                _2916 = frontier_phi_68_pred_4;
                _2920 = frontier_phi_68_pred_5;
                uint _3066 = _3065 + 1u;
                if (_3066 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3059 = _2916;
                    _3060 = _2918;
                    _3061 = _2920;
                    _3062 = _2922;
                    _3063 = _2924;
                    _3064 = _2926;
                    _3065 = _3066;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2915 = _2916;
            _2917 = _2918;
            _2919 = _2920;
            _2921 = _2922;
            _2923 = _2924;
            _2925 = _2926;
        }
        uvec4 _2929 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2930 = _2929.z;
        uint _2932 = (_2930 >> 8u) & 15u;
        float _3027;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        float _3037;
        if (((4294967295u << _2932) & _2836) == 0u)
        {
            _3027 = _2915;
            _3029 = _2917;
            _3031 = _2919;
            _3033 = _2921;
            _3035 = _2923;
            _3037 = _2925;
        }
        else
        {
            float _3052 = inversesqrt(dot(vec3(_1914, _1915, _1916), vec3(_1914, _1915, _1916)));
            float _3053 = _3052 * _1914;
            float _3054 = _3052 * _1915;
            float _3055 = _3052 * _1916;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2932 < ((_2930 >> 12u) & 15u))
            {
                float _3028;
                float _3030;
                float _3032;
                float _3034;
                float _3036;
                float _3038;
                float _3166 = _2915;
                float _3167 = _2917;
                float _3168 = _2919;
                float _3169 = _2921;
                float _3170 = _2923;
                float _3171 = _2925;
                uint _3172 = _2932;
                uint _3181;
                bool _3182;
                for (;;)
                {
                    _3181 = texelFetch(g_lightClassification, int((((_2830 << 5u) + (_2816 << 9u)) + (_3172 << 2u)) >> 2u)).x;
                    _3182 = _3181 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3182)
                    {
                        frontier_phi_74_pred = _3168;
                        frontier_phi_74_pred_1 = _3167;
                        frontier_phi_74_pred_2 = _3166;
                        frontier_phi_74_pred_3 = _3171;
                        frontier_phi_74_pred_4 = _3170;
                        frontier_phi_74_pred_5 = _3169;
                    }
                    else
                    {
                        float _3365;
                        float _3366;
                        float _3367;
                        float _3368;
                        float _3369;
                        float _3370;
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3664;
                        float _3665;
                        float _3378 = _3166;
                        float _3379 = _3167;
                        float _3380 = _3168;
                        float _3381 = _3169;
                        float _3382 = _3170;
                        float _3383 = _3171;
                        uint _3384 = _3181;
                        uint _3385;
                        vec4 _3410;
                        float _3411;
                        vec4 _3426;
                        vec3 _3438;
                        vec4 _3453;
                        vec4 _3469;
                        float _3516;
                        bool _3517;
                        for (;;)
                        {
                            uint _3395 = ((_3172 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3384));
                            _3385 = (_3384 + 4294967295u) & _3384;
                            uint _3397 = _3395 * 40u;
                            _3410 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3397)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 3u)).x));
                            _3411 = _3410.w;
                            uint _3413 = (_3395 * 40u) + 4u;
                            _3426 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3413)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 3u)).x));
                            uint _3428 = (_3395 * 40u) + 8u;
                            _3438 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3428)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3428 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3428 + 2u)).x));
                            uint _3440 = (_3395 * 40u) + 16u;
                            _3453 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3440)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3440 + 3u)).x));
                            uint _3456 = (_3395 * 40u) + 20u;
                            _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            uint _3472 = (_3395 * 40u) + 24u;
                            vec4 _3485 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3472)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 3u)).x));
                            uint _3491 = (_3395 * 40u) + 28u;
                            vec4 _3504 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3491)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 3u)).x));
                            _3516 = fma(_1916, _3504.z, fma(_1915, _3504.y, _3504.x * _1914)) + _3504.w;
                            _3517 = !((fma(_1916, _3485.z, fma(_1915, _3485.y, _3485.x * _1914)) + _3485.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3517)
                            {
                                float _3544 = _3410.x - _1914;
                                float _3545 = _3410.y - _1915;
                                float _3546 = _3410.z - _1916;
                                float _3547 = dot(vec3(_3544, _3545, _3546), vec3(_3544, _3545, _3546));
                                float _3550 = inversesqrt(_3547);
                                float _3551 = _3550 * _3544;
                                float _3552 = _3550 * _3545;
                                float _3553 = _3550 * _3546;
                                float _3557 = 1.0 - (_3547 / (_3411 * _3411));
                                float _4679 = isnan(0.0) ? _3557 : (isnan(_3557) ? 0.0 : max(_3557, 0.0));
                                float _3558 = isnan(1.0) ? _4679 : (isnan(_4679) ? 1.0 : min(_4679, 1.0));
                                float _3562 = sqrt(_3547) * _3426.w;
                                float _3564 = 1.39999997615814208984375 / (_3562 + 1.39999997615814208984375);
                                float _3565 = _3564 * _3564;
                                float _3568 = ((1.0 - _3565) * dot(vec3(_3551, _3552, _3553), vec3(_795, _798, _801))) + _3565;
                                float _3571 = _3562 * _3562;
                                float _3575 = (fma(_1916, _3453.z, fma(_1915, _3453.y, _3453.x * _1914)) + _3453.w) / _3516;
                                float _3576 = (fma(_1916, _3469.z, fma(_1915, _3469.y, _3469.x * _1914)) + _3469.w) / _3516;
                                float _3580 = 1.0 - dot(vec2(_3575, _3576), vec2(_3575, _3576));
                                float _4695 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
                                float _3581 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
                                float _3582 = _3581 * (((isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0))) * _3558) / ((_3571 * 0.699999988079071044921875) + 1.0));
                                float _3594 = exp2(log2(1.0 / ((_3571 * 3.5) + 5.0)) * 0.25);
                                float _3595 = 1.0 - _855;
                                float _3602 = sqrt(1.0 - ((1.0 - (_3595 * _3595)) * (1.0 - (_3594 * _3594))));
                                float _3603 = _3602 * _3602;
                                float _3604 = _3603 * _3603;
                                float _3605 = _3551 - _3053;
                                float _3606 = _3552 - _3054;
                                float _3607 = _3553 - _3055;
                                float _3611 = inversesqrt(dot(vec3(_3605, _3606, _3607), vec3(_3605, _3606, _3607)));
                                float _3615 = dot(vec3(_795, _798, _801), vec3((-0.0) - _3053, (-0.0) - _3054, (-0.0) - _3055));
                                float _4706 = isnan(0.0) ? _3615 : (isnan(_3615) ? 0.0 : max(_3615, 0.0));
                                float _3618 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
                                float _3619 = dot(vec3(_795, _798, _801), vec3(_3611 * _3605, _3611 * _3606, _3611 * _3607));
                                float _4717 = isnan(0.0) ? _3619 : (isnan(_3619) ? 0.0 : max(_3619, 0.0));
                                float _3622 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
                                float _3626 = ((_3622 * _3622) * (_3604 + (-1.0))) + 1.0;
                                float _3627 = _3564 * _3603;
                                float _3628 = _3627 * _3627;
                                float _3634 = ((1.0 - _3628) * dot(vec3(_795, _798, _801), vec3(_3551, _3552, _3553))) + _3628;
                                float _4728 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                                float _3635 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
                                float _3636 = 1.0 - _3603;
                                float _3646 = (0.5 / (((_3635 * ((_3618 * _3636) + _3603)) + 9.9999999392252902907785028219223e-09) + (((_3635 * _3636) + _3603) * _3618))) * _3635;
                                float _4739 = isnan(0.0) ? _3646 : (isnan(_3646) ? 0.0 : max(_3646, 0.0));
                                float _3656 = (_3581 * _3558) * (((_3604 * 3.1415927410125732421875) * (isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0)))) / ((_3626 * _3626) * ((_3571 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3656 * _3438.z;
                                frontier_phi_80_pred_1 = _3656 * _3438.y;
                                frontier_phi_80_pred_2 = _3656 * _3438.x;
                                frontier_phi_80_pred_3 = _3582 * _3426.z;
                                frontier_phi_80_pred_4 = _3582 * _3426.y;
                                frontier_phi_80_pred_5 = _3582 * _3426.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3662 = frontier_phi_80_pred;
                            _3661 = frontier_phi_80_pred_1;
                            _3660 = frontier_phi_80_pred_2;
                            _3665 = frontier_phi_80_pred_3;
                            _3664 = frontier_phi_80_pred_4;
                            _3663 = frontier_phi_80_pred_5;
                            _3368 = _3663 + _3381;
                            _3369 = _3664 + _3382;
                            _3370 = _3665 + _3383;
                            _3365 = _3660 + _3378;
                            _3366 = _3661 + _3379;
                            _3367 = _3662 + _3380;
                            if (_3385 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3378 = _3365;
                                _3379 = _3366;
                                _3380 = _3367;
                                _3381 = _3368;
                                _3382 = _3369;
                                _3383 = _3370;
                                _3384 = _3385;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3367;
                        frontier_phi_74_pred_1 = _3366;
                        frontier_phi_74_pred_2 = _3365;
                        frontier_phi_74_pred_3 = _3370;
                        frontier_phi_74_pred_4 = _3369;
                        frontier_phi_74_pred_5 = _3368;
                    }
                    _3032 = frontier_phi_74_pred;
                    _3030 = frontier_phi_74_pred_1;
                    _3028 = frontier_phi_74_pred_2;
                    _3038 = frontier_phi_74_pred_3;
                    _3036 = frontier_phi_74_pred_4;
                    _3034 = frontier_phi_74_pred_5;
                    uint _3173 = _3172 + 1u;
                    if (_3173 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3166 = _3028;
                        _3167 = _3030;
                        _3168 = _3032;
                        _3169 = _3034;
                        _3170 = _3036;
                        _3171 = _3038;
                        _3172 = _3173;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3036;
                frontier_phi_62_63_ladder_1 = _3034;
                frontier_phi_62_63_ladder_2 = _3032;
                frontier_phi_62_63_ladder_3 = _3038;
                frontier_phi_62_63_ladder_4 = _3030;
                frontier_phi_62_63_ladder_5 = _3028;
            }
            else
            {
                frontier_phi_62_63_ladder = _2923;
                frontier_phi_62_63_ladder_1 = _2921;
                frontier_phi_62_63_ladder_2 = _2919;
                frontier_phi_62_63_ladder_3 = _2925;
                frontier_phi_62_63_ladder_4 = _2917;
                frontier_phi_62_63_ladder_5 = _2915;
            }
            _3027 = frontier_phi_62_63_ladder_5;
            _3029 = frontier_phi_62_63_ladder_4;
            _3031 = frontier_phi_62_63_ladder_2;
            _3033 = frontier_phi_62_63_ladder_1;
            _3035 = frontier_phi_62_63_ladder;
            _3037 = frontier_phi_62_63_ladder_3;
        }
        float _3042 = isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0));
        _2848 = (_3042 * _3033) + _2380;
        _2850 = (_3042 * _3035) + _2382;
        _2852 = (_3042 * _3037) + _2384;
        _2854 = ((_3027 * 0.039999999105930328369140625) * _3042) + _2703;
        _2856 = ((_3029 * 0.039999999105930328369140625) * _3042) + _2705;
        _2858 = ((_3031 * 0.039999999105930328369140625) * _3042) + _2707;
    }
    else
    {
        _2848 = _2380;
        _2850 = _2382;
        _2852 = _2384;
        _2854 = _2703;
        _2856 = _2705;
        _2858 = _2707;
    }
    float _4755 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _4766 = isnan(0.0) ? _826 : (isnan(_826) ? 0.0 : max(_826, 0.0));
    float _4777 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    uint _2878 = _814 + 6u;
    float _2886 = _776 / cbSceneParam._m0[86u].x;
    float _2887 = _777 / cbSceneParam._m0[86u].y;
    vec4 _2901 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2886, _2887, (log2((isnan(cbSceneParam._m0[77u].w) ? _711 : (isnan(_711) ? cbSceneParam._m0[77u].w : min(_711, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2903 = _2901.x;
    float _2904 = _2901.y;
    float _2905 = _2901.z;
    float _2906 = _2901.w;
    float _2977;
    float _2979;
    float _2981;
    float _2983;
    if (_711 > cbSceneParam._m0[78u].w)
    {
        float _2940 = isnan(_711) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _711 : min(cbSceneParam._m0[80u].w, _711));
        float _2941 = _2940 / _711;
        float _2952 = _2941 * _761;
        float _2953 = _762 * _2941;
        float _2954 = (-0.0) - _2953;
        float _2955 = _2941 * _763;
        float _2957 = (cbSceneParam._m0[77u].w * _2954) / _2940;
        float _2958 = _2957 + cbSceneParam._m0[79u].w;
        float _2959 = cbSceneParam._m0[79u].w - _2953;
        float _2965 = sqrt(((_2952 * _2952) + (_2953 * _2953)) + (_2955 * _2955));
        float _2968 = (1.0 - (cbSceneParam._m0[77u].w / _2940)) * _2965;
        float _2973 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2975 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3128;
        if (abs((_2954 - _2957) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3128 = ((((_2958 > 0.0) ? exp2(_2973 * _2958) : (2.0 - exp2(_2975 * _2958))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2968;
        }
        else
        {
            float _3088 = 1.0 / cbSceneParam._m0[80u].x;
            float _3089 = isnan(_2959) ? _2958 : (isnan(_2958) ? _2959 : max(_2958, _2959));
            float _3090 = isnan(_2959) ? _2958 : (isnan(_2958) ? _2959 : min(_2958, _2959));
            float _3099 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : min(_3089, 0.0));
            float _3100 = isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : min(_3090, 0.0));
            _3128 = ((abs(_2965 / _2954) * cbSceneParam._m0[80u].y) * ((((_3099 - _3100) * 2.0) - ((exp2(_2973 * (isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0)))) - exp2(_2973 * (isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : max(_3090, 0.0))))) * _3088)) - ((exp2(_2975 * _3099) - exp2(_2975 * _3100)) * _3088))) + (_2968 * cbSceneParam._m0[80u].z);
        }
        vec4 _3130 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2886, _2887, 1.0), 0.0);
        float _3139 = exp2((_3128 * (-1.44269502162933349609375)) * (1.0 - _3130.w));
        float _3140 = log2(_3139);
        float _3156 = log2(_2906);
        _2977 = (exp2(_3156 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].x)) * _3130.x) / cbSceneParam._m0[78u].x)) + _2903;
        _2979 = (exp2(_3156 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].y)) * _3130.y) / cbSceneParam._m0[78u].y)) + _2904;
        _2981 = (exp2(_3156 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].z)) * _3130.z) / cbSceneParam._m0[78u].z)) + _2905;
        _2983 = _3139 * _2906;
    }
    else
    {
        _2977 = _2903;
        _2979 = _2904;
        _2981 = _2905;
        _2983 = _2906;
    }
    float _2995 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2996 = _2995 == 3.0;
    float _2997 = log2(_2983);
    float _3004 = exp2(_2997 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * (_2848 + ((isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0))) * _839))) + ((_2854 + ((isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3005 = exp2(_2997 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0))) * (_2850 + ((isnan(0.0) ? _1570 : (isnan(_1570) ? 0.0 : max(_1570, 0.0))) * _839))) + ((_2856 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3006 = exp2(_2997 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_2852 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _839))) + ((_2858 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1646)) * cbPerFrame._m0[3u].x));
    float _3015 = (_2995 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3015 * (_2996 ? _3004 : (_3004 + (cbSceneParam._m0[72u].w * _2977)));
    SV_Target.y = _3015 * (_2996 ? _3005 : (_3005 + (cbSceneParam._m0[72u].w * _2979)));
    SV_Target.z = _3015 * (_2996 ? _3006 : (_3006 + (cbSceneParam._m0[72u].w * _2981)));
    SV_Target.w = cbInstanceData._m0[_2878].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2878].w;
}


