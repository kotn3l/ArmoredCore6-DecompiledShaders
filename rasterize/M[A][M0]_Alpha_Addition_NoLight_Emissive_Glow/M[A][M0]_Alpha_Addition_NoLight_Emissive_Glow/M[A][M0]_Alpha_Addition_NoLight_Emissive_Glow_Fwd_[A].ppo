#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Alpha_Addition_NoLight_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_Alpha_Addition_NoLight_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _602;
float _603;
float _604;
float _605;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _125 = texture(sampler2D(M_A_M0_Alpha_Addition_NoLight_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _132 = _125.x * cbMtdParam._m0[9u].x;
    float _133 = _125.y * cbMtdParam._m0[9u].y;
    float _134 = _125.z * cbMtdParam._m0[9u].z;
    float _135 = _125.w * cbMtdParam._m0[9u].w;
    float _136 = _135 * TEXCOORD_1.z;
    vec4 _158 = texture(sampler2D(M_A_M0_Alpha_Addition_NoLight_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _614 = isnan(0.0) ? _136 : (isnan(_136) ? 0.0 : max(_136, 0.0));
    float _184 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _225 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _235 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _225);
    float _236 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _225);
    float _237 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _225);
    vec4 _242 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _244 = _242.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _340 = sqrt(((_235 * _235) + (_236 * _236)) + (_237 * _237));
        float _347 = (cbMatDynParam._m0[5u].x * _340) + cbMatDynParam._m0[5u].y;
        float _640 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
        float _348 = isnan(1.0) ? _640 : (isnan(_640) ? 1.0 : min(_640, 1.0));
        float _352 = (cbMatDynParam._m0[5u].z * _340) + cbMatDynParam._m0[5u].w;
        float _651 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _651 : (isnan(_651) ? 1.0 : min(_651, 1.0))) - _348)) + _348) < ((_244 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _270 = uint(roundEven(NORMAL.w)) * 13u;
    uint _272 = _270 + 9u;
    uint _273 = _272 + uint(cbMatDynParam._m0[0u].w);
    float _286 = cbInstanceData._m0[_273].x * (((cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _158.x) + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))));
    float _288 = cbInstanceData._m0[_273].y * (((cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _158.y) + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _133 : (isnan(_133) ? 0.0 : max(_133, 0.0)))));
    float _290 = cbInstanceData._m0[_273].z * (((cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _158.z) + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _134 : (isnan(_134) ? 0.0 : max(_134, 0.0)))));
    float _291 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _292 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _293 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _298 = cbInstanceData._m0[_270 + 6u].w * (isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0)));
    float _304 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _305 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _320 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_304, _305, (log2((isnan(cbSceneParam._m0[77u].w) ? _184 : (isnan(_184) ? cbSceneParam._m0[77u].w : min(_184, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _323 = _320.x;
    float _324 = _320.y;
    float _325 = _320.z;
    float _326 = _320.w;
    float _408;
    float _410;
    float _412;
    float _414;
    if (_184 > cbSceneParam._m0[78u].w)
    {
        float _369 = isnan(_184) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _184 : min(cbSceneParam._m0[80u].w, _184));
        float _370 = _369 / _184;
        float _381 = _370 * _235;
        float _382 = _236 * _370;
        float _383 = (-0.0) - _382;
        float _385 = _370 * _237;
        float _387 = (cbSceneParam._m0[77u].w * _383) / _369;
        float _388 = _387 + cbSceneParam._m0[79u].w;
        float _389 = cbSceneParam._m0[79u].w - _382;
        float _395 = sqrt(((_381 * _381) + (_382 * _382)) + (_385 * _385));
        float _398 = (1.0 - (cbSceneParam._m0[77u].w / _369)) * _395;
        float _404 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _406 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _530;
        if (abs((_383 - _387) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _530 = ((((_388 > 0.0) ? exp2(_404 * _388) : (2.0 - exp2(_406 * _388))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _398;
        }
        else
        {
            float _485 = 1.0 / cbSceneParam._m0[80u].x;
            float _486 = isnan(_389) ? _388 : (isnan(_388) ? _389 : max(_388, _389));
            float _487 = isnan(_389) ? _388 : (isnan(_388) ? _389 : min(_388, _389));
            float _496 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : min(_486, 0.0));
            float _497 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : min(_487, 0.0));
            _530 = ((abs(_395 / _383) * cbSceneParam._m0[80u].y) * ((((_496 - _497) * 2.0) - ((exp2(_404 * (isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0)))) - exp2(_404 * (isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0))))) * _485)) - ((exp2(_406 * _496) - exp2(_406 * _497)) * _485))) + (_398 * cbSceneParam._m0[80u].z);
        }
        vec4 _532 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_304, _305, 1.0), 0.0);
        float _541 = exp2((_530 * (-1.44269502162933349609375)) * (1.0 - _532.w));
        float _542 = log2(_541);
        float _558 = log2(_326);
        _408 = (exp2(_558 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_542 * cbSceneParam._m0[78u].x)) * _532.x) / cbSceneParam._m0[78u].x)) + _323;
        _410 = (exp2(_558 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_542 * cbSceneParam._m0[78u].y)) * _532.y) / cbSceneParam._m0[78u].y)) + _324;
        _412 = (exp2(_558 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_542 * cbSceneParam._m0[78u].z)) * _532.z) / cbSceneParam._m0[78u].z)) + _325;
        _414 = _541 * _326;
    }
    else
    {
        _408 = _323;
        _410 = _324;
        _412 = _325;
        _414 = _326;
    }
    bool _568;
    vec4 _424;
    vec4 _448;
    float _450;
    float _455;
    float _456;
    float _457;
    float _458;
    bool _469;
    for (;;)
    {
        _424 = cbMatDynParam._m0[0u];
        float _426 = roundEven(_424.y);
        bool _427 = _426 == 3.0;
        float _429 = log2(_414);
        float _436 = exp2(_429 * cbSceneParam._m0[78u].x) * _291;
        float _437 = exp2(_429 * cbSceneParam._m0[78u].y) * _292;
        float _438 = exp2(_429 * cbSceneParam._m0[78u].z) * _293;
        float _445 = _244 + (-0.5);
        _448 = cbMtdParam._m0[1u];
        _450 = _448.y * _445;
        float _454 = (_426 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _455 = _454 * (_427 ? _436 : (_436 + (cbSceneParam._m0[72u].w * _408)));
        _456 = _454 * (_427 ? _437 : (_437 + (cbSceneParam._m0[72u].w * _410)));
        _457 = _454 * (_427 ? _438 : (_438 + (cbSceneParam._m0[72u].w * _412)));
        _458 = _445 * 0.999000012874603271484375;
        _469 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_469)
        {
            if ((cbInstanceData._m0[_270 + 7u].x + _458) < 0.5)
            {
                _568 = true;
                break;
            }
        }
        uint _522 = _272 + uint(_424.w);
        if ((cbInstanceData._m0[_522].w < 1.0) && ((cbInstanceData._m0[_522].w + _458) < 0.5))
        {
            _568 = true;
            break;
        }
        if ((_450 + _135) < _448.x)
        {
            _568 = true;
            break;
        }
        _568 = false;
        break;
    }
    float _573;
    if (_568)
    {
        discard_state = true;
        _573 = 0.0;
    }
    else
    {
        _573 = _298;
    }
    SV_Target.x = _455;
    SV_Target.y = _456;
    SV_Target.z = _457;
    SV_Target.w = _573;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _298;
    discard_exit();
}


