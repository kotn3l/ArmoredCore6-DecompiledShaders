#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_2;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 3, component = 2) out float TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_11 = 0.0;
    float _147 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _149 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _150 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _168 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _170 = texelFetch(g_InstanceIndexBuffer, int(_168));
    uint _171 = _170.x;
    uint _181 = (floatBitsToUint(cbInstanceData._m0[(_171 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _188 = _181 + 1u;
    uint _195 = _181 + 2u;
    precise float _202 = POSITION.x * cbObjMatrix._m0[_181].x;
    precise float _203 = POSITION.y * cbObjMatrix._m0[_181].y;
    precise float _204 = _203 + _202;
    precise float _205 = POSITION.z * cbObjMatrix._m0[_181].z;
    precise float _206 = _205 + _204;
    precise float _207 = 1.0 * cbObjMatrix._m0[_181].w;
    precise float _209 = _207 + _206;
    precise float _210 = POSITION.x * cbObjMatrix._m0[_188].x;
    precise float _211 = POSITION.y * cbObjMatrix._m0[_188].y;
    precise float _212 = _211 + _210;
    precise float _213 = POSITION.z * cbObjMatrix._m0[_188].z;
    precise float _214 = _213 + _212;
    precise float _215 = 1.0 * cbObjMatrix._m0[_188].w;
    precise float _216 = _215 + _214;
    precise float _217 = POSITION.x * cbObjMatrix._m0[_195].x;
    precise float _218 = POSITION.y * cbObjMatrix._m0[_195].y;
    precise float _219 = _218 + _217;
    precise float _220 = POSITION.z * cbObjMatrix._m0[_195].z;
    precise float _221 = _220 + _219;
    precise float _222 = 1.0 * cbObjMatrix._m0[_195].w;
    precise float _223 = _222 + _221;
    float _229 = cbSceneParam._m0[3u].x - _209;
    float _230 = cbSceneParam._m0[3u].y - _216;
    float _231 = cbSceneParam._m0[3u].z - _223;
    precise float _258 = _209 - cbSceneParam._m0[3u].x;
    precise float _259 = _216 - cbSceneParam._m0[3u].y;
    precise float _260 = _223 - cbSceneParam._m0[3u].z;
    precise float _288 = _258 * cbSceneParam._m0[24u].x;
    precise float _289 = _259 * cbSceneParam._m0[24u].y;
    precise float _290 = _289 + _288;
    precise float _291 = _260 * cbSceneParam._m0[24u].z;
    precise float _292 = _291 + _290;
    precise float _293 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _294 = _293 + _292;
    precise float _295 = _258 * cbSceneParam._m0[25u].x;
    precise float _296 = _259 * cbSceneParam._m0[25u].y;
    precise float _297 = _296 + _295;
    precise float _298 = _260 * cbSceneParam._m0[25u].z;
    precise float _299 = _298 + _297;
    precise float _300 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _301 = _300 + _299;
    precise float _302 = _258 * cbSceneParam._m0[26u].x;
    precise float _303 = _259 * cbSceneParam._m0[26u].y;
    precise float _304 = _303 + _302;
    precise float _305 = _260 * cbSceneParam._m0[26u].z;
    precise float _306 = _305 + _304;
    precise float _307 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _308 = _307 + _306;
    precise float _309 = _258 * cbSceneParam._m0[27u].x;
    precise float _310 = _259 * cbSceneParam._m0[27u].y;
    precise float _311 = _310 + _309;
    precise float _312 = _260 * cbSceneParam._m0[27u].z;
    precise float _313 = _312 + _311;
    precise float _314 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _315 = _314 + _313;
    gl_Position.x = _294;
    gl_Position.y = _301;
    gl_Position.z = _308;
    gl_Position.w = _315;
    NORMAL_1.x = fma(_150, cbObjMatrix._m0[_181].z, fma(_149, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _147));
    NORMAL_1.y = fma(_150, cbObjMatrix._m0[_188].z, fma(_149, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_188].x * _147));
    NORMAL_1.z = fma(_150, cbObjMatrix._m0[_195].z, fma(_149, cbObjMatrix._m0[_195].y, cbObjMatrix._m0[_195].x * _147));
    NORMAL_1.w = float(_171);
    TANGENT_1.x = fma(_162, cbObjMatrix._m0[_181].z, fma(_161, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _160));
    TANGENT_1.y = fma(_162, cbObjMatrix._m0[_188].z, fma(_161, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_188].x * _160));
    TANGENT_1.z = fma(_162, cbObjMatrix._m0[_195].z, fma(_161, cbObjMatrix._m0[_195].y, cbObjMatrix._m0[_195].x * _160));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.x = TEXCOORD_1.x;
    TEXCOORD_3.y = TEXCOORD_1.y;
    TEXCOORD_3.z = TEXCOORD_1.z;
    TEXCOORD_3.w = COLOR_1.x;
    TEXCOORD_11 = sqrt(((_229 * _229) + (_230 * _230)) + (_231 * _231));
}


