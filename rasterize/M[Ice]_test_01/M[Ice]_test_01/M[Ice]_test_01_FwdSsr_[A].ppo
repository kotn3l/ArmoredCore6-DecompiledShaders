#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Ice_test_01_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Ice_test_01_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _118 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _119 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _120 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _126 = inversesqrt(dot(vec3(_118, _119, _120), vec3(_118, _119, _120)));
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _140 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _167 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _175 = (_167.x * 2.0) + (-1.0);
    float _177 = (_167.y * 2.0) + (-1.0);
    float _178 = dot(vec2(_175, _177), vec2(_175, _177));
    float _933 = isnan(0.0) ? _178 : (isnan(_178) ? 0.0 : max(_178, 0.0));
    float _184 = sqrt(1.0 - (isnan(1.0) ? _933 : (isnan(_933) ? 1.0 : min(_933, 1.0))));
    float _185 = abs(_134);
    float _186 = abs(_135);
    float _187 = abs(_136);
    float _188 = _185 * _185;
    float _189 = _186 * _186;
    float _190 = _187 * _187;
    float _215 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _219 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _223 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _226 = _219 * 0.0500000007450580596923828125;
    float _236 = (cbTextureTilingScale._m0[1u].x * (_215 * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].z;
    vec4 _239 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_236, (cbTextureTilingScale._m0[1u].y * _226) + cbTextureTilingScale._m0[1u].w));
    float _246 = (cbTextureTilingScale._m0[1u].y * (_223 * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].w;
    vec4 _247 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_236, _246));
    vec4 _257 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _226) + cbTextureTilingScale._m0[1u].z, _246));
    float _271 = ((((((_247.x * _189) + (_239.x * _190)) + (_257.x * _188)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _175;
    float _272 = ((((((_247.y * _189) + (_239.y * _190)) + (_257.y * _188)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _177;
    float _275 = fma(_184, _134, fma(_272, _140 * TANGENT.x, (_126 * _118) * _271));
    float _278 = fma(_184, _135, fma(_272, _140 * TANGENT.y, (_126 * _119) * _271));
    float _281 = fma(_184, _136, fma(_272, _140 * TANGENT.z, (_126 * _120) * _271));
    float _285 = inversesqrt(dot(vec3(_275, _278, _281), vec3(_275, _278, _281)));
    float _296 = cbMtdParam._m0[13u].x + dot(vec4(_285 * _275, _285 * _278, _285 * _281, 0.0), vec4(cbMtdParam._m0[14u].xyz, 0.0));
    float _944 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _298 = (isnan(1.0) ? _944 : (isnan(_944) ? 1.0 : min(_944, 1.0))) * TEXCOORD_3.x;
    float _955 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _304 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _955 : (isnan(_955) ? 1.0 : min(_955, 1.0)))) + cbMtdParam._m0[12u].x;
    float _966 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _305 = isnan(1.0) ? _966 : (isnan(_966) ? 1.0 : min(_966, 1.0));
    float _319 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _330 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _340 = cbSceneParam._m0[71u].x - (_215 / _330);
    float _341 = cbSceneParam._m0[71u].y - (_219 / _330);
    float _342 = cbSceneParam._m0[71u].z - (_223 / _330);
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _373 = sqrt(((_340 * _340) + (_341 * _341)) + (_342 * _342));
        float _380 = (cbMatDynParam._m0[5u].x * _373) + cbMatDynParam._m0[5u].y;
        float _977 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
        float _381 = isnan(1.0) ? _977 : (isnan(_977) ? 1.0 : min(_977, 1.0));
        float _385 = (cbMatDynParam._m0[5u].z * _373) + cbMatDynParam._m0[5u].w;
        float _988 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _988 : (isnan(_988) ? 1.0 : min(_988, 1.0))) - _381)) + _381) < ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _352 = POSITION_1.x / POSITION_1.w;
    float _353 = POSITION_1.y / POSITION_1.w;
    float _357 = (_352 * 0.5) + 0.5;
    float _358 = 0.5 - (_353 * 0.5);
    float _398;
    float _400;
    float _402;
    float _404;
    if (_305 < cbPerScene._m0[22u].z)
    {
        _398 = 0.0;
        _400 = 0.0;
        _402 = 0.0;
        _404 = 0.0;
    }
    else
    {
        float _410 = 1.0 / _319;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        float frontier_phi_3_4_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _410))
        {
            float _436 = fma(_136, cbPerScene._m0[8u].z, fma(_135, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _134));
            float _439 = fma(_136, cbPerScene._m0[9u].z, fma(_135, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _134));
            float _442 = fma(_136, cbPerScene._m0[10u].z, fma(_135, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _134));
            float _449 = (_352 * _319) * cbPerScene._m0[28u].x;
            float _451 = (_353 * _319) * cbPerScene._m0[28u].y;
            float _455 = inversesqrt(dot(vec3(_449, _451, _319), vec3(_449, _451, _319)));
            float _456 = _449 * _455;
            float _457 = _451 * _455;
            float _458 = _455 * _319;
            float _462 = dot(vec3(_456, _457, _458), vec3(_436, _439, _442)) * 2.0;
            float _466 = _456 - (_462 * _436);
            float _467 = _457 - (_462 * _439);
            float _468 = _458 - (_462 * _442);
            float _472 = inversesqrt(dot(vec3(_466, _467, _468), vec3(_466, _467, _468)));
            float _475 = _468 * _472;
            float frontier_phi_3_4_ladder_6_ladder;
            float frontier_phi_3_4_ladder_6_ladder_1;
            float frontier_phi_3_4_ladder_6_ladder_2;
            float frontier_phi_3_4_ladder_6_ladder_3;
            if (_475 < cbPerScene._m0[16u].x)
            {
                frontier_phi_3_4_ladder_6_ladder = 0.0;
                frontier_phi_3_4_ladder_6_ladder_1 = 0.0;
                frontier_phi_3_4_ladder_6_ladder_2 = 0.0;
                frontier_phi_3_4_ladder_6_ladder_3 = 0.0;
            }
            else
            {
                float _488 = abs(dot(vec3((-0.0) - _456, (-0.0) - _457, (-0.0) - _458), vec3(_436, _439, _442)));
                float _999 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
                float _499 = (((_305 * _305) * 0.959999978542327880859375) * exp2(log2(1.0 - (isnan(1.0) ? _999 : (isnan(_999) ? 1.0 : min(_999, 1.0)))) * 5.0)) + 0.039999999105930328369140625;
                float _508 = (cbPerScene._m0[29u].x * (1.0 - _305)) + cbPerScene._m0[29u].y;
                float _1010 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
                float _517 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _1010 : (isnan(_1010) ? 1.0 : min(_1010, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_3_4_ladder_6_ladder_7_ladder;
                float frontier_phi_3_4_ladder_6_ladder_7_ladder_1;
                float frontier_phi_3_4_ladder_6_ladder_7_ladder_2;
                float frontier_phi_3_4_ladder_6_ladder_7_ladder_3;
                if (_499 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_3_4_ladder_6_ladder_7_ladder = 0.0;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_1 = 0.0;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_2 = 0.0;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_3 = 0.0;
                }
                else
                {
                    float _520 = _475 - cbPerScene._m0[16u].x;
                    float _1021 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
                    float _521 = isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0));
                    float _522 = _521 * _521;
                    float _524 = (_499 - cbPerScene._m0[22u].x) * 10.0;
                    float _1032 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
                    float _526 = isnan(1.0) ? _1032 : (isnan(_1032) ? 1.0 : min(_1032, 1.0));
                    float _527 = isnan(_526) ? _522 : (isnan(_522) ? _526 : min(_522, _526));
                    float _531 = (cbPerScene._m0[21u].x - _319) * cbPerScene._m0[21u].z;
                    float _1048 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
                    float _532 = isnan(1.0) ? _1048 : (isnan(_1048) ? 1.0 : min(_1048, 1.0));
                    float _533 = isnan(_532) ? _527 : (isnan(_527) ? _532 : min(_527, _532));
                    float _534 = (_466 * _472) + _449;
                    float _535 = (_467 * _472) + _451;
                    float _536 = _475 + _319;
                    float _568 = fma(_536, cbPerScene._m0[7u].z, fma(_535, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _534)) + cbPerScene._m0[7u].w;
                    float _572 = ((fma(_536, cbPerScene._m0[4u].z, fma(_535, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _534)) + cbPerScene._m0[4u].w) / _568) - _357;
                    float _573 = ((fma(_536, cbPerScene._m0[5u].z, fma(_535, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _534)) + cbPerScene._m0[5u].w) / _568) - _358;
                    float _580 = cbPerScene._m0[18u].x * _572;
                    float _581 = cbPerScene._m0[18u].y * _573;
                    float _586 = sqrt((_580 * _580) + (_581 * _581)) + 9.9999997473787516355514526367188e-06;
                    float _591 = (_572 / _586) * _517;
                    float _592 = (_573 / _586) * _517;
                    float _593 = (((1.0 / _536) - _410) / _586) * _517;
                    float _622 = abs(float(_591 > 0.0) - _357) / (abs(_591) + 1.0000000116860974230803549289703e-07);
                    float _623 = abs(float(_592 > 0.0) - _358) / (abs(_592) + 1.0000000116860974230803549289703e-07);
                    float _625 = (abs(((_593 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _410) / (abs(_593) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _626 = isnan(_623) ? _622 : (isnan(_622) ? _623 : min(_622, _623));
                    float _627 = isnan(_625) ? _626 : (isnan(_626) ? _625 : min(_626, _625));
                    uint _630 = uint(int(isnan(cbPerScene._m0[23u].y) ? _627 : (isnan(_627) ? cbPerScene._m0[23u].y : min(_627, cbPerScene._m0[23u].y))));
                    float _405;
                    float _635;
                    float _637;
                    float _639;
                    if (int(_630) > int(0u))
                    {
                        float _632 = _593 + _410;
                        float _633 = _592 + _358;
                        float _634 = _591 + _357;
                        float _636;
                        float _638;
                        float _640;
                        float _641;
                        uint _652;
                        float _654;
                        float _656;
                        float _658;
                        float _660;
                        float _662;
                        float _664;
                        float _666;
                        uint _668;
                        float _670;
                        float _672;
                        float _674;
                        float _647 = 0.0;
                        float _648 = 0.0;
                        float _649 = 0.0;
                        float _650 = 0.0;
                        uint _651 = 0u;
                        float _653 = _410;
                        float _655 = _634;
                        float _657 = _633;
                        float _659 = _632;
                        float _661 = _357;
                        float _663 = _358;
                        float _665 = _410;
                        uint _667 = 1u;
                        float _669 = 0.0;
                        float _671 = 0.0;
                        float _673 = 0.0;
                        float _685;
                        float _692;
                        float _693;
                        float _694;
                        float _695;
                        float _696;
                        float _697;
                        uint _698;
                        float _699;
                        bool _705;
                        for (;;)
                        {
                            _685 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _655, cbSceneParam._m0[86u].y * _657), 0.0).x;
                            bool _691 = _651 == (_630 + 4294967295u);
                            _692 = _691 ? _669 : _655;
                            _693 = _691 ? _671 : _657;
                            _694 = _691 ? _673 : _659;
                            _695 = _691 ? _669 : _661;
                            _696 = _691 ? _671 : _663;
                            _697 = _691 ? _673 : _665;
                            _698 = _691 ? 1u : _667;
                            _699 = _691 ? (-1.0) : (_659 - _685);
                            _705 = (_698 != 0u) && ((_699 <= 0.0) && ((_691 ? (-1.0) : (_685 - (_653 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_17_pred;
                            float frontier_phi_17_pred_1;
                            float frontier_phi_17_pred_2;
                            uint frontier_phi_17_pred_3;
                            float frontier_phi_17_pred_4;
                            float frontier_phi_17_pred_5;
                            float frontier_phi_17_pred_6;
                            float frontier_phi_17_pred_7;
                            float frontier_phi_17_pred_8;
                            float frontier_phi_17_pred_9;
                            float frontier_phi_17_pred_10;
                            float frontier_phi_17_pred_11;
                            float frontier_phi_17_pred_12;
                            float frontier_phi_17_pred_13;
                            float frontier_phi_17_pred_14;
                            uint frontier_phi_17_pred_15;
                            if (_705)
                            {
                                uint _715 = uint(int(log2(_517) + 0.999000012874603271484375));
                                float _726;
                                float _728;
                                float _730;
                                float _732;
                                float _734;
                                float _736;
                                float _738;
                                if (int(_715) > int(0u))
                                {
                                    uint _836;
                                    float _838;
                                    float _839;
                                    float _840;
                                    float _841;
                                    float _842;
                                    float _843;
                                    float _844;
                                    _836 = 0u;
                                    _838 = _692;
                                    _839 = _693;
                                    _840 = _694;
                                    _841 = _695;
                                    _842 = _696;
                                    _843 = _697;
                                    _844 = _685;
                                    float _727;
                                    float _729;
                                    float _731;
                                    float _733;
                                    float _735;
                                    float _737;
                                    float _739;
                                    for (;;)
                                    {
                                        float _848 = (_841 + _838) * 0.5;
                                        float _849 = (_842 + _839) * 0.5;
                                        float _850 = (_843 + _840) * 0.5;
                                        vec4 _858 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _848, cbSceneParam._m0[86u].y * _849), 0.0);
                                        float _860 = _858.x;
                                        bool _862 = (_850 - _860) < 0.0;
                                        _727 = _862 ? _848 : _838;
                                        _729 = _862 ? _849 : _839;
                                        _731 = _862 ? _850 : _840;
                                        _733 = _862 ? _841 : _848;
                                        _735 = _862 ? _842 : _849;
                                        _737 = _862 ? _843 : _850;
                                        _739 = _862 ? _860 : _844;
                                        uint _837 = _836 + 1u;
                                        if (_837 == _715)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _836 = _837;
                                            _838 = _727;
                                            _839 = _729;
                                            _840 = _731;
                                            _841 = _733;
                                            _842 = _735;
                                            _843 = _737;
                                            _844 = _739;
                                        }
                                    }
                                    _726 = _727;
                                    _728 = _729;
                                    _730 = _731;
                                    _732 = _733;
                                    _734 = _735;
                                    _736 = _737;
                                    _738 = _739;
                                }
                                else
                                {
                                    _726 = _692;
                                    _728 = _693;
                                    _730 = _694;
                                    _732 = _695;
                                    _734 = _696;
                                    _736 = _697;
                                    _738 = _685;
                                }
                                float _748 = cbPerScene._m0[28u].x * ((_726 * 2.0) + (-1.0));
                                float _749 = cbPerScene._m0[28u].y * (1.0 - (_728 * 2.0));
                                float _781 = fma(_738, cbPerScene._m0[27u].w, fma(_749, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _748) + cbPerScene._m0[27u].z);
                                float _782 = fma(_738, cbPerScene._m0[24u].w, fma(_749, cbPerScene._m0[24u].y, _748 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _781;
                                float _783 = fma(_738, cbPerScene._m0[25u].w, fma(_749, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _748) + cbPerScene._m0[25u].z) / _781;
                                vec4 _792 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _782, cbSceneParam._m0[87u].w * _783), 0.0);
                                float _797 = isnan(_533) ? 1.0 : (isnan(1.0) ? _533 : min(1.0, _533));
                                float _798 = 0.5 - _782;
                                float _799 = 0.5 - _783;
                                float _800 = _798 * 2.0;
                                float _801 = _799 * 2.0;
                                float _802 = _800 * _800;
                                float _803 = _801 * _801;
                                float _1084 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
                                float _1095 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
                                float _812 = inversesqrt(dot(vec2(_591, _592), vec2(_591, _592)));
                                float _818 = inversesqrt(dot(vec2(_800, _801), vec2(_800, _801)));
                                float _824 = dot(vec2((_798 * (-2.0)) * _818, (_799 * (-2.0)) * _818), vec2(_812 * _591, _812 * _592));
                                float _1106 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
                                float _831 = ((1.0 - (isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0)))) * (1.0 - (isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0))))) * (4.0 - ((isnan(1.0) ? _1106 : (isnan(_1106) ? 1.0 : min(_1106, 1.0))) * 2.0));
                                float _1117 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
                                float _832 = isnan(1.0) ? _1117 : (isnan(_1117) ? 1.0 : min(_1117, 1.0));
                                float _833 = _832 * _832;
                                frontier_phi_17_pred = _673;
                                frontier_phi_17_pred_1 = _671;
                                frontier_phi_17_pred_2 = _669;
                                frontier_phi_17_pred_3 = _698;
                                frontier_phi_17_pred_4 = _736;
                                frontier_phi_17_pred_5 = _734;
                                frontier_phi_17_pred_6 = _732;
                                frontier_phi_17_pred_7 = _730;
                                frontier_phi_17_pred_8 = _728;
                                frontier_phi_17_pred_9 = _726;
                                frontier_phi_17_pred_10 = _653;
                                frontier_phi_17_pred_11 = isnan(_833) ? _797 : (isnan(_797) ? _833 : min(_797, _833));
                                frontier_phi_17_pred_12 = _792.z;
                                frontier_phi_17_pred_13 = _792.y;
                                frontier_phi_17_pred_14 = _792.x;
                                frontier_phi_17_pred_15 = _630;
                            }
                            else
                            {
                                bool _717 = _699 > 0.0;
                                frontier_phi_17_pred = _717 ? _694 : _673;
                                frontier_phi_17_pred_1 = _717 ? _693 : _671;
                                frontier_phi_17_pred_2 = _717 ? _692 : _669;
                                frontier_phi_17_pred_3 = uint(_717);
                                frontier_phi_17_pred_4 = _694;
                                frontier_phi_17_pred_5 = _693;
                                frontier_phi_17_pred_6 = _692;
                                frontier_phi_17_pred_7 = _694 + _593;
                                frontier_phi_17_pred_8 = _693 + _592;
                                frontier_phi_17_pred_9 = _692 + _591;
                                frontier_phi_17_pred_10 = _685;
                                frontier_phi_17_pred_11 = _650;
                                frontier_phi_17_pred_12 = _649;
                                frontier_phi_17_pred_13 = _648;
                                frontier_phi_17_pred_14 = _647;
                                frontier_phi_17_pred_15 = _651 + 1u;
                            }
                            _674 = frontier_phi_17_pred;
                            _672 = frontier_phi_17_pred_1;
                            _670 = frontier_phi_17_pred_2;
                            _668 = frontier_phi_17_pred_3;
                            _666 = frontier_phi_17_pred_4;
                            _664 = frontier_phi_17_pred_5;
                            _662 = frontier_phi_17_pred_6;
                            _660 = frontier_phi_17_pred_7;
                            _658 = frontier_phi_17_pred_8;
                            _656 = frontier_phi_17_pred_9;
                            _654 = frontier_phi_17_pred_10;
                            _641 = frontier_phi_17_pred_11;
                            _640 = frontier_phi_17_pred_12;
                            _638 = frontier_phi_17_pred_13;
                            _636 = frontier_phi_17_pred_14;
                            _652 = frontier_phi_17_pred_15;
                            if (int(_652) < int(_630))
                            {
                                _647 = _636;
                                _648 = _638;
                                _649 = _640;
                                _650 = _641;
                                _651 = _652;
                                _653 = _654;
                                _655 = _656;
                                _657 = _658;
                                _659 = _660;
                                _661 = _662;
                                _663 = _664;
                                _665 = _666;
                                _667 = _668;
                                _669 = _670;
                                _671 = _672;
                                _673 = _674;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _635 = _636;
                        _637 = _638;
                        _639 = _640;
                        _405 = _641;
                    }
                    else
                    {
                        _635 = 0.0;
                        _637 = 0.0;
                        _639 = 0.0;
                        _405 = 0.0;
                    }
                    float frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder;
                    float frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_1;
                    float frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_2;
                    float frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_3;
                    if ((isnan(_635) || isnan(_637)) || isnan(_639))
                    {
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder = 0.0;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_1 = 0.0;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_2 = 0.0;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder = (_405 * _635) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_1 = _405;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_2 = (_405 * _639) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_3 = (_405 * _637) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_3_4_ladder_6_ladder_7_ladder = frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_1 = frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_1;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_2 = frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_2;
                    frontier_phi_3_4_ladder_6_ladder_7_ladder_3 = frontier_phi_3_4_ladder_6_ladder_7_ladder_10_ladder_3;
                }
                frontier_phi_3_4_ladder_6_ladder = frontier_phi_3_4_ladder_6_ladder_7_ladder;
                frontier_phi_3_4_ladder_6_ladder_1 = frontier_phi_3_4_ladder_6_ladder_7_ladder_1;
                frontier_phi_3_4_ladder_6_ladder_2 = frontier_phi_3_4_ladder_6_ladder_7_ladder_2;
                frontier_phi_3_4_ladder_6_ladder_3 = frontier_phi_3_4_ladder_6_ladder_7_ladder_3;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_6_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_6_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_6_ladder_2;
            frontier_phi_3_4_ladder_3 = frontier_phi_3_4_ladder_6_ladder_3;
        }
        else
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = 0.0;
            frontier_phi_3_4_ladder_2 = 0.0;
            frontier_phi_3_4_ladder_3 = 0.0;
        }
        _398 = frontier_phi_3_4_ladder;
        _400 = frontier_phi_3_4_ladder_3;
        _402 = frontier_phi_3_4_ladder_2;
        _404 = frontier_phi_3_4_ladder_1;
    }
    SV_Target.x = _398;
    SV_Target.y = _400;
    SV_Target.z = _402;
    SV_Target.w = _404;
    discard_exit();
}


