#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Ice_test_01_snp_0_Texture2D_10;
layout(set = 0, binding = 1) uniform texture2D M_Ice_test_01_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in float TEXCOORD;
layout(location = 4, component = 1) in float TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _143 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _144 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _145 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _151 = inversesqrt(dot(vec3(_143, _144, _145), vec3(_143, _144, _145)));
    float _158 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _159 = _158 * NORMAL.x;
    float _160 = _158 * NORMAL.y;
    float _161 = _158 * NORMAL.z;
    float _165 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _201 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _205 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _209 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _213 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _223 = cbSceneParam._m0[71u].x - (_201 / _213);
    float _224 = cbSceneParam._m0[71u].y - (_205 / _213);
    float _225 = cbSceneParam._m0[71u].z - (_209 / _213);
    float _248 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _255 = inversesqrt(dot(vec3(_159, _160, _161), vec3(_159, _160, _161)));
    float _259 = dot(vec4(_248 * _223, _248 * _224, _248 * _225, 0.0), vec4(_255 * _159, _255 * _160, _255 * _161, 0.0));
    float _653 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _267 = exp2(log2(1.0 - (isnan(1.0) ? _653 : (isnan(_653) ? 1.0 : min(_653, 1.0)))) * cbMtdParam._m0[12u].y);
    float _664 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _268 = isnan(1.0) ? _664 : (isnan(_664) ? 1.0 : min(_664, 1.0));
    float _275 = (_268 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x;
    float _276 = (_268 * (cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y;
    float _277 = (_268 * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z;
    vec4 _297 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1) + cbTextureTilingScale._m0[0u].w));
    float _305 = (_297.x * 2.0) + (-1.0);
    float _307 = (_297.y * 2.0) + (-1.0);
    float _308 = dot(vec2(_305, _307), vec2(_305, _307));
    float _675 = isnan(0.0) ? _308 : (isnan(_308) ? 0.0 : max(_308, 0.0));
    float _313 = sqrt(1.0 - (isnan(1.0) ? _675 : (isnan(_675) ? 1.0 : min(_675, 1.0))));
    float _314 = abs(_159);
    float _315 = abs(_160);
    float _316 = abs(_161);
    float _317 = _314 * _314;
    float _318 = _315 * _315;
    float _319 = _316 * _316;
    float _322 = _205 * 0.0500000007450580596923828125;
    float _332 = (cbTextureTilingScale._m0[1u].x * (_201 * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].z;
    vec4 _335 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_332, (cbTextureTilingScale._m0[1u].y * _322) + cbTextureTilingScale._m0[1u].w));
    float _342 = (cbTextureTilingScale._m0[1u].y * (_209 * 0.0500000007450580596923828125)) + cbTextureTilingScale._m0[1u].w;
    vec4 _343 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2(_332, _342));
    vec4 _353 = texture(sampler2D(M_Ice_test_01_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * _322) + cbTextureTilingScale._m0[1u].z, _342));
    float _367 = ((((((_343.x * _318) + (_335.x * _319)) + (_353.x * _317)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _305;
    float _368 = ((((((_343.y * _318) + (_335.y * _319)) + (_353.y * _317)) * 2.0) + (-1.0)) * cbMtdParam._m0[12u].w) + _307;
    float _371 = fma(_313, _159, fma(_368, _165 * TANGENT.x, _367 * (_151 * _143)));
    float _374 = fma(_313, _160, fma(_368, _165 * TANGENT.y, _367 * (_151 * _144)));
    float _377 = fma(_313, _161, fma(_368, _165 * TANGENT.z, _367 * (_151 * _145)));
    float _381 = inversesqrt(dot(vec3(_371, _374, _377), vec3(_371, _374, _377)));
    float _392 = cbMtdParam._m0[13u].x + dot(vec4(_381 * _371, _381 * _374, _381 * _377, 0.0), vec4(cbMtdParam._m0[14u].xyz, 0.0));
    float _686 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _394 = (isnan(1.0) ? _686 : (isnan(_686) ? 1.0 : min(_686, 1.0))) * TEXCOORD_3.x;
    float _697 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _395 = isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0));
    float _402 = (_395 * (cbMtdParam._m0[9u].x - _275)) + _275;
    float _403 = (_395 * (cbMtdParam._m0[9u].y - _276)) + _276;
    float _404 = (_395 * (cbMtdParam._m0[9u].z - _277)) + _277;
    float _409 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * _395) + cbMtdParam._m0[12u].x;
    float _708 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _719 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _411 = isnan(1.0) ? _719 : (isnan(_719) ? 1.0 : min(_719, 1.0));
    float _730 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _412 = isnan(1.0) ? _730 : (isnan(_730) ? 1.0 : min(_730, 1.0));
    float _741 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
    float _413 = isnan(1.0) ? _741 : (isnan(_741) ? 1.0 : min(_741, 1.0));
    uint _415 = uint(roundEven(NORMAL.w));
    float _429 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _434 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _436 = _434.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _532 = sqrt(((_223 * _223) + (_224 * _224)) + (_225 * _225));
        float _539 = (cbMatDynParam._m0[5u].x * _532) + cbMatDynParam._m0[5u].y;
        float _752 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
        float _540 = isnan(1.0) ? _752 : (isnan(_752) ? 1.0 : min(_752, 1.0));
        float _544 = (cbMatDynParam._m0[5u].z * _532) + cbMatDynParam._m0[5u].w;
        float _763 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _763 : (isnan(_763) ? 1.0 : min(_763, 1.0))) - _540)) + _540) < ((_436 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _580;
    uint _462;
    uint _463;
    float _473;
    float _474;
    float _475;
    float _508;
    vec4 _512;
    float _514;
    float _515;
    bool _526;
    for (;;)
    {
        _462 = _415 * 13u;
        _463 = _462 + 9u;
        uint _464 = _463 + uint(cbMatDynParam._m0[0u].w);
        float _470 = (cbMtdParam._m0[0u].x * _411) * cbInstanceData._m0[_464].x;
        float _471 = (cbMtdParam._m0[0u].y * _412) * cbInstanceData._m0[_464].y;
        float _472 = (cbMtdParam._m0[0u].z * _413) * cbInstanceData._m0[_464].z;
        float _774 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
        _473 = isnan(1.0) ? _774 : (isnan(_774) ? 1.0 : min(_774, 1.0));
        float _785 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
        _474 = isnan(1.0) ? _785 : (isnan(_785) ? 1.0 : min(_785, 1.0));
        float _796 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
        _475 = isnan(1.0) ? _796 : (isnan(_796) ? 1.0 : min(_796, 1.0));
        vec4 _481 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _483 = _481.x;
        float _505 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _483)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _483))) - _429) * 3.0;
        float _807 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
        _508 = (isnan(1.0) ? _807 : (isnan(_807) ? 1.0 : min(_807, 1.0))) * cbInstanceData._m0[_462 + 6u].w;
        float _509 = _436 + (-0.5);
        _512 = cbMtdParam._m0[1u];
        _514 = _512.y * _509;
        _515 = _509 * 0.999000012874603271484375;
        _526 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_526)
        {
            if ((cbInstanceData._m0[_462 + 7u].x + _515) < 0.5)
            {
                _580 = true;
                break;
            }
        }
        uint _569 = _463 + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_569].w < 1.0) && ((cbInstanceData._m0[_569].w + _515) < 0.5))
        {
            _580 = true;
            break;
        }
        if ((_514 + 1.0) < _512.x)
        {
            _580 = true;
            break;
        }
        _580 = false;
        break;
    }
    if (_580)
    {
        discard_state = true;
    }
    bool _606 = cbMtdParam._m0[1u].z != 0.0;
    float _607 = _606 ? _508 : 0.0;
    SV_Target.x = ((_371 * 0.5) * _381) + 0.500488758087158203125;
    SV_Target.y = ((_374 * 0.5) * _381) + 0.500488758087158203125;
    SV_Target.z = ((_377 * 0.5) * _381) + 0.500488758087158203125;
    SV_Target.w = _607;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _708 : (isnan(_708) ? 1.0 : min(_708, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _606 ? _508 : TEXCOORD_3.w;
    SV_Target_2.x = _473;
    SV_Target_2.y = _474;
    SV_Target_2.z = _475;
    SV_Target_2.w = _606 ? _508 : (float(floatBitsToUint(cbInstanceData._m0[_462 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _607;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _607;
    discard_exit();
}


