#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanB_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanB_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in vec4 TEXCOORD[];
layout(location = 4) in vec4 TEXCOORD_7[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec3 TEXCOORD_8;

void main()
{
    precise float _100 = gl_TessCoord.z * POSITION[0u].x;
    precise float _101 = gl_TessCoord.z * POSITION[0u].y;
    precise float _102 = gl_TessCoord.z * POSITION[0u].z;
    precise float _109 = gl_TessCoord.x * POSITION[1u].x;
    precise float _110 = gl_TessCoord.x * POSITION[1u].y;
    precise float _111 = gl_TessCoord.x * POSITION[1u].z;
    precise float _112 = _100 + _109;
    precise float _113 = _101 + _110;
    precise float _114 = _102 + _111;
    precise float _121 = gl_TessCoord.y * POSITION[2u].x;
    precise float _122 = gl_TessCoord.y * POSITION[2u].y;
    precise float _123 = gl_TessCoord.y * POSITION[2u].z;
    precise float _124 = _112 + _121;
    precise float _125 = _113 + _122;
    precise float _126 = _114 + _123;
    precise float _223 = gl_TessCoord.z * TEXCOORD[0u].x;
    precise float _224 = gl_TessCoord.z * TEXCOORD[0u].y;
    precise float _225 = gl_TessCoord.z * TEXCOORD[0u].z;
    precise float _226 = gl_TessCoord.z * TEXCOORD[0u].w;
    precise float _235 = gl_TessCoord.x * TEXCOORD[1u].x;
    precise float _236 = gl_TessCoord.x * TEXCOORD[1u].y;
    precise float _237 = gl_TessCoord.x * TEXCOORD[1u].z;
    precise float _238 = gl_TessCoord.x * TEXCOORD[1u].w;
    precise float _239 = _223 + _235;
    precise float _240 = _224 + _236;
    precise float _241 = _225 + _237;
    precise float _242 = _226 + _238;
    precise float _251 = gl_TessCoord.y * TEXCOORD[2u].x;
    precise float _252 = gl_TessCoord.y * TEXCOORD[2u].y;
    precise float _253 = gl_TessCoord.y * TEXCOORD[2u].z;
    precise float _254 = gl_TessCoord.y * TEXCOORD[2u].w;
    precise float _255 = _239 + _251;
    precise float _256 = _240 + _252;
    precise float _257 = _241 + _253;
    precise float _258 = _242 + _254;
    precise float _267 = gl_TessCoord.z * TEXCOORD_7[0u].x;
    precise float _268 = gl_TessCoord.z * TEXCOORD_7[0u].y;
    precise float _269 = gl_TessCoord.z * TEXCOORD_7[0u].z;
    precise float _270 = gl_TessCoord.z * TEXCOORD_7[0u].w;
    precise float _279 = gl_TessCoord.x * TEXCOORD_7[1u].x;
    precise float _280 = gl_TessCoord.x * TEXCOORD_7[1u].y;
    precise float _281 = gl_TessCoord.x * TEXCOORD_7[1u].z;
    precise float _282 = gl_TessCoord.x * TEXCOORD_7[1u].w;
    precise float _283 = _267 + _279;
    precise float _284 = _268 + _280;
    precise float _285 = _269 + _281;
    precise float _286 = _270 + _282;
    precise float _295 = gl_TessCoord.y * TEXCOORD_7[2u].x;
    precise float _296 = gl_TessCoord.y * TEXCOORD_7[2u].y;
    precise float _297 = gl_TessCoord.y * TEXCOORD_7[2u].z;
    precise float _298 = gl_TessCoord.y * TEXCOORD_7[2u].w;
    precise float _299 = _283 + _295;
    precise float _300 = _284 + _296;
    precise float _301 = _285 + _297;
    precise float _302 = _286 + _298;
    precise float _314 = cbMtdParam._m0[25u].x - cbMtdParam._m0[23u].z;
    precise float _315 = cbMtdParam._m0[25u].z - cbMtdParam._m0[24u].x;
    precise float _316 = _300 * _314;
    precise float _317 = _300 * _315;
    precise float _318 = cbMtdParam._m0[23u].z + _316;
    precise float _319 = cbMtdParam._m0[24u].x + _317;
    precise float _332 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].z;
    precise float _333 = cbMtdParam._m0[19u].w * _332;
    precise float _334 = cbMtdParam._m0[20u].x * _332;
    precise float _335 = _255 + _333;
    precise float _336 = _256 + _334;
    precise float _343 = cbTextureTilingScale._m0[2u].x * _335;
    precise float _344 = cbTextureTilingScale._m0[2u].y * _336;
    precise float _345 = cbTextureTilingScale._m0[2u].z + _343;
    precise float _346 = cbTextureTilingScale._m0[2u].w + _344;
    vec4 _350 = textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_2, SS_BumpMap), vec2(_345, _346), 0.0);
    float _353 = _350.z;
    precise float _354 = _318 * _353;
    precise float _355 = _319 * _353;
    precise float _365 = cbMtdParam._m0[25u].w * cbMtdParam._m0[16u].w;
    precise float _366 = cbMtdParam._m0[26u].y * cbMtdParam._m0[16u].w;
    precise float _367 = _365 - cbMtdParam._m0[25u].w;
    precise float _368 = _366 - cbMtdParam._m0[26u].y;
    precise float _369 = _300 * _367;
    precise float _370 = _300 * _368;
    precise float _371 = cbMtdParam._m0[25u].w + _369;
    precise float _372 = cbMtdParam._m0[26u].y + _370;
    precise float _378 = _332 * cbMtdParam._m0[18u].w;
    precise float _379 = _332 * cbMtdParam._m0[19u].x;
    precise float _384 = _255 * cbMtdParam._m0[22u].y;
    precise float _385 = _256 * cbMtdParam._m0[22u].z;
    precise float _386 = _378 + _384;
    precise float _387 = _379 + _385;
    precise float _394 = _386 * cbTextureTilingScale._m0[0u].x;
    precise float _395 = cbTextureTilingScale._m0[0u].y * _387;
    precise float _396 = cbTextureTilingScale._m0[0u].z + _394;
    precise float _397 = cbTextureTilingScale._m0[0u].w + _395;
    precise float _404 = _332 * cbMtdParam._m0[19u].y;
    precise float _405 = _332 * cbMtdParam._m0[19u].z;
    precise float _406 = _384 + _404;
    precise float _407 = _385 + _405;
    precise float _408 = _406 * cbTextureTilingScale._m0[0u].x;
    precise float _409 = cbTextureTilingScale._m0[0u].y * _407;
    precise float _410 = cbTextureTilingScale._m0[0u].z + _408;
    precise float _411 = cbTextureTilingScale._m0[0u].w + _409;
    precise float _415 = textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(_396, _397), 0.0).w * textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(_410, _411), 0.0).w;
    precise float _416 = _371 * _415;
    precise float _417 = _372 * _415;
    precise float _418 = _354 + _416;
    precise float _419 = _355 + _417;
    precise float _434 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _475 = _124 + _418;
    precise float _476 = _126 + _419;
    precise float _482 = _475 - cbvModelParam._m0[8u].x;
    precise float _483 = _476 - cbvModelParam._m0[8u].y;
    precise float _499 = dot(vec2(_482, _483), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _500 = dot(vec2(_482, _483), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _503 = cbMtdParam._m0[25u].y - cbMtdParam._m0[23u].w;
    precise float _504 = _300 * _503;
    precise float _505 = cbMtdParam._m0[23u].w + _504;
    precise float _506 = _505 * _353;
    precise float _508 = cbMtdParam._m0[26u].x * cbMtdParam._m0[16u].w;
    precise float _509 = _508 - cbMtdParam._m0[26u].x;
    precise float _510 = _300 * _509;
    precise float _511 = cbMtdParam._m0[26u].x + _510;
    precise float _512 = _511 * _415;
    precise float _513 = _506 + _512;
    precise float _514 = _125 + _513;
    vec4 _516 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_499, _500), 0.0);
    float _518 = _516.x;
    precise float _519 = _518 * 0.0;
    precise float _520 = _475 + _519;
    precise float _521 = _514 + _518;
    precise float _522 = _476 + _519;
    float _560;
    float _561;
    float _562;
    if (((((dot(vec4(_520, _521, _522, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_520, _521, _522, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_520, _521, _522, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_520, _521, _522, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_124, _125, _126, 1.0), vec4(cbSceneParam._m0[73u])) > _434) && (dot(vec4(_124, _125, _126, 1.0), vec4(cbSceneParam._m0[74u])) > _434)) && (dot(vec4(_124, _125, _126, 1.0), vec4(cbSceneParam._m0[75u])) > _434)) && (dot(vec4(_124, _125, _126, 1.0), vec4(cbSceneParam._m0[76u])) > _434))))
    {
        precise float _543 = _520 - _124;
        precise float _544 = _521 - _125;
        precise float _545 = _522 - _126;
        float _550 = inversesqrt(dot(vec3(_543, _544, _545), vec3(_543, _544, _545)));
        precise float _551 = _543 * _550;
        precise float _552 = _544 * _550;
        precise float _553 = _545 * _550;
        precise float _554 = _551 * cbMtdParam._m0[4u].y;
        precise float _555 = _552 * cbMtdParam._m0[4u].y;
        precise float _556 = _553 * cbMtdParam._m0[4u].y;
        precise float _557 = _124 + _554;
        precise float _558 = _125 + _555;
        precise float _559 = _126 + _556;
        _560 = _557;
        _561 = _558;
        _562 = _559;
    }
    else
    {
        _560 = _520;
        _561 = _521;
        _562 = _522;
    }
    precise float _568 = _560 - cbSceneParam._m0[3u].x;
    precise float _569 = _561 - cbSceneParam._m0[3u].y;
    precise float _570 = _562 - cbSceneParam._m0[3u].z;
    precise float _595 = _568 * cbSceneParam._m0[24u].x;
    precise float _596 = _569 * cbSceneParam._m0[24u].y;
    precise float _597 = _596 + _595;
    precise float _598 = _570 * cbSceneParam._m0[24u].z;
    precise float _599 = _598 + _597;
    precise float _600 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _601 = _600 + _599;
    precise float _602 = _568 * cbSceneParam._m0[25u].x;
    precise float _603 = _569 * cbSceneParam._m0[25u].y;
    precise float _604 = _603 + _602;
    precise float _605 = _570 * cbSceneParam._m0[25u].z;
    precise float _606 = _605 + _604;
    precise float _607 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _608 = _607 + _606;
    precise float _609 = _568 * cbSceneParam._m0[26u].x;
    precise float _610 = _569 * cbSceneParam._m0[26u].y;
    precise float _611 = _610 + _609;
    precise float _612 = _570 * cbSceneParam._m0[26u].z;
    precise float _613 = _612 + _611;
    precise float _614 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _615 = _614 + _613;
    precise float _616 = _568 * cbSceneParam._m0[27u].x;
    precise float _617 = _569 * cbSceneParam._m0[27u].y;
    precise float _618 = _617 + _616;
    precise float _619 = _570 * cbSceneParam._m0[27u].z;
    precise float _620 = _619 + _618;
    precise float _621 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _622 = _621 + _620;
    gl_Position.x = _601;
    gl_Position.y = _608;
    gl_Position.z = _615;
    gl_Position.w = _622;
    POSITION_1.x = _601;
    POSITION_1.y = _608;
    POSITION_1.z = _615;
    POSITION_1.w = _622;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_1.x = _255;
    TEXCOORD_1.y = _256;
    TEXCOORD_1.z = _257;
    TEXCOORD_1.w = _258;
    TEXCOORD_5.x = _299;
    TEXCOORD_5.y = _300;
    TEXCOORD_5.z = _301;
    TEXCOORD_5.w = _302;
    TEXCOORD_8.x = _499;
    TEXCOORD_8.y = _500;
    TEXCOORD_8.z = 0.0;
    gl_ClipDistance[0u] = dot(vec4(_601, _608, _615, _622), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_601, _608, _615, _622), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


