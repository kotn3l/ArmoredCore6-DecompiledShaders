#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanB_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanB_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanB_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1244;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _209 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _210 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _211 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _216 = inversesqrt(dot(vec3(_209, _210, _211), vec3(_209, _210, _211)));
    float _217 = _216 * _209;
    float _218 = _216 * _210;
    float _219 = _216 * _211;
    float _223 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _224 = _223 * NORMAL.x;
    float _225 = _223 * NORMAL.y;
    float _226 = _223 * NORMAL.z;
    float _230 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _238;
    float _239;
    float _240;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
        _240 = (-0.0) - _226;
    }
    else
    {
        _238 = _224;
        _239 = _225;
        _240 = _226;
    }
    float _284 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _294 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _284);
    float _295 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _284);
    float _296 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _284);
    float _313 = cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x;
    vec4 _330 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_2, SS_BumpMap), vec2((((_313 * cbMtdParam._m0[19u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_313 * cbMtdParam._m0[20u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _333 = _330.x;
    float _334 = _330.y;
    float _354 = cbMtdParam._m0[13u].y - cbMtdParam._m0[13u].x;
    float _356 = (sqrt(((_294 * _294) + (_295 * _295)) + (_296 * _296)) - cbMtdParam._m0[13u].x) / (isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0)));
    float _363 = (cbMtdParam._m0[13u].w + _356) * cbMtdParam._m0[15u].y;
    float _3615 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    vec4 _377 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _379 = _377.x;
    bool _386 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _402 = ((_386 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _379)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _379))) - POSITION_1.w) / (((isnan(1.0) ? _3615 : (isnan(_3615) ? 1.0 : min(_3615, 1.0))) * (cbMtdParam._m0[12u].w - cbMtdParam._m0[12u].y)) + cbMtdParam._m0[12u].y);
    float _3626 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _403 = isnan(1.0) ? _3626 : (isnan(_3626) ? 1.0 : min(_3626, 1.0));
    float _409 = 1.0 - (isnan(cbMtdParam._m0[16u].z) ? _403 : (isnan(_403) ? cbMtdParam._m0[16u].z : max(_403, cbMtdParam._m0[16u].z)));
    float _3642 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    float _410 = isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0));
    float _411 = _330.z - _410;
    float _3653 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
    float _412 = isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0));
    float _424 = (_412 * 0.004999999888241291046142578125) + TEXCOORD.x;
    float _426 = (_412 * (-0.004999999888241291046142578125)) + TEXCOORD.y;
    vec4 _439 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((_424 + (cbMtdParam._m0[18u].y * _313)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_426 + (cbMtdParam._m0[18u].z * _313)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _443 = _439.z;
    vec4 _456 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((_424 + (cbMtdParam._m0[17u].w * _313)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_426 + (cbMtdParam._m0[18u].x * _313)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _460 = _456.z;
    float _463 = (_409 - _330.w) + (isnan(_460) ? _443 : (isnan(_443) ? _460 : max(_443, _460)));
    float _3669 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0));
    float _467 = (TEXCOORD_5.x - _409) + cbMtdParam._m0[16u].y;
    float _468 = _467 * (isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0)));
    float _480 = (_468 + cbMtdParam._m0[9u].x) + (cbMtdParam._m0[10u].x * _412);
    float _481 = (_468 + cbMtdParam._m0[9u].y) + (cbMtdParam._m0[10u].y * _412);
    float _482 = (_468 + cbMtdParam._m0[9u].z) + (cbMtdParam._m0[10u].z * _412);
    float _3680 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _484 = 1.0 - (isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0)));
    float _491 = ((_484 - _480) * _410) + _480;
    float _492 = ((_484 - _481) * _410) + _481;
    float _493 = ((_484 - _482) * _410) + _482;
    float _498 = _356 / cbMtdParam._m0[15u].w;
    float _3691 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
    float _501 = (1.0 - (isnan(1.0) ? _3691 : (isnan(_3691) ? 1.0 : min(_3691, 1.0)))) * cbMtdParam._m0[15u].z;
    float _514 = (cbMtdParam._m0[15u].x + _356) * cbMtdParam._m0[14u].y;
    float _3702 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _518 = ((isnan(1.0) ? _3702 : (isnan(_3702) ? 1.0 : min(_3702, 1.0))) * (cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].x)) + cbMtdParam._m0[11u].x;
    float _3713 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _519 = isnan(1.0) ? _3713 : (isnan(_3713) ? 1.0 : min(_3713, 1.0));
    float _528 = _356 / cbMtdParam._m0[14u].w;
    float _3724 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _529 = isnan(1.0) ? _3724 : (isnan(_3724) ? 1.0 : min(_3724, 1.0));
    vec4 _549 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[20u].y * _313) + TEXCOORD.z) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[20u].z * _313) + TEXCOORD.w) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _558 = ((_456.x + (-0.5)) * 0.5) + _439.x;
    float _559 = ((_456.y + (-0.5)) * 0.5) + _439.y;
    float _567 = _412 * 0.119999997317790985107421875;
    float _569 = _412 * (-0.100000001490116119384765625);
    float _580 = cbMtdParam._m0[21u].y * TEXCOORD.x;
    float _581 = cbMtdParam._m0[21u].z * TEXCOORD.y;
    vec4 _590 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[20u].w * _313) + _567) + _580) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[21u].x * _313) + _569) + _581) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _608 = texture(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2((((_580 + _567) + (cbMtdParam._m0[21u].w * _313)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_581 + _569) + (cbMtdParam._m0[22u].x * _313)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _620 = (((0.5 - _558) * 0.10999999940395355224609375) + _558) + (((_590.x + (-1.0)) + _608.x) * cbMtdParam._m0[16u].x);
    float _621 = (((0.5 - _559) * 0.10999999940395355224609375) + _559) + (((_590.y + (-1.0)) + _608.y) * cbMtdParam._m0[16u].x);
    float _626 = ((_549.x - _620) * _529) + _620;
    float _627 = ((_549.y - _621) * _529) + _621;
    float _629 = _356 / cbMtdParam._m0[14u].z;
    float _3735 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _630 = isnan(1.0) ? _3735 : (isnan(_3735) ? 1.0 : min(_3735, 1.0));
    float _647 = ((((_519 * (0.5 - _333)) + _333) + (((_626 + (-0.5)) + ((0.5 - _626) * _630)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _648 = ((((_519 * (0.5 - _334)) + _334) + (((_627 + (-0.5)) + ((0.5 - _627) * _630)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _649 = dot(vec2(_647, _648), vec2(_647, _648));
    float _3746 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _654 = sqrt(1.0 - (isnan(1.0) ? _3746 : (isnan(_3746) ? 1.0 : min(_3746, 1.0))));
    float _662 = (cbMtdParam._m0[13u].z + _356) * cbMtdParam._m0[14u].x;
    float _3757 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _664 = (isnan(1.0) ? _3757 : (isnan(_3757) ? 1.0 : min(_3757, 1.0))) * cbMtdParam._m0[17u].x;
    float _3768 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _665 = isnan(1.0) ? _3768 : (isnan(_3768) ? 1.0 : min(_3768, 1.0));
    float _680 = fma(_654, _238, fma(_648, _230 * TANGENT.x, _647 * _217));
    float _683 = fma(_654, _239, fma(_648, _230 * TANGENT.y, _647 * _218));
    float _686 = fma(_654, _240, fma(_648, _230 * TANGENT.z, _647 * _219));
    float _690 = inversesqrt(dot(vec3(_680, _683, _686), vec3(_680, _683, _686)));
    float _691 = _690 * _680;
    float _692 = _690 * _683;
    float _693 = _690 * _686;
    float _3779 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _3790 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _695 = isnan(1.0) ? _3790 : (isnan(_3790) ? 1.0 : min(_3790, 1.0));
    float _3801 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _3812 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _3823 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _703 = _386 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _743 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _752 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _743);
    float _753 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _743);
    float _754 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _743);
    float _758 = inversesqrt(dot(vec3(_752, _753, _754), vec3(_752, _753, _754)));
    float _759 = _752 * _758;
    float _760 = _753 * _758;
    float _761 = _754 * _758;
    float _766 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _767 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _769 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_8.x, TEXCOORD_8.y));
    float _778 = (_769.x * 2.0) + (-1.0);
    float _779 = (_769.y * 2.0) + (-1.0);
    float _780 = (_769.z * 2.0) + (-1.0);
    float _784 = inversesqrt(dot(vec3(_778, _779, _780), vec3(_778, _779, _780)));
    float _795 = ((TEXCOORD_8.y >= 1.0) || (((TEXCOORD_8.x <= 0.0) || (TEXCOORD_8.x >= 1.0)) || (TEXCOORD_8.y <= 0.0))) ? 0.0 : _769.w;
    float _802 = (((_778 * _784) - _691) * _795) + _691;
    float _803 = (((_779 * _784) - _692) * _795) + _692;
    float _804 = (((_780 * _784) - _693) * _795) + _693;
    float _825 = fma(_804, cbSceneParam._m0[5u].z, fma(_803, cbSceneParam._m0[5u].y, _802 * cbSceneParam._m0[5u].x));
    float _828 = fma(_804, cbSceneParam._m0[6u].z, fma(_803, cbSceneParam._m0[6u].y, _802 * cbSceneParam._m0[6u].x));
    float _831 = fma(_804, cbSceneParam._m0[7u].z, fma(_803, cbSceneParam._m0[7u].y, _802 * cbSceneParam._m0[7u].x));
    uint _844 = uint(roundEven(NORMAL.w)) * 13u;
    uint _846 = (_844 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _852 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3801 : (isnan(_3801) ? 1.0 : min(_3801, 1.0)))) * cbInstanceData._m0[_846].x;
    float _853 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3812 : (isnan(_3812) ? 1.0 : min(_3812, 1.0)))) * cbInstanceData._m0[_846].y;
    float _854 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3823 : (isnan(_3823) ? 1.0 : min(_3823, 1.0)))) * cbInstanceData._m0[_846].z;
    float _3834 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _855 = isnan(1.0) ? _3834 : (isnan(_3834) ? 1.0 : min(_3834, 1.0));
    float _3845 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _856 = isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0));
    float _3856 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _857 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
    vec4 _866 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _766, cbSceneParam._m0[86u].y * _767));
    float _869 = _866.x * TEXCOORD_5.w;
    float _870 = dot(vec3(_802, _803, _804), vec3(_759, _760, _761));
    float _873 = _870 * 2.0;
    float _877 = (_873 * _802) - _759;
    float _878 = (_873 * _803) - _760;
    float _879 = (_873 * _804) - _761;
    float _883 = abs(dot(vec3(_759, _760, _761), vec3(_802, _803, _804)));
    float _3867 = isnan(0.0) ? _883 : (isnan(_883) ? 0.0 : max(_883, 0.0));
    float _884 = isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0));
    float _892 = 10.0 / (_703 + 10.0);
    float _893 = sqrt(_695);
    float _905 = exp2((_893 * 5.0) * log2(1.0 - (_884 * 0.999000012874603271484375))) / (4.0 - (_893 * 3.0));
    float _936 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _944 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1243;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _970 = fma(_944, cbModelParam._m0[26u].z, fma(_940, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _936));
        float _974 = fma(_944, cbModelParam._m0[27u].z, fma(_940, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _936));
        float _978 = fma(_944, cbModelParam._m0[28u].z, fma(_940, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _936));
        float _1001 = _936 + _802;
        float _1002 = _940 + _803;
        float _1003 = _944 + _804;
        float _1013 = fma(_1003, cbModelParam._m0[26u].z, fma(_1002, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1001)) - _970;
        float _1014 = fma(_1003, cbModelParam._m0[27u].z, fma(_1002, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1001)) - _974;
        float _1015 = fma(_1003, cbModelParam._m0[28u].z, fma(_1002, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1001)) - _978;
        float _1019 = inversesqrt(dot(vec3(_1013, _1014, _1015), vec3(_1013, _1014, _1015)));
        float _1032 = ((_1019 * _1013) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_970 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1033 = ((_1019 * _1014) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_974 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1034 = ((_1019 * _1015) / cbModelParam._m0[34u].z) + ((((((_978 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1037 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1032, _1033, _1034), 0.0);
        vec4 _1044 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1032, _1033, _1034), 0.0);
        vec4 _1051 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1032, _1033, _1034), 0.0);
        vec4 _1058 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1032, _1033, _1034), 0.0);
        float _1071 = exp2((_1037.w + (-0.5)) * 20.0) * 2.0;
        float _1072 = _1071 * (_1037.x + (-0.5));
        float _1073 = _1071 * (_1037.y + (-0.5));
        float _1074 = _1071 * (_1037.z + (-0.5));
        float _1081 = exp2((_1044.w + (-0.5)) * 20.0) * 2.0;
        float _1082 = _1081 * (_1044.x + (-0.5));
        float _1083 = _1081 * (_1044.y + (-0.5));
        float _1084 = _1081 * (_1044.z + (-0.5));
        float _1091 = exp2((_1051.w + (-0.5)) * 20.0) * 2.0;
        float _1092 = _1091 * (_1051.x + (-0.5));
        float _1093 = _1091 * (_1051.y + (-0.5));
        float _1094 = _1091 * (_1051.z + (-0.5));
        float _1101 = exp2((_1058.w + (-0.5)) * 20.0) * 2.0;
        float _1102 = _1101 * (_1058.x + (-0.5));
        float _1103 = _1101 * (_1058.y + (-0.5));
        float _1104 = _1101 * (_1058.z + (-0.5));
        float _1105 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1106 = isnan(0.0) ? _1103 : (isnan(_1103) ? 0.0 : max(_1103, 0.0));
        float _1107 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1108 = _1072 * 0.5;
        float _1109 = _1082 * 0.5;
        float _1110 = _1092 * 0.5;
        float _1111 = dot(vec3(_1108, _1109, _1110), vec3(_1108, _1109, _1110));
        float _1116 = (_1111 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1111);
        float _1125 = (dot(vec3(_802, _803, _804), vec3(_1116 * _1108, _1116 * _1109, _1116 * _1110)) + 1.0) * 0.5;
        float _3893 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1135 = sqrt(((_1109 * _1109) + (_1108 * _1108)) + (_1110 * _1110)) / (_1105 + 9.9999997473787516355514526367188e-06);
        float _3904 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        float _1136 = isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0));
        float _1137 = _1136 * 2.0;
        float _1141 = (1.0 - _1136) / (_1136 + 1.0);
        float _3915 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
        float _1151 = ((((1.0 - _1142) * (_1137 + 2.0)) * exp2(log2(isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0))) * (_1137 + 1.0))) + _1142) * _1105;
        float _1152 = _1073 * 0.5;
        float _1153 = _1083 * 0.5;
        float _1154 = _1093 * 0.5;
        float _1155 = dot(vec3(_1152, _1153, _1154), vec3(_1152, _1153, _1154));
        float _1160 = (_1155 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1155);
        float _1168 = (dot(vec3(_802, _803, _804), vec3(_1160 * _1152, _1160 * _1153, _1160 * _1154)) + 1.0) * 0.5;
        float _3926 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1177 = sqrt(((_1153 * _1153) + (_1152 * _1152)) + (_1154 * _1154)) / (_1106 + 9.9999997473787516355514526367188e-06);
        float _3937 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
        float _1178 = isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0));
        float _1179 = _1178 * 2.0;
        float _1183 = (1.0 - _1178) / (_1178 + 1.0);
        float _3948 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
        float _1193 = ((((1.0 - _1184) * (_1179 + 2.0)) * exp2(log2(isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * (_1179 + 1.0))) + _1184) * _1106;
        float _1194 = _1074 * 0.5;
        float _1195 = _1084 * 0.5;
        float _1196 = _1094 * 0.5;
        float _1197 = dot(vec3(_1194, _1195, _1196), vec3(_1194, _1195, _1196));
        float _1202 = (_1197 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1197);
        float _1210 = (dot(vec3(_802, _803, _804), vec3(_1202 * _1194, _1202 * _1195, _1202 * _1196)) + 1.0) * 0.5;
        float _3959 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1219 = sqrt(((_1195 * _1195) + (_1194 * _1194)) + (_1196 * _1196)) / (_1107 + 9.9999997473787516355514526367188e-06);
        float _3970 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1220 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
        float _1221 = _1220 * 2.0;
        float _1225 = (1.0 - _1220) / (_1220 + 1.0);
        float _3981 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
        float _1235 = ((((1.0 - _1226) * (_1221 + 2.0)) * exp2(log2(isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0))) * (_1221 + 1.0))) + _1226) * _1107;
        _1243 = _1074;
        _1245 = _1073;
        _1246 = _1072;
        _1247 = _1084;
        _1248 = _1083;
        _1249 = _1082;
        _1250 = _1094;
        _1251 = _1093;
        _1252 = _1092;
        _1253 = _1107;
        _1254 = _1106;
        _1255 = _1105;
        _1256 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)));
        _1257 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1193 : (isnan(_1193) ? 0.0 : max(_1193, 0.0)));
        _1258 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1235 : (isnan(_1235) ? 0.0 : max(_1235, 0.0)));
    }
    else
    {
        _1243 = _1244;
        _1245 = _1244;
        _1246 = _1244;
        _1247 = _1244;
        _1248 = _1244;
        _1249 = _1244;
        _1250 = _1244;
        _1251 = _1244;
        _1252 = _1244;
        _1253 = _1244;
        _1254 = _1244;
        _1255 = _1244;
        _1256 = 0.0;
        _1257 = 0.0;
        _1258 = 0.0;
    }
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1284 = fma(_944, cbModelParam._m0[30u].z, fma(_940, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _936));
        float _1288 = fma(_944, cbModelParam._m0[31u].z, fma(_940, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _936));
        float _1292 = fma(_944, cbModelParam._m0[32u].z, fma(_940, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _936));
        float _1315 = _936 + _802;
        float _1316 = _940 + _803;
        float _1317 = _944 + _804;
        float _1327 = fma(_1317, cbModelParam._m0[30u].z, fma(_1316, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1315)) - _1284;
        float _1328 = fma(_1317, cbModelParam._m0[31u].z, fma(_1316, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1315)) - _1288;
        float _1329 = fma(_1317, cbModelParam._m0[32u].z, fma(_1316, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1315)) - _1292;
        float _1333 = inversesqrt(dot(vec3(_1327, _1328, _1329), vec3(_1327, _1328, _1329)));
        float _1346 = ((_1333 * _1327) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1284 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1347 = ((_1333 * _1328) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1288 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1348 = ((_1333 * _1329) / cbModelParam._m0[35u].z) + ((((((_1292 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1350 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1357 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1364 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        vec4 _1371 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1346, _1347, _1348), 0.0);
        float _1383 = exp2((_1350.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1350.x + (-0.5));
        float _1385 = _1383 * (_1350.y + (-0.5));
        float _1386 = _1383 * (_1350.z + (-0.5));
        float _1393 = exp2((_1357.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1357.x + (-0.5));
        float _1395 = _1393 * (_1357.y + (-0.5));
        float _1396 = _1393 * (_1357.z + (-0.5));
        float _1403 = exp2((_1364.w + (-0.5)) * 20.0) * 2.0;
        float _1404 = _1403 * (_1364.x + (-0.5));
        float _1405 = _1403 * (_1364.y + (-0.5));
        float _1406 = _1403 * (_1364.z + (-0.5));
        float _1413 = exp2((_1371.w + (-0.5)) * 20.0) * 2.0;
        float _1414 = _1413 * (_1371.x + (-0.5));
        float _1415 = _1413 * (_1371.y + (-0.5));
        float _1416 = _1413 * (_1371.z + (-0.5));
        float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
        float _1418 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
        float _1419 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1420 = _1384 * 0.5;
        float _1421 = _1394 * 0.5;
        float _1422 = _1404 * 0.5;
        float _1423 = dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422));
        float _1428 = (_1423 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1423);
        float _1436 = (dot(vec3(_802, _803, _804), vec3(_1428 * _1420, _1428 * _1421, _1428 * _1422)) + 1.0) * 0.5;
        float _4022 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1445 = sqrt(((_1421 * _1421) + (_1420 * _1420)) + (_1422 * _1422)) / (_1417 + 9.9999997473787516355514526367188e-06);
        float _4033 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
        float _1446 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
        float _1447 = _1446 * 2.0;
        float _1451 = (1.0 - _1446) / (_1446 + 1.0);
        float _4044 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
        float _1461 = ((((1.0 - _1452) * (_1447 + 2.0)) * exp2(log2(isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0))) * (_1447 + 1.0))) + _1452) * _1417;
        float _1462 = _1385 * 0.5;
        float _1463 = _1395 * 0.5;
        float _1464 = _1405 * 0.5;
        float _1465 = dot(vec3(_1462, _1463, _1464), vec3(_1462, _1463, _1464));
        float _1470 = (_1465 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1465);
        float _1478 = (dot(vec3(_802, _803, _804), vec3(_1470 * _1462, _1470 * _1463, _1470 * _1464)) + 1.0) * 0.5;
        float _4055 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1487 = sqrt(((_1463 * _1463) + (_1462 * _1462)) + (_1464 * _1464)) / (_1418 + 9.9999997473787516355514526367188e-06);
        float _4066 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
        float _1488 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
        float _1489 = _1488 * 2.0;
        float _1493 = (1.0 - _1488) / (_1488 + 1.0);
        float _4077 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
        float _1503 = ((((1.0 - _1494) * (_1489 + 2.0)) * exp2(log2(isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * (_1489 + 1.0))) + _1494) * _1418;
        float _1504 = _1386 * 0.5;
        float _1505 = _1396 * 0.5;
        float _1506 = _1406 * 0.5;
        float _1507 = dot(vec3(_1504, _1505, _1506), vec3(_1504, _1505, _1506));
        float _1512 = (_1507 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1507);
        float _1520 = (dot(vec3(_802, _803, _804), vec3(_1512 * _1504, _1512 * _1505, _1512 * _1506)) + 1.0) * 0.5;
        float _4088 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1529 = sqrt(((_1505 * _1505) + (_1504 * _1504)) + (_1506 * _1506)) / (_1419 + 9.9999997473787516355514526367188e-06);
        float _4099 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1530 = isnan(1.0) ? _4099 : (isnan(_4099) ? 1.0 : min(_4099, 1.0));
        float _1531 = _1530 * 2.0;
        float _1535 = (1.0 - _1530) / (_1530 + 1.0);
        float _4110 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4110 : (isnan(_4110) ? 1.0 : min(_4110, 1.0));
        float _1545 = ((((1.0 - _1536) * (_1531 + 2.0)) * exp2(log2(isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * (_1531 + 1.0))) + _1536) * _1419;
        _1553 = _1386;
        _1554 = _1385;
        _1555 = _1384;
        _1556 = _1396;
        _1557 = _1395;
        _1558 = _1394;
        _1559 = _1406;
        _1560 = _1405;
        _1561 = _1404;
        _1562 = _1419;
        _1563 = _1418;
        _1564 = _1417;
        _1565 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0)));
        _1566 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0)));
        _1567 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0)));
    }
    else
    {
        _1553 = _1244;
        _1554 = _1244;
        _1555 = _1244;
        _1556 = _1244;
        _1557 = _1244;
        _1558 = _1244;
        _1559 = _1244;
        _1560 = _1244;
        _1561 = _1244;
        _1562 = _1244;
        _1563 = _1244;
        _1564 = _1244;
        _1565 = 0.0;
        _1566 = 0.0;
        _1567 = 0.0;
    }
    float _1577 = (cbModelParam._m0[1u].x * (_1565 - _1256)) + _1256;
    float _1578 = (cbModelParam._m0[1u].x * (_1566 - _1257)) + _1257;
    float _1579 = (cbModelParam._m0[1u].x * (_1567 - _1258)) + _1258;
    float _1600 = fma(_1579, cbSceneParam._m0[89u].z, fma(_1578, cbSceneParam._m0[89u].y, _1577 * cbSceneParam._m0[89u].x));
    float _1603 = fma(_1579, cbSceneParam._m0[90u].z, fma(_1578, cbSceneParam._m0[90u].y, _1577 * cbSceneParam._m0[90u].x));
    float _1606 = fma(_1579, cbSceneParam._m0[91u].z, fma(_1578, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1577));
    float _1621 = _877 * 0.5;
    float _1622 = _878 * 0.5;
    float _1623 = _879 * 0.5;
    float _1624 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1555, _1558, _1561, _1564));
    float _1627 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1554, _1557, _1560, _1563));
    float _1630 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1553, _1556, _1559, _1562));
    float _1664;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1637 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1243, _1247, _1250, _1253));
        float _1641 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1245, _1248, _1251, _1254));
        float _1645 = dot(vec4(_1621, _1622, _1623, 1.0), vec4(_1246, _1249, _1252, _1255));
        float _1652 = dot(vec4(cbModelParam._m0[39u]), vec4(_1621, _1622, _1623, 1.0));
        _1664 = dot(vec3(isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)), isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)), isnan(0.0) ? _1637 : (isnan(_1637) ? 0.0 : max(_1637, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1652) ? 0.0 : (isnan(0.0) ? _1652 : max(0.0, _1652))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1664 = 1.0;
    }
    float _1675;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1666 = dot(vec4(cbModelParam._m0[40u]), vec4(_1621, _1622, _1623, 1.0));
        _1675 = dot(vec3(isnan(0.0) ? _1624 : (isnan(_1624) ? 0.0 : max(_1624, 0.0)), isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0)), isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1666) ? 0.0 : (isnan(0.0) ? _1666 : max(0.0, _1666))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1675 = 1.0;
    }
    float _1679 = (_1675 * cbModelParam._m0[1u].x) + (_1664 * (1.0 - cbModelParam._m0[1u].x));
    float _1689 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _695);
    float _1690 = isnan(_1689) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1689 : min(cbModelParam._m0[25u].z, _1689));
    float _1770;
    float _1772;
    float _1774;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1737 = fma(_944, cbModelParam._m0[13u].z, fma(_940, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _936)) + cbModelParam._m0[13u].w;
        float _1741 = fma(_944, cbModelParam._m0[14u].z, fma(_940, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _936)) + cbModelParam._m0[14u].w;
        float _1745 = fma(_944, cbModelParam._m0[15u].z, fma(_940, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _936)) + cbModelParam._m0[15u].w;
        float _1748 = fma(_879, cbModelParam._m0[13u].z, fma(_878, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _877));
        float _1751 = fma(_879, cbModelParam._m0[14u].z, fma(_878, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _877));
        float _1754 = fma(_879, cbModelParam._m0[15u].z, fma(_878, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _877));
        float _1782;
        if (_1748 > 0.0)
        {
            _1782 = abs((1.0 - _1737) / _1748);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1748 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1737 + 1.0) / _1748);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1782 = frontier_phi_16_14_ladder;
        }
        float _2205;
        if (_1751 > 0.0)
        {
            _2205 = abs((1.0 - _1741) / _1751);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1741 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2205 = frontier_phi_25_21_ladder;
        }
        float _2623;
        if (_1754 > 0.0)
        {
            _2623 = abs((1.0 - _1745) / _1754);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1745 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _2623 = frontier_phi_39_32_ladder;
        }
        float _2625 = isnan(_2205) ? _1782 : (isnan(_1782) ? _2205 : min(_1782, _2205));
        float _2626 = isnan(_2623) ? _2625 : (isnan(_2625) ? _2623 : min(_2625, _2623));
        float _2630 = (_2626 * _1748) + _1737;
        float _2631 = (_2626 * _1751) + _1741;
        float _2632 = (_2626 * _1754) + _1745;
        float _2633 = _2626 * 9.9999997473787516355514526367188e-05;
        float _2635 = (-1.0) - _2633;
        float _2637 = _2633 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_2632 > _2637) || ((_2632 < _2635) || ((_2631 > _2637) || ((_2631 < _2635) || ((_2630 < _2635) || (_2630 > _2637))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2841 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2632, cbModelParam._m0[9u].z, fma(_2631, cbModelParam._m0[9u].y, _2630 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2632, cbModelParam._m0[10u].z, fma(_2631, cbModelParam._m0[10u].y, _2630 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2632, cbModelParam._m0[11u].z, fma(_2631, cbModelParam._m0[11u].y, _2630 * cbModelParam._m0[11u].x))), _1690);
            frontier_phi_15_39_ladder = _2841.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _2841.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _2841.x * cbModelParam._m0[1u].y;
        }
        _1770 = frontier_phi_15_39_ladder_2;
        _1772 = frontier_phi_15_39_ladder_1;
        _1774 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1758 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_877, _878, _879), _1690);
        _1770 = _1758.x * cbModelParam._m0[1u].y;
        _1772 = _1758.y * cbModelParam._m0[1u].y;
        _1774 = _1758.z * cbModelParam._m0[1u].y;
    }
    float _1778 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _695);
    float _1779 = isnan(_1778) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1778 : min(cbModelParam._m0[25u].w, _1778));
    float _1868;
    float _1870;
    float _1872;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1832 = fma(_944, cbModelParam._m0[21u].z, fma(_940, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _936)) + cbModelParam._m0[21u].w;
        float _1836 = fma(_944, cbModelParam._m0[22u].z, fma(_940, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _936)) + cbModelParam._m0[22u].w;
        float _1840 = fma(_944, cbModelParam._m0[23u].z, fma(_940, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _936)) + cbModelParam._m0[23u].w;
        float _1843 = fma(_879, cbModelParam._m0[21u].z, fma(_878, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _877));
        float _1846 = fma(_879, cbModelParam._m0[22u].z, fma(_878, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _877));
        float _1849 = fma(_879, cbModelParam._m0[23u].z, fma(_878, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _877));
        float _2210;
        if (_1843 > 0.0)
        {
            _2210 = abs((1.0 - _1832) / _1843);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1843 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1832 + 1.0) / _1843);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2210 = frontier_phi_27_23_ladder;
        }
        float _2650;
        if (_1846 > 0.0)
        {
            _2650 = abs((1.0 - _1836) / _1846);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1846 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1836 + 1.0) / _1846);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _2650 = frontier_phi_41_34_ladder;
        }
        float _2902;
        if (_1849 > 0.0)
        {
            _2902 = abs((1.0 - _1840) / _1849);
        }
        else
        {
            float frontier_phi_56_50_ladder;
            if (_1849 < 0.0)
            {
                frontier_phi_56_50_ladder = abs((_1840 + 1.0) / _1849);
            }
            else
            {
                frontier_phi_56_50_ladder = 5000.0;
            }
            _2902 = frontier_phi_56_50_ladder;
        }
        float _2904 = isnan(_2650) ? _2210 : (isnan(_2210) ? _2650 : min(_2210, _2650));
        float _2905 = isnan(_2902) ? _2904 : (isnan(_2904) ? _2902 : min(_2904, _2902));
        float _2909 = (_2905 * _1843) + _1832;
        float _2910 = (_2905 * _1846) + _1836;
        float _2911 = (_2905 * _1849) + _1840;
        float _2912 = _2905 * 9.9999997473787516355514526367188e-05;
        float _2913 = (-1.0) - _2912;
        float _2915 = _2912 + 1.0;
        float frontier_phi_24_56_ladder;
        float frontier_phi_24_56_ladder_1;
        float frontier_phi_24_56_ladder_2;
        if ((_2911 > _2915) || ((_2911 < _2913) || ((_2910 > _2915) || ((_2910 < _2913) || ((_2909 < _2913) || (_2909 > _2915))))))
        {
            frontier_phi_24_56_ladder = 0.0;
            frontier_phi_24_56_ladder_1 = 0.0;
            frontier_phi_24_56_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3182 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2911, cbModelParam._m0[17u].z, fma(_2910, cbModelParam._m0[17u].y, _2909 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2911, cbModelParam._m0[18u].z, fma(_2910, cbModelParam._m0[18u].y, _2909 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2911, cbModelParam._m0[19u].z, fma(_2910, cbModelParam._m0[19u].y, _2909 * cbModelParam._m0[19u].x))), _1779);
            frontier_phi_24_56_ladder = _3182.y * cbModelParam._m0[1u].z;
            frontier_phi_24_56_ladder_1 = _3182.z * cbModelParam._m0[1u].z;
            frontier_phi_24_56_ladder_2 = _3182.x * cbModelParam._m0[1u].z;
        }
        _1868 = frontier_phi_24_56_ladder_2;
        _1870 = frontier_phi_24_56_ladder;
        _1872 = frontier_phi_24_56_ladder_1;
    }
    else
    {
        vec4 _1852 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_877, _878, _879), _1779);
        _1868 = _1852.x * cbModelParam._m0[1u].z;
        _1870 = _1852.y * cbModelParam._m0[1u].z;
        _1872 = _1852.z * cbModelParam._m0[1u].z;
    }
    float _1884 = ((((1.0 - _905) * ((_893 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_905 * _893)) * _869;
    float _1885 = _1884 * ((cbModelParam._m0[1u].w * (_1868 - _1770)) + _1770);
    float _1886 = _1884 * ((cbModelParam._m0[1u].w * (_1870 - _1772)) + _1772);
    float _1887 = _1884 * ((cbModelParam._m0[1u].w * (_1872 - _1774)) + _1774);
    float _1890 = fma(_1887, cbSceneParam._m0[89u].z, fma(_1886, cbSceneParam._m0[89u].y, _1885 * cbSceneParam._m0[89u].x));
    float _1893 = fma(_1887, cbSceneParam._m0[90u].z, fma(_1886, cbSceneParam._m0[90u].y, _1885 * cbSceneParam._m0[90u].x));
    float _1896 = fma(_1887, cbSceneParam._m0[91u].z, fma(_1886, cbSceneParam._m0[91u].y, _1885 * cbSceneParam._m0[91u].x));
    float _1907 = _766 / cbSceneParam._m0[86u].x;
    float _1915 = (cbSceneParam._m0[88u].y * (1.0 - _695)) + cbSceneParam._m0[88u].z;
    float _4236 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _1917 = (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * 5.0;
    float _1922 = (_892 * cbMtdParam._m0[11u].w) * dot(vec3(_802, _803, _804), vec3(1.0, 0.0, 0.0));
    vec4 _1932 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1922 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1922 + _1907) * cbSceneParam._m0[86u].x, _767), _1917).w) + _1907) * cbSceneParam._m0[86u].x, _767), _1917);
    float _1948 = 1.0 - _1932.w;
    vec4 _1956 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_766, _767));
    float _1958 = _1956.w;
    float _1970 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1958);
    float _1971 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1958);
    float _1972 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1958);
    uint _1973 = _844 + 5u;
    uvec4 _1976 = floatBitsToUint(cbInstanceData._m0[_1973]);
    uint _1978 = _1976.x * 14u;
    uint _1979 = _1978 + 13u;
    float _1984 = _869 + (-1.0);
    float _1987 = (cbLight._m0[_1979].x * _1984) + 1.0;
    float _1988 = (cbLight._m0[_1979].y * _1984) + 1.0;
    uint _1989 = _1978 + 5u;
    float _1995 = isnan(1.0) ? _1988 : (isnan(_1988) ? 1.0 : min(_1988, 1.0));
    uint _1999 = _1978 + 4u;
    float _2009 = isnan(1.0) ? _1987 : (isnan(_1987) ? 1.0 : min(_1987, 1.0));
    uint _2013 = _1978 | 1u;
    float _2024 = dot(vec3(cbLight._m0[_1978].xyz), vec3(_802, _803, _804));
    float _2027 = dot(vec3(cbLight._m0[_2013].xyz), vec3(_802, _803, _804));
    float _4257 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
    float _4268 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
    float _2032 = (isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0))) * 0.3183098733425140380859375;
    float _2034 = (isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0))) * 0.3183098733425140380859375;
    float _2041 = ((cbLight._m0[_1989].x * _1995) * _2034) + (((cbLight._m0[_1999].x * _1970) * _2009) * _2032);
    float _2042 = ((_1995 * cbLight._m0[_1989].y) * _2034) + (((cbLight._m0[_1999].y * _1971) * _2009) * _2032);
    float _2043 = ((_1995 * cbLight._m0[_1989].z) * _2034) + (((cbLight._m0[_1999].z * _1972) * _2009) * _2032);
    uint _2045 = _1978 + 8u;
    float _2058 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1978].w)) * _695) * 0.949999988079071044921875);
    float _2059 = _2058 * _2058;
    float _2060 = cbLight._m0[_1978].x + _759;
    float _2061 = cbLight._m0[_1978].y + _760;
    float _2062 = cbLight._m0[_1978].z + _761;
    float _2066 = inversesqrt(dot(vec3(_2060, _2061, _2062), vec3(_2060, _2061, _2062)));
    float _2067 = _2066 * _2060;
    float _2068 = _2066 * _2061;
    float _2069 = _2066 * _2062;
    float _2070 = dot(vec3(_802, _803, _804), vec3(cbLight._m0[_1978].xyz));
    float _4279 = isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0));
    float _2073 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
    float _4290 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
    float _2074 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
    float _2075 = dot(vec3(_802, _803, _804), vec3(_2067, _2068, _2069));
    float _4301 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
    float _2078 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
    float _2079 = dot(vec3(cbLight._m0[_1978].xyz), vec3(_2067, _2068, _2069));
    float _4312 = isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0));
    float _2083 = _2059 * _2059;
    float _2087 = ((_2078 * _2078) * (_2083 + (-1.0))) + 1.0;
    float _2098 = (exp2(log2(1.0 - (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2099 = 1.0 - _2059;
    float _2110 = (0.5 / (((_2074 * ((_2073 * _2099) + _2059)) + 9.9999999392252902907785028219223e-09) + (((_2074 * _2099) + _2059) * _2073))) * _2073;
    float _4323 = isnan(0.0) ? _2110 : (isnan(_2110) ? 0.0 : max(_2110, 0.0));
    float _2112 = (isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0))) * (_2083 / ((_2087 * _2087) * 3.141590118408203125));
    uint _2126 = _1978 + 9u;
    float _2137 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2013].w)) * _695) * 0.949999988079071044921875);
    float _2138 = _2137 * _2137;
    float _2139 = cbLight._m0[_2013].x + _759;
    float _2140 = cbLight._m0[_2013].y + _760;
    float _2141 = cbLight._m0[_2013].z + _761;
    float _2145 = inversesqrt(dot(vec3(_2139, _2140, _2141), vec3(_2139, _2140, _2141)));
    float _2146 = _2145 * _2139;
    float _2147 = _2145 * _2140;
    float _2148 = _2145 * _2141;
    float _2149 = dot(vec3(_802, _803, _804), vec3(cbLight._m0[_2013].xyz));
    float _4334 = isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0));
    float _2152 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
    float _2153 = dot(vec3(_802, _803, _804), vec3(_2146, _2147, _2148));
    float _4345 = isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0));
    float _2156 = isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0));
    float _2157 = dot(vec3(cbLight._m0[_2013].xyz), vec3(_2146, _2147, _2148));
    float _4356 = isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0));
    float _2161 = _2138 * _2138;
    float _2165 = ((_2156 * _2156) * (_2161 + (-1.0))) + 1.0;
    float _2174 = (exp2(log2(1.0 - (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2175 = 1.0 - _2138;
    float _2185 = (0.5 / (((_2074 * ((_2152 * _2175) + _2138)) + 9.9999999392252902907785028219223e-09) + (((_2074 * _2175) + _2138) * _2152))) * _2152;
    float _4367 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
    float _2187 = (isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0))) * (_2161 / ((_2165 * _2165) * 3.141590118408203125));
    float _2197 = (((_2174 * cbLight._m0[_2126].x) * _2187) * _1995) + ((((cbLight._m0[_2045].x * _1970) * _2098) * _2112) * _2009);
    float _2198 = (((_2174 * cbLight._m0[_2126].y) * _2187) * _1995) + ((((cbLight._m0[_2045].y * _1971) * _2098) * _2112) * _2009);
    float _2199 = (((_2174 * cbLight._m0[_2126].z) * _2187) * _1995) + ((((cbLight._m0[_2045].z * _1972) * _2098) * _2112) * _2009);
    float _2313;
    float _2315;
    float _2317;
    float _2319;
    float _2321;
    float _2323;
    if (_1976.y == 0u)
    {
        float _2254 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2255 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2254;
        float _2256 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2254;
        float _2257 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2254;
        uvec4 _2269 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2270 = _2269.x;
        uint _2281 = uint((float(_2269.y) * floor(float(uint(cbSceneParam._m0[85u].y * _767) / _2270))) + floor(float(uint(cbSceneParam._m0[85u].x * _766) / _2270)));
        float _2291 = (log2(_2257 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2292 = isnan(0.0) ? _2291 : (isnan(_2291) ? 0.0 : max(_2291, 0.0));
        uint _2295 = uint(isnan(14.0) ? _2292 : (isnan(_2292) ? 14.0 : min(_2292, 14.0)));
        uvec4 _2300 = texelFetch(g_lightClusterGridBuffer, int(((_2295 << 2u) + (_2281 << 6u)) >> 2u));
        uint _2301 = _2300.x;
        uint _2302 = _2269.z;
        float _2447;
        float _2449;
        float _2451;
        float _2453;
        float _2455;
        float _2457;
        if (((((1u << ((_2302 >> 4u) & 15u)) + 4294967295u) & _2301) == 0u) || ((_2302 & 240u) == 0u))
        {
            _2447 = 0.0;
            _2449 = 0.0;
            _2451 = 0.0;
            _2453 = 0.0;
            _2455 = 0.0;
            _2457 = 0.0;
        }
        else
        {
            float _2448;
            float _2450;
            float _2452;
            float _2454;
            float _2456;
            float _2458;
            float _2687 = 0.0;
            float _2688 = 0.0;
            float _2689 = 0.0;
            float _2690 = 0.0;
            float _2691 = 0.0;
            float _2692 = 0.0;
            uint _2693 = 0u;
            uint _2702;
            bool _2703;
            for (;;)
            {
                _2702 = texelFetch(g_lightClassification, int((((_2295 << 5u) + (_2281 << 9u)) + (_2693 << 2u)) >> 2u)).x;
                _2703 = _2702 == 0u;
                float frontier_phi_52_pred;
                float frontier_phi_52_pred_1;
                float frontier_phi_52_pred_2;
                float frontier_phi_52_pred_3;
                float frontier_phi_52_pred_4;
                float frontier_phi_52_pred_5;
                if (_2703)
                {
                    frontier_phi_52_pred = _2689;
                    frontier_phi_52_pred_1 = _2692;
                    frontier_phi_52_pred_2 = _2691;
                    frontier_phi_52_pred_3 = _2690;
                    frontier_phi_52_pred_4 = _2688;
                    frontier_phi_52_pred_5 = _2687;
                }
                else
                {
                    float _2945;
                    float _2946;
                    float _2947;
                    float _2948;
                    float _2949;
                    float _2950;
                    uint _2951;
                    _2945 = _2687;
                    _2946 = _2688;
                    _2947 = _2689;
                    _2948 = _2690;
                    _2949 = _2691;
                    _2950 = _2692;
                    _2951 = _2702;
                    float _2850;
                    float _2851;
                    float _2852;
                    float _2853;
                    float _2854;
                    float _2855;
                    for (;;)
                    {
                        uint _2955 = uint(findLSB(_2951)) + (_2693 << 5u);
                        uint _2952 = (_2951 + 4294967295u) & _2951;
                        uint _2957 = _2955 * 48u;
                        vec4 _2971 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2957)).x, texelFetch(g_PointLightRenderingBuffer, int(_2957 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2957 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2957 + 3u)).x));
                        uint _2977 = (_2955 * 48u) + 4u;
                        vec4 _2990 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2977)).x, texelFetch(g_PointLightRenderingBuffer, int(_2977 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2977 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2977 + 3u)).x));
                        uint _2996 = (_2955 * 48u) + 8u;
                        vec3 _3007 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2996)).x, texelFetch(g_PointLightRenderingBuffer, int(_2996 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2996 + 2u)).x));
                        float _3011 = _2971.x - _2255;
                        float _3012 = _2971.y - _2256;
                        float _3013 = _2971.z - _2257;
                        float _3014 = dot(vec3(_3011, _3012, _3013), vec3(_3011, _3012, _3013));
                        float _3017 = inversesqrt(_3014);
                        float _3018 = _3017 * _3011;
                        float _3019 = _3017 * _3012;
                        float _3020 = _3017 * _3013;
                        float _3021 = dot(vec3(_825, _828, _831), vec3(_3018, _3019, _3020));
                        float _3026 = 1.0 - (_3014 * _2971.w);
                        float _4388 = isnan(0.0) ? _3026 : (isnan(_3026) ? 0.0 : max(_3026, 0.0));
                        float _3027 = isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0));
                        float _3028 = sqrt(_3014) * _2990.w;
                        float _3031 = 1.39999997615814208984375 / (_3028 + 1.39999997615814208984375);
                        float _3032 = _3031 * _3031;
                        float _3035 = ((1.0 - _3032) * _3021) + _3032;
                        float _3038 = _3028 * _3028;
                        float _3042 = ((isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0))) * _3027) / ((_3038 * 0.699999988079071044921875) + 1.0);
                        float _3046 = (-0.0) - _2255;
                        float _3047 = (-0.0) - _2256;
                        float _3048 = (-0.0) - _2257;
                        float _3052 = inversesqrt(dot(vec3(_3046, _3047, _3048), vec3(_3046, _3047, _3048)));
                        float _3053 = _3052 * _3046;
                        float _3054 = _3052 * _3047;
                        float _3055 = _3052 * _3048;
                        float _3063 = exp2(log2(1.0 / ((_3038 * 3.5) + 5.0)) * 0.25);
                        float _3064 = 1.0 - _893;
                        float _3071 = sqrt(1.0 - ((1.0 - (_3064 * _3064)) * (1.0 - (_3063 * _3063))));
                        float _3072 = _3071 * _3071;
                        float _3073 = _3072 * _3072;
                        float _3074 = _3053 + _3018;
                        float _3075 = _3054 + _3019;
                        float _3076 = _3055 + _3020;
                        float _3080 = inversesqrt(dot(vec3(_3074, _3075, _3076), vec3(_3074, _3075, _3076)));
                        float _3084 = dot(vec3(_825, _828, _831), vec3(_3053, _3054, _3055));
                        float _4404 = isnan(0.0) ? _3084 : (isnan(_3084) ? 0.0 : max(_3084, 0.0));
                        float _3087 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
                        float _3088 = dot(vec3(_825, _828, _831), vec3(_3080 * _3074, _3080 * _3075, _3080 * _3076));
                        float _4415 = isnan(0.0) ? _3088 : (isnan(_3088) ? 0.0 : max(_3088, 0.0));
                        float _3091 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
                        float _3095 = ((_3091 * _3091) * (_3073 + (-1.0))) + 1.0;
                        float _3096 = _3031 * _3072;
                        float _3097 = _3096 * _3096;
                        float _3100 = ((1.0 - _3097) * _3021) + _3097;
                        float _4426 = isnan(0.0) ? _3100 : (isnan(_3100) ? 0.0 : max(_3100, 0.0));
                        float _3101 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
                        float _3102 = 1.0 - _3072;
                        float _3112 = (0.5 / (((_3101 * ((_3087 * _3102) + _3072)) + 9.9999999392252902907785028219223e-09) + (((_3101 * _3102) + _3072) * _3087))) * _3101;
                        float _4437 = isnan(0.0) ? _3112 : (isnan(_3112) ? 0.0 : max(_3112, 0.0));
                        float _3123 = (((_3073 * 3.1415927410125732421875) * (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0)))) / ((_3095 * _3095) * ((_3038 * 2.1991131305694580078125) + 3.141590118408203125))) * _3027;
                        _2853 = (_3042 * _2990.x) + _2948;
                        _2854 = (_3042 * _2990.y) + _2949;
                        _2855 = (_3042 * _2990.z) + _2950;
                        _2850 = (_3123 * _3007.x) + _2945;
                        _2851 = (_3123 * _3007.y) + _2946;
                        _2852 = (_3123 * _3007.z) + _2947;
                        if (_2952 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2945 = _2850;
                            _2946 = _2851;
                            _2947 = _2852;
                            _2948 = _2853;
                            _2949 = _2854;
                            _2950 = _2855;
                            _2951 = _2952;
                        }
                    }
                    frontier_phi_52_pred = _2852;
                    frontier_phi_52_pred_1 = _2855;
                    frontier_phi_52_pred_2 = _2854;
                    frontier_phi_52_pred_3 = _2853;
                    frontier_phi_52_pred_4 = _2851;
                    frontier_phi_52_pred_5 = _2850;
                }
                _2452 = frontier_phi_52_pred;
                _2458 = frontier_phi_52_pred_1;
                _2456 = frontier_phi_52_pred_2;
                _2454 = frontier_phi_52_pred_3;
                _2450 = frontier_phi_52_pred_4;
                _2448 = frontier_phi_52_pred_5;
                uint _2694 = _2693 + 1u;
                if (_2694 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2687 = _2448;
                    _2688 = _2450;
                    _2689 = _2452;
                    _2690 = _2454;
                    _2691 = _2456;
                    _2692 = _2458;
                    _2693 = _2694;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2447 = _2448;
            _2449 = _2450;
            _2451 = _2452;
            _2453 = _2454;
            _2455 = _2456;
            _2457 = _2458;
        }
        uvec4 _2461 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2462 = _2461.z;
        uint _2464 = (_2462 >> 8u) & 15u;
        float _2655;
        float _2657;
        float _2659;
        float _2661;
        float _2663;
        float _2665;
        if (((4294967295u << _2464) & _2301) == 0u)
        {
            _2655 = _2447;
            _2657 = _2449;
            _2659 = _2451;
            _2661 = _2453;
            _2663 = _2455;
            _2665 = _2457;
        }
        else
        {
            float _2680 = inversesqrt(dot(vec3(_2255, _2256, _2257), vec3(_2255, _2256, _2257)));
            float _2681 = _2680 * _2255;
            float _2682 = _2680 * _2256;
            float _2683 = _2680 * _2257;
            float frontier_phi_43_44_ladder;
            float frontier_phi_43_44_ladder_1;
            float frontier_phi_43_44_ladder_2;
            float frontier_phi_43_44_ladder_3;
            float frontier_phi_43_44_ladder_4;
            float frontier_phi_43_44_ladder_5;
            if (_2464 < ((_2462 >> 12u) & 15u))
            {
                float _2656;
                float _2658;
                float _2660;
                float _2662;
                float _2664;
                float _2666;
                float _2928 = _2447;
                float _2929 = _2449;
                float _2930 = _2451;
                float _2931 = _2453;
                float _2932 = _2455;
                float _2933 = _2457;
                uint _2934 = _2464;
                uint _2943;
                bool _2944;
                for (;;)
                {
                    _2943 = texelFetch(g_lightClassification, int((((_2295 << 5u) + (_2281 << 9u)) + (_2934 << 2u)) >> 2u)).x;
                    _2944 = _2943 == 0u;
                    float frontier_phi_63_pred;
                    float frontier_phi_63_pred_1;
                    float frontier_phi_63_pred_2;
                    float frontier_phi_63_pred_3;
                    float frontier_phi_63_pred_4;
                    float frontier_phi_63_pred_5;
                    if (_2944)
                    {
                        frontier_phi_63_pred = _2933;
                        frontier_phi_63_pred_1 = _2932;
                        frontier_phi_63_pred_2 = _2931;
                        frontier_phi_63_pred_3 = _2930;
                        frontier_phi_63_pred_4 = _2929;
                        frontier_phi_63_pred_5 = _2928;
                    }
                    else
                    {
                        float _3187;
                        float _3188;
                        float _3189;
                        float _3190;
                        float _3191;
                        float _3192;
                        float _3480;
                        float _3481;
                        float _3482;
                        float _3483;
                        float _3484;
                        float _3485;
                        float _3200 = _2928;
                        float _3201 = _2929;
                        float _3202 = _2930;
                        float _3203 = _2931;
                        float _3204 = _2932;
                        float _3205 = _2933;
                        uint _3206 = _2943;
                        uint _3207;
                        vec4 _3232;
                        float _3233;
                        vec4 _3248;
                        vec3 _3260;
                        vec4 _3275;
                        vec4 _3290;
                        float _3336;
                        bool _3337;
                        for (;;)
                        {
                            uint _3217 = ((_2934 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3206));
                            _3207 = (_3206 + 4294967295u) & _3206;
                            uint _3219 = _3217 * 40u;
                            _3232 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3219)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3219 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3219 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3219 + 3u)).x));
                            _3233 = _3232.w;
                            uint _3235 = (_3217 * 40u) + 4u;
                            _3248 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3235)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3235 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3235 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3235 + 3u)).x));
                            uint _3250 = (_3217 * 40u) + 8u;
                            _3260 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3250)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3250 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3250 + 2u)).x));
                            uint _3262 = (_3217 * 40u) + 16u;
                            _3275 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3262)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3262 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3262 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3262 + 3u)).x));
                            uint _3277 = (_3217 * 40u) + 20u;
                            _3290 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3277)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3277 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3277 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3277 + 3u)).x));
                            uint _3292 = (_3217 * 40u) + 24u;
                            vec4 _3305 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3292)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3292 + 3u)).x));
                            uint _3311 = (_3217 * 40u) + 28u;
                            vec4 _3324 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3311)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3311 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3311 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3311 + 3u)).x));
                            _3336 = fma(_2257, _3324.z, fma(_2256, _3324.y, _3324.x * _2255)) + _3324.w;
                            _3337 = !((fma(_2257, _3305.z, fma(_2256, _3305.y, _3305.x * _2255)) + _3305.w) <= 0.0);
                            float frontier_phi_69_pred;
                            float frontier_phi_69_pred_1;
                            float frontier_phi_69_pred_2;
                            float frontier_phi_69_pred_3;
                            float frontier_phi_69_pred_4;
                            float frontier_phi_69_pred_5;
                            if (_3337)
                            {
                                float _3364 = _3232.x - _2255;
                                float _3365 = _3232.y - _2256;
                                float _3366 = _3232.z - _2257;
                                float _3367 = dot(vec3(_3364, _3365, _3366), vec3(_3364, _3365, _3366));
                                float _3370 = inversesqrt(_3367);
                                float _3371 = _3370 * _3364;
                                float _3372 = _3370 * _3365;
                                float _3373 = _3370 * _3366;
                                float _3377 = 1.0 - (_3367 / (_3233 * _3233));
                                float _4448 = isnan(0.0) ? _3377 : (isnan(_3377) ? 0.0 : max(_3377, 0.0));
                                float _3378 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
                                float _3382 = sqrt(_3367) * _3248.w;
                                float _3384 = 1.39999997615814208984375 / (_3382 + 1.39999997615814208984375);
                                float _3385 = _3384 * _3384;
                                float _3388 = ((1.0 - _3385) * dot(vec3(_3371, _3372, _3373), vec3(_825, _828, _831))) + _3385;
                                float _3391 = _3382 * _3382;
                                float _3395 = (fma(_2257, _3275.z, fma(_2256, _3275.y, _3275.x * _2255)) + _3275.w) / _3336;
                                float _3396 = (fma(_2257, _3290.z, fma(_2256, _3290.y, _3290.x * _2255)) + _3290.w) / _3336;
                                float _3400 = 1.0 - dot(vec2(_3395, _3396), vec2(_3395, _3396));
                                float _4464 = isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0));
                                float _3401 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
                                float _3402 = _3401 * (((isnan(0.0) ? _3388 : (isnan(_3388) ? 0.0 : max(_3388, 0.0))) * _3378) / ((_3391 * 0.699999988079071044921875) + 1.0));
                                float _3414 = exp2(log2(1.0 / ((_3391 * 3.5) + 5.0)) * 0.25);
                                float _3415 = 1.0 - _893;
                                float _3422 = sqrt(1.0 - ((1.0 - (_3415 * _3415)) * (1.0 - (_3414 * _3414))));
                                float _3423 = _3422 * _3422;
                                float _3424 = _3423 * _3423;
                                float _3425 = _3371 - _2681;
                                float _3426 = _3372 - _2682;
                                float _3427 = _3373 - _2683;
                                float _3431 = inversesqrt(dot(vec3(_3425, _3426, _3427), vec3(_3425, _3426, _3427)));
                                float _3435 = dot(vec3(_825, _828, _831), vec3((-0.0) - _2681, (-0.0) - _2682, (-0.0) - _2683));
                                float _4475 = isnan(0.0) ? _3435 : (isnan(_3435) ? 0.0 : max(_3435, 0.0));
                                float _3438 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
                                float _3439 = dot(vec3(_825, _828, _831), vec3(_3431 * _3425, _3431 * _3426, _3431 * _3427));
                                float _4486 = isnan(0.0) ? _3439 : (isnan(_3439) ? 0.0 : max(_3439, 0.0));
                                float _3442 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
                                float _3446 = ((_3442 * _3442) * (_3424 + (-1.0))) + 1.0;
                                float _3447 = _3384 * _3423;
                                float _3448 = _3447 * _3447;
                                float _3454 = ((1.0 - _3448) * dot(vec3(_825, _828, _831), vec3(_3371, _3372, _3373))) + _3448;
                                float _4497 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                                float _3455 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
                                float _3456 = 1.0 - _3423;
                                float _3466 = (0.5 / (((_3455 * ((_3438 * _3456) + _3423)) + 9.9999999392252902907785028219223e-09) + (((_3455 * _3456) + _3423) * _3438))) * _3455;
                                float _4508 = isnan(0.0) ? _3466 : (isnan(_3466) ? 0.0 : max(_3466, 0.0));
                                float _3476 = (_3401 * _3378) * (((_3424 * 3.1415927410125732421875) * (isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0)))) / ((_3446 * _3446) * ((_3391 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_69_pred = _3476 * _3260.z;
                                frontier_phi_69_pred_1 = _3402 * _3248.z;
                                frontier_phi_69_pred_2 = _3402 * _3248.y;
                                frontier_phi_69_pred_3 = _3402 * _3248.x;
                                frontier_phi_69_pred_4 = _3476 * _3260.y;
                                frontier_phi_69_pred_5 = _3476 * _3260.x;
                            }
                            else
                            {
                                frontier_phi_69_pred = 0.0;
                                frontier_phi_69_pred_1 = 0.0;
                                frontier_phi_69_pred_2 = 0.0;
                                frontier_phi_69_pred_3 = 0.0;
                                frontier_phi_69_pred_4 = 0.0;
                                frontier_phi_69_pred_5 = 0.0;
                            }
                            _3482 = frontier_phi_69_pred;
                            _3485 = frontier_phi_69_pred_1;
                            _3484 = frontier_phi_69_pred_2;
                            _3483 = frontier_phi_69_pred_3;
                            _3481 = frontier_phi_69_pred_4;
                            _3480 = frontier_phi_69_pred_5;
                            _3190 = _3483 + _3203;
                            _3191 = _3484 + _3204;
                            _3192 = _3485 + _3205;
                            _3187 = _3480 + _3200;
                            _3188 = _3481 + _3201;
                            _3189 = _3482 + _3202;
                            if (_3207 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3200 = _3187;
                                _3201 = _3188;
                                _3202 = _3189;
                                _3203 = _3190;
                                _3204 = _3191;
                                _3205 = _3192;
                                _3206 = _3207;
                                continue;
                            }
                        }
                        frontier_phi_63_pred = _3192;
                        frontier_phi_63_pred_1 = _3191;
                        frontier_phi_63_pred_2 = _3190;
                        frontier_phi_63_pred_3 = _3189;
                        frontier_phi_63_pred_4 = _3188;
                        frontier_phi_63_pred_5 = _3187;
                    }
                    _2666 = frontier_phi_63_pred;
                    _2664 = frontier_phi_63_pred_1;
                    _2662 = frontier_phi_63_pred_2;
                    _2660 = frontier_phi_63_pred_3;
                    _2658 = frontier_phi_63_pred_4;
                    _2656 = frontier_phi_63_pred_5;
                    uint _2935 = _2934 + 1u;
                    if (_2935 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2928 = _2656;
                        _2929 = _2658;
                        _2930 = _2660;
                        _2931 = _2662;
                        _2932 = _2664;
                        _2933 = _2666;
                        _2934 = _2935;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_43_44_ladder = _2666;
                frontier_phi_43_44_ladder_1 = _2656;
                frontier_phi_43_44_ladder_2 = _2664;
                frontier_phi_43_44_ladder_3 = _2662;
                frontier_phi_43_44_ladder_4 = _2660;
                frontier_phi_43_44_ladder_5 = _2658;
            }
            else
            {
                frontier_phi_43_44_ladder = _2457;
                frontier_phi_43_44_ladder_1 = _2447;
                frontier_phi_43_44_ladder_2 = _2455;
                frontier_phi_43_44_ladder_3 = _2453;
                frontier_phi_43_44_ladder_4 = _2451;
                frontier_phi_43_44_ladder_5 = _2449;
            }
            _2655 = frontier_phi_43_44_ladder_1;
            _2657 = frontier_phi_43_44_ladder_5;
            _2659 = frontier_phi_43_44_ladder_4;
            _2661 = frontier_phi_43_44_ladder_3;
            _2663 = frontier_phi_43_44_ladder_2;
            _2665 = frontier_phi_43_44_ladder;
        }
        float _2670 = isnan(1.0) ? _869 : (isnan(_869) ? 1.0 : min(_869, 1.0));
        _2313 = (_2670 * _2661) + _2041;
        _2315 = (_2670 * _2663) + _2042;
        _2317 = (_2670 * _2665) + _2043;
        _2319 = ((_2655 * 0.039999999105930328369140625) * _2670) + _2197;
        _2321 = ((_2657 * 0.039999999105930328369140625) * _2670) + _2198;
        _2323 = ((_2659 * 0.039999999105930328369140625) * _2670) + _2199;
    }
    else
    {
        _2313 = _2041;
        _2315 = _2042;
        _2317 = _2043;
        _2319 = _2197;
        _2321 = _2198;
        _2323 = _2199;
    }
    float _2343 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2344 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2345 = cbSceneParam._m0[86u].x * ((_766 / cbSceneParam._m0[86u].x) + ((_892 * cbMtdParam._m0[11u].y) * dot(vec3(_802, _803, _804), vec3(_217, _218, _219))));
    float _2346 = isnan(_2343) ? _2345 : (isnan(_2345) ? _2343 : min(_2345, _2343));
    float _2347 = isnan(_2344) ? _767 : (isnan(_767) ? _2344 : min(_767, _2344));
    vec4 _2349 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2346, _2347), 0.0);
    float _2351 = _2349.x;
    bool _2371 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2351)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2351))) > _703;
    float _2372 = _2371 ? _2346 : _766;
    float _2373 = _2371 ? _2347 : _767;
    vec4 _2375 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2372, _2373));
    vec4 _2380 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2372, _2373));
    float _2382 = _2380.x;
    bool _2387 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2396 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2402 = (_2387 ? (_2396 / (cbSceneParam._m0[2u].x - _2382)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2382))) - _703;
    float _2404 = cbMtdParam._m0[24u].y + cbMtdParam._m0[22u].w;
    float _2405 = cbMtdParam._m0[24u].z + cbMtdParam._m0[23u].x;
    float _2406 = cbMtdParam._m0[24u].w + cbMtdParam._m0[23u].y;
    bool _2412 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2416 = (isnan(_2402) ? 0.0 : (isnan(0.0) ? _2402 : max(0.0, _2402))) * (-1.44269502162933349609375);
    float _4539 = isnan(0.0) ? _855 : (isnan(_855) ? 0.0 : max(_855, 0.0));
    float _4550 = isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0));
    float _4561 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
    float _2550;
    float _2551;
    float _2552;
    if ((1.0 - _665) > 0.00999999977648258209228515625)
    {
        vec4 _2469 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2372, _2373), 0.0);
        float _2471 = _2469.x;
        float _2477 = (_2387 ? (_2396 / (cbSceneParam._m0[2u].x - _2471)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2471))) - _703;
        uint _2483 = floatBitsToUint(cbInstanceData._m0[_1973]).x * 14u;
        uint _2489 = _2483 + 4u;
        float _2498 = dot(vec3(cbLight._m0[_2483].xyz), vec3(_238, _239, _240));
        float _2506 = dot(vec3((-0.0) - _759, (-0.0) - _760, (-0.0) - _761), vec3((-0.0) - _238, (-0.0) - _239, (-0.0) - _240));
        float _2511 = ((isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2498 : (isnan(_2498) ? 0.001000000047497451305389404296875 : max(_2498, 0.001000000047497451305389404296875)))) + 1.0;
        float _2513 = (-0.0) - ((isnan(_2477) ? 0.0 : (isnan(0.0) ? _2477 : max(0.0, _2477))) * _2511);
        _2550 = _2412 ? 0.0 : ((((cbMtdParam._m0[22u].w * 0.079577468335628509521484375) * cbLight._m0[_2489].x) / ((_2511 * _2404) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2404 * 1.44269502162933349609375) * _2513)));
        _2551 = _2412 ? 0.0 : ((((cbMtdParam._m0[23u].x * 0.079577468335628509521484375) * cbLight._m0[_2489].y) / ((_2511 * _2405) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2405 * 1.44269502162933349609375) * _2513)));
        _2552 = _2412 ? 0.0 : ((((cbMtdParam._m0[23u].y * 0.079577468335628509521484375) * cbLight._m0[_2489].z) / ((_2511 * _2406) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2406 * 1.44269502162933349609375) * _2513)));
    }
    else
    {
        _2550 = 0.0;
        _2551 = 0.0;
        _2552 = 0.0;
    }
    float _2569 = 0.959999978542327880859375 - (exp2(log2(1.0 - _884) * 5.0) * 0.959999978542327880859375);
    float _2570 = (_2550 + ((exp2(_2416 * (_2412 ? 0.0 : _2404)) * _2375.x) * cbSceneParam._m0[72u].w)) * _2569;
    float _2571 = (_2551 + ((exp2(_2416 * (_2412 ? 0.0 : _2405)) * _2375.y) * cbSceneParam._m0[72u].w)) * _2569;
    float _2572 = (_2552 + ((exp2(_2416 * (_2412 ? 0.0 : _2406)) * _2375.z) * cbSceneParam._m0[72u].w)) * _2569;
    float _2594 = _766 / cbSceneParam._m0[86u].x;
    float _2595 = _767 / cbSceneParam._m0[86u].y;
    vec4 _2609 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2594, _2595, (log2((isnan(cbSceneParam._m0[77u].w) ? _703 : (isnan(_703) ? cbSceneParam._m0[77u].w : min(_703, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2611 = _2609.x;
    float _2612 = _2609.y;
    float _2613 = _2609.z;
    float _2614 = _2609.w;
    float _2743;
    float _2745;
    float _2747;
    float _2749;
    if (_703 > cbSceneParam._m0[78u].w)
    {
        float _2708 = isnan(_703) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _703 : min(cbSceneParam._m0[80u].w, _703));
        float _2709 = _2708 / _703;
        float _2720 = _2709 * _752;
        float _2721 = _753 * _2709;
        float _2722 = (-0.0) - _2721;
        float _2723 = _2709 * _754;
        float _2725 = (cbSceneParam._m0[77u].w * _2722) / _2708;
        float _2726 = _2725 + cbSceneParam._m0[79u].w;
        float _2727 = cbSceneParam._m0[79u].w - _2721;
        float _2733 = sqrt(((_2720 * _2720) + (_2721 * _2721)) + (_2723 * _2723));
        float _2736 = (1.0 - (cbSceneParam._m0[77u].w / _2708)) * _2733;
        float _2741 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2742 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3128;
        if (abs((_2722 - _2725) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3128 = ((((_2726 > 0.0) ? exp2(_2741 * _2726) : (2.0 - exp2(_2742 * _2726))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2736;
        }
        else
        {
            float _2875 = 1.0 / cbSceneParam._m0[80u].x;
            float _2876 = isnan(_2727) ? _2726 : (isnan(_2726) ? _2727 : max(_2726, _2727));
            float _2877 = isnan(_2727) ? _2726 : (isnan(_2726) ? _2727 : min(_2726, _2727));
            float _2886 = isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : min(_2876, 0.0));
            float _2887 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : min(_2877, 0.0));
            _3128 = ((abs(_2733 / _2722) * cbSceneParam._m0[80u].y) * ((((_2886 - _2887) * 2.0) - ((exp2(_2741 * (isnan(0.0) ? _2876 : (isnan(_2876) ? 0.0 : max(_2876, 0.0)))) - exp2(_2741 * (isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0))))) * _2875)) - ((exp2(_2742 * _2886) - exp2(_2742 * _2887)) * _2875))) + (_2736 * cbSceneParam._m0[80u].z);
        }
        vec4 _3130 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2594, _2595, 1.0), 0.0);
        float _3139 = exp2((_3128 * (-1.44269502162933349609375)) * (1.0 - _3130.w));
        float _3140 = log2(_3139);
        float _3156 = log2(_2614);
        _2743 = (exp2(_3156 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].x)) * _3130.x) / cbSceneParam._m0[78u].x)) + _2611;
        _2745 = (exp2(_3156 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].y)) * _3130.y) / cbSceneParam._m0[78u].y)) + _2612;
        _2747 = (exp2(_3156 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3140 * cbSceneParam._m0[78u].z)) * _3130.z) / cbSceneParam._m0[78u].z)) + _2613;
        _2749 = _3139 * _2614;
    }
    else
    {
        _2743 = _2611;
        _2745 = _2612;
        _2747 = _2613;
        _2749 = _2614;
    }
    bool _2761 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2762 = log2(_2749);
    float _2769 = exp2(_2762 * cbSceneParam._m0[78u].x) * ((_2570 + (((((_1884 * _1932.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0))) * _1679) * _1948)) + _2319) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * (_2313 + ((isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0))) * _869))) - _2570) * _665));
    float _2770 = exp2(_2762 * cbSceneParam._m0[78u].y) * ((_2571 + (((((_1884 * _1932.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0))) * _1679) * _1948)) + _2321) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0))) * (_2315 + ((isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))) * _869))) - _2571) * _665));
    float _2771 = exp2(_2762 * cbSceneParam._m0[78u].z) * ((_2572 + (((((_1884 * _1932.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0))) * _1679) * _1948)) + _2323) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * (_2317 + ((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _869))) - _2572) * _665));
    vec4 _2779 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_766, _767));
    float _2781 = _2779.x;
    float _2802 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2781)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2781))) - _703) * 3.0;
    float _4627 = isnan(0.0) ? _2802 : (isnan(_2802) ? 0.0 : max(_2802, 0.0));
    float _2804 = (cbInstanceData._m0[_844 + 6u].w * (isnan(1.0) ? _3779 : (isnan(_3779) ? 1.0 : min(_3779, 1.0)))) * (isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0)));
    float _2813 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2813 * (_2761 ? _2769 : (_2769 + (cbSceneParam._m0[72u].w * _2743)));
    SV_Target.y = _2813 * (_2761 ? _2770 : (_2770 + (cbSceneParam._m0[72u].w * _2745)));
    SV_Target.z = _2813 * (_2761 ? _2771 : (_2771 + (cbSceneParam._m0[72u].w * _2747)));
    SV_Target.w = _2804;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2804;
}


