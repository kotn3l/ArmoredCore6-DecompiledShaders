#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanB_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanB_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in vec4 TEXCOORD[];
layout(location = 4) in vec4 TEXCOORD_7[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec3 TEXCOORD_8;
layout(location = 7) out vec2 TEXCOORD_12;

void main()
{
    precise float _103 = gl_TessCoord.z * POSITION[0u].x;
    precise float _104 = gl_TessCoord.z * POSITION[0u].y;
    precise float _105 = gl_TessCoord.z * POSITION[0u].z;
    precise float _112 = gl_TessCoord.x * POSITION[1u].x;
    precise float _113 = gl_TessCoord.x * POSITION[1u].y;
    precise float _114 = gl_TessCoord.x * POSITION[1u].z;
    precise float _115 = _103 + _112;
    precise float _116 = _104 + _113;
    precise float _117 = _105 + _114;
    precise float _124 = gl_TessCoord.y * POSITION[2u].x;
    precise float _125 = gl_TessCoord.y * POSITION[2u].y;
    precise float _126 = gl_TessCoord.y * POSITION[2u].z;
    precise float _127 = _115 + _124;
    precise float _128 = _116 + _125;
    precise float _129 = _117 + _126;
    precise float _226 = gl_TessCoord.z * TEXCOORD[0u].x;
    precise float _227 = gl_TessCoord.z * TEXCOORD[0u].y;
    precise float _228 = gl_TessCoord.z * TEXCOORD[0u].z;
    precise float _229 = gl_TessCoord.z * TEXCOORD[0u].w;
    precise float _238 = gl_TessCoord.x * TEXCOORD[1u].x;
    precise float _239 = gl_TessCoord.x * TEXCOORD[1u].y;
    precise float _240 = gl_TessCoord.x * TEXCOORD[1u].z;
    precise float _241 = gl_TessCoord.x * TEXCOORD[1u].w;
    precise float _242 = _226 + _238;
    precise float _243 = _227 + _239;
    precise float _244 = _228 + _240;
    precise float _245 = _229 + _241;
    precise float _254 = gl_TessCoord.y * TEXCOORD[2u].x;
    precise float _255 = gl_TessCoord.y * TEXCOORD[2u].y;
    precise float _256 = gl_TessCoord.y * TEXCOORD[2u].z;
    precise float _257 = gl_TessCoord.y * TEXCOORD[2u].w;
    precise float _258 = _242 + _254;
    precise float _259 = _243 + _255;
    precise float _260 = _244 + _256;
    precise float _261 = _245 + _257;
    precise float _270 = gl_TessCoord.z * TEXCOORD_7[0u].x;
    precise float _271 = gl_TessCoord.z * TEXCOORD_7[0u].y;
    precise float _272 = gl_TessCoord.z * TEXCOORD_7[0u].z;
    precise float _273 = gl_TessCoord.z * TEXCOORD_7[0u].w;
    precise float _282 = gl_TessCoord.x * TEXCOORD_7[1u].x;
    precise float _283 = gl_TessCoord.x * TEXCOORD_7[1u].y;
    precise float _284 = gl_TessCoord.x * TEXCOORD_7[1u].z;
    precise float _285 = gl_TessCoord.x * TEXCOORD_7[1u].w;
    precise float _286 = _270 + _282;
    precise float _287 = _271 + _283;
    precise float _288 = _272 + _284;
    precise float _289 = _273 + _285;
    precise float _298 = gl_TessCoord.y * TEXCOORD_7[2u].x;
    precise float _299 = gl_TessCoord.y * TEXCOORD_7[2u].y;
    precise float _300 = gl_TessCoord.y * TEXCOORD_7[2u].z;
    precise float _301 = gl_TessCoord.y * TEXCOORD_7[2u].w;
    precise float _302 = _286 + _298;
    precise float _303 = _287 + _299;
    precise float _304 = _288 + _300;
    precise float _305 = _289 + _301;
    precise float _317 = cbMtdParam._m0[25u].x - cbMtdParam._m0[23u].z;
    precise float _318 = cbMtdParam._m0[25u].z - cbMtdParam._m0[24u].x;
    precise float _319 = _303 * _317;
    precise float _320 = _303 * _318;
    precise float _321 = cbMtdParam._m0[23u].z + _319;
    precise float _322 = cbMtdParam._m0[24u].x + _320;
    precise float _335 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].z;
    precise float _336 = cbMtdParam._m0[19u].w * _335;
    precise float _337 = cbMtdParam._m0[20u].x * _335;
    precise float _338 = _258 + _336;
    precise float _339 = _259 + _337;
    precise float _346 = cbTextureTilingScale._m0[2u].x * _338;
    precise float _347 = cbTextureTilingScale._m0[2u].y * _339;
    precise float _348 = cbTextureTilingScale._m0[2u].z + _346;
    precise float _349 = cbTextureTilingScale._m0[2u].w + _347;
    vec4 _353 = textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_2, SS_BumpMap), vec2(_348, _349), 0.0);
    float _355 = _353.z;
    precise float _356 = _321 * _355;
    precise float _357 = _322 * _355;
    precise float _367 = cbMtdParam._m0[25u].w * cbMtdParam._m0[16u].w;
    precise float _368 = cbMtdParam._m0[26u].y * cbMtdParam._m0[16u].w;
    precise float _369 = _367 - cbMtdParam._m0[25u].w;
    precise float _370 = _368 - cbMtdParam._m0[26u].y;
    precise float _371 = _303 * _369;
    precise float _372 = _303 * _370;
    precise float _373 = cbMtdParam._m0[25u].w + _371;
    precise float _374 = cbMtdParam._m0[26u].y + _372;
    precise float _380 = _335 * cbMtdParam._m0[18u].w;
    precise float _381 = _335 * cbMtdParam._m0[19u].x;
    precise float _386 = _258 * cbMtdParam._m0[22u].y;
    precise float _387 = _259 * cbMtdParam._m0[22u].z;
    precise float _388 = _380 + _386;
    precise float _389 = _381 + _387;
    precise float _396 = _388 * cbTextureTilingScale._m0[0u].x;
    precise float _397 = cbTextureTilingScale._m0[0u].y * _389;
    precise float _398 = cbTextureTilingScale._m0[0u].z + _396;
    precise float _399 = cbTextureTilingScale._m0[0u].w + _397;
    precise float _406 = _335 * cbMtdParam._m0[19u].y;
    precise float _407 = _335 * cbMtdParam._m0[19u].z;
    precise float _408 = _386 + _406;
    precise float _409 = _387 + _407;
    precise float _410 = _408 * cbTextureTilingScale._m0[0u].x;
    precise float _411 = cbTextureTilingScale._m0[0u].y * _409;
    precise float _412 = cbTextureTilingScale._m0[0u].z + _410;
    precise float _413 = cbTextureTilingScale._m0[0u].w + _411;
    precise float _417 = textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(_398, _399), 0.0).w * textureLod(sampler2D(M_Water_oceanB_snp_0_Texture2D_0, SS_BumpMap), vec2(_412, _413), 0.0).w;
    precise float _418 = _373 * _417;
    precise float _419 = _374 * _417;
    precise float _420 = _356 + _418;
    precise float _421 = _357 + _419;
    precise float _436 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _477 = _127 + _420;
    precise float _478 = _129 + _421;
    precise float _484 = _477 - cbvModelParam._m0[8u].x;
    precise float _485 = _478 - cbvModelParam._m0[8u].y;
    precise float _501 = dot(vec2(_484, _485), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _502 = dot(vec2(_484, _485), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _505 = cbMtdParam._m0[25u].y - cbMtdParam._m0[23u].w;
    precise float _506 = _303 * _505;
    precise float _507 = cbMtdParam._m0[23u].w + _506;
    precise float _508 = _507 * _355;
    precise float _510 = cbMtdParam._m0[26u].x * cbMtdParam._m0[16u].w;
    precise float _511 = _510 - cbMtdParam._m0[26u].x;
    precise float _512 = _303 * _511;
    precise float _513 = cbMtdParam._m0[26u].x + _512;
    precise float _514 = _513 * _417;
    precise float _515 = _508 + _514;
    precise float _516 = _128 + _515;
    vec4 _518 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_501, _502), 0.0);
    float _520 = _518.x;
    precise float _521 = _520 * 0.0;
    precise float _522 = _477 + _521;
    precise float _523 = _516 + _520;
    precise float _524 = _478 + _521;
    float _562;
    float _563;
    float _564;
    if (((((dot(vec4(_522, _523, _524, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_522, _523, _524, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_522, _523, _524, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_522, _523, _524, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[73u])) > _436) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[74u])) > _436)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[75u])) > _436)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[76u])) > _436))))
    {
        precise float _545 = _522 - _127;
        precise float _546 = _523 - _128;
        precise float _547 = _524 - _129;
        float _552 = inversesqrt(dot(vec3(_545, _546, _547), vec3(_545, _546, _547)));
        precise float _553 = _545 * _552;
        precise float _554 = _546 * _552;
        precise float _555 = _547 * _552;
        precise float _556 = _553 * cbMtdParam._m0[4u].y;
        precise float _557 = _554 * cbMtdParam._m0[4u].y;
        precise float _558 = _555 * cbMtdParam._m0[4u].y;
        precise float _559 = _127 + _556;
        precise float _560 = _128 + _557;
        precise float _561 = _129 + _558;
        _562 = _559;
        _563 = _560;
        _564 = _561;
    }
    else
    {
        _562 = _522;
        _563 = _523;
        _564 = _524;
    }
    precise float _570 = _562 - cbSceneParam._m0[3u].x;
    precise float _571 = _563 - cbSceneParam._m0[3u].y;
    precise float _572 = _564 - cbSceneParam._m0[3u].z;
    precise float _597 = _570 * cbSceneParam._m0[24u].x;
    precise float _598 = _571 * cbSceneParam._m0[24u].y;
    precise float _599 = _598 + _597;
    precise float _600 = _572 * cbSceneParam._m0[24u].z;
    precise float _601 = _600 + _599;
    precise float _602 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _603 = _602 + _601;
    precise float _604 = _570 * cbSceneParam._m0[25u].x;
    precise float _605 = _571 * cbSceneParam._m0[25u].y;
    precise float _606 = _605 + _604;
    precise float _607 = _572 * cbSceneParam._m0[25u].z;
    precise float _608 = _607 + _606;
    precise float _609 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _610 = _609 + _608;
    precise float _611 = _570 * cbSceneParam._m0[26u].x;
    precise float _612 = _571 * cbSceneParam._m0[26u].y;
    precise float _613 = _612 + _611;
    precise float _614 = _572 * cbSceneParam._m0[26u].z;
    precise float _615 = _614 + _613;
    precise float _616 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _617 = _616 + _615;
    precise float _618 = _570 * cbSceneParam._m0[27u].x;
    precise float _619 = _571 * cbSceneParam._m0[27u].y;
    precise float _620 = _619 + _618;
    precise float _621 = _572 * cbSceneParam._m0[27u].z;
    precise float _622 = _621 + _620;
    precise float _623 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _624 = _623 + _622;
    gl_Position.x = _603;
    gl_Position.y = _610;
    gl_Position.z = _617;
    gl_Position.w = _624;
    POSITION_1.x = _603;
    POSITION_1.y = _610;
    POSITION_1.z = _617;
    POSITION_1.w = _624;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_1.x = _258;
    TEXCOORD_1.y = _259;
    TEXCOORD_1.z = _260;
    TEXCOORD_1.w = _261;
    TEXCOORD_5.x = _302;
    TEXCOORD_5.y = _303;
    TEXCOORD_5.z = _304;
    TEXCOORD_5.w = _305;
    TEXCOORD_8.x = _501;
    TEXCOORD_8.y = _502;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_12.x = _617;
    TEXCOORD_12.y = _624;
    gl_ClipDistance[0u] = dot(vec4(_603, _610, _617, _624), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_603, _610, _617, _624), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


