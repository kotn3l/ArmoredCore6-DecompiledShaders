#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _658;
float _659;
float _660;
float _661;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _139 = texture(sampler2D(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _158 = (cbMtdParam._m0[9u].x + cbMtdParam._m0[11u].z) * _139.x;
    float _159 = (cbMtdParam._m0[9u].y + cbMtdParam._m0[11u].z) * _139.y;
    float _160 = (cbMtdParam._m0[9u].z + cbMtdParam._m0[11u].z) * _139.z;
    float _161 = (cbMtdParam._m0[9u].w + cbMtdParam._m0[11u].z) * _139.w;
    float _162 = _161 * TEXCOORD_1.z;
    vec4 _188 = texture(sampler2D(M_ES2_Emissive_Glow_Addition_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _670 = isnan(0.0) ? _162 : (isnan(_162) ? 0.0 : max(_162, 0.0));
    float _696 = isnan(0.0) ? cbMtdParam._m0[11u].y : (isnan(cbMtdParam._m0[11u].y) ? 0.0 : max(cbMtdParam._m0[11u].y, 0.0));
    float _215 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _256 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _266 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _256);
    float _267 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _256);
    float _268 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _256);
    vec4 _273 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _275 = _273.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _387 = sqrt(((_266 * _266) + (_267 * _267)) + (_268 * _268));
        float _394 = (cbMatDynParam._m0[5u].x * _387) + cbMatDynParam._m0[5u].y;
        float _707 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
        float _395 = isnan(1.0) ? _707 : (isnan(_707) ? 1.0 : min(_707, 1.0));
        float _399 = (cbMatDynParam._m0[5u].z * _387) + cbMatDynParam._m0[5u].w;
        float _718 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _718 : (isnan(_718) ? 1.0 : min(_718, 1.0))) - _395)) + _395) < ((_275 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _298 = uint(roundEven(NORMAL.w)) * 13u;
    uint _299 = _298 + 9u;
    uint _300 = _299 + uint(cbMatDynParam._m0[0u].w);
    float _306 = 1.0 - (isnan(1.0) ? _696 : (isnan(_696) ? 1.0 : min(_696, 1.0)));
    float _314 = (cbMtdParam._m0[10u].x * cbMtdParam._m0[11u].x) * _188.x;
    float _317 = (cbMtdParam._m0[10u].y * cbMtdParam._m0[11u].x) * _188.y;
    float _320 = (cbMtdParam._m0[10u].z * cbMtdParam._m0[11u].x) * _188.z;
    float _323 = cbInstanceData._m0[_300].x * (_314 + ((_306 * (isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0)))) * cbMtdParam._m0[0u].x));
    float _325 = cbInstanceData._m0[_300].y * (_317 + ((_306 * (isnan(0.0) ? _159 : (isnan(_159) ? 0.0 : max(_159, 0.0)))) * cbMtdParam._m0[0u].y));
    float _327 = cbInstanceData._m0[_300].z * (_320 + ((_306 * (isnan(0.0) ? _160 : (isnan(_160) ? 0.0 : max(_160, 0.0)))) * cbMtdParam._m0[0u].z));
    float _328 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _329 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _330 = isnan(0.0) ? _327 : (isnan(_327) ? 0.0 : max(_327, 0.0));
    float _336 = cbMtdParam._m0[2u].x * (_314 * cbInstanceData._m0[_300].x);
    float _337 = cbMtdParam._m0[2u].y * (_317 * cbInstanceData._m0[_300].y);
    float _338 = cbMtdParam._m0[2u].z * (_320 * cbInstanceData._m0[_300].z);
    float _744 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _340 = isnan(1.0) ? _744 : (isnan(_744) ? 1.0 : min(_744, 1.0));
    float _345 = cbInstanceData._m0[_298 + 6u].w * (isnan(1.0) ? _670 : (isnan(_670) ? 1.0 : min(_670, 1.0)));
    float _351 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _352 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _367 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_351, _352, (log2((isnan(cbSceneParam._m0[77u].w) ? _215 : (isnan(_215) ? cbSceneParam._m0[77u].w : min(_215, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _370 = _367.x;
    float _371 = _367.y;
    float _372 = _367.z;
    float _373 = _367.w;
    float _455;
    float _457;
    float _459;
    float _461;
    if (_215 > cbSceneParam._m0[78u].w)
    {
        float _416 = isnan(_215) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _215 : min(cbSceneParam._m0[80u].w, _215));
        float _417 = _416 / _215;
        float _428 = _417 * _266;
        float _429 = _267 * _417;
        float _430 = (-0.0) - _429;
        float _432 = _417 * _268;
        float _434 = (cbSceneParam._m0[77u].w * _430) / _416;
        float _435 = _434 + cbSceneParam._m0[79u].w;
        float _436 = cbSceneParam._m0[79u].w - _429;
        float _442 = sqrt(((_428 * _428) + (_429 * _429)) + (_432 * _432));
        float _445 = (1.0 - (cbSceneParam._m0[77u].w / _416)) * _442;
        float _451 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _453 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _586;
        if (abs((_430 - _434) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _586 = ((((_435 > 0.0) ? exp2(_451 * _435) : (2.0 - exp2(_453 * _435))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _445;
        }
        else
        {
            float _541 = 1.0 / cbSceneParam._m0[80u].x;
            float _542 = isnan(_436) ? _435 : (isnan(_435) ? _436 : max(_435, _436));
            float _543 = isnan(_436) ? _435 : (isnan(_435) ? _436 : min(_435, _436));
            float _552 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : min(_542, 0.0));
            float _553 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : min(_543, 0.0));
            _586 = ((abs(_442 / _430) * cbSceneParam._m0[80u].y) * ((((_552 - _553) * 2.0) - ((exp2(_451 * (isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0)))) - exp2(_451 * (isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0))))) * _541)) - ((exp2(_453 * _552) - exp2(_453 * _553)) * _541))) + (_445 * cbSceneParam._m0[80u].z);
        }
        vec4 _588 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_351, _352, 1.0), 0.0);
        float _597 = exp2((_586 * (-1.44269502162933349609375)) * (1.0 - _588.w));
        float _598 = log2(_597);
        float _614 = log2(_373);
        _455 = (exp2(_614 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_598 * cbSceneParam._m0[78u].x)) * _588.x) / cbSceneParam._m0[78u].x)) + _370;
        _457 = (exp2(_614 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_598 * cbSceneParam._m0[78u].y)) * _588.y) / cbSceneParam._m0[78u].y)) + _371;
        _459 = (exp2(_614 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_598 * cbSceneParam._m0[78u].z)) * _588.z) / cbSceneParam._m0[78u].z)) + _372;
        _461 = _597 * _373;
    }
    else
    {
        _455 = _370;
        _457 = _371;
        _459 = _372;
        _461 = _373;
    }
    bool _624;
    vec4 _471;
    vec4 _495;
    float _497;
    float _502;
    float _503;
    float _504;
    float _507;
    float _510;
    float _513;
    float _514;
    bool _525;
    for (;;)
    {
        _471 = cbMatDynParam._m0[0u];
        float _473 = roundEven(_471.y);
        bool _474 = _473 == 3.0;
        float _476 = log2(_461);
        float _480 = exp2(_476 * cbSceneParam._m0[78u].x);
        float _481 = exp2(_476 * cbSceneParam._m0[78u].y);
        float _482 = exp2(_476 * cbSceneParam._m0[78u].z);
        float _483 = _480 * _328;
        float _484 = _481 * _329;
        float _485 = _482 * _330;
        float _492 = _275 + (-0.5);
        _495 = cbMtdParam._m0[1u];
        _497 = _495.y * _492;
        float _501 = (_473 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _502 = _501 * (_474 ? _483 : (_483 + (cbSceneParam._m0[72u].w * _455)));
        _503 = _501 * (_474 ? _484 : (_484 + (cbSceneParam._m0[72u].w * _457)));
        _504 = _501 * (_474 ? _485 : (_485 + (cbSceneParam._m0[72u].w * _459)));
        _507 = ((_336 * _340) * _480) * _501;
        _510 = ((_337 * _340) * _481) * _501;
        _513 = ((_338 * _340) * _482) * _501;
        _514 = _492 * 0.999000012874603271484375;
        _525 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_525)
        {
            if ((cbInstanceData._m0[_298 + 7u].x + _514) < 0.5)
            {
                _624 = true;
                break;
            }
        }
        uint _578 = _299 + uint(_471.w);
        if ((cbInstanceData._m0[_578].w < 1.0) && ((cbInstanceData._m0[_578].w + _514) < 0.5))
        {
            _624 = true;
            break;
        }
        if ((_497 + _161) < _495.x)
        {
            _624 = true;
            break;
        }
        _624 = false;
        break;
    }
    float _629;
    if (_624)
    {
        discard_state = true;
        _629 = 0.0;
    }
    else
    {
        _629 = _345;
    }
    SV_Target.x = _502;
    SV_Target.y = _503;
    SV_Target.z = _504;
    SV_Target.w = _629;
    SV_Target_1.x = _507;
    SV_Target_1.y = _510;
    SV_Target_1.z = _513;
    SV_Target_1.w = _345;
    discard_exit();
}


