#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _617;
float _618;
float _619;
float _620;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _142 = texture(sampler2D(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.w;
    float _149 = _142.x * cbMtdParam._m0[9u].x;
    float _150 = _142.y * cbMtdParam._m0[9u].y;
    float _151 = _142.z * cbMtdParam._m0[9u].z;
    float _152 = _148 * TEXCOORD_1.z;
    vec4 _176 = texture(sampler2D(M_A_M0_SCR_Alpha_NoLight_Emissive_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _629 = isnan(0.0) ? _152 : (isnan(_152) ? 0.0 : max(_152, 0.0));
    float _205 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _246 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _256 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _246);
    float _257 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _246);
    float _258 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _246);
    vec4 _263 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _265 = _263.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _355 = sqrt(((_256 * _256) + (_257 * _257)) + (_258 * _258));
        float _362 = (cbMatDynParam._m0[5u].x * _355) + cbMatDynParam._m0[5u].y;
        float _655 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
        float _363 = isnan(1.0) ? _655 : (isnan(_655) ? 1.0 : min(_655, 1.0));
        float _367 = (cbMatDynParam._m0[5u].z * _355) + cbMatDynParam._m0[5u].w;
        float _666 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _666 : (isnan(_666) ? 1.0 : min(_666, 1.0))) - _363)) + _363) < ((_265 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _291 = uint(roundEven(NORMAL.w)) * 13u;
    uint _293 = _291 + 9u;
    uint _294 = _293 + uint(cbMatDynParam._m0[0u].w);
    float _301 = cbInstanceData._m0[_294].x * ((_176.x * cbMtdParam._m0[10u].x) + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0)))));
    float _303 = cbInstanceData._m0[_294].y * ((_176.y * cbMtdParam._m0[10u].y) + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0)))));
    float _305 = cbInstanceData._m0[_294].z * ((_176.z * cbMtdParam._m0[10u].z) + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _151 : (isnan(_151) ? 0.0 : max(_151, 0.0)))));
    float _306 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _307 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _308 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _313 = cbInstanceData._m0[_291 + 6u].w * (isnan(1.0) ? _629 : (isnan(_629) ? 1.0 : min(_629, 1.0)));
    float _319 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _320 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _335 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_319, _320, (log2((isnan(cbSceneParam._m0[77u].w) ? _205 : (isnan(_205) ? cbSceneParam._m0[77u].w : min(_205, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _338 = _335.x;
    float _339 = _335.y;
    float _340 = _335.z;
    float _341 = _335.w;
    float _423;
    float _425;
    float _427;
    float _429;
    if (_205 > cbSceneParam._m0[78u].w)
    {
        float _384 = isnan(_205) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _205 : min(cbSceneParam._m0[80u].w, _205));
        float _385 = _384 / _205;
        float _396 = _385 * _256;
        float _397 = _257 * _385;
        float _398 = (-0.0) - _397;
        float _400 = _385 * _258;
        float _402 = (cbSceneParam._m0[77u].w * _398) / _384;
        float _403 = _402 + cbSceneParam._m0[79u].w;
        float _404 = cbSceneParam._m0[79u].w - _397;
        float _410 = sqrt(((_396 * _396) + (_397 * _397)) + (_400 * _400));
        float _413 = (1.0 - (cbSceneParam._m0[77u].w / _384)) * _410;
        float _419 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _421 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _545;
        if (abs((_398 - _402) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _545 = ((((_403 > 0.0) ? exp2(_419 * _403) : (2.0 - exp2(_421 * _403))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _413;
        }
        else
        {
            float _500 = 1.0 / cbSceneParam._m0[80u].x;
            float _501 = isnan(_404) ? _403 : (isnan(_403) ? _404 : max(_403, _404));
            float _502 = isnan(_404) ? _403 : (isnan(_403) ? _404 : min(_403, _404));
            float _511 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : min(_501, 0.0));
            float _512 = isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : min(_502, 0.0));
            _545 = ((abs(_410 / _398) * cbSceneParam._m0[80u].y) * ((((_511 - _512) * 2.0) - ((exp2(_419 * (isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0)))) - exp2(_419 * (isnan(0.0) ? _502 : (isnan(_502) ? 0.0 : max(_502, 0.0))))) * _500)) - ((exp2(_421 * _511) - exp2(_421 * _512)) * _500))) + (_413 * cbSceneParam._m0[80u].z);
        }
        vec4 _547 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_319, _320, 1.0), 0.0);
        float _556 = exp2((_545 * (-1.44269502162933349609375)) * (1.0 - _547.w));
        float _557 = log2(_556);
        float _573 = log2(_341);
        _423 = (exp2(_573 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].x)) * _547.x) / cbSceneParam._m0[78u].x)) + _338;
        _425 = (exp2(_573 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].y)) * _547.y) / cbSceneParam._m0[78u].y)) + _339;
        _427 = (exp2(_573 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_557 * cbSceneParam._m0[78u].z)) * _547.z) / cbSceneParam._m0[78u].z)) + _340;
        _429 = _556 * _341;
    }
    else
    {
        _423 = _338;
        _425 = _339;
        _427 = _340;
        _429 = _341;
    }
    bool _583;
    vec4 _439;
    vec4 _463;
    float _465;
    float _470;
    float _471;
    float _472;
    float _473;
    bool _484;
    for (;;)
    {
        _439 = cbMatDynParam._m0[0u];
        float _441 = roundEven(_439.y);
        bool _442 = _441 == 3.0;
        float _444 = log2(_429);
        float _451 = exp2(_444 * cbSceneParam._m0[78u].x) * _306;
        float _452 = exp2(_444 * cbSceneParam._m0[78u].y) * _307;
        float _453 = exp2(_444 * cbSceneParam._m0[78u].z) * _308;
        float _460 = _265 + (-0.5);
        _463 = cbMtdParam._m0[1u];
        _465 = _463.y * _460;
        float _469 = (_441 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _470 = _469 * (_442 ? _451 : (_451 + (cbSceneParam._m0[72u].w * _423)));
        _471 = _469 * (_442 ? _452 : (_452 + (cbSceneParam._m0[72u].w * _425)));
        _472 = _469 * (_442 ? _453 : (_453 + (cbSceneParam._m0[72u].w * _427)));
        _473 = _460 * 0.999000012874603271484375;
        _484 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_484)
        {
            if ((cbInstanceData._m0[_291 + 7u].x + _473) < 0.5)
            {
                _583 = true;
                break;
            }
        }
        uint _537 = _293 + uint(_439.w);
        if ((cbInstanceData._m0[_537].w < 1.0) && ((cbInstanceData._m0[_537].w + _473) < 0.5))
        {
            _583 = true;
            break;
        }
        if ((_465 + _148) < _463.x)
        {
            _583 = true;
            break;
        }
        _583 = false;
        break;
    }
    float _588;
    if (_583)
    {
        discard_state = true;
        _588 = 0.0;
    }
    else
    {
        _588 = _313;
    }
    SV_Target.x = _470;
    SV_Target.y = _471;
    SV_Target.z = _472;
    SV_Target.w = _588;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _313;
    discard_exit();
}


