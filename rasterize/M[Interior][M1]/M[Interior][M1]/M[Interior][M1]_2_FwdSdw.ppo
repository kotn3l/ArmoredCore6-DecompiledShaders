#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _718;
uint _2156;
uint _2157;
uint _2158;
uint _2371;
uint _2372;
uint _2373;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _255 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _245);
    float _256 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _245);
    float _257 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _245);
    float _283 = cbMtdParam._m0[22u].y + _255;
    float _284 = cbMtdParam._m0[22u].z + _256;
    float _285 = cbMtdParam._m0[22u].w + _257;
    float _299 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_183 * _176, _183 * _177, _183 * _178));
    float _300 = (-0.0) - dot(vec3(_283, _284, _285), vec3(_197 * TANGENT.x, _197 * TANGENT.y, _197 * TANGENT.z));
    float _301 = (-0.0) - dot(vec3(_283, _284, _285), vec3((-0.0) - (_190 * NORMAL.x), (-0.0) - (_190 * NORMAL.y), (-0.0) - (_190 * NORMAL.z)));
    float _305 = inversesqrt(dot(vec3(_299, _300, _301), vec3(_299, _300, _301)));
    float _306 = _305 * _301;
    float _308 = (cbMtdParam._m0[19u].x * _299) * _305;
    float _310 = (cbMtdParam._m0[18u].w * _300) * _305;
    float _311 = fract(TEXCOORD.x);
    float _312 = fract(TEXCOORD.y);
    float _318;
    if (_308 > 0.0)
    {
        _318 = (1.0 - _311) / _308;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_308 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _311) / _308;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _318 = frontier_phi_3_2_ladder;
    }
    float _326;
    if (_310 > 0.0)
    {
        _326 = (1.0 - _312) / _310;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_310 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _312) / _310;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _326 = frontier_phi_7_6_ladder;
    }
    bool _328 = _306 > 0.0;
    float _330 = _328 ? (cbMtdParam._m0[15u].x / _306) : 5000.0;
    float _331 = isnan(_326) ? _318 : (isnan(_318) ? _326 : min(_318, _326));
    float _332 = isnan(_330) ? _331 : (isnan(_331) ? _330 : min(_331, _330));
    float _336 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _337 = _311 + (-0.5);
    float _340 = _312 + (-0.5);
    float _343 = ((_332 * _306) + _336) / _336;
    vec4 _369 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_337 + (_332 * _308)) / _343) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_340 + (_332 * _310)) / _343) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _380 = cbMtdParam._m0[9u].x * _369.x;
    float _381 = cbMtdParam._m0[9u].y * _369.y;
    float _382 = cbMtdParam._m0[9u].z * _369.z;
    float _404 = (cbMtdParam._m0[21u].x * _299) * _305;
    float _406 = (cbMtdParam._m0[20u].w * _300) * _305;
    bool _407 = _404 > 0.0;
    float _412;
    if (_407)
    {
        _412 = (1.0 - _311) / _404;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _311) / _404;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _412 = frontier_phi_11_10_ladder;
    }
    bool _414 = _406 > 0.0;
    float _419;
    if (_414)
    {
        _419 = (1.0 - _312) / _406;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _312) / _406;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _419 = frontier_phi_15_14_ladder;
    }
    float _422 = _328 ? (cbMtdParam._m0[16u].z / _306) : 5000.0;
    float _423 = isnan(_419) ? _412 : (isnan(_412) ? _419 : min(_412, _419));
    float _424 = isnan(_422) ? _423 : (isnan(_423) ? _422 : min(_423, _422));
    float _428 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _432 = ((_424 * _306) + _428) / _428;
    float _437 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _439 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _455 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_424 * _404)) / _432) + 0.5) + _437) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_424 * _406)) / _432) + 0.5) + _439) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _467;
    if (_407)
    {
        _467 = (1.0 - _311) / _404;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _311) / _404;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _467 = frontier_phi_19_18_ladder;
    }
    float _473;
    if (_414)
    {
        _473 = (1.0 - _312) / _406;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _312) / _406;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _473 = frontier_phi_23_22_ladder;
    }
    float _475 = isnan(_473) ? _467 : (isnan(_467) ? _473 : min(_467, _473));
    float _476 = isnan(_422) ? _475 : (isnan(_475) ? _422 : min(_475, _422));
    float _483 = ((_476 * _306) + _428) / _428;
    vec4 _497 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_337 + (_476 * _404)) / _483) + 0.5) + _437) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_340 + (_476 * _406)) / _483) + 0.5) + _439) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _499 = _497.w;
    float _524 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _528 = inversesqrt(dot(vec3(_255, _256, _257), vec3(_255, _256, _257)));
    float _529 = _255 * _528;
    float _530 = _256 * _528;
    float _531 = _257 * _528;
    float _537 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _538 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _547 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_537 * cbSceneParam._m0[86u].x, _538 * cbSceneParam._m0[86u].y));
    float _550 = _547.x * TEXCOORD.z;
    float _551 = (-0.0) - _529;
    float _552 = (-0.0) - _530;
    float _553 = (-0.0) - _531;
    float _575 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _579 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _583 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _717;
    float _719;
    float _720;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    float _728;
    float _729;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _639 = (cbModelParam._m0[37u].x * ((((fma(_583, cbModelParam._m0[26u].z, fma(_579, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _575)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _641 = (cbModelParam._m0[37u].y * ((((fma(_583, cbModelParam._m0[27u].z, fma(_579, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _575)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _642 = (((((fma(_583, cbModelParam._m0[28u].z, fma(_579, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _575)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _645 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_639, _641, _642), 0.0);
        vec4 _652 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_639, _641, _642), 0.0);
        vec4 _659 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_639, _641, _642), 0.0);
        vec4 _666 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_639, _641, _642), 0.0);
        float _679 = exp2((_645.w + (-0.5)) * 20.0) * 2.0;
        float _690 = exp2((_652.w + (-0.5)) * 20.0) * 2.0;
        float _700 = exp2((_659.w + (-0.5)) * 20.0) * 2.0;
        float _710 = exp2((_666.w + (-0.5)) * 20.0) * 2.0;
        float _711 = _710 * (_666.x + (-0.5));
        float _712 = _710 * (_666.y + (-0.5));
        float _713 = _710 * (_666.z + (-0.5));
        _717 = _679 * (_645.z + (-0.5));
        _719 = _679 * (_645.y + (-0.5));
        _720 = _679 * (_645.x + (-0.5));
        _721 = _690 * (_652.z + (-0.5));
        _722 = _690 * (_652.y + (-0.5));
        _723 = _690 * (_652.x + (-0.5));
        _724 = _700 * (_659.z + (-0.5));
        _725 = _700 * (_659.y + (-0.5));
        _726 = _700 * (_659.x + (-0.5));
        _727 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
        _728 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
        _729 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
    }
    else
    {
        _717 = _718;
        _719 = _718;
        _720 = _718;
        _721 = _718;
        _722 = _718;
        _723 = _718;
        _724 = _718;
        _725 = _718;
        _726 = _718;
        _727 = _718;
        _728 = _718;
        _729 = _718;
    }
    float _857;
    float _858;
    float _859;
    float _860;
    float _861;
    float _862;
    float _863;
    float _864;
    float _865;
    float _866;
    float _867;
    float _868;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _783 = (cbModelParam._m0[38u].x * ((((fma(_583, cbModelParam._m0[30u].z, fma(_579, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _575)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _784 = (cbModelParam._m0[38u].y * ((((fma(_583, cbModelParam._m0[31u].z, fma(_579, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _575)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _785 = (((((fma(_583, cbModelParam._m0[32u].z, fma(_579, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _575)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _787 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_783, _784, _785), 0.0);
        vec4 _794 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_783, _784, _785), 0.0);
        vec4 _801 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_783, _784, _785), 0.0);
        vec4 _808 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_783, _784, _785), 0.0);
        float _820 = exp2((_787.w + (-0.5)) * 20.0) * 2.0;
        float _830 = exp2((_794.w + (-0.5)) * 20.0) * 2.0;
        float _840 = exp2((_801.w + (-0.5)) * 20.0) * 2.0;
        float _850 = exp2((_808.w + (-0.5)) * 20.0) * 2.0;
        float _851 = _850 * (_808.x + (-0.5));
        float _852 = _850 * (_808.y + (-0.5));
        float _853 = _850 * (_808.z + (-0.5));
        _857 = _820 * (_787.z + (-0.5));
        _858 = _820 * (_787.y + (-0.5));
        _859 = _820 * (_787.x + (-0.5));
        _860 = _830 * (_794.z + (-0.5));
        _861 = _830 * (_794.y + (-0.5));
        _862 = _830 * (_794.x + (-0.5));
        _863 = _840 * (_801.z + (-0.5));
        _864 = _840 * (_801.y + (-0.5));
        _865 = _840 * (_801.x + (-0.5));
        _866 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        _867 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
        _868 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
    }
    else
    {
        _857 = _718;
        _858 = _718;
        _859 = _718;
        _860 = _718;
        _861 = _718;
        _862 = _718;
        _863 = _718;
        _864 = _718;
        _865 = _718;
        _866 = _718;
        _867 = _718;
        _868 = _718;
    }
    float _883 = _529 * (-0.5);
    float _884 = _530 * (-0.5);
    float _885 = _531 * (-0.5);
    float _886 = dot(vec4(_883, _884, _885, 1.0), vec4(_859, _862, _865, _868));
    float _889 = dot(vec4(_883, _884, _885, 1.0), vec4(_858, _861, _864, _867));
    float _892 = dot(vec4(_883, _884, _885, 1.0), vec4(_857, _860, _863, _866));
    float _927;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _899 = dot(vec4(_883, _884, _885, 1.0), vec4(_717, _721, _724, _727));
        float _903 = dot(vec4(_883, _884, _885, 1.0), vec4(_719, _722, _725, _728));
        float _907 = dot(vec4(_883, _884, _885, 1.0), vec4(_720, _723, _726, _729));
        float _914 = dot(vec4(cbModelParam._m0[39u]), vec4(_883, _884, _885, 1.0));
        _927 = dot(vec3(isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0)), isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0)), isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_914) ? 0.0 : (isnan(0.0) ? _914 : max(0.0, _914))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _927 = 1.0;
    }
    float _938;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _929 = dot(vec4(cbModelParam._m0[40u]), vec4(_883, _884, _885, 1.0));
        _938 = dot(vec3(isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0)), isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0)), isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_929) ? 0.0 : (isnan(0.0) ? _929 : max(0.0, _929))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _938 = 1.0;
    }
    float _942 = (_938 * cbModelParam._m0[1u].x) + (_927 * (1.0 - cbModelParam._m0[1u].x));
    float _948 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1031;
    float _1033;
    float _1035;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _998 = fma(_583, cbModelParam._m0[13u].z, fma(_579, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _575)) + cbModelParam._m0[13u].w;
        float _1002 = fma(_583, cbModelParam._m0[14u].z, fma(_579, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _575)) + cbModelParam._m0[14u].w;
        float _1006 = fma(_583, cbModelParam._m0[15u].z, fma(_579, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _575)) + cbModelParam._m0[15u].w;
        float _1009 = fma(_553, cbModelParam._m0[13u].z, fma(_552, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _551));
        float _1012 = fma(_553, cbModelParam._m0[14u].z, fma(_552, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _551));
        float _1015 = fma(_553, cbModelParam._m0[15u].z, fma(_552, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _551));
        float _1041;
        if (_1009 > 0.0)
        {
            _1041 = abs((1.0 - _998) / _1009);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1009 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_998 + 1.0) / _1009);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1041 = frontier_phi_38_36_ladder;
        }
        float _1229;
        if (_1012 > 0.0)
        {
            _1229 = abs((1.0 - _1002) / _1012);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1012 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1002 + 1.0) / _1012);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1229 = frontier_phi_47_43_ladder;
        }
        float _1585;
        if (_1015 > 0.0)
        {
            _1585 = abs((1.0 - _1006) / _1015);
        }
        else
        {
            float frontier_phi_59_54_ladder;
            if (_1015 < 0.0)
            {
                frontier_phi_59_54_ladder = abs((_1006 + 1.0) / _1015);
            }
            else
            {
                frontier_phi_59_54_ladder = 5000.0;
            }
            _1585 = frontier_phi_59_54_ladder;
        }
        float _1587 = isnan(_1229) ? _1041 : (isnan(_1041) ? _1229 : min(_1041, _1229));
        float _1588 = isnan(_1585) ? _1587 : (isnan(_1587) ? _1585 : min(_1587, _1585));
        float _1592 = (_1588 * _1009) + _998;
        float _1593 = (_1588 * _1012) + _1002;
        float _1594 = (_1588 * _1015) + _1006;
        float _1595 = _1588 * 9.9999997473787516355514526367188e-05;
        float _1597 = (-1.0) - _1595;
        float _1599 = _1595 + 1.0;
        float frontier_phi_37_59_ladder;
        float frontier_phi_37_59_ladder_1;
        float frontier_phi_37_59_ladder_2;
        if ((_1594 > _1599) || ((_1594 < _1597) || ((_1593 > _1599) || ((_1593 < _1597) || ((_1592 < _1597) || (_1592 > _1599))))))
        {
            frontier_phi_37_59_ladder = 0.0;
            frontier_phi_37_59_ladder_1 = 0.0;
            frontier_phi_37_59_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1828 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1594, cbModelParam._m0[9u].z, fma(_1593, cbModelParam._m0[9u].y, _1592 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1594, cbModelParam._m0[10u].z, fma(_1593, cbModelParam._m0[10u].y, _1592 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1594, cbModelParam._m0[11u].z, fma(_1593, cbModelParam._m0[11u].y, _1592 * cbModelParam._m0[11u].x))), _948);
            frontier_phi_37_59_ladder = _1828.z * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_1 = _1828.y * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_2 = _1828.x * cbModelParam._m0[1u].y;
        }
        _1031 = frontier_phi_37_59_ladder_2;
        _1033 = frontier_phi_37_59_ladder_1;
        _1035 = frontier_phi_37_59_ladder;
    }
    else
    {
        vec4 _1019 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_551, _552, _553), _948);
        _1031 = _1019.x * cbModelParam._m0[1u].y;
        _1033 = _1019.y * cbModelParam._m0[1u].y;
        _1035 = _1019.z * cbModelParam._m0[1u].y;
    }
    float _1038 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1126;
    float _1128;
    float _1130;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1090 = fma(_583, cbModelParam._m0[21u].z, fma(_579, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _575)) + cbModelParam._m0[21u].w;
        float _1094 = fma(_583, cbModelParam._m0[22u].z, fma(_579, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _575)) + cbModelParam._m0[22u].w;
        float _1098 = fma(_583, cbModelParam._m0[23u].z, fma(_579, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _575)) + cbModelParam._m0[23u].w;
        float _1101 = fma(_553, cbModelParam._m0[21u].z, fma(_552, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _551));
        float _1104 = fma(_553, cbModelParam._m0[22u].z, fma(_552, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _551));
        float _1107 = fma(_553, cbModelParam._m0[23u].z, fma(_552, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _551));
        float _1234;
        if (_1101 > 0.0)
        {
            _1234 = abs((1.0 - _1090) / _1101);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1101 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1090 + 1.0) / _1101);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1234 = frontier_phi_49_45_ladder;
        }
        float _1612;
        if (_1104 > 0.0)
        {
            _1612 = abs((1.0 - _1094) / _1104);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1104 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1094 + 1.0) / _1104);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _1612 = frontier_phi_61_56_ladder;
        }
        float _1944;
        if (_1107 > 0.0)
        {
            _1944 = abs((1.0 - _1098) / _1107);
        }
        else
        {
            float frontier_phi_73_68_ladder;
            if (_1107 < 0.0)
            {
                frontier_phi_73_68_ladder = abs((_1098 + 1.0) / _1107);
            }
            else
            {
                frontier_phi_73_68_ladder = 5000.0;
            }
            _1944 = frontier_phi_73_68_ladder;
        }
        float _1946 = isnan(_1612) ? _1234 : (isnan(_1234) ? _1612 : min(_1234, _1612));
        float _1947 = isnan(_1944) ? _1946 : (isnan(_1946) ? _1944 : min(_1946, _1944));
        float _1951 = (_1947 * _1101) + _1090;
        float _1952 = (_1947 * _1104) + _1094;
        float _1953 = (_1947 * _1107) + _1098;
        float _1954 = _1947 * 9.9999997473787516355514526367188e-05;
        float _1955 = (-1.0) - _1954;
        float _1957 = _1954 + 1.0;
        float frontier_phi_46_73_ladder;
        float frontier_phi_46_73_ladder_1;
        float frontier_phi_46_73_ladder_2;
        if ((_1953 > _1957) || ((_1953 < _1955) || ((_1952 > _1957) || ((_1952 < _1955) || ((_1951 < _1955) || (_1951 > _1957))))))
        {
            frontier_phi_46_73_ladder = 0.0;
            frontier_phi_46_73_ladder_1 = 0.0;
            frontier_phi_46_73_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2059 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1953, cbModelParam._m0[17u].z, fma(_1952, cbModelParam._m0[17u].y, _1951 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1953, cbModelParam._m0[18u].z, fma(_1952, cbModelParam._m0[18u].y, _1951 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1953, cbModelParam._m0[19u].z, fma(_1952, cbModelParam._m0[19u].y, _1951 * cbModelParam._m0[19u].x))), _1038);
            frontier_phi_46_73_ladder = _2059.z * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_1 = _2059.y * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_2 = _2059.x * cbModelParam._m0[1u].z;
        }
        _1126 = frontier_phi_46_73_ladder_2;
        _1128 = frontier_phi_46_73_ladder_1;
        _1130 = frontier_phi_46_73_ladder;
    }
    else
    {
        vec4 _1110 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_551, _552, _553), _1038);
        _1126 = _1110.x * cbModelParam._m0[1u].z;
        _1128 = _1110.y * cbModelParam._m0[1u].z;
        _1130 = _1110.z * cbModelParam._m0[1u].z;
    }
    float _1142 = _550 * 0.01200000010430812835693359375;
    float _1144 = _1142 * ((cbModelParam._m0[1u].w * (_1126 - _1031)) + _1031);
    float _1145 = _1142 * ((cbModelParam._m0[1u].w * (_1128 - _1033)) + _1033);
    float _1146 = _1142 * ((cbModelParam._m0[1u].w * (_1130 - _1035)) + _1035);
    float _1167 = fma(_1146, cbSceneParam._m0[89u].z, fma(_1145, cbSceneParam._m0[89u].y, _1144 * cbSceneParam._m0[89u].x));
    float _1170 = fma(_1146, cbSceneParam._m0[90u].z, fma(_1145, cbSceneParam._m0[90u].y, _1144 * cbSceneParam._m0[90u].x));
    float _1173 = fma(_1146, cbSceneParam._m0[91u].z, fma(_1145, cbSceneParam._m0[91u].y, _1144 * cbSceneParam._m0[91u].x));
    float _1208 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1212 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1216 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1220 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1221 = _1208 / _1220;
    float _1222 = _1212 / _1220;
    float _1223 = _1216 / _1220;
    float _1371;
    float _1372;
    float _1373;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1250 = ((uint(_1223 > cbSceneParam._m0[59u].y) + uint(_1223 > cbSceneParam._m0[59u].x)) + uint(_1223 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1251 = _1250 + 43u;
        uint _1259 = _1250 + 44u;
        uint _1267 = _1250 + 45u;
        uint _1275 = _1250 + 46u;
        float _1286 = fma(_1220, cbSceneParam._m0[_1251].w, fma(_1216, cbSceneParam._m0[_1251].z, fma(_1212, cbSceneParam._m0[_1251].y, _1208 * cbSceneParam._m0[_1251].x)));
        float _1290 = fma(_1220, cbSceneParam._m0[_1259].w, fma(_1216, cbSceneParam._m0[_1259].z, fma(_1212, cbSceneParam._m0[_1259].y, _1208 * cbSceneParam._m0[_1259].x)));
        float _1298 = fma(_1220, cbSceneParam._m0[_1275].w, fma(_1216, cbSceneParam._m0[_1275].z, fma(_1212, cbSceneParam._m0[_1275].y, _1208 * cbSceneParam._m0[_1275].x)));
        float _1303 = cbSceneParam._m0[33u].z * _1298;
        float _1305 = cbSceneParam._m0[33u].w * _1298;
        float _1308 = fma(_1220, cbSceneParam._m0[_1267].w, fma(_1216, cbSceneParam._m0[_1267].z, fma(_1212, cbSceneParam._m0[_1267].y, _1208 * cbSceneParam._m0[_1267].x))) / _1298;
        float _1356 = (cbSceneParam._m0[33u].x - sqrt(((_1222 * _1222) + (_1221 * _1221)) + (_1223 * _1223))) * cbSceneParam._m0[33u].y;
        float _2761 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1364 = (isnan(1.0) ? _2761 : (isnan(_2761) ? 1.0 : min(_2761, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1303 + _1286) / _1298, (_1305 + _1290) / _1298), _1308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1305 + _1286) / _1298, (_1290 - _1303) / _1298), _1308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1286 - _1303) / _1298, (_1290 - _1305) / _1298), _1308), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1286 - _1305) / _1298, (_1303 + _1290) / _1298), _1308), 0.0)).x), vec4(0.25)));
        _1371 = 1.0 - (_1364 * cbSceneParam._m0[34u].x);
        _1372 = 1.0 - (_1364 * cbSceneParam._m0[34u].y);
        _1373 = 1.0 - (_1364 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1371 = 1.0;
        _1372 = 1.0;
        _1373 = 1.0;
    }
    float _1437;
    float _1439;
    float _1441;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1425 = fma(_1220, cbSceneParam._m0[63u].w, fma(_1216, cbSceneParam._m0[63u].z, fma(_1212, cbSceneParam._m0[63u].y, _1208 * cbSceneParam._m0[63u].x)));
        float _1426 = fma(_1220, cbSceneParam._m0[60u].w, fma(_1216, cbSceneParam._m0[60u].z, fma(_1212, cbSceneParam._m0[60u].y, _1208 * cbSceneParam._m0[60u].x))) / _1425;
        float _1427 = fma(_1220, cbSceneParam._m0[61u].w, fma(_1216, cbSceneParam._m0[61u].z, fma(_1212, cbSceneParam._m0[61u].y, _1208 * cbSceneParam._m0[61u].x))) / _1425;
        float frontier_phi_58_57_ladder;
        float frontier_phi_58_57_ladder_1;
        float frontier_phi_58_57_ladder_2;
        if ((((_1426 >= cbSceneParam._m0[64u].x) && (_1427 >= cbSceneParam._m0[64u].y)) && (_1426 <= cbSceneParam._m0[64u].z)) && (_1427 <= cbSceneParam._m0[64u].w))
        {
            float _1625 = fma(_1220, cbSceneParam._m0[62u].w, fma(_1216, cbSceneParam._m0[62u].z, fma(_1212, cbSceneParam._m0[62u].y, _1208 * cbSceneParam._m0[62u].x))) / _1425;
            float _1629 = isnan(cbSceneParam._m0[41u].w) ? _1625 : (isnan(_1625) ? cbSceneParam._m0[41u].w : max(_1625, cbSceneParam._m0[41u].w));
            float _1672 = (cbSceneParam._m0[33u].x - sqrt(((_1222 * _1222) + (_1221 * _1221)) + (_1223 * _1223))) * cbSceneParam._m0[33u].y;
            float _2777 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
            float _1679 = (isnan(1.0) ? _2777 : (isnan(_2777) ? 1.0 : min(_2777, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1426, cbSceneParam._m0[33u].w + _1427), _1629), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1426, _1427 - cbSceneParam._m0[33u].z), _1629), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1426 - cbSceneParam._m0[33u].z, _1427 - cbSceneParam._m0[33u].w), _1629), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1426 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1427), _1629), 0.0)).x), vec4(0.25)));
            float _1683 = 1.0 - (_1679 * cbSceneParam._m0[34u].x);
            float _1684 = 1.0 - (_1679 * cbSceneParam._m0[34u].y);
            float _1685 = 1.0 - (_1679 * cbSceneParam._m0[34u].z);
            frontier_phi_58_57_ladder = isnan(_1683) ? _1371 : (isnan(_1371) ? _1683 : min(_1371, _1683));
            frontier_phi_58_57_ladder_1 = isnan(_1684) ? _1372 : (isnan(_1372) ? _1684 : min(_1372, _1684));
            frontier_phi_58_57_ladder_2 = isnan(_1685) ? _1373 : (isnan(_1373) ? _1685 : min(_1373, _1685));
        }
        else
        {
            frontier_phi_58_57_ladder = _1371;
            frontier_phi_58_57_ladder_1 = _1372;
            frontier_phi_58_57_ladder_2 = _1373;
        }
        _1437 = frontier_phi_58_57_ladder;
        _1439 = frontier_phi_58_57_ladder_1;
        _1441 = frontier_phi_58_57_ladder_2;
    }
    else
    {
        _1437 = _1371;
        _1439 = _1372;
        _1441 = _1373;
    }
    uint _1443 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1448 = floatBitsToUint(cbInstanceData._m0[_1443 + 5u]);
    uint _1450 = _1448.x * 14u;
    uint _1451 = _1450 + 13u;
    float _1456 = _550 + (-1.0);
    float _1460 = (cbLight._m0[_1451].x * _1456) + 1.0;
    float _1461 = (cbLight._m0[_1451].y * _1456) + 1.0;
    uint _1462 = _1450 + 8u;
    float _1473 = cbLight._m0[_1450].x + _529;
    float _1474 = cbLight._m0[_1450].y + _530;
    float _1475 = cbLight._m0[_1450].z + _531;
    float _1479 = inversesqrt(dot(vec3(_1473, _1474, _1475), vec3(_1473, _1474, _1475)));
    float _1483 = dot(vec3(0.0), vec3(cbLight._m0[_1450].xyz));
    float _2803 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
    float _1486 = isnan(1.0) ? _2803 : (isnan(_2803) ? 1.0 : min(_2803, 1.0));
    float _1487 = dot(vec3(0.0), vec3(_529, _530, _531));
    float _2814 = isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0));
    float _1490 = isnan(1.0) ? _2814 : (isnan(_2814) ? 1.0 : min(_2814, 1.0));
    float _1491 = dot(vec3(cbLight._m0[_1450].xyz), vec3(_1473 * _1479, _1474 * _1479, _1475 * _1479));
    float _2825 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
    float _1502 = (exp2(log2(1.0 - (isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1508 = (0.5 / ((_1486 + 9.9999999392252902907785028219223e-09) + _1490)) * _1486;
    float _2836 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
    float _1510 = (isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0))) * 0.31831014156341552734375;
    float _1512 = isnan(1.0) ? _1460 : (isnan(_1460) ? 1.0 : min(_1460, 1.0));
    uint _1525 = _1450 + 9u;
    uint _1531 = _1450 | 1u;
    float _1537 = cbLight._m0[_1531].x + _529;
    float _1538 = cbLight._m0[_1531].y + _530;
    float _1539 = cbLight._m0[_1531].z + _531;
    float _1543 = inversesqrt(dot(vec3(_1537, _1538, _1539), vec3(_1537, _1538, _1539)));
    float _1547 = dot(vec3(0.0), vec3(cbLight._m0[_1531].xyz));
    float _2852 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
    float _1550 = isnan(1.0) ? _2852 : (isnan(_2852) ? 1.0 : min(_2852, 1.0));
    float _1551 = dot(vec3(cbLight._m0[_1531].xyz), vec3(_1537 * _1543, _1538 * _1543, _1539 * _1543));
    float _2863 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    float _1560 = (exp2(log2(1.0 - (isnan(1.0) ? _2863 : (isnan(_2863) ? 1.0 : min(_2863, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1564 = (0.5 / ((_1550 + 9.9999999392252902907785028219223e-09) + _1490)) * _1550;
    float _2874 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
    float _1566 = (isnan(1.0) ? _2874 : (isnan(_2874) ? 1.0 : min(_2874, 1.0))) * 0.31831014156341552734375;
    float _1567 = isnan(1.0) ? _1461 : (isnan(_1461) ? 1.0 : min(_1461, 1.0));
    float _1577 = (((_1560 * cbLight._m0[_1525].x) * _1566) * _1567) + ((((cbLight._m0[_1462].x * _1437) * _1502) * _1510) * _1512);
    float _1578 = (((_1560 * cbLight._m0[_1525].y) * _1566) * _1567) + ((((cbLight._m0[_1462].y * _1439) * _1502) * _1510) * _1512);
    float _1579 = (((_1560 * cbLight._m0[_1525].z) * _1566) * _1567) + ((((cbLight._m0[_1462].z * _1441) * _1502) * _1510) * _1512);
    float _1743;
    float _1745;
    float _1747;
    if (_1448.y == 0u)
    {
        uvec4 _1697 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1698 = _1697.x;
        uint _1709 = uint((float(_1697.y) * floor(float(uint(cbSceneParam._m0[85u].y * _538) / _1698))) + floor(float(uint(cbSceneParam._m0[85u].x * _537) / _1698)));
        float _1719 = (log2(_1223 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1720 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        uint _1723 = uint(isnan(14.0) ? _1720 : (isnan(_1720) ? 14.0 : min(_1720, 14.0)));
        uvec4 _1729 = texelFetch(g_lightClusterGridBuffer, int(((_1723 << 2u) + (_1709 << 6u)) >> 2u));
        uint _1730 = _1729.x;
        uint _1731 = _1697.z;
        float _1837;
        float _1839;
        float _1841;
        if (((((1u << ((_1731 >> 4u) & 15u)) + 4294967295u) & _1730) == 0u) || ((_1731 & 240u) == 0u))
        {
            _1837 = 0.0;
            _1839 = 0.0;
            _1841 = 0.0;
        }
        else
        {
            float _1838;
            float _1840;
            float _1842;
            float _1990 = 0.0;
            float _1991 = 0.0;
            float _1992 = 0.0;
            uint _1993 = 0u;
            uint _2002;
            bool _2003;
            for (;;)
            {
                _2002 = texelFetch(g_lightClassification, int((((_1723 << 5u) + (_1709 << 9u)) + (_1993 << 2u)) >> 2u)).x;
                _2003 = _2002 == 0u;
                float frontier_phi_82_pred;
                float frontier_phi_82_pred_1;
                float frontier_phi_82_pred_2;
                if (_2003)
                {
                    frontier_phi_82_pred = _1992;
                    frontier_phi_82_pred_1 = _1991;
                    frontier_phi_82_pred_2 = _1990;
                }
                else
                {
                    float _2126;
                    float _2127;
                    float _2128;
                    uint _2129;
                    _2126 = _1990;
                    _2127 = _1991;
                    _2128 = _1992;
                    _2129 = _2002;
                    float _2064;
                    float _2065;
                    float _2066;
                    for (;;)
                    {
                        uint _2133 = uint(findLSB(_2129)) + (_1993 << 5u);
                        uint _2130 = (_2129 + 4294967295u) & _2129;
                        uint _2135 = _2133 * 48u;
                        vec4 _2149 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2135)).x, texelFetch(g_PointLightRenderingBuffer, int(_2135 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2135 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2135 + 3u)).x));
                        uint _2166 = (_2133 * 48u) + 8u;
                        vec3 _2177 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2166)).x, texelFetch(g_PointLightRenderingBuffer, int(_2166 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2166 + 2u)).x));
                        float _2181 = _2149.x - _1221;
                        float _2182 = _2149.y - _1222;
                        float _2183 = _2149.z - _1223;
                        float _2184 = dot(vec3(_2181, _2182, _2183), vec3(_2181, _2182, _2183));
                        float _2187 = inversesqrt(_2184);
                        float _2196 = 1.0 - (_2184 * _2149.w);
                        float _2900 = isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0));
                        float _2198 = sqrt(_2184) * uintBitsToFloat(uvec4(_2156, _2157, _2158, texelFetch(g_PointLightRenderingBuffer, int(((_2133 * 48u) + 4u) + 3u)).x)).w;
                        float _2201 = 1.39999997615814208984375 / (_2198 + 1.39999997615814208984375);
                        float _2202 = _2201 * _2201;
                        float _2205 = ((1.0 - _2202) * dot(vec3(0.0), vec3(_2187 * _2181, _2187 * _2182, _2187 * _2183))) + _2202;
                        float _2207 = (-0.0) - _1221;
                        float _2208 = (-0.0) - _1222;
                        float _2209 = (-0.0) - _1223;
                        float _2213 = inversesqrt(dot(vec3(_2207, _2208, _2209), vec3(_2207, _2208, _2209)));
                        float _2217 = dot(vec3(0.0), vec3(_2213 * _2207, _2213 * _2208, _2213 * _2209));
                        float _2911 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
                        float _2922 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
                        float _2221 = isnan(1.0) ? _2922 : (isnan(_2922) ? 1.0 : min(_2922, 1.0));
                        float _2225 = (0.5 / (((isnan(1.0) ? _2911 : (isnan(_2911) ? 1.0 : min(_2911, 1.0))) + 9.9999999392252902907785028219223e-09) + _2221)) * _2221;
                        float _2933 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
                        float _2234 = (((isnan(1.0) ? _2933 : (isnan(_2933) ? 1.0 : min(_2933, 1.0))) * 3.1415927410125732421875) / (((_2198 * _2198) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2900 : (isnan(_2900) ? 1.0 : min(_2900, 1.0)));
                        _2064 = (_2234 * _2177.x) + _2126;
                        _2065 = (_2234 * _2177.y) + _2127;
                        _2066 = (_2234 * _2177.z) + _2128;
                        if (_2130 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2126 = _2064;
                            _2127 = _2065;
                            _2128 = _2066;
                            _2129 = _2130;
                        }
                    }
                    frontier_phi_82_pred = _2066;
                    frontier_phi_82_pred_1 = _2065;
                    frontier_phi_82_pred_2 = _2064;
                }
                _1842 = frontier_phi_82_pred;
                _1840 = frontier_phi_82_pred_1;
                _1838 = frontier_phi_82_pred_2;
                uint _1994 = _1993 + 1u;
                if (_1994 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1990 = _1838;
                    _1991 = _1840;
                    _1992 = _1842;
                    _1993 = _1994;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1837 = _1838;
            _1839 = _1840;
            _1841 = _1842;
        }
        uvec4 _1845 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1846 = _1845.z;
        uint _1848 = (_1846 >> 8u) & 15u;
        float _1970;
        float _1972;
        float _1974;
        if (((4294967295u << _1848) & _1730) == 0u)
        {
            _1970 = _1837;
            _1972 = _1839;
            _1974 = _1841;
        }
        else
        {
            float _1986 = inversesqrt(dot(vec3(_1221, _1222, _1223), vec3(_1221, _1222, _1223)));
            float frontier_phi_75_76_ladder;
            float frontier_phi_75_76_ladder_1;
            float frontier_phi_75_76_ladder_2;
            if (_1848 < ((_1846 >> 12u) & 15u))
            {
                float _1971;
                float _1973;
                float _1975;
                float _2112 = _1837;
                float _2113 = _1839;
                float _2114 = _1841;
                uint _2115 = _1848;
                uint _2124;
                bool _2125;
                for (;;)
                {
                    _2124 = texelFetch(g_lightClassification, int((((_1723 << 5u) + (_1709 << 9u)) + (_2115 << 2u)) >> 2u)).x;
                    _2125 = _2124 == 0u;
                    float frontier_phi_88_pred;
                    float frontier_phi_88_pred_1;
                    float frontier_phi_88_pred_2;
                    if (_2125)
                    {
                        frontier_phi_88_pred = _2114;
                        frontier_phi_88_pred_1 = _2113;
                        frontier_phi_88_pred_2 = _2112;
                    }
                    else
                    {
                        float _2239;
                        float _2240;
                        float _2241;
                        float _2460;
                        float _2461;
                        float _2462;
                        float _2249 = _2112;
                        float _2250 = _2113;
                        float _2251 = _2114;
                        uint _2252 = _2124;
                        uint _2253;
                        uint _2263;
                        vec4 _2278;
                        float _2279;
                        vec3 _2291;
                        vec4 _2306;
                        vec4 _2321;
                        float _2367;
                        bool _2368;
                        for (;;)
                        {
                            _2263 = ((_2115 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2252));
                            _2253 = (_2252 + 4294967295u) & _2252;
                            uint _2265 = _2263 * 40u;
                            _2278 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2265)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2265 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2265 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2265 + 3u)).x));
                            _2279 = _2278.w;
                            uint _2281 = (_2263 * 40u) + 8u;
                            _2291 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2281)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2281 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2281 + 2u)).x));
                            uint _2293 = (_2263 * 40u) + 16u;
                            _2306 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2293)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2293 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2293 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2293 + 3u)).x));
                            uint _2308 = (_2263 * 40u) + 20u;
                            _2321 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2308)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 3u)).x));
                            uint _2323 = (_2263 * 40u) + 24u;
                            vec4 _2336 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2323)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2323 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2323 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2323 + 3u)).x));
                            uint _2342 = (_2263 * 40u) + 28u;
                            vec4 _2355 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2342)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2342 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2342 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2342 + 3u)).x));
                            _2367 = fma(_1223, _2355.z, fma(_1222, _2355.y, _2355.x * _1221)) + _2355.w;
                            _2368 = !((fma(_1223, _2336.z, fma(_1222, _2336.y, _2336.x * _1221)) + _2336.w) <= 0.0);
                            float frontier_phi_94_pred;
                            float frontier_phi_94_pred_1;
                            float frontier_phi_94_pred_2;
                            if (_2368)
                            {
                                float _2402 = _2278.x - _1221;
                                float _2403 = _2278.y - _1222;
                                float _2404 = _2278.z - _1223;
                                float _2405 = dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404));
                                float _2408 = inversesqrt(_2405);
                                float _2415 = 1.0 - (_2405 / (_2279 * _2279));
                                float _2944 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
                                float _2417 = sqrt(_2405) * uintBitsToFloat(uvec4(_2371, _2372, _2373, texelFetch(g_SpotLightRenderingBuffer, int(((_2263 * 40u) + 4u) + 3u)).x)).w;
                                float _2419 = 1.39999997615814208984375 / (_2417 + 1.39999997615814208984375);
                                float _2420 = _2419 * _2419;
                                float _2423 = (fma(_1223, _2306.z, fma(_1222, _2306.y, _2306.x * _1221)) + _2306.w) / _2367;
                                float _2424 = (fma(_1223, _2321.z, fma(_1222, _2321.y, _2321.x * _1221)) + _2321.w) / _2367;
                                float _2428 = 1.0 - dot(vec2(_2423, _2424), vec2(_2423, _2424));
                                float _2955 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
                                float _2436 = dot(vec3(0.0), vec3((-0.0) - (_1221 * _1986), (-0.0) - (_1222 * _1986), (-0.0) - (_1223 * _1986)));
                                float _2966 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
                                float _2444 = ((1.0 - _2420) * dot(vec3(0.0), vec3(_2408 * _2402, _2408 * _2403, _2408 * _2404))) + _2420;
                                float _2977 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
                                float _2445 = isnan(1.0) ? _2977 : (isnan(_2977) ? 1.0 : min(_2977, 1.0));
                                float _2449 = (0.5 / (((isnan(1.0) ? _2966 : (isnan(_2966) ? 1.0 : min(_2966, 1.0))) + 9.9999999392252902907785028219223e-09) + _2445)) * _2445;
                                float _2988 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
                                float _2456 = ((isnan(1.0) ? _2955 : (isnan(_2955) ? 1.0 : min(_2955, 1.0))) * (isnan(1.0) ? _2944 : (isnan(_2944) ? 1.0 : min(_2944, 1.0)))) * (((isnan(1.0) ? _2988 : (isnan(_2988) ? 1.0 : min(_2988, 1.0))) * 3.1415927410125732421875) / (((_2417 * _2417) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_94_pred = _2456 * _2291.x;
                                frontier_phi_94_pred_1 = _2456 * _2291.z;
                                frontier_phi_94_pred_2 = _2456 * _2291.y;
                            }
                            else
                            {
                                frontier_phi_94_pred = 0.0;
                                frontier_phi_94_pred_1 = 0.0;
                                frontier_phi_94_pred_2 = 0.0;
                            }
                            _2460 = frontier_phi_94_pred;
                            _2462 = frontier_phi_94_pred_1;
                            _2461 = frontier_phi_94_pred_2;
                            _2239 = _2460 + _2249;
                            _2240 = _2461 + _2250;
                            _2241 = _2462 + _2251;
                            if (_2253 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2249 = _2239;
                                _2250 = _2240;
                                _2251 = _2241;
                                _2252 = _2253;
                                continue;
                            }
                        }
                        frontier_phi_88_pred = _2241;
                        frontier_phi_88_pred_1 = _2240;
                        frontier_phi_88_pred_2 = _2239;
                    }
                    _1975 = frontier_phi_88_pred;
                    _1973 = frontier_phi_88_pred_1;
                    _1971 = frontier_phi_88_pred_2;
                    uint _2116 = _2115 + 1u;
                    if (_2116 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2112 = _1971;
                        _2113 = _1973;
                        _2114 = _1975;
                        _2115 = _2116;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_75_76_ladder = _1975;
                frontier_phi_75_76_ladder_1 = _1973;
                frontier_phi_75_76_ladder_2 = _1971;
            }
            else
            {
                frontier_phi_75_76_ladder = _1841;
                frontier_phi_75_76_ladder_1 = _1839;
                frontier_phi_75_76_ladder_2 = _1837;
            }
            _1970 = frontier_phi_75_76_ladder_2;
            _1972 = frontier_phi_75_76_ladder_1;
            _1974 = frontier_phi_75_76_ladder;
        }
        float _1979 = isnan(1.0) ? _550 : (isnan(_550) ? 1.0 : min(_550, 1.0));
        _1743 = ((_1970 * 0.039999999105930328369140625) * _1979) + _1577;
        _1745 = ((_1972 * 0.039999999105930328369140625) * _1979) + _1578;
        _1747 = ((_1974 * 0.039999999105930328369140625) * _1979) + _1579;
    }
    else
    {
        _1743 = _1577;
        _1745 = _1578;
        _1747 = _1579;
    }
    uint _1754 = (_1443 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1769 = (cbInstanceData._m0[_1754].x * ((_499 * ((_455.x * cbMtdParam._m0[10u].x) - _380)) + _380)) + ((_1743 + ((isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0))) * _942)) * cbPerFrame._m0[3u].x);
    float _1770 = (cbInstanceData._m0[_1754].y * ((_499 * ((_455.y * cbMtdParam._m0[10u].y) - _381)) + _381)) + ((_1745 + ((isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0))) * _942)) * cbPerFrame._m0[3u].x);
    float _1771 = (cbInstanceData._m0[_1754].z * ((_499 * ((_455.z * cbMtdParam._m0[10u].z) - _382)) + _382)) + ((_1747 + ((isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0))) * _942)) * cbPerFrame._m0[3u].x);
    uint _1775 = _1443 + 6u;
    float _1783 = _537 / cbSceneParam._m0[86u].x;
    float _1784 = _538 / cbSceneParam._m0[86u].y;
    vec4 _1798 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1783, _1784, (log2((isnan(cbSceneParam._m0[77u].w) ? _524 : (isnan(_524) ? cbSceneParam._m0[77u].w : min(_524, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1800 = _1798.x;
    float _1801 = _1798.y;
    float _1802 = _1798.z;
    float _1803 = _1798.w;
    float _1893;
    float _1895;
    float _1897;
    float _1899;
    if (_524 > cbSceneParam._m0[78u].w)
    {
        float _1856 = isnan(_524) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _524 : min(cbSceneParam._m0[80u].w, _524));
        float _1857 = _1856 / _524;
        float _1868 = _1857 * _255;
        float _1869 = _256 * _1857;
        float _1870 = (-0.0) - _1869;
        float _1871 = _1857 * _257;
        float _1873 = (cbSceneParam._m0[77u].w * _1870) / _1856;
        float _1874 = _1873 + cbSceneParam._m0[79u].w;
        float _1875 = cbSceneParam._m0[79u].w - _1869;
        float _1881 = sqrt(((_1868 * _1868) + (_1869 * _1869)) + (_1871 * _1871));
        float _1884 = (1.0 - (cbSceneParam._m0[77u].w / _1856)) * _1881;
        float _1889 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1891 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2074;
        if (abs((_1870 - _1873) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2074 = ((((_1874 > 0.0) ? exp2(_1889 * _1874) : (2.0 - exp2(_1891 * _1874))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1884;
        }
        else
        {
            float _2016 = 1.0 / cbSceneParam._m0[80u].x;
            float _2017 = isnan(_1875) ? _1874 : (isnan(_1874) ? _1875 : max(_1874, _1875));
            float _2018 = isnan(_1875) ? _1874 : (isnan(_1874) ? _1875 : min(_1874, _1875));
            float _2027 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : min(_2017, 0.0));
            float _2028 = isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : min(_2018, 0.0));
            _2074 = ((abs(_1881 / _1870) * cbSceneParam._m0[80u].y) * ((((_2027 - _2028) * 2.0) - ((exp2(_1889 * (isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0)))) - exp2(_1889 * (isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0))))) * _2016)) - ((exp2(_1891 * _2027) - exp2(_1891 * _2028)) * _2016))) + (_1884 * cbSceneParam._m0[80u].z);
        }
        vec4 _2076 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1783, _1784, 1.0), 0.0);
        float _2085 = exp2((_2074 * (-1.44269502162933349609375)) * (1.0 - _2076.w));
        float _2086 = log2(_2085);
        float _2102 = log2(_1803);
        _1893 = (exp2(_2102 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].x)) * _2076.x) / cbSceneParam._m0[78u].x)) + _1800;
        _1895 = (exp2(_2102 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].y)) * _2076.y) / cbSceneParam._m0[78u].y)) + _1801;
        _1897 = (exp2(_2102 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].z)) * _2076.z) / cbSceneParam._m0[78u].z)) + _1802;
        _1899 = _2085 * _1803;
    }
    else
    {
        _1893 = _1800;
        _1895 = _1801;
        _1897 = _1802;
        _1899 = _1803;
    }
    float _1911 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1912 = _1911 == 3.0;
    float _1914 = log2(_1899);
    float _1921 = exp2(_1914 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0)));
    float _1922 = exp2(_1914 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
    float _1923 = exp2(_1914 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0)));
    float _1932 = (_1911 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1932 * (_1912 ? _1921 : (_1921 + (cbSceneParam._m0[72u].w * _1893)));
    SV_Target.y = _1932 * (_1912 ? _1922 : (_1922 + (cbSceneParam._m0[72u].w * _1895)));
    SV_Target.z = _1932 * (_1912 ? _1923 : (_1923 + (cbSceneParam._m0[72u].w * _1897)));
    SV_Target.w = cbInstanceData._m0[_1775].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1775].w;
}


