#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _138 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _139 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _140 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _146 = _145 * _138;
    float _147 = _145 * _139;
    float _148 = _145 * _140;
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _160 = _159 * TANGENT.x;
    float _161 = _159 * TANGENT.y;
    float _162 = _159 * TANGENT.z;
    float _207 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _238 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _244 = _238.w;
    float _257 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _244) + cbMtdParam._m0[11u].x) * _238.x;
    float _259 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _244) + cbMtdParam._m0[11u].y) * _238.y;
    float _261 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _244) + cbMtdParam._m0[11u].z) * _238.z;
    float _287 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _207));
    float _288 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _207));
    float _289 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _207));
    float _303 = (-0.0) - dot(vec3(_287, _288, _289), vec3(_146, _147, _148));
    float _304 = (-0.0) - dot(vec3(_287, _288, _289), vec3(_160, _161, _162));
    float _305 = (-0.0) - dot(vec3(_287, _288, _289), vec3((-0.0) - _153, (-0.0) - _154, (-0.0) - _155));
    float _309 = inversesqrt(dot(vec3(_303, _304, _305), vec3(_303, _304, _305)));
    float _310 = _309 * _305;
    float _312 = (cbMtdParam._m0[19u].x * _303) * _309;
    float _314 = (cbMtdParam._m0[18u].w * _304) * _309;
    float _315 = fract(TEXCOORD.x);
    float _316 = fract(TEXCOORD.y);
    float _322;
    if (_312 > 0.0)
    {
        _322 = (1.0 - _315) / _312;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_312 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _315) / _312;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _322 = frontier_phi_3_2_ladder;
    }
    float _330;
    if (_314 > 0.0)
    {
        _330 = (1.0 - _316) / _314;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_314 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _316) / _314;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _330 = frontier_phi_7_6_ladder;
    }
    bool _332 = _310 > 0.0;
    float _334 = _332 ? (cbMtdParam._m0[15u].x / _310) : 5000.0;
    float _335 = isnan(_330) ? _322 : (isnan(_322) ? _330 : min(_322, _330));
    float _336 = isnan(_334) ? _335 : (isnan(_335) ? _334 : min(_335, _334));
    float _340 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _341 = _315 + (-0.5);
    float _344 = _316 + (-0.5);
    float _347 = ((_336 * _310) + _340) / _340;
    vec4 _372 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_341 + (_336 * _312)) / _347) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_344 + (_336 * _314)) / _347) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _374 = _372.x;
    float _375 = _372.y;
    float _376 = _372.z;
    float _388 = (_374 - (_374 * _244)) * cbMtdParam._m0[9u].x;
    float _389 = (_375 - (_375 * _244)) * cbMtdParam._m0[9u].y;
    float _390 = cbMtdParam._m0[9u].z * (_376 - (_376 * _244));
    float _412 = (cbMtdParam._m0[21u].x * _303) * _309;
    float _414 = (cbMtdParam._m0[20u].w * _304) * _309;
    bool _415 = _412 > 0.0;
    float _420;
    if (_415)
    {
        _420 = (1.0 - _315) / _412;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_412 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _315) / _412;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _420 = frontier_phi_11_10_ladder;
    }
    bool _422 = _414 > 0.0;
    float _427;
    if (_422)
    {
        _427 = (1.0 - _316) / _414;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_414 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _316) / _414;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _427 = frontier_phi_15_14_ladder;
    }
    float _430 = _332 ? (cbMtdParam._m0[16u].z / _310) : 5000.0;
    float _431 = isnan(_427) ? _420 : (isnan(_420) ? _427 : min(_420, _427));
    float _432 = isnan(_430) ? _431 : (isnan(_431) ? _430 : min(_431, _430));
    float _436 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _440 = ((_432 * _310) + _436) / _436;
    float _445 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _447 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _463 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_341 + (_432 * _412)) / _440) + 0.5) + _445) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_344 + (_432 * _414)) / _440) + 0.5) + _447) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _468 = _463.x * cbMtdParam._m0[10u].x;
    float _469 = _463.y * cbMtdParam._m0[10u].y;
    float _470 = _463.z * cbMtdParam._m0[10u].z;
    float _478;
    if (_415)
    {
        _478 = (1.0 - _315) / _412;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_412 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _315) / _412;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _478 = frontier_phi_19_18_ladder;
    }
    float _484;
    if (_422)
    {
        _484 = (1.0 - _316) / _414;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_414 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _316) / _414;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _484 = frontier_phi_23_22_ladder;
    }
    float _486 = isnan(_484) ? _478 : (isnan(_478) ? _484 : min(_478, _484));
    float _487 = isnan(_430) ? _486 : (isnan(_486) ? _430 : min(_486, _430));
    float _494 = ((_487 * _310) + _436) / _436;
    vec4 _508 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_341 + (_487 * _412)) / _494) + 0.5) + _445) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_344 + (_487 * _414)) / _494) + 0.5) + _447) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _510 = _508.w;
    float _512 = _510 - (_510 * _244);
    float _522 = (_512 * ((_468 - _388) - (_468 * _244))) + _388;
    float _523 = (_512 * ((_469 - _389) - (_469 * _244))) + _389;
    float _524 = (_512 * ((_470 - _390) - (_470 * _244))) + _390;
    float _539 = (cbMtdParam._m0[21u].z * _303) * _309;
    float _541 = (cbMtdParam._m0[21u].y * _304) * _309;
    bool _542 = _539 > 0.0;
    float _547;
    if (_542)
    {
        _547 = (1.0 - _315) / _539;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_539 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _315) / _539;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _547 = frontier_phi_27_26_ladder;
    }
    bool _549 = _541 > 0.0;
    float _554;
    if (_549)
    {
        _554 = (1.0 - _316) / _541;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_541 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _316) / _541;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _554 = frontier_phi_31_30_ladder;
    }
    float _557 = _332 ? (cbMtdParam._m0[18u].x / _310) : 5000.0;
    float _558 = isnan(_554) ? _547 : (isnan(_547) ? _554 : min(_547, _554));
    float _559 = isnan(_557) ? _558 : (isnan(_558) ? _557 : min(_558, _557));
    float _563 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _567 = ((_559 * _310) + _563) / _563;
    float _572 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _574 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _591 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_341 + (_559 * _539)) / _567) + 0.5) + _572) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_344 + (_559 * _541)) / _567) + 0.5) + _574) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _596 = _591.x * cbMtdParam._m0[14u].x;
    float _597 = _591.y * cbMtdParam._m0[14u].y;
    float _598 = _591.z * cbMtdParam._m0[14u].z;
    float _606;
    if (_542)
    {
        _606 = (1.0 - _315) / _539;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_539 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _315) / _539;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _606 = frontier_phi_35_34_ladder;
    }
    float _612;
    if (_549)
    {
        _612 = (1.0 - _316) / _541;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_541 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _316) / _541;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _612 = frontier_phi_39_38_ladder;
    }
    float _614 = isnan(_612) ? _606 : (isnan(_606) ? _612 : min(_606, _612));
    float _615 = isnan(_557) ? _614 : (isnan(_614) ? _557 : min(_614, _557));
    float _622 = ((_615 * _310) + _563) / _563;
    vec4 _636 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_341 + (_615 * _539)) / _622) + 0.5) + _572) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_344 + (_615 * _541)) / _622) + 0.5) + _574) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _638 = _636.w;
    float _640 = _638 - (_638 * _244);
    float _651 = 0.5 - (_244 * 0.5);
    float _661 = (((_522 - _257) + (_640 * ((_596 - _522) - (_596 * _244)))) * _651) + _257;
    float _662 = (((_523 - _259) + (_640 * ((_597 - _523) - (_597 * _244)))) * _651) + _259;
    float _663 = (((_524 - _261) + (_640 * ((_598 - _524) - (_598 * _244)))) * _651) + _261;
    vec4 _675 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _677 = _675.x;
    vec4 _689 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _697 = (_689.x * 2.0) + (-1.0);
    float _699 = (_689.y * 2.0) + (-1.0);
    float _700 = dot(vec2(_697, _699), vec2(_697, _699));
    float _919 = isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0));
    float _705 = sqrt(1.0 - (isnan(1.0) ? _919 : (isnan(_919) ? 1.0 : min(_919, 1.0))));
    float _706 = _689.z * _244;
    float _709 = fma(_705, _153, fma(_699, _160, _697 * _146));
    float _712 = fma(_705, _154, fma(_699, _161, _697 * _147));
    float _715 = fma(_705, _155, fma(_699, _162, _697 * _148));
    float _719 = inversesqrt(dot(vec3(_709, _712, _715), vec3(_709, _712, _715)));
    float _930 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _941 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _952 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _963 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    float _974 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    uint _739 = uint(roundEven(NORMAL.w)) * 13u;
    uint _742 = (_739 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _748 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _941 : (isnan(_941) ? 1.0 : min(_941, 1.0)))) * cbInstanceData._m0[_742].x;
    float _749 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _952 : (isnan(_952) ? 1.0 : min(_952, 1.0)))) * cbInstanceData._m0[_742].y;
    float _750 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _963 : (isnan(_963) ? 1.0 : min(_963, 1.0)))) * cbInstanceData._m0[_742].z;
    float _985 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _996 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _1007 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    uint _754 = _739 + 6u;
    bool _782 = cbMtdParam._m0[1u].z != 0.0;
    float _783 = _782 ? cbInstanceData._m0[_754].w : 0.0;
    SV_Target.x = ((_709 * 0.5) * _719) + 0.500488758087158203125;
    SV_Target.y = ((_712 * 0.5) * _719) + 0.500488758087158203125;
    SV_Target.z = ((_715 * 0.5) * _719) + 0.500488758087158203125;
    SV_Target.w = _783;
    SV_Target_1.x = isnan(1.0) ? _974 : (isnan(_974) ? 1.0 : min(_974, 1.0));
    SV_Target_1.y = isnan(1.0) ? _930 : (isnan(_930) ? 1.0 : min(_930, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _782 ? cbInstanceData._m0[_754].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _985 : (isnan(_985) ? 1.0 : min(_985, 1.0));
    SV_Target_2.y = isnan(1.0) ? _996 : (isnan(_996) ? 1.0 : min(_996, 1.0));
    SV_Target_2.z = isnan(1.0) ? _1007 : (isnan(_1007) ? 1.0 : min(_1007, 1.0));
    SV_Target_2.w = _782 ? cbInstanceData._m0[_754].w : (float(floatBitsToUint(cbInstanceData._m0[_739 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _783;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _783;
}


