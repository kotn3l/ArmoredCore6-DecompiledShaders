#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _156 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _157 = _156 * _149;
    float _158 = _156 * _150;
    float _159 = _156 * _151;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    float _170 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _171 = _170 * TANGENT.x;
    float _172 = _170 * TANGENT.y;
    float _173 = _170 * TANGENT.z;
    float _218 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _228 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _218);
    float _229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _218);
    float _230 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _218);
    vec4 _249 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _255 = _249.w;
    float _268 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _255) + cbMtdParam._m0[11u].x) * _249.x;
    float _270 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _255) + cbMtdParam._m0[11u].y) * _249.y;
    float _272 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _255) + cbMtdParam._m0[11u].z) * _249.z;
    vec4 _290 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _294 = _290.z;
    float _317 = (_290.x * 2.0) + (-1.0);
    float _319 = (_290.y * 2.0) + (-1.0);
    float _322 = _317 - (_317 * _255);
    float _323 = _319 - (_319 * _255);
    float _332 = cbMtdParam._m0[22u].y + _228;
    float _333 = cbMtdParam._m0[22u].z + _229;
    float _334 = cbMtdParam._m0[22u].w + _230;
    float _348 = (-0.0) - dot(vec3(_332, _333, _334), vec3(_157, _158, _159));
    float _349 = (-0.0) - dot(vec3(_332, _333, _334), vec3(_171, _172, _173));
    float _350 = (-0.0) - dot(vec3(_332, _333, _334), vec3((-0.0) - _164, (-0.0) - _165, (-0.0) - _166));
    float _354 = inversesqrt(dot(vec3(_348, _349, _350), vec3(_348, _349, _350)));
    float _357 = _354 * _350;
    float _360 = ((_354 * _348) + (_322 * cbMtdParam._m0[20u].y)) * cbMtdParam._m0[19u].x;
    float _361 = ((_354 * _349) + (_323 * cbMtdParam._m0[20u].z)) * cbMtdParam._m0[18u].w;
    float _362 = fract(TEXCOORD.x);
    float _363 = fract(TEXCOORD.y);
    float _369;
    if (_360 > 0.0)
    {
        _369 = (1.0 - _362) / _360;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_360 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _362) / _360;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _369 = frontier_phi_3_2_ladder;
    }
    float _377;
    if (_361 > 0.0)
    {
        _377 = (1.0 - _363) / _361;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_361 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _363) / _361;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _377 = frontier_phi_7_6_ladder;
    }
    float _381 = (_357 > 0.0) ? (cbMtdParam._m0[15u].x / _357) : 5000.0;
    float _382 = isnan(_377) ? _369 : (isnan(_369) ? _377 : min(_369, _377));
    float _383 = isnan(_381) ? _382 : (isnan(_382) ? _381 : min(_382, _381));
    float _387 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _394 = ((_383 * _357) + _387) / _387;
    vec4 _419 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_362 + (-0.5)) + (_383 * _360)) / _394) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_363 + (-0.5)) + (_383 * _361)) / _394) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _421 = _419.x;
    float _422 = _419.y;
    float _423 = _419.z;
    float _435 = (_421 - (_421 * _255)) * cbMtdParam._m0[9u].x;
    float _436 = (_422 - (_422 * _255)) * cbMtdParam._m0[9u].y;
    float _437 = cbMtdParam._m0[9u].z * (_423 - (_423 * _255));
    vec4 _449 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _451 = _449.x;
    vec4 _463 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _467 = _463.z;
    float _470 = (_463.x * 2.0) + (-1.0);
    float _471 = (_463.y * 2.0) + (-1.0);
    float _472 = dot(vec2(_470, _471), vec2(_470, _471));
    float _723 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _477 = sqrt(1.0 - (isnan(1.0) ? _723 : (isnan(_723) ? 1.0 : min(_723, 1.0))));
    float _478 = _467 * _255;
    float _485 = (cbMtdParam._m0[15u].w * ((_294 - _478) + ((_467 - _294) * _255))) + _478;
    float _489 = (cbMtdParam._m0[16u].x * _322) + _470;
    float _490 = (cbMtdParam._m0[16u].x * _323) + _471;
    float _493 = fma(_477, _164, fma(_490, _171, _489 * _157));
    float _496 = fma(_477, _165, fma(_490, _172, _489 * _158));
    float _499 = fma(_477, _166, fma(_490, _173, _489 * _159));
    float _503 = inversesqrt(dot(vec3(_493, _496, _499), vec3(_493, _496, _499)));
    float _734 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _745 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _505 = isnan(1.0) ? _745 : (isnan(_745) ? 1.0 : min(_745, 1.0));
    float _756 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _506 = isnan(1.0) ? _756 : (isnan(_756) ? 1.0 : min(_756, 1.0));
    float _767 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _507 = isnan(1.0) ? _767 : (isnan(_767) ? 1.0 : min(_767, 1.0));
    float _778 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    uint _510 = uint(roundEven(NORMAL.w));
    vec4 _515 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _517 = _515.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _582 = sqrt(((_228 * _228) + (_229 * _229)) + (_230 * _230));
        float _588 = (cbMatDynParam._m0[5u].x * _582) + cbMatDynParam._m0[5u].y;
        float _789 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
        float _589 = isnan(1.0) ? _789 : (isnan(_789) ? 1.0 : min(_789, 1.0));
        float _593 = (cbMatDynParam._m0[5u].z * _582) + cbMatDynParam._m0[5u].w;
        float _800 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0))) - _589)) + _589) < ((_517 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _621;
    uint _538;
    vec4 _543;
    float _550;
    float _551;
    float _552;
    float _553;
    float _554;
    float _555;
    float _559;
    vec4 _562;
    float _564;
    float _565;
    bool _576;
    for (;;)
    {
        _538 = _510 * 13u;
        _543 = cbInstanceData._m0[(_538 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _547 = (cbMtdParam._m0[0u].x * _505) * _543.x;
        float _548 = (cbMtdParam._m0[0u].y * _506) * _543.y;
        float _549 = (cbMtdParam._m0[0u].z * _507) * _543.z;
        float _811 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
        _550 = isnan(1.0) ? _811 : (isnan(_811) ? 1.0 : min(_811, 1.0));
        float _822 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
        _551 = isnan(1.0) ? _822 : (isnan(_822) ? 1.0 : min(_822, 1.0));
        float _833 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
        _552 = isnan(1.0) ? _833 : (isnan(_833) ? 1.0 : min(_833, 1.0));
        _553 = _435 * _543.x;
        _554 = _436 * _543.y;
        _555 = _437 * _543.z;
        _559 = cbInstanceData._m0[_538 + 6u].w;
        float _560 = _517 + (-0.5);
        _562 = cbMtdParam._m0[1u];
        _564 = _562.y * _560;
        _565 = _560 * 0.999000012874603271484375;
        _576 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_576)
        {
            if ((cbInstanceData._m0[_538 + 7u].x + _565) < 0.5)
            {
                _621 = true;
                break;
            }
        }
        if ((_543.w < 1.0) && ((_543.w + _565) < 0.5))
        {
            _621 = true;
            break;
        }
        if ((_564 + 1.0) < _562.x)
        {
            _621 = true;
            break;
        }
        _621 = false;
        break;
    }
    if (_621)
    {
        discard_state = true;
    }
    bool _654 = cbMtdParam._m0[1u].z != 0.0;
    float _655 = _654 ? _559 : 0.0;
    SV_Target.x = ((_493 * 0.5) * _503) + 0.500488758087158203125;
    SV_Target.y = ((_496 * 0.5) * _503) + 0.500488758087158203125;
    SV_Target.z = ((_499 * 0.5) * _503) + 0.500488758087158203125;
    SV_Target.w = _655;
    SV_Target_1.x = isnan(1.0) ? _778 : (isnan(_778) ? 1.0 : min(_778, 1.0));
    SV_Target_1.y = isnan(1.0) ? _734 : (isnan(_734) ? 1.0 : min(_734, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _654 ? _559 : TEXCOORD.z;
    SV_Target_2.x = _550;
    SV_Target_2.y = _551;
    SV_Target_2.z = _552;
    SV_Target_2.w = _654 ? _559 : (float(floatBitsToUint(cbInstanceData._m0[_538 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _655;
    SV_Target_4.x = _553 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _554 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _555 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _655;
    discard_exit();
}


