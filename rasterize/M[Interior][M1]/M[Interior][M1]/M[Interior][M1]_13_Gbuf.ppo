#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _129 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _130 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _135 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _142 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _197 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _235 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _197));
    float _236 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _197));
    float _237 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _197));
    float _251 = (-0.0) - dot(vec3(_235, _236, _237), vec3(_135 * _128, _135 * _129, _135 * _130));
    float _252 = (-0.0) - dot(vec3(_235, _236, _237), vec3(_149 * TANGENT.x, _149 * TANGENT.y, _149 * TANGENT.z));
    float _253 = (-0.0) - dot(vec3(_235, _236, _237), vec3((-0.0) - (_142 * NORMAL.x), (-0.0) - (_142 * NORMAL.y), (-0.0) - (_142 * NORMAL.z)));
    float _257 = inversesqrt(dot(vec3(_251, _252, _253), vec3(_251, _252, _253)));
    float _258 = _257 * _253;
    float _260 = (cbMtdParam._m0[19u].x * _251) * _257;
    float _262 = (cbMtdParam._m0[18u].w * _252) * _257;
    float _263 = fract(TEXCOORD.x);
    float _264 = fract(TEXCOORD.y);
    float _270;
    if (_260 > 0.0)
    {
        _270 = (1.0 - _263) / _260;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_260 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _263) / _260;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _270 = frontier_phi_3_2_ladder;
    }
    float _278;
    if (_262 > 0.0)
    {
        _278 = (1.0 - _264) / _262;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_262 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _264) / _262;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _278 = frontier_phi_7_6_ladder;
    }
    bool _280 = _258 > 0.0;
    float _282 = _280 ? (cbMtdParam._m0[15u].x / _258) : 5000.0;
    float _283 = isnan(_278) ? _270 : (isnan(_270) ? _278 : min(_270, _278));
    float _284 = isnan(_282) ? _283 : (isnan(_283) ? _282 : min(_283, _282));
    float _288 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _289 = _263 + (-0.5);
    float _292 = _264 + (-0.5);
    float _295 = ((_284 * _258) + _288) / _288;
    vec4 _321 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_289 + (_284 * _260)) / _295) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_292 + (_284 * _262)) / _295) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _332 = cbMtdParam._m0[9u].x * _321.x;
    float _333 = cbMtdParam._m0[9u].y * _321.y;
    float _334 = cbMtdParam._m0[9u].z * _321.z;
    float _356 = (cbMtdParam._m0[21u].x * _251) * _257;
    float _358 = (cbMtdParam._m0[20u].w * _252) * _257;
    bool _359 = _356 > 0.0;
    float _364;
    if (_359)
    {
        _364 = (1.0 - _263) / _356;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _263) / _356;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _364 = frontier_phi_11_10_ladder;
    }
    bool _366 = _358 > 0.0;
    float _371;
    if (_366)
    {
        _371 = (1.0 - _264) / _358;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_358 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _264) / _358;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _371 = frontier_phi_15_14_ladder;
    }
    float _374 = _280 ? (cbMtdParam._m0[16u].z / _258) : 5000.0;
    float _375 = isnan(_371) ? _364 : (isnan(_364) ? _371 : min(_364, _371));
    float _376 = isnan(_374) ? _375 : (isnan(_375) ? _374 : min(_375, _374));
    float _380 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _384 = ((_376 * _258) + _380) / _380;
    float _389 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _391 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _407 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_289 + (_376 * _356)) / _384) + 0.5) + _389) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_292 + (_376 * _358)) / _384) + 0.5) + _391) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _419;
    if (_359)
    {
        _419 = (1.0 - _263) / _356;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_356 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _263) / _356;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _419 = frontier_phi_19_18_ladder;
    }
    float _425;
    if (_366)
    {
        _425 = (1.0 - _264) / _358;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_358 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _264) / _358;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _425 = frontier_phi_23_22_ladder;
    }
    float _427 = isnan(_425) ? _419 : (isnan(_419) ? _425 : min(_419, _425));
    float _428 = isnan(_374) ? _427 : (isnan(_427) ? _374 : min(_427, _374));
    float _435 = ((_428 * _258) + _380) / _380;
    vec4 _449 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_289 + (_428 * _356)) / _435) + 0.5) + _389) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_292 + (_428 * _358)) / _435) + 0.5) + _391) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _451 = _449.w;
    float _458 = (_451 * ((_407.x * cbMtdParam._m0[10u].x) - _332)) + _332;
    float _459 = (_451 * ((_407.y * cbMtdParam._m0[10u].y) - _333)) + _333;
    float _460 = (_451 * ((_407.z * cbMtdParam._m0[10u].z) - _334)) + _334;
    float _475 = (cbMtdParam._m0[21u].z * _251) * _257;
    float _477 = (cbMtdParam._m0[21u].y * _252) * _257;
    bool _478 = _475 > 0.0;
    float _483;
    if (_478)
    {
        _483 = (1.0 - _263) / _475;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_475 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _263) / _475;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _483 = frontier_phi_27_26_ladder;
    }
    bool _485 = _477 > 0.0;
    float _490;
    if (_485)
    {
        _490 = (1.0 - _264) / _477;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_477 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _264) / _477;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _490 = frontier_phi_31_30_ladder;
    }
    float _493 = _280 ? (cbMtdParam._m0[18u].x / _258) : 5000.0;
    float _494 = isnan(_490) ? _483 : (isnan(_483) ? _490 : min(_483, _490));
    float _495 = isnan(_493) ? _494 : (isnan(_494) ? _493 : min(_494, _493));
    float _499 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _503 = ((_495 * _258) + _499) / _499;
    float _508 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _510 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _527 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_289 + (_495 * _475)) / _503) + 0.5) + _508) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_292 + (_495 * _477)) / _503) + 0.5) + _510) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _539;
    if (_478)
    {
        _539 = (1.0 - _263) / _475;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_475 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _263) / _475;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _539 = frontier_phi_35_34_ladder;
    }
    float _545;
    if (_485)
    {
        _545 = (1.0 - _264) / _477;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_477 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _264) / _477;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _545 = frontier_phi_39_38_ladder;
    }
    float _547 = isnan(_545) ? _539 : (isnan(_539) ? _545 : min(_539, _545));
    float _548 = isnan(_493) ? _547 : (isnan(_547) ? _493 : min(_547, _493));
    float _555 = ((_548 * _258) + _499) / _499;
    vec4 _569 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_289 + (_548 * _475)) / _555) + 0.5) + _508) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_292 + (_548 * _477)) / _555) + 0.5) + _510) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _571 = _569.w;
    float _578 = (_571 * ((_527.x * cbMtdParam._m0[14u].x) - _458)) + _458;
    float _579 = (_571 * ((_527.y * cbMtdParam._m0[14u].y) - _459)) + _459;
    float _580 = (_571 * ((_527.z * cbMtdParam._m0[14u].z) - _460)) + _460;
    float _769 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _780 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _791 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    uint _598 = uint(roundEven(NORMAL.w)) * 13u;
    uint _601 = (_598 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _607 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0)))) * cbInstanceData._m0[_601].x;
    float _608 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0)))) * cbInstanceData._m0[_601].y;
    float _609 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0)))) * cbInstanceData._m0[_601].z;
    float _802 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _813 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _824 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
    uint _613 = _598 + 6u;
    bool _631 = cbMtdParam._m0[1u].z != 0.0;
    float _632 = _631 ? cbInstanceData._m0[_613].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _632;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _631 ? cbInstanceData._m0[_613].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _802 : (isnan(_802) ? 1.0 : min(_802, 1.0));
    SV_Target_2.y = isnan(1.0) ? _813 : (isnan(_813) ? 1.0 : min(_813, 1.0));
    SV_Target_2.z = isnan(1.0) ? _824 : (isnan(_824) ? 1.0 : min(_824, 1.0));
    SV_Target_2.w = _631 ? cbInstanceData._m0[_613].w : (float(floatBitsToUint(cbInstanceData._m0[_598 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _632;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _632;
}


