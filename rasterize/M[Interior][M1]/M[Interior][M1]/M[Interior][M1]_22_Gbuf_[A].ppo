#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _153 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _154 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _155 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _160 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _161 = _160 * _153;
    float _162 = _160 * _154;
    float _163 = _160 * _155;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _174 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _175 = _174 * TANGENT.x;
    float _176 = _174 * TANGENT.y;
    float _177 = _174 * TANGENT.z;
    float _222 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _232 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _222);
    float _233 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _222);
    float _234 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _222);
    vec4 _253 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _259 = _253.w;
    float _272 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _259) + cbMtdParam._m0[11u].x) * _253.x;
    float _274 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _259) + cbMtdParam._m0[11u].y) * _253.y;
    float _276 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _259) + cbMtdParam._m0[11u].z) * _253.z;
    vec4 _294 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _298 = _294.z;
    float _321 = (_294.x * 2.0) + (-1.0);
    float _323 = (_294.y * 2.0) + (-1.0);
    float _326 = _321 - (_321 * _259);
    float _327 = _323 - (_323 * _259);
    float _336 = cbMtdParam._m0[22u].y + _232;
    float _337 = cbMtdParam._m0[22u].z + _233;
    float _338 = cbMtdParam._m0[22u].w + _234;
    float _352 = (-0.0) - dot(vec3(_336, _337, _338), vec3(_161, _162, _163));
    float _353 = (-0.0) - dot(vec3(_336, _337, _338), vec3(_175, _176, _177));
    float _354 = (-0.0) - dot(vec3(_336, _337, _338), vec3((-0.0) - _168, (-0.0) - _169, (-0.0) - _170));
    float _358 = inversesqrt(dot(vec3(_352, _353, _354), vec3(_352, _353, _354)));
    float _361 = _358 * _354;
    float _362 = (_358 * _352) + (_326 * cbMtdParam._m0[20u].y);
    float _363 = (_358 * _353) + (_327 * cbMtdParam._m0[20u].z);
    float _364 = _362 * cbMtdParam._m0[19u].x;
    float _365 = _363 * cbMtdParam._m0[18u].w;
    float _366 = fract(TEXCOORD.x);
    float _367 = fract(TEXCOORD.y);
    float _373;
    if (_364 > 0.0)
    {
        _373 = (1.0 - _366) / _364;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_364 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _366) / _364;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _373 = frontier_phi_3_2_ladder;
    }
    float _381;
    if (_365 > 0.0)
    {
        _381 = (1.0 - _367) / _365;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_365 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _367) / _365;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _381 = frontier_phi_7_6_ladder;
    }
    bool _383 = _361 > 0.0;
    float _385 = _383 ? (cbMtdParam._m0[15u].x / _361) : 5000.0;
    float _386 = isnan(_381) ? _373 : (isnan(_373) ? _381 : min(_373, _381));
    float _387 = isnan(_385) ? _386 : (isnan(_386) ? _385 : min(_386, _385));
    float _391 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _392 = _366 + (-0.5);
    float _395 = _367 + (-0.5);
    float _398 = ((_387 * _361) + _391) / _391;
    vec4 _423 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_392 + (_387 * _364)) / _398) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_395 + (_387 * _365)) / _398) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _425 = _423.x;
    float _426 = _423.y;
    float _427 = _423.z;
    float _439 = (_425 - (_425 * _259)) * cbMtdParam._m0[9u].x;
    float _440 = (_426 - (_426 * _259)) * cbMtdParam._m0[9u].y;
    float _441 = cbMtdParam._m0[9u].z * (_427 - (_427 * _259));
    float _459 = _362 * cbMtdParam._m0[21u].x;
    float _460 = _363 * cbMtdParam._m0[20u].w;
    bool _461 = _459 > 0.0;
    float _466;
    if (_461)
    {
        _466 = (1.0 - _366) / _459;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_459 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _366) / _459;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _466 = frontier_phi_11_10_ladder;
    }
    bool _468 = _460 > 0.0;
    float _473;
    if (_468)
    {
        _473 = (1.0 - _367) / _460;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_460 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _367) / _460;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _473 = frontier_phi_15_14_ladder;
    }
    float _476 = _383 ? (cbMtdParam._m0[16u].z / _361) : 5000.0;
    float _477 = isnan(_473) ? _466 : (isnan(_466) ? _473 : min(_466, _473));
    float _478 = isnan(_476) ? _477 : (isnan(_477) ? _476 : min(_477, _476));
    float _482 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _486 = ((_478 * _361) + _482) / _482;
    float _491 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _493 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _509 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_392 + (_478 * _459)) / _486) + 0.5) + _491) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_395 + (_478 * _460)) / _486) + 0.5) + _493) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _514 = _509.x * cbMtdParam._m0[10u].x;
    float _515 = _509.y * cbMtdParam._m0[10u].y;
    float _516 = _509.z * cbMtdParam._m0[10u].z;
    float _524;
    if (_461)
    {
        _524 = (1.0 - _366) / _459;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_459 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _366) / _459;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _524 = frontier_phi_19_18_ladder;
    }
    float _530;
    if (_468)
    {
        _530 = (1.0 - _367) / _460;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_460 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _367) / _460;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _530 = frontier_phi_23_22_ladder;
    }
    float _532 = isnan(_530) ? _524 : (isnan(_524) ? _530 : min(_524, _530));
    float _533 = isnan(_476) ? _532 : (isnan(_532) ? _476 : min(_532, _476));
    float _540 = ((_533 * _361) + _482) / _482;
    vec4 _554 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_392 + (_533 * _459)) / _540) + 0.5) + _491) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_395 + (_533 * _460)) / _540) + 0.5) + _493) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _556 = _554.w;
    float _558 = _556 - (_556 * _259);
    float _568 = (_558 * ((_514 - _439) - (_514 * _259))) + _439;
    float _569 = (_558 * ((_515 - _440) - (_515 * _259))) + _440;
    float _570 = (_558 * ((_516 - _441) - (_516 * _259))) + _441;
    float _584 = _362 * cbMtdParam._m0[21u].z;
    float _585 = _363 * cbMtdParam._m0[21u].y;
    bool _586 = _584 > 0.0;
    float _591;
    if (_586)
    {
        _591 = (1.0 - _366) / _584;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_584 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _366) / _584;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _591 = frontier_phi_27_26_ladder;
    }
    bool _593 = _585 > 0.0;
    float _598;
    if (_593)
    {
        _598 = (1.0 - _367) / _585;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _367) / _585;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _598 = frontier_phi_31_30_ladder;
    }
    float _601 = _383 ? (cbMtdParam._m0[18u].x / _361) : 5000.0;
    float _602 = isnan(_598) ? _591 : (isnan(_591) ? _598 : min(_591, _598));
    float _603 = isnan(_601) ? _602 : (isnan(_602) ? _601 : min(_602, _601));
    float _607 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _611 = ((_603 * _361) + _607) / _607;
    float _616 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _618 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _635 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_392 + (_603 * _584)) / _611) + 0.5) + _616) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_395 + (_603 * _585)) / _611) + 0.5) + _618) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _640 = _635.x * cbMtdParam._m0[14u].x;
    float _641 = _635.y * cbMtdParam._m0[14u].y;
    float _642 = _635.z * cbMtdParam._m0[14u].z;
    float _650;
    if (_586)
    {
        _650 = (1.0 - _366) / _584;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_584 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _366) / _584;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _650 = frontier_phi_35_34_ladder;
    }
    float _656;
    if (_593)
    {
        _656 = (1.0 - _367) / _585;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_585 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _367) / _585;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _656 = frontier_phi_39_38_ladder;
    }
    float _658 = isnan(_656) ? _650 : (isnan(_650) ? _656 : min(_650, _656));
    float _659 = isnan(_601) ? _658 : (isnan(_658) ? _601 : min(_658, _601));
    float _666 = ((_659 * _361) + _607) / _607;
    vec4 _680 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_392 + (_659 * _584)) / _666) + 0.5) + _616) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_395 + (_659 * _585)) / _666) + 0.5) + _618) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _682 = _680.w;
    float _684 = _682 - (_682 * _259);
    float _694 = (_684 * ((_640 - _568) - (_640 * _259))) + _568;
    float _695 = (_684 * ((_641 - _569) - (_641 * _259))) + _569;
    float _696 = (_684 * ((_642 - _570) - (_642 * _259))) + _570;
    vec4 _708 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _710 = _708.x;
    vec4 _722 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _726 = _722.z;
    float _729 = (_722.x * 2.0) + (-1.0);
    float _730 = (_722.y * 2.0) + (-1.0);
    float _731 = dot(vec2(_729, _730), vec2(_729, _730));
    float _1069 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _736 = sqrt(1.0 - (isnan(1.0) ? _1069 : (isnan(_1069) ? 1.0 : min(_1069, 1.0))));
    float _737 = _726 * _259;
    float _744 = (cbMtdParam._m0[15u].w * ((_298 - _737) + ((_726 - _298) * _259))) + _737;
    float _748 = (cbMtdParam._m0[16u].x * _326) + _729;
    float _749 = (cbMtdParam._m0[16u].x * _327) + _730;
    float _752 = fma(_736, _168, fma(_749, _175, _748 * _161));
    float _755 = fma(_736, _169, fma(_749, _176, _748 * _162));
    float _758 = fma(_736, _170, fma(_749, _177, _748 * _163));
    float _762 = inversesqrt(dot(vec3(_752, _755, _758), vec3(_752, _755, _758)));
    float _1080 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _1091 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _764 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
    float _1102 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _765 = isnan(1.0) ? _1102 : (isnan(_1102) ? 1.0 : min(_1102, 1.0));
    float _1113 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _766 = isnan(1.0) ? _1113 : (isnan(_1113) ? 1.0 : min(_1113, 1.0));
    float _1124 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    uint _769 = uint(roundEven(NORMAL.w));
    vec4 _774 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _776 = _774.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _841 = sqrt(((_232 * _232) + (_233 * _233)) + (_234 * _234));
        float _847 = (cbMatDynParam._m0[5u].x * _841) + cbMatDynParam._m0[5u].y;
        float _1135 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
        float _848 = isnan(1.0) ? _1135 : (isnan(_1135) ? 1.0 : min(_1135, 1.0));
        float _852 = (cbMatDynParam._m0[5u].z * _841) + cbMatDynParam._m0[5u].w;
        float _1146 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1146 : (isnan(_1146) ? 1.0 : min(_1146, 1.0))) - _848)) + _848) < ((_776 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _879;
    uint _797;
    vec4 _802;
    float _809;
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _818;
    vec4 _821;
    float _823;
    float _824;
    bool _835;
    for (;;)
    {
        _797 = _769 * 13u;
        _802 = cbInstanceData._m0[(_797 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _806 = (cbMtdParam._m0[0u].x * _764) * _802.x;
        float _807 = (cbMtdParam._m0[0u].y * _765) * _802.y;
        float _808 = (cbMtdParam._m0[0u].z * _766) * _802.z;
        float _1157 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
        _809 = isnan(1.0) ? _1157 : (isnan(_1157) ? 1.0 : min(_1157, 1.0));
        float _1168 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        _810 = isnan(1.0) ? _1168 : (isnan(_1168) ? 1.0 : min(_1168, 1.0));
        float _1179 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
        _811 = isnan(1.0) ? _1179 : (isnan(_1179) ? 1.0 : min(_1179, 1.0));
        _812 = _802.x * _694;
        _813 = _802.y * _695;
        _814 = _802.z * _696;
        _818 = cbInstanceData._m0[_797 + 6u].w;
        float _819 = _776 + (-0.5);
        _821 = cbMtdParam._m0[1u];
        _823 = _821.y * _819;
        _824 = _819 * 0.999000012874603271484375;
        _835 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_835)
        {
            if ((cbInstanceData._m0[_797 + 7u].x + _824) < 0.5)
            {
                _879 = true;
                break;
            }
        }
        if ((_802.w < 1.0) && ((_802.w + _824) < 0.5))
        {
            _879 = true;
            break;
        }
        if ((_823 + 1.0) < _821.x)
        {
            _879 = true;
            break;
        }
        _879 = false;
        break;
    }
    if (_879)
    {
        discard_state = true;
    }
    bool _912 = cbMtdParam._m0[1u].z != 0.0;
    float _913 = _912 ? _818 : 0.0;
    SV_Target.x = ((_752 * 0.5) * _762) + 0.500488758087158203125;
    SV_Target.y = ((_755 * 0.5) * _762) + 0.500488758087158203125;
    SV_Target.z = ((_758 * 0.5) * _762) + 0.500488758087158203125;
    SV_Target.w = _913;
    SV_Target_1.x = isnan(1.0) ? _1124 : (isnan(_1124) ? 1.0 : min(_1124, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1080 : (isnan(_1080) ? 1.0 : min(_1080, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _912 ? _818 : TEXCOORD.z;
    SV_Target_2.x = _809;
    SV_Target_2.y = _810;
    SV_Target_2.z = _811;
    SV_Target_2.w = _912 ? _818 : (float(floatBitsToUint(cbInstanceData._m0[_797 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _913;
    SV_Target_4.x = _812 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _813 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _814 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _913;
    discard_exit();
}


