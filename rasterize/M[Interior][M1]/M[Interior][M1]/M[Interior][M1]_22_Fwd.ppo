#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1284;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _184 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _185 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _186 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _191 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _192 = _191 * _184;
    float _193 = _191 * _185;
    float _194 = _191 * _186;
    float _198 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _199 = _198 * NORMAL.x;
    float _200 = _198 * NORMAL.y;
    float _201 = _198 * NORMAL.z;
    float _205 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _206 = _205 * TANGENT.x;
    float _207 = _205 * TANGENT.y;
    float _208 = _205 * TANGENT.z;
    float _253 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _263 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _253);
    float _264 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _253);
    float _265 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _253);
    vec4 _284 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _290 = _284.w;
    float _303 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _290) + cbMtdParam._m0[11u].x) * _284.x;
    float _305 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _290) + cbMtdParam._m0[11u].y) * _284.y;
    float _307 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _290) + cbMtdParam._m0[11u].z) * _284.z;
    vec4 _325 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _329 = _325.z;
    float _352 = (_325.x * 2.0) + (-1.0);
    float _354 = (_325.y * 2.0) + (-1.0);
    float _357 = _352 - (_352 * _290);
    float _358 = _354 - (_354 * _290);
    float _367 = cbMtdParam._m0[22u].y + _263;
    float _368 = cbMtdParam._m0[22u].z + _264;
    float _369 = cbMtdParam._m0[22u].w + _265;
    float _383 = (-0.0) - dot(vec3(_367, _368, _369), vec3(_192, _193, _194));
    float _384 = (-0.0) - dot(vec3(_367, _368, _369), vec3(_206, _207, _208));
    float _385 = (-0.0) - dot(vec3(_367, _368, _369), vec3((-0.0) - _199, (-0.0) - _200, (-0.0) - _201));
    float _389 = inversesqrt(dot(vec3(_383, _384, _385), vec3(_383, _384, _385)));
    float _392 = _389 * _385;
    float _393 = (_389 * _383) + (_357 * cbMtdParam._m0[20u].y);
    float _394 = (_389 * _384) + (_358 * cbMtdParam._m0[20u].z);
    float _395 = _393 * cbMtdParam._m0[19u].x;
    float _396 = _394 * cbMtdParam._m0[18u].w;
    float _397 = fract(TEXCOORD.x);
    float _398 = fract(TEXCOORD.y);
    float _404;
    if (_395 > 0.0)
    {
        _404 = (1.0 - _397) / _395;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_395 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _397) / _395;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _404 = frontier_phi_3_2_ladder;
    }
    float _412;
    if (_396 > 0.0)
    {
        _412 = (1.0 - _398) / _396;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_396 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _398) / _396;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _412 = frontier_phi_7_6_ladder;
    }
    bool _414 = _392 > 0.0;
    float _416 = _414 ? (cbMtdParam._m0[15u].x / _392) : 5000.0;
    float _417 = isnan(_412) ? _404 : (isnan(_404) ? _412 : min(_404, _412));
    float _418 = isnan(_416) ? _417 : (isnan(_417) ? _416 : min(_417, _416));
    float _422 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _423 = _397 + (-0.5);
    float _426 = _398 + (-0.5);
    float _429 = ((_418 * _392) + _422) / _422;
    vec4 _454 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_423 + (_418 * _395)) / _429) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_426 + (_418 * _396)) / _429) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _456 = _454.x;
    float _457 = _454.y;
    float _458 = _454.z;
    float _470 = (_456 - (_456 * _290)) * cbMtdParam._m0[9u].x;
    float _471 = (_457 - (_457 * _290)) * cbMtdParam._m0[9u].y;
    float _472 = cbMtdParam._m0[9u].z * (_458 - (_458 * _290));
    float _490 = _393 * cbMtdParam._m0[21u].x;
    float _491 = _394 * cbMtdParam._m0[20u].w;
    bool _492 = _490 > 0.0;
    float _497;
    if (_492)
    {
        _497 = (1.0 - _397) / _490;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_490 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _397) / _490;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _497 = frontier_phi_11_10_ladder;
    }
    bool _499 = _491 > 0.0;
    float _504;
    if (_499)
    {
        _504 = (1.0 - _398) / _491;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_491 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _398) / _491;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _504 = frontier_phi_15_14_ladder;
    }
    float _507 = _414 ? (cbMtdParam._m0[16u].z / _392) : 5000.0;
    float _508 = isnan(_504) ? _497 : (isnan(_497) ? _504 : min(_497, _504));
    float _509 = isnan(_507) ? _508 : (isnan(_508) ? _507 : min(_508, _507));
    float _513 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _517 = ((_509 * _392) + _513) / _513;
    float _522 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _524 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _540 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_423 + (_509 * _490)) / _517) + 0.5) + _522) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_426 + (_509 * _491)) / _517) + 0.5) + _524) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _545 = _540.x * cbMtdParam._m0[10u].x;
    float _546 = _540.y * cbMtdParam._m0[10u].y;
    float _547 = _540.z * cbMtdParam._m0[10u].z;
    float _555;
    if (_492)
    {
        _555 = (1.0 - _397) / _490;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_490 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _397) / _490;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _555 = frontier_phi_19_18_ladder;
    }
    float _561;
    if (_499)
    {
        _561 = (1.0 - _398) / _491;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_491 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _398) / _491;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _561 = frontier_phi_23_22_ladder;
    }
    float _563 = isnan(_561) ? _555 : (isnan(_555) ? _561 : min(_555, _561));
    float _564 = isnan(_507) ? _563 : (isnan(_563) ? _507 : min(_563, _507));
    float _571 = ((_564 * _392) + _513) / _513;
    vec4 _585 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_423 + (_564 * _490)) / _571) + 0.5) + _522) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_426 + (_564 * _491)) / _571) + 0.5) + _524) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _587 = _585.w;
    float _589 = _587 - (_587 * _290);
    float _599 = (_589 * ((_545 - _470) - (_545 * _290))) + _470;
    float _600 = (_589 * ((_546 - _471) - (_546 * _290))) + _471;
    float _601 = (_589 * ((_547 - _472) - (_547 * _290))) + _472;
    float _615 = _393 * cbMtdParam._m0[21u].z;
    float _616 = _394 * cbMtdParam._m0[21u].y;
    bool _617 = _615 > 0.0;
    float _622;
    if (_617)
    {
        _622 = (1.0 - _397) / _615;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_615 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _397) / _615;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _622 = frontier_phi_27_26_ladder;
    }
    bool _624 = _616 > 0.0;
    float _629;
    if (_624)
    {
        _629 = (1.0 - _398) / _616;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_616 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _398) / _616;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _629 = frontier_phi_31_30_ladder;
    }
    float _632 = _414 ? (cbMtdParam._m0[18u].x / _392) : 5000.0;
    float _633 = isnan(_629) ? _622 : (isnan(_622) ? _629 : min(_622, _629));
    float _634 = isnan(_632) ? _633 : (isnan(_633) ? _632 : min(_633, _632));
    float _638 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _642 = ((_634 * _392) + _638) / _638;
    float _647 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _649 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _666 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_423 + (_634 * _615)) / _642) + 0.5) + _647) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_426 + (_634 * _616)) / _642) + 0.5) + _649) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _671 = _666.x * cbMtdParam._m0[14u].x;
    float _672 = _666.y * cbMtdParam._m0[14u].y;
    float _673 = _666.z * cbMtdParam._m0[14u].z;
    float _681;
    if (_617)
    {
        _681 = (1.0 - _397) / _615;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_615 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _397) / _615;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _681 = frontier_phi_35_34_ladder;
    }
    float _687;
    if (_624)
    {
        _687 = (1.0 - _398) / _616;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_616 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _398) / _616;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _687 = frontier_phi_39_38_ladder;
    }
    float _689 = isnan(_687) ? _681 : (isnan(_681) ? _687 : min(_681, _687));
    float _690 = isnan(_632) ? _689 : (isnan(_689) ? _632 : min(_689, _632));
    float _697 = ((_690 * _392) + _638) / _638;
    vec4 _711 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_423 + (_690 * _615)) / _697) + 0.5) + _647) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_426 + (_690 * _616)) / _697) + 0.5) + _649) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _713 = _711.w;
    float _715 = _713 - (_713 * _290);
    vec4 _739 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _741 = _739.x;
    vec4 _753 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _757 = _753.z;
    float _760 = (_753.x * 2.0) + (-1.0);
    float _761 = (_753.y * 2.0) + (-1.0);
    float _762 = dot(vec2(_760, _761), vec2(_760, _761));
    float _3467 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _767 = sqrt(1.0 - (isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0))));
    float _768 = _757 * _290;
    float _775 = (cbMtdParam._m0[15u].w * ((_329 - _768) + ((_757 - _329) * _290))) + _768;
    float _779 = (cbMtdParam._m0[16u].x * _357) + _760;
    float _780 = (cbMtdParam._m0[16u].x * _358) + _761;
    float _783 = fma(_767, _199, fma(_780, _206, _779 * _192));
    float _786 = fma(_767, _200, fma(_780, _207, _779 * _193));
    float _789 = fma(_767, _201, fma(_780, _208, _779 * _194));
    float _793 = inversesqrt(dot(vec3(_783, _786, _789), vec3(_783, _786, _789)));
    float _794 = _793 * _783;
    float _795 = _793 * _786;
    float _796 = _793 * _789;
    float _3478 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _797 = isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0));
    float _3489 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _3500 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _3511 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _3522 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _801 = isnan(1.0) ? _3522 : (isnan(_3522) ? 1.0 : min(_3522, 1.0));
    float _817 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _821 = inversesqrt(dot(vec3(_263, _264, _265), vec3(_263, _264, _265)));
    float _822 = _263 * _821;
    float _823 = _264 * _821;
    float _824 = _265 * _821;
    float _830 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _831 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _850 = fma(_796, cbSceneParam._m0[5u].z, fma(_795, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _794));
    float _853 = fma(_796, cbSceneParam._m0[6u].z, fma(_795, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _794));
    float _856 = fma(_796, cbSceneParam._m0[7u].z, fma(_795, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _794));
    uint _869 = uint(roundEven(NORMAL.w)) * 13u;
    uint _871 = _869 + 9u;
    uint _872 = _871 + uint(cbMatDynParam._m0[0u].w);
    float _878 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0)))) * cbInstanceData._m0[_872].x;
    float _879 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0)))) * cbInstanceData._m0[_872].y;
    float _880 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3511 : (isnan(_3511) ? 1.0 : min(_3511, 1.0)))) * cbInstanceData._m0[_872].z;
    float _3533 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _881 = isnan(1.0) ? _3533 : (isnan(_3533) ? 1.0 : min(_3533, 1.0));
    float _3544 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _882 = isnan(1.0) ? _3544 : (isnan(_3544) ? 1.0 : min(_3544, 1.0));
    float _3555 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _883 = isnan(1.0) ? _3555 : (isnan(_3555) ? 1.0 : min(_3555, 1.0));
    float _884 = 1.0 - _801;
    float _885 = _881 * _884;
    float _886 = _882 * _884;
    float _887 = _883 * _884;
    float _892 = (_881 + (-0.039999999105930328369140625)) * _801;
    float _893 = (_882 + (-0.039999999105930328369140625)) * _801;
    float _894 = (_883 + (-0.039999999105930328369140625)) * _801;
    float _895 = _892 + 0.039999999105930328369140625;
    float _897 = _893 + 0.039999999105930328369140625;
    float _898 = _894 + 0.039999999105930328369140625;
    vec4 _907 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _830, cbSceneParam._m0[86u].y * _831));
    float _910 = _907.x * TEXCOORD.z;
    float _911 = dot(vec3(_794, _795, _796), vec3(_822, _823, _824));
    float _914 = _911 * 2.0;
    float _918 = (_914 * _794) - _822;
    float _919 = (_914 * _795) - _823;
    float _920 = (_914 * _796) - _824;
    float _924 = abs(dot(vec3(_822, _823, _824), vec3(_794, _795, _796)));
    float _3566 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _926 = sqrt(_797);
    float _939 = exp2((_926 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3566 : (isnan(_3566) ? 1.0 : min(_3566, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_926 * 3.0));
    float _945 = (1.0 - _939) * ((_926 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _946 = _939 * _926;
    float _974 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _978 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _982 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1283;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    float _1294;
    float _1295;
    float _1296;
    float _1297;
    float _1298;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1010 = fma(_982, cbModelParam._m0[26u].z, fma(_978, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _974));
        float _1014 = fma(_982, cbModelParam._m0[27u].z, fma(_978, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _974));
        float _1018 = fma(_982, cbModelParam._m0[28u].z, fma(_978, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _974));
        float _1041 = _974 + _794;
        float _1042 = _978 + _795;
        float _1043 = _982 + _796;
        float _1053 = fma(_1043, cbModelParam._m0[26u].z, fma(_1042, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1041)) - _1010;
        float _1054 = fma(_1043, cbModelParam._m0[27u].z, fma(_1042, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1041)) - _1014;
        float _1055 = fma(_1043, cbModelParam._m0[28u].z, fma(_1042, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1041)) - _1018;
        float _1059 = inversesqrt(dot(vec3(_1053, _1054, _1055), vec3(_1053, _1054, _1055)));
        float _1072 = ((_1059 * _1053) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1010 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1073 = ((_1059 * _1054) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1014 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1074 = ((_1059 * _1055) / cbModelParam._m0[34u].z) + ((((((_1018 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1077 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1084 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1091 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        vec4 _1098 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1072, _1073, _1074), 0.0);
        float _1111 = exp2((_1077.w + (-0.5)) * 20.0) * 2.0;
        float _1112 = _1111 * (_1077.x + (-0.5));
        float _1113 = _1111 * (_1077.y + (-0.5));
        float _1114 = _1111 * (_1077.z + (-0.5));
        float _1121 = exp2((_1084.w + (-0.5)) * 20.0) * 2.0;
        float _1122 = _1121 * (_1084.x + (-0.5));
        float _1123 = _1121 * (_1084.y + (-0.5));
        float _1124 = _1121 * (_1084.z + (-0.5));
        float _1131 = exp2((_1091.w + (-0.5)) * 20.0) * 2.0;
        float _1132 = _1131 * (_1091.x + (-0.5));
        float _1133 = _1131 * (_1091.y + (-0.5));
        float _1134 = _1131 * (_1091.z + (-0.5));
        float _1141 = exp2((_1098.w + (-0.5)) * 20.0) * 2.0;
        float _1142 = _1141 * (_1098.x + (-0.5));
        float _1143 = _1141 * (_1098.y + (-0.5));
        float _1144 = _1141 * (_1098.z + (-0.5));
        float _1145 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1146 = isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0));
        float _1147 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1148 = _1112 * 0.5;
        float _1149 = _1122 * 0.5;
        float _1150 = _1132 * 0.5;
        float _1151 = dot(vec3(_1148, _1149, _1150), vec3(_1148, _1149, _1150));
        float _1156 = (_1151 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1151);
        float _1165 = (dot(vec3(_794, _795, _796), vec3(_1156 * _1148, _1156 * _1149, _1156 * _1150)) + 1.0) * 0.5;
        float _3592 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1175 = sqrt(((_1149 * _1149) + (_1148 * _1148)) + (_1150 * _1150)) / (_1145 + 9.9999997473787516355514526367188e-06);
        float _3603 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1176 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
        float _1177 = _1176 * 2.0;
        float _1181 = (1.0 - _1176) / (_1176 + 1.0);
        float _3614 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1182 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
        float _1191 = ((((1.0 - _1182) * (_1177 + 2.0)) * exp2(log2(isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0))) * (_1177 + 1.0))) + _1182) * _1145;
        float _1192 = _1113 * 0.5;
        float _1193 = _1123 * 0.5;
        float _1194 = _1133 * 0.5;
        float _1195 = dot(vec3(_1192, _1193, _1194), vec3(_1192, _1193, _1194));
        float _1200 = (_1195 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1195);
        float _1208 = (dot(vec3(_794, _795, _796), vec3(_1200 * _1192, _1200 * _1193, _1200 * _1194)) + 1.0) * 0.5;
        float _3625 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1217 = sqrt(((_1193 * _1193) + (_1192 * _1192)) + (_1194 * _1194)) / (_1146 + 9.9999997473787516355514526367188e-06);
        float _3636 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
        float _1218 = isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0));
        float _1219 = _1218 * 2.0;
        float _1223 = (1.0 - _1218) / (_1218 + 1.0);
        float _3647 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
        float _1233 = ((((1.0 - _1224) * (_1219 + 2.0)) * exp2(log2(isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0))) * (_1219 + 1.0))) + _1224) * _1146;
        float _1234 = _1114 * 0.5;
        float _1235 = _1124 * 0.5;
        float _1236 = _1134 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1250 = (dot(vec3(_794, _795, _796), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _3658 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1259 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1147 + 9.9999997473787516355514526367188e-06);
        float _3669 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1260 = isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0));
        float _1261 = _1260 * 2.0;
        float _1265 = (1.0 - _1260) / (_1260 + 1.0);
        float _3680 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1266 = isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0));
        float _1275 = ((((1.0 - _1266) * (_1261 + 2.0)) * exp2(log2(isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0))) * (_1261 + 1.0))) + _1266) * _1147;
        _1283 = _1114;
        _1285 = _1113;
        _1286 = _1112;
        _1287 = _1124;
        _1288 = _1123;
        _1289 = _1122;
        _1290 = _1134;
        _1291 = _1133;
        _1292 = _1132;
        _1293 = _1147;
        _1294 = _1146;
        _1295 = _1145;
        _1296 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0)));
        _1297 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0)));
        _1298 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0)));
    }
    else
    {
        _1283 = _1284;
        _1285 = _1284;
        _1286 = _1284;
        _1287 = _1284;
        _1288 = _1284;
        _1289 = _1284;
        _1290 = _1284;
        _1291 = _1284;
        _1292 = _1284;
        _1293 = _1284;
        _1294 = _1284;
        _1295 = _1284;
        _1296 = 0.0;
        _1297 = 0.0;
        _1298 = 0.0;
    }
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    float _1601;
    float _1602;
    float _1603;
    float _1604;
    float _1605;
    float _1606;
    float _1607;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1324 = fma(_982, cbModelParam._m0[30u].z, fma(_978, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _974));
        float _1328 = fma(_982, cbModelParam._m0[31u].z, fma(_978, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _974));
        float _1332 = fma(_982, cbModelParam._m0[32u].z, fma(_978, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _974));
        float _1355 = _974 + _794;
        float _1356 = _978 + _795;
        float _1357 = _982 + _796;
        float _1367 = fma(_1357, cbModelParam._m0[30u].z, fma(_1356, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1355)) - _1324;
        float _1368 = fma(_1357, cbModelParam._m0[31u].z, fma(_1356, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1355)) - _1328;
        float _1369 = fma(_1357, cbModelParam._m0[32u].z, fma(_1356, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1355)) - _1332;
        float _1373 = inversesqrt(dot(vec3(_1367, _1368, _1369), vec3(_1367, _1368, _1369)));
        float _1386 = ((_1373 * _1367) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1324 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1387 = ((_1373 * _1368) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1328 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1388 = ((_1373 * _1369) / cbModelParam._m0[35u].z) + ((((((_1332 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1386, _1387, _1388), 0.0);
        float _1423 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1424 = _1423 * (_1390.x + (-0.5));
        float _1425 = _1423 * (_1390.y + (-0.5));
        float _1426 = _1423 * (_1390.z + (-0.5));
        float _1433 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1434 = _1433 * (_1397.x + (-0.5));
        float _1435 = _1433 * (_1397.y + (-0.5));
        float _1436 = _1433 * (_1397.z + (-0.5));
        float _1443 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1404.x + (-0.5));
        float _1445 = _1443 * (_1404.y + (-0.5));
        float _1446 = _1443 * (_1404.z + (-0.5));
        float _1453 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1411.x + (-0.5));
        float _1455 = _1453 * (_1411.y + (-0.5));
        float _1456 = _1453 * (_1411.z + (-0.5));
        float _1457 = isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0));
        float _1458 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1459 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
        float _1460 = _1424 * 0.5;
        float _1461 = _1434 * 0.5;
        float _1462 = _1444 * 0.5;
        float _1463 = dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462));
        float _1468 = (_1463 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1463);
        float _1476 = (dot(vec3(_794, _795, _796), vec3(_1468 * _1460, _1468 * _1461, _1468 * _1462)) + 1.0) * 0.5;
        float _3721 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1485 = sqrt(((_1461 * _1461) + (_1460 * _1460)) + (_1462 * _1462)) / (_1457 + 9.9999997473787516355514526367188e-06);
        float _3732 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
        float _1486 = isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0));
        float _1487 = _1486 * 2.0;
        float _1491 = (1.0 - _1486) / (_1486 + 1.0);
        float _3743 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
        float _1492 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
        float _1501 = ((((1.0 - _1492) * (_1487 + 2.0)) * exp2(log2(isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))) * (_1487 + 1.0))) + _1492) * _1457;
        float _1502 = _1425 * 0.5;
        float _1503 = _1435 * 0.5;
        float _1504 = _1445 * 0.5;
        float _1505 = dot(vec3(_1502, _1503, _1504), vec3(_1502, _1503, _1504));
        float _1510 = (_1505 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1505);
        float _1518 = (dot(vec3(_794, _795, _796), vec3(_1510 * _1502, _1510 * _1503, _1510 * _1504)) + 1.0) * 0.5;
        float _3754 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1527 = sqrt(((_1503 * _1503) + (_1502 * _1502)) + (_1504 * _1504)) / (_1458 + 9.9999997473787516355514526367188e-06);
        float _3765 = isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0));
        float _1528 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
        float _1529 = _1528 * 2.0;
        float _1533 = (1.0 - _1528) / (_1528 + 1.0);
        float _3776 = isnan(0.0) ? _1533 : (isnan(_1533) ? 0.0 : max(_1533, 0.0));
        float _1534 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
        float _1543 = ((((1.0 - _1534) * (_1529 + 2.0)) * exp2(log2(isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0))) * (_1529 + 1.0))) + _1534) * _1458;
        float _1544 = _1426 * 0.5;
        float _1545 = _1436 * 0.5;
        float _1546 = _1446 * 0.5;
        float _1547 = dot(vec3(_1544, _1545, _1546), vec3(_1544, _1545, _1546));
        float _1552 = (_1547 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1547);
        float _1560 = (dot(vec3(_794, _795, _796), vec3(_1552 * _1544, _1552 * _1545, _1552 * _1546)) + 1.0) * 0.5;
        float _3787 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1569 = sqrt(((_1545 * _1545) + (_1544 * _1544)) + (_1546 * _1546)) / (_1459 + 9.9999997473787516355514526367188e-06);
        float _3798 = isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0));
        float _1570 = isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0));
        float _1571 = _1570 * 2.0;
        float _1575 = (1.0 - _1570) / (_1570 + 1.0);
        float _3809 = isnan(0.0) ? _1575 : (isnan(_1575) ? 0.0 : max(_1575, 0.0));
        float _1576 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
        float _1585 = ((((1.0 - _1576) * (_1571 + 2.0)) * exp2(log2(isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0))) * (_1571 + 1.0))) + _1576) * _1459;
        _1593 = _1426;
        _1594 = _1425;
        _1595 = _1424;
        _1596 = _1436;
        _1597 = _1435;
        _1598 = _1434;
        _1599 = _1446;
        _1600 = _1445;
        _1601 = _1444;
        _1602 = _1459;
        _1603 = _1458;
        _1604 = _1457;
        _1605 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0)));
        _1606 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1543 : (isnan(_1543) ? 0.0 : max(_1543, 0.0)));
        _1607 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0)));
    }
    else
    {
        _1593 = _1284;
        _1594 = _1284;
        _1595 = _1284;
        _1596 = _1284;
        _1597 = _1284;
        _1598 = _1284;
        _1599 = _1284;
        _1600 = _1284;
        _1601 = _1284;
        _1602 = _1284;
        _1603 = _1284;
        _1604 = _1284;
        _1605 = 0.0;
        _1606 = 0.0;
        _1607 = 0.0;
    }
    float _1617 = (cbModelParam._m0[1u].x * (_1605 - _1296)) + _1296;
    float _1618 = (cbModelParam._m0[1u].x * (_1606 - _1297)) + _1297;
    float _1619 = (cbModelParam._m0[1u].x * (_1607 - _1298)) + _1298;
    float _1640 = fma(_1619, cbSceneParam._m0[89u].z, fma(_1618, cbSceneParam._m0[89u].y, _1617 * cbSceneParam._m0[89u].x));
    float _1643 = fma(_1619, cbSceneParam._m0[90u].z, fma(_1618, cbSceneParam._m0[90u].y, _1617 * cbSceneParam._m0[90u].x));
    float _1646 = fma(_1619, cbSceneParam._m0[91u].z, fma(_1618, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1617));
    float _1661 = _918 * 0.5;
    float _1662 = _919 * 0.5;
    float _1663 = _920 * 0.5;
    float _1664 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1595, _1598, _1601, _1604));
    float _1667 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1594, _1597, _1600, _1603));
    float _1670 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1593, _1596, _1599, _1602));
    float _1704;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1677 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1283, _1287, _1290, _1293));
        float _1681 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1285, _1288, _1291, _1294));
        float _1685 = dot(vec4(_1661, _1662, _1663, 1.0), vec4(_1286, _1289, _1292, _1295));
        float _1692 = dot(vec4(cbModelParam._m0[39u]), vec4(_1661, _1662, _1663, 1.0));
        _1704 = dot(vec3(isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1692) ? 0.0 : (isnan(0.0) ? _1692 : max(0.0, _1692))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1704 = 1.0;
    }
    float _1715;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1706 = dot(vec4(cbModelParam._m0[40u]), vec4(_1661, _1662, _1663, 1.0));
        _1715 = dot(vec3(isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0)), isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1715 = 1.0;
    }
    float _1719 = (_1715 * cbModelParam._m0[1u].x) + (_1704 * (1.0 - cbModelParam._m0[1u].x));
    float _1729 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _797);
    float _1730 = isnan(_1729) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1729 : min(cbModelParam._m0[25u].z, _1729));
    float _1810;
    float _1812;
    float _1814;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1777 = fma(_982, cbModelParam._m0[13u].z, fma(_978, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _974)) + cbModelParam._m0[13u].w;
        float _1781 = fma(_982, cbModelParam._m0[14u].z, fma(_978, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _974)) + cbModelParam._m0[14u].w;
        float _1785 = fma(_982, cbModelParam._m0[15u].z, fma(_978, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _974)) + cbModelParam._m0[15u].w;
        float _1788 = fma(_920, cbModelParam._m0[13u].z, fma(_919, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _918));
        float _1791 = fma(_920, cbModelParam._m0[14u].z, fma(_919, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _918));
        float _1794 = fma(_920, cbModelParam._m0[15u].z, fma(_919, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _918));
        float _1822;
        if (_1788 > 0.0)
        {
            _1822 = abs((1.0 - _1777) / _1788);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1788 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1777 + 1.0) / _1788);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _1822 = frontier_phi_54_52_ladder;
        }
        float _2180;
        if (_1791 > 0.0)
        {
            _2180 = abs((1.0 - _1781) / _1791);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1791 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1781 + 1.0) / _1791);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _2180 = frontier_phi_63_59_ladder;
        }
        float _2496;
        if (_1794 > 0.0)
        {
            _2496 = abs((1.0 - _1785) / _1794);
        }
        else
        {
            float frontier_phi_77_70_ladder;
            if (_1794 < 0.0)
            {
                frontier_phi_77_70_ladder = abs((_1785 + 1.0) / _1794);
            }
            else
            {
                frontier_phi_77_70_ladder = 5000.0;
            }
            _2496 = frontier_phi_77_70_ladder;
        }
        float _2498 = isnan(_2180) ? _1822 : (isnan(_1822) ? _2180 : min(_1822, _2180));
        float _2499 = isnan(_2496) ? _2498 : (isnan(_2498) ? _2496 : min(_2498, _2496));
        float _2503 = (_2499 * _1788) + _1777;
        float _2504 = (_2499 * _1791) + _1781;
        float _2505 = (_2499 * _1794) + _1785;
        float _2506 = _2499 * 9.9999997473787516355514526367188e-05;
        float _2507 = (-1.0) - _2506;
        float _2509 = _2506 + 1.0;
        float frontier_phi_53_77_ladder;
        float frontier_phi_53_77_ladder_1;
        float frontier_phi_53_77_ladder_2;
        if ((_2505 > _2509) || ((_2505 < _2507) || ((_2504 > _2509) || ((_2504 < _2507) || ((_2503 < _2507) || (_2503 > _2509))))))
        {
            frontier_phi_53_77_ladder = 0.0;
            frontier_phi_53_77_ladder_1 = 0.0;
            frontier_phi_53_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2631 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2505, cbModelParam._m0[9u].z, fma(_2504, cbModelParam._m0[9u].y, _2503 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2505, cbModelParam._m0[10u].z, fma(_2504, cbModelParam._m0[10u].y, _2503 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2505, cbModelParam._m0[11u].z, fma(_2504, cbModelParam._m0[11u].y, _2503 * cbModelParam._m0[11u].x))), _1730);
            frontier_phi_53_77_ladder = _2631.x * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_1 = _2631.y * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_2 = _2631.z * cbModelParam._m0[1u].y;
        }
        _1810 = frontier_phi_53_77_ladder;
        _1812 = frontier_phi_53_77_ladder_1;
        _1814 = frontier_phi_53_77_ladder_2;
    }
    else
    {
        vec4 _1798 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_918, _919, _920), _1730);
        _1810 = _1798.x * cbModelParam._m0[1u].y;
        _1812 = _1798.y * cbModelParam._m0[1u].y;
        _1814 = _1798.z * cbModelParam._m0[1u].y;
    }
    float _1818 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _797);
    float _1819 = isnan(_1818) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1818 : min(cbModelParam._m0[25u].w, _1818));
    float _1907;
    float _1909;
    float _1911;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1871 = fma(_982, cbModelParam._m0[21u].z, fma(_978, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _974)) + cbModelParam._m0[21u].w;
        float _1875 = fma(_982, cbModelParam._m0[22u].z, fma(_978, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _974)) + cbModelParam._m0[22u].w;
        float _1879 = fma(_982, cbModelParam._m0[23u].z, fma(_978, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _974)) + cbModelParam._m0[23u].w;
        float _1882 = fma(_920, cbModelParam._m0[21u].z, fma(_919, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _918));
        float _1885 = fma(_920, cbModelParam._m0[22u].z, fma(_919, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _918));
        float _1888 = fma(_920, cbModelParam._m0[23u].z, fma(_919, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _918));
        float _2185;
        if (_1882 > 0.0)
        {
            _2185 = abs((1.0 - _1871) / _1882);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_1882 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_1871 + 1.0) / _1882);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _2185 = frontier_phi_65_61_ladder;
        }
        float _2522;
        if (_1885 > 0.0)
        {
            _2522 = abs((1.0 - _1875) / _1885);
        }
        else
        {
            float frontier_phi_79_72_ladder;
            if (_1885 < 0.0)
            {
                frontier_phi_79_72_ladder = abs((_1875 + 1.0) / _1885);
            }
            else
            {
                frontier_phi_79_72_ladder = 5000.0;
            }
            _2522 = frontier_phi_79_72_ladder;
        }
        float _2691;
        if (_1888 > 0.0)
        {
            _2691 = abs((1.0 - _1879) / _1888);
        }
        else
        {
            float frontier_phi_93_88_ladder;
            if (_1888 < 0.0)
            {
                frontier_phi_93_88_ladder = abs((_1879 + 1.0) / _1888);
            }
            else
            {
                frontier_phi_93_88_ladder = 5000.0;
            }
            _2691 = frontier_phi_93_88_ladder;
        }
        float _2693 = isnan(_2522) ? _2185 : (isnan(_2185) ? _2522 : min(_2185, _2522));
        float _2694 = isnan(_2691) ? _2693 : (isnan(_2693) ? _2691 : min(_2693, _2691));
        float _2698 = (_2694 * _1882) + _1871;
        float _2699 = (_2694 * _1885) + _1875;
        float _2700 = (_2694 * _1888) + _1879;
        float _2701 = _2694 * 9.9999997473787516355514526367188e-05;
        float _2702 = (-1.0) - _2701;
        float _2704 = _2701 + 1.0;
        float frontier_phi_62_93_ladder;
        float frontier_phi_62_93_ladder_1;
        float frontier_phi_62_93_ladder_2;
        if ((_2700 > _2704) || ((_2700 < _2702) || ((_2699 > _2704) || ((_2699 < _2702) || ((_2698 < _2702) || (_2698 > _2704))))))
        {
            frontier_phi_62_93_ladder = 0.0;
            frontier_phi_62_93_ladder_1 = 0.0;
            frontier_phi_62_93_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2933 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2700, cbModelParam._m0[17u].z, fma(_2699, cbModelParam._m0[17u].y, _2698 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2700, cbModelParam._m0[18u].z, fma(_2699, cbModelParam._m0[18u].y, _2698 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2700, cbModelParam._m0[19u].z, fma(_2699, cbModelParam._m0[19u].y, _2698 * cbModelParam._m0[19u].x))), _1819);
            frontier_phi_62_93_ladder = _2933.z * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_1 = _2933.y * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_2 = _2933.x * cbModelParam._m0[1u].z;
        }
        _1907 = frontier_phi_62_93_ladder_2;
        _1909 = frontier_phi_62_93_ladder_1;
        _1911 = frontier_phi_62_93_ladder;
    }
    else
    {
        vec4 _1891 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_918, _919, _920), _1819);
        _1907 = _1891.x * cbModelParam._m0[1u].z;
        _1909 = _1891.y * cbModelParam._m0[1u].z;
        _1911 = _1891.z * cbModelParam._m0[1u].z;
    }
    float _1924 = (((_945 * _895) + _946) * _910) * ((cbModelParam._m0[1u].w * (_1907 - _1810)) + _1810);
    float _1926 = (((_945 * _897) + _946) * _910) * ((cbModelParam._m0[1u].w * (_1909 - _1812)) + _1812);
    float _1928 = (((_945 * _898) + _946) * _910) * ((cbModelParam._m0[1u].w * (_1911 - _1814)) + _1814);
    float _1931 = fma(_1928, cbSceneParam._m0[89u].z, fma(_1926, cbSceneParam._m0[89u].y, _1924 * cbSceneParam._m0[89u].x));
    float _1934 = fma(_1928, cbSceneParam._m0[90u].z, fma(_1926, cbSceneParam._m0[90u].y, _1924 * cbSceneParam._m0[90u].x));
    float _1937 = fma(_1928, cbSceneParam._m0[91u].z, fma(_1926, cbSceneParam._m0[91u].y, _1924 * cbSceneParam._m0[91u].x));
    uvec4 _1947 = floatBitsToUint(cbInstanceData._m0[_869 + 5u]);
    uint _1949 = _1947.x * 14u;
    uint _1950 = _1949 + 13u;
    float _1955 = _910 + (-1.0);
    float _1958 = (cbLight._m0[_1950].x * _1955) + 1.0;
    float _1959 = (cbLight._m0[_1950].y * _1955) + 1.0;
    uint _1960 = _1949 + 5u;
    float _1966 = isnan(1.0) ? _1959 : (isnan(_1959) ? 1.0 : min(_1959, 1.0));
    uint _1970 = _1949 + 4u;
    float _1976 = isnan(1.0) ? _1958 : (isnan(_1958) ? 1.0 : min(_1958, 1.0));
    uint _1980 = _1949 | 1u;
    float _1991 = dot(vec3(cbLight._m0[_1949].xyz), vec3(_794, _795, _796));
    float _1994 = dot(vec3(cbLight._m0[_1980].xyz), vec3(_794, _795, _796));
    float _3945 = isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0));
    float _3956 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
    float _1999 = (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))) * 0.3183098733425140380859375;
    float _2001 = (isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) * 0.3183098733425140380859375;
    float _2008 = ((cbLight._m0[_1960].x * _1966) * _2001) + ((cbLight._m0[_1970].x * _1976) * _1999);
    float _2009 = ((_1966 * cbLight._m0[_1960].y) * _2001) + ((_1976 * cbLight._m0[_1970].y) * _1999);
    float _2010 = ((_1966 * cbLight._m0[_1960].z) * _2001) + ((_1976 * cbLight._m0[_1970].z) * _1999);
    uint _2012 = _1949 + 8u;
    float _2025 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1949].w)) * _797) * 0.949999988079071044921875);
    float _2026 = _2025 * _2025;
    float _2027 = cbLight._m0[_1949].x + _822;
    float _2028 = cbLight._m0[_1949].y + _823;
    float _2029 = cbLight._m0[_1949].z + _824;
    float _2033 = inversesqrt(dot(vec3(_2027, _2028, _2029), vec3(_2027, _2028, _2029)));
    float _2034 = _2033 * _2027;
    float _2035 = _2033 * _2028;
    float _2036 = _2033 * _2029;
    float _2037 = dot(vec3(_794, _795, _796), vec3(cbLight._m0[_1949].xyz));
    float _3967 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
    float _2040 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    float _3978 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _2041 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    float _2042 = dot(vec3(_794, _795, _796), vec3(_2034, _2035, _2036));
    float _3989 = isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0));
    float _2045 = isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0));
    float _2046 = dot(vec3(cbLight._m0[_1949].xyz), vec3(_2034, _2035, _2036));
    float _4000 = isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0));
    float _2050 = _2026 * _2026;
    float _2054 = ((_2045 * _2045) * (_2050 + (-1.0))) + 1.0;
    float _2062 = exp2(log2(1.0 - (isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0)))) * 5.0);
    float _2063 = 0.959999978542327880859375 - _892;
    float _2065 = 0.959999978542327880859375 - _893;
    float _2066 = 0.959999978542327880859375 - _894;
    float _2073 = 1.0 - _2026;
    float _2084 = (0.5 / (((_2041 * ((_2040 * _2073) + _2026)) + 9.9999999392252902907785028219223e-09) + (((_2041 * _2073) + _2026) * _2040))) * _2040;
    float _4011 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
    float _2086 = (isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0))) * (_2050 / ((_2054 * _2054) * 3.141590118408203125));
    uint _2097 = _1949 + 9u;
    float _2108 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1980].w)) * _797) * 0.949999988079071044921875);
    float _2109 = _2108 * _2108;
    float _2110 = cbLight._m0[_1980].x + _822;
    float _2111 = cbLight._m0[_1980].y + _823;
    float _2112 = cbLight._m0[_1980].z + _824;
    float _2116 = inversesqrt(dot(vec3(_2110, _2111, _2112), vec3(_2110, _2111, _2112)));
    float _2117 = _2116 * _2110;
    float _2118 = _2116 * _2111;
    float _2119 = _2116 * _2112;
    float _2120 = dot(vec3(_794, _795, _796), vec3(cbLight._m0[_1980].xyz));
    float _4022 = isnan(0.0) ? _2120 : (isnan(_2120) ? 0.0 : max(_2120, 0.0));
    float _2123 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
    float _2124 = dot(vec3(_794, _795, _796), vec3(_2117, _2118, _2119));
    float _4033 = isnan(0.0) ? _2124 : (isnan(_2124) ? 0.0 : max(_2124, 0.0));
    float _2127 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
    float _2128 = dot(vec3(cbLight._m0[_1980].xyz), vec3(_2117, _2118, _2119));
    float _4044 = isnan(0.0) ? _2128 : (isnan(_2128) ? 0.0 : max(_2128, 0.0));
    float _2132 = _2109 * _2109;
    float _2136 = ((_2127 * _2127) * (_2132 + (-1.0))) + 1.0;
    float _2143 = exp2(log2(1.0 - (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0)))) * 5.0);
    float _2150 = 1.0 - _2109;
    float _2160 = (0.5 / (((_2041 * ((_2123 * _2150) + _2109)) + 9.9999999392252902907785028219223e-09) + (((_2041 * _2150) + _2109) * _2123))) * _2123;
    float _4055 = isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0));
    float _2162 = (isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) * (_2132 / ((_2136 * _2136) * 3.141590118408203125));
    float _2172 = (((((_2143 * _2063) + _895) * cbLight._m0[_2097].x) * _2162) * _1966) + (((((_2062 * _2063) + _895) * cbLight._m0[_2012].x) * _2086) * _1976);
    float _2173 = (((((_2143 * _2065) + _897) * cbLight._m0[_2097].y) * _2162) * _1966) + (((((_2062 * _2065) + _897) * cbLight._m0[_2012].y) * _2086) * _1976);
    float _2174 = (((((_2143 * _2066) + _898) * cbLight._m0[_2097].z) * _2162) * _1966) + (((((_2062 * _2066) + _898) * cbLight._m0[_2012].z) * _2086) * _1976);
    float _2289;
    float _2291;
    float _2293;
    float _2295;
    float _2297;
    float _2299;
    if (_1947.y == 0u)
    {
        float _2229 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2230 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2229;
        float _2231 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2229;
        float _2232 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2229;
        uvec4 _2244 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2245 = _2244.x;
        uint _2256 = uint((float(_2244.y) * floor(float(uint(cbSceneParam._m0[85u].y * _831) / _2245))) + floor(float(uint(cbSceneParam._m0[85u].x * _830) / _2245)));
        float _2266 = (log2(_2232 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2267 = isnan(0.0) ? _2266 : (isnan(_2266) ? 0.0 : max(_2266, 0.0));
        uint _2270 = uint(isnan(14.0) ? _2267 : (isnan(_2267) ? 14.0 : min(_2267, 14.0)));
        uvec4 _2275 = texelFetch(g_lightClusterGridBuffer, int(((_2270 << 2u) + (_2256 << 6u)) >> 2u));
        uint _2276 = _2275.x;
        uint _2277 = _2244.z;
        float _2383;
        float _2385;
        float _2387;
        float _2389;
        float _2391;
        float _2393;
        if (((((1u << ((_2277 >> 4u) & 15u)) + 4294967295u) & _2276) == 0u) || ((_2277 & 240u) == 0u))
        {
            _2383 = 0.0;
            _2385 = 0.0;
            _2387 = 0.0;
            _2389 = 0.0;
            _2391 = 0.0;
            _2393 = 0.0;
        }
        else
        {
            float _2384;
            float _2386;
            float _2388;
            float _2390;
            float _2392;
            float _2394;
            float _2559 = 0.0;
            float _2560 = 0.0;
            float _2561 = 0.0;
            float _2562 = 0.0;
            float _2563 = 0.0;
            float _2564 = 0.0;
            uint _2565 = 0u;
            uint _2574;
            bool _2575;
            for (;;)
            {
                _2574 = texelFetch(g_lightClassification, int((((_2270 << 5u) + (_2256 << 9u)) + (_2565 << 2u)) >> 2u)).x;
                _2575 = _2574 == 0u;
                float frontier_phi_90_pred;
                float frontier_phi_90_pred_1;
                float frontier_phi_90_pred_2;
                float frontier_phi_90_pred_3;
                float frontier_phi_90_pred_4;
                float frontier_phi_90_pred_5;
                if (_2575)
                {
                    frontier_phi_90_pred = _2564;
                    frontier_phi_90_pred_1 = _2559;
                    frontier_phi_90_pred_2 = _2560;
                    frontier_phi_90_pred_3 = _2561;
                    frontier_phi_90_pred_4 = _2562;
                    frontier_phi_90_pred_5 = _2563;
                }
                else
                {
                    float _2734;
                    float _2735;
                    float _2736;
                    float _2737;
                    float _2738;
                    float _2739;
                    uint _2740;
                    _2734 = _2559;
                    _2735 = _2560;
                    _2736 = _2561;
                    _2737 = _2562;
                    _2738 = _2563;
                    _2739 = _2564;
                    _2740 = _2574;
                    float _2640;
                    float _2641;
                    float _2642;
                    float _2643;
                    float _2644;
                    float _2645;
                    for (;;)
                    {
                        uint _2744 = uint(findLSB(_2740)) + (_2565 << 5u);
                        uint _2741 = (_2740 + 4294967295u) & _2740;
                        uint _2746 = _2744 * 48u;
                        vec4 _2760 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2746)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2746 + 3u)).x));
                        uint _2766 = (_2744 * 48u) + 4u;
                        vec4 _2779 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2766)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2766 + 3u)).x));
                        uint _2785 = (_2744 * 48u) + 8u;
                        vec3 _2796 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2785)).x, texelFetch(g_PointLightRenderingBuffer, int(_2785 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2785 + 2u)).x));
                        float _2800 = _2760.x - _2230;
                        float _2801 = _2760.y - _2231;
                        float _2802 = _2760.z - _2232;
                        float _2803 = dot(vec3(_2800, _2801, _2802), vec3(_2800, _2801, _2802));
                        float _2806 = inversesqrt(_2803);
                        float _2807 = _2806 * _2800;
                        float _2808 = _2806 * _2801;
                        float _2809 = _2806 * _2802;
                        float _2810 = dot(vec3(_850, _853, _856), vec3(_2807, _2808, _2809));
                        float _2815 = 1.0 - (_2803 * _2760.w);
                        float _4076 = isnan(0.0) ? _2815 : (isnan(_2815) ? 0.0 : max(_2815, 0.0));
                        float _2816 = isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0));
                        float _2817 = sqrt(_2803) * _2779.w;
                        float _2820 = 1.39999997615814208984375 / (_2817 + 1.39999997615814208984375);
                        float _2821 = _2820 * _2820;
                        float _2824 = ((1.0 - _2821) * _2810) + _2821;
                        float _2827 = _2817 * _2817;
                        float _2831 = ((isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0))) * _2816) / ((_2827 * 0.699999988079071044921875) + 1.0);
                        float _2835 = (-0.0) - _2230;
                        float _2836 = (-0.0) - _2231;
                        float _2837 = (-0.0) - _2232;
                        float _2841 = inversesqrt(dot(vec3(_2835, _2836, _2837), vec3(_2835, _2836, _2837)));
                        float _2842 = _2841 * _2835;
                        float _2843 = _2841 * _2836;
                        float _2844 = _2841 * _2837;
                        float _2852 = exp2(log2(1.0 / ((_2827 * 3.5) + 5.0)) * 0.25);
                        float _2853 = 1.0 - _926;
                        float _2860 = sqrt(1.0 - ((1.0 - (_2853 * _2853)) * (1.0 - (_2852 * _2852))));
                        float _2861 = _2860 * _2860;
                        float _2862 = _2861 * _2861;
                        float _2863 = _2842 + _2807;
                        float _2864 = _2843 + _2808;
                        float _2865 = _2844 + _2809;
                        float _2869 = inversesqrt(dot(vec3(_2863, _2864, _2865), vec3(_2863, _2864, _2865)));
                        float _2873 = dot(vec3(_850, _853, _856), vec3(_2842, _2843, _2844));
                        float _4092 = isnan(0.0) ? _2873 : (isnan(_2873) ? 0.0 : max(_2873, 0.0));
                        float _2876 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
                        float _2877 = dot(vec3(_850, _853, _856), vec3(_2869 * _2863, _2869 * _2864, _2869 * _2865));
                        float _4103 = isnan(0.0) ? _2877 : (isnan(_2877) ? 0.0 : max(_2877, 0.0));
                        float _2880 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
                        float _2884 = ((_2880 * _2880) * (_2862 + (-1.0))) + 1.0;
                        float _2885 = _2820 * _2861;
                        float _2886 = _2885 * _2885;
                        float _2889 = ((1.0 - _2886) * _2810) + _2886;
                        float _4114 = isnan(0.0) ? _2889 : (isnan(_2889) ? 0.0 : max(_2889, 0.0));
                        float _2890 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
                        float _2891 = 1.0 - _2861;
                        float _2901 = (0.5 / (((_2890 * ((_2876 * _2891) + _2861)) + 9.9999999392252902907785028219223e-09) + (((_2890 * _2891) + _2861) * _2876))) * _2890;
                        float _4125 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
                        float _2912 = (((_2862 * 3.1415927410125732421875) * (isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0)))) / ((_2884 * _2884) * ((_2827 * 2.1991131305694580078125) + 3.141590118408203125))) * _2816;
                        _2643 = (_2831 * _2779.x) + _2737;
                        _2644 = (_2831 * _2779.y) + _2738;
                        _2645 = (_2831 * _2779.z) + _2739;
                        _2640 = (_2912 * _2796.x) + _2734;
                        _2641 = (_2912 * _2796.y) + _2735;
                        _2642 = (_2912 * _2796.z) + _2736;
                        if (_2741 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2734 = _2640;
                            _2735 = _2641;
                            _2736 = _2642;
                            _2737 = _2643;
                            _2738 = _2644;
                            _2739 = _2645;
                            _2740 = _2741;
                        }
                    }
                    frontier_phi_90_pred = _2645;
                    frontier_phi_90_pred_1 = _2640;
                    frontier_phi_90_pred_2 = _2641;
                    frontier_phi_90_pred_3 = _2642;
                    frontier_phi_90_pred_4 = _2643;
                    frontier_phi_90_pred_5 = _2644;
                }
                _2394 = frontier_phi_90_pred;
                _2384 = frontier_phi_90_pred_1;
                _2386 = frontier_phi_90_pred_2;
                _2388 = frontier_phi_90_pred_3;
                _2390 = frontier_phi_90_pred_4;
                _2392 = frontier_phi_90_pred_5;
                uint _2566 = _2565 + 1u;
                if (_2566 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2559 = _2384;
                    _2560 = _2386;
                    _2561 = _2388;
                    _2562 = _2390;
                    _2563 = _2392;
                    _2564 = _2394;
                    _2565 = _2566;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2383 = _2384;
            _2385 = _2386;
            _2387 = _2388;
            _2389 = _2390;
            _2391 = _2392;
            _2393 = _2394;
        }
        uvec4 _2397 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2398 = _2397.z;
        uint _2400 = (_2398 >> 8u) & 15u;
        float _2527;
        float _2529;
        float _2531;
        float _2533;
        float _2535;
        float _2537;
        if (((4294967295u << _2400) & _2276) == 0u)
        {
            _2527 = _2383;
            _2529 = _2385;
            _2531 = _2387;
            _2533 = _2389;
            _2535 = _2391;
            _2537 = _2393;
        }
        else
        {
            float _2552 = inversesqrt(dot(vec3(_2230, _2231, _2232), vec3(_2230, _2231, _2232)));
            float _2553 = _2552 * _2230;
            float _2554 = _2552 * _2231;
            float _2555 = _2552 * _2232;
            float frontier_phi_81_82_ladder;
            float frontier_phi_81_82_ladder_1;
            float frontier_phi_81_82_ladder_2;
            float frontier_phi_81_82_ladder_3;
            float frontier_phi_81_82_ladder_4;
            float frontier_phi_81_82_ladder_5;
            if (_2400 < ((_2398 >> 12u) & 15u))
            {
                float _2528;
                float _2530;
                float _2532;
                float _2534;
                float _2536;
                float _2538;
                float _2717 = _2383;
                float _2718 = _2385;
                float _2719 = _2387;
                float _2720 = _2389;
                float _2721 = _2391;
                float _2722 = _2393;
                uint _2723 = _2400;
                uint _2732;
                bool _2733;
                for (;;)
                {
                    _2732 = texelFetch(g_lightClassification, int((((_2270 << 5u) + (_2256 << 9u)) + (_2723 << 2u)) >> 2u)).x;
                    _2733 = _2732 == 0u;
                    float frontier_phi_99_pred;
                    float frontier_phi_99_pred_1;
                    float frontier_phi_99_pred_2;
                    float frontier_phi_99_pred_3;
                    float frontier_phi_99_pred_4;
                    float frontier_phi_99_pred_5;
                    if (_2733)
                    {
                        frontier_phi_99_pred = _2720;
                        frontier_phi_99_pred_1 = _2719;
                        frontier_phi_99_pred_2 = _2718;
                        frontier_phi_99_pred_3 = _2717;
                        frontier_phi_99_pred_4 = _2722;
                        frontier_phi_99_pred_5 = _2721;
                    }
                    else
                    {
                        float _2938;
                        float _2939;
                        float _2940;
                        float _2941;
                        float _2942;
                        float _2943;
                        float _3231;
                        float _3232;
                        float _3233;
                        float _3234;
                        float _3235;
                        float _3236;
                        float _2951 = _2717;
                        float _2952 = _2718;
                        float _2953 = _2719;
                        float _2954 = _2720;
                        float _2955 = _2721;
                        float _2956 = _2722;
                        uint _2957 = _2732;
                        uint _2958;
                        vec4 _2983;
                        float _2984;
                        vec4 _2999;
                        vec3 _3011;
                        vec4 _3026;
                        vec4 _3041;
                        float _3087;
                        bool _3088;
                        for (;;)
                        {
                            uint _2968 = ((_2723 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2957));
                            _2958 = (_2957 + 4294967295u) & _2957;
                            uint _2970 = _2968 * 40u;
                            _2983 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2970)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2970 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2970 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2970 + 3u)).x));
                            _2984 = _2983.w;
                            uint _2986 = (_2968 * 40u) + 4u;
                            _2999 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2986)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2986 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2986 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2986 + 3u)).x));
                            uint _3001 = (_2968 * 40u) + 8u;
                            _3011 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3001)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3001 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3001 + 2u)).x));
                            uint _3013 = (_2968 * 40u) + 16u;
                            _3026 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3013)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3013 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3013 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3013 + 3u)).x));
                            uint _3028 = (_2968 * 40u) + 20u;
                            _3041 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3028)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3028 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3028 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3028 + 3u)).x));
                            uint _3043 = (_2968 * 40u) + 24u;
                            vec4 _3056 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3043)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3043 + 3u)).x));
                            uint _3062 = (_2968 * 40u) + 28u;
                            vec4 _3075 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3062)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3062 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3062 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3062 + 3u)).x));
                            _3087 = fma(_2232, _3075.z, fma(_2231, _3075.y, _3075.x * _2230)) + _3075.w;
                            _3088 = !((fma(_2232, _3056.z, fma(_2231, _3056.y, _3056.x * _2230)) + _3056.w) <= 0.0);
                            float frontier_phi_105_pred;
                            float frontier_phi_105_pred_1;
                            float frontier_phi_105_pred_2;
                            float frontier_phi_105_pred_3;
                            float frontier_phi_105_pred_4;
                            float frontier_phi_105_pred_5;
                            if (_3088)
                            {
                                float _3115 = _2983.x - _2230;
                                float _3116 = _2983.y - _2231;
                                float _3117 = _2983.z - _2232;
                                float _3118 = dot(vec3(_3115, _3116, _3117), vec3(_3115, _3116, _3117));
                                float _3121 = inversesqrt(_3118);
                                float _3122 = _3121 * _3115;
                                float _3123 = _3121 * _3116;
                                float _3124 = _3121 * _3117;
                                float _3128 = 1.0 - (_3118 / (_2984 * _2984));
                                float _4136 = isnan(0.0) ? _3128 : (isnan(_3128) ? 0.0 : max(_3128, 0.0));
                                float _3129 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
                                float _3133 = sqrt(_3118) * _2999.w;
                                float _3135 = 1.39999997615814208984375 / (_3133 + 1.39999997615814208984375);
                                float _3136 = _3135 * _3135;
                                float _3139 = ((1.0 - _3136) * dot(vec3(_3122, _3123, _3124), vec3(_850, _853, _856))) + _3136;
                                float _3142 = _3133 * _3133;
                                float _3146 = (fma(_2232, _3026.z, fma(_2231, _3026.y, _3026.x * _2230)) + _3026.w) / _3087;
                                float _3147 = (fma(_2232, _3041.z, fma(_2231, _3041.y, _3041.x * _2230)) + _3041.w) / _3087;
                                float _3151 = 1.0 - dot(vec2(_3146, _3147), vec2(_3146, _3147));
                                float _4152 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0));
                                float _3152 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
                                float _3153 = _3152 * (((isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0))) * _3129) / ((_3142 * 0.699999988079071044921875) + 1.0));
                                float _3165 = exp2(log2(1.0 / ((_3142 * 3.5) + 5.0)) * 0.25);
                                float _3166 = 1.0 - _926;
                                float _3173 = sqrt(1.0 - ((1.0 - (_3166 * _3166)) * (1.0 - (_3165 * _3165))));
                                float _3174 = _3173 * _3173;
                                float _3175 = _3174 * _3174;
                                float _3176 = _3122 - _2553;
                                float _3177 = _3123 - _2554;
                                float _3178 = _3124 - _2555;
                                float _3182 = inversesqrt(dot(vec3(_3176, _3177, _3178), vec3(_3176, _3177, _3178)));
                                float _3186 = dot(vec3(_850, _853, _856), vec3((-0.0) - _2553, (-0.0) - _2554, (-0.0) - _2555));
                                float _4163 = isnan(0.0) ? _3186 : (isnan(_3186) ? 0.0 : max(_3186, 0.0));
                                float _3189 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
                                float _3190 = dot(vec3(_850, _853, _856), vec3(_3182 * _3176, _3182 * _3177, _3182 * _3178));
                                float _4174 = isnan(0.0) ? _3190 : (isnan(_3190) ? 0.0 : max(_3190, 0.0));
                                float _3193 = isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0));
                                float _3197 = ((_3193 * _3193) * (_3175 + (-1.0))) + 1.0;
                                float _3198 = _3135 * _3174;
                                float _3199 = _3198 * _3198;
                                float _3205 = ((1.0 - _3199) * dot(vec3(_850, _853, _856), vec3(_3122, _3123, _3124))) + _3199;
                                float _4185 = isnan(0.0) ? _3205 : (isnan(_3205) ? 0.0 : max(_3205, 0.0));
                                float _3206 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
                                float _3207 = 1.0 - _3174;
                                float _3217 = (0.5 / (((_3206 * ((_3189 * _3207) + _3174)) + 9.9999999392252902907785028219223e-09) + (((_3206 * _3207) + _3174) * _3189))) * _3206;
                                float _4196 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0));
                                float _3227 = (_3152 * _3129) * (((_3175 * 3.1415927410125732421875) * (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0)))) / ((_3197 * _3197) * ((_3142 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_105_pred = _3153 * _2999.z;
                                frontier_phi_105_pred_1 = _3227 * _3011.x;
                                frontier_phi_105_pred_2 = _3227 * _3011.y;
                                frontier_phi_105_pred_3 = _3227 * _3011.z;
                                frontier_phi_105_pred_4 = _3153 * _2999.x;
                                frontier_phi_105_pred_5 = _3153 * _2999.y;
                            }
                            else
                            {
                                frontier_phi_105_pred = 0.0;
                                frontier_phi_105_pred_1 = 0.0;
                                frontier_phi_105_pred_2 = 0.0;
                                frontier_phi_105_pred_3 = 0.0;
                                frontier_phi_105_pred_4 = 0.0;
                                frontier_phi_105_pred_5 = 0.0;
                            }
                            _3236 = frontier_phi_105_pred;
                            _3231 = frontier_phi_105_pred_1;
                            _3232 = frontier_phi_105_pred_2;
                            _3233 = frontier_phi_105_pred_3;
                            _3234 = frontier_phi_105_pred_4;
                            _3235 = frontier_phi_105_pred_5;
                            _2941 = _3234 + _2954;
                            _2942 = _3235 + _2955;
                            _2943 = _3236 + _2956;
                            _2938 = _3231 + _2951;
                            _2939 = _3232 + _2952;
                            _2940 = _3233 + _2953;
                            if (_2958 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2951 = _2938;
                                _2952 = _2939;
                                _2953 = _2940;
                                _2954 = _2941;
                                _2955 = _2942;
                                _2956 = _2943;
                                _2957 = _2958;
                                continue;
                            }
                        }
                        frontier_phi_99_pred = _2941;
                        frontier_phi_99_pred_1 = _2940;
                        frontier_phi_99_pred_2 = _2939;
                        frontier_phi_99_pred_3 = _2938;
                        frontier_phi_99_pred_4 = _2943;
                        frontier_phi_99_pred_5 = _2942;
                    }
                    _2534 = frontier_phi_99_pred;
                    _2532 = frontier_phi_99_pred_1;
                    _2530 = frontier_phi_99_pred_2;
                    _2528 = frontier_phi_99_pred_3;
                    _2538 = frontier_phi_99_pred_4;
                    _2536 = frontier_phi_99_pred_5;
                    uint _2724 = _2723 + 1u;
                    if (_2724 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2717 = _2528;
                        _2718 = _2530;
                        _2719 = _2532;
                        _2720 = _2534;
                        _2721 = _2536;
                        _2722 = _2538;
                        _2723 = _2724;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_81_82_ladder = _2538;
                frontier_phi_81_82_ladder_1 = _2534;
                frontier_phi_81_82_ladder_2 = _2532;
                frontier_phi_81_82_ladder_3 = _2530;
                frontier_phi_81_82_ladder_4 = _2528;
                frontier_phi_81_82_ladder_5 = _2536;
            }
            else
            {
                frontier_phi_81_82_ladder = _2393;
                frontier_phi_81_82_ladder_1 = _2389;
                frontier_phi_81_82_ladder_2 = _2387;
                frontier_phi_81_82_ladder_3 = _2385;
                frontier_phi_81_82_ladder_4 = _2383;
                frontier_phi_81_82_ladder_5 = _2391;
            }
            _2527 = frontier_phi_81_82_ladder_4;
            _2529 = frontier_phi_81_82_ladder_3;
            _2531 = frontier_phi_81_82_ladder_2;
            _2533 = frontier_phi_81_82_ladder_1;
            _2535 = frontier_phi_81_82_ladder_5;
            _2537 = frontier_phi_81_82_ladder;
        }
        float _2542 = isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0));
        _2289 = (_2542 * _2533) + _2008;
        _2291 = (_2542 * _2535) + _2009;
        _2293 = (_2542 * _2537) + _2010;
        _2295 = ((_2527 * _895) * _2542) + _2172;
        _2297 = ((_2529 * _897) * _2542) + _2173;
        _2299 = ((_2531 * _898) * _2542) + _2174;
    }
    else
    {
        _2289 = _2008;
        _2291 = _2009;
        _2293 = _2010;
        _2295 = _2172;
        _2297 = _2173;
        _2299 = _2174;
    }
    uint _2305 = _871 + uint(cbMatDynParam._m0[0u].w);
    float _4212 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _4223 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
    float _4234 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _2330 = (((isnan(1.0) ? _4212 : (isnan(_4212) ? 1.0 : min(_4212, 1.0))) * (_2289 + ((isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0))) * _910))) + ((_2295 + ((isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_2305].x * ((_715 * ((_671 - _599) - (_671 * _290))) + _599));
    float _2332 = ((cbInstanceData._m0[_2305].y * ((_715 * ((_672 - _600) - (_672 * _290))) + _600)) + ((_2297 + ((isnan(0.0) ? _1934 : (isnan(_1934) ? 0.0 : max(_1934, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))) * (_2291 + ((isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))) * _910)));
    float _2334 = ((cbInstanceData._m0[_2305].z * ((_715 * ((_673 - _601) - (_673 * _290))) + _601)) + ((_2299 + ((isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0))) * _1719)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0))) * (_2293 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _910)));
    uint _2338 = _869 + 6u;
    float _2346 = _830 / cbSceneParam._m0[86u].x;
    float _2347 = _831 / cbSceneParam._m0[86u].y;
    vec4 _2361 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2346, _2347, (log2((isnan(cbSceneParam._m0[77u].w) ? _817 : (isnan(_817) ? cbSceneParam._m0[77u].w : min(_817, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2363 = _2361.x;
    float _2364 = _2361.y;
    float _2365 = _2361.z;
    float _2366 = _2361.w;
    float _2446;
    float _2448;
    float _2450;
    float _2452;
    if (_817 > cbSceneParam._m0[78u].w)
    {
        float _2408 = isnan(_817) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _817 : min(cbSceneParam._m0[80u].w, _817));
        float _2409 = _2408 / _817;
        float _2420 = _2409 * _263;
        float _2421 = _264 * _2409;
        float _2422 = (-0.0) - _2421;
        float _2423 = _2409 * _265;
        float _2425 = (cbSceneParam._m0[77u].w * _2422) / _2408;
        float _2426 = _2425 + cbSceneParam._m0[79u].w;
        float _2427 = cbSceneParam._m0[79u].w - _2421;
        float _2433 = sqrt(((_2420 * _2420) + (_2421 * _2421)) + (_2423 * _2423));
        float _2436 = (1.0 - (cbSceneParam._m0[77u].w / _2408)) * _2433;
        float _2442 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2444 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2653;
        if (abs((_2422 - _2425) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2653 = ((((_2426 > 0.0) ? exp2(_2442 * _2426) : (2.0 - exp2(_2444 * _2426))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2436;
        }
        else
        {
            float _2588 = 1.0 / cbSceneParam._m0[80u].x;
            float _2589 = isnan(_2427) ? _2426 : (isnan(_2426) ? _2427 : max(_2426, _2427));
            float _2590 = isnan(_2427) ? _2426 : (isnan(_2426) ? _2427 : min(_2426, _2427));
            float _2599 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : min(_2589, 0.0));
            float _2600 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : min(_2590, 0.0));
            _2653 = ((abs(_2433 / _2422) * cbSceneParam._m0[80u].y) * ((((_2599 - _2600) * 2.0) - ((exp2(_2442 * (isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0)))) - exp2(_2442 * (isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0))))) * _2588)) - ((exp2(_2444 * _2599) - exp2(_2444 * _2600)) * _2588))) + (_2436 * cbSceneParam._m0[80u].z);
        }
        vec4 _2655 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2346, _2347, 1.0), 0.0);
        float _2664 = exp2((_2653 * (-1.44269502162933349609375)) * (1.0 - _2655.w));
        float _2665 = log2(_2664);
        float _2681 = log2(_2366);
        _2446 = (exp2(_2681 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2665 * cbSceneParam._m0[78u].x)) * _2655.x) / cbSceneParam._m0[78u].x)) + _2363;
        _2448 = (exp2(_2681 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2665 * cbSceneParam._m0[78u].y)) * _2655.y) / cbSceneParam._m0[78u].y)) + _2364;
        _2450 = (exp2(_2681 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2665 * cbSceneParam._m0[78u].z)) * _2655.z) / cbSceneParam._m0[78u].z)) + _2365;
        _2452 = _2664 * _2366;
    }
    else
    {
        _2446 = _2363;
        _2448 = _2364;
        _2450 = _2365;
        _2452 = _2366;
    }
    float _2464 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2465 = _2464 == 3.0;
    float _2466 = log2(_2452);
    float _2473 = exp2(_2466 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0)));
    float _2474 = exp2(_2466 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0)));
    float _2475 = exp2(_2466 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2334 : (isnan(_2334) ? 0.0 : max(_2334, 0.0)));
    float _2484 = (_2464 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2484 * (_2465 ? _2473 : (_2473 + (cbSceneParam._m0[72u].w * _2446)));
    SV_Target.y = _2484 * (_2465 ? _2474 : (_2474 + (cbSceneParam._m0[72u].w * _2448)));
    SV_Target.z = _2484 * (_2465 ? _2475 : (_2475 + (cbSceneParam._m0[72u].w * _2450)));
    SV_Target.w = cbInstanceData._m0[_2338].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2338].w;
}


