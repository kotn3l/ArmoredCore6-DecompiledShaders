#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _144 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _203 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _213 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _203);
    float _214 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _203);
    float _215 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _203);
    float _241 = cbMtdParam._m0[22u].y + _213;
    float _242 = cbMtdParam._m0[22u].z + _214;
    float _243 = cbMtdParam._m0[22u].w + _215;
    float _260 = (-0.0) - dot(vec3(_241, _242, _243), vec3(_144 * _137, _144 * _138, _144 * _139));
    float _261 = (-0.0) - dot(vec3(_241, _242, _243), vec3(_155 * TANGENT.x, _155 * TANGENT.y, _155 * TANGENT.z));
    float _262 = (-0.0) - dot(vec3(_241, _242, _243), vec3((-0.0) - (NORMAL.x * _151), (-0.0) - (NORMAL.y * _151), (-0.0) - (NORMAL.z * _151)));
    float _266 = inversesqrt(dot(vec3(_260, _261, _262), vec3(_260, _261, _262)));
    float _267 = _266 * _262;
    float _269 = (cbMtdParam._m0[19u].x * _260) * _266;
    float _271 = (cbMtdParam._m0[18u].w * _261) * _266;
    float _272 = fract(TEXCOORD.x);
    float _273 = fract(TEXCOORD.y);
    float _279;
    if (_269 > 0.0)
    {
        _279 = (1.0 - _272) / _269;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_269 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _272) / _269;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _279 = frontier_phi_3_2_ladder;
    }
    float _287;
    if (_271 > 0.0)
    {
        _287 = (1.0 - _273) / _271;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_271 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _273) / _271;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _287 = frontier_phi_7_6_ladder;
    }
    float _291 = (_267 > 0.0) ? (cbMtdParam._m0[15u].x / _267) : 5000.0;
    float _292 = isnan(_287) ? _279 : (isnan(_279) ? _287 : min(_279, _287));
    float _293 = isnan(_291) ? _292 : (isnan(_292) ? _291 : min(_292, _291));
    float _297 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _304 = ((_293 * _267) + _297) / _297;
    vec4 _330 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_272 + (-0.5)) + (_293 * _269)) / _304) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_273 + (-0.5)) + (_293 * _271)) / _304) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _341 = cbMtdParam._m0[9u].x * _330.x;
    float _342 = cbMtdParam._m0[9u].y * _330.y;
    float _343 = cbMtdParam._m0[9u].z * _330.z;
    float _543 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _344 = isnan(1.0) ? _543 : (isnan(_543) ? 1.0 : min(_543, 1.0));
    float _554 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _345 = isnan(1.0) ? _554 : (isnan(_554) ? 1.0 : min(_554, 1.0));
    float _565 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _346 = isnan(1.0) ? _565 : (isnan(_565) ? 1.0 : min(_565, 1.0));
    uint _348 = uint(roundEven(NORMAL.w));
    vec4 _353 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _355 = _353.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _417 = sqrt(((_213 * _213) + (_214 * _214)) + (_215 * _215));
        float _424 = (cbMatDynParam._m0[5u].x * _417) + cbMatDynParam._m0[5u].y;
        float _576 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
        float _425 = isnan(1.0) ? _576 : (isnan(_576) ? 1.0 : min(_576, 1.0));
        float _429 = (cbMatDynParam._m0[5u].z * _417) + cbMatDynParam._m0[5u].w;
        float _587 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _587 : (isnan(_587) ? 1.0 : min(_587, 1.0))) - _425)) + _425) < ((_355 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _457;
    uint _376;
    vec4 _381;
    float _388;
    float _389;
    float _390;
    float _394;
    vec4 _397;
    float _399;
    float _400;
    bool _411;
    for (;;)
    {
        _376 = _348 * 13u;
        _381 = cbInstanceData._m0[(_376 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _385 = (cbMtdParam._m0[0u].x * _344) * _381.x;
        float _386 = (cbMtdParam._m0[0u].y * _345) * _381.y;
        float _387 = (cbMtdParam._m0[0u].z * _346) * _381.z;
        float _598 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
        _388 = isnan(1.0) ? _598 : (isnan(_598) ? 1.0 : min(_598, 1.0));
        float _609 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
        _389 = isnan(1.0) ? _609 : (isnan(_609) ? 1.0 : min(_609, 1.0));
        float _620 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
        _390 = isnan(1.0) ? _620 : (isnan(_620) ? 1.0 : min(_620, 1.0));
        _394 = cbInstanceData._m0[_376 + 6u].w;
        float _395 = _355 + (-0.5);
        _397 = cbMtdParam._m0[1u];
        _399 = _397.y * _395;
        _400 = _395 * 0.999000012874603271484375;
        _411 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_411)
        {
            if ((cbInstanceData._m0[_376 + 7u].x + _400) < 0.5)
            {
                _457 = true;
                break;
            }
        }
        if ((_381.w < 1.0) && ((_381.w + _400) < 0.5))
        {
            _457 = true;
            break;
        }
        if ((_399 + 1.0) < _397.x)
        {
            _457 = true;
            break;
        }
        _457 = false;
        break;
    }
    if (_457)
    {
        discard_state = true;
    }
    bool _473 = cbMtdParam._m0[1u].z != 0.0;
    float _474 = _473 ? _394 : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _474;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _473 ? _394 : TEXCOORD.z;
    SV_Target_2.x = _388;
    SV_Target_2.y = _389;
    SV_Target_2.z = _390;
    SV_Target_2.w = _473 ? _394 : (float(floatBitsToUint(cbInstanceData._m0[_376 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _474;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _474;
    discard_exit();
}


