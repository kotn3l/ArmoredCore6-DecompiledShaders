#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _159 = _158 * _151;
    float _160 = _158 * _152;
    float _161 = _158 * _153;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173 = _172 * TANGENT.x;
    float _174 = _172 * TANGENT.y;
    float _175 = _172 * TANGENT.z;
    float _220 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _230 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _220);
    float _231 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _220);
    float _232 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _220);
    vec4 _251 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _257 = _251.w;
    float _270 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _257) + cbMtdParam._m0[11u].x) * _251.x;
    float _272 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _257) + cbMtdParam._m0[11u].y) * _251.y;
    float _274 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _257) + cbMtdParam._m0[11u].z) * _251.z;
    vec4 _292 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _296 = _292.z;
    float _319 = (_292.x * 2.0) + (-1.0);
    float _321 = (_292.y * 2.0) + (-1.0);
    float _324 = _319 - (_319 * _257);
    float _325 = _321 - (_321 * _257);
    float _334 = cbMtdParam._m0[22u].y + _230;
    float _335 = cbMtdParam._m0[22u].z + _231;
    float _336 = cbMtdParam._m0[22u].w + _232;
    float _350 = (-0.0) - dot(vec3(_334, _335, _336), vec3(_159, _160, _161));
    float _351 = (-0.0) - dot(vec3(_334, _335, _336), vec3(_173, _174, _175));
    float _352 = (-0.0) - dot(vec3(_334, _335, _336), vec3((-0.0) - _166, (-0.0) - _167, (-0.0) - _168));
    float _356 = inversesqrt(dot(vec3(_350, _351, _352), vec3(_350, _351, _352)));
    float _359 = _356 * _352;
    float _360 = (_356 * _350) + (_324 * cbMtdParam._m0[20u].y);
    float _361 = (_356 * _351) + (_325 * cbMtdParam._m0[20u].z);
    float _362 = _360 * cbMtdParam._m0[19u].x;
    float _363 = _361 * cbMtdParam._m0[18u].w;
    float _364 = fract(TEXCOORD.x);
    float _365 = fract(TEXCOORD.y);
    float _371;
    if (_362 > 0.0)
    {
        _371 = (1.0 - _364) / _362;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_362 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _364) / _362;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _371 = frontier_phi_3_2_ladder;
    }
    float _379;
    if (_363 > 0.0)
    {
        _379 = (1.0 - _365) / _363;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_363 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _365) / _363;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _379 = frontier_phi_7_6_ladder;
    }
    bool _381 = _359 > 0.0;
    float _383 = _381 ? (cbMtdParam._m0[15u].x / _359) : 5000.0;
    float _384 = isnan(_379) ? _371 : (isnan(_371) ? _379 : min(_371, _379));
    float _385 = isnan(_383) ? _384 : (isnan(_384) ? _383 : min(_384, _383));
    float _389 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _390 = _364 + (-0.5);
    float _393 = _365 + (-0.5);
    float _396 = ((_385 * _359) + _389) / _389;
    vec4 _421 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_390 + (_385 * _362)) / _396) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_393 + (_385 * _363)) / _396) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _423 = _421.x;
    float _424 = _421.y;
    float _425 = _421.z;
    float _437 = (_423 - (_423 * _257)) * cbMtdParam._m0[9u].x;
    float _438 = (_424 - (_424 * _257)) * cbMtdParam._m0[9u].y;
    float _439 = cbMtdParam._m0[9u].z * (_425 - (_425 * _257));
    float _457 = _360 * cbMtdParam._m0[21u].x;
    float _458 = _361 * cbMtdParam._m0[20u].w;
    bool _459 = _457 > 0.0;
    float _464;
    if (_459)
    {
        _464 = (1.0 - _364) / _457;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_457 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _364) / _457;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _464 = frontier_phi_11_10_ladder;
    }
    bool _466 = _458 > 0.0;
    float _471;
    if (_466)
    {
        _471 = (1.0 - _365) / _458;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_458 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _365) / _458;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _471 = frontier_phi_15_14_ladder;
    }
    float _474 = _381 ? (cbMtdParam._m0[16u].z / _359) : 5000.0;
    float _475 = isnan(_471) ? _464 : (isnan(_464) ? _471 : min(_464, _471));
    float _476 = isnan(_474) ? _475 : (isnan(_475) ? _474 : min(_475, _474));
    float _480 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _484 = ((_476 * _359) + _480) / _480;
    float _489 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _491 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _507 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_390 + (_476 * _457)) / _484) + 0.5) + _489) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_393 + (_476 * _458)) / _484) + 0.5) + _491) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _512 = _507.x * cbMtdParam._m0[10u].x;
    float _513 = _507.y * cbMtdParam._m0[10u].y;
    float _514 = _507.z * cbMtdParam._m0[10u].z;
    float _522;
    if (_459)
    {
        _522 = (1.0 - _364) / _457;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_457 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _364) / _457;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _522 = frontier_phi_19_18_ladder;
    }
    float _528;
    if (_466)
    {
        _528 = (1.0 - _365) / _458;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_458 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _365) / _458;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _528 = frontier_phi_23_22_ladder;
    }
    float _530 = isnan(_528) ? _522 : (isnan(_522) ? _528 : min(_522, _528));
    float _531 = isnan(_474) ? _530 : (isnan(_530) ? _474 : min(_530, _474));
    float _538 = ((_531 * _359) + _480) / _480;
    vec4 _552 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_390 + (_531 * _457)) / _538) + 0.5) + _489) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_393 + (_531 * _458)) / _538) + 0.5) + _491) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _554 = _552.w;
    float _556 = _554 - (_554 * _257);
    float _567 = 0.5 - (_257 * 0.5);
    float _577 = (((_437 - _270) + (_556 * ((_512 - _437) - (_512 * _257)))) * _567) + _270;
    float _578 = (((_438 - _272) + (_556 * ((_513 - _438) - (_513 * _257)))) * _567) + _272;
    float _579 = (((_439 - _274) + (_556 * ((_514 - _439) - (_514 * _257)))) * _567) + _274;
    vec4 _591 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _593 = _591.x;
    vec4 _605 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _609 = _605.z;
    float _612 = (_605.x * 2.0) + (-1.0);
    float _613 = (_605.y * 2.0) + (-1.0);
    float _614 = dot(vec2(_612, _613), vec2(_612, _613));
    float _899 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _619 = sqrt(1.0 - (isnan(1.0) ? _899 : (isnan(_899) ? 1.0 : min(_899, 1.0))));
    float _620 = _609 * _257;
    float _627 = (cbMtdParam._m0[15u].w * ((_296 - _620) + ((_609 - _296) * _257))) + _620;
    float _631 = (cbMtdParam._m0[16u].x * _324) + _612;
    float _632 = (cbMtdParam._m0[16u].x * _325) + _613;
    float _635 = fma(_619, _166, fma(_632, _173, _631 * _159));
    float _638 = fma(_619, _167, fma(_632, _174, _631 * _160));
    float _641 = fma(_619, _168, fma(_632, _175, _631 * _161));
    float _645 = inversesqrt(dot(vec3(_635, _638, _641), vec3(_635, _638, _641)));
    float _910 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _921 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _647 = isnan(1.0) ? _921 : (isnan(_921) ? 1.0 : min(_921, 1.0));
    float _932 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _648 = isnan(1.0) ? _932 : (isnan(_932) ? 1.0 : min(_932, 1.0));
    float _943 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _649 = isnan(1.0) ? _943 : (isnan(_943) ? 1.0 : min(_943, 1.0));
    float _954 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    uint _652 = uint(roundEven(NORMAL.w));
    vec4 _657 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _659 = _657.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _721 = sqrt(((_230 * _230) + (_231 * _231)) + (_232 * _232));
        float _727 = (cbMatDynParam._m0[5u].x * _721) + cbMatDynParam._m0[5u].y;
        float _965 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
        float _728 = isnan(1.0) ? _965 : (isnan(_965) ? 1.0 : min(_965, 1.0));
        float _732 = (cbMatDynParam._m0[5u].z * _721) + cbMatDynParam._m0[5u].w;
        float _976 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _976 : (isnan(_976) ? 1.0 : min(_976, 1.0))) - _728)) + _728) < ((_659 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _760;
    uint _680;
    vec4 _685;
    float _692;
    float _693;
    float _694;
    float _698;
    vec4 _701;
    float _703;
    float _704;
    bool _715;
    for (;;)
    {
        _680 = _652 * 13u;
        _685 = cbInstanceData._m0[(_680 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _689 = (cbMtdParam._m0[0u].x * _647) * _685.x;
        float _690 = (cbMtdParam._m0[0u].y * _648) * _685.y;
        float _691 = (cbMtdParam._m0[0u].z * _649) * _685.z;
        float _987 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
        _692 = isnan(1.0) ? _987 : (isnan(_987) ? 1.0 : min(_987, 1.0));
        float _998 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
        _693 = isnan(1.0) ? _998 : (isnan(_998) ? 1.0 : min(_998, 1.0));
        float _1009 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
        _694 = isnan(1.0) ? _1009 : (isnan(_1009) ? 1.0 : min(_1009, 1.0));
        _698 = cbInstanceData._m0[_680 + 6u].w;
        float _699 = _659 + (-0.5);
        _701 = cbMtdParam._m0[1u];
        _703 = _701.y * _699;
        _704 = _699 * 0.999000012874603271484375;
        _715 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_715)
        {
            if ((cbInstanceData._m0[_680 + 7u].x + _704) < 0.5)
            {
                _760 = true;
                break;
            }
        }
        if ((_685.w < 1.0) && ((_685.w + _704) < 0.5))
        {
            _760 = true;
            break;
        }
        if ((_703 + 1.0) < _701.x)
        {
            _760 = true;
            break;
        }
        _760 = false;
        break;
    }
    if (_760)
    {
        discard_state = true;
    }
    bool _786 = cbMtdParam._m0[1u].z != 0.0;
    float _787 = _786 ? _698 : 0.0;
    SV_Target.x = ((_635 * 0.5) * _645) + 0.500488758087158203125;
    SV_Target.y = ((_638 * 0.5) * _645) + 0.500488758087158203125;
    SV_Target.z = ((_641 * 0.5) * _645) + 0.500488758087158203125;
    SV_Target.w = _787;
    SV_Target_1.x = isnan(1.0) ? _954 : (isnan(_954) ? 1.0 : min(_954, 1.0));
    SV_Target_1.y = isnan(1.0) ? _910 : (isnan(_910) ? 1.0 : min(_910, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _786 ? _698 : TEXCOORD.z;
    SV_Target_2.x = _692;
    SV_Target_2.y = _693;
    SV_Target_2.z = _694;
    SV_Target_2.w = _786 ? _698 : (float(floatBitsToUint(cbInstanceData._m0[_680 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _787;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _787;
    discard_exit();
}


