#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _141 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _142 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _143 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _148 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _210 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _220 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _210);
    float _221 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _210);
    float _222 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _210);
    float _248 = cbMtdParam._m0[22u].y + _220;
    float _249 = cbMtdParam._m0[22u].z + _221;
    float _250 = cbMtdParam._m0[22u].w + _222;
    float _264 = (-0.0) - dot(vec3(_248, _249, _250), vec3(_148 * _141, _148 * _142, _148 * _143));
    float _265 = (-0.0) - dot(vec3(_248, _249, _250), vec3(_162 * TANGENT.x, _162 * TANGENT.y, _162 * TANGENT.z));
    float _266 = (-0.0) - dot(vec3(_248, _249, _250), vec3((-0.0) - (_155 * NORMAL.x), (-0.0) - (_155 * NORMAL.y), (-0.0) - (_155 * NORMAL.z)));
    float _270 = inversesqrt(dot(vec3(_264, _265, _266), vec3(_264, _265, _266)));
    float _271 = _270 * _266;
    float _273 = (cbMtdParam._m0[19u].x * _264) * _270;
    float _275 = (cbMtdParam._m0[18u].w * _265) * _270;
    float _276 = fract(TEXCOORD.x);
    float _277 = fract(TEXCOORD.y);
    float _283;
    if (_273 > 0.0)
    {
        _283 = (1.0 - _276) / _273;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_273 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _276) / _273;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _283 = frontier_phi_3_2_ladder;
    }
    float _291;
    if (_275 > 0.0)
    {
        _291 = (1.0 - _277) / _275;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_275 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _277) / _275;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _291 = frontier_phi_7_6_ladder;
    }
    bool _293 = _271 > 0.0;
    float _295 = _293 ? (cbMtdParam._m0[15u].x / _271) : 5000.0;
    float _296 = isnan(_291) ? _283 : (isnan(_283) ? _291 : min(_283, _291));
    float _297 = isnan(_295) ? _296 : (isnan(_296) ? _295 : min(_296, _295));
    float _301 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _302 = _276 + (-0.5);
    float _305 = _277 + (-0.5);
    float _308 = ((_297 * _271) + _301) / _301;
    vec4 _334 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_302 + (_297 * _273)) / _308) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_305 + (_297 * _275)) / _308) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _345 = cbMtdParam._m0[9u].x * _334.x;
    float _346 = cbMtdParam._m0[9u].y * _334.y;
    float _347 = cbMtdParam._m0[9u].z * _334.z;
    float _369 = (cbMtdParam._m0[21u].x * _264) * _270;
    float _371 = (cbMtdParam._m0[20u].w * _265) * _270;
    bool _372 = _369 > 0.0;
    float _377;
    if (_372)
    {
        _377 = (1.0 - _276) / _369;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_369 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _276) / _369;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _377 = frontier_phi_11_10_ladder;
    }
    bool _379 = _371 > 0.0;
    float _384;
    if (_379)
    {
        _384 = (1.0 - _277) / _371;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_371 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _277) / _371;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _384 = frontier_phi_15_14_ladder;
    }
    float _387 = _293 ? (cbMtdParam._m0[16u].z / _271) : 5000.0;
    float _388 = isnan(_384) ? _377 : (isnan(_377) ? _384 : min(_377, _384));
    float _389 = isnan(_387) ? _388 : (isnan(_388) ? _387 : min(_388, _387));
    float _393 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _397 = ((_389 * _271) + _393) / _393;
    float _402 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _404 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _420 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_302 + (_389 * _369)) / _397) + 0.5) + _402) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_305 + (_389 * _371)) / _397) + 0.5) + _404) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _432;
    if (_372)
    {
        _432 = (1.0 - _276) / _369;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_369 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _276) / _369;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _432 = frontier_phi_19_18_ladder;
    }
    float _438;
    if (_379)
    {
        _438 = (1.0 - _277) / _371;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_371 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _277) / _371;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _438 = frontier_phi_23_22_ladder;
    }
    float _440 = isnan(_438) ? _432 : (isnan(_432) ? _438 : min(_432, _438));
    float _441 = isnan(_387) ? _440 : (isnan(_440) ? _387 : min(_440, _387));
    float _448 = ((_441 * _271) + _393) / _393;
    vec4 _462 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_302 + (_441 * _369)) / _448) + 0.5) + _402) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_305 + (_441 * _371)) / _448) + 0.5) + _404) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _464 = _462.w;
    float _471 = (_464 * ((_420.x * cbMtdParam._m0[10u].x) - _345)) + _345;
    float _472 = (_464 * ((_420.y * cbMtdParam._m0[10u].y) - _346)) + _346;
    float _473 = (_464 * ((_420.z * cbMtdParam._m0[10u].z) - _347)) + _347;
    float _488 = (cbMtdParam._m0[21u].z * _264) * _270;
    float _490 = (cbMtdParam._m0[21u].y * _265) * _270;
    bool _491 = _488 > 0.0;
    float _496;
    if (_491)
    {
        _496 = (1.0 - _276) / _488;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_488 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _276) / _488;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _496 = frontier_phi_27_26_ladder;
    }
    bool _498 = _490 > 0.0;
    float _503;
    if (_498)
    {
        _503 = (1.0 - _277) / _490;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_490 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _277) / _490;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _503 = frontier_phi_31_30_ladder;
    }
    float _506 = _293 ? (cbMtdParam._m0[18u].x / _271) : 5000.0;
    float _507 = isnan(_503) ? _496 : (isnan(_496) ? _503 : min(_496, _503));
    float _508 = isnan(_506) ? _507 : (isnan(_507) ? _506 : min(_507, _506));
    float _512 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _516 = ((_508 * _271) + _512) / _512;
    float _521 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _523 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _540 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_302 + (_508 * _488)) / _516) + 0.5) + _521) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_305 + (_508 * _490)) / _516) + 0.5) + _523) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _552;
    if (_491)
    {
        _552 = (1.0 - _276) / _488;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_488 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _276) / _488;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _552 = frontier_phi_35_34_ladder;
    }
    float _558;
    if (_498)
    {
        _558 = (1.0 - _277) / _490;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_490 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _277) / _490;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _558 = frontier_phi_39_38_ladder;
    }
    float _560 = isnan(_558) ? _552 : (isnan(_552) ? _558 : min(_552, _558));
    float _561 = isnan(_506) ? _560 : (isnan(_560) ? _506 : min(_560, _506));
    float _568 = ((_561 * _271) + _512) / _512;
    vec4 _582 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_302 + (_561 * _488)) / _568) + 0.5) + _521) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_305 + (_561 * _490)) / _568) + 0.5) + _523) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _584 = _582.w;
    float _591 = (_584 * ((_540.x * cbMtdParam._m0[14u].x) - _471)) + _471;
    float _592 = (_584 * ((_540.y * cbMtdParam._m0[14u].y) - _472)) + _472;
    float _593 = (_584 * ((_540.z * cbMtdParam._m0[14u].z) - _473)) + _473;
    float _880 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _594 = isnan(1.0) ? _880 : (isnan(_880) ? 1.0 : min(_880, 1.0));
    float _891 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _595 = isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0));
    float _902 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _596 = isnan(1.0) ? _902 : (isnan(_902) ? 1.0 : min(_902, 1.0));
    uint _598 = uint(roundEven(NORMAL.w));
    vec4 _603 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _605 = _603.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _667 = sqrt(((_220 * _220) + (_221 * _221)) + (_222 * _222));
        float _674 = (cbMatDynParam._m0[5u].x * _667) + cbMatDynParam._m0[5u].y;
        float _913 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
        float _675 = isnan(1.0) ? _913 : (isnan(_913) ? 1.0 : min(_913, 1.0));
        float _679 = (cbMatDynParam._m0[5u].z * _667) + cbMatDynParam._m0[5u].w;
        float _924 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _924 : (isnan(_924) ? 1.0 : min(_924, 1.0))) - _675)) + _675) < ((_605 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _706;
    uint _626;
    vec4 _631;
    float _638;
    float _639;
    float _640;
    float _644;
    vec4 _647;
    float _649;
    float _650;
    bool _661;
    for (;;)
    {
        _626 = _598 * 13u;
        _631 = cbInstanceData._m0[(_626 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _635 = (cbMtdParam._m0[0u].x * _594) * _631.x;
        float _636 = (cbMtdParam._m0[0u].y * _595) * _631.y;
        float _637 = (cbMtdParam._m0[0u].z * _596) * _631.z;
        float _935 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
        _638 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
        float _946 = isnan(0.0) ? _636 : (isnan(_636) ? 0.0 : max(_636, 0.0));
        _639 = isnan(1.0) ? _946 : (isnan(_946) ? 1.0 : min(_946, 1.0));
        float _957 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
        _640 = isnan(1.0) ? _957 : (isnan(_957) ? 1.0 : min(_957, 1.0));
        _644 = cbInstanceData._m0[_626 + 6u].w;
        float _645 = _605 + (-0.5);
        _647 = cbMtdParam._m0[1u];
        _649 = _647.y * _645;
        _650 = _645 * 0.999000012874603271484375;
        _661 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_661)
        {
            if ((cbInstanceData._m0[_626 + 7u].x + _650) < 0.5)
            {
                _706 = true;
                break;
            }
        }
        if ((_631.w < 1.0) && ((_631.w + _650) < 0.5))
        {
            _706 = true;
            break;
        }
        if ((_649 + 1.0) < _647.x)
        {
            _706 = true;
            break;
        }
        _706 = false;
        break;
    }
    if (_706)
    {
        discard_state = true;
    }
    bool _722 = cbMtdParam._m0[1u].z != 0.0;
    float _723 = _722 ? _644 : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _723;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _722 ? _644 : TEXCOORD.z;
    SV_Target_2.x = _638;
    SV_Target_2.y = _639;
    SV_Target_2.z = _640;
    SV_Target_2.w = _722 ? _644 : (float(floatBitsToUint(cbInstanceData._m0[_626 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _723;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _723;
    discard_exit();
}


