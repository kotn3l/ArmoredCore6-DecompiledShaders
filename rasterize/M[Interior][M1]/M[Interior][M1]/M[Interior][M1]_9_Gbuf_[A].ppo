#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _363;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _147 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _148 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _149 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _154 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _155 = _154 * _147;
    float _156 = _154 * _148;
    float _157 = _154 * _149;
    float _161 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _162 = _161 * NORMAL.x;
    float _163 = _161 * NORMAL.y;
    float _164 = _161 * NORMAL.z;
    float _168 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _169 = _168 * TANGENT.x;
    float _170 = _168 * TANGENT.y;
    float _171 = _168 * TANGENT.z;
    float _216 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _226 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _216);
    float _227 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _216);
    float _228 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _216);
    vec4 _247 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _253 = _247.w;
    float _266 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _253) + cbMtdParam._m0[11u].x) * _247.x;
    float _268 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _253) + cbMtdParam._m0[11u].y) * _247.y;
    float _270 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _253) + cbMtdParam._m0[11u].z) * _247.z;
    float _295 = inversesqrt(dot(vec3(_155, _156, _157), vec3(_155, _156, _157)));
    float _302 = inversesqrt(dot(vec3(_169, _170, _171), vec3(_169, _170, _171)));
    float _312 = cbMtdParam._m0[23u].x + _226;
    float _313 = cbMtdParam._m0[23u].y + _227;
    float _314 = cbMtdParam._m0[23u].z + _228;
    float _328 = (-0.0) - dot(vec3(_312, _313, _314), vec3(_295 * _155, _295 * _156, _295 * _157));
    float _329 = (-0.0) - dot(vec3(_312, _313, _314), vec3(_302 * _169, _302 * _170, _302 * _171));
    float _330 = (-0.0) - dot(vec3(_312, _313, _314), vec3((-0.0) - _162, (-0.0) - _163, (-0.0) - _164));
    float _334 = inversesqrt(dot(vec3(_328, _329, _330), vec3(_328, _329, _330)));
    float _335 = _334 * _330;
    float _337 = (cbMtdParam._m0[19u].w * _328) * _334;
    float _339 = (cbMtdParam._m0[20u].x * _329) * _334;
    float _342 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _343 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _361;
    float _364;
    float _366;
    if (_337 > 0.0)
    {
        float _347 = (1.0 - _342) / _337;
        _361 = _347;
        _364 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_347 * _335)) * 0.16666667163372039794921875;
        _366 = (fract((_347 * _339) + _343) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_337 < 0.0)
        {
            float _362 = ((-0.0) - _342) / _337;
            frontier_phi_3_2_ladder = _362;
            frontier_phi_3_2_ladder_1 = (fract(_362 * _335) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_362 * _339) + _343) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _363;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _361 = frontier_phi_3_2_ladder;
        _364 = frontier_phi_3_2_ladder_1;
        _366 = frontier_phi_3_2_ladder_2;
    }
    float _392;
    float _394;
    float _396;
    if (_339 > 0.0)
    {
        float _379 = (1.0 - _343) / _339;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_379 < _361)
        {
            frontier_phi_8_5_ladder = _379;
            frontier_phi_8_5_ladder_1 = (fract((_379 * _337) + _342) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_379 * _335) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _361;
            frontier_phi_8_5_ladder_1 = _364;
            frontier_phi_8_5_ladder_2 = _366;
        }
        _392 = frontier_phi_8_5_ladder;
        _394 = frontier_phi_8_5_ladder_1;
        _396 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_339 < 0.0)
        {
            float _393 = ((-0.0) - _343) / _339;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_393 < _361)
            {
                frontier_phi_8_6_ladder_9_ladder = _393;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_393 * _337) + _342) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_393 * _335) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _361;
                frontier_phi_8_6_ladder_9_ladder_1 = _364;
                frontier_phi_8_6_ladder_9_ladder_2 = _366;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _361;
            frontier_phi_8_6_ladder_1 = _364;
            frontier_phi_8_6_ladder_2 = _366;
        }
        _392 = frontier_phi_8_6_ladder;
        _394 = frontier_phi_8_6_ladder_1;
        _396 = frontier_phi_8_6_ladder_2;
    }
    float _400 = (_335 > 0.0) ? (cbMtdParam._m0[16u].w / _335) : 5000.0;
    float _413;
    float _414;
    if (_400 < _392)
    {
        _413 = ((_342 + cbMtdParam._m0[17u].x) + (_400 * _337)) * 0.16666667163372039794921875;
        _414 = (((_400 * _339) + _343) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _413 = _394;
        _414 = _396;
    }
    vec4 _416 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_413, _414));
    float _421 = _416.x * cbMtdParam._m0[13u].x;
    float _422 = _416.y * cbMtdParam._m0[13u].y;
    float _423 = _416.z * cbMtdParam._m0[13u].z;
    float _427 = _421 - (_421 * _253);
    float _428 = _422 - (_422 * _253);
    float _429 = _423 - (_423 * _253);
    vec4 _441 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _443 = _441.x;
    vec4 _455 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _463 = (_455.x * 2.0) + (-1.0);
    float _465 = (_455.y * 2.0) + (-1.0);
    float _466 = dot(vec2(_463, _465), vec2(_463, _465));
    float _717 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _471 = sqrt(1.0 - (isnan(1.0) ? _717 : (isnan(_717) ? 1.0 : min(_717, 1.0))));
    float _472 = _455.z * _253;
    float _475 = fma(_471, _162, fma(_465, _169, _463 * _155));
    float _478 = fma(_471, _163, fma(_465, _170, _463 * _156));
    float _481 = fma(_471, _164, fma(_465, _171, _463 * _157));
    float _485 = inversesqrt(dot(vec3(_475, _478, _481), vec3(_475, _478, _481)));
    float _728 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _739 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _487 = isnan(1.0) ? _739 : (isnan(_739) ? 1.0 : min(_739, 1.0));
    float _750 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _488 = isnan(1.0) ? _750 : (isnan(_750) ? 1.0 : min(_750, 1.0));
    float _761 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _489 = isnan(1.0) ? _761 : (isnan(_761) ? 1.0 : min(_761, 1.0));
    float _772 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    uint _492 = uint(roundEven(NORMAL.w));
    vec4 _497 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _499 = _497.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _569 = sqrt(((_226 * _226) + (_227 * _227)) + (_228 * _228));
        float _576 = (cbMatDynParam._m0[5u].x * _569) + cbMatDynParam._m0[5u].y;
        float _783 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
        float _577 = isnan(1.0) ? _783 : (isnan(_783) ? 1.0 : min(_783, 1.0));
        float _581 = (cbMatDynParam._m0[5u].z * _569) + cbMatDynParam._m0[5u].w;
        float _794 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _794 : (isnan(_794) ? 1.0 : min(_794, 1.0))) - _577)) + _577) < ((_499 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _609;
    uint _525;
    vec4 _529;
    float _536;
    float _537;
    float _538;
    float _539;
    float _540;
    float _541;
    float _545;
    vec4 _549;
    float _551;
    float _552;
    bool _563;
    for (;;)
    {
        _525 = _492 * 13u;
        _529 = cbInstanceData._m0[(_525 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _533 = (cbMtdParam._m0[0u].x * _487) * _529.x;
        float _534 = (cbMtdParam._m0[0u].y * _488) * _529.y;
        float _535 = (cbMtdParam._m0[0u].z * _489) * _529.z;
        float _805 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
        _536 = isnan(1.0) ? _805 : (isnan(_805) ? 1.0 : min(_805, 1.0));
        float _816 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
        _537 = isnan(1.0) ? _816 : (isnan(_816) ? 1.0 : min(_816, 1.0));
        float _827 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
        _538 = isnan(1.0) ? _827 : (isnan(_827) ? 1.0 : min(_827, 1.0));
        _539 = _529.x * _427;
        _540 = _529.y * _428;
        _541 = _529.z * _429;
        _545 = cbInstanceData._m0[_525 + 6u].w;
        float _546 = _499 + (-0.5);
        _549 = cbMtdParam._m0[1u];
        _551 = _549.y * _546;
        _552 = _546 * 0.999000012874603271484375;
        _563 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_563)
        {
            if ((cbInstanceData._m0[_525 + 7u].x + _552) < 0.5)
            {
                _609 = true;
                break;
            }
        }
        if ((_529.w < 1.0) && ((_529.w + _552) < 0.5))
        {
            _609 = true;
            break;
        }
        if ((_551 + 1.0) < _549.x)
        {
            _609 = true;
            break;
        }
        _609 = false;
        break;
    }
    if (_609)
    {
        discard_state = true;
    }
    bool _642 = cbMtdParam._m0[1u].z != 0.0;
    float _643 = _642 ? _545 : 0.0;
    SV_Target.x = ((_475 * 0.5) * _485) + 0.500488758087158203125;
    SV_Target.y = ((_478 * 0.5) * _485) + 0.500488758087158203125;
    SV_Target.z = ((_481 * 0.5) * _485) + 0.500488758087158203125;
    SV_Target.w = _643;
    SV_Target_1.x = isnan(1.0) ? _772 : (isnan(_772) ? 1.0 : min(_772, 1.0));
    SV_Target_1.y = isnan(1.0) ? _728 : (isnan(_728) ? 1.0 : min(_728, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _642 ? _545 : TEXCOORD.z;
    SV_Target_2.x = _536;
    SV_Target_2.y = _537;
    SV_Target_2.z = _538;
    SV_Target_2.w = _642 ? _545 : (float(floatBitsToUint(cbInstanceData._m0[_525 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _643;
    SV_Target_4.x = _539 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _540 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _541 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _643;
    discard_exit();
}


