#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _338;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _166 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _167 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _172 = inversesqrt(dot(vec3(_165, _166, _167), vec3(_165, _166, _167)));
    float _173 = _172 * _165;
    float _174 = _172 * _166;
    float _175 = _172 * _167;
    float _179 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _183 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _184 = _183 * TANGENT.x;
    float _185 = _183 * TANGENT.y;
    float _186 = _183 * TANGENT.z;
    float _231 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _241 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _231);
    float _242 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _231);
    float _243 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _231);
    float _268 = inversesqrt(dot(vec3(_173, _174, _175), vec3(_173, _174, _175)));
    float _275 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _284 = cbMtdParam._m0[23u].x + _241;
    float _285 = cbMtdParam._m0[23u].y + _242;
    float _286 = cbMtdParam._m0[23u].z + _243;
    float _303 = (-0.0) - dot(vec3(_284, _285, _286), vec3(_268 * _173, _268 * _174, _268 * _175));
    float _304 = (-0.0) - dot(vec3(_284, _285, _286), vec3(_275 * _184, _275 * _185, _275 * _186));
    float _305 = (-0.0) - dot(vec3(_284, _285, _286), vec3((-0.0) - (NORMAL.x * _179), (-0.0) - (NORMAL.y * _179), (-0.0) - (NORMAL.z * _179)));
    float _309 = inversesqrt(dot(vec3(_303, _304, _305), vec3(_303, _304, _305)));
    float _310 = _309 * _305;
    float _312 = (cbMtdParam._m0[19u].w * _303) * _309;
    float _314 = (cbMtdParam._m0[20u].x * _304) * _309;
    float _317 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _318 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _336;
    float _339;
    float _341;
    if (_312 > 0.0)
    {
        float _322 = (1.0 - _317) / _312;
        _336 = _322;
        _339 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_322 * _310)) * 0.16666667163372039794921875;
        _341 = (fract((_322 * _314) + _318) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_312 < 0.0)
        {
            float _337 = ((-0.0) - _317) / _312;
            frontier_phi_3_2_ladder = (fract((_337 * _314) + _318) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _337;
            frontier_phi_3_2_ladder_2 = (fract(_337 * _310) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _338;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _336 = frontier_phi_3_2_ladder_1;
        _339 = frontier_phi_3_2_ladder_2;
        _341 = frontier_phi_3_2_ladder;
    }
    float _367;
    float _369;
    float _371;
    if (_314 > 0.0)
    {
        float _354 = (1.0 - _318) / _314;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_354 < _336)
        {
            frontier_phi_8_5_ladder = (fract((_354 * _312) + _317) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _354;
            frontier_phi_8_5_ladder_2 = (fract(_354 * _310) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _339;
            frontier_phi_8_5_ladder_1 = _336;
            frontier_phi_8_5_ladder_2 = _341;
        }
        _367 = frontier_phi_8_5_ladder_1;
        _369 = frontier_phi_8_5_ladder;
        _371 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_314 < 0.0)
        {
            float _368 = ((-0.0) - _318) / _314;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_368 < _336)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_368 * _312) + _317) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _368;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_368 * _310) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _339;
                frontier_phi_8_6_ladder_9_ladder_1 = _336;
                frontier_phi_8_6_ladder_9_ladder_2 = _341;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _339;
            frontier_phi_8_6_ladder_1 = _336;
            frontier_phi_8_6_ladder_2 = _341;
        }
        _367 = frontier_phi_8_6_ladder_1;
        _369 = frontier_phi_8_6_ladder;
        _371 = frontier_phi_8_6_ladder_2;
    }
    float _375 = (_310 > 0.0) ? (cbMtdParam._m0[16u].w / _310) : 5000.0;
    float _388;
    float _389;
    if (_375 < _367)
    {
        _388 = ((_317 + cbMtdParam._m0[17u].x) + (_375 * _312)) * 0.16666667163372039794921875;
        _389 = (((_375 * _314) + _318) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _388 = _369;
        _389 = _371;
    }
    vec4 _392 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_388, _389));
    float _398 = _392.x * cbMtdParam._m0[13u].x;
    float _399 = _392.y * cbMtdParam._m0[13u].y;
    float _400 = _392.z * cbMtdParam._m0[13u].z;
    float _2679 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _2690 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _2701 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _419 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _423 = inversesqrt(dot(vec3(_241, _242, _243), vec3(_241, _242, _243)));
    float _424 = _241 * _423;
    float _425 = _242 * _423;
    float _426 = _243 * _423;
    float _432 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _433 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _446 = uint(roundEven(NORMAL.w)) * 13u;
    uint _448 = (_446 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _454 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2679 : (isnan(_2679) ? 1.0 : min(_2679, 1.0)))) * cbInstanceData._m0[_448].x;
    float _455 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2690 : (isnan(_2690) ? 1.0 : min(_2690, 1.0)))) * cbInstanceData._m0[_448].y;
    float _456 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2701 : (isnan(_2701) ? 1.0 : min(_2701, 1.0)))) * cbInstanceData._m0[_448].z;
    float _2712 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _457 = isnan(1.0) ? _2712 : (isnan(_2712) ? 1.0 : min(_2712, 1.0));
    float _2723 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _458 = isnan(1.0) ? _2723 : (isnan(_2723) ? 1.0 : min(_2723, 1.0));
    float _2734 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _459 = isnan(1.0) ? _2734 : (isnan(_2734) ? 1.0 : min(_2734, 1.0));
    vec4 _468 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _432, cbSceneParam._m0[86u].y * _433));
    float _471 = _468.x * TEXCOORD.z;
    float _472 = (-0.0) - _424;
    float _473 = (-0.0) - _425;
    float _474 = (-0.0) - _426;
    float _496 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _500 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _504 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _779;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _566 = (cbModelParam._m0[37u].x * ((((fma(_504, cbModelParam._m0[26u].z, fma(_500, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _496)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _568 = (cbModelParam._m0[37u].y * ((((fma(_504, cbModelParam._m0[27u].z, fma(_500, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _496)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _569 = (((((fma(_504, cbModelParam._m0[28u].z, fma(_500, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _496)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _572 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_566, _568, _569), 0.0);
        vec4 _579 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_566, _568, _569), 0.0);
        vec4 _586 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_566, _568, _569), 0.0);
        vec4 _593 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_566, _568, _569), 0.0);
        float _606 = exp2((_572.w + (-0.5)) * 20.0) * 2.0;
        float _608 = _606 * (_572.x + (-0.5));
        float _609 = _606 * (_572.y + (-0.5));
        float _610 = _606 * (_572.z + (-0.5));
        float _617 = exp2((_579.w + (-0.5)) * 20.0) * 2.0;
        float _618 = _617 * (_579.x + (-0.5));
        float _619 = _617 * (_579.y + (-0.5));
        float _620 = _617 * (_579.z + (-0.5));
        float _627 = exp2((_586.w + (-0.5)) * 20.0) * 2.0;
        float _628 = _627 * (_586.x + (-0.5));
        float _629 = _627 * (_586.y + (-0.5));
        float _630 = _627 * (_586.z + (-0.5));
        float _637 = exp2((_593.w + (-0.5)) * 20.0) * 2.0;
        float _638 = _637 * (_593.x + (-0.5));
        float _639 = _637 * (_593.y + (-0.5));
        float _640 = _637 * (_593.z + (-0.5));
        float _641 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
        float _642 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
        float _643 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        float _644 = _608 * 0.5;
        float _645 = _618 * 0.5;
        float _646 = _628 * 0.5;
        float _647 = dot(vec3(_644, _645, _646), vec3(_644, _645, _646));
        float _652 = (_647 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_647);
        float _661 = (dot(vec3(0.0), vec3(_652 * _644, _652 * _645, _652 * _646)) + 1.0) * 0.5;
        float _2760 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
        float _671 = sqrt(((_645 * _645) + (_644 * _644)) + (_646 * _646)) / (_641 + 9.9999997473787516355514526367188e-06);
        float _2771 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
        float _672 = isnan(1.0) ? _2771 : (isnan(_2771) ? 1.0 : min(_2771, 1.0));
        float _673 = _672 * 2.0;
        float _677 = (1.0 - _672) / (_672 + 1.0);
        float _2782 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
        float _678 = isnan(1.0) ? _2782 : (isnan(_2782) ? 1.0 : min(_2782, 1.0));
        float _687 = ((((1.0 - _678) * (_673 + 2.0)) * exp2(log2(isnan(1.0) ? _2760 : (isnan(_2760) ? 1.0 : min(_2760, 1.0))) * (_673 + 1.0))) + _678) * _641;
        float _688 = _609 * 0.5;
        float _689 = _619 * 0.5;
        float _690 = _629 * 0.5;
        float _691 = dot(vec3(_688, _689, _690), vec3(_688, _689, _690));
        float _696 = (_691 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_691);
        float _704 = (dot(vec3(0.0), vec3(_696 * _688, _696 * _689, _696 * _690)) + 1.0) * 0.5;
        float _2793 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
        float _713 = sqrt(((_689 * _689) + (_688 * _688)) + (_690 * _690)) / (_642 + 9.9999997473787516355514526367188e-06);
        float _2804 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
        float _714 = isnan(1.0) ? _2804 : (isnan(_2804) ? 1.0 : min(_2804, 1.0));
        float _715 = _714 * 2.0;
        float _719 = (1.0 - _714) / (_714 + 1.0);
        float _2815 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
        float _720 = isnan(1.0) ? _2815 : (isnan(_2815) ? 1.0 : min(_2815, 1.0));
        float _729 = ((((1.0 - _720) * (_715 + 2.0)) * exp2(log2(isnan(1.0) ? _2793 : (isnan(_2793) ? 1.0 : min(_2793, 1.0))) * (_715 + 1.0))) + _720) * _642;
        float _730 = _610 * 0.5;
        float _731 = _620 * 0.5;
        float _732 = _630 * 0.5;
        float _733 = dot(vec3(_730, _731, _732), vec3(_730, _731, _732));
        float _738 = (_733 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_733);
        float _746 = (dot(vec3(0.0), vec3(_738 * _730, _738 * _731, _738 * _732)) + 1.0) * 0.5;
        float _2826 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        float _755 = sqrt(((_731 * _731) + (_730 * _730)) + (_732 * _732)) / (_643 + 9.9999997473787516355514526367188e-06);
        float _2837 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
        float _756 = isnan(1.0) ? _2837 : (isnan(_2837) ? 1.0 : min(_2837, 1.0));
        float _757 = _756 * 2.0;
        float _761 = (1.0 - _756) / (_756 + 1.0);
        float _2848 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        float _762 = isnan(1.0) ? _2848 : (isnan(_2848) ? 1.0 : min(_2848, 1.0));
        float _771 = ((((1.0 - _762) * (_757 + 2.0)) * exp2(log2(isnan(1.0) ? _2826 : (isnan(_2826) ? 1.0 : min(_2826, 1.0))) * (_757 + 1.0))) + _762) * _643;
        _779 = _610;
        _780 = _609;
        _781 = _608;
        _782 = _620;
        _783 = _619;
        _784 = _618;
        _785 = _630;
        _786 = _629;
        _787 = _628;
        _788 = _643;
        _789 = _642;
        _790 = _641;
        _791 = cbModelParam._m0[36u].z * (isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0)));
        _792 = cbModelParam._m0[36u].z * (isnan(0.0) ? _729 : (isnan(_729) ? 0.0 : max(_729, 0.0)));
        _793 = cbModelParam._m0[36u].z * (isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0)));
    }
    else
    {
        _779 = _338;
        _780 = _338;
        _781 = _338;
        _782 = _338;
        _783 = _338;
        _784 = _338;
        _785 = _338;
        _786 = _338;
        _787 = _338;
        _788 = _338;
        _789 = _338;
        _790 = _338;
        _791 = 0.0;
        _792 = 0.0;
        _793 = 0.0;
    }
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1058;
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _847 = (cbModelParam._m0[38u].x * ((((fma(_504, cbModelParam._m0[30u].z, fma(_500, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _496)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _848 = (cbModelParam._m0[38u].y * ((((fma(_504, cbModelParam._m0[31u].z, fma(_500, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _496)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _849 = (((((fma(_504, cbModelParam._m0[32u].z, fma(_500, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _496)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _851 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_847, _848, _849), 0.0);
        vec4 _858 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_847, _848, _849), 0.0);
        vec4 _865 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_847, _848, _849), 0.0);
        vec4 _872 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_847, _848, _849), 0.0);
        float _884 = exp2((_851.w + (-0.5)) * 20.0) * 2.0;
        float _885 = _884 * (_851.x + (-0.5));
        float _886 = _884 * (_851.y + (-0.5));
        float _887 = _884 * (_851.z + (-0.5));
        float _894 = exp2((_858.w + (-0.5)) * 20.0) * 2.0;
        float _895 = _894 * (_858.x + (-0.5));
        float _896 = _894 * (_858.y + (-0.5));
        float _897 = _894 * (_858.z + (-0.5));
        float _904 = exp2((_865.w + (-0.5)) * 20.0) * 2.0;
        float _905 = _904 * (_865.x + (-0.5));
        float _906 = _904 * (_865.y + (-0.5));
        float _907 = _904 * (_865.z + (-0.5));
        float _914 = exp2((_872.w + (-0.5)) * 20.0) * 2.0;
        float _915 = _914 * (_872.x + (-0.5));
        float _916 = _914 * (_872.y + (-0.5));
        float _917 = _914 * (_872.z + (-0.5));
        float _918 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
        float _919 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
        float _920 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
        float _921 = _885 * 0.5;
        float _922 = _895 * 0.5;
        float _923 = _905 * 0.5;
        float _924 = dot(vec3(_921, _922, _923), vec3(_921, _922, _923));
        float _929 = (_924 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_924);
        float _937 = (dot(vec3(0.0), vec3(_929 * _921, _929 * _922, _929 * _923)) + 1.0) * 0.5;
        float _2889 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
        float _946 = sqrt(((_922 * _922) + (_921 * _921)) + (_923 * _923)) / (_918 + 9.9999997473787516355514526367188e-06);
        float _2900 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _947 = isnan(1.0) ? _2900 : (isnan(_2900) ? 1.0 : min(_2900, 1.0));
        float _948 = _947 * 2.0;
        float _952 = (1.0 - _947) / (_947 + 1.0);
        float _2911 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _953 = isnan(1.0) ? _2911 : (isnan(_2911) ? 1.0 : min(_2911, 1.0));
        float _962 = ((((1.0 - _953) * (_948 + 2.0)) * exp2(log2(isnan(1.0) ? _2889 : (isnan(_2889) ? 1.0 : min(_2889, 1.0))) * (_948 + 1.0))) + _953) * _918;
        float _963 = _886 * 0.5;
        float _964 = _896 * 0.5;
        float _965 = _906 * 0.5;
        float _966 = dot(vec3(_963, _964, _965), vec3(_963, _964, _965));
        float _971 = (_966 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_966);
        float _979 = (dot(vec3(0.0), vec3(_971 * _963, _971 * _964, _971 * _965)) + 1.0) * 0.5;
        float _2922 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
        float _988 = sqrt(((_964 * _964) + (_963 * _963)) + (_965 * _965)) / (_919 + 9.9999997473787516355514526367188e-06);
        float _2933 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _989 = isnan(1.0) ? _2933 : (isnan(_2933) ? 1.0 : min(_2933, 1.0));
        float _990 = _989 * 2.0;
        float _994 = (1.0 - _989) / (_989 + 1.0);
        float _2944 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _995 = isnan(1.0) ? _2944 : (isnan(_2944) ? 1.0 : min(_2944, 1.0));
        float _1004 = ((((1.0 - _995) * (_990 + 2.0)) * exp2(log2(isnan(1.0) ? _2922 : (isnan(_2922) ? 1.0 : min(_2922, 1.0))) * (_990 + 1.0))) + _995) * _919;
        float _1005 = _887 * 0.5;
        float _1006 = _897 * 0.5;
        float _1007 = _907 * 0.5;
        float _1008 = dot(vec3(_1005, _1006, _1007), vec3(_1005, _1006, _1007));
        float _1013 = (_1008 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1008);
        float _1021 = (dot(vec3(0.0), vec3(_1013 * _1005, _1013 * _1006, _1013 * _1007)) + 1.0) * 0.5;
        float _2955 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1030 = sqrt(((_1006 * _1006) + (_1005 * _1005)) + (_1007 * _1007)) / (_920 + 9.9999997473787516355514526367188e-06);
        float _2966 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _2966 : (isnan(_2966) ? 1.0 : min(_2966, 1.0));
        float _1032 = _1031 * 2.0;
        float _1036 = (1.0 - _1031) / (_1031 + 1.0);
        float _2977 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
        float _1037 = isnan(1.0) ? _2977 : (isnan(_2977) ? 1.0 : min(_2977, 1.0));
        float _1046 = ((((1.0 - _1037) * (_1032 + 2.0)) * exp2(log2(isnan(1.0) ? _2955 : (isnan(_2955) ? 1.0 : min(_2955, 1.0))) * (_1032 + 1.0))) + _1037) * _920;
        _1054 = _887;
        _1055 = _886;
        _1056 = _885;
        _1057 = _897;
        _1058 = _896;
        _1059 = _895;
        _1060 = _907;
        _1061 = _906;
        _1062 = _905;
        _1063 = _920;
        _1064 = _919;
        _1065 = _918;
        _1066 = cbModelParam._m0[36u].w * (isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0)));
        _1067 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0)));
        _1068 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0)));
    }
    else
    {
        _1054 = _338;
        _1055 = _338;
        _1056 = _338;
        _1057 = _338;
        _1058 = _338;
        _1059 = _338;
        _1060 = _338;
        _1061 = _338;
        _1062 = _338;
        _1063 = _338;
        _1064 = _338;
        _1065 = _338;
        _1066 = 0.0;
        _1067 = 0.0;
        _1068 = 0.0;
    }
    float _1078 = (cbModelParam._m0[1u].x * (_1066 - _791)) + _791;
    float _1079 = (cbModelParam._m0[1u].x * (_1067 - _792)) + _792;
    float _1080 = (cbModelParam._m0[1u].x * (_1068 - _793)) + _793;
    float _1101 = fma(_1080, cbSceneParam._m0[89u].z, fma(_1079, cbSceneParam._m0[89u].y, _1078 * cbSceneParam._m0[89u].x));
    float _1104 = fma(_1080, cbSceneParam._m0[90u].z, fma(_1079, cbSceneParam._m0[90u].y, _1078 * cbSceneParam._m0[90u].x));
    float _1107 = fma(_1080, cbSceneParam._m0[91u].z, fma(_1079, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1078));
    float _1122 = _424 * (-0.5);
    float _1123 = _425 * (-0.5);
    float _1124 = _426 * (-0.5);
    float _1125 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_1056, _1059, _1062, _1065));
    float _1128 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_1055, _1058, _1061, _1064));
    float _1131 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_1054, _1057, _1060, _1063));
    float _1165;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1138 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_779, _782, _785, _788));
        float _1142 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_780, _783, _786, _789));
        float _1146 = dot(vec4(_1122, _1123, _1124, 1.0), vec4(_781, _784, _787, _790));
        float _1153 = dot(vec4(cbModelParam._m0[39u]), vec4(_1122, _1123, _1124, 1.0));
        _1165 = dot(vec3(isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0)), isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0)), isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1153) ? 0.0 : (isnan(0.0) ? _1153 : max(0.0, _1153))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1165 = 1.0;
    }
    float _1176;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1167 = dot(vec4(cbModelParam._m0[40u]), vec4(_1122, _1123, _1124, 1.0));
        _1176 = dot(vec3(isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0)), isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0)), isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1167) ? 0.0 : (isnan(0.0) ? _1167 : max(0.0, _1167))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1176 = 1.0;
    }
    float _1180 = (_1176 * cbModelParam._m0[1u].x) + (_1165 * (1.0 - cbModelParam._m0[1u].x));
    float _1190 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1273;
    float _1275;
    float _1277;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1240 = fma(_504, cbModelParam._m0[13u].z, fma(_500, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _496)) + cbModelParam._m0[13u].w;
        float _1244 = fma(_504, cbModelParam._m0[14u].z, fma(_500, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _496)) + cbModelParam._m0[14u].w;
        float _1248 = fma(_504, cbModelParam._m0[15u].z, fma(_500, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _496)) + cbModelParam._m0[15u].w;
        float _1251 = fma(_474, cbModelParam._m0[13u].z, fma(_473, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _472));
        float _1254 = fma(_474, cbModelParam._m0[14u].z, fma(_473, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _472));
        float _1257 = fma(_474, cbModelParam._m0[15u].z, fma(_473, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _472));
        float _1283;
        if (_1251 > 0.0)
        {
            _1283 = abs((1.0 - _1240) / _1251);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1251 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1240 + 1.0) / _1251);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1283 = frontier_phi_26_24_ladder;
        }
        float _1584;
        if (_1254 > 0.0)
        {
            _1584 = abs((1.0 - _1244) / _1254);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1254 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1244 + 1.0) / _1254);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1584 = frontier_phi_35_31_ladder;
        }
        float _1887;
        if (_1257 > 0.0)
        {
            _1887 = abs((1.0 - _1248) / _1257);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1257 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1248 + 1.0) / _1257);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _1887 = frontier_phi_49_42_ladder;
        }
        float _1889 = isnan(_1584) ? _1283 : (isnan(_1283) ? _1584 : min(_1283, _1584));
        float _1890 = isnan(_1887) ? _1889 : (isnan(_1889) ? _1887 : min(_1889, _1887));
        float _1894 = (_1890 * _1251) + _1240;
        float _1895 = (_1890 * _1254) + _1244;
        float _1896 = (_1890 * _1257) + _1248;
        float _1897 = _1890 * 9.9999997473787516355514526367188e-05;
        float _1898 = (-1.0) - _1897;
        float _1900 = _1897 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1896 > _1900) || ((_1896 < _1898) || ((_1895 > _1900) || ((_1895 < _1898) || ((_1894 < _1898) || (_1894 > _1900))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2019 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1896, cbModelParam._m0[9u].z, fma(_1895, cbModelParam._m0[9u].y, _1894 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1896, cbModelParam._m0[10u].z, fma(_1895, cbModelParam._m0[10u].y, _1894 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1896, cbModelParam._m0[11u].z, fma(_1895, cbModelParam._m0[11u].y, _1894 * cbModelParam._m0[11u].x))), _1190);
            frontier_phi_25_49_ladder = _2019.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2019.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2019.x * cbModelParam._m0[1u].y;
        }
        _1273 = frontier_phi_25_49_ladder_2;
        _1275 = frontier_phi_25_49_ladder_1;
        _1277 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1261 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_472, _473, _474), _1190);
        _1273 = _1261.x * cbModelParam._m0[1u].y;
        _1275 = _1261.y * cbModelParam._m0[1u].y;
        _1277 = _1261.z * cbModelParam._m0[1u].y;
    }
    float _1280 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1371;
    float _1373;
    float _1375;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1335 = fma(_504, cbModelParam._m0[21u].z, fma(_500, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _496)) + cbModelParam._m0[21u].w;
        float _1339 = fma(_504, cbModelParam._m0[22u].z, fma(_500, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _496)) + cbModelParam._m0[22u].w;
        float _1343 = fma(_504, cbModelParam._m0[23u].z, fma(_500, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _496)) + cbModelParam._m0[23u].w;
        float _1346 = fma(_474, cbModelParam._m0[21u].z, fma(_473, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _472));
        float _1349 = fma(_474, cbModelParam._m0[22u].z, fma(_473, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _472));
        float _1352 = fma(_474, cbModelParam._m0[23u].z, fma(_473, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _472));
        float _1589;
        if (_1346 > 0.0)
        {
            _1589 = abs((1.0 - _1335) / _1346);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1346 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1335 + 1.0) / _1346);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1589 = frontier_phi_37_33_ladder;
        }
        float _1913;
        if (_1349 > 0.0)
        {
            _1913 = abs((1.0 - _1339) / _1349);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1349 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1339 + 1.0) / _1349);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _1913 = frontier_phi_51_44_ladder;
        }
        float _2079;
        if (_1352 > 0.0)
        {
            _2079 = abs((1.0 - _1343) / _1352);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1352 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1343 + 1.0) / _1352);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2079 = frontier_phi_65_60_ladder;
        }
        float _2081 = isnan(_1913) ? _1589 : (isnan(_1589) ? _1913 : min(_1589, _1913));
        float _2082 = isnan(_2079) ? _2081 : (isnan(_2081) ? _2079 : min(_2081, _2079));
        float _2086 = (_2082 * _1346) + _1335;
        float _2087 = (_2082 * _1349) + _1339;
        float _2088 = (_2082 * _1352) + _1343;
        float _2089 = _2082 * 9.9999997473787516355514526367188e-05;
        float _2090 = (-1.0) - _2089;
        float _2092 = _2089 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2088 > _2092) || ((_2088 < _2090) || ((_2087 > _2092) || ((_2087 < _2090) || ((_2086 < _2090) || (_2086 > _2092))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2271 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2088, cbModelParam._m0[17u].z, fma(_2087, cbModelParam._m0[17u].y, _2086 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2088, cbModelParam._m0[18u].z, fma(_2087, cbModelParam._m0[18u].y, _2086 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2088, cbModelParam._m0[19u].z, fma(_2087, cbModelParam._m0[19u].y, _2086 * cbModelParam._m0[19u].x))), _1280);
            frontier_phi_34_65_ladder = _2271.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2271.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2271.z * cbModelParam._m0[1u].z;
        }
        _1371 = frontier_phi_34_65_ladder_1;
        _1373 = frontier_phi_34_65_ladder;
        _1375 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1355 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_472, _473, _474), _1280);
        _1371 = _1355.x * cbModelParam._m0[1u].z;
        _1373 = _1355.y * cbModelParam._m0[1u].z;
        _1375 = _1355.z * cbModelParam._m0[1u].z;
    }
    float _1387 = _471 * 0.01200000010430812835693359375;
    float _1389 = _1387 * ((cbModelParam._m0[1u].w * (_1371 - _1273)) + _1273);
    float _1390 = _1387 * ((cbModelParam._m0[1u].w * (_1373 - _1275)) + _1275);
    float _1391 = _1387 * ((cbModelParam._m0[1u].w * (_1375 - _1277)) + _1277);
    float _1394 = fma(_1391, cbSceneParam._m0[89u].z, fma(_1390, cbSceneParam._m0[89u].y, _1389 * cbSceneParam._m0[89u].x));
    float _1397 = fma(_1391, cbSceneParam._m0[90u].z, fma(_1390, cbSceneParam._m0[90u].y, _1389 * cbSceneParam._m0[90u].x));
    float _1400 = fma(_1391, cbSceneParam._m0[91u].z, fma(_1390, cbSceneParam._m0[91u].y, _1389 * cbSceneParam._m0[91u].x));
    uvec4 _1411 = floatBitsToUint(cbInstanceData._m0[_446 + 5u]);
    uint _1413 = _1411.x * 14u;
    uint _1414 = _1413 + 13u;
    float _1419 = _471 + (-1.0);
    float _1423 = (cbLight._m0[_1414].x * _1419) + 1.0;
    float _1424 = (cbLight._m0[_1414].y * _1419) + 1.0;
    uint _1425 = _1413 + 5u;
    float _1431 = isnan(1.0) ? _1424 : (isnan(_1424) ? 1.0 : min(_1424, 1.0));
    uint _1435 = _1413 + 4u;
    float _1442 = isnan(1.0) ? _1423 : (isnan(_1423) ? 1.0 : min(_1423, 1.0));
    uint _1446 = _1413 | 1u;
    float _1457 = dot(vec3(cbLight._m0[_1413].xyz), vec3(0.0));
    float _1460 = dot(vec3(cbLight._m0[_1446].xyz), vec3(0.0));
    float _3113 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _3124 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    float _1465 = (isnan(1.0) ? _3113 : (isnan(_3113) ? 1.0 : min(_3113, 1.0))) * 0.3183098733425140380859375;
    float _1467 = (isnan(1.0) ? _3124 : (isnan(_3124) ? 1.0 : min(_3124, 1.0))) * 0.3183098733425140380859375;
    float _1474 = ((cbLight._m0[_1425].x * _1431) * _1467) + ((cbLight._m0[_1435].x * _1442) * _1465);
    float _1475 = ((_1431 * cbLight._m0[_1425].y) * _1467) + ((_1442 * cbLight._m0[_1435].y) * _1465);
    float _1476 = ((_1431 * cbLight._m0[_1425].z) * _1467) + ((_1442 * cbLight._m0[_1435].z) * _1465);
    uint _1477 = _1413 + 8u;
    float _1483 = cbLight._m0[_1413].x + _424;
    float _1484 = cbLight._m0[_1413].y + _425;
    float _1485 = cbLight._m0[_1413].z + _426;
    float _1489 = inversesqrt(dot(vec3(_1483, _1484, _1485), vec3(_1483, _1484, _1485)));
    float _1493 = dot(vec3(0.0), vec3(cbLight._m0[_1413].xyz));
    float _3135 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
    float _1496 = isnan(1.0) ? _3135 : (isnan(_3135) ? 1.0 : min(_3135, 1.0));
    float _1497 = dot(vec3(0.0), vec3(_424, _425, _426));
    float _3146 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
    float _1500 = isnan(1.0) ? _3146 : (isnan(_3146) ? 1.0 : min(_3146, 1.0));
    float _1501 = dot(vec3(cbLight._m0[_1413].xyz), vec3(_1483 * _1489, _1484 * _1489, _1485 * _1489));
    float _3157 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    float _1512 = (exp2(log2(1.0 - (isnan(1.0) ? _3157 : (isnan(_3157) ? 1.0 : min(_3157, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1518 = (0.5 / ((_1496 + 9.9999999392252902907785028219223e-09) + _1500)) * _1496;
    float _3168 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1520 = (isnan(1.0) ? _3168 : (isnan(_3168) ? 1.0 : min(_3168, 1.0))) * 0.31831014156341552734375;
    uint _1531 = _1413 + 9u;
    float _1537 = cbLight._m0[_1446].x + _424;
    float _1538 = cbLight._m0[_1446].y + _425;
    float _1539 = cbLight._m0[_1446].z + _426;
    float _1543 = inversesqrt(dot(vec3(_1537, _1538, _1539), vec3(_1537, _1538, _1539)));
    float _1547 = dot(vec3(0.0), vec3(cbLight._m0[_1446].xyz));
    float _3179 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
    float _1550 = isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0));
    float _1551 = dot(vec3(cbLight._m0[_1446].xyz), vec3(_1537 * _1543, _1538 * _1543, _1539 * _1543));
    float _3190 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    float _1560 = (exp2(log2(1.0 - (isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1564 = (0.5 / ((_1550 + 9.9999999392252902907785028219223e-09) + _1500)) * _1550;
    float _3201 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
    float _1566 = (isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0))) * 0.31831014156341552734375;
    float _1576 = (((_1560 * cbLight._m0[_1531].x) * _1566) * _1431) + (((_1512 * cbLight._m0[_1477].x) * _1520) * _1442);
    float _1577 = (((_1560 * cbLight._m0[_1531].y) * _1566) * _1431) + (((_1512 * cbLight._m0[_1477].y) * _1520) * _1442);
    float _1578 = (((_1560 * cbLight._m0[_1531].z) * _1566) * _1431) + (((_1512 * cbLight._m0[_1477].z) * _1520) * _1442);
    float _1695;
    float _1697;
    float _1699;
    float _1701;
    float _1703;
    float _1705;
    if (_1411.y == 0u)
    {
        float _1634 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1635 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1634;
        float _1636 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1634;
        float _1637 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1634;
        uvec4 _1649 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1650 = _1649.x;
        uint _1661 = uint((float(_1649.y) * floor(float(uint(cbSceneParam._m0[85u].y * _433) / _1650))) + floor(float(uint(cbSceneParam._m0[85u].x * _432) / _1650)));
        float _1671 = (log2(_1637 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1672 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        uint _1675 = uint(isnan(14.0) ? _1672 : (isnan(_1672) ? 14.0 : min(_1672, 14.0)));
        uvec4 _1681 = texelFetch(g_lightClusterGridBuffer, int(((_1675 << 2u) + (_1661 << 6u)) >> 2u));
        uint _1682 = _1681.x;
        uint _1683 = _1649.z;
        float _1773;
        float _1775;
        float _1777;
        float _1779;
        float _1781;
        float _1783;
        if (((((1u << ((_1683 >> 4u) & 15u)) + 4294967295u) & _1682) == 0u) || ((_1683 & 240u) == 0u))
        {
            _1773 = 0.0;
            _1775 = 0.0;
            _1777 = 0.0;
            _1779 = 0.0;
            _1781 = 0.0;
            _1783 = 0.0;
        }
        else
        {
            float _1774;
            float _1776;
            float _1778;
            float _1780;
            float _1782;
            float _1784;
            float _1947 = 0.0;
            float _1948 = 0.0;
            float _1949 = 0.0;
            float _1950 = 0.0;
            float _1951 = 0.0;
            float _1952 = 0.0;
            uint _1953 = 0u;
            uint _1962;
            bool _1963;
            for (;;)
            {
                _1962 = texelFetch(g_lightClassification, int((((_1675 << 5u) + (_1661 << 9u)) + (_1953 << 2u)) >> 2u)).x;
                _1963 = _1962 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_1963)
                {
                    frontier_phi_62_pred = _1948;
                    frontier_phi_62_pred_1 = _1947;
                    frontier_phi_62_pred_2 = _1949;
                    frontier_phi_62_pred_3 = _1952;
                    frontier_phi_62_pred_4 = _1951;
                    frontier_phi_62_pred_5 = _1950;
                }
                else
                {
                    float _2122;
                    float _2123;
                    float _2124;
                    float _2125;
                    float _2126;
                    float _2127;
                    uint _2128;
                    _2122 = _1947;
                    _2123 = _1948;
                    _2124 = _1949;
                    _2125 = _1950;
                    _2126 = _1951;
                    _2127 = _1952;
                    _2128 = _1962;
                    float _2028;
                    float _2029;
                    float _2030;
                    float _2031;
                    float _2032;
                    float _2033;
                    for (;;)
                    {
                        uint _2132 = uint(findLSB(_2128)) + (_1953 << 5u);
                        uint _2129 = (_2128 + 4294967295u) & _2128;
                        uint _2134 = _2132 * 48u;
                        vec4 _2148 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2134)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2134 + 3u)).x));
                        uint _2154 = (_2132 * 48u) + 4u;
                        vec4 _2167 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2154)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2154 + 3u)).x));
                        uint _2173 = (_2132 * 48u) + 8u;
                        vec3 _2184 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2173)).x, texelFetch(g_PointLightRenderingBuffer, int(_2173 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2173 + 2u)).x));
                        float _2188 = _2148.x - _1635;
                        float _2189 = _2148.y - _1636;
                        float _2190 = _2148.z - _1637;
                        float _2191 = dot(vec3(_2188, _2189, _2190), vec3(_2188, _2189, _2190));
                        float _2194 = inversesqrt(_2191);
                        float _2203 = 1.0 - (_2191 * _2148.w);
                        float _3222 = isnan(0.0) ? _2203 : (isnan(_2203) ? 0.0 : max(_2203, 0.0));
                        float _2204 = isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0));
                        float _2205 = sqrt(_2191) * _2167.w;
                        float _2208 = 1.39999997615814208984375 / (_2205 + 1.39999997615814208984375);
                        float _2209 = _2208 * _2208;
                        float _2212 = ((1.0 - _2209) * dot(vec3(0.0), vec3(_2194 * _2188, _2194 * _2189, _2194 * _2190))) + _2209;
                        float _2215 = _2205 * _2205;
                        float _2219 = ((isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0))) * _2204) / ((_2215 * 0.699999988079071044921875) + 1.0);
                        float _2223 = (-0.0) - _1635;
                        float _2224 = (-0.0) - _1636;
                        float _2225 = (-0.0) - _1637;
                        float _2229 = inversesqrt(dot(vec3(_2223, _2224, _2225), vec3(_2223, _2224, _2225)));
                        float _2233 = dot(vec3(0.0), vec3(_2229 * _2223, _2229 * _2224, _2229 * _2225));
                        float _3238 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
                        float _3249 = isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0));
                        float _2237 = isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0));
                        float _2241 = (0.5 / (((isnan(1.0) ? _3238 : (isnan(_3238) ? 1.0 : min(_3238, 1.0))) + 9.9999999392252902907785028219223e-09) + _2237)) * _2237;
                        float _3260 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
                        float _2250 = (((isnan(1.0) ? _3260 : (isnan(_3260) ? 1.0 : min(_3260, 1.0))) * 3.1415927410125732421875) / ((_2215 * 2.1991131305694580078125) + 3.141590118408203125)) * _2204;
                        _2031 = (_2219 * _2167.x) + _2125;
                        _2032 = (_2219 * _2167.y) + _2126;
                        _2033 = (_2219 * _2167.z) + _2127;
                        _2028 = (_2250 * _2184.x) + _2122;
                        _2029 = (_2250 * _2184.y) + _2123;
                        _2030 = (_2250 * _2184.z) + _2124;
                        if (_2129 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2122 = _2028;
                            _2123 = _2029;
                            _2124 = _2030;
                            _2125 = _2031;
                            _2126 = _2032;
                            _2127 = _2033;
                            _2128 = _2129;
                        }
                    }
                    frontier_phi_62_pred = _2029;
                    frontier_phi_62_pred_1 = _2028;
                    frontier_phi_62_pred_2 = _2030;
                    frontier_phi_62_pred_3 = _2033;
                    frontier_phi_62_pred_4 = _2032;
                    frontier_phi_62_pred_5 = _2031;
                }
                _1776 = frontier_phi_62_pred;
                _1774 = frontier_phi_62_pred_1;
                _1778 = frontier_phi_62_pred_2;
                _1784 = frontier_phi_62_pred_3;
                _1782 = frontier_phi_62_pred_4;
                _1780 = frontier_phi_62_pred_5;
                uint _1954 = _1953 + 1u;
                if (_1954 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1947 = _1774;
                    _1948 = _1776;
                    _1949 = _1778;
                    _1950 = _1780;
                    _1951 = _1782;
                    _1952 = _1784;
                    _1953 = _1954;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1773 = _1774;
            _1775 = _1776;
            _1777 = _1778;
            _1779 = _1780;
            _1781 = _1782;
            _1783 = _1784;
        }
        uvec4 _1787 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1788 = _1787.z;
        uint _1790 = (_1788 >> 8u) & 15u;
        float _1918;
        float _1920;
        float _1922;
        float _1924;
        float _1926;
        float _1928;
        if (((4294967295u << _1790) & _1682) == 0u)
        {
            _1918 = _1773;
            _1920 = _1775;
            _1922 = _1777;
            _1924 = _1779;
            _1926 = _1781;
            _1928 = _1783;
        }
        else
        {
            float _1943 = inversesqrt(dot(vec3(_1635, _1636, _1637), vec3(_1635, _1636, _1637)));
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_1790 < ((_1788 >> 12u) & 15u))
            {
                float _1919;
                float _1921;
                float _1923;
                float _1925;
                float _1927;
                float _1929;
                float _2105 = _1773;
                float _2106 = _1775;
                float _2107 = _1777;
                float _2108 = _1779;
                float _2109 = _1781;
                float _2110 = _1783;
                uint _2111 = _1790;
                uint _2120;
                bool _2121;
                for (;;)
                {
                    _2120 = texelFetch(g_lightClassification, int((((_1675 << 5u) + (_1661 << 9u)) + (_2111 << 2u)) >> 2u)).x;
                    _2121 = _2120 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2121)
                    {
                        frontier_phi_71_pred = _2106;
                        frontier_phi_71_pred_1 = _2105;
                        frontier_phi_71_pred_2 = _2110;
                        frontier_phi_71_pred_3 = _2109;
                        frontier_phi_71_pred_4 = _2108;
                        frontier_phi_71_pred_5 = _2107;
                    }
                    else
                    {
                        float _2276;
                        float _2277;
                        float _2278;
                        float _2279;
                        float _2280;
                        float _2281;
                        float _2525;
                        float _2526;
                        float _2527;
                        float _2528;
                        float _2529;
                        float _2530;
                        float _2289 = _2105;
                        float _2290 = _2106;
                        float _2291 = _2107;
                        float _2292 = _2108;
                        float _2293 = _2109;
                        float _2294 = _2110;
                        uint _2295 = _2120;
                        uint _2296;
                        vec4 _2321;
                        float _2322;
                        vec4 _2337;
                        vec3 _2349;
                        vec4 _2364;
                        vec4 _2379;
                        float _2425;
                        bool _2426;
                        for (;;)
                        {
                            uint _2306 = ((_2111 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2295));
                            _2296 = (_2295 + 4294967295u) & _2295;
                            uint _2308 = _2306 * 40u;
                            _2321 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2308)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2308 + 3u)).x));
                            _2322 = _2321.w;
                            uint _2324 = (_2306 * 40u) + 4u;
                            _2337 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2324)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2324 + 3u)).x));
                            uint _2339 = (_2306 * 40u) + 8u;
                            _2349 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2339)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2339 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2339 + 2u)).x));
                            uint _2351 = (_2306 * 40u) + 16u;
                            _2364 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2351)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2351 + 3u)).x));
                            uint _2366 = (_2306 * 40u) + 20u;
                            _2379 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 3u)).x));
                            uint _2381 = (_2306 * 40u) + 24u;
                            vec4 _2394 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2381)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2381 + 3u)).x));
                            uint _2400 = (_2306 * 40u) + 28u;
                            vec4 _2413 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2400)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2400 + 3u)).x));
                            _2425 = fma(_1637, _2413.z, fma(_1636, _2413.y, _2413.x * _1635)) + _2413.w;
                            _2426 = !((fma(_1637, _2394.z, fma(_1636, _2394.y, _2394.x * _1635)) + _2394.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_2426)
                            {
                                float _2453 = _2321.x - _1635;
                                float _2454 = _2321.y - _1636;
                                float _2455 = _2321.z - _1637;
                                float _2456 = dot(vec3(_2453, _2454, _2455), vec3(_2453, _2454, _2455));
                                float _2459 = inversesqrt(_2456);
                                float _2460 = _2459 * _2453;
                                float _2461 = _2459 * _2454;
                                float _2462 = _2459 * _2455;
                                float _2466 = 1.0 - (_2456 / (_2322 * _2322));
                                float _3271 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
                                float _2467 = isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0));
                                float _2471 = sqrt(_2456) * _2337.w;
                                float _2473 = 1.39999997615814208984375 / (_2471 + 1.39999997615814208984375);
                                float _2474 = _2473 * _2473;
                                float _2475 = 1.0 - _2474;
                                float _2477 = (_2475 * dot(vec3(_2460, _2461, _2462), vec3(0.0))) + _2474;
                                float _2480 = _2471 * _2471;
                                float _2484 = (fma(_1637, _2364.z, fma(_1636, _2364.y, _2364.x * _1635)) + _2364.w) / _2425;
                                float _2485 = (fma(_1637, _2379.z, fma(_1636, _2379.y, _2379.x * _1635)) + _2379.w) / _2425;
                                float _2489 = 1.0 - dot(vec2(_2484, _2485), vec2(_2484, _2485));
                                float _3287 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
                                float _2490 = isnan(1.0) ? _3287 : (isnan(_3287) ? 1.0 : min(_3287, 1.0));
                                float _2491 = _2490 * (((isnan(0.0) ? _2477 : (isnan(_2477) ? 0.0 : max(_2477, 0.0))) * _2467) / ((_2480 * 0.699999988079071044921875) + 1.0));
                                float _2501 = dot(vec3(0.0), vec3((-0.0) - (_1635 * _1943), (-0.0) - (_1636 * _1943), (-0.0) - (_1637 * _1943)));
                                float _3298 = isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0));
                                float _2509 = (_2475 * dot(vec3(0.0), vec3(_2460, _2461, _2462))) + _2474;
                                float _3309 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
                                float _2510 = isnan(1.0) ? _3309 : (isnan(_3309) ? 1.0 : min(_3309, 1.0));
                                float _2514 = (0.5 / (((isnan(1.0) ? _3298 : (isnan(_3298) ? 1.0 : min(_3298, 1.0))) + 9.9999999392252902907785028219223e-09) + _2510)) * _2510;
                                float _3320 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
                                float _2521 = (_2490 * _2467) * (((isnan(1.0) ? _3320 : (isnan(_3320) ? 1.0 : min(_3320, 1.0))) * 3.1415927410125732421875) / ((_2480 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_77_pred = _2521 * _2349.y;
                                frontier_phi_77_pred_1 = _2521 * _2349.x;
                                frontier_phi_77_pred_2 = _2491 * _2337.z;
                                frontier_phi_77_pred_3 = _2491 * _2337.y;
                                frontier_phi_77_pred_4 = _2491 * _2337.x;
                                frontier_phi_77_pred_5 = _2521 * _2349.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _2526 = frontier_phi_77_pred;
                            _2525 = frontier_phi_77_pred_1;
                            _2530 = frontier_phi_77_pred_2;
                            _2529 = frontier_phi_77_pred_3;
                            _2528 = frontier_phi_77_pred_4;
                            _2527 = frontier_phi_77_pred_5;
                            _2279 = _2528 + _2292;
                            _2280 = _2529 + _2293;
                            _2281 = _2530 + _2294;
                            _2276 = _2525 + _2289;
                            _2277 = _2526 + _2290;
                            _2278 = _2527 + _2291;
                            if (_2296 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2289 = _2276;
                                _2290 = _2277;
                                _2291 = _2278;
                                _2292 = _2279;
                                _2293 = _2280;
                                _2294 = _2281;
                                _2295 = _2296;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2277;
                        frontier_phi_71_pred_1 = _2276;
                        frontier_phi_71_pred_2 = _2281;
                        frontier_phi_71_pred_3 = _2280;
                        frontier_phi_71_pred_4 = _2279;
                        frontier_phi_71_pred_5 = _2278;
                    }
                    _1921 = frontier_phi_71_pred;
                    _1919 = frontier_phi_71_pred_1;
                    _1929 = frontier_phi_71_pred_2;
                    _1927 = frontier_phi_71_pred_3;
                    _1925 = frontier_phi_71_pred_4;
                    _1923 = frontier_phi_71_pred_5;
                    uint _2112 = _2111 + 1u;
                    if (_2112 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2105 = _1919;
                        _2106 = _1921;
                        _2107 = _1923;
                        _2108 = _1925;
                        _2109 = _1927;
                        _2110 = _1929;
                        _2111 = _2112;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _1929;
                frontier_phi_53_54_ladder_1 = _1925;
                frontier_phi_53_54_ladder_2 = _1923;
                frontier_phi_53_54_ladder_3 = _1921;
                frontier_phi_53_54_ladder_4 = _1919;
                frontier_phi_53_54_ladder_5 = _1927;
            }
            else
            {
                frontier_phi_53_54_ladder = _1783;
                frontier_phi_53_54_ladder_1 = _1779;
                frontier_phi_53_54_ladder_2 = _1777;
                frontier_phi_53_54_ladder_3 = _1775;
                frontier_phi_53_54_ladder_4 = _1773;
                frontier_phi_53_54_ladder_5 = _1781;
            }
            _1918 = frontier_phi_53_54_ladder_4;
            _1920 = frontier_phi_53_54_ladder_3;
            _1922 = frontier_phi_53_54_ladder_2;
            _1924 = frontier_phi_53_54_ladder_1;
            _1926 = frontier_phi_53_54_ladder_5;
            _1928 = frontier_phi_53_54_ladder;
        }
        float _1933 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
        _1695 = (_1933 * _1924) + _1474;
        _1697 = (_1933 * _1926) + _1475;
        _1699 = (_1933 * _1928) + _1476;
        _1701 = ((_1918 * 0.039999999105930328369140625) * _1933) + _1576;
        _1703 = ((_1920 * 0.039999999105930328369140625) * _1933) + _1577;
        _1705 = ((_1922 * 0.039999999105930328369140625) * _1933) + _1578;
    }
    else
    {
        _1695 = _1474;
        _1697 = _1475;
        _1699 = _1476;
        _1701 = _1576;
        _1703 = _1577;
        _1705 = _1578;
    }
    float _3336 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
    float _3347 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _3358 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _1722 = ((isnan(1.0) ? _3336 : (isnan(_3336) ? 1.0 : min(_3336, 1.0))) * (_1695 + ((isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0))) * _471))) + ((_1701 + ((isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0))) * _1180)) * cbPerFrame._m0[3u].x);
    float _1723 = ((isnan(1.0) ? _3347 : (isnan(_3347) ? 1.0 : min(_3347, 1.0))) * (_1697 + ((isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0))) * _471))) + ((_1703 + ((isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0))) * _1180)) * cbPerFrame._m0[3u].x);
    float _1724 = ((isnan(1.0) ? _3358 : (isnan(_3358) ? 1.0 : min(_3358, 1.0))) * (_1699 + ((isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0))) * _471))) + ((_1705 + ((isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0))) * _1180)) * cbPerFrame._m0[3u].x);
    uint _1728 = _446 + 6u;
    float _1736 = _432 / cbSceneParam._m0[86u].x;
    float _1737 = _433 / cbSceneParam._m0[86u].y;
    vec4 _1751 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1736, _1737, (log2((isnan(cbSceneParam._m0[77u].w) ? _419 : (isnan(_419) ? cbSceneParam._m0[77u].w : min(_419, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1753 = _1751.x;
    float _1754 = _1751.y;
    float _1755 = _1751.z;
    float _1756 = _1751.w;
    float _1836;
    float _1838;
    float _1840;
    float _1842;
    if (_419 > cbSceneParam._m0[78u].w)
    {
        float _1798 = isnan(_419) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _419 : min(cbSceneParam._m0[80u].w, _419));
        float _1799 = _1798 / _419;
        float _1810 = _1799 * _241;
        float _1811 = _242 * _1799;
        float _1812 = (-0.0) - _1811;
        float _1813 = _1799 * _243;
        float _1815 = (cbSceneParam._m0[77u].w * _1812) / _1798;
        float _1816 = _1815 + cbSceneParam._m0[79u].w;
        float _1817 = cbSceneParam._m0[79u].w - _1811;
        float _1823 = sqrt(((_1810 * _1810) + (_1811 * _1811)) + (_1813 * _1813));
        float _1826 = (1.0 - (cbSceneParam._m0[77u].w / _1798)) * _1823;
        float _1832 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1834 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2041;
        if (abs((_1812 - _1815) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2041 = ((((_1816 > 0.0) ? exp2(_1832 * _1816) : (2.0 - exp2(_1834 * _1816))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1826;
        }
        else
        {
            float _1976 = 1.0 / cbSceneParam._m0[80u].x;
            float _1977 = isnan(_1817) ? _1816 : (isnan(_1816) ? _1817 : max(_1816, _1817));
            float _1978 = isnan(_1817) ? _1816 : (isnan(_1816) ? _1817 : min(_1816, _1817));
            float _1987 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : min(_1977, 0.0));
            float _1988 = isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : min(_1978, 0.0));
            _2041 = ((abs(_1823 / _1812) * cbSceneParam._m0[80u].y) * ((((_1987 - _1988) * 2.0) - ((exp2(_1832 * (isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0)))) - exp2(_1832 * (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0))))) * _1976)) - ((exp2(_1834 * _1987) - exp2(_1834 * _1988)) * _1976))) + (_1826 * cbSceneParam._m0[80u].z);
        }
        vec4 _2043 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1736, _1737, 1.0), 0.0);
        float _2052 = exp2((_2041 * (-1.44269502162933349609375)) * (1.0 - _2043.w));
        float _2053 = log2(_2052);
        float _2069 = log2(_1756);
        _1836 = (exp2(_2069 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].x)) * _2043.x) / cbSceneParam._m0[78u].x)) + _1753;
        _1838 = (exp2(_2069 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].y)) * _2043.y) / cbSceneParam._m0[78u].y)) + _1754;
        _1840 = (exp2(_2069 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2053 * cbSceneParam._m0[78u].z)) * _2043.z) / cbSceneParam._m0[78u].z)) + _1755;
        _1842 = _2052 * _1756;
    }
    else
    {
        _1836 = _1753;
        _1838 = _1754;
        _1840 = _1755;
        _1842 = _1756;
    }
    float _1854 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1855 = _1854 == 3.0;
    float _1857 = log2(_1842);
    float _1864 = exp2(_1857 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
    float _1865 = exp2(_1857 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0)));
    float _1866 = exp2(_1857 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)));
    float _1875 = (_1854 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1875 * (_1855 ? _1864 : (_1864 + (cbSceneParam._m0[72u].w * _1836)));
    SV_Target.y = _1875 * (_1855 ? _1865 : (_1865 + (cbSceneParam._m0[72u].w * _1838)));
    SV_Target.z = _1875 * (_1855 ? _1866 : (_1866 + (cbSceneParam._m0[72u].w * _1840)));
    SV_Target.w = cbInstanceData._m0[_1728].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1728].w;
}


