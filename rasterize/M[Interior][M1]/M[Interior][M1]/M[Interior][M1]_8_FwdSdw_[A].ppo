#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _346;
uint _2140;
uint _2141;
uint _2142;
uint _2364;
uint _2365;
uint _2366;
float _2614;
float _2615;
float _2616;
float _2617;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _173 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _174 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _175 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _180 = inversesqrt(dot(vec3(_173, _174, _175), vec3(_173, _174, _175)));
    float _181 = _180 * _173;
    float _182 = _180 * _174;
    float _183 = _180 * _175;
    float _187 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _191 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _192 = _191 * TANGENT.x;
    float _193 = _191 * TANGENT.y;
    float _194 = _191 * TANGENT.z;
    float _239 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _249 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _239);
    float _250 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _239);
    float _251 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _239);
    float _276 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _283 = inversesqrt(dot(vec3(_192, _193, _194), vec3(_192, _193, _194)));
    float _292 = cbMtdParam._m0[23u].x + _249;
    float _293 = cbMtdParam._m0[23u].y + _250;
    float _294 = cbMtdParam._m0[23u].z + _251;
    float _311 = (-0.0) - dot(vec3(_292, _293, _294), vec3(_276 * _181, _276 * _182, _276 * _183));
    float _312 = (-0.0) - dot(vec3(_292, _293, _294), vec3(_283 * _192, _283 * _193, _283 * _194));
    float _313 = (-0.0) - dot(vec3(_292, _293, _294), vec3((-0.0) - (NORMAL.x * _187), (-0.0) - (NORMAL.y * _187), (-0.0) - (NORMAL.z * _187)));
    float _317 = inversesqrt(dot(vec3(_311, _312, _313), vec3(_311, _312, _313)));
    float _318 = _317 * _313;
    float _320 = (cbMtdParam._m0[19u].w * _311) * _317;
    float _322 = (cbMtdParam._m0[20u].x * _312) * _317;
    float _325 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _326 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _344;
    float _347;
    float _349;
    if (_320 > 0.0)
    {
        float _330 = (1.0 - _325) / _320;
        _344 = _330;
        _347 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_330 * _318)) * 0.16666667163372039794921875;
        _349 = (fract((_330 * _322) + _326) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_320 < 0.0)
        {
            float _345 = ((-0.0) - _325) / _320;
            frontier_phi_3_2_ladder = _345;
            frontier_phi_3_2_ladder_1 = (fract((_345 * _322) + _326) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_2 = (fract(_345 * _318) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = _346;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _344 = frontier_phi_3_2_ladder;
        _347 = frontier_phi_3_2_ladder_2;
        _349 = frontier_phi_3_2_ladder_1;
    }
    float _375;
    float _377;
    float _379;
    if (_322 > 0.0)
    {
        float _362 = (1.0 - _326) / _322;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_362 < _344)
        {
            frontier_phi_8_5_ladder = (fract(_362 * _318) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_1 = (fract((_362 * _320) + _325) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = _362;
        }
        else
        {
            frontier_phi_8_5_ladder = _349;
            frontier_phi_8_5_ladder_1 = _347;
            frontier_phi_8_5_ladder_2 = _344;
        }
        _375 = frontier_phi_8_5_ladder_2;
        _377 = frontier_phi_8_5_ladder_1;
        _379 = frontier_phi_8_5_ladder;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_322 < 0.0)
        {
            float _376 = ((-0.0) - _326) / _322;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_376 < _344)
            {
                frontier_phi_8_6_ladder_9_ladder = fract(_376 * _318) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_376 * _320) + _325) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = _376;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _349;
                frontier_phi_8_6_ladder_9_ladder_1 = _347;
                frontier_phi_8_6_ladder_9_ladder_2 = _344;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _349;
            frontier_phi_8_6_ladder_1 = _347;
            frontier_phi_8_6_ladder_2 = _344;
        }
        _375 = frontier_phi_8_6_ladder_2;
        _377 = frontier_phi_8_6_ladder_1;
        _379 = frontier_phi_8_6_ladder;
    }
    float _383 = (_318 > 0.0) ? (cbMtdParam._m0[16u].w / _318) : 5000.0;
    float _396;
    float _397;
    if (_383 < _375)
    {
        _396 = ((_325 + cbMtdParam._m0[17u].x) + (_383 * _320)) * 0.16666667163372039794921875;
        _397 = (((_383 * _322) + _326) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _396 = _377;
        _397 = _379;
    }
    vec4 _400 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_396, _397));
    float _424 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _428 = inversesqrt(dot(vec3(_249, _250, _251), vec3(_249, _250, _251)));
    float _429 = _249 * _428;
    float _430 = _250 * _428;
    float _431 = _251 * _428;
    vec4 _436 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _438 = _436.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _513 = sqrt(((_249 * _249) + (_250 * _250)) + (_251 * _251));
        float _520 = (cbMatDynParam._m0[5u].x * _513) + cbMatDynParam._m0[5u].y;
        float _2626 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
        float _521 = isnan(1.0) ? _2626 : (isnan(_2626) ? 1.0 : min(_2626, 1.0));
        float _525 = (cbMatDynParam._m0[5u].z * _513) + cbMatDynParam._m0[5u].w;
        float _2637 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2637 : (isnan(_2637) ? 1.0 : min(_2637, 1.0))) - _521)) + _521) < ((_438 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _456 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _457 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _466 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_456 * cbSceneParam._m0[86u].x, _457 * cbSceneParam._m0[86u].y));
    float _469 = _466.x * TEXCOORD.z;
    float _470 = (-0.0) - _429;
    float _471 = (-0.0) - _430;
    float _472 = (-0.0) - _431;
    float _494 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _498 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _502 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _666;
    float _667;
    float _668;
    float _669;
    float _670;
    float _671;
    float _672;
    float _673;
    float _674;
    float _675;
    float _676;
    float _677;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _588 = (cbModelParam._m0[37u].x * ((((fma(_502, cbModelParam._m0[26u].z, fma(_498, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _494)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _590 = (cbModelParam._m0[37u].y * ((((fma(_502, cbModelParam._m0[27u].z, fma(_498, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _494)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _591 = (((((fma(_502, cbModelParam._m0[28u].z, fma(_498, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _494)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _594 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_588, _590, _591), 0.0);
        vec4 _601 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_588, _590, _591), 0.0);
        vec4 _608 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_588, _590, _591), 0.0);
        vec4 _615 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_588, _590, _591), 0.0);
        float _628 = exp2((_594.w + (-0.5)) * 20.0) * 2.0;
        float _639 = exp2((_601.w + (-0.5)) * 20.0) * 2.0;
        float _649 = exp2((_608.w + (-0.5)) * 20.0) * 2.0;
        float _659 = exp2((_615.w + (-0.5)) * 20.0) * 2.0;
        float _660 = _659 * (_615.x + (-0.5));
        float _661 = _659 * (_615.y + (-0.5));
        float _662 = _659 * (_615.z + (-0.5));
        _666 = _628 * (_594.z + (-0.5));
        _667 = _628 * (_594.y + (-0.5));
        _668 = _628 * (_594.x + (-0.5));
        _669 = _639 * (_601.z + (-0.5));
        _670 = _639 * (_601.y + (-0.5));
        _671 = _639 * (_601.x + (-0.5));
        _672 = _649 * (_608.z + (-0.5));
        _673 = _649 * (_608.y + (-0.5));
        _674 = _649 * (_608.x + (-0.5));
        _675 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
        _676 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
        _677 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    }
    else
    {
        _666 = _346;
        _667 = _346;
        _668 = _346;
        _669 = _346;
        _670 = _346;
        _671 = _346;
        _672 = _346;
        _673 = _346;
        _674 = _346;
        _675 = _346;
        _676 = _346;
        _677 = _346;
    }
    float _808;
    float _809;
    float _810;
    float _811;
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _734 = (cbModelParam._m0[38u].x * ((((fma(_502, cbModelParam._m0[30u].z, fma(_498, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _494)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _735 = (cbModelParam._m0[38u].y * ((((fma(_502, cbModelParam._m0[31u].z, fma(_498, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _494)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _736 = (((((fma(_502, cbModelParam._m0[32u].z, fma(_498, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _494)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _738 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_734, _735, _736), 0.0);
        vec4 _745 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_734, _735, _736), 0.0);
        vec4 _752 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_734, _735, _736), 0.0);
        vec4 _759 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_734, _735, _736), 0.0);
        float _771 = exp2((_738.w + (-0.5)) * 20.0) * 2.0;
        float _781 = exp2((_745.w + (-0.5)) * 20.0) * 2.0;
        float _791 = exp2((_752.w + (-0.5)) * 20.0) * 2.0;
        float _801 = exp2((_759.w + (-0.5)) * 20.0) * 2.0;
        float _802 = _801 * (_759.x + (-0.5));
        float _803 = _801 * (_759.y + (-0.5));
        float _804 = _801 * (_759.z + (-0.5));
        _808 = _771 * (_738.z + (-0.5));
        _809 = _771 * (_738.y + (-0.5));
        _810 = _771 * (_738.x + (-0.5));
        _811 = _781 * (_745.z + (-0.5));
        _812 = _781 * (_745.y + (-0.5));
        _813 = _781 * (_745.x + (-0.5));
        _814 = _791 * (_752.z + (-0.5));
        _815 = _791 * (_752.y + (-0.5));
        _816 = _791 * (_752.x + (-0.5));
        _817 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
        _818 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
        _819 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
    }
    else
    {
        _808 = _346;
        _809 = _346;
        _810 = _346;
        _811 = _346;
        _812 = _346;
        _813 = _346;
        _814 = _346;
        _815 = _346;
        _816 = _346;
        _817 = _346;
        _818 = _346;
        _819 = _346;
    }
    float _834 = _429 * (-0.5);
    float _835 = _430 * (-0.5);
    float _836 = _431 * (-0.5);
    float _837 = dot(vec4(_834, _835, _836, 1.0), vec4(_810, _813, _816, _819));
    float _840 = dot(vec4(_834, _835, _836, 1.0), vec4(_809, _812, _815, _818));
    float _843 = dot(vec4(_834, _835, _836, 1.0), vec4(_808, _811, _814, _817));
    float _878;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _850 = dot(vec4(_834, _835, _836, 1.0), vec4(_666, _669, _672, _675));
        float _854 = dot(vec4(_834, _835, _836, 1.0), vec4(_667, _670, _673, _676));
        float _858 = dot(vec4(_834, _835, _836, 1.0), vec4(_668, _671, _674, _677));
        float _865 = dot(vec4(cbModelParam._m0[39u]), vec4(_834, _835, _836, 1.0));
        _878 = dot(vec3(isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0)), isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0)), isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_865) ? 0.0 : (isnan(0.0) ? _865 : max(0.0, _865))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _878 = 1.0;
    }
    float _889;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _880 = dot(vec4(cbModelParam._m0[40u]), vec4(_834, _835, _836, 1.0));
        _889 = dot(vec3(isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0)), isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0)), isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_880) ? 0.0 : (isnan(0.0) ? _880 : max(0.0, _880))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _889 = 1.0;
    }
    float _893 = (_889 * cbModelParam._m0[1u].x) + (_878 * (1.0 - cbModelParam._m0[1u].x));
    float _900 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _983;
    float _985;
    float _987;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _950 = fma(_502, cbModelParam._m0[13u].z, fma(_498, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _494)) + cbModelParam._m0[13u].w;
        float _954 = fma(_502, cbModelParam._m0[14u].z, fma(_498, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _494)) + cbModelParam._m0[14u].w;
        float _958 = fma(_502, cbModelParam._m0[15u].z, fma(_498, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _494)) + cbModelParam._m0[15u].w;
        float _961 = fma(_472, cbModelParam._m0[13u].z, fma(_471, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _470));
        float _964 = fma(_472, cbModelParam._m0[14u].z, fma(_471, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _470));
        float _967 = fma(_472, cbModelParam._m0[15u].z, fma(_471, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _470));
        float _993;
        if (_961 > 0.0)
        {
            _993 = abs((1.0 - _950) / _961);
        }
        else
        {
            float frontier_phi_29_27_ladder;
            if (_961 < 0.0)
            {
                frontier_phi_29_27_ladder = abs((_950 + 1.0) / _961);
            }
            else
            {
                frontier_phi_29_27_ladder = 5000.0;
            }
            _993 = frontier_phi_29_27_ladder;
        }
        float _1184;
        if (_964 > 0.0)
        {
            _1184 = abs((1.0 - _954) / _964);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_964 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_954 + 1.0) / _964);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _1184 = frontier_phi_38_34_ladder;
        }
        float _1539;
        if (_967 > 0.0)
        {
            _1539 = abs((1.0 - _958) / _967);
        }
        else
        {
            float frontier_phi_50_45_ladder;
            if (_967 < 0.0)
            {
                frontier_phi_50_45_ladder = abs((_958 + 1.0) / _967);
            }
            else
            {
                frontier_phi_50_45_ladder = 5000.0;
            }
            _1539 = frontier_phi_50_45_ladder;
        }
        float _1541 = isnan(_1184) ? _993 : (isnan(_993) ? _1184 : min(_993, _1184));
        float _1542 = isnan(_1539) ? _1541 : (isnan(_1541) ? _1539 : min(_1541, _1539));
        float _1546 = (_1542 * _961) + _950;
        float _1547 = (_1542 * _964) + _954;
        float _1548 = (_1542 * _967) + _958;
        float _1549 = _1542 * 9.9999997473787516355514526367188e-05;
        float _1551 = (-1.0) - _1549;
        float _1553 = _1549 + 1.0;
        float frontier_phi_28_50_ladder;
        float frontier_phi_28_50_ladder_1;
        float frontier_phi_28_50_ladder_2;
        if ((_1548 > _1553) || ((_1548 < _1551) || ((_1547 > _1553) || ((_1547 < _1551) || ((_1546 < _1551) || (_1546 > _1553))))))
        {
            frontier_phi_28_50_ladder = 0.0;
            frontier_phi_28_50_ladder_1 = 0.0;
            frontier_phi_28_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1782 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1548, cbModelParam._m0[9u].z, fma(_1547, cbModelParam._m0[9u].y, _1546 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1548, cbModelParam._m0[10u].z, fma(_1547, cbModelParam._m0[10u].y, _1546 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1548, cbModelParam._m0[11u].z, fma(_1547, cbModelParam._m0[11u].y, _1546 * cbModelParam._m0[11u].x))), _900);
            frontier_phi_28_50_ladder = _1782.z * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_1 = _1782.y * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_2 = _1782.x * cbModelParam._m0[1u].y;
        }
        _983 = frontier_phi_28_50_ladder_2;
        _985 = frontier_phi_28_50_ladder_1;
        _987 = frontier_phi_28_50_ladder;
    }
    else
    {
        vec4 _971 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_470, _471, _472), _900);
        _983 = _971.x * cbModelParam._m0[1u].y;
        _985 = _971.y * cbModelParam._m0[1u].y;
        _987 = _971.z * cbModelParam._m0[1u].y;
    }
    float _990 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1081;
    float _1083;
    float _1085;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1045 = fma(_502, cbModelParam._m0[21u].z, fma(_498, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _494)) + cbModelParam._m0[21u].w;
        float _1049 = fma(_502, cbModelParam._m0[22u].z, fma(_498, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _494)) + cbModelParam._m0[22u].w;
        float _1053 = fma(_502, cbModelParam._m0[23u].z, fma(_498, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _494)) + cbModelParam._m0[23u].w;
        float _1056 = fma(_472, cbModelParam._m0[21u].z, fma(_471, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _470));
        float _1059 = fma(_472, cbModelParam._m0[22u].z, fma(_471, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _470));
        float _1062 = fma(_472, cbModelParam._m0[23u].z, fma(_471, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _470));
        float _1189;
        if (_1056 > 0.0)
        {
            _1189 = abs((1.0 - _1045) / _1056);
        }
        else
        {
            float frontier_phi_40_36_ladder;
            if (_1056 < 0.0)
            {
                frontier_phi_40_36_ladder = abs((_1045 + 1.0) / _1056);
            }
            else
            {
                frontier_phi_40_36_ladder = 5000.0;
            }
            _1189 = frontier_phi_40_36_ladder;
        }
        float _1566;
        if (_1059 > 0.0)
        {
            _1566 = abs((1.0 - _1049) / _1059);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1059 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1049 + 1.0) / _1059);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _1566 = frontier_phi_52_47_ladder;
        }
        float _1907;
        if (_1062 > 0.0)
        {
            _1907 = abs((1.0 - _1053) / _1062);
        }
        else
        {
            float frontier_phi_64_59_ladder;
            if (_1062 < 0.0)
            {
                frontier_phi_64_59_ladder = abs((_1053 + 1.0) / _1062);
            }
            else
            {
                frontier_phi_64_59_ladder = 5000.0;
            }
            _1907 = frontier_phi_64_59_ladder;
        }
        float _1909 = isnan(_1566) ? _1189 : (isnan(_1189) ? _1566 : min(_1189, _1566));
        float _1910 = isnan(_1907) ? _1909 : (isnan(_1909) ? _1907 : min(_1909, _1907));
        float _1914 = (_1910 * _1056) + _1045;
        float _1915 = (_1910 * _1059) + _1049;
        float _1916 = (_1910 * _1062) + _1053;
        float _1917 = _1910 * 9.9999997473787516355514526367188e-05;
        float _1918 = (-1.0) - _1917;
        float _1920 = _1917 + 1.0;
        float frontier_phi_37_64_ladder;
        float frontier_phi_37_64_ladder_1;
        float frontier_phi_37_64_ladder_2;
        if ((_1916 > _1920) || ((_1916 < _1918) || ((_1915 > _1920) || ((_1915 < _1918) || ((_1914 < _1918) || (_1914 > _1920))))))
        {
            frontier_phi_37_64_ladder = 0.0;
            frontier_phi_37_64_ladder_1 = 0.0;
            frontier_phi_37_64_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2038 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1916, cbModelParam._m0[17u].z, fma(_1915, cbModelParam._m0[17u].y, _1914 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1916, cbModelParam._m0[18u].z, fma(_1915, cbModelParam._m0[18u].y, _1914 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1916, cbModelParam._m0[19u].z, fma(_1915, cbModelParam._m0[19u].y, _1914 * cbModelParam._m0[19u].x))), _990);
            frontier_phi_37_64_ladder = _2038.z * cbModelParam._m0[1u].z;
            frontier_phi_37_64_ladder_1 = _2038.y * cbModelParam._m0[1u].z;
            frontier_phi_37_64_ladder_2 = _2038.x * cbModelParam._m0[1u].z;
        }
        _1081 = frontier_phi_37_64_ladder_2;
        _1083 = frontier_phi_37_64_ladder_1;
        _1085 = frontier_phi_37_64_ladder;
    }
    else
    {
        vec4 _1065 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_470, _471, _472), _990);
        _1081 = _1065.x * cbModelParam._m0[1u].z;
        _1083 = _1065.y * cbModelParam._m0[1u].z;
        _1085 = _1065.z * cbModelParam._m0[1u].z;
    }
    float _1097 = _469 * 0.01200000010430812835693359375;
    float _1099 = _1097 * ((cbModelParam._m0[1u].w * (_1081 - _983)) + _983);
    float _1100 = _1097 * ((cbModelParam._m0[1u].w * (_1083 - _985)) + _985);
    float _1101 = _1097 * ((cbModelParam._m0[1u].w * (_1085 - _987)) + _987);
    float _1122 = fma(_1101, cbSceneParam._m0[89u].z, fma(_1100, cbSceneParam._m0[89u].y, _1099 * cbSceneParam._m0[89u].x));
    float _1125 = fma(_1101, cbSceneParam._m0[90u].z, fma(_1100, cbSceneParam._m0[90u].y, _1099 * cbSceneParam._m0[90u].x));
    float _1128 = fma(_1101, cbSceneParam._m0[91u].z, fma(_1100, cbSceneParam._m0[91u].y, _1099 * cbSceneParam._m0[91u].x));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1167 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1171 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1175 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1176 = _1163 / _1175;
    float _1177 = _1167 / _1175;
    float _1178 = _1171 / _1175;
    float _1326;
    float _1327;
    float _1328;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1205 = ((uint(_1178 > cbSceneParam._m0[59u].y) + uint(_1178 > cbSceneParam._m0[59u].x)) + uint(_1178 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1206 = _1205 + 43u;
        uint _1214 = _1205 + 44u;
        uint _1222 = _1205 + 45u;
        uint _1230 = _1205 + 46u;
        float _1241 = fma(_1175, cbSceneParam._m0[_1206].w, fma(_1171, cbSceneParam._m0[_1206].z, fma(_1167, cbSceneParam._m0[_1206].y, _1163 * cbSceneParam._m0[_1206].x)));
        float _1245 = fma(_1175, cbSceneParam._m0[_1214].w, fma(_1171, cbSceneParam._m0[_1214].z, fma(_1167, cbSceneParam._m0[_1214].y, _1163 * cbSceneParam._m0[_1214].x)));
        float _1253 = fma(_1175, cbSceneParam._m0[_1230].w, fma(_1171, cbSceneParam._m0[_1230].z, fma(_1167, cbSceneParam._m0[_1230].y, _1163 * cbSceneParam._m0[_1230].x)));
        float _1258 = cbSceneParam._m0[33u].z * _1253;
        float _1260 = cbSceneParam._m0[33u].w * _1253;
        float _1263 = fma(_1175, cbSceneParam._m0[_1222].w, fma(_1171, cbSceneParam._m0[_1222].z, fma(_1167, cbSceneParam._m0[_1222].y, _1163 * cbSceneParam._m0[_1222].x))) / _1253;
        float _1311 = (cbSceneParam._m0[33u].x - sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178))) * cbSceneParam._m0[33u].y;
        float _2763 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1319 = (isnan(1.0) ? _2763 : (isnan(_2763) ? 1.0 : min(_2763, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1258 + _1241) / _1253, (_1260 + _1245) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1260 + _1241) / _1253, (_1245 - _1258) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1241 - _1258) / _1253, (_1245 - _1260) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1241 - _1260) / _1253, (_1258 + _1245) / _1253), _1263), 0.0)).x), vec4(0.25)));
        _1326 = 1.0 - (_1319 * cbSceneParam._m0[34u].x);
        _1327 = 1.0 - (_1319 * cbSceneParam._m0[34u].y);
        _1328 = 1.0 - (_1319 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1326 = 1.0;
        _1327 = 1.0;
        _1328 = 1.0;
    }
    float _1392;
    float _1394;
    float _1396;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1380 = fma(_1175, cbSceneParam._m0[63u].w, fma(_1171, cbSceneParam._m0[63u].z, fma(_1167, cbSceneParam._m0[63u].y, _1163 * cbSceneParam._m0[63u].x)));
        float _1381 = fma(_1175, cbSceneParam._m0[60u].w, fma(_1171, cbSceneParam._m0[60u].z, fma(_1167, cbSceneParam._m0[60u].y, _1163 * cbSceneParam._m0[60u].x))) / _1380;
        float _1382 = fma(_1175, cbSceneParam._m0[61u].w, fma(_1171, cbSceneParam._m0[61u].z, fma(_1167, cbSceneParam._m0[61u].y, _1163 * cbSceneParam._m0[61u].x))) / _1380;
        float frontier_phi_49_48_ladder;
        float frontier_phi_49_48_ladder_1;
        float frontier_phi_49_48_ladder_2;
        if ((((_1381 >= cbSceneParam._m0[64u].x) && (_1382 >= cbSceneParam._m0[64u].y)) && (_1381 <= cbSceneParam._m0[64u].z)) && (_1382 <= cbSceneParam._m0[64u].w))
        {
            float _1579 = fma(_1175, cbSceneParam._m0[62u].w, fma(_1171, cbSceneParam._m0[62u].z, fma(_1167, cbSceneParam._m0[62u].y, _1163 * cbSceneParam._m0[62u].x))) / _1380;
            float _1583 = isnan(cbSceneParam._m0[41u].w) ? _1579 : (isnan(_1579) ? cbSceneParam._m0[41u].w : max(_1579, cbSceneParam._m0[41u].w));
            float _1626 = (cbSceneParam._m0[33u].x - sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178))) * cbSceneParam._m0[33u].y;
            float _2779 = isnan(0.0) ? _1626 : (isnan(_1626) ? 0.0 : max(_1626, 0.0));
            float _1633 = (isnan(1.0) ? _2779 : (isnan(_2779) ? 1.0 : min(_2779, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1381, cbSceneParam._m0[33u].w + _1382), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1381, _1382 - cbSceneParam._m0[33u].z), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1381 - cbSceneParam._m0[33u].z, _1382 - cbSceneParam._m0[33u].w), _1583), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1381 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1382), _1583), 0.0)).x), vec4(0.25)));
            float _1637 = 1.0 - (_1633 * cbSceneParam._m0[34u].x);
            float _1638 = 1.0 - (_1633 * cbSceneParam._m0[34u].y);
            float _1639 = 1.0 - (_1633 * cbSceneParam._m0[34u].z);
            frontier_phi_49_48_ladder = isnan(_1637) ? _1326 : (isnan(_1326) ? _1637 : min(_1326, _1637));
            frontier_phi_49_48_ladder_1 = isnan(_1638) ? _1327 : (isnan(_1327) ? _1638 : min(_1327, _1638));
            frontier_phi_49_48_ladder_2 = isnan(_1639) ? _1328 : (isnan(_1328) ? _1639 : min(_1328, _1639));
        }
        else
        {
            frontier_phi_49_48_ladder = _1326;
            frontier_phi_49_48_ladder_1 = _1327;
            frontier_phi_49_48_ladder_2 = _1328;
        }
        _1392 = frontier_phi_49_48_ladder;
        _1394 = frontier_phi_49_48_ladder_1;
        _1396 = frontier_phi_49_48_ladder_2;
    }
    else
    {
        _1392 = _1326;
        _1394 = _1327;
        _1396 = _1328;
    }
    uint _1398 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1402 = floatBitsToUint(cbInstanceData._m0[_1398 + 5u]);
    uint _1404 = _1402.x * 14u;
    uint _1405 = _1404 + 13u;
    float _1410 = _469 + (-1.0);
    float _1414 = (cbLight._m0[_1405].x * _1410) + 1.0;
    float _1415 = (cbLight._m0[_1405].y * _1410) + 1.0;
    uint _1416 = _1404 + 8u;
    float _1427 = cbLight._m0[_1404].x + _429;
    float _1428 = cbLight._m0[_1404].y + _430;
    float _1429 = cbLight._m0[_1404].z + _431;
    float _1433 = inversesqrt(dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429)));
    float _1437 = dot(vec3(0.0), vec3(cbLight._m0[_1404].xyz));
    float _2805 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
    float _1440 = isnan(1.0) ? _2805 : (isnan(_2805) ? 1.0 : min(_2805, 1.0));
    float _1441 = dot(vec3(0.0), vec3(_429, _430, _431));
    float _2816 = isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0));
    float _1444 = isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0));
    float _1445 = dot(vec3(cbLight._m0[_1404].xyz), vec3(_1427 * _1433, _1428 * _1433, _1429 * _1433));
    float _2827 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
    float _1456 = (exp2(log2(1.0 - (isnan(1.0) ? _2827 : (isnan(_2827) ? 1.0 : min(_2827, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1462 = (0.5 / ((_1440 + 9.9999999392252902907785028219223e-09) + _1444)) * _1440;
    float _2838 = isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0));
    float _1464 = (isnan(1.0) ? _2838 : (isnan(_2838) ? 1.0 : min(_2838, 1.0))) * 0.31831014156341552734375;
    float _1466 = isnan(1.0) ? _1414 : (isnan(_1414) ? 1.0 : min(_1414, 1.0));
    uint _1479 = _1404 + 9u;
    uint _1485 = _1404 | 1u;
    float _1491 = cbLight._m0[_1485].x + _429;
    float _1492 = cbLight._m0[_1485].y + _430;
    float _1493 = cbLight._m0[_1485].z + _431;
    float _1497 = inversesqrt(dot(vec3(_1491, _1492, _1493), vec3(_1491, _1492, _1493)));
    float _1501 = dot(vec3(0.0), vec3(cbLight._m0[_1485].xyz));
    float _2854 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    float _1504 = isnan(1.0) ? _2854 : (isnan(_2854) ? 1.0 : min(_2854, 1.0));
    float _1505 = dot(vec3(cbLight._m0[_1485].xyz), vec3(_1491 * _1497, _1492 * _1497, _1493 * _1497));
    float _2865 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
    float _1514 = (exp2(log2(1.0 - (isnan(1.0) ? _2865 : (isnan(_2865) ? 1.0 : min(_2865, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1518 = (0.5 / ((_1504 + 9.9999999392252902907785028219223e-09) + _1444)) * _1504;
    float _2876 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
    float _1520 = (isnan(1.0) ? _2876 : (isnan(_2876) ? 1.0 : min(_2876, 1.0))) * 0.31831014156341552734375;
    float _1521 = isnan(1.0) ? _1415 : (isnan(_1415) ? 1.0 : min(_1415, 1.0));
    float _1531 = (((_1514 * cbLight._m0[_1479].x) * _1520) * _1521) + ((((cbLight._m0[_1416].x * _1392) * _1456) * _1464) * _1466);
    float _1532 = (((_1514 * cbLight._m0[_1479].y) * _1520) * _1521) + ((((cbLight._m0[_1416].y * _1394) * _1456) * _1464) * _1466);
    float _1533 = (((_1514 * cbLight._m0[_1479].z) * _1520) * _1521) + ((((cbLight._m0[_1416].z * _1396) * _1456) * _1464) * _1466);
    float _1697;
    float _1699;
    float _1701;
    if (_1402.y == 0u)
    {
        uvec4 _1651 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1652 = _1651.x;
        uint _1663 = uint((float(_1651.y) * floor(float(uint(cbSceneParam._m0[85u].y * _457) / _1652))) + floor(float(uint(cbSceneParam._m0[85u].x * _456) / _1652)));
        float _1673 = (log2(_1178 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1674 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        uint _1677 = uint(isnan(14.0) ? _1674 : (isnan(_1674) ? 14.0 : min(_1674, 14.0)));
        uvec4 _1682 = texelFetch(g_lightClusterGridBuffer, int(((_1677 << 2u) + (_1663 << 6u)) >> 2u));
        uint _1683 = _1682.x;
        uint _1684 = _1651.z;
        float _1791;
        float _1793;
        float _1795;
        if (((((1u << ((_1684 >> 4u) & 15u)) + 4294967295u) & _1683) == 0u) || ((_1684 & 240u) == 0u))
        {
            _1791 = 0.0;
            _1793 = 0.0;
            _1795 = 0.0;
        }
        else
        {
            float _1792;
            float _1794;
            float _1796;
            float _1953 = 0.0;
            float _1954 = 0.0;
            float _1955 = 0.0;
            uint _1956 = 0u;
            uint _1965;
            bool _1966;
            for (;;)
            {
                _1965 = texelFetch(g_lightClassification, int((((_1677 << 5u) + (_1663 << 9u)) + (_1956 << 2u)) >> 2u)).x;
                _1966 = _1965 == 0u;
                float frontier_phi_75_pred;
                float frontier_phi_75_pred_1;
                float frontier_phi_75_pred_2;
                if (_1966)
                {
                    frontier_phi_75_pred = _1955;
                    frontier_phi_75_pred_1 = _1954;
                    frontier_phi_75_pred_2 = _1953;
                }
                else
                {
                    float _2110;
                    float _2111;
                    float _2112;
                    uint _2113;
                    _2110 = _1953;
                    _2111 = _1954;
                    _2112 = _1955;
                    _2113 = _1965;
                    float _2043;
                    float _2044;
                    float _2045;
                    for (;;)
                    {
                        uint _2117 = uint(findLSB(_2113)) + (_1956 << 5u);
                        uint _2114 = (_2113 + 4294967295u) & _2113;
                        uint _2119 = _2117 * 48u;
                        vec4 _2133 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2119)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2119 + 3u)).x));
                        uint _2150 = (_2117 * 48u) + 8u;
                        vec3 _2161 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2150)).x, texelFetch(g_PointLightRenderingBuffer, int(_2150 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2150 + 2u)).x));
                        float _2165 = _2133.x - _1176;
                        float _2166 = _2133.y - _1177;
                        float _2167 = _2133.z - _1178;
                        float _2168 = dot(vec3(_2165, _2166, _2167), vec3(_2165, _2166, _2167));
                        float _2171 = inversesqrt(_2168);
                        float _2180 = 1.0 - (_2168 * _2133.w);
                        float _2902 = isnan(0.0) ? _2180 : (isnan(_2180) ? 0.0 : max(_2180, 0.0));
                        float _2182 = sqrt(_2168) * uintBitsToFloat(uvec4(_2140, _2141, _2142, texelFetch(g_PointLightRenderingBuffer, int(((_2117 * 48u) + 4u) + 3u)).x)).w;
                        float _2185 = 1.39999997615814208984375 / (_2182 + 1.39999997615814208984375);
                        float _2186 = _2185 * _2185;
                        float _2189 = ((1.0 - _2186) * dot(vec3(0.0), vec3(_2171 * _2165, _2171 * _2166, _2171 * _2167))) + _2186;
                        float _2191 = (-0.0) - _1176;
                        float _2192 = (-0.0) - _1177;
                        float _2193 = (-0.0) - _1178;
                        float _2197 = inversesqrt(dot(vec3(_2191, _2192, _2193), vec3(_2191, _2192, _2193)));
                        float _2201 = dot(vec3(0.0), vec3(_2197 * _2191, _2197 * _2192, _2197 * _2193));
                        float _2913 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
                        float _2924 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
                        float _2205 = isnan(1.0) ? _2924 : (isnan(_2924) ? 1.0 : min(_2924, 1.0));
                        float _2209 = (0.5 / (((isnan(1.0) ? _2913 : (isnan(_2913) ? 1.0 : min(_2913, 1.0))) + 9.9999999392252902907785028219223e-09) + _2205)) * _2205;
                        float _2935 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
                        float _2218 = (((isnan(1.0) ? _2935 : (isnan(_2935) ? 1.0 : min(_2935, 1.0))) * 3.1415927410125732421875) / (((_2182 * _2182) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2902 : (isnan(_2902) ? 1.0 : min(_2902, 1.0)));
                        _2043 = (_2218 * _2161.x) + _2110;
                        _2044 = (_2218 * _2161.y) + _2111;
                        _2045 = (_2218 * _2161.z) + _2112;
                        if (_2114 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2110 = _2043;
                            _2111 = _2044;
                            _2112 = _2045;
                            _2113 = _2114;
                        }
                    }
                    frontier_phi_75_pred = _2045;
                    frontier_phi_75_pred_1 = _2044;
                    frontier_phi_75_pred_2 = _2043;
                }
                _1796 = frontier_phi_75_pred;
                _1794 = frontier_phi_75_pred_1;
                _1792 = frontier_phi_75_pred_2;
                uint _1957 = _1956 + 1u;
                if (_1957 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1953 = _1792;
                    _1954 = _1794;
                    _1955 = _1796;
                    _1956 = _1957;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1791 = _1792;
            _1793 = _1794;
            _1795 = _1796;
        }
        uvec4 _1799 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1800 = _1799.z;
        uint _1802 = (_1800 >> 8u) & 15u;
        float _1933;
        float _1935;
        float _1937;
        if (((4294967295u << _1802) & _1683) == 0u)
        {
            _1933 = _1791;
            _1935 = _1793;
            _1937 = _1795;
        }
        else
        {
            float _1949 = inversesqrt(dot(vec3(_1176, _1177, _1178), vec3(_1176, _1177, _1178)));
            float frontier_phi_66_67_ladder;
            float frontier_phi_66_67_ladder_1;
            float frontier_phi_66_67_ladder_2;
            if (_1802 < ((_1800 >> 12u) & 15u))
            {
                float _1934;
                float _1936;
                float _1938;
                float _2096 = _1791;
                float _2097 = _1793;
                float _2098 = _1795;
                uint _2099 = _1802;
                uint _2108;
                bool _2109;
                for (;;)
                {
                    _2108 = texelFetch(g_lightClassification, int((((_1677 << 5u) + (_1663 << 9u)) + (_2099 << 2u)) >> 2u)).x;
                    _2109 = _2108 == 0u;
                    float frontier_phi_86_pred;
                    float frontier_phi_86_pred_1;
                    float frontier_phi_86_pred_2;
                    if (_2109)
                    {
                        frontier_phi_86_pred = _2098;
                        frontier_phi_86_pred_1 = _2097;
                        frontier_phi_86_pred_2 = _2096;
                    }
                    else
                    {
                        float _2232;
                        float _2233;
                        float _2234;
                        float _2453;
                        float _2454;
                        float _2455;
                        float _2242 = _2096;
                        float _2243 = _2097;
                        float _2244 = _2098;
                        uint _2245 = _2108;
                        uint _2246;
                        uint _2256;
                        vec4 _2271;
                        float _2272;
                        vec3 _2284;
                        vec4 _2299;
                        vec4 _2314;
                        float _2360;
                        bool _2361;
                        for (;;)
                        {
                            _2256 = ((_2099 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2245));
                            _2246 = (_2245 + 4294967295u) & _2245;
                            uint _2258 = _2256 * 40u;
                            _2271 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2258)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2258 + 3u)).x));
                            _2272 = _2271.w;
                            uint _2274 = (_2256 * 40u) + 8u;
                            _2284 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2274)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2274 + 2u)).x));
                            uint _2286 = (_2256 * 40u) + 16u;
                            _2299 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2286)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2286 + 3u)).x));
                            uint _2301 = (_2256 * 40u) + 20u;
                            _2314 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2301)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2301 + 3u)).x));
                            uint _2316 = (_2256 * 40u) + 24u;
                            vec4 _2329 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2316)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2316 + 3u)).x));
                            uint _2335 = (_2256 * 40u) + 28u;
                            vec4 _2348 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2335)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2335 + 3u)).x));
                            _2360 = fma(_1178, _2348.z, fma(_1177, _2348.y, _2348.x * _1176)) + _2348.w;
                            _2361 = !((fma(_1178, _2329.z, fma(_1177, _2329.y, _2329.x * _1176)) + _2329.w) <= 0.0);
                            float frontier_phi_92_pred;
                            float frontier_phi_92_pred_1;
                            float frontier_phi_92_pred_2;
                            if (_2361)
                            {
                                float _2395 = _2271.x - _1176;
                                float _2396 = _2271.y - _1177;
                                float _2397 = _2271.z - _1178;
                                float _2398 = dot(vec3(_2395, _2396, _2397), vec3(_2395, _2396, _2397));
                                float _2401 = inversesqrt(_2398);
                                float _2408 = 1.0 - (_2398 / (_2272 * _2272));
                                float _2946 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
                                float _2410 = sqrt(_2398) * uintBitsToFloat(uvec4(_2364, _2365, _2366, texelFetch(g_SpotLightRenderingBuffer, int(((_2256 * 40u) + 4u) + 3u)).x)).w;
                                float _2412 = 1.39999997615814208984375 / (_2410 + 1.39999997615814208984375);
                                float _2413 = _2412 * _2412;
                                float _2416 = (fma(_1178, _2299.z, fma(_1177, _2299.y, _2299.x * _1176)) + _2299.w) / _2360;
                                float _2417 = (fma(_1178, _2314.z, fma(_1177, _2314.y, _2314.x * _1176)) + _2314.w) / _2360;
                                float _2421 = 1.0 - dot(vec2(_2416, _2417), vec2(_2416, _2417));
                                float _2957 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
                                float _2429 = dot(vec3(0.0), vec3((-0.0) - (_1176 * _1949), (-0.0) - (_1177 * _1949), (-0.0) - (_1178 * _1949)));
                                float _2968 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
                                float _2437 = ((1.0 - _2413) * dot(vec3(0.0), vec3(_2401 * _2395, _2401 * _2396, _2401 * _2397))) + _2413;
                                float _2979 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
                                float _2438 = isnan(1.0) ? _2979 : (isnan(_2979) ? 1.0 : min(_2979, 1.0));
                                float _2442 = (0.5 / (((isnan(1.0) ? _2968 : (isnan(_2968) ? 1.0 : min(_2968, 1.0))) + 9.9999999392252902907785028219223e-09) + _2438)) * _2438;
                                float _2990 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
                                float _2449 = ((isnan(1.0) ? _2957 : (isnan(_2957) ? 1.0 : min(_2957, 1.0))) * (isnan(1.0) ? _2946 : (isnan(_2946) ? 1.0 : min(_2946, 1.0)))) * (((isnan(1.0) ? _2990 : (isnan(_2990) ? 1.0 : min(_2990, 1.0))) * 3.1415927410125732421875) / (((_2410 * _2410) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_92_pred = _2449 * _2284.x;
                                frontier_phi_92_pred_1 = _2449 * _2284.z;
                                frontier_phi_92_pred_2 = _2449 * _2284.y;
                            }
                            else
                            {
                                frontier_phi_92_pred = 0.0;
                                frontier_phi_92_pred_1 = 0.0;
                                frontier_phi_92_pred_2 = 0.0;
                            }
                            _2453 = frontier_phi_92_pred;
                            _2455 = frontier_phi_92_pred_1;
                            _2454 = frontier_phi_92_pred_2;
                            _2232 = _2453 + _2242;
                            _2233 = _2454 + _2243;
                            _2234 = _2455 + _2244;
                            if (_2246 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2242 = _2232;
                                _2243 = _2233;
                                _2244 = _2234;
                                _2245 = _2246;
                                continue;
                            }
                        }
                        frontier_phi_86_pred = _2234;
                        frontier_phi_86_pred_1 = _2233;
                        frontier_phi_86_pred_2 = _2232;
                    }
                    _1938 = frontier_phi_86_pred;
                    _1936 = frontier_phi_86_pred_1;
                    _1934 = frontier_phi_86_pred_2;
                    uint _2100 = _2099 + 1u;
                    if (_2100 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2096 = _1934;
                        _2097 = _1936;
                        _2098 = _1938;
                        _2099 = _2100;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_66_67_ladder = _1938;
                frontier_phi_66_67_ladder_1 = _1934;
                frontier_phi_66_67_ladder_2 = _1936;
            }
            else
            {
                frontier_phi_66_67_ladder = _1795;
                frontier_phi_66_67_ladder_1 = _1791;
                frontier_phi_66_67_ladder_2 = _1793;
            }
            _1933 = frontier_phi_66_67_ladder_1;
            _1935 = frontier_phi_66_67_ladder_2;
            _1937 = frontier_phi_66_67_ladder;
        }
        float _1942 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
        _1697 = ((_1933 * 0.039999999105930328369140625) * _1942) + _1531;
        _1699 = ((_1935 * 0.039999999105930328369140625) * _1942) + _1532;
        _1701 = ((_1937 * 0.039999999105930328369140625) * _1942) + _1533;
    }
    else
    {
        _1697 = _1531;
        _1699 = _1532;
        _1701 = _1533;
    }
    uint _1707 = _1398 + 9u;
    uint _1708 = _1707 + uint(cbMatDynParam._m0[0u].w);
    float _1723 = ((_400.x * cbMtdParam._m0[13u].x) * cbInstanceData._m0[_1708].x) + ((_1697 + ((isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0))) * _893)) * cbPerFrame._m0[3u].x);
    float _1724 = ((_400.y * cbMtdParam._m0[13u].y) * cbInstanceData._m0[_1708].y) + ((_1699 + ((isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0))) * _893)) * cbPerFrame._m0[3u].x);
    float _1725 = ((_400.z * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_1708].z) + ((_1701 + ((isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0))) * _893)) * cbPerFrame._m0[3u].x);
    float _1726 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
    float _1727 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
    float _1728 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0));
    uint _1729 = _1398 + 6u;
    float _1737 = _456 / cbSceneParam._m0[86u].x;
    float _1738 = _457 / cbSceneParam._m0[86u].y;
    vec4 _1752 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1737, _1738, (log2((isnan(cbSceneParam._m0[77u].w) ? _424 : (isnan(_424) ? cbSceneParam._m0[77u].w : min(_424, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1754 = _1752.x;
    float _1755 = _1752.y;
    float _1756 = _1752.z;
    float _1757 = _1752.w;
    float _1847;
    float _1849;
    float _1851;
    float _1853;
    if (_424 > cbSceneParam._m0[78u].w)
    {
        float _1810 = isnan(_424) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _424 : min(cbSceneParam._m0[80u].w, _424));
        float _1811 = _1810 / _424;
        float _1822 = _1811 * _249;
        float _1823 = _250 * _1811;
        float _1824 = (-0.0) - _1823;
        float _1825 = _1811 * _251;
        float _1827 = (cbSceneParam._m0[77u].w * _1824) / _1810;
        float _1828 = _1827 + cbSceneParam._m0[79u].w;
        float _1829 = cbSceneParam._m0[79u].w - _1823;
        float _1835 = sqrt(((_1822 * _1822) + (_1823 * _1823)) + (_1825 * _1825));
        float _1838 = (1.0 - (cbSceneParam._m0[77u].w / _1810)) * _1835;
        float _1843 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1845 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2053;
        if (abs((_1824 - _1827) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2053 = ((((_1828 > 0.0) ? exp2(_1843 * _1828) : (2.0 - exp2(_1845 * _1828))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1838;
        }
        else
        {
            float _1979 = 1.0 / cbSceneParam._m0[80u].x;
            float _1980 = isnan(_1829) ? _1828 : (isnan(_1828) ? _1829 : max(_1828, _1829));
            float _1981 = isnan(_1829) ? _1828 : (isnan(_1828) ? _1829 : min(_1828, _1829));
            float _1990 = isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : min(_1980, 0.0));
            float _1991 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : min(_1981, 0.0));
            _2053 = ((abs(_1835 / _1824) * cbSceneParam._m0[80u].y) * ((((_1990 - _1991) * 2.0) - ((exp2(_1843 * (isnan(0.0) ? _1980 : (isnan(_1980) ? 0.0 : max(_1980, 0.0)))) - exp2(_1843 * (isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0))))) * _1979)) - ((exp2(_1845 * _1990) - exp2(_1845 * _1991)) * _1979))) + (_1838 * cbSceneParam._m0[80u].z);
        }
        vec4 _2055 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1737, _1738, 1.0), 0.0);
        float _2064 = exp2((_2053 * (-1.44269502162933349609375)) * (1.0 - _2055.w));
        float _2065 = log2(_2064);
        float _2081 = log2(_1757);
        _1847 = (exp2(_2081 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].x)) * _2055.x) / cbSceneParam._m0[78u].x)) + _1754;
        _1849 = (exp2(_2081 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].y)) * _2055.y) / cbSceneParam._m0[78u].y)) + _1755;
        _1851 = (exp2(_2081 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2065 * cbSceneParam._m0[78u].z)) * _2055.z) / cbSceneParam._m0[78u].z)) + _1756;
        _1853 = _2064 * _1757;
    }
    else
    {
        _1847 = _1754;
        _1849 = _1755;
        _1851 = _1756;
        _1853 = _1757;
    }
    bool _2091;
    vec4 _1863;
    vec4 _1886;
    float _1888;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    bool _1906;
    for (;;)
    {
        _1863 = cbMatDynParam._m0[0u];
        float _1865 = roundEven(_1863.y);
        bool _1866 = _1865 == 3.0;
        float _1868 = log2(_1853);
        float _1875 = exp2(_1868 * cbSceneParam._m0[78u].x) * _1726;
        float _1876 = exp2(_1868 * cbSceneParam._m0[78u].y) * _1727;
        float _1877 = exp2(_1868 * cbSceneParam._m0[78u].z) * _1728;
        float _1884 = _438 + (-0.5);
        _1886 = cbMtdParam._m0[1u];
        _1888 = _1886.y * _1884;
        float _1891 = (_1865 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1892 = _1891 * (_1866 ? _1875 : (_1875 + (cbSceneParam._m0[72u].w * _1847)));
        _1893 = _1891 * (_1866 ? _1876 : (_1876 + (cbSceneParam._m0[72u].w * _1849)));
        _1894 = _1891 * (_1866 ? _1877 : (_1877 + (cbSceneParam._m0[72u].w * _1851)));
        _1895 = _1884 * 0.999000012874603271484375;
        _1906 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1906)
        {
            if ((cbInstanceData._m0[_1398 + 7u].x + _1895) < 0.5)
            {
                _2091 = true;
                break;
            }
        }
        uint _2014 = _1707 + uint(_1863.w);
        if ((cbInstanceData._m0[_2014].w < 1.0) && ((cbInstanceData._m0[_2014].w + _1895) < 0.5))
        {
            _2091 = true;
            break;
        }
        if ((_1888 + 1.0) < _1886.x)
        {
            _2091 = true;
            break;
        }
        _2091 = false;
        break;
    }
    float _2223;
    if (_2091)
    {
        discard_state = true;
        _2223 = 0.0;
    }
    else
    {
        _2223 = cbInstanceData._m0[_1729].w;
    }
    SV_Target.x = _1892;
    SV_Target.y = _1893;
    SV_Target.z = _1894;
    SV_Target.w = _2223;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1729].w;
    discard_exit();
}


