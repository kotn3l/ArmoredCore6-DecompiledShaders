#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _124 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _125 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _126 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_124, _125, _126), vec3(_124, _125, _126)));
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _190 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _228 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _190));
    float _229 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _190));
    float _230 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _190));
    float _247 = (-0.0) - dot(vec3(_228, _229, _230), vec3(_131 * _124, _131 * _125, _131 * _126));
    float _248 = (-0.0) - dot(vec3(_228, _229, _230), vec3(_142 * TANGENT.x, _142 * TANGENT.y, _142 * TANGENT.z));
    float _249 = (-0.0) - dot(vec3(_228, _229, _230), vec3((-0.0) - (NORMAL.x * _138), (-0.0) - (NORMAL.y * _138), (-0.0) - (NORMAL.z * _138)));
    float _253 = inversesqrt(dot(vec3(_247, _248, _249), vec3(_247, _248, _249)));
    float _254 = _253 * _249;
    float _256 = (cbMtdParam._m0[19u].x * _247) * _253;
    float _258 = (cbMtdParam._m0[18u].w * _248) * _253;
    float _259 = fract(TEXCOORD.x);
    float _260 = fract(TEXCOORD.y);
    float _266;
    if (_256 > 0.0)
    {
        _266 = (1.0 - _259) / _256;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_256 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _259) / _256;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _266 = frontier_phi_3_2_ladder;
    }
    float _274;
    if (_258 > 0.0)
    {
        _274 = (1.0 - _260) / _258;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_258 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _260) / _258;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _274 = frontier_phi_7_6_ladder;
    }
    float _278 = (_254 > 0.0) ? (cbMtdParam._m0[15u].x / _254) : 5000.0;
    float _279 = isnan(_274) ? _266 : (isnan(_266) ? _274 : min(_266, _274));
    float _280 = isnan(_278) ? _279 : (isnan(_279) ? _278 : min(_279, _278));
    float _284 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _291 = ((_280 * _254) + _284) / _284;
    vec4 _317 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_259 + (-0.5)) + (_280 * _256)) / _291) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_260 + (-0.5)) + (_280 * _258)) / _291) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _328 = cbMtdParam._m0[9u].x * _317.x;
    float _329 = cbMtdParam._m0[9u].y * _317.y;
    float _330 = cbMtdParam._m0[9u].z * _317.z;
    float _431 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _442 = isnan(0.0) ? _329 : (isnan(_329) ? 0.0 : max(_329, 0.0));
    float _453 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    uint _348 = uint(roundEven(NORMAL.w)) * 13u;
    uint _351 = (_348 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _357 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _431 : (isnan(_431) ? 1.0 : min(_431, 1.0)))) * cbInstanceData._m0[_351].x;
    float _358 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _442 : (isnan(_442) ? 1.0 : min(_442, 1.0)))) * cbInstanceData._m0[_351].y;
    float _359 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _453 : (isnan(_453) ? 1.0 : min(_453, 1.0)))) * cbInstanceData._m0[_351].z;
    float _464 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _475 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _486 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    uint _363 = _348 + 6u;
    bool _381 = cbMtdParam._m0[1u].z != 0.0;
    float _382 = _381 ? cbInstanceData._m0[_363].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _382;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _381 ? cbInstanceData._m0[_363].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _464 : (isnan(_464) ? 1.0 : min(_464, 1.0));
    SV_Target_2.y = isnan(1.0) ? _475 : (isnan(_475) ? 1.0 : min(_475, 1.0));
    SV_Target_2.z = isnan(1.0) ? _486 : (isnan(_486) ? 1.0 : min(_486, 1.0));
    SV_Target_2.w = _381 ? cbInstanceData._m0[_363].w : (float(floatBitsToUint(cbInstanceData._m0[_348 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _382;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _382;
}


