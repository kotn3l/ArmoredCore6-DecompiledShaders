#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1001;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _174 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _175 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _176 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _181 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _188 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _195 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _243 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _253 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _243);
    float _254 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _243);
    float _255 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _243);
    float _281 = cbMtdParam._m0[22u].y + _253;
    float _282 = cbMtdParam._m0[22u].z + _254;
    float _283 = cbMtdParam._m0[22u].w + _255;
    float _297 = (-0.0) - dot(vec3(_281, _282, _283), vec3(_181 * _174, _181 * _175, _181 * _176));
    float _298 = (-0.0) - dot(vec3(_281, _282, _283), vec3(_195 * TANGENT.x, _195 * TANGENT.y, _195 * TANGENT.z));
    float _299 = (-0.0) - dot(vec3(_281, _282, _283), vec3((-0.0) - (_188 * NORMAL.x), (-0.0) - (_188 * NORMAL.y), (-0.0) - (_188 * NORMAL.z)));
    float _303 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _304 = _303 * _299;
    float _306 = (cbMtdParam._m0[19u].x * _297) * _303;
    float _308 = (cbMtdParam._m0[18u].w * _298) * _303;
    float _309 = fract(TEXCOORD.x);
    float _310 = fract(TEXCOORD.y);
    float _316;
    if (_306 > 0.0)
    {
        _316 = (1.0 - _309) / _306;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_306 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _309) / _306;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _316 = frontier_phi_3_2_ladder;
    }
    float _324;
    if (_308 > 0.0)
    {
        _324 = (1.0 - _310) / _308;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_308 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _310) / _308;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _324 = frontier_phi_7_6_ladder;
    }
    bool _326 = _304 > 0.0;
    float _328 = _326 ? (cbMtdParam._m0[15u].x / _304) : 5000.0;
    float _329 = isnan(_324) ? _316 : (isnan(_316) ? _324 : min(_316, _324));
    float _330 = isnan(_328) ? _329 : (isnan(_329) ? _328 : min(_329, _328));
    float _334 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _335 = _309 + (-0.5);
    float _338 = _310 + (-0.5);
    float _341 = ((_330 * _304) + _334) / _334;
    vec4 _367 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_335 + (_330 * _306)) / _341) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_338 + (_330 * _308)) / _341) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _378 = cbMtdParam._m0[9u].x * _367.x;
    float _379 = cbMtdParam._m0[9u].y * _367.y;
    float _380 = cbMtdParam._m0[9u].z * _367.z;
    float _402 = (cbMtdParam._m0[21u].x * _297) * _303;
    float _404 = (cbMtdParam._m0[20u].w * _298) * _303;
    bool _405 = _402 > 0.0;
    float _410;
    if (_405)
    {
        _410 = (1.0 - _309) / _402;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_402 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _309) / _402;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _410 = frontier_phi_11_10_ladder;
    }
    bool _412 = _404 > 0.0;
    float _417;
    if (_412)
    {
        _417 = (1.0 - _310) / _404;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _310) / _404;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _417 = frontier_phi_15_14_ladder;
    }
    float _420 = _326 ? (cbMtdParam._m0[16u].z / _304) : 5000.0;
    float _421 = isnan(_417) ? _410 : (isnan(_410) ? _417 : min(_410, _417));
    float _422 = isnan(_420) ? _421 : (isnan(_421) ? _420 : min(_421, _420));
    float _426 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _430 = ((_422 * _304) + _426) / _426;
    float _435 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _437 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _453 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_335 + (_422 * _402)) / _430) + 0.5) + _435) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_338 + (_422 * _404)) / _430) + 0.5) + _437) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _465;
    if (_405)
    {
        _465 = (1.0 - _309) / _402;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_402 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _309) / _402;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _465 = frontier_phi_19_18_ladder;
    }
    float _471;
    if (_412)
    {
        _471 = (1.0 - _310) / _404;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _310) / _404;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _471 = frontier_phi_23_22_ladder;
    }
    float _473 = isnan(_471) ? _465 : (isnan(_465) ? _471 : min(_465, _471));
    float _474 = isnan(_420) ? _473 : (isnan(_473) ? _420 : min(_473, _420));
    float _481 = ((_474 * _304) + _426) / _426;
    vec4 _495 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_335 + (_474 * _402)) / _481) + 0.5) + _435) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_338 + (_474 * _404)) / _481) + 0.5) + _437) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _497 = _495.w;
    float _504 = (_497 * ((_453.x * cbMtdParam._m0[10u].x) - _378)) + _378;
    float _505 = (_497 * ((_453.y * cbMtdParam._m0[10u].y) - _379)) + _379;
    float _506 = (_497 * ((_453.z * cbMtdParam._m0[10u].z) - _380)) + _380;
    float _521 = (cbMtdParam._m0[21u].z * _297) * _303;
    float _523 = (cbMtdParam._m0[21u].y * _298) * _303;
    bool _524 = _521 > 0.0;
    float _529;
    if (_524)
    {
        _529 = (1.0 - _309) / _521;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_521 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _309) / _521;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _529 = frontier_phi_27_26_ladder;
    }
    bool _531 = _523 > 0.0;
    float _536;
    if (_531)
    {
        _536 = (1.0 - _310) / _523;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_523 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _310) / _523;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _536 = frontier_phi_31_30_ladder;
    }
    float _539 = _326 ? (cbMtdParam._m0[18u].x / _304) : 5000.0;
    float _540 = isnan(_536) ? _529 : (isnan(_529) ? _536 : min(_529, _536));
    float _541 = isnan(_539) ? _540 : (isnan(_540) ? _539 : min(_540, _539));
    float _545 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _549 = ((_541 * _304) + _545) / _545;
    float _554 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _556 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _573 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_335 + (_541 * _521)) / _549) + 0.5) + _554) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_338 + (_541 * _523)) / _549) + 0.5) + _556) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _585;
    if (_524)
    {
        _585 = (1.0 - _309) / _521;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_521 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _309) / _521;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _585 = frontier_phi_35_34_ladder;
    }
    float _591;
    if (_531)
    {
        _591 = (1.0 - _310) / _523;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_523 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _310) / _523;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _591 = frontier_phi_39_38_ladder;
    }
    float _593 = isnan(_591) ? _585 : (isnan(_585) ? _591 : min(_585, _591));
    float _594 = isnan(_539) ? _593 : (isnan(_593) ? _539 : min(_593, _539));
    float _601 = ((_594 * _304) + _545) / _545;
    vec4 _615 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_335 + (_594 * _521)) / _601) + 0.5) + _554) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_338 + (_594 * _523)) / _601) + 0.5) + _556) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _617 = _615.w;
    float _624 = (_617 * ((_573.x * cbMtdParam._m0[14u].x) - _504)) + _504;
    float _625 = (_617 * ((_573.y * cbMtdParam._m0[14u].y) - _505)) + _505;
    float _626 = (_617 * ((_573.z * cbMtdParam._m0[14u].z) - _506)) + _506;
    float _2975 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _2986 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _2997 = isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : max(_626, 0.0));
    float _645 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _649 = inversesqrt(dot(vec3(_253, _254, _255), vec3(_253, _254, _255)));
    float _650 = _253 * _649;
    float _651 = _254 * _649;
    float _652 = _255 * _649;
    float _658 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _659 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _672 = uint(roundEven(NORMAL.w)) * 13u;
    uint _675 = (_672 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _681 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0)))) * cbInstanceData._m0[_675].x;
    float _682 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0)))) * cbInstanceData._m0[_675].y;
    float _683 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0)))) * cbInstanceData._m0[_675].z;
    float _3008 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _684 = isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0));
    float _3019 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _685 = isnan(1.0) ? _3019 : (isnan(_3019) ? 1.0 : min(_3019, 1.0));
    float _3030 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _686 = isnan(1.0) ? _3030 : (isnan(_3030) ? 1.0 : min(_3030, 1.0));
    vec4 _695 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _658, cbSceneParam._m0[86u].y * _659));
    float _698 = _695.x * TEXCOORD.z;
    float _699 = (-0.0) - _650;
    float _700 = (-0.0) - _651;
    float _701 = (-0.0) - _652;
    float _723 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _727 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _731 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1000;
    float _1002;
    float _1003;
    float _1004;
    float _1005;
    float _1006;
    float _1007;
    float _1008;
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _787 = (cbModelParam._m0[37u].x * ((((fma(_731, cbModelParam._m0[26u].z, fma(_727, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _723)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _789 = (cbModelParam._m0[37u].y * ((((fma(_731, cbModelParam._m0[27u].z, fma(_727, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _723)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _790 = (((((fma(_731, cbModelParam._m0[28u].z, fma(_727, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _723)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _793 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_787, _789, _790), 0.0);
        vec4 _800 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_787, _789, _790), 0.0);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_787, _789, _790), 0.0);
        vec4 _814 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_787, _789, _790), 0.0);
        float _827 = exp2((_793.w + (-0.5)) * 20.0) * 2.0;
        float _829 = _827 * (_793.x + (-0.5));
        float _830 = _827 * (_793.y + (-0.5));
        float _831 = _827 * (_793.z + (-0.5));
        float _838 = exp2((_800.w + (-0.5)) * 20.0) * 2.0;
        float _839 = _838 * (_800.x + (-0.5));
        float _840 = _838 * (_800.y + (-0.5));
        float _841 = _838 * (_800.z + (-0.5));
        float _848 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _849 = _848 * (_807.x + (-0.5));
        float _850 = _848 * (_807.y + (-0.5));
        float _851 = _848 * (_807.z + (-0.5));
        float _858 = exp2((_814.w + (-0.5)) * 20.0) * 2.0;
        float _859 = _858 * (_814.x + (-0.5));
        float _860 = _858 * (_814.y + (-0.5));
        float _861 = _858 * (_814.z + (-0.5));
        float _862 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
        float _863 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
        float _864 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0));
        float _865 = _829 * 0.5;
        float _866 = _839 * 0.5;
        float _867 = _849 * 0.5;
        float _868 = dot(vec3(_865, _866, _867), vec3(_865, _866, _867));
        float _873 = (_868 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_868);
        float _882 = (dot(vec3(0.0), vec3(_873 * _865, _873 * _866, _873 * _867)) + 1.0) * 0.5;
        float _3056 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _892 = sqrt(((_866 * _866) + (_865 * _865)) + (_867 * _867)) / (_862 + 9.9999997473787516355514526367188e-06);
        float _3067 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
        float _893 = isnan(1.0) ? _3067 : (isnan(_3067) ? 1.0 : min(_3067, 1.0));
        float _894 = _893 * 2.0;
        float _898 = (1.0 - _893) / (_893 + 1.0);
        float _3078 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _899 = isnan(1.0) ? _3078 : (isnan(_3078) ? 1.0 : min(_3078, 1.0));
        float _908 = ((((1.0 - _899) * (_894 + 2.0)) * exp2(log2(isnan(1.0) ? _3056 : (isnan(_3056) ? 1.0 : min(_3056, 1.0))) * (_894 + 1.0))) + _899) * _862;
        float _909 = _830 * 0.5;
        float _910 = _840 * 0.5;
        float _911 = _850 * 0.5;
        float _912 = dot(vec3(_909, _910, _911), vec3(_909, _910, _911));
        float _917 = (_912 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_912);
        float _925 = (dot(vec3(0.0), vec3(_917 * _909, _917 * _910, _917 * _911)) + 1.0) * 0.5;
        float _3089 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _934 = sqrt(((_910 * _910) + (_909 * _909)) + (_911 * _911)) / (_863 + 9.9999997473787516355514526367188e-06);
        float _3100 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _935 = isnan(1.0) ? _3100 : (isnan(_3100) ? 1.0 : min(_3100, 1.0));
        float _936 = _935 * 2.0;
        float _940 = (1.0 - _935) / (_935 + 1.0);
        float _3111 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _941 = isnan(1.0) ? _3111 : (isnan(_3111) ? 1.0 : min(_3111, 1.0));
        float _950 = ((((1.0 - _941) * (_936 + 2.0)) * exp2(log2(isnan(1.0) ? _3089 : (isnan(_3089) ? 1.0 : min(_3089, 1.0))) * (_936 + 1.0))) + _941) * _863;
        float _951 = _831 * 0.5;
        float _952 = _841 * 0.5;
        float _953 = _851 * 0.5;
        float _954 = dot(vec3(_951, _952, _953), vec3(_951, _952, _953));
        float _959 = (_954 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_954);
        float _967 = (dot(vec3(0.0), vec3(_959 * _951, _959 * _952, _959 * _953)) + 1.0) * 0.5;
        float _3122 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
        float _976 = sqrt(((_952 * _952) + (_951 * _951)) + (_953 * _953)) / (_864 + 9.9999997473787516355514526367188e-06);
        float _3133 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _977 = isnan(1.0) ? _3133 : (isnan(_3133) ? 1.0 : min(_3133, 1.0));
        float _978 = _977 * 2.0;
        float _982 = (1.0 - _977) / (_977 + 1.0);
        float _3144 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
        float _983 = isnan(1.0) ? _3144 : (isnan(_3144) ? 1.0 : min(_3144, 1.0));
        float _992 = ((((1.0 - _983) * (_978 + 2.0)) * exp2(log2(isnan(1.0) ? _3122 : (isnan(_3122) ? 1.0 : min(_3122, 1.0))) * (_978 + 1.0))) + _983) * _864;
        _1000 = _831;
        _1002 = _830;
        _1003 = _829;
        _1004 = _841;
        _1005 = _840;
        _1006 = _839;
        _1007 = _851;
        _1008 = _850;
        _1009 = _849;
        _1010 = _864;
        _1011 = _863;
        _1012 = _862;
        _1013 = cbModelParam._m0[36u].z * (isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0)));
        _1014 = cbModelParam._m0[36u].z * (isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0)));
        _1015 = cbModelParam._m0[36u].z * (isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0)));
    }
    else
    {
        _1000 = _1001;
        _1002 = _1001;
        _1003 = _1001;
        _1004 = _1001;
        _1005 = _1001;
        _1006 = _1001;
        _1007 = _1001;
        _1008 = _1001;
        _1009 = _1001;
        _1010 = _1001;
        _1011 = _1001;
        _1012 = _1001;
        _1013 = 0.0;
        _1014 = 0.0;
        _1015 = 0.0;
    }
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1069 = (cbModelParam._m0[38u].x * ((((fma(_731, cbModelParam._m0[30u].z, fma(_727, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _723)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1070 = (cbModelParam._m0[38u].y * ((((fma(_731, cbModelParam._m0[31u].z, fma(_727, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _723)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _1071 = (((((fma(_731, cbModelParam._m0[32u].z, fma(_727, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _723)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _1073 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1080 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1087 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        vec4 _1094 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1069, _1070, _1071), 0.0);
        float _1106 = exp2((_1073.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1073.x + (-0.5));
        float _1108 = _1106 * (_1073.y + (-0.5));
        float _1109 = _1106 * (_1073.z + (-0.5));
        float _1116 = exp2((_1080.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1080.x + (-0.5));
        float _1118 = _1116 * (_1080.y + (-0.5));
        float _1119 = _1116 * (_1080.z + (-0.5));
        float _1126 = exp2((_1087.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1087.x + (-0.5));
        float _1128 = _1126 * (_1087.y + (-0.5));
        float _1129 = _1126 * (_1087.z + (-0.5));
        float _1136 = exp2((_1094.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1094.x + (-0.5));
        float _1138 = _1136 * (_1094.y + (-0.5));
        float _1139 = _1136 * (_1094.z + (-0.5));
        float _1140 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1141 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = _1107 * 0.5;
        float _1144 = _1117 * 0.5;
        float _1145 = _1127 * 0.5;
        float _1146 = dot(vec3(_1143, _1144, _1145), vec3(_1143, _1144, _1145));
        float _1151 = (_1146 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1146);
        float _1159 = (dot(vec3(0.0), vec3(_1151 * _1143, _1151 * _1144, _1151 * _1145)) + 1.0) * 0.5;
        float _3185 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1168 = sqrt(((_1144 * _1144) + (_1143 * _1143)) + (_1145 * _1145)) / (_1140 + 9.9999997473787516355514526367188e-06);
        float _3196 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1169 = isnan(1.0) ? _3196 : (isnan(_3196) ? 1.0 : min(_3196, 1.0));
        float _1170 = _1169 * 2.0;
        float _1174 = (1.0 - _1169) / (_1169 + 1.0);
        float _3207 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1175 = isnan(1.0) ? _3207 : (isnan(_3207) ? 1.0 : min(_3207, 1.0));
        float _1184 = ((((1.0 - _1175) * (_1170 + 2.0)) * exp2(log2(isnan(1.0) ? _3185 : (isnan(_3185) ? 1.0 : min(_3185, 1.0))) * (_1170 + 1.0))) + _1175) * _1140;
        float _1185 = _1108 * 0.5;
        float _1186 = _1118 * 0.5;
        float _1187 = _1128 * 0.5;
        float _1188 = dot(vec3(_1185, _1186, _1187), vec3(_1185, _1186, _1187));
        float _1193 = (_1188 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1188);
        float _1201 = (dot(vec3(0.0), vec3(_1193 * _1185, _1193 * _1186, _1193 * _1187)) + 1.0) * 0.5;
        float _3218 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1210 = sqrt(((_1186 * _1186) + (_1185 * _1185)) + (_1187 * _1187)) / (_1141 + 9.9999997473787516355514526367188e-06);
        float _3229 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
        float _1211 = isnan(1.0) ? _3229 : (isnan(_3229) ? 1.0 : min(_3229, 1.0));
        float _1212 = _1211 * 2.0;
        float _1216 = (1.0 - _1211) / (_1211 + 1.0);
        float _3240 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1217 = isnan(1.0) ? _3240 : (isnan(_3240) ? 1.0 : min(_3240, 1.0));
        float _1226 = ((((1.0 - _1217) * (_1212 + 2.0)) * exp2(log2(isnan(1.0) ? _3218 : (isnan(_3218) ? 1.0 : min(_3218, 1.0))) * (_1212 + 1.0))) + _1217) * _1141;
        float _1227 = _1109 * 0.5;
        float _1228 = _1119 * 0.5;
        float _1229 = _1129 * 0.5;
        float _1230 = dot(vec3(_1227, _1228, _1229), vec3(_1227, _1228, _1229));
        float _1235 = (_1230 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1230);
        float _1243 = (dot(vec3(0.0), vec3(_1235 * _1227, _1235 * _1228, _1235 * _1229)) + 1.0) * 0.5;
        float _3251 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1252 = sqrt(((_1228 * _1228) + (_1227 * _1227)) + (_1229 * _1229)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3262 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1253 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
        float _1254 = _1253 * 2.0;
        float _1258 = (1.0 - _1253) / (_1253 + 1.0);
        float _3273 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1259 = isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0));
        float _1268 = ((((1.0 - _1259) * (_1254 + 2.0)) * exp2(log2(isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0))) * (_1254 + 1.0))) + _1259) * _1142;
        _1276 = _1109;
        _1277 = _1108;
        _1278 = _1107;
        _1279 = _1119;
        _1280 = _1118;
        _1281 = _1117;
        _1282 = _1129;
        _1283 = _1128;
        _1284 = _1127;
        _1285 = _1142;
        _1286 = _1141;
        _1287 = _1140;
        _1288 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0)));
        _1289 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0)));
        _1290 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0)));
    }
    else
    {
        _1276 = _1001;
        _1277 = _1001;
        _1278 = _1001;
        _1279 = _1001;
        _1280 = _1001;
        _1281 = _1001;
        _1282 = _1001;
        _1283 = _1001;
        _1284 = _1001;
        _1285 = _1001;
        _1286 = _1001;
        _1287 = _1001;
        _1288 = 0.0;
        _1289 = 0.0;
        _1290 = 0.0;
    }
    float _1300 = (cbModelParam._m0[1u].x * (_1288 - _1013)) + _1013;
    float _1301 = (cbModelParam._m0[1u].x * (_1289 - _1014)) + _1014;
    float _1302 = (cbModelParam._m0[1u].x * (_1290 - _1015)) + _1015;
    float _1323 = fma(_1302, cbSceneParam._m0[89u].z, fma(_1301, cbSceneParam._m0[89u].y, _1300 * cbSceneParam._m0[89u].x));
    float _1326 = fma(_1302, cbSceneParam._m0[90u].z, fma(_1301, cbSceneParam._m0[90u].y, _1300 * cbSceneParam._m0[90u].x));
    float _1329 = fma(_1302, cbSceneParam._m0[91u].z, fma(_1301, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1300));
    float _1344 = _650 * (-0.5);
    float _1345 = _651 * (-0.5);
    float _1346 = _652 * (-0.5);
    float _1347 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1278, _1281, _1284, _1287));
    float _1350 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1277, _1280, _1283, _1286));
    float _1353 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1276, _1279, _1282, _1285));
    float _1387;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1360 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1000, _1004, _1007, _1010));
        float _1364 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1002, _1005, _1008, _1011));
        float _1368 = dot(vec4(_1344, _1345, _1346, 1.0), vec4(_1003, _1006, _1009, _1012));
        float _1375 = dot(vec4(cbModelParam._m0[39u]), vec4(_1344, _1345, _1346, 1.0));
        _1387 = dot(vec3(isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0)), isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0)), isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1375) ? 0.0 : (isnan(0.0) ? _1375 : max(0.0, _1375))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1387 = 1.0;
    }
    float _1398;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1389 = dot(vec4(cbModelParam._m0[40u]), vec4(_1344, _1345, _1346, 1.0));
        _1398 = dot(vec3(isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0)), isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0)), isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1389) ? 0.0 : (isnan(0.0) ? _1389 : max(0.0, _1389))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1398 = 1.0;
    }
    float _1402 = (_1398 * cbModelParam._m0[1u].x) + (_1387 * (1.0 - cbModelParam._m0[1u].x));
    float _1411 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1491;
    float _1493;
    float _1495;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1458 = fma(_731, cbModelParam._m0[13u].z, fma(_727, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _723)) + cbModelParam._m0[13u].w;
        float _1462 = fma(_731, cbModelParam._m0[14u].z, fma(_727, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _723)) + cbModelParam._m0[14u].w;
        float _1466 = fma(_731, cbModelParam._m0[15u].z, fma(_727, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _723)) + cbModelParam._m0[15u].w;
        float _1469 = fma(_701, cbModelParam._m0[13u].z, fma(_700, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _699));
        float _1472 = fma(_701, cbModelParam._m0[14u].z, fma(_700, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _699));
        float _1475 = fma(_701, cbModelParam._m0[15u].z, fma(_700, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _699));
        float _1501;
        if (_1469 > 0.0)
        {
            _1501 = abs((1.0 - _1458) / _1469);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1469 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1458 + 1.0) / _1469);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _1501 = frontier_phi_54_52_ladder;
        }
        float _1798;
        if (_1472 > 0.0)
        {
            _1798 = abs((1.0 - _1462) / _1472);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1472 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1462 + 1.0) / _1472);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _1798 = frontier_phi_63_59_ladder;
        }
        float _2101;
        if (_1475 > 0.0)
        {
            _2101 = abs((1.0 - _1466) / _1475);
        }
        else
        {
            float frontier_phi_77_70_ladder;
            if (_1475 < 0.0)
            {
                frontier_phi_77_70_ladder = abs((_1466 + 1.0) / _1475);
            }
            else
            {
                frontier_phi_77_70_ladder = 5000.0;
            }
            _2101 = frontier_phi_77_70_ladder;
        }
        float _2103 = isnan(_1798) ? _1501 : (isnan(_1501) ? _1798 : min(_1501, _1798));
        float _2104 = isnan(_2101) ? _2103 : (isnan(_2103) ? _2101 : min(_2103, _2101));
        float _2108 = (_2104 * _1469) + _1458;
        float _2109 = (_2104 * _1472) + _1462;
        float _2110 = (_2104 * _1475) + _1466;
        float _2111 = _2104 * 9.9999997473787516355514526367188e-05;
        float _2112 = (-1.0) - _2111;
        float _2114 = _2111 + 1.0;
        float frontier_phi_53_77_ladder;
        float frontier_phi_53_77_ladder_1;
        float frontier_phi_53_77_ladder_2;
        if ((_2110 > _2114) || ((_2110 < _2112) || ((_2109 > _2114) || ((_2109 < _2112) || ((_2108 < _2112) || (_2108 > _2114))))))
        {
            frontier_phi_53_77_ladder = 0.0;
            frontier_phi_53_77_ladder_1 = 0.0;
            frontier_phi_53_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2233 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2110, cbModelParam._m0[9u].z, fma(_2109, cbModelParam._m0[9u].y, _2108 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2110, cbModelParam._m0[10u].z, fma(_2109, cbModelParam._m0[10u].y, _2108 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2110, cbModelParam._m0[11u].z, fma(_2109, cbModelParam._m0[11u].y, _2108 * cbModelParam._m0[11u].x))), _1411);
            frontier_phi_53_77_ladder = _2233.x * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_1 = _2233.y * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_2 = _2233.z * cbModelParam._m0[1u].y;
        }
        _1491 = frontier_phi_53_77_ladder;
        _1493 = frontier_phi_53_77_ladder_1;
        _1495 = frontier_phi_53_77_ladder_2;
    }
    else
    {
        vec4 _1479 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_699, _700, _701), _1411);
        _1491 = _1479.x * cbModelParam._m0[1u].y;
        _1493 = _1479.y * cbModelParam._m0[1u].y;
        _1495 = _1479.z * cbModelParam._m0[1u].y;
    }
    float _1498 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1586;
    float _1588;
    float _1590;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1550 = fma(_731, cbModelParam._m0[21u].z, fma(_727, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _723)) + cbModelParam._m0[21u].w;
        float _1554 = fma(_731, cbModelParam._m0[22u].z, fma(_727, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _723)) + cbModelParam._m0[22u].w;
        float _1558 = fma(_731, cbModelParam._m0[23u].z, fma(_727, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _723)) + cbModelParam._m0[23u].w;
        float _1561 = fma(_701, cbModelParam._m0[21u].z, fma(_700, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _699));
        float _1564 = fma(_701, cbModelParam._m0[22u].z, fma(_700, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _699));
        float _1567 = fma(_701, cbModelParam._m0[23u].z, fma(_700, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _699));
        float _1803;
        if (_1561 > 0.0)
        {
            _1803 = abs((1.0 - _1550) / _1561);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_1561 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_1550 + 1.0) / _1561);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _1803 = frontier_phi_65_61_ladder;
        }
        float _2127;
        if (_1564 > 0.0)
        {
            _2127 = abs((1.0 - _1554) / _1564);
        }
        else
        {
            float frontier_phi_79_72_ladder;
            if (_1564 < 0.0)
            {
                frontier_phi_79_72_ladder = abs((_1554 + 1.0) / _1564);
            }
            else
            {
                frontier_phi_79_72_ladder = 5000.0;
            }
            _2127 = frontier_phi_79_72_ladder;
        }
        float _2293;
        if (_1567 > 0.0)
        {
            _2293 = abs((1.0 - _1558) / _1567);
        }
        else
        {
            float frontier_phi_93_88_ladder;
            if (_1567 < 0.0)
            {
                frontier_phi_93_88_ladder = abs((_1558 + 1.0) / _1567);
            }
            else
            {
                frontier_phi_93_88_ladder = 5000.0;
            }
            _2293 = frontier_phi_93_88_ladder;
        }
        float _2295 = isnan(_2127) ? _1803 : (isnan(_1803) ? _2127 : min(_1803, _2127));
        float _2296 = isnan(_2293) ? _2295 : (isnan(_2295) ? _2293 : min(_2295, _2293));
        float _2300 = (_2296 * _1561) + _1550;
        float _2301 = (_2296 * _1564) + _1554;
        float _2302 = (_2296 * _1567) + _1558;
        float _2303 = _2296 * 9.9999997473787516355514526367188e-05;
        float _2304 = (-1.0) - _2303;
        float _2306 = _2303 + 1.0;
        float frontier_phi_62_93_ladder;
        float frontier_phi_62_93_ladder_1;
        float frontier_phi_62_93_ladder_2;
        if ((_2302 > _2306) || ((_2302 < _2304) || ((_2301 > _2306) || ((_2301 < _2304) || ((_2300 < _2304) || (_2300 > _2306))))))
        {
            frontier_phi_62_93_ladder = 0.0;
            frontier_phi_62_93_ladder_1 = 0.0;
            frontier_phi_62_93_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2485 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2302, cbModelParam._m0[17u].z, fma(_2301, cbModelParam._m0[17u].y, _2300 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2302, cbModelParam._m0[18u].z, fma(_2301, cbModelParam._m0[18u].y, _2300 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2302, cbModelParam._m0[19u].z, fma(_2301, cbModelParam._m0[19u].y, _2300 * cbModelParam._m0[19u].x))), _1498);
            frontier_phi_62_93_ladder = _2485.z * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_1 = _2485.y * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_2 = _2485.x * cbModelParam._m0[1u].z;
        }
        _1586 = frontier_phi_62_93_ladder_2;
        _1588 = frontier_phi_62_93_ladder_1;
        _1590 = frontier_phi_62_93_ladder;
    }
    else
    {
        vec4 _1570 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_699, _700, _701), _1498);
        _1586 = _1570.x * cbModelParam._m0[1u].z;
        _1588 = _1570.y * cbModelParam._m0[1u].z;
        _1590 = _1570.z * cbModelParam._m0[1u].z;
    }
    float _1602 = _698 * 0.01200000010430812835693359375;
    float _1604 = _1602 * ((cbModelParam._m0[1u].w * (_1586 - _1491)) + _1491);
    float _1605 = _1602 * ((cbModelParam._m0[1u].w * (_1588 - _1493)) + _1493);
    float _1606 = _1602 * ((cbModelParam._m0[1u].w * (_1590 - _1495)) + _1495);
    float _1609 = fma(_1606, cbSceneParam._m0[89u].z, fma(_1605, cbSceneParam._m0[89u].y, _1604 * cbSceneParam._m0[89u].x));
    float _1612 = fma(_1606, cbSceneParam._m0[90u].z, fma(_1605, cbSceneParam._m0[90u].y, _1604 * cbSceneParam._m0[90u].x));
    float _1615 = fma(_1606, cbSceneParam._m0[91u].z, fma(_1605, cbSceneParam._m0[91u].y, _1604 * cbSceneParam._m0[91u].x));
    uvec4 _1626 = floatBitsToUint(cbInstanceData._m0[_672 + 5u]);
    uint _1628 = _1626.x * 14u;
    uint _1629 = _1628 + 13u;
    float _1634 = _698 + (-1.0);
    float _1638 = (cbLight._m0[_1629].x * _1634) + 1.0;
    float _1639 = (cbLight._m0[_1629].y * _1634) + 1.0;
    uint _1640 = _1628 + 5u;
    float _1646 = isnan(1.0) ? _1639 : (isnan(_1639) ? 1.0 : min(_1639, 1.0));
    uint _1650 = _1628 + 4u;
    float _1656 = isnan(1.0) ? _1638 : (isnan(_1638) ? 1.0 : min(_1638, 1.0));
    uint _1660 = _1628 | 1u;
    float _1671 = dot(vec3(cbLight._m0[_1628].xyz), vec3(0.0));
    float _1674 = dot(vec3(cbLight._m0[_1660].xyz), vec3(0.0));
    float _3409 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
    float _3420 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
    float _1679 = (isnan(1.0) ? _3409 : (isnan(_3409) ? 1.0 : min(_3409, 1.0))) * 0.3183098733425140380859375;
    float _1681 = (isnan(1.0) ? _3420 : (isnan(_3420) ? 1.0 : min(_3420, 1.0))) * 0.3183098733425140380859375;
    float _1688 = ((cbLight._m0[_1640].x * _1646) * _1681) + ((cbLight._m0[_1650].x * _1656) * _1679);
    float _1689 = ((_1646 * cbLight._m0[_1640].y) * _1681) + ((_1656 * cbLight._m0[_1650].y) * _1679);
    float _1690 = ((_1646 * cbLight._m0[_1640].z) * _1681) + ((_1656 * cbLight._m0[_1650].z) * _1679);
    uint _1691 = _1628 + 8u;
    float _1697 = cbLight._m0[_1628].x + _650;
    float _1698 = cbLight._m0[_1628].y + _651;
    float _1699 = cbLight._m0[_1628].z + _652;
    float _1703 = inversesqrt(dot(vec3(_1697, _1698, _1699), vec3(_1697, _1698, _1699)));
    float _1707 = dot(vec3(0.0), vec3(cbLight._m0[_1628].xyz));
    float _3431 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
    float _1710 = isnan(1.0) ? _3431 : (isnan(_3431) ? 1.0 : min(_3431, 1.0));
    float _1711 = dot(vec3(0.0), vec3(_650, _651, _652));
    float _3442 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
    float _1714 = isnan(1.0) ? _3442 : (isnan(_3442) ? 1.0 : min(_3442, 1.0));
    float _1715 = dot(vec3(cbLight._m0[_1628].xyz), vec3(_1697 * _1703, _1698 * _1703, _1699 * _1703));
    float _3453 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
    float _1726 = (exp2(log2(1.0 - (isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1732 = (0.5 / ((_1710 + 9.9999999392252902907785028219223e-09) + _1714)) * _1710;
    float _3464 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
    float _1734 = (isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0))) * 0.31831014156341552734375;
    uint _1745 = _1628 + 9u;
    float _1751 = cbLight._m0[_1660].x + _650;
    float _1752 = cbLight._m0[_1660].y + _651;
    float _1753 = cbLight._m0[_1660].z + _652;
    float _1757 = inversesqrt(dot(vec3(_1751, _1752, _1753), vec3(_1751, _1752, _1753)));
    float _1761 = dot(vec3(0.0), vec3(cbLight._m0[_1660].xyz));
    float _3475 = isnan(0.0) ? _1761 : (isnan(_1761) ? 0.0 : max(_1761, 0.0));
    float _1764 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
    float _1765 = dot(vec3(cbLight._m0[_1660].xyz), vec3(_1751 * _1757, _1752 * _1757, _1753 * _1757));
    float _3486 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
    float _1774 = (exp2(log2(1.0 - (isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1778 = (0.5 / ((_1764 + 9.9999999392252902907785028219223e-09) + _1714)) * _1764;
    float _3497 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
    float _1780 = (isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0))) * 0.31831014156341552734375;
    float _1790 = (((_1774 * cbLight._m0[_1745].x) * _1780) * _1646) + (((_1726 * cbLight._m0[_1691].x) * _1734) * _1656);
    float _1791 = (((_1774 * cbLight._m0[_1745].y) * _1780) * _1646) + (((_1726 * cbLight._m0[_1691].y) * _1734) * _1656);
    float _1792 = (((_1774 * cbLight._m0[_1745].z) * _1780) * _1646) + (((_1726 * cbLight._m0[_1691].z) * _1734) * _1656);
    float _1909;
    float _1911;
    float _1913;
    float _1915;
    float _1917;
    float _1919;
    if (_1626.y == 0u)
    {
        float _1848 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1849 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1848;
        float _1850 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1848;
        float _1851 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1848;
        uvec4 _1863 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1864 = _1863.x;
        uint _1875 = uint((float(_1863.y) * floor(float(uint(cbSceneParam._m0[85u].y * _659) / _1864))) + floor(float(uint(cbSceneParam._m0[85u].x * _658) / _1864)));
        float _1885 = (log2(_1851 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1886 = isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0));
        uint _1889 = uint(isnan(14.0) ? _1886 : (isnan(_1886) ? 14.0 : min(_1886, 14.0)));
        uvec4 _1895 = texelFetch(g_lightClusterGridBuffer, int(((_1889 << 2u) + (_1875 << 6u)) >> 2u));
        uint _1896 = _1895.x;
        uint _1897 = _1863.z;
        float _1987;
        float _1989;
        float _1991;
        float _1993;
        float _1995;
        float _1997;
        if (((((1u << ((_1897 >> 4u) & 15u)) + 4294967295u) & _1896) == 0u) || ((_1897 & 240u) == 0u))
        {
            _1987 = 0.0;
            _1989 = 0.0;
            _1991 = 0.0;
            _1993 = 0.0;
            _1995 = 0.0;
            _1997 = 0.0;
        }
        else
        {
            float _1988;
            float _1990;
            float _1992;
            float _1994;
            float _1996;
            float _1998;
            float _2161 = 0.0;
            float _2162 = 0.0;
            float _2163 = 0.0;
            float _2164 = 0.0;
            float _2165 = 0.0;
            float _2166 = 0.0;
            uint _2167 = 0u;
            uint _2176;
            bool _2177;
            for (;;)
            {
                _2176 = texelFetch(g_lightClassification, int((((_1889 << 5u) + (_1875 << 9u)) + (_2167 << 2u)) >> 2u)).x;
                _2177 = _2176 == 0u;
                float frontier_phi_90_pred;
                float frontier_phi_90_pred_1;
                float frontier_phi_90_pred_2;
                float frontier_phi_90_pred_3;
                float frontier_phi_90_pred_4;
                float frontier_phi_90_pred_5;
                if (_2177)
                {
                    frontier_phi_90_pred = _2166;
                    frontier_phi_90_pred_1 = _2161;
                    frontier_phi_90_pred_2 = _2162;
                    frontier_phi_90_pred_3 = _2163;
                    frontier_phi_90_pred_4 = _2164;
                    frontier_phi_90_pred_5 = _2165;
                }
                else
                {
                    float _2336;
                    float _2337;
                    float _2338;
                    float _2339;
                    float _2340;
                    float _2341;
                    uint _2342;
                    _2336 = _2161;
                    _2337 = _2162;
                    _2338 = _2163;
                    _2339 = _2164;
                    _2340 = _2165;
                    _2341 = _2166;
                    _2342 = _2176;
                    float _2242;
                    float _2243;
                    float _2244;
                    float _2245;
                    float _2246;
                    float _2247;
                    for (;;)
                    {
                        uint _2346 = uint(findLSB(_2342)) + (_2167 << 5u);
                        uint _2343 = (_2342 + 4294967295u) & _2342;
                        uint _2348 = _2346 * 48u;
                        vec4 _2362 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2348)).x, texelFetch(g_PointLightRenderingBuffer, int(_2348 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2348 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2348 + 3u)).x));
                        uint _2368 = (_2346 * 48u) + 4u;
                        vec4 _2381 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2368)).x, texelFetch(g_PointLightRenderingBuffer, int(_2368 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2368 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2368 + 3u)).x));
                        uint _2387 = (_2346 * 48u) + 8u;
                        vec3 _2398 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2387)).x, texelFetch(g_PointLightRenderingBuffer, int(_2387 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2387 + 2u)).x));
                        float _2402 = _2362.x - _1849;
                        float _2403 = _2362.y - _1850;
                        float _2404 = _2362.z - _1851;
                        float _2405 = dot(vec3(_2402, _2403, _2404), vec3(_2402, _2403, _2404));
                        float _2408 = inversesqrt(_2405);
                        float _2417 = 1.0 - (_2405 * _2362.w);
                        float _3518 = isnan(0.0) ? _2417 : (isnan(_2417) ? 0.0 : max(_2417, 0.0));
                        float _2418 = isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0));
                        float _2419 = sqrt(_2405) * _2381.w;
                        float _2422 = 1.39999997615814208984375 / (_2419 + 1.39999997615814208984375);
                        float _2423 = _2422 * _2422;
                        float _2426 = ((1.0 - _2423) * dot(vec3(0.0), vec3(_2408 * _2402, _2408 * _2403, _2408 * _2404))) + _2423;
                        float _2429 = _2419 * _2419;
                        float _2433 = ((isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0))) * _2418) / ((_2429 * 0.699999988079071044921875) + 1.0);
                        float _2437 = (-0.0) - _1849;
                        float _2438 = (-0.0) - _1850;
                        float _2439 = (-0.0) - _1851;
                        float _2443 = inversesqrt(dot(vec3(_2437, _2438, _2439), vec3(_2437, _2438, _2439)));
                        float _2447 = dot(vec3(0.0), vec3(_2443 * _2437, _2443 * _2438, _2443 * _2439));
                        float _3534 = isnan(0.0) ? _2447 : (isnan(_2447) ? 0.0 : max(_2447, 0.0));
                        float _3545 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
                        float _2451 = isnan(1.0) ? _3545 : (isnan(_3545) ? 1.0 : min(_3545, 1.0));
                        float _2455 = (0.5 / (((isnan(1.0) ? _3534 : (isnan(_3534) ? 1.0 : min(_3534, 1.0))) + 9.9999999392252902907785028219223e-09) + _2451)) * _2451;
                        float _3556 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
                        float _2464 = (((isnan(1.0) ? _3556 : (isnan(_3556) ? 1.0 : min(_3556, 1.0))) * 3.1415927410125732421875) / ((_2429 * 2.1991131305694580078125) + 3.141590118408203125)) * _2418;
                        _2245 = (_2433 * _2381.x) + _2339;
                        _2246 = (_2433 * _2381.y) + _2340;
                        _2247 = (_2433 * _2381.z) + _2341;
                        _2242 = (_2464 * _2398.x) + _2336;
                        _2243 = (_2464 * _2398.y) + _2337;
                        _2244 = (_2464 * _2398.z) + _2338;
                        if (_2343 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2336 = _2242;
                            _2337 = _2243;
                            _2338 = _2244;
                            _2339 = _2245;
                            _2340 = _2246;
                            _2341 = _2247;
                            _2342 = _2343;
                        }
                    }
                    frontier_phi_90_pred = _2247;
                    frontier_phi_90_pred_1 = _2242;
                    frontier_phi_90_pred_2 = _2243;
                    frontier_phi_90_pred_3 = _2244;
                    frontier_phi_90_pred_4 = _2245;
                    frontier_phi_90_pred_5 = _2246;
                }
                _1998 = frontier_phi_90_pred;
                _1988 = frontier_phi_90_pred_1;
                _1990 = frontier_phi_90_pred_2;
                _1992 = frontier_phi_90_pred_3;
                _1994 = frontier_phi_90_pred_4;
                _1996 = frontier_phi_90_pred_5;
                uint _2168 = _2167 + 1u;
                if (_2168 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2161 = _1988;
                    _2162 = _1990;
                    _2163 = _1992;
                    _2164 = _1994;
                    _2165 = _1996;
                    _2166 = _1998;
                    _2167 = _2168;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1987 = _1988;
            _1989 = _1990;
            _1991 = _1992;
            _1993 = _1994;
            _1995 = _1996;
            _1997 = _1998;
        }
        uvec4 _2001 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2002 = _2001.z;
        uint _2004 = (_2002 >> 8u) & 15u;
        float _2132;
        float _2134;
        float _2136;
        float _2138;
        float _2140;
        float _2142;
        if (((4294967295u << _2004) & _1896) == 0u)
        {
            _2132 = _1987;
            _2134 = _1989;
            _2136 = _1991;
            _2138 = _1993;
            _2140 = _1995;
            _2142 = _1997;
        }
        else
        {
            float _2157 = inversesqrt(dot(vec3(_1849, _1850, _1851), vec3(_1849, _1850, _1851)));
            float frontier_phi_81_82_ladder;
            float frontier_phi_81_82_ladder_1;
            float frontier_phi_81_82_ladder_2;
            float frontier_phi_81_82_ladder_3;
            float frontier_phi_81_82_ladder_4;
            float frontier_phi_81_82_ladder_5;
            if (_2004 < ((_2002 >> 12u) & 15u))
            {
                float _2133;
                float _2135;
                float _2137;
                float _2139;
                float _2141;
                float _2143;
                float _2319 = _1987;
                float _2320 = _1989;
                float _2321 = _1991;
                float _2322 = _1993;
                float _2323 = _1995;
                float _2324 = _1997;
                uint _2325 = _2004;
                uint _2334;
                bool _2335;
                for (;;)
                {
                    _2334 = texelFetch(g_lightClassification, int((((_1889 << 5u) + (_1875 << 9u)) + (_2325 << 2u)) >> 2u)).x;
                    _2335 = _2334 == 0u;
                    float frontier_phi_99_pred;
                    float frontier_phi_99_pred_1;
                    float frontier_phi_99_pred_2;
                    float frontier_phi_99_pred_3;
                    float frontier_phi_99_pred_4;
                    float frontier_phi_99_pred_5;
                    if (_2335)
                    {
                        frontier_phi_99_pred = _2322;
                        frontier_phi_99_pred_1 = _2321;
                        frontier_phi_99_pred_2 = _2320;
                        frontier_phi_99_pred_3 = _2319;
                        frontier_phi_99_pred_4 = _2324;
                        frontier_phi_99_pred_5 = _2323;
                    }
                    else
                    {
                        float _2490;
                        float _2491;
                        float _2492;
                        float _2493;
                        float _2494;
                        float _2495;
                        float _2739;
                        float _2740;
                        float _2741;
                        float _2742;
                        float _2743;
                        float _2744;
                        float _2503 = _2319;
                        float _2504 = _2320;
                        float _2505 = _2321;
                        float _2506 = _2322;
                        float _2507 = _2323;
                        float _2508 = _2324;
                        uint _2509 = _2334;
                        uint _2510;
                        vec4 _2535;
                        float _2536;
                        vec4 _2551;
                        vec3 _2563;
                        vec4 _2578;
                        vec4 _2593;
                        float _2639;
                        bool _2640;
                        for (;;)
                        {
                            uint _2520 = ((_2325 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2509));
                            _2510 = (_2509 + 4294967295u) & _2509;
                            uint _2522 = _2520 * 40u;
                            _2535 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2522)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 3u)).x));
                            _2536 = _2535.w;
                            uint _2538 = (_2520 * 40u) + 4u;
                            _2551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2538 + 3u)).x));
                            uint _2553 = (_2520 * 40u) + 8u;
                            _2563 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2553)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2553 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2553 + 2u)).x));
                            uint _2565 = (_2520 * 40u) + 16u;
                            _2578 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2565)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2565 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2565 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2565 + 3u)).x));
                            uint _2580 = (_2520 * 40u) + 20u;
                            _2593 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2580)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2580 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2580 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2580 + 3u)).x));
                            uint _2595 = (_2520 * 40u) + 24u;
                            vec4 _2608 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2595)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 3u)).x));
                            uint _2614 = (_2520 * 40u) + 28u;
                            vec4 _2627 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2614)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2614 + 3u)).x));
                            _2639 = fma(_1851, _2627.z, fma(_1850, _2627.y, _2627.x * _1849)) + _2627.w;
                            _2640 = !((fma(_1851, _2608.z, fma(_1850, _2608.y, _2608.x * _1849)) + _2608.w) <= 0.0);
                            float frontier_phi_105_pred;
                            float frontier_phi_105_pred_1;
                            float frontier_phi_105_pred_2;
                            float frontier_phi_105_pred_3;
                            float frontier_phi_105_pred_4;
                            float frontier_phi_105_pred_5;
                            if (_2640)
                            {
                                float _2667 = _2535.x - _1849;
                                float _2668 = _2535.y - _1850;
                                float _2669 = _2535.z - _1851;
                                float _2670 = dot(vec3(_2667, _2668, _2669), vec3(_2667, _2668, _2669));
                                float _2673 = inversesqrt(_2670);
                                float _2674 = _2673 * _2667;
                                float _2675 = _2673 * _2668;
                                float _2676 = _2673 * _2669;
                                float _2680 = 1.0 - (_2670 / (_2536 * _2536));
                                float _3567 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
                                float _2681 = isnan(1.0) ? _3567 : (isnan(_3567) ? 1.0 : min(_3567, 1.0));
                                float _2685 = sqrt(_2670) * _2551.w;
                                float _2687 = 1.39999997615814208984375 / (_2685 + 1.39999997615814208984375);
                                float _2688 = _2687 * _2687;
                                float _2689 = 1.0 - _2688;
                                float _2691 = (_2689 * dot(vec3(_2674, _2675, _2676), vec3(0.0))) + _2688;
                                float _2694 = _2685 * _2685;
                                float _2698 = (fma(_1851, _2578.z, fma(_1850, _2578.y, _2578.x * _1849)) + _2578.w) / _2639;
                                float _2699 = (fma(_1851, _2593.z, fma(_1850, _2593.y, _2593.x * _1849)) + _2593.w) / _2639;
                                float _2703 = 1.0 - dot(vec2(_2698, _2699), vec2(_2698, _2699));
                                float _3583 = isnan(0.0) ? _2703 : (isnan(_2703) ? 0.0 : max(_2703, 0.0));
                                float _2704 = isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0));
                                float _2705 = _2704 * (((isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0))) * _2681) / ((_2694 * 0.699999988079071044921875) + 1.0));
                                float _2715 = dot(vec3(0.0), vec3((-0.0) - (_1849 * _2157), (-0.0) - (_1850 * _2157), (-0.0) - (_1851 * _2157)));
                                float _3594 = isnan(0.0) ? _2715 : (isnan(_2715) ? 0.0 : max(_2715, 0.0));
                                float _2723 = (_2689 * dot(vec3(0.0), vec3(_2674, _2675, _2676))) + _2688;
                                float _3605 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0));
                                float _2724 = isnan(1.0) ? _3605 : (isnan(_3605) ? 1.0 : min(_3605, 1.0));
                                float _2728 = (0.5 / (((isnan(1.0) ? _3594 : (isnan(_3594) ? 1.0 : min(_3594, 1.0))) + 9.9999999392252902907785028219223e-09) + _2724)) * _2724;
                                float _3616 = isnan(0.0) ? _2728 : (isnan(_2728) ? 0.0 : max(_2728, 0.0));
                                float _2735 = (_2704 * _2681) * (((isnan(1.0) ? _3616 : (isnan(_3616) ? 1.0 : min(_3616, 1.0))) * 3.1415927410125732421875) / ((_2694 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_105_pred = _2705 * _2551.z;
                                frontier_phi_105_pred_1 = _2735 * _2563.x;
                                frontier_phi_105_pred_2 = _2735 * _2563.y;
                                frontier_phi_105_pred_3 = _2735 * _2563.z;
                                frontier_phi_105_pred_4 = _2705 * _2551.x;
                                frontier_phi_105_pred_5 = _2705 * _2551.y;
                            }
                            else
                            {
                                frontier_phi_105_pred = 0.0;
                                frontier_phi_105_pred_1 = 0.0;
                                frontier_phi_105_pred_2 = 0.0;
                                frontier_phi_105_pred_3 = 0.0;
                                frontier_phi_105_pred_4 = 0.0;
                                frontier_phi_105_pred_5 = 0.0;
                            }
                            _2744 = frontier_phi_105_pred;
                            _2739 = frontier_phi_105_pred_1;
                            _2740 = frontier_phi_105_pred_2;
                            _2741 = frontier_phi_105_pred_3;
                            _2742 = frontier_phi_105_pred_4;
                            _2743 = frontier_phi_105_pred_5;
                            _2493 = _2742 + _2506;
                            _2494 = _2743 + _2507;
                            _2495 = _2744 + _2508;
                            _2490 = _2739 + _2503;
                            _2491 = _2740 + _2504;
                            _2492 = _2741 + _2505;
                            if (_2510 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2503 = _2490;
                                _2504 = _2491;
                                _2505 = _2492;
                                _2506 = _2493;
                                _2507 = _2494;
                                _2508 = _2495;
                                _2509 = _2510;
                                continue;
                            }
                        }
                        frontier_phi_99_pred = _2493;
                        frontier_phi_99_pred_1 = _2492;
                        frontier_phi_99_pred_2 = _2491;
                        frontier_phi_99_pred_3 = _2490;
                        frontier_phi_99_pred_4 = _2495;
                        frontier_phi_99_pred_5 = _2494;
                    }
                    _2139 = frontier_phi_99_pred;
                    _2137 = frontier_phi_99_pred_1;
                    _2135 = frontier_phi_99_pred_2;
                    _2133 = frontier_phi_99_pred_3;
                    _2143 = frontier_phi_99_pred_4;
                    _2141 = frontier_phi_99_pred_5;
                    uint _2326 = _2325 + 1u;
                    if (_2326 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2319 = _2133;
                        _2320 = _2135;
                        _2321 = _2137;
                        _2322 = _2139;
                        _2323 = _2141;
                        _2324 = _2143;
                        _2325 = _2326;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_81_82_ladder = _2143;
                frontier_phi_81_82_ladder_1 = _2139;
                frontier_phi_81_82_ladder_2 = _2137;
                frontier_phi_81_82_ladder_3 = _2135;
                frontier_phi_81_82_ladder_4 = _2133;
                frontier_phi_81_82_ladder_5 = _2141;
            }
            else
            {
                frontier_phi_81_82_ladder = _1997;
                frontier_phi_81_82_ladder_1 = _1993;
                frontier_phi_81_82_ladder_2 = _1991;
                frontier_phi_81_82_ladder_3 = _1989;
                frontier_phi_81_82_ladder_4 = _1987;
                frontier_phi_81_82_ladder_5 = _1995;
            }
            _2132 = frontier_phi_81_82_ladder_4;
            _2134 = frontier_phi_81_82_ladder_3;
            _2136 = frontier_phi_81_82_ladder_2;
            _2138 = frontier_phi_81_82_ladder_1;
            _2140 = frontier_phi_81_82_ladder_5;
            _2142 = frontier_phi_81_82_ladder;
        }
        float _2147 = isnan(1.0) ? _698 : (isnan(_698) ? 1.0 : min(_698, 1.0));
        _1909 = (_2147 * _2138) + _1688;
        _1911 = (_2147 * _2140) + _1689;
        _1913 = (_2147 * _2142) + _1690;
        _1915 = ((_2132 * 0.039999999105930328369140625) * _2147) + _1790;
        _1917 = ((_2134 * 0.039999999105930328369140625) * _2147) + _1791;
        _1919 = ((_2136 * 0.039999999105930328369140625) * _2147) + _1792;
    }
    else
    {
        _1909 = _1688;
        _1911 = _1689;
        _1913 = _1690;
        _1915 = _1790;
        _1917 = _1791;
        _1919 = _1792;
    }
    float _3632 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _3643 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _3654 = isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0));
    float _1936 = ((isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0))) * (_1909 + ((isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0))) * _698))) + ((_1915 + ((isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))) * _1402)) * cbPerFrame._m0[3u].x);
    float _1937 = ((isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0))) * (_1911 + ((isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0))) * _698))) + ((_1917 + ((isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))) * _1402)) * cbPerFrame._m0[3u].x);
    float _1938 = ((isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0))) * (_1913 + ((isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0))) * _698))) + ((_1919 + ((isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0))) * _1402)) * cbPerFrame._m0[3u].x);
    uint _1942 = _672 + 6u;
    float _1950 = _658 / cbSceneParam._m0[86u].x;
    float _1951 = _659 / cbSceneParam._m0[86u].y;
    vec4 _1965 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1950, _1951, (log2((isnan(cbSceneParam._m0[77u].w) ? _645 : (isnan(_645) ? cbSceneParam._m0[77u].w : min(_645, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1967 = _1965.x;
    float _1968 = _1965.y;
    float _1969 = _1965.z;
    float _1970 = _1965.w;
    float _2050;
    float _2052;
    float _2054;
    float _2056;
    if (_645 > cbSceneParam._m0[78u].w)
    {
        float _2012 = isnan(_645) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _645 : min(cbSceneParam._m0[80u].w, _645));
        float _2013 = _2012 / _645;
        float _2024 = _2013 * _253;
        float _2025 = _254 * _2013;
        float _2026 = (-0.0) - _2025;
        float _2027 = _2013 * _255;
        float _2029 = (cbSceneParam._m0[77u].w * _2026) / _2012;
        float _2030 = _2029 + cbSceneParam._m0[79u].w;
        float _2031 = cbSceneParam._m0[79u].w - _2025;
        float _2037 = sqrt(((_2024 * _2024) + (_2025 * _2025)) + (_2027 * _2027));
        float _2040 = (1.0 - (cbSceneParam._m0[77u].w / _2012)) * _2037;
        float _2046 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2048 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2255;
        if (abs((_2026 - _2029) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2255 = ((((_2030 > 0.0) ? exp2(_2046 * _2030) : (2.0 - exp2(_2048 * _2030))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2040;
        }
        else
        {
            float _2190 = 1.0 / cbSceneParam._m0[80u].x;
            float _2191 = isnan(_2031) ? _2030 : (isnan(_2030) ? _2031 : max(_2030, _2031));
            float _2192 = isnan(_2031) ? _2030 : (isnan(_2030) ? _2031 : min(_2030, _2031));
            float _2201 = isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : min(_2191, 0.0));
            float _2202 = isnan(0.0) ? _2192 : (isnan(_2192) ? 0.0 : min(_2192, 0.0));
            _2255 = ((abs(_2037 / _2026) * cbSceneParam._m0[80u].y) * ((((_2201 - _2202) * 2.0) - ((exp2(_2046 * (isnan(0.0) ? _2191 : (isnan(_2191) ? 0.0 : max(_2191, 0.0)))) - exp2(_2046 * (isnan(0.0) ? _2192 : (isnan(_2192) ? 0.0 : max(_2192, 0.0))))) * _2190)) - ((exp2(_2048 * _2201) - exp2(_2048 * _2202)) * _2190))) + (_2040 * cbSceneParam._m0[80u].z);
        }
        vec4 _2257 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1950, _1951, 1.0), 0.0);
        float _2266 = exp2((_2255 * (-1.44269502162933349609375)) * (1.0 - _2257.w));
        float _2267 = log2(_2266);
        float _2283 = log2(_1970);
        _2050 = (exp2(_2283 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2267 * cbSceneParam._m0[78u].x)) * _2257.x) / cbSceneParam._m0[78u].x)) + _1967;
        _2052 = (exp2(_2283 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2267 * cbSceneParam._m0[78u].y)) * _2257.y) / cbSceneParam._m0[78u].y)) + _1968;
        _2054 = (exp2(_2283 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2267 * cbSceneParam._m0[78u].z)) * _2257.z) / cbSceneParam._m0[78u].z)) + _1969;
        _2056 = _2266 * _1970;
    }
    else
    {
        _2050 = _1967;
        _2052 = _1968;
        _2054 = _1969;
        _2056 = _1970;
    }
    float _2068 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2069 = _2068 == 3.0;
    float _2071 = log2(_2056);
    float _2078 = exp2(_2071 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0)));
    float _2079 = exp2(_2071 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0)));
    float _2080 = exp2(_2071 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0)));
    float _2089 = (_2068 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2089 * (_2069 ? _2078 : (_2078 + (cbSceneParam._m0[72u].w * _2050)));
    SV_Target.y = _2089 * (_2069 ? _2079 : (_2079 + (cbSceneParam._m0[72u].w * _2052)));
    SV_Target.z = _2089 * (_2069 ? _2080 : (_2080 + (cbSceneParam._m0[72u].w * _2054)));
    SV_Target.w = cbInstanceData._m0[_1942].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1942].w;
}


