#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D M_Interior_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _159 = _158 * _151;
    float _160 = _158 * _152;
    float _161 = _158 * _153;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _173 = _172 * TANGENT.x;
    float _174 = _172 * TANGENT.y;
    float _175 = _172 * TANGENT.z;
    float _220 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _230 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _220);
    float _231 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _220);
    float _232 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _220);
    vec4 _251 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _257 = _251.w;
    float _270 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _257) + cbMtdParam._m0[11u].x) * _251.x;
    float _272 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _257) + cbMtdParam._m0[11u].y) * _251.y;
    float _274 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _257) + cbMtdParam._m0[11u].z) * _251.z;
    float _300 = cbMtdParam._m0[22u].y + _230;
    float _301 = cbMtdParam._m0[22u].z + _231;
    float _302 = cbMtdParam._m0[22u].w + _232;
    float _316 = (-0.0) - dot(vec3(_300, _301, _302), vec3(_159, _160, _161));
    float _317 = (-0.0) - dot(vec3(_300, _301, _302), vec3(_173, _174, _175));
    float _318 = (-0.0) - dot(vec3(_300, _301, _302), vec3((-0.0) - _166, (-0.0) - _167, (-0.0) - _168));
    float _322 = inversesqrt(dot(vec3(_316, _317, _318), vec3(_316, _317, _318)));
    float _323 = _322 * _318;
    float _325 = (cbMtdParam._m0[19u].x * _316) * _322;
    float _327 = (cbMtdParam._m0[18u].w * _317) * _322;
    float _328 = fract(TEXCOORD.x);
    float _329 = fract(TEXCOORD.y);
    float _335;
    if (_325 > 0.0)
    {
        _335 = (1.0 - _328) / _325;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_325 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _328) / _325;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _335 = frontier_phi_3_2_ladder;
    }
    float _343;
    if (_327 > 0.0)
    {
        _343 = (1.0 - _329) / _327;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_327 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _329) / _327;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _343 = frontier_phi_7_6_ladder;
    }
    bool _345 = _323 > 0.0;
    float _347 = _345 ? (cbMtdParam._m0[15u].x / _323) : 5000.0;
    float _348 = isnan(_343) ? _335 : (isnan(_335) ? _343 : min(_335, _343));
    float _349 = isnan(_347) ? _348 : (isnan(_348) ? _347 : min(_348, _347));
    float _353 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _354 = _328 + (-0.5);
    float _357 = _329 + (-0.5);
    float _360 = ((_349 * _323) + _353) / _353;
    vec4 _385 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_354 + (_349 * _325)) / _360) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_357 + (_349 * _327)) / _360) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _387 = _385.x;
    float _388 = _385.y;
    float _389 = _385.z;
    float _401 = (_387 - (_387 * _257)) * cbMtdParam._m0[9u].x;
    float _402 = (_388 - (_388 * _257)) * cbMtdParam._m0[9u].y;
    float _403 = cbMtdParam._m0[9u].z * (_389 - (_389 * _257));
    float _425 = (cbMtdParam._m0[21u].x * _316) * _322;
    float _427 = (cbMtdParam._m0[20u].w * _317) * _322;
    bool _428 = _425 > 0.0;
    float _433;
    if (_428)
    {
        _433 = (1.0 - _328) / _425;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_425 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _328) / _425;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _433 = frontier_phi_11_10_ladder;
    }
    bool _435 = _427 > 0.0;
    float _440;
    if (_435)
    {
        _440 = (1.0 - _329) / _427;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_427 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _329) / _427;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _440 = frontier_phi_15_14_ladder;
    }
    float _443 = _345 ? (cbMtdParam._m0[16u].z / _323) : 5000.0;
    float _444 = isnan(_440) ? _433 : (isnan(_433) ? _440 : min(_433, _440));
    float _445 = isnan(_443) ? _444 : (isnan(_444) ? _443 : min(_444, _443));
    float _449 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _453 = ((_445 * _323) + _449) / _449;
    float _458 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _460 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _476 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_354 + (_445 * _425)) / _453) + 0.5) + _458) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_357 + (_445 * _427)) / _453) + 0.5) + _460) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _481 = _476.x * cbMtdParam._m0[10u].x;
    float _482 = _476.y * cbMtdParam._m0[10u].y;
    float _483 = _476.z * cbMtdParam._m0[10u].z;
    float _491;
    if (_428)
    {
        _491 = (1.0 - _328) / _425;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_425 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _328) / _425;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _491 = frontier_phi_19_18_ladder;
    }
    float _497;
    if (_435)
    {
        _497 = (1.0 - _329) / _427;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_427 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _329) / _427;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _497 = frontier_phi_23_22_ladder;
    }
    float _499 = isnan(_497) ? _491 : (isnan(_491) ? _497 : min(_491, _497));
    float _500 = isnan(_443) ? _499 : (isnan(_499) ? _443 : min(_499, _443));
    float _507 = ((_500 * _323) + _449) / _449;
    vec4 _521 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_354 + (_500 * _425)) / _507) + 0.5) + _458) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_357 + (_500 * _427)) / _507) + 0.5) + _460) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _523 = _521.w;
    float _525 = _523 - (_523 * _257);
    float _535 = (_525 * ((_481 - _401) - (_481 * _257))) + _401;
    float _536 = (_525 * ((_482 - _402) - (_482 * _257))) + _402;
    float _537 = (_525 * ((_483 - _403) - (_483 * _257))) + _403;
    float _552 = (cbMtdParam._m0[21u].z * _316) * _322;
    float _554 = (cbMtdParam._m0[21u].y * _317) * _322;
    bool _555 = _552 > 0.0;
    float _560;
    if (_555)
    {
        _560 = (1.0 - _328) / _552;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_552 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _328) / _552;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _560 = frontier_phi_27_26_ladder;
    }
    bool _562 = _554 > 0.0;
    float _567;
    if (_562)
    {
        _567 = (1.0 - _329) / _554;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_554 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _329) / _554;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _567 = frontier_phi_31_30_ladder;
    }
    float _570 = _345 ? (cbMtdParam._m0[18u].x / _323) : 5000.0;
    float _571 = isnan(_567) ? _560 : (isnan(_560) ? _567 : min(_560, _567));
    float _572 = isnan(_570) ? _571 : (isnan(_571) ? _570 : min(_571, _570));
    float _576 = cbMtdParam._m0[18u].x * cbMtdParam._m0[15u].z;
    float _580 = ((_572 * _323) + _576) / _576;
    float _585 = cbMtdParam._m0[17u].w - cbMtdParam._m0[21u].w * trunc(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    float _587 = floor(cbMtdParam._m0[17u].w / cbMtdParam._m0[21u].w);
    vec4 _604 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_354 + (_572 * _552)) / _580) + 0.5) + _585) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_357 + (_572 * _554)) / _580) + 0.5) + _587) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _609 = _604.x * cbMtdParam._m0[14u].x;
    float _610 = _604.y * cbMtdParam._m0[14u].y;
    float _611 = _604.z * cbMtdParam._m0[14u].z;
    float _619;
    if (_555)
    {
        _619 = (1.0 - _328) / _552;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_552 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _328) / _552;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _619 = frontier_phi_35_34_ladder;
    }
    float _625;
    if (_562)
    {
        _625 = (1.0 - _329) / _554;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_554 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _329) / _554;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _625 = frontier_phi_39_38_ladder;
    }
    float _627 = isnan(_625) ? _619 : (isnan(_619) ? _625 : min(_619, _625));
    float _628 = isnan(_570) ? _627 : (isnan(_627) ? _570 : min(_627, _570));
    float _635 = ((_628 * _323) + _576) / _576;
    vec4 _649 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_354 + (_628 * _552)) / _635) + 0.5) + _585) / cbMtdParam._m0[21u].w)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_357 + (_628 * _554)) / _635) + 0.5) + _587) / cbMtdParam._m0[22u].x)) + cbTextureTilingScale._m0[7u].w));
    float _651 = _649.w;
    float _653 = _651 - (_651 * _257);
    float _663 = (_653 * ((_609 - _535) - (_609 * _257))) + _535;
    float _664 = (_653 * ((_610 - _536) - (_610 * _257))) + _536;
    float _665 = (_653 * ((_611 - _537) - (_611 * _257))) + _537;
    vec4 _677 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _679 = _677.x;
    vec4 _691 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _699 = (_691.x * 2.0) + (-1.0);
    float _701 = (_691.y * 2.0) + (-1.0);
    float _702 = dot(vec2(_699, _701), vec2(_699, _701));
    float _1029 = isnan(0.0) ? _702 : (isnan(_702) ? 0.0 : max(_702, 0.0));
    float _707 = sqrt(1.0 - (isnan(1.0) ? _1029 : (isnan(_1029) ? 1.0 : min(_1029, 1.0))));
    float _708 = _691.z * _257;
    float _711 = fma(_707, _166, fma(_701, _173, _699 * _159));
    float _714 = fma(_707, _167, fma(_701, _174, _699 * _160));
    float _717 = fma(_707, _168, fma(_701, _175, _699 * _161));
    float _721 = inversesqrt(dot(vec3(_711, _714, _717), vec3(_711, _714, _717)));
    float _1040 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _1051 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _723 = isnan(1.0) ? _1051 : (isnan(_1051) ? 1.0 : min(_1051, 1.0));
    float _1062 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _724 = isnan(1.0) ? _1062 : (isnan(_1062) ? 1.0 : min(_1062, 1.0));
    float _1073 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _725 = isnan(1.0) ? _1073 : (isnan(_1073) ? 1.0 : min(_1073, 1.0));
    float _1084 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    uint _728 = uint(roundEven(NORMAL.w));
    vec4 _733 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _735 = _733.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _800 = sqrt(((_230 * _230) + (_231 * _231)) + (_232 * _232));
        float _807 = (cbMatDynParam._m0[5u].x * _800) + cbMatDynParam._m0[5u].y;
        float _1095 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _808 = isnan(1.0) ? _1095 : (isnan(_1095) ? 1.0 : min(_1095, 1.0));
        float _812 = (cbMatDynParam._m0[5u].z * _800) + cbMatDynParam._m0[5u].w;
        float _1106 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1106 : (isnan(_1106) ? 1.0 : min(_1106, 1.0))) - _808)) + _808) < ((_735 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _839;
    uint _756;
    vec4 _761;
    float _768;
    float _769;
    float _770;
    float _771;
    float _772;
    float _773;
    float _777;
    vec4 _780;
    float _782;
    float _783;
    bool _794;
    for (;;)
    {
        _756 = _728 * 13u;
        _761 = cbInstanceData._m0[(_756 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _765 = (cbMtdParam._m0[0u].x * _723) * _761.x;
        float _766 = (cbMtdParam._m0[0u].y * _724) * _761.y;
        float _767 = (cbMtdParam._m0[0u].z * _725) * _761.z;
        float _1117 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        _768 = isnan(1.0) ? _1117 : (isnan(_1117) ? 1.0 : min(_1117, 1.0));
        float _1128 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
        _769 = isnan(1.0) ? _1128 : (isnan(_1128) ? 1.0 : min(_1128, 1.0));
        float _1139 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
        _770 = isnan(1.0) ? _1139 : (isnan(_1139) ? 1.0 : min(_1139, 1.0));
        _771 = _761.x * _663;
        _772 = _761.y * _664;
        _773 = _761.z * _665;
        _777 = cbInstanceData._m0[_756 + 6u].w;
        float _778 = _735 + (-0.5);
        _780 = cbMtdParam._m0[1u];
        _782 = _780.y * _778;
        _783 = _778 * 0.999000012874603271484375;
        _794 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_794)
        {
            if ((cbInstanceData._m0[_756 + 7u].x + _783) < 0.5)
            {
                _839 = true;
                break;
            }
        }
        if ((_761.w < 1.0) && ((_761.w + _783) < 0.5))
        {
            _839 = true;
            break;
        }
        if ((_782 + 1.0) < _780.x)
        {
            _839 = true;
            break;
        }
        _839 = false;
        break;
    }
    if (_839)
    {
        discard_state = true;
    }
    bool _872 = cbMtdParam._m0[1u].z != 0.0;
    float _873 = _872 ? _777 : 0.0;
    SV_Target.x = ((_711 * 0.5) * _721) + 0.500488758087158203125;
    SV_Target.y = ((_714 * 0.5) * _721) + 0.500488758087158203125;
    SV_Target.z = ((_717 * 0.5) * _721) + 0.500488758087158203125;
    SV_Target.w = _873;
    SV_Target_1.x = isnan(1.0) ? _1084 : (isnan(_1084) ? 1.0 : min(_1084, 1.0));
    SV_Target_1.y = isnan(1.0) ? _1040 : (isnan(_1040) ? 1.0 : min(_1040, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _872 ? _777 : TEXCOORD.z;
    SV_Target_2.x = _768;
    SV_Target_2.y = _769;
    SV_Target_2.z = _770;
    SV_Target_2.w = _872 ? _777 : (float(floatBitsToUint(cbInstanceData._m0[_756 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _873;
    SV_Target_4.x = _771 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _772 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _773 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _873;
    discard_exit();
}


