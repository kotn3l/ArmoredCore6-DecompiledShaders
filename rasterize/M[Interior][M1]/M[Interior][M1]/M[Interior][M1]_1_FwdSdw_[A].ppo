#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _637;
uint _2107;
uint _2108;
uint _2109;
uint _2332;
uint _2333;
uint _2334;
float _2566;
float _2567;
float _2568;
float _2569;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _244 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _254 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _244);
    float _255 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _244);
    float _256 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _244);
    float _282 = cbMtdParam._m0[22u].y + _254;
    float _283 = cbMtdParam._m0[22u].z + _255;
    float _284 = cbMtdParam._m0[22u].w + _256;
    float _301 = (-0.0) - dot(vec3(_282, _283, _284), vec3(_185 * _178, _185 * _179, _185 * _180));
    float _302 = (-0.0) - dot(vec3(_282, _283, _284), vec3(_196 * TANGENT.x, _196 * TANGENT.y, _196 * TANGENT.z));
    float _303 = (-0.0) - dot(vec3(_282, _283, _284), vec3((-0.0) - (NORMAL.x * _192), (-0.0) - (NORMAL.y * _192), (-0.0) - (NORMAL.z * _192)));
    float _307 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _308 = _307 * _303;
    float _310 = (cbMtdParam._m0[19u].x * _301) * _307;
    float _312 = (cbMtdParam._m0[18u].w * _302) * _307;
    float _313 = fract(TEXCOORD.x);
    float _314 = fract(TEXCOORD.y);
    float _320;
    if (_310 > 0.0)
    {
        _320 = (1.0 - _313) / _310;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_310 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _313) / _310;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _320 = frontier_phi_3_2_ladder;
    }
    float _328;
    if (_312 > 0.0)
    {
        _328 = (1.0 - _314) / _312;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_312 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _314) / _312;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _328 = frontier_phi_7_6_ladder;
    }
    float _332 = (_308 > 0.0) ? (cbMtdParam._m0[15u].x / _308) : 5000.0;
    float _333 = isnan(_328) ? _320 : (isnan(_320) ? _328 : min(_320, _328));
    float _334 = isnan(_332) ? _333 : (isnan(_333) ? _332 : min(_333, _332));
    float _338 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _345 = ((_334 * _308) + _338) / _338;
    vec4 _371 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * ((((((_313 + (-0.5)) + (_334 * _310)) / _345) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * ((((((_314 + (-0.5)) + (_334 * _312)) / _345) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _400 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _404 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _405 = _254 * _404;
    float _406 = _255 * _404;
    float _407 = _256 * _404;
    vec4 _412 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _414 = _412.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _484 = sqrt(((_254 * _254) + (_255 * _255)) + (_256 * _256));
        float _491 = (cbMatDynParam._m0[5u].x * _484) + cbMatDynParam._m0[5u].y;
        float _2588 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
        float _492 = isnan(1.0) ? _2588 : (isnan(_2588) ? 1.0 : min(_2588, 1.0));
        float _496 = (cbMatDynParam._m0[5u].z * _484) + cbMatDynParam._m0[5u].w;
        float _2599 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2599 : (isnan(_2599) ? 1.0 : min(_2599, 1.0))) - _492)) + _492) < ((_414 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _427 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _428 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _437 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_427 * cbSceneParam._m0[86u].x, _428 * cbSceneParam._m0[86u].y));
    float _440 = _437.x * TEXCOORD.z;
    float _441 = (-0.0) - _405;
    float _442 = (-0.0) - _406;
    float _443 = (-0.0) - _407;
    float _465 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _469 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _473 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _636;
    float _638;
    float _639;
    float _640;
    float _641;
    float _642;
    float _643;
    float _644;
    float _645;
    float _646;
    float _647;
    float _648;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _558 = (cbModelParam._m0[37u].x * ((((fma(_473, cbModelParam._m0[26u].z, fma(_469, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _465)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _560 = (cbModelParam._m0[37u].y * ((((fma(_473, cbModelParam._m0[27u].z, fma(_469, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _465)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _561 = (((((fma(_473, cbModelParam._m0[28u].z, fma(_469, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _465)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _564 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_558, _560, _561), 0.0);
        vec4 _571 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_558, _560, _561), 0.0);
        vec4 _578 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_558, _560, _561), 0.0);
        vec4 _585 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_558, _560, _561), 0.0);
        float _598 = exp2((_564.w + (-0.5)) * 20.0) * 2.0;
        float _609 = exp2((_571.w + (-0.5)) * 20.0) * 2.0;
        float _619 = exp2((_578.w + (-0.5)) * 20.0) * 2.0;
        float _629 = exp2((_585.w + (-0.5)) * 20.0) * 2.0;
        float _630 = _629 * (_585.x + (-0.5));
        float _631 = _629 * (_585.y + (-0.5));
        float _632 = _629 * (_585.z + (-0.5));
        _636 = _598 * (_564.z + (-0.5));
        _638 = _598 * (_564.y + (-0.5));
        _639 = _598 * (_564.x + (-0.5));
        _640 = _609 * (_571.z + (-0.5));
        _641 = _609 * (_571.y + (-0.5));
        _642 = _609 * (_571.x + (-0.5));
        _643 = _619 * (_578.z + (-0.5));
        _644 = _619 * (_578.y + (-0.5));
        _645 = _619 * (_578.x + (-0.5));
        _646 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
        _647 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
        _648 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    }
    else
    {
        _636 = _637;
        _638 = _637;
        _639 = _637;
        _640 = _637;
        _641 = _637;
        _642 = _637;
        _643 = _637;
        _644 = _637;
        _645 = _637;
        _646 = _637;
        _647 = _637;
        _648 = _637;
    }
    float _779;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _705 = (cbModelParam._m0[38u].x * ((((fma(_473, cbModelParam._m0[30u].z, fma(_469, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _465)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _706 = (cbModelParam._m0[38u].y * ((((fma(_473, cbModelParam._m0[31u].z, fma(_469, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _465)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _707 = (((((fma(_473, cbModelParam._m0[32u].z, fma(_469, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _465)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _709 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _716 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _723 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        vec4 _730 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_705, _706, _707), 0.0);
        float _742 = exp2((_709.w + (-0.5)) * 20.0) * 2.0;
        float _752 = exp2((_716.w + (-0.5)) * 20.0) * 2.0;
        float _762 = exp2((_723.w + (-0.5)) * 20.0) * 2.0;
        float _772 = exp2((_730.w + (-0.5)) * 20.0) * 2.0;
        float _773 = _772 * (_730.x + (-0.5));
        float _774 = _772 * (_730.y + (-0.5));
        float _775 = _772 * (_730.z + (-0.5));
        _779 = _742 * (_709.z + (-0.5));
        _780 = _742 * (_709.y + (-0.5));
        _781 = _742 * (_709.x + (-0.5));
        _782 = _752 * (_716.z + (-0.5));
        _783 = _752 * (_716.y + (-0.5));
        _784 = _752 * (_716.x + (-0.5));
        _785 = _762 * (_723.z + (-0.5));
        _786 = _762 * (_723.y + (-0.5));
        _787 = _762 * (_723.x + (-0.5));
        _788 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
        _789 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
        _790 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    }
    else
    {
        _779 = _637;
        _780 = _637;
        _781 = _637;
        _782 = _637;
        _783 = _637;
        _784 = _637;
        _785 = _637;
        _786 = _637;
        _787 = _637;
        _788 = _637;
        _789 = _637;
        _790 = _637;
    }
    float _805 = _405 * (-0.5);
    float _806 = _406 * (-0.5);
    float _807 = _407 * (-0.5);
    float _808 = dot(vec4(_805, _806, _807, 1.0), vec4(_781, _784, _787, _790));
    float _811 = dot(vec4(_805, _806, _807, 1.0), vec4(_780, _783, _786, _789));
    float _814 = dot(vec4(_805, _806, _807, 1.0), vec4(_779, _782, _785, _788));
    float _849;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _821 = dot(vec4(_805, _806, _807, 1.0), vec4(_636, _640, _643, _646));
        float _825 = dot(vec4(_805, _806, _807, 1.0), vec4(_638, _641, _644, _647));
        float _829 = dot(vec4(_805, _806, _807, 1.0), vec4(_639, _642, _645, _648));
        float _836 = dot(vec4(cbModelParam._m0[39u]), vec4(_805, _806, _807, 1.0));
        _849 = dot(vec3(isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0)), isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0)), isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_836) ? 0.0 : (isnan(0.0) ? _836 : max(0.0, _836))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _849 = 1.0;
    }
    float _860;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _851 = dot(vec4(cbModelParam._m0[40u]), vec4(_805, _806, _807, 1.0));
        _860 = dot(vec3(isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0)), isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0)), isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_851) ? 0.0 : (isnan(0.0) ? _851 : max(0.0, _851))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _860 = 1.0;
    }
    float _864 = (_860 * cbModelParam._m0[1u].x) + (_849 * (1.0 - cbModelParam._m0[1u].x));
    float _870 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _953;
    float _955;
    float _957;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _920 = fma(_473, cbModelParam._m0[13u].z, fma(_469, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _465)) + cbModelParam._m0[13u].w;
        float _924 = fma(_473, cbModelParam._m0[14u].z, fma(_469, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _465)) + cbModelParam._m0[14u].w;
        float _928 = fma(_473, cbModelParam._m0[15u].z, fma(_469, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _465)) + cbModelParam._m0[15u].w;
        float _931 = fma(_443, cbModelParam._m0[13u].z, fma(_442, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _441));
        float _934 = fma(_443, cbModelParam._m0[14u].z, fma(_442, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _441));
        float _937 = fma(_443, cbModelParam._m0[15u].z, fma(_442, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _441));
        float _963;
        if (_931 > 0.0)
        {
            _963 = abs((1.0 - _920) / _931);
        }
        else
        {
            float frontier_phi_25_23_ladder;
            if (_931 < 0.0)
            {
                frontier_phi_25_23_ladder = abs((_920 + 1.0) / _931);
            }
            else
            {
                frontier_phi_25_23_ladder = 5000.0;
            }
            _963 = frontier_phi_25_23_ladder;
        }
        float _1152;
        if (_934 > 0.0)
        {
            _1152 = abs((1.0 - _924) / _934);
        }
        else
        {
            float frontier_phi_34_30_ladder;
            if (_934 < 0.0)
            {
                frontier_phi_34_30_ladder = abs((_924 + 1.0) / _934);
            }
            else
            {
                frontier_phi_34_30_ladder = 5000.0;
            }
            _1152 = frontier_phi_34_30_ladder;
        }
        float _1507;
        if (_937 > 0.0)
        {
            _1507 = abs((1.0 - _928) / _937);
        }
        else
        {
            float frontier_phi_46_41_ladder;
            if (_937 < 0.0)
            {
                frontier_phi_46_41_ladder = abs((_928 + 1.0) / _937);
            }
            else
            {
                frontier_phi_46_41_ladder = 5000.0;
            }
            _1507 = frontier_phi_46_41_ladder;
        }
        float _1509 = isnan(_1152) ? _963 : (isnan(_963) ? _1152 : min(_963, _1152));
        float _1510 = isnan(_1507) ? _1509 : (isnan(_1509) ? _1507 : min(_1509, _1507));
        float _1514 = (_1510 * _931) + _920;
        float _1515 = (_1510 * _934) + _924;
        float _1516 = (_1510 * _937) + _928;
        float _1517 = _1510 * 9.9999997473787516355514526367188e-05;
        float _1519 = (-1.0) - _1517;
        float _1521 = _1517 + 1.0;
        float frontier_phi_24_46_ladder;
        float frontier_phi_24_46_ladder_1;
        float frontier_phi_24_46_ladder_2;
        if ((_1516 > _1521) || ((_1516 < _1519) || ((_1515 > _1521) || ((_1515 < _1519) || ((_1514 < _1519) || (_1514 > _1521))))))
        {
            frontier_phi_24_46_ladder = 0.0;
            frontier_phi_24_46_ladder_1 = 0.0;
            frontier_phi_24_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1749 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1516, cbModelParam._m0[9u].z, fma(_1515, cbModelParam._m0[9u].y, _1514 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1516, cbModelParam._m0[10u].z, fma(_1515, cbModelParam._m0[10u].y, _1514 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1516, cbModelParam._m0[11u].z, fma(_1515, cbModelParam._m0[11u].y, _1514 * cbModelParam._m0[11u].x))), _870);
            frontier_phi_24_46_ladder = _1749.z * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_1 = _1749.y * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_2 = _1749.x * cbModelParam._m0[1u].y;
        }
        _953 = frontier_phi_24_46_ladder_2;
        _955 = frontier_phi_24_46_ladder_1;
        _957 = frontier_phi_24_46_ladder;
    }
    else
    {
        vec4 _941 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_441, _442, _443), _870);
        _953 = _941.x * cbModelParam._m0[1u].y;
        _955 = _941.y * cbModelParam._m0[1u].y;
        _957 = _941.z * cbModelParam._m0[1u].y;
    }
    float _960 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1049;
    float _1051;
    float _1053;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1013 = fma(_473, cbModelParam._m0[21u].z, fma(_469, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _465)) + cbModelParam._m0[21u].w;
        float _1017 = fma(_473, cbModelParam._m0[22u].z, fma(_469, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _465)) + cbModelParam._m0[22u].w;
        float _1021 = fma(_473, cbModelParam._m0[23u].z, fma(_469, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _465)) + cbModelParam._m0[23u].w;
        float _1024 = fma(_443, cbModelParam._m0[21u].z, fma(_442, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _441));
        float _1027 = fma(_443, cbModelParam._m0[22u].z, fma(_442, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _441));
        float _1030 = fma(_443, cbModelParam._m0[23u].z, fma(_442, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _441));
        float _1157;
        if (_1024 > 0.0)
        {
            _1157 = abs((1.0 - _1013) / _1024);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1024 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1013 + 1.0) / _1024);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _1157 = frontier_phi_36_32_ladder;
        }
        float _1534;
        if (_1027 > 0.0)
        {
            _1534 = abs((1.0 - _1017) / _1027);
        }
        else
        {
            float frontier_phi_48_43_ladder;
            if (_1027 < 0.0)
            {
                frontier_phi_48_43_ladder = abs((_1017 + 1.0) / _1027);
            }
            else
            {
                frontier_phi_48_43_ladder = 5000.0;
            }
            _1534 = frontier_phi_48_43_ladder;
        }
        float _1874;
        if (_1030 > 0.0)
        {
            _1874 = abs((1.0 - _1021) / _1030);
        }
        else
        {
            float frontier_phi_60_55_ladder;
            if (_1030 < 0.0)
            {
                frontier_phi_60_55_ladder = abs((_1021 + 1.0) / _1030);
            }
            else
            {
                frontier_phi_60_55_ladder = 5000.0;
            }
            _1874 = frontier_phi_60_55_ladder;
        }
        float _1876 = isnan(_1534) ? _1157 : (isnan(_1157) ? _1534 : min(_1157, _1534));
        float _1877 = isnan(_1874) ? _1876 : (isnan(_1876) ? _1874 : min(_1876, _1874));
        float _1881 = (_1877 * _1024) + _1013;
        float _1882 = (_1877 * _1027) + _1017;
        float _1883 = (_1877 * _1030) + _1021;
        float _1884 = _1877 * 9.9999997473787516355514526367188e-05;
        float _1885 = (-1.0) - _1884;
        float _1887 = _1884 + 1.0;
        float frontier_phi_33_60_ladder;
        float frontier_phi_33_60_ladder_1;
        float frontier_phi_33_60_ladder_2;
        if ((_1883 > _1887) || ((_1883 < _1885) || ((_1882 > _1887) || ((_1882 < _1885) || ((_1881 < _1885) || (_1881 > _1887))))))
        {
            frontier_phi_33_60_ladder = 0.0;
            frontier_phi_33_60_ladder_1 = 0.0;
            frontier_phi_33_60_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2005 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1883, cbModelParam._m0[17u].z, fma(_1882, cbModelParam._m0[17u].y, _1881 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1883, cbModelParam._m0[18u].z, fma(_1882, cbModelParam._m0[18u].y, _1881 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1883, cbModelParam._m0[19u].z, fma(_1882, cbModelParam._m0[19u].y, _1881 * cbModelParam._m0[19u].x))), _960);
            frontier_phi_33_60_ladder = _2005.z * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_1 = _2005.y * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_2 = _2005.x * cbModelParam._m0[1u].z;
        }
        _1049 = frontier_phi_33_60_ladder_2;
        _1051 = frontier_phi_33_60_ladder_1;
        _1053 = frontier_phi_33_60_ladder;
    }
    else
    {
        vec4 _1033 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_441, _442, _443), _960);
        _1049 = _1033.x * cbModelParam._m0[1u].z;
        _1051 = _1033.y * cbModelParam._m0[1u].z;
        _1053 = _1033.z * cbModelParam._m0[1u].z;
    }
    float _1065 = _440 * 0.01200000010430812835693359375;
    float _1067 = _1065 * ((cbModelParam._m0[1u].w * (_1049 - _953)) + _953);
    float _1068 = _1065 * ((cbModelParam._m0[1u].w * (_1051 - _955)) + _955);
    float _1069 = _1065 * ((cbModelParam._m0[1u].w * (_1053 - _957)) + _957);
    float _1090 = fma(_1069, cbSceneParam._m0[89u].z, fma(_1068, cbSceneParam._m0[89u].y, _1067 * cbSceneParam._m0[89u].x));
    float _1093 = fma(_1069, cbSceneParam._m0[90u].z, fma(_1068, cbSceneParam._m0[90u].y, _1067 * cbSceneParam._m0[90u].x));
    float _1096 = fma(_1069, cbSceneParam._m0[91u].z, fma(_1068, cbSceneParam._m0[91u].y, _1067 * cbSceneParam._m0[91u].x));
    float _1131 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1135 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1139 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1143 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1144 = _1131 / _1143;
    float _1145 = _1135 / _1143;
    float _1146 = _1139 / _1143;
    float _1294;
    float _1295;
    float _1296;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1173 = ((uint(_1146 > cbSceneParam._m0[59u].y) + uint(_1146 > cbSceneParam._m0[59u].x)) + uint(_1146 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1174 = _1173 + 43u;
        uint _1182 = _1173 + 44u;
        uint _1190 = _1173 + 45u;
        uint _1198 = _1173 + 46u;
        float _1209 = fma(_1143, cbSceneParam._m0[_1174].w, fma(_1139, cbSceneParam._m0[_1174].z, fma(_1135, cbSceneParam._m0[_1174].y, _1131 * cbSceneParam._m0[_1174].x)));
        float _1213 = fma(_1143, cbSceneParam._m0[_1182].w, fma(_1139, cbSceneParam._m0[_1182].z, fma(_1135, cbSceneParam._m0[_1182].y, _1131 * cbSceneParam._m0[_1182].x)));
        float _1221 = fma(_1143, cbSceneParam._m0[_1198].w, fma(_1139, cbSceneParam._m0[_1198].z, fma(_1135, cbSceneParam._m0[_1198].y, _1131 * cbSceneParam._m0[_1198].x)));
        float _1226 = cbSceneParam._m0[33u].z * _1221;
        float _1228 = cbSceneParam._m0[33u].w * _1221;
        float _1231 = fma(_1143, cbSceneParam._m0[_1190].w, fma(_1139, cbSceneParam._m0[_1190].z, fma(_1135, cbSceneParam._m0[_1190].y, _1131 * cbSceneParam._m0[_1190].x))) / _1221;
        float _1279 = (cbSceneParam._m0[33u].x - sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146))) * cbSceneParam._m0[33u].y;
        float _2725 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1287 = (isnan(1.0) ? _2725 : (isnan(_2725) ? 1.0 : min(_2725, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1226 + _1209) / _1221, (_1228 + _1213) / _1221), _1231), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1228 + _1209) / _1221, (_1213 - _1226) / _1221), _1231), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1209 - _1226) / _1221, (_1213 - _1228) / _1221), _1231), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1209 - _1228) / _1221, (_1226 + _1213) / _1221), _1231), 0.0)).x), vec4(0.25)));
        _1294 = 1.0 - (_1287 * cbSceneParam._m0[34u].x);
        _1295 = 1.0 - (_1287 * cbSceneParam._m0[34u].y);
        _1296 = 1.0 - (_1287 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1294 = 1.0;
        _1295 = 1.0;
        _1296 = 1.0;
    }
    float _1360;
    float _1362;
    float _1364;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1348 = fma(_1143, cbSceneParam._m0[63u].w, fma(_1139, cbSceneParam._m0[63u].z, fma(_1135, cbSceneParam._m0[63u].y, _1131 * cbSceneParam._m0[63u].x)));
        float _1349 = fma(_1143, cbSceneParam._m0[60u].w, fma(_1139, cbSceneParam._m0[60u].z, fma(_1135, cbSceneParam._m0[60u].y, _1131 * cbSceneParam._m0[60u].x))) / _1348;
        float _1350 = fma(_1143, cbSceneParam._m0[61u].w, fma(_1139, cbSceneParam._m0[61u].z, fma(_1135, cbSceneParam._m0[61u].y, _1131 * cbSceneParam._m0[61u].x))) / _1348;
        float frontier_phi_45_44_ladder;
        float frontier_phi_45_44_ladder_1;
        float frontier_phi_45_44_ladder_2;
        if ((((_1349 >= cbSceneParam._m0[64u].x) && (_1350 >= cbSceneParam._m0[64u].y)) && (_1349 <= cbSceneParam._m0[64u].z)) && (_1350 <= cbSceneParam._m0[64u].w))
        {
            float _1547 = fma(_1143, cbSceneParam._m0[62u].w, fma(_1139, cbSceneParam._m0[62u].z, fma(_1135, cbSceneParam._m0[62u].y, _1131 * cbSceneParam._m0[62u].x))) / _1348;
            float _1551 = isnan(cbSceneParam._m0[41u].w) ? _1547 : (isnan(_1547) ? cbSceneParam._m0[41u].w : max(_1547, cbSceneParam._m0[41u].w));
            float _1594 = (cbSceneParam._m0[33u].x - sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146))) * cbSceneParam._m0[33u].y;
            float _2741 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
            float _1601 = (isnan(1.0) ? _2741 : (isnan(_2741) ? 1.0 : min(_2741, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1349, cbSceneParam._m0[33u].w + _1350), _1551), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1349, _1350 - cbSceneParam._m0[33u].z), _1551), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1349 - cbSceneParam._m0[33u].z, _1350 - cbSceneParam._m0[33u].w), _1551), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1349 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1350), _1551), 0.0)).x), vec4(0.25)));
            float _1605 = 1.0 - (_1601 * cbSceneParam._m0[34u].x);
            float _1606 = 1.0 - (_1601 * cbSceneParam._m0[34u].y);
            float _1607 = 1.0 - (_1601 * cbSceneParam._m0[34u].z);
            frontier_phi_45_44_ladder = isnan(_1607) ? _1296 : (isnan(_1296) ? _1607 : min(_1296, _1607));
            frontier_phi_45_44_ladder_1 = isnan(_1605) ? _1294 : (isnan(_1294) ? _1605 : min(_1294, _1605));
            frontier_phi_45_44_ladder_2 = isnan(_1606) ? _1295 : (isnan(_1295) ? _1606 : min(_1295, _1606));
        }
        else
        {
            frontier_phi_45_44_ladder = _1296;
            frontier_phi_45_44_ladder_1 = _1294;
            frontier_phi_45_44_ladder_2 = _1295;
        }
        _1360 = frontier_phi_45_44_ladder_1;
        _1362 = frontier_phi_45_44_ladder_2;
        _1364 = frontier_phi_45_44_ladder;
    }
    else
    {
        _1360 = _1294;
        _1362 = _1295;
        _1364 = _1296;
    }
    uint _1366 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1370 = floatBitsToUint(cbInstanceData._m0[_1366 + 5u]);
    uint _1372 = _1370.x * 14u;
    uint _1373 = _1372 + 13u;
    float _1378 = _440 + (-1.0);
    float _1382 = (cbLight._m0[_1373].x * _1378) + 1.0;
    float _1383 = (cbLight._m0[_1373].y * _1378) + 1.0;
    uint _1384 = _1372 + 8u;
    float _1395 = cbLight._m0[_1372].x + _405;
    float _1396 = cbLight._m0[_1372].y + _406;
    float _1397 = cbLight._m0[_1372].z + _407;
    float _1401 = inversesqrt(dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397)));
    float _1405 = dot(vec3(0.0), vec3(cbLight._m0[_1372].xyz));
    float _2767 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
    float _1408 = isnan(1.0) ? _2767 : (isnan(_2767) ? 1.0 : min(_2767, 1.0));
    float _1409 = dot(vec3(0.0), vec3(_405, _406, _407));
    float _2778 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
    float _1412 = isnan(1.0) ? _2778 : (isnan(_2778) ? 1.0 : min(_2778, 1.0));
    float _1413 = dot(vec3(cbLight._m0[_1372].xyz), vec3(_1395 * _1401, _1396 * _1401, _1397 * _1401));
    float _2789 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    float _1424 = (exp2(log2(1.0 - (isnan(1.0) ? _2789 : (isnan(_2789) ? 1.0 : min(_2789, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1430 = (0.5 / ((_1408 + 9.9999999392252902907785028219223e-09) + _1412)) * _1408;
    float _2800 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
    float _1432 = (isnan(1.0) ? _2800 : (isnan(_2800) ? 1.0 : min(_2800, 1.0))) * 0.31831014156341552734375;
    float _1434 = isnan(1.0) ? _1382 : (isnan(_1382) ? 1.0 : min(_1382, 1.0));
    uint _1447 = _1372 + 9u;
    uint _1453 = _1372 | 1u;
    float _1459 = cbLight._m0[_1453].x + _405;
    float _1460 = cbLight._m0[_1453].y + _406;
    float _1461 = cbLight._m0[_1453].z + _407;
    float _1465 = inversesqrt(dot(vec3(_1459, _1460, _1461), vec3(_1459, _1460, _1461)));
    float _1469 = dot(vec3(0.0), vec3(cbLight._m0[_1453].xyz));
    float _2816 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
    float _1472 = isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0));
    float _1473 = dot(vec3(cbLight._m0[_1453].xyz), vec3(_1459 * _1465, _1460 * _1465, _1461 * _1465));
    float _2827 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
    float _1482 = (exp2(log2(1.0 - (isnan(1.0) ? _2827 : (isnan(_2827) ? 1.0 : min(_2827, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1486 = (0.5 / ((_1472 + 9.9999999392252902907785028219223e-09) + _1412)) * _1472;
    float _2838 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _1488 = (isnan(1.0) ? _2838 : (isnan(_2838) ? 1.0 : min(_2838, 1.0))) * 0.31831014156341552734375;
    float _1489 = isnan(1.0) ? _1383 : (isnan(_1383) ? 1.0 : min(_1383, 1.0));
    float _1499 = (((_1482 * cbLight._m0[_1447].x) * _1488) * _1489) + ((((cbLight._m0[_1384].x * _1360) * _1424) * _1432) * _1434);
    float _1500 = (((_1482 * cbLight._m0[_1447].y) * _1488) * _1489) + ((((cbLight._m0[_1384].y * _1362) * _1424) * _1432) * _1434);
    float _1501 = (((_1482 * cbLight._m0[_1447].z) * _1488) * _1489) + ((((cbLight._m0[_1384].z * _1364) * _1424) * _1432) * _1434);
    float _1664;
    float _1666;
    float _1668;
    if (_1370.y == 0u)
    {
        uvec4 _1619 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1620 = _1619.x;
        uint _1631 = uint((float(_1619.y) * floor(float(uint(cbSceneParam._m0[85u].y * _428) / _1620))) + floor(float(uint(cbSceneParam._m0[85u].x * _427) / _1620)));
        float _1641 = (log2(_1146 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1642 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
        uint _1645 = uint(isnan(14.0) ? _1642 : (isnan(_1642) ? 14.0 : min(_1642, 14.0)));
        uvec4 _1650 = texelFetch(g_lightClusterGridBuffer, int(((_1645 << 2u) + (_1631 << 6u)) >> 2u));
        uint _1651 = _1650.x;
        uint _1652 = _1619.z;
        float _1758;
        float _1760;
        float _1762;
        if (((((1u << ((_1652 >> 4u) & 15u)) + 4294967295u) & _1651) == 0u) || ((_1652 & 240u) == 0u))
        {
            _1758 = 0.0;
            _1760 = 0.0;
            _1762 = 0.0;
        }
        else
        {
            float _1759;
            float _1761;
            float _1763;
            float _1920 = 0.0;
            float _1921 = 0.0;
            float _1922 = 0.0;
            uint _1923 = 0u;
            uint _1932;
            bool _1933;
            for (;;)
            {
                _1932 = texelFetch(g_lightClassification, int((((_1645 << 5u) + (_1631 << 9u)) + (_1923 << 2u)) >> 2u)).x;
                _1933 = _1932 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                if (_1933)
                {
                    frontier_phi_71_pred = _1922;
                    frontier_phi_71_pred_1 = _1921;
                    frontier_phi_71_pred_2 = _1920;
                }
                else
                {
                    float _2077;
                    float _2078;
                    float _2079;
                    uint _2080;
                    _2077 = _1920;
                    _2078 = _1921;
                    _2079 = _1922;
                    _2080 = _1932;
                    float _2010;
                    float _2011;
                    float _2012;
                    for (;;)
                    {
                        uint _2084 = uint(findLSB(_2080)) + (_1923 << 5u);
                        uint _2081 = (_2080 + 4294967295u) & _2080;
                        uint _2086 = _2084 * 48u;
                        vec4 _2100 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2086)).x, texelFetch(g_PointLightRenderingBuffer, int(_2086 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2086 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2086 + 3u)).x));
                        uint _2117 = (_2084 * 48u) + 8u;
                        vec3 _2128 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2117)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 2u)).x));
                        float _2132 = _2100.x - _1144;
                        float _2133 = _2100.y - _1145;
                        float _2134 = _2100.z - _1146;
                        float _2135 = dot(vec3(_2132, _2133, _2134), vec3(_2132, _2133, _2134));
                        float _2138 = inversesqrt(_2135);
                        float _2147 = 1.0 - (_2135 * _2100.w);
                        float _2864 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
                        float _2149 = sqrt(_2135) * uintBitsToFloat(uvec4(_2107, _2108, _2109, texelFetch(g_PointLightRenderingBuffer, int(((_2084 * 48u) + 4u) + 3u)).x)).w;
                        float _2152 = 1.39999997615814208984375 / (_2149 + 1.39999997615814208984375);
                        float _2153 = _2152 * _2152;
                        float _2156 = ((1.0 - _2153) * dot(vec3(0.0), vec3(_2138 * _2132, _2138 * _2133, _2138 * _2134))) + _2153;
                        float _2158 = (-0.0) - _1144;
                        float _2159 = (-0.0) - _1145;
                        float _2160 = (-0.0) - _1146;
                        float _2164 = inversesqrt(dot(vec3(_2158, _2159, _2160), vec3(_2158, _2159, _2160)));
                        float _2168 = dot(vec3(0.0), vec3(_2164 * _2158, _2164 * _2159, _2164 * _2160));
                        float _2875 = isnan(0.0) ? _2168 : (isnan(_2168) ? 0.0 : max(_2168, 0.0));
                        float _2886 = isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0));
                        float _2172 = isnan(1.0) ? _2886 : (isnan(_2886) ? 1.0 : min(_2886, 1.0));
                        float _2176 = (0.5 / (((isnan(1.0) ? _2875 : (isnan(_2875) ? 1.0 : min(_2875, 1.0))) + 9.9999999392252902907785028219223e-09) + _2172)) * _2172;
                        float _2897 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
                        float _2185 = (((isnan(1.0) ? _2897 : (isnan(_2897) ? 1.0 : min(_2897, 1.0))) * 3.1415927410125732421875) / (((_2149 * _2149) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2864 : (isnan(_2864) ? 1.0 : min(_2864, 1.0)));
                        _2010 = (_2185 * _2128.x) + _2077;
                        _2011 = (_2185 * _2128.y) + _2078;
                        _2012 = (_2185 * _2128.z) + _2079;
                        if (_2081 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2077 = _2010;
                            _2078 = _2011;
                            _2079 = _2012;
                            _2080 = _2081;
                        }
                    }
                    frontier_phi_71_pred = _2012;
                    frontier_phi_71_pred_1 = _2011;
                    frontier_phi_71_pred_2 = _2010;
                }
                _1763 = frontier_phi_71_pred;
                _1761 = frontier_phi_71_pred_1;
                _1759 = frontier_phi_71_pred_2;
                uint _1924 = _1923 + 1u;
                if (_1924 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1920 = _1759;
                    _1921 = _1761;
                    _1922 = _1763;
                    _1923 = _1924;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1758 = _1759;
            _1760 = _1761;
            _1762 = _1763;
        }
        uvec4 _1766 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1767 = _1766.z;
        uint _1769 = (_1767 >> 8u) & 15u;
        float _1900;
        float _1902;
        float _1904;
        if (((4294967295u << _1769) & _1651) == 0u)
        {
            _1900 = _1758;
            _1902 = _1760;
            _1904 = _1762;
        }
        else
        {
            float _1916 = inversesqrt(dot(vec3(_1144, _1145, _1146), vec3(_1144, _1145, _1146)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            if (_1769 < ((_1767 >> 12u) & 15u))
            {
                float _1901;
                float _1903;
                float _1905;
                float _2063 = _1758;
                float _2064 = _1760;
                float _2065 = _1762;
                uint _2066 = _1769;
                uint _2075;
                bool _2076;
                for (;;)
                {
                    _2075 = texelFetch(g_lightClassification, int((((_1645 << 5u) + (_1631 << 9u)) + (_2066 << 2u)) >> 2u)).x;
                    _2076 = _2075 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    if (_2076)
                    {
                        frontier_phi_82_pred = _2063;
                        frontier_phi_82_pred_1 = _2065;
                        frontier_phi_82_pred_2 = _2064;
                    }
                    else
                    {
                        float _2199;
                        float _2200;
                        float _2201;
                        float _2421;
                        float _2422;
                        float _2423;
                        float _2209 = _2063;
                        float _2210 = _2064;
                        float _2211 = _2065;
                        uint _2212 = _2075;
                        uint _2213;
                        uint _2223;
                        vec4 _2238;
                        float _2239;
                        vec3 _2251;
                        vec4 _2266;
                        vec4 _2282;
                        float _2328;
                        bool _2329;
                        for (;;)
                        {
                            _2223 = ((_2066 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2212));
                            _2213 = (_2212 + 4294967295u) & _2212;
                            uint _2225 = _2223 * 40u;
                            _2238 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2225)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2225 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2225 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2225 + 3u)).x));
                            _2239 = _2238.w;
                            uint _2241 = (_2223 * 40u) + 8u;
                            _2251 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2241)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2241 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2241 + 2u)).x));
                            uint _2253 = (_2223 * 40u) + 16u;
                            _2266 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2253)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2253 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2253 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2253 + 3u)).x));
                            uint _2269 = (_2223 * 40u) + 20u;
                            _2282 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2269)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2269 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2269 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2269 + 3u)).x));
                            uint _2284 = (_2223 * 40u) + 24u;
                            vec4 _2297 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2284)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2284 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2284 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2284 + 3u)).x));
                            uint _2303 = (_2223 * 40u) + 28u;
                            vec4 _2316 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2303)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2303 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2303 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2303 + 3u)).x));
                            _2328 = fma(_1146, _2316.z, fma(_1145, _2316.y, _2316.x * _1144)) + _2316.w;
                            _2329 = !((fma(_1146, _2297.z, fma(_1145, _2297.y, _2297.x * _1144)) + _2297.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            if (_2329)
                            {
                                float _2363 = _2238.x - _1144;
                                float _2364 = _2238.y - _1145;
                                float _2365 = _2238.z - _1146;
                                float _2366 = dot(vec3(_2363, _2364, _2365), vec3(_2363, _2364, _2365));
                                float _2369 = inversesqrt(_2366);
                                float _2376 = 1.0 - (_2366 / (_2239 * _2239));
                                float _2908 = isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0));
                                float _2378 = sqrt(_2366) * uintBitsToFloat(uvec4(_2332, _2333, _2334, texelFetch(g_SpotLightRenderingBuffer, int(((_2223 * 40u) + 4u) + 3u)).x)).w;
                                float _2380 = 1.39999997615814208984375 / (_2378 + 1.39999997615814208984375);
                                float _2381 = _2380 * _2380;
                                float _2384 = (fma(_1146, _2266.z, fma(_1145, _2266.y, _2266.x * _1144)) + _2266.w) / _2328;
                                float _2385 = (fma(_1146, _2282.z, fma(_1145, _2282.y, _2282.x * _1144)) + _2282.w) / _2328;
                                float _2389 = 1.0 - dot(vec2(_2384, _2385), vec2(_2384, _2385));
                                float _2919 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
                                float _2397 = dot(vec3(0.0), vec3((-0.0) - (_1144 * _1916), (-0.0) - (_1145 * _1916), (-0.0) - (_1146 * _1916)));
                                float _2930 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
                                float _2405 = ((1.0 - _2381) * dot(vec3(0.0), vec3(_2369 * _2363, _2369 * _2364, _2369 * _2365))) + _2381;
                                float _2941 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
                                float _2406 = isnan(1.0) ? _2941 : (isnan(_2941) ? 1.0 : min(_2941, 1.0));
                                float _2410 = (0.5 / (((isnan(1.0) ? _2930 : (isnan(_2930) ? 1.0 : min(_2930, 1.0))) + 9.9999999392252902907785028219223e-09) + _2406)) * _2406;
                                float _2952 = isnan(0.0) ? _2410 : (isnan(_2410) ? 0.0 : max(_2410, 0.0));
                                float _2417 = ((isnan(1.0) ? _2919 : (isnan(_2919) ? 1.0 : min(_2919, 1.0))) * (isnan(1.0) ? _2908 : (isnan(_2908) ? 1.0 : min(_2908, 1.0)))) * (((isnan(1.0) ? _2952 : (isnan(_2952) ? 1.0 : min(_2952, 1.0))) * 3.1415927410125732421875) / (((_2378 * _2378) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_88_pred = _2417 * _2251.x;
                                frontier_phi_88_pred_1 = _2417 * _2251.y;
                                frontier_phi_88_pred_2 = _2417 * _2251.z;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                            }
                            _2421 = frontier_phi_88_pred;
                            _2422 = frontier_phi_88_pred_1;
                            _2423 = frontier_phi_88_pred_2;
                            _2199 = _2421 + _2209;
                            _2200 = _2422 + _2210;
                            _2201 = _2423 + _2211;
                            if (_2213 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2209 = _2199;
                                _2210 = _2200;
                                _2211 = _2201;
                                _2212 = _2213;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _2199;
                        frontier_phi_82_pred_1 = _2201;
                        frontier_phi_82_pred_2 = _2200;
                    }
                    _1901 = frontier_phi_82_pred;
                    _1905 = frontier_phi_82_pred_1;
                    _1903 = frontier_phi_82_pred_2;
                    uint _2067 = _2066 + 1u;
                    if (_2067 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2063 = _1901;
                        _2064 = _1903;
                        _2065 = _1905;
                        _2066 = _2067;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _1905;
                frontier_phi_62_63_ladder_1 = _1903;
                frontier_phi_62_63_ladder_2 = _1901;
            }
            else
            {
                frontier_phi_62_63_ladder = _1762;
                frontier_phi_62_63_ladder_1 = _1760;
                frontier_phi_62_63_ladder_2 = _1758;
            }
            _1900 = frontier_phi_62_63_ladder_2;
            _1902 = frontier_phi_62_63_ladder_1;
            _1904 = frontier_phi_62_63_ladder;
        }
        float _1909 = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
        _1664 = ((_1900 * 0.039999999105930328369140625) * _1909) + _1499;
        _1666 = ((_1902 * 0.039999999105930328369140625) * _1909) + _1500;
        _1668 = ((_1904 * 0.039999999105930328369140625) * _1909) + _1501;
    }
    else
    {
        _1664 = _1499;
        _1666 = _1500;
        _1668 = _1501;
    }
    uint _1674 = _1366 + 9u;
    uint _1675 = _1674 + uint(cbMatDynParam._m0[0u].w);
    float _1690 = ((cbMtdParam._m0[9u].x * _371.x) * cbInstanceData._m0[_1675].x) + ((_1664 + ((isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0))) * _864)) * cbPerFrame._m0[3u].x);
    float _1691 = ((cbMtdParam._m0[9u].y * _371.y) * cbInstanceData._m0[_1675].y) + ((_1666 + ((isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0))) * _864)) * cbPerFrame._m0[3u].x);
    float _1692 = ((cbMtdParam._m0[9u].z * _371.z) * cbInstanceData._m0[_1675].z) + ((_1668 + ((isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0))) * _864)) * cbPerFrame._m0[3u].x);
    float _1693 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
    float _1694 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
    float _1695 = isnan(0.0) ? _1692 : (isnan(_1692) ? 0.0 : max(_1692, 0.0));
    uint _1696 = _1366 + 6u;
    float _1704 = _427 / cbSceneParam._m0[86u].x;
    float _1705 = _428 / cbSceneParam._m0[86u].y;
    vec4 _1719 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1704, _1705, (log2((isnan(cbSceneParam._m0[77u].w) ? _400 : (isnan(_400) ? cbSceneParam._m0[77u].w : min(_400, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1721 = _1719.x;
    float _1722 = _1719.y;
    float _1723 = _1719.z;
    float _1724 = _1719.w;
    float _1814;
    float _1816;
    float _1818;
    float _1820;
    if (_400 > cbSceneParam._m0[78u].w)
    {
        float _1777 = isnan(_400) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _400 : min(cbSceneParam._m0[80u].w, _400));
        float _1778 = _1777 / _400;
        float _1789 = _1778 * _254;
        float _1790 = _255 * _1778;
        float _1791 = (-0.0) - _1790;
        float _1792 = _1778 * _256;
        float _1794 = (cbSceneParam._m0[77u].w * _1791) / _1777;
        float _1795 = _1794 + cbSceneParam._m0[79u].w;
        float _1796 = cbSceneParam._m0[79u].w - _1790;
        float _1802 = sqrt(((_1789 * _1789) + (_1790 * _1790)) + (_1792 * _1792));
        float _1805 = (1.0 - (cbSceneParam._m0[77u].w / _1777)) * _1802;
        float _1810 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1812 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2020;
        if (abs((_1791 - _1794) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2020 = ((((_1795 > 0.0) ? exp2(_1810 * _1795) : (2.0 - exp2(_1812 * _1795))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1805;
        }
        else
        {
            float _1946 = 1.0 / cbSceneParam._m0[80u].x;
            float _1947 = isnan(_1796) ? _1795 : (isnan(_1795) ? _1796 : max(_1795, _1796));
            float _1948 = isnan(_1796) ? _1795 : (isnan(_1795) ? _1796 : min(_1795, _1796));
            float _1957 = isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : min(_1947, 0.0));
            float _1958 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : min(_1948, 0.0));
            _2020 = ((abs(_1802 / _1791) * cbSceneParam._m0[80u].y) * ((((_1957 - _1958) * 2.0) - ((exp2(_1810 * (isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0)))) - exp2(_1810 * (isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0))))) * _1946)) - ((exp2(_1812 * _1957) - exp2(_1812 * _1958)) * _1946))) + (_1805 * cbSceneParam._m0[80u].z);
        }
        vec4 _2022 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1704, _1705, 1.0), 0.0);
        float _2031 = exp2((_2020 * (-1.44269502162933349609375)) * (1.0 - _2022.w));
        float _2032 = log2(_2031);
        float _2048 = log2(_1724);
        _1814 = (exp2(_2048 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2032 * cbSceneParam._m0[78u].x)) * _2022.x) / cbSceneParam._m0[78u].x)) + _1721;
        _1816 = (exp2(_2048 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2032 * cbSceneParam._m0[78u].y)) * _2022.y) / cbSceneParam._m0[78u].y)) + _1722;
        _1818 = (exp2(_2048 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2032 * cbSceneParam._m0[78u].z)) * _2022.z) / cbSceneParam._m0[78u].z)) + _1723;
        _1820 = _2031 * _1724;
    }
    else
    {
        _1814 = _1721;
        _1816 = _1722;
        _1818 = _1723;
        _1820 = _1724;
    }
    bool _2058;
    vec4 _1830;
    vec4 _1853;
    float _1855;
    float _1859;
    float _1860;
    float _1861;
    float _1862;
    bool _1873;
    for (;;)
    {
        _1830 = cbMatDynParam._m0[0u];
        float _1832 = roundEven(_1830.y);
        bool _1833 = _1832 == 3.0;
        float _1835 = log2(_1820);
        float _1842 = exp2(_1835 * cbSceneParam._m0[78u].x) * _1693;
        float _1843 = exp2(_1835 * cbSceneParam._m0[78u].y) * _1694;
        float _1844 = exp2(_1835 * cbSceneParam._m0[78u].z) * _1695;
        float _1851 = _414 + (-0.5);
        _1853 = cbMtdParam._m0[1u];
        _1855 = _1853.y * _1851;
        float _1858 = (_1832 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1859 = _1858 * (_1833 ? _1842 : (_1842 + (cbSceneParam._m0[72u].w * _1814)));
        _1860 = _1858 * (_1833 ? _1843 : (_1843 + (cbSceneParam._m0[72u].w * _1816)));
        _1861 = _1858 * (_1833 ? _1844 : (_1844 + (cbSceneParam._m0[72u].w * _1818)));
        _1862 = _1851 * 0.999000012874603271484375;
        _1873 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1873)
        {
            if ((cbInstanceData._m0[_1366 + 7u].x + _1862) < 0.5)
            {
                _2058 = true;
                break;
            }
        }
        uint _1981 = _1674 + uint(_1830.w);
        if ((cbInstanceData._m0[_1981].w < 1.0) && ((cbInstanceData._m0[_1981].w + _1862) < 0.5))
        {
            _2058 = true;
            break;
        }
        if ((_1855 + 1.0) < _1853.x)
        {
            _2058 = true;
            break;
        }
        _2058 = false;
        break;
    }
    float _2190;
    if (_2058)
    {
        discard_state = true;
        _2190 = 0.0;
    }
    else
    {
        _2190 = cbInstanceData._m0[_1696].w;
    }
    SV_Target.x = _1859;
    SV_Target.y = _1860;
    SV_Target.z = _1861;
    SV_Target.w = _2190;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1696].w;
    discard_exit();
}


