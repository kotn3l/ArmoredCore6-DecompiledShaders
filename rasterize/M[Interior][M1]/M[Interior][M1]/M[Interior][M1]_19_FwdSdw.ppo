#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _397;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _190 = _189 * _182;
    float _191 = _189 * _183;
    float _192 = _189 * _184;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _282 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _288 = _282.w;
    float _301 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _288) + cbMtdParam._m0[11u].x) * _282.x;
    float _303 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _288) + cbMtdParam._m0[11u].y) * _282.y;
    float _305 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _288) + cbMtdParam._m0[11u].z) * _282.z;
    float _330 = inversesqrt(dot(vec3(_190, _191, _192), vec3(_190, _191, _192)));
    float _337 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _346 = cbMtdParam._m0[23u].x + _261;
    float _347 = cbMtdParam._m0[23u].y + _262;
    float _348 = cbMtdParam._m0[23u].z + _263;
    float _362 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_330 * _190, _330 * _191, _330 * _192));
    float _363 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_337 * _204, _337 * _205, _337 * _206));
    float _364 = (-0.0) - dot(vec3(_346, _347, _348), vec3((-0.0) - _197, (-0.0) - _198, (-0.0) - _199));
    float _368 = inversesqrt(dot(vec3(_362, _363, _364), vec3(_362, _363, _364)));
    float _369 = _368 * _364;
    float _371 = (cbMtdParam._m0[19u].w * _362) * _368;
    float _373 = (cbMtdParam._m0[20u].x * _363) * _368;
    float _376 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _377 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _395;
    float _398;
    float _400;
    if (_371 > 0.0)
    {
        float _381 = (1.0 - _376) / _371;
        _395 = _381;
        _398 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_381 * _369)) * 0.16666667163372039794921875;
        _400 = (fract((_381 * _373) + _377) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_371 < 0.0)
        {
            float _396 = ((-0.0) - _376) / _371;
            frontier_phi_3_2_ladder = (fract(_396 * _369) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_1 = _396;
            frontier_phi_3_2_ladder_2 = (fract((_396 * _373) + _377) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _397;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _395 = frontier_phi_3_2_ladder_1;
        _398 = frontier_phi_3_2_ladder;
        _400 = frontier_phi_3_2_ladder_2;
    }
    float _426;
    float _428;
    float _430;
    if (_373 > 0.0)
    {
        float _413 = (1.0 - _377) / _373;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_413 < _395)
        {
            frontier_phi_8_5_ladder = (fract(_413 * _369) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_1 = (fract((_413 * _371) + _376) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = _413;
        }
        else
        {
            frontier_phi_8_5_ladder = _400;
            frontier_phi_8_5_ladder_1 = _398;
            frontier_phi_8_5_ladder_2 = _395;
        }
        _426 = frontier_phi_8_5_ladder_2;
        _428 = frontier_phi_8_5_ladder_1;
        _430 = frontier_phi_8_5_ladder;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_373 < 0.0)
        {
            float _427 = ((-0.0) - _377) / _373;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_427 < _395)
            {
                frontier_phi_8_6_ladder_9_ladder = fract(_427 * _369) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_427 * _371) + _376) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = _427;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _400;
                frontier_phi_8_6_ladder_9_ladder_1 = _398;
                frontier_phi_8_6_ladder_9_ladder_2 = _395;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _400;
            frontier_phi_8_6_ladder_1 = _398;
            frontier_phi_8_6_ladder_2 = _395;
        }
        _426 = frontier_phi_8_6_ladder_2;
        _428 = frontier_phi_8_6_ladder_1;
        _430 = frontier_phi_8_6_ladder;
    }
    float _434 = (_369 > 0.0) ? (cbMtdParam._m0[16u].w / _369) : 5000.0;
    float _447;
    float _448;
    if (_434 < _426)
    {
        _447 = ((_376 + cbMtdParam._m0[17u].x) + (_434 * _371)) * 0.16666667163372039794921875;
        _448 = (((_434 * _373) + _377) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _447 = _428;
        _448 = _430;
    }
    vec4 _450 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_447, _448));
    float _455 = _450.x * cbMtdParam._m0[13u].x;
    float _456 = _450.y * cbMtdParam._m0[13u].y;
    float _457 = _450.z * cbMtdParam._m0[13u].z;
    float _462 = 0.5 - (_288 * 0.5);
    float _472 = (((_455 - _301) - (_455 * _288)) * _462) + _301;
    float _473 = (((_456 - _303) - (_456 * _288)) * _462) + _303;
    float _474 = (((_457 - _305) - (_457 * _288)) * _462) + _305;
    vec4 _486 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _488 = _486.x;
    vec4 _500 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _508 = (_500.x * 2.0) + (-1.0);
    float _510 = (_500.y * 2.0) + (-1.0);
    float _511 = dot(vec2(_508, _510), vec2(_508, _510));
    float _3401 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _516 = sqrt(1.0 - (isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0))));
    float _517 = _500.z * _288;
    float _520 = fma(_516, _197, fma(_510, _204, _508 * _190));
    float _523 = fma(_516, _198, fma(_510, _205, _508 * _191));
    float _526 = fma(_516, _199, fma(_510, _206, _508 * _192));
    float _530 = inversesqrt(dot(vec3(_520, _523, _526), vec3(_520, _523, _526)));
    float _531 = _530 * _520;
    float _532 = _530 * _523;
    float _533 = _530 * _526;
    float _3412 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _534 = isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0));
    float _3423 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _3434 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _3445 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _3456 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _538 = isnan(1.0) ? _3456 : (isnan(_3456) ? 1.0 : min(_3456, 1.0));
    float _554 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _558 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _559 = _261 * _558;
    float _560 = _262 * _558;
    float _561 = _263 * _558;
    float _567 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _568 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _589 = fma(_533, cbSceneParam._m0[5u].z, fma(_532, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _531));
    float _592 = fma(_533, cbSceneParam._m0[6u].z, fma(_532, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _531));
    float _595 = fma(_533, cbSceneParam._m0[7u].z, fma(_532, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _531));
    uint _608 = uint(roundEven(NORMAL.w)) * 13u;
    uint _610 = (_608 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _616 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0)))) * cbInstanceData._m0[_610].x;
    float _617 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3434 : (isnan(_3434) ? 1.0 : min(_3434, 1.0)))) * cbInstanceData._m0[_610].y;
    float _618 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3445 : (isnan(_3445) ? 1.0 : min(_3445, 1.0)))) * cbInstanceData._m0[_610].z;
    float _3467 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _619 = isnan(1.0) ? _3467 : (isnan(_3467) ? 1.0 : min(_3467, 1.0));
    float _3478 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _620 = isnan(1.0) ? _3478 : (isnan(_3478) ? 1.0 : min(_3478, 1.0));
    float _3489 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _621 = isnan(1.0) ? _3489 : (isnan(_3489) ? 1.0 : min(_3489, 1.0));
    float _622 = 1.0 - _538;
    float _623 = _619 * _622;
    float _624 = _620 * _622;
    float _625 = _621 * _622;
    float _630 = (_619 + (-0.039999999105930328369140625)) * _538;
    float _631 = (_620 + (-0.039999999105930328369140625)) * _538;
    float _632 = (_621 + (-0.039999999105930328369140625)) * _538;
    float _633 = _630 + 0.039999999105930328369140625;
    float _635 = _631 + 0.039999999105930328369140625;
    float _636 = _632 + 0.039999999105930328369140625;
    vec4 _645 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _567, cbSceneParam._m0[86u].y * _568));
    float _648 = _645.x * TEXCOORD.z;
    float _649 = dot(vec3(_531, _532, _533), vec3(_559, _560, _561));
    float _652 = _649 * 2.0;
    float _656 = (_652 * _531) - _559;
    float _657 = (_652 * _532) - _560;
    float _658 = (_652 * _533) - _561;
    float _662 = abs(dot(vec3(_559, _560, _561), vec3(_531, _532, _533)));
    float _3500 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _664 = sqrt(_534);
    float _677 = exp2((_664 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3500 : (isnan(_3500) ? 1.0 : min(_3500, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_664 * 3.0));
    float _683 = (1.0 - _677) * ((_664 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _684 = _677 * _664;
    float _712 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _716 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _720 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1027;
    float _1028;
    float _1029;
    float _1030;
    float _1031;
    float _1032;
    float _1033;
    float _1034;
    float _1035;
    float _1036;
    float _1037;
    float _1038;
    float _1039;
    float _1040;
    float _1041;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _753 = fma(_720, cbModelParam._m0[26u].z, fma(_716, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _712));
        float _757 = fma(_720, cbModelParam._m0[27u].z, fma(_716, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _712));
        float _761 = fma(_720, cbModelParam._m0[28u].z, fma(_716, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _712));
        float _785 = _712 + _531;
        float _786 = _716 + _532;
        float _787 = _720 + _533;
        float _797 = fma(_787, cbModelParam._m0[26u].z, fma(_786, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _785)) - _753;
        float _798 = fma(_787, cbModelParam._m0[27u].z, fma(_786, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _785)) - _757;
        float _799 = fma(_787, cbModelParam._m0[28u].z, fma(_786, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _785)) - _761;
        float _803 = inversesqrt(dot(vec3(_797, _798, _799), vec3(_797, _798, _799)));
        float _816 = ((_803 * _797) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_753 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _817 = ((_803 * _798) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_757 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _818 = ((_803 * _799) / cbModelParam._m0[34u].z) + ((((((_761 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _821 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _828 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _835 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _842 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        float _855 = exp2((_821.w + (-0.5)) * 20.0) * 2.0;
        float _856 = _855 * (_821.x + (-0.5));
        float _857 = _855 * (_821.y + (-0.5));
        float _858 = _855 * (_821.z + (-0.5));
        float _865 = exp2((_828.w + (-0.5)) * 20.0) * 2.0;
        float _866 = _865 * (_828.x + (-0.5));
        float _867 = _865 * (_828.y + (-0.5));
        float _868 = _865 * (_828.z + (-0.5));
        float _875 = exp2((_835.w + (-0.5)) * 20.0) * 2.0;
        float _876 = _875 * (_835.x + (-0.5));
        float _877 = _875 * (_835.y + (-0.5));
        float _878 = _875 * (_835.z + (-0.5));
        float _885 = exp2((_842.w + (-0.5)) * 20.0) * 2.0;
        float _886 = _885 * (_842.x + (-0.5));
        float _887 = _885 * (_842.y + (-0.5));
        float _888 = _885 * (_842.z + (-0.5));
        float _889 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _890 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
        float _891 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _892 = _856 * 0.5;
        float _893 = _866 * 0.5;
        float _894 = _876 * 0.5;
        float _895 = dot(vec3(_892, _893, _894), vec3(_892, _893, _894));
        float _900 = (_895 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_895);
        float _909 = (dot(vec3(_531, _532, _533), vec3(_900 * _892, _900 * _893, _900 * _894)) + 1.0) * 0.5;
        float _3526 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
        float _919 = sqrt(((_893 * _893) + (_892 * _892)) + (_894 * _894)) / (_889 + 9.9999997473787516355514526367188e-06);
        float _3537 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        float _920 = isnan(1.0) ? _3537 : (isnan(_3537) ? 1.0 : min(_3537, 1.0));
        float _921 = _920 * 2.0;
        float _925 = (1.0 - _920) / (_920 + 1.0);
        float _3548 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _926 = isnan(1.0) ? _3548 : (isnan(_3548) ? 1.0 : min(_3548, 1.0));
        float _935 = ((((1.0 - _926) * (_921 + 2.0)) * exp2(log2(isnan(1.0) ? _3526 : (isnan(_3526) ? 1.0 : min(_3526, 1.0))) * (_921 + 1.0))) + _926) * _889;
        float _936 = _857 * 0.5;
        float _937 = _867 * 0.5;
        float _938 = _877 * 0.5;
        float _939 = dot(vec3(_936, _937, _938), vec3(_936, _937, _938));
        float _944 = (_939 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_939);
        float _952 = (dot(vec3(_531, _532, _533), vec3(_944 * _936, _944 * _937, _944 * _938)) + 1.0) * 0.5;
        float _3559 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _961 = sqrt(((_937 * _937) + (_936 * _936)) + (_938 * _938)) / (_890 + 9.9999997473787516355514526367188e-06);
        float _3570 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
        float _962 = isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0));
        float _963 = _962 * 2.0;
        float _967 = (1.0 - _962) / (_962 + 1.0);
        float _3581 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
        float _968 = isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0));
        float _977 = ((((1.0 - _968) * (_963 + 2.0)) * exp2(log2(isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0))) * (_963 + 1.0))) + _968) * _890;
        float _978 = _858 * 0.5;
        float _979 = _868 * 0.5;
        float _980 = _878 * 0.5;
        float _981 = dot(vec3(_978, _979, _980), vec3(_978, _979, _980));
        float _986 = (_981 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_981);
        float _994 = (dot(vec3(_531, _532, _533), vec3(_986 * _978, _986 * _979, _986 * _980)) + 1.0) * 0.5;
        float _3592 = isnan(0.0) ? _994 : (isnan(_994) ? 0.0 : max(_994, 0.0));
        float _1003 = sqrt(((_979 * _979) + (_978 * _978)) + (_980 * _980)) / (_891 + 9.9999997473787516355514526367188e-06);
        float _3603 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
        float _1004 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
        float _1005 = _1004 * 2.0;
        float _1009 = (1.0 - _1004) / (_1004 + 1.0);
        float _3614 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
        float _1010 = isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0));
        float _1019 = ((((1.0 - _1010) * (_1005 + 2.0)) * exp2(log2(isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0))) * (_1005 + 1.0))) + _1010) * _891;
        _1027 = _858;
        _1028 = _857;
        _1029 = _856;
        _1030 = _868;
        _1031 = _867;
        _1032 = _866;
        _1033 = _878;
        _1034 = _877;
        _1035 = _876;
        _1036 = _891;
        _1037 = _890;
        _1038 = _889;
        _1039 = cbModelParam._m0[36u].z * (isnan(0.0) ? _935 : (isnan(_935) ? 0.0 : max(_935, 0.0)));
        _1040 = cbModelParam._m0[36u].z * (isnan(0.0) ? _977 : (isnan(_977) ? 0.0 : max(_977, 0.0)));
        _1041 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0)));
    }
    else
    {
        _1027 = _397;
        _1028 = _397;
        _1029 = _397;
        _1030 = _397;
        _1031 = _397;
        _1032 = _397;
        _1033 = _397;
        _1034 = _397;
        _1035 = _397;
        _1036 = _397;
        _1037 = _397;
        _1038 = _397;
        _1039 = 0.0;
        _1040 = 0.0;
        _1041 = 0.0;
    }
    float _1336;
    float _1337;
    float _1338;
    float _1339;
    float _1340;
    float _1341;
    float _1342;
    float _1343;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1067 = fma(_720, cbModelParam._m0[30u].z, fma(_716, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _712));
        float _1071 = fma(_720, cbModelParam._m0[31u].z, fma(_716, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _712));
        float _1075 = fma(_720, cbModelParam._m0[32u].z, fma(_716, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _712));
        float _1098 = _712 + _531;
        float _1099 = _716 + _532;
        float _1100 = _720 + _533;
        float _1110 = fma(_1100, cbModelParam._m0[30u].z, fma(_1099, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1098)) - _1067;
        float _1111 = fma(_1100, cbModelParam._m0[31u].z, fma(_1099, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1098)) - _1071;
        float _1112 = fma(_1100, cbModelParam._m0[32u].z, fma(_1099, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1098)) - _1075;
        float _1116 = inversesqrt(dot(vec3(_1110, _1111, _1112), vec3(_1110, _1111, _1112)));
        float _1129 = ((_1116 * _1110) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1067 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1130 = ((_1116 * _1111) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1071 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1131 = ((_1116 * _1112) / cbModelParam._m0[35u].z) + ((((((_1075 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1133 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1140 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1147 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        vec4 _1154 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1129, _1130, _1131), 0.0);
        float _1166 = exp2((_1133.w + (-0.5)) * 20.0) * 2.0;
        float _1167 = _1166 * (_1133.x + (-0.5));
        float _1168 = _1166 * (_1133.y + (-0.5));
        float _1169 = _1166 * (_1133.z + (-0.5));
        float _1176 = exp2((_1140.w + (-0.5)) * 20.0) * 2.0;
        float _1177 = _1176 * (_1140.x + (-0.5));
        float _1178 = _1176 * (_1140.y + (-0.5));
        float _1179 = _1176 * (_1140.z + (-0.5));
        float _1186 = exp2((_1147.w + (-0.5)) * 20.0) * 2.0;
        float _1187 = _1186 * (_1147.x + (-0.5));
        float _1188 = _1186 * (_1147.y + (-0.5));
        float _1189 = _1186 * (_1147.z + (-0.5));
        float _1196 = exp2((_1154.w + (-0.5)) * 20.0) * 2.0;
        float _1197 = _1196 * (_1154.x + (-0.5));
        float _1198 = _1196 * (_1154.y + (-0.5));
        float _1199 = _1196 * (_1154.z + (-0.5));
        float _1200 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1201 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1202 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1203 = _1167 * 0.5;
        float _1204 = _1177 * 0.5;
        float _1205 = _1187 * 0.5;
        float _1206 = dot(vec3(_1203, _1204, _1205), vec3(_1203, _1204, _1205));
        float _1211 = (_1206 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1206);
        float _1219 = (dot(vec3(_531, _532, _533), vec3(_1211 * _1203, _1211 * _1204, _1211 * _1205)) + 1.0) * 0.5;
        float _3655 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1228 = sqrt(((_1204 * _1204) + (_1203 * _1203)) + (_1205 * _1205)) / (_1200 + 9.9999997473787516355514526367188e-06);
        float _3666 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0));
        float _1230 = _1229 * 2.0;
        float _1234 = (1.0 - _1229) / (_1229 + 1.0);
        float _3677 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
        float _1244 = ((((1.0 - _1235) * (_1230 + 2.0)) * exp2(log2(isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0))) * (_1230 + 1.0))) + _1235) * _1200;
        float _1245 = _1168 * 0.5;
        float _1246 = _1178 * 0.5;
        float _1247 = _1188 * 0.5;
        float _1248 = dot(vec3(_1245, _1246, _1247), vec3(_1245, _1246, _1247));
        float _1253 = (_1248 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1248);
        float _1261 = (dot(vec3(_531, _532, _533), vec3(_1253 * _1245, _1253 * _1246, _1253 * _1247)) + 1.0) * 0.5;
        float _3688 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1270 = sqrt(((_1246 * _1246) + (_1245 * _1245)) + (_1247 * _1247)) / (_1201 + 9.9999997473787516355514526367188e-06);
        float _3699 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
        float _1272 = _1271 * 2.0;
        float _1276 = (1.0 - _1271) / (_1271 + 1.0);
        float _3710 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0));
        float _1286 = ((((1.0 - _1277) * (_1272 + 2.0)) * exp2(log2(isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0))) * (_1272 + 1.0))) + _1277) * _1201;
        float _1287 = _1169 * 0.5;
        float _1288 = _1179 * 0.5;
        float _1289 = _1189 * 0.5;
        float _1290 = dot(vec3(_1287, _1288, _1289), vec3(_1287, _1288, _1289));
        float _1295 = (_1290 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1290);
        float _1303 = (dot(vec3(_531, _532, _533), vec3(_1295 * _1287, _1295 * _1288, _1295 * _1289)) + 1.0) * 0.5;
        float _3721 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1312 = sqrt(((_1288 * _1288) + (_1287 * _1287)) + (_1289 * _1289)) / (_1202 + 9.9999997473787516355514526367188e-06);
        float _3732 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0));
        float _1314 = _1313 * 2.0;
        float _1318 = (1.0 - _1313) / (_1313 + 1.0);
        float _3743 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0));
        float _1328 = ((((1.0 - _1319) * (_1314 + 2.0)) * exp2(log2(isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0))) * (_1314 + 1.0))) + _1319) * _1202;
        _1336 = _1169;
        _1337 = _1168;
        _1338 = _1167;
        _1339 = _1179;
        _1340 = _1178;
        _1341 = _1177;
        _1342 = _1189;
        _1343 = _1188;
        _1344 = _1187;
        _1345 = _1202;
        _1346 = _1201;
        _1347 = _1200;
        _1348 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0)));
        _1349 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0)));
        _1350 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)));
    }
    else
    {
        _1336 = _397;
        _1337 = _397;
        _1338 = _397;
        _1339 = _397;
        _1340 = _397;
        _1341 = _397;
        _1342 = _397;
        _1343 = _397;
        _1344 = _397;
        _1345 = _397;
        _1346 = _397;
        _1347 = _397;
        _1348 = 0.0;
        _1349 = 0.0;
        _1350 = 0.0;
    }
    float _1360 = (cbModelParam._m0[1u].x * (_1348 - _1039)) + _1039;
    float _1361 = (cbModelParam._m0[1u].x * (_1349 - _1040)) + _1040;
    float _1362 = (cbModelParam._m0[1u].x * (_1350 - _1041)) + _1041;
    float _1383 = fma(_1362, cbSceneParam._m0[89u].z, fma(_1361, cbSceneParam._m0[89u].y, _1360 * cbSceneParam._m0[89u].x));
    float _1386 = fma(_1362, cbSceneParam._m0[90u].z, fma(_1361, cbSceneParam._m0[90u].y, _1360 * cbSceneParam._m0[90u].x));
    float _1389 = fma(_1362, cbSceneParam._m0[91u].z, fma(_1361, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1360));
    float _1404 = _656 * 0.5;
    float _1405 = _657 * 0.5;
    float _1406 = _658 * 0.5;
    float _1407 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1338, _1341, _1344, _1347));
    float _1410 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1337, _1340, _1343, _1346));
    float _1413 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1336, _1339, _1342, _1345));
    float _1447;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1420 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1027, _1030, _1033, _1036));
        float _1424 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1028, _1031, _1034, _1037));
        float _1428 = dot(vec4(_1404, _1405, _1406, 1.0), vec4(_1029, _1032, _1035, _1038));
        float _1435 = dot(vec4(cbModelParam._m0[39u]), vec4(_1404, _1405, _1406, 1.0));
        _1447 = dot(vec3(isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0)), isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0)), isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1435) ? 0.0 : (isnan(0.0) ? _1435 : max(0.0, _1435))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1447 = 1.0;
    }
    float _1458;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1449 = dot(vec4(cbModelParam._m0[40u]), vec4(_1404, _1405, _1406, 1.0));
        _1458 = dot(vec3(isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0)), isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0)), isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1449) ? 0.0 : (isnan(0.0) ? _1449 : max(0.0, _1449))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1458 = 1.0;
    }
    float _1462 = (_1458 * cbModelParam._m0[1u].x) + (_1447 * (1.0 - cbModelParam._m0[1u].x));
    float _1472 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _534);
    float _1473 = isnan(_1472) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1472 : min(cbModelParam._m0[25u].z, _1472));
    float _1555;
    float _1557;
    float _1559;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1522 = fma(_720, cbModelParam._m0[13u].z, fma(_716, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _712)) + cbModelParam._m0[13u].w;
        float _1526 = fma(_720, cbModelParam._m0[14u].z, fma(_716, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _712)) + cbModelParam._m0[14u].w;
        float _1530 = fma(_720, cbModelParam._m0[15u].z, fma(_716, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _712)) + cbModelParam._m0[15u].w;
        float _1533 = fma(_658, cbModelParam._m0[13u].z, fma(_657, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _656));
        float _1536 = fma(_658, cbModelParam._m0[14u].z, fma(_657, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _656));
        float _1539 = fma(_658, cbModelParam._m0[15u].z, fma(_657, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _656));
        float _1567;
        if (_1533 > 0.0)
        {
            _1567 = abs((1.0 - _1522) / _1533);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1533 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1522 + 1.0) / _1533);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1567 = frontier_phi_26_24_ladder;
        }
        float _1740;
        if (_1536 > 0.0)
        {
            _1740 = abs((1.0 - _1526) / _1536);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1536 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1526 + 1.0) / _1536);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1740 = frontier_phi_35_31_ladder;
        }
        float _2196;
        if (_1539 > 0.0)
        {
            _2196 = abs((1.0 - _1530) / _1539);
        }
        else
        {
            float frontier_phi_47_42_ladder;
            if (_1539 < 0.0)
            {
                frontier_phi_47_42_ladder = abs((_1530 + 1.0) / _1539);
            }
            else
            {
                frontier_phi_47_42_ladder = 5000.0;
            }
            _2196 = frontier_phi_47_42_ladder;
        }
        float _2198 = isnan(_1740) ? _1567 : (isnan(_1567) ? _1740 : min(_1567, _1740));
        float _2199 = isnan(_2196) ? _2198 : (isnan(_2198) ? _2196 : min(_2198, _2196));
        float _2203 = (_2199 * _1533) + _1522;
        float _2204 = (_2199 * _1536) + _1526;
        float _2205 = (_2199 * _1539) + _1530;
        float _2206 = _2199 * 9.9999997473787516355514526367188e-05;
        float _2208 = (-1.0) - _2206;
        float _2210 = _2206 + 1.0;
        float frontier_phi_25_47_ladder;
        float frontier_phi_25_47_ladder_1;
        float frontier_phi_25_47_ladder_2;
        if ((_2205 > _2210) || ((_2205 < _2208) || ((_2204 > _2210) || ((_2204 < _2208) || ((_2203 < _2208) || (_2203 > _2210))))))
        {
            frontier_phi_25_47_ladder = 0.0;
            frontier_phi_25_47_ladder_1 = 0.0;
            frontier_phi_25_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2439 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2205, cbModelParam._m0[9u].z, fma(_2204, cbModelParam._m0[9u].y, _2203 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2205, cbModelParam._m0[10u].z, fma(_2204, cbModelParam._m0[10u].y, _2203 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2205, cbModelParam._m0[11u].z, fma(_2204, cbModelParam._m0[11u].y, _2203 * cbModelParam._m0[11u].x))), _1473);
            frontier_phi_25_47_ladder = _2439.z * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_1 = _2439.y * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_2 = _2439.x * cbModelParam._m0[1u].y;
        }
        _1555 = frontier_phi_25_47_ladder_2;
        _1557 = frontier_phi_25_47_ladder_1;
        _1559 = frontier_phi_25_47_ladder;
    }
    else
    {
        vec4 _1543 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_656, _657, _658), _1473);
        _1555 = _1543.x * cbModelParam._m0[1u].y;
        _1557 = _1543.y * cbModelParam._m0[1u].y;
        _1559 = _1543.z * cbModelParam._m0[1u].y;
    }
    float _1563 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _534);
    float _1564 = isnan(_1563) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1563 : min(cbModelParam._m0[25u].w, _1563));
    float _1655;
    float _1657;
    float _1659;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1619 = fma(_720, cbModelParam._m0[21u].z, fma(_716, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _712)) + cbModelParam._m0[21u].w;
        float _1623 = fma(_720, cbModelParam._m0[22u].z, fma(_716, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _712)) + cbModelParam._m0[22u].w;
        float _1627 = fma(_720, cbModelParam._m0[23u].z, fma(_716, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _712)) + cbModelParam._m0[23u].w;
        float _1630 = fma(_658, cbModelParam._m0[21u].z, fma(_657, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _656));
        float _1633 = fma(_658, cbModelParam._m0[22u].z, fma(_657, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _656));
        float _1636 = fma(_658, cbModelParam._m0[23u].z, fma(_657, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _656));
        float _1745;
        if (_1630 > 0.0)
        {
            _1745 = abs((1.0 - _1619) / _1630);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1630 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1619 + 1.0) / _1630);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1745 = frontier_phi_37_33_ladder;
        }
        float _2223;
        if (_1633 > 0.0)
        {
            _2223 = abs((1.0 - _1623) / _1633);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1633 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1623 + 1.0) / _1633);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2223 = frontier_phi_49_44_ladder;
        }
        float _2560;
        if (_1636 > 0.0)
        {
            _2560 = abs((1.0 - _1627) / _1636);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1636 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1627 + 1.0) / _1636);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2560 = frontier_phi_61_56_ladder;
        }
        float _2562 = isnan(_2223) ? _1745 : (isnan(_1745) ? _2223 : min(_1745, _2223));
        float _2563 = isnan(_2560) ? _2562 : (isnan(_2562) ? _2560 : min(_2562, _2560));
        float _2567 = (_2563 * _1630) + _1619;
        float _2568 = (_2563 * _1633) + _1623;
        float _2569 = (_2563 * _1636) + _1627;
        float _2570 = _2563 * 9.9999997473787516355514526367188e-05;
        float _2571 = (-1.0) - _2570;
        float _2573 = _2570 + 1.0;
        float frontier_phi_34_61_ladder;
        float frontier_phi_34_61_ladder_1;
        float frontier_phi_34_61_ladder_2;
        if ((_2569 > _2573) || ((_2569 < _2571) || ((_2568 > _2573) || ((_2568 < _2571) || ((_2567 < _2571) || (_2567 > _2573))))))
        {
            frontier_phi_34_61_ladder = 0.0;
            frontier_phi_34_61_ladder_1 = 0.0;
            frontier_phi_34_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2690 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2569, cbModelParam._m0[17u].z, fma(_2568, cbModelParam._m0[17u].y, _2567 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2569, cbModelParam._m0[18u].z, fma(_2568, cbModelParam._m0[18u].y, _2567 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2569, cbModelParam._m0[19u].z, fma(_2568, cbModelParam._m0[19u].y, _2567 * cbModelParam._m0[19u].x))), _1564);
            frontier_phi_34_61_ladder = _2690.z * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_1 = _2690.y * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_2 = _2690.x * cbModelParam._m0[1u].z;
        }
        _1655 = frontier_phi_34_61_ladder_2;
        _1657 = frontier_phi_34_61_ladder_1;
        _1659 = frontier_phi_34_61_ladder;
    }
    else
    {
        vec4 _1639 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_656, _657, _658), _1564);
        _1655 = _1639.x * cbModelParam._m0[1u].z;
        _1657 = _1639.y * cbModelParam._m0[1u].z;
        _1659 = _1639.z * cbModelParam._m0[1u].z;
    }
    float _1672 = (((_683 * _633) + _684) * _648) * ((cbModelParam._m0[1u].w * (_1655 - _1555)) + _1555);
    float _1674 = (((_683 * _635) + _684) * _648) * ((cbModelParam._m0[1u].w * (_1657 - _1557)) + _1557);
    float _1676 = (((_683 * _636) + _684) * _648) * ((cbModelParam._m0[1u].w * (_1659 - _1559)) + _1559);
    float _1679 = fma(_1676, cbSceneParam._m0[89u].z, fma(_1674, cbSceneParam._m0[89u].y, _1672 * cbSceneParam._m0[89u].x));
    float _1682 = fma(_1676, cbSceneParam._m0[90u].z, fma(_1674, cbSceneParam._m0[90u].y, _1672 * cbSceneParam._m0[90u].x));
    float _1685 = fma(_1676, cbSceneParam._m0[91u].z, fma(_1674, cbSceneParam._m0[91u].y, _1672 * cbSceneParam._m0[91u].x));
    float _1719 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1723 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1727 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1731 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1732 = _1719 / _1731;
    float _1733 = _1723 / _1731;
    float _1734 = _1727 / _1731;
    float _1881;
    float _1882;
    float _1883;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1761 = ((uint(_1734 > cbSceneParam._m0[59u].y) + uint(_1734 > cbSceneParam._m0[59u].x)) + uint(_1734 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1762 = _1761 + 43u;
        uint _1770 = _1761 + 44u;
        uint _1778 = _1761 + 45u;
        uint _1786 = _1761 + 46u;
        float _1797 = fma(_1731, cbSceneParam._m0[_1762].w, fma(_1727, cbSceneParam._m0[_1762].z, fma(_1723, cbSceneParam._m0[_1762].y, _1719 * cbSceneParam._m0[_1762].x)));
        float _1801 = fma(_1731, cbSceneParam._m0[_1770].w, fma(_1727, cbSceneParam._m0[_1770].z, fma(_1723, cbSceneParam._m0[_1770].y, _1719 * cbSceneParam._m0[_1770].x)));
        float _1809 = fma(_1731, cbSceneParam._m0[_1786].w, fma(_1727, cbSceneParam._m0[_1786].z, fma(_1723, cbSceneParam._m0[_1786].y, _1719 * cbSceneParam._m0[_1786].x)));
        float _1814 = cbSceneParam._m0[33u].z * _1809;
        float _1816 = cbSceneParam._m0[33u].w * _1809;
        float _1819 = fma(_1731, cbSceneParam._m0[_1778].w, fma(_1727, cbSceneParam._m0[_1778].z, fma(_1723, cbSceneParam._m0[_1778].y, _1719 * cbSceneParam._m0[_1778].x))) / _1809;
        float _1867 = (cbSceneParam._m0[33u].x - sqrt(((_1733 * _1733) + (_1732 * _1732)) + (_1734 * _1734))) * cbSceneParam._m0[33u].y;
        float _3869 = isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0));
        float _1874 = (isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1814 + _1797) / _1809, (_1816 + _1801) / _1809), _1819), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1816 + _1797) / _1809, (_1801 - _1814) / _1809), _1819), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1797 - _1814) / _1809, (_1801 - _1816) / _1809), _1819), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1797 - _1816) / _1809, (_1814 + _1801) / _1809), _1819), 0.0)).x), vec4(0.25)));
        _1881 = 1.0 - (_1874 * cbSceneParam._m0[34u].x);
        _1882 = 1.0 - (_1874 * cbSceneParam._m0[34u].y);
        _1883 = 1.0 - (_1874 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1881 = 1.0;
        _1882 = 1.0;
        _1883 = 1.0;
    }
    float _1947;
    float _1949;
    float _1951;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1935 = fma(_1731, cbSceneParam._m0[63u].w, fma(_1727, cbSceneParam._m0[63u].z, fma(_1723, cbSceneParam._m0[63u].y, _1719 * cbSceneParam._m0[63u].x)));
        float _1936 = fma(_1731, cbSceneParam._m0[60u].w, fma(_1727, cbSceneParam._m0[60u].z, fma(_1723, cbSceneParam._m0[60u].y, _1719 * cbSceneParam._m0[60u].x))) / _1935;
        float _1937 = fma(_1731, cbSceneParam._m0[61u].w, fma(_1727, cbSceneParam._m0[61u].z, fma(_1723, cbSceneParam._m0[61u].y, _1719 * cbSceneParam._m0[61u].x))) / _1935;
        float frontier_phi_46_45_ladder;
        float frontier_phi_46_45_ladder_1;
        float frontier_phi_46_45_ladder_2;
        if ((((_1936 >= cbSceneParam._m0[64u].x) && (_1937 >= cbSceneParam._m0[64u].y)) && (_1936 <= cbSceneParam._m0[64u].z)) && (_1937 <= cbSceneParam._m0[64u].w))
        {
            float _2236 = fma(_1731, cbSceneParam._m0[62u].w, fma(_1727, cbSceneParam._m0[62u].z, fma(_1723, cbSceneParam._m0[62u].y, _1719 * cbSceneParam._m0[62u].x))) / _1935;
            float _2240 = isnan(cbSceneParam._m0[41u].w) ? _2236 : (isnan(_2236) ? cbSceneParam._m0[41u].w : max(_2236, cbSceneParam._m0[41u].w));
            float _2283 = (cbSceneParam._m0[33u].x - sqrt(((_1733 * _1733) + (_1732 * _1732)) + (_1734 * _1734))) * cbSceneParam._m0[33u].y;
            float _3885 = isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0));
            float _2290 = (isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1936, cbSceneParam._m0[33u].w + _1937), _2240), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1936, _1937 - cbSceneParam._m0[33u].z), _2240), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1936 - cbSceneParam._m0[33u].z, _1937 - cbSceneParam._m0[33u].w), _2240), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1936 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1937), _2240), 0.0)).x), vec4(0.25)));
            float _2294 = 1.0 - (_2290 * cbSceneParam._m0[34u].x);
            float _2295 = 1.0 - (_2290 * cbSceneParam._m0[34u].y);
            float _2296 = 1.0 - (_2290 * cbSceneParam._m0[34u].z);
            frontier_phi_46_45_ladder = isnan(_2296) ? _1883 : (isnan(_1883) ? _2296 : min(_1883, _2296));
            frontier_phi_46_45_ladder_1 = isnan(_2295) ? _1882 : (isnan(_1882) ? _2295 : min(_1882, _2295));
            frontier_phi_46_45_ladder_2 = isnan(_2294) ? _1881 : (isnan(_1881) ? _2294 : min(_1881, _2294));
        }
        else
        {
            frontier_phi_46_45_ladder = _1883;
            frontier_phi_46_45_ladder_1 = _1882;
            frontier_phi_46_45_ladder_2 = _1881;
        }
        _1947 = frontier_phi_46_45_ladder_2;
        _1949 = frontier_phi_46_45_ladder_1;
        _1951 = frontier_phi_46_45_ladder;
    }
    else
    {
        _1947 = _1881;
        _1949 = _1882;
        _1951 = _1883;
    }
    uvec4 _1956 = floatBitsToUint(cbInstanceData._m0[_608 + 5u]);
    uint _1958 = _1956.x * 14u;
    uint _1959 = _1958 + 13u;
    float _1964 = _648 + (-1.0);
    float _1967 = (cbLight._m0[_1959].x * _1964) + 1.0;
    float _1968 = (cbLight._m0[_1959].y * _1964) + 1.0;
    uint _1969 = _1958 + 5u;
    float _1975 = isnan(1.0) ? _1968 : (isnan(_1968) ? 1.0 : min(_1968, 1.0));
    uint _1979 = _1958 + 4u;
    float _1989 = isnan(1.0) ? _1967 : (isnan(_1967) ? 1.0 : min(_1967, 1.0));
    uint _1993 = _1958 | 1u;
    float _2004 = dot(vec3(cbLight._m0[_1958].xyz), vec3(_531, _532, _533));
    float _2007 = dot(vec3(cbLight._m0[_1993].xyz), vec3(_531, _532, _533));
    float _3921 = isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0));
    float _3932 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
    float _2012 = (isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0))) * 0.3183098733425140380859375;
    float _2014 = (isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0))) * 0.3183098733425140380859375;
    float _2021 = ((cbLight._m0[_1969].x * _1975) * _2014) + (((cbLight._m0[_1979].x * _1947) * _1989) * _2012);
    float _2022 = ((_1975 * cbLight._m0[_1969].y) * _2014) + (((cbLight._m0[_1979].y * _1949) * _1989) * _2012);
    float _2023 = ((_1975 * cbLight._m0[_1969].z) * _2014) + (((cbLight._m0[_1979].z * _1951) * _1989) * _2012);
    uint _2025 = _1958 + 8u;
    float _2038 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1958].w)) * _534) * 0.949999988079071044921875);
    float _2039 = _2038 * _2038;
    float _2040 = cbLight._m0[_1958].x + _559;
    float _2041 = cbLight._m0[_1958].y + _560;
    float _2042 = cbLight._m0[_1958].z + _561;
    float _2046 = inversesqrt(dot(vec3(_2040, _2041, _2042), vec3(_2040, _2041, _2042)));
    float _2047 = _2046 * _2040;
    float _2048 = _2046 * _2041;
    float _2049 = _2046 * _2042;
    float _2050 = dot(vec3(_531, _532, _533), vec3(cbLight._m0[_1958].xyz));
    float _3943 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
    float _2053 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
    float _3954 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _2054 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
    float _2055 = dot(vec3(_531, _532, _533), vec3(_2047, _2048, _2049));
    float _3965 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
    float _2058 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
    float _2059 = dot(vec3(cbLight._m0[_1958].xyz), vec3(_2047, _2048, _2049));
    float _3976 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2063 = _2039 * _2039;
    float _2067 = ((_2058 * _2058) * (_2063 + (-1.0))) + 1.0;
    float _2075 = exp2(log2(1.0 - (isnan(1.0) ? _3976 : (isnan(_3976) ? 1.0 : min(_3976, 1.0)))) * 5.0);
    float _2076 = 0.959999978542327880859375 - _630;
    float _2078 = 0.959999978542327880859375 - _631;
    float _2079 = 0.959999978542327880859375 - _632;
    float _2086 = 1.0 - _2039;
    float _2097 = (0.5 / (((_2054 * ((_2053 * _2086) + _2039)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2086) + _2039) * _2053))) * _2053;
    float _3987 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
    float _2099 = (isnan(1.0) ? _3987 : (isnan(_3987) ? 1.0 : min(_3987, 1.0))) * (_2063 / ((_2067 * _2067) * 3.141590118408203125));
    uint _2113 = _1958 + 9u;
    float _2124 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1993].w)) * _534) * 0.949999988079071044921875);
    float _2125 = _2124 * _2124;
    float _2126 = cbLight._m0[_1993].x + _559;
    float _2127 = cbLight._m0[_1993].y + _560;
    float _2128 = cbLight._m0[_1993].z + _561;
    float _2132 = inversesqrt(dot(vec3(_2126, _2127, _2128), vec3(_2126, _2127, _2128)));
    float _2133 = _2132 * _2126;
    float _2134 = _2132 * _2127;
    float _2135 = _2132 * _2128;
    float _2136 = dot(vec3(_531, _532, _533), vec3(cbLight._m0[_1993].xyz));
    float _3998 = isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0));
    float _2139 = isnan(1.0) ? _3998 : (isnan(_3998) ? 1.0 : min(_3998, 1.0));
    float _2140 = dot(vec3(_531, _532, _533), vec3(_2133, _2134, _2135));
    float _4009 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
    float _2143 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
    float _2144 = dot(vec3(cbLight._m0[_1993].xyz), vec3(_2133, _2134, _2135));
    float _4020 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0));
    float _2148 = _2125 * _2125;
    float _2152 = ((_2143 * _2143) * (_2148 + (-1.0))) + 1.0;
    float _2159 = exp2(log2(1.0 - (isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0)))) * 5.0);
    float _2166 = 1.0 - _2125;
    float _2176 = (0.5 / (((_2054 * ((_2139 * _2166) + _2125)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2166) + _2125) * _2139))) * _2139;
    float _4031 = isnan(0.0) ? _2176 : (isnan(_2176) ? 0.0 : max(_2176, 0.0));
    float _2178 = (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0))) * (_2148 / ((_2152 * _2152) * 3.141590118408203125));
    float _2188 = (((((_2159 * _2076) + _633) * cbLight._m0[_2113].x) * _2178) * _1975) + ((((cbLight._m0[_2025].x * _1947) * ((_2075 * _2076) + _633)) * _2099) * _1989);
    float _2189 = (((((_2159 * _2078) + _635) * cbLight._m0[_2113].y) * _2178) * _1975) + ((((cbLight._m0[_2025].y * _1949) * ((_2075 * _2078) + _635)) * _2099) * _1989);
    float _2190 = (((((_2159 * _2079) + _636) * cbLight._m0[_2113].z) * _2178) * _1975) + ((((cbLight._m0[_2025].z * _1951) * ((_2075 * _2079) + _636)) * _2099) * _1989);
    float _2353;
    float _2355;
    float _2357;
    float _2359;
    float _2361;
    float _2363;
    if (_1956.y == 0u)
    {
        uvec4 _2308 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2309 = _2308.x;
        uint _2320 = uint((float(_2308.y) * floor(float(uint(cbSceneParam._m0[85u].y * _568) / _2309))) + floor(float(uint(cbSceneParam._m0[85u].x * _567) / _2309)));
        float _2330 = (log2(_1734 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2331 = isnan(0.0) ? _2330 : (isnan(_2330) ? 0.0 : max(_2330, 0.0));
        uint _2334 = uint(isnan(14.0) ? _2331 : (isnan(_2331) ? 14.0 : min(_2331, 14.0)));
        uvec4 _2339 = texelFetch(g_lightClusterGridBuffer, int(((_2334 << 2u) + (_2320 << 6u)) >> 2u));
        uint _2340 = _2339.x;
        uint _2341 = _2308.z;
        float _2448;
        float _2450;
        float _2452;
        float _2454;
        float _2456;
        float _2458;
        if (((((1u << ((_2341 >> 4u) & 15u)) + 4294967295u) & _2340) == 0u) || ((_2341 & 240u) == 0u))
        {
            _2448 = 0.0;
            _2450 = 0.0;
            _2452 = 0.0;
            _2454 = 0.0;
            _2456 = 0.0;
            _2458 = 0.0;
        }
        else
        {
            float _2449;
            float _2451;
            float _2453;
            float _2455;
            float _2457;
            float _2459;
            float _2618 = 0.0;
            float _2619 = 0.0;
            float _2620 = 0.0;
            float _2621 = 0.0;
            float _2622 = 0.0;
            float _2623 = 0.0;
            uint _2624 = 0u;
            uint _2633;
            bool _2634;
            for (;;)
            {
                _2633 = texelFetch(g_lightClassification, int((((_2334 << 5u) + (_2320 << 9u)) + (_2624 << 2u)) >> 2u)).x;
                _2634 = _2633 == 0u;
                float frontier_phi_70_pred;
                float frontier_phi_70_pred_1;
                float frontier_phi_70_pred_2;
                float frontier_phi_70_pred_3;
                float frontier_phi_70_pred_4;
                float frontier_phi_70_pred_5;
                if (_2634)
                {
                    frontier_phi_70_pred = _2621;
                    frontier_phi_70_pred_1 = _2623;
                    frontier_phi_70_pred_2 = _2622;
                    frontier_phi_70_pred_3 = _2620;
                    frontier_phi_70_pred_4 = _2619;
                    frontier_phi_70_pred_5 = _2618;
                }
                else
                {
                    float _2763;
                    float _2764;
                    float _2765;
                    float _2766;
                    float _2767;
                    float _2768;
                    uint _2769;
                    _2763 = _2618;
                    _2764 = _2619;
                    _2765 = _2620;
                    _2766 = _2621;
                    _2767 = _2622;
                    _2768 = _2623;
                    _2769 = _2633;
                    float _2695;
                    float _2696;
                    float _2697;
                    float _2698;
                    float _2699;
                    float _2700;
                    for (;;)
                    {
                        uint _2773 = uint(findLSB(_2769)) + (_2624 << 5u);
                        uint _2770 = (_2769 + 4294967295u) & _2769;
                        uint _2775 = _2773 * 48u;
                        vec4 _2789 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2775)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2775 + 3u)).x));
                        uint _2795 = (_2773 * 48u) + 4u;
                        vec4 _2808 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2795)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2795 + 3u)).x));
                        uint _2814 = (_2773 * 48u) + 8u;
                        vec3 _2825 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2814)).x, texelFetch(g_PointLightRenderingBuffer, int(_2814 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2814 + 2u)).x));
                        float _2829 = _2789.x - _1732;
                        float _2830 = _2789.y - _1733;
                        float _2831 = _2789.z - _1734;
                        float _2832 = dot(vec3(_2829, _2830, _2831), vec3(_2829, _2830, _2831));
                        float _2835 = inversesqrt(_2832);
                        float _2836 = _2835 * _2829;
                        float _2837 = _2835 * _2830;
                        float _2838 = _2835 * _2831;
                        float _2839 = dot(vec3(_589, _592, _595), vec3(_2836, _2837, _2838));
                        float _2844 = 1.0 - (_2832 * _2789.w);
                        float _4052 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
                        float _2845 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
                        float _2846 = sqrt(_2832) * _2808.w;
                        float _2849 = 1.39999997615814208984375 / (_2846 + 1.39999997615814208984375);
                        float _2850 = _2849 * _2849;
                        float _2853 = ((1.0 - _2850) * _2839) + _2850;
                        float _2856 = _2846 * _2846;
                        float _2860 = ((isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0))) * _2845) / ((_2856 * 0.699999988079071044921875) + 1.0);
                        float _2864 = (-0.0) - _1732;
                        float _2865 = (-0.0) - _1733;
                        float _2866 = (-0.0) - _1734;
                        float _2870 = inversesqrt(dot(vec3(_2864, _2865, _2866), vec3(_2864, _2865, _2866)));
                        float _2871 = _2870 * _2864;
                        float _2872 = _2870 * _2865;
                        float _2873 = _2870 * _2866;
                        float _2880 = exp2(log2(1.0 / ((_2856 * 3.5) + 5.0)) * 0.25);
                        float _2881 = 1.0 - _664;
                        float _2888 = sqrt(1.0 - ((1.0 - (_2881 * _2881)) * (1.0 - (_2880 * _2880))));
                        float _2889 = _2888 * _2888;
                        float _2890 = _2889 * _2889;
                        float _2891 = _2871 + _2836;
                        float _2892 = _2872 + _2837;
                        float _2893 = _2873 + _2838;
                        float _2897 = inversesqrt(dot(vec3(_2891, _2892, _2893), vec3(_2891, _2892, _2893)));
                        float _2901 = dot(vec3(_589, _592, _595), vec3(_2871, _2872, _2873));
                        float _4068 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
                        float _2904 = isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0));
                        float _2905 = dot(vec3(_589, _592, _595), vec3(_2897 * _2891, _2897 * _2892, _2897 * _2893));
                        float _4079 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
                        float _2908 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
                        float _2912 = ((_2908 * _2908) * (_2890 + (-1.0))) + 1.0;
                        float _2913 = _2849 * _2889;
                        float _2914 = _2913 * _2913;
                        float _2917 = ((1.0 - _2914) * _2839) + _2914;
                        float _4090 = isnan(0.0) ? _2917 : (isnan(_2917) ? 0.0 : max(_2917, 0.0));
                        float _2918 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
                        float _2919 = 1.0 - _2889;
                        float _2929 = (0.5 / (((_2918 * ((_2904 * _2919) + _2889)) + 9.9999999392252902907785028219223e-09) + (((_2918 * _2919) + _2889) * _2904))) * _2918;
                        float _4101 = isnan(0.0) ? _2929 : (isnan(_2929) ? 0.0 : max(_2929, 0.0));
                        float _2940 = (((_2890 * 3.1415927410125732421875) * (isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0)))) / ((_2912 * _2912) * ((_2856 * 2.1991131305694580078125) + 3.141590118408203125))) * _2845;
                        _2698 = (_2860 * _2808.x) + _2766;
                        _2699 = (_2860 * _2808.y) + _2767;
                        _2700 = (_2860 * _2808.z) + _2768;
                        _2695 = (_2940 * _2825.x) + _2763;
                        _2696 = (_2940 * _2825.y) + _2764;
                        _2697 = (_2940 * _2825.z) + _2765;
                        if (_2770 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2763 = _2695;
                            _2764 = _2696;
                            _2765 = _2697;
                            _2766 = _2698;
                            _2767 = _2699;
                            _2768 = _2700;
                            _2769 = _2770;
                        }
                    }
                    frontier_phi_70_pred = _2698;
                    frontier_phi_70_pred_1 = _2700;
                    frontier_phi_70_pred_2 = _2699;
                    frontier_phi_70_pred_3 = _2697;
                    frontier_phi_70_pred_4 = _2696;
                    frontier_phi_70_pred_5 = _2695;
                }
                _2455 = frontier_phi_70_pred;
                _2459 = frontier_phi_70_pred_1;
                _2457 = frontier_phi_70_pred_2;
                _2453 = frontier_phi_70_pred_3;
                _2451 = frontier_phi_70_pred_4;
                _2449 = frontier_phi_70_pred_5;
                uint _2625 = _2624 + 1u;
                if (_2625 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2618 = _2449;
                    _2619 = _2451;
                    _2620 = _2453;
                    _2621 = _2455;
                    _2622 = _2457;
                    _2623 = _2459;
                    _2624 = _2625;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2448 = _2449;
            _2450 = _2451;
            _2452 = _2453;
            _2454 = _2455;
            _2456 = _2457;
            _2458 = _2459;
        }
        uvec4 _2462 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2463 = _2462.z;
        uint _2465 = (_2463 >> 8u) & 15u;
        float _2586;
        float _2588;
        float _2590;
        float _2592;
        float _2594;
        float _2596;
        if (((4294967295u << _2465) & _2340) == 0u)
        {
            _2586 = _2448;
            _2588 = _2450;
            _2590 = _2452;
            _2592 = _2454;
            _2594 = _2456;
            _2596 = _2458;
        }
        else
        {
            float _2611 = inversesqrt(dot(vec3(_1732, _1733, _1734), vec3(_1732, _1733, _1734)));
            float _2612 = _2611 * _1732;
            float _2613 = _2611 * _1733;
            float _2614 = _2611 * _1734;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2465 < ((_2463 >> 12u) & 15u))
            {
                float _2587;
                float _2589;
                float _2591;
                float _2593;
                float _2595;
                float _2597;
                float _2746 = _2448;
                float _2747 = _2450;
                float _2748 = _2452;
                float _2749 = _2454;
                float _2750 = _2456;
                float _2751 = _2458;
                uint _2752 = _2465;
                uint _2761;
                bool _2762;
                for (;;)
                {
                    _2761 = texelFetch(g_lightClassification, int((((_2334 << 5u) + (_2320 << 9u)) + (_2752 << 2u)) >> 2u)).x;
                    _2762 = _2761 == 0u;
                    float frontier_phi_76_pred;
                    float frontier_phi_76_pred_1;
                    float frontier_phi_76_pred_2;
                    float frontier_phi_76_pred_3;
                    float frontier_phi_76_pred_4;
                    float frontier_phi_76_pred_5;
                    if (_2762)
                    {
                        frontier_phi_76_pred = _2751;
                        frontier_phi_76_pred_1 = _2750;
                        frontier_phi_76_pred_2 = _2749;
                        frontier_phi_76_pred_3 = _2748;
                        frontier_phi_76_pred_4 = _2747;
                        frontier_phi_76_pred_5 = _2746;
                    }
                    else
                    {
                        float _2945;
                        float _2946;
                        float _2947;
                        float _2948;
                        float _2949;
                        float _2950;
                        float _3238;
                        float _3239;
                        float _3240;
                        float _3241;
                        float _3242;
                        float _3243;
                        float _2958 = _2746;
                        float _2959 = _2747;
                        float _2960 = _2748;
                        float _2961 = _2749;
                        float _2962 = _2750;
                        float _2963 = _2751;
                        uint _2964 = _2761;
                        uint _2965;
                        vec4 _2990;
                        float _2991;
                        vec4 _3006;
                        vec3 _3018;
                        vec4 _3033;
                        vec4 _3048;
                        float _3094;
                        bool _3095;
                        for (;;)
                        {
                            uint _2975 = ((_2752 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2964));
                            _2965 = (_2964 + 4294967295u) & _2964;
                            uint _2977 = _2975 * 40u;
                            _2990 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2977)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2977 + 3u)).x));
                            _2991 = _2990.w;
                            uint _2993 = (_2975 * 40u) + 4u;
                            _3006 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2993)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2993 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2993 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2993 + 3u)).x));
                            uint _3008 = (_2975 * 40u) + 8u;
                            _3018 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3008)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3008 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3008 + 2u)).x));
                            uint _3020 = (_2975 * 40u) + 16u;
                            _3033 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3020)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3020 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3020 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3020 + 3u)).x));
                            uint _3035 = (_2975 * 40u) + 20u;
                            _3048 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3035)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3035 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3035 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3035 + 3u)).x));
                            uint _3050 = (_2975 * 40u) + 24u;
                            vec4 _3063 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3050)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3050 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3050 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3050 + 3u)).x));
                            uint _3069 = (_2975 * 40u) + 28u;
                            vec4 _3082 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3069)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3069 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3069 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3069 + 3u)).x));
                            _3094 = fma(_1734, _3082.z, fma(_1733, _3082.y, _3082.x * _1732)) + _3082.w;
                            _3095 = !((fma(_1734, _3063.z, fma(_1733, _3063.y, _3063.x * _1732)) + _3063.w) <= 0.0);
                            float frontier_phi_82_pred;
                            float frontier_phi_82_pred_1;
                            float frontier_phi_82_pred_2;
                            float frontier_phi_82_pred_3;
                            float frontier_phi_82_pred_4;
                            float frontier_phi_82_pred_5;
                            if (_3095)
                            {
                                float _3122 = _2990.x - _1732;
                                float _3123 = _2990.y - _1733;
                                float _3124 = _2990.z - _1734;
                                float _3125 = dot(vec3(_3122, _3123, _3124), vec3(_3122, _3123, _3124));
                                float _3128 = inversesqrt(_3125);
                                float _3129 = _3128 * _3122;
                                float _3130 = _3128 * _3123;
                                float _3131 = _3128 * _3124;
                                float _3135 = 1.0 - (_3125 / (_2991 * _2991));
                                float _4112 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
                                float _3136 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
                                float _3140 = sqrt(_3125) * _3006.w;
                                float _3142 = 1.39999997615814208984375 / (_3140 + 1.39999997615814208984375);
                                float _3143 = _3142 * _3142;
                                float _3146 = ((1.0 - _3143) * dot(vec3(_3129, _3130, _3131), vec3(_589, _592, _595))) + _3143;
                                float _3149 = _3140 * _3140;
                                float _3153 = (fma(_1734, _3033.z, fma(_1733, _3033.y, _3033.x * _1732)) + _3033.w) / _3094;
                                float _3154 = (fma(_1734, _3048.z, fma(_1733, _3048.y, _3048.x * _1732)) + _3048.w) / _3094;
                                float _3158 = 1.0 - dot(vec2(_3153, _3154), vec2(_3153, _3154));
                                float _4128 = isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0));
                                float _3159 = isnan(1.0) ? _4128 : (isnan(_4128) ? 1.0 : min(_4128, 1.0));
                                float _3160 = _3159 * (((isnan(0.0) ? _3146 : (isnan(_3146) ? 0.0 : max(_3146, 0.0))) * _3136) / ((_3149 * 0.699999988079071044921875) + 1.0));
                                float _3172 = exp2(log2(1.0 / ((_3149 * 3.5) + 5.0)) * 0.25);
                                float _3173 = 1.0 - _664;
                                float _3180 = sqrt(1.0 - ((1.0 - (_3173 * _3173)) * (1.0 - (_3172 * _3172))));
                                float _3181 = _3180 * _3180;
                                float _3182 = _3181 * _3181;
                                float _3183 = _3129 - _2612;
                                float _3184 = _3130 - _2613;
                                float _3185 = _3131 - _2614;
                                float _3189 = inversesqrt(dot(vec3(_3183, _3184, _3185), vec3(_3183, _3184, _3185)));
                                float _3193 = dot(vec3(_589, _592, _595), vec3((-0.0) - _2612, (-0.0) - _2613, (-0.0) - _2614));
                                float _4139 = isnan(0.0) ? _3193 : (isnan(_3193) ? 0.0 : max(_3193, 0.0));
                                float _3196 = isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0));
                                float _3197 = dot(vec3(_589, _592, _595), vec3(_3189 * _3183, _3189 * _3184, _3189 * _3185));
                                float _4150 = isnan(0.0) ? _3197 : (isnan(_3197) ? 0.0 : max(_3197, 0.0));
                                float _3200 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
                                float _3204 = ((_3200 * _3200) * (_3182 + (-1.0))) + 1.0;
                                float _3205 = _3142 * _3181;
                                float _3206 = _3205 * _3205;
                                float _3212 = ((1.0 - _3206) * dot(vec3(_589, _592, _595), vec3(_3129, _3130, _3131))) + _3206;
                                float _4161 = isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0));
                                float _3213 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
                                float _3214 = 1.0 - _3181;
                                float _3224 = (0.5 / (((_3213 * ((_3196 * _3214) + _3181)) + 9.9999999392252902907785028219223e-09) + (((_3213 * _3214) + _3181) * _3196))) * _3213;
                                float _4172 = isnan(0.0) ? _3224 : (isnan(_3224) ? 0.0 : max(_3224, 0.0));
                                float _3234 = (_3159 * _3136) * (((_3182 * 3.1415927410125732421875) * (isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0)))) / ((_3204 * _3204) * ((_3149 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_82_pred = _3160 * _3006.z;
                                frontier_phi_82_pred_1 = _3160 * _3006.y;
                                frontier_phi_82_pred_2 = _3160 * _3006.x;
                                frontier_phi_82_pred_3 = _3234 * _3018.z;
                                frontier_phi_82_pred_4 = _3234 * _3018.y;
                                frontier_phi_82_pred_5 = _3234 * _3018.x;
                            }
                            else
                            {
                                frontier_phi_82_pred = 0.0;
                                frontier_phi_82_pred_1 = 0.0;
                                frontier_phi_82_pred_2 = 0.0;
                                frontier_phi_82_pred_3 = 0.0;
                                frontier_phi_82_pred_4 = 0.0;
                                frontier_phi_82_pred_5 = 0.0;
                            }
                            _3243 = frontier_phi_82_pred;
                            _3242 = frontier_phi_82_pred_1;
                            _3241 = frontier_phi_82_pred_2;
                            _3240 = frontier_phi_82_pred_3;
                            _3239 = frontier_phi_82_pred_4;
                            _3238 = frontier_phi_82_pred_5;
                            _2948 = _3241 + _2961;
                            _2949 = _3242 + _2962;
                            _2950 = _3243 + _2963;
                            _2945 = _3238 + _2958;
                            _2946 = _3239 + _2959;
                            _2947 = _3240 + _2960;
                            if (_2965 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2958 = _2945;
                                _2959 = _2946;
                                _2960 = _2947;
                                _2961 = _2948;
                                _2962 = _2949;
                                _2963 = _2950;
                                _2964 = _2965;
                                continue;
                            }
                        }
                        frontier_phi_76_pred = _2950;
                        frontier_phi_76_pred_1 = _2949;
                        frontier_phi_76_pred_2 = _2948;
                        frontier_phi_76_pred_3 = _2947;
                        frontier_phi_76_pred_4 = _2946;
                        frontier_phi_76_pred_5 = _2945;
                    }
                    _2597 = frontier_phi_76_pred;
                    _2595 = frontier_phi_76_pred_1;
                    _2593 = frontier_phi_76_pred_2;
                    _2591 = frontier_phi_76_pred_3;
                    _2589 = frontier_phi_76_pred_4;
                    _2587 = frontier_phi_76_pred_5;
                    uint _2753 = _2752 + 1u;
                    if (_2753 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2746 = _2587;
                        _2747 = _2589;
                        _2748 = _2591;
                        _2749 = _2593;
                        _2750 = _2595;
                        _2751 = _2597;
                        _2752 = _2753;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _2595;
                frontier_phi_63_64_ladder_1 = _2597;
                frontier_phi_63_64_ladder_2 = _2593;
                frontier_phi_63_64_ladder_3 = _2591;
                frontier_phi_63_64_ladder_4 = _2589;
                frontier_phi_63_64_ladder_5 = _2587;
            }
            else
            {
                frontier_phi_63_64_ladder = _2456;
                frontier_phi_63_64_ladder_1 = _2458;
                frontier_phi_63_64_ladder_2 = _2454;
                frontier_phi_63_64_ladder_3 = _2452;
                frontier_phi_63_64_ladder_4 = _2450;
                frontier_phi_63_64_ladder_5 = _2448;
            }
            _2586 = frontier_phi_63_64_ladder_5;
            _2588 = frontier_phi_63_64_ladder_4;
            _2590 = frontier_phi_63_64_ladder_3;
            _2592 = frontier_phi_63_64_ladder_2;
            _2594 = frontier_phi_63_64_ladder;
            _2596 = frontier_phi_63_64_ladder_1;
        }
        float _2601 = isnan(1.0) ? _648 : (isnan(_648) ? 1.0 : min(_648, 1.0));
        _2353 = (_2601 * _2592) + _2021;
        _2355 = (_2601 * _2594) + _2022;
        _2357 = (_2601 * _2596) + _2023;
        _2359 = ((_2586 * _633) * _2601) + _2188;
        _2361 = ((_2588 * _635) * _2601) + _2189;
        _2363 = ((_2590 * _636) * _2601) + _2190;
    }
    else
    {
        _2353 = _2021;
        _2355 = _2022;
        _2357 = _2023;
        _2359 = _2188;
        _2361 = _2189;
        _2363 = _2190;
    }
    float _4188 = isnan(0.0) ? _623 : (isnan(_623) ? 0.0 : max(_623, 0.0));
    float _4199 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _4210 = isnan(0.0) ? _625 : (isnan(_625) ? 0.0 : max(_625, 0.0));
    float _2380 = ((isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0))) * (_2353 + ((isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0))) * _648))) + ((_2359 + ((isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0))) * _1462)) * cbPerFrame._m0[3u].x);
    float _2381 = ((isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0))) * (_2355 + ((isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0))) * _648))) + ((_2361 + ((isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0))) * _1462)) * cbPerFrame._m0[3u].x);
    float _2382 = ((isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0))) * (_2357 + ((isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0))) * _648))) + ((_2363 + ((isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0))) * _1462)) * cbPerFrame._m0[3u].x);
    uint _2386 = _608 + 6u;
    float _2394 = _567 / cbSceneParam._m0[86u].x;
    float _2395 = _568 / cbSceneParam._m0[86u].y;
    vec4 _2409 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2394, _2395, (log2((isnan(cbSceneParam._m0[77u].w) ? _554 : (isnan(_554) ? cbSceneParam._m0[77u].w : min(_554, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2411 = _2409.x;
    float _2412 = _2409.y;
    float _2413 = _2409.z;
    float _2414 = _2409.w;
    float _2510;
    float _2512;
    float _2514;
    float _2516;
    if (_554 > cbSceneParam._m0[78u].w)
    {
        float _2473 = isnan(_554) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _554 : min(cbSceneParam._m0[80u].w, _554));
        float _2474 = _2473 / _554;
        float _2485 = _2474 * _261;
        float _2486 = _262 * _2474;
        float _2487 = (-0.0) - _2486;
        float _2488 = _2474 * _263;
        float _2490 = (cbSceneParam._m0[77u].w * _2487) / _2473;
        float _2491 = _2490 + cbSceneParam._m0[79u].w;
        float _2492 = cbSceneParam._m0[79u].w - _2486;
        float _2498 = sqrt(((_2485 * _2485) + (_2486 * _2486)) + (_2488 * _2488));
        float _2501 = (1.0 - (cbSceneParam._m0[77u].w / _2473)) * _2498;
        float _2506 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2508 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2708;
        if (abs((_2487 - _2490) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2708 = ((((_2491 > 0.0) ? exp2(_2506 * _2491) : (2.0 - exp2(_2508 * _2491))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2501;
        }
        else
        {
            float _2647 = 1.0 / cbSceneParam._m0[80u].x;
            float _2648 = isnan(_2492) ? _2491 : (isnan(_2491) ? _2492 : max(_2491, _2492));
            float _2649 = isnan(_2492) ? _2491 : (isnan(_2491) ? _2492 : min(_2491, _2492));
            float _2658 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : min(_2648, 0.0));
            float _2659 = isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : min(_2649, 0.0));
            _2708 = ((abs(_2498 / _2487) * cbSceneParam._m0[80u].y) * ((((_2658 - _2659) * 2.0) - ((exp2(_2506 * (isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0)))) - exp2(_2506 * (isnan(0.0) ? _2649 : (isnan(_2649) ? 0.0 : max(_2649, 0.0))))) * _2647)) - ((exp2(_2508 * _2658) - exp2(_2508 * _2659)) * _2647))) + (_2501 * cbSceneParam._m0[80u].z);
        }
        vec4 _2710 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2394, _2395, 1.0), 0.0);
        float _2719 = exp2((_2708 * (-1.44269502162933349609375)) * (1.0 - _2710.w));
        float _2720 = log2(_2719);
        float _2736 = log2(_2414);
        _2510 = (exp2(_2736 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2720 * cbSceneParam._m0[78u].x)) * _2710.x) / cbSceneParam._m0[78u].x)) + _2411;
        _2512 = (exp2(_2736 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2720 * cbSceneParam._m0[78u].y)) * _2710.y) / cbSceneParam._m0[78u].y)) + _2412;
        _2514 = (exp2(_2736 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2720 * cbSceneParam._m0[78u].z)) * _2710.z) / cbSceneParam._m0[78u].z)) + _2413;
        _2516 = _2719 * _2414;
    }
    else
    {
        _2510 = _2411;
        _2512 = _2412;
        _2514 = _2413;
        _2516 = _2414;
    }
    float _2528 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2529 = _2528 == 3.0;
    float _2530 = log2(_2516);
    float _2537 = exp2(_2530 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0)));
    float _2538 = exp2(_2530 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0)));
    float _2539 = exp2(_2530 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2382 : (isnan(_2382) ? 0.0 : max(_2382, 0.0)));
    float _2548 = (_2528 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2548 * (_2529 ? _2537 : (_2537 + (cbSceneParam._m0[72u].w * _2510)));
    SV_Target.y = _2548 * (_2529 ? _2538 : (_2538 + (cbSceneParam._m0[72u].w * _2512)));
    SV_Target.z = _2548 * (_2529 ? _2539 : (_2539 + (cbSceneParam._m0[72u].w * _2514)));
    SV_Target.w = cbInstanceData._m0[_2386].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2386].w;
}


