#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _138 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _139 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _140 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _145 = inversesqrt(dot(vec3(_138, _139, _140), vec3(_138, _139, _140)));
    float _146 = _145 * _138;
    float _147 = _145 * _139;
    float _148 = _145 * _140;
    float _152 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _153 = _152 * NORMAL.x;
    float _154 = _152 * NORMAL.y;
    float _155 = _152 * NORMAL.z;
    float _159 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _160 = _159 * TANGENT.x;
    float _161 = _159 * TANGENT.y;
    float _162 = _159 * TANGENT.z;
    float _207 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _238 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _244 = _238.w;
    float _257 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _244) + cbMtdParam._m0[11u].x) * _238.x;
    float _259 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _244) + cbMtdParam._m0[11u].y) * _238.y;
    float _261 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _244) + cbMtdParam._m0[11u].z) * _238.z;
    vec4 _279 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _283 = _279.z;
    float _306 = (_279.x * 2.0) + (-1.0);
    float _308 = (_279.y * 2.0) + (-1.0);
    float _311 = _306 - (_306 * _244);
    float _312 = _308 - (_308 * _244);
    float _321 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _207));
    float _322 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _207));
    float _323 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _207));
    float _337 = (-0.0) - dot(vec3(_321, _322, _323), vec3(_146, _147, _148));
    float _338 = (-0.0) - dot(vec3(_321, _322, _323), vec3(_160, _161, _162));
    float _339 = (-0.0) - dot(vec3(_321, _322, _323), vec3((-0.0) - _153, (-0.0) - _154, (-0.0) - _155));
    float _343 = inversesqrt(dot(vec3(_337, _338, _339), vec3(_337, _338, _339)));
    float _346 = _343 * _339;
    float _347 = (_343 * _337) + (_311 * cbMtdParam._m0[20u].y);
    float _348 = (_343 * _338) + (_312 * cbMtdParam._m0[20u].z);
    float _349 = _347 * cbMtdParam._m0[19u].x;
    float _350 = _348 * cbMtdParam._m0[18u].w;
    float _351 = fract(TEXCOORD.x);
    float _352 = fract(TEXCOORD.y);
    float _358;
    if (_349 > 0.0)
    {
        _358 = (1.0 - _351) / _349;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_349 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _351) / _349;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _358 = frontier_phi_3_2_ladder;
    }
    float _366;
    if (_350 > 0.0)
    {
        _366 = (1.0 - _352) / _350;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_350 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _352) / _350;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _366 = frontier_phi_7_6_ladder;
    }
    bool _368 = _346 > 0.0;
    float _370 = _368 ? (cbMtdParam._m0[15u].x / _346) : 5000.0;
    float _371 = isnan(_366) ? _358 : (isnan(_358) ? _366 : min(_358, _366));
    float _372 = isnan(_370) ? _371 : (isnan(_371) ? _370 : min(_371, _370));
    float _376 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _377 = _351 + (-0.5);
    float _380 = _352 + (-0.5);
    float _383 = ((_372 * _346) + _376) / _376;
    vec4 _408 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_377 + (_372 * _349)) / _383) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_380 + (_372 * _350)) / _383) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _410 = _408.x;
    float _411 = _408.y;
    float _412 = _408.z;
    float _424 = (_410 - (_410 * _244)) * cbMtdParam._m0[9u].x;
    float _425 = (_411 - (_411 * _244)) * cbMtdParam._m0[9u].y;
    float _426 = cbMtdParam._m0[9u].z * (_412 - (_412 * _244));
    float _444 = _347 * cbMtdParam._m0[21u].x;
    float _445 = _348 * cbMtdParam._m0[20u].w;
    bool _446 = _444 > 0.0;
    float _451;
    if (_446)
    {
        _451 = (1.0 - _351) / _444;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_444 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _351) / _444;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _451 = frontier_phi_11_10_ladder;
    }
    bool _453 = _445 > 0.0;
    float _458;
    if (_453)
    {
        _458 = (1.0 - _352) / _445;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_445 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _352) / _445;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _458 = frontier_phi_15_14_ladder;
    }
    float _461 = _368 ? (cbMtdParam._m0[16u].z / _346) : 5000.0;
    float _462 = isnan(_458) ? _451 : (isnan(_451) ? _458 : min(_451, _458));
    float _463 = isnan(_461) ? _462 : (isnan(_462) ? _461 : min(_462, _461));
    float _467 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _471 = ((_463 * _346) + _467) / _467;
    float _476 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _478 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _494 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_377 + (_463 * _444)) / _471) + 0.5) + _476) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_380 + (_463 * _445)) / _471) + 0.5) + _478) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _499 = _494.x * cbMtdParam._m0[10u].x;
    float _500 = _494.y * cbMtdParam._m0[10u].y;
    float _501 = _494.z * cbMtdParam._m0[10u].z;
    float _509;
    if (_446)
    {
        _509 = (1.0 - _351) / _444;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_444 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _351) / _444;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _509 = frontier_phi_19_18_ladder;
    }
    float _515;
    if (_453)
    {
        _515 = (1.0 - _352) / _445;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_445 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _352) / _445;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _515 = frontier_phi_23_22_ladder;
    }
    float _517 = isnan(_515) ? _509 : (isnan(_509) ? _515 : min(_509, _515));
    float _518 = isnan(_461) ? _517 : (isnan(_517) ? _461 : min(_517, _461));
    float _525 = ((_518 * _346) + _467) / _467;
    vec4 _539 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_377 + (_518 * _444)) / _525) + 0.5) + _476) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_380 + (_518 * _445)) / _525) + 0.5) + _478) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _541 = _539.w;
    float _543 = _541 - (_541 * _244);
    float _554 = 0.5 - (_244 * 0.5);
    float _564 = (((_424 - _257) + (_543 * ((_499 - _424) - (_499 * _244)))) * _554) + _257;
    float _565 = (((_425 - _259) + (_543 * ((_500 - _425) - (_500 * _244)))) * _554) + _259;
    float _566 = (((_426 - _261) + (_543 * ((_501 - _426) - (_501 * _244)))) * _554) + _261;
    vec4 _578 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _580 = _578.x;
    vec4 _592 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _596 = _592.z;
    float _599 = (_592.x * 2.0) + (-1.0);
    float _600 = (_592.y * 2.0) + (-1.0);
    float _601 = dot(vec2(_599, _600), vec2(_599, _600));
    float _787 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _606 = sqrt(1.0 - (isnan(1.0) ? _787 : (isnan(_787) ? 1.0 : min(_787, 1.0))));
    float _607 = _596 * _244;
    float _614 = (cbMtdParam._m0[15u].w * ((_283 - _607) + ((_596 - _283) * _244))) + _607;
    float _618 = (cbMtdParam._m0[16u].x * _311) + _599;
    float _619 = (cbMtdParam._m0[16u].x * _312) + _600;
    float _622 = fma(_606, _153, fma(_619, _160, _618 * _146));
    float _625 = fma(_606, _154, fma(_619, _161, _618 * _147));
    float _628 = fma(_606, _155, fma(_619, _162, _618 * _148));
    float _632 = inversesqrt(dot(vec3(_622, _625, _628), vec3(_622, _625, _628)));
    float _798 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _809 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _820 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _831 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _842 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    uint _652 = uint(roundEven(NORMAL.w)) * 13u;
    uint _655 = (_652 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _661 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _809 : (isnan(_809) ? 1.0 : min(_809, 1.0)))) * cbInstanceData._m0[_655].x;
    float _662 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _820 : (isnan(_820) ? 1.0 : min(_820, 1.0)))) * cbInstanceData._m0[_655].y;
    float _663 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _831 : (isnan(_831) ? 1.0 : min(_831, 1.0)))) * cbInstanceData._m0[_655].z;
    float _853 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _864 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _875 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    uint _667 = _652 + 6u;
    bool _694 = cbMtdParam._m0[1u].z != 0.0;
    float _695 = _694 ? cbInstanceData._m0[_667].w : 0.0;
    SV_Target.x = ((_622 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.y = ((_625 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.z = ((_628 * 0.5) * _632) + 0.500488758087158203125;
    SV_Target.w = _695;
    SV_Target_1.x = isnan(1.0) ? _842 : (isnan(_842) ? 1.0 : min(_842, 1.0));
    SV_Target_1.y = isnan(1.0) ? _798 : (isnan(_798) ? 1.0 : min(_798, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _694 ? cbInstanceData._m0[_667].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _853 : (isnan(_853) ? 1.0 : min(_853, 1.0));
    SV_Target_2.y = isnan(1.0) ? _864 : (isnan(_864) ? 1.0 : min(_864, 1.0));
    SV_Target_2.z = isnan(1.0) ? _875 : (isnan(_875) ? 1.0 : min(_875, 1.0));
    SV_Target_2.w = _694 ? cbInstanceData._m0[_667].w : (float(floatBitsToUint(cbInstanceData._m0[_652 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _695;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _695;
}


