#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D M_Interior_M1_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1161;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _186 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _187 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _188 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _193 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _194 = _193 * _186;
    float _195 = _193 * _187;
    float _196 = _193 * _188;
    float _200 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _201 = _200 * NORMAL.x;
    float _202 = _200 * NORMAL.y;
    float _203 = _200 * NORMAL.z;
    float _207 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _208 = _207 * TANGENT.x;
    float _209 = _207 * TANGENT.y;
    float _210 = _207 * TANGENT.z;
    float _255 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _265 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _255);
    float _266 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _255);
    float _267 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _255);
    vec4 _286 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _292 = _286.w;
    float _305 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _292) + cbMtdParam._m0[11u].x) * _286.x;
    float _307 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _292) + cbMtdParam._m0[11u].y) * _286.y;
    float _309 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _292) + cbMtdParam._m0[11u].z) * _286.z;
    vec4 _327 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _331 = _327.z;
    float _354 = (_327.x * 2.0) + (-1.0);
    float _356 = (_327.y * 2.0) + (-1.0);
    float _359 = _354 - (_354 * _292);
    float _360 = _356 - (_356 * _292);
    float _369 = cbMtdParam._m0[22u].y + _265;
    float _370 = cbMtdParam._m0[22u].z + _266;
    float _371 = cbMtdParam._m0[22u].w + _267;
    float _385 = (-0.0) - dot(vec3(_369, _370, _371), vec3(_194, _195, _196));
    float _386 = (-0.0) - dot(vec3(_369, _370, _371), vec3(_208, _209, _210));
    float _387 = (-0.0) - dot(vec3(_369, _370, _371), vec3((-0.0) - _201, (-0.0) - _202, (-0.0) - _203));
    float _391 = inversesqrt(dot(vec3(_385, _386, _387), vec3(_385, _386, _387)));
    float _394 = _391 * _387;
    float _395 = (_391 * _385) + (_359 * cbMtdParam._m0[20u].y);
    float _396 = (_391 * _386) + (_360 * cbMtdParam._m0[20u].z);
    float _397 = _395 * cbMtdParam._m0[19u].x;
    float _398 = _396 * cbMtdParam._m0[18u].w;
    float _399 = fract(TEXCOORD.x);
    float _400 = fract(TEXCOORD.y);
    float _406;
    if (_397 > 0.0)
    {
        _406 = (1.0 - _399) / _397;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_397 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _399) / _397;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _406 = frontier_phi_3_2_ladder;
    }
    float _414;
    if (_398 > 0.0)
    {
        _414 = (1.0 - _400) / _398;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_398 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _400) / _398;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _414 = frontier_phi_7_6_ladder;
    }
    bool _416 = _394 > 0.0;
    float _418 = _416 ? (cbMtdParam._m0[15u].x / _394) : 5000.0;
    float _419 = isnan(_414) ? _406 : (isnan(_406) ? _414 : min(_406, _414));
    float _420 = isnan(_418) ? _419 : (isnan(_419) ? _418 : min(_419, _418));
    float _424 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _425 = _399 + (-0.5);
    float _428 = _400 + (-0.5);
    float _431 = ((_420 * _394) + _424) / _424;
    vec4 _456 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * (((((_425 + (_420 * _397)) / _431) + 0.5) + (cbMtdParam._m0[16u].y - cbMtdParam._m0[19u].y * trunc(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y))) / cbMtdParam._m0[19u].y)) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * (((((_428 + (_420 * _398)) / _431) + 0.5) + floor(cbMtdParam._m0[16u].y / cbMtdParam._m0[19u].y)) / cbMtdParam._m0[19u].z)) + cbTextureTilingScale._m0[4u].w));
    float _458 = _456.x;
    float _459 = _456.y;
    float _460 = _456.z;
    float _472 = (_458 - (_458 * _292)) * cbMtdParam._m0[9u].x;
    float _473 = (_459 - (_459 * _292)) * cbMtdParam._m0[9u].y;
    float _474 = cbMtdParam._m0[9u].z * (_460 - (_460 * _292));
    float _492 = _395 * cbMtdParam._m0[21u].x;
    float _493 = _396 * cbMtdParam._m0[20u].w;
    bool _494 = _492 > 0.0;
    float _499;
    if (_494)
    {
        _499 = (1.0 - _399) / _492;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_492 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _399) / _492;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _499 = frontier_phi_11_10_ladder;
    }
    bool _501 = _493 > 0.0;
    float _506;
    if (_501)
    {
        _506 = (1.0 - _400) / _493;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_493 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _400) / _493;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _506 = frontier_phi_15_14_ladder;
    }
    float _509 = _416 ? (cbMtdParam._m0[16u].z / _394) : 5000.0;
    float _510 = isnan(_506) ? _499 : (isnan(_499) ? _506 : min(_499, _506));
    float _511 = isnan(_509) ? _510 : (isnan(_510) ? _509 : min(_510, _509));
    float _515 = cbMtdParam._m0[17u].z * cbMtdParam._m0[16u].z;
    float _519 = ((_511 * _394) + _515) / _515;
    float _524 = cbMtdParam._m0[17u].y - cbMtdParam._m0[18u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    float _526 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[18u].y);
    vec4 _542 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_425 + (_511 * _492)) / _519) + 0.5) + _524) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_428 + (_511 * _493)) / _519) + 0.5) + _526) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _547 = _542.x * cbMtdParam._m0[10u].x;
    float _548 = _542.y * cbMtdParam._m0[10u].y;
    float _549 = _542.z * cbMtdParam._m0[10u].z;
    float _557;
    if (_494)
    {
        _557 = (1.0 - _399) / _492;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_492 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _399) / _492;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _557 = frontier_phi_19_18_ladder;
    }
    float _563;
    if (_501)
    {
        _563 = (1.0 - _400) / _493;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_493 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _400) / _493;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _563 = frontier_phi_23_22_ladder;
    }
    float _565 = isnan(_563) ? _557 : (isnan(_557) ? _563 : min(_557, _563));
    float _566 = isnan(_509) ? _565 : (isnan(_565) ? _509 : min(_565, _509));
    float _573 = ((_566 * _394) + _515) / _515;
    vec4 _587 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_425 + (_566 * _492)) / _573) + 0.5) + _524) / cbMtdParam._m0[18u].y)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_428 + (_566 * _493)) / _573) + 0.5) + _526) / cbMtdParam._m0[18u].z)) + cbTextureTilingScale._m0[0u].w));
    float _589 = _587.w;
    float _591 = _589 - (_589 * _292);
    vec4 _615 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _617 = _615.x;
    vec4 _629 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _633 = _629.z;
    float _636 = (_629.x * 2.0) + (-1.0);
    float _637 = (_629.y * 2.0) + (-1.0);
    float _638 = dot(vec2(_636, _637), vec2(_636, _637));
    float _3584 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _643 = sqrt(1.0 - (isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0))));
    float _644 = _633 * _292;
    float _651 = (cbMtdParam._m0[15u].w * ((_331 - _644) + ((_633 - _331) * _292))) + _644;
    float _655 = (cbMtdParam._m0[16u].x * _359) + _636;
    float _656 = (cbMtdParam._m0[16u].x * _360) + _637;
    float _659 = fma(_643, _201, fma(_656, _208, _655 * _194));
    float _662 = fma(_643, _202, fma(_656, _209, _655 * _195));
    float _665 = fma(_643, _203, fma(_656, _210, _655 * _196));
    float _669 = inversesqrt(dot(vec3(_659, _662, _665), vec3(_659, _662, _665)));
    float _670 = _669 * _659;
    float _671 = _669 * _662;
    float _672 = _669 * _665;
    float _3595 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _673 = isnan(1.0) ? _3595 : (isnan(_3595) ? 1.0 : min(_3595, 1.0));
    float _3606 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _3617 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _3628 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _3639 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _677 = isnan(1.0) ? _3639 : (isnan(_3639) ? 1.0 : min(_3639, 1.0));
    float _693 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _697 = inversesqrt(dot(vec3(_265, _266, _267), vec3(_265, _266, _267)));
    float _698 = _265 * _697;
    float _699 = _266 * _697;
    float _700 = _267 * _697;
    float _706 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _707 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _727 = fma(_672, cbSceneParam._m0[5u].z, fma(_671, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _670));
    float _730 = fma(_672, cbSceneParam._m0[6u].z, fma(_671, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _670));
    float _733 = fma(_672, cbSceneParam._m0[7u].z, fma(_671, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _670));
    uint _746 = uint(roundEven(NORMAL.w)) * 13u;
    uint _748 = _746 + 9u;
    uint _749 = _748 + uint(cbMatDynParam._m0[0u].w);
    float _755 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3606 : (isnan(_3606) ? 1.0 : min(_3606, 1.0)))) * cbInstanceData._m0[_749].x;
    float _756 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3617 : (isnan(_3617) ? 1.0 : min(_3617, 1.0)))) * cbInstanceData._m0[_749].y;
    float _757 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3628 : (isnan(_3628) ? 1.0 : min(_3628, 1.0)))) * cbInstanceData._m0[_749].z;
    float _3650 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _758 = isnan(1.0) ? _3650 : (isnan(_3650) ? 1.0 : min(_3650, 1.0));
    float _3661 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _759 = isnan(1.0) ? _3661 : (isnan(_3661) ? 1.0 : min(_3661, 1.0));
    float _3672 = isnan(0.0) ? _757 : (isnan(_757) ? 0.0 : max(_757, 0.0));
    float _760 = isnan(1.0) ? _3672 : (isnan(_3672) ? 1.0 : min(_3672, 1.0));
    float _761 = 1.0 - _677;
    float _762 = _758 * _761;
    float _763 = _759 * _761;
    float _764 = _760 * _761;
    float _769 = (_758 + (-0.039999999105930328369140625)) * _677;
    float _770 = (_759 + (-0.039999999105930328369140625)) * _677;
    float _771 = (_760 + (-0.039999999105930328369140625)) * _677;
    float _772 = _769 + 0.039999999105930328369140625;
    float _774 = _770 + 0.039999999105930328369140625;
    float _775 = _771 + 0.039999999105930328369140625;
    vec4 _784 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _706, cbSceneParam._m0[86u].y * _707));
    float _787 = _784.x * TEXCOORD.z;
    float _788 = dot(vec3(_670, _671, _672), vec3(_698, _699, _700));
    float _791 = _788 * 2.0;
    float _795 = (_791 * _670) - _698;
    float _796 = (_791 * _671) - _699;
    float _797 = (_791 * _672) - _700;
    float _801 = abs(dot(vec3(_698, _699, _700), vec3(_670, _671, _672)));
    float _3683 = isnan(0.0) ? _801 : (isnan(_801) ? 0.0 : max(_801, 0.0));
    float _803 = sqrt(_673);
    float _816 = exp2((_803 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3683 : (isnan(_3683) ? 1.0 : min(_3683, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_803 * 3.0));
    float _822 = (1.0 - _816) * ((_803 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _823 = _816 * _803;
    float _851 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _855 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _859 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1160;
    float _1162;
    float _1163;
    float _1164;
    float _1165;
    float _1166;
    float _1167;
    float _1168;
    float _1169;
    float _1170;
    float _1171;
    float _1172;
    float _1173;
    float _1174;
    float _1175;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _887 = fma(_859, cbModelParam._m0[26u].z, fma(_855, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _851));
        float _891 = fma(_859, cbModelParam._m0[27u].z, fma(_855, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _851));
        float _895 = fma(_859, cbModelParam._m0[28u].z, fma(_855, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _851));
        float _918 = _851 + _670;
        float _919 = _855 + _671;
        float _920 = _859 + _672;
        float _930 = fma(_920, cbModelParam._m0[26u].z, fma(_919, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _918)) - _887;
        float _931 = fma(_920, cbModelParam._m0[27u].z, fma(_919, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _918)) - _891;
        float _932 = fma(_920, cbModelParam._m0[28u].z, fma(_919, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _918)) - _895;
        float _936 = inversesqrt(dot(vec3(_930, _931, _932), vec3(_930, _931, _932)));
        float _949 = ((_936 * _930) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_887 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _950 = ((_936 * _931) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_891 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _951 = ((_936 * _932) / cbModelParam._m0[34u].z) + ((((((_895 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _954 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _961 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _968 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        vec4 _975 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_949, _950, _951), 0.0);
        float _988 = exp2((_954.w + (-0.5)) * 20.0) * 2.0;
        float _989 = _988 * (_954.x + (-0.5));
        float _990 = _988 * (_954.y + (-0.5));
        float _991 = _988 * (_954.z + (-0.5));
        float _998 = exp2((_961.w + (-0.5)) * 20.0) * 2.0;
        float _999 = _998 * (_961.x + (-0.5));
        float _1000 = _998 * (_961.y + (-0.5));
        float _1001 = _998 * (_961.z + (-0.5));
        float _1008 = exp2((_968.w + (-0.5)) * 20.0) * 2.0;
        float _1009 = _1008 * (_968.x + (-0.5));
        float _1010 = _1008 * (_968.y + (-0.5));
        float _1011 = _1008 * (_968.z + (-0.5));
        float _1018 = exp2((_975.w + (-0.5)) * 20.0) * 2.0;
        float _1019 = _1018 * (_975.x + (-0.5));
        float _1020 = _1018 * (_975.y + (-0.5));
        float _1021 = _1018 * (_975.z + (-0.5));
        float _1022 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0));
        float _1023 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1024 = isnan(0.0) ? _1021 : (isnan(_1021) ? 0.0 : max(_1021, 0.0));
        float _1025 = _989 * 0.5;
        float _1026 = _999 * 0.5;
        float _1027 = _1009 * 0.5;
        float _1028 = dot(vec3(_1025, _1026, _1027), vec3(_1025, _1026, _1027));
        float _1033 = (_1028 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1028);
        float _1042 = (dot(vec3(_670, _671, _672), vec3(_1033 * _1025, _1033 * _1026, _1033 * _1027)) + 1.0) * 0.5;
        float _3709 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
        float _1052 = sqrt(((_1026 * _1026) + (_1025 * _1025)) + (_1027 * _1027)) / (_1022 + 9.9999997473787516355514526367188e-06);
        float _3720 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1053 = isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0));
        float _1054 = _1053 * 2.0;
        float _1058 = (1.0 - _1053) / (_1053 + 1.0);
        float _3731 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1059 = isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0));
        float _1068 = ((((1.0 - _1059) * (_1054 + 2.0)) * exp2(log2(isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0))) * (_1054 + 1.0))) + _1059) * _1022;
        float _1069 = _990 * 0.5;
        float _1070 = _1000 * 0.5;
        float _1071 = _1010 * 0.5;
        float _1072 = dot(vec3(_1069, _1070, _1071), vec3(_1069, _1070, _1071));
        float _1077 = (_1072 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1072);
        float _1085 = (dot(vec3(_670, _671, _672), vec3(_1077 * _1069, _1077 * _1070, _1077 * _1071)) + 1.0) * 0.5;
        float _3742 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1094 = sqrt(((_1070 * _1070) + (_1069 * _1069)) + (_1071 * _1071)) / (_1023 + 9.9999997473787516355514526367188e-06);
        float _3753 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1095 = isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0));
        float _1096 = _1095 * 2.0;
        float _1100 = (1.0 - _1095) / (_1095 + 1.0);
        float _3764 = isnan(0.0) ? _1100 : (isnan(_1100) ? 0.0 : max(_1100, 0.0));
        float _1101 = isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0));
        float _1110 = ((((1.0 - _1101) * (_1096 + 2.0)) * exp2(log2(isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0))) * (_1096 + 1.0))) + _1101) * _1023;
        float _1111 = _991 * 0.5;
        float _1112 = _1001 * 0.5;
        float _1113 = _1011 * 0.5;
        float _1114 = dot(vec3(_1111, _1112, _1113), vec3(_1111, _1112, _1113));
        float _1119 = (_1114 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1114);
        float _1127 = (dot(vec3(_670, _671, _672), vec3(_1119 * _1111, _1119 * _1112, _1119 * _1113)) + 1.0) * 0.5;
        float _3775 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1136 = sqrt(((_1112 * _1112) + (_1111 * _1111)) + (_1113 * _1113)) / (_1024 + 9.9999997473787516355514526367188e-06);
        float _3786 = isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0));
        float _1137 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
        float _1138 = _1137 * 2.0;
        float _1142 = (1.0 - _1137) / (_1137 + 1.0);
        float _3797 = isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0));
        float _1143 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
        float _1152 = ((((1.0 - _1143) * (_1138 + 2.0)) * exp2(log2(isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))) * (_1138 + 1.0))) + _1143) * _1024;
        _1160 = _991;
        _1162 = _990;
        _1163 = _989;
        _1164 = _1001;
        _1165 = _1000;
        _1166 = _999;
        _1167 = _1011;
        _1168 = _1010;
        _1169 = _1009;
        _1170 = _1024;
        _1171 = _1023;
        _1172 = _1022;
        _1173 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0)));
        _1174 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0)));
        _1175 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0)));
    }
    else
    {
        _1160 = _1161;
        _1162 = _1161;
        _1163 = _1161;
        _1164 = _1161;
        _1165 = _1161;
        _1166 = _1161;
        _1167 = _1161;
        _1168 = _1161;
        _1169 = _1161;
        _1170 = _1161;
        _1171 = _1161;
        _1172 = _1161;
        _1173 = 0.0;
        _1174 = 0.0;
        _1175 = 0.0;
    }
    float _1470;
    float _1471;
    float _1472;
    float _1473;
    float _1474;
    float _1475;
    float _1476;
    float _1477;
    float _1478;
    float _1479;
    float _1480;
    float _1481;
    float _1482;
    float _1483;
    float _1484;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1201 = fma(_859, cbModelParam._m0[30u].z, fma(_855, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _851));
        float _1205 = fma(_859, cbModelParam._m0[31u].z, fma(_855, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _851));
        float _1209 = fma(_859, cbModelParam._m0[32u].z, fma(_855, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _851));
        float _1232 = _851 + _670;
        float _1233 = _855 + _671;
        float _1234 = _859 + _672;
        float _1244 = fma(_1234, cbModelParam._m0[30u].z, fma(_1233, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1232)) - _1201;
        float _1245 = fma(_1234, cbModelParam._m0[31u].z, fma(_1233, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1232)) - _1205;
        float _1246 = fma(_1234, cbModelParam._m0[32u].z, fma(_1233, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1232)) - _1209;
        float _1250 = inversesqrt(dot(vec3(_1244, _1245, _1246), vec3(_1244, _1245, _1246)));
        float _1263 = ((_1250 * _1244) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1201 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1264 = ((_1250 * _1245) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1205 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1265 = ((_1250 * _1246) / cbModelParam._m0[35u].z) + ((((((_1209 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1267 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1274 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1281 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        vec4 _1288 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1263, _1264, _1265), 0.0);
        float _1300 = exp2((_1267.w + (-0.5)) * 20.0) * 2.0;
        float _1301 = _1300 * (_1267.x + (-0.5));
        float _1302 = _1300 * (_1267.y + (-0.5));
        float _1303 = _1300 * (_1267.z + (-0.5));
        float _1310 = exp2((_1274.w + (-0.5)) * 20.0) * 2.0;
        float _1311 = _1310 * (_1274.x + (-0.5));
        float _1312 = _1310 * (_1274.y + (-0.5));
        float _1313 = _1310 * (_1274.z + (-0.5));
        float _1320 = exp2((_1281.w + (-0.5)) * 20.0) * 2.0;
        float _1321 = _1320 * (_1281.x + (-0.5));
        float _1322 = _1320 * (_1281.y + (-0.5));
        float _1323 = _1320 * (_1281.z + (-0.5));
        float _1330 = exp2((_1288.w + (-0.5)) * 20.0) * 2.0;
        float _1331 = _1330 * (_1288.x + (-0.5));
        float _1332 = _1330 * (_1288.y + (-0.5));
        float _1333 = _1330 * (_1288.z + (-0.5));
        float _1334 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
        float _1335 = isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0));
        float _1336 = isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0));
        float _1337 = _1301 * 0.5;
        float _1338 = _1311 * 0.5;
        float _1339 = _1321 * 0.5;
        float _1340 = dot(vec3(_1337, _1338, _1339), vec3(_1337, _1338, _1339));
        float _1345 = (_1340 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1340);
        float _1353 = (dot(vec3(_670, _671, _672), vec3(_1345 * _1337, _1345 * _1338, _1345 * _1339)) + 1.0) * 0.5;
        float _3838 = isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0));
        float _1362 = sqrt(((_1338 * _1338) + (_1337 * _1337)) + (_1339 * _1339)) / (_1334 + 9.9999997473787516355514526367188e-06);
        float _3849 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0));
        float _1364 = _1363 * 2.0;
        float _1368 = (1.0 - _1363) / (_1363 + 1.0);
        float _3860 = isnan(0.0) ? _1368 : (isnan(_1368) ? 0.0 : max(_1368, 0.0));
        float _1369 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
        float _1378 = ((((1.0 - _1369) * (_1364 + 2.0)) * exp2(log2(isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0))) * (_1364 + 1.0))) + _1369) * _1334;
        float _1379 = _1302 * 0.5;
        float _1380 = _1312 * 0.5;
        float _1381 = _1322 * 0.5;
        float _1382 = dot(vec3(_1379, _1380, _1381), vec3(_1379, _1380, _1381));
        float _1387 = (_1382 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1382);
        float _1395 = (dot(vec3(_670, _671, _672), vec3(_1387 * _1379, _1387 * _1380, _1387 * _1381)) + 1.0) * 0.5;
        float _3871 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1404 = sqrt(((_1380 * _1380) + (_1379 * _1379)) + (_1381 * _1381)) / (_1335 + 9.9999997473787516355514526367188e-06);
        float _3882 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
        float _1406 = _1405 * 2.0;
        float _1410 = (1.0 - _1405) / (_1405 + 1.0);
        float _3893 = isnan(0.0) ? _1410 : (isnan(_1410) ? 0.0 : max(_1410, 0.0));
        float _1411 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
        float _1420 = ((((1.0 - _1411) * (_1406 + 2.0)) * exp2(log2(isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0))) * (_1406 + 1.0))) + _1411) * _1335;
        float _1421 = _1303 * 0.5;
        float _1422 = _1313 * 0.5;
        float _1423 = _1323 * 0.5;
        float _1424 = dot(vec3(_1421, _1422, _1423), vec3(_1421, _1422, _1423));
        float _1429 = (_1424 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1424);
        float _1437 = (dot(vec3(_670, _671, _672), vec3(_1429 * _1421, _1429 * _1422, _1429 * _1423)) + 1.0) * 0.5;
        float _3904 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
        float _1446 = sqrt(((_1422 * _1422) + (_1421 * _1421)) + (_1423 * _1423)) / (_1336 + 9.9999997473787516355514526367188e-06);
        float _3915 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0));
        float _1448 = _1447 * 2.0;
        float _1452 = (1.0 - _1447) / (_1447 + 1.0);
        float _3926 = isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0));
        float _1453 = isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0));
        float _1462 = ((((1.0 - _1453) * (_1448 + 2.0)) * exp2(log2(isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0))) * (_1448 + 1.0))) + _1453) * _1336;
        _1470 = _1303;
        _1471 = _1302;
        _1472 = _1301;
        _1473 = _1313;
        _1474 = _1312;
        _1475 = _1311;
        _1476 = _1323;
        _1477 = _1322;
        _1478 = _1321;
        _1479 = _1336;
        _1480 = _1335;
        _1481 = _1334;
        _1482 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0)));
        _1483 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0)));
        _1484 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1462 : (isnan(_1462) ? 0.0 : max(_1462, 0.0)));
    }
    else
    {
        _1470 = _1161;
        _1471 = _1161;
        _1472 = _1161;
        _1473 = _1161;
        _1474 = _1161;
        _1475 = _1161;
        _1476 = _1161;
        _1477 = _1161;
        _1478 = _1161;
        _1479 = _1161;
        _1480 = _1161;
        _1481 = _1161;
        _1482 = 0.0;
        _1483 = 0.0;
        _1484 = 0.0;
    }
    float _1494 = (cbModelParam._m0[1u].x * (_1482 - _1173)) + _1173;
    float _1495 = (cbModelParam._m0[1u].x * (_1483 - _1174)) + _1174;
    float _1496 = (cbModelParam._m0[1u].x * (_1484 - _1175)) + _1175;
    float _1517 = fma(_1496, cbSceneParam._m0[89u].z, fma(_1495, cbSceneParam._m0[89u].y, _1494 * cbSceneParam._m0[89u].x));
    float _1520 = fma(_1496, cbSceneParam._m0[90u].z, fma(_1495, cbSceneParam._m0[90u].y, _1494 * cbSceneParam._m0[90u].x));
    float _1523 = fma(_1496, cbSceneParam._m0[91u].z, fma(_1495, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1494));
    float _1538 = _795 * 0.5;
    float _1539 = _796 * 0.5;
    float _1540 = _797 * 0.5;
    float _1541 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1472, _1475, _1478, _1481));
    float _1544 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1471, _1474, _1477, _1480));
    float _1547 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1470, _1473, _1476, _1479));
    float _1581;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1554 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1160, _1164, _1167, _1170));
        float _1558 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1162, _1165, _1168, _1171));
        float _1562 = dot(vec4(_1538, _1539, _1540, 1.0), vec4(_1163, _1166, _1169, _1172));
        float _1569 = dot(vec4(cbModelParam._m0[39u]), vec4(_1538, _1539, _1540, 1.0));
        _1581 = dot(vec3(isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0)), isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0)), isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1569) ? 0.0 : (isnan(0.0) ? _1569 : max(0.0, _1569))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1581 = 1.0;
    }
    float _1592;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1583 = dot(vec4(cbModelParam._m0[40u]), vec4(_1538, _1539, _1540, 1.0));
        _1592 = dot(vec3(isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0)), isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0)), isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1583) ? 0.0 : (isnan(0.0) ? _1583 : max(0.0, _1583))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1592 = 1.0;
    }
    float _1596 = (_1592 * cbModelParam._m0[1u].x) + (_1581 * (1.0 - cbModelParam._m0[1u].x));
    float _1606 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _673);
    float _1607 = isnan(_1606) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1606 : min(cbModelParam._m0[25u].z, _1606));
    float _1688;
    float _1690;
    float _1692;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1655 = fma(_859, cbModelParam._m0[13u].z, fma(_855, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _851)) + cbModelParam._m0[13u].w;
        float _1659 = fma(_859, cbModelParam._m0[14u].z, fma(_855, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _851)) + cbModelParam._m0[14u].w;
        float _1663 = fma(_859, cbModelParam._m0[15u].z, fma(_855, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _851)) + cbModelParam._m0[15u].w;
        float _1666 = fma(_797, cbModelParam._m0[13u].z, fma(_796, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _795));
        float _1669 = fma(_797, cbModelParam._m0[14u].z, fma(_796, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _795));
        float _1672 = fma(_797, cbModelParam._m0[15u].z, fma(_796, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _795));
        float _1700;
        if (_1666 > 0.0)
        {
            _1700 = abs((1.0 - _1655) / _1666);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1666 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1655 + 1.0) / _1666);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1700 = frontier_phi_38_36_ladder;
        }
        float _1870;
        if (_1669 > 0.0)
        {
            _1870 = abs((1.0 - _1659) / _1669);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1669 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1659 + 1.0) / _1669);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1870 = frontier_phi_47_43_ladder;
        }
        float _2325;
        if (_1672 > 0.0)
        {
            _2325 = abs((1.0 - _1663) / _1672);
        }
        else
        {
            float frontier_phi_59_54_ladder;
            if (_1672 < 0.0)
            {
                frontier_phi_59_54_ladder = abs((_1663 + 1.0) / _1672);
            }
            else
            {
                frontier_phi_59_54_ladder = 5000.0;
            }
            _2325 = frontier_phi_59_54_ladder;
        }
        float _2327 = isnan(_1870) ? _1700 : (isnan(_1700) ? _1870 : min(_1700, _1870));
        float _2328 = isnan(_2325) ? _2327 : (isnan(_2327) ? _2325 : min(_2327, _2325));
        float _2332 = (_2328 * _1666) + _1655;
        float _2333 = (_2328 * _1669) + _1659;
        float _2334 = (_2328 * _1672) + _1663;
        float _2335 = _2328 * 9.9999997473787516355514526367188e-05;
        float _2337 = (-1.0) - _2335;
        float _2339 = _2335 + 1.0;
        float frontier_phi_37_59_ladder;
        float frontier_phi_37_59_ladder_1;
        float frontier_phi_37_59_ladder_2;
        if ((_2334 > _2339) || ((_2334 < _2337) || ((_2333 > _2339) || ((_2333 < _2337) || ((_2332 < _2337) || (_2332 > _2339))))))
        {
            frontier_phi_37_59_ladder = 0.0;
            frontier_phi_37_59_ladder_1 = 0.0;
            frontier_phi_37_59_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2584 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2334, cbModelParam._m0[9u].z, fma(_2333, cbModelParam._m0[9u].y, _2332 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2334, cbModelParam._m0[10u].z, fma(_2333, cbModelParam._m0[10u].y, _2332 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2334, cbModelParam._m0[11u].z, fma(_2333, cbModelParam._m0[11u].y, _2332 * cbModelParam._m0[11u].x))), _1607);
            frontier_phi_37_59_ladder = _2584.z * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_1 = _2584.y * cbModelParam._m0[1u].y;
            frontier_phi_37_59_ladder_2 = _2584.x * cbModelParam._m0[1u].y;
        }
        _1688 = frontier_phi_37_59_ladder_2;
        _1690 = frontier_phi_37_59_ladder_1;
        _1692 = frontier_phi_37_59_ladder;
    }
    else
    {
        vec4 _1676 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_795, _796, _797), _1607);
        _1688 = _1676.x * cbModelParam._m0[1u].y;
        _1690 = _1676.y * cbModelParam._m0[1u].y;
        _1692 = _1676.z * cbModelParam._m0[1u].y;
    }
    float _1696 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _673);
    float _1697 = isnan(_1696) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1696 : min(cbModelParam._m0[25u].w, _1696));
    float _1785;
    float _1787;
    float _1789;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1749 = fma(_859, cbModelParam._m0[21u].z, fma(_855, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _851)) + cbModelParam._m0[21u].w;
        float _1753 = fma(_859, cbModelParam._m0[22u].z, fma(_855, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _851)) + cbModelParam._m0[22u].w;
        float _1757 = fma(_859, cbModelParam._m0[23u].z, fma(_855, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _851)) + cbModelParam._m0[23u].w;
        float _1760 = fma(_797, cbModelParam._m0[21u].z, fma(_796, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _795));
        float _1763 = fma(_797, cbModelParam._m0[22u].z, fma(_796, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _795));
        float _1766 = fma(_797, cbModelParam._m0[23u].z, fma(_796, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _795));
        float _1875;
        if (_1760 > 0.0)
        {
            _1875 = abs((1.0 - _1749) / _1760);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1760 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1749 + 1.0) / _1760);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1875 = frontier_phi_49_45_ladder;
        }
        float _2352;
        if (_1763 > 0.0)
        {
            _2352 = abs((1.0 - _1753) / _1763);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1763 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1753 + 1.0) / _1763);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2352 = frontier_phi_61_56_ladder;
        }
        float _2705;
        if (_1766 > 0.0)
        {
            _2705 = abs((1.0 - _1757) / _1766);
        }
        else
        {
            float frontier_phi_73_68_ladder;
            if (_1766 < 0.0)
            {
                frontier_phi_73_68_ladder = abs((_1757 + 1.0) / _1766);
            }
            else
            {
                frontier_phi_73_68_ladder = 5000.0;
            }
            _2705 = frontier_phi_73_68_ladder;
        }
        float _2707 = isnan(_2352) ? _1875 : (isnan(_1875) ? _2352 : min(_1875, _2352));
        float _2708 = isnan(_2705) ? _2707 : (isnan(_2707) ? _2705 : min(_2707, _2705));
        float _2712 = (_2708 * _1760) + _1749;
        float _2713 = (_2708 * _1763) + _1753;
        float _2714 = (_2708 * _1766) + _1757;
        float _2715 = _2708 * 9.9999997473787516355514526367188e-05;
        float _2716 = (-1.0) - _2715;
        float _2718 = _2715 + 1.0;
        float frontier_phi_46_73_ladder;
        float frontier_phi_46_73_ladder_1;
        float frontier_phi_46_73_ladder_2;
        if ((_2714 > _2718) || ((_2714 < _2716) || ((_2713 > _2718) || ((_2713 < _2716) || ((_2712 < _2716) || (_2712 > _2718))))))
        {
            frontier_phi_46_73_ladder = 0.0;
            frontier_phi_46_73_ladder_1 = 0.0;
            frontier_phi_46_73_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2835 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2714, cbModelParam._m0[17u].z, fma(_2713, cbModelParam._m0[17u].y, _2712 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2714, cbModelParam._m0[18u].z, fma(_2713, cbModelParam._m0[18u].y, _2712 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2714, cbModelParam._m0[19u].z, fma(_2713, cbModelParam._m0[19u].y, _2712 * cbModelParam._m0[19u].x))), _1697);
            frontier_phi_46_73_ladder = _2835.z * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_1 = _2835.y * cbModelParam._m0[1u].z;
            frontier_phi_46_73_ladder_2 = _2835.x * cbModelParam._m0[1u].z;
        }
        _1785 = frontier_phi_46_73_ladder_2;
        _1787 = frontier_phi_46_73_ladder_1;
        _1789 = frontier_phi_46_73_ladder;
    }
    else
    {
        vec4 _1769 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_795, _796, _797), _1697);
        _1785 = _1769.x * cbModelParam._m0[1u].z;
        _1787 = _1769.y * cbModelParam._m0[1u].z;
        _1789 = _1769.z * cbModelParam._m0[1u].z;
    }
    float _1802 = (((_822 * _772) + _823) * _787) * ((cbModelParam._m0[1u].w * (_1785 - _1688)) + _1688);
    float _1804 = (((_822 * _774) + _823) * _787) * ((cbModelParam._m0[1u].w * (_1787 - _1690)) + _1690);
    float _1806 = (((_822 * _775) + _823) * _787) * ((cbModelParam._m0[1u].w * (_1789 - _1692)) + _1692);
    float _1809 = fma(_1806, cbSceneParam._m0[89u].z, fma(_1804, cbSceneParam._m0[89u].y, _1802 * cbSceneParam._m0[89u].x));
    float _1812 = fma(_1806, cbSceneParam._m0[90u].z, fma(_1804, cbSceneParam._m0[90u].y, _1802 * cbSceneParam._m0[90u].x));
    float _1815 = fma(_1806, cbSceneParam._m0[91u].z, fma(_1804, cbSceneParam._m0[91u].y, _1802 * cbSceneParam._m0[91u].x));
    float _1849 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1853 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1857 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1861 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1862 = _1849 / _1861;
    float _1863 = _1853 / _1861;
    float _1864 = _1857 / _1861;
    float _2011;
    float _2012;
    float _2013;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1891 = ((uint(_1864 > cbSceneParam._m0[59u].y) + uint(_1864 > cbSceneParam._m0[59u].x)) + uint(_1864 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1892 = _1891 + 43u;
        uint _1900 = _1891 + 44u;
        uint _1908 = _1891 + 45u;
        uint _1916 = _1891 + 46u;
        float _1927 = fma(_1861, cbSceneParam._m0[_1892].w, fma(_1857, cbSceneParam._m0[_1892].z, fma(_1853, cbSceneParam._m0[_1892].y, _1849 * cbSceneParam._m0[_1892].x)));
        float _1931 = fma(_1861, cbSceneParam._m0[_1900].w, fma(_1857, cbSceneParam._m0[_1900].z, fma(_1853, cbSceneParam._m0[_1900].y, _1849 * cbSceneParam._m0[_1900].x)));
        float _1939 = fma(_1861, cbSceneParam._m0[_1916].w, fma(_1857, cbSceneParam._m0[_1916].z, fma(_1853, cbSceneParam._m0[_1916].y, _1849 * cbSceneParam._m0[_1916].x)));
        float _1944 = cbSceneParam._m0[33u].z * _1939;
        float _1946 = cbSceneParam._m0[33u].w * _1939;
        float _1949 = fma(_1861, cbSceneParam._m0[_1908].w, fma(_1857, cbSceneParam._m0[_1908].z, fma(_1853, cbSceneParam._m0[_1908].y, _1849 * cbSceneParam._m0[_1908].x))) / _1939;
        float _1997 = (cbSceneParam._m0[33u].x - sqrt(((_1863 * _1863) + (_1862 * _1862)) + (_1864 * _1864))) * cbSceneParam._m0[33u].y;
        float _4052 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _2004 = (isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1944 + _1927) / _1939, (_1946 + _1931) / _1939), _1949), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1946 + _1927) / _1939, (_1931 - _1944) / _1939), _1949), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1927 - _1944) / _1939, (_1931 - _1946) / _1939), _1949), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1927 - _1946) / _1939, (_1944 + _1931) / _1939), _1949), 0.0)).x), vec4(0.25)));
        _2011 = 1.0 - (_2004 * cbSceneParam._m0[34u].x);
        _2012 = 1.0 - (_2004 * cbSceneParam._m0[34u].y);
        _2013 = 1.0 - (_2004 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2011 = 1.0;
        _2012 = 1.0;
        _2013 = 1.0;
    }
    float _2077;
    float _2079;
    float _2081;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2065 = fma(_1861, cbSceneParam._m0[63u].w, fma(_1857, cbSceneParam._m0[63u].z, fma(_1853, cbSceneParam._m0[63u].y, _1849 * cbSceneParam._m0[63u].x)));
        float _2066 = fma(_1861, cbSceneParam._m0[60u].w, fma(_1857, cbSceneParam._m0[60u].z, fma(_1853, cbSceneParam._m0[60u].y, _1849 * cbSceneParam._m0[60u].x))) / _2065;
        float _2067 = fma(_1861, cbSceneParam._m0[61u].w, fma(_1857, cbSceneParam._m0[61u].z, fma(_1853, cbSceneParam._m0[61u].y, _1849 * cbSceneParam._m0[61u].x))) / _2065;
        float frontier_phi_58_57_ladder;
        float frontier_phi_58_57_ladder_1;
        float frontier_phi_58_57_ladder_2;
        if ((((_2066 >= cbSceneParam._m0[64u].x) && (_2067 >= cbSceneParam._m0[64u].y)) && (_2066 <= cbSceneParam._m0[64u].z)) && (_2067 <= cbSceneParam._m0[64u].w))
        {
            float _2365 = fma(_1861, cbSceneParam._m0[62u].w, fma(_1857, cbSceneParam._m0[62u].z, fma(_1853, cbSceneParam._m0[62u].y, _1849 * cbSceneParam._m0[62u].x))) / _2065;
            float _2369 = isnan(cbSceneParam._m0[41u].w) ? _2365 : (isnan(_2365) ? cbSceneParam._m0[41u].w : max(_2365, cbSceneParam._m0[41u].w));
            float _2412 = (cbSceneParam._m0[33u].x - sqrt(((_1863 * _1863) + (_1862 * _1862)) + (_1864 * _1864))) * cbSceneParam._m0[33u].y;
            float _4068 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
            float _2419 = (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2066, cbSceneParam._m0[33u].w + _2067), _2369), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2066, _2067 - cbSceneParam._m0[33u].z), _2369), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2066 - cbSceneParam._m0[33u].z, _2067 - cbSceneParam._m0[33u].w), _2369), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2066 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2067), _2369), 0.0)).x), vec4(0.25)));
            float _2423 = 1.0 - (_2419 * cbSceneParam._m0[34u].x);
            float _2424 = 1.0 - (_2419 * cbSceneParam._m0[34u].y);
            float _2425 = 1.0 - (_2419 * cbSceneParam._m0[34u].z);
            frontier_phi_58_57_ladder = isnan(_2425) ? _2013 : (isnan(_2013) ? _2425 : min(_2013, _2425));
            frontier_phi_58_57_ladder_1 = isnan(_2424) ? _2012 : (isnan(_2012) ? _2424 : min(_2012, _2424));
            frontier_phi_58_57_ladder_2 = isnan(_2423) ? _2011 : (isnan(_2011) ? _2423 : min(_2011, _2423));
        }
        else
        {
            frontier_phi_58_57_ladder = _2013;
            frontier_phi_58_57_ladder_1 = _2012;
            frontier_phi_58_57_ladder_2 = _2011;
        }
        _2077 = frontier_phi_58_57_ladder_2;
        _2079 = frontier_phi_58_57_ladder_1;
        _2081 = frontier_phi_58_57_ladder;
    }
    else
    {
        _2077 = _2011;
        _2079 = _2012;
        _2081 = _2013;
    }
    uvec4 _2086 = floatBitsToUint(cbInstanceData._m0[_746 + 5u]);
    uint _2088 = _2086.x * 14u;
    uint _2089 = _2088 + 13u;
    float _2094 = _787 + (-1.0);
    float _2097 = (cbLight._m0[_2089].x * _2094) + 1.0;
    float _2098 = (cbLight._m0[_2089].y * _2094) + 1.0;
    uint _2099 = _2088 + 5u;
    float _2105 = isnan(1.0) ? _2098 : (isnan(_2098) ? 1.0 : min(_2098, 1.0));
    uint _2109 = _2088 + 4u;
    float _2118 = isnan(1.0) ? _2097 : (isnan(_2097) ? 1.0 : min(_2097, 1.0));
    uint _2122 = _2088 | 1u;
    float _2133 = dot(vec3(cbLight._m0[_2088].xyz), vec3(_670, _671, _672));
    float _2136 = dot(vec3(cbLight._m0[_2122].xyz), vec3(_670, _671, _672));
    float _4104 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _4115 = isnan(0.0) ? _2136 : (isnan(_2136) ? 0.0 : max(_2136, 0.0));
    float _2141 = (isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * 0.3183098733425140380859375;
    float _2143 = (isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0))) * 0.3183098733425140380859375;
    float _2150 = ((cbLight._m0[_2099].x * _2105) * _2143) + (((cbLight._m0[_2109].x * _2077) * _2118) * _2141);
    float _2151 = ((_2105 * cbLight._m0[_2099].y) * _2143) + (((cbLight._m0[_2109].y * _2079) * _2118) * _2141);
    float _2152 = ((_2105 * cbLight._m0[_2099].z) * _2143) + (((cbLight._m0[_2109].z * _2081) * _2118) * _2141);
    uint _2154 = _2088 + 8u;
    float _2167 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2088].w)) * _673) * 0.949999988079071044921875);
    float _2168 = _2167 * _2167;
    float _2169 = cbLight._m0[_2088].x + _698;
    float _2170 = cbLight._m0[_2088].y + _699;
    float _2171 = cbLight._m0[_2088].z + _700;
    float _2175 = inversesqrt(dot(vec3(_2169, _2170, _2171), vec3(_2169, _2170, _2171)));
    float _2176 = _2175 * _2169;
    float _2177 = _2175 * _2170;
    float _2178 = _2175 * _2171;
    float _2179 = dot(vec3(_670, _671, _672), vec3(cbLight._m0[_2088].xyz));
    float _4126 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
    float _2182 = isnan(1.0) ? _4126 : (isnan(_4126) ? 1.0 : min(_4126, 1.0));
    float _4137 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
    float _2183 = isnan(1.0) ? _4137 : (isnan(_4137) ? 1.0 : min(_4137, 1.0));
    float _2184 = dot(vec3(_670, _671, _672), vec3(_2176, _2177, _2178));
    float _4148 = isnan(0.0) ? _2184 : (isnan(_2184) ? 0.0 : max(_2184, 0.0));
    float _2187 = isnan(1.0) ? _4148 : (isnan(_4148) ? 1.0 : min(_4148, 1.0));
    float _2188 = dot(vec3(cbLight._m0[_2088].xyz), vec3(_2176, _2177, _2178));
    float _4159 = isnan(0.0) ? _2188 : (isnan(_2188) ? 0.0 : max(_2188, 0.0));
    float _2192 = _2168 * _2168;
    float _2196 = ((_2187 * _2187) * (_2192 + (-1.0))) + 1.0;
    float _2204 = exp2(log2(1.0 - (isnan(1.0) ? _4159 : (isnan(_4159) ? 1.0 : min(_4159, 1.0)))) * 5.0);
    float _2205 = 0.959999978542327880859375 - _769;
    float _2207 = 0.959999978542327880859375 - _770;
    float _2208 = 0.959999978542327880859375 - _771;
    float _2215 = 1.0 - _2168;
    float _2226 = (0.5 / (((_2183 * ((_2182 * _2215) + _2168)) + 9.9999999392252902907785028219223e-09) + (((_2183 * _2215) + _2168) * _2182))) * _2182;
    float _4170 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2228 = (isnan(1.0) ? _4170 : (isnan(_4170) ? 1.0 : min(_4170, 1.0))) * (_2192 / ((_2196 * _2196) * 3.141590118408203125));
    uint _2242 = _2088 + 9u;
    float _2253 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2122].w)) * _673) * 0.949999988079071044921875);
    float _2254 = _2253 * _2253;
    float _2255 = cbLight._m0[_2122].x + _698;
    float _2256 = cbLight._m0[_2122].y + _699;
    float _2257 = cbLight._m0[_2122].z + _700;
    float _2261 = inversesqrt(dot(vec3(_2255, _2256, _2257), vec3(_2255, _2256, _2257)));
    float _2262 = _2261 * _2255;
    float _2263 = _2261 * _2256;
    float _2264 = _2261 * _2257;
    float _2265 = dot(vec3(_670, _671, _672), vec3(cbLight._m0[_2122].xyz));
    float _4181 = isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0));
    float _2268 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    float _2269 = dot(vec3(_670, _671, _672), vec3(_2262, _2263, _2264));
    float _4192 = isnan(0.0) ? _2269 : (isnan(_2269) ? 0.0 : max(_2269, 0.0));
    float _2272 = isnan(1.0) ? _4192 : (isnan(_4192) ? 1.0 : min(_4192, 1.0));
    float _2273 = dot(vec3(cbLight._m0[_2122].xyz), vec3(_2262, _2263, _2264));
    float _4203 = isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0));
    float _2277 = _2254 * _2254;
    float _2281 = ((_2272 * _2272) * (_2277 + (-1.0))) + 1.0;
    float _2288 = exp2(log2(1.0 - (isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0)))) * 5.0);
    float _2295 = 1.0 - _2254;
    float _2305 = (0.5 / (((_2183 * ((_2268 * _2295) + _2254)) + 9.9999999392252902907785028219223e-09) + (((_2183 * _2295) + _2254) * _2268))) * _2268;
    float _4214 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2307 = (isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0))) * (_2277 / ((_2281 * _2281) * 3.141590118408203125));
    float _2317 = (((((_2288 * _2205) + _772) * cbLight._m0[_2242].x) * _2307) * _2105) + ((((cbLight._m0[_2154].x * _2077) * ((_2204 * _2205) + _772)) * _2228) * _2118);
    float _2318 = (((((_2288 * _2207) + _774) * cbLight._m0[_2242].y) * _2307) * _2105) + ((((cbLight._m0[_2154].y * _2079) * ((_2204 * _2207) + _774)) * _2228) * _2118);
    float _2319 = (((((_2288 * _2208) + _775) * cbLight._m0[_2242].z) * _2307) * _2105) + ((((cbLight._m0[_2154].z * _2081) * ((_2204 * _2208) + _775)) * _2228) * _2118);
    float _2482;
    float _2484;
    float _2486;
    float _2488;
    float _2490;
    float _2492;
    if (_2086.y == 0u)
    {
        uvec4 _2437 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2438 = _2437.x;
        uint _2449 = uint((float(_2437.y) * floor(float(uint(cbSceneParam._m0[85u].y * _707) / _2438))) + floor(float(uint(cbSceneParam._m0[85u].x * _706) / _2438)));
        float _2459 = (log2(_1864 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2460 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
        uint _2463 = uint(isnan(14.0) ? _2460 : (isnan(_2460) ? 14.0 : min(_2460, 14.0)));
        uvec4 _2468 = texelFetch(g_lightClusterGridBuffer, int(((_2463 << 2u) + (_2449 << 6u)) >> 2u));
        uint _2469 = _2468.x;
        uint _2470 = _2437.z;
        float _2593;
        float _2595;
        float _2597;
        float _2599;
        float _2601;
        float _2603;
        if (((((1u << ((_2470 >> 4u) & 15u)) + 4294967295u) & _2469) == 0u) || ((_2470 & 240u) == 0u))
        {
            _2593 = 0.0;
            _2595 = 0.0;
            _2597 = 0.0;
            _2599 = 0.0;
            _2601 = 0.0;
            _2603 = 0.0;
        }
        else
        {
            float _2594;
            float _2596;
            float _2598;
            float _2600;
            float _2602;
            float _2604;
            float _2763 = 0.0;
            float _2764 = 0.0;
            float _2765 = 0.0;
            float _2766 = 0.0;
            float _2767 = 0.0;
            float _2768 = 0.0;
            uint _2769 = 0u;
            uint _2778;
            bool _2779;
            for (;;)
            {
                _2778 = texelFetch(g_lightClassification, int((((_2463 << 5u) + (_2449 << 9u)) + (_2769 << 2u)) >> 2u)).x;
                _2779 = _2778 == 0u;
                float frontier_phi_82_pred;
                float frontier_phi_82_pred_1;
                float frontier_phi_82_pred_2;
                float frontier_phi_82_pred_3;
                float frontier_phi_82_pred_4;
                float frontier_phi_82_pred_5;
                if (_2779)
                {
                    frontier_phi_82_pred = _2763;
                    frontier_phi_82_pred_1 = _2768;
                    frontier_phi_82_pred_2 = _2767;
                    frontier_phi_82_pred_3 = _2766;
                    frontier_phi_82_pred_4 = _2765;
                    frontier_phi_82_pred_5 = _2764;
                }
                else
                {
                    float _2908;
                    float _2909;
                    float _2910;
                    float _2911;
                    float _2912;
                    float _2913;
                    uint _2914;
                    _2908 = _2763;
                    _2909 = _2764;
                    _2910 = _2765;
                    _2911 = _2766;
                    _2912 = _2767;
                    _2913 = _2768;
                    _2914 = _2778;
                    float _2840;
                    float _2841;
                    float _2842;
                    float _2843;
                    float _2844;
                    float _2845;
                    for (;;)
                    {
                        uint _2918 = uint(findLSB(_2914)) + (_2769 << 5u);
                        uint _2915 = (_2914 + 4294967295u) & _2914;
                        uint _2920 = _2918 * 48u;
                        vec4 _2934 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2920)).x, texelFetch(g_PointLightRenderingBuffer, int(_2920 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2920 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2920 + 3u)).x));
                        uint _2940 = (_2918 * 48u) + 4u;
                        vec4 _2953 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2940)).x, texelFetch(g_PointLightRenderingBuffer, int(_2940 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2940 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2940 + 3u)).x));
                        uint _2959 = (_2918 * 48u) + 8u;
                        vec3 _2970 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2959)).x, texelFetch(g_PointLightRenderingBuffer, int(_2959 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2959 + 2u)).x));
                        float _2974 = _2934.x - _1862;
                        float _2975 = _2934.y - _1863;
                        float _2976 = _2934.z - _1864;
                        float _2977 = dot(vec3(_2974, _2975, _2976), vec3(_2974, _2975, _2976));
                        float _2980 = inversesqrt(_2977);
                        float _2981 = _2980 * _2974;
                        float _2982 = _2980 * _2975;
                        float _2983 = _2980 * _2976;
                        float _2984 = dot(vec3(_727, _730, _733), vec3(_2981, _2982, _2983));
                        float _2989 = 1.0 - (_2977 * _2934.w);
                        float _4235 = isnan(0.0) ? _2989 : (isnan(_2989) ? 0.0 : max(_2989, 0.0));
                        float _2990 = isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0));
                        float _2991 = sqrt(_2977) * _2953.w;
                        float _2994 = 1.39999997615814208984375 / (_2991 + 1.39999997615814208984375);
                        float _2995 = _2994 * _2994;
                        float _2998 = ((1.0 - _2995) * _2984) + _2995;
                        float _3001 = _2991 * _2991;
                        float _3005 = ((isnan(0.0) ? _2998 : (isnan(_2998) ? 0.0 : max(_2998, 0.0))) * _2990) / ((_3001 * 0.699999988079071044921875) + 1.0);
                        float _3009 = (-0.0) - _1862;
                        float _3010 = (-0.0) - _1863;
                        float _3011 = (-0.0) - _1864;
                        float _3015 = inversesqrt(dot(vec3(_3009, _3010, _3011), vec3(_3009, _3010, _3011)));
                        float _3016 = _3015 * _3009;
                        float _3017 = _3015 * _3010;
                        float _3018 = _3015 * _3011;
                        float _3025 = exp2(log2(1.0 / ((_3001 * 3.5) + 5.0)) * 0.25);
                        float _3026 = 1.0 - _803;
                        float _3033 = sqrt(1.0 - ((1.0 - (_3026 * _3026)) * (1.0 - (_3025 * _3025))));
                        float _3034 = _3033 * _3033;
                        float _3035 = _3034 * _3034;
                        float _3036 = _3016 + _2981;
                        float _3037 = _3017 + _2982;
                        float _3038 = _3018 + _2983;
                        float _3042 = inversesqrt(dot(vec3(_3036, _3037, _3038), vec3(_3036, _3037, _3038)));
                        float _3046 = dot(vec3(_727, _730, _733), vec3(_3016, _3017, _3018));
                        float _4251 = isnan(0.0) ? _3046 : (isnan(_3046) ? 0.0 : max(_3046, 0.0));
                        float _3049 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
                        float _3050 = dot(vec3(_727, _730, _733), vec3(_3042 * _3036, _3042 * _3037, _3042 * _3038));
                        float _4262 = isnan(0.0) ? _3050 : (isnan(_3050) ? 0.0 : max(_3050, 0.0));
                        float _3053 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
                        float _3057 = ((_3053 * _3053) * (_3035 + (-1.0))) + 1.0;
                        float _3058 = _2994 * _3034;
                        float _3059 = _3058 * _3058;
                        float _3062 = ((1.0 - _3059) * _2984) + _3059;
                        float _4273 = isnan(0.0) ? _3062 : (isnan(_3062) ? 0.0 : max(_3062, 0.0));
                        float _3063 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
                        float _3064 = 1.0 - _3034;
                        float _3074 = (0.5 / (((_3063 * ((_3049 * _3064) + _3034)) + 9.9999999392252902907785028219223e-09) + (((_3063 * _3064) + _3034) * _3049))) * _3063;
                        float _4284 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
                        float _3085 = (((_3035 * 3.1415927410125732421875) * (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0)))) / ((_3057 * _3057) * ((_3001 * 2.1991131305694580078125) + 3.141590118408203125))) * _2990;
                        _2843 = (_3005 * _2953.x) + _2911;
                        _2844 = (_3005 * _2953.y) + _2912;
                        _2845 = (_3005 * _2953.z) + _2913;
                        _2840 = (_3085 * _2970.x) + _2908;
                        _2841 = (_3085 * _2970.y) + _2909;
                        _2842 = (_3085 * _2970.z) + _2910;
                        if (_2915 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2908 = _2840;
                            _2909 = _2841;
                            _2910 = _2842;
                            _2911 = _2843;
                            _2912 = _2844;
                            _2913 = _2845;
                            _2914 = _2915;
                        }
                    }
                    frontier_phi_82_pred = _2840;
                    frontier_phi_82_pred_1 = _2845;
                    frontier_phi_82_pred_2 = _2844;
                    frontier_phi_82_pred_3 = _2843;
                    frontier_phi_82_pred_4 = _2842;
                    frontier_phi_82_pred_5 = _2841;
                }
                _2594 = frontier_phi_82_pred;
                _2604 = frontier_phi_82_pred_1;
                _2602 = frontier_phi_82_pred_2;
                _2600 = frontier_phi_82_pred_3;
                _2598 = frontier_phi_82_pred_4;
                _2596 = frontier_phi_82_pred_5;
                uint _2770 = _2769 + 1u;
                if (_2770 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2763 = _2594;
                    _2764 = _2596;
                    _2765 = _2598;
                    _2766 = _2600;
                    _2767 = _2602;
                    _2768 = _2604;
                    _2769 = _2770;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2593 = _2594;
            _2595 = _2596;
            _2597 = _2598;
            _2599 = _2600;
            _2601 = _2602;
            _2603 = _2604;
        }
        uvec4 _2607 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2608 = _2607.z;
        uint _2610 = (_2608 >> 8u) & 15u;
        float _2731;
        float _2733;
        float _2735;
        float _2737;
        float _2739;
        float _2741;
        if (((4294967295u << _2610) & _2469) == 0u)
        {
            _2731 = _2593;
            _2733 = _2595;
            _2735 = _2597;
            _2737 = _2599;
            _2739 = _2601;
            _2741 = _2603;
        }
        else
        {
            float _2756 = inversesqrt(dot(vec3(_1862, _1863, _1864), vec3(_1862, _1863, _1864)));
            float _2757 = _2756 * _1862;
            float _2758 = _2756 * _1863;
            float _2759 = _2756 * _1864;
            float frontier_phi_75_76_ladder;
            float frontier_phi_75_76_ladder_1;
            float frontier_phi_75_76_ladder_2;
            float frontier_phi_75_76_ladder_3;
            float frontier_phi_75_76_ladder_4;
            float frontier_phi_75_76_ladder_5;
            if (_2610 < ((_2608 >> 12u) & 15u))
            {
                float _2732;
                float _2734;
                float _2736;
                float _2738;
                float _2740;
                float _2742;
                float _2891 = _2593;
                float _2892 = _2595;
                float _2893 = _2597;
                float _2894 = _2599;
                float _2895 = _2601;
                float _2896 = _2603;
                uint _2897 = _2610;
                uint _2906;
                bool _2907;
                for (;;)
                {
                    _2906 = texelFetch(g_lightClassification, int((((_2463 << 5u) + (_2449 << 9u)) + (_2897 << 2u)) >> 2u)).x;
                    _2907 = _2906 == 0u;
                    float frontier_phi_88_pred;
                    float frontier_phi_88_pred_1;
                    float frontier_phi_88_pred_2;
                    float frontier_phi_88_pred_3;
                    float frontier_phi_88_pred_4;
                    float frontier_phi_88_pred_5;
                    if (_2907)
                    {
                        frontier_phi_88_pred = _2894;
                        frontier_phi_88_pred_1 = _2895;
                        frontier_phi_88_pred_2 = _2896;
                        frontier_phi_88_pred_3 = _2893;
                        frontier_phi_88_pred_4 = _2892;
                        frontier_phi_88_pred_5 = _2891;
                    }
                    else
                    {
                        float _3090;
                        float _3091;
                        float _3092;
                        float _3093;
                        float _3094;
                        float _3095;
                        float _3383;
                        float _3384;
                        float _3385;
                        float _3386;
                        float _3387;
                        float _3388;
                        float _3103 = _2891;
                        float _3104 = _2892;
                        float _3105 = _2893;
                        float _3106 = _2894;
                        float _3107 = _2895;
                        float _3108 = _2896;
                        uint _3109 = _2906;
                        uint _3110;
                        vec4 _3135;
                        float _3136;
                        vec4 _3151;
                        vec3 _3163;
                        vec4 _3178;
                        vec4 _3193;
                        float _3239;
                        bool _3240;
                        for (;;)
                        {
                            uint _3120 = ((_2897 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3109));
                            _3110 = (_3109 + 4294967295u) & _3109;
                            uint _3122 = _3120 * 40u;
                            _3135 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3122)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3122 + 3u)).x));
                            _3136 = _3135.w;
                            uint _3138 = (_3120 * 40u) + 4u;
                            _3151 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3138)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3138 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3138 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3138 + 3u)).x));
                            uint _3153 = (_3120 * 40u) + 8u;
                            _3163 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3153)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3153 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3153 + 2u)).x));
                            uint _3165 = (_3120 * 40u) + 16u;
                            _3178 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3165)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3165 + 3u)).x));
                            uint _3180 = (_3120 * 40u) + 20u;
                            _3193 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3180)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3180 + 3u)).x));
                            uint _3195 = (_3120 * 40u) + 24u;
                            vec4 _3208 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3195)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3195 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3195 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3195 + 3u)).x));
                            uint _3214 = (_3120 * 40u) + 28u;
                            vec4 _3227 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3214)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3214 + 3u)).x));
                            _3239 = fma(_1864, _3227.z, fma(_1863, _3227.y, _3227.x * _1862)) + _3227.w;
                            _3240 = !((fma(_1864, _3208.z, fma(_1863, _3208.y, _3208.x * _1862)) + _3208.w) <= 0.0);
                            float frontier_phi_94_pred;
                            float frontier_phi_94_pred_1;
                            float frontier_phi_94_pred_2;
                            float frontier_phi_94_pred_3;
                            float frontier_phi_94_pred_4;
                            float frontier_phi_94_pred_5;
                            if (_3240)
                            {
                                float _3267 = _3135.x - _1862;
                                float _3268 = _3135.y - _1863;
                                float _3269 = _3135.z - _1864;
                                float _3270 = dot(vec3(_3267, _3268, _3269), vec3(_3267, _3268, _3269));
                                float _3273 = inversesqrt(_3270);
                                float _3274 = _3273 * _3267;
                                float _3275 = _3273 * _3268;
                                float _3276 = _3273 * _3269;
                                float _3280 = 1.0 - (_3270 / (_3136 * _3136));
                                float _4295 = isnan(0.0) ? _3280 : (isnan(_3280) ? 0.0 : max(_3280, 0.0));
                                float _3281 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
                                float _3285 = sqrt(_3270) * _3151.w;
                                float _3287 = 1.39999997615814208984375 / (_3285 + 1.39999997615814208984375);
                                float _3288 = _3287 * _3287;
                                float _3291 = ((1.0 - _3288) * dot(vec3(_3274, _3275, _3276), vec3(_727, _730, _733))) + _3288;
                                float _3294 = _3285 * _3285;
                                float _3298 = (fma(_1864, _3178.z, fma(_1863, _3178.y, _3178.x * _1862)) + _3178.w) / _3239;
                                float _3299 = (fma(_1864, _3193.z, fma(_1863, _3193.y, _3193.x * _1862)) + _3193.w) / _3239;
                                float _3303 = 1.0 - dot(vec2(_3298, _3299), vec2(_3298, _3299));
                                float _4311 = isnan(0.0) ? _3303 : (isnan(_3303) ? 0.0 : max(_3303, 0.0));
                                float _3304 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
                                float _3305 = _3304 * (((isnan(0.0) ? _3291 : (isnan(_3291) ? 0.0 : max(_3291, 0.0))) * _3281) / ((_3294 * 0.699999988079071044921875) + 1.0));
                                float _3317 = exp2(log2(1.0 / ((_3294 * 3.5) + 5.0)) * 0.25);
                                float _3318 = 1.0 - _803;
                                float _3325 = sqrt(1.0 - ((1.0 - (_3318 * _3318)) * (1.0 - (_3317 * _3317))));
                                float _3326 = _3325 * _3325;
                                float _3327 = _3326 * _3326;
                                float _3328 = _3274 - _2757;
                                float _3329 = _3275 - _2758;
                                float _3330 = _3276 - _2759;
                                float _3334 = inversesqrt(dot(vec3(_3328, _3329, _3330), vec3(_3328, _3329, _3330)));
                                float _3338 = dot(vec3(_727, _730, _733), vec3((-0.0) - _2757, (-0.0) - _2758, (-0.0) - _2759));
                                float _4322 = isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0));
                                float _3341 = isnan(1.0) ? _4322 : (isnan(_4322) ? 1.0 : min(_4322, 1.0));
                                float _3342 = dot(vec3(_727, _730, _733), vec3(_3334 * _3328, _3334 * _3329, _3334 * _3330));
                                float _4333 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0));
                                float _3345 = isnan(1.0) ? _4333 : (isnan(_4333) ? 1.0 : min(_4333, 1.0));
                                float _3349 = ((_3345 * _3345) * (_3327 + (-1.0))) + 1.0;
                                float _3350 = _3287 * _3326;
                                float _3351 = _3350 * _3350;
                                float _3357 = ((1.0 - _3351) * dot(vec3(_727, _730, _733), vec3(_3274, _3275, _3276))) + _3351;
                                float _4344 = isnan(0.0) ? _3357 : (isnan(_3357) ? 0.0 : max(_3357, 0.0));
                                float _3358 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
                                float _3359 = 1.0 - _3326;
                                float _3369 = (0.5 / (((_3358 * ((_3341 * _3359) + _3326)) + 9.9999999392252902907785028219223e-09) + (((_3358 * _3359) + _3326) * _3341))) * _3358;
                                float _4355 = isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0));
                                float _3379 = (_3304 * _3281) * (((_3327 * 3.1415927410125732421875) * (isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0)))) / ((_3349 * _3349) * ((_3294 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_94_pred = _3379 * _3163.x;
                                frontier_phi_94_pred_1 = _3379 * _3163.y;
                                frontier_phi_94_pred_2 = _3305 * _3151.z;
                                frontier_phi_94_pred_3 = _3305 * _3151.y;
                                frontier_phi_94_pred_4 = _3305 * _3151.x;
                                frontier_phi_94_pred_5 = _3379 * _3163.z;
                            }
                            else
                            {
                                frontier_phi_94_pred = 0.0;
                                frontier_phi_94_pred_1 = 0.0;
                                frontier_phi_94_pred_2 = 0.0;
                                frontier_phi_94_pred_3 = 0.0;
                                frontier_phi_94_pred_4 = 0.0;
                                frontier_phi_94_pred_5 = 0.0;
                            }
                            _3383 = frontier_phi_94_pred;
                            _3384 = frontier_phi_94_pred_1;
                            _3388 = frontier_phi_94_pred_2;
                            _3387 = frontier_phi_94_pred_3;
                            _3386 = frontier_phi_94_pred_4;
                            _3385 = frontier_phi_94_pred_5;
                            _3093 = _3386 + _3106;
                            _3094 = _3387 + _3107;
                            _3095 = _3388 + _3108;
                            _3090 = _3383 + _3103;
                            _3091 = _3384 + _3104;
                            _3092 = _3385 + _3105;
                            if (_3110 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3103 = _3090;
                                _3104 = _3091;
                                _3105 = _3092;
                                _3106 = _3093;
                                _3107 = _3094;
                                _3108 = _3095;
                                _3109 = _3110;
                                continue;
                            }
                        }
                        frontier_phi_88_pred = _3093;
                        frontier_phi_88_pred_1 = _3094;
                        frontier_phi_88_pred_2 = _3095;
                        frontier_phi_88_pred_3 = _3092;
                        frontier_phi_88_pred_4 = _3091;
                        frontier_phi_88_pred_5 = _3090;
                    }
                    _2738 = frontier_phi_88_pred;
                    _2740 = frontier_phi_88_pred_1;
                    _2742 = frontier_phi_88_pred_2;
                    _2736 = frontier_phi_88_pred_3;
                    _2734 = frontier_phi_88_pred_4;
                    _2732 = frontier_phi_88_pred_5;
                    uint _2898 = _2897 + 1u;
                    if (_2898 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2891 = _2732;
                        _2892 = _2734;
                        _2893 = _2736;
                        _2894 = _2738;
                        _2895 = _2740;
                        _2896 = _2742;
                        _2897 = _2898;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_75_76_ladder = _2740;
                frontier_phi_75_76_ladder_1 = _2742;
                frontier_phi_75_76_ladder_2 = _2738;
                frontier_phi_75_76_ladder_3 = _2736;
                frontier_phi_75_76_ladder_4 = _2734;
                frontier_phi_75_76_ladder_5 = _2732;
            }
            else
            {
                frontier_phi_75_76_ladder = _2601;
                frontier_phi_75_76_ladder_1 = _2603;
                frontier_phi_75_76_ladder_2 = _2599;
                frontier_phi_75_76_ladder_3 = _2597;
                frontier_phi_75_76_ladder_4 = _2595;
                frontier_phi_75_76_ladder_5 = _2593;
            }
            _2731 = frontier_phi_75_76_ladder_5;
            _2733 = frontier_phi_75_76_ladder_4;
            _2735 = frontier_phi_75_76_ladder_3;
            _2737 = frontier_phi_75_76_ladder_2;
            _2739 = frontier_phi_75_76_ladder;
            _2741 = frontier_phi_75_76_ladder_1;
        }
        float _2746 = isnan(1.0) ? _787 : (isnan(_787) ? 1.0 : min(_787, 1.0));
        _2482 = (_2746 * _2737) + _2150;
        _2484 = (_2746 * _2739) + _2151;
        _2486 = (_2746 * _2741) + _2152;
        _2488 = ((_2731 * _772) * _2746) + _2317;
        _2490 = ((_2733 * _774) * _2746) + _2318;
        _2492 = ((_2735 * _775) * _2746) + _2319;
    }
    else
    {
        _2482 = _2150;
        _2484 = _2151;
        _2486 = _2152;
        _2488 = _2317;
        _2490 = _2318;
        _2492 = _2319;
    }
    uint _2498 = _748 + uint(cbMatDynParam._m0[0u].w);
    float _4371 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4382 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4393 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _2523 = (((isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (_2482 + ((isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0))) * _787))) + ((_2488 + ((isnan(0.0) ? _1809 : (isnan(_1809) ? 0.0 : max(_1809, 0.0))) * _1596)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_2498].x * ((_591 * ((_547 - _472) - (_547 * _292))) + _472));
    float _2525 = ((cbInstanceData._m0[_2498].y * ((_591 * ((_548 - _473) - (_548 * _292))) + _473)) + ((_2490 + ((isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0))) * _1596)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0))) * (_2484 + ((isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0))) * _787)));
    float _2527 = ((cbInstanceData._m0[_2498].z * ((_591 * ((_549 - _474) - (_549 * _292))) + _474)) + ((_2492 + ((isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))) * _1596)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_2486 + ((isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0))) * _787)));
    uint _2531 = _746 + 6u;
    float _2539 = _706 / cbSceneParam._m0[86u].x;
    float _2540 = _707 / cbSceneParam._m0[86u].y;
    vec4 _2554 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2539, _2540, (log2((isnan(cbSceneParam._m0[77u].w) ? _693 : (isnan(_693) ? cbSceneParam._m0[77u].w : min(_693, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2556 = _2554.x;
    float _2557 = _2554.y;
    float _2558 = _2554.z;
    float _2559 = _2554.w;
    float _2655;
    float _2657;
    float _2659;
    float _2661;
    if (_693 > cbSceneParam._m0[78u].w)
    {
        float _2618 = isnan(_693) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _693 : min(cbSceneParam._m0[80u].w, _693));
        float _2619 = _2618 / _693;
        float _2630 = _2619 * _265;
        float _2631 = _266 * _2619;
        float _2632 = (-0.0) - _2631;
        float _2633 = _2619 * _267;
        float _2635 = (cbSceneParam._m0[77u].w * _2632) / _2618;
        float _2636 = _2635 + cbSceneParam._m0[79u].w;
        float _2637 = cbSceneParam._m0[79u].w - _2631;
        float _2643 = sqrt(((_2630 * _2630) + (_2631 * _2631)) + (_2633 * _2633));
        float _2646 = (1.0 - (cbSceneParam._m0[77u].w / _2618)) * _2643;
        float _2651 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2653 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2853;
        if (abs((_2632 - _2635) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2853 = ((((_2636 > 0.0) ? exp2(_2651 * _2636) : (2.0 - exp2(_2653 * _2636))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2646;
        }
        else
        {
            float _2792 = 1.0 / cbSceneParam._m0[80u].x;
            float _2793 = isnan(_2637) ? _2636 : (isnan(_2636) ? _2637 : max(_2636, _2637));
            float _2794 = isnan(_2637) ? _2636 : (isnan(_2636) ? _2637 : min(_2636, _2637));
            float _2803 = isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : min(_2793, 0.0));
            float _2804 = isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : min(_2794, 0.0));
            _2853 = ((abs(_2643 / _2632) * cbSceneParam._m0[80u].y) * ((((_2803 - _2804) * 2.0) - ((exp2(_2651 * (isnan(0.0) ? _2793 : (isnan(_2793) ? 0.0 : max(_2793, 0.0)))) - exp2(_2651 * (isnan(0.0) ? _2794 : (isnan(_2794) ? 0.0 : max(_2794, 0.0))))) * _2792)) - ((exp2(_2653 * _2803) - exp2(_2653 * _2804)) * _2792))) + (_2646 * cbSceneParam._m0[80u].z);
        }
        vec4 _2855 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2539, _2540, 1.0), 0.0);
        float _2864 = exp2((_2853 * (-1.44269502162933349609375)) * (1.0 - _2855.w));
        float _2865 = log2(_2864);
        float _2881 = log2(_2559);
        _2655 = (exp2(_2881 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2865 * cbSceneParam._m0[78u].x)) * _2855.x) / cbSceneParam._m0[78u].x)) + _2556;
        _2657 = (exp2(_2881 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2865 * cbSceneParam._m0[78u].y)) * _2855.y) / cbSceneParam._m0[78u].y)) + _2557;
        _2659 = (exp2(_2881 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2865 * cbSceneParam._m0[78u].z)) * _2855.z) / cbSceneParam._m0[78u].z)) + _2558;
        _2661 = _2864 * _2559;
    }
    else
    {
        _2655 = _2556;
        _2657 = _2557;
        _2659 = _2558;
        _2661 = _2559;
    }
    float _2673 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2674 = _2673 == 3.0;
    float _2675 = log2(_2661);
    float _2682 = exp2(_2675 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2523 : (isnan(_2523) ? 0.0 : max(_2523, 0.0)));
    float _2683 = exp2(_2675 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0)));
    float _2684 = exp2(_2675 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0)));
    float _2693 = (_2673 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2693 * (_2674 ? _2682 : (_2682 + (cbSceneParam._m0[72u].w * _2655)));
    SV_Target.y = _2693 * (_2674 ? _2683 : (_2683 + (cbSceneParam._m0[72u].w * _2657)));
    SV_Target.z = _2693 * (_2674 ? _2684 : (_2684 + (cbSceneParam._m0[72u].w * _2659)));
    SV_Target.w = cbInstanceData._m0[_2531].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2531].w;
}


