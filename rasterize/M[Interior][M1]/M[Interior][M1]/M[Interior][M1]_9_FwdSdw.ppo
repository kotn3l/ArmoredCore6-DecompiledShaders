#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_M1_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Interior_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D M_Interior_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _397;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _190 = _189 * _182;
    float _191 = _189 * _183;
    float _192 = _189 * _184;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _282 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _288 = _282.w;
    float _301 = (((cbMtdParam._m0[12u].x - cbMtdParam._m0[11u].x) * _288) + cbMtdParam._m0[11u].x) * _282.x;
    float _303 = (((cbMtdParam._m0[12u].y - cbMtdParam._m0[11u].y) * _288) + cbMtdParam._m0[11u].y) * _282.y;
    float _305 = (((cbMtdParam._m0[12u].z - cbMtdParam._m0[11u].z) * _288) + cbMtdParam._m0[11u].z) * _282.z;
    float _330 = inversesqrt(dot(vec3(_190, _191, _192), vec3(_190, _191, _192)));
    float _337 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _346 = cbMtdParam._m0[23u].x + _261;
    float _347 = cbMtdParam._m0[23u].y + _262;
    float _348 = cbMtdParam._m0[23u].z + _263;
    float _362 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_330 * _190, _330 * _191, _330 * _192));
    float _363 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_337 * _204, _337 * _205, _337 * _206));
    float _364 = (-0.0) - dot(vec3(_346, _347, _348), vec3((-0.0) - _197, (-0.0) - _198, (-0.0) - _199));
    float _368 = inversesqrt(dot(vec3(_362, _363, _364), vec3(_362, _363, _364)));
    float _369 = _368 * _364;
    float _371 = (cbMtdParam._m0[19u].w * _362) * _368;
    float _373 = (cbMtdParam._m0[20u].x * _363) * _368;
    float _376 = fract(cbMtdParam._m0[19u].w * TEXCOORD.x);
    float _377 = fract(cbMtdParam._m0[20u].x * TEXCOORD.y);
    float _395;
    float _398;
    float _400;
    if (_371 > 0.0)
    {
        float _381 = (1.0 - _376) / _371;
        _395 = _381;
        _398 = ((cbMtdParam._m0[17u].x + 1.0) - fract(_381 * _369)) * 0.16666667163372039794921875;
        _400 = (fract((_381 * _373) + _377) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_371 < 0.0)
        {
            float _396 = ((-0.0) - _376) / _371;
            frontier_phi_3_2_ladder = (fract(_396 * _369) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_1 = _396;
            frontier_phi_3_2_ladder_2 = (fract((_396 * _373) + _377) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _397;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _395 = frontier_phi_3_2_ladder_1;
        _398 = frontier_phi_3_2_ladder;
        _400 = frontier_phi_3_2_ladder_2;
    }
    float _426;
    float _428;
    float _430;
    if (_373 > 0.0)
    {
        float _413 = (1.0 - _377) / _373;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_413 < _395)
        {
            frontier_phi_8_5_ladder = (fract(_413 * _369) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_1 = (fract((_413 * _371) + _376) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = _413;
        }
        else
        {
            frontier_phi_8_5_ladder = _400;
            frontier_phi_8_5_ladder_1 = _398;
            frontier_phi_8_5_ladder_2 = _395;
        }
        _426 = frontier_phi_8_5_ladder_2;
        _428 = frontier_phi_8_5_ladder_1;
        _430 = frontier_phi_8_5_ladder;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_373 < 0.0)
        {
            float _427 = ((-0.0) - _377) / _373;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_427 < _395)
            {
                frontier_phi_8_6_ladder_9_ladder = fract(_427 * _369) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_427 * _371) + _376) + cbMtdParam._m0[17u].x) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = _427;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _400;
                frontier_phi_8_6_ladder_9_ladder_1 = _398;
                frontier_phi_8_6_ladder_9_ladder_2 = _395;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _400;
            frontier_phi_8_6_ladder_1 = _398;
            frontier_phi_8_6_ladder_2 = _395;
        }
        _426 = frontier_phi_8_6_ladder_2;
        _428 = frontier_phi_8_6_ladder_1;
        _430 = frontier_phi_8_6_ladder;
    }
    float _434 = (_369 > 0.0) ? (cbMtdParam._m0[16u].w / _369) : 5000.0;
    float _447;
    float _448;
    if (_434 < _426)
    {
        _447 = ((_376 + cbMtdParam._m0[17u].x) + (_434 * _371)) * 0.16666667163372039794921875;
        _448 = (((_434 * _373) + _377) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _447 = _428;
        _448 = _430;
    }
    vec4 _450 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_447, _448));
    float _455 = _450.x * cbMtdParam._m0[13u].x;
    float _456 = _450.y * cbMtdParam._m0[13u].y;
    float _457 = _450.z * cbMtdParam._m0[13u].z;
    vec4 _475 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _477 = _475.x;
    vec4 _489 = texture(sampler2D(M_Interior_M1_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _497 = (_489.x * 2.0) + (-1.0);
    float _499 = (_489.y * 2.0) + (-1.0);
    float _500 = dot(vec2(_497, _499), vec2(_497, _499));
    float _3406 = isnan(0.0) ? _500 : (isnan(_500) ? 0.0 : max(_500, 0.0));
    float _505 = sqrt(1.0 - (isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0))));
    float _506 = _489.z * _288;
    float _509 = fma(_505, _197, fma(_499, _204, _497 * _190));
    float _512 = fma(_505, _198, fma(_499, _205, _497 * _191));
    float _515 = fma(_505, _199, fma(_499, _206, _497 * _192));
    float _519 = inversesqrt(dot(vec3(_509, _512, _515), vec3(_509, _512, _515)));
    float _520 = _519 * _509;
    float _521 = _519 * _512;
    float _522 = _519 * _515;
    float _3417 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _523 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
    float _3428 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _3439 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _3450 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _3461 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _527 = isnan(1.0) ? _3461 : (isnan(_3461) ? 1.0 : min(_3461, 1.0));
    float _543 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _547 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _548 = _261 * _547;
    float _549 = _262 * _547;
    float _550 = _263 * _547;
    float _556 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _557 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _578 = fma(_522, cbSceneParam._m0[5u].z, fma(_521, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _520));
    float _581 = fma(_522, cbSceneParam._m0[6u].z, fma(_521, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _520));
    float _584 = fma(_522, cbSceneParam._m0[7u].z, fma(_521, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _520));
    uint _597 = uint(roundEven(NORMAL.w)) * 13u;
    uint _598 = _597 + 9u;
    uint _599 = _598 + uint(cbMatDynParam._m0[0u].w);
    float _605 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3428 : (isnan(_3428) ? 1.0 : min(_3428, 1.0)))) * cbInstanceData._m0[_599].x;
    float _606 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3439 : (isnan(_3439) ? 1.0 : min(_3439, 1.0)))) * cbInstanceData._m0[_599].y;
    float _607 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3450 : (isnan(_3450) ? 1.0 : min(_3450, 1.0)))) * cbInstanceData._m0[_599].z;
    float _3472 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _608 = isnan(1.0) ? _3472 : (isnan(_3472) ? 1.0 : min(_3472, 1.0));
    float _3483 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _609 = isnan(1.0) ? _3483 : (isnan(_3483) ? 1.0 : min(_3483, 1.0));
    float _3494 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _610 = isnan(1.0) ? _3494 : (isnan(_3494) ? 1.0 : min(_3494, 1.0));
    float _611 = 1.0 - _527;
    float _612 = _608 * _611;
    float _613 = _609 * _611;
    float _614 = _610 * _611;
    float _619 = (_608 + (-0.039999999105930328369140625)) * _527;
    float _620 = (_609 + (-0.039999999105930328369140625)) * _527;
    float _621 = (_610 + (-0.039999999105930328369140625)) * _527;
    float _622 = _619 + 0.039999999105930328369140625;
    float _624 = _620 + 0.039999999105930328369140625;
    float _625 = _621 + 0.039999999105930328369140625;
    vec4 _634 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _556, cbSceneParam._m0[86u].y * _557));
    float _637 = _634.x * TEXCOORD.z;
    float _638 = dot(vec3(_520, _521, _522), vec3(_548, _549, _550));
    float _641 = _638 * 2.0;
    float _645 = (_641 * _520) - _548;
    float _646 = (_641 * _521) - _549;
    float _647 = (_641 * _522) - _550;
    float _651 = abs(dot(vec3(_548, _549, _550), vec3(_520, _521, _522)));
    float _3505 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _653 = sqrt(_523);
    float _666 = exp2((_653 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3505 : (isnan(_3505) ? 1.0 : min(_3505, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_653 * 3.0));
    float _672 = (1.0 - _666) * ((_653 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _673 = _666 * _653;
    float _701 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _705 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _709 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    float _1020;
    float _1021;
    float _1022;
    float _1023;
    float _1024;
    float _1025;
    float _1026;
    float _1027;
    float _1028;
    float _1029;
    float _1030;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _742 = fma(_709, cbModelParam._m0[26u].z, fma(_705, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _701));
        float _746 = fma(_709, cbModelParam._m0[27u].z, fma(_705, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _701));
        float _750 = fma(_709, cbModelParam._m0[28u].z, fma(_705, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _701));
        float _774 = _701 + _520;
        float _775 = _705 + _521;
        float _776 = _709 + _522;
        float _786 = fma(_776, cbModelParam._m0[26u].z, fma(_775, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _774)) - _742;
        float _787 = fma(_776, cbModelParam._m0[27u].z, fma(_775, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _774)) - _746;
        float _788 = fma(_776, cbModelParam._m0[28u].z, fma(_775, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _774)) - _750;
        float _792 = inversesqrt(dot(vec3(_786, _787, _788), vec3(_786, _787, _788)));
        float _805 = ((_792 * _786) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_742 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _806 = ((_792 * _787) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_746 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _807 = ((_792 * _788) / cbModelParam._m0[34u].z) + ((((((_750 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _810 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_805, _806, _807), 0.0);
        vec4 _817 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_805, _806, _807), 0.0);
        vec4 _824 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_805, _806, _807), 0.0);
        vec4 _831 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_805, _806, _807), 0.0);
        float _844 = exp2((_810.w + (-0.5)) * 20.0) * 2.0;
        float _845 = _844 * (_810.x + (-0.5));
        float _846 = _844 * (_810.y + (-0.5));
        float _847 = _844 * (_810.z + (-0.5));
        float _854 = exp2((_817.w + (-0.5)) * 20.0) * 2.0;
        float _855 = _854 * (_817.x + (-0.5));
        float _856 = _854 * (_817.y + (-0.5));
        float _857 = _854 * (_817.z + (-0.5));
        float _864 = exp2((_824.w + (-0.5)) * 20.0) * 2.0;
        float _865 = _864 * (_824.x + (-0.5));
        float _866 = _864 * (_824.y + (-0.5));
        float _867 = _864 * (_824.z + (-0.5));
        float _874 = exp2((_831.w + (-0.5)) * 20.0) * 2.0;
        float _875 = _874 * (_831.x + (-0.5));
        float _876 = _874 * (_831.y + (-0.5));
        float _877 = _874 * (_831.z + (-0.5));
        float _878 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
        float _879 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
        float _880 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
        float _881 = _845 * 0.5;
        float _882 = _855 * 0.5;
        float _883 = _865 * 0.5;
        float _884 = dot(vec3(_881, _882, _883), vec3(_881, _882, _883));
        float _889 = (_884 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_884);
        float _898 = (dot(vec3(_520, _521, _522), vec3(_889 * _881, _889 * _882, _889 * _883)) + 1.0) * 0.5;
        float _3531 = isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0));
        float _908 = sqrt(((_882 * _882) + (_881 * _881)) + (_883 * _883)) / (_878 + 9.9999997473787516355514526367188e-06);
        float _3542 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
        float _909 = isnan(1.0) ? _3542 : (isnan(_3542) ? 1.0 : min(_3542, 1.0));
        float _910 = _909 * 2.0;
        float _914 = (1.0 - _909) / (_909 + 1.0);
        float _3553 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
        float _915 = isnan(1.0) ? _3553 : (isnan(_3553) ? 1.0 : min(_3553, 1.0));
        float _924 = ((((1.0 - _915) * (_910 + 2.0)) * exp2(log2(isnan(1.0) ? _3531 : (isnan(_3531) ? 1.0 : min(_3531, 1.0))) * (_910 + 1.0))) + _915) * _878;
        float _925 = _846 * 0.5;
        float _926 = _856 * 0.5;
        float _927 = _866 * 0.5;
        float _928 = dot(vec3(_925, _926, _927), vec3(_925, _926, _927));
        float _933 = (_928 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_928);
        float _941 = (dot(vec3(_520, _521, _522), vec3(_933 * _925, _933 * _926, _933 * _927)) + 1.0) * 0.5;
        float _3564 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
        float _950 = sqrt(((_926 * _926) + (_925 * _925)) + (_927 * _927)) / (_879 + 9.9999997473787516355514526367188e-06);
        float _3575 = isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0));
        float _951 = isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0));
        float _952 = _951 * 2.0;
        float _956 = (1.0 - _951) / (_951 + 1.0);
        float _3586 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
        float _957 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
        float _966 = ((((1.0 - _957) * (_952 + 2.0)) * exp2(log2(isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0))) * (_952 + 1.0))) + _957) * _879;
        float _967 = _847 * 0.5;
        float _968 = _857 * 0.5;
        float _969 = _867 * 0.5;
        float _970 = dot(vec3(_967, _968, _969), vec3(_967, _968, _969));
        float _975 = (_970 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_970);
        float _983 = (dot(vec3(_520, _521, _522), vec3(_975 * _967, _975 * _968, _975 * _969)) + 1.0) * 0.5;
        float _3597 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
        float _992 = sqrt(((_968 * _968) + (_967 * _967)) + (_969 * _969)) / (_880 + 9.9999997473787516355514526367188e-06);
        float _3608 = isnan(0.0) ? _992 : (isnan(_992) ? 0.0 : max(_992, 0.0));
        float _993 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
        float _994 = _993 * 2.0;
        float _998 = (1.0 - _993) / (_993 + 1.0);
        float _3619 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
        float _999 = isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0));
        float _1008 = ((((1.0 - _999) * (_994 + 2.0)) * exp2(log2(isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0))) * (_994 + 1.0))) + _999) * _880;
        _1016 = _847;
        _1017 = _846;
        _1018 = _845;
        _1019 = _857;
        _1020 = _856;
        _1021 = _855;
        _1022 = _867;
        _1023 = _866;
        _1024 = _865;
        _1025 = _880;
        _1026 = _879;
        _1027 = _878;
        _1028 = cbModelParam._m0[36u].z * (isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0)));
        _1029 = cbModelParam._m0[36u].z * (isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0)));
        _1030 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0)));
    }
    else
    {
        _1016 = _397;
        _1017 = _397;
        _1018 = _397;
        _1019 = _397;
        _1020 = _397;
        _1021 = _397;
        _1022 = _397;
        _1023 = _397;
        _1024 = _397;
        _1025 = _397;
        _1026 = _397;
        _1027 = _397;
        _1028 = 0.0;
        _1029 = 0.0;
        _1030 = 0.0;
    }
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    float _1330;
    float _1331;
    float _1332;
    float _1333;
    float _1334;
    float _1335;
    float _1336;
    float _1337;
    float _1338;
    float _1339;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1056 = fma(_709, cbModelParam._m0[30u].z, fma(_705, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _701));
        float _1060 = fma(_709, cbModelParam._m0[31u].z, fma(_705, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _701));
        float _1064 = fma(_709, cbModelParam._m0[32u].z, fma(_705, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _701));
        float _1087 = _701 + _520;
        float _1088 = _705 + _521;
        float _1089 = _709 + _522;
        float _1099 = fma(_1089, cbModelParam._m0[30u].z, fma(_1088, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1087)) - _1056;
        float _1100 = fma(_1089, cbModelParam._m0[31u].z, fma(_1088, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1087)) - _1060;
        float _1101 = fma(_1089, cbModelParam._m0[32u].z, fma(_1088, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1087)) - _1064;
        float _1105 = inversesqrt(dot(vec3(_1099, _1100, _1101), vec3(_1099, _1100, _1101)));
        float _1118 = ((_1105 * _1099) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1056 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1119 = ((_1105 * _1100) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1060 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1120 = ((_1105 * _1101) / cbModelParam._m0[35u].z) + ((((((_1064 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1122 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1118, _1119, _1120), 0.0);
        vec4 _1129 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1118, _1119, _1120), 0.0);
        vec4 _1136 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1118, _1119, _1120), 0.0);
        vec4 _1143 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1118, _1119, _1120), 0.0);
        float _1155 = exp2((_1122.w + (-0.5)) * 20.0) * 2.0;
        float _1156 = _1155 * (_1122.x + (-0.5));
        float _1157 = _1155 * (_1122.y + (-0.5));
        float _1158 = _1155 * (_1122.z + (-0.5));
        float _1165 = exp2((_1129.w + (-0.5)) * 20.0) * 2.0;
        float _1166 = _1165 * (_1129.x + (-0.5));
        float _1167 = _1165 * (_1129.y + (-0.5));
        float _1168 = _1165 * (_1129.z + (-0.5));
        float _1175 = exp2((_1136.w + (-0.5)) * 20.0) * 2.0;
        float _1176 = _1175 * (_1136.x + (-0.5));
        float _1177 = _1175 * (_1136.y + (-0.5));
        float _1178 = _1175 * (_1136.z + (-0.5));
        float _1185 = exp2((_1143.w + (-0.5)) * 20.0) * 2.0;
        float _1186 = _1185 * (_1143.x + (-0.5));
        float _1187 = _1185 * (_1143.y + (-0.5));
        float _1188 = _1185 * (_1143.z + (-0.5));
        float _1189 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1190 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1191 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1192 = _1156 * 0.5;
        float _1193 = _1166 * 0.5;
        float _1194 = _1176 * 0.5;
        float _1195 = dot(vec3(_1192, _1193, _1194), vec3(_1192, _1193, _1194));
        float _1200 = (_1195 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1195);
        float _1208 = (dot(vec3(_520, _521, _522), vec3(_1200 * _1192, _1200 * _1193, _1200 * _1194)) + 1.0) * 0.5;
        float _3660 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
        float _1217 = sqrt(((_1193 * _1193) + (_1192 * _1192)) + (_1194 * _1194)) / (_1189 + 9.9999997473787516355514526367188e-06);
        float _3671 = isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0));
        float _1218 = isnan(1.0) ? _3671 : (isnan(_3671) ? 1.0 : min(_3671, 1.0));
        float _1219 = _1218 * 2.0;
        float _1223 = (1.0 - _1218) / (_1218 + 1.0);
        float _3682 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1224 = isnan(1.0) ? _3682 : (isnan(_3682) ? 1.0 : min(_3682, 1.0));
        float _1233 = ((((1.0 - _1224) * (_1219 + 2.0)) * exp2(log2(isnan(1.0) ? _3660 : (isnan(_3660) ? 1.0 : min(_3660, 1.0))) * (_1219 + 1.0))) + _1224) * _1189;
        float _1234 = _1157 * 0.5;
        float _1235 = _1167 * 0.5;
        float _1236 = _1177 * 0.5;
        float _1237 = dot(vec3(_1234, _1235, _1236), vec3(_1234, _1235, _1236));
        float _1242 = (_1237 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1237);
        float _1250 = (dot(vec3(_520, _521, _522), vec3(_1242 * _1234, _1242 * _1235, _1242 * _1236)) + 1.0) * 0.5;
        float _3693 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1259 = sqrt(((_1235 * _1235) + (_1234 * _1234)) + (_1236 * _1236)) / (_1190 + 9.9999997473787516355514526367188e-06);
        float _3704 = isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0));
        float _1260 = isnan(1.0) ? _3704 : (isnan(_3704) ? 1.0 : min(_3704, 1.0));
        float _1261 = _1260 * 2.0;
        float _1265 = (1.0 - _1260) / (_1260 + 1.0);
        float _3715 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1266 = isnan(1.0) ? _3715 : (isnan(_3715) ? 1.0 : min(_3715, 1.0));
        float _1275 = ((((1.0 - _1266) * (_1261 + 2.0)) * exp2(log2(isnan(1.0) ? _3693 : (isnan(_3693) ? 1.0 : min(_3693, 1.0))) * (_1261 + 1.0))) + _1266) * _1190;
        float _1276 = _1158 * 0.5;
        float _1277 = _1168 * 0.5;
        float _1278 = _1178 * 0.5;
        float _1279 = dot(vec3(_1276, _1277, _1278), vec3(_1276, _1277, _1278));
        float _1284 = (_1279 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1279);
        float _1292 = (dot(vec3(_520, _521, _522), vec3(_1284 * _1276, _1284 * _1277, _1284 * _1278)) + 1.0) * 0.5;
        float _3726 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1301 = sqrt(((_1277 * _1277) + (_1276 * _1276)) + (_1278 * _1278)) / (_1191 + 9.9999997473787516355514526367188e-06);
        float _3737 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
        float _1302 = isnan(1.0) ? _3737 : (isnan(_3737) ? 1.0 : min(_3737, 1.0));
        float _1303 = _1302 * 2.0;
        float _1307 = (1.0 - _1302) / (_1302 + 1.0);
        float _3748 = isnan(0.0) ? _1307 : (isnan(_1307) ? 0.0 : max(_1307, 0.0));
        float _1308 = isnan(1.0) ? _3748 : (isnan(_3748) ? 1.0 : min(_3748, 1.0));
        float _1317 = ((((1.0 - _1308) * (_1303 + 2.0)) * exp2(log2(isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0))) * (_1303 + 1.0))) + _1308) * _1191;
        _1325 = _1158;
        _1326 = _1157;
        _1327 = _1156;
        _1328 = _1168;
        _1329 = _1167;
        _1330 = _1166;
        _1331 = _1178;
        _1332 = _1177;
        _1333 = _1176;
        _1334 = _1191;
        _1335 = _1190;
        _1336 = _1189;
        _1337 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1233 : (isnan(_1233) ? 0.0 : max(_1233, 0.0)));
        _1338 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0)));
        _1339 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0)));
    }
    else
    {
        _1325 = _397;
        _1326 = _397;
        _1327 = _397;
        _1328 = _397;
        _1329 = _397;
        _1330 = _397;
        _1331 = _397;
        _1332 = _397;
        _1333 = _397;
        _1334 = _397;
        _1335 = _397;
        _1336 = _397;
        _1337 = 0.0;
        _1338 = 0.0;
        _1339 = 0.0;
    }
    float _1349 = (cbModelParam._m0[1u].x * (_1337 - _1028)) + _1028;
    float _1350 = (cbModelParam._m0[1u].x * (_1338 - _1029)) + _1029;
    float _1351 = (cbModelParam._m0[1u].x * (_1339 - _1030)) + _1030;
    float _1372 = fma(_1351, cbSceneParam._m0[89u].z, fma(_1350, cbSceneParam._m0[89u].y, _1349 * cbSceneParam._m0[89u].x));
    float _1375 = fma(_1351, cbSceneParam._m0[90u].z, fma(_1350, cbSceneParam._m0[90u].y, _1349 * cbSceneParam._m0[90u].x));
    float _1378 = fma(_1351, cbSceneParam._m0[91u].z, fma(_1350, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1349));
    float _1393 = _645 * 0.5;
    float _1394 = _646 * 0.5;
    float _1395 = _647 * 0.5;
    float _1396 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1327, _1330, _1333, _1336));
    float _1399 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1326, _1329, _1332, _1335));
    float _1402 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1325, _1328, _1331, _1334));
    float _1436;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1409 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1016, _1019, _1022, _1025));
        float _1413 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1017, _1020, _1023, _1026));
        float _1417 = dot(vec4(_1393, _1394, _1395, 1.0), vec4(_1018, _1021, _1024, _1027));
        float _1424 = dot(vec4(cbModelParam._m0[39u]), vec4(_1393, _1394, _1395, 1.0));
        _1436 = dot(vec3(isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)), isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0)), isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1424) ? 0.0 : (isnan(0.0) ? _1424 : max(0.0, _1424))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1436 = 1.0;
    }
    float _1447;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1438 = dot(vec4(cbModelParam._m0[40u]), vec4(_1393, _1394, _1395, 1.0));
        _1447 = dot(vec3(isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0)), isnan(0.0) ? _1399 : (isnan(_1399) ? 0.0 : max(_1399, 0.0)), isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1438) ? 0.0 : (isnan(0.0) ? _1438 : max(0.0, _1438))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1447 = 1.0;
    }
    float _1451 = (_1447 * cbModelParam._m0[1u].x) + (_1436 * (1.0 - cbModelParam._m0[1u].x));
    float _1461 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _523);
    float _1462 = isnan(_1461) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1461 : min(cbModelParam._m0[25u].z, _1461));
    float _1544;
    float _1546;
    float _1548;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1511 = fma(_709, cbModelParam._m0[13u].z, fma(_705, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _701)) + cbModelParam._m0[13u].w;
        float _1515 = fma(_709, cbModelParam._m0[14u].z, fma(_705, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _701)) + cbModelParam._m0[14u].w;
        float _1519 = fma(_709, cbModelParam._m0[15u].z, fma(_705, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _701)) + cbModelParam._m0[15u].w;
        float _1522 = fma(_647, cbModelParam._m0[13u].z, fma(_646, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _645));
        float _1525 = fma(_647, cbModelParam._m0[14u].z, fma(_646, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _645));
        float _1528 = fma(_647, cbModelParam._m0[15u].z, fma(_646, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _645));
        float _1556;
        if (_1522 > 0.0)
        {
            _1556 = abs((1.0 - _1511) / _1522);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1522 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1511 + 1.0) / _1522);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1556 = frontier_phi_26_24_ladder;
        }
        float _1729;
        if (_1525 > 0.0)
        {
            _1729 = abs((1.0 - _1515) / _1525);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1525 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1515 + 1.0) / _1525);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1729 = frontier_phi_35_31_ladder;
        }
        float _2185;
        if (_1528 > 0.0)
        {
            _2185 = abs((1.0 - _1519) / _1528);
        }
        else
        {
            float frontier_phi_47_42_ladder;
            if (_1528 < 0.0)
            {
                frontier_phi_47_42_ladder = abs((_1519 + 1.0) / _1528);
            }
            else
            {
                frontier_phi_47_42_ladder = 5000.0;
            }
            _2185 = frontier_phi_47_42_ladder;
        }
        float _2187 = isnan(_1729) ? _1556 : (isnan(_1556) ? _1729 : min(_1556, _1729));
        float _2188 = isnan(_2185) ? _2187 : (isnan(_2187) ? _2185 : min(_2187, _2185));
        float _2192 = (_2188 * _1522) + _1511;
        float _2193 = (_2188 * _1525) + _1515;
        float _2194 = (_2188 * _1528) + _1519;
        float _2195 = _2188 * 9.9999997473787516355514526367188e-05;
        float _2197 = (-1.0) - _2195;
        float _2199 = _2195 + 1.0;
        float frontier_phi_25_47_ladder;
        float frontier_phi_25_47_ladder_1;
        float frontier_phi_25_47_ladder_2;
        if ((_2194 > _2199) || ((_2194 < _2197) || ((_2193 > _2199) || ((_2193 < _2197) || ((_2192 < _2197) || (_2192 > _2199))))))
        {
            frontier_phi_25_47_ladder = 0.0;
            frontier_phi_25_47_ladder_1 = 0.0;
            frontier_phi_25_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2444 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2194, cbModelParam._m0[9u].z, fma(_2193, cbModelParam._m0[9u].y, _2192 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2194, cbModelParam._m0[10u].z, fma(_2193, cbModelParam._m0[10u].y, _2192 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2194, cbModelParam._m0[11u].z, fma(_2193, cbModelParam._m0[11u].y, _2192 * cbModelParam._m0[11u].x))), _1462);
            frontier_phi_25_47_ladder = _2444.z * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_1 = _2444.y * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_2 = _2444.x * cbModelParam._m0[1u].y;
        }
        _1544 = frontier_phi_25_47_ladder_2;
        _1546 = frontier_phi_25_47_ladder_1;
        _1548 = frontier_phi_25_47_ladder;
    }
    else
    {
        vec4 _1532 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_645, _646, _647), _1462);
        _1544 = _1532.x * cbModelParam._m0[1u].y;
        _1546 = _1532.y * cbModelParam._m0[1u].y;
        _1548 = _1532.z * cbModelParam._m0[1u].y;
    }
    float _1552 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _523);
    float _1553 = isnan(_1552) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1552 : min(cbModelParam._m0[25u].w, _1552));
    float _1644;
    float _1646;
    float _1648;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1608 = fma(_709, cbModelParam._m0[21u].z, fma(_705, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _701)) + cbModelParam._m0[21u].w;
        float _1612 = fma(_709, cbModelParam._m0[22u].z, fma(_705, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _701)) + cbModelParam._m0[22u].w;
        float _1616 = fma(_709, cbModelParam._m0[23u].z, fma(_705, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _701)) + cbModelParam._m0[23u].w;
        float _1619 = fma(_647, cbModelParam._m0[21u].z, fma(_646, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _645));
        float _1622 = fma(_647, cbModelParam._m0[22u].z, fma(_646, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _645));
        float _1625 = fma(_647, cbModelParam._m0[23u].z, fma(_646, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _645));
        float _1734;
        if (_1619 > 0.0)
        {
            _1734 = abs((1.0 - _1608) / _1619);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1619 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1608 + 1.0) / _1619);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1734 = frontier_phi_37_33_ladder;
        }
        float _2212;
        if (_1622 > 0.0)
        {
            _2212 = abs((1.0 - _1612) / _1622);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1622 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1612 + 1.0) / _1622);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _2212 = frontier_phi_49_44_ladder;
        }
        float _2565;
        if (_1625 > 0.0)
        {
            _2565 = abs((1.0 - _1616) / _1625);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1625 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1616 + 1.0) / _1625);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2565 = frontier_phi_61_56_ladder;
        }
        float _2567 = isnan(_2212) ? _1734 : (isnan(_1734) ? _2212 : min(_1734, _2212));
        float _2568 = isnan(_2565) ? _2567 : (isnan(_2567) ? _2565 : min(_2567, _2565));
        float _2572 = (_2568 * _1619) + _1608;
        float _2573 = (_2568 * _1622) + _1612;
        float _2574 = (_2568 * _1625) + _1616;
        float _2575 = _2568 * 9.9999997473787516355514526367188e-05;
        float _2576 = (-1.0) - _2575;
        float _2578 = _2575 + 1.0;
        float frontier_phi_34_61_ladder;
        float frontier_phi_34_61_ladder_1;
        float frontier_phi_34_61_ladder_2;
        if ((_2574 > _2578) || ((_2574 < _2576) || ((_2573 > _2578) || ((_2573 < _2576) || ((_2572 < _2576) || (_2572 > _2578))))))
        {
            frontier_phi_34_61_ladder = 0.0;
            frontier_phi_34_61_ladder_1 = 0.0;
            frontier_phi_34_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2695 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2574, cbModelParam._m0[17u].z, fma(_2573, cbModelParam._m0[17u].y, _2572 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2574, cbModelParam._m0[18u].z, fma(_2573, cbModelParam._m0[18u].y, _2572 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2574, cbModelParam._m0[19u].z, fma(_2573, cbModelParam._m0[19u].y, _2572 * cbModelParam._m0[19u].x))), _1553);
            frontier_phi_34_61_ladder = _2695.z * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_1 = _2695.y * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_2 = _2695.x * cbModelParam._m0[1u].z;
        }
        _1644 = frontier_phi_34_61_ladder_2;
        _1646 = frontier_phi_34_61_ladder_1;
        _1648 = frontier_phi_34_61_ladder;
    }
    else
    {
        vec4 _1628 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_645, _646, _647), _1553);
        _1644 = _1628.x * cbModelParam._m0[1u].z;
        _1646 = _1628.y * cbModelParam._m0[1u].z;
        _1648 = _1628.z * cbModelParam._m0[1u].z;
    }
    float _1661 = (((_672 * _622) + _673) * _637) * ((cbModelParam._m0[1u].w * (_1644 - _1544)) + _1544);
    float _1663 = (((_672 * _624) + _673) * _637) * ((cbModelParam._m0[1u].w * (_1646 - _1546)) + _1546);
    float _1665 = (((_672 * _625) + _673) * _637) * ((cbModelParam._m0[1u].w * (_1648 - _1548)) + _1548);
    float _1668 = fma(_1665, cbSceneParam._m0[89u].z, fma(_1663, cbSceneParam._m0[89u].y, _1661 * cbSceneParam._m0[89u].x));
    float _1671 = fma(_1665, cbSceneParam._m0[90u].z, fma(_1663, cbSceneParam._m0[90u].y, _1661 * cbSceneParam._m0[90u].x));
    float _1674 = fma(_1665, cbSceneParam._m0[91u].z, fma(_1663, cbSceneParam._m0[91u].y, _1661 * cbSceneParam._m0[91u].x));
    float _1708 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1712 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1716 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1720 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1721 = _1708 / _1720;
    float _1722 = _1712 / _1720;
    float _1723 = _1716 / _1720;
    float _1870;
    float _1871;
    float _1872;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1750 = ((uint(_1723 > cbSceneParam._m0[59u].y) + uint(_1723 > cbSceneParam._m0[59u].x)) + uint(_1723 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1751 = _1750 + 43u;
        uint _1759 = _1750 + 44u;
        uint _1767 = _1750 + 45u;
        uint _1775 = _1750 + 46u;
        float _1786 = fma(_1720, cbSceneParam._m0[_1751].w, fma(_1716, cbSceneParam._m0[_1751].z, fma(_1712, cbSceneParam._m0[_1751].y, _1708 * cbSceneParam._m0[_1751].x)));
        float _1790 = fma(_1720, cbSceneParam._m0[_1759].w, fma(_1716, cbSceneParam._m0[_1759].z, fma(_1712, cbSceneParam._m0[_1759].y, _1708 * cbSceneParam._m0[_1759].x)));
        float _1798 = fma(_1720, cbSceneParam._m0[_1775].w, fma(_1716, cbSceneParam._m0[_1775].z, fma(_1712, cbSceneParam._m0[_1775].y, _1708 * cbSceneParam._m0[_1775].x)));
        float _1803 = cbSceneParam._m0[33u].z * _1798;
        float _1805 = cbSceneParam._m0[33u].w * _1798;
        float _1808 = fma(_1720, cbSceneParam._m0[_1767].w, fma(_1716, cbSceneParam._m0[_1767].z, fma(_1712, cbSceneParam._m0[_1767].y, _1708 * cbSceneParam._m0[_1767].x))) / _1798;
        float _1856 = (cbSceneParam._m0[33u].x - sqrt(((_1722 * _1722) + (_1721 * _1721)) + (_1723 * _1723))) * cbSceneParam._m0[33u].y;
        float _3874 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
        float _1863 = (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1803 + _1786) / _1798, (_1805 + _1790) / _1798), _1808), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1805 + _1786) / _1798, (_1790 - _1803) / _1798), _1808), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1786 - _1803) / _1798, (_1790 - _1805) / _1798), _1808), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1786 - _1805) / _1798, (_1803 + _1790) / _1798), _1808), 0.0)).x), vec4(0.25)));
        _1870 = 1.0 - (_1863 * cbSceneParam._m0[34u].x);
        _1871 = 1.0 - (_1863 * cbSceneParam._m0[34u].y);
        _1872 = 1.0 - (_1863 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1870 = 1.0;
        _1871 = 1.0;
        _1872 = 1.0;
    }
    float _1936;
    float _1938;
    float _1940;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1924 = fma(_1720, cbSceneParam._m0[63u].w, fma(_1716, cbSceneParam._m0[63u].z, fma(_1712, cbSceneParam._m0[63u].y, _1708 * cbSceneParam._m0[63u].x)));
        float _1925 = fma(_1720, cbSceneParam._m0[60u].w, fma(_1716, cbSceneParam._m0[60u].z, fma(_1712, cbSceneParam._m0[60u].y, _1708 * cbSceneParam._m0[60u].x))) / _1924;
        float _1926 = fma(_1720, cbSceneParam._m0[61u].w, fma(_1716, cbSceneParam._m0[61u].z, fma(_1712, cbSceneParam._m0[61u].y, _1708 * cbSceneParam._m0[61u].x))) / _1924;
        float frontier_phi_46_45_ladder;
        float frontier_phi_46_45_ladder_1;
        float frontier_phi_46_45_ladder_2;
        if ((((_1925 >= cbSceneParam._m0[64u].x) && (_1926 >= cbSceneParam._m0[64u].y)) && (_1925 <= cbSceneParam._m0[64u].z)) && (_1926 <= cbSceneParam._m0[64u].w))
        {
            float _2225 = fma(_1720, cbSceneParam._m0[62u].w, fma(_1716, cbSceneParam._m0[62u].z, fma(_1712, cbSceneParam._m0[62u].y, _1708 * cbSceneParam._m0[62u].x))) / _1924;
            float _2229 = isnan(cbSceneParam._m0[41u].w) ? _2225 : (isnan(_2225) ? cbSceneParam._m0[41u].w : max(_2225, cbSceneParam._m0[41u].w));
            float _2272 = (cbSceneParam._m0[33u].x - sqrt(((_1722 * _1722) + (_1721 * _1721)) + (_1723 * _1723))) * cbSceneParam._m0[33u].y;
            float _3890 = isnan(0.0) ? _2272 : (isnan(_2272) ? 0.0 : max(_2272, 0.0));
            float _2279 = (isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1925, cbSceneParam._m0[33u].w + _1926), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1925, _1926 - cbSceneParam._m0[33u].z), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1925 - cbSceneParam._m0[33u].z, _1926 - cbSceneParam._m0[33u].w), _2229), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1925 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1926), _2229), 0.0)).x), vec4(0.25)));
            float _2283 = 1.0 - (_2279 * cbSceneParam._m0[34u].x);
            float _2284 = 1.0 - (_2279 * cbSceneParam._m0[34u].y);
            float _2285 = 1.0 - (_2279 * cbSceneParam._m0[34u].z);
            frontier_phi_46_45_ladder = isnan(_2285) ? _1872 : (isnan(_1872) ? _2285 : min(_1872, _2285));
            frontier_phi_46_45_ladder_1 = isnan(_2284) ? _1871 : (isnan(_1871) ? _2284 : min(_1871, _2284));
            frontier_phi_46_45_ladder_2 = isnan(_2283) ? _1870 : (isnan(_1870) ? _2283 : min(_1870, _2283));
        }
        else
        {
            frontier_phi_46_45_ladder = _1872;
            frontier_phi_46_45_ladder_1 = _1871;
            frontier_phi_46_45_ladder_2 = _1870;
        }
        _1936 = frontier_phi_46_45_ladder_2;
        _1938 = frontier_phi_46_45_ladder_1;
        _1940 = frontier_phi_46_45_ladder;
    }
    else
    {
        _1936 = _1870;
        _1938 = _1871;
        _1940 = _1872;
    }
    uvec4 _1945 = floatBitsToUint(cbInstanceData._m0[_597 + 5u]);
    uint _1947 = _1945.x * 14u;
    uint _1948 = _1947 + 13u;
    float _1953 = _637 + (-1.0);
    float _1956 = (cbLight._m0[_1948].x * _1953) + 1.0;
    float _1957 = (cbLight._m0[_1948].y * _1953) + 1.0;
    uint _1958 = _1947 + 5u;
    float _1964 = isnan(1.0) ? _1957 : (isnan(_1957) ? 1.0 : min(_1957, 1.0));
    uint _1968 = _1947 + 4u;
    float _1978 = isnan(1.0) ? _1956 : (isnan(_1956) ? 1.0 : min(_1956, 1.0));
    uint _1982 = _1947 | 1u;
    float _1993 = dot(vec3(cbLight._m0[_1947].xyz), vec3(_520, _521, _522));
    float _1996 = dot(vec3(cbLight._m0[_1982].xyz), vec3(_520, _521, _522));
    float _3926 = isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0));
    float _3937 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
    float _2001 = (isnan(1.0) ? _3926 : (isnan(_3926) ? 1.0 : min(_3926, 1.0))) * 0.3183098733425140380859375;
    float _2003 = (isnan(1.0) ? _3937 : (isnan(_3937) ? 1.0 : min(_3937, 1.0))) * 0.3183098733425140380859375;
    float _2010 = ((cbLight._m0[_1958].x * _1964) * _2003) + (((cbLight._m0[_1968].x * _1936) * _1978) * _2001);
    float _2011 = ((_1964 * cbLight._m0[_1958].y) * _2003) + (((cbLight._m0[_1968].y * _1938) * _1978) * _2001);
    float _2012 = ((_1964 * cbLight._m0[_1958].z) * _2003) + (((cbLight._m0[_1968].z * _1940) * _1978) * _2001);
    uint _2014 = _1947 + 8u;
    float _2027 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1947].w)) * _523) * 0.949999988079071044921875);
    float _2028 = _2027 * _2027;
    float _2029 = cbLight._m0[_1947].x + _548;
    float _2030 = cbLight._m0[_1947].y + _549;
    float _2031 = cbLight._m0[_1947].z + _550;
    float _2035 = inversesqrt(dot(vec3(_2029, _2030, _2031), vec3(_2029, _2030, _2031)));
    float _2036 = _2035 * _2029;
    float _2037 = _2035 * _2030;
    float _2038 = _2035 * _2031;
    float _2039 = dot(vec3(_520, _521, _522), vec3(cbLight._m0[_1947].xyz));
    float _3948 = isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0));
    float _2042 = isnan(1.0) ? _3948 : (isnan(_3948) ? 1.0 : min(_3948, 1.0));
    float _3959 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _2043 = isnan(1.0) ? _3959 : (isnan(_3959) ? 1.0 : min(_3959, 1.0));
    float _2044 = dot(vec3(_520, _521, _522), vec3(_2036, _2037, _2038));
    float _3970 = isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0));
    float _2047 = isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0));
    float _2048 = dot(vec3(cbLight._m0[_1947].xyz), vec3(_2036, _2037, _2038));
    float _3981 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _2052 = _2028 * _2028;
    float _2056 = ((_2047 * _2047) * (_2052 + (-1.0))) + 1.0;
    float _2064 = exp2(log2(1.0 - (isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0)))) * 5.0);
    float _2065 = 0.959999978542327880859375 - _619;
    float _2067 = 0.959999978542327880859375 - _620;
    float _2068 = 0.959999978542327880859375 - _621;
    float _2075 = 1.0 - _2028;
    float _2086 = (0.5 / (((_2043 * ((_2042 * _2075) + _2028)) + 9.9999999392252902907785028219223e-09) + (((_2043 * _2075) + _2028) * _2042))) * _2042;
    float _3992 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
    float _2088 = (isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0))) * (_2052 / ((_2056 * _2056) * 3.141590118408203125));
    uint _2102 = _1947 + 9u;
    float _2113 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1982].w)) * _523) * 0.949999988079071044921875);
    float _2114 = _2113 * _2113;
    float _2115 = cbLight._m0[_1982].x + _548;
    float _2116 = cbLight._m0[_1982].y + _549;
    float _2117 = cbLight._m0[_1982].z + _550;
    float _2121 = inversesqrt(dot(vec3(_2115, _2116, _2117), vec3(_2115, _2116, _2117)));
    float _2122 = _2121 * _2115;
    float _2123 = _2121 * _2116;
    float _2124 = _2121 * _2117;
    float _2125 = dot(vec3(_520, _521, _522), vec3(cbLight._m0[_1982].xyz));
    float _4003 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
    float _2128 = isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0));
    float _2129 = dot(vec3(_520, _521, _522), vec3(_2122, _2123, _2124));
    float _4014 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
    float _2132 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
    float _2133 = dot(vec3(cbLight._m0[_1982].xyz), vec3(_2122, _2123, _2124));
    float _4025 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _2137 = _2114 * _2114;
    float _2141 = ((_2132 * _2132) * (_2137 + (-1.0))) + 1.0;
    float _2148 = exp2(log2(1.0 - (isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0)))) * 5.0);
    float _2155 = 1.0 - _2114;
    float _2165 = (0.5 / (((_2043 * ((_2128 * _2155) + _2114)) + 9.9999999392252902907785028219223e-09) + (((_2043 * _2155) + _2114) * _2128))) * _2128;
    float _4036 = isnan(0.0) ? _2165 : (isnan(_2165) ? 0.0 : max(_2165, 0.0));
    float _2167 = (isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * (_2137 / ((_2141 * _2141) * 3.141590118408203125));
    float _2177 = (((((_2148 * _2065) + _622) * cbLight._m0[_2102].x) * _2167) * _1964) + ((((cbLight._m0[_2014].x * _1936) * ((_2064 * _2065) + _622)) * _2088) * _1978);
    float _2178 = (((((_2148 * _2067) + _624) * cbLight._m0[_2102].y) * _2167) * _1964) + ((((cbLight._m0[_2014].y * _1938) * ((_2064 * _2067) + _624)) * _2088) * _1978);
    float _2179 = (((((_2148 * _2068) + _625) * cbLight._m0[_2102].z) * _2167) * _1964) + ((((cbLight._m0[_2014].z * _1940) * ((_2064 * _2068) + _625)) * _2088) * _1978);
    float _2342;
    float _2344;
    float _2346;
    float _2348;
    float _2350;
    float _2352;
    if (_1945.y == 0u)
    {
        uvec4 _2297 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2298 = _2297.x;
        uint _2309 = uint((float(_2297.y) * floor(float(uint(cbSceneParam._m0[85u].y * _557) / _2298))) + floor(float(uint(cbSceneParam._m0[85u].x * _556) / _2298)));
        float _2319 = (log2(_1723 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2320 = isnan(0.0) ? _2319 : (isnan(_2319) ? 0.0 : max(_2319, 0.0));
        uint _2323 = uint(isnan(14.0) ? _2320 : (isnan(_2320) ? 14.0 : min(_2320, 14.0)));
        uvec4 _2328 = texelFetch(g_lightClusterGridBuffer, int(((_2323 << 2u) + (_2309 << 6u)) >> 2u));
        uint _2329 = _2328.x;
        uint _2330 = _2297.z;
        float _2453;
        float _2455;
        float _2457;
        float _2459;
        float _2461;
        float _2463;
        if (((((1u << ((_2330 >> 4u) & 15u)) + 4294967295u) & _2329) == 0u) || ((_2330 & 240u) == 0u))
        {
            _2453 = 0.0;
            _2455 = 0.0;
            _2457 = 0.0;
            _2459 = 0.0;
            _2461 = 0.0;
            _2463 = 0.0;
        }
        else
        {
            float _2454;
            float _2456;
            float _2458;
            float _2460;
            float _2462;
            float _2464;
            float _2623 = 0.0;
            float _2624 = 0.0;
            float _2625 = 0.0;
            float _2626 = 0.0;
            float _2627 = 0.0;
            float _2628 = 0.0;
            uint _2629 = 0u;
            uint _2638;
            bool _2639;
            for (;;)
            {
                _2638 = texelFetch(g_lightClassification, int((((_2323 << 5u) + (_2309 << 9u)) + (_2629 << 2u)) >> 2u)).x;
                _2639 = _2638 == 0u;
                float frontier_phi_70_pred;
                float frontier_phi_70_pred_1;
                float frontier_phi_70_pred_2;
                float frontier_phi_70_pred_3;
                float frontier_phi_70_pred_4;
                float frontier_phi_70_pred_5;
                if (_2639)
                {
                    frontier_phi_70_pred = _2626;
                    frontier_phi_70_pred_1 = _2628;
                    frontier_phi_70_pred_2 = _2627;
                    frontier_phi_70_pred_3 = _2625;
                    frontier_phi_70_pred_4 = _2624;
                    frontier_phi_70_pred_5 = _2623;
                }
                else
                {
                    float _2768;
                    float _2769;
                    float _2770;
                    float _2771;
                    float _2772;
                    float _2773;
                    uint _2774;
                    _2768 = _2623;
                    _2769 = _2624;
                    _2770 = _2625;
                    _2771 = _2626;
                    _2772 = _2627;
                    _2773 = _2628;
                    _2774 = _2638;
                    float _2700;
                    float _2701;
                    float _2702;
                    float _2703;
                    float _2704;
                    float _2705;
                    for (;;)
                    {
                        uint _2778 = uint(findLSB(_2774)) + (_2629 << 5u);
                        uint _2775 = (_2774 + 4294967295u) & _2774;
                        uint _2780 = _2778 * 48u;
                        vec4 _2794 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2780)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2780 + 3u)).x));
                        uint _2800 = (_2778 * 48u) + 4u;
                        vec4 _2813 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2800)).x, texelFetch(g_PointLightRenderingBuffer, int(_2800 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2800 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2800 + 3u)).x));
                        uint _2819 = (_2778 * 48u) + 8u;
                        vec3 _2830 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2819)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2819 + 2u)).x));
                        float _2834 = _2794.x - _1721;
                        float _2835 = _2794.y - _1722;
                        float _2836 = _2794.z - _1723;
                        float _2837 = dot(vec3(_2834, _2835, _2836), vec3(_2834, _2835, _2836));
                        float _2840 = inversesqrt(_2837);
                        float _2841 = _2840 * _2834;
                        float _2842 = _2840 * _2835;
                        float _2843 = _2840 * _2836;
                        float _2844 = dot(vec3(_578, _581, _584), vec3(_2841, _2842, _2843));
                        float _2849 = 1.0 - (_2837 * _2794.w);
                        float _4057 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
                        float _2850 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
                        float _2851 = sqrt(_2837) * _2813.w;
                        float _2854 = 1.39999997615814208984375 / (_2851 + 1.39999997615814208984375);
                        float _2855 = _2854 * _2854;
                        float _2858 = ((1.0 - _2855) * _2844) + _2855;
                        float _2861 = _2851 * _2851;
                        float _2865 = ((isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0))) * _2850) / ((_2861 * 0.699999988079071044921875) + 1.0);
                        float _2869 = (-0.0) - _1721;
                        float _2870 = (-0.0) - _1722;
                        float _2871 = (-0.0) - _1723;
                        float _2875 = inversesqrt(dot(vec3(_2869, _2870, _2871), vec3(_2869, _2870, _2871)));
                        float _2876 = _2875 * _2869;
                        float _2877 = _2875 * _2870;
                        float _2878 = _2875 * _2871;
                        float _2885 = exp2(log2(1.0 / ((_2861 * 3.5) + 5.0)) * 0.25);
                        float _2886 = 1.0 - _653;
                        float _2893 = sqrt(1.0 - ((1.0 - (_2886 * _2886)) * (1.0 - (_2885 * _2885))));
                        float _2894 = _2893 * _2893;
                        float _2895 = _2894 * _2894;
                        float _2896 = _2876 + _2841;
                        float _2897 = _2877 + _2842;
                        float _2898 = _2878 + _2843;
                        float _2902 = inversesqrt(dot(vec3(_2896, _2897, _2898), vec3(_2896, _2897, _2898)));
                        float _2906 = dot(vec3(_578, _581, _584), vec3(_2876, _2877, _2878));
                        float _4073 = isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0));
                        float _2909 = isnan(1.0) ? _4073 : (isnan(_4073) ? 1.0 : min(_4073, 1.0));
                        float _2910 = dot(vec3(_578, _581, _584), vec3(_2902 * _2896, _2902 * _2897, _2902 * _2898));
                        float _4084 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
                        float _2913 = isnan(1.0) ? _4084 : (isnan(_4084) ? 1.0 : min(_4084, 1.0));
                        float _2917 = ((_2913 * _2913) * (_2895 + (-1.0))) + 1.0;
                        float _2918 = _2854 * _2894;
                        float _2919 = _2918 * _2918;
                        float _2922 = ((1.0 - _2919) * _2844) + _2919;
                        float _4095 = isnan(0.0) ? _2922 : (isnan(_2922) ? 0.0 : max(_2922, 0.0));
                        float _2923 = isnan(1.0) ? _4095 : (isnan(_4095) ? 1.0 : min(_4095, 1.0));
                        float _2924 = 1.0 - _2894;
                        float _2934 = (0.5 / (((_2923 * ((_2909 * _2924) + _2894)) + 9.9999999392252902907785028219223e-09) + (((_2923 * _2924) + _2894) * _2909))) * _2923;
                        float _4106 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
                        float _2945 = (((_2895 * 3.1415927410125732421875) * (isnan(1.0) ? _4106 : (isnan(_4106) ? 1.0 : min(_4106, 1.0)))) / ((_2917 * _2917) * ((_2861 * 2.1991131305694580078125) + 3.141590118408203125))) * _2850;
                        _2703 = (_2865 * _2813.x) + _2771;
                        _2704 = (_2865 * _2813.y) + _2772;
                        _2705 = (_2865 * _2813.z) + _2773;
                        _2700 = (_2945 * _2830.x) + _2768;
                        _2701 = (_2945 * _2830.y) + _2769;
                        _2702 = (_2945 * _2830.z) + _2770;
                        if (_2775 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2768 = _2700;
                            _2769 = _2701;
                            _2770 = _2702;
                            _2771 = _2703;
                            _2772 = _2704;
                            _2773 = _2705;
                            _2774 = _2775;
                        }
                    }
                    frontier_phi_70_pred = _2703;
                    frontier_phi_70_pred_1 = _2705;
                    frontier_phi_70_pred_2 = _2704;
                    frontier_phi_70_pred_3 = _2702;
                    frontier_phi_70_pred_4 = _2701;
                    frontier_phi_70_pred_5 = _2700;
                }
                _2460 = frontier_phi_70_pred;
                _2464 = frontier_phi_70_pred_1;
                _2462 = frontier_phi_70_pred_2;
                _2458 = frontier_phi_70_pred_3;
                _2456 = frontier_phi_70_pred_4;
                _2454 = frontier_phi_70_pred_5;
                uint _2630 = _2629 + 1u;
                if (_2630 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2623 = _2454;
                    _2624 = _2456;
                    _2625 = _2458;
                    _2626 = _2460;
                    _2627 = _2462;
                    _2628 = _2464;
                    _2629 = _2630;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2453 = _2454;
            _2455 = _2456;
            _2457 = _2458;
            _2459 = _2460;
            _2461 = _2462;
            _2463 = _2464;
        }
        uvec4 _2467 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2468 = _2467.z;
        uint _2470 = (_2468 >> 8u) & 15u;
        float _2591;
        float _2593;
        float _2595;
        float _2597;
        float _2599;
        float _2601;
        if (((4294967295u << _2470) & _2329) == 0u)
        {
            _2591 = _2453;
            _2593 = _2455;
            _2595 = _2457;
            _2597 = _2459;
            _2599 = _2461;
            _2601 = _2463;
        }
        else
        {
            float _2616 = inversesqrt(dot(vec3(_1721, _1722, _1723), vec3(_1721, _1722, _1723)));
            float _2617 = _2616 * _1721;
            float _2618 = _2616 * _1722;
            float _2619 = _2616 * _1723;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_2470 < ((_2468 >> 12u) & 15u))
            {
                float _2592;
                float _2594;
                float _2596;
                float _2598;
                float _2600;
                float _2602;
                float _2751 = _2453;
                float _2752 = _2455;
                float _2753 = _2457;
                float _2754 = _2459;
                float _2755 = _2461;
                float _2756 = _2463;
                uint _2757 = _2470;
                uint _2766;
                bool _2767;
                for (;;)
                {
                    _2766 = texelFetch(g_lightClassification, int((((_2323 << 5u) + (_2309 << 9u)) + (_2757 << 2u)) >> 2u)).x;
                    _2767 = _2766 == 0u;
                    float frontier_phi_76_pred;
                    float frontier_phi_76_pred_1;
                    float frontier_phi_76_pred_2;
                    float frontier_phi_76_pred_3;
                    float frontier_phi_76_pred_4;
                    float frontier_phi_76_pred_5;
                    if (_2767)
                    {
                        frontier_phi_76_pred = _2756;
                        frontier_phi_76_pred_1 = _2755;
                        frontier_phi_76_pred_2 = _2754;
                        frontier_phi_76_pred_3 = _2753;
                        frontier_phi_76_pred_4 = _2752;
                        frontier_phi_76_pred_5 = _2751;
                    }
                    else
                    {
                        float _2950;
                        float _2951;
                        float _2952;
                        float _2953;
                        float _2954;
                        float _2955;
                        float _3243;
                        float _3244;
                        float _3245;
                        float _3246;
                        float _3247;
                        float _3248;
                        float _2963 = _2751;
                        float _2964 = _2752;
                        float _2965 = _2753;
                        float _2966 = _2754;
                        float _2967 = _2755;
                        float _2968 = _2756;
                        uint _2969 = _2766;
                        uint _2970;
                        vec4 _2995;
                        float _2996;
                        vec4 _3011;
                        vec3 _3023;
                        vec4 _3038;
                        vec4 _3053;
                        float _3099;
                        bool _3100;
                        for (;;)
                        {
                            uint _2980 = ((_2757 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2969));
                            _2970 = (_2969 + 4294967295u) & _2969;
                            uint _2982 = _2980 * 40u;
                            _2995 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2982)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2982 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2982 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2982 + 3u)).x));
                            _2996 = _2995.w;
                            uint _2998 = (_2980 * 40u) + 4u;
                            _3011 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2998)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2998 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2998 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2998 + 3u)).x));
                            uint _3013 = (_2980 * 40u) + 8u;
                            _3023 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3013)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3013 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3013 + 2u)).x));
                            uint _3025 = (_2980 * 40u) + 16u;
                            _3038 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3025)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3025 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3025 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3025 + 3u)).x));
                            uint _3040 = (_2980 * 40u) + 20u;
                            _3053 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3040)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3040 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3040 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3040 + 3u)).x));
                            uint _3055 = (_2980 * 40u) + 24u;
                            vec4 _3068 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3055)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3055 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3055 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3055 + 3u)).x));
                            uint _3074 = (_2980 * 40u) + 28u;
                            vec4 _3087 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3074)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3074 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3074 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3074 + 3u)).x));
                            _3099 = fma(_1723, _3087.z, fma(_1722, _3087.y, _3087.x * _1721)) + _3087.w;
                            _3100 = !((fma(_1723, _3068.z, fma(_1722, _3068.y, _3068.x * _1721)) + _3068.w) <= 0.0);
                            float frontier_phi_82_pred;
                            float frontier_phi_82_pred_1;
                            float frontier_phi_82_pred_2;
                            float frontier_phi_82_pred_3;
                            float frontier_phi_82_pred_4;
                            float frontier_phi_82_pred_5;
                            if (_3100)
                            {
                                float _3127 = _2995.x - _1721;
                                float _3128 = _2995.y - _1722;
                                float _3129 = _2995.z - _1723;
                                float _3130 = dot(vec3(_3127, _3128, _3129), vec3(_3127, _3128, _3129));
                                float _3133 = inversesqrt(_3130);
                                float _3134 = _3133 * _3127;
                                float _3135 = _3133 * _3128;
                                float _3136 = _3133 * _3129;
                                float _3140 = 1.0 - (_3130 / (_2996 * _2996));
                                float _4117 = isnan(0.0) ? _3140 : (isnan(_3140) ? 0.0 : max(_3140, 0.0));
                                float _3141 = isnan(1.0) ? _4117 : (isnan(_4117) ? 1.0 : min(_4117, 1.0));
                                float _3145 = sqrt(_3130) * _3011.w;
                                float _3147 = 1.39999997615814208984375 / (_3145 + 1.39999997615814208984375);
                                float _3148 = _3147 * _3147;
                                float _3151 = ((1.0 - _3148) * dot(vec3(_3134, _3135, _3136), vec3(_578, _581, _584))) + _3148;
                                float _3154 = _3145 * _3145;
                                float _3158 = (fma(_1723, _3038.z, fma(_1722, _3038.y, _3038.x * _1721)) + _3038.w) / _3099;
                                float _3159 = (fma(_1723, _3053.z, fma(_1722, _3053.y, _3053.x * _1721)) + _3053.w) / _3099;
                                float _3163 = 1.0 - dot(vec2(_3158, _3159), vec2(_3158, _3159));
                                float _4133 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0));
                                float _3164 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
                                float _3165 = _3164 * (((isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0))) * _3141) / ((_3154 * 0.699999988079071044921875) + 1.0));
                                float _3177 = exp2(log2(1.0 / ((_3154 * 3.5) + 5.0)) * 0.25);
                                float _3178 = 1.0 - _653;
                                float _3185 = sqrt(1.0 - ((1.0 - (_3178 * _3178)) * (1.0 - (_3177 * _3177))));
                                float _3186 = _3185 * _3185;
                                float _3187 = _3186 * _3186;
                                float _3188 = _3134 - _2617;
                                float _3189 = _3135 - _2618;
                                float _3190 = _3136 - _2619;
                                float _3194 = inversesqrt(dot(vec3(_3188, _3189, _3190), vec3(_3188, _3189, _3190)));
                                float _3198 = dot(vec3(_578, _581, _584), vec3((-0.0) - _2617, (-0.0) - _2618, (-0.0) - _2619));
                                float _4144 = isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0));
                                float _3201 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
                                float _3202 = dot(vec3(_578, _581, _584), vec3(_3194 * _3188, _3194 * _3189, _3194 * _3190));
                                float _4155 = isnan(0.0) ? _3202 : (isnan(_3202) ? 0.0 : max(_3202, 0.0));
                                float _3205 = isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0));
                                float _3209 = ((_3205 * _3205) * (_3187 + (-1.0))) + 1.0;
                                float _3210 = _3147 * _3186;
                                float _3211 = _3210 * _3210;
                                float _3217 = ((1.0 - _3211) * dot(vec3(_578, _581, _584), vec3(_3134, _3135, _3136))) + _3211;
                                float _4166 = isnan(0.0) ? _3217 : (isnan(_3217) ? 0.0 : max(_3217, 0.0));
                                float _3218 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
                                float _3219 = 1.0 - _3186;
                                float _3229 = (0.5 / (((_3218 * ((_3201 * _3219) + _3186)) + 9.9999999392252902907785028219223e-09) + (((_3218 * _3219) + _3186) * _3201))) * _3218;
                                float _4177 = isnan(0.0) ? _3229 : (isnan(_3229) ? 0.0 : max(_3229, 0.0));
                                float _3239 = (_3164 * _3141) * (((_3187 * 3.1415927410125732421875) * (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)))) / ((_3209 * _3209) * ((_3154 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_82_pred = _3165 * _3011.z;
                                frontier_phi_82_pred_1 = _3165 * _3011.y;
                                frontier_phi_82_pred_2 = _3165 * _3011.x;
                                frontier_phi_82_pred_3 = _3239 * _3023.z;
                                frontier_phi_82_pred_4 = _3239 * _3023.y;
                                frontier_phi_82_pred_5 = _3239 * _3023.x;
                            }
                            else
                            {
                                frontier_phi_82_pred = 0.0;
                                frontier_phi_82_pred_1 = 0.0;
                                frontier_phi_82_pred_2 = 0.0;
                                frontier_phi_82_pred_3 = 0.0;
                                frontier_phi_82_pred_4 = 0.0;
                                frontier_phi_82_pred_5 = 0.0;
                            }
                            _3248 = frontier_phi_82_pred;
                            _3247 = frontier_phi_82_pred_1;
                            _3246 = frontier_phi_82_pred_2;
                            _3245 = frontier_phi_82_pred_3;
                            _3244 = frontier_phi_82_pred_4;
                            _3243 = frontier_phi_82_pred_5;
                            _2953 = _3246 + _2966;
                            _2954 = _3247 + _2967;
                            _2955 = _3248 + _2968;
                            _2950 = _3243 + _2963;
                            _2951 = _3244 + _2964;
                            _2952 = _3245 + _2965;
                            if (_2970 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2963 = _2950;
                                _2964 = _2951;
                                _2965 = _2952;
                                _2966 = _2953;
                                _2967 = _2954;
                                _2968 = _2955;
                                _2969 = _2970;
                                continue;
                            }
                        }
                        frontier_phi_76_pred = _2955;
                        frontier_phi_76_pred_1 = _2954;
                        frontier_phi_76_pred_2 = _2953;
                        frontier_phi_76_pred_3 = _2952;
                        frontier_phi_76_pred_4 = _2951;
                        frontier_phi_76_pred_5 = _2950;
                    }
                    _2602 = frontier_phi_76_pred;
                    _2600 = frontier_phi_76_pred_1;
                    _2598 = frontier_phi_76_pred_2;
                    _2596 = frontier_phi_76_pred_3;
                    _2594 = frontier_phi_76_pred_4;
                    _2592 = frontier_phi_76_pred_5;
                    uint _2758 = _2757 + 1u;
                    if (_2758 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2751 = _2592;
                        _2752 = _2594;
                        _2753 = _2596;
                        _2754 = _2598;
                        _2755 = _2600;
                        _2756 = _2602;
                        _2757 = _2758;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _2600;
                frontier_phi_63_64_ladder_1 = _2602;
                frontier_phi_63_64_ladder_2 = _2598;
                frontier_phi_63_64_ladder_3 = _2596;
                frontier_phi_63_64_ladder_4 = _2594;
                frontier_phi_63_64_ladder_5 = _2592;
            }
            else
            {
                frontier_phi_63_64_ladder = _2461;
                frontier_phi_63_64_ladder_1 = _2463;
                frontier_phi_63_64_ladder_2 = _2459;
                frontier_phi_63_64_ladder_3 = _2457;
                frontier_phi_63_64_ladder_4 = _2455;
                frontier_phi_63_64_ladder_5 = _2453;
            }
            _2591 = frontier_phi_63_64_ladder_5;
            _2593 = frontier_phi_63_64_ladder_4;
            _2595 = frontier_phi_63_64_ladder_3;
            _2597 = frontier_phi_63_64_ladder_2;
            _2599 = frontier_phi_63_64_ladder;
            _2601 = frontier_phi_63_64_ladder_1;
        }
        float _2606 = isnan(1.0) ? _637 : (isnan(_637) ? 1.0 : min(_637, 1.0));
        _2342 = (_2606 * _2597) + _2010;
        _2344 = (_2606 * _2599) + _2011;
        _2346 = (_2606 * _2601) + _2012;
        _2348 = ((_2591 * _622) * _2606) + _2177;
        _2350 = ((_2593 * _624) * _2606) + _2178;
        _2352 = ((_2595 * _625) * _2606) + _2179;
    }
    else
    {
        _2342 = _2010;
        _2344 = _2011;
        _2346 = _2012;
        _2348 = _2177;
        _2350 = _2178;
        _2352 = _2179;
    }
    uint _2358 = _598 + uint(cbMatDynParam._m0[0u].w);
    float _4193 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _4204 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _4215 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _2383 = (((isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))) * (_2342 + ((isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0))) * _637))) + ((_2348 + ((isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0))) * _1451)) * cbPerFrame._m0[3u].x)) + (cbInstanceData._m0[_2358].x * (_455 - (_455 * _288)));
    float _2385 = ((cbInstanceData._m0[_2358].y * (_456 - (_456 * _288))) + ((_2350 + ((isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0))) * _1451)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0))) * (_2344 + ((isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0))) * _637)));
    float _2387 = ((cbInstanceData._m0[_2358].z * (_457 - (_457 * _288))) + ((_2352 + ((isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0))) * _1451)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0))) * (_2346 + ((isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0))) * _637)));
    uint _2391 = _597 + 6u;
    float _2399 = _556 / cbSceneParam._m0[86u].x;
    float _2400 = _557 / cbSceneParam._m0[86u].y;
    vec4 _2414 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2399, _2400, (log2((isnan(cbSceneParam._m0[77u].w) ? _543 : (isnan(_543) ? cbSceneParam._m0[77u].w : min(_543, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2416 = _2414.x;
    float _2417 = _2414.y;
    float _2418 = _2414.z;
    float _2419 = _2414.w;
    float _2515;
    float _2517;
    float _2519;
    float _2521;
    if (_543 > cbSceneParam._m0[78u].w)
    {
        float _2478 = isnan(_543) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _543 : min(cbSceneParam._m0[80u].w, _543));
        float _2479 = _2478 / _543;
        float _2490 = _2479 * _261;
        float _2491 = _262 * _2479;
        float _2492 = (-0.0) - _2491;
        float _2493 = _2479 * _263;
        float _2495 = (cbSceneParam._m0[77u].w * _2492) / _2478;
        float _2496 = _2495 + cbSceneParam._m0[79u].w;
        float _2497 = cbSceneParam._m0[79u].w - _2491;
        float _2503 = sqrt(((_2490 * _2490) + (_2491 * _2491)) + (_2493 * _2493));
        float _2506 = (1.0 - (cbSceneParam._m0[77u].w / _2478)) * _2503;
        float _2511 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2513 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2713;
        if (abs((_2492 - _2495) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2713 = ((((_2496 > 0.0) ? exp2(_2511 * _2496) : (2.0 - exp2(_2513 * _2496))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2506;
        }
        else
        {
            float _2652 = 1.0 / cbSceneParam._m0[80u].x;
            float _2653 = isnan(_2497) ? _2496 : (isnan(_2496) ? _2497 : max(_2496, _2497));
            float _2654 = isnan(_2497) ? _2496 : (isnan(_2496) ? _2497 : min(_2496, _2497));
            float _2663 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : min(_2653, 0.0));
            float _2664 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : min(_2654, 0.0));
            _2713 = ((abs(_2503 / _2492) * cbSceneParam._m0[80u].y) * ((((_2663 - _2664) * 2.0) - ((exp2(_2511 * (isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0)))) - exp2(_2511 * (isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0))))) * _2652)) - ((exp2(_2513 * _2663) - exp2(_2513 * _2664)) * _2652))) + (_2506 * cbSceneParam._m0[80u].z);
        }
        vec4 _2715 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2399, _2400, 1.0), 0.0);
        float _2724 = exp2((_2713 * (-1.44269502162933349609375)) * (1.0 - _2715.w));
        float _2725 = log2(_2724);
        float _2741 = log2(_2419);
        _2515 = (exp2(_2741 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2725 * cbSceneParam._m0[78u].x)) * _2715.x) / cbSceneParam._m0[78u].x)) + _2416;
        _2517 = (exp2(_2741 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2725 * cbSceneParam._m0[78u].y)) * _2715.y) / cbSceneParam._m0[78u].y)) + _2417;
        _2519 = (exp2(_2741 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2725 * cbSceneParam._m0[78u].z)) * _2715.z) / cbSceneParam._m0[78u].z)) + _2418;
        _2521 = _2724 * _2419;
    }
    else
    {
        _2515 = _2416;
        _2517 = _2417;
        _2519 = _2418;
        _2521 = _2419;
    }
    float _2533 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2534 = _2533 == 3.0;
    float _2535 = log2(_2521);
    float _2542 = exp2(_2535 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0)));
    float _2543 = exp2(_2535 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0)));
    float _2544 = exp2(_2535 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0)));
    float _2553 = (_2533 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2553 * (_2534 ? _2542 : (_2542 + (cbSceneParam._m0[72u].w * _2515)));
    SV_Target.y = _2553 * (_2534 ? _2543 : (_2543 + (cbSceneParam._m0[72u].w * _2517)));
    SV_Target.z = _2553 * (_2534 ? _2544 : (_2544 + (cbSceneParam._m0[72u].w * _2519)));
    SV_Target.w = cbInstanceData._m0[_2391].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2391].w;
}


