#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_End_of_Decal_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _603;
float _604;
float _605;
float _606;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _132 = texture(sampler2D(M_End_of_Decal_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _139 = _132.x * cbMtdParam._m0[9u].x;
    float _140 = _132.y * cbMtdParam._m0[9u].y;
    float _141 = _132.z * cbMtdParam._m0[9u].z;
    float _143 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * _132.w;
    float _161 = abs((fract(cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _615 = isnan(0.0) ? _161 : (isnan(_161) ? 0.0 : max(_161, 0.0));
    float _163 = isnan(1.0) ? _615 : (isnan(_615) ? 1.0 : min(_615, 1.0));
    float _170 = ((_163 * _163) * (3.0 - (_163 * 2.0))) - cbMtdParam._m0[11u].y;
    float _626 = isnan(0.0) ? _143 : (isnan(_143) ? 0.0 : max(_143, 0.0));
    float _193 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _234 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _244 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _234);
    float _245 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _234);
    float _246 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _234);
    vec4 _251 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _253 = _251.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _343 = sqrt(((_244 * _244) + (_245 * _245)) + (_246 * _246));
        float _350 = (cbMatDynParam._m0[5u].x * _343) + cbMatDynParam._m0[5u].y;
        float _652 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
        float _351 = isnan(1.0) ? _652 : (isnan(_652) ? 1.0 : min(_652, 1.0));
        float _355 = (cbMatDynParam._m0[5u].z * _343) + cbMatDynParam._m0[5u].w;
        float _663 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0))) - _351)) + _351) < ((_253 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _279 = uint(roundEven(NORMAL.w)) * 13u;
    uint _281 = _279 + 9u;
    uint _282 = _281 + uint(cbMatDynParam._m0[0u].w);
    float _289 = cbInstanceData._m0[_282].x * ((_170 * cbMtdParam._m0[10u].x) + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0)))));
    float _291 = cbInstanceData._m0[_282].y * ((_170 * cbMtdParam._m0[10u].y) + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0)))));
    float _293 = cbInstanceData._m0[_282].z * ((_170 * cbMtdParam._m0[10u].z) + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0)))));
    float _294 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _295 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _296 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _301 = cbInstanceData._m0[_279 + 6u].w * (isnan(1.0) ? _626 : (isnan(_626) ? 1.0 : min(_626, 1.0)));
    float _307 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _308 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _323 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_307, _308, (log2((isnan(cbSceneParam._m0[77u].w) ? _193 : (isnan(_193) ? cbSceneParam._m0[77u].w : min(_193, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _326 = _323.x;
    float _327 = _323.y;
    float _328 = _323.z;
    float _329 = _323.w;
    float _411;
    float _413;
    float _415;
    float _417;
    if (_193 > cbSceneParam._m0[78u].w)
    {
        float _372 = isnan(_193) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _193 : min(cbSceneParam._m0[80u].w, _193));
        float _373 = _372 / _193;
        float _384 = _373 * _244;
        float _385 = _245 * _373;
        float _386 = (-0.0) - _385;
        float _388 = _373 * _246;
        float _390 = (cbSceneParam._m0[77u].w * _386) / _372;
        float _391 = _390 + cbSceneParam._m0[79u].w;
        float _392 = cbSceneParam._m0[79u].w - _385;
        float _398 = sqrt(((_384 * _384) + (_385 * _385)) + (_388 * _388));
        float _401 = (1.0 - (cbSceneParam._m0[77u].w / _372)) * _398;
        float _407 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _409 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _531;
        if (abs((_386 - _390) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _531 = ((((_391 > 0.0) ? exp2(_407 * _391) : (2.0 - exp2(_409 * _391))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _401;
        }
        else
        {
            float _486 = 1.0 / cbSceneParam._m0[80u].x;
            float _487 = isnan(_392) ? _391 : (isnan(_391) ? _392 : max(_391, _392));
            float _488 = isnan(_392) ? _391 : (isnan(_391) ? _392 : min(_391, _392));
            float _497 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : min(_487, 0.0));
            float _498 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : min(_488, 0.0));
            _531 = ((abs(_398 / _386) * cbSceneParam._m0[80u].y) * ((((_497 - _498) * 2.0) - ((exp2(_407 * (isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0)))) - exp2(_407 * (isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0))))) * _486)) - ((exp2(_409 * _497) - exp2(_409 * _498)) * _486))) + (_401 * cbSceneParam._m0[80u].z);
        }
        vec4 _533 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_307, _308, 1.0), 0.0);
        float _542 = exp2((_531 * (-1.44269502162933349609375)) * (1.0 - _533.w));
        float _543 = log2(_542);
        float _559 = log2(_329);
        _411 = (exp2(_559 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].x)) * _533.x) / cbSceneParam._m0[78u].x)) + _326;
        _413 = (exp2(_559 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].y)) * _533.y) / cbSceneParam._m0[78u].y)) + _327;
        _415 = (exp2(_559 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_543 * cbSceneParam._m0[78u].z)) * _533.z) / cbSceneParam._m0[78u].z)) + _328;
        _417 = _542 * _329;
    }
    else
    {
        _411 = _326;
        _413 = _327;
        _415 = _328;
        _417 = _329;
    }
    bool _569;
    vec4 _427;
    vec4 _450;
    float _452;
    float _456;
    float _457;
    float _458;
    float _459;
    bool _470;
    for (;;)
    {
        _427 = cbMatDynParam._m0[0u];
        float _429 = roundEven(_427.y);
        bool _430 = _429 == 3.0;
        float _431 = log2(_417);
        float _438 = exp2(_431 * cbSceneParam._m0[78u].x) * _294;
        float _439 = exp2(_431 * cbSceneParam._m0[78u].y) * _295;
        float _440 = exp2(_431 * cbSceneParam._m0[78u].z) * _296;
        float _447 = _253 + (-0.5);
        _450 = cbMtdParam._m0[1u];
        _452 = _450.y * _447;
        float _455 = (_429 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _456 = _455 * (_430 ? _438 : (_438 + (cbSceneParam._m0[72u].w * _411)));
        _457 = _455 * (_430 ? _439 : (_439 + (cbSceneParam._m0[72u].w * _413)));
        _458 = _455 * (_430 ? _440 : (_440 + (cbSceneParam._m0[72u].w * _415)));
        _459 = _447 * 0.999000012874603271484375;
        _470 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_470)
        {
            if ((cbInstanceData._m0[_279 + 7u].x + _459) < 0.5)
            {
                _569 = true;
                break;
            }
        }
        uint _523 = _281 + uint(_427.w);
        if ((cbInstanceData._m0[_523].w < 1.0) && ((cbInstanceData._m0[_523].w + _459) < 0.5))
        {
            _569 = true;
            break;
        }
        if ((_452 + _143) < _450.x)
        {
            _569 = true;
            break;
        }
        _569 = false;
        break;
    }
    float _574;
    if (_569)
    {
        discard_state = true;
        _574 = 0.0;
    }
    else
    {
        _574 = _301;
    }
    SV_Target.x = _456;
    SV_Target.y = _457;
    SV_Target.z = _458;
    SV_Target.w = _574;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _301;
    discard_exit();
}


