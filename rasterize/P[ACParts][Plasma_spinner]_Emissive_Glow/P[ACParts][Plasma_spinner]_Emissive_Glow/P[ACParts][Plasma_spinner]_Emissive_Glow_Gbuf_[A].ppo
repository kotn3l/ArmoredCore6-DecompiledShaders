#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Plasma_spinner_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _134 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _135 = _134 * NORMAL.x;
    float _136 = _134 * NORMAL.y;
    float _137 = _134 * NORMAL.z;
    vec4 _167 = texture(sampler2D(P_ACParts_Plasma_spinner_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[12u].y * cbPerFrame._m0[22u].x) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[12u].z * cbPerFrame._m0[22u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _172 = (cbMtdParam._m0[11u].x * cbMtdParam._m0[9u].x) * _167.x;
    float _176 = inversesqrt(dot(vec3(_135, _136, _137), vec3(_135, _136, _137)));
    float _391 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _178 = isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0));
    uint _180 = uint(roundEven(NORMAL.w));
    float _222 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _232 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _222);
    float _233 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _222);
    float _234 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _222);
    vec4 _239 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _241 = _239.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _278 = sqrt(((_232 * _232) + (_233 * _233)) + (_234 * _234));
        float _285 = (cbMatDynParam._m0[5u].x * _278) + cbMatDynParam._m0[5u].y;
        float _402 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
        float _286 = isnan(1.0) ? _402 : (isnan(_402) ? 1.0 : min(_402, 1.0));
        float _290 = (cbMatDynParam._m0[5u].z * _278) + cbMatDynParam._m0[5u].w;
        float _413 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0))) - _286)) + _286) < ((_241 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _327;
    uint _249;
    float _254;
    vec4 _258;
    float _260;
    float _261;
    bool _272;
    for (;;)
    {
        _249 = _180 * 13u;
        _254 = cbInstanceData._m0[_249 + 6u].w * _178;
        float _255 = _241 + (-0.5);
        _258 = cbMtdParam._m0[1u];
        _260 = _258.y * _255;
        _261 = _255 * 0.999000012874603271484375;
        _272 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_272)
        {
            if ((cbInstanceData._m0[_249 + 7u].x + _261) < 0.5)
            {
                _327 = true;
                break;
            }
        }
        uint _316 = (_249 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_316].w < 1.0) && ((cbInstanceData._m0[_316].w + _261) < 0.5))
        {
            _327 = true;
            break;
        }
        if ((_260 + 1.0) < _258.x)
        {
            _327 = true;
            break;
        }
        _327 = false;
        break;
    }
    if (_327)
    {
        discard_state = true;
    }
    bool _345 = cbMtdParam._m0[1u].z != 0.0;
    float _346 = _345 ? _254 : 0.0;
    SV_Target.x = ((_135 * 0.5) * _176) + 0.500488758087158203125;
    SV_Target.y = ((_136 * 0.5) * _176) + 0.500488758087158203125;
    SV_Target.z = ((_137 * 0.5) * _176) + 0.500488758087158203125;
    SV_Target.w = _346;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _345 ? _254 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _254;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _346;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _346;
    discard_exit();
}


