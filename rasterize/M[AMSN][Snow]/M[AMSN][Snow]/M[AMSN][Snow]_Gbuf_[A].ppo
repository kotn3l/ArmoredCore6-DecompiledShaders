#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _141 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _142 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _143 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _148 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _149 = _148 * _141;
    float _150 = _148 * _142;
    float _151 = _148 * _143;
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = _155 * NORMAL.x;
    float _157 = _155 * NORMAL.y;
    float _158 = _155 * NORMAL.z;
    float _162 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _163 = _162 * TANGENT.x;
    float _164 = _162 * TANGENT.y;
    float _165 = _162 * TANGENT.z;
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _156;
        _171 = (-0.0) - _157;
        _172 = (-0.0) - _158;
    }
    else
    {
        _170 = _156;
        _171 = _157;
        _172 = _158;
    }
    vec4 _191 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _196 = _191.z;
    float _200 = (_191.x * 2.0) + (-1.0);
    float _202 = (_191.y * 2.0) + (-1.0);
    float _203 = dot(vec2(_200, _202), vec2(_200, _202));
    float _523 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _209 = sqrt(1.0 - (isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0))));
    float _212 = fma(_209, _170, fma(_202, _163, _200 * _149));
    float _215 = fma(_209, _171, fma(_202, _164, _200 * _150));
    float _218 = fma(_209, _172, fma(_202, _165, _200 * _151));
    float _227 = exp2(log2(inversesqrt(dot(vec3(_212, _215, _218), vec3(_212, _215, _218))) * _215) * cbMtdParam._m0[9u].x) * cbMtdParam._m0[9u].y;
    float _534 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _228 = isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0));
    vec4 _240 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _256 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _258 = _256.x;
    float _259 = _256.y;
    float _260 = _256.z;
    float _267 = ((_240.x - _258) * _228) + _258;
    float _268 = ((_240.y - _259) * _228) + _259;
    float _269 = ((_240.z - _260) * _228) + _260;
    vec4 _282 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _284 = _282.x;
    float _286 = _284 - (_284 * _228);
    vec4 _298 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _305 = (_298.x * 2.0) + (-1.0);
    float _306 = (_298.y * 2.0) + (-1.0);
    float _307 = dot(vec2(_305, _306), vec2(_305, _306));
    float _545 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _315 = ((_298.z - _196) * _228) + _196;
    float _322 = ((_305 - _200) * _228) + _200;
    float _323 = ((_306 - _202) * _228) + _202;
    float _324 = ((sqrt(1.0 - (isnan(1.0) ? _545 : (isnan(_545) ? 1.0 : min(_545, 1.0)))) - _209) * _228) + _209;
    float _327 = fma(_324, _170, fma(_323, _163, _322 * _149));
    float _330 = fma(_324, _171, fma(_323, _164, _322 * _150));
    float _333 = fma(_324, _172, fma(_323, _165, _322 * _151));
    float _337 = inversesqrt(dot(vec3(_327, _330, _333), vec3(_327, _330, _333)));
    float _556 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _567 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _339 = isnan(1.0) ? _567 : (isnan(_567) ? 1.0 : min(_567, 1.0));
    float _578 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _340 = isnan(1.0) ? _578 : (isnan(_578) ? 1.0 : min(_578, 1.0));
    float _589 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _341 = isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0));
    float _600 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    uint _344 = uint(roundEven(NORMAL.w));
    vec4 _349 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _351 = _349.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _414 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _611 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
        float _415 = isnan(1.0) ? _611 : (isnan(_611) ? 1.0 : min(_611, 1.0));
        float _419 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _622 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _622 : (isnan(_622) ? 1.0 : min(_622, 1.0))) - _415)) + _415) < ((_351 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _448;
    uint _371;
    vec4 _376;
    float _383;
    float _384;
    float _385;
    float _389;
    vec4 _393;
    float _395;
    float _396;
    bool _407;
    for (;;)
    {
        _371 = _344 * 13u;
        _376 = cbInstanceData._m0[(_371 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _380 = (cbMtdParam._m0[0u].x * _339) * _376.x;
        float _381 = (cbMtdParam._m0[0u].y * _340) * _376.y;
        float _382 = (cbMtdParam._m0[0u].z * _341) * _376.z;
        float _633 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
        _383 = isnan(1.0) ? _633 : (isnan(_633) ? 1.0 : min(_633, 1.0));
        float _644 = isnan(0.0) ? _381 : (isnan(_381) ? 0.0 : max(_381, 0.0));
        _384 = isnan(1.0) ? _644 : (isnan(_644) ? 1.0 : min(_644, 1.0));
        float _655 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
        _385 = isnan(1.0) ? _655 : (isnan(_655) ? 1.0 : min(_655, 1.0));
        _389 = cbInstanceData._m0[_371 + 6u].w;
        float _390 = _351 + (-0.5);
        _393 = cbMtdParam._m0[1u];
        _395 = _393.y * _390;
        _396 = _390 * 0.999000012874603271484375;
        _407 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_407)
        {
            if ((cbInstanceData._m0[_371 + 7u].x + _396) < 0.5)
            {
                _448 = true;
                break;
            }
        }
        if ((_376.w < 1.0) && ((_376.w + _396) < 0.5))
        {
            _448 = true;
            break;
        }
        if ((_395 + 1.0) < _393.x)
        {
            _448 = true;
            break;
        }
        _448 = false;
        break;
    }
    if (_448)
    {
        discard_state = true;
    }
    bool _474 = cbMtdParam._m0[1u].z != 0.0;
    float _475 = _474 ? _389 : 0.0;
    SV_Target.x = ((_327 * 0.5) * _337) + 0.500488758087158203125;
    SV_Target.y = ((_330 * 0.5) * _337) + 0.500488758087158203125;
    SV_Target.z = ((_333 * 0.5) * _337) + 0.500488758087158203125;
    SV_Target.w = _475;
    SV_Target_1.x = isnan(1.0) ? _600 : (isnan(_600) ? 1.0 : min(_600, 1.0));
    SV_Target_1.y = isnan(1.0) ? _556 : (isnan(_556) ? 1.0 : min(_556, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _474 ? _389 : TEXCOORD.z;
    SV_Target_2.x = _383;
    SV_Target_2.y = _384;
    SV_Target_2.z = _385;
    SV_Target_2.w = _474 ? _389 : (float(floatBitsToUint(cbInstanceData._m0[_371 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _475;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _475;
    discard_exit();
}


