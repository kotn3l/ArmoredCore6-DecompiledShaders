#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _127 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _128 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _129 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _134 = inversesqrt(dot(vec3(_127, _128, _129), vec3(_127, _128, _129)));
    float _135 = _134 * _127;
    float _136 = _134 * _128;
    float _137 = _134 * _129;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = _141 * NORMAL.x;
    float _143 = _141 * NORMAL.y;
    float _144 = _141 * NORMAL.z;
    float _148 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _149 = _148 * TANGENT.x;
    float _150 = _148 * TANGENT.y;
    float _151 = _148 * TANGENT.z;
    float _156;
    float _157;
    float _158;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _156 = (-0.0) - _142;
        _157 = (-0.0) - _143;
        _158 = (-0.0) - _144;
    }
    else
    {
        _156 = _142;
        _157 = _143;
        _158 = _144;
    }
    vec4 _177 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _182 = _177.z;
    float _186 = (_177.x * 2.0) + (-1.0);
    float _188 = (_177.y * 2.0) + (-1.0);
    float _189 = dot(vec2(_186, _188), vec2(_186, _188));
    float _415 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _195 = sqrt(1.0 - (isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0))));
    float _198 = fma(_195, _156, fma(_188, _149, _186 * _135));
    float _201 = fma(_195, _157, fma(_188, _150, _186 * _136));
    float _204 = fma(_195, _158, fma(_188, _151, _186 * _137));
    float _213 = exp2(log2(inversesqrt(dot(vec3(_198, _201, _204), vec3(_198, _201, _204))) * _201) * cbMtdParam._m0[9u].x) * cbMtdParam._m0[9u].y;
    float _426 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _214 = isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0));
    vec4 _226 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _242 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _244 = _242.x;
    float _245 = _242.y;
    float _246 = _242.z;
    float _253 = ((_226.x - _244) * _214) + _244;
    float _254 = ((_226.y - _245) * _214) + _245;
    float _255 = ((_226.z - _246) * _214) + _246;
    vec4 _268 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _270 = _268.x;
    float _272 = _270 - (_270 * _214);
    vec4 _284 = texture(sampler2D(M_AMSN_Snow_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _291 = (_284.x * 2.0) + (-1.0);
    float _292 = (_284.y * 2.0) + (-1.0);
    float _293 = dot(vec2(_291, _292), vec2(_291, _292));
    float _437 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _301 = ((_284.z - _182) * _214) + _182;
    float _308 = ((_291 - _186) * _214) + _186;
    float _309 = ((_292 - _188) * _214) + _188;
    float _310 = ((sqrt(1.0 - (isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0)))) - _195) * _214) + _195;
    float _313 = fma(_310, _156, fma(_309, _149, _308 * _135));
    float _316 = fma(_310, _157, fma(_309, _150, _308 * _136));
    float _319 = fma(_310, _158, fma(_309, _151, _308 * _137));
    float _323 = inversesqrt(dot(vec3(_313, _316, _319), vec3(_313, _316, _319)));
    float _448 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _459 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _470 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _481 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _492 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _343 = uint(roundEven(NORMAL.w)) * 13u;
    uint _346 = (_343 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _352 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _459 : (isnan(_459) ? 1.0 : min(_459, 1.0)))) * cbInstanceData._m0[_346].x;
    float _353 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _470 : (isnan(_470) ? 1.0 : min(_470, 1.0)))) * cbInstanceData._m0[_346].y;
    float _354 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _481 : (isnan(_481) ? 1.0 : min(_481, 1.0)))) * cbInstanceData._m0[_346].z;
    float _503 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _514 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _525 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    uint _358 = _343 + 6u;
    bool _387 = cbMtdParam._m0[1u].z != 0.0;
    float _388 = _387 ? cbInstanceData._m0[_358].w : 0.0;
    SV_Target.x = ((_313 * 0.5) * _323) + 0.500488758087158203125;
    SV_Target.y = ((_316 * 0.5) * _323) + 0.500488758087158203125;
    SV_Target.z = ((_319 * 0.5) * _323) + 0.500488758087158203125;
    SV_Target.w = _388;
    SV_Target_1.x = isnan(1.0) ? _492 : (isnan(_492) ? 1.0 : min(_492, 1.0));
    SV_Target_1.y = isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _387 ? cbInstanceData._m0[_358].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _503 : (isnan(_503) ? 1.0 : min(_503, 1.0));
    SV_Target_2.y = isnan(1.0) ? _514 : (isnan(_514) ? 1.0 : min(_514, 1.0));
    SV_Target_2.z = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    SV_Target_2.w = _387 ? cbInstanceData._m0[_358].w : (float(floatBitsToUint(cbInstanceData._m0[_343 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _388;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _388;
}


