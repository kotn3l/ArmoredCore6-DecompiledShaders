#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_HUD_Base_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_HUD_Base_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _690;
float _691;
float _692;
float _693;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _124 = texture(sampler2D(M_HUD_Base_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _124.x * cbMtdParam._m0[9u].x;
    float _131 = _124.y * cbMtdParam._m0[9u].y;
    float _132 = _124.z * cbMtdParam._m0[9u].z;
    vec4 _153 = texture(sampler2D(M_HUD_Base_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _155 = _153.x;
    float _156 = _153.y;
    float _157 = _153.z;
    float _158 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _159 = _158 * _155;
    float _160 = _158 * _156;
    float _161 = _158 * _157;
    float _163 = isnan(_160) ? _159 : (isnan(_159) ? _160 : max(_159, _160));
    float _164 = isnan(_161) ? _163 : (isnan(_163) ? _161 : max(_163, _161));
    float _167;
    float _169;
    if (_164 < 1.1920928955078125e-07)
    {
        _167 = 0.0;
        _169 = 0.0;
    }
    else
    {
        float _195 = isnan(_160) ? _159 : (isnan(_159) ? _160 : min(_159, _160));
        float _197 = _164 - (isnan(_161) ? _195 : (isnan(_195) ? _161 : min(_195, _161)));
        float _170 = _197 / _164;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_197 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _170;
        }
        else
        {
            float _512;
            if (_164 == _159)
            {
                _512 = ((_158 * (_156 - _157)) / _197) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_15_10_ladder;
                if (_164 == _160)
                {
                    frontier_phi_15_10_ladder = (((_158 * (_157 - _155)) / _197) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_15_10_ladder = (((_158 * (_155 - _156)) / _197) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _512 = frontier_phi_15_10_ladder;
            }
            float _517 = (_512 < 0.0) ? (_512 + 1.0) : _512;
            frontier_phi_1_2_ladder = _517 - floor(_517);
            frontier_phi_1_2_ladder_1 = _170;
        }
        _167 = frontier_phi_1_2_ladder;
        _169 = frontier_phi_1_2_ladder_1;
    }
    float _171 = _169 + cbMtdParam._m0[11u].y;
    float _175 = fract(cbMtdParam._m0[11u].z + _167) * 6.0;
    uint _178 = uint(int(floor(_175)));
    float _180 = _175 - float(int(_178));
    float _183 = (1.0 - _171) * _164;
    float _186 = (1.0 - (_180 * _171)) * _164;
    float _190 = (1.0 - ((1.0 - _180) * _171)) * _164;
    float _199;
    float _201;
    float _202;
    if ((_178 == 0u) || (_178 == 6u))
    {
        _199 = _164;
        _201 = _190;
        _202 = _183;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_178 == 1u)
        {
            frontier_phi_3_4_ladder = _186;
            frontier_phi_3_4_ladder_1 = _164;
            frontier_phi_3_4_ladder_2 = _183;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_178 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _183;
                frontier_phi_3_4_ladder_8_ladder_1 = _164;
                frontier_phi_3_4_ladder_8_ladder_2 = _190;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_14_ladder;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
                if (_178 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _183;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _186;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _164;
                }
                else
                {
                    bool _586 = _178 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _586 ? _190 : _164;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _183;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _586 ? _164 : _186;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_14_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _199 = frontier_phi_3_4_ladder;
        _201 = frontier_phi_3_4_ladder_1;
        _202 = frontier_phi_3_4_ladder_2;
    }
    float _222 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _264 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _274 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _264);
    float _275 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _264);
    float _276 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _264);
    vec4 _281 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _283 = _281.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _371 = sqrt(((_274 * _274) + (_275 * _275)) + (_276 * _276));
        float _378 = (cbMatDynParam._m0[5u].x * _371) + cbMatDynParam._m0[5u].y;
        float _737 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
        float _379 = isnan(1.0) ? _737 : (isnan(_737) ? 1.0 : min(_737, 1.0));
        float _383 = (cbMatDynParam._m0[5u].z * _371) + cbMatDynParam._m0[5u].w;
        float _748 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _748 : (isnan(_748) ? 1.0 : min(_748, 1.0))) - _379)) + _379) < ((_283 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _310 = uint(roundEven(NORMAL.w)) * 13u;
    uint _311 = _310 + 9u;
    uint _312 = _311 + uint(cbMatDynParam._m0[0u].w);
    float _319 = cbInstanceData._m0[_312].x * (_199 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))));
    float _321 = cbInstanceData._m0[_312].y * (_201 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0)))));
    float _323 = cbInstanceData._m0[_312].z * (_202 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0)))));
    float _324 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _325 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _326 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    uint _327 = _310 + 6u;
    float _336 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _337 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _352 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_336, _337, (log2((isnan(cbSceneParam._m0[77u].w) ? _222 : (isnan(_222) ? cbSceneParam._m0[77u].w : min(_222, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _354 = _352.x;
    float _355 = _352.y;
    float _356 = _352.z;
    float _357 = _352.w;
    float _446;
    float _448;
    float _450;
    float _452;
    if (_222 > cbSceneParam._m0[78u].w)
    {
        float _407 = isnan(_222) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _222 : min(cbSceneParam._m0[80u].w, _222));
        float _408 = _407 / _222;
        float _419 = _408 * _274;
        float _420 = _275 * _408;
        float _421 = (-0.0) - _420;
        float _423 = _408 * _276;
        float _425 = (cbSceneParam._m0[77u].w * _421) / _407;
        float _426 = _425 + cbSceneParam._m0[79u].w;
        float _427 = cbSceneParam._m0[79u].w - _420;
        float _433 = sqrt(((_419 * _419) + (_420 * _420)) + (_423 * _423));
        float _436 = (1.0 - (cbSceneParam._m0[77u].w / _407)) * _433;
        float _442 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _444 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _588;
        if (abs((_421 - _425) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _588 = ((((_426 > 0.0) ? exp2(_442 * _426) : (2.0 - exp2(_444 * _426))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _436;
        }
        else
        {
            float _541 = 1.0 / cbSceneParam._m0[80u].x;
            float _542 = isnan(_427) ? _426 : (isnan(_426) ? _427 : max(_426, _427));
            float _543 = isnan(_427) ? _426 : (isnan(_426) ? _427 : min(_426, _427));
            float _552 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : min(_542, 0.0));
            float _553 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : min(_543, 0.0));
            _588 = ((abs(_433 / _421) * cbSceneParam._m0[80u].y) * ((((_552 - _553) * 2.0) - ((exp2(_442 * (isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0)))) - exp2(_442 * (isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0))))) * _541)) - ((exp2(_444 * _552) - exp2(_444 * _553)) * _541))) + (_436 * cbSceneParam._m0[80u].z);
        }
        vec4 _590 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_336, _337, 1.0), 0.0);
        float _599 = exp2((_588 * (-1.44269502162933349609375)) * (1.0 - _590.w));
        float _600 = log2(_599);
        float _616 = log2(_357);
        _446 = (exp2(_616 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_600 * cbSceneParam._m0[78u].x)) * _590.x) / cbSceneParam._m0[78u].x)) + _354;
        _448 = (exp2(_616 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_600 * cbSceneParam._m0[78u].y)) * _590.y) / cbSceneParam._m0[78u].y)) + _355;
        _450 = (exp2(_616 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_600 * cbSceneParam._m0[78u].z)) * _590.z) / cbSceneParam._m0[78u].z)) + _356;
        _452 = _599 * _357;
    }
    else
    {
        _446 = _354;
        _448 = _355;
        _450 = _356;
        _452 = _357;
    }
    bool _626;
    vec4 _462;
    vec4 _486;
    float _488;
    float _493;
    float _494;
    float _495;
    float _496;
    bool _507;
    for (;;)
    {
        _462 = cbMatDynParam._m0[0u];
        float _464 = roundEven(_462.y);
        bool _465 = _464 == 3.0;
        float _467 = log2(_452);
        float _474 = exp2(_467 * cbSceneParam._m0[78u].x) * _324;
        float _475 = exp2(_467 * cbSceneParam._m0[78u].y) * _325;
        float _476 = exp2(_467 * cbSceneParam._m0[78u].z) * _326;
        float _483 = _283 + (-0.5);
        _486 = cbMtdParam._m0[1u];
        _488 = _486.y * _483;
        float _492 = (_464 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _493 = _492 * (_465 ? _474 : (_474 + (cbSceneParam._m0[72u].w * _446)));
        _494 = _492 * (_465 ? _475 : (_475 + (cbSceneParam._m0[72u].w * _448)));
        _495 = _492 * (_465 ? _476 : (_476 + (cbSceneParam._m0[72u].w * _450)));
        _496 = _483 * 0.999000012874603271484375;
        _507 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_507)
        {
            if ((cbInstanceData._m0[_310 + 7u].x + _496) < 0.5)
            {
                _626 = true;
                break;
            }
        }
        uint _578 = _311 + uint(_462.w);
        if ((cbInstanceData._m0[_578].w < 1.0) && ((cbInstanceData._m0[_578].w + _496) < 0.5))
        {
            _626 = true;
            break;
        }
        if ((_488 + 1.0) < _486.x)
        {
            _626 = true;
            break;
        }
        _626 = false;
        break;
    }
    float _631;
    if (_626)
    {
        discard_state = true;
        _631 = 0.0;
    }
    else
    {
        _631 = cbInstanceData._m0[_327].w;
    }
    SV_Target.x = _493;
    SV_Target.y = _494;
    SV_Target.z = _495;
    SV_Target.w = _631;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_327].w;
    discard_exit();
}


