#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_HUD_Base_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_HUD_Base_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _115 = texture(sampler2D(M_HUD_Base_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _121 = _115.x * cbMtdParam._m0[9u].x;
    float _122 = _115.y * cbMtdParam._m0[9u].y;
    float _123 = _115.z * cbMtdParam._m0[9u].z;
    vec4 _144 = texture(sampler2D(M_HUD_Base_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _146 = _144.x;
    float _147 = _144.y;
    float _148 = _144.z;
    float _149 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _150 = _149 * _146;
    float _151 = _149 * _147;
    float _152 = _149 * _148;
    float _154 = isnan(_151) ? _150 : (isnan(_150) ? _151 : max(_150, _151));
    float _155 = isnan(_152) ? _154 : (isnan(_154) ? _152 : max(_154, _152));
    float _158;
    float _160;
    if (_155 < 1.1920928955078125e-07)
    {
        _158 = 0.0;
        _160 = 0.0;
    }
    else
    {
        float _186 = isnan(_151) ? _150 : (isnan(_150) ? _151 : min(_150, _151));
        float _188 = _155 - (isnan(_152) ? _186 : (isnan(_186) ? _152 : min(_186, _152)));
        float _161 = _188 / _155;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_188 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _161;
        }
        else
        {
            float _487;
            if (_155 == _150)
            {
                _487 = ((_149 * (_147 - _148)) / _188) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_14_10_ladder;
                if (_155 == _151)
                {
                    frontier_phi_14_10_ladder = (((_149 * (_148 - _146)) / _188) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_14_10_ladder = (((_149 * (_146 - _147)) / _188) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _487 = frontier_phi_14_10_ladder;
            }
            float _492 = (_487 < 0.0) ? (_487 + 1.0) : _487;
            frontier_phi_1_2_ladder = _492 - floor(_492);
            frontier_phi_1_2_ladder_1 = _161;
        }
        _158 = frontier_phi_1_2_ladder;
        _160 = frontier_phi_1_2_ladder_1;
    }
    float _162 = _160 + cbMtdParam._m0[11u].y;
    float _166 = fract(cbMtdParam._m0[11u].z + _158) * 6.0;
    uint _169 = uint(int(floor(_166)));
    float _171 = _166 - float(int(_169));
    float _174 = (1.0 - _162) * _155;
    float _177 = (1.0 - (_171 * _162)) * _155;
    float _181 = (1.0 - ((1.0 - _171) * _162)) * _155;
    float _190;
    float _192;
    float _193;
    if ((_169 == 0u) || (_169 == 6u))
    {
        _190 = _155;
        _192 = _181;
        _193 = _174;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_169 == 1u)
        {
            frontier_phi_3_4_ladder = _177;
            frontier_phi_3_4_ladder_1 = _155;
            frontier_phi_3_4_ladder_2 = _174;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_169 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _174;
                frontier_phi_3_4_ladder_8_ladder_1 = _155;
                frontier_phi_3_4_ladder_8_ladder_2 = _181;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_13_ladder;
                float frontier_phi_3_4_ladder_8_ladder_13_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_13_ladder_2;
                if (_169 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_13_ladder = _174;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_1 = _177;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_2 = _155;
                }
                else
                {
                    bool _542 = _169 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder = _542 ? _181 : _155;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_1 = _174;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_2 = _542 ? _155 : _177;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_13_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_13_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_13_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _190 = frontier_phi_3_4_ladder;
        _192 = frontier_phi_3_4_ladder_1;
        _193 = frontier_phi_3_4_ladder_2;
    }
    float _213 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _231 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _254 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = (_254 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _263 = cbInstanceData._m0[_256].x * (_190 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _121 : (isnan(_121) ? 0.0 : max(_121, 0.0)))));
    float _265 = cbInstanceData._m0[_256].y * (_192 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _122 : (isnan(_122) ? 0.0 : max(_122, 0.0)))));
    float _267 = cbInstanceData._m0[_256].z * (_193 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _123 : (isnan(_123) ? 0.0 : max(_123, 0.0)))));
    uint _271 = _254 + 6u;
    float _280 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _281 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _296 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_280, _281, (log2((isnan(cbSceneParam._m0[77u].w) ? _213 : (isnan(_213) ? cbSceneParam._m0[77u].w : min(_213, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _298 = _296.x;
    float _299 = _296.y;
    float _300 = _296.z;
    float _301 = _296.w;
    float _388;
    float _390;
    float _392;
    float _394;
    if (_213 > cbSceneParam._m0[78u].w)
    {
        float _349 = isnan(_213) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _213 : min(cbSceneParam._m0[80u].w, _213));
        float _350 = _349 / _213;
        float _361 = _350 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _231));
        float _362 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _231)) * _350;
        float _363 = (-0.0) - _362;
        float _365 = _350 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _231));
        float _367 = (cbSceneParam._m0[77u].w * _363) / _349;
        float _368 = _367 + cbSceneParam._m0[79u].w;
        float _369 = cbSceneParam._m0[79u].w - _362;
        float _375 = sqrt(((_361 * _361) + (_362 * _362)) + (_365 * _365));
        float _378 = (1.0 - (cbSceneParam._m0[77u].w / _349)) * _375;
        float _384 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _386 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _504;
        if (abs((_363 - _367) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _504 = ((((_368 > 0.0) ? exp2(_384 * _368) : (2.0 - exp2(_386 * _368))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _378;
        }
        else
        {
            float _459 = 1.0 / cbSceneParam._m0[80u].x;
            float _460 = isnan(_369) ? _368 : (isnan(_368) ? _369 : max(_368, _369));
            float _461 = isnan(_369) ? _368 : (isnan(_368) ? _369 : min(_368, _369));
            float _470 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : min(_460, 0.0));
            float _471 = isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : min(_461, 0.0));
            _504 = ((abs(_375 / _363) * cbSceneParam._m0[80u].y) * ((((_470 - _471) * 2.0) - ((exp2(_384 * (isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0)))) - exp2(_384 * (isnan(0.0) ? _461 : (isnan(_461) ? 0.0 : max(_461, 0.0))))) * _459)) - ((exp2(_386 * _470) - exp2(_386 * _471)) * _459))) + (_378 * cbSceneParam._m0[80u].z);
        }
        vec4 _506 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_280, _281, 1.0), 0.0);
        float _515 = exp2((_504 * (-1.44269502162933349609375)) * (1.0 - _506.w));
        float _516 = log2(_515);
        float _532 = log2(_301);
        _388 = (exp2(_532 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_516 * cbSceneParam._m0[78u].x)) * _506.x) / cbSceneParam._m0[78u].x)) + _298;
        _390 = (exp2(_532 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_516 * cbSceneParam._m0[78u].y)) * _506.y) / cbSceneParam._m0[78u].y)) + _299;
        _392 = (exp2(_532 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_516 * cbSceneParam._m0[78u].z)) * _506.z) / cbSceneParam._m0[78u].z)) + _300;
        _394 = _515 * _301;
    }
    else
    {
        _388 = _298;
        _390 = _299;
        _392 = _300;
        _394 = _301;
    }
    float _406 = roundEven(cbMatDynParam._m0[0u].y);
    bool _407 = _406 == 3.0;
    float _409 = log2(_394);
    float _416 = exp2(_409 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0)));
    float _417 = exp2(_409 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0)));
    float _418 = exp2(_409 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0)));
    float _428 = (_406 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _428 * (_407 ? _416 : (_416 + (cbSceneParam._m0[72u].w * _388)));
    SV_Target.y = _428 * (_407 ? _417 : (_417 + (cbSceneParam._m0[72u].w * _390)));
    SV_Target.z = _428 * (_407 ? _418 : (_418 + (cbSceneParam._m0[72u].w * _392)));
    SV_Target.w = cbInstanceData._m0[_271].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_271].w;
}


