#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _130 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _131 = _130 * _123;
    float _132 = _130 * _124;
    float _133 = _130 * _125;
    float _137 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _138 = _137 * NORMAL.x;
    float _139 = _137 * NORMAL.y;
    float _140 = _137 * NORMAL.z;
    float _144 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _145 = _144 * TANGENT.x;
    float _146 = _144 * TANGENT.y;
    float _147 = _144 * TANGENT.z;
    float _152;
    float _153;
    float _154;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _152 = (-0.0) - _138;
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
    }
    else
    {
        _152 = _138;
        _153 = _139;
        _154 = _140;
    }
    vec4 _177 = texture(sampler2D(M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _182 = _177.z;
    float _186 = (_177.x * 2.0) + (-1.0);
    float _188 = (_177.y * 2.0) + (-1.0);
    float _189 = dot(vec2(_186, _188), vec2(_186, _188));
    float _424 = isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0));
    float _195 = sqrt(1.0 - (isnan(1.0) ? _424 : (isnan(_424) ? 1.0 : min(_424, 1.0))));
    float _198 = fma(_195, _152, fma(_188, _145, _186 * _131));
    float _201 = fma(_195, _153, fma(_188, _146, _186 * _132));
    float _204 = fma(_195, _154, fma(_188, _147, _186 * _133));
    float _208 = inversesqrt(dot(vec3(_198, _201, _204), vec3(_198, _201, _204)));
    float _209 = _208 * _198;
    float _210 = _208 * _201;
    float _211 = _208 * _204;
    float _216 = cbMtdParam._m0[10u].x + dot(vec4(_209, _210, _211, 0.0), vec4(cbMtdParam._m0[10u].zw, cbMtdParam._m0[11u].x, 0.0));
    float _435 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _224 = dot(vec4(_209, _210, _211, 0.0), vec4(cbMtdParam._m0[11u].yzw, 0.0)) + cbMtdParam._m0[10u].x;
    float _446 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _226 = (isnan(1.0) ? _446 : (isnan(_446) ? 1.0 : min(_446, 1.0))) + (isnan(1.0) ? _435 : (isnan(_435) ? 1.0 : min(_435, 1.0)));
    vec4 _244 = texture(sampler2D(M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _249 = _244.x * cbMtdParam._m0[9u].x;
    float _250 = _244.y * cbMtdParam._m0[9u].y;
    float _251 = _244.z * cbMtdParam._m0[9u].z;
    vec4 _263 = texture(sampler2D(M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _274 = ((_263.x - _249) * _226) + _249;
    float _275 = ((_263.y - _250) * _226) + _250;
    float _276 = ((_263.z - _251) * _226) + _251;
    vec4 _289 = texture(sampler2D(M_AMSN_M0_M1_Snow_2axes_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _296 = (_289.x * 2.0) + (-1.0);
    float _297 = (_289.y * 2.0) + (-1.0);
    float _298 = dot(vec2(_296, _297), vec2(_296, _297));
    float _457 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _306 = ((_289.z - _182) * _226) + _182;
    float _315 = ((sqrt(1.0 - (isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0)))) - _195) * _226) + _195;
    float _319 = (((_296 - _186) * _226) + _186) + (cbMtdParam._m0[10u].y * _186);
    float _320 = (((_297 - _188) * _226) + _188) + (cbMtdParam._m0[10u].y * _188);
    float _323 = fma(_315, _152, fma(_320, _145, _319 * _131));
    float _326 = fma(_315, _153, fma(_320, _146, _319 * _132));
    float _329 = fma(_315, _154, fma(_320, _147, _319 * _133));
    float _333 = inversesqrt(dot(vec3(_323, _326, _329), vec3(_323, _326, _329)));
    float _468 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    float _479 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _490 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _501 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    uint _352 = uint(roundEven(NORMAL.w)) * 13u;
    uint _355 = (_352 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _361 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _479 : (isnan(_479) ? 1.0 : min(_479, 1.0)))) * cbInstanceData._m0[_355].x;
    float _362 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _490 : (isnan(_490) ? 1.0 : min(_490, 1.0)))) * cbInstanceData._m0[_355].y;
    float _363 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _501 : (isnan(_501) ? 1.0 : min(_501, 1.0)))) * cbInstanceData._m0[_355].z;
    float _512 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _523 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _534 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    uint _367 = _352 + 6u;
    bool _396 = cbMtdParam._m0[1u].z != 0.0;
    float _397 = _396 ? cbInstanceData._m0[_367].w : 0.0;
    SV_Target.x = ((_323 * 0.5) * _333) + 0.500488758087158203125;
    SV_Target.y = ((_326 * 0.5) * _333) + 0.500488758087158203125;
    SV_Target.z = ((_329 * 0.5) * _333) + 0.500488758087158203125;
    SV_Target.w = _397;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _468 : (isnan(_468) ? 1.0 : min(_468, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _396 ? cbInstanceData._m0[_367].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _512 : (isnan(_512) ? 1.0 : min(_512, 1.0));
    SV_Target_2.y = isnan(1.0) ? _523 : (isnan(_523) ? 1.0 : min(_523, 1.0));
    SV_Target_2.z = isnan(1.0) ? _534 : (isnan(_534) ? 1.0 : min(_534, 1.0));
    SV_Target_2.w = _396 ? cbInstanceData._m0[_367].w : (float(floatBitsToUint(cbInstanceData._m0[_352 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _397;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _397;
}


