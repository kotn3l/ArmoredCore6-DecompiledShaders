#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _159 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _183 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _185 = texelFetch(g_InstanceIndexBuffer, int(_183));
    uint _186 = _185.x;
    precise float _187 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _192 = isnan(_187) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _187 : max(0.001000000047497451305389404296875, _187));
    precise float _194 = BLENDWEIGHT.x / _192;
    precise float _195 = BLENDWEIGHT.y / _192;
    precise float _196 = BLENDWEIGHT.z / _192;
    precise float _197 = BLENDWEIGHT.w / _192;
    uint _199 = _186 * 13u;
    uvec4 _204 = floatBitsToUint(cbInstanceData._m0[_199 + 4u]);
    uint _205 = _204.x;
    uint _207 = (_205 + uint(float(BLENDINDICES.x))) * 3u;
    uint _214 = _207 + 1u;
    uint _221 = _207 + 2u;
    precise float _228 = _194 * cbObjMatrix._m0[_207].x;
    precise float _229 = _194 * cbObjMatrix._m0[_214].x;
    precise float _230 = _194 * cbObjMatrix._m0[_221].x;
    precise float _231 = _194 * cbObjMatrix._m0[_207].y;
    precise float _232 = _194 * cbObjMatrix._m0[_214].y;
    precise float _233 = _194 * cbObjMatrix._m0[_221].y;
    precise float _234 = _194 * cbObjMatrix._m0[_207].z;
    precise float _235 = _194 * cbObjMatrix._m0[_214].z;
    precise float _236 = _194 * cbObjMatrix._m0[_221].z;
    precise float _237 = _194 * cbObjMatrix._m0[_207].w;
    precise float _238 = _194 * cbObjMatrix._m0[_214].w;
    precise float _239 = _194 * cbObjMatrix._m0[_221].w;
    uint _242 = (_205 + uint(float(BLENDINDICES.y))) * 3u;
    uint _249 = _242 + 1u;
    uint _256 = _242 + 2u;
    precise float _263 = _195 * cbObjMatrix._m0[_242].x;
    precise float _264 = _195 * cbObjMatrix._m0[_249].x;
    precise float _265 = _195 * cbObjMatrix._m0[_256].x;
    precise float _266 = _195 * cbObjMatrix._m0[_242].y;
    precise float _267 = _195 * cbObjMatrix._m0[_249].y;
    precise float _268 = _195 * cbObjMatrix._m0[_256].y;
    precise float _269 = _195 * cbObjMatrix._m0[_242].z;
    precise float _270 = _195 * cbObjMatrix._m0[_249].z;
    precise float _271 = _195 * cbObjMatrix._m0[_256].z;
    precise float _272 = _195 * cbObjMatrix._m0[_242].w;
    precise float _273 = _195 * cbObjMatrix._m0[_249].w;
    precise float _274 = _195 * cbObjMatrix._m0[_256].w;
    precise float _275 = _228 + _263;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    uint _289 = (_205 + uint(float(BLENDINDICES.z))) * 3u;
    uint _296 = _289 + 1u;
    uint _303 = _289 + 2u;
    precise float _310 = _196 * cbObjMatrix._m0[_289].x;
    precise float _311 = _196 * cbObjMatrix._m0[_296].x;
    precise float _312 = _196 * cbObjMatrix._m0[_303].x;
    precise float _313 = _196 * cbObjMatrix._m0[_289].y;
    precise float _314 = _196 * cbObjMatrix._m0[_296].y;
    precise float _315 = _196 * cbObjMatrix._m0[_303].y;
    precise float _316 = _196 * cbObjMatrix._m0[_289].z;
    precise float _317 = _196 * cbObjMatrix._m0[_296].z;
    precise float _318 = _196 * cbObjMatrix._m0[_303].z;
    precise float _319 = _196 * cbObjMatrix._m0[_289].w;
    precise float _320 = _196 * cbObjMatrix._m0[_296].w;
    precise float _321 = _196 * cbObjMatrix._m0[_303].w;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    uint _336 = (_205 + uint(float(BLENDINDICES.w))) * 3u;
    uint _343 = _336 + 1u;
    uint _350 = _336 + 2u;
    precise float _357 = _197 * cbObjMatrix._m0[_336].x;
    precise float _358 = _197 * cbObjMatrix._m0[_343].x;
    precise float _359 = _197 * cbObjMatrix._m0[_350].x;
    precise float _360 = _197 * cbObjMatrix._m0[_336].y;
    precise float _361 = _197 * cbObjMatrix._m0[_343].y;
    precise float _362 = _197 * cbObjMatrix._m0[_350].y;
    precise float _363 = _197 * cbObjMatrix._m0[_336].z;
    precise float _364 = _197 * cbObjMatrix._m0[_343].z;
    precise float _365 = _197 * cbObjMatrix._m0[_350].z;
    precise float _366 = _197 * cbObjMatrix._m0[_336].w;
    precise float _367 = _197 * cbObjMatrix._m0[_343].w;
    precise float _368 = _197 * cbObjMatrix._m0[_350].w;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = POSITION.x * _369;
    precise float _382 = POSITION.y * _372;
    precise float _383 = _382 + _381;
    precise float _384 = POSITION.z * _375;
    precise float _385 = _384 + _383;
    precise float _386 = 1.0 * _378;
    precise float _387 = _386 + _385;
    precise float _388 = POSITION.x * _370;
    precise float _389 = POSITION.y * _373;
    precise float _390 = _389 + _388;
    precise float _391 = POSITION.z * _376;
    precise float _392 = _391 + _390;
    precise float _393 = 1.0 * _379;
    precise float _394 = _393 + _392;
    precise float _395 = POSITION.x * _371;
    precise float _396 = POSITION.y * _374;
    precise float _397 = _396 + _395;
    precise float _398 = POSITION.z * _377;
    precise float _399 = _398 + _397;
    precise float _400 = 1.0 * _380;
    precise float _401 = _400 + _399;
    float _407 = cbSceneParam._m0[3u].x - _387;
    float _408 = cbSceneParam._m0[3u].y - _394;
    float _409 = cbSceneParam._m0[3u].z - _401;
    precise float _435 = _387 - cbSceneParam._m0[3u].x;
    precise float _436 = _394 - cbSceneParam._m0[3u].y;
    precise float _437 = _401 - cbSceneParam._m0[3u].z;
    precise float _465 = _435 * cbSceneParam._m0[24u].x;
    precise float _466 = _436 * cbSceneParam._m0[24u].y;
    precise float _467 = _466 + _465;
    precise float _468 = _437 * cbSceneParam._m0[24u].z;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _471 = _470 + _469;
    precise float _472 = _435 * cbSceneParam._m0[25u].x;
    precise float _473 = _436 * cbSceneParam._m0[25u].y;
    precise float _474 = _473 + _472;
    precise float _475 = _437 * cbSceneParam._m0[25u].z;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _478 = _477 + _476;
    precise float _479 = _435 * cbSceneParam._m0[26u].x;
    precise float _480 = _436 * cbSceneParam._m0[26u].y;
    precise float _481 = _480 + _479;
    precise float _482 = _437 * cbSceneParam._m0[26u].z;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _485 = _484 + _483;
    precise float _486 = _435 * cbSceneParam._m0[27u].x;
    precise float _487 = _436 * cbSceneParam._m0[27u].y;
    precise float _488 = _487 + _486;
    precise float _489 = _437 * cbSceneParam._m0[27u].z;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _492 = _491 + _490;
    gl_Position.x = _471;
    gl_Position.y = _478;
    gl_Position.z = _485;
    gl_Position.w = _492;
    NORMAL_1.x = fma(_162, _375, fma(_161, _372, _369 * _159));
    NORMAL_1.y = fma(_162, _376, fma(_161, _373, _370 * _159));
    NORMAL_1.z = fma(_162, _377, fma(_161, _374, _371 * _159));
    NORMAL_1.w = float(_186);
    TANGENT_1.x = fma(_173, _375, fma(_172, _372, _369 * _171));
    TANGENT_1.y = fma(_173, _376, fma(_172, _373, _370 * _171));
    TANGENT_1.z = fma(_173, _377, fma(_172, _374, _371 * _171));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_407 * _407) + (_408 * _408)) + (_409 * _409));
    gl_ClipDistance[0u] = dot(vec4(_471, _478, _485, _492), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_471, _478, _485, _492), vec4(cbInstanceData._m0[_199 + 3u]));
}


