#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_9;

void main()
{
    uint _75 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_9 = 0.0;
    float _158 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _410;
    float _411;
    float _412;
    float _413;
    float _414;
    float _415;
    float _416;
    float _417;
    float _418;
    float _419;
    float _420;
    float _421;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _194 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _75;
        precise float _198 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _203 = isnan(_198) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _198 : max(0.001000000047497451305389404296875, _198));
        precise float _205 = BLENDWEIGHT.x / _203;
        precise float _206 = BLENDWEIGHT.y / _203;
        precise float _207 = BLENDWEIGHT.z / _203;
        precise float _208 = BLENDWEIGHT.w / _203;
        uvec4 _215 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_194)).x * 13u) + 4u]);
        uint _216 = _215.x;
        uint _218 = (_216 + uint(float(BLENDINDICES.x))) * 3u;
        uint _225 = _218 + 1u;
        uint _232 = _218 + 2u;
        precise float _239 = _205 * cbObjMatrix._m0[_218].x;
        precise float _240 = _205 * cbObjMatrix._m0[_225].x;
        precise float _241 = _205 * cbObjMatrix._m0[_232].x;
        precise float _242 = _205 * cbObjMatrix._m0[_218].y;
        precise float _243 = _205 * cbObjMatrix._m0[_225].y;
        precise float _244 = _205 * cbObjMatrix._m0[_232].y;
        precise float _245 = _205 * cbObjMatrix._m0[_218].z;
        precise float _246 = _205 * cbObjMatrix._m0[_225].z;
        precise float _247 = _205 * cbObjMatrix._m0[_232].z;
        precise float _248 = _205 * cbObjMatrix._m0[_218].w;
        precise float _249 = _205 * cbObjMatrix._m0[_225].w;
        precise float _250 = _205 * cbObjMatrix._m0[_232].w;
        uint _253 = (_216 + uint(float(BLENDINDICES.y))) * 3u;
        uint _260 = _253 + 1u;
        uint _267 = _253 + 2u;
        precise float _274 = _206 * cbObjMatrix._m0[_253].x;
        precise float _275 = _206 * cbObjMatrix._m0[_260].x;
        precise float _276 = _206 * cbObjMatrix._m0[_267].x;
        precise float _277 = _206 * cbObjMatrix._m0[_253].y;
        precise float _278 = _206 * cbObjMatrix._m0[_260].y;
        precise float _279 = _206 * cbObjMatrix._m0[_267].y;
        precise float _280 = _206 * cbObjMatrix._m0[_253].z;
        precise float _281 = _206 * cbObjMatrix._m0[_260].z;
        precise float _282 = _206 * cbObjMatrix._m0[_267].z;
        precise float _283 = _206 * cbObjMatrix._m0[_253].w;
        precise float _284 = _206 * cbObjMatrix._m0[_260].w;
        precise float _285 = _206 * cbObjMatrix._m0[_267].w;
        precise float _286 = _239 + _274;
        precise float _287 = _240 + _275;
        precise float _288 = _241 + _276;
        precise float _289 = _242 + _277;
        precise float _290 = _243 + _278;
        precise float _291 = _244 + _279;
        precise float _292 = _245 + _280;
        precise float _293 = _246 + _281;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        uint _300 = (_216 + uint(float(BLENDINDICES.z))) * 3u;
        uint _307 = _300 + 1u;
        uint _314 = _300 + 2u;
        precise float _321 = _207 * cbObjMatrix._m0[_300].x;
        precise float _322 = _207 * cbObjMatrix._m0[_307].x;
        precise float _323 = _207 * cbObjMatrix._m0[_314].x;
        precise float _324 = _207 * cbObjMatrix._m0[_300].y;
        precise float _325 = _207 * cbObjMatrix._m0[_307].y;
        precise float _326 = _207 * cbObjMatrix._m0[_314].y;
        precise float _327 = _207 * cbObjMatrix._m0[_300].z;
        precise float _328 = _207 * cbObjMatrix._m0[_307].z;
        precise float _329 = _207 * cbObjMatrix._m0[_314].z;
        precise float _330 = _207 * cbObjMatrix._m0[_300].w;
        precise float _331 = _207 * cbObjMatrix._m0[_307].w;
        precise float _332 = _207 * cbObjMatrix._m0[_314].w;
        precise float _333 = _286 + _321;
        precise float _334 = _287 + _322;
        precise float _335 = _288 + _323;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        uint _347 = (_216 + uint(float(BLENDINDICES.w))) * 3u;
        uint _354 = _347 + 1u;
        uint _361 = _347 + 2u;
        precise float _368 = _208 * cbObjMatrix._m0[_347].x;
        precise float _369 = _208 * cbObjMatrix._m0[_354].x;
        precise float _370 = _208 * cbObjMatrix._m0[_361].x;
        precise float _371 = _208 * cbObjMatrix._m0[_347].y;
        precise float _372 = _208 * cbObjMatrix._m0[_354].y;
        precise float _373 = _208 * cbObjMatrix._m0[_361].y;
        precise float _374 = _208 * cbObjMatrix._m0[_347].z;
        precise float _375 = _208 * cbObjMatrix._m0[_354].z;
        precise float _376 = _208 * cbObjMatrix._m0[_361].z;
        precise float _377 = _208 * cbObjMatrix._m0[_347].w;
        precise float _378 = _208 * cbObjMatrix._m0[_354].w;
        precise float _379 = _208 * cbObjMatrix._m0[_361].w;
        precise float _380 = _333 + _368;
        precise float _381 = _334 + _369;
        precise float _382 = _335 + _370;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        _410 = _380;
        _411 = _383;
        _412 = _386;
        _413 = _389;
        _414 = _381;
        _415 = _384;
        _416 = _387;
        _417 = _390;
        _418 = _382;
        _419 = _385;
        _420 = _388;
        _421 = _391;
    }
    else
    {
        _410 = cbvModelParam._m0[0u].x;
        _411 = cbvModelParam._m0[0u].y;
        _412 = cbvModelParam._m0[0u].z;
        _413 = cbvModelParam._m0[0u].w;
        _414 = cbvModelParam._m0[1u].x;
        _415 = cbvModelParam._m0[1u].y;
        _416 = cbvModelParam._m0[1u].z;
        _417 = cbvModelParam._m0[1u].w;
        _418 = cbvModelParam._m0[2u].x;
        _419 = cbvModelParam._m0[2u].y;
        _420 = cbvModelParam._m0[2u].z;
        _421 = cbvModelParam._m0[2u].w;
    }
    precise float _422 = POSITION.x * _410;
    precise float _423 = POSITION.y * _411;
    precise float _424 = _423 + _422;
    precise float _425 = POSITION.z * _412;
    precise float _426 = _425 + _424;
    precise float _427 = 1.0 * _413;
    precise float _428 = _427 + _426;
    precise float _429 = POSITION.x * _414;
    precise float _430 = POSITION.y * _415;
    precise float _431 = _430 + _429;
    precise float _432 = POSITION.z * _416;
    precise float _433 = _432 + _431;
    precise float _434 = 1.0 * _417;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.x * _418;
    precise float _437 = POSITION.y * _419;
    precise float _438 = _437 + _436;
    precise float _439 = POSITION.z * _420;
    precise float _440 = _439 + _438;
    precise float _441 = 1.0 * _421;
    precise float _442 = _441 + _440;
    float _448 = cbSceneParam._m0[3u].x - _428;
    float _449 = cbSceneParam._m0[3u].y - _435;
    float _450 = cbSceneParam._m0[3u].z - _442;
    uint _470 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _75;
    precise float _484 = _428 - cbSceneParam._m0[3u].x;
    precise float _485 = _435 - cbSceneParam._m0[3u].y;
    precise float _486 = _442 - cbSceneParam._m0[3u].z;
    precise float _514 = _484 * cbSceneParam._m0[24u].x;
    precise float _515 = _485 * cbSceneParam._m0[24u].y;
    precise float _516 = _515 + _514;
    precise float _517 = _486 * cbSceneParam._m0[24u].z;
    precise float _518 = _517 + _516;
    precise float _519 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _520 = _519 + _518;
    precise float _521 = _484 * cbSceneParam._m0[25u].x;
    precise float _522 = _485 * cbSceneParam._m0[25u].y;
    precise float _523 = _522 + _521;
    precise float _524 = _486 * cbSceneParam._m0[25u].z;
    precise float _525 = _524 + _523;
    precise float _526 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _527 = _526 + _525;
    precise float _528 = _484 * cbSceneParam._m0[26u].x;
    precise float _529 = _485 * cbSceneParam._m0[26u].y;
    precise float _530 = _529 + _528;
    precise float _531 = _486 * cbSceneParam._m0[26u].z;
    precise float _532 = _531 + _530;
    precise float _533 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _534 = _533 + _532;
    precise float _535 = _484 * cbSceneParam._m0[27u].x;
    precise float _536 = _485 * cbSceneParam._m0[27u].y;
    precise float _537 = _536 + _535;
    precise float _538 = _486 * cbSceneParam._m0[27u].z;
    precise float _539 = _538 + _537;
    precise float _540 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _541 = _540 + _539;
    gl_Position.x = _520;
    gl_Position.y = _527;
    gl_Position.z = _534;
    gl_Position.w = _541;
    NORMAL_1.x = fma(_161, _412, fma(_160, _411, _410 * _158));
    NORMAL_1.y = fma(_161, _416, fma(_160, _415, _414 * _158));
    NORMAL_1.z = fma(_161, _420, fma(_160, _419, _418 * _158));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_470)).x);
    TANGENT_1.x = fma(_170, _412, fma(_169, _411, _410 * _168));
    TANGENT_1.y = fma(_170, _416, fma(_169, _415, _414 * _168));
    TANGENT_1.z = fma(_170, _420, fma(_169, _419, _418 * _168));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_9 = sqrt(((_448 * _448) + (_449 * _449)) + (_450 * _450));
}


