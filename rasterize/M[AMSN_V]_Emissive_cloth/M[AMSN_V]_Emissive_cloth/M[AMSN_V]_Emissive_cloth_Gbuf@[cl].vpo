#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_9;

void main()
{
    uint _73 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_9 = 0.0;
    float _148 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _150 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _151 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _158 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _227;
    float _228;
    float _229;
    float _230;
    float _231;
    float _232;
    float _233;
    float _234;
    float _235;
    float _236;
    float _237;
    float _238;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _175 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _73;
        uint _188 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_175)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _195 = _188 + 1u;
        uint _202 = _188 + 2u;
        _227 = cbObjMatrix._m0[_188].x;
        _228 = cbObjMatrix._m0[_188].y;
        _229 = cbObjMatrix._m0[_188].z;
        _230 = cbObjMatrix._m0[_188].w;
        _231 = cbObjMatrix._m0[_195].x;
        _232 = cbObjMatrix._m0[_195].y;
        _233 = cbObjMatrix._m0[_195].z;
        _234 = cbObjMatrix._m0[_195].w;
        _235 = cbObjMatrix._m0[_202].x;
        _236 = cbObjMatrix._m0[_202].y;
        _237 = cbObjMatrix._m0[_202].z;
        _238 = cbObjMatrix._m0[_202].w;
    }
    else
    {
        _227 = cbvModelParam._m0[0u].x;
        _228 = cbvModelParam._m0[0u].y;
        _229 = cbvModelParam._m0[0u].z;
        _230 = cbvModelParam._m0[0u].w;
        _231 = cbvModelParam._m0[1u].x;
        _232 = cbvModelParam._m0[1u].y;
        _233 = cbvModelParam._m0[1u].z;
        _234 = cbvModelParam._m0[1u].w;
        _235 = cbvModelParam._m0[2u].x;
        _236 = cbvModelParam._m0[2u].y;
        _237 = cbvModelParam._m0[2u].z;
        _238 = cbvModelParam._m0[2u].w;
    }
    precise float _239 = POSITION.x * _227;
    precise float _240 = POSITION.y * _228;
    precise float _241 = _240 + _239;
    precise float _242 = POSITION.z * _229;
    precise float _243 = _242 + _241;
    precise float _244 = 1.0 * _230;
    precise float _246 = _244 + _243;
    precise float _247 = POSITION.x * _231;
    precise float _248 = POSITION.y * _232;
    precise float _249 = _248 + _247;
    precise float _250 = POSITION.z * _233;
    precise float _251 = _250 + _249;
    precise float _252 = 1.0 * _234;
    precise float _253 = _252 + _251;
    precise float _254 = POSITION.x * _235;
    precise float _255 = POSITION.y * _236;
    precise float _256 = _255 + _254;
    precise float _257 = POSITION.z * _237;
    precise float _258 = _257 + _256;
    precise float _259 = 1.0 * _238;
    precise float _260 = _259 + _258;
    float _266 = cbSceneParam._m0[3u].x - _246;
    float _267 = cbSceneParam._m0[3u].y - _253;
    float _268 = cbSceneParam._m0[3u].z - _260;
    uint _289 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _73;
    precise float _303 = _246 - cbSceneParam._m0[3u].x;
    precise float _304 = _253 - cbSceneParam._m0[3u].y;
    precise float _305 = _260 - cbSceneParam._m0[3u].z;
    precise float _333 = _303 * cbSceneParam._m0[24u].x;
    precise float _334 = _304 * cbSceneParam._m0[24u].y;
    precise float _335 = _334 + _333;
    precise float _336 = _305 * cbSceneParam._m0[24u].z;
    precise float _337 = _336 + _335;
    precise float _338 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _339 = _338 + _337;
    precise float _340 = _303 * cbSceneParam._m0[25u].x;
    precise float _341 = _304 * cbSceneParam._m0[25u].y;
    precise float _342 = _341 + _340;
    precise float _343 = _305 * cbSceneParam._m0[25u].z;
    precise float _344 = _343 + _342;
    precise float _345 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _346 = _345 + _344;
    precise float _347 = _303 * cbSceneParam._m0[26u].x;
    precise float _348 = _304 * cbSceneParam._m0[26u].y;
    precise float _349 = _348 + _347;
    precise float _350 = _305 * cbSceneParam._m0[26u].z;
    precise float _351 = _350 + _349;
    precise float _352 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _353 = _352 + _351;
    precise float _354 = _303 * cbSceneParam._m0[27u].x;
    precise float _355 = _304 * cbSceneParam._m0[27u].y;
    precise float _356 = _355 + _354;
    precise float _357 = _305 * cbSceneParam._m0[27u].z;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _360 = _359 + _358;
    gl_Position.x = _339;
    gl_Position.y = _346;
    gl_Position.z = _353;
    gl_Position.w = _360;
    NORMAL_1.x = fma(_151, _229, fma(_150, _228, _227 * _148));
    NORMAL_1.y = fma(_151, _233, fma(_150, _232, _231 * _148));
    NORMAL_1.z = fma(_151, _237, fma(_150, _236, _235 * _148));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_289)).x);
    TANGENT_1.x = fma(_160, _229, fma(_159, _228, _227 * _158));
    TANGENT_1.y = fma(_160, _233, fma(_159, _232, _231 * _158));
    TANGENT_1.z = fma(_160, _237, fma(_159, _236, _235 * _158));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_9 = sqrt(((_266 * _266) + (_267 * _267)) + (_268 * _268));
}


