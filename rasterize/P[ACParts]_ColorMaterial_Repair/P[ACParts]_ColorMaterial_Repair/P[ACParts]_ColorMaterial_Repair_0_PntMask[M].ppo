#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 29) uniform texture2D g_PaintEmissiveTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    vec4 _158 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _162 = _158.y;
    float _167 = roundEven((_158.x + (-0.02500000037252902984619140625)) * 8.0);
    float _114[6];
    float _115[6];
    float _116[6];
    _114[0u] = cbMtdParam._m0[24u].x;
    _115[0u] = cbMtdParam._m0[24u].y;
    _116[0u] = cbMtdParam._m0[24u].z;
    _114[1u] = cbMtdParam._m0[25u].x;
    _115[1u] = cbMtdParam._m0[25u].y;
    _116[1u] = cbMtdParam._m0[25u].z;
    _114[2u] = cbMtdParam._m0[26u].x;
    _115[2u] = cbMtdParam._m0[26u].y;
    _116[2u] = cbMtdParam._m0[26u].z;
    _114[3u] = cbMtdParam._m0[27u].x;
    _115[3u] = cbMtdParam._m0[27u].y;
    _116[3u] = cbMtdParam._m0[27u].z;
    _114[4u] = cbMtdParam._m0[28u].x;
    _115[4u] = cbMtdParam._m0[28u].y;
    _116[4u] = cbMtdParam._m0[28u].z;
    _114[5u] = cbMtdParam._m0[29u].x;
    _115[5u] = cbMtdParam._m0[29u].y;
    _116[5u] = cbMtdParam._m0[29u].z;
    float _222 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    uint _225 = uint(int(isnan(5.0) ? _222 : (isnan(_222) ? 5.0 : min(_222, 5.0))));
    float _273 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _290 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbMtdParam._m0[36u].y * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y), ((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_273 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))));
    float _308 = (-0.0) - ((_273 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _312 = (_273 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _313 = isnan(_312) ? _308 : (isnan(_308) ? _312 : min(_308, _312));
    float _599 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _315 = isnan(1.0) ? _599 : (isnan(_599) ? 1.0 : min(_599, 1.0));
    float _346 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _347 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _352 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_346, _347));
    vec4 _357 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_346, _347));
    vec4 _361 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_346, _347));
    vec4 _368 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_346, _347));
    uint _376 = uint(roundEven(NORMAL.w)) * 13u;
    uint _379 = (_376 + 9u) + uint(cbMatDynParam._m0[0u].w);
    uvec4 _393 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _397 = (_393.y != 0u) ? (1.0 - _346) : _346;
    vec4 _401 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_397, _347), 0.0, ivec2(1));
    float _405 = _401.x;
    vec4 _407 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_397, _347), 0.0, ivec2(-1, 1));
    float _410 = _407.x;
    vec4 _411 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_397, _347), 0.0, ivec2(1, -1));
    float _414 = _411.x;
    vec4 _415 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_397, _347), 0.0, ivec2(-1));
    float _418 = _415.x;
    float _419 = isnan(_418) ? _414 : (isnan(_414) ? _418 : min(_414, _418));
    float _420 = isnan(_410) ? _405 : (isnan(_405) ? _410 : min(_405, _410));
    float _431;
    float _433;
    float _435;
    if (_393.x == 0u)
    {
        _431 = cbInstanceData._m0[_379].x * ((((cbMtdParam._m0[22u].x * _290.x) * cbMtdParam._m0[32u].x) * _315) + (_114[_225] * _162));
        _433 = cbInstanceData._m0[_379].y * ((((cbMtdParam._m0[22u].y * _290.y) * cbMtdParam._m0[32u].x) * _315) + (_115[_225] * _162));
        _435 = cbInstanceData._m0[_379].z * ((((cbMtdParam._m0[22u].z * _290.z) * cbMtdParam._m0[32u].x) * _315) + (_116[_225] * _162));
    }
    else
    {
        vec4 _446 = texture(sampler2D(g_PaintEmissiveTexture, SS_PaintDecal), vec2(_346, _347));
        _431 = cbPaintParam._m0[18u].x * _446.x;
        _433 = cbPaintParam._m0[18u].y * _446.y;
        _435 = cbPaintParam._m0[18u].z * _446.z;
    }
    if (((1u << (uint(floor(float(uint(_167)))) & 31u)) & _393.z) == 0u)
    {
        discard_state = true;
    }
    float _478 = (dot(vec3(_141 * NORMAL.x, _141 * NORMAL.y, _141 * NORMAL.z), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _625 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _520 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _526 = fma(_520, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _520;
    float _532 = (_526 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _636 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _538 = (_526 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _647 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _541 = ((((_368.x * _361.w) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_419) ? _420 : (isnan(_420) ? _419 : min(_420, _419))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0)))) * (isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0)))) * (1.0 - (isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0))));
    float _549;
    if (_541 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _549 = 0.0;
    }
    else
    {
        _549 = _541 * cbInstanceData._m0[_376 + 6u].w;
    }
    SV_Target.x = (cbInstanceData._m0[_379].x * cbInstanceData._m0[_379].x) * _361.x;
    SV_Target.y = (cbInstanceData._m0[_379].y * cbInstanceData._m0[_379].y) * _361.y;
    SV_Target.z = (cbInstanceData._m0[_379].z * cbInstanceData._m0[_379].z) * _361.z;
    SV_Target.w = _549;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _352.x;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _357.z;
    SV_Target_1.z = _352.z;
    SV_Target_1.w = _549;
    SV_Target_2.x = _431;
    SV_Target_2.y = _433;
    SV_Target_2.z = _435;
    SV_Target_2.w = _549;
    discard_exit();
}


