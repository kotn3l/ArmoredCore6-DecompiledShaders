#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1661;
float _4095;
float _4096;
float _4097;
float _4098;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _239 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _240 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _241 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _247 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _254 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _261 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = cbMtdParam._m0[33u].y + TEXCOORD.y;
    vec4 _290 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (_276 * cbTextureTilingScale._m0[10u].y) + cbTextureTilingScale._m0[10u].w));
    float _297 = log2(0.0);
    float _299 = exp2(_297 * cbMtdParam._m0[31u].z);
    float _303 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.x) * _299);
    float _304 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.y) * _299);
    float _305 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.z) * _299);
    float _306 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _307 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _308 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _309 = isnan(1.0) ? _306 : (isnan(_306) ? 1.0 : min(_306, 1.0));
    float _311 = isnan(1.0) ? _307 : (isnan(_307) ? 1.0 : min(_307, 1.0));
    float _312 = isnan(1.0) ? _308 : (isnan(_308) ? 1.0 : min(_308, 1.0));
    vec4 _328 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _276) + cbTextureTilingScale._m0[0u].w));
    float _332 = _328.z;
    float _333 = _328.w;
    float _334 = 1.0 - _333;
    float _341 = exp2(log2((1.0 - (_334 * _332)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _342 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _343 = isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0));
    float _355 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_334 * _334) * _332))) * cbMtdParam._m0[34u].w);
    float _356 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    vec4 _370 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _373 = _370.y;
    float _376 = (_373 * ((isnan(1.0) ? _356 : (isnan(_356) ? 1.0 : min(_356, 1.0))) - _333)) + _333;
    vec4 _388 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _276) + cbTextureTilingScale._m0[2u].w));
    float _205[6];
    float _206[6];
    float _207[6];
    _205[0u] = cbMtdParam._m0[12u].x;
    _206[0u] = cbMtdParam._m0[12u].y;
    _207[0u] = cbMtdParam._m0[12u].z;
    _205[1u] = cbMtdParam._m0[13u].x;
    _206[1u] = cbMtdParam._m0[13u].y;
    _207[1u] = cbMtdParam._m0[13u].z;
    _205[2u] = cbMtdParam._m0[14u].x;
    _206[2u] = cbMtdParam._m0[14u].y;
    _207[2u] = cbMtdParam._m0[14u].z;
    _205[3u] = cbMtdParam._m0[15u].x;
    _206[3u] = cbMtdParam._m0[15u].y;
    _207[3u] = cbMtdParam._m0[15u].z;
    _205[4u] = cbMtdParam._m0[16u].x;
    _206[4u] = cbMtdParam._m0[16u].y;
    _207[4u] = cbMtdParam._m0[16u].z;
    _205[5u] = cbMtdParam._m0[11u].x;
    _206[5u] = cbMtdParam._m0[11u].y;
    _207[5u] = cbMtdParam._m0[11u].z;
    float _456 = (_370.x + (-0.02500000037252902984619140625)) * 8.0;
    float _458 = roundEven(_456);
    float _459 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    uint _462 = uint(int(isnan(5.0) ? _459 : (isnan(_459) ? 5.0 : min(_459, 5.0))));
    float _212[6];
    float _213[6];
    float _214[6];
    _212[0u] = 1.0;
    _213[0u] = 1.0;
    _214[0u] = 1.0;
    _212[1u] = cbMtdParam._m0[23u].x;
    _213[1u] = cbMtdParam._m0[23u].y;
    _214[1u] = cbMtdParam._m0[23u].z;
    _212[2u] = cbMtdParam._m0[21u].x;
    _213[2u] = cbMtdParam._m0[21u].y;
    _214[2u] = cbMtdParam._m0[21u].z;
    _212[3u] = cbMtdParam._m0[19u].x;
    _213[3u] = cbMtdParam._m0[19u].y;
    _214[3u] = cbMtdParam._m0[19u].z;
    _212[4u] = cbMtdParam._m0[18u].x;
    _213[4u] = cbMtdParam._m0[18u].y;
    _214[4u] = cbMtdParam._m0[18u].z;
    _212[5u] = cbMtdParam._m0[17u].x;
    _213[5u] = cbMtdParam._m0[17u].y;
    _214[5u] = cbMtdParam._m0[17u].z;
    float _549 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[38u].w * TEXCOORD.x) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[39u].x * TEXCOORD.y) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _550 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    uint _552 = uint(int(isnan(5.0) ? _550 : (isnan(_550) ? 5.0 : min(_550, 5.0))));
    float _208[6];
    _208[0u] = 1.0;
    _208[1u] = cbMtdParam._m0[23u].w;
    _208[2u] = cbMtdParam._m0[21u].w;
    _208[3u] = cbMtdParam._m0[19u].w;
    _208[4u] = cbMtdParam._m0[18u].w;
    _208[5u] = cbMtdParam._m0[17u].w;
    float _589 = ((((_205[_462] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_212[_552] - _205[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].x) * _388.x;
    float _590 = ((((_206[_462] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_213[_552] - _206[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].y) * _388.y;
    float _591 = ((((_207[_462] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_214[_552] - _207[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].z) * _388.z;
    vec4 _603 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _276) + cbTextureTilingScale._m0[1u].w));
    float _623 = (((cbMtdParam._m0[9u].x * _603.x) - _589) * _376) + _589;
    float _624 = (((cbMtdParam._m0[9u].y * _603.y) - _590) * _376) + _590;
    float _625 = (((cbMtdParam._m0[9u].z * _603.z) - _591) * _376) + _591;
    vec4 _637 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _276) + cbTextureTilingScale._m0[5u].w));
    float _657 = (((cbMtdParam._m0[20u].x * _637.x) - _623) * _343) + _623;
    float _658 = (((cbMtdParam._m0[20u].y * _637.y) - _624) * _343) + _624;
    float _659 = (((cbMtdParam._m0[20u].z * _637.z) - _625) * _343) + _625;
    vec4 _672 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _276) + cbTextureTilingScale._m0[7u].w));
    float _209[6];
    float _210[6];
    float _211[6];
    _209[0u] = cbMtdParam._m0[24u].x;
    _210[0u] = cbMtdParam._m0[24u].y;
    _211[0u] = cbMtdParam._m0[24u].z;
    _209[1u] = cbMtdParam._m0[25u].x;
    _210[1u] = cbMtdParam._m0[25u].y;
    _211[1u] = cbMtdParam._m0[25u].z;
    _209[2u] = cbMtdParam._m0[26u].x;
    _210[2u] = cbMtdParam._m0[26u].y;
    _211[2u] = cbMtdParam._m0[26u].z;
    _209[3u] = cbMtdParam._m0[27u].x;
    _210[3u] = cbMtdParam._m0[27u].y;
    _211[3u] = cbMtdParam._m0[27u].z;
    _209[4u] = cbMtdParam._m0[28u].x;
    _210[4u] = cbMtdParam._m0[28u].y;
    _211[4u] = cbMtdParam._m0[28u].z;
    _209[5u] = cbMtdParam._m0[29u].x;
    _210[5u] = cbMtdParam._m0[29u].y;
    _211[5u] = cbMtdParam._m0[29u].z;
    float _759 = _209[_462] * _373;
    float _760 = _210[_462] * _373;
    float _761 = _211[_462] * _373;
    float _762 = _759 + ((_290.x * 4.5) * ((((cbMtdParam._m0[30u].x * _672.x) - _657) * _309) + _657));
    float _763 = _760 + ((_290.y * 4.5) * ((((cbMtdParam._m0[30u].y * _672.y) - _658) * _311) + _658));
    float _764 = _761 + ((_290.z * 4.5) * ((((cbMtdParam._m0[30u].z * _672.z) - _659) * _312) + _659));
    float _200[5];
    float _201[5];
    _200[0u] = cbMtdParam._m0[35u].y;
    _201[0u] = cbMtdParam._m0[35u].z;
    _200[1u] = cbMtdParam._m0[36u].w;
    _201[1u] = cbMtdParam._m0[37u].x;
    _200[2u] = cbMtdParam._m0[37u].y;
    _201[2u] = cbMtdParam._m0[37u].z;
    _200[3u] = cbMtdParam._m0[37u].w;
    _201[3u] = cbMtdParam._m0[38u].x;
    _200[4u] = cbMtdParam._m0[38u].y;
    _201[4u] = cbMtdParam._m0[38u].z;
    float _792 = roundEven(5.0 - _456);
    float _793 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _794 = isnan(4.0) ? _793 : (isnan(_793) ? 4.0 : min(_793, 4.0));
    float _796 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    uint _798 = uint(int(isnan(4.0) ? _796 : (isnan(_796) ? 4.0 : min(_796, 4.0))));
    float _807 = ((cbMtdParam._m0[39u].z - _201[_798]) * _376) + _201[_798];
    float _815 = ((cbMtdParam._m0[40u].x - _807) * _343) + _807;
    float _820 = ((cbMtdParam._m0[40u].z - _815) * _309) + _815;
    vec4 _836 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _276) + cbTextureTilingScale._m0[8u].w));
    float _838 = _836.x;
    float _839 = _836.y;
    float _841 = _836.z + _200[_798];
    vec4 _853 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _276) + cbTextureTilingScale._m0[9u].w));
    float _861 = (((cbMtdParam._m0[39u].y - _841) + _853.z) * _376) + _841;
    vec4 _873 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _276) + cbTextureTilingScale._m0[11u].w));
    float _881 = (((cbMtdParam._m0[39u].w - _861) + _873.z) * _343) + _861;
    float _887 = ((((_332 * 2.0) * _881) - _881) * cbMtdParam._m0[33u].w) + _881;
    vec4 _899 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _276) + cbTextureTilingScale._m0[12u].w));
    float _907 = (((_899.z + cbMtdParam._m0[40u].y) - _887) * _312) + _887;
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _942 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _969 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * ((_938 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_942 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _984 = (-0.0) - ((_942 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _988 = (_942 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _989 = isnan(_988) ? _984 : (isnan(_984) ? _988 : min(_984, _988));
    float _4202 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _990 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
    float _1015 = ((_853.x - _838) * _376) + _838;
    float _1016 = ((_853.y - _839) * _376) + _839;
    float _1021 = ((_873.x - _1015) * _343) + _1015;
    float _1022 = ((_873.y - _1016) * _343) + _1016;
    float _1031 = ((((_899.x - _1021) * _309) + _1021) * 2.0) + (-1.0);
    float _1032 = ((((_899.y - _1022) * _311) + _1022) * 2.0) + (-1.0);
    float _1033 = dot(vec2(_1031, _1032), vec2(_1031, _1032));
    float _4213 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _1038 = sqrt(1.0 - (isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0))));
    float _1041 = (cbMtdParam._m0[34u].x * ((_328.x * 2.0) + (-1.0))) + _1031;
    float _1042 = (cbMtdParam._m0[34u].x * ((_328.y * 2.0) + (-1.0))) + _1032;
    float _1045 = fma(_1038, _254 * NORMAL.x, fma(_1042, _261 * TANGENT.x, (_247 * _239) * _1041));
    float _1048 = fma(_1038, _254 * NORMAL.y, fma(_1042, _261 * TANGENT.y, (_247 * _240) * _1041));
    float _1051 = fma(_1038, _254 * NORMAL.z, fma(_1042, _261 * TANGENT.z, (_247 * _241) * _1041));
    float _1055 = inversesqrt(dot(vec3(_1045, _1048, _1051), vec3(_1045, _1048, _1051)));
    float _1056 = _1055 * _1045;
    float _1057 = _1055 * _1048;
    float _1058 = _1055 * _1051;
    float _4224 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _1059 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
    float _4235 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4246 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4257 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _4268 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _1063 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _1079 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1099 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1109 = cbSceneParam._m0[71u].x - (_938 / _1099);
    float _1110 = cbSceneParam._m0[71u].y - (_942 / _1099);
    float _1111 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1099);
    float _1115 = inversesqrt(dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111)));
    float _1116 = _1109 * _1115;
    float _1117 = _1110 * _1115;
    float _1118 = _1111 * _1115;
    vec4 _1123 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1125 = _1123.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1343 = sqrt(((_1109 * _1109) + (_1110 * _1110)) + (_1111 * _1111));
        float _1349 = (cbMatDynParam._m0[5u].x * _1343) + cbMatDynParam._m0[5u].y;
        float _4279 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
        float _1350 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
        float _1354 = (cbMatDynParam._m0[5u].z * _1343) + cbMatDynParam._m0[5u].w;
        float _4290 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0))) - _1350)) + _1350) < ((_1125 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1136 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1137 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1139 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1141 = _1139.w;
    float _1159 = fma(_1058, cbSceneParam._m0[5u].z, fma(_1057, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1056));
    float _1162 = fma(_1058, cbSceneParam._m0[6u].z, fma(_1057, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1056));
    float _1165 = fma(_1058, cbSceneParam._m0[7u].z, fma(_1057, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1056));
    vec4 _1167 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1178 = (((_1167.y - _1059) + (_1167.w * _1059)) * cbMtdParam._m0[3u].x) + _1059;
    uint _1191 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1192 = _1191 + 9u;
    uint _1193 = _1192 + uint(cbMatDynParam._m0[0u].w);
    float _1199 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0)))) * cbInstanceData._m0[_1193].x;
    float _1200 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0)))) * cbInstanceData._m0[_1193].y;
    float _1201 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0)))) * cbInstanceData._m0[_1193].z;
    float _4301 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1202 = isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0));
    float _4312 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    float _1203 = isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0));
    float _4323 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    float _1204 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
    vec4 _1205 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1210 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1221 = (((_1210.x - _1063) + (_1210.w * _1063)) * cbMtdParam._m0[3u].x) + _1063;
    float _1234 = (cbMtdParam._m0[3u].x * (((_1202 * _1141) - _1202) + _1205.x)) + _1202;
    float _1235 = (cbMtdParam._m0[3u].x * (((_1203 * _1141) - _1203) + _1205.y)) + _1203;
    float _1236 = (cbMtdParam._m0[3u].x * (((_1204 * _1141) - _1204) + _1205.z)) + _1204;
    float _1237 = 1.0 - _1221;
    float _1238 = _1237 * _1234;
    float _1239 = _1237 * _1235;
    float _1240 = _1237 * _1236;
    float _1245 = (_1234 + (-0.039999999105930328369140625)) * _1221;
    float _1246 = (_1235 + (-0.039999999105930328369140625)) * _1221;
    float _1247 = (_1236 + (-0.039999999105930328369140625)) * _1221;
    float _1248 = _1245 + 0.039999999105930328369140625;
    float _1250 = _1246 + 0.039999999105930328369140625;
    float _1251 = _1247 + 0.039999999105930328369140625;
    vec4 _1260 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1136, cbSceneParam._m0[86u].y * _1137));
    float _1263 = _1260.x * TEXCOORD_5.w;
    float _1264 = dot(vec3(_1056, _1057, _1058), vec3(_1116, _1117, _1118));
    float _1267 = _1264 * 2.0;
    float _1271 = (_1267 * _1056) - _1116;
    float _1272 = (_1267 * _1057) - _1117;
    float _1273 = (_1267 * _1058) - _1118;
    float _1277 = abs(dot(vec3(_1116, _1117, _1118), vec3(_1056, _1057, _1058)));
    float _4334 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
    float _1279 = sqrt(_1178);
    float _1290 = exp2((_1279 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1279 * 3.0));
    float _1296 = (1.0 - _1290) * ((_1279 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1297 = _1290 * _1279;
    float _1325 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1329 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1333 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1660;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    float _1667;
    float _1668;
    float _1669;
    float _1670;
    float _1671;
    float _1672;
    float _1673;
    float _1674;
    float _1675;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1387 = fma(_1333, cbModelParam._m0[26u].z, fma(_1329, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1325));
        float _1391 = fma(_1333, cbModelParam._m0[27u].z, fma(_1329, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1325));
        float _1395 = fma(_1333, cbModelParam._m0[28u].z, fma(_1329, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1325));
        float _1419 = _1325 + _1056;
        float _1420 = _1329 + _1057;
        float _1421 = _1333 + _1058;
        float _1431 = fma(_1421, cbModelParam._m0[26u].z, fma(_1420, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1419)) - _1387;
        float _1432 = fma(_1421, cbModelParam._m0[27u].z, fma(_1420, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1419)) - _1391;
        float _1433 = fma(_1421, cbModelParam._m0[28u].z, fma(_1420, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1419)) - _1395;
        float _1437 = inversesqrt(dot(vec3(_1431, _1432, _1433), vec3(_1431, _1432, _1433)));
        float _1449 = ((_1437 * _1431) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1387 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1450 = ((_1437 * _1432) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1391 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1451 = ((_1437 * _1433) / cbModelParam._m0[34u].z) + ((((((_1395 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1454 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1449, _1450, _1451), 0.0);
        vec4 _1461 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1449, _1450, _1451), 0.0);
        vec4 _1468 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1449, _1450, _1451), 0.0);
        vec4 _1475 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1449, _1450, _1451), 0.0);
        float _1488 = exp2((_1454.w + (-0.5)) * 20.0) * 2.0;
        float _1489 = _1488 * (_1454.x + (-0.5));
        float _1490 = _1488 * (_1454.y + (-0.5));
        float _1491 = _1488 * (_1454.z + (-0.5));
        float _1498 = exp2((_1461.w + (-0.5)) * 20.0) * 2.0;
        float _1499 = _1498 * (_1461.x + (-0.5));
        float _1500 = _1498 * (_1461.y + (-0.5));
        float _1501 = _1498 * (_1461.z + (-0.5));
        float _1508 = exp2((_1468.w + (-0.5)) * 20.0) * 2.0;
        float _1509 = _1508 * (_1468.x + (-0.5));
        float _1510 = _1508 * (_1468.y + (-0.5));
        float _1511 = _1508 * (_1468.z + (-0.5));
        float _1518 = exp2((_1475.w + (-0.5)) * 20.0) * 2.0;
        float _1519 = _1518 * (_1475.x + (-0.5));
        float _1520 = _1518 * (_1475.y + (-0.5));
        float _1521 = _1518 * (_1475.z + (-0.5));
        float _1522 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1523 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1524 = isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0));
        float _1525 = _1489 * 0.5;
        float _1526 = _1499 * 0.5;
        float _1527 = _1509 * 0.5;
        float _1528 = dot(vec3(_1525, _1526, _1527), vec3(_1525, _1526, _1527));
        float _1533 = (_1528 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1528);
        float _1542 = (dot(vec3(_1056, _1057, _1058), vec3(_1533 * _1525, _1533 * _1526, _1533 * _1527)) + 1.0) * 0.5;
        float _4360 = isnan(0.0) ? _1542 : (isnan(_1542) ? 0.0 : max(_1542, 0.0));
        float _1552 = sqrt(((_1526 * _1526) + (_1525 * _1525)) + (_1527 * _1527)) / (_1522 + 9.9999997473787516355514526367188e-06);
        float _4371 = isnan(0.0) ? _1552 : (isnan(_1552) ? 0.0 : max(_1552, 0.0));
        float _1553 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
        float _1554 = _1553 * 2.0;
        float _1558 = (1.0 - _1553) / (_1553 + 1.0);
        float _4382 = isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0));
        float _1559 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1568 = ((((1.0 - _1559) * (_1554 + 2.0)) * exp2(log2(isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))) * (_1554 + 1.0))) + _1559) * _1522;
        float _1569 = _1490 * 0.5;
        float _1570 = _1500 * 0.5;
        float _1571 = _1510 * 0.5;
        float _1572 = dot(vec3(_1569, _1570, _1571), vec3(_1569, _1570, _1571));
        float _1577 = (_1572 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1572);
        float _1585 = (dot(vec3(_1056, _1057, _1058), vec3(_1577 * _1569, _1577 * _1570, _1577 * _1571)) + 1.0) * 0.5;
        float _4393 = isnan(0.0) ? _1585 : (isnan(_1585) ? 0.0 : max(_1585, 0.0));
        float _1594 = sqrt(((_1570 * _1570) + (_1569 * _1569)) + (_1571 * _1571)) / (_1523 + 9.9999997473787516355514526367188e-06);
        float _4404 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1595 = isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0));
        float _1596 = _1595 * 2.0;
        float _1600 = (1.0 - _1595) / (_1595 + 1.0);
        float _4415 = isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0));
        float _1601 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
        float _1610 = ((((1.0 - _1601) * (_1596 + 2.0)) * exp2(log2(isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))) * (_1596 + 1.0))) + _1601) * _1523;
        float _1611 = _1491 * 0.5;
        float _1612 = _1501 * 0.5;
        float _1613 = _1511 * 0.5;
        float _1614 = dot(vec3(_1611, _1612, _1613), vec3(_1611, _1612, _1613));
        float _1619 = (_1614 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1614);
        float _1627 = (dot(vec3(_1056, _1057, _1058), vec3(_1619 * _1611, _1619 * _1612, _1619 * _1613)) + 1.0) * 0.5;
        float _4426 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
        float _1636 = sqrt(((_1612 * _1612) + (_1611 * _1611)) + (_1613 * _1613)) / (_1524 + 9.9999997473787516355514526367188e-06);
        float _4437 = isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0));
        float _1637 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
        float _1638 = _1637 * 2.0;
        float _1642 = (1.0 - _1637) / (_1637 + 1.0);
        float _4448 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
        float _1643 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
        float _1652 = ((((1.0 - _1643) * (_1638 + 2.0)) * exp2(log2(isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0))) * (_1638 + 1.0))) + _1643) * _1524;
        _1660 = _1491;
        _1662 = _1490;
        _1663 = _1489;
        _1664 = _1501;
        _1665 = _1500;
        _1666 = _1499;
        _1667 = _1511;
        _1668 = _1510;
        _1669 = _1509;
        _1670 = _1524;
        _1671 = _1523;
        _1672 = _1522;
        _1673 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0)));
        _1674 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0)));
        _1675 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0)));
    }
    else
    {
        _1660 = _1661;
        _1662 = _1661;
        _1663 = _1661;
        _1664 = _1661;
        _1665 = _1661;
        _1666 = _1661;
        _1667 = _1661;
        _1668 = _1661;
        _1669 = _1661;
        _1670 = _1661;
        _1671 = _1661;
        _1672 = _1661;
        _1673 = 0.0;
        _1674 = 0.0;
        _1675 = 0.0;
    }
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    float _1972;
    float _1973;
    float _1974;
    float _1975;
    float _1976;
    float _1977;
    float _1978;
    float _1979;
    float _1980;
    float _1981;
    float _1982;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1701 = fma(_1333, cbModelParam._m0[30u].z, fma(_1329, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1325));
        float _1705 = fma(_1333, cbModelParam._m0[31u].z, fma(_1329, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1325));
        float _1709 = fma(_1333, cbModelParam._m0[32u].z, fma(_1329, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1325));
        float _1731 = _1325 + _1056;
        float _1732 = _1329 + _1057;
        float _1733 = _1333 + _1058;
        float _1743 = fma(_1733, cbModelParam._m0[30u].z, fma(_1732, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1731)) - _1701;
        float _1744 = fma(_1733, cbModelParam._m0[31u].z, fma(_1732, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1731)) - _1705;
        float _1745 = fma(_1733, cbModelParam._m0[32u].z, fma(_1732, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1731)) - _1709;
        float _1749 = inversesqrt(dot(vec3(_1743, _1744, _1745), vec3(_1743, _1744, _1745)));
        float _1761 = ((_1749 * _1743) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1701 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1762 = ((_1749 * _1744) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1705 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1763 = ((_1749 * _1745) / cbModelParam._m0[35u].z) + ((((((_1709 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1765 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1761, _1762, _1763), 0.0);
        vec4 _1772 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1761, _1762, _1763), 0.0);
        vec4 _1779 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1761, _1762, _1763), 0.0);
        vec4 _1786 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1761, _1762, _1763), 0.0);
        float _1798 = exp2((_1765.w + (-0.5)) * 20.0) * 2.0;
        float _1799 = _1798 * (_1765.x + (-0.5));
        float _1800 = _1798 * (_1765.y + (-0.5));
        float _1801 = _1798 * (_1765.z + (-0.5));
        float _1808 = exp2((_1772.w + (-0.5)) * 20.0) * 2.0;
        float _1809 = _1808 * (_1772.x + (-0.5));
        float _1810 = _1808 * (_1772.y + (-0.5));
        float _1811 = _1808 * (_1772.z + (-0.5));
        float _1818 = exp2((_1779.w + (-0.5)) * 20.0) * 2.0;
        float _1819 = _1818 * (_1779.x + (-0.5));
        float _1820 = _1818 * (_1779.y + (-0.5));
        float _1821 = _1818 * (_1779.z + (-0.5));
        float _1828 = exp2((_1786.w + (-0.5)) * 20.0) * 2.0;
        float _1829 = _1828 * (_1786.x + (-0.5));
        float _1830 = _1828 * (_1786.y + (-0.5));
        float _1831 = _1828 * (_1786.z + (-0.5));
        float _1832 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1833 = isnan(0.0) ? _1830 : (isnan(_1830) ? 0.0 : max(_1830, 0.0));
        float _1834 = isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0));
        float _1835 = _1799 * 0.5;
        float _1836 = _1809 * 0.5;
        float _1837 = _1819 * 0.5;
        float _1838 = dot(vec3(_1835, _1836, _1837), vec3(_1835, _1836, _1837));
        float _1843 = (_1838 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1838);
        float _1851 = (dot(vec3(_1056, _1057, _1058), vec3(_1843 * _1835, _1843 * _1836, _1843 * _1837)) + 1.0) * 0.5;
        float _4489 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0));
        float _1860 = sqrt(((_1836 * _1836) + (_1835 * _1835)) + (_1837 * _1837)) / (_1832 + 9.9999997473787516355514526367188e-06);
        float _4500 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1861 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
        float _1862 = _1861 * 2.0;
        float _1866 = (1.0 - _1861) / (_1861 + 1.0);
        float _4511 = isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0));
        float _1867 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _1876 = ((((1.0 - _1867) * (_1862 + 2.0)) * exp2(log2(isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0))) * (_1862 + 1.0))) + _1867) * _1832;
        float _1877 = _1800 * 0.5;
        float _1878 = _1810 * 0.5;
        float _1879 = _1820 * 0.5;
        float _1880 = dot(vec3(_1877, _1878, _1879), vec3(_1877, _1878, _1879));
        float _1885 = (_1880 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1880);
        float _1893 = (dot(vec3(_1056, _1057, _1058), vec3(_1885 * _1877, _1885 * _1878, _1885 * _1879)) + 1.0) * 0.5;
        float _4522 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
        float _1902 = sqrt(((_1878 * _1878) + (_1877 * _1877)) + (_1879 * _1879)) / (_1833 + 9.9999997473787516355514526367188e-06);
        float _4533 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
        float _1903 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
        float _1904 = _1903 * 2.0;
        float _1908 = (1.0 - _1903) / (_1903 + 1.0);
        float _4544 = isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0));
        float _1909 = isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0));
        float _1918 = ((((1.0 - _1909) * (_1904 + 2.0)) * exp2(log2(isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0))) * (_1904 + 1.0))) + _1909) * _1833;
        float _1919 = _1801 * 0.5;
        float _1920 = _1811 * 0.5;
        float _1921 = _1821 * 0.5;
        float _1922 = dot(vec3(_1919, _1920, _1921), vec3(_1919, _1920, _1921));
        float _1927 = (_1922 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1922);
        float _1935 = (dot(vec3(_1056, _1057, _1058), vec3(_1927 * _1919, _1927 * _1920, _1927 * _1921)) + 1.0) * 0.5;
        float _4555 = isnan(0.0) ? _1935 : (isnan(_1935) ? 0.0 : max(_1935, 0.0));
        float _1944 = sqrt(((_1920 * _1920) + (_1919 * _1919)) + (_1921 * _1921)) / (_1834 + 9.9999997473787516355514526367188e-06);
        float _4566 = isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0));
        float _1945 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
        float _1946 = _1945 * 2.0;
        float _1950 = (1.0 - _1945) / (_1945 + 1.0);
        float _4577 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
        float _1951 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
        float _1960 = ((((1.0 - _1951) * (_1946 + 2.0)) * exp2(log2(isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (_1946 + 1.0))) + _1951) * _1834;
        _1968 = _1801;
        _1969 = _1800;
        _1970 = _1799;
        _1971 = _1811;
        _1972 = _1810;
        _1973 = _1809;
        _1974 = _1821;
        _1975 = _1820;
        _1976 = _1819;
        _1977 = _1834;
        _1978 = _1833;
        _1979 = _1832;
        _1980 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0)));
        _1981 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0)));
        _1982 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1960 : (isnan(_1960) ? 0.0 : max(_1960, 0.0)));
    }
    else
    {
        _1968 = _1661;
        _1969 = _1661;
        _1970 = _1661;
        _1971 = _1661;
        _1972 = _1661;
        _1973 = _1661;
        _1974 = _1661;
        _1975 = _1661;
        _1976 = _1661;
        _1977 = _1661;
        _1978 = _1661;
        _1979 = _1661;
        _1980 = 0.0;
        _1981 = 0.0;
        _1982 = 0.0;
    }
    float _1992 = (cbModelParam._m0[1u].x * (_1980 - _1673)) + _1673;
    float _1993 = (cbModelParam._m0[1u].x * (_1981 - _1674)) + _1674;
    float _1994 = (cbModelParam._m0[1u].x * (_1982 - _1675)) + _1675;
    float _2015 = fma(_1994, cbSceneParam._m0[89u].z, fma(_1993, cbSceneParam._m0[89u].y, _1992 * cbSceneParam._m0[89u].x));
    float _2018 = fma(_1994, cbSceneParam._m0[90u].z, fma(_1993, cbSceneParam._m0[90u].y, _1992 * cbSceneParam._m0[90u].x));
    float _2021 = fma(_1994, cbSceneParam._m0[91u].z, fma(_1993, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1992));
    float _2034 = _1271 * 0.5;
    float _2035 = _1272 * 0.5;
    float _2036 = _1273 * 0.5;
    float _2037 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1970, _1973, _1976, _1979));
    float _2040 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1969, _1972, _1975, _1978));
    float _2043 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1968, _1971, _1974, _1977));
    float _2077;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2050 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1660, _1664, _1667, _1670));
        float _2054 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1662, _1665, _1668, _1671));
        float _2058 = dot(vec4(_2034, _2035, _2036, 1.0), vec4(_1663, _1666, _1669, _1672));
        float _2065 = dot(vec4(cbModelParam._m0[39u]), vec4(_2034, _2035, _2036, 1.0));
        _2077 = dot(vec3(isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0)), isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0)), isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2065) ? 0.0 : (isnan(0.0) ? _2065 : max(0.0, _2065))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2077 = 1.0;
    }
    float _2088;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2079 = dot(vec4(cbModelParam._m0[40u]), vec4(_2034, _2035, _2036, 1.0));
        _2088 = dot(vec3(isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0)), isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0)), isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2079) ? 0.0 : (isnan(0.0) ? _2079 : max(0.0, _2079))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2088 = 1.0;
    }
    float _2092 = (_2088 * cbModelParam._m0[1u].x) + (_2077 * (1.0 - cbModelParam._m0[1u].x));
    float _2102 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1178);
    float _2103 = isnan(_2102) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2102 : min(cbModelParam._m0[25u].z, _2102));
    float _2183;
    float _2185;
    float _2187;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2150 = fma(_1333, cbModelParam._m0[13u].z, fma(_1329, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1325)) + cbModelParam._m0[13u].w;
        float _2154 = fma(_1333, cbModelParam._m0[14u].z, fma(_1329, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1325)) + cbModelParam._m0[14u].w;
        float _2158 = fma(_1333, cbModelParam._m0[15u].z, fma(_1329, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1325)) + cbModelParam._m0[15u].w;
        float _2161 = fma(_1273, cbModelParam._m0[13u].z, fma(_1272, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1271));
        float _2164 = fma(_1273, cbModelParam._m0[14u].z, fma(_1272, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1271));
        float _2167 = fma(_1273, cbModelParam._m0[15u].z, fma(_1272, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1271));
        float _2195;
        if (_2161 > 0.0)
        {
            _2195 = abs((1.0 - _2150) / _2161);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2161 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2150 + 1.0) / _2161);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2195 = frontier_phi_17_15_ladder;
        }
        float _2418;
        if (_2164 > 0.0)
        {
            _2418 = abs((1.0 - _2154) / _2164);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2164 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2154 + 1.0) / _2164);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2418 = frontier_phi_26_22_ladder;
        }
        float _2675;
        if (_2167 > 0.0)
        {
            _2675 = abs((1.0 - _2158) / _2167);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2167 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2158 + 1.0) / _2167);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2675 = frontier_phi_38_33_ladder;
        }
        float _2677 = isnan(_2418) ? _2195 : (isnan(_2195) ? _2418 : min(_2195, _2418));
        float _2678 = isnan(_2675) ? _2677 : (isnan(_2677) ? _2675 : min(_2677, _2675));
        float _2682 = (_2678 * _2161) + _2150;
        float _2683 = (_2678 * _2164) + _2154;
        float _2684 = (_2678 * _2167) + _2158;
        float _2685 = _2678 * 9.9999997473787516355514526367188e-05;
        float _2687 = (-1.0) - _2685;
        float _2689 = _2685 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2684 > _2689) || ((_2684 < _2687) || ((_2683 > _2689) || ((_2683 < _2687) || ((_2682 < _2687) || (_2682 > _2689))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2812 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2684, cbModelParam._m0[9u].z, fma(_2683, cbModelParam._m0[9u].y, _2682 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2684, cbModelParam._m0[10u].z, fma(_2683, cbModelParam._m0[10u].y, _2682 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2684, cbModelParam._m0[11u].z, fma(_2683, cbModelParam._m0[11u].y, _2682 * cbModelParam._m0[11u].x))), _2103);
            frontier_phi_16_38_ladder = _2812.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2812.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2812.x * cbModelParam._m0[1u].y;
        }
        _2183 = frontier_phi_16_38_ladder_2;
        _2185 = frontier_phi_16_38_ladder_1;
        _2187 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2171 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1271, _1272, _1273), _2103);
        _2183 = _2171.x * cbModelParam._m0[1u].y;
        _2185 = _2171.y * cbModelParam._m0[1u].y;
        _2187 = _2171.z * cbModelParam._m0[1u].y;
    }
    float _2191 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1178);
    float _2192 = isnan(_2191) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2191 : min(cbModelParam._m0[25u].w, _2191));
    float _2281;
    float _2283;
    float _2285;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2245 = fma(_1333, cbModelParam._m0[21u].z, fma(_1329, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1325)) + cbModelParam._m0[21u].w;
        float _2249 = fma(_1333, cbModelParam._m0[22u].z, fma(_1329, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1325)) + cbModelParam._m0[22u].w;
        float _2253 = fma(_1333, cbModelParam._m0[23u].z, fma(_1329, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1325)) + cbModelParam._m0[23u].w;
        float _2256 = fma(_1273, cbModelParam._m0[21u].z, fma(_1272, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1271));
        float _2259 = fma(_1273, cbModelParam._m0[22u].z, fma(_1272, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1271));
        float _2262 = fma(_1273, cbModelParam._m0[23u].z, fma(_1272, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1271));
        float _2423;
        if (_2256 > 0.0)
        {
            _2423 = abs((1.0 - _2245) / _2256);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2256 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2245 + 1.0) / _2256);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2423 = frontier_phi_28_24_ladder;
        }
        float _2702;
        if (_2259 > 0.0)
        {
            _2702 = abs((1.0 - _2249) / _2259);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2259 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2249 + 1.0) / _2259);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2702 = frontier_phi_40_35_ladder;
        }
        float _2915;
        if (_2262 > 0.0)
        {
            _2915 = abs((1.0 - _2253) / _2262);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2262 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2253 + 1.0) / _2262);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2915 = frontier_phi_49_46_ladder;
        }
        float _2917 = isnan(_2702) ? _2423 : (isnan(_2423) ? _2702 : min(_2423, _2702));
        float _2918 = isnan(_2915) ? _2917 : (isnan(_2917) ? _2915 : min(_2917, _2915));
        float _2922 = (_2918 * _2256) + _2245;
        float _2923 = (_2918 * _2259) + _2249;
        float _2924 = (_2918 * _2262) + _2253;
        float _2925 = _2918 * 9.9999997473787516355514526367188e-05;
        float _2926 = (-1.0) - _2925;
        float _2928 = _2925 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2924 > _2928) || ((_2924 < _2926) || ((_2923 > _2928) || ((_2923 < _2926) || ((_2922 < _2926) || (_2922 > _2928))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3152 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2924, cbModelParam._m0[17u].z, fma(_2923, cbModelParam._m0[17u].y, _2922 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2924, cbModelParam._m0[18u].z, fma(_2923, cbModelParam._m0[18u].y, _2922 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2924, cbModelParam._m0[19u].z, fma(_2923, cbModelParam._m0[19u].y, _2922 * cbModelParam._m0[19u].x))), _2192);
            frontier_phi_25_49_ladder = _3152.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _3152.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _3152.x * cbModelParam._m0[1u].z;
        }
        _2281 = frontier_phi_25_49_ladder_2;
        _2283 = frontier_phi_25_49_ladder_1;
        _2285 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2265 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1271, _1272, _1273), _2192);
        _2281 = _2265.x * cbModelParam._m0[1u].z;
        _2283 = _2265.y * cbModelParam._m0[1u].z;
        _2285 = _2265.z * cbModelParam._m0[1u].z;
    }
    float _2298 = (((_1296 * _1248) + _1297) * _1263) * ((cbModelParam._m0[1u].w * (_2281 - _2183)) + _2183);
    float _2300 = (((_1296 * _1250) + _1297) * _1263) * ((cbModelParam._m0[1u].w * (_2283 - _2185)) + _2185);
    float _2302 = (((_1296 * _1251) + _1297) * _1263) * ((cbModelParam._m0[1u].w * (_2285 - _2187)) + _2187);
    float _2305 = fma(_2302, cbSceneParam._m0[89u].z, fma(_2300, cbSceneParam._m0[89u].y, _2298 * cbSceneParam._m0[89u].x));
    float _2308 = fma(_2302, cbSceneParam._m0[90u].z, fma(_2300, cbSceneParam._m0[90u].y, _2298 * cbSceneParam._m0[90u].x));
    float _2311 = fma(_2302, cbSceneParam._m0[91u].z, fma(_2300, cbSceneParam._m0[91u].y, _2298 * cbSceneParam._m0[91u].x));
    vec4 _2319 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1136, _1137));
    float _2321 = _2319.w;
    float _2333 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2321);
    float _2334 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2321);
    float _2335 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2321);
    uvec4 _2339 = floatBitsToUint(cbInstanceData._m0[_1191 + 5u]);
    uint _2341 = _2339.x * 14u;
    uint _2342 = _2341 + 13u;
    float _2349 = _1263 + (-1.0);
    float _2354 = (cbLight._m0[_2342].x * _2349) + 1.0;
    float _2355 = (cbLight._m0[_2342].y * _2349) + 1.0;
    float _2356 = (cbLight._m0[_2342].z * _2349) + 1.0;
    float _2357 = (cbLight._m0[_2342].w * _2349) + 1.0;
    uint _2358 = _2341 + 5u;
    float _2364 = isnan(1.0) ? _2355 : (isnan(_2355) ? 1.0 : min(_2355, 1.0));
    uint _2368 = _2341 + 4u;
    float _2377 = isnan(1.0) ? _2354 : (isnan(_2354) ? 1.0 : min(_2354, 1.0));
    uint _2381 = _2341 | 1u;
    float _2392 = dot(vec3(cbLight._m0[_2341].xyz), vec3(_1056, _1057, _1058));
    float _2395 = dot(vec3(cbLight._m0[_2381].xyz), vec3(_1056, _1057, _1058));
    float _4713 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
    float _4724 = isnan(0.0) ? _2395 : (isnan(_2395) ? 0.0 : max(_2395, 0.0));
    float _2400 = (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0))) * 0.3183098733425140380859375;
    float _2402 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * 0.3183098733425140380859375;
    float _2409 = ((cbLight._m0[_2358].x * _2364) * _2402) + (((cbLight._m0[_2368].x * _2333) * _2377) * _2400);
    float _2410 = ((_2364 * cbLight._m0[_2358].y) * _2402) + (((cbLight._m0[_2368].y * _2334) * _2377) * _2400);
    float _2411 = ((_2364 * cbLight._m0[_2358].z) * _2402) + (((cbLight._m0[_2368].z * _2335) * _2377) * _2400);
    uvec4 _2415 = floatBitsToUint(cbLight._m0[_2341 + 12u]);
    bool _2417 = _2415.x == 0u;
    float _2428;
    float _2430;
    float _2432;
    if (_2417)
    {
        _2428 = _2409;
        _2430 = _2410;
        _2432 = _2411;
    }
    else
    {
        uint _2436 = _2341 + 6u;
        float _2452 = (dot(vec3(cbLight._m0[_2341 + 2u].xyz), vec3(_1056, _1057, _1058)) * 0.5) + 0.5;
        float _2453 = _2452 * _2452;
        float _4735 = isnan(0.0) ? _2453 : (isnan(_2453) ? 0.0 : max(_2453, 0.0));
        float _2454 = isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0));
        float _2455 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
        _2428 = (((cbLight._m0[_2436].x * 0.3183098733425140380859375) * _2454) * _2455) + _2409;
        _2430 = (((cbLight._m0[_2436].y * 0.3183098733425140380859375) * _2454) * _2455) + _2410;
        _2432 = (((cbLight._m0[_2436].z * 0.3183098733425140380859375) * _2454) * _2455) + _2411;
    }
    bool _2435 = _2415.y == 0u;
    float _2473;
    float _2475;
    float _2477;
    if (_2435)
    {
        _2473 = _2428;
        _2475 = _2430;
        _2477 = _2432;
    }
    else
    {
        uint _2646 = _2341 + 7u;
        float _2662 = (dot(vec3(cbLight._m0[_2341 + 3u].xyz), vec3(_1056, _1057, _1058)) * 0.5) + 0.5;
        float _2663 = _2662 * _2662;
        float _4751 = isnan(0.0) ? _2663 : (isnan(_2663) ? 0.0 : max(_2663, 0.0));
        float _2664 = isnan(1.0) ? _4751 : (isnan(_4751) ? 1.0 : min(_4751, 1.0));
        float _2665 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
        _2473 = (((cbLight._m0[_2646].x * 0.3183098733425140380859375) * _2664) * _2665) + _2428;
        _2475 = (((cbLight._m0[_2646].y * 0.3183098733425140380859375) * _2664) * _2665) + _2430;
        _2477 = (((cbLight._m0[_2646].z * 0.3183098733425140380859375) * _2664) * _2665) + _2432;
    }
    uint _2480 = _2341 + 8u;
    float _2493 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2341].w)) * _1178) * 0.949999988079071044921875);
    float _2494 = _2493 * _2493;
    float _2495 = cbLight._m0[_2341].x + _1116;
    float _2496 = cbLight._m0[_2341].y + _1117;
    float _2497 = cbLight._m0[_2341].z + _1118;
    float _2501 = inversesqrt(dot(vec3(_2495, _2496, _2497), vec3(_2495, _2496, _2497)));
    float _2502 = _2501 * _2495;
    float _2503 = _2501 * _2496;
    float _2504 = _2501 * _2497;
    float _2505 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2341].xyz));
    float _4767 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2508 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
    float _4778 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
    float _2509 = isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0));
    float _2510 = dot(vec3(_1056, _1057, _1058), vec3(_2502, _2503, _2504));
    float _4789 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
    float _2513 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
    float _2514 = dot(vec3(cbLight._m0[_2341].xyz), vec3(_2502, _2503, _2504));
    float _4800 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
    float _2518 = _2494 * _2494;
    float _2522 = ((_2513 * _2513) * (_2518 + (-1.0))) + 1.0;
    float _2530 = exp2(log2(1.0 - (isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0)))) * 5.0);
    float _2531 = 0.959999978542327880859375 - _1245;
    float _2533 = 0.959999978542327880859375 - _1246;
    float _2534 = 0.959999978542327880859375 - _1247;
    float _2541 = 1.0 - _2494;
    float _2552 = (0.5 / (((_2509 * ((_2508 * _2541) + _2494)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2541) + _2494) * _2508))) * _2508;
    float _4811 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
    float _2554 = (isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (_2518 / ((_2522 * _2522) * 3.141590118408203125));
    uint _2568 = _2341 + 9u;
    float _2579 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2381].w)) * _1178) * 0.949999988079071044921875);
    float _2580 = _2579 * _2579;
    float _2581 = cbLight._m0[_2381].x + _1116;
    float _2582 = cbLight._m0[_2381].y + _1117;
    float _2583 = cbLight._m0[_2381].z + _1118;
    float _2587 = inversesqrt(dot(vec3(_2581, _2582, _2583), vec3(_2581, _2582, _2583)));
    float _2588 = _2587 * _2581;
    float _2589 = _2587 * _2582;
    float _2590 = _2587 * _2583;
    float _2591 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2381].xyz));
    float _4822 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
    float _2594 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
    float _2595 = dot(vec3(_1056, _1057, _1058), vec3(_2588, _2589, _2590));
    float _4833 = isnan(0.0) ? _2595 : (isnan(_2595) ? 0.0 : max(_2595, 0.0));
    float _2598 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
    float _2599 = dot(vec3(cbLight._m0[_2381].xyz), vec3(_2588, _2589, _2590));
    float _4844 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
    float _2603 = _2580 * _2580;
    float _2607 = ((_2598 * _2598) * (_2603 + (-1.0))) + 1.0;
    float _2614 = exp2(log2(1.0 - (isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0)))) * 5.0);
    float _2621 = 1.0 - _2580;
    float _2631 = (0.5 / (((_2509 * ((_2594 * _2621) + _2580)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2621) + _2580) * _2594))) * _2594;
    float _4855 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2633 = (isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0))) * (_2603 / ((_2607 * _2607) * 3.141590118408203125));
    float _2643 = (((((_2614 * _2531) + _1248) * cbLight._m0[_2568].x) * _2633) * _2364) + ((((cbLight._m0[_2480].x * _2333) * ((_2530 * _2531) + _1248)) * _2554) * _2377);
    float _2644 = (((((_2614 * _2533) + _1250) * cbLight._m0[_2568].y) * _2633) * _2364) + ((((cbLight._m0[_2480].y * _2334) * ((_2530 * _2533) + _1250)) * _2554) * _2377);
    float _2645 = (((((_2614 * _2534) + _1251) * cbLight._m0[_2568].z) * _2633) * _2364) + ((((cbLight._m0[_2480].z * _2335) * ((_2530 * _2534) + _1251)) * _2554) * _2377);
    float _2707;
    float _2709;
    float _2711;
    if (_2417)
    {
        _2707 = _2643;
        _2709 = _2644;
        _2711 = _2645;
    }
    else
    {
        uint _2713 = _2341 + 2u;
        uint _2717 = _2341 + 10u;
        float _2731 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2713].w)) * _1178) * 0.949999988079071044921875);
        float _2732 = _2731 * _2731;
        float _2733 = cbLight._m0[_2713].x + _1116;
        float _2734 = cbLight._m0[_2713].y + _1117;
        float _2735 = cbLight._m0[_2713].z + _1118;
        float _2739 = inversesqrt(dot(vec3(_2733, _2734, _2735), vec3(_2733, _2734, _2735)));
        float _2740 = _2739 * _2733;
        float _2741 = _2739 * _2734;
        float _2742 = _2739 * _2735;
        float _2743 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2713].xyz));
        float _4866 = isnan(0.0) ? _2743 : (isnan(_2743) ? 0.0 : max(_2743, 0.0));
        float _2746 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
        float _2747 = dot(vec3(_1056, _1057, _1058), vec3(_2740, _2741, _2742));
        float _4877 = isnan(0.0) ? _2747 : (isnan(_2747) ? 0.0 : max(_2747, 0.0));
        float _2750 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
        float _2751 = dot(vec3(cbLight._m0[_2713].xyz), vec3(_2740, _2741, _2742));
        float _4888 = isnan(0.0) ? _2751 : (isnan(_2751) ? 0.0 : max(_2751, 0.0));
        float _2755 = _2732 * _2732;
        float _2759 = ((_2750 * _2750) * (_2755 + (-1.0))) + 1.0;
        float _2766 = exp2(log2(1.0 - (isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0)))) * 5.0);
        float _2773 = 1.0 - _2732;
        float _2783 = (0.5 / (((_2509 * ((_2746 * _2773) + _2732)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2773) + _2732) * _2746))) * _2746;
        float _4899 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
        float _2785 = (isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0))) * (_2755 / ((_2759 * _2759) * 3.141590118408203125));
        float _2786 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
        _2707 = (((((_2766 * _2531) + _1248) * cbLight._m0[_2717].x) * _2785) * _2786) + _2643;
        _2709 = (((((_2766 * _2533) + _1250) * cbLight._m0[_2717].y) * _2785) * _2786) + _2644;
        _2711 = (((((_2766 * _2534) + _1251) * cbLight._m0[_2717].z) * _2785) * _2786) + _2645;
    }
    float _2821;
    float _2823;
    float _2825;
    if (_2435)
    {
        _2821 = _2707;
        _2823 = _2709;
        _2825 = _2711;
    }
    else
    {
        uint _2832 = _2341 + 3u;
        uint _2836 = _2341 + 11u;
        float _2850 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2832].w)) * _1178) * 0.949999988079071044921875);
        float _2851 = _2850 * _2850;
        float _2852 = cbLight._m0[_2832].x + _1116;
        float _2853 = cbLight._m0[_2832].y + _1117;
        float _2854 = cbLight._m0[_2832].z + _1118;
        float _2858 = inversesqrt(dot(vec3(_2852, _2853, _2854), vec3(_2852, _2853, _2854)));
        float _2859 = _2858 * _2852;
        float _2860 = _2858 * _2853;
        float _2861 = _2858 * _2854;
        float _2862 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2832].xyz));
        float _4915 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2865 = isnan(1.0) ? _4915 : (isnan(_4915) ? 1.0 : min(_4915, 1.0));
        float _2866 = dot(vec3(_1056, _1057, _1058), vec3(_2859, _2860, _2861));
        float _4926 = isnan(0.0) ? _2866 : (isnan(_2866) ? 0.0 : max(_2866, 0.0));
        float _2869 = isnan(1.0) ? _4926 : (isnan(_4926) ? 1.0 : min(_4926, 1.0));
        float _2870 = dot(vec3(cbLight._m0[_2832].xyz), vec3(_2859, _2860, _2861));
        float _4937 = isnan(0.0) ? _2870 : (isnan(_2870) ? 0.0 : max(_2870, 0.0));
        float _2874 = _2851 * _2851;
        float _2878 = ((_2869 * _2869) * (_2874 + (-1.0))) + 1.0;
        float _2885 = exp2(log2(1.0 - (isnan(1.0) ? _4937 : (isnan(_4937) ? 1.0 : min(_4937, 1.0)))) * 5.0);
        float _2892 = 1.0 - _2851;
        float _2902 = (0.5 / (((_2509 * ((_2865 * _2892) + _2851)) + 9.9999999392252902907785028219223e-09) + (((_2509 * _2892) + _2851) * _2865))) * _2865;
        float _4948 = isnan(0.0) ? _2902 : (isnan(_2902) ? 0.0 : max(_2902, 0.0));
        float _2904 = (isnan(1.0) ? _4948 : (isnan(_4948) ? 1.0 : min(_4948, 1.0))) * (_2874 / ((_2878 * _2878) * 3.141590118408203125));
        float _2905 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
        _2821 = (((((_2885 * _2531) + _1248) * cbLight._m0[_2836].x) * _2904) * _2905) + _2707;
        _2823 = (((((_2885 * _2533) + _1250) * cbLight._m0[_2836].y) * _2904) * _2905) + _2709;
        _2825 = (((((_2885 * _2534) + _1251) * cbLight._m0[_2836].z) * _2904) * _2905) + _2711;
    }
    float _3040;
    float _3042;
    float _3044;
    float _3046;
    float _3048;
    float _3050;
    if (_2339.y == 0u)
    {
        float _2980 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2981 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2980;
        float _2982 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2980;
        float _2983 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2980;
        uvec4 _2995 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2996 = _2995.x;
        uint _3007 = uint((float(_2995.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1137) / _2996))) + floor(float(uint(cbSceneParam._m0[85u].x * _1136) / _2996)));
        float _3017 = (log2(_2983 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3018 = isnan(0.0) ? _3017 : (isnan(_3017) ? 0.0 : max(_3017, 0.0));
        uint _3021 = uint(isnan(14.0) ? _3018 : (isnan(_3018) ? 14.0 : min(_3018, 14.0)));
        uvec4 _3026 = texelFetch(g_lightClusterGridBuffer, int(((_3021 << 2u) + (_3007 << 6u)) >> 2u));
        uint _3027 = _3026.x;
        uint _3028 = _2995.z;
        float _3157;
        float _3159;
        float _3161;
        float _3163;
        float _3165;
        float _3167;
        if (((((1u << ((_3028 >> 4u) & 15u)) + 4294967295u) & _3027) == 0u) || ((_3028 & 240u) == 0u))
        {
            _3157 = 0.0;
            _3159 = 0.0;
            _3161 = 0.0;
            _3163 = 0.0;
            _3165 = 0.0;
            _3167 = 0.0;
        }
        else
        {
            float _3158;
            float _3160;
            float _3162;
            float _3164;
            float _3166;
            float _3168;
            float _3318 = 0.0;
            float _3319 = 0.0;
            float _3320 = 0.0;
            float _3321 = 0.0;
            float _3322 = 0.0;
            float _3323 = 0.0;
            uint _3324 = 0u;
            uint _3333;
            bool _3334;
            for (;;)
            {
                _3333 = texelFetch(g_lightClassification, int((((_3021 << 5u) + (_3007 << 9u)) + (_3324 << 2u)) >> 2u)).x;
                _3334 = _3333 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3334)
                {
                    frontier_phi_66_pred = _3318;
                    frontier_phi_66_pred_1 = _3323;
                    frontier_phi_66_pred_2 = _3322;
                    frontier_phi_66_pred_3 = _3321;
                    frontier_phi_66_pred_4 = _3320;
                    frontier_phi_66_pred_5 = _3319;
                }
                else
                {
                    float _3463;
                    float _3464;
                    float _3465;
                    float _3466;
                    float _3467;
                    float _3468;
                    uint _3469;
                    _3463 = _3318;
                    _3464 = _3319;
                    _3465 = _3320;
                    _3466 = _3321;
                    _3467 = _3322;
                    _3468 = _3323;
                    _3469 = _3333;
                    float _3390;
                    float _3391;
                    float _3392;
                    float _3393;
                    float _3394;
                    float _3395;
                    for (;;)
                    {
                        uint _3473 = uint(findLSB(_3469)) + (_3324 << 5u);
                        uint _3470 = (_3469 + 4294967295u) & _3469;
                        uint _3475 = _3473 * 48u;
                        vec4 _3489 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3475)).x, texelFetch(g_PointLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3475 + 3u)).x));
                        uint _3495 = (_3473 * 48u) + 4u;
                        vec4 _3508 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3495)).x, texelFetch(g_PointLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3495 + 3u)).x));
                        uint _3514 = (_3473 * 48u) + 8u;
                        vec3 _3525 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3514)).x, texelFetch(g_PointLightRenderingBuffer, int(_3514 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3514 + 2u)).x));
                        float _3529 = _3489.x - _2981;
                        float _3530 = _3489.y - _2982;
                        float _3531 = _3489.z - _2983;
                        float _3532 = dot(vec3(_3529, _3530, _3531), vec3(_3529, _3530, _3531));
                        float _3535 = inversesqrt(_3532);
                        float _3536 = _3535 * _3529;
                        float _3537 = _3535 * _3530;
                        float _3538 = _3535 * _3531;
                        float _3539 = dot(vec3(_1159, _1162, _1165), vec3(_3536, _3537, _3538));
                        float _3544 = 1.0 - (_3532 * _3489.w);
                        float _4974 = isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0));
                        float _3545 = isnan(1.0) ? _4974 : (isnan(_4974) ? 1.0 : min(_4974, 1.0));
                        float _3546 = sqrt(_3532) * _3508.w;
                        float _3549 = 1.39999997615814208984375 / (_3546 + 1.39999997615814208984375);
                        float _3550 = _3549 * _3549;
                        float _3553 = ((1.0 - _3550) * _3539) + _3550;
                        float _3556 = _3546 * _3546;
                        float _3560 = ((isnan(0.0) ? _3553 : (isnan(_3553) ? 0.0 : max(_3553, 0.0))) * _3545) / ((_3556 * 0.699999988079071044921875) + 1.0);
                        float _3564 = (-0.0) - _2981;
                        float _3565 = (-0.0) - _2982;
                        float _3566 = (-0.0) - _2983;
                        float _3570 = inversesqrt(dot(vec3(_3564, _3565, _3566), vec3(_3564, _3565, _3566)));
                        float _3571 = _3570 * _3564;
                        float _3572 = _3570 * _3565;
                        float _3573 = _3570 * _3566;
                        float _3581 = exp2(log2(1.0 / ((_3556 * 3.5) + 5.0)) * 0.25);
                        float _3582 = 1.0 - _1279;
                        float _3589 = sqrt(1.0 - ((1.0 - (_3582 * _3582)) * (1.0 - (_3581 * _3581))));
                        float _3590 = _3589 * _3589;
                        float _3591 = _3590 * _3590;
                        float _3592 = _3571 + _3536;
                        float _3593 = _3572 + _3537;
                        float _3594 = _3573 + _3538;
                        float _3598 = inversesqrt(dot(vec3(_3592, _3593, _3594), vec3(_3592, _3593, _3594)));
                        float _3602 = dot(vec3(_1159, _1162, _1165), vec3(_3571, _3572, _3573));
                        float _4990 = isnan(0.0) ? _3602 : (isnan(_3602) ? 0.0 : max(_3602, 0.0));
                        float _3605 = isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0));
                        float _3606 = dot(vec3(_1159, _1162, _1165), vec3(_3598 * _3592, _3598 * _3593, _3598 * _3594));
                        float _5001 = isnan(0.0) ? _3606 : (isnan(_3606) ? 0.0 : max(_3606, 0.0));
                        float _3609 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
                        float _3613 = ((_3609 * _3609) * (_3591 + (-1.0))) + 1.0;
                        float _3614 = _3549 * _3590;
                        float _3615 = _3614 * _3614;
                        float _3618 = ((1.0 - _3615) * _3539) + _3615;
                        float _5012 = isnan(0.0) ? _3618 : (isnan(_3618) ? 0.0 : max(_3618, 0.0));
                        float _3619 = isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0));
                        float _3620 = 1.0 - _3590;
                        float _3630 = (0.5 / (((_3619 * ((_3605 * _3620) + _3590)) + 9.9999999392252902907785028219223e-09) + (((_3619 * _3620) + _3590) * _3605))) * _3619;
                        float _5023 = isnan(0.0) ? _3630 : (isnan(_3630) ? 0.0 : max(_3630, 0.0));
                        float _3641 = (((_3591 * 3.1415927410125732421875) * (isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0)))) / ((_3613 * _3613) * ((_3556 * 2.1991131305694580078125) + 3.141590118408203125))) * _3545;
                        _3393 = (_3560 * _3508.x) + _3466;
                        _3394 = (_3560 * _3508.y) + _3467;
                        _3395 = (_3560 * _3508.z) + _3468;
                        _3390 = (_3641 * _3525.x) + _3463;
                        _3391 = (_3641 * _3525.y) + _3464;
                        _3392 = (_3641 * _3525.z) + _3465;
                        if (_3470 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3463 = _3390;
                            _3464 = _3391;
                            _3465 = _3392;
                            _3466 = _3393;
                            _3467 = _3394;
                            _3468 = _3395;
                            _3469 = _3470;
                        }
                    }
                    frontier_phi_66_pred = _3390;
                    frontier_phi_66_pred_1 = _3395;
                    frontier_phi_66_pred_2 = _3394;
                    frontier_phi_66_pred_3 = _3393;
                    frontier_phi_66_pred_4 = _3392;
                    frontier_phi_66_pred_5 = _3391;
                }
                _3158 = frontier_phi_66_pred;
                _3168 = frontier_phi_66_pred_1;
                _3166 = frontier_phi_66_pred_2;
                _3164 = frontier_phi_66_pred_3;
                _3162 = frontier_phi_66_pred_4;
                _3160 = frontier_phi_66_pred_5;
                uint _3325 = _3324 + 1u;
                if (_3325 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3318 = _3158;
                    _3319 = _3160;
                    _3320 = _3162;
                    _3321 = _3164;
                    _3322 = _3166;
                    _3323 = _3168;
                    _3324 = _3325;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3157 = _3158;
            _3159 = _3160;
            _3161 = _3162;
            _3163 = _3164;
            _3165 = _3166;
            _3167 = _3168;
        }
        uvec4 _3171 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3172 = _3171.z;
        uint _3174 = (_3172 >> 8u) & 15u;
        float _3286;
        float _3288;
        float _3290;
        float _3292;
        float _3294;
        float _3296;
        if (((4294967295u << _3174) & _3027) == 0u)
        {
            _3286 = _3157;
            _3288 = _3159;
            _3290 = _3161;
            _3292 = _3163;
            _3294 = _3165;
            _3296 = _3167;
        }
        else
        {
            float _3311 = inversesqrt(dot(vec3(_2981, _2982, _2983), vec3(_2981, _2982, _2983)));
            float _3312 = _3311 * _2981;
            float _3313 = _3311 * _2982;
            float _3314 = _3311 * _2983;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_3174 < ((_3172 >> 12u) & 15u))
            {
                float _3287;
                float _3289;
                float _3291;
                float _3293;
                float _3295;
                float _3297;
                float _3446 = _3157;
                float _3447 = _3159;
                float _3448 = _3161;
                float _3449 = _3163;
                float _3450 = _3165;
                float _3451 = _3167;
                uint _3452 = _3174;
                uint _3461;
                bool _3462;
                for (;;)
                {
                    _3461 = texelFetch(g_lightClassification, int((((_3021 << 5u) + (_3007 << 9u)) + (_3452 << 2u)) >> 2u)).x;
                    _3462 = _3461 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3462)
                    {
                        frontier_phi_77_pred = _3451;
                        frontier_phi_77_pred_1 = _3450;
                        frontier_phi_77_pred_2 = _3449;
                        frontier_phi_77_pred_3 = _3448;
                        frontier_phi_77_pred_4 = _3447;
                        frontier_phi_77_pred_5 = _3446;
                    }
                    else
                    {
                        float _3655;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3948;
                        float _3949;
                        float _3950;
                        float _3951;
                        float _3952;
                        float _3953;
                        float _3668 = _3446;
                        float _3669 = _3447;
                        float _3670 = _3448;
                        float _3671 = _3449;
                        float _3672 = _3450;
                        float _3673 = _3451;
                        uint _3674 = _3461;
                        uint _3675;
                        vec4 _3700;
                        float _3701;
                        vec4 _3716;
                        vec3 _3728;
                        vec4 _3743;
                        vec4 _3758;
                        float _3804;
                        bool _3805;
                        for (;;)
                        {
                            uint _3685 = ((_3452 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3674));
                            _3675 = (_3674 + 4294967295u) & _3674;
                            uint _3687 = _3685 * 40u;
                            _3700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 3u)).x));
                            _3701 = _3700.w;
                            uint _3703 = (_3685 * 40u) + 4u;
                            _3716 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3703)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3703 + 3u)).x));
                            uint _3718 = (_3685 * 40u) + 8u;
                            _3728 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3718 + 2u)).x));
                            uint _3730 = (_3685 * 40u) + 16u;
                            _3743 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3730)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3730 + 3u)).x));
                            uint _3745 = (_3685 * 40u) + 20u;
                            _3758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3745 + 3u)).x));
                            uint _3760 = (_3685 * 40u) + 24u;
                            vec4 _3773 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3760)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3760 + 3u)).x));
                            uint _3779 = (_3685 * 40u) + 28u;
                            vec4 _3792 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3779)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3779 + 3u)).x));
                            _3804 = fma(_2983, _3792.z, fma(_2982, _3792.y, _3792.x * _2981)) + _3792.w;
                            _3805 = !((fma(_2983, _3773.z, fma(_2982, _3773.y, _3773.x * _2981)) + _3773.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3805)
                            {
                                float _3832 = _3700.x - _2981;
                                float _3833 = _3700.y - _2982;
                                float _3834 = _3700.z - _2983;
                                float _3835 = dot(vec3(_3832, _3833, _3834), vec3(_3832, _3833, _3834));
                                float _3838 = inversesqrt(_3835);
                                float _3839 = _3838 * _3832;
                                float _3840 = _3838 * _3833;
                                float _3841 = _3838 * _3834;
                                float _3845 = 1.0 - (_3835 / (_3701 * _3701));
                                float _5034 = isnan(0.0) ? _3845 : (isnan(_3845) ? 0.0 : max(_3845, 0.0));
                                float _3846 = isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0));
                                float _3850 = sqrt(_3835) * _3716.w;
                                float _3852 = 1.39999997615814208984375 / (_3850 + 1.39999997615814208984375);
                                float _3853 = _3852 * _3852;
                                float _3856 = ((1.0 - _3853) * dot(vec3(_3839, _3840, _3841), vec3(_1159, _1162, _1165))) + _3853;
                                float _3859 = _3850 * _3850;
                                float _3863 = (fma(_2983, _3743.z, fma(_2982, _3743.y, _3743.x * _2981)) + _3743.w) / _3804;
                                float _3864 = (fma(_2983, _3758.z, fma(_2982, _3758.y, _3758.x * _2981)) + _3758.w) / _3804;
                                float _3868 = 1.0 - dot(vec2(_3863, _3864), vec2(_3863, _3864));
                                float _5050 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3869 = isnan(1.0) ? _5050 : (isnan(_5050) ? 1.0 : min(_5050, 1.0));
                                float _3870 = _3869 * (((isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0))) * _3846) / ((_3859 * 0.699999988079071044921875) + 1.0));
                                float _3882 = exp2(log2(1.0 / ((_3859 * 3.5) + 5.0)) * 0.25);
                                float _3883 = 1.0 - _1279;
                                float _3890 = sqrt(1.0 - ((1.0 - (_3883 * _3883)) * (1.0 - (_3882 * _3882))));
                                float _3891 = _3890 * _3890;
                                float _3892 = _3891 * _3891;
                                float _3893 = _3839 - _3312;
                                float _3894 = _3840 - _3313;
                                float _3895 = _3841 - _3314;
                                float _3899 = inversesqrt(dot(vec3(_3893, _3894, _3895), vec3(_3893, _3894, _3895)));
                                float _3903 = dot(vec3(_1159, _1162, _1165), vec3((-0.0) - _3312, (-0.0) - _3313, (-0.0) - _3314));
                                float _5061 = isnan(0.0) ? _3903 : (isnan(_3903) ? 0.0 : max(_3903, 0.0));
                                float _3906 = isnan(1.0) ? _5061 : (isnan(_5061) ? 1.0 : min(_5061, 1.0));
                                float _3907 = dot(vec3(_1159, _1162, _1165), vec3(_3899 * _3893, _3899 * _3894, _3899 * _3895));
                                float _5072 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3910 = isnan(1.0) ? _5072 : (isnan(_5072) ? 1.0 : min(_5072, 1.0));
                                float _3914 = ((_3910 * _3910) * (_3892 + (-1.0))) + 1.0;
                                float _3915 = _3852 * _3891;
                                float _3916 = _3915 * _3915;
                                float _3922 = ((1.0 - _3916) * dot(vec3(_1159, _1162, _1165), vec3(_3839, _3840, _3841))) + _3916;
                                float _5083 = isnan(0.0) ? _3922 : (isnan(_3922) ? 0.0 : max(_3922, 0.0));
                                float _3923 = isnan(1.0) ? _5083 : (isnan(_5083) ? 1.0 : min(_5083, 1.0));
                                float _3924 = 1.0 - _3891;
                                float _3934 = (0.5 / (((_3923 * ((_3906 * _3924) + _3891)) + 9.9999999392252902907785028219223e-09) + (((_3923 * _3924) + _3891) * _3906))) * _3923;
                                float _5094 = isnan(0.0) ? _3934 : (isnan(_3934) ? 0.0 : max(_3934, 0.0));
                                float _3944 = (_3869 * _3846) * (((_3892 * 3.1415927410125732421875) * (isnan(1.0) ? _5094 : (isnan(_5094) ? 1.0 : min(_5094, 1.0)))) / ((_3914 * _3914) * ((_3859 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3870 * _3716.y;
                                frontier_phi_83_pred_1 = _3870 * _3716.x;
                                frontier_phi_83_pred_2 = _3944 * _3728.z;
                                frontier_phi_83_pred_3 = _3944 * _3728.y;
                                frontier_phi_83_pred_4 = _3944 * _3728.x;
                                frontier_phi_83_pred_5 = _3870 * _3716.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3952 = frontier_phi_83_pred;
                            _3951 = frontier_phi_83_pred_1;
                            _3950 = frontier_phi_83_pred_2;
                            _3949 = frontier_phi_83_pred_3;
                            _3948 = frontier_phi_83_pred_4;
                            _3953 = frontier_phi_83_pred_5;
                            _3658 = _3951 + _3671;
                            _3659 = _3952 + _3672;
                            _3660 = _3953 + _3673;
                            _3655 = _3948 + _3668;
                            _3656 = _3949 + _3669;
                            _3657 = _3950 + _3670;
                            if (_3675 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3668 = _3655;
                                _3669 = _3656;
                                _3670 = _3657;
                                _3671 = _3658;
                                _3672 = _3659;
                                _3673 = _3660;
                                _3674 = _3675;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3660;
                        frontier_phi_77_pred_1 = _3659;
                        frontier_phi_77_pred_2 = _3658;
                        frontier_phi_77_pred_3 = _3657;
                        frontier_phi_77_pred_4 = _3656;
                        frontier_phi_77_pred_5 = _3655;
                    }
                    _3297 = frontier_phi_77_pred;
                    _3295 = frontier_phi_77_pred_1;
                    _3293 = frontier_phi_77_pred_2;
                    _3291 = frontier_phi_77_pred_3;
                    _3289 = frontier_phi_77_pred_4;
                    _3287 = frontier_phi_77_pred_5;
                    uint _3453 = _3452 + 1u;
                    if (_3453 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3446 = _3287;
                        _3447 = _3289;
                        _3448 = _3291;
                        _3449 = _3293;
                        _3450 = _3295;
                        _3451 = _3297;
                        _3452 = _3453;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3291;
                frontier_phi_58_59_ladder_1 = _3297;
                frontier_phi_58_59_ladder_2 = _3295;
                frontier_phi_58_59_ladder_3 = _3293;
                frontier_phi_58_59_ladder_4 = _3289;
                frontier_phi_58_59_ladder_5 = _3287;
            }
            else
            {
                frontier_phi_58_59_ladder = _3161;
                frontier_phi_58_59_ladder_1 = _3167;
                frontier_phi_58_59_ladder_2 = _3165;
                frontier_phi_58_59_ladder_3 = _3163;
                frontier_phi_58_59_ladder_4 = _3159;
                frontier_phi_58_59_ladder_5 = _3157;
            }
            _3286 = frontier_phi_58_59_ladder_5;
            _3288 = frontier_phi_58_59_ladder_4;
            _3290 = frontier_phi_58_59_ladder;
            _3292 = frontier_phi_58_59_ladder_3;
            _3294 = frontier_phi_58_59_ladder_2;
            _3296 = frontier_phi_58_59_ladder_1;
        }
        float _3301 = isnan(1.0) ? _1263 : (isnan(_1263) ? 1.0 : min(_1263, 1.0));
        _3040 = (_3301 * _3292) + _2473;
        _3042 = (_3301 * _3294) + _2475;
        _3044 = (_3301 * _3296) + _2477;
        _3046 = ((_3286 * _1248) * _3301) + _2821;
        _3048 = ((_3288 * _1250) * _3301) + _2823;
        _3050 = ((_3290 * _1251) * _3301) + _2825;
    }
    else
    {
        _3040 = _2473;
        _3042 = _2475;
        _3044 = _2477;
        _3046 = _2821;
        _3048 = _2823;
        _3050 = _2825;
    }
    uint _3056 = _1192 + uint(cbMatDynParam._m0[0u].w);
    float _3062 = cbInstanceData._m0[_3056].x * ((((cbMtdParam._m0[22u].x * _969.x) * cbMtdParam._m0[32u].x) * _990) + _759);
    float _3063 = cbInstanceData._m0[_3056].y * ((((cbMtdParam._m0[22u].y * _969.y) * cbMtdParam._m0[32u].x) * _990) + _760);
    float _3064 = cbInstanceData._m0[_3056].z * ((((cbMtdParam._m0[22u].z * _969.z) * cbMtdParam._m0[32u].x) * _990) + _761);
    float _5110 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _5121 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
    float _5132 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    float _3081 = (((isnan(1.0) ? _5110 : (isnan(_5110) ? 1.0 : min(_5110, 1.0))) * (_3040 + ((isnan(0.0) ? _2015 : (isnan(_2015) ? 0.0 : max(_2015, 0.0))) * _1263))) + ((_3046 + ((isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0))) * _2092)) * cbPerFrame._m0[3u].x)) + _3062;
    float _3083 = (_3063 + ((_3048 + ((isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0))) * _2092)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5121 : (isnan(_5121) ? 1.0 : min(_5121, 1.0))) * (_3042 + ((isnan(0.0) ? _2018 : (isnan(_2018) ? 0.0 : max(_2018, 0.0))) * _1263)));
    float _3085 = (_3064 + ((_3050 + ((isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0))) * _2092)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5132 : (isnan(_5132) ? 1.0 : min(_5132, 1.0))) * (_3044 + ((isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0))) * _1263)));
    float _3086 = isnan(0.0) ? _3081 : (isnan(_3081) ? 0.0 : max(_3081, 0.0));
    float _3087 = isnan(0.0) ? _3083 : (isnan(_3083) ? 0.0 : max(_3083, 0.0));
    float _3088 = isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : max(_3085, 0.0));
    float _3094 = cbMtdParam._m0[2u].x * _3062;
    float _3095 = cbMtdParam._m0[2u].y * _3063;
    float _3096 = cbMtdParam._m0[2u].z * _3064;
    float _5158 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3098 = isnan(1.0) ? _5158 : (isnan(_5158) ? 1.0 : min(_5158, 1.0));
    uint _3099 = _1191 + 6u;
    float _3107 = _1136 / cbSceneParam._m0[86u].x;
    float _3108 = _1137 / cbSceneParam._m0[86u].y;
    vec4 _3122 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3107, _3108, (log2((isnan(cbSceneParam._m0[77u].w) ? _1079 : (isnan(_1079) ? cbSceneParam._m0[77u].w : min(_1079, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3124 = _3122.x;
    float _3125 = _3122.y;
    float _3126 = _3122.z;
    float _3127 = _3122.w;
    float _3219;
    float _3221;
    float _3223;
    float _3225;
    if (_1079 > cbSceneParam._m0[78u].w)
    {
        float _3182 = isnan(_1079) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1079 : min(cbSceneParam._m0[80u].w, _1079));
        float _3183 = _3182 / _1079;
        float _3194 = _3183 * _1109;
        float _3195 = _1110 * _3183;
        float _3196 = (-0.0) - _3195;
        float _3197 = _3183 * _1111;
        float _3199 = (cbSceneParam._m0[77u].w * _3196) / _3182;
        float _3200 = _3199 + cbSceneParam._m0[79u].w;
        float _3201 = cbSceneParam._m0[79u].w - _3195;
        float _3207 = sqrt(((_3194 * _3194) + (_3195 * _3195)) + (_3197 * _3197));
        float _3210 = (1.0 - (cbSceneParam._m0[77u].w / _3182)) * _3207;
        float _3215 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3217 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3403;
        if (abs((_3196 - _3199) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3403 = ((((_3200 > 0.0) ? exp2(_3215 * _3200) : (2.0 - exp2(_3217 * _3200))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3210;
        }
        else
        {
            float _3347 = 1.0 / cbSceneParam._m0[80u].x;
            float _3348 = isnan(_3201) ? _3200 : (isnan(_3200) ? _3201 : max(_3200, _3201));
            float _3349 = isnan(_3201) ? _3200 : (isnan(_3200) ? _3201 : min(_3200, _3201));
            float _3358 = isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : min(_3348, 0.0));
            float _3359 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : min(_3349, 0.0));
            _3403 = ((abs(_3207 / _3196) * cbSceneParam._m0[80u].y) * ((((_3358 - _3359) * 2.0) - ((exp2(_3215 * (isnan(0.0) ? _3348 : (isnan(_3348) ? 0.0 : max(_3348, 0.0)))) - exp2(_3215 * (isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0))))) * _3347)) - ((exp2(_3217 * _3358) - exp2(_3217 * _3359)) * _3347))) + (_3210 * cbSceneParam._m0[80u].z);
        }
        vec4 _3405 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3107, _3108, 1.0), 0.0);
        float _3414 = exp2((_3403 * (-1.44269502162933349609375)) * (1.0 - _3405.w));
        float _3415 = log2(_3414);
        float _3431 = log2(_3127);
        _3219 = (exp2(_3431 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].x)) * _3405.x) / cbSceneParam._m0[78u].x)) + _3124;
        _3221 = (exp2(_3431 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].y)) * _3405.y) / cbSceneParam._m0[78u].y)) + _3125;
        _3223 = (exp2(_3431 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3415 * cbSceneParam._m0[78u].z)) * _3405.z) / cbSceneParam._m0[78u].z)) + _3126;
        _3225 = _3414 * _3127;
    }
    else
    {
        _3219 = _3124;
        _3221 = _3125;
        _3223 = _3126;
        _3225 = _3127;
    }
    bool _3441;
    vec4 _3235;
    vec4 _3257;
    float _3259;
    float _3263;
    float _3264;
    float _3265;
    float _3268;
    float _3271;
    float _3274;
    float _3275;
    bool _3285;
    for (;;)
    {
        _3235 = cbMatDynParam._m0[0u];
        float _3237 = roundEven(_3235.y);
        bool _3238 = _3237 == 3.0;
        float _3239 = log2(_3225);
        float _3243 = exp2(_3239 * cbSceneParam._m0[78u].x);
        float _3244 = exp2(_3239 * cbSceneParam._m0[78u].y);
        float _3245 = exp2(_3239 * cbSceneParam._m0[78u].z);
        float _3246 = _3243 * _3086;
        float _3247 = _3244 * _3087;
        float _3248 = _3245 * _3088;
        float _3255 = _1125 + (-0.5);
        _3257 = cbMtdParam._m0[1u];
        _3259 = _3257.y * _3255;
        float _3262 = (_3237 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3263 = _3262 * (_3238 ? _3246 : (_3246 + (cbSceneParam._m0[72u].w * _3219)));
        _3264 = _3262 * (_3238 ? _3247 : (_3247 + (cbSceneParam._m0[72u].w * _3221)));
        _3265 = _3262 * (_3238 ? _3248 : (_3248 + (cbSceneParam._m0[72u].w * _3223)));
        _3268 = ((_3094 * _3098) * _3243) * _3262;
        _3271 = ((_3095 * _3098) * _3244) * _3262;
        _3274 = ((_3096 * _3098) * _3245) * _3262;
        _3275 = _3255 * 0.999000012874603271484375;
        _3285 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3285)
        {
            if ((cbInstanceData._m0[_1191 + 7u].x + _3275) < 0.5)
            {
                _3441 = true;
                break;
            }
        }
        uint _3382 = _1192 + uint(_3235.w);
        if ((cbInstanceData._m0[_3382].w < 1.0) && ((cbInstanceData._m0[_3382].w + _3275) < 0.5))
        {
            _3441 = true;
            break;
        }
        if ((_3259 + 1.0) < _3257.x)
        {
            _3441 = true;
            break;
        }
        _3441 = false;
        break;
    }
    float _3646;
    if (_3441)
    {
        discard_state = true;
        _3646 = 0.0;
    }
    else
    {
        _3646 = cbInstanceData._m0[_3099].w;
    }
    SV_Target.x = _3263;
    SV_Target.y = _3264;
    SV_Target.z = _3265;
    SV_Target.w = _3646;
    SV_Target_1.x = _3268;
    SV_Target_1.y = _3271;
    SV_Target_1.z = _3274;
    SV_Target_1.w = cbInstanceData._m0[_3099].w;
    discard_exit();
}


