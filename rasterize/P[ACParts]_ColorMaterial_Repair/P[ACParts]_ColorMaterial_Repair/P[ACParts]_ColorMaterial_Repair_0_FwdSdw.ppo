#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1616;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _239 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _240 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _241 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _247 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _254 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _261 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _285 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _292 = log2(0.0);
    float _294 = exp2(_292 * cbMtdParam._m0[31u].z);
    float _298 = _294 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.x) * _294);
    float _299 = _294 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.y) * _294);
    float _300 = _294 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.z) * _294);
    float _301 = isnan(0.0) ? _298 : (isnan(_298) ? 0.0 : max(_298, 0.0));
    float _302 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _303 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _304 = isnan(1.0) ? _301 : (isnan(_301) ? 1.0 : min(_301, 1.0));
    float _306 = isnan(1.0) ? _302 : (isnan(_302) ? 1.0 : min(_302, 1.0));
    float _307 = isnan(1.0) ? _303 : (isnan(_303) ? 1.0 : min(_303, 1.0));
    vec4 _323 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _327 = _323.z;
    float _328 = _323.w;
    float _329 = 1.0 - _328;
    float _336 = exp2(log2((1.0 - (_329 * _327)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _337 = isnan(0.0) ? _336 : (isnan(_336) ? 0.0 : max(_336, 0.0));
    float _338 = isnan(1.0) ? _337 : (isnan(_337) ? 1.0 : min(_337, 1.0));
    float _350 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_329 * _329) * _327))) * cbMtdParam._m0[34u].w);
    float _351 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    vec4 _365 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _368 = _365.y;
    float _371 = (_368 * ((isnan(1.0) ? _351 : (isnan(_351) ? 1.0 : min(_351, 1.0))) - _328)) + _328;
    vec4 _383 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _205[6];
    float _206[6];
    float _207[6];
    _205[0u] = cbMtdParam._m0[12u].x;
    _206[0u] = cbMtdParam._m0[12u].y;
    _207[0u] = cbMtdParam._m0[12u].z;
    _205[1u] = cbMtdParam._m0[13u].x;
    _206[1u] = cbMtdParam._m0[13u].y;
    _207[1u] = cbMtdParam._m0[13u].z;
    _205[2u] = cbMtdParam._m0[14u].x;
    _206[2u] = cbMtdParam._m0[14u].y;
    _207[2u] = cbMtdParam._m0[14u].z;
    _205[3u] = cbMtdParam._m0[15u].x;
    _206[3u] = cbMtdParam._m0[15u].y;
    _207[3u] = cbMtdParam._m0[15u].z;
    _205[4u] = cbMtdParam._m0[16u].x;
    _206[4u] = cbMtdParam._m0[16u].y;
    _207[4u] = cbMtdParam._m0[16u].z;
    _205[5u] = cbMtdParam._m0[11u].x;
    _206[5u] = cbMtdParam._m0[11u].y;
    _207[5u] = cbMtdParam._m0[11u].z;
    float _451 = (_365.x + (-0.02500000037252902984619140625)) * 8.0;
    float _453 = roundEven(_451);
    float _454 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    uint _457 = uint(int(isnan(5.0) ? _454 : (isnan(_454) ? 5.0 : min(_454, 5.0))));
    float _212[6];
    float _213[6];
    float _214[6];
    _212[0u] = 1.0;
    _213[0u] = 1.0;
    _214[0u] = 1.0;
    _212[1u] = cbMtdParam._m0[23u].x;
    _213[1u] = cbMtdParam._m0[23u].y;
    _214[1u] = cbMtdParam._m0[23u].z;
    _212[2u] = cbMtdParam._m0[21u].x;
    _213[2u] = cbMtdParam._m0[21u].y;
    _214[2u] = cbMtdParam._m0[21u].z;
    _212[3u] = cbMtdParam._m0[19u].x;
    _213[3u] = cbMtdParam._m0[19u].y;
    _214[3u] = cbMtdParam._m0[19u].z;
    _212[4u] = cbMtdParam._m0[18u].x;
    _213[4u] = cbMtdParam._m0[18u].y;
    _214[4u] = cbMtdParam._m0[18u].z;
    _212[5u] = cbMtdParam._m0[17u].x;
    _213[5u] = cbMtdParam._m0[17u].y;
    _214[5u] = cbMtdParam._m0[17u].z;
    float _547 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[38u].w * TEXCOORD.x) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[39u].x * TEXCOORD.y) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _548 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0));
    uint _550 = uint(int(isnan(5.0) ? _548 : (isnan(_548) ? 5.0 : min(_548, 5.0))));
    float _208[6];
    _208[0u] = 1.0;
    _208[1u] = cbMtdParam._m0[23u].w;
    _208[2u] = cbMtdParam._m0[21u].w;
    _208[3u] = cbMtdParam._m0[19u].w;
    _208[4u] = cbMtdParam._m0[18u].w;
    _208[5u] = cbMtdParam._m0[17u].w;
    float _587 = ((((_205[_457] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_212[_550] - _205[_457])) * _208[_457])) * _368) + cbMtdParam._m0[10u].x) * _383.x;
    float _588 = ((((_206[_457] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_213[_550] - _206[_457])) * _208[_457])) * _368) + cbMtdParam._m0[10u].y) * _383.y;
    float _589 = ((((_207[_457] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_214[_550] - _207[_457])) * _208[_457])) * _368) + cbMtdParam._m0[10u].z) * _383.z;
    vec4 _601 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _621 = (((cbMtdParam._m0[9u].x * _601.x) - _587) * _371) + _587;
    float _622 = (((cbMtdParam._m0[9u].y * _601.y) - _588) * _371) + _588;
    float _623 = (((cbMtdParam._m0[9u].z * _601.z) - _589) * _371) + _589;
    vec4 _635 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _655 = (((cbMtdParam._m0[20u].x * _635.x) - _621) * _338) + _621;
    float _656 = (((cbMtdParam._m0[20u].y * _635.y) - _622) * _338) + _622;
    float _657 = (((cbMtdParam._m0[20u].z * _635.z) - _623) * _338) + _623;
    vec4 _670 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _209[6];
    float _210[6];
    float _211[6];
    _209[0u] = cbMtdParam._m0[24u].x;
    _210[0u] = cbMtdParam._m0[24u].y;
    _211[0u] = cbMtdParam._m0[24u].z;
    _209[1u] = cbMtdParam._m0[25u].x;
    _210[1u] = cbMtdParam._m0[25u].y;
    _211[1u] = cbMtdParam._m0[25u].z;
    _209[2u] = cbMtdParam._m0[26u].x;
    _210[2u] = cbMtdParam._m0[26u].y;
    _211[2u] = cbMtdParam._m0[26u].z;
    _209[3u] = cbMtdParam._m0[27u].x;
    _210[3u] = cbMtdParam._m0[27u].y;
    _211[3u] = cbMtdParam._m0[27u].z;
    _209[4u] = cbMtdParam._m0[28u].x;
    _210[4u] = cbMtdParam._m0[28u].y;
    _211[4u] = cbMtdParam._m0[28u].z;
    _209[5u] = cbMtdParam._m0[29u].x;
    _210[5u] = cbMtdParam._m0[29u].y;
    _211[5u] = cbMtdParam._m0[29u].z;
    float _757 = _209[_457] * _368;
    float _758 = _210[_457] * _368;
    float _759 = _211[_457] * _368;
    float _760 = _757 + ((_285.x * 4.5) * ((((cbMtdParam._m0[30u].x * _670.x) - _655) * _304) + _655));
    float _761 = _758 + ((_285.y * 4.5) * ((((cbMtdParam._m0[30u].y * _670.y) - _656) * _306) + _656));
    float _762 = _759 + ((_285.z * 4.5) * ((((cbMtdParam._m0[30u].z * _670.z) - _657) * _307) + _657));
    float _200[5];
    float _201[5];
    _200[0u] = cbMtdParam._m0[35u].y;
    _201[0u] = cbMtdParam._m0[35u].z;
    _200[1u] = cbMtdParam._m0[36u].w;
    _201[1u] = cbMtdParam._m0[37u].x;
    _200[2u] = cbMtdParam._m0[37u].y;
    _201[2u] = cbMtdParam._m0[37u].z;
    _200[3u] = cbMtdParam._m0[37u].w;
    _201[3u] = cbMtdParam._m0[38u].x;
    _200[4u] = cbMtdParam._m0[38u].y;
    _201[4u] = cbMtdParam._m0[38u].z;
    float _790 = roundEven(5.0 - _451);
    float _791 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
    float _792 = isnan(4.0) ? _791 : (isnan(_791) ? 4.0 : min(_791, 4.0));
    float _794 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    uint _796 = uint(int(isnan(4.0) ? _794 : (isnan(_794) ? 4.0 : min(_794, 4.0))));
    float _805 = ((cbMtdParam._m0[39u].z - _201[_796]) * _371) + _201[_796];
    float _813 = ((cbMtdParam._m0[40u].x - _805) * _338) + _805;
    float _818 = ((cbMtdParam._m0[40u].z - _813) * _304) + _813;
    vec4 _832 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _834 = _832.x;
    float _835 = _832.y;
    float _837 = _832.z + _200[_796];
    vec4 _849 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _857 = (((cbMtdParam._m0[39u].y - _837) + _849.z) * _371) + _837;
    vec4 _869 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _877 = (((cbMtdParam._m0[39u].w - _857) + _869.z) * _338) + _857;
    float _883 = ((((_327 * 2.0) * _877) - _877) * cbMtdParam._m0[33u].w) + _877;
    vec4 _895 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _903 = (((_895.z + cbMtdParam._m0[40u].y) - _883) * _307) + _883;
    float _934 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _965 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * ((_934 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_938 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _980 = (-0.0) - ((_938 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _984 = (_938 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _985 = isnan(_984) ? _980 : (isnan(_980) ? _984 : min(_980, _984));
    float _4349 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
    float _986 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
    float _1011 = ((_849.x - _834) * _371) + _834;
    float _1012 = ((_849.y - _835) * _371) + _835;
    float _1017 = ((_869.x - _1011) * _338) + _1011;
    float _1018 = ((_869.y - _1012) * _338) + _1012;
    float _1027 = ((((_895.x - _1017) * _304) + _1017) * 2.0) + (-1.0);
    float _1028 = ((((_895.y - _1018) * _306) + _1018) * 2.0) + (-1.0);
    float _1029 = dot(vec2(_1027, _1028), vec2(_1027, _1028));
    float _4360 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
    float _1034 = sqrt(1.0 - (isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))));
    float _1037 = (cbMtdParam._m0[34u].x * ((_323.x * 2.0) + (-1.0))) + _1027;
    float _1038 = (cbMtdParam._m0[34u].x * ((_323.y * 2.0) + (-1.0))) + _1028;
    float _1041 = fma(_1034, _254 * NORMAL.x, fma(_1038, _261 * TANGENT.x, (_247 * _239) * _1037));
    float _1044 = fma(_1034, _254 * NORMAL.y, fma(_1038, _261 * TANGENT.y, (_247 * _240) * _1037));
    float _1047 = fma(_1034, _254 * NORMAL.z, fma(_1038, _261 * TANGENT.z, (_247 * _241) * _1037));
    float _1051 = inversesqrt(dot(vec3(_1041, _1044, _1047), vec3(_1041, _1044, _1047)));
    float _1052 = _1051 * _1041;
    float _1053 = _1051 * _1044;
    float _1054 = _1051 * _1047;
    float _4371 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _1055 = isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0));
    float _4382 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _4393 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
    float _4404 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4415 = isnan(0.0) ? _818 : (isnan(_818) ? 0.0 : max(_818, 0.0));
    float _1059 = isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0));
    float _1075 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1095 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1105 = cbSceneParam._m0[71u].x - (_934 / _1095);
    float _1106 = cbSceneParam._m0[71u].y - (_938 / _1095);
    float _1107 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1095);
    float _1111 = inversesqrt(dot(vec3(_1105, _1106, _1107), vec3(_1105, _1106, _1107)));
    float _1112 = _1105 * _1111;
    float _1113 = _1106 * _1111;
    float _1114 = _1107 * _1111;
    float _1120 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1121 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1123 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1125 = _1123.w;
    float _1143 = fma(_1054, cbSceneParam._m0[5u].z, fma(_1053, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1052));
    float _1146 = fma(_1054, cbSceneParam._m0[6u].z, fma(_1053, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1052));
    float _1149 = fma(_1054, cbSceneParam._m0[7u].z, fma(_1053, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1052));
    vec4 _1151 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1162 = (((_1151.y - _1055) + (_1151.w * _1055)) * cbMtdParam._m0[3u].x) + _1055;
    uint _1175 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1176 = _1175 + 9u;
    uint _1177 = _1176 + uint(cbMatDynParam._m0[0u].w);
    float _1183 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0)))) * cbInstanceData._m0[_1177].x;
    float _1184 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0)))) * cbInstanceData._m0[_1177].y;
    float _1185 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0)))) * cbInstanceData._m0[_1177].z;
    float _4426 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
    float _1186 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
    float _4437 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    float _1187 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _4448 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
    float _1188 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    vec4 _1189 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1194 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1205 = (((_1194.x - _1059) + (_1194.w * _1059)) * cbMtdParam._m0[3u].x) + _1059;
    float _1218 = (cbMtdParam._m0[3u].x * (((_1186 * _1125) - _1186) + _1189.x)) + _1186;
    float _1219 = (cbMtdParam._m0[3u].x * (((_1187 * _1125) - _1187) + _1189.y)) + _1187;
    float _1220 = (cbMtdParam._m0[3u].x * (((_1188 * _1125) - _1188) + _1189.z)) + _1188;
    float _1221 = 1.0 - _1205;
    float _1222 = _1221 * _1218;
    float _1223 = _1221 * _1219;
    float _1224 = _1221 * _1220;
    float _1229 = (_1218 + (-0.039999999105930328369140625)) * _1205;
    float _1230 = (_1219 + (-0.039999999105930328369140625)) * _1205;
    float _1231 = (_1220 + (-0.039999999105930328369140625)) * _1205;
    float _1232 = _1229 + 0.039999999105930328369140625;
    float _1234 = _1230 + 0.039999999105930328369140625;
    float _1235 = _1231 + 0.039999999105930328369140625;
    vec4 _1244 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1120, cbSceneParam._m0[86u].y * _1121));
    float _1247 = _1244.x * TEXCOORD_5.w;
    float _1248 = dot(vec3(_1052, _1053, _1054), vec3(_1112, _1113, _1114));
    float _1251 = _1248 * 2.0;
    float _1255 = (_1251 * _1052) - _1112;
    float _1256 = (_1251 * _1053) - _1113;
    float _1257 = (_1251 * _1054) - _1114;
    float _1261 = abs(dot(vec3(_1112, _1113, _1114), vec3(_1052, _1053, _1054)));
    float _4459 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    float _1263 = sqrt(_1162);
    float _1274 = exp2((_1263 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1263 * 3.0));
    float _1280 = (1.0 - _1274) * ((_1263 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1281 = _1274 * _1263;
    float _1309 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1313 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1317 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1615;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1342 = fma(_1317, cbModelParam._m0[26u].z, fma(_1313, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1309));
        float _1346 = fma(_1317, cbModelParam._m0[27u].z, fma(_1313, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1309));
        float _1350 = fma(_1317, cbModelParam._m0[28u].z, fma(_1313, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1309));
        float _1374 = _1309 + _1052;
        float _1375 = _1313 + _1053;
        float _1376 = _1317 + _1054;
        float _1386 = fma(_1376, cbModelParam._m0[26u].z, fma(_1375, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1374)) - _1342;
        float _1387 = fma(_1376, cbModelParam._m0[27u].z, fma(_1375, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1374)) - _1346;
        float _1388 = fma(_1376, cbModelParam._m0[28u].z, fma(_1375, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1374)) - _1350;
        float _1392 = inversesqrt(dot(vec3(_1386, _1387, _1388), vec3(_1386, _1387, _1388)));
        float _1404 = ((_1392 * _1386) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1342 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1405 = ((_1392 * _1387) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1346 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1406 = ((_1392 * _1388) / cbModelParam._m0[34u].z) + ((((((_1350 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1409 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1404, _1405, _1406), 0.0);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1404, _1405, _1406), 0.0);
        vec4 _1423 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1404, _1405, _1406), 0.0);
        vec4 _1430 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1404, _1405, _1406), 0.0);
        float _1443 = exp2((_1409.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1409.x + (-0.5));
        float _1445 = _1443 * (_1409.y + (-0.5));
        float _1446 = _1443 * (_1409.z + (-0.5));
        float _1453 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1416.x + (-0.5));
        float _1455 = _1453 * (_1416.y + (-0.5));
        float _1456 = _1453 * (_1416.z + (-0.5));
        float _1463 = exp2((_1423.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1423.x + (-0.5));
        float _1465 = _1463 * (_1423.y + (-0.5));
        float _1466 = _1463 * (_1423.z + (-0.5));
        float _1473 = exp2((_1430.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1430.x + (-0.5));
        float _1475 = _1473 * (_1430.y + (-0.5));
        float _1476 = _1473 * (_1430.z + (-0.5));
        float _1477 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1478 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = _1444 * 0.5;
        float _1481 = _1454 * 0.5;
        float _1482 = _1464 * 0.5;
        float _1483 = dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482));
        float _1488 = (_1483 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1483);
        float _1497 = (dot(vec3(_1052, _1053, _1054), vec3(_1488 * _1480, _1488 * _1481, _1488 * _1482)) + 1.0) * 0.5;
        float _4485 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1507 = sqrt(((_1481 * _1481) + (_1480 * _1480)) + (_1482 * _1482)) / (_1477 + 9.9999997473787516355514526367188e-06);
        float _4496 = isnan(0.0) ? _1507 : (isnan(_1507) ? 0.0 : max(_1507, 0.0));
        float _1508 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
        float _1509 = _1508 * 2.0;
        float _1513 = (1.0 - _1508) / (_1508 + 1.0);
        float _4507 = isnan(0.0) ? _1513 : (isnan(_1513) ? 0.0 : max(_1513, 0.0));
        float _1514 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
        float _1523 = ((((1.0 - _1514) * (_1509 + 2.0)) * exp2(log2(isnan(1.0) ? _4485 : (isnan(_4485) ? 1.0 : min(_4485, 1.0))) * (_1509 + 1.0))) + _1514) * _1477;
        float _1524 = _1445 * 0.5;
        float _1525 = _1455 * 0.5;
        float _1526 = _1465 * 0.5;
        float _1527 = dot(vec3(_1524, _1525, _1526), vec3(_1524, _1525, _1526));
        float _1532 = (_1527 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1527);
        float _1540 = (dot(vec3(_1052, _1053, _1054), vec3(_1532 * _1524, _1532 * _1525, _1532 * _1526)) + 1.0) * 0.5;
        float _4518 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1549 = sqrt(((_1525 * _1525) + (_1524 * _1524)) + (_1526 * _1526)) / (_1478 + 9.9999997473787516355514526367188e-06);
        float _4529 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        float _1550 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _1551 = _1550 * 2.0;
        float _1555 = (1.0 - _1550) / (_1550 + 1.0);
        float _4540 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
        float _1556 = isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0));
        float _1565 = ((((1.0 - _1556) * (_1551 + 2.0)) * exp2(log2(isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * (_1551 + 1.0))) + _1556) * _1478;
        float _1566 = _1446 * 0.5;
        float _1567 = _1456 * 0.5;
        float _1568 = _1466 * 0.5;
        float _1569 = dot(vec3(_1566, _1567, _1568), vec3(_1566, _1567, _1568));
        float _1574 = (_1569 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1569);
        float _1582 = (dot(vec3(_1052, _1053, _1054), vec3(_1574 * _1566, _1574 * _1567, _1574 * _1568)) + 1.0) * 0.5;
        float _4551 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
        float _1591 = sqrt(((_1567 * _1567) + (_1566 * _1566)) + (_1568 * _1568)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4562 = isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0));
        float _1592 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
        float _1593 = _1592 * 2.0;
        float _1597 = (1.0 - _1592) / (_1592 + 1.0);
        float _4573 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
        float _1598 = isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0));
        float _1607 = ((((1.0 - _1598) * (_1593 + 2.0)) * exp2(log2(isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0))) * (_1593 + 1.0))) + _1598) * _1479;
        _1615 = _1446;
        _1617 = _1445;
        _1618 = _1444;
        _1619 = _1456;
        _1620 = _1455;
        _1621 = _1454;
        _1622 = _1466;
        _1623 = _1465;
        _1624 = _1464;
        _1625 = _1479;
        _1626 = _1478;
        _1627 = _1477;
        _1628 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0)));
        _1629 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1565 : (isnan(_1565) ? 0.0 : max(_1565, 0.0)));
        _1630 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)));
    }
    else
    {
        _1615 = _1616;
        _1617 = _1616;
        _1618 = _1616;
        _1619 = _1616;
        _1620 = _1616;
        _1621 = _1616;
        _1622 = _1616;
        _1623 = _1616;
        _1624 = _1616;
        _1625 = _1616;
        _1626 = _1616;
        _1627 = _1616;
        _1628 = 0.0;
        _1629 = 0.0;
        _1630 = 0.0;
    }
    float _1920;
    float _1921;
    float _1922;
    float _1923;
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    float _1929;
    float _1930;
    float _1931;
    float _1932;
    float _1933;
    float _1934;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1653 = fma(_1317, cbModelParam._m0[30u].z, fma(_1313, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1309));
        float _1657 = fma(_1317, cbModelParam._m0[31u].z, fma(_1313, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1309));
        float _1661 = fma(_1317, cbModelParam._m0[32u].z, fma(_1313, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1309));
        float _1683 = _1309 + _1052;
        float _1684 = _1313 + _1053;
        float _1685 = _1317 + _1054;
        float _1695 = fma(_1685, cbModelParam._m0[30u].z, fma(_1684, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1683)) - _1653;
        float _1696 = fma(_1685, cbModelParam._m0[31u].z, fma(_1684, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1683)) - _1657;
        float _1697 = fma(_1685, cbModelParam._m0[32u].z, fma(_1684, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1683)) - _1661;
        float _1701 = inversesqrt(dot(vec3(_1695, _1696, _1697), vec3(_1695, _1696, _1697)));
        float _1713 = ((_1701 * _1695) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1653 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1714 = ((_1701 * _1696) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1657 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1715 = ((_1701 * _1697) / cbModelParam._m0[35u].z) + ((((((_1661 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1717 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1713, _1714, _1715), 0.0);
        vec4 _1724 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1713, _1714, _1715), 0.0);
        vec4 _1731 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1713, _1714, _1715), 0.0);
        vec4 _1738 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1713, _1714, _1715), 0.0);
        float _1750 = exp2((_1717.w + (-0.5)) * 20.0) * 2.0;
        float _1751 = _1750 * (_1717.x + (-0.5));
        float _1752 = _1750 * (_1717.y + (-0.5));
        float _1753 = _1750 * (_1717.z + (-0.5));
        float _1760 = exp2((_1724.w + (-0.5)) * 20.0) * 2.0;
        float _1761 = _1760 * (_1724.x + (-0.5));
        float _1762 = _1760 * (_1724.y + (-0.5));
        float _1763 = _1760 * (_1724.z + (-0.5));
        float _1770 = exp2((_1731.w + (-0.5)) * 20.0) * 2.0;
        float _1771 = _1770 * (_1731.x + (-0.5));
        float _1772 = _1770 * (_1731.y + (-0.5));
        float _1773 = _1770 * (_1731.z + (-0.5));
        float _1780 = exp2((_1738.w + (-0.5)) * 20.0) * 2.0;
        float _1781 = _1780 * (_1738.x + (-0.5));
        float _1782 = _1780 * (_1738.y + (-0.5));
        float _1783 = _1780 * (_1738.z + (-0.5));
        float _1784 = isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0));
        float _1785 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
        float _1786 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1787 = _1751 * 0.5;
        float _1788 = _1761 * 0.5;
        float _1789 = _1771 * 0.5;
        float _1790 = dot(vec3(_1787, _1788, _1789), vec3(_1787, _1788, _1789));
        float _1795 = (_1790 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1790);
        float _1803 = (dot(vec3(_1052, _1053, _1054), vec3(_1795 * _1787, _1795 * _1788, _1795 * _1789)) + 1.0) * 0.5;
        float _4614 = isnan(0.0) ? _1803 : (isnan(_1803) ? 0.0 : max(_1803, 0.0));
        float _1812 = sqrt(((_1788 * _1788) + (_1787 * _1787)) + (_1789 * _1789)) / (_1784 + 9.9999997473787516355514526367188e-06);
        float _4625 = isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0));
        float _1813 = isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0));
        float _1814 = _1813 * 2.0;
        float _1818 = (1.0 - _1813) / (_1813 + 1.0);
        float _4636 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
        float _1819 = isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0));
        float _1828 = ((((1.0 - _1819) * (_1814 + 2.0)) * exp2(log2(isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))) * (_1814 + 1.0))) + _1819) * _1784;
        float _1829 = _1752 * 0.5;
        float _1830 = _1762 * 0.5;
        float _1831 = _1772 * 0.5;
        float _1832 = dot(vec3(_1829, _1830, _1831), vec3(_1829, _1830, _1831));
        float _1837 = (_1832 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1832);
        float _1845 = (dot(vec3(_1052, _1053, _1054), vec3(_1837 * _1829, _1837 * _1830, _1837 * _1831)) + 1.0) * 0.5;
        float _4647 = isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0));
        float _1854 = sqrt(((_1830 * _1830) + (_1829 * _1829)) + (_1831 * _1831)) / (_1785 + 9.9999997473787516355514526367188e-06);
        float _4658 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
        float _1855 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _1856 = _1855 * 2.0;
        float _1860 = (1.0 - _1855) / (_1855 + 1.0);
        float _4669 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1861 = isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0));
        float _1870 = ((((1.0 - _1861) * (_1856 + 2.0)) * exp2(log2(isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0))) * (_1856 + 1.0))) + _1861) * _1785;
        float _1871 = _1753 * 0.5;
        float _1872 = _1763 * 0.5;
        float _1873 = _1773 * 0.5;
        float _1874 = dot(vec3(_1871, _1872, _1873), vec3(_1871, _1872, _1873));
        float _1879 = (_1874 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1874);
        float _1887 = (dot(vec3(_1052, _1053, _1054), vec3(_1879 * _1871, _1879 * _1872, _1879 * _1873)) + 1.0) * 0.5;
        float _4680 = isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0));
        float _1896 = sqrt(((_1872 * _1872) + (_1871 * _1871)) + (_1873 * _1873)) / (_1786 + 9.9999997473787516355514526367188e-06);
        float _4691 = isnan(0.0) ? _1896 : (isnan(_1896) ? 0.0 : max(_1896, 0.0));
        float _1897 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _1898 = _1897 * 2.0;
        float _1902 = (1.0 - _1897) / (_1897 + 1.0);
        float _4702 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
        float _1903 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _1912 = ((((1.0 - _1903) * (_1898 + 2.0)) * exp2(log2(isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (_1898 + 1.0))) + _1903) * _1786;
        _1920 = _1753;
        _1921 = _1752;
        _1922 = _1751;
        _1923 = _1763;
        _1924 = _1762;
        _1925 = _1761;
        _1926 = _1773;
        _1927 = _1772;
        _1928 = _1771;
        _1929 = _1786;
        _1930 = _1785;
        _1931 = _1784;
        _1932 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0)));
        _1933 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0)));
        _1934 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0)));
    }
    else
    {
        _1920 = _1616;
        _1921 = _1616;
        _1922 = _1616;
        _1923 = _1616;
        _1924 = _1616;
        _1925 = _1616;
        _1926 = _1616;
        _1927 = _1616;
        _1928 = _1616;
        _1929 = _1616;
        _1930 = _1616;
        _1931 = _1616;
        _1932 = 0.0;
        _1933 = 0.0;
        _1934 = 0.0;
    }
    float _1944 = (cbModelParam._m0[1u].x * (_1932 - _1628)) + _1628;
    float _1945 = (cbModelParam._m0[1u].x * (_1933 - _1629)) + _1629;
    float _1946 = (cbModelParam._m0[1u].x * (_1934 - _1630)) + _1630;
    float _1967 = fma(_1946, cbSceneParam._m0[89u].z, fma(_1945, cbSceneParam._m0[89u].y, _1944 * cbSceneParam._m0[89u].x));
    float _1970 = fma(_1946, cbSceneParam._m0[90u].z, fma(_1945, cbSceneParam._m0[90u].y, _1944 * cbSceneParam._m0[90u].x));
    float _1973 = fma(_1946, cbSceneParam._m0[91u].z, fma(_1945, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1944));
    float _1986 = _1255 * 0.5;
    float _1987 = _1256 * 0.5;
    float _1988 = _1257 * 0.5;
    float _1989 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1922, _1925, _1928, _1931));
    float _1992 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1921, _1924, _1927, _1930));
    float _1995 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1920, _1923, _1926, _1929));
    float _2029;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2002 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1615, _1619, _1622, _1625));
        float _2006 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1617, _1620, _1623, _1626));
        float _2010 = dot(vec4(_1986, _1987, _1988, 1.0), vec4(_1618, _1621, _1624, _1627));
        float _2017 = dot(vec4(cbModelParam._m0[39u]), vec4(_1986, _1987, _1988, 1.0));
        _2029 = dot(vec3(isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0)), isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0)), isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2017) ? 0.0 : (isnan(0.0) ? _2017 : max(0.0, _2017))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2029 = 1.0;
    }
    float _2040;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2031 = dot(vec4(cbModelParam._m0[40u]), vec4(_1986, _1987, _1988, 1.0));
        _2040 = dot(vec3(isnan(0.0) ? _1989 : (isnan(_1989) ? 0.0 : max(_1989, 0.0)), isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0)), isnan(0.0) ? _1995 : (isnan(_1995) ? 0.0 : max(_1995, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2031) ? 0.0 : (isnan(0.0) ? _2031 : max(0.0, _2031))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2040 = 1.0;
    }
    float _2044 = (_2040 * cbModelParam._m0[1u].x) + (_2029 * (1.0 - cbModelParam._m0[1u].x));
    float _2054 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1162);
    float _2055 = isnan(_2054) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2054 : min(cbModelParam._m0[25u].z, _2054));
    float _2135;
    float _2137;
    float _2139;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2102 = fma(_1317, cbModelParam._m0[13u].z, fma(_1313, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1309)) + cbModelParam._m0[13u].w;
        float _2106 = fma(_1317, cbModelParam._m0[14u].z, fma(_1313, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1309)) + cbModelParam._m0[14u].w;
        float _2110 = fma(_1317, cbModelParam._m0[15u].z, fma(_1313, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1309)) + cbModelParam._m0[15u].w;
        float _2113 = fma(_1257, cbModelParam._m0[13u].z, fma(_1256, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1255));
        float _2116 = fma(_1257, cbModelParam._m0[14u].z, fma(_1256, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1255));
        float _2119 = fma(_1257, cbModelParam._m0[15u].z, fma(_1256, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1255));
        float _2147;
        if (_2113 > 0.0)
        {
            _2147 = abs((1.0 - _2102) / _2113);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2113 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2102 + 1.0) / _2113);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2147 = frontier_phi_14_12_ladder;
        }
        float _2318;
        if (_2116 > 0.0)
        {
            _2318 = abs((1.0 - _2106) / _2116);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2116 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2106 + 1.0) / _2116);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2318 = frontier_phi_23_19_ladder;
        }
        float _2612;
        if (_2119 > 0.0)
        {
            _2612 = abs((1.0 - _2110) / _2119);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2119 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2110 + 1.0) / _2119);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2612 = frontier_phi_35_30_ladder;
        }
        float _2614 = isnan(_2318) ? _2147 : (isnan(_2147) ? _2318 : min(_2147, _2318));
        float _2615 = isnan(_2612) ? _2614 : (isnan(_2614) ? _2612 : min(_2614, _2612));
        float _2619 = (_2615 * _2113) + _2102;
        float _2620 = (_2615 * _2116) + _2106;
        float _2621 = (_2615 * _2119) + _2110;
        float _2622 = _2615 * 9.9999997473787516355514526367188e-05;
        float _2624 = (-1.0) - _2622;
        float _2626 = _2622 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2621 > _2626) || ((_2621 < _2624) || ((_2620 > _2626) || ((_2620 < _2624) || ((_2619 < _2624) || (_2619 > _2626))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2766 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2621, cbModelParam._m0[9u].z, fma(_2620, cbModelParam._m0[9u].y, _2619 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2621, cbModelParam._m0[10u].z, fma(_2620, cbModelParam._m0[10u].y, _2619 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2621, cbModelParam._m0[11u].z, fma(_2620, cbModelParam._m0[11u].y, _2619 * cbModelParam._m0[11u].x))), _2055);
            frontier_phi_13_35_ladder = _2766.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2766.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2766.x * cbModelParam._m0[1u].y;
        }
        _2135 = frontier_phi_13_35_ladder_2;
        _2137 = frontier_phi_13_35_ladder_1;
        _2139 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2123 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1255, _1256, _1257), _2055);
        _2135 = _2123.x * cbModelParam._m0[1u].y;
        _2137 = _2123.y * cbModelParam._m0[1u].y;
        _2139 = _2123.z * cbModelParam._m0[1u].y;
    }
    float _2143 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1162);
    float _2144 = isnan(_2143) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2143 : min(cbModelParam._m0[25u].w, _2143));
    float _2233;
    float _2235;
    float _2237;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2197 = fma(_1317, cbModelParam._m0[21u].z, fma(_1313, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1309)) + cbModelParam._m0[21u].w;
        float _2201 = fma(_1317, cbModelParam._m0[22u].z, fma(_1313, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1309)) + cbModelParam._m0[22u].w;
        float _2205 = fma(_1317, cbModelParam._m0[23u].z, fma(_1313, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1309)) + cbModelParam._m0[23u].w;
        float _2208 = fma(_1257, cbModelParam._m0[21u].z, fma(_1256, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1255));
        float _2211 = fma(_1257, cbModelParam._m0[22u].z, fma(_1256, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1255));
        float _2214 = fma(_1257, cbModelParam._m0[23u].z, fma(_1256, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1255));
        float _2323;
        if (_2208 > 0.0)
        {
            _2323 = abs((1.0 - _2197) / _2208);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2208 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2197 + 1.0) / _2208);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2323 = frontier_phi_25_21_ladder;
        }
        float _2639;
        if (_2211 > 0.0)
        {
            _2639 = abs((1.0 - _2201) / _2211);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2211 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2201 + 1.0) / _2211);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2639 = frontier_phi_37_32_ladder;
        }
        float _2977;
        if (_2214 > 0.0)
        {
            _2977 = abs((1.0 - _2205) / _2214);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2214 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2205 + 1.0) / _2214);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2977 = frontier_phi_47_44_ladder;
        }
        float _2979 = isnan(_2639) ? _2323 : (isnan(_2323) ? _2639 : min(_2323, _2639));
        float _2980 = isnan(_2977) ? _2979 : (isnan(_2979) ? _2977 : min(_2979, _2977));
        float _2984 = (_2980 * _2208) + _2197;
        float _2985 = (_2980 * _2211) + _2201;
        float _2986 = (_2980 * _2214) + _2205;
        float _2987 = _2980 * 9.9999997473787516355514526367188e-05;
        float _2988 = (-1.0) - _2987;
        float _2990 = _2987 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2986 > _2990) || ((_2986 < _2988) || ((_2985 > _2990) || ((_2985 < _2988) || ((_2984 < _2988) || (_2984 > _2990))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3108 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2986, cbModelParam._m0[17u].z, fma(_2985, cbModelParam._m0[17u].y, _2984 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2986, cbModelParam._m0[18u].z, fma(_2985, cbModelParam._m0[18u].y, _2984 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2986, cbModelParam._m0[19u].z, fma(_2985, cbModelParam._m0[19u].y, _2984 * cbModelParam._m0[19u].x))), _2144);
            frontier_phi_22_47_ladder = _3108.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3108.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3108.x * cbModelParam._m0[1u].z;
        }
        _2233 = frontier_phi_22_47_ladder_2;
        _2235 = frontier_phi_22_47_ladder_1;
        _2237 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2217 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1255, _1256, _1257), _2144);
        _2233 = _2217.x * cbModelParam._m0[1u].z;
        _2235 = _2217.y * cbModelParam._m0[1u].z;
        _2237 = _2217.z * cbModelParam._m0[1u].z;
    }
    float _2250 = (((_1280 * _1232) + _1281) * _1247) * ((cbModelParam._m0[1u].w * (_2233 - _2135)) + _2135);
    float _2252 = (((_1280 * _1234) + _1281) * _1247) * ((cbModelParam._m0[1u].w * (_2235 - _2137)) + _2137);
    float _2254 = (((_1280 * _1235) + _1281) * _1247) * ((cbModelParam._m0[1u].w * (_2237 - _2139)) + _2139);
    float _2257 = fma(_2254, cbSceneParam._m0[89u].z, fma(_2252, cbSceneParam._m0[89u].y, _2250 * cbSceneParam._m0[89u].x));
    float _2260 = fma(_2254, cbSceneParam._m0[90u].z, fma(_2252, cbSceneParam._m0[90u].y, _2250 * cbSceneParam._m0[90u].x));
    float _2263 = fma(_2254, cbSceneParam._m0[91u].z, fma(_2252, cbSceneParam._m0[91u].y, _2250 * cbSceneParam._m0[91u].x));
    float _2297 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2301 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2305 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2309 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2310 = _2297 / _2309;
    float _2311 = _2301 / _2309;
    float _2312 = _2305 / _2309;
    float _2458;
    float _2459;
    float _2460;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2339 = ((uint(_2312 > cbSceneParam._m0[59u].y) + uint(_2312 > cbSceneParam._m0[59u].x)) + uint(_2312 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2340 = _2339 + 43u;
        uint _2348 = _2339 + 44u;
        uint _2356 = _2339 + 45u;
        uint _2364 = _2339 + 46u;
        float _2375 = fma(_2309, cbSceneParam._m0[_2340].w, fma(_2305, cbSceneParam._m0[_2340].z, fma(_2301, cbSceneParam._m0[_2340].y, _2297 * cbSceneParam._m0[_2340].x)));
        float _2379 = fma(_2309, cbSceneParam._m0[_2348].w, fma(_2305, cbSceneParam._m0[_2348].z, fma(_2301, cbSceneParam._m0[_2348].y, _2297 * cbSceneParam._m0[_2348].x)));
        float _2387 = fma(_2309, cbSceneParam._m0[_2364].w, fma(_2305, cbSceneParam._m0[_2364].z, fma(_2301, cbSceneParam._m0[_2364].y, _2297 * cbSceneParam._m0[_2364].x)));
        float _2391 = cbSceneParam._m0[33u].z * _2387;
        float _2393 = cbSceneParam._m0[33u].w * _2387;
        float _2396 = fma(_2309, cbSceneParam._m0[_2356].w, fma(_2305, cbSceneParam._m0[_2356].z, fma(_2301, cbSceneParam._m0[_2356].y, _2297 * cbSceneParam._m0[_2356].x))) / _2387;
        float _2444 = (cbSceneParam._m0[33u].x - sqrt(((_2311 * _2311) + (_2310 * _2310)) + (_2312 * _2312))) * cbSceneParam._m0[33u].y;
        float _4828 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
        float _2451 = (isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2391 + _2375) / _2387, (_2393 + _2379) / _2387), _2396), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2393 + _2375) / _2387, (_2379 - _2391) / _2387), _2396), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2375 - _2391) / _2387, (_2379 - _2393) / _2387), _2396), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2375 - _2393) / _2387, (_2391 + _2379) / _2387), _2396), 0.0)).x), vec4(0.25)));
        _2458 = 1.0 - (_2451 * cbSceneParam._m0[34u].x);
        _2459 = 1.0 - (_2451 * cbSceneParam._m0[34u].y);
        _2460 = 1.0 - (_2451 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2458 = 1.0;
        _2459 = 1.0;
        _2460 = 1.0;
    }
    float _2524;
    float _2526;
    float _2528;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2512 = fma(_2309, cbSceneParam._m0[63u].w, fma(_2305, cbSceneParam._m0[63u].z, fma(_2301, cbSceneParam._m0[63u].y, _2297 * cbSceneParam._m0[63u].x)));
        float _2513 = fma(_2309, cbSceneParam._m0[60u].w, fma(_2305, cbSceneParam._m0[60u].z, fma(_2301, cbSceneParam._m0[60u].y, _2297 * cbSceneParam._m0[60u].x))) / _2512;
        float _2514 = fma(_2309, cbSceneParam._m0[61u].w, fma(_2305, cbSceneParam._m0[61u].z, fma(_2301, cbSceneParam._m0[61u].y, _2297 * cbSceneParam._m0[61u].x))) / _2512;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2513 >= cbSceneParam._m0[64u].x) && (_2514 >= cbSceneParam._m0[64u].y)) && (_2513 <= cbSceneParam._m0[64u].z)) && (_2514 <= cbSceneParam._m0[64u].w))
        {
            float _2652 = fma(_2309, cbSceneParam._m0[62u].w, fma(_2305, cbSceneParam._m0[62u].z, fma(_2301, cbSceneParam._m0[62u].y, _2297 * cbSceneParam._m0[62u].x))) / _2512;
            float _2656 = isnan(cbSceneParam._m0[41u].w) ? _2652 : (isnan(_2652) ? cbSceneParam._m0[41u].w : max(_2652, cbSceneParam._m0[41u].w));
            float _2699 = (cbSceneParam._m0[33u].x - sqrt(((_2311 * _2311) + (_2310 * _2310)) + (_2312 * _2312))) * cbSceneParam._m0[33u].y;
            float _4844 = isnan(0.0) ? _2699 : (isnan(_2699) ? 0.0 : max(_2699, 0.0));
            float _2706 = (isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2513, cbSceneParam._m0[33u].w + _2514), _2656), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2513, _2514 - cbSceneParam._m0[33u].z), _2656), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2513 - cbSceneParam._m0[33u].z, _2514 - cbSceneParam._m0[33u].w), _2656), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2513 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2514), _2656), 0.0)).x), vec4(0.25)));
            float _2710 = 1.0 - (_2706 * cbSceneParam._m0[34u].x);
            float _2711 = 1.0 - (_2706 * cbSceneParam._m0[34u].y);
            float _2712 = 1.0 - (_2706 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2712) ? _2460 : (isnan(_2460) ? _2712 : min(_2460, _2712));
            frontier_phi_34_33_ladder_1 = isnan(_2711) ? _2459 : (isnan(_2459) ? _2711 : min(_2459, _2711));
            frontier_phi_34_33_ladder_2 = isnan(_2710) ? _2458 : (isnan(_2458) ? _2710 : min(_2458, _2710));
        }
        else
        {
            frontier_phi_34_33_ladder = _2460;
            frontier_phi_34_33_ladder_1 = _2459;
            frontier_phi_34_33_ladder_2 = _2458;
        }
        _2524 = frontier_phi_34_33_ladder_2;
        _2526 = frontier_phi_34_33_ladder_1;
        _2528 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2524 = _2458;
        _2526 = _2459;
        _2528 = _2460;
    }
    uvec4 _2533 = floatBitsToUint(cbInstanceData._m0[_1175 + 5u]);
    uint _2535 = _2533.x * 14u;
    uint _2536 = _2535 + 13u;
    float _2543 = _1247 + (-1.0);
    float _2548 = (cbLight._m0[_2536].x * _2543) + 1.0;
    float _2549 = (cbLight._m0[_2536].y * _2543) + 1.0;
    float _2550 = (cbLight._m0[_2536].z * _2543) + 1.0;
    float _2551 = (cbLight._m0[_2536].w * _2543) + 1.0;
    uint _2552 = _2535 + 5u;
    float _2558 = isnan(1.0) ? _2549 : (isnan(_2549) ? 1.0 : min(_2549, 1.0));
    uint _2562 = _2535 + 4u;
    float _2571 = isnan(1.0) ? _2548 : (isnan(_2548) ? 1.0 : min(_2548, 1.0));
    uint _2575 = _2535 | 1u;
    float _2586 = dot(vec3(cbLight._m0[_2535].xyz), vec3(_1052, _1053, _1054));
    float _2589 = dot(vec3(cbLight._m0[_2575].xyz), vec3(_1052, _1053, _1054));
    float _4880 = isnan(0.0) ? _2586 : (isnan(_2586) ? 0.0 : max(_2586, 0.0));
    float _4891 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
    float _2594 = (isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0))) * 0.3183098733425140380859375;
    float _2596 = (isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0))) * 0.3183098733425140380859375;
    float _2603 = ((cbLight._m0[_2552].x * _2558) * _2596) + (((cbLight._m0[_2562].x * _2524) * _2571) * _2594);
    float _2604 = ((_2558 * cbLight._m0[_2552].y) * _2596) + (((cbLight._m0[_2562].y * _2526) * _2571) * _2594);
    float _2605 = ((_2558 * cbLight._m0[_2552].z) * _2596) + (((cbLight._m0[_2562].z * _2528) * _2571) * _2594);
    uvec4 _2609 = floatBitsToUint(cbLight._m0[_2535 + 12u]);
    bool _2611 = _2609.x == 0u;
    float _2713;
    float _2715;
    float _2717;
    if (_2611)
    {
        _2713 = _2603;
        _2715 = _2604;
        _2717 = _2605;
    }
    else
    {
        uint _2721 = _2535 + 6u;
        float _2737 = (dot(vec3(cbLight._m0[_2535 + 2u].xyz), vec3(_1052, _1053, _1054)) * 0.5) + 0.5;
        float _2738 = _2737 * _2737;
        float _4902 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
        float _2739 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
        float _2740 = isnan(1.0) ? _2550 : (isnan(_2550) ? 1.0 : min(_2550, 1.0));
        _2713 = (((cbLight._m0[_2721].x * 0.3183098733425140380859375) * _2739) * _2740) + _2603;
        _2715 = (((cbLight._m0[_2721].y * 0.3183098733425140380859375) * _2739) * _2740) + _2604;
        _2717 = (((cbLight._m0[_2721].z * 0.3183098733425140380859375) * _2739) * _2740) + _2605;
    }
    bool _2720 = _2609.y == 0u;
    float _2775;
    float _2777;
    float _2779;
    if (_2720)
    {
        _2775 = _2713;
        _2777 = _2715;
        _2779 = _2717;
    }
    else
    {
        uint _2948 = _2535 + 7u;
        float _2964 = (dot(vec3(cbLight._m0[_2535 + 3u].xyz), vec3(_1052, _1053, _1054)) * 0.5) + 0.5;
        float _2965 = _2964 * _2964;
        float _4918 = isnan(0.0) ? _2965 : (isnan(_2965) ? 0.0 : max(_2965, 0.0));
        float _2966 = isnan(1.0) ? _4918 : (isnan(_4918) ? 1.0 : min(_4918, 1.0));
        float _2967 = isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0));
        _2775 = (((cbLight._m0[_2948].x * 0.3183098733425140380859375) * _2966) * _2967) + _2713;
        _2777 = (((cbLight._m0[_2948].y * 0.3183098733425140380859375) * _2966) * _2967) + _2715;
        _2779 = (((cbLight._m0[_2948].z * 0.3183098733425140380859375) * _2966) * _2967) + _2717;
    }
    uint _2782 = _2535 + 8u;
    float _2795 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2535].w)) * _1162) * 0.949999988079071044921875);
    float _2796 = _2795 * _2795;
    float _2797 = cbLight._m0[_2535].x + _1112;
    float _2798 = cbLight._m0[_2535].y + _1113;
    float _2799 = cbLight._m0[_2535].z + _1114;
    float _2803 = inversesqrt(dot(vec3(_2797, _2798, _2799), vec3(_2797, _2798, _2799)));
    float _2804 = _2803 * _2797;
    float _2805 = _2803 * _2798;
    float _2806 = _2803 * _2799;
    float _2807 = dot(vec3(_1052, _1053, _1054), vec3(cbLight._m0[_2535].xyz));
    float _4934 = isnan(0.0) ? _2807 : (isnan(_2807) ? 0.0 : max(_2807, 0.0));
    float _2810 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
    float _4945 = isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0));
    float _2811 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
    float _2812 = dot(vec3(_1052, _1053, _1054), vec3(_2804, _2805, _2806));
    float _4956 = isnan(0.0) ? _2812 : (isnan(_2812) ? 0.0 : max(_2812, 0.0));
    float _2815 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
    float _2816 = dot(vec3(cbLight._m0[_2535].xyz), vec3(_2804, _2805, _2806));
    float _4967 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
    float _2820 = _2796 * _2796;
    float _2824 = ((_2815 * _2815) * (_2820 + (-1.0))) + 1.0;
    float _2832 = exp2(log2(1.0 - (isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0)))) * 5.0);
    float _2833 = 0.959999978542327880859375 - _1229;
    float _2835 = 0.959999978542327880859375 - _1230;
    float _2836 = 0.959999978542327880859375 - _1231;
    float _2843 = 1.0 - _2796;
    float _2854 = (0.5 / (((_2811 * ((_2810 * _2843) + _2796)) + 9.9999999392252902907785028219223e-09) + (((_2811 * _2843) + _2796) * _2810))) * _2810;
    float _4978 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
    float _2856 = (isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0))) * (_2820 / ((_2824 * _2824) * 3.141590118408203125));
    uint _2870 = _2535 + 9u;
    float _2881 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2575].w)) * _1162) * 0.949999988079071044921875);
    float _2882 = _2881 * _2881;
    float _2883 = cbLight._m0[_2575].x + _1112;
    float _2884 = cbLight._m0[_2575].y + _1113;
    float _2885 = cbLight._m0[_2575].z + _1114;
    float _2889 = inversesqrt(dot(vec3(_2883, _2884, _2885), vec3(_2883, _2884, _2885)));
    float _2890 = _2889 * _2883;
    float _2891 = _2889 * _2884;
    float _2892 = _2889 * _2885;
    float _2893 = dot(vec3(_1052, _1053, _1054), vec3(cbLight._m0[_2575].xyz));
    float _4989 = isnan(0.0) ? _2893 : (isnan(_2893) ? 0.0 : max(_2893, 0.0));
    float _2896 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
    float _2897 = dot(vec3(_1052, _1053, _1054), vec3(_2890, _2891, _2892));
    float _5000 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
    float _2900 = isnan(1.0) ? _5000 : (isnan(_5000) ? 1.0 : min(_5000, 1.0));
    float _2901 = dot(vec3(cbLight._m0[_2575].xyz), vec3(_2890, _2891, _2892));
    float _5011 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
    float _2905 = _2882 * _2882;
    float _2909 = ((_2900 * _2900) * (_2905 + (-1.0))) + 1.0;
    float _2916 = exp2(log2(1.0 - (isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0)))) * 5.0);
    float _2923 = 1.0 - _2882;
    float _2933 = (0.5 / (((_2811 * ((_2896 * _2923) + _2882)) + 9.9999999392252902907785028219223e-09) + (((_2811 * _2923) + _2882) * _2896))) * _2896;
    float _5022 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
    float _2935 = (isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0))) * (_2905 / ((_2909 * _2909) * 3.141590118408203125));
    float _2945 = (((((_2916 * _2833) + _1232) * cbLight._m0[_2870].x) * _2935) * _2558) + ((((cbLight._m0[_2782].x * _2524) * ((_2832 * _2833) + _1232)) * _2856) * _2571);
    float _2946 = (((((_2916 * _2835) + _1234) * cbLight._m0[_2870].y) * _2935) * _2558) + ((((cbLight._m0[_2782].y * _2526) * ((_2832 * _2835) + _1234)) * _2856) * _2571);
    float _2947 = (((((_2916 * _2836) + _1235) * cbLight._m0[_2870].z) * _2935) * _2558) + ((((cbLight._m0[_2782].z * _2528) * ((_2832 * _2836) + _1235)) * _2856) * _2571);
    float _3003;
    float _3005;
    float _3007;
    if (_2611)
    {
        _3003 = _2945;
        _3005 = _2946;
        _3007 = _2947;
    }
    else
    {
        uint _3009 = _2535 + 2u;
        uint _3013 = _2535 + 10u;
        float _3027 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3009].w)) * _1162) * 0.949999988079071044921875);
        float _3028 = _3027 * _3027;
        float _3029 = cbLight._m0[_3009].x + _1112;
        float _3030 = cbLight._m0[_3009].y + _1113;
        float _3031 = cbLight._m0[_3009].z + _1114;
        float _3035 = inversesqrt(dot(vec3(_3029, _3030, _3031), vec3(_3029, _3030, _3031)));
        float _3036 = _3035 * _3029;
        float _3037 = _3035 * _3030;
        float _3038 = _3035 * _3031;
        float _3039 = dot(vec3(_1052, _1053, _1054), vec3(cbLight._m0[_3009].xyz));
        float _5033 = isnan(0.0) ? _3039 : (isnan(_3039) ? 0.0 : max(_3039, 0.0));
        float _3042 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
        float _3043 = dot(vec3(_1052, _1053, _1054), vec3(_3036, _3037, _3038));
        float _5044 = isnan(0.0) ? _3043 : (isnan(_3043) ? 0.0 : max(_3043, 0.0));
        float _3046 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
        float _3047 = dot(vec3(cbLight._m0[_3009].xyz), vec3(_3036, _3037, _3038));
        float _5055 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
        float _3051 = _3028 * _3028;
        float _3055 = ((_3046 * _3046) * (_3051 + (-1.0))) + 1.0;
        float _3062 = exp2(log2(1.0 - (isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0)))) * 5.0);
        float _3069 = 1.0 - _3028;
        float _3079 = (0.5 / (((_2811 * ((_3042 * _3069) + _3028)) + 9.9999999392252902907785028219223e-09) + (((_2811 * _3069) + _3028) * _3042))) * _3042;
        float _5066 = isnan(0.0) ? _3079 : (isnan(_3079) ? 0.0 : max(_3079, 0.0));
        float _3081 = (isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0))) * (_3051 / ((_3055 * _3055) * 3.141590118408203125));
        float _3082 = isnan(1.0) ? _2550 : (isnan(_2550) ? 1.0 : min(_2550, 1.0));
        _3003 = (((((_3062 * _2833) + _1232) * cbLight._m0[_3013].x) * _3081) * _3082) + _2945;
        _3005 = (((((_3062 * _2835) + _1234) * cbLight._m0[_3013].y) * _3081) * _3082) + _2946;
        _3007 = (((((_3062 * _2836) + _1235) * cbLight._m0[_3013].z) * _3081) * _3082) + _2947;
    }
    float _3113;
    float _3115;
    float _3117;
    if (_2720)
    {
        _3113 = _3003;
        _3115 = _3005;
        _3117 = _3007;
    }
    else
    {
        uint _3124 = _2535 + 3u;
        uint _3128 = _2535 + 11u;
        float _3142 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3124].w)) * _1162) * 0.949999988079071044921875);
        float _3143 = _3142 * _3142;
        float _3144 = cbLight._m0[_3124].x + _1112;
        float _3145 = cbLight._m0[_3124].y + _1113;
        float _3146 = cbLight._m0[_3124].z + _1114;
        float _3150 = inversesqrt(dot(vec3(_3144, _3145, _3146), vec3(_3144, _3145, _3146)));
        float _3151 = _3150 * _3144;
        float _3152 = _3150 * _3145;
        float _3153 = _3150 * _3146;
        float _3154 = dot(vec3(_1052, _1053, _1054), vec3(cbLight._m0[_3124].xyz));
        float _5082 = isnan(0.0) ? _3154 : (isnan(_3154) ? 0.0 : max(_3154, 0.0));
        float _3157 = isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0));
        float _3158 = dot(vec3(_1052, _1053, _1054), vec3(_3151, _3152, _3153));
        float _5093 = isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0));
        float _3161 = isnan(1.0) ? _5093 : (isnan(_5093) ? 1.0 : min(_5093, 1.0));
        float _3162 = dot(vec3(cbLight._m0[_3124].xyz), vec3(_3151, _3152, _3153));
        float _5104 = isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : max(_3162, 0.0));
        float _3166 = _3143 * _3143;
        float _3170 = ((_3161 * _3161) * (_3166 + (-1.0))) + 1.0;
        float _3177 = exp2(log2(1.0 - (isnan(1.0) ? _5104 : (isnan(_5104) ? 1.0 : min(_5104, 1.0)))) * 5.0);
        float _3184 = 1.0 - _3143;
        float _3194 = (0.5 / (((_2811 * ((_3157 * _3184) + _3143)) + 9.9999999392252902907785028219223e-09) + (((_2811 * _3184) + _3143) * _3157))) * _3157;
        float _5115 = isnan(0.0) ? _3194 : (isnan(_3194) ? 0.0 : max(_3194, 0.0));
        float _3196 = (isnan(1.0) ? _5115 : (isnan(_5115) ? 1.0 : min(_5115, 1.0))) * (_3166 / ((_3170 * _3170) * 3.141590118408203125));
        float _3197 = isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0));
        _3113 = (((((_3177 * _2833) + _1232) * cbLight._m0[_3128].x) * _3196) * _3197) + _3003;
        _3115 = (((((_3177 * _2835) + _1234) * cbLight._m0[_3128].y) * _3196) * _3197) + _3005;
        _3117 = (((((_3177 * _2836) + _1235) * cbLight._m0[_3128].z) * _3196) * _3197) + _3007;
    }
    float _3263;
    float _3265;
    float _3267;
    float _3269;
    float _3271;
    float _3273;
    if (_2533.y == 0u)
    {
        uvec4 _3218 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3219 = _3218.x;
        uint _3230 = uint((float(_3218.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1121) / _3219))) + floor(float(uint(cbSceneParam._m0[85u].x * _1120) / _3219)));
        float _3240 = (log2(_2312 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3241 = isnan(0.0) ? _3240 : (isnan(_3240) ? 0.0 : max(_3240, 0.0));
        uint _3244 = uint(isnan(14.0) ? _3241 : (isnan(_3241) ? 14.0 : min(_3241, 14.0)));
        uvec4 _3249 = texelFetch(g_lightClusterGridBuffer, int(((_3244 << 2u) + (_3230 << 6u)) >> 2u));
        uint _3250 = _3249.x;
        uint _3251 = _3218.z;
        float _3359;
        float _3361;
        float _3363;
        float _3365;
        float _3367;
        float _3369;
        if (((((1u << ((_3251 >> 4u) & 15u)) + 4294967295u) & _3250) == 0u) || ((_3251 & 240u) == 0u))
        {
            _3359 = 0.0;
            _3361 = 0.0;
            _3363 = 0.0;
            _3365 = 0.0;
            _3367 = 0.0;
            _3369 = 0.0;
        }
        else
        {
            float _3360;
            float _3362;
            float _3364;
            float _3366;
            float _3368;
            float _3370;
            float _3512 = 0.0;
            float _3513 = 0.0;
            float _3514 = 0.0;
            float _3515 = 0.0;
            float _3516 = 0.0;
            float _3517 = 0.0;
            uint _3518 = 0u;
            uint _3527;
            bool _3528;
            for (;;)
            {
                _3527 = texelFetch(g_lightClassification, int((((_3244 << 5u) + (_3230 << 9u)) + (_3518 << 2u)) >> 2u)).x;
                _3528 = _3527 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3528)
                {
                    frontier_phi_66_pred = _3517;
                    frontier_phi_66_pred_1 = _3516;
                    frontier_phi_66_pred_2 = _3515;
                    frontier_phi_66_pred_3 = _3514;
                    frontier_phi_66_pred_4 = _3513;
                    frontier_phi_66_pred_5 = _3512;
                }
                else
                {
                    float _3636;
                    float _3637;
                    float _3638;
                    float _3639;
                    float _3640;
                    float _3641;
                    uint _3642;
                    _3636 = _3512;
                    _3637 = _3513;
                    _3638 = _3514;
                    _3639 = _3515;
                    _3640 = _3516;
                    _3641 = _3517;
                    _3642 = _3527;
                    float _3568;
                    float _3569;
                    float _3570;
                    float _3571;
                    float _3572;
                    float _3573;
                    for (;;)
                    {
                        uint _3646 = uint(findLSB(_3642)) + (_3518 << 5u);
                        uint _3643 = (_3642 + 4294967295u) & _3642;
                        uint _3648 = _3646 * 48u;
                        vec4 _3662 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3648)).x, texelFetch(g_PointLightRenderingBuffer, int(_3648 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3648 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3648 + 3u)).x));
                        uint _3668 = (_3646 * 48u) + 4u;
                        vec4 _3681 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3668)).x, texelFetch(g_PointLightRenderingBuffer, int(_3668 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3668 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3668 + 3u)).x));
                        uint _3687 = (_3646 * 48u) + 8u;
                        vec3 _3698 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3687)).x, texelFetch(g_PointLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3687 + 2u)).x));
                        float _3702 = _3662.x - _2310;
                        float _3703 = _3662.y - _2311;
                        float _3704 = _3662.z - _2312;
                        float _3705 = dot(vec3(_3702, _3703, _3704), vec3(_3702, _3703, _3704));
                        float _3708 = inversesqrt(_3705);
                        float _3709 = _3708 * _3702;
                        float _3710 = _3708 * _3703;
                        float _3711 = _3708 * _3704;
                        float _3712 = dot(vec3(_1143, _1146, _1149), vec3(_3709, _3710, _3711));
                        float _3717 = 1.0 - (_3705 * _3662.w);
                        float _5141 = isnan(0.0) ? _3717 : (isnan(_3717) ? 0.0 : max(_3717, 0.0));
                        float _3718 = isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0));
                        float _3719 = sqrt(_3705) * _3681.w;
                        float _3722 = 1.39999997615814208984375 / (_3719 + 1.39999997615814208984375);
                        float _3723 = _3722 * _3722;
                        float _3726 = ((1.0 - _3723) * _3712) + _3723;
                        float _3729 = _3719 * _3719;
                        float _3733 = ((isnan(0.0) ? _3726 : (isnan(_3726) ? 0.0 : max(_3726, 0.0))) * _3718) / ((_3729 * 0.699999988079071044921875) + 1.0);
                        float _3737 = (-0.0) - _2310;
                        float _3738 = (-0.0) - _2311;
                        float _3739 = (-0.0) - _2312;
                        float _3743 = inversesqrt(dot(vec3(_3737, _3738, _3739), vec3(_3737, _3738, _3739)));
                        float _3744 = _3743 * _3737;
                        float _3745 = _3743 * _3738;
                        float _3746 = _3743 * _3739;
                        float _3753 = exp2(log2(1.0 / ((_3729 * 3.5) + 5.0)) * 0.25);
                        float _3754 = 1.0 - _1263;
                        float _3761 = sqrt(1.0 - ((1.0 - (_3754 * _3754)) * (1.0 - (_3753 * _3753))));
                        float _3762 = _3761 * _3761;
                        float _3763 = _3762 * _3762;
                        float _3764 = _3744 + _3709;
                        float _3765 = _3745 + _3710;
                        float _3766 = _3746 + _3711;
                        float _3770 = inversesqrt(dot(vec3(_3764, _3765, _3766), vec3(_3764, _3765, _3766)));
                        float _3774 = dot(vec3(_1143, _1146, _1149), vec3(_3744, _3745, _3746));
                        float _5157 = isnan(0.0) ? _3774 : (isnan(_3774) ? 0.0 : max(_3774, 0.0));
                        float _3777 = isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0));
                        float _3778 = dot(vec3(_1143, _1146, _1149), vec3(_3770 * _3764, _3770 * _3765, _3770 * _3766));
                        float _5168 = isnan(0.0) ? _3778 : (isnan(_3778) ? 0.0 : max(_3778, 0.0));
                        float _3781 = isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0));
                        float _3785 = ((_3781 * _3781) * (_3763 + (-1.0))) + 1.0;
                        float _3786 = _3722 * _3762;
                        float _3787 = _3786 * _3786;
                        float _3790 = ((1.0 - _3787) * _3712) + _3787;
                        float _5179 = isnan(0.0) ? _3790 : (isnan(_3790) ? 0.0 : max(_3790, 0.0));
                        float _3791 = isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0));
                        float _3792 = 1.0 - _3762;
                        float _3802 = (0.5 / (((_3791 * ((_3777 * _3792) + _3762)) + 9.9999999392252902907785028219223e-09) + (((_3791 * _3792) + _3762) * _3777))) * _3791;
                        float _5190 = isnan(0.0) ? _3802 : (isnan(_3802) ? 0.0 : max(_3802, 0.0));
                        float _3813 = (((_3763 * 3.1415927410125732421875) * (isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0)))) / ((_3785 * _3785) * ((_3729 * 2.1991131305694580078125) + 3.141590118408203125))) * _3718;
                        _3571 = (_3733 * _3681.x) + _3639;
                        _3572 = (_3733 * _3681.y) + _3640;
                        _3573 = (_3733 * _3681.z) + _3641;
                        _3568 = (_3813 * _3698.x) + _3636;
                        _3569 = (_3813 * _3698.y) + _3637;
                        _3570 = (_3813 * _3698.z) + _3638;
                        if (_3643 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3636 = _3568;
                            _3637 = _3569;
                            _3638 = _3570;
                            _3639 = _3571;
                            _3640 = _3572;
                            _3641 = _3573;
                            _3642 = _3643;
                        }
                    }
                    frontier_phi_66_pred = _3573;
                    frontier_phi_66_pred_1 = _3572;
                    frontier_phi_66_pred_2 = _3571;
                    frontier_phi_66_pred_3 = _3570;
                    frontier_phi_66_pred_4 = _3569;
                    frontier_phi_66_pred_5 = _3568;
                }
                _3370 = frontier_phi_66_pred;
                _3368 = frontier_phi_66_pred_1;
                _3366 = frontier_phi_66_pred_2;
                _3364 = frontier_phi_66_pred_3;
                _3362 = frontier_phi_66_pred_4;
                _3360 = frontier_phi_66_pred_5;
                uint _3519 = _3518 + 1u;
                if (_3519 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3512 = _3360;
                    _3513 = _3362;
                    _3514 = _3364;
                    _3515 = _3366;
                    _3516 = _3368;
                    _3517 = _3370;
                    _3518 = _3519;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3359 = _3360;
            _3361 = _3362;
            _3363 = _3364;
            _3365 = _3366;
            _3367 = _3368;
            _3369 = _3370;
        }
        uvec4 _3373 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3374 = _3373.z;
        uint _3376 = (_3374 >> 8u) & 15u;
        float _3480;
        float _3482;
        float _3484;
        float _3486;
        float _3488;
        float _3490;
        if (((4294967295u << _3376) & _3250) == 0u)
        {
            _3480 = _3359;
            _3482 = _3361;
            _3484 = _3363;
            _3486 = _3365;
            _3488 = _3367;
            _3490 = _3369;
        }
        else
        {
            float _3505 = inversesqrt(dot(vec3(_2310, _2311, _2312), vec3(_2310, _2311, _2312)));
            float _3506 = _3505 * _2310;
            float _3507 = _3505 * _2311;
            float _3508 = _3505 * _2312;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3376 < ((_3374 >> 12u) & 15u))
            {
                float _3481;
                float _3483;
                float _3485;
                float _3487;
                float _3489;
                float _3491;
                float _3619 = _3359;
                float _3620 = _3361;
                float _3621 = _3363;
                float _3622 = _3365;
                float _3623 = _3367;
                float _3624 = _3369;
                uint _3625 = _3376;
                uint _3634;
                bool _3635;
                for (;;)
                {
                    _3634 = texelFetch(g_lightClassification, int((((_3244 << 5u) + (_3230 << 9u)) + (_3625 << 2u)) >> 2u)).x;
                    _3635 = _3634 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3635)
                    {
                        frontier_phi_72_pred = _3624;
                        frontier_phi_72_pred_1 = _3623;
                        frontier_phi_72_pred_2 = _3622;
                        frontier_phi_72_pred_3 = _3621;
                        frontier_phi_72_pred_4 = _3620;
                        frontier_phi_72_pred_5 = _3619;
                    }
                    else
                    {
                        float _3818;
                        float _3819;
                        float _3820;
                        float _3821;
                        float _3822;
                        float _3823;
                        float _4111;
                        float _4112;
                        float _4113;
                        float _4114;
                        float _4115;
                        float _4116;
                        float _3831 = _3619;
                        float _3832 = _3620;
                        float _3833 = _3621;
                        float _3834 = _3622;
                        float _3835 = _3623;
                        float _3836 = _3624;
                        uint _3837 = _3634;
                        uint _3838;
                        vec4 _3863;
                        float _3864;
                        vec4 _3879;
                        vec3 _3891;
                        vec4 _3906;
                        vec4 _3921;
                        float _3967;
                        bool _3968;
                        for (;;)
                        {
                            uint _3848 = ((_3625 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3837));
                            _3838 = (_3837 + 4294967295u) & _3837;
                            uint _3850 = _3848 * 40u;
                            _3863 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3850)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3850 + 3u)).x));
                            _3864 = _3863.w;
                            uint _3866 = (_3848 * 40u) + 4u;
                            _3879 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3866)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3866 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3866 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3866 + 3u)).x));
                            uint _3881 = (_3848 * 40u) + 8u;
                            _3891 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3881)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3881 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3881 + 2u)).x));
                            uint _3893 = (_3848 * 40u) + 16u;
                            _3906 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3893)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3893 + 3u)).x));
                            uint _3908 = (_3848 * 40u) + 20u;
                            _3921 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3908)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3908 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3908 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3908 + 3u)).x));
                            uint _3923 = (_3848 * 40u) + 24u;
                            vec4 _3936 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3923)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3923 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3923 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3923 + 3u)).x));
                            uint _3942 = (_3848 * 40u) + 28u;
                            vec4 _3955 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3942)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3942 + 3u)).x));
                            _3967 = fma(_2312, _3955.z, fma(_2311, _3955.y, _3955.x * _2310)) + _3955.w;
                            _3968 = !((fma(_2312, _3936.z, fma(_2311, _3936.y, _3936.x * _2310)) + _3936.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3968)
                            {
                                float _3995 = _3863.x - _2310;
                                float _3996 = _3863.y - _2311;
                                float _3997 = _3863.z - _2312;
                                float _3998 = dot(vec3(_3995, _3996, _3997), vec3(_3995, _3996, _3997));
                                float _4001 = inversesqrt(_3998);
                                float _4002 = _4001 * _3995;
                                float _4003 = _4001 * _3996;
                                float _4004 = _4001 * _3997;
                                float _4008 = 1.0 - (_3998 / (_3864 * _3864));
                                float _5201 = isnan(0.0) ? _4008 : (isnan(_4008) ? 0.0 : max(_4008, 0.0));
                                float _4009 = isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0));
                                float _4013 = sqrt(_3998) * _3879.w;
                                float _4015 = 1.39999997615814208984375 / (_4013 + 1.39999997615814208984375);
                                float _4016 = _4015 * _4015;
                                float _4019 = ((1.0 - _4016) * dot(vec3(_4002, _4003, _4004), vec3(_1143, _1146, _1149))) + _4016;
                                float _4022 = _4013 * _4013;
                                float _4026 = (fma(_2312, _3906.z, fma(_2311, _3906.y, _3906.x * _2310)) + _3906.w) / _3967;
                                float _4027 = (fma(_2312, _3921.z, fma(_2311, _3921.y, _3921.x * _2310)) + _3921.w) / _3967;
                                float _4031 = 1.0 - dot(vec2(_4026, _4027), vec2(_4026, _4027));
                                float _5217 = isnan(0.0) ? _4031 : (isnan(_4031) ? 0.0 : max(_4031, 0.0));
                                float _4032 = isnan(1.0) ? _5217 : (isnan(_5217) ? 1.0 : min(_5217, 1.0));
                                float _4033 = _4032 * (((isnan(0.0) ? _4019 : (isnan(_4019) ? 0.0 : max(_4019, 0.0))) * _4009) / ((_4022 * 0.699999988079071044921875) + 1.0));
                                float _4045 = exp2(log2(1.0 / ((_4022 * 3.5) + 5.0)) * 0.25);
                                float _4046 = 1.0 - _1263;
                                float _4053 = sqrt(1.0 - ((1.0 - (_4046 * _4046)) * (1.0 - (_4045 * _4045))));
                                float _4054 = _4053 * _4053;
                                float _4055 = _4054 * _4054;
                                float _4056 = _4002 - _3506;
                                float _4057 = _4003 - _3507;
                                float _4058 = _4004 - _3508;
                                float _4062 = inversesqrt(dot(vec3(_4056, _4057, _4058), vec3(_4056, _4057, _4058)));
                                float _4066 = dot(vec3(_1143, _1146, _1149), vec3((-0.0) - _3506, (-0.0) - _3507, (-0.0) - _3508));
                                float _5228 = isnan(0.0) ? _4066 : (isnan(_4066) ? 0.0 : max(_4066, 0.0));
                                float _4069 = isnan(1.0) ? _5228 : (isnan(_5228) ? 1.0 : min(_5228, 1.0));
                                float _4070 = dot(vec3(_1143, _1146, _1149), vec3(_4062 * _4056, _4062 * _4057, _4062 * _4058));
                                float _5239 = isnan(0.0) ? _4070 : (isnan(_4070) ? 0.0 : max(_4070, 0.0));
                                float _4073 = isnan(1.0) ? _5239 : (isnan(_5239) ? 1.0 : min(_5239, 1.0));
                                float _4077 = ((_4073 * _4073) * (_4055 + (-1.0))) + 1.0;
                                float _4078 = _4015 * _4054;
                                float _4079 = _4078 * _4078;
                                float _4085 = ((1.0 - _4079) * dot(vec3(_1143, _1146, _1149), vec3(_4002, _4003, _4004))) + _4079;
                                float _5250 = isnan(0.0) ? _4085 : (isnan(_4085) ? 0.0 : max(_4085, 0.0));
                                float _4086 = isnan(1.0) ? _5250 : (isnan(_5250) ? 1.0 : min(_5250, 1.0));
                                float _4087 = 1.0 - _4054;
                                float _4097 = (0.5 / (((_4086 * ((_4069 * _4087) + _4054)) + 9.9999999392252902907785028219223e-09) + (((_4086 * _4087) + _4054) * _4069))) * _4086;
                                float _5261 = isnan(0.0) ? _4097 : (isnan(_4097) ? 0.0 : max(_4097, 0.0));
                                float _4107 = (_4032 * _4009) * (((_4055 * 3.1415927410125732421875) * (isnan(1.0) ? _5261 : (isnan(_5261) ? 1.0 : min(_5261, 1.0)))) / ((_4077 * _4077) * ((_4022 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4033 * _3879.y;
                                frontier_phi_78_pred_1 = _4033 * _3879.x;
                                frontier_phi_78_pred_2 = _4107 * _3891.z;
                                frontier_phi_78_pred_3 = _4107 * _3891.y;
                                frontier_phi_78_pred_4 = _4107 * _3891.x;
                                frontier_phi_78_pred_5 = _4033 * _3879.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4115 = frontier_phi_78_pred;
                            _4114 = frontier_phi_78_pred_1;
                            _4113 = frontier_phi_78_pred_2;
                            _4112 = frontier_phi_78_pred_3;
                            _4111 = frontier_phi_78_pred_4;
                            _4116 = frontier_phi_78_pred_5;
                            _3821 = _4114 + _3834;
                            _3822 = _4115 + _3835;
                            _3823 = _4116 + _3836;
                            _3818 = _4111 + _3831;
                            _3819 = _4112 + _3832;
                            _3820 = _4113 + _3833;
                            if (_3838 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3831 = _3818;
                                _3832 = _3819;
                                _3833 = _3820;
                                _3834 = _3821;
                                _3835 = _3822;
                                _3836 = _3823;
                                _3837 = _3838;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3823;
                        frontier_phi_72_pred_1 = _3822;
                        frontier_phi_72_pred_2 = _3821;
                        frontier_phi_72_pred_3 = _3820;
                        frontier_phi_72_pred_4 = _3819;
                        frontier_phi_72_pred_5 = _3818;
                    }
                    _3491 = frontier_phi_72_pred;
                    _3489 = frontier_phi_72_pred_1;
                    _3487 = frontier_phi_72_pred_2;
                    _3485 = frontier_phi_72_pred_3;
                    _3483 = frontier_phi_72_pred_4;
                    _3481 = frontier_phi_72_pred_5;
                    uint _3626 = _3625 + 1u;
                    if (_3626 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3619 = _3481;
                        _3620 = _3483;
                        _3621 = _3485;
                        _3622 = _3487;
                        _3623 = _3489;
                        _3624 = _3491;
                        _3625 = _3626;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3491;
                frontier_phi_60_61_ladder_1 = _3489;
                frontier_phi_60_61_ladder_2 = _3485;
                frontier_phi_60_61_ladder_3 = _3483;
                frontier_phi_60_61_ladder_4 = _3481;
                frontier_phi_60_61_ladder_5 = _3487;
            }
            else
            {
                frontier_phi_60_61_ladder = _3369;
                frontier_phi_60_61_ladder_1 = _3367;
                frontier_phi_60_61_ladder_2 = _3363;
                frontier_phi_60_61_ladder_3 = _3361;
                frontier_phi_60_61_ladder_4 = _3359;
                frontier_phi_60_61_ladder_5 = _3365;
            }
            _3480 = frontier_phi_60_61_ladder_4;
            _3482 = frontier_phi_60_61_ladder_3;
            _3484 = frontier_phi_60_61_ladder_2;
            _3486 = frontier_phi_60_61_ladder_5;
            _3488 = frontier_phi_60_61_ladder_1;
            _3490 = frontier_phi_60_61_ladder;
        }
        float _3495 = isnan(1.0) ? _1247 : (isnan(_1247) ? 1.0 : min(_1247, 1.0));
        _3263 = (_3495 * _3486) + _2775;
        _3265 = (_3495 * _3488) + _2777;
        _3267 = (_3495 * _3490) + _2779;
        _3269 = ((_3480 * _1232) * _3495) + _3113;
        _3271 = ((_3482 * _1234) * _3495) + _3115;
        _3273 = ((_3484 * _1235) * _3495) + _3117;
    }
    else
    {
        _3263 = _2775;
        _3265 = _2777;
        _3267 = _2779;
        _3269 = _3113;
        _3271 = _3115;
        _3273 = _3117;
    }
    uint _3279 = _1176 + uint(cbMatDynParam._m0[0u].w);
    float _3285 = cbInstanceData._m0[_3279].x * ((((cbMtdParam._m0[22u].x * _965.x) * cbMtdParam._m0[32u].x) * _986) + _757);
    float _3286 = cbInstanceData._m0[_3279].y * ((((cbMtdParam._m0[22u].y * _965.y) * cbMtdParam._m0[32u].x) * _986) + _758);
    float _3287 = cbInstanceData._m0[_3279].z * ((((cbMtdParam._m0[22u].z * _965.z) * cbMtdParam._m0[32u].x) * _986) + _759);
    float _5277 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
    float _5288 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
    float _5299 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
    float _3304 = (((isnan(1.0) ? _5277 : (isnan(_5277) ? 1.0 : min(_5277, 1.0))) * (_3263 + ((isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0))) * _1247))) + ((_3269 + ((isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0))) * _2044)) * cbPerFrame._m0[3u].x)) + _3285;
    float _3306 = (_3286 + ((_3271 + ((isnan(0.0) ? _2260 : (isnan(_2260) ? 0.0 : max(_2260, 0.0))) * _2044)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5288 : (isnan(_5288) ? 1.0 : min(_5288, 1.0))) * (_3265 + ((isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0))) * _1247)));
    float _3308 = (_3287 + ((_3273 + ((isnan(0.0) ? _2263 : (isnan(_2263) ? 0.0 : max(_2263, 0.0))) * _2044)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5299 : (isnan(_5299) ? 1.0 : min(_5299, 1.0))) * (_3267 + ((isnan(0.0) ? _1973 : (isnan(_1973) ? 0.0 : max(_1973, 0.0))) * _1247)));
    float _5325 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3321 = isnan(1.0) ? _5325 : (isnan(_5325) ? 1.0 : min(_5325, 1.0));
    uint _3322 = _1175 + 6u;
    float _3330 = _1120 / cbSceneParam._m0[86u].x;
    float _3331 = _1121 / cbSceneParam._m0[86u].y;
    vec4 _3345 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3330, _3331, (log2((isnan(cbSceneParam._m0[77u].w) ? _1075 : (isnan(_1075) ? cbSceneParam._m0[77u].w : min(_1075, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3347 = _3345.x;
    float _3348 = _3345.y;
    float _3349 = _3345.z;
    float _3350 = _3345.w;
    float _3421;
    float _3423;
    float _3425;
    float _3427;
    if (_1075 > cbSceneParam._m0[78u].w)
    {
        float _3384 = isnan(_1075) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1075 : min(cbSceneParam._m0[80u].w, _1075));
        float _3385 = _3384 / _1075;
        float _3396 = _3385 * _1105;
        float _3397 = _1106 * _3385;
        float _3398 = (-0.0) - _3397;
        float _3399 = _3385 * _1107;
        float _3401 = (cbSceneParam._m0[77u].w * _3398) / _3384;
        float _3402 = _3401 + cbSceneParam._m0[79u].w;
        float _3403 = cbSceneParam._m0[79u].w - _3397;
        float _3409 = sqrt(((_3396 * _3396) + (_3397 * _3397)) + (_3399 * _3399));
        float _3412 = (1.0 - (cbSceneParam._m0[77u].w / _3384)) * _3409;
        float _3417 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3419 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3581;
        if (abs((_3398 - _3401) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3581 = ((((_3402 > 0.0) ? exp2(_3417 * _3402) : (2.0 - exp2(_3419 * _3402))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3412;
        }
        else
        {
            float _3541 = 1.0 / cbSceneParam._m0[80u].x;
            float _3542 = isnan(_3403) ? _3402 : (isnan(_3402) ? _3403 : max(_3402, _3403));
            float _3543 = isnan(_3403) ? _3402 : (isnan(_3402) ? _3403 : min(_3402, _3403));
            float _3552 = isnan(0.0) ? _3542 : (isnan(_3542) ? 0.0 : min(_3542, 0.0));
            float _3553 = isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : min(_3543, 0.0));
            _3581 = ((abs(_3409 / _3398) * cbSceneParam._m0[80u].y) * ((((_3552 - _3553) * 2.0) - ((exp2(_3417 * (isnan(0.0) ? _3542 : (isnan(_3542) ? 0.0 : max(_3542, 0.0)))) - exp2(_3417 * (isnan(0.0) ? _3543 : (isnan(_3543) ? 0.0 : max(_3543, 0.0))))) * _3541)) - ((exp2(_3419 * _3552) - exp2(_3419 * _3553)) * _3541))) + (_3412 * cbSceneParam._m0[80u].z);
        }
        vec4 _3583 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3330, _3331, 1.0), 0.0);
        float _3592 = exp2((_3581 * (-1.44269502162933349609375)) * (1.0 - _3583.w));
        float _3593 = log2(_3592);
        float _3609 = log2(_3350);
        _3421 = (exp2(_3609 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3593 * cbSceneParam._m0[78u].x)) * _3583.x) / cbSceneParam._m0[78u].x)) + _3347;
        _3423 = (exp2(_3609 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3593 * cbSceneParam._m0[78u].y)) * _3583.y) / cbSceneParam._m0[78u].y)) + _3348;
        _3425 = (exp2(_3609 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3593 * cbSceneParam._m0[78u].z)) * _3583.z) / cbSceneParam._m0[78u].z)) + _3349;
        _3427 = _3592 * _3350;
    }
    else
    {
        _3421 = _3347;
        _3423 = _3348;
        _3425 = _3349;
        _3427 = _3350;
    }
    float _3439 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3440 = _3439 == 3.0;
    float _3441 = log2(_3427);
    float _3445 = exp2(_3441 * cbSceneParam._m0[78u].x);
    float _3446 = exp2(_3441 * cbSceneParam._m0[78u].y);
    float _3447 = exp2(_3441 * cbSceneParam._m0[78u].z);
    float _3448 = _3445 * (isnan(0.0) ? _3304 : (isnan(_3304) ? 0.0 : max(_3304, 0.0)));
    float _3449 = _3446 * (isnan(0.0) ? _3306 : (isnan(_3306) ? 0.0 : max(_3306, 0.0)));
    float _3450 = _3447 * (isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0)));
    float _3459 = (_3439 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3459 * (_3440 ? _3448 : (_3448 + (cbSceneParam._m0[72u].w * _3421)));
    SV_Target.y = _3459 * (_3440 ? _3449 : (_3449 + (cbSceneParam._m0[72u].w * _3423)));
    SV_Target.z = _3459 * (_3440 ? _3450 : (_3450 + (cbSceneParam._m0[72u].w * _3425)));
    SV_Target.w = cbInstanceData._m0[_3322].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3285) * _3321) * _3445) * _3459;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3286) * _3321) * _3446) * _3459;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3287) * _3321) * _3447) * _3459;
    SV_Target_1.w = cbInstanceData._m0[_3322].w;
}


