#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1620;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _239 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _240 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _241 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _247 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _254 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _261 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _276 = cbMtdParam._m0[33u].y + TEXCOORD.y;
    vec4 _290 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (_276 * cbTextureTilingScale._m0[10u].y) + cbTextureTilingScale._m0[10u].w));
    float _297 = log2(0.0);
    float _299 = exp2(_297 * cbMtdParam._m0[31u].z);
    float _303 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.x) * _299);
    float _304 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.y) * _299);
    float _305 = _299 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.z) * _299);
    float _306 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _307 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _308 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _309 = isnan(1.0) ? _306 : (isnan(_306) ? 1.0 : min(_306, 1.0));
    float _311 = isnan(1.0) ? _307 : (isnan(_307) ? 1.0 : min(_307, 1.0));
    float _312 = isnan(1.0) ? _308 : (isnan(_308) ? 1.0 : min(_308, 1.0));
    vec4 _328 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _276) + cbTextureTilingScale._m0[0u].w));
    float _332 = _328.z;
    float _333 = _328.w;
    float _334 = 1.0 - _333;
    float _341 = exp2(log2((1.0 - (_334 * _332)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _342 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _343 = isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0));
    float _355 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_334 * _334) * _332))) * cbMtdParam._m0[34u].w);
    float _356 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    vec4 _370 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _373 = _370.y;
    float _376 = (_373 * ((isnan(1.0) ? _356 : (isnan(_356) ? 1.0 : min(_356, 1.0))) - _333)) + _333;
    vec4 _388 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _276) + cbTextureTilingScale._m0[2u].w));
    float _205[6];
    float _206[6];
    float _207[6];
    _205[0u] = cbMtdParam._m0[12u].x;
    _206[0u] = cbMtdParam._m0[12u].y;
    _207[0u] = cbMtdParam._m0[12u].z;
    _205[1u] = cbMtdParam._m0[13u].x;
    _206[1u] = cbMtdParam._m0[13u].y;
    _207[1u] = cbMtdParam._m0[13u].z;
    _205[2u] = cbMtdParam._m0[14u].x;
    _206[2u] = cbMtdParam._m0[14u].y;
    _207[2u] = cbMtdParam._m0[14u].z;
    _205[3u] = cbMtdParam._m0[15u].x;
    _206[3u] = cbMtdParam._m0[15u].y;
    _207[3u] = cbMtdParam._m0[15u].z;
    _205[4u] = cbMtdParam._m0[16u].x;
    _206[4u] = cbMtdParam._m0[16u].y;
    _207[4u] = cbMtdParam._m0[16u].z;
    _205[5u] = cbMtdParam._m0[11u].x;
    _206[5u] = cbMtdParam._m0[11u].y;
    _207[5u] = cbMtdParam._m0[11u].z;
    float _456 = (_370.x + (-0.02500000037252902984619140625)) * 8.0;
    float _458 = roundEven(_456);
    float _459 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    uint _462 = uint(int(isnan(5.0) ? _459 : (isnan(_459) ? 5.0 : min(_459, 5.0))));
    float _212[6];
    float _213[6];
    float _214[6];
    _212[0u] = 1.0;
    _213[0u] = 1.0;
    _214[0u] = 1.0;
    _212[1u] = cbMtdParam._m0[23u].x;
    _213[1u] = cbMtdParam._m0[23u].y;
    _214[1u] = cbMtdParam._m0[23u].z;
    _212[2u] = cbMtdParam._m0[21u].x;
    _213[2u] = cbMtdParam._m0[21u].y;
    _214[2u] = cbMtdParam._m0[21u].z;
    _212[3u] = cbMtdParam._m0[19u].x;
    _213[3u] = cbMtdParam._m0[19u].y;
    _214[3u] = cbMtdParam._m0[19u].z;
    _212[4u] = cbMtdParam._m0[18u].x;
    _213[4u] = cbMtdParam._m0[18u].y;
    _214[4u] = cbMtdParam._m0[18u].z;
    _212[5u] = cbMtdParam._m0[17u].x;
    _213[5u] = cbMtdParam._m0[17u].y;
    _214[5u] = cbMtdParam._m0[17u].z;
    float _549 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[38u].w * TEXCOORD.x) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[39u].x * TEXCOORD.y) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _550 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    uint _552 = uint(int(isnan(5.0) ? _550 : (isnan(_550) ? 5.0 : min(_550, 5.0))));
    float _208[6];
    _208[0u] = 1.0;
    _208[1u] = cbMtdParam._m0[23u].w;
    _208[2u] = cbMtdParam._m0[21u].w;
    _208[3u] = cbMtdParam._m0[19u].w;
    _208[4u] = cbMtdParam._m0[18u].w;
    _208[5u] = cbMtdParam._m0[17u].w;
    float _589 = ((((_205[_462] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_212[_552] - _205[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].x) * _388.x;
    float _590 = ((((_206[_462] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_213[_552] - _206[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].y) * _388.y;
    float _591 = ((((_207[_462] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_214[_552] - _207[_462])) * _208[_462])) * _373) + cbMtdParam._m0[10u].z) * _388.z;
    vec4 _603 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _276) + cbTextureTilingScale._m0[1u].w));
    float _623 = (((cbMtdParam._m0[9u].x * _603.x) - _589) * _376) + _589;
    float _624 = (((cbMtdParam._m0[9u].y * _603.y) - _590) * _376) + _590;
    float _625 = (((cbMtdParam._m0[9u].z * _603.z) - _591) * _376) + _591;
    vec4 _637 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _276) + cbTextureTilingScale._m0[5u].w));
    float _657 = (((cbMtdParam._m0[20u].x * _637.x) - _623) * _343) + _623;
    float _658 = (((cbMtdParam._m0[20u].y * _637.y) - _624) * _343) + _624;
    float _659 = (((cbMtdParam._m0[20u].z * _637.z) - _625) * _343) + _625;
    vec4 _672 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * _276) + cbTextureTilingScale._m0[7u].w));
    float _209[6];
    float _210[6];
    float _211[6];
    _209[0u] = cbMtdParam._m0[24u].x;
    _210[0u] = cbMtdParam._m0[24u].y;
    _211[0u] = cbMtdParam._m0[24u].z;
    _209[1u] = cbMtdParam._m0[25u].x;
    _210[1u] = cbMtdParam._m0[25u].y;
    _211[1u] = cbMtdParam._m0[25u].z;
    _209[2u] = cbMtdParam._m0[26u].x;
    _210[2u] = cbMtdParam._m0[26u].y;
    _211[2u] = cbMtdParam._m0[26u].z;
    _209[3u] = cbMtdParam._m0[27u].x;
    _210[3u] = cbMtdParam._m0[27u].y;
    _211[3u] = cbMtdParam._m0[27u].z;
    _209[4u] = cbMtdParam._m0[28u].x;
    _210[4u] = cbMtdParam._m0[28u].y;
    _211[4u] = cbMtdParam._m0[28u].z;
    _209[5u] = cbMtdParam._m0[29u].x;
    _210[5u] = cbMtdParam._m0[29u].y;
    _211[5u] = cbMtdParam._m0[29u].z;
    float _759 = _209[_462] * _373;
    float _760 = _210[_462] * _373;
    float _761 = _211[_462] * _373;
    float _762 = _759 + ((_290.x * 4.5) * ((((cbMtdParam._m0[30u].x * _672.x) - _657) * _309) + _657));
    float _763 = _760 + ((_290.y * 4.5) * ((((cbMtdParam._m0[30u].y * _672.y) - _658) * _311) + _658));
    float _764 = _761 + ((_290.z * 4.5) * ((((cbMtdParam._m0[30u].z * _672.z) - _659) * _312) + _659));
    float _200[5];
    float _201[5];
    _200[0u] = cbMtdParam._m0[35u].y;
    _201[0u] = cbMtdParam._m0[35u].z;
    _200[1u] = cbMtdParam._m0[36u].w;
    _201[1u] = cbMtdParam._m0[37u].x;
    _200[2u] = cbMtdParam._m0[37u].y;
    _201[2u] = cbMtdParam._m0[37u].z;
    _200[3u] = cbMtdParam._m0[37u].w;
    _201[3u] = cbMtdParam._m0[38u].x;
    _200[4u] = cbMtdParam._m0[38u].y;
    _201[4u] = cbMtdParam._m0[38u].z;
    float _792 = roundEven(5.0 - _456);
    float _793 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _794 = isnan(4.0) ? _793 : (isnan(_793) ? 4.0 : min(_793, 4.0));
    float _796 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    uint _798 = uint(int(isnan(4.0) ? _796 : (isnan(_796) ? 4.0 : min(_796, 4.0))));
    float _807 = ((cbMtdParam._m0[39u].z - _201[_798]) * _376) + _201[_798];
    float _815 = ((cbMtdParam._m0[40u].x - _807) * _343) + _807;
    float _820 = ((cbMtdParam._m0[40u].z - _815) * _309) + _815;
    vec4 _836 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * _276) + cbTextureTilingScale._m0[8u].w));
    float _838 = _836.x;
    float _839 = _836.y;
    float _841 = _836.z + _200[_798];
    vec4 _853 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * _276) + cbTextureTilingScale._m0[9u].w));
    float _861 = (((cbMtdParam._m0[39u].y - _841) + _853.z) * _376) + _841;
    vec4 _873 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _276) + cbTextureTilingScale._m0[11u].w));
    float _881 = (((cbMtdParam._m0[39u].w - _861) + _873.z) * _343) + _861;
    float _887 = ((((_332 * 2.0) * _881) - _881) * cbMtdParam._m0[33u].w) + _881;
    vec4 _899 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * _276) + cbTextureTilingScale._m0[12u].w));
    float _907 = (((_899.z + cbMtdParam._m0[40u].y) - _887) * _312) + _887;
    float _938 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _942 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _969 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * ((_938 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_942 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _984 = (-0.0) - ((_942 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _988 = (_942 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _989 = isnan(_988) ? _984 : (isnan(_984) ? _988 : min(_984, _988));
    float _4353 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _990 = isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0));
    float _1015 = ((_853.x - _838) * _376) + _838;
    float _1016 = ((_853.y - _839) * _376) + _839;
    float _1021 = ((_873.x - _1015) * _343) + _1015;
    float _1022 = ((_873.y - _1016) * _343) + _1016;
    float _1031 = ((((_899.x - _1021) * _309) + _1021) * 2.0) + (-1.0);
    float _1032 = ((((_899.y - _1022) * _311) + _1022) * 2.0) + (-1.0);
    float _1033 = dot(vec2(_1031, _1032), vec2(_1031, _1032));
    float _4364 = isnan(0.0) ? _1033 : (isnan(_1033) ? 0.0 : max(_1033, 0.0));
    float _1038 = sqrt(1.0 - (isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0))));
    float _1041 = (cbMtdParam._m0[34u].x * ((_328.x * 2.0) + (-1.0))) + _1031;
    float _1042 = (cbMtdParam._m0[34u].x * ((_328.y * 2.0) + (-1.0))) + _1032;
    float _1045 = fma(_1038, _254 * NORMAL.x, fma(_1042, _261 * TANGENT.x, (_247 * _239) * _1041));
    float _1048 = fma(_1038, _254 * NORMAL.y, fma(_1042, _261 * TANGENT.y, (_247 * _240) * _1041));
    float _1051 = fma(_1038, _254 * NORMAL.z, fma(_1042, _261 * TANGENT.z, (_247 * _241) * _1041));
    float _1055 = inversesqrt(dot(vec3(_1045, _1048, _1051), vec3(_1045, _1048, _1051)));
    float _1056 = _1055 * _1045;
    float _1057 = _1055 * _1048;
    float _1058 = _1055 * _1051;
    float _4375 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
    float _1059 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
    float _4386 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4397 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4408 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _4419 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _1063 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
    float _1079 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1099 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1109 = cbSceneParam._m0[71u].x - (_938 / _1099);
    float _1110 = cbSceneParam._m0[71u].y - (_942 / _1099);
    float _1111 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1099);
    float _1115 = inversesqrt(dot(vec3(_1109, _1110, _1111), vec3(_1109, _1110, _1111)));
    float _1116 = _1109 * _1115;
    float _1117 = _1110 * _1115;
    float _1118 = _1111 * _1115;
    float _1124 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1125 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1127 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1129 = _1127.w;
    float _1147 = fma(_1058, cbSceneParam._m0[5u].z, fma(_1057, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1056));
    float _1150 = fma(_1058, cbSceneParam._m0[6u].z, fma(_1057, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1056));
    float _1153 = fma(_1058, cbSceneParam._m0[7u].z, fma(_1057, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1056));
    vec4 _1155 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1166 = (((_1155.y - _1059) + (_1155.w * _1059)) * cbMtdParam._m0[3u].x) + _1059;
    uint _1179 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1180 = _1179 + 9u;
    uint _1181 = _1180 + uint(cbMatDynParam._m0[0u].w);
    float _1187 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4386 : (isnan(_4386) ? 1.0 : min(_4386, 1.0)))) * cbInstanceData._m0[_1181].x;
    float _1188 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4397 : (isnan(_4397) ? 1.0 : min(_4397, 1.0)))) * cbInstanceData._m0[_1181].y;
    float _1189 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4408 : (isnan(_4408) ? 1.0 : min(_4408, 1.0)))) * cbInstanceData._m0[_1181].z;
    float _4430 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
    float _1190 = isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0));
    float _4441 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
    float _1191 = isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0));
    float _4452 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
    float _1192 = isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0));
    vec4 _1193 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1198 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1209 = (((_1198.x - _1063) + (_1198.w * _1063)) * cbMtdParam._m0[3u].x) + _1063;
    float _1222 = (cbMtdParam._m0[3u].x * (((_1190 * _1129) - _1190) + _1193.x)) + _1190;
    float _1223 = (cbMtdParam._m0[3u].x * (((_1191 * _1129) - _1191) + _1193.y)) + _1191;
    float _1224 = (cbMtdParam._m0[3u].x * (((_1192 * _1129) - _1192) + _1193.z)) + _1192;
    float _1225 = 1.0 - _1209;
    float _1226 = _1225 * _1222;
    float _1227 = _1225 * _1223;
    float _1228 = _1225 * _1224;
    float _1233 = (_1222 + (-0.039999999105930328369140625)) * _1209;
    float _1234 = (_1223 + (-0.039999999105930328369140625)) * _1209;
    float _1235 = (_1224 + (-0.039999999105930328369140625)) * _1209;
    float _1236 = _1233 + 0.039999999105930328369140625;
    float _1238 = _1234 + 0.039999999105930328369140625;
    float _1239 = _1235 + 0.039999999105930328369140625;
    vec4 _1248 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1124, cbSceneParam._m0[86u].y * _1125));
    float _1251 = _1248.x * TEXCOORD_5.w;
    float _1252 = dot(vec3(_1056, _1057, _1058), vec3(_1116, _1117, _1118));
    float _1255 = _1252 * 2.0;
    float _1259 = (_1255 * _1056) - _1116;
    float _1260 = (_1255 * _1057) - _1117;
    float _1261 = (_1255 * _1058) - _1118;
    float _1265 = abs(dot(vec3(_1116, _1117, _1118), vec3(_1056, _1057, _1058)));
    float _4463 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
    float _1267 = sqrt(_1166);
    float _1278 = exp2((_1267 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1267 * 3.0));
    float _1284 = (1.0 - _1278) * ((_1267 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1285 = _1278 * _1267;
    float _1313 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1317 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1321 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1619;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    float _1634;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1346 = fma(_1321, cbModelParam._m0[26u].z, fma(_1317, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1313));
        float _1350 = fma(_1321, cbModelParam._m0[27u].z, fma(_1317, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1313));
        float _1354 = fma(_1321, cbModelParam._m0[28u].z, fma(_1317, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1313));
        float _1378 = _1313 + _1056;
        float _1379 = _1317 + _1057;
        float _1380 = _1321 + _1058;
        float _1390 = fma(_1380, cbModelParam._m0[26u].z, fma(_1379, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1378)) - _1346;
        float _1391 = fma(_1380, cbModelParam._m0[27u].z, fma(_1379, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1378)) - _1350;
        float _1392 = fma(_1380, cbModelParam._m0[28u].z, fma(_1379, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1378)) - _1354;
        float _1396 = inversesqrt(dot(vec3(_1390, _1391, _1392), vec3(_1390, _1391, _1392)));
        float _1408 = ((_1396 * _1390) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1346 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1409 = ((_1396 * _1391) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1350 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1410 = ((_1396 * _1392) / cbModelParam._m0[34u].z) + ((((((_1354 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1413 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1420 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1427 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        vec4 _1434 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1408, _1409, _1410), 0.0);
        float _1447 = exp2((_1413.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1413.x + (-0.5));
        float _1449 = _1447 * (_1413.y + (-0.5));
        float _1450 = _1447 * (_1413.z + (-0.5));
        float _1457 = exp2((_1420.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1420.x + (-0.5));
        float _1459 = _1457 * (_1420.y + (-0.5));
        float _1460 = _1457 * (_1420.z + (-0.5));
        float _1467 = exp2((_1427.w + (-0.5)) * 20.0) * 2.0;
        float _1468 = _1467 * (_1427.x + (-0.5));
        float _1469 = _1467 * (_1427.y + (-0.5));
        float _1470 = _1467 * (_1427.z + (-0.5));
        float _1477 = exp2((_1434.w + (-0.5)) * 20.0) * 2.0;
        float _1478 = _1477 * (_1434.x + (-0.5));
        float _1479 = _1477 * (_1434.y + (-0.5));
        float _1480 = _1477 * (_1434.z + (-0.5));
        float _1481 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1482 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
        float _1483 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1484 = _1448 * 0.5;
        float _1485 = _1458 * 0.5;
        float _1486 = _1468 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1501 = (dot(vec3(_1056, _1057, _1058), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4489 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
        float _1511 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1481 + 9.9999997473787516355514526367188e-06);
        float _4500 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0));
        float _1513 = _1512 * 2.0;
        float _1517 = (1.0 - _1512) / (_1512 + 1.0);
        float _4511 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _1527 = ((((1.0 - _1518) * (_1513 + 2.0)) * exp2(log2(isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0))) * (_1513 + 1.0))) + _1518) * _1481;
        float _1528 = _1449 * 0.5;
        float _1529 = _1459 * 0.5;
        float _1530 = _1469 * 0.5;
        float _1531 = dot(vec3(_1528, _1529, _1530), vec3(_1528, _1529, _1530));
        float _1536 = (_1531 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1531);
        float _1544 = (dot(vec3(_1056, _1057, _1058), vec3(_1536 * _1528, _1536 * _1529, _1536 * _1530)) + 1.0) * 0.5;
        float _4522 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1553 = sqrt(((_1529 * _1529) + (_1528 * _1528)) + (_1530 * _1530)) / (_1482 + 9.9999997473787516355514526367188e-06);
        float _4533 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _4533 : (isnan(_4533) ? 1.0 : min(_4533, 1.0));
        float _1555 = _1554 * 2.0;
        float _1559 = (1.0 - _1554) / (_1554 + 1.0);
        float _4544 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _4544 : (isnan(_4544) ? 1.0 : min(_4544, 1.0));
        float _1569 = ((((1.0 - _1560) * (_1555 + 2.0)) * exp2(log2(isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0))) * (_1555 + 1.0))) + _1560) * _1482;
        float _1570 = _1450 * 0.5;
        float _1571 = _1460 * 0.5;
        float _1572 = _1470 * 0.5;
        float _1573 = dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572));
        float _1578 = (_1573 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1573);
        float _1586 = (dot(vec3(_1056, _1057, _1058), vec3(_1578 * _1570, _1578 * _1571, _1578 * _1572)) + 1.0) * 0.5;
        float _4555 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1595 = sqrt(((_1571 * _1571) + (_1570 * _1570)) + (_1572 * _1572)) / (_1483 + 9.9999997473787516355514526367188e-06);
        float _4566 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0));
        float _1597 = _1596 * 2.0;
        float _1601 = (1.0 - _1596) / (_1596 + 1.0);
        float _4577 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1602 = isnan(1.0) ? _4577 : (isnan(_4577) ? 1.0 : min(_4577, 1.0));
        float _1611 = ((((1.0 - _1602) * (_1597 + 2.0)) * exp2(log2(isnan(1.0) ? _4555 : (isnan(_4555) ? 1.0 : min(_4555, 1.0))) * (_1597 + 1.0))) + _1602) * _1483;
        _1619 = _1450;
        _1621 = _1449;
        _1622 = _1448;
        _1623 = _1460;
        _1624 = _1459;
        _1625 = _1458;
        _1626 = _1470;
        _1627 = _1469;
        _1628 = _1468;
        _1629 = _1483;
        _1630 = _1482;
        _1631 = _1481;
        _1632 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0)));
        _1633 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)));
        _1634 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)));
    }
    else
    {
        _1619 = _1620;
        _1621 = _1620;
        _1622 = _1620;
        _1623 = _1620;
        _1624 = _1620;
        _1625 = _1620;
        _1626 = _1620;
        _1627 = _1620;
        _1628 = _1620;
        _1629 = _1620;
        _1630 = _1620;
        _1631 = _1620;
        _1632 = 0.0;
        _1633 = 0.0;
        _1634 = 0.0;
    }
    float _1924;
    float _1925;
    float _1926;
    float _1927;
    float _1928;
    float _1929;
    float _1930;
    float _1931;
    float _1932;
    float _1933;
    float _1934;
    float _1935;
    float _1936;
    float _1937;
    float _1938;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1657 = fma(_1321, cbModelParam._m0[30u].z, fma(_1317, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1313));
        float _1661 = fma(_1321, cbModelParam._m0[31u].z, fma(_1317, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1313));
        float _1665 = fma(_1321, cbModelParam._m0[32u].z, fma(_1317, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1313));
        float _1687 = _1313 + _1056;
        float _1688 = _1317 + _1057;
        float _1689 = _1321 + _1058;
        float _1699 = fma(_1689, cbModelParam._m0[30u].z, fma(_1688, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1687)) - _1657;
        float _1700 = fma(_1689, cbModelParam._m0[31u].z, fma(_1688, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1687)) - _1661;
        float _1701 = fma(_1689, cbModelParam._m0[32u].z, fma(_1688, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1687)) - _1665;
        float _1705 = inversesqrt(dot(vec3(_1699, _1700, _1701), vec3(_1699, _1700, _1701)));
        float _1717 = ((_1705 * _1699) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1657 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1718 = ((_1705 * _1700) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1661 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1719 = ((_1705 * _1701) / cbModelParam._m0[35u].z) + ((((((_1665 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1721 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1717, _1718, _1719), 0.0);
        vec4 _1728 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1717, _1718, _1719), 0.0);
        vec4 _1735 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1717, _1718, _1719), 0.0);
        vec4 _1742 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1717, _1718, _1719), 0.0);
        float _1754 = exp2((_1721.w + (-0.5)) * 20.0) * 2.0;
        float _1755 = _1754 * (_1721.x + (-0.5));
        float _1756 = _1754 * (_1721.y + (-0.5));
        float _1757 = _1754 * (_1721.z + (-0.5));
        float _1764 = exp2((_1728.w + (-0.5)) * 20.0) * 2.0;
        float _1765 = _1764 * (_1728.x + (-0.5));
        float _1766 = _1764 * (_1728.y + (-0.5));
        float _1767 = _1764 * (_1728.z + (-0.5));
        float _1774 = exp2((_1735.w + (-0.5)) * 20.0) * 2.0;
        float _1775 = _1774 * (_1735.x + (-0.5));
        float _1776 = _1774 * (_1735.y + (-0.5));
        float _1777 = _1774 * (_1735.z + (-0.5));
        float _1784 = exp2((_1742.w + (-0.5)) * 20.0) * 2.0;
        float _1785 = _1784 * (_1742.x + (-0.5));
        float _1786 = _1784 * (_1742.y + (-0.5));
        float _1787 = _1784 * (_1742.z + (-0.5));
        float _1788 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1789 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1790 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1791 = _1755 * 0.5;
        float _1792 = _1765 * 0.5;
        float _1793 = _1775 * 0.5;
        float _1794 = dot(vec3(_1791, _1792, _1793), vec3(_1791, _1792, _1793));
        float _1799 = (_1794 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1794);
        float _1807 = (dot(vec3(_1056, _1057, _1058), vec3(_1799 * _1791, _1799 * _1792, _1799 * _1793)) + 1.0) * 0.5;
        float _4618 = isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0));
        float _1816 = sqrt(((_1792 * _1792) + (_1791 * _1791)) + (_1793 * _1793)) / (_1788 + 9.9999997473787516355514526367188e-06);
        float _4629 = isnan(0.0) ? _1816 : (isnan(_1816) ? 0.0 : max(_1816, 0.0));
        float _1817 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
        float _1818 = _1817 * 2.0;
        float _1822 = (1.0 - _1817) / (_1817 + 1.0);
        float _4640 = isnan(0.0) ? _1822 : (isnan(_1822) ? 0.0 : max(_1822, 0.0));
        float _1823 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
        float _1832 = ((((1.0 - _1823) * (_1818 + 2.0)) * exp2(log2(isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0))) * (_1818 + 1.0))) + _1823) * _1788;
        float _1833 = _1756 * 0.5;
        float _1834 = _1766 * 0.5;
        float _1835 = _1776 * 0.5;
        float _1836 = dot(vec3(_1833, _1834, _1835), vec3(_1833, _1834, _1835));
        float _1841 = (_1836 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1836);
        float _1849 = (dot(vec3(_1056, _1057, _1058), vec3(_1841 * _1833, _1841 * _1834, _1841 * _1835)) + 1.0) * 0.5;
        float _4651 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1858 = sqrt(((_1834 * _1834) + (_1833 * _1833)) + (_1835 * _1835)) / (_1789 + 9.9999997473787516355514526367188e-06);
        float _4662 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _1859 = isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0));
        float _1860 = _1859 * 2.0;
        float _1864 = (1.0 - _1859) / (_1859 + 1.0);
        float _4673 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1865 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _1874 = ((((1.0 - _1865) * (_1860 + 2.0)) * exp2(log2(isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0))) * (_1860 + 1.0))) + _1865) * _1789;
        float _1875 = _1757 * 0.5;
        float _1876 = _1767 * 0.5;
        float _1877 = _1777 * 0.5;
        float _1878 = dot(vec3(_1875, _1876, _1877), vec3(_1875, _1876, _1877));
        float _1883 = (_1878 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1878);
        float _1891 = (dot(vec3(_1056, _1057, _1058), vec3(_1883 * _1875, _1883 * _1876, _1883 * _1877)) + 1.0) * 0.5;
        float _4684 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1900 = sqrt(((_1876 * _1876) + (_1875 * _1875)) + (_1877 * _1877)) / (_1790 + 9.9999997473787516355514526367188e-06);
        float _4695 = isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0));
        float _1901 = isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0));
        float _1902 = _1901 * 2.0;
        float _1906 = (1.0 - _1901) / (_1901 + 1.0);
        float _4706 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1907 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
        float _1916 = ((((1.0 - _1907) * (_1902 + 2.0)) * exp2(log2(isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0))) * (_1902 + 1.0))) + _1907) * _1790;
        _1924 = _1757;
        _1925 = _1756;
        _1926 = _1755;
        _1927 = _1767;
        _1928 = _1766;
        _1929 = _1765;
        _1930 = _1777;
        _1931 = _1776;
        _1932 = _1775;
        _1933 = _1790;
        _1934 = _1789;
        _1935 = _1788;
        _1936 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1832 : (isnan(_1832) ? 0.0 : max(_1832, 0.0)));
        _1937 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0)));
        _1938 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)));
    }
    else
    {
        _1924 = _1620;
        _1925 = _1620;
        _1926 = _1620;
        _1927 = _1620;
        _1928 = _1620;
        _1929 = _1620;
        _1930 = _1620;
        _1931 = _1620;
        _1932 = _1620;
        _1933 = _1620;
        _1934 = _1620;
        _1935 = _1620;
        _1936 = 0.0;
        _1937 = 0.0;
        _1938 = 0.0;
    }
    float _1948 = (cbModelParam._m0[1u].x * (_1936 - _1632)) + _1632;
    float _1949 = (cbModelParam._m0[1u].x * (_1937 - _1633)) + _1633;
    float _1950 = (cbModelParam._m0[1u].x * (_1938 - _1634)) + _1634;
    float _1971 = fma(_1950, cbSceneParam._m0[89u].z, fma(_1949, cbSceneParam._m0[89u].y, _1948 * cbSceneParam._m0[89u].x));
    float _1974 = fma(_1950, cbSceneParam._m0[90u].z, fma(_1949, cbSceneParam._m0[90u].y, _1948 * cbSceneParam._m0[90u].x));
    float _1977 = fma(_1950, cbSceneParam._m0[91u].z, fma(_1949, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1948));
    float _1990 = _1259 * 0.5;
    float _1991 = _1260 * 0.5;
    float _1992 = _1261 * 0.5;
    float _1993 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1926, _1929, _1932, _1935));
    float _1996 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1925, _1928, _1931, _1934));
    float _1999 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1924, _1927, _1930, _1933));
    float _2033;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2006 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1619, _1623, _1626, _1629));
        float _2010 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1621, _1624, _1627, _1630));
        float _2014 = dot(vec4(_1990, _1991, _1992, 1.0), vec4(_1622, _1625, _1628, _1631));
        float _2021 = dot(vec4(cbModelParam._m0[39u]), vec4(_1990, _1991, _1992, 1.0));
        _2033 = dot(vec3(isnan(0.0) ? _2014 : (isnan(_2014) ? 0.0 : max(_2014, 0.0)), isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0)), isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2021) ? 0.0 : (isnan(0.0) ? _2021 : max(0.0, _2021))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2033 = 1.0;
    }
    float _2044;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2035 = dot(vec4(cbModelParam._m0[40u]), vec4(_1990, _1991, _1992, 1.0));
        _2044 = dot(vec3(isnan(0.0) ? _1993 : (isnan(_1993) ? 0.0 : max(_1993, 0.0)), isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0)), isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2035) ? 0.0 : (isnan(0.0) ? _2035 : max(0.0, _2035))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2044 = 1.0;
    }
    float _2048 = (_2044 * cbModelParam._m0[1u].x) + (_2033 * (1.0 - cbModelParam._m0[1u].x));
    float _2058 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1166);
    float _2059 = isnan(_2058) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2058 : min(cbModelParam._m0[25u].z, _2058));
    float _2139;
    float _2141;
    float _2143;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2106 = fma(_1321, cbModelParam._m0[13u].z, fma(_1317, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1313)) + cbModelParam._m0[13u].w;
        float _2110 = fma(_1321, cbModelParam._m0[14u].z, fma(_1317, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1313)) + cbModelParam._m0[14u].w;
        float _2114 = fma(_1321, cbModelParam._m0[15u].z, fma(_1317, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1313)) + cbModelParam._m0[15u].w;
        float _2117 = fma(_1261, cbModelParam._m0[13u].z, fma(_1260, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1259));
        float _2120 = fma(_1261, cbModelParam._m0[14u].z, fma(_1260, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1259));
        float _2123 = fma(_1261, cbModelParam._m0[15u].z, fma(_1260, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1259));
        float _2151;
        if (_2117 > 0.0)
        {
            _2151 = abs((1.0 - _2106) / _2117);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_2117 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_2106 + 1.0) / _2117);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _2151 = frontier_phi_14_12_ladder;
        }
        float _2322;
        if (_2120 > 0.0)
        {
            _2322 = abs((1.0 - _2110) / _2120);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_2120 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_2110 + 1.0) / _2120);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2322 = frontier_phi_23_19_ladder;
        }
        float _2616;
        if (_2123 > 0.0)
        {
            _2616 = abs((1.0 - _2114) / _2123);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_2123 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_2114 + 1.0) / _2123);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2616 = frontier_phi_35_30_ladder;
        }
        float _2618 = isnan(_2322) ? _2151 : (isnan(_2151) ? _2322 : min(_2151, _2322));
        float _2619 = isnan(_2616) ? _2618 : (isnan(_2618) ? _2616 : min(_2618, _2616));
        float _2623 = (_2619 * _2117) + _2106;
        float _2624 = (_2619 * _2120) + _2110;
        float _2625 = (_2619 * _2123) + _2114;
        float _2626 = _2619 * 9.9999997473787516355514526367188e-05;
        float _2628 = (-1.0) - _2626;
        float _2630 = _2626 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2625 > _2630) || ((_2625 < _2628) || ((_2624 > _2630) || ((_2624 < _2628) || ((_2623 < _2628) || (_2623 > _2630))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2770 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2625, cbModelParam._m0[9u].z, fma(_2624, cbModelParam._m0[9u].y, _2623 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2625, cbModelParam._m0[10u].z, fma(_2624, cbModelParam._m0[10u].y, _2623 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2625, cbModelParam._m0[11u].z, fma(_2624, cbModelParam._m0[11u].y, _2623 * cbModelParam._m0[11u].x))), _2059);
            frontier_phi_13_35_ladder = _2770.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2770.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2770.x * cbModelParam._m0[1u].y;
        }
        _2139 = frontier_phi_13_35_ladder_2;
        _2141 = frontier_phi_13_35_ladder_1;
        _2143 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _2127 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1259, _1260, _1261), _2059);
        _2139 = _2127.x * cbModelParam._m0[1u].y;
        _2141 = _2127.y * cbModelParam._m0[1u].y;
        _2143 = _2127.z * cbModelParam._m0[1u].y;
    }
    float _2147 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1166);
    float _2148 = isnan(_2147) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2147 : min(cbModelParam._m0[25u].w, _2147));
    float _2237;
    float _2239;
    float _2241;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2201 = fma(_1321, cbModelParam._m0[21u].z, fma(_1317, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1313)) + cbModelParam._m0[21u].w;
        float _2205 = fma(_1321, cbModelParam._m0[22u].z, fma(_1317, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1313)) + cbModelParam._m0[22u].w;
        float _2209 = fma(_1321, cbModelParam._m0[23u].z, fma(_1317, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1313)) + cbModelParam._m0[23u].w;
        float _2212 = fma(_1261, cbModelParam._m0[21u].z, fma(_1260, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1259));
        float _2215 = fma(_1261, cbModelParam._m0[22u].z, fma(_1260, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1259));
        float _2218 = fma(_1261, cbModelParam._m0[23u].z, fma(_1260, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1259));
        float _2327;
        if (_2212 > 0.0)
        {
            _2327 = abs((1.0 - _2201) / _2212);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2212 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2201 + 1.0) / _2212);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2327 = frontier_phi_25_21_ladder;
        }
        float _2643;
        if (_2215 > 0.0)
        {
            _2643 = abs((1.0 - _2205) / _2215);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2215 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2205 + 1.0) / _2215);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2643 = frontier_phi_37_32_ladder;
        }
        float _2981;
        if (_2218 > 0.0)
        {
            _2981 = abs((1.0 - _2209) / _2218);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_2218 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_2209 + 1.0) / _2218);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2981 = frontier_phi_47_44_ladder;
        }
        float _2983 = isnan(_2643) ? _2327 : (isnan(_2327) ? _2643 : min(_2327, _2643));
        float _2984 = isnan(_2981) ? _2983 : (isnan(_2983) ? _2981 : min(_2983, _2981));
        float _2988 = (_2984 * _2212) + _2201;
        float _2989 = (_2984 * _2215) + _2205;
        float _2990 = (_2984 * _2218) + _2209;
        float _2991 = _2984 * 9.9999997473787516355514526367188e-05;
        float _2992 = (-1.0) - _2991;
        float _2994 = _2991 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2990 > _2994) || ((_2990 < _2992) || ((_2989 > _2994) || ((_2989 < _2992) || ((_2988 < _2992) || (_2988 > _2994))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3112 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2990, cbModelParam._m0[17u].z, fma(_2989, cbModelParam._m0[17u].y, _2988 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2990, cbModelParam._m0[18u].z, fma(_2989, cbModelParam._m0[18u].y, _2988 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2990, cbModelParam._m0[19u].z, fma(_2989, cbModelParam._m0[19u].y, _2988 * cbModelParam._m0[19u].x))), _2148);
            frontier_phi_22_47_ladder = _3112.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _3112.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _3112.x * cbModelParam._m0[1u].z;
        }
        _2237 = frontier_phi_22_47_ladder_2;
        _2239 = frontier_phi_22_47_ladder_1;
        _2241 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _2221 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1259, _1260, _1261), _2148);
        _2237 = _2221.x * cbModelParam._m0[1u].z;
        _2239 = _2221.y * cbModelParam._m0[1u].z;
        _2241 = _2221.z * cbModelParam._m0[1u].z;
    }
    float _2254 = (((_1284 * _1236) + _1285) * _1251) * ((cbModelParam._m0[1u].w * (_2237 - _2139)) + _2139);
    float _2256 = (((_1284 * _1238) + _1285) * _1251) * ((cbModelParam._m0[1u].w * (_2239 - _2141)) + _2141);
    float _2258 = (((_1284 * _1239) + _1285) * _1251) * ((cbModelParam._m0[1u].w * (_2241 - _2143)) + _2143);
    float _2261 = fma(_2258, cbSceneParam._m0[89u].z, fma(_2256, cbSceneParam._m0[89u].y, _2254 * cbSceneParam._m0[89u].x));
    float _2264 = fma(_2258, cbSceneParam._m0[90u].z, fma(_2256, cbSceneParam._m0[90u].y, _2254 * cbSceneParam._m0[90u].x));
    float _2267 = fma(_2258, cbSceneParam._m0[91u].z, fma(_2256, cbSceneParam._m0[91u].y, _2254 * cbSceneParam._m0[91u].x));
    float _2301 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2305 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2309 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2313 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2314 = _2301 / _2313;
    float _2315 = _2305 / _2313;
    float _2316 = _2309 / _2313;
    float _2462;
    float _2463;
    float _2464;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2343 = ((uint(_2316 > cbSceneParam._m0[59u].y) + uint(_2316 > cbSceneParam._m0[59u].x)) + uint(_2316 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2344 = _2343 + 43u;
        uint _2352 = _2343 + 44u;
        uint _2360 = _2343 + 45u;
        uint _2368 = _2343 + 46u;
        float _2379 = fma(_2313, cbSceneParam._m0[_2344].w, fma(_2309, cbSceneParam._m0[_2344].z, fma(_2305, cbSceneParam._m0[_2344].y, _2301 * cbSceneParam._m0[_2344].x)));
        float _2383 = fma(_2313, cbSceneParam._m0[_2352].w, fma(_2309, cbSceneParam._m0[_2352].z, fma(_2305, cbSceneParam._m0[_2352].y, _2301 * cbSceneParam._m0[_2352].x)));
        float _2391 = fma(_2313, cbSceneParam._m0[_2368].w, fma(_2309, cbSceneParam._m0[_2368].z, fma(_2305, cbSceneParam._m0[_2368].y, _2301 * cbSceneParam._m0[_2368].x)));
        float _2395 = cbSceneParam._m0[33u].z * _2391;
        float _2397 = cbSceneParam._m0[33u].w * _2391;
        float _2400 = fma(_2313, cbSceneParam._m0[_2360].w, fma(_2309, cbSceneParam._m0[_2360].z, fma(_2305, cbSceneParam._m0[_2360].y, _2301 * cbSceneParam._m0[_2360].x))) / _2391;
        float _2448 = (cbSceneParam._m0[33u].x - sqrt(((_2315 * _2315) + (_2314 * _2314)) + (_2316 * _2316))) * cbSceneParam._m0[33u].y;
        float _4832 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
        float _2455 = (isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2395 + _2379) / _2391, (_2397 + _2383) / _2391), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2397 + _2379) / _2391, (_2383 - _2395) / _2391), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2379 - _2395) / _2391, (_2383 - _2397) / _2391), _2400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2379 - _2397) / _2391, (_2395 + _2383) / _2391), _2400), 0.0)).x), vec4(0.25)));
        _2462 = 1.0 - (_2455 * cbSceneParam._m0[34u].x);
        _2463 = 1.0 - (_2455 * cbSceneParam._m0[34u].y);
        _2464 = 1.0 - (_2455 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2462 = 1.0;
        _2463 = 1.0;
        _2464 = 1.0;
    }
    float _2528;
    float _2530;
    float _2532;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2516 = fma(_2313, cbSceneParam._m0[63u].w, fma(_2309, cbSceneParam._m0[63u].z, fma(_2305, cbSceneParam._m0[63u].y, _2301 * cbSceneParam._m0[63u].x)));
        float _2517 = fma(_2313, cbSceneParam._m0[60u].w, fma(_2309, cbSceneParam._m0[60u].z, fma(_2305, cbSceneParam._m0[60u].y, _2301 * cbSceneParam._m0[60u].x))) / _2516;
        float _2518 = fma(_2313, cbSceneParam._m0[61u].w, fma(_2309, cbSceneParam._m0[61u].z, fma(_2305, cbSceneParam._m0[61u].y, _2301 * cbSceneParam._m0[61u].x))) / _2516;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2517 >= cbSceneParam._m0[64u].x) && (_2518 >= cbSceneParam._m0[64u].y)) && (_2517 <= cbSceneParam._m0[64u].z)) && (_2518 <= cbSceneParam._m0[64u].w))
        {
            float _2656 = fma(_2313, cbSceneParam._m0[62u].w, fma(_2309, cbSceneParam._m0[62u].z, fma(_2305, cbSceneParam._m0[62u].y, _2301 * cbSceneParam._m0[62u].x))) / _2516;
            float _2660 = isnan(cbSceneParam._m0[41u].w) ? _2656 : (isnan(_2656) ? cbSceneParam._m0[41u].w : max(_2656, cbSceneParam._m0[41u].w));
            float _2703 = (cbSceneParam._m0[33u].x - sqrt(((_2315 * _2315) + (_2314 * _2314)) + (_2316 * _2316))) * cbSceneParam._m0[33u].y;
            float _4848 = isnan(0.0) ? _2703 : (isnan(_2703) ? 0.0 : max(_2703, 0.0));
            float _2710 = (isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2517, cbSceneParam._m0[33u].w + _2518), _2660), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2517, _2518 - cbSceneParam._m0[33u].z), _2660), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2517 - cbSceneParam._m0[33u].z, _2518 - cbSceneParam._m0[33u].w), _2660), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2517 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2518), _2660), 0.0)).x), vec4(0.25)));
            float _2714 = 1.0 - (_2710 * cbSceneParam._m0[34u].x);
            float _2715 = 1.0 - (_2710 * cbSceneParam._m0[34u].y);
            float _2716 = 1.0 - (_2710 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2716) ? _2464 : (isnan(_2464) ? _2716 : min(_2464, _2716));
            frontier_phi_34_33_ladder_1 = isnan(_2715) ? _2463 : (isnan(_2463) ? _2715 : min(_2463, _2715));
            frontier_phi_34_33_ladder_2 = isnan(_2714) ? _2462 : (isnan(_2462) ? _2714 : min(_2462, _2714));
        }
        else
        {
            frontier_phi_34_33_ladder = _2464;
            frontier_phi_34_33_ladder_1 = _2463;
            frontier_phi_34_33_ladder_2 = _2462;
        }
        _2528 = frontier_phi_34_33_ladder_2;
        _2530 = frontier_phi_34_33_ladder_1;
        _2532 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2528 = _2462;
        _2530 = _2463;
        _2532 = _2464;
    }
    uvec4 _2537 = floatBitsToUint(cbInstanceData._m0[_1179 + 5u]);
    uint _2539 = _2537.x * 14u;
    uint _2540 = _2539 + 13u;
    float _2547 = _1251 + (-1.0);
    float _2552 = (cbLight._m0[_2540].x * _2547) + 1.0;
    float _2553 = (cbLight._m0[_2540].y * _2547) + 1.0;
    float _2554 = (cbLight._m0[_2540].z * _2547) + 1.0;
    float _2555 = (cbLight._m0[_2540].w * _2547) + 1.0;
    uint _2556 = _2539 + 5u;
    float _2562 = isnan(1.0) ? _2553 : (isnan(_2553) ? 1.0 : min(_2553, 1.0));
    uint _2566 = _2539 + 4u;
    float _2575 = isnan(1.0) ? _2552 : (isnan(_2552) ? 1.0 : min(_2552, 1.0));
    uint _2579 = _2539 | 1u;
    float _2590 = dot(vec3(cbLight._m0[_2539].xyz), vec3(_1056, _1057, _1058));
    float _2593 = dot(vec3(cbLight._m0[_2579].xyz), vec3(_1056, _1057, _1058));
    float _4884 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
    float _4895 = isnan(0.0) ? _2593 : (isnan(_2593) ? 0.0 : max(_2593, 0.0));
    float _2598 = (isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0))) * 0.3183098733425140380859375;
    float _2600 = (isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0))) * 0.3183098733425140380859375;
    float _2607 = ((cbLight._m0[_2556].x * _2562) * _2600) + (((cbLight._m0[_2566].x * _2528) * _2575) * _2598);
    float _2608 = ((_2562 * cbLight._m0[_2556].y) * _2600) + (((cbLight._m0[_2566].y * _2530) * _2575) * _2598);
    float _2609 = ((_2562 * cbLight._m0[_2556].z) * _2600) + (((cbLight._m0[_2566].z * _2532) * _2575) * _2598);
    uvec4 _2613 = floatBitsToUint(cbLight._m0[_2539 + 12u]);
    bool _2615 = _2613.x == 0u;
    float _2717;
    float _2719;
    float _2721;
    if (_2615)
    {
        _2717 = _2607;
        _2719 = _2608;
        _2721 = _2609;
    }
    else
    {
        uint _2725 = _2539 + 6u;
        float _2741 = (dot(vec3(cbLight._m0[_2539 + 2u].xyz), vec3(_1056, _1057, _1058)) * 0.5) + 0.5;
        float _2742 = _2741 * _2741;
        float _4906 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
        float _2743 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
        float _2744 = isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0));
        _2717 = (((cbLight._m0[_2725].x * 0.3183098733425140380859375) * _2743) * _2744) + _2607;
        _2719 = (((cbLight._m0[_2725].y * 0.3183098733425140380859375) * _2743) * _2744) + _2608;
        _2721 = (((cbLight._m0[_2725].z * 0.3183098733425140380859375) * _2743) * _2744) + _2609;
    }
    bool _2724 = _2613.y == 0u;
    float _2779;
    float _2781;
    float _2783;
    if (_2724)
    {
        _2779 = _2717;
        _2781 = _2719;
        _2783 = _2721;
    }
    else
    {
        uint _2952 = _2539 + 7u;
        float _2968 = (dot(vec3(cbLight._m0[_2539 + 3u].xyz), vec3(_1056, _1057, _1058)) * 0.5) + 0.5;
        float _2969 = _2968 * _2968;
        float _4922 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
        float _2970 = isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0));
        float _2971 = isnan(1.0) ? _2555 : (isnan(_2555) ? 1.0 : min(_2555, 1.0));
        _2779 = (((cbLight._m0[_2952].x * 0.3183098733425140380859375) * _2970) * _2971) + _2717;
        _2781 = (((cbLight._m0[_2952].y * 0.3183098733425140380859375) * _2970) * _2971) + _2719;
        _2783 = (((cbLight._m0[_2952].z * 0.3183098733425140380859375) * _2970) * _2971) + _2721;
    }
    uint _2786 = _2539 + 8u;
    float _2799 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2539].w)) * _1166) * 0.949999988079071044921875);
    float _2800 = _2799 * _2799;
    float _2801 = cbLight._m0[_2539].x + _1116;
    float _2802 = cbLight._m0[_2539].y + _1117;
    float _2803 = cbLight._m0[_2539].z + _1118;
    float _2807 = inversesqrt(dot(vec3(_2801, _2802, _2803), vec3(_2801, _2802, _2803)));
    float _2808 = _2807 * _2801;
    float _2809 = _2807 * _2802;
    float _2810 = _2807 * _2803;
    float _2811 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2539].xyz));
    float _4938 = isnan(0.0) ? _2811 : (isnan(_2811) ? 0.0 : max(_2811, 0.0));
    float _2814 = isnan(1.0) ? _4938 : (isnan(_4938) ? 1.0 : min(_4938, 1.0));
    float _4949 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
    float _2815 = isnan(1.0) ? _4949 : (isnan(_4949) ? 1.0 : min(_4949, 1.0));
    float _2816 = dot(vec3(_1056, _1057, _1058), vec3(_2808, _2809, _2810));
    float _4960 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
    float _2819 = isnan(1.0) ? _4960 : (isnan(_4960) ? 1.0 : min(_4960, 1.0));
    float _2820 = dot(vec3(cbLight._m0[_2539].xyz), vec3(_2808, _2809, _2810));
    float _4971 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
    float _2824 = _2800 * _2800;
    float _2828 = ((_2819 * _2819) * (_2824 + (-1.0))) + 1.0;
    float _2836 = exp2(log2(1.0 - (isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0)))) * 5.0);
    float _2837 = 0.959999978542327880859375 - _1233;
    float _2839 = 0.959999978542327880859375 - _1234;
    float _2840 = 0.959999978542327880859375 - _1235;
    float _2847 = 1.0 - _2800;
    float _2858 = (0.5 / (((_2815 * ((_2814 * _2847) + _2800)) + 9.9999999392252902907785028219223e-09) + (((_2815 * _2847) + _2800) * _2814))) * _2814;
    float _4982 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
    float _2860 = (isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0))) * (_2824 / ((_2828 * _2828) * 3.141590118408203125));
    uint _2874 = _2539 + 9u;
    float _2885 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2579].w)) * _1166) * 0.949999988079071044921875);
    float _2886 = _2885 * _2885;
    float _2887 = cbLight._m0[_2579].x + _1116;
    float _2888 = cbLight._m0[_2579].y + _1117;
    float _2889 = cbLight._m0[_2579].z + _1118;
    float _2893 = inversesqrt(dot(vec3(_2887, _2888, _2889), vec3(_2887, _2888, _2889)));
    float _2894 = _2893 * _2887;
    float _2895 = _2893 * _2888;
    float _2896 = _2893 * _2889;
    float _2897 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_2579].xyz));
    float _4993 = isnan(0.0) ? _2897 : (isnan(_2897) ? 0.0 : max(_2897, 0.0));
    float _2900 = isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0));
    float _2901 = dot(vec3(_1056, _1057, _1058), vec3(_2894, _2895, _2896));
    float _5004 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
    float _2904 = isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0));
    float _2905 = dot(vec3(cbLight._m0[_2579].xyz), vec3(_2894, _2895, _2896));
    float _5015 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
    float _2909 = _2886 * _2886;
    float _2913 = ((_2904 * _2904) * (_2909 + (-1.0))) + 1.0;
    float _2920 = exp2(log2(1.0 - (isnan(1.0) ? _5015 : (isnan(_5015) ? 1.0 : min(_5015, 1.0)))) * 5.0);
    float _2927 = 1.0 - _2886;
    float _2937 = (0.5 / (((_2815 * ((_2900 * _2927) + _2886)) + 9.9999999392252902907785028219223e-09) + (((_2815 * _2927) + _2886) * _2900))) * _2900;
    float _5026 = isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0));
    float _2939 = (isnan(1.0) ? _5026 : (isnan(_5026) ? 1.0 : min(_5026, 1.0))) * (_2909 / ((_2913 * _2913) * 3.141590118408203125));
    float _2949 = (((((_2920 * _2837) + _1236) * cbLight._m0[_2874].x) * _2939) * _2562) + ((((cbLight._m0[_2786].x * _2528) * ((_2836 * _2837) + _1236)) * _2860) * _2575);
    float _2950 = (((((_2920 * _2839) + _1238) * cbLight._m0[_2874].y) * _2939) * _2562) + ((((cbLight._m0[_2786].y * _2530) * ((_2836 * _2839) + _1238)) * _2860) * _2575);
    float _2951 = (((((_2920 * _2840) + _1239) * cbLight._m0[_2874].z) * _2939) * _2562) + ((((cbLight._m0[_2786].z * _2532) * ((_2836 * _2840) + _1239)) * _2860) * _2575);
    float _3007;
    float _3009;
    float _3011;
    if (_2615)
    {
        _3007 = _2949;
        _3009 = _2950;
        _3011 = _2951;
    }
    else
    {
        uint _3013 = _2539 + 2u;
        uint _3017 = _2539 + 10u;
        float _3031 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3013].w)) * _1166) * 0.949999988079071044921875);
        float _3032 = _3031 * _3031;
        float _3033 = cbLight._m0[_3013].x + _1116;
        float _3034 = cbLight._m0[_3013].y + _1117;
        float _3035 = cbLight._m0[_3013].z + _1118;
        float _3039 = inversesqrt(dot(vec3(_3033, _3034, _3035), vec3(_3033, _3034, _3035)));
        float _3040 = _3039 * _3033;
        float _3041 = _3039 * _3034;
        float _3042 = _3039 * _3035;
        float _3043 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_3013].xyz));
        float _5037 = isnan(0.0) ? _3043 : (isnan(_3043) ? 0.0 : max(_3043, 0.0));
        float _3046 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
        float _3047 = dot(vec3(_1056, _1057, _1058), vec3(_3040, _3041, _3042));
        float _5048 = isnan(0.0) ? _3047 : (isnan(_3047) ? 0.0 : max(_3047, 0.0));
        float _3050 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
        float _3051 = dot(vec3(cbLight._m0[_3013].xyz), vec3(_3040, _3041, _3042));
        float _5059 = isnan(0.0) ? _3051 : (isnan(_3051) ? 0.0 : max(_3051, 0.0));
        float _3055 = _3032 * _3032;
        float _3059 = ((_3050 * _3050) * (_3055 + (-1.0))) + 1.0;
        float _3066 = exp2(log2(1.0 - (isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0)))) * 5.0);
        float _3073 = 1.0 - _3032;
        float _3083 = (0.5 / (((_2815 * ((_3046 * _3073) + _3032)) + 9.9999999392252902907785028219223e-09) + (((_2815 * _3073) + _3032) * _3046))) * _3046;
        float _5070 = isnan(0.0) ? _3083 : (isnan(_3083) ? 0.0 : max(_3083, 0.0));
        float _3085 = (isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0))) * (_3055 / ((_3059 * _3059) * 3.141590118408203125));
        float _3086 = isnan(1.0) ? _2554 : (isnan(_2554) ? 1.0 : min(_2554, 1.0));
        _3007 = (((((_3066 * _2837) + _1236) * cbLight._m0[_3017].x) * _3085) * _3086) + _2949;
        _3009 = (((((_3066 * _2839) + _1238) * cbLight._m0[_3017].y) * _3085) * _3086) + _2950;
        _3011 = (((((_3066 * _2840) + _1239) * cbLight._m0[_3017].z) * _3085) * _3086) + _2951;
    }
    float _3117;
    float _3119;
    float _3121;
    if (_2724)
    {
        _3117 = _3007;
        _3119 = _3009;
        _3121 = _3011;
    }
    else
    {
        uint _3128 = _2539 + 3u;
        uint _3132 = _2539 + 11u;
        float _3146 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3128].w)) * _1166) * 0.949999988079071044921875);
        float _3147 = _3146 * _3146;
        float _3148 = cbLight._m0[_3128].x + _1116;
        float _3149 = cbLight._m0[_3128].y + _1117;
        float _3150 = cbLight._m0[_3128].z + _1118;
        float _3154 = inversesqrt(dot(vec3(_3148, _3149, _3150), vec3(_3148, _3149, _3150)));
        float _3155 = _3154 * _3148;
        float _3156 = _3154 * _3149;
        float _3157 = _3154 * _3150;
        float _3158 = dot(vec3(_1056, _1057, _1058), vec3(cbLight._m0[_3128].xyz));
        float _5086 = isnan(0.0) ? _3158 : (isnan(_3158) ? 0.0 : max(_3158, 0.0));
        float _3161 = isnan(1.0) ? _5086 : (isnan(_5086) ? 1.0 : min(_5086, 1.0));
        float _3162 = dot(vec3(_1056, _1057, _1058), vec3(_3155, _3156, _3157));
        float _5097 = isnan(0.0) ? _3162 : (isnan(_3162) ? 0.0 : max(_3162, 0.0));
        float _3165 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
        float _3166 = dot(vec3(cbLight._m0[_3128].xyz), vec3(_3155, _3156, _3157));
        float _5108 = isnan(0.0) ? _3166 : (isnan(_3166) ? 0.0 : max(_3166, 0.0));
        float _3170 = _3147 * _3147;
        float _3174 = ((_3165 * _3165) * (_3170 + (-1.0))) + 1.0;
        float _3181 = exp2(log2(1.0 - (isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0)))) * 5.0);
        float _3188 = 1.0 - _3147;
        float _3198 = (0.5 / (((_2815 * ((_3161 * _3188) + _3147)) + 9.9999999392252902907785028219223e-09) + (((_2815 * _3188) + _3147) * _3161))) * _3161;
        float _5119 = isnan(0.0) ? _3198 : (isnan(_3198) ? 0.0 : max(_3198, 0.0));
        float _3200 = (isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0))) * (_3170 / ((_3174 * _3174) * 3.141590118408203125));
        float _3201 = isnan(1.0) ? _2555 : (isnan(_2555) ? 1.0 : min(_2555, 1.0));
        _3117 = (((((_3181 * _2837) + _1236) * cbLight._m0[_3132].x) * _3200) * _3201) + _3007;
        _3119 = (((((_3181 * _2839) + _1238) * cbLight._m0[_3132].y) * _3200) * _3201) + _3009;
        _3121 = (((((_3181 * _2840) + _1239) * cbLight._m0[_3132].z) * _3200) * _3201) + _3011;
    }
    float _3267;
    float _3269;
    float _3271;
    float _3273;
    float _3275;
    float _3277;
    if (_2537.y == 0u)
    {
        uvec4 _3222 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3223 = _3222.x;
        uint _3234 = uint((float(_3222.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1125) / _3223))) + floor(float(uint(cbSceneParam._m0[85u].x * _1124) / _3223)));
        float _3244 = (log2(_2316 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3245 = isnan(0.0) ? _3244 : (isnan(_3244) ? 0.0 : max(_3244, 0.0));
        uint _3248 = uint(isnan(14.0) ? _3245 : (isnan(_3245) ? 14.0 : min(_3245, 14.0)));
        uvec4 _3253 = texelFetch(g_lightClusterGridBuffer, int(((_3248 << 2u) + (_3234 << 6u)) >> 2u));
        uint _3254 = _3253.x;
        uint _3255 = _3222.z;
        float _3363;
        float _3365;
        float _3367;
        float _3369;
        float _3371;
        float _3373;
        if (((((1u << ((_3255 >> 4u) & 15u)) + 4294967295u) & _3254) == 0u) || ((_3255 & 240u) == 0u))
        {
            _3363 = 0.0;
            _3365 = 0.0;
            _3367 = 0.0;
            _3369 = 0.0;
            _3371 = 0.0;
            _3373 = 0.0;
        }
        else
        {
            float _3364;
            float _3366;
            float _3368;
            float _3370;
            float _3372;
            float _3374;
            float _3516 = 0.0;
            float _3517 = 0.0;
            float _3518 = 0.0;
            float _3519 = 0.0;
            float _3520 = 0.0;
            float _3521 = 0.0;
            uint _3522 = 0u;
            uint _3531;
            bool _3532;
            for (;;)
            {
                _3531 = texelFetch(g_lightClassification, int((((_3248 << 5u) + (_3234 << 9u)) + (_3522 << 2u)) >> 2u)).x;
                _3532 = _3531 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3532)
                {
                    frontier_phi_66_pred = _3521;
                    frontier_phi_66_pred_1 = _3520;
                    frontier_phi_66_pred_2 = _3519;
                    frontier_phi_66_pred_3 = _3518;
                    frontier_phi_66_pred_4 = _3517;
                    frontier_phi_66_pred_5 = _3516;
                }
                else
                {
                    float _3640;
                    float _3641;
                    float _3642;
                    float _3643;
                    float _3644;
                    float _3645;
                    uint _3646;
                    _3640 = _3516;
                    _3641 = _3517;
                    _3642 = _3518;
                    _3643 = _3519;
                    _3644 = _3520;
                    _3645 = _3521;
                    _3646 = _3531;
                    float _3572;
                    float _3573;
                    float _3574;
                    float _3575;
                    float _3576;
                    float _3577;
                    for (;;)
                    {
                        uint _3650 = uint(findLSB(_3646)) + (_3522 << 5u);
                        uint _3647 = (_3646 + 4294967295u) & _3646;
                        uint _3652 = _3650 * 48u;
                        vec4 _3666 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3652)).x, texelFetch(g_PointLightRenderingBuffer, int(_3652 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3652 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3652 + 3u)).x));
                        uint _3672 = (_3650 * 48u) + 4u;
                        vec4 _3685 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3672)).x, texelFetch(g_PointLightRenderingBuffer, int(_3672 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3672 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3672 + 3u)).x));
                        uint _3691 = (_3650 * 48u) + 8u;
                        vec3 _3702 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3691)).x, texelFetch(g_PointLightRenderingBuffer, int(_3691 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3691 + 2u)).x));
                        float _3706 = _3666.x - _2314;
                        float _3707 = _3666.y - _2315;
                        float _3708 = _3666.z - _2316;
                        float _3709 = dot(vec3(_3706, _3707, _3708), vec3(_3706, _3707, _3708));
                        float _3712 = inversesqrt(_3709);
                        float _3713 = _3712 * _3706;
                        float _3714 = _3712 * _3707;
                        float _3715 = _3712 * _3708;
                        float _3716 = dot(vec3(_1147, _1150, _1153), vec3(_3713, _3714, _3715));
                        float _3721 = 1.0 - (_3709 * _3666.w);
                        float _5145 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                        float _3722 = isnan(1.0) ? _5145 : (isnan(_5145) ? 1.0 : min(_5145, 1.0));
                        float _3723 = sqrt(_3709) * _3685.w;
                        float _3726 = 1.39999997615814208984375 / (_3723 + 1.39999997615814208984375);
                        float _3727 = _3726 * _3726;
                        float _3730 = ((1.0 - _3727) * _3716) + _3727;
                        float _3733 = _3723 * _3723;
                        float _3737 = ((isnan(0.0) ? _3730 : (isnan(_3730) ? 0.0 : max(_3730, 0.0))) * _3722) / ((_3733 * 0.699999988079071044921875) + 1.0);
                        float _3741 = (-0.0) - _2314;
                        float _3742 = (-0.0) - _2315;
                        float _3743 = (-0.0) - _2316;
                        float _3747 = inversesqrt(dot(vec3(_3741, _3742, _3743), vec3(_3741, _3742, _3743)));
                        float _3748 = _3747 * _3741;
                        float _3749 = _3747 * _3742;
                        float _3750 = _3747 * _3743;
                        float _3757 = exp2(log2(1.0 / ((_3733 * 3.5) + 5.0)) * 0.25);
                        float _3758 = 1.0 - _1267;
                        float _3765 = sqrt(1.0 - ((1.0 - (_3758 * _3758)) * (1.0 - (_3757 * _3757))));
                        float _3766 = _3765 * _3765;
                        float _3767 = _3766 * _3766;
                        float _3768 = _3748 + _3713;
                        float _3769 = _3749 + _3714;
                        float _3770 = _3750 + _3715;
                        float _3774 = inversesqrt(dot(vec3(_3768, _3769, _3770), vec3(_3768, _3769, _3770)));
                        float _3778 = dot(vec3(_1147, _1150, _1153), vec3(_3748, _3749, _3750));
                        float _5161 = isnan(0.0) ? _3778 : (isnan(_3778) ? 0.0 : max(_3778, 0.0));
                        float _3781 = isnan(1.0) ? _5161 : (isnan(_5161) ? 1.0 : min(_5161, 1.0));
                        float _3782 = dot(vec3(_1147, _1150, _1153), vec3(_3774 * _3768, _3774 * _3769, _3774 * _3770));
                        float _5172 = isnan(0.0) ? _3782 : (isnan(_3782) ? 0.0 : max(_3782, 0.0));
                        float _3785 = isnan(1.0) ? _5172 : (isnan(_5172) ? 1.0 : min(_5172, 1.0));
                        float _3789 = ((_3785 * _3785) * (_3767 + (-1.0))) + 1.0;
                        float _3790 = _3726 * _3766;
                        float _3791 = _3790 * _3790;
                        float _3794 = ((1.0 - _3791) * _3716) + _3791;
                        float _5183 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                        float _3795 = isnan(1.0) ? _5183 : (isnan(_5183) ? 1.0 : min(_5183, 1.0));
                        float _3796 = 1.0 - _3766;
                        float _3806 = (0.5 / (((_3795 * ((_3781 * _3796) + _3766)) + 9.9999999392252902907785028219223e-09) + (((_3795 * _3796) + _3766) * _3781))) * _3795;
                        float _5194 = isnan(0.0) ? _3806 : (isnan(_3806) ? 0.0 : max(_3806, 0.0));
                        float _3817 = (((_3767 * 3.1415927410125732421875) * (isnan(1.0) ? _5194 : (isnan(_5194) ? 1.0 : min(_5194, 1.0)))) / ((_3789 * _3789) * ((_3733 * 2.1991131305694580078125) + 3.141590118408203125))) * _3722;
                        _3575 = (_3737 * _3685.x) + _3643;
                        _3576 = (_3737 * _3685.y) + _3644;
                        _3577 = (_3737 * _3685.z) + _3645;
                        _3572 = (_3817 * _3702.x) + _3640;
                        _3573 = (_3817 * _3702.y) + _3641;
                        _3574 = (_3817 * _3702.z) + _3642;
                        if (_3647 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3640 = _3572;
                            _3641 = _3573;
                            _3642 = _3574;
                            _3643 = _3575;
                            _3644 = _3576;
                            _3645 = _3577;
                            _3646 = _3647;
                        }
                    }
                    frontier_phi_66_pred = _3577;
                    frontier_phi_66_pred_1 = _3576;
                    frontier_phi_66_pred_2 = _3575;
                    frontier_phi_66_pred_3 = _3574;
                    frontier_phi_66_pred_4 = _3573;
                    frontier_phi_66_pred_5 = _3572;
                }
                _3374 = frontier_phi_66_pred;
                _3372 = frontier_phi_66_pred_1;
                _3370 = frontier_phi_66_pred_2;
                _3368 = frontier_phi_66_pred_3;
                _3366 = frontier_phi_66_pred_4;
                _3364 = frontier_phi_66_pred_5;
                uint _3523 = _3522 + 1u;
                if (_3523 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3516 = _3364;
                    _3517 = _3366;
                    _3518 = _3368;
                    _3519 = _3370;
                    _3520 = _3372;
                    _3521 = _3374;
                    _3522 = _3523;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3363 = _3364;
            _3365 = _3366;
            _3367 = _3368;
            _3369 = _3370;
            _3371 = _3372;
            _3373 = _3374;
        }
        uvec4 _3377 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3378 = _3377.z;
        uint _3380 = (_3378 >> 8u) & 15u;
        float _3484;
        float _3486;
        float _3488;
        float _3490;
        float _3492;
        float _3494;
        if (((4294967295u << _3380) & _3254) == 0u)
        {
            _3484 = _3363;
            _3486 = _3365;
            _3488 = _3367;
            _3490 = _3369;
            _3492 = _3371;
            _3494 = _3373;
        }
        else
        {
            float _3509 = inversesqrt(dot(vec3(_2314, _2315, _2316), vec3(_2314, _2315, _2316)));
            float _3510 = _3509 * _2314;
            float _3511 = _3509 * _2315;
            float _3512 = _3509 * _2316;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3380 < ((_3378 >> 12u) & 15u))
            {
                float _3485;
                float _3487;
                float _3489;
                float _3491;
                float _3493;
                float _3495;
                float _3623 = _3363;
                float _3624 = _3365;
                float _3625 = _3367;
                float _3626 = _3369;
                float _3627 = _3371;
                float _3628 = _3373;
                uint _3629 = _3380;
                uint _3638;
                bool _3639;
                for (;;)
                {
                    _3638 = texelFetch(g_lightClassification, int((((_3248 << 5u) + (_3234 << 9u)) + (_3629 << 2u)) >> 2u)).x;
                    _3639 = _3638 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3639)
                    {
                        frontier_phi_72_pred = _3628;
                        frontier_phi_72_pred_1 = _3627;
                        frontier_phi_72_pred_2 = _3626;
                        frontier_phi_72_pred_3 = _3625;
                        frontier_phi_72_pred_4 = _3624;
                        frontier_phi_72_pred_5 = _3623;
                    }
                    else
                    {
                        float _3822;
                        float _3823;
                        float _3824;
                        float _3825;
                        float _3826;
                        float _3827;
                        float _4115;
                        float _4116;
                        float _4117;
                        float _4118;
                        float _4119;
                        float _4120;
                        float _3835 = _3623;
                        float _3836 = _3624;
                        float _3837 = _3625;
                        float _3838 = _3626;
                        float _3839 = _3627;
                        float _3840 = _3628;
                        uint _3841 = _3638;
                        uint _3842;
                        vec4 _3867;
                        float _3868;
                        vec4 _3883;
                        vec3 _3895;
                        vec4 _3910;
                        vec4 _3925;
                        float _3971;
                        bool _3972;
                        for (;;)
                        {
                            uint _3852 = ((_3629 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3841));
                            _3842 = (_3841 + 4294967295u) & _3841;
                            uint _3854 = _3852 * 40u;
                            _3867 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3854)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3854 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3854 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3854 + 3u)).x));
                            _3868 = _3867.w;
                            uint _3870 = (_3852 * 40u) + 4u;
                            _3883 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3870)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3870 + 3u)).x));
                            uint _3885 = (_3852 * 40u) + 8u;
                            _3895 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3885)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3885 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3885 + 2u)).x));
                            uint _3897 = (_3852 * 40u) + 16u;
                            _3910 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3897)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3897 + 3u)).x));
                            uint _3912 = (_3852 * 40u) + 20u;
                            _3925 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3912)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3912 + 3u)).x));
                            uint _3927 = (_3852 * 40u) + 24u;
                            vec4 _3940 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3927)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3927 + 3u)).x));
                            uint _3946 = (_3852 * 40u) + 28u;
                            vec4 _3959 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3946)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3946 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3946 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3946 + 3u)).x));
                            _3971 = fma(_2316, _3959.z, fma(_2315, _3959.y, _3959.x * _2314)) + _3959.w;
                            _3972 = !((fma(_2316, _3940.z, fma(_2315, _3940.y, _3940.x * _2314)) + _3940.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3972)
                            {
                                float _3999 = _3867.x - _2314;
                                float _4000 = _3867.y - _2315;
                                float _4001 = _3867.z - _2316;
                                float _4002 = dot(vec3(_3999, _4000, _4001), vec3(_3999, _4000, _4001));
                                float _4005 = inversesqrt(_4002);
                                float _4006 = _4005 * _3999;
                                float _4007 = _4005 * _4000;
                                float _4008 = _4005 * _4001;
                                float _4012 = 1.0 - (_4002 / (_3868 * _3868));
                                float _5205 = isnan(0.0) ? _4012 : (isnan(_4012) ? 0.0 : max(_4012, 0.0));
                                float _4013 = isnan(1.0) ? _5205 : (isnan(_5205) ? 1.0 : min(_5205, 1.0));
                                float _4017 = sqrt(_4002) * _3883.w;
                                float _4019 = 1.39999997615814208984375 / (_4017 + 1.39999997615814208984375);
                                float _4020 = _4019 * _4019;
                                float _4023 = ((1.0 - _4020) * dot(vec3(_4006, _4007, _4008), vec3(_1147, _1150, _1153))) + _4020;
                                float _4026 = _4017 * _4017;
                                float _4030 = (fma(_2316, _3910.z, fma(_2315, _3910.y, _3910.x * _2314)) + _3910.w) / _3971;
                                float _4031 = (fma(_2316, _3925.z, fma(_2315, _3925.y, _3925.x * _2314)) + _3925.w) / _3971;
                                float _4035 = 1.0 - dot(vec2(_4030, _4031), vec2(_4030, _4031));
                                float _5221 = isnan(0.0) ? _4035 : (isnan(_4035) ? 0.0 : max(_4035, 0.0));
                                float _4036 = isnan(1.0) ? _5221 : (isnan(_5221) ? 1.0 : min(_5221, 1.0));
                                float _4037 = _4036 * (((isnan(0.0) ? _4023 : (isnan(_4023) ? 0.0 : max(_4023, 0.0))) * _4013) / ((_4026 * 0.699999988079071044921875) + 1.0));
                                float _4049 = exp2(log2(1.0 / ((_4026 * 3.5) + 5.0)) * 0.25);
                                float _4050 = 1.0 - _1267;
                                float _4057 = sqrt(1.0 - ((1.0 - (_4050 * _4050)) * (1.0 - (_4049 * _4049))));
                                float _4058 = _4057 * _4057;
                                float _4059 = _4058 * _4058;
                                float _4060 = _4006 - _3510;
                                float _4061 = _4007 - _3511;
                                float _4062 = _4008 - _3512;
                                float _4066 = inversesqrt(dot(vec3(_4060, _4061, _4062), vec3(_4060, _4061, _4062)));
                                float _4070 = dot(vec3(_1147, _1150, _1153), vec3((-0.0) - _3510, (-0.0) - _3511, (-0.0) - _3512));
                                float _5232 = isnan(0.0) ? _4070 : (isnan(_4070) ? 0.0 : max(_4070, 0.0));
                                float _4073 = isnan(1.0) ? _5232 : (isnan(_5232) ? 1.0 : min(_5232, 1.0));
                                float _4074 = dot(vec3(_1147, _1150, _1153), vec3(_4066 * _4060, _4066 * _4061, _4066 * _4062));
                                float _5243 = isnan(0.0) ? _4074 : (isnan(_4074) ? 0.0 : max(_4074, 0.0));
                                float _4077 = isnan(1.0) ? _5243 : (isnan(_5243) ? 1.0 : min(_5243, 1.0));
                                float _4081 = ((_4077 * _4077) * (_4059 + (-1.0))) + 1.0;
                                float _4082 = _4019 * _4058;
                                float _4083 = _4082 * _4082;
                                float _4089 = ((1.0 - _4083) * dot(vec3(_1147, _1150, _1153), vec3(_4006, _4007, _4008))) + _4083;
                                float _5254 = isnan(0.0) ? _4089 : (isnan(_4089) ? 0.0 : max(_4089, 0.0));
                                float _4090 = isnan(1.0) ? _5254 : (isnan(_5254) ? 1.0 : min(_5254, 1.0));
                                float _4091 = 1.0 - _4058;
                                float _4101 = (0.5 / (((_4090 * ((_4073 * _4091) + _4058)) + 9.9999999392252902907785028219223e-09) + (((_4090 * _4091) + _4058) * _4073))) * _4090;
                                float _5265 = isnan(0.0) ? _4101 : (isnan(_4101) ? 0.0 : max(_4101, 0.0));
                                float _4111 = (_4036 * _4013) * (((_4059 * 3.1415927410125732421875) * (isnan(1.0) ? _5265 : (isnan(_5265) ? 1.0 : min(_5265, 1.0)))) / ((_4081 * _4081) * ((_4026 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _4037 * _3883.y;
                                frontier_phi_78_pred_1 = _4037 * _3883.x;
                                frontier_phi_78_pred_2 = _4111 * _3895.z;
                                frontier_phi_78_pred_3 = _4111 * _3895.y;
                                frontier_phi_78_pred_4 = _4111 * _3895.x;
                                frontier_phi_78_pred_5 = _4037 * _3883.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _4119 = frontier_phi_78_pred;
                            _4118 = frontier_phi_78_pred_1;
                            _4117 = frontier_phi_78_pred_2;
                            _4116 = frontier_phi_78_pred_3;
                            _4115 = frontier_phi_78_pred_4;
                            _4120 = frontier_phi_78_pred_5;
                            _3825 = _4118 + _3838;
                            _3826 = _4119 + _3839;
                            _3827 = _4120 + _3840;
                            _3822 = _4115 + _3835;
                            _3823 = _4116 + _3836;
                            _3824 = _4117 + _3837;
                            if (_3842 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3835 = _3822;
                                _3836 = _3823;
                                _3837 = _3824;
                                _3838 = _3825;
                                _3839 = _3826;
                                _3840 = _3827;
                                _3841 = _3842;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3827;
                        frontier_phi_72_pred_1 = _3826;
                        frontier_phi_72_pred_2 = _3825;
                        frontier_phi_72_pred_3 = _3824;
                        frontier_phi_72_pred_4 = _3823;
                        frontier_phi_72_pred_5 = _3822;
                    }
                    _3495 = frontier_phi_72_pred;
                    _3493 = frontier_phi_72_pred_1;
                    _3491 = frontier_phi_72_pred_2;
                    _3489 = frontier_phi_72_pred_3;
                    _3487 = frontier_phi_72_pred_4;
                    _3485 = frontier_phi_72_pred_5;
                    uint _3630 = _3629 + 1u;
                    if (_3630 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3623 = _3485;
                        _3624 = _3487;
                        _3625 = _3489;
                        _3626 = _3491;
                        _3627 = _3493;
                        _3628 = _3495;
                        _3629 = _3630;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3495;
                frontier_phi_60_61_ladder_1 = _3493;
                frontier_phi_60_61_ladder_2 = _3489;
                frontier_phi_60_61_ladder_3 = _3487;
                frontier_phi_60_61_ladder_4 = _3485;
                frontier_phi_60_61_ladder_5 = _3491;
            }
            else
            {
                frontier_phi_60_61_ladder = _3373;
                frontier_phi_60_61_ladder_1 = _3371;
                frontier_phi_60_61_ladder_2 = _3367;
                frontier_phi_60_61_ladder_3 = _3365;
                frontier_phi_60_61_ladder_4 = _3363;
                frontier_phi_60_61_ladder_5 = _3369;
            }
            _3484 = frontier_phi_60_61_ladder_4;
            _3486 = frontier_phi_60_61_ladder_3;
            _3488 = frontier_phi_60_61_ladder_2;
            _3490 = frontier_phi_60_61_ladder_5;
            _3492 = frontier_phi_60_61_ladder_1;
            _3494 = frontier_phi_60_61_ladder;
        }
        float _3499 = isnan(1.0) ? _1251 : (isnan(_1251) ? 1.0 : min(_1251, 1.0));
        _3267 = (_3499 * _3490) + _2779;
        _3269 = (_3499 * _3492) + _2781;
        _3271 = (_3499 * _3494) + _2783;
        _3273 = ((_3484 * _1236) * _3499) + _3117;
        _3275 = ((_3486 * _1238) * _3499) + _3119;
        _3277 = ((_3488 * _1239) * _3499) + _3121;
    }
    else
    {
        _3267 = _2779;
        _3269 = _2781;
        _3271 = _2783;
        _3273 = _3117;
        _3275 = _3119;
        _3277 = _3121;
    }
    uint _3283 = _1180 + uint(cbMatDynParam._m0[0u].w);
    float _3289 = cbInstanceData._m0[_3283].x * ((((cbMtdParam._m0[22u].x * _969.x) * cbMtdParam._m0[32u].x) * _990) + _759);
    float _3290 = cbInstanceData._m0[_3283].y * ((((cbMtdParam._m0[22u].y * _969.y) * cbMtdParam._m0[32u].x) * _990) + _760);
    float _3291 = cbInstanceData._m0[_3283].z * ((((cbMtdParam._m0[22u].z * _969.z) * cbMtdParam._m0[32u].x) * _990) + _761);
    float _5281 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _5292 = isnan(0.0) ? _1227 : (isnan(_1227) ? 0.0 : max(_1227, 0.0));
    float _5303 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
    float _3308 = (((isnan(1.0) ? _5281 : (isnan(_5281) ? 1.0 : min(_5281, 1.0))) * (_3267 + ((isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0))) * _1251))) + ((_3273 + ((isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0))) * _2048)) * cbPerFrame._m0[3u].x)) + _3289;
    float _3310 = (_3290 + ((_3275 + ((isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0))) * _2048)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5292 : (isnan(_5292) ? 1.0 : min(_5292, 1.0))) * (_3269 + ((isnan(0.0) ? _1974 : (isnan(_1974) ? 0.0 : max(_1974, 0.0))) * _1251)));
    float _3312 = (_3291 + ((_3277 + ((isnan(0.0) ? _2267 : (isnan(_2267) ? 0.0 : max(_2267, 0.0))) * _2048)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5303 : (isnan(_5303) ? 1.0 : min(_5303, 1.0))) * (_3271 + ((isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0))) * _1251)));
    float _5329 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3325 = isnan(1.0) ? _5329 : (isnan(_5329) ? 1.0 : min(_5329, 1.0));
    uint _3326 = _1179 + 6u;
    float _3334 = _1124 / cbSceneParam._m0[86u].x;
    float _3335 = _1125 / cbSceneParam._m0[86u].y;
    vec4 _3349 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3334, _3335, (log2((isnan(cbSceneParam._m0[77u].w) ? _1079 : (isnan(_1079) ? cbSceneParam._m0[77u].w : min(_1079, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3351 = _3349.x;
    float _3352 = _3349.y;
    float _3353 = _3349.z;
    float _3354 = _3349.w;
    float _3425;
    float _3427;
    float _3429;
    float _3431;
    if (_1079 > cbSceneParam._m0[78u].w)
    {
        float _3388 = isnan(_1079) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1079 : min(cbSceneParam._m0[80u].w, _1079));
        float _3389 = _3388 / _1079;
        float _3400 = _3389 * _1109;
        float _3401 = _1110 * _3389;
        float _3402 = (-0.0) - _3401;
        float _3403 = _3389 * _1111;
        float _3405 = (cbSceneParam._m0[77u].w * _3402) / _3388;
        float _3406 = _3405 + cbSceneParam._m0[79u].w;
        float _3407 = cbSceneParam._m0[79u].w - _3401;
        float _3413 = sqrt(((_3400 * _3400) + (_3401 * _3401)) + (_3403 * _3403));
        float _3416 = (1.0 - (cbSceneParam._m0[77u].w / _3388)) * _3413;
        float _3421 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3423 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3585;
        if (abs((_3402 - _3405) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3585 = ((((_3406 > 0.0) ? exp2(_3421 * _3406) : (2.0 - exp2(_3423 * _3406))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3416;
        }
        else
        {
            float _3545 = 1.0 / cbSceneParam._m0[80u].x;
            float _3546 = isnan(_3407) ? _3406 : (isnan(_3406) ? _3407 : max(_3406, _3407));
            float _3547 = isnan(_3407) ? _3406 : (isnan(_3406) ? _3407 : min(_3406, _3407));
            float _3556 = isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : min(_3546, 0.0));
            float _3557 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : min(_3547, 0.0));
            _3585 = ((abs(_3413 / _3402) * cbSceneParam._m0[80u].y) * ((((_3556 - _3557) * 2.0) - ((exp2(_3421 * (isnan(0.0) ? _3546 : (isnan(_3546) ? 0.0 : max(_3546, 0.0)))) - exp2(_3421 * (isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0))))) * _3545)) - ((exp2(_3423 * _3556) - exp2(_3423 * _3557)) * _3545))) + (_3416 * cbSceneParam._m0[80u].z);
        }
        vec4 _3587 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3334, _3335, 1.0), 0.0);
        float _3596 = exp2((_3585 * (-1.44269502162933349609375)) * (1.0 - _3587.w));
        float _3597 = log2(_3596);
        float _3613 = log2(_3354);
        _3425 = (exp2(_3613 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].x)) * _3587.x) / cbSceneParam._m0[78u].x)) + _3351;
        _3427 = (exp2(_3613 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].y)) * _3587.y) / cbSceneParam._m0[78u].y)) + _3352;
        _3429 = (exp2(_3613 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3597 * cbSceneParam._m0[78u].z)) * _3587.z) / cbSceneParam._m0[78u].z)) + _3353;
        _3431 = _3596 * _3354;
    }
    else
    {
        _3425 = _3351;
        _3427 = _3352;
        _3429 = _3353;
        _3431 = _3354;
    }
    float _3443 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3444 = _3443 == 3.0;
    float _3445 = log2(_3431);
    float _3449 = exp2(_3445 * cbSceneParam._m0[78u].x);
    float _3450 = exp2(_3445 * cbSceneParam._m0[78u].y);
    float _3451 = exp2(_3445 * cbSceneParam._m0[78u].z);
    float _3452 = _3449 * (isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0)));
    float _3453 = _3450 * (isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : max(_3310, 0.0)));
    float _3454 = _3451 * (isnan(0.0) ? _3312 : (isnan(_3312) ? 0.0 : max(_3312, 0.0)));
    float _3463 = (_3443 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3463 * (_3444 ? _3452 : (_3452 + (cbSceneParam._m0[72u].w * _3425)));
    SV_Target.y = _3463 * (_3444 ? _3453 : (_3453 + (cbSceneParam._m0[72u].w * _3427)));
    SV_Target.z = _3463 * (_3444 ? _3454 : (_3454 + (cbSceneParam._m0[72u].w * _3429)));
    SV_Target.w = cbInstanceData._m0[_3326].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3289) * _3325) * _3449) * _3463;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3290) * _3325) * _3450) * _3463;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3291) * _3325) * _3451) * _3463;
    SV_Target_1.w = cbInstanceData._m0[_3326].w;
}


