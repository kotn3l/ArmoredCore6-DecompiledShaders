#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1659;
float _4351;
float _4352;
float _4353;
float _4354;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _241 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _242 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _243 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _249 = inversesqrt(dot(vec3(_241, _242, _243), vec3(_241, _242, _243)));
    float _256 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _263 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _287 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _294 = log2(0.0);
    float _296 = exp2(_294 * cbMtdParam._m0[31u].z);
    float _300 = _296 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.x) * _296);
    float _301 = _296 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.y) * _296);
    float _302 = _296 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.z) * _296);
    float _303 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _304 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _305 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
    float _306 = isnan(1.0) ? _303 : (isnan(_303) ? 1.0 : min(_303, 1.0));
    float _308 = isnan(1.0) ? _304 : (isnan(_304) ? 1.0 : min(_304, 1.0));
    float _309 = isnan(1.0) ? _305 : (isnan(_305) ? 1.0 : min(_305, 1.0));
    vec4 _325 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _329 = _325.z;
    float _330 = _325.w;
    float _331 = 1.0 - _330;
    float _338 = exp2(log2((1.0 - (_331 * _329)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _339 = isnan(0.0) ? _338 : (isnan(_338) ? 0.0 : max(_338, 0.0));
    float _340 = isnan(1.0) ? _339 : (isnan(_339) ? 1.0 : min(_339, 1.0));
    float _352 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_331 * _331) * _329))) * cbMtdParam._m0[34u].w);
    float _353 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    vec4 _367 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _370 = _367.y;
    float _373 = (_370 * ((isnan(1.0) ? _353 : (isnan(_353) ? 1.0 : min(_353, 1.0))) - _330)) + _330;
    vec4 _385 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _207[6];
    float _208[6];
    float _209[6];
    _207[0u] = cbMtdParam._m0[12u].x;
    _208[0u] = cbMtdParam._m0[12u].y;
    _209[0u] = cbMtdParam._m0[12u].z;
    _207[1u] = cbMtdParam._m0[13u].x;
    _208[1u] = cbMtdParam._m0[13u].y;
    _209[1u] = cbMtdParam._m0[13u].z;
    _207[2u] = cbMtdParam._m0[14u].x;
    _208[2u] = cbMtdParam._m0[14u].y;
    _209[2u] = cbMtdParam._m0[14u].z;
    _207[3u] = cbMtdParam._m0[15u].x;
    _208[3u] = cbMtdParam._m0[15u].y;
    _209[3u] = cbMtdParam._m0[15u].z;
    _207[4u] = cbMtdParam._m0[16u].x;
    _208[4u] = cbMtdParam._m0[16u].y;
    _209[4u] = cbMtdParam._m0[16u].z;
    _207[5u] = cbMtdParam._m0[11u].x;
    _208[5u] = cbMtdParam._m0[11u].y;
    _209[5u] = cbMtdParam._m0[11u].z;
    float _453 = (_367.x + (-0.02500000037252902984619140625)) * 8.0;
    float _455 = roundEven(_453);
    float _456 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    uint _459 = uint(int(isnan(5.0) ? _456 : (isnan(_456) ? 5.0 : min(_456, 5.0))));
    float _214[6];
    float _215[6];
    float _216[6];
    _214[0u] = 1.0;
    _215[0u] = 1.0;
    _216[0u] = 1.0;
    _214[1u] = cbMtdParam._m0[23u].x;
    _215[1u] = cbMtdParam._m0[23u].y;
    _216[1u] = cbMtdParam._m0[23u].z;
    _214[2u] = cbMtdParam._m0[21u].x;
    _215[2u] = cbMtdParam._m0[21u].y;
    _216[2u] = cbMtdParam._m0[21u].z;
    _214[3u] = cbMtdParam._m0[19u].x;
    _215[3u] = cbMtdParam._m0[19u].y;
    _216[3u] = cbMtdParam._m0[19u].z;
    _214[4u] = cbMtdParam._m0[18u].x;
    _215[4u] = cbMtdParam._m0[18u].y;
    _216[4u] = cbMtdParam._m0[18u].z;
    _214[5u] = cbMtdParam._m0[17u].x;
    _215[5u] = cbMtdParam._m0[17u].y;
    _216[5u] = cbMtdParam._m0[17u].z;
    float _549 = roundEven((texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_15, SS_WrapPoint), vec2((((cbMtdParam._m0[38u].w * TEXCOORD.x) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[39u].x * TEXCOORD.y) * cbMtdParam._m0[33u].x) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).x + (-0.02500000037252902984619140625)) * 8.0);
    float _550 = isnan(0.0) ? _549 : (isnan(_549) ? 0.0 : max(_549, 0.0));
    uint _552 = uint(int(isnan(5.0) ? _550 : (isnan(_550) ? 5.0 : min(_550, 5.0))));
    float _210[6];
    _210[0u] = 1.0;
    _210[1u] = cbMtdParam._m0[23u].w;
    _210[2u] = cbMtdParam._m0[21u].w;
    _210[3u] = cbMtdParam._m0[19u].w;
    _210[4u] = cbMtdParam._m0[18u].w;
    _210[5u] = cbMtdParam._m0[17u].w;
    float _589 = ((((_207[_459] - cbMtdParam._m0[10u].x) + ((cbMtdParam._m0[31u].w * (_214[_552] - _207[_459])) * _210[_459])) * _370) + cbMtdParam._m0[10u].x) * _385.x;
    float _590 = ((((_208[_459] - cbMtdParam._m0[10u].y) + ((cbMtdParam._m0[31u].w * (_215[_552] - _208[_459])) * _210[_459])) * _370) + cbMtdParam._m0[10u].y) * _385.y;
    float _591 = ((((_209[_459] - cbMtdParam._m0[10u].z) + ((cbMtdParam._m0[31u].w * (_216[_552] - _209[_459])) * _210[_459])) * _370) + cbMtdParam._m0[10u].z) * _385.z;
    vec4 _603 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _623 = (((cbMtdParam._m0[9u].x * _603.x) - _589) * _373) + _589;
    float _624 = (((cbMtdParam._m0[9u].y * _603.y) - _590) * _373) + _590;
    float _625 = (((cbMtdParam._m0[9u].z * _603.z) - _591) * _373) + _591;
    vec4 _637 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _657 = (((cbMtdParam._m0[20u].x * _637.x) - _623) * _340) + _623;
    float _658 = (((cbMtdParam._m0[20u].y * _637.y) - _624) * _340) + _624;
    float _659 = (((cbMtdParam._m0[20u].z * _637.z) - _625) * _340) + _625;
    vec4 _672 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _211[6];
    float _212[6];
    float _213[6];
    _211[0u] = cbMtdParam._m0[24u].x;
    _212[0u] = cbMtdParam._m0[24u].y;
    _213[0u] = cbMtdParam._m0[24u].z;
    _211[1u] = cbMtdParam._m0[25u].x;
    _212[1u] = cbMtdParam._m0[25u].y;
    _213[1u] = cbMtdParam._m0[25u].z;
    _211[2u] = cbMtdParam._m0[26u].x;
    _212[2u] = cbMtdParam._m0[26u].y;
    _213[2u] = cbMtdParam._m0[26u].z;
    _211[3u] = cbMtdParam._m0[27u].x;
    _212[3u] = cbMtdParam._m0[27u].y;
    _213[3u] = cbMtdParam._m0[27u].z;
    _211[4u] = cbMtdParam._m0[28u].x;
    _212[4u] = cbMtdParam._m0[28u].y;
    _213[4u] = cbMtdParam._m0[28u].z;
    _211[5u] = cbMtdParam._m0[29u].x;
    _212[5u] = cbMtdParam._m0[29u].y;
    _213[5u] = cbMtdParam._m0[29u].z;
    float _759 = _211[_459] * _370;
    float _760 = _212[_459] * _370;
    float _761 = _213[_459] * _370;
    float _762 = _759 + ((_287.x * 4.5) * ((((cbMtdParam._m0[30u].x * _672.x) - _657) * _306) + _657));
    float _763 = _760 + ((_287.y * 4.5) * ((((cbMtdParam._m0[30u].y * _672.y) - _658) * _308) + _658));
    float _764 = _761 + ((_287.z * 4.5) * ((((cbMtdParam._m0[30u].z * _672.z) - _659) * _309) + _659));
    float _202[5];
    float _203[5];
    _202[0u] = cbMtdParam._m0[35u].y;
    _203[0u] = cbMtdParam._m0[35u].z;
    _202[1u] = cbMtdParam._m0[36u].w;
    _203[1u] = cbMtdParam._m0[37u].x;
    _202[2u] = cbMtdParam._m0[37u].y;
    _203[2u] = cbMtdParam._m0[37u].z;
    _202[3u] = cbMtdParam._m0[37u].w;
    _203[3u] = cbMtdParam._m0[38u].x;
    _202[4u] = cbMtdParam._m0[38u].y;
    _203[4u] = cbMtdParam._m0[38u].z;
    float _792 = roundEven(5.0 - _453);
    float _793 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _794 = isnan(4.0) ? _793 : (isnan(_793) ? 4.0 : min(_793, 4.0));
    float _796 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
    uint _798 = uint(int(isnan(4.0) ? _796 : (isnan(_796) ? 4.0 : min(_796, 4.0))));
    float _807 = ((cbMtdParam._m0[39u].z - _203[_798]) * _373) + _203[_798];
    float _815 = ((cbMtdParam._m0[40u].x - _807) * _340) + _807;
    float _820 = ((cbMtdParam._m0[40u].z - _815) * _306) + _815;
    vec4 _834 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _836 = _834.x;
    float _837 = _834.y;
    float _839 = _834.z + _202[_798];
    vec4 _851 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _859 = (((cbMtdParam._m0[39u].y - _839) + _851.z) * _373) + _839;
    vec4 _871 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _879 = (((cbMtdParam._m0[39u].w - _859) + _871.z) * _340) + _859;
    float _885 = ((((_329 * 2.0) * _879) - _879) * cbMtdParam._m0[33u].w) + _879;
    vec4 _897 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _905 = (((_897.z + cbMtdParam._m0[40u].y) - _885) * _309) + _885;
    float _936 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _940 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _967 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * ((_936 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_940 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _982 = (-0.0) - ((_940 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _986 = (_940 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _987 = isnan(_986) ? _982 : (isnan(_982) ? _986 : min(_982, _986));
    float _4458 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _988 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
    float _1013 = ((_851.x - _836) * _373) + _836;
    float _1014 = ((_851.y - _837) * _373) + _837;
    float _1019 = ((_871.x - _1013) * _340) + _1013;
    float _1020 = ((_871.y - _1014) * _340) + _1014;
    float _1029 = ((((_897.x - _1019) * _306) + _1019) * 2.0) + (-1.0);
    float _1030 = ((((_897.y - _1020) * _308) + _1020) * 2.0) + (-1.0);
    float _1031 = dot(vec2(_1029, _1030), vec2(_1029, _1030));
    float _4469 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
    float _1036 = sqrt(1.0 - (isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0))));
    float _1039 = (cbMtdParam._m0[34u].x * ((_325.x * 2.0) + (-1.0))) + _1029;
    float _1040 = (cbMtdParam._m0[34u].x * ((_325.y * 2.0) + (-1.0))) + _1030;
    float _1043 = fma(_1036, _256 * NORMAL.x, fma(_1040, _263 * TANGENT.x, (_249 * _241) * _1039));
    float _1046 = fma(_1036, _256 * NORMAL.y, fma(_1040, _263 * TANGENT.y, (_249 * _242) * _1039));
    float _1049 = fma(_1036, _256 * NORMAL.z, fma(_1040, _263 * TANGENT.z, (_249 * _243) * _1039));
    float _1053 = inversesqrt(dot(vec3(_1043, _1046, _1049), vec3(_1043, _1046, _1049)));
    float _1054 = _1053 * _1043;
    float _1055 = _1053 * _1046;
    float _1056 = _1053 * _1049;
    float _4480 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _1057 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
    float _4491 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4502 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4513 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _4524 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
    float _1061 = isnan(1.0) ? _4524 : (isnan(_4524) ? 1.0 : min(_4524, 1.0));
    float _1077 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1097 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1107 = cbSceneParam._m0[71u].x - (_936 / _1097);
    float _1108 = cbSceneParam._m0[71u].y - (_940 / _1097);
    float _1109 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1097);
    float _1113 = inversesqrt(dot(vec3(_1107, _1108, _1109), vec3(_1107, _1108, _1109)));
    float _1114 = _1107 * _1113;
    float _1115 = _1108 * _1113;
    float _1116 = _1109 * _1113;
    vec4 _1121 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1123 = _1121.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1341 = sqrt(((_1107 * _1107) + (_1108 * _1108)) + (_1109 * _1109));
        float _1347 = (cbMatDynParam._m0[5u].x * _1341) + cbMatDynParam._m0[5u].y;
        float _4535 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1348 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
        float _1352 = (cbMatDynParam._m0[5u].z * _1341) + cbMatDynParam._m0[5u].w;
        float _4546 = isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))) - _1348)) + _1348) < ((_1123 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1134 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1135 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1137 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1139 = _1137.w;
    float _1157 = fma(_1056, cbSceneParam._m0[5u].z, fma(_1055, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1054));
    float _1160 = fma(_1056, cbSceneParam._m0[6u].z, fma(_1055, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1054));
    float _1163 = fma(_1056, cbSceneParam._m0[7u].z, fma(_1055, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1054));
    vec4 _1165 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1176 = (((_1165.y - _1057) + (_1165.w * _1057)) * cbMtdParam._m0[3u].x) + _1057;
    uint _1189 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1190 = _1189 + 9u;
    uint _1191 = _1190 + uint(cbMatDynParam._m0[0u].w);
    float _1197 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4491 : (isnan(_4491) ? 1.0 : min(_4491, 1.0)))) * cbInstanceData._m0[_1191].x;
    float _1198 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4502 : (isnan(_4502) ? 1.0 : min(_4502, 1.0)))) * cbInstanceData._m0[_1191].y;
    float _1199 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4513 : (isnan(_4513) ? 1.0 : min(_4513, 1.0)))) * cbInstanceData._m0[_1191].z;
    float _4557 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
    float _1200 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
    float _4568 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _1201 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
    float _4579 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
    float _1202 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
    vec4 _1203 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1208 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1219 = (((_1208.x - _1061) + (_1208.w * _1061)) * cbMtdParam._m0[3u].x) + _1061;
    float _1232 = (cbMtdParam._m0[3u].x * (((_1200 * _1139) - _1200) + _1203.x)) + _1200;
    float _1233 = (cbMtdParam._m0[3u].x * (((_1201 * _1139) - _1201) + _1203.y)) + _1201;
    float _1234 = (cbMtdParam._m0[3u].x * (((_1202 * _1139) - _1202) + _1203.z)) + _1202;
    float _1235 = 1.0 - _1219;
    float _1236 = _1235 * _1232;
    float _1237 = _1235 * _1233;
    float _1238 = _1235 * _1234;
    float _1243 = (_1232 + (-0.039999999105930328369140625)) * _1219;
    float _1244 = (_1233 + (-0.039999999105930328369140625)) * _1219;
    float _1245 = (_1234 + (-0.039999999105930328369140625)) * _1219;
    float _1246 = _1243 + 0.039999999105930328369140625;
    float _1248 = _1244 + 0.039999999105930328369140625;
    float _1249 = _1245 + 0.039999999105930328369140625;
    vec4 _1258 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1134, cbSceneParam._m0[86u].y * _1135));
    float _1261 = _1258.x * TEXCOORD_5.w;
    float _1262 = dot(vec3(_1054, _1055, _1056), vec3(_1114, _1115, _1116));
    float _1265 = _1262 * 2.0;
    float _1269 = (_1265 * _1054) - _1114;
    float _1270 = (_1265 * _1055) - _1115;
    float _1271 = (_1265 * _1056) - _1116;
    float _1275 = abs(dot(vec3(_1114, _1115, _1116), vec3(_1054, _1055, _1056)));
    float _4590 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
    float _1277 = sqrt(_1176);
    float _1288 = exp2((_1277 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1277 * 3.0));
    float _1294 = (1.0 - _1288) * ((_1277 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1295 = _1288 * _1277;
    float _1323 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1327 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1331 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1658;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    float _1667;
    float _1668;
    float _1669;
    float _1670;
    float _1671;
    float _1672;
    float _1673;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1385 = fma(_1331, cbModelParam._m0[26u].z, fma(_1327, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1323));
        float _1389 = fma(_1331, cbModelParam._m0[27u].z, fma(_1327, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1323));
        float _1393 = fma(_1331, cbModelParam._m0[28u].z, fma(_1327, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1323));
        float _1417 = _1323 + _1054;
        float _1418 = _1327 + _1055;
        float _1419 = _1331 + _1056;
        float _1429 = fma(_1419, cbModelParam._m0[26u].z, fma(_1418, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1417)) - _1385;
        float _1430 = fma(_1419, cbModelParam._m0[27u].z, fma(_1418, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1417)) - _1389;
        float _1431 = fma(_1419, cbModelParam._m0[28u].z, fma(_1418, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1417)) - _1393;
        float _1435 = inversesqrt(dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431)));
        float _1447 = ((_1435 * _1429) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1385 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1448 = ((_1435 * _1430) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1389 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1449 = ((_1435 * _1431) / cbModelParam._m0[34u].z) + ((((((_1393 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1452 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1447, _1448, _1449), 0.0);
        vec4 _1459 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1447, _1448, _1449), 0.0);
        vec4 _1466 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1447, _1448, _1449), 0.0);
        vec4 _1473 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1447, _1448, _1449), 0.0);
        float _1486 = exp2((_1452.w + (-0.5)) * 20.0) * 2.0;
        float _1487 = _1486 * (_1452.x + (-0.5));
        float _1488 = _1486 * (_1452.y + (-0.5));
        float _1489 = _1486 * (_1452.z + (-0.5));
        float _1496 = exp2((_1459.w + (-0.5)) * 20.0) * 2.0;
        float _1497 = _1496 * (_1459.x + (-0.5));
        float _1498 = _1496 * (_1459.y + (-0.5));
        float _1499 = _1496 * (_1459.z + (-0.5));
        float _1506 = exp2((_1466.w + (-0.5)) * 20.0) * 2.0;
        float _1507 = _1506 * (_1466.x + (-0.5));
        float _1508 = _1506 * (_1466.y + (-0.5));
        float _1509 = _1506 * (_1466.z + (-0.5));
        float _1516 = exp2((_1473.w + (-0.5)) * 20.0) * 2.0;
        float _1517 = _1516 * (_1473.x + (-0.5));
        float _1518 = _1516 * (_1473.y + (-0.5));
        float _1519 = _1516 * (_1473.z + (-0.5));
        float _1520 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1521 = isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0));
        float _1522 = isnan(0.0) ? _1519 : (isnan(_1519) ? 0.0 : max(_1519, 0.0));
        float _1523 = _1487 * 0.5;
        float _1524 = _1497 * 0.5;
        float _1525 = _1507 * 0.5;
        float _1526 = dot(vec3(_1523, _1524, _1525), vec3(_1523, _1524, _1525));
        float _1531 = (_1526 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1526);
        float _1540 = (dot(vec3(_1054, _1055, _1056), vec3(_1531 * _1523, _1531 * _1524, _1531 * _1525)) + 1.0) * 0.5;
        float _4616 = isnan(0.0) ? _1540 : (isnan(_1540) ? 0.0 : max(_1540, 0.0));
        float _1550 = sqrt(((_1524 * _1524) + (_1523 * _1523)) + (_1525 * _1525)) / (_1520 + 9.9999997473787516355514526367188e-06);
        float _4627 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        float _1551 = isnan(1.0) ? _4627 : (isnan(_4627) ? 1.0 : min(_4627, 1.0));
        float _1552 = _1551 * 2.0;
        float _1556 = (1.0 - _1551) / (_1551 + 1.0);
        float _4638 = isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0));
        float _1557 = isnan(1.0) ? _4638 : (isnan(_4638) ? 1.0 : min(_4638, 1.0));
        float _1566 = ((((1.0 - _1557) * (_1552 + 2.0)) * exp2(log2(isnan(1.0) ? _4616 : (isnan(_4616) ? 1.0 : min(_4616, 1.0))) * (_1552 + 1.0))) + _1557) * _1520;
        float _1567 = _1488 * 0.5;
        float _1568 = _1498 * 0.5;
        float _1569 = _1508 * 0.5;
        float _1570 = dot(vec3(_1567, _1568, _1569), vec3(_1567, _1568, _1569));
        float _1575 = (_1570 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1570);
        float _1583 = (dot(vec3(_1054, _1055, _1056), vec3(_1575 * _1567, _1575 * _1568, _1575 * _1569)) + 1.0) * 0.5;
        float _4649 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1592 = sqrt(((_1568 * _1568) + (_1567 * _1567)) + (_1569 * _1569)) / (_1521 + 9.9999997473787516355514526367188e-06);
        float _4660 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1593 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _1594 = _1593 * 2.0;
        float _1598 = (1.0 - _1593) / (_1593 + 1.0);
        float _4671 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
        float _1599 = isnan(1.0) ? _4671 : (isnan(_4671) ? 1.0 : min(_4671, 1.0));
        float _1608 = ((((1.0 - _1599) * (_1594 + 2.0)) * exp2(log2(isnan(1.0) ? _4649 : (isnan(_4649) ? 1.0 : min(_4649, 1.0))) * (_1594 + 1.0))) + _1599) * _1521;
        float _1609 = _1489 * 0.5;
        float _1610 = _1499 * 0.5;
        float _1611 = _1509 * 0.5;
        float _1612 = dot(vec3(_1609, _1610, _1611), vec3(_1609, _1610, _1611));
        float _1617 = (_1612 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1612);
        float _1625 = (dot(vec3(_1054, _1055, _1056), vec3(_1617 * _1609, _1617 * _1610, _1617 * _1611)) + 1.0) * 0.5;
        float _4682 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1634 = sqrt(((_1610 * _1610) + (_1609 * _1609)) + (_1611 * _1611)) / (_1522 + 9.9999997473787516355514526367188e-06);
        float _4693 = isnan(0.0) ? _1634 : (isnan(_1634) ? 0.0 : max(_1634, 0.0));
        float _1635 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
        float _1636 = _1635 * 2.0;
        float _1640 = (1.0 - _1635) / (_1635 + 1.0);
        float _4704 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1641 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
        float _1650 = ((((1.0 - _1641) * (_1636 + 2.0)) * exp2(log2(isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0))) * (_1636 + 1.0))) + _1641) * _1522;
        _1658 = _1489;
        _1660 = _1488;
        _1661 = _1487;
        _1662 = _1499;
        _1663 = _1498;
        _1664 = _1497;
        _1665 = _1509;
        _1666 = _1508;
        _1667 = _1507;
        _1668 = _1522;
        _1669 = _1521;
        _1670 = _1520;
        _1671 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0)));
        _1672 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0)));
        _1673 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0)));
    }
    else
    {
        _1658 = _1659;
        _1660 = _1659;
        _1661 = _1659;
        _1662 = _1659;
        _1663 = _1659;
        _1664 = _1659;
        _1665 = _1659;
        _1666 = _1659;
        _1667 = _1659;
        _1668 = _1659;
        _1669 = _1659;
        _1670 = _1659;
        _1671 = 0.0;
        _1672 = 0.0;
        _1673 = 0.0;
    }
    float _1966;
    float _1967;
    float _1968;
    float _1969;
    float _1970;
    float _1971;
    float _1972;
    float _1973;
    float _1974;
    float _1975;
    float _1976;
    float _1977;
    float _1978;
    float _1979;
    float _1980;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1699 = fma(_1331, cbModelParam._m0[30u].z, fma(_1327, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1323));
        float _1703 = fma(_1331, cbModelParam._m0[31u].z, fma(_1327, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1323));
        float _1707 = fma(_1331, cbModelParam._m0[32u].z, fma(_1327, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1323));
        float _1729 = _1323 + _1054;
        float _1730 = _1327 + _1055;
        float _1731 = _1331 + _1056;
        float _1741 = fma(_1731, cbModelParam._m0[30u].z, fma(_1730, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1729)) - _1699;
        float _1742 = fma(_1731, cbModelParam._m0[31u].z, fma(_1730, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1729)) - _1703;
        float _1743 = fma(_1731, cbModelParam._m0[32u].z, fma(_1730, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1729)) - _1707;
        float _1747 = inversesqrt(dot(vec3(_1741, _1742, _1743), vec3(_1741, _1742, _1743)));
        float _1759 = ((_1747 * _1741) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1699 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1760 = ((_1747 * _1742) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1703 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1761 = ((_1747 * _1743) / cbModelParam._m0[35u].z) + ((((((_1707 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1763 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1759, _1760, _1761), 0.0);
        vec4 _1770 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1759, _1760, _1761), 0.0);
        vec4 _1777 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1759, _1760, _1761), 0.0);
        vec4 _1784 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1759, _1760, _1761), 0.0);
        float _1796 = exp2((_1763.w + (-0.5)) * 20.0) * 2.0;
        float _1797 = _1796 * (_1763.x + (-0.5));
        float _1798 = _1796 * (_1763.y + (-0.5));
        float _1799 = _1796 * (_1763.z + (-0.5));
        float _1806 = exp2((_1770.w + (-0.5)) * 20.0) * 2.0;
        float _1807 = _1806 * (_1770.x + (-0.5));
        float _1808 = _1806 * (_1770.y + (-0.5));
        float _1809 = _1806 * (_1770.z + (-0.5));
        float _1816 = exp2((_1777.w + (-0.5)) * 20.0) * 2.0;
        float _1817 = _1816 * (_1777.x + (-0.5));
        float _1818 = _1816 * (_1777.y + (-0.5));
        float _1819 = _1816 * (_1777.z + (-0.5));
        float _1826 = exp2((_1784.w + (-0.5)) * 20.0) * 2.0;
        float _1827 = _1826 * (_1784.x + (-0.5));
        float _1828 = _1826 * (_1784.y + (-0.5));
        float _1829 = _1826 * (_1784.z + (-0.5));
        float _1830 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1831 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
        float _1832 = isnan(0.0) ? _1829 : (isnan(_1829) ? 0.0 : max(_1829, 0.0));
        float _1833 = _1797 * 0.5;
        float _1834 = _1807 * 0.5;
        float _1835 = _1817 * 0.5;
        float _1836 = dot(vec3(_1833, _1834, _1835), vec3(_1833, _1834, _1835));
        float _1841 = (_1836 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1836);
        float _1849 = (dot(vec3(_1054, _1055, _1056), vec3(_1841 * _1833, _1841 * _1834, _1841 * _1835)) + 1.0) * 0.5;
        float _4745 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
        float _1858 = sqrt(((_1834 * _1834) + (_1833 * _1833)) + (_1835 * _1835)) / (_1830 + 9.9999997473787516355514526367188e-06);
        float _4756 = isnan(0.0) ? _1858 : (isnan(_1858) ? 0.0 : max(_1858, 0.0));
        float _1859 = isnan(1.0) ? _4756 : (isnan(_4756) ? 1.0 : min(_4756, 1.0));
        float _1860 = _1859 * 2.0;
        float _1864 = (1.0 - _1859) / (_1859 + 1.0);
        float _4767 = isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0));
        float _1865 = isnan(1.0) ? _4767 : (isnan(_4767) ? 1.0 : min(_4767, 1.0));
        float _1874 = ((((1.0 - _1865) * (_1860 + 2.0)) * exp2(log2(isnan(1.0) ? _4745 : (isnan(_4745) ? 1.0 : min(_4745, 1.0))) * (_1860 + 1.0))) + _1865) * _1830;
        float _1875 = _1798 * 0.5;
        float _1876 = _1808 * 0.5;
        float _1877 = _1818 * 0.5;
        float _1878 = dot(vec3(_1875, _1876, _1877), vec3(_1875, _1876, _1877));
        float _1883 = (_1878 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1878);
        float _1891 = (dot(vec3(_1054, _1055, _1056), vec3(_1883 * _1875, _1883 * _1876, _1883 * _1877)) + 1.0) * 0.5;
        float _4778 = isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0));
        float _1900 = sqrt(((_1876 * _1876) + (_1875 * _1875)) + (_1877 * _1877)) / (_1831 + 9.9999997473787516355514526367188e-06);
        float _4789 = isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0));
        float _1901 = isnan(1.0) ? _4789 : (isnan(_4789) ? 1.0 : min(_4789, 1.0));
        float _1902 = _1901 * 2.0;
        float _1906 = (1.0 - _1901) / (_1901 + 1.0);
        float _4800 = isnan(0.0) ? _1906 : (isnan(_1906) ? 0.0 : max(_1906, 0.0));
        float _1907 = isnan(1.0) ? _4800 : (isnan(_4800) ? 1.0 : min(_4800, 1.0));
        float _1916 = ((((1.0 - _1907) * (_1902 + 2.0)) * exp2(log2(isnan(1.0) ? _4778 : (isnan(_4778) ? 1.0 : min(_4778, 1.0))) * (_1902 + 1.0))) + _1907) * _1831;
        float _1917 = _1799 * 0.5;
        float _1918 = _1809 * 0.5;
        float _1919 = _1819 * 0.5;
        float _1920 = dot(vec3(_1917, _1918, _1919), vec3(_1917, _1918, _1919));
        float _1925 = (_1920 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1920);
        float _1933 = (dot(vec3(_1054, _1055, _1056), vec3(_1925 * _1917, _1925 * _1918, _1925 * _1919)) + 1.0) * 0.5;
        float _4811 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
        float _1942 = sqrt(((_1918 * _1918) + (_1917 * _1917)) + (_1919 * _1919)) / (_1832 + 9.9999997473787516355514526367188e-06);
        float _4822 = isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0));
        float _1943 = isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0));
        float _1944 = _1943 * 2.0;
        float _1948 = (1.0 - _1943) / (_1943 + 1.0);
        float _4833 = isnan(0.0) ? _1948 : (isnan(_1948) ? 0.0 : max(_1948, 0.0));
        float _1949 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
        float _1958 = ((((1.0 - _1949) * (_1944 + 2.0)) * exp2(log2(isnan(1.0) ? _4811 : (isnan(_4811) ? 1.0 : min(_4811, 1.0))) * (_1944 + 1.0))) + _1949) * _1832;
        _1966 = _1799;
        _1967 = _1798;
        _1968 = _1797;
        _1969 = _1809;
        _1970 = _1808;
        _1971 = _1807;
        _1972 = _1819;
        _1973 = _1818;
        _1974 = _1817;
        _1975 = _1832;
        _1976 = _1831;
        _1977 = _1830;
        _1978 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0)));
        _1979 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1916 : (isnan(_1916) ? 0.0 : max(_1916, 0.0)));
        _1980 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0)));
    }
    else
    {
        _1966 = _1659;
        _1967 = _1659;
        _1968 = _1659;
        _1969 = _1659;
        _1970 = _1659;
        _1971 = _1659;
        _1972 = _1659;
        _1973 = _1659;
        _1974 = _1659;
        _1975 = _1659;
        _1976 = _1659;
        _1977 = _1659;
        _1978 = 0.0;
        _1979 = 0.0;
        _1980 = 0.0;
    }
    float _1990 = (cbModelParam._m0[1u].x * (_1978 - _1671)) + _1671;
    float _1991 = (cbModelParam._m0[1u].x * (_1979 - _1672)) + _1672;
    float _1992 = (cbModelParam._m0[1u].x * (_1980 - _1673)) + _1673;
    float _2013 = fma(_1992, cbSceneParam._m0[89u].z, fma(_1991, cbSceneParam._m0[89u].y, _1990 * cbSceneParam._m0[89u].x));
    float _2016 = fma(_1992, cbSceneParam._m0[90u].z, fma(_1991, cbSceneParam._m0[90u].y, _1990 * cbSceneParam._m0[90u].x));
    float _2019 = fma(_1992, cbSceneParam._m0[91u].z, fma(_1991, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1990));
    float _2032 = _1269 * 0.5;
    float _2033 = _1270 * 0.5;
    float _2034 = _1271 * 0.5;
    float _2035 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1968, _1971, _1974, _1977));
    float _2038 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1967, _1970, _1973, _1976));
    float _2041 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1966, _1969, _1972, _1975));
    float _2075;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2048 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1658, _1662, _1665, _1668));
        float _2052 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1660, _1663, _1666, _1669));
        float _2056 = dot(vec4(_2032, _2033, _2034, 1.0), vec4(_1661, _1664, _1667, _1670));
        float _2063 = dot(vec4(cbModelParam._m0[39u]), vec4(_2032, _2033, _2034, 1.0));
        _2075 = dot(vec3(isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0)), isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0)), isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2063) ? 0.0 : (isnan(0.0) ? _2063 : max(0.0, _2063))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2075 = 1.0;
    }
    float _2086;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2077 = dot(vec4(cbModelParam._m0[40u]), vec4(_2032, _2033, _2034, 1.0));
        _2086 = dot(vec3(isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0)), isnan(0.0) ? _2038 : (isnan(_2038) ? 0.0 : max(_2038, 0.0)), isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2077) ? 0.0 : (isnan(0.0) ? _2077 : max(0.0, _2077))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2086 = 1.0;
    }
    float _2090 = (_2086 * cbModelParam._m0[1u].x) + (_2075 * (1.0 - cbModelParam._m0[1u].x));
    float _2100 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1176);
    float _2101 = isnan(_2100) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2100 : min(cbModelParam._m0[25u].z, _2100));
    float _2181;
    float _2183;
    float _2185;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2148 = fma(_1331, cbModelParam._m0[13u].z, fma(_1327, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1323)) + cbModelParam._m0[13u].w;
        float _2152 = fma(_1331, cbModelParam._m0[14u].z, fma(_1327, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1323)) + cbModelParam._m0[14u].w;
        float _2156 = fma(_1331, cbModelParam._m0[15u].z, fma(_1327, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1323)) + cbModelParam._m0[15u].w;
        float _2159 = fma(_1271, cbModelParam._m0[13u].z, fma(_1270, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1269));
        float _2162 = fma(_1271, cbModelParam._m0[14u].z, fma(_1270, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1269));
        float _2165 = fma(_1271, cbModelParam._m0[15u].z, fma(_1270, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1269));
        float _2193;
        if (_2159 > 0.0)
        {
            _2193 = abs((1.0 - _2148) / _2159);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_2159 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_2148 + 1.0) / _2159);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _2193 = frontier_phi_17_15_ladder;
        }
        float _2364;
        if (_2162 > 0.0)
        {
            _2364 = abs((1.0 - _2152) / _2162);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_2162 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_2152 + 1.0) / _2162);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2364 = frontier_phi_26_22_ladder;
        }
        float _2658;
        if (_2165 > 0.0)
        {
            _2658 = abs((1.0 - _2156) / _2165);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_2165 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_2156 + 1.0) / _2165);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2658 = frontier_phi_38_33_ladder;
        }
        float _2660 = isnan(_2364) ? _2193 : (isnan(_2193) ? _2364 : min(_2193, _2364));
        float _2661 = isnan(_2658) ? _2660 : (isnan(_2660) ? _2658 : min(_2660, _2658));
        float _2665 = (_2661 * _2159) + _2148;
        float _2666 = (_2661 * _2162) + _2152;
        float _2667 = (_2661 * _2165) + _2156;
        float _2668 = _2661 * 9.9999997473787516355514526367188e-05;
        float _2670 = (-1.0) - _2668;
        float _2672 = _2668 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2667 > _2672) || ((_2667 < _2670) || ((_2666 > _2672) || ((_2666 < _2670) || ((_2665 < _2670) || (_2665 > _2672))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2812 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2667, cbModelParam._m0[9u].z, fma(_2666, cbModelParam._m0[9u].y, _2665 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2667, cbModelParam._m0[10u].z, fma(_2666, cbModelParam._m0[10u].y, _2665 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2667, cbModelParam._m0[11u].z, fma(_2666, cbModelParam._m0[11u].y, _2665 * cbModelParam._m0[11u].x))), _2101);
            frontier_phi_16_38_ladder = _2812.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2812.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2812.x * cbModelParam._m0[1u].y;
        }
        _2181 = frontier_phi_16_38_ladder_2;
        _2183 = frontier_phi_16_38_ladder_1;
        _2185 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _2169 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1269, _1270, _1271), _2101);
        _2181 = _2169.x * cbModelParam._m0[1u].y;
        _2183 = _2169.y * cbModelParam._m0[1u].y;
        _2185 = _2169.z * cbModelParam._m0[1u].y;
    }
    float _2189 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1176);
    float _2190 = isnan(_2189) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2189 : min(cbModelParam._m0[25u].w, _2189));
    float _2279;
    float _2281;
    float _2283;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2243 = fma(_1331, cbModelParam._m0[21u].z, fma(_1327, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1323)) + cbModelParam._m0[21u].w;
        float _2247 = fma(_1331, cbModelParam._m0[22u].z, fma(_1327, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1323)) + cbModelParam._m0[22u].w;
        float _2251 = fma(_1331, cbModelParam._m0[23u].z, fma(_1327, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1323)) + cbModelParam._m0[23u].w;
        float _2254 = fma(_1271, cbModelParam._m0[21u].z, fma(_1270, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1269));
        float _2257 = fma(_1271, cbModelParam._m0[22u].z, fma(_1270, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1269));
        float _2260 = fma(_1271, cbModelParam._m0[23u].z, fma(_1270, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1269));
        float _2369;
        if (_2254 > 0.0)
        {
            _2369 = abs((1.0 - _2243) / _2254);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2254 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2243 + 1.0) / _2254);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2369 = frontier_phi_28_24_ladder;
        }
        float _2685;
        if (_2257 > 0.0)
        {
            _2685 = abs((1.0 - _2247) / _2257);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2257 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2247 + 1.0) / _2257);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2685 = frontier_phi_40_35_ladder;
        }
        float _3023;
        if (_2260 > 0.0)
        {
            _3023 = abs((1.0 - _2251) / _2260);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2260 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2251 + 1.0) / _2260);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _3023 = frontier_phi_50_47_ladder;
        }
        float _3025 = isnan(_2685) ? _2369 : (isnan(_2369) ? _2685 : min(_2369, _2685));
        float _3026 = isnan(_3023) ? _3025 : (isnan(_3025) ? _3023 : min(_3025, _3023));
        float _3030 = (_3026 * _2254) + _2243;
        float _3031 = (_3026 * _2257) + _2247;
        float _3032 = (_3026 * _2260) + _2251;
        float _3033 = _3026 * 9.9999997473787516355514526367188e-05;
        float _3034 = (-1.0) - _3033;
        float _3036 = _3033 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_3032 > _3036) || ((_3032 < _3034) || ((_3031 > _3036) || ((_3031 < _3034) || ((_3030 < _3034) || (_3030 > _3036))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3154 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3032, cbModelParam._m0[17u].z, fma(_3031, cbModelParam._m0[17u].y, _3030 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3032, cbModelParam._m0[18u].z, fma(_3031, cbModelParam._m0[18u].y, _3030 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3032, cbModelParam._m0[19u].z, fma(_3031, cbModelParam._m0[19u].y, _3030 * cbModelParam._m0[19u].x))), _2190);
            frontier_phi_25_50_ladder = _3154.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _3154.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _3154.x * cbModelParam._m0[1u].z;
        }
        _2279 = frontier_phi_25_50_ladder_2;
        _2281 = frontier_phi_25_50_ladder_1;
        _2283 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2263 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1269, _1270, _1271), _2190);
        _2279 = _2263.x * cbModelParam._m0[1u].z;
        _2281 = _2263.y * cbModelParam._m0[1u].z;
        _2283 = _2263.z * cbModelParam._m0[1u].z;
    }
    float _2296 = (((_1294 * _1246) + _1295) * _1261) * ((cbModelParam._m0[1u].w * (_2279 - _2181)) + _2181);
    float _2298 = (((_1294 * _1248) + _1295) * _1261) * ((cbModelParam._m0[1u].w * (_2281 - _2183)) + _2183);
    float _2300 = (((_1294 * _1249) + _1295) * _1261) * ((cbModelParam._m0[1u].w * (_2283 - _2185)) + _2185);
    float _2303 = fma(_2300, cbSceneParam._m0[89u].z, fma(_2298, cbSceneParam._m0[89u].y, _2296 * cbSceneParam._m0[89u].x));
    float _2306 = fma(_2300, cbSceneParam._m0[90u].z, fma(_2298, cbSceneParam._m0[90u].y, _2296 * cbSceneParam._m0[90u].x));
    float _2309 = fma(_2300, cbSceneParam._m0[91u].z, fma(_2298, cbSceneParam._m0[91u].y, _2296 * cbSceneParam._m0[91u].x));
    float _2343 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2347 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2351 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2355 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2356 = _2343 / _2355;
    float _2357 = _2347 / _2355;
    float _2358 = _2351 / _2355;
    float _2504;
    float _2505;
    float _2506;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2385 = ((uint(_2358 > cbSceneParam._m0[59u].y) + uint(_2358 > cbSceneParam._m0[59u].x)) + uint(_2358 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2386 = _2385 + 43u;
        uint _2394 = _2385 + 44u;
        uint _2402 = _2385 + 45u;
        uint _2410 = _2385 + 46u;
        float _2421 = fma(_2355, cbSceneParam._m0[_2386].w, fma(_2351, cbSceneParam._m0[_2386].z, fma(_2347, cbSceneParam._m0[_2386].y, _2343 * cbSceneParam._m0[_2386].x)));
        float _2425 = fma(_2355, cbSceneParam._m0[_2394].w, fma(_2351, cbSceneParam._m0[_2394].z, fma(_2347, cbSceneParam._m0[_2394].y, _2343 * cbSceneParam._m0[_2394].x)));
        float _2433 = fma(_2355, cbSceneParam._m0[_2410].w, fma(_2351, cbSceneParam._m0[_2410].z, fma(_2347, cbSceneParam._m0[_2410].y, _2343 * cbSceneParam._m0[_2410].x)));
        float _2437 = cbSceneParam._m0[33u].z * _2433;
        float _2439 = cbSceneParam._m0[33u].w * _2433;
        float _2442 = fma(_2355, cbSceneParam._m0[_2402].w, fma(_2351, cbSceneParam._m0[_2402].z, fma(_2347, cbSceneParam._m0[_2402].y, _2343 * cbSceneParam._m0[_2402].x))) / _2433;
        float _2490 = (cbSceneParam._m0[33u].x - sqrt(((_2357 * _2357) + (_2356 * _2356)) + (_2358 * _2358))) * cbSceneParam._m0[33u].y;
        float _4959 = isnan(0.0) ? _2490 : (isnan(_2490) ? 0.0 : max(_2490, 0.0));
        float _2497 = (isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2437 + _2421) / _2433, (_2439 + _2425) / _2433), _2442), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2439 + _2421) / _2433, (_2425 - _2437) / _2433), _2442), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2421 - _2437) / _2433, (_2425 - _2439) / _2433), _2442), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2421 - _2439) / _2433, (_2437 + _2425) / _2433), _2442), 0.0)).x), vec4(0.25)));
        _2504 = 1.0 - (_2497 * cbSceneParam._m0[34u].x);
        _2505 = 1.0 - (_2497 * cbSceneParam._m0[34u].y);
        _2506 = 1.0 - (_2497 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2504 = 1.0;
        _2505 = 1.0;
        _2506 = 1.0;
    }
    float _2570;
    float _2572;
    float _2574;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2558 = fma(_2355, cbSceneParam._m0[63u].w, fma(_2351, cbSceneParam._m0[63u].z, fma(_2347, cbSceneParam._m0[63u].y, _2343 * cbSceneParam._m0[63u].x)));
        float _2559 = fma(_2355, cbSceneParam._m0[60u].w, fma(_2351, cbSceneParam._m0[60u].z, fma(_2347, cbSceneParam._m0[60u].y, _2343 * cbSceneParam._m0[60u].x))) / _2558;
        float _2560 = fma(_2355, cbSceneParam._m0[61u].w, fma(_2351, cbSceneParam._m0[61u].z, fma(_2347, cbSceneParam._m0[61u].y, _2343 * cbSceneParam._m0[61u].x))) / _2558;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2559 >= cbSceneParam._m0[64u].x) && (_2560 >= cbSceneParam._m0[64u].y)) && (_2559 <= cbSceneParam._m0[64u].z)) && (_2560 <= cbSceneParam._m0[64u].w))
        {
            float _2698 = fma(_2355, cbSceneParam._m0[62u].w, fma(_2351, cbSceneParam._m0[62u].z, fma(_2347, cbSceneParam._m0[62u].y, _2343 * cbSceneParam._m0[62u].x))) / _2558;
            float _2702 = isnan(cbSceneParam._m0[41u].w) ? _2698 : (isnan(_2698) ? cbSceneParam._m0[41u].w : max(_2698, cbSceneParam._m0[41u].w));
            float _2745 = (cbSceneParam._m0[33u].x - sqrt(((_2357 * _2357) + (_2356 * _2356)) + (_2358 * _2358))) * cbSceneParam._m0[33u].y;
            float _4975 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
            float _2752 = (isnan(1.0) ? _4975 : (isnan(_4975) ? 1.0 : min(_4975, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2559, cbSceneParam._m0[33u].w + _2560), _2702), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2559, _2560 - cbSceneParam._m0[33u].z), _2702), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2559 - cbSceneParam._m0[33u].z, _2560 - cbSceneParam._m0[33u].w), _2702), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2559 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2560), _2702), 0.0)).x), vec4(0.25)));
            float _2756 = 1.0 - (_2752 * cbSceneParam._m0[34u].x);
            float _2757 = 1.0 - (_2752 * cbSceneParam._m0[34u].y);
            float _2758 = 1.0 - (_2752 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2758) ? _2506 : (isnan(_2506) ? _2758 : min(_2506, _2758));
            frontier_phi_37_36_ladder_1 = isnan(_2757) ? _2505 : (isnan(_2505) ? _2757 : min(_2505, _2757));
            frontier_phi_37_36_ladder_2 = isnan(_2756) ? _2504 : (isnan(_2504) ? _2756 : min(_2504, _2756));
        }
        else
        {
            frontier_phi_37_36_ladder = _2506;
            frontier_phi_37_36_ladder_1 = _2505;
            frontier_phi_37_36_ladder_2 = _2504;
        }
        _2570 = frontier_phi_37_36_ladder_2;
        _2572 = frontier_phi_37_36_ladder_1;
        _2574 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2570 = _2504;
        _2572 = _2505;
        _2574 = _2506;
    }
    uvec4 _2579 = floatBitsToUint(cbInstanceData._m0[_1189 + 5u]);
    uint _2581 = _2579.x * 14u;
    uint _2582 = _2581 + 13u;
    float _2589 = _1261 + (-1.0);
    float _2594 = (cbLight._m0[_2582].x * _2589) + 1.0;
    float _2595 = (cbLight._m0[_2582].y * _2589) + 1.0;
    float _2596 = (cbLight._m0[_2582].z * _2589) + 1.0;
    float _2597 = (cbLight._m0[_2582].w * _2589) + 1.0;
    uint _2598 = _2581 + 5u;
    float _2604 = isnan(1.0) ? _2595 : (isnan(_2595) ? 1.0 : min(_2595, 1.0));
    uint _2608 = _2581 + 4u;
    float _2617 = isnan(1.0) ? _2594 : (isnan(_2594) ? 1.0 : min(_2594, 1.0));
    uint _2621 = _2581 | 1u;
    float _2632 = dot(vec3(cbLight._m0[_2581].xyz), vec3(_1054, _1055, _1056));
    float _2635 = dot(vec3(cbLight._m0[_2621].xyz), vec3(_1054, _1055, _1056));
    float _5011 = isnan(0.0) ? _2632 : (isnan(_2632) ? 0.0 : max(_2632, 0.0));
    float _5022 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2640 = (isnan(1.0) ? _5011 : (isnan(_5011) ? 1.0 : min(_5011, 1.0))) * 0.3183098733425140380859375;
    float _2642 = (isnan(1.0) ? _5022 : (isnan(_5022) ? 1.0 : min(_5022, 1.0))) * 0.3183098733425140380859375;
    float _2649 = ((cbLight._m0[_2598].x * _2604) * _2642) + (((cbLight._m0[_2608].x * _2570) * _2617) * _2640);
    float _2650 = ((_2604 * cbLight._m0[_2598].y) * _2642) + (((cbLight._m0[_2608].y * _2572) * _2617) * _2640);
    float _2651 = ((_2604 * cbLight._m0[_2598].z) * _2642) + (((cbLight._m0[_2608].z * _2574) * _2617) * _2640);
    uvec4 _2655 = floatBitsToUint(cbLight._m0[_2581 + 12u]);
    bool _2657 = _2655.x == 0u;
    float _2759;
    float _2761;
    float _2763;
    if (_2657)
    {
        _2759 = _2649;
        _2761 = _2650;
        _2763 = _2651;
    }
    else
    {
        uint _2767 = _2581 + 6u;
        float _2783 = (dot(vec3(cbLight._m0[_2581 + 2u].xyz), vec3(_1054, _1055, _1056)) * 0.5) + 0.5;
        float _2784 = _2783 * _2783;
        float _5033 = isnan(0.0) ? _2784 : (isnan(_2784) ? 0.0 : max(_2784, 0.0));
        float _2785 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
        float _2786 = isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0));
        _2759 = (((cbLight._m0[_2767].x * 0.3183098733425140380859375) * _2785) * _2786) + _2649;
        _2761 = (((cbLight._m0[_2767].y * 0.3183098733425140380859375) * _2785) * _2786) + _2650;
        _2763 = (((cbLight._m0[_2767].z * 0.3183098733425140380859375) * _2785) * _2786) + _2651;
    }
    bool _2766 = _2655.y == 0u;
    float _2821;
    float _2823;
    float _2825;
    if (_2766)
    {
        _2821 = _2759;
        _2823 = _2761;
        _2825 = _2763;
    }
    else
    {
        uint _2994 = _2581 + 7u;
        float _3010 = (dot(vec3(cbLight._m0[_2581 + 3u].xyz), vec3(_1054, _1055, _1056)) * 0.5) + 0.5;
        float _3011 = _3010 * _3010;
        float _5049 = isnan(0.0) ? _3011 : (isnan(_3011) ? 0.0 : max(_3011, 0.0));
        float _3012 = isnan(1.0) ? _5049 : (isnan(_5049) ? 1.0 : min(_5049, 1.0));
        float _3013 = isnan(1.0) ? _2597 : (isnan(_2597) ? 1.0 : min(_2597, 1.0));
        _2821 = (((cbLight._m0[_2994].x * 0.3183098733425140380859375) * _3012) * _3013) + _2759;
        _2823 = (((cbLight._m0[_2994].y * 0.3183098733425140380859375) * _3012) * _3013) + _2761;
        _2825 = (((cbLight._m0[_2994].z * 0.3183098733425140380859375) * _3012) * _3013) + _2763;
    }
    uint _2828 = _2581 + 8u;
    float _2841 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2581].w)) * _1176) * 0.949999988079071044921875);
    float _2842 = _2841 * _2841;
    float _2843 = cbLight._m0[_2581].x + _1114;
    float _2844 = cbLight._m0[_2581].y + _1115;
    float _2845 = cbLight._m0[_2581].z + _1116;
    float _2849 = inversesqrt(dot(vec3(_2843, _2844, _2845), vec3(_2843, _2844, _2845)));
    float _2850 = _2849 * _2843;
    float _2851 = _2849 * _2844;
    float _2852 = _2849 * _2845;
    float _2853 = dot(vec3(_1054, _1055, _1056), vec3(cbLight._m0[_2581].xyz));
    float _5065 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
    float _2856 = isnan(1.0) ? _5065 : (isnan(_5065) ? 1.0 : min(_5065, 1.0));
    float _5076 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0));
    float _2857 = isnan(1.0) ? _5076 : (isnan(_5076) ? 1.0 : min(_5076, 1.0));
    float _2858 = dot(vec3(_1054, _1055, _1056), vec3(_2850, _2851, _2852));
    float _5087 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
    float _2861 = isnan(1.0) ? _5087 : (isnan(_5087) ? 1.0 : min(_5087, 1.0));
    float _2862 = dot(vec3(cbLight._m0[_2581].xyz), vec3(_2850, _2851, _2852));
    float _5098 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
    float _2866 = _2842 * _2842;
    float _2870 = ((_2861 * _2861) * (_2866 + (-1.0))) + 1.0;
    float _2878 = exp2(log2(1.0 - (isnan(1.0) ? _5098 : (isnan(_5098) ? 1.0 : min(_5098, 1.0)))) * 5.0);
    float _2879 = 0.959999978542327880859375 - _1243;
    float _2881 = 0.959999978542327880859375 - _1244;
    float _2882 = 0.959999978542327880859375 - _1245;
    float _2889 = 1.0 - _2842;
    float _2900 = (0.5 / (((_2857 * ((_2856 * _2889) + _2842)) + 9.9999999392252902907785028219223e-09) + (((_2857 * _2889) + _2842) * _2856))) * _2856;
    float _5109 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
    float _2902 = (isnan(1.0) ? _5109 : (isnan(_5109) ? 1.0 : min(_5109, 1.0))) * (_2866 / ((_2870 * _2870) * 3.141590118408203125));
    uint _2916 = _2581 + 9u;
    float _2927 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2621].w)) * _1176) * 0.949999988079071044921875);
    float _2928 = _2927 * _2927;
    float _2929 = cbLight._m0[_2621].x + _1114;
    float _2930 = cbLight._m0[_2621].y + _1115;
    float _2931 = cbLight._m0[_2621].z + _1116;
    float _2935 = inversesqrt(dot(vec3(_2929, _2930, _2931), vec3(_2929, _2930, _2931)));
    float _2936 = _2935 * _2929;
    float _2937 = _2935 * _2930;
    float _2938 = _2935 * _2931;
    float _2939 = dot(vec3(_1054, _1055, _1056), vec3(cbLight._m0[_2621].xyz));
    float _5120 = isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0));
    float _2942 = isnan(1.0) ? _5120 : (isnan(_5120) ? 1.0 : min(_5120, 1.0));
    float _2943 = dot(vec3(_1054, _1055, _1056), vec3(_2936, _2937, _2938));
    float _5131 = isnan(0.0) ? _2943 : (isnan(_2943) ? 0.0 : max(_2943, 0.0));
    float _2946 = isnan(1.0) ? _5131 : (isnan(_5131) ? 1.0 : min(_5131, 1.0));
    float _2947 = dot(vec3(cbLight._m0[_2621].xyz), vec3(_2936, _2937, _2938));
    float _5142 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0));
    float _2951 = _2928 * _2928;
    float _2955 = ((_2946 * _2946) * (_2951 + (-1.0))) + 1.0;
    float _2962 = exp2(log2(1.0 - (isnan(1.0) ? _5142 : (isnan(_5142) ? 1.0 : min(_5142, 1.0)))) * 5.0);
    float _2969 = 1.0 - _2928;
    float _2979 = (0.5 / (((_2857 * ((_2942 * _2969) + _2928)) + 9.9999999392252902907785028219223e-09) + (((_2857 * _2969) + _2928) * _2942))) * _2942;
    float _5153 = isnan(0.0) ? _2979 : (isnan(_2979) ? 0.0 : max(_2979, 0.0));
    float _2981 = (isnan(1.0) ? _5153 : (isnan(_5153) ? 1.0 : min(_5153, 1.0))) * (_2951 / ((_2955 * _2955) * 3.141590118408203125));
    float _2991 = (((((_2962 * _2879) + _1246) * cbLight._m0[_2916].x) * _2981) * _2604) + ((((cbLight._m0[_2828].x * _2570) * ((_2878 * _2879) + _1246)) * _2902) * _2617);
    float _2992 = (((((_2962 * _2881) + _1248) * cbLight._m0[_2916].y) * _2981) * _2604) + ((((cbLight._m0[_2828].y * _2572) * ((_2878 * _2881) + _1248)) * _2902) * _2617);
    float _2993 = (((((_2962 * _2882) + _1249) * cbLight._m0[_2916].z) * _2981) * _2604) + ((((cbLight._m0[_2828].z * _2574) * ((_2878 * _2882) + _1249)) * _2902) * _2617);
    float _3049;
    float _3051;
    float _3053;
    if (_2657)
    {
        _3049 = _2991;
        _3051 = _2992;
        _3053 = _2993;
    }
    else
    {
        uint _3055 = _2581 + 2u;
        uint _3059 = _2581 + 10u;
        float _3073 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3055].w)) * _1176) * 0.949999988079071044921875);
        float _3074 = _3073 * _3073;
        float _3075 = cbLight._m0[_3055].x + _1114;
        float _3076 = cbLight._m0[_3055].y + _1115;
        float _3077 = cbLight._m0[_3055].z + _1116;
        float _3081 = inversesqrt(dot(vec3(_3075, _3076, _3077), vec3(_3075, _3076, _3077)));
        float _3082 = _3081 * _3075;
        float _3083 = _3081 * _3076;
        float _3084 = _3081 * _3077;
        float _3085 = dot(vec3(_1054, _1055, _1056), vec3(cbLight._m0[_3055].xyz));
        float _5164 = isnan(0.0) ? _3085 : (isnan(_3085) ? 0.0 : max(_3085, 0.0));
        float _3088 = isnan(1.0) ? _5164 : (isnan(_5164) ? 1.0 : min(_5164, 1.0));
        float _3089 = dot(vec3(_1054, _1055, _1056), vec3(_3082, _3083, _3084));
        float _5175 = isnan(0.0) ? _3089 : (isnan(_3089) ? 0.0 : max(_3089, 0.0));
        float _3092 = isnan(1.0) ? _5175 : (isnan(_5175) ? 1.0 : min(_5175, 1.0));
        float _3093 = dot(vec3(cbLight._m0[_3055].xyz), vec3(_3082, _3083, _3084));
        float _5186 = isnan(0.0) ? _3093 : (isnan(_3093) ? 0.0 : max(_3093, 0.0));
        float _3097 = _3074 * _3074;
        float _3101 = ((_3092 * _3092) * (_3097 + (-1.0))) + 1.0;
        float _3108 = exp2(log2(1.0 - (isnan(1.0) ? _5186 : (isnan(_5186) ? 1.0 : min(_5186, 1.0)))) * 5.0);
        float _3115 = 1.0 - _3074;
        float _3125 = (0.5 / (((_2857 * ((_3088 * _3115) + _3074)) + 9.9999999392252902907785028219223e-09) + (((_2857 * _3115) + _3074) * _3088))) * _3088;
        float _5197 = isnan(0.0) ? _3125 : (isnan(_3125) ? 0.0 : max(_3125, 0.0));
        float _3127 = (isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0))) * (_3097 / ((_3101 * _3101) * 3.141590118408203125));
        float _3128 = isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0));
        _3049 = (((((_3108 * _2879) + _1246) * cbLight._m0[_3059].x) * _3127) * _3128) + _2991;
        _3051 = (((((_3108 * _2881) + _1248) * cbLight._m0[_3059].y) * _3127) * _3128) + _2992;
        _3053 = (((((_3108 * _2882) + _1249) * cbLight._m0[_3059].z) * _3127) * _3128) + _2993;
    }
    float _3159;
    float _3161;
    float _3163;
    if (_2766)
    {
        _3159 = _3049;
        _3161 = _3051;
        _3163 = _3053;
    }
    else
    {
        uint _3170 = _2581 + 3u;
        uint _3174 = _2581 + 11u;
        float _3188 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3170].w)) * _1176) * 0.949999988079071044921875);
        float _3189 = _3188 * _3188;
        float _3190 = cbLight._m0[_3170].x + _1114;
        float _3191 = cbLight._m0[_3170].y + _1115;
        float _3192 = cbLight._m0[_3170].z + _1116;
        float _3196 = inversesqrt(dot(vec3(_3190, _3191, _3192), vec3(_3190, _3191, _3192)));
        float _3197 = _3196 * _3190;
        float _3198 = _3196 * _3191;
        float _3199 = _3196 * _3192;
        float _3200 = dot(vec3(_1054, _1055, _1056), vec3(cbLight._m0[_3170].xyz));
        float _5213 = isnan(0.0) ? _3200 : (isnan(_3200) ? 0.0 : max(_3200, 0.0));
        float _3203 = isnan(1.0) ? _5213 : (isnan(_5213) ? 1.0 : min(_5213, 1.0));
        float _3204 = dot(vec3(_1054, _1055, _1056), vec3(_3197, _3198, _3199));
        float _5224 = isnan(0.0) ? _3204 : (isnan(_3204) ? 0.0 : max(_3204, 0.0));
        float _3207 = isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0));
        float _3208 = dot(vec3(cbLight._m0[_3170].xyz), vec3(_3197, _3198, _3199));
        float _5235 = isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0));
        float _3212 = _3189 * _3189;
        float _3216 = ((_3207 * _3207) * (_3212 + (-1.0))) + 1.0;
        float _3223 = exp2(log2(1.0 - (isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0)))) * 5.0);
        float _3230 = 1.0 - _3189;
        float _3240 = (0.5 / (((_2857 * ((_3203 * _3230) + _3189)) + 9.9999999392252902907785028219223e-09) + (((_2857 * _3230) + _3189) * _3203))) * _3203;
        float _5246 = isnan(0.0) ? _3240 : (isnan(_3240) ? 0.0 : max(_3240, 0.0));
        float _3242 = (isnan(1.0) ? _5246 : (isnan(_5246) ? 1.0 : min(_5246, 1.0))) * (_3212 / ((_3216 * _3216) * 3.141590118408203125));
        float _3243 = isnan(1.0) ? _2597 : (isnan(_2597) ? 1.0 : min(_2597, 1.0));
        _3159 = (((((_3223 * _2879) + _1246) * cbLight._m0[_3174].x) * _3242) * _3243) + _3049;
        _3161 = (((((_3223 * _2881) + _1248) * cbLight._m0[_3174].y) * _3242) * _3243) + _3051;
        _3163 = (((((_3223 * _2882) + _1249) * cbLight._m0[_3174].z) * _3242) * _3243) + _3053;
    }
    float _3309;
    float _3311;
    float _3313;
    float _3315;
    float _3317;
    float _3319;
    if (_2579.y == 0u)
    {
        uvec4 _3264 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3265 = _3264.x;
        uint _3276 = uint((float(_3264.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1135) / _3265))) + floor(float(uint(cbSceneParam._m0[85u].x * _1134) / _3265)));
        float _3286 = (log2(_2358 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3287 = isnan(0.0) ? _3286 : (isnan(_3286) ? 0.0 : max(_3286, 0.0));
        uint _3290 = uint(isnan(14.0) ? _3287 : (isnan(_3287) ? 14.0 : min(_3287, 14.0)));
        uvec4 _3295 = texelFetch(g_lightClusterGridBuffer, int(((_3290 << 2u) + (_3276 << 6u)) >> 2u));
        uint _3296 = _3295.x;
        uint _3297 = _3264.z;
        float _3405;
        float _3407;
        float _3409;
        float _3411;
        float _3413;
        float _3415;
        if (((((1u << ((_3297 >> 4u) & 15u)) + 4294967295u) & _3296) == 0u) || ((_3297 & 240u) == 0u))
        {
            _3405 = 0.0;
            _3407 = 0.0;
            _3409 = 0.0;
            _3411 = 0.0;
            _3413 = 0.0;
            _3415 = 0.0;
        }
        else
        {
            float _3406;
            float _3408;
            float _3410;
            float _3412;
            float _3414;
            float _3416;
            float _3566 = 0.0;
            float _3567 = 0.0;
            float _3568 = 0.0;
            float _3569 = 0.0;
            float _3570 = 0.0;
            float _3571 = 0.0;
            uint _3572 = 0u;
            uint _3581;
            bool _3582;
            for (;;)
            {
                _3581 = texelFetch(g_lightClassification, int((((_3290 << 5u) + (_3276 << 9u)) + (_3572 << 2u)) >> 2u)).x;
                _3582 = _3581 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3582)
                {
                    frontier_phi_71_pred = _3571;
                    frontier_phi_71_pred_1 = _3570;
                    frontier_phi_71_pred_2 = _3569;
                    frontier_phi_71_pred_3 = _3568;
                    frontier_phi_71_pred_4 = _3567;
                    frontier_phi_71_pred_5 = _3566;
                }
                else
                {
                    float _3711;
                    float _3712;
                    float _3713;
                    float _3714;
                    float _3715;
                    float _3716;
                    uint _3717;
                    _3711 = _3566;
                    _3712 = _3567;
                    _3713 = _3568;
                    _3714 = _3569;
                    _3715 = _3570;
                    _3716 = _3571;
                    _3717 = _3581;
                    float _3638;
                    float _3639;
                    float _3640;
                    float _3641;
                    float _3642;
                    float _3643;
                    for (;;)
                    {
                        uint _3721 = uint(findLSB(_3717)) + (_3572 << 5u);
                        uint _3718 = (_3717 + 4294967295u) & _3717;
                        uint _3723 = _3721 * 48u;
                        vec4 _3737 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3723)).x, texelFetch(g_PointLightRenderingBuffer, int(_3723 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3723 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3723 + 3u)).x));
                        uint _3743 = (_3721 * 48u) + 4u;
                        vec4 _3756 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3743)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3743 + 3u)).x));
                        uint _3762 = (_3721 * 48u) + 8u;
                        vec3 _3773 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3762)).x, texelFetch(g_PointLightRenderingBuffer, int(_3762 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3762 + 2u)).x));
                        float _3777 = _3737.x - _2356;
                        float _3778 = _3737.y - _2357;
                        float _3779 = _3737.z - _2358;
                        float _3780 = dot(vec3(_3777, _3778, _3779), vec3(_3777, _3778, _3779));
                        float _3783 = inversesqrt(_3780);
                        float _3784 = _3783 * _3777;
                        float _3785 = _3783 * _3778;
                        float _3786 = _3783 * _3779;
                        float _3787 = dot(vec3(_1157, _1160, _1163), vec3(_3784, _3785, _3786));
                        float _3792 = 1.0 - (_3780 * _3737.w);
                        float _5272 = isnan(0.0) ? _3792 : (isnan(_3792) ? 0.0 : max(_3792, 0.0));
                        float _3793 = isnan(1.0) ? _5272 : (isnan(_5272) ? 1.0 : min(_5272, 1.0));
                        float _3794 = sqrt(_3780) * _3756.w;
                        float _3797 = 1.39999997615814208984375 / (_3794 + 1.39999997615814208984375);
                        float _3798 = _3797 * _3797;
                        float _3801 = ((1.0 - _3798) * _3787) + _3798;
                        float _3804 = _3794 * _3794;
                        float _3808 = ((isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0))) * _3793) / ((_3804 * 0.699999988079071044921875) + 1.0);
                        float _3812 = (-0.0) - _2356;
                        float _3813 = (-0.0) - _2357;
                        float _3814 = (-0.0) - _2358;
                        float _3818 = inversesqrt(dot(vec3(_3812, _3813, _3814), vec3(_3812, _3813, _3814)));
                        float _3819 = _3818 * _3812;
                        float _3820 = _3818 * _3813;
                        float _3821 = _3818 * _3814;
                        float _3828 = exp2(log2(1.0 / ((_3804 * 3.5) + 5.0)) * 0.25);
                        float _3829 = 1.0 - _1277;
                        float _3836 = sqrt(1.0 - ((1.0 - (_3829 * _3829)) * (1.0 - (_3828 * _3828))));
                        float _3837 = _3836 * _3836;
                        float _3838 = _3837 * _3837;
                        float _3839 = _3819 + _3784;
                        float _3840 = _3820 + _3785;
                        float _3841 = _3821 + _3786;
                        float _3845 = inversesqrt(dot(vec3(_3839, _3840, _3841), vec3(_3839, _3840, _3841)));
                        float _3849 = dot(vec3(_1157, _1160, _1163), vec3(_3819, _3820, _3821));
                        float _5288 = isnan(0.0) ? _3849 : (isnan(_3849) ? 0.0 : max(_3849, 0.0));
                        float _3852 = isnan(1.0) ? _5288 : (isnan(_5288) ? 1.0 : min(_5288, 1.0));
                        float _3853 = dot(vec3(_1157, _1160, _1163), vec3(_3845 * _3839, _3845 * _3840, _3845 * _3841));
                        float _5299 = isnan(0.0) ? _3853 : (isnan(_3853) ? 0.0 : max(_3853, 0.0));
                        float _3856 = isnan(1.0) ? _5299 : (isnan(_5299) ? 1.0 : min(_5299, 1.0));
                        float _3860 = ((_3856 * _3856) * (_3838 + (-1.0))) + 1.0;
                        float _3861 = _3797 * _3837;
                        float _3862 = _3861 * _3861;
                        float _3865 = ((1.0 - _3862) * _3787) + _3862;
                        float _5310 = isnan(0.0) ? _3865 : (isnan(_3865) ? 0.0 : max(_3865, 0.0));
                        float _3866 = isnan(1.0) ? _5310 : (isnan(_5310) ? 1.0 : min(_5310, 1.0));
                        float _3867 = 1.0 - _3837;
                        float _3877 = (0.5 / (((_3866 * ((_3852 * _3867) + _3837)) + 9.9999999392252902907785028219223e-09) + (((_3866 * _3867) + _3837) * _3852))) * _3866;
                        float _5321 = isnan(0.0) ? _3877 : (isnan(_3877) ? 0.0 : max(_3877, 0.0));
                        float _3888 = (((_3838 * 3.1415927410125732421875) * (isnan(1.0) ? _5321 : (isnan(_5321) ? 1.0 : min(_5321, 1.0)))) / ((_3860 * _3860) * ((_3804 * 2.1991131305694580078125) + 3.141590118408203125))) * _3793;
                        _3641 = (_3808 * _3756.x) + _3714;
                        _3642 = (_3808 * _3756.y) + _3715;
                        _3643 = (_3808 * _3756.z) + _3716;
                        _3638 = (_3888 * _3773.x) + _3711;
                        _3639 = (_3888 * _3773.y) + _3712;
                        _3640 = (_3888 * _3773.z) + _3713;
                        if (_3718 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3711 = _3638;
                            _3712 = _3639;
                            _3713 = _3640;
                            _3714 = _3641;
                            _3715 = _3642;
                            _3716 = _3643;
                            _3717 = _3718;
                        }
                    }
                    frontier_phi_71_pred = _3643;
                    frontier_phi_71_pred_1 = _3642;
                    frontier_phi_71_pred_2 = _3641;
                    frontier_phi_71_pred_3 = _3640;
                    frontier_phi_71_pred_4 = _3639;
                    frontier_phi_71_pred_5 = _3638;
                }
                _3416 = frontier_phi_71_pred;
                _3414 = frontier_phi_71_pred_1;
                _3412 = frontier_phi_71_pred_2;
                _3410 = frontier_phi_71_pred_3;
                _3408 = frontier_phi_71_pred_4;
                _3406 = frontier_phi_71_pred_5;
                uint _3573 = _3572 + 1u;
                if (_3573 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3566 = _3406;
                    _3567 = _3408;
                    _3568 = _3410;
                    _3569 = _3412;
                    _3570 = _3414;
                    _3571 = _3416;
                    _3572 = _3573;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3405 = _3406;
            _3407 = _3408;
            _3409 = _3410;
            _3411 = _3412;
            _3413 = _3414;
            _3415 = _3416;
        }
        uvec4 _3419 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3420 = _3419.z;
        uint _3422 = (_3420 >> 8u) & 15u;
        float _3534;
        float _3536;
        float _3538;
        float _3540;
        float _3542;
        float _3544;
        if (((4294967295u << _3422) & _3296) == 0u)
        {
            _3534 = _3405;
            _3536 = _3407;
            _3538 = _3409;
            _3540 = _3411;
            _3542 = _3413;
            _3544 = _3415;
        }
        else
        {
            float _3559 = inversesqrt(dot(vec3(_2356, _2357, _2358), vec3(_2356, _2357, _2358)));
            float _3560 = _3559 * _2356;
            float _3561 = _3559 * _2357;
            float _3562 = _3559 * _2358;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3422 < ((_3420 >> 12u) & 15u))
            {
                float _3535;
                float _3537;
                float _3539;
                float _3541;
                float _3543;
                float _3545;
                float _3694 = _3405;
                float _3695 = _3407;
                float _3696 = _3409;
                float _3697 = _3411;
                float _3698 = _3413;
                float _3699 = _3415;
                uint _3700 = _3422;
                uint _3709;
                bool _3710;
                for (;;)
                {
                    _3709 = texelFetch(g_lightClassification, int((((_3290 << 5u) + (_3276 << 9u)) + (_3700 << 2u)) >> 2u)).x;
                    _3710 = _3709 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3710)
                    {
                        frontier_phi_82_pred = _3699;
                        frontier_phi_82_pred_1 = _3698;
                        frontier_phi_82_pred_2 = _3697;
                        frontier_phi_82_pred_3 = _3696;
                        frontier_phi_82_pred_4 = _3695;
                        frontier_phi_82_pred_5 = _3694;
                    }
                    else
                    {
                        float _3902;
                        float _3903;
                        float _3904;
                        float _3905;
                        float _3906;
                        float _3907;
                        float _4195;
                        float _4196;
                        float _4197;
                        float _4198;
                        float _4199;
                        float _4200;
                        float _3915 = _3694;
                        float _3916 = _3695;
                        float _3917 = _3696;
                        float _3918 = _3697;
                        float _3919 = _3698;
                        float _3920 = _3699;
                        uint _3921 = _3709;
                        uint _3922;
                        vec4 _3947;
                        float _3948;
                        vec4 _3963;
                        vec3 _3975;
                        vec4 _3990;
                        vec4 _4005;
                        float _4051;
                        bool _4052;
                        for (;;)
                        {
                            uint _3932 = ((_3700 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3921));
                            _3922 = (_3921 + 4294967295u) & _3921;
                            uint _3934 = _3932 * 40u;
                            _3947 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3934)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3934 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3934 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3934 + 3u)).x));
                            _3948 = _3947.w;
                            uint _3950 = (_3932 * 40u) + 4u;
                            _3963 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3950)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3950 + 3u)).x));
                            uint _3965 = (_3932 * 40u) + 8u;
                            _3975 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3965)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3965 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3965 + 2u)).x));
                            uint _3977 = (_3932 * 40u) + 16u;
                            _3990 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3977)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3977 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3977 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3977 + 3u)).x));
                            uint _3992 = (_3932 * 40u) + 20u;
                            _4005 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3992)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3992 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3992 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3992 + 3u)).x));
                            uint _4007 = (_3932 * 40u) + 24u;
                            vec4 _4020 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4007)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4007 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4007 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4007 + 3u)).x));
                            uint _4026 = (_3932 * 40u) + 28u;
                            vec4 _4039 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4026)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4026 + 3u)).x));
                            _4051 = fma(_2358, _4039.z, fma(_2357, _4039.y, _4039.x * _2356)) + _4039.w;
                            _4052 = !((fma(_2358, _4020.z, fma(_2357, _4020.y, _4020.x * _2356)) + _4020.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_4052)
                            {
                                float _4079 = _3947.x - _2356;
                                float _4080 = _3947.y - _2357;
                                float _4081 = _3947.z - _2358;
                                float _4082 = dot(vec3(_4079, _4080, _4081), vec3(_4079, _4080, _4081));
                                float _4085 = inversesqrt(_4082);
                                float _4086 = _4085 * _4079;
                                float _4087 = _4085 * _4080;
                                float _4088 = _4085 * _4081;
                                float _4092 = 1.0 - (_4082 / (_3948 * _3948));
                                float _5332 = isnan(0.0) ? _4092 : (isnan(_4092) ? 0.0 : max(_4092, 0.0));
                                float _4093 = isnan(1.0) ? _5332 : (isnan(_5332) ? 1.0 : min(_5332, 1.0));
                                float _4097 = sqrt(_4082) * _3963.w;
                                float _4099 = 1.39999997615814208984375 / (_4097 + 1.39999997615814208984375);
                                float _4100 = _4099 * _4099;
                                float _4103 = ((1.0 - _4100) * dot(vec3(_4086, _4087, _4088), vec3(_1157, _1160, _1163))) + _4100;
                                float _4106 = _4097 * _4097;
                                float _4110 = (fma(_2358, _3990.z, fma(_2357, _3990.y, _3990.x * _2356)) + _3990.w) / _4051;
                                float _4111 = (fma(_2358, _4005.z, fma(_2357, _4005.y, _4005.x * _2356)) + _4005.w) / _4051;
                                float _4115 = 1.0 - dot(vec2(_4110, _4111), vec2(_4110, _4111));
                                float _5348 = isnan(0.0) ? _4115 : (isnan(_4115) ? 0.0 : max(_4115, 0.0));
                                float _4116 = isnan(1.0) ? _5348 : (isnan(_5348) ? 1.0 : min(_5348, 1.0));
                                float _4117 = _4116 * (((isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0))) * _4093) / ((_4106 * 0.699999988079071044921875) + 1.0));
                                float _4129 = exp2(log2(1.0 / ((_4106 * 3.5) + 5.0)) * 0.25);
                                float _4130 = 1.0 - _1277;
                                float _4137 = sqrt(1.0 - ((1.0 - (_4130 * _4130)) * (1.0 - (_4129 * _4129))));
                                float _4138 = _4137 * _4137;
                                float _4139 = _4138 * _4138;
                                float _4140 = _4086 - _3560;
                                float _4141 = _4087 - _3561;
                                float _4142 = _4088 - _3562;
                                float _4146 = inversesqrt(dot(vec3(_4140, _4141, _4142), vec3(_4140, _4141, _4142)));
                                float _4150 = dot(vec3(_1157, _1160, _1163), vec3((-0.0) - _3560, (-0.0) - _3561, (-0.0) - _3562));
                                float _5359 = isnan(0.0) ? _4150 : (isnan(_4150) ? 0.0 : max(_4150, 0.0));
                                float _4153 = isnan(1.0) ? _5359 : (isnan(_5359) ? 1.0 : min(_5359, 1.0));
                                float _4154 = dot(vec3(_1157, _1160, _1163), vec3(_4146 * _4140, _4146 * _4141, _4146 * _4142));
                                float _5370 = isnan(0.0) ? _4154 : (isnan(_4154) ? 0.0 : max(_4154, 0.0));
                                float _4157 = isnan(1.0) ? _5370 : (isnan(_5370) ? 1.0 : min(_5370, 1.0));
                                float _4161 = ((_4157 * _4157) * (_4139 + (-1.0))) + 1.0;
                                float _4162 = _4099 * _4138;
                                float _4163 = _4162 * _4162;
                                float _4169 = ((1.0 - _4163) * dot(vec3(_1157, _1160, _1163), vec3(_4086, _4087, _4088))) + _4163;
                                float _5381 = isnan(0.0) ? _4169 : (isnan(_4169) ? 0.0 : max(_4169, 0.0));
                                float _4170 = isnan(1.0) ? _5381 : (isnan(_5381) ? 1.0 : min(_5381, 1.0));
                                float _4171 = 1.0 - _4138;
                                float _4181 = (0.5 / (((_4170 * ((_4153 * _4171) + _4138)) + 9.9999999392252902907785028219223e-09) + (((_4170 * _4171) + _4138) * _4153))) * _4170;
                                float _5392 = isnan(0.0) ? _4181 : (isnan(_4181) ? 0.0 : max(_4181, 0.0));
                                float _4191 = (_4116 * _4093) * (((_4139 * 3.1415927410125732421875) * (isnan(1.0) ? _5392 : (isnan(_5392) ? 1.0 : min(_5392, 1.0)))) / ((_4161 * _4161) * ((_4106 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _4117 * _3963.z;
                                frontier_phi_88_pred_1 = _4117 * _3963.y;
                                frontier_phi_88_pred_2 = _4117 * _3963.x;
                                frontier_phi_88_pred_3 = _4191 * _3975.z;
                                frontier_phi_88_pred_4 = _4191 * _3975.y;
                                frontier_phi_88_pred_5 = _4191 * _3975.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _4200 = frontier_phi_88_pred;
                            _4199 = frontier_phi_88_pred_1;
                            _4198 = frontier_phi_88_pred_2;
                            _4197 = frontier_phi_88_pred_3;
                            _4196 = frontier_phi_88_pred_4;
                            _4195 = frontier_phi_88_pred_5;
                            _3905 = _4198 + _3918;
                            _3906 = _4199 + _3919;
                            _3907 = _4200 + _3920;
                            _3902 = _4195 + _3915;
                            _3903 = _4196 + _3916;
                            _3904 = _4197 + _3917;
                            if (_3922 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3915 = _3902;
                                _3916 = _3903;
                                _3917 = _3904;
                                _3918 = _3905;
                                _3919 = _3906;
                                _3920 = _3907;
                                _3921 = _3922;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3907;
                        frontier_phi_82_pred_1 = _3906;
                        frontier_phi_82_pred_2 = _3905;
                        frontier_phi_82_pred_3 = _3904;
                        frontier_phi_82_pred_4 = _3903;
                        frontier_phi_82_pred_5 = _3902;
                    }
                    _3545 = frontier_phi_82_pred;
                    _3543 = frontier_phi_82_pred_1;
                    _3541 = frontier_phi_82_pred_2;
                    _3539 = frontier_phi_82_pred_3;
                    _3537 = frontier_phi_82_pred_4;
                    _3535 = frontier_phi_82_pred_5;
                    uint _3701 = _3700 + 1u;
                    if (_3701 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3694 = _3535;
                        _3695 = _3537;
                        _3696 = _3539;
                        _3697 = _3541;
                        _3698 = _3543;
                        _3699 = _3545;
                        _3700 = _3701;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3541;
                frontier_phi_63_64_ladder_1 = _3545;
                frontier_phi_63_64_ladder_2 = _3543;
                frontier_phi_63_64_ladder_3 = _3539;
                frontier_phi_63_64_ladder_4 = _3537;
                frontier_phi_63_64_ladder_5 = _3535;
            }
            else
            {
                frontier_phi_63_64_ladder = _3411;
                frontier_phi_63_64_ladder_1 = _3415;
                frontier_phi_63_64_ladder_2 = _3413;
                frontier_phi_63_64_ladder_3 = _3409;
                frontier_phi_63_64_ladder_4 = _3407;
                frontier_phi_63_64_ladder_5 = _3405;
            }
            _3534 = frontier_phi_63_64_ladder_5;
            _3536 = frontier_phi_63_64_ladder_4;
            _3538 = frontier_phi_63_64_ladder_3;
            _3540 = frontier_phi_63_64_ladder;
            _3542 = frontier_phi_63_64_ladder_2;
            _3544 = frontier_phi_63_64_ladder_1;
        }
        float _3549 = isnan(1.0) ? _1261 : (isnan(_1261) ? 1.0 : min(_1261, 1.0));
        _3309 = (_3549 * _3540) + _2821;
        _3311 = (_3549 * _3542) + _2823;
        _3313 = (_3549 * _3544) + _2825;
        _3315 = ((_3534 * _1246) * _3549) + _3159;
        _3317 = ((_3536 * _1248) * _3549) + _3161;
        _3319 = ((_3538 * _1249) * _3549) + _3163;
    }
    else
    {
        _3309 = _2821;
        _3311 = _2823;
        _3313 = _2825;
        _3315 = _3159;
        _3317 = _3161;
        _3319 = _3163;
    }
    uint _3325 = _1190 + uint(cbMatDynParam._m0[0u].w);
    float _3331 = cbInstanceData._m0[_3325].x * ((((cbMtdParam._m0[22u].x * _967.x) * cbMtdParam._m0[32u].x) * _988) + _759);
    float _3332 = cbInstanceData._m0[_3325].y * ((((cbMtdParam._m0[22u].y * _967.y) * cbMtdParam._m0[32u].x) * _988) + _760);
    float _3333 = cbInstanceData._m0[_3325].z * ((((cbMtdParam._m0[22u].z * _967.z) * cbMtdParam._m0[32u].x) * _988) + _761);
    float _5408 = isnan(0.0) ? _1236 : (isnan(_1236) ? 0.0 : max(_1236, 0.0));
    float _5419 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _5430 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _3350 = (((isnan(1.0) ? _5408 : (isnan(_5408) ? 1.0 : min(_5408, 1.0))) * (_3309 + ((isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0))) * _1261))) + ((_3315 + ((isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0))) * _2090)) * cbPerFrame._m0[3u].x)) + _3331;
    float _3352 = (_3332 + ((_3317 + ((isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0))) * _2090)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5419 : (isnan(_5419) ? 1.0 : min(_5419, 1.0))) * (_3311 + ((isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0))) * _1261)));
    float _3354 = (_3333 + ((_3319 + ((isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0))) * _2090)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5430 : (isnan(_5430) ? 1.0 : min(_5430, 1.0))) * (_3313 + ((isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0))) * _1261)));
    float _3355 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0));
    float _3356 = isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0));
    float _3357 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0));
    float _3363 = cbMtdParam._m0[2u].x * _3331;
    float _3364 = cbMtdParam._m0[2u].y * _3332;
    float _3365 = cbMtdParam._m0[2u].z * _3333;
    float _5456 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _3367 = isnan(1.0) ? _5456 : (isnan(_5456) ? 1.0 : min(_5456, 1.0));
    uint _3368 = _1189 + 6u;
    float _3376 = _1134 / cbSceneParam._m0[86u].x;
    float _3377 = _1135 / cbSceneParam._m0[86u].y;
    vec4 _3391 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3376, _3377, (log2((isnan(cbSceneParam._m0[77u].w) ? _1077 : (isnan(_1077) ? cbSceneParam._m0[77u].w : min(_1077, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3393 = _3391.x;
    float _3394 = _3391.y;
    float _3395 = _3391.z;
    float _3396 = _3391.w;
    float _3467;
    float _3469;
    float _3471;
    float _3473;
    if (_1077 > cbSceneParam._m0[78u].w)
    {
        float _3430 = isnan(_1077) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1077 : min(cbSceneParam._m0[80u].w, _1077));
        float _3431 = _3430 / _1077;
        float _3442 = _3431 * _1107;
        float _3443 = _1108 * _3431;
        float _3444 = (-0.0) - _3443;
        float _3445 = _3431 * _1109;
        float _3447 = (cbSceneParam._m0[77u].w * _3444) / _3430;
        float _3448 = _3447 + cbSceneParam._m0[79u].w;
        float _3449 = cbSceneParam._m0[79u].w - _3443;
        float _3455 = sqrt(((_3442 * _3442) + (_3443 * _3443)) + (_3445 * _3445));
        float _3458 = (1.0 - (cbSceneParam._m0[77u].w / _3430)) * _3455;
        float _3463 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3465 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3651;
        if (abs((_3444 - _3447) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3651 = ((((_3448 > 0.0) ? exp2(_3463 * _3448) : (2.0 - exp2(_3465 * _3448))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3458;
        }
        else
        {
            float _3595 = 1.0 / cbSceneParam._m0[80u].x;
            float _3596 = isnan(_3449) ? _3448 : (isnan(_3448) ? _3449 : max(_3448, _3449));
            float _3597 = isnan(_3449) ? _3448 : (isnan(_3448) ? _3449 : min(_3448, _3449));
            float _3606 = isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : min(_3596, 0.0));
            float _3607 = isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : min(_3597, 0.0));
            _3651 = ((abs(_3455 / _3444) * cbSceneParam._m0[80u].y) * ((((_3606 - _3607) * 2.0) - ((exp2(_3463 * (isnan(0.0) ? _3596 : (isnan(_3596) ? 0.0 : max(_3596, 0.0)))) - exp2(_3463 * (isnan(0.0) ? _3597 : (isnan(_3597) ? 0.0 : max(_3597, 0.0))))) * _3595)) - ((exp2(_3465 * _3606) - exp2(_3465 * _3607)) * _3595))) + (_3458 * cbSceneParam._m0[80u].z);
        }
        vec4 _3653 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3376, _3377, 1.0), 0.0);
        float _3662 = exp2((_3651 * (-1.44269502162933349609375)) * (1.0 - _3653.w));
        float _3663 = log2(_3662);
        float _3679 = log2(_3396);
        _3467 = (exp2(_3679 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3663 * cbSceneParam._m0[78u].x)) * _3653.x) / cbSceneParam._m0[78u].x)) + _3393;
        _3469 = (exp2(_3679 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3663 * cbSceneParam._m0[78u].y)) * _3653.y) / cbSceneParam._m0[78u].y)) + _3394;
        _3471 = (exp2(_3679 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3663 * cbSceneParam._m0[78u].z)) * _3653.z) / cbSceneParam._m0[78u].z)) + _3395;
        _3473 = _3662 * _3396;
    }
    else
    {
        _3467 = _3393;
        _3469 = _3394;
        _3471 = _3395;
        _3473 = _3396;
    }
    bool _3689;
    vec4 _3483;
    vec4 _3505;
    float _3507;
    float _3511;
    float _3512;
    float _3513;
    float _3516;
    float _3519;
    float _3522;
    float _3523;
    bool _3533;
    for (;;)
    {
        _3483 = cbMatDynParam._m0[0u];
        float _3485 = roundEven(_3483.y);
        bool _3486 = _3485 == 3.0;
        float _3487 = log2(_3473);
        float _3491 = exp2(_3487 * cbSceneParam._m0[78u].x);
        float _3492 = exp2(_3487 * cbSceneParam._m0[78u].y);
        float _3493 = exp2(_3487 * cbSceneParam._m0[78u].z);
        float _3494 = _3491 * _3355;
        float _3495 = _3492 * _3356;
        float _3496 = _3493 * _3357;
        float _3503 = _1123 + (-0.5);
        _3505 = cbMtdParam._m0[1u];
        _3507 = _3505.y * _3503;
        float _3510 = (_3485 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3511 = _3510 * (_3486 ? _3494 : (_3494 + (cbSceneParam._m0[72u].w * _3467)));
        _3512 = _3510 * (_3486 ? _3495 : (_3495 + (cbSceneParam._m0[72u].w * _3469)));
        _3513 = _3510 * (_3486 ? _3496 : (_3496 + (cbSceneParam._m0[72u].w * _3471)));
        _3516 = ((_3363 * _3367) * _3491) * _3510;
        _3519 = ((_3364 * _3367) * _3492) * _3510;
        _3522 = ((_3365 * _3367) * _3493) * _3510;
        _3523 = _3503 * 0.999000012874603271484375;
        _3533 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3533)
        {
            if ((cbInstanceData._m0[_1189 + 7u].x + _3523) < 0.5)
            {
                _3689 = true;
                break;
            }
        }
        uint _3630 = _1190 + uint(_3483.w);
        if ((cbInstanceData._m0[_3630].w < 1.0) && ((cbInstanceData._m0[_3630].w + _3523) < 0.5))
        {
            _3689 = true;
            break;
        }
        if ((_3507 + 1.0) < _3505.x)
        {
            _3689 = true;
            break;
        }
        _3689 = false;
        break;
    }
    float _3893;
    if (_3689)
    {
        discard_state = true;
        _3893 = 0.0;
    }
    else
    {
        _3893 = cbInstanceData._m0[_3368].w;
    }
    SV_Target.x = _3511;
    SV_Target.y = _3512;
    SV_Target.z = _3513;
    SV_Target.w = _3893;
    SV_Target_1.x = _3516;
    SV_Target_1.y = _3519;
    SV_Target_1.z = _3522;
    SV_Target_1.w = cbInstanceData._m0[_3368].w;
    discard_exit();
}


