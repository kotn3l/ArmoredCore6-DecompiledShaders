#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 29) uniform texture2D g_PaintEmissiveTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    vec4 _158 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _162 = _158.y;
    float _167 = roundEven((_158.x + (-0.02500000037252902984619140625)) * 8.0);
    float _114[6];
    float _115[6];
    float _116[6];
    _114[0u] = cbMtdParam._m0[24u].x;
    _115[0u] = cbMtdParam._m0[24u].y;
    _116[0u] = cbMtdParam._m0[24u].z;
    _114[1u] = cbMtdParam._m0[25u].x;
    _115[1u] = cbMtdParam._m0[25u].y;
    _116[1u] = cbMtdParam._m0[25u].z;
    _114[2u] = cbMtdParam._m0[26u].x;
    _115[2u] = cbMtdParam._m0[26u].y;
    _116[2u] = cbMtdParam._m0[26u].z;
    _114[3u] = cbMtdParam._m0[27u].x;
    _115[3u] = cbMtdParam._m0[27u].y;
    _116[3u] = cbMtdParam._m0[27u].z;
    _114[4u] = cbMtdParam._m0[28u].x;
    _115[4u] = cbMtdParam._m0[28u].y;
    _116[4u] = cbMtdParam._m0[28u].z;
    _114[5u] = cbMtdParam._m0[29u].x;
    _115[5u] = cbMtdParam._m0[29u].y;
    _116[5u] = cbMtdParam._m0[29u].z;
    float _222 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    uint _225 = uint(int(isnan(5.0) ? _222 : (isnan(_222) ? 5.0 : min(_222, 5.0))));
    float _273 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _290 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbMtdParam._m0[36u].y * ((fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y), ((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_273 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))));
    float _308 = (-0.0) - ((_273 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _312 = (_273 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _313 = isnan(_312) ? _308 : (isnan(_308) ? _312 : min(_308, _312));
    float _674 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _315 = isnan(1.0) ? _674 : (isnan(_674) ? 1.0 : min(_674, 1.0));
    float _346 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _347 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _352 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_346, _347));
    float _354 = _352.x;
    float _355 = _352.y;
    float _356 = _352.z;
    vec4 _358 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_346, _347));
    vec4 _362 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_346, _347));
    vec4 _369 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_346, _347));
    uint _377 = uint(roundEven(NORMAL.w)) * 13u;
    uint _380 = (_377 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _386 = cbInstanceData._m0[_380].x * _362.x;
    float _387 = cbInstanceData._m0[_380].y * _362.y;
    float _388 = cbInstanceData._m0[_380].z * _362.z;
    float _389 = _354 * 3.3333332538604736328125;
    float _391 = _355 * 3.3333332538604736328125;
    float _392 = _356 * 3.3333332538604736328125;
    float _400 = ((isnan(1.0) ? _389 : (isnan(_389) ? 1.0 : min(_389, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _402 = ((isnan(1.0) ? _391 : (isnan(_391) ? 1.0 : min(_391, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _403 = ((isnan(1.0) ? _392 : (isnan(_392) ? 1.0 : min(_392, 1.0))) * 0.0314955823123455047607421875) + 0.0039369477890431880950927734375;
    float _404 = isnan(_400) ? _386 : (isnan(_386) ? _400 : max(_386, _400));
    float _405 = isnan(_402) ? _387 : (isnan(_387) ? _402 : max(_387, _402));
    float _406 = isnan(_403) ? _388 : (isnan(_388) ? _403 : max(_388, _403));
    float _409 = (_354 + (-0.0599999986588954925537109375)) + _404;
    float _411 = (_355 + (-0.0599999986588954925537109375)) + _405;
    float _413 = (_356 + (-0.0599999986588954925537109375)) + _406;
    float _425 = (_409 * _409) - ((0.02999999932944774627685546875 - _354) * 0.119999997317790985107421875);
    float _426 = (_411 * _411) - ((0.02999999932944774627685546875 - _355) * 0.119999997317790985107421875);
    float _427 = (_413 * _413) - ((0.02999999932944774627685546875 - _356) * 0.119999997317790985107421875);
    float _437 = (sqrt(isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0))) - _409) * 16.666667938232421875;
    float _439 = (sqrt(isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0))) - _411) * 16.666667938232421875;
    float _440 = (sqrt(isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0))) - _413) * 16.666667938232421875;
    float _441 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _442 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _443 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _454 = (((isnan(1.0) ? _442 : (isnan(_442) ? 1.0 : min(_442, 1.0))) * 0.58700001239776611328125) + ((isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0))) * 0.29890000820159912109375)) + ((isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0))) * 0.114000000059604644775390625);
    float _455 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _456 = isnan(1.0) ? _455 : (isnan(_455) ? 1.0 : min(_455, 1.0));
    float _459 = 1.0 - (isnan(0.99989998340606689453125) ? _456 : (isnan(_456) ? 0.99989998340606689453125 : min(_456, 0.99989998340606689453125)));
    uvec4 _468 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _472 = (_468.y != 0u) ? (1.0 - _346) : _346;
    vec4 _476 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_472, _347), 0.0, ivec2(1));
    float _480 = _476.x;
    vec4 _482 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_472, _347), 0.0, ivec2(-1, 1));
    float _485 = _482.x;
    vec4 _486 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_472, _347), 0.0, ivec2(1, -1));
    float _489 = _486.x;
    vec4 _490 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_472, _347), 0.0, ivec2(-1));
    float _493 = _490.x;
    float _494 = isnan(_493) ? _489 : (isnan(_489) ? _493 : min(_489, _493));
    float _495 = isnan(_485) ? _480 : (isnan(_480) ? _485 : min(_480, _485));
    float _506;
    float _508;
    float _510;
    if (_468.x == 0u)
    {
        _506 = cbInstanceData._m0[_380].x * ((((cbMtdParam._m0[22u].x * _290.x) * cbMtdParam._m0[32u].x) * _315) + (_114[_225] * _162));
        _508 = cbInstanceData._m0[_380].y * ((((cbMtdParam._m0[22u].y * _290.y) * cbMtdParam._m0[32u].x) * _315) + (_115[_225] * _162));
        _510 = cbInstanceData._m0[_380].z * ((((cbMtdParam._m0[22u].z * _290.z) * cbMtdParam._m0[32u].x) * _315) + (_116[_225] * _162));
    }
    else
    {
        vec4 _521 = texture(sampler2D(g_PaintEmissiveTexture, SS_PaintDecal), vec2(_346, _347));
        _506 = cbPaintParam._m0[18u].x * _521.x;
        _508 = cbPaintParam._m0[18u].y * _521.y;
        _510 = cbPaintParam._m0[18u].z * _521.z;
    }
    if (((1u << (uint(floor(float(uint(_167)))) & 31u)) & _468.z) == 0u)
    {
        discard_state = true;
    }
    float _553 = (dot(vec3(_141 * NORMAL.x, _141 * NORMAL.y, _141 * NORMAL.z), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _790 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _595 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _601 = fma(_595, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _595;
    float _607 = (_601 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _801 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _613 = (_601 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _812 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _616 = ((((_369.x * _362.w) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_494) ? _495 : (isnan(_495) ? _494 : min(_495, _494))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _790 : (isnan(_790) ? 1.0 : min(_790, 1.0)))) * (isnan(1.0) ? _801 : (isnan(_801) ? 1.0 : min(_801, 1.0)))) * (1.0 - (isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0))));
    float _624;
    if (_616 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _624 = 0.0;
    }
    else
    {
        _624 = _616 * cbInstanceData._m0[_377 + 6u].w;
    }
    SV_Target.x = cbInstanceData._m0[_380].x * (_404 / _459);
    SV_Target.y = cbInstanceData._m0[_380].y * (_405 / _459);
    SV_Target.z = cbInstanceData._m0[_380].z * (_406 / _459);
    SV_Target.w = _624;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _456;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _358.z;
    SV_Target_1.z = _356;
    SV_Target_1.w = _624;
    SV_Target_2.x = _506;
    SV_Target_2.y = _508;
    SV_Target_2.z = _510;
    SV_Target_2.w = _624;
    discard_exit();
}


