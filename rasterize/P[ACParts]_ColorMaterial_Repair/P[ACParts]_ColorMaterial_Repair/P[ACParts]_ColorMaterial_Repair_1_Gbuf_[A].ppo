#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[41];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7;
layout(set = 0, binding = 11) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8;
layout(set = 0, binding = 12) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14;
layout(set = 0, binding = 5) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2;
layout(set = 0, binding = 6) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3;
layout(set = 0, binding = 7) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _198 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _199 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _200 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _206 = inversesqrt(dot(vec3(_198, _199, _200), vec3(_198, _199, _200)));
    float _213 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _244 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _251 = log2(0.0);
    float _253 = exp2(_251 * cbMtdParam._m0[31u].z);
    float _257 = _253 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.x) * _253);
    float _258 = _253 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.y) * _253);
    float _259 = _253 - ((cbMtdParam._m0[31u].x * TEXCOORD_5.z) * _253);
    float _260 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
    float _261 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _262 = isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0));
    float _263 = isnan(1.0) ? _260 : (isnan(_260) ? 1.0 : min(_260, 1.0));
    float _265 = isnan(1.0) ? _261 : (isnan(_261) ? 1.0 : min(_261, 1.0));
    float _266 = isnan(1.0) ? _262 : (isnan(_262) ? 1.0 : min(_262, 1.0));
    vec4 _282 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _286 = _282.z;
    float _287 = _282.w;
    float _288 = 1.0 - _287;
    float _295 = exp2(log2((1.0 - (_288 * _286)) * cbMtdParam._m0[34u].y) * cbMtdParam._m0[34u].z);
    float _296 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _297 = isnan(1.0) ? _296 : (isnan(_296) ? 1.0 : min(_296, 1.0));
    float _309 = exp2(log2(cbMtdParam._m0[35u].x * (1.0 - ((_288 * _288) * _286))) * cbMtdParam._m0[34u].w);
    float _310 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    vec4 _324 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w), -3.0);
    float _327 = _324.y;
    float _330 = (_327 * ((isnan(1.0) ? _310 : (isnan(_310) ? 1.0 : min(_310, 1.0))) - _287)) + _287;
    vec4 _342 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _354 = (_324.x + (-0.02500000037252902984619140625)) * 8.0;
    float _356 = roundEven(_354);
    float _357 = cbMtdParam._m0[10u].x * _342.x;
    float _358 = cbMtdParam._m0[10u].y * _342.y;
    float _359 = cbMtdParam._m0[10u].z * _342.z;
    vec4 _371 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _391 = (((cbMtdParam._m0[9u].x * _371.x) - _357) * _330) + _357;
    float _392 = (((cbMtdParam._m0[9u].y * _371.y) - _358) * _330) + _358;
    float _393 = (((cbMtdParam._m0[9u].z * _371.z) - _359) * _330) + _359;
    vec4 _405 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _425 = (((cbMtdParam._m0[20u].x * _405.x) - _391) * _297) + _391;
    float _426 = (((cbMtdParam._m0[20u].y * _405.y) - _392) * _297) + _392;
    float _427 = (((cbMtdParam._m0[20u].z * _405.z) - _393) * _297) + _393;
    vec4 _440 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _159[6];
    float _160[6];
    float _161[6];
    _159[0u] = cbMtdParam._m0[24u].x;
    _160[0u] = cbMtdParam._m0[24u].y;
    _161[0u] = cbMtdParam._m0[24u].z;
    _159[1u] = cbMtdParam._m0[25u].x;
    _160[1u] = cbMtdParam._m0[25u].y;
    _161[1u] = cbMtdParam._m0[25u].z;
    _159[2u] = cbMtdParam._m0[26u].x;
    _160[2u] = cbMtdParam._m0[26u].y;
    _161[2u] = cbMtdParam._m0[26u].z;
    _159[3u] = cbMtdParam._m0[27u].x;
    _160[3u] = cbMtdParam._m0[27u].y;
    _161[3u] = cbMtdParam._m0[27u].z;
    _159[4u] = cbMtdParam._m0[28u].x;
    _160[4u] = cbMtdParam._m0[28u].y;
    _161[4u] = cbMtdParam._m0[28u].z;
    _159[5u] = cbMtdParam._m0[29u].x;
    _160[5u] = cbMtdParam._m0[29u].y;
    _161[5u] = cbMtdParam._m0[29u].z;
    float _524 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    uint _527 = uint(int(isnan(5.0) ? _524 : (isnan(_524) ? 5.0 : min(_524, 5.0))));
    float _534 = _159[_527] * _327;
    float _535 = _160[_527] * _327;
    float _536 = _161[_527] * _327;
    float _537 = _534 + ((_244.x * 4.5) * ((((cbMtdParam._m0[30u].x * _440.x) - _425) * _263) + _425));
    float _538 = _535 + ((_244.y * 4.5) * ((((cbMtdParam._m0[30u].y * _440.y) - _426) * _265) + _426));
    float _539 = _536 + ((_244.z * 4.5) * ((((cbMtdParam._m0[30u].z * _440.z) - _427) * _266) + _427));
    float _154[5];
    float _155[5];
    _154[0u] = cbMtdParam._m0[35u].y;
    _155[0u] = cbMtdParam._m0[35u].z;
    _154[1u] = cbMtdParam._m0[36u].w;
    _155[1u] = cbMtdParam._m0[37u].x;
    _154[2u] = cbMtdParam._m0[37u].y;
    _155[2u] = cbMtdParam._m0[37u].z;
    _154[3u] = cbMtdParam._m0[37u].w;
    _155[3u] = cbMtdParam._m0[38u].x;
    _154[4u] = cbMtdParam._m0[38u].y;
    _155[4u] = cbMtdParam._m0[38u].z;
    float _570 = roundEven(5.0 - _354);
    float _571 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _572 = isnan(4.0) ? _571 : (isnan(_571) ? 4.0 : min(_571, 4.0));
    float _574 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    uint _576 = uint(int(isnan(4.0) ? _574 : (isnan(_574) ? 4.0 : min(_574, 4.0))));
    float _588 = ((cbMtdParam._m0[39u].z - _155[_576]) * _330) + _155[_576];
    float _596 = ((cbMtdParam._m0[40u].x - _588) * _297) + _588;
    float _601 = ((cbMtdParam._m0[40u].z - _596) * _263) + _596;
    vec4 _618 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _620 = _618.x;
    float _621 = _618.y;
    float _623 = _618.z + _154[_576];
    vec4 _635 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _643 = (((cbMtdParam._m0[39u].y - _623) + _635.z) * _330) + _623;
    vec4 _656 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _664 = (((cbMtdParam._m0[39u].w - _643) + _656.z) * _297) + _643;
    float _670 = ((((_286 * 2.0) * _664) - _664) * cbMtdParam._m0[33u].w) + _664;
    vec4 _683 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _691 = (((_683.z + cbMtdParam._m0[40u].y) - _670) * _266) + _670;
    float _718 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _722 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    vec4 _749 = texture(sampler2D(P_ACParts_ColorMaterial_Repair_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[36u].y * ((_718 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[32u].w)) + ((cbMtdParam._m0[35u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y)) * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, ((((cbMtdParam._m0[36u].x * cbPerFrame._m0[22u].x) * cbMtdParam._m0[31u].y) - (cbMtdParam._m0[36u].z * ((_722 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[32u].w))) * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _764 = (-0.0) - ((_722 - cbMtdParam._m0[32u].y) / cbMtdParam._m0[33u].z);
    float _768 = (_722 - cbMtdParam._m0[32u].z) / cbMtdParam._m0[33u].z;
    float _769 = isnan(_768) ? _764 : (isnan(_764) ? _768 : min(_764, _768));
    float _1212 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _770 = isnan(1.0) ? _1212 : (isnan(_1212) ? 1.0 : min(_1212, 1.0));
    float _780 = (((cbMtdParam._m0[22u].x * _749.x) * cbMtdParam._m0[32u].x) * _770) + _534;
    float _781 = (((cbMtdParam._m0[22u].y * _749.y) * cbMtdParam._m0[32u].x) * _770) + _535;
    float _782 = (((cbMtdParam._m0[22u].z * _749.z) * cbMtdParam._m0[32u].x) * _770) + _536;
    float _793 = ((_635.x - _620) * _330) + _620;
    float _794 = ((_635.y - _621) * _330) + _621;
    float _799 = ((_656.x - _793) * _297) + _793;
    float _800 = ((_656.y - _794) * _297) + _794;
    float _809 = ((((_683.x - _799) * _263) + _799) * 2.0) + (-1.0);
    float _810 = ((((_683.y - _800) * _265) + _800) * 2.0) + (-1.0);
    float _811 = dot(vec2(_809, _810), vec2(_809, _810));
    float _1223 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
    float _816 = sqrt(1.0 - (isnan(1.0) ? _1223 : (isnan(_1223) ? 1.0 : min(_1223, 1.0))));
    float _819 = (cbMtdParam._m0[34u].x * ((_282.x * 2.0) + (-1.0))) + _809;
    float _820 = (cbMtdParam._m0[34u].x * ((_282.y * 2.0) + (-1.0))) + _810;
    float _823 = fma(_816, _213 * NORMAL.x, fma(_820, _220 * TANGENT.x, (_206 * _198) * _819));
    float _826 = fma(_816, _213 * NORMAL.y, fma(_820, _220 * TANGENT.y, (_206 * _199) * _819));
    float _829 = fma(_816, _213 * NORMAL.z, fma(_820, _220 * TANGENT.z, (_206 * _200) * _819));
    float _833 = inversesqrt(dot(vec3(_823, _826, _829), vec3(_823, _826, _829)));
    float _1234 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _834 = isnan(1.0) ? _1234 : (isnan(_1234) ? 1.0 : min(_1234, 1.0));
    float _1245 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _835 = isnan(1.0) ? _1245 : (isnan(_1245) ? 1.0 : min(_1245, 1.0));
    float _1256 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _836 = isnan(1.0) ? _1256 : (isnan(_1256) ? 1.0 : min(_1256, 1.0));
    float _1267 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _837 = isnan(1.0) ? _1267 : (isnan(_1267) ? 1.0 : min(_1267, 1.0));
    float _1278 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _838 = isnan(1.0) ? _1278 : (isnan(_1278) ? 1.0 : min(_1278, 1.0));
    uint _840 = uint(roundEven(NORMAL.w));
    float _860 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _870 = cbSceneParam._m0[71u].x - (_718 / _860);
    float _871 = cbSceneParam._m0[71u].y - (_722 / _860);
    float _872 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _860);
    vec4 _877 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _879 = _877.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1005 = sqrt(((_870 * _870) + (_871 * _871)) + (_872 * _872));
        float _1011 = (cbMatDynParam._m0[5u].x * _1005) + cbMatDynParam._m0[5u].y;
        float _1289 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
        float _1012 = isnan(1.0) ? _1289 : (isnan(_1289) ? 1.0 : min(_1289, 1.0));
        float _1016 = (cbMatDynParam._m0[5u].z * _1005) + cbMatDynParam._m0[5u].w;
        float _1300 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1300 : (isnan(_1300) ? 1.0 : min(_1300, 1.0))) - _1012)) + _1012) < ((_879 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _1044;
    float _902;
    uint _915;
    float _946;
    float _959;
    float _960;
    float _961;
    vec4 _968;
    float _972;
    float _973;
    float _974;
    float _977;
    float _981;
    vec4 _985;
    float _987;
    float _988;
    bool _999;
    for (;;)
    {
        vec4 _887 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
        float _889 = _887.w;
        vec4 _891 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
        _902 = (((_891.y - _834) + (_891.w * _834)) * cbMtdParam._m0[3u].x) + _834;
        _915 = _840 * 13u;
        uint _917 = _915 + 9u;
        uint _918 = _917 + uint(cbMatDynParam._m0[0u].w);
        float _924 = (cbMtdParam._m0[0u].x * _835) * cbInstanceData._m0[_918].x;
        float _925 = (cbMtdParam._m0[0u].y * _836) * cbInstanceData._m0[_918].y;
        float _926 = (cbMtdParam._m0[0u].z * _837) * cbInstanceData._m0[_918].z;
        float _1311 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _927 = isnan(1.0) ? _1311 : (isnan(_1311) ? 1.0 : min(_1311, 1.0));
        float _1322 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
        float _928 = isnan(1.0) ? _1322 : (isnan(_1322) ? 1.0 : min(_1322, 1.0));
        float _1333 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
        float _929 = isnan(1.0) ? _1333 : (isnan(_1333) ? 1.0 : min(_1333, 1.0));
        vec4 _930 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
        vec4 _935 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
        _946 = (((_935.x - _838) + (_935.w * _838)) * cbMtdParam._m0[3u].x) + _838;
        _959 = (cbMtdParam._m0[3u].x * (((_927 * _889) - _927) + _930.x)) + _927;
        _960 = (cbMtdParam._m0[3u].x * (((_928 * _889) - _928) + _930.y)) + _928;
        _961 = (cbMtdParam._m0[3u].x * (((_929 * _889) - _929) + _930.z)) + _929;
        _968 = cbInstanceData._m0[_917 + uint(cbMatDynParam._m0[0u].w)];
        _972 = _968.x * _780;
        _973 = _968.y * _781;
        _974 = _968.z * _782;
        _977 = cbMtdParam._m0[2u].w;
        _981 = cbInstanceData._m0[_915 + 6u].w;
        float _982 = _879 + (-0.5);
        _985 = cbMtdParam._m0[1u];
        _987 = _985.y * _982;
        _988 = _982 * 0.999000012874603271484375;
        _999 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_999)
        {
            if ((cbInstanceData._m0[_915 + 7u].x + _988) < 0.5)
            {
                _1044 = true;
                break;
            }
        }
        if ((_968.w < 1.0) && ((_968.w + _988) < 0.5))
        {
            _1044 = true;
            break;
        }
        if ((_987 + 1.0) < _985.x)
        {
            _1044 = true;
            break;
        }
        _1044 = false;
        break;
    }
    if (_1044)
    {
        discard_state = true;
    }
    float _1078;
    float _1079;
    float _1080;
    float _1081;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _1078 = _981;
        _1079 = _981;
        _1080 = _981;
        _1081 = _981;
    }
    else
    {
        _1078 = _977;
        _1079 = 0.0;
        _1080 = float(floatBitsToUint(cbInstanceData._m0[_915 + 5u]).x) * 0.0039215688593685626983642578125;
        _1081 = TEXCOORD_5.w;
    }
    SV_Target.x = ((_823 * 0.5) * _833) + 0.500488758087158203125;
    SV_Target.y = ((_826 * 0.5) * _833) + 0.500488758087158203125;
    SV_Target.z = ((_829 * 0.5) * _833) + 0.500488758087158203125;
    SV_Target.w = _1079;
    SV_Target_1.x = _946;
    SV_Target_1.y = _902;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _1081;
    SV_Target_2.x = _959;
    SV_Target_2.y = _960;
    SV_Target_2.z = _961;
    SV_Target_2.w = _1080;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _1079;
    SV_Target_4.x = _972 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _973 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _974 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _1078;
    discard_exit();
}


