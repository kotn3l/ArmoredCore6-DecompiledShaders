#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _4211;
float _4212;
float _4213;
float _4214;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _219 = _218 * _210;
    float _220 = _218 * _211;
    float _221 = _218 * _212;
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _281 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _291 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _281);
    float _292 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _281);
    float _293 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _281);
    float _310 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    vec4 _327 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_310 * cbMtdParam._m0[26u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_310 * cbMtdParam._m0[27u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _330 = _327.x;
    float _331 = _327.y;
    float _332 = _327.z;
    float _333 = _327.w;
    float _346 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _349 = (sqrt(((_291 * _291) + (_292 * _292)) + (_293 * _293)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _346 : (isnan(_346) ? 0.001000000047497451305389404296875 : max(_346, 0.001000000047497451305389404296875)));
    float _350 = _349 + 0.180000007152557373046875;
    float _352 = _350 * 12.0;
    float _4228 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _355 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
    vec4 _367 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _369 = _367.x;
    float _392 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _369)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _369))) - POSITION_1.w;
    float _393 = _392 / ((_355 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _4239 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _394 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
    float _395 = isnan(0.5) ? _394 : (isnan(_394) ? 0.5 : max(_394, 0.5));
    float _397 = 1.0 - _395;
    float _398 = _350 * 7.0;
    float _4255 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0));
    float _400 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
    float _411 = (_332 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _412 = (_332 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _426 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _310) + _411) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _310) + _412) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _428 = _426.x;
    float _450 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _411) + (cbMtdParam._m0[26u].y * _310)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _412) + (cbMtdParam._m0[26u].z * _310)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _453 = (isnan(_450) ? _428 : (isnan(_428) ? _450 : max(_428, _450))) - _400;
    float _4271 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _454 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
    float _455 = _400 + 0.5;
    float _4282 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _468 = cbMtdParam._m0[17u].x * _310;
    float _469 = cos(_468);
    float _470 = sin(_468);
    vec4 _497 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_470 * cbMtdParam._m0[30u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _310)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_469 * cbMtdParam._m0[31u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _310)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _501 = _497.z;
    vec4 _513 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _310) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _310) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _517 = _513.z;
    float _520 = (isnan(_517) ? _501 : (isnan(_501) ? _517 : max(_501, _517))) * (isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0)));
    float _4298 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
    float _524 = (_397 - _333) + (isnan(_521) ? _454 : (isnan(_454) ? _521 : max(_454, _521)));
    float _4314 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _525 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
    float _526 = _525 * _395;
    float _4325 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _535 = isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0));
    float _536 = _332 - _535;
    float _4336 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _537 = isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0));
    vec4 _587 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _310) + (cbMtdParam._m0[30u].y * _470)) + (cbMtdParam._m0[34u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _310) + (cbMtdParam._m0[30u].z * _469)) + (cbMtdParam._m0[34u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _611 = cbMtdParam._m0[37u].z * TEXCOORD_5.x;
    float _673 = ((((((_587.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_497.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_513.w + (-0.5)))) + (((_611 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _310)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _310) * (cbMtdParam._m0[40u].z + _611)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _706 = 1.0 - _333;
    float _711 = ((isnan(0.550000011920928955078125) ? _706 : (isnan(_706) ? 0.550000011920928955078125 : max(_706, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _714 = ((TEXCOORD_5.y * (-0.5)) * _711) + _711;
    float _718 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _714) + _714;
    float _731 = (((_673 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * TEXCOORD_5.y)) * _332)) + ((texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * TEXCOORD.x) + (cbMtdParam._m0[22u].y * _310)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * TEXCOORD.y) + (cbMtdParam._m0[22u].z * _310)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _310) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _718;
    float _734 = (_731 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4357 = isnan(0.0) ? _734 : (isnan(_734) ? 0.0 : max(_734, 0.0));
    float _735 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
    float _744 = inversesqrt(dot(vec3(_291, _292, _293), vec3(_291, _292, _293)));
    float _748 = dot(vec4(_744 * _291, _744 * _292, _744 * _293, 0.0), vec4(_226, _227, _228, 0.0));
    float _4368 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _756 = exp2(log2((1.0 - (isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _4379 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _757 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
    float _761 = ((_526 + cbMtdParam._m0[9u].x) + (_537 * cbMtdParam._m0[10u].x)) + ((_735 * cbMtdParam._m0[11u].x) * _757);
    float _762 = ((_526 + cbMtdParam._m0[9u].y) + (_537 * cbMtdParam._m0[10u].y)) + ((_735 * cbMtdParam._m0[11u].y) * _757);
    float _763 = ((_526 + cbMtdParam._m0[9u].z) + (_537 * cbMtdParam._m0[10u].z)) + ((_735 * cbMtdParam._m0[11u].z) * _757);
    float _4390 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _764 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
    float _4401 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0));
    float _774 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
    float _777 = (_355 * (-0.87999999523162841796875)) * _774;
    float _780 = (((((1.0 - _761) - _764) * _535) + _761) + _774) + _777;
    float _783 = (((((1.0 - _762) - _764) * _535) + _762) + _774) + _777;
    float _786 = (((((1.0 - _763) - _764) * _535) + _763) + _774) + _777;
    float _787 = _332 * 0.01200000010430812835693359375;
    float _812 = (_332 * 0.300000011920928955078125) * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _310) + _787) + (cbMtdParam._m0[23u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _310) + _787) + (cbMtdParam._m0[24u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4412 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
    float _813 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
    float _823 = (((1.0 - _780) * TEXCOORD_5.x) * _813) + _780;
    float _824 = (((1.0 - _783) * TEXCOORD_5.x) * _813) + _783;
    float _825 = (((1.0 - _786) * TEXCOORD_5.x) * _813) + _786;
    vec4 _861 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _310) + (cbMtdParam._m0[29u].w * _470)) + (cbMtdParam._m0[28u].w * _411)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _310) + (cbMtdParam._m0[30u].x * _469)) + (cbMtdParam._m0[29u].x * _412)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _864 = _861.y;
    float _874 = 1.0 - (_392 / cbMtdParam._m0[19u].x);
    float _878 = ((_861.x * TEXCOORD_8) * cbMtdParam._m0[18u].w) * (isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0)));
    float _881 = _864 * TEXCOORD_9;
    float _884 = ((isnan(cbMtdParam._m0[19u].y) ? _881 : (isnan(_881) ? cbMtdParam._m0[19u].y : max(_881, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _885 = isnan(_884) ? _878 : (isnan(_878) ? _884 : max(_878, _884));
    float _4438 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
    float _886 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
    float _893 = (_886 * (1.0 - _823)) + _823;
    float _894 = (_886 * (1.0 - _824)) + _824;
    float _895 = (_886 * (1.0 - _825)) + _825;
    float _928 = exp2(log2(cbMtdParam._m0[15u].z * _706) * cbMtdParam._m0[17u].y);
    float _4449 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _929 = isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0));
    float _930 = _929 * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _310) + (cbMtdParam._m0[28u].y * _706)) + (cbMtdParam._m0[29u].y * _411)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _310) + (cbMtdParam._m0[28u].z * _706)) + (cbMtdParam._m0[29u].z * _412)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _933 = ((_929 - _930) * cbMtdParam._m0[18u].x) + _930;
    float _937 = _400 * TEXCOORD_10;
    float _944 = ((_937 * (1.0 - _893)) * _933) + _893;
    float _945 = ((_937 * (1.0 - _894)) * _933) + _894;
    float _946 = ((_937 * (1.0 - _895)) * _933) + _895;
    float _950 = 1.0 - (_392 / cbMtdParam._m0[18u].y);
    float _956 = (cbMtdParam._m0[18u].z * _864) * (isnan(0.0) ? _950 : (isnan(_950) ? 0.0 : max(_950, 0.0)));
    float _960 = (_956 * (1.0 - _944)) + _944;
    float _961 = (_956 * (1.0 - _945)) + _945;
    float _962 = (_956 * (1.0 - _946)) + _946;
    float _967 = _349 / cbMtdParam._m0[15u].x;
    float _4465 = isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0));
    float _970 = (1.0 - (isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0)))) * cbMtdParam._m0[14u].w;
    float _974 = _349 + 0.20000000298023223876953125;
    float _976 = _974 * 9.0;
    float _4476 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _981 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)))) + cbMtdParam._m0[12u].x;
    float _984 = (_349 + 0.099999986588954925537109375) * 2.5;
    float _4487 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _989 = ((cbMtdParam._m0[14u].z - _981) * (isnan(1.0) ? _4487 : (isnan(_4487) ? 1.0 : min(_4487, 1.0)))) + _981;
    float _990 = _960 + _525;
    float _4498 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _995 = ((0.3499999940395355224609375 - _989) * (isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0)))) + _989;
    float _996 = TEXCOORD_5.z * 0.5;
    float _1008 = (_349 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4509 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _1013 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0)))) + cbMtdParam._m0[20u].y;
    float _1018 = (_1013 * (_330 + (-0.5))) + 0.5;
    float _1019 = (_1013 * (_331 + (-0.5))) + 0.5;
    float _4520 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1020 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
    vec4 _1052 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[25u].w * TEXCOORD.z) + (cbMtdParam._m0[31u].w * _310)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].x * TEXCOORD.w) + (cbMtdParam._m0[32u].x * _310)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1060 = ((_513.x + (-0.5)) * 0.5) + _497.x;
    float _1061 = ((_513.y + (-0.5)) * 0.5) + _497.y;
    vec4 _1083 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * TEXCOORD.x) + (cbMtdParam._m0[24u].w * _310)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * TEXCOORD.y) + (cbMtdParam._m0[25u].x * _310)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1090 = _974 * 12.0;
    float _4531 = isnan(0.0) ? _1090 : (isnan(_1090) ? 0.0 : max(_1090, 0.0));
    float _1092 = 1.0 - (isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0)));
    float _1106 = cbMtdParam._m0[33u].y * TEXCOORD.x;
    float _1107 = cbMtdParam._m0[33u].z * TEXCOORD.y;
    vec4 _1120 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1106 + (cbMtdParam._m0[32u].w * _310)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1107 + (cbMtdParam._m0[33u].x * _310)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1141 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1106 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _537)) + (cbMtdParam._m0[33u].w * _310)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1107 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _537)) + (cbMtdParam._m0[34u].x * _310)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1155 = (((0.5 - _1060) * 0.10999999940395355224609375) + _1060) + (((((((_1083.z + (-0.5)) * cbMtdParam._m0[15u].w) * _1092) + (-1.0)) + _1120.x) + _1141.x) * cbMtdParam._m0[15u].y);
    float _1156 = (((0.5 - _1061) * 0.10999999940395355224609375) + _1061) + (((((((_1083.w + (-0.5)) * cbMtdParam._m0[15u].w) * _1092) + (-1.0)) + _1120.y) + _1141.y) * cbMtdParam._m0[15u].y);
    float _1161 = ((_1052.x - _1155) * _349) + _1155;
    float _1162 = ((_1052.y - _1156) * _349) + _1156;
    float _1163 = _349 * 0.5;
    float _4542 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
    float _1164 = isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0));
    float _1177 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _718);
    float _1186 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * TEXCOORD_5.y);
    float _1188 = _1186 - (_1186 * _1164);
    float _1192 = (((((((0.5 - _330) * 0.60000002384185791015625) + _330) - _1018) * _1020) + _1018) + (_1188 * (_587.x + (-0.5)))) + (((_1161 + (-0.5)) + ((0.5 - _1161) * _1164)) * _1177);
    float _1194 = (((((((0.5 - _331) * 0.60000002384185791015625) + _331) - _1019) * _1020) + _1019) + (_1188 * (_587.y + (-0.5)))) + (((_1162 + (-0.5)) + ((0.5 - _1162) * _1164)) * _1177);
    float _1204 = (((_996 * (0.5 - _1192)) + _1192) * 2.0) + (-1.0);
    float _1205 = (((_996 * (0.5 - _1194)) + _1194) * 2.0) + (-1.0);
    float _1206 = dot(vec2(_1204, _1205), vec2(_1204, _1205));
    float _4553 = isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0));
    float _1211 = sqrt(1.0 - (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0))));
    float _1213 = _974 * 6.0;
    float _4564 = isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0));
    float _1216 = cbMtdParam._m0[16u].x * (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0)));
    float _4575 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
    float _1217 = isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0));
    float _1220 = ((1.0 - _1217) * _990) + _1217;
    uint _1236 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1237 = _1236 + 5u;
    float _1248 = (-0.0) - _291;
    float _1249 = (-0.0) - _292;
    float _1250 = (-0.0) - _293;
    float _1254 = inversesqrt(dot(vec3(_1248, _1249, _1250), vec3(_1248, _1249, _1250)));
    float _1258 = dot(vec3(_1254 * _1248, _1254 * _1249, _1254 * _1250), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1237]).x * 14u].xyz));
    float _1268 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1258 * 0.60000002384185791015625)) * 1.5);
    float _1281 = ((((0.959999978542327880859375 / exp2(log2((_1258 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1268) * 0.5) + _1268) * 0.079577468335628509521484375;
    float _1285 = fma(_1211, _226, fma(_1205, _232 * TANGENT.x, _1204 * _219));
    float _1288 = fma(_1211, _227, fma(_1205, _232 * TANGENT.y, _1204 * _220));
    float _1291 = fma(_1211, _228, fma(_1205, _232 * TANGENT.z, _1204 * _221));
    float _1295 = inversesqrt(dot(vec3(_1285, _1288, _1291), vec3(_1285, _1288, _1291)));
    float _1296 = _1295 * _1285;
    float _1297 = _1295 * _1288;
    float _1298 = _1295 * _1291;
    float _4586 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _4597 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
    float _1300 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
    float _4608 = isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0));
    float _4619 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _4630 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _1315 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1355 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1364 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1355);
    float _1365 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1355);
    float _1366 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1355);
    float _1370 = inversesqrt(dot(vec3(_1364, _1365, _1366), vec3(_1364, _1365, _1366)));
    float _1371 = _1364 * _1370;
    float _1372 = _1365 * _1370;
    float _1373 = _1366 * _1370;
    vec4 _1378 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1380 = _1378.w;
    float _1385 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1386 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1406 = fma(_1298, cbSceneParam._m0[5u].z, fma(_1297, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1296));
    float _1409 = fma(_1298, cbSceneParam._m0[6u].z, fma(_1297, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1296));
    float _1412 = fma(_1298, cbSceneParam._m0[7u].z, fma(_1297, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1296));
    uint _1425 = _1236 + 9u;
    uint _1426 = _1425 + uint(cbMatDynParam._m0[0u].w);
    float _1432 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4608 : (isnan(_4608) ? 1.0 : min(_4608, 1.0)))) * cbInstanceData._m0[_1426].x;
    float _1433 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4619 : (isnan(_4619) ? 1.0 : min(_4619, 1.0)))) * cbInstanceData._m0[_1426].y;
    float _1434 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4630 : (isnan(_4630) ? 1.0 : min(_4630, 1.0)))) * cbInstanceData._m0[_1426].z;
    float _4641 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
    float _1435 = isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0));
    float _4652 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
    float _1436 = isnan(1.0) ? _4652 : (isnan(_4652) ? 1.0 : min(_4652, 1.0));
    float _4663 = isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0));
    float _1437 = isnan(1.0) ? _4663 : (isnan(_4663) ? 1.0 : min(_4663, 1.0));
    vec4 _1446 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1385, cbSceneParam._m0[86u].y * _1386));
    float _1449 = _1446.x * TEXCOORD_5.w;
    float _1453 = abs(dot(vec3(_1371, _1372, _1373), vec3(_1296, _1297, _1298)));
    float _4674 = isnan(0.0) ? _1453 : (isnan(_1453) ? 0.0 : max(_1453, 0.0));
    float _1459 = exp2(log2(1.0 - (isnan(1.0) ? _4674 : (isnan(_4674) ? 1.0 : min(_4674, 1.0)))) * 5.0);
    float _1460 = cbMtdParam._m0[16u].z + (-0.039999999105930328369140625);
    float _4685 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
    float _1463 = (isnan(1.0) ? _4685 : (isnan(_4685) ? 1.0 : min(_4685, 1.0))) * _1459;
    float _1464 = _1463 + 0.039999999105930328369140625;
    float _1468 = 10.0 / (_1315 + 10.0);
    vec4 _1483 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1468 * cbMtdParam._m0[19u].w) * dot(vec3(_1296, _1297, _1298), vec3(1.0, 0.0, 0.0))) + (_1385 / cbSceneParam._m0[86u].x), 1.0 - (_1386 / cbSceneParam._m0[86u].y)));
    float _1519 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1523 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1527 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1823;
    float _1824;
    float _1825;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1552 = fma(_1527, cbModelParam._m0[26u].z, fma(_1523, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1519));
        float _1556 = fma(_1527, cbModelParam._m0[27u].z, fma(_1523, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1519));
        float _1560 = fma(_1527, cbModelParam._m0[28u].z, fma(_1523, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1519));
        float _1582 = _1519 + _1296;
        float _1583 = _1523 + _1297;
        float _1584 = _1527 + _1298;
        float _1594 = fma(_1584, cbModelParam._m0[26u].z, fma(_1583, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1582)) - _1552;
        float _1595 = fma(_1584, cbModelParam._m0[27u].z, fma(_1583, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1582)) - _1556;
        float _1596 = fma(_1584, cbModelParam._m0[28u].z, fma(_1583, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1582)) - _1560;
        float _1600 = inversesqrt(dot(vec3(_1594, _1595, _1596), vec3(_1594, _1595, _1596)));
        float _1612 = ((_1600 * _1594) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1552 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1613 = ((_1600 * _1595) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1556 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1614 = ((_1600 * _1596) / cbModelParam._m0[34u].z) + ((((((_1560 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1617 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1612, _1613, _1614), 0.0);
        vec4 _1624 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1612, _1613, _1614), 0.0);
        vec4 _1631 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1612, _1613, _1614), 0.0);
        vec4 _1638 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1612, _1613, _1614), 0.0);
        float _1651 = exp2((_1617.w + (-0.5)) * 20.0) * 2.0;
        float _1658 = exp2((_1624.w + (-0.5)) * 20.0) * 2.0;
        float _1665 = exp2((_1631.w + (-0.5)) * 20.0) * 2.0;
        float _1672 = exp2((_1638.w + (-0.5)) * 20.0) * 2.0;
        float _1673 = _1672 * (_1638.x + (-0.5));
        float _1674 = _1672 * (_1638.y + (-0.5));
        float _1675 = _1672 * (_1638.z + (-0.5));
        float _1676 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1677 = isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0));
        float _1678 = isnan(0.0) ? _1675 : (isnan(_1675) ? 0.0 : max(_1675, 0.0));
        float _1680 = ((_1617.x + (-0.5)) * 0.5) * _1651;
        float _1682 = ((_1624.x + (-0.5)) * 0.5) * _1658;
        float _1684 = ((_1631.x + (-0.5)) * 0.5) * _1665;
        float _1685 = dot(vec3(_1680, _1682, _1684), vec3(_1680, _1682, _1684));
        float _1690 = (_1685 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1685);
        float _1699 = (dot(vec3(_1296, _1297, _1298), vec3(_1690 * _1680, _1690 * _1682, _1690 * _1684)) + 1.0) * 0.5;
        float _4711 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1709 = sqrt(((_1682 * _1682) + (_1680 * _1680)) + (_1684 * _1684)) / (_1676 + 9.9999997473787516355514526367188e-06);
        float _4722 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4733 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0))) * (_1711 + 1.0))) + _1716) * _1676;
        float _1727 = ((_1617.y + (-0.5)) * 0.5) * _1651;
        float _1729 = ((_1624.y + (-0.5)) * 0.5) * _1658;
        float _1731 = ((_1631.y + (-0.5)) * 0.5) * _1665;
        float _1732 = dot(vec3(_1727, _1729, _1731), vec3(_1727, _1729, _1731));
        float _1737 = (_1732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1732);
        float _1745 = (dot(vec3(_1296, _1297, _1298), vec3(_1737 * _1727, _1737 * _1729, _1737 * _1731)) + 1.0) * 0.5;
        float _4744 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1754 = sqrt(((_1729 * _1729) + (_1727 * _1727)) + (_1731 * _1731)) / (_1677 + 9.9999997473787516355514526367188e-06);
        float _4755 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0));
        float _1756 = _1755 * 2.0;
        float _1760 = (1.0 - _1755) / (_1755 + 1.0);
        float _4766 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1761 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _1770 = ((((1.0 - _1761) * (_1756 + 2.0)) * exp2(log2(isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0))) * (_1756 + 1.0))) + _1761) * _1677;
        float _1772 = ((_1617.z + (-0.5)) * 0.5) * _1651;
        float _1774 = ((_1624.z + (-0.5)) * 0.5) * _1658;
        float _1776 = ((_1631.z + (-0.5)) * 0.5) * _1665;
        float _1777 = dot(vec3(_1772, _1774, _1776), vec3(_1772, _1774, _1776));
        float _1782 = (_1777 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1777);
        float _1790 = (dot(vec3(_1296, _1297, _1298), vec3(_1782 * _1772, _1782 * _1774, _1782 * _1776)) + 1.0) * 0.5;
        float _4777 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1799 = sqrt(((_1774 * _1774) + (_1772 * _1772)) + (_1776 * _1776)) / (_1678 + 9.9999997473787516355514526367188e-06);
        float _4788 = isnan(0.0) ? _1799 : (isnan(_1799) ? 0.0 : max(_1799, 0.0));
        float _1800 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
        float _1801 = _1800 * 2.0;
        float _1805 = (1.0 - _1800) / (_1800 + 1.0);
        float _4799 = isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0));
        float _1806 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
        float _1815 = ((((1.0 - _1806) * (_1801 + 2.0)) * exp2(log2(isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0))) * (_1801 + 1.0))) + _1806) * _1678;
        _1823 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
        _1824 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
        _1825 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0)));
    }
    else
    {
        _1823 = 0.0;
        _1824 = 0.0;
        _1825 = 0.0;
    }
    float _2115;
    float _2116;
    float _2117;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1848 = fma(_1527, cbModelParam._m0[30u].z, fma(_1523, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1519));
        float _1852 = fma(_1527, cbModelParam._m0[31u].z, fma(_1523, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1519));
        float _1856 = fma(_1527, cbModelParam._m0[32u].z, fma(_1523, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1519));
        float _1878 = _1519 + _1296;
        float _1879 = _1523 + _1297;
        float _1880 = _1527 + _1298;
        float _1890 = fma(_1880, cbModelParam._m0[30u].z, fma(_1879, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1878)) - _1848;
        float _1891 = fma(_1880, cbModelParam._m0[31u].z, fma(_1879, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1878)) - _1852;
        float _1892 = fma(_1880, cbModelParam._m0[32u].z, fma(_1879, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1878)) - _1856;
        float _1896 = inversesqrt(dot(vec3(_1890, _1891, _1892), vec3(_1890, _1891, _1892)));
        float _1908 = ((_1896 * _1890) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1848 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1909 = ((_1896 * _1891) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1852 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1910 = ((_1896 * _1892) / cbModelParam._m0[35u].z) + ((((((_1856 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1912 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1908, _1909, _1910), 0.0);
        vec4 _1919 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1908, _1909, _1910), 0.0);
        vec4 _1926 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1908, _1909, _1910), 0.0);
        vec4 _1933 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1908, _1909, _1910), 0.0);
        float _1945 = exp2((_1912.w + (-0.5)) * 20.0) * 2.0;
        float _1952 = exp2((_1919.w + (-0.5)) * 20.0) * 2.0;
        float _1959 = exp2((_1926.w + (-0.5)) * 20.0) * 2.0;
        float _1966 = exp2((_1933.w + (-0.5)) * 20.0) * 2.0;
        float _1967 = _1966 * (_1933.x + (-0.5));
        float _1968 = _1966 * (_1933.y + (-0.5));
        float _1969 = _1966 * (_1933.z + (-0.5));
        float _1970 = isnan(0.0) ? _1967 : (isnan(_1967) ? 0.0 : max(_1967, 0.0));
        float _1971 = isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0));
        float _1972 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
        float _1974 = ((_1912.x + (-0.5)) * 0.5) * _1945;
        float _1976 = ((_1919.x + (-0.5)) * 0.5) * _1952;
        float _1978 = ((_1926.x + (-0.5)) * 0.5) * _1959;
        float _1979 = dot(vec3(_1974, _1976, _1978), vec3(_1974, _1976, _1978));
        float _1984 = (_1979 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1979);
        float _1992 = (dot(vec3(_1296, _1297, _1298), vec3(_1984 * _1974, _1984 * _1976, _1984 * _1978)) + 1.0) * 0.5;
        float _4840 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _2001 = sqrt(((_1976 * _1976) + (_1974 * _1974)) + (_1978 * _1978)) / (_1970 + 9.9999997473787516355514526367188e-06);
        float _4851 = isnan(0.0) ? _2001 : (isnan(_2001) ? 0.0 : max(_2001, 0.0));
        float _2002 = isnan(1.0) ? _4851 : (isnan(_4851) ? 1.0 : min(_4851, 1.0));
        float _2003 = _2002 * 2.0;
        float _2007 = (1.0 - _2002) / (_2002 + 1.0);
        float _4862 = isnan(0.0) ? _2007 : (isnan(_2007) ? 0.0 : max(_2007, 0.0));
        float _2008 = isnan(1.0) ? _4862 : (isnan(_4862) ? 1.0 : min(_4862, 1.0));
        float _2017 = ((((1.0 - _2008) * (_2003 + 2.0)) * exp2(log2(isnan(1.0) ? _4840 : (isnan(_4840) ? 1.0 : min(_4840, 1.0))) * (_2003 + 1.0))) + _2008) * _1970;
        float _2019 = ((_1912.y + (-0.5)) * 0.5) * _1945;
        float _2021 = ((_1919.y + (-0.5)) * 0.5) * _1952;
        float _2023 = ((_1926.y + (-0.5)) * 0.5) * _1959;
        float _2024 = dot(vec3(_2019, _2021, _2023), vec3(_2019, _2021, _2023));
        float _2029 = (_2024 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2024);
        float _2037 = (dot(vec3(_1296, _1297, _1298), vec3(_2029 * _2019, _2029 * _2021, _2029 * _2023)) + 1.0) * 0.5;
        float _4873 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
        float _2046 = sqrt(((_2021 * _2021) + (_2019 * _2019)) + (_2023 * _2023)) / (_1971 + 9.9999997473787516355514526367188e-06);
        float _4884 = isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0));
        float _2047 = isnan(1.0) ? _4884 : (isnan(_4884) ? 1.0 : min(_4884, 1.0));
        float _2048 = _2047 * 2.0;
        float _2052 = (1.0 - _2047) / (_2047 + 1.0);
        float _4895 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
        float _2053 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
        float _2062 = ((((1.0 - _2053) * (_2048 + 2.0)) * exp2(log2(isnan(1.0) ? _4873 : (isnan(_4873) ? 1.0 : min(_4873, 1.0))) * (_2048 + 1.0))) + _2053) * _1971;
        float _2064 = ((_1912.z + (-0.5)) * 0.5) * _1945;
        float _2066 = ((_1919.z + (-0.5)) * 0.5) * _1952;
        float _2068 = ((_1926.z + (-0.5)) * 0.5) * _1959;
        float _2069 = dot(vec3(_2064, _2066, _2068), vec3(_2064, _2066, _2068));
        float _2074 = (_2069 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2069);
        float _2082 = (dot(vec3(_1296, _1297, _1298), vec3(_2074 * _2064, _2074 * _2066, _2074 * _2068)) + 1.0) * 0.5;
        float _4906 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2091 = sqrt(((_2066 * _2066) + (_2064 * _2064)) + (_2068 * _2068)) / (_1972 + 9.9999997473787516355514526367188e-06);
        float _4917 = isnan(0.0) ? _2091 : (isnan(_2091) ? 0.0 : max(_2091, 0.0));
        float _2092 = isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0));
        float _2093 = _2092 * 2.0;
        float _2097 = (1.0 - _2092) / (_2092 + 1.0);
        float _4928 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
        float _2098 = isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0));
        float _2107 = ((((1.0 - _2098) * (_2093 + 2.0)) * exp2(log2(isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0))) * (_2093 + 1.0))) + _2098) * _1972;
        _2115 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0)));
        _2116 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0)));
        _2117 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0)));
    }
    else
    {
        _2115 = 0.0;
        _2116 = 0.0;
        _2117 = 0.0;
    }
    float _2127 = (cbModelParam._m0[1u].x * (_2115 - _1823)) + _1823;
    float _2128 = (cbModelParam._m0[1u].x * (_2116 - _1824)) + _1824;
    float _2129 = (cbModelParam._m0[1u].x * (_2117 - _1825)) + _1825;
    float _2150 = fma(_2129, cbSceneParam._m0[89u].z, fma(_2128, cbSceneParam._m0[89u].y, _2127 * cbSceneParam._m0[89u].x));
    float _2153 = fma(_2129, cbSceneParam._m0[90u].z, fma(_2128, cbSceneParam._m0[90u].y, _2127 * cbSceneParam._m0[90u].x));
    float _2156 = fma(_2129, cbSceneParam._m0[91u].z, fma(_2128, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2127));
    float _2161 = (0.959999978542327880859375 - _1463) * _1449;
    float _2192 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2196 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2200 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2204 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2205 = _2192 / _2204;
    float _2206 = _2196 / _2204;
    float _2207 = _2200 / _2204;
    float _2340;
    float _2341;
    float _2342;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2224 = ((uint(_2207 > cbSceneParam._m0[59u].y) + uint(_2207 > cbSceneParam._m0[59u].x)) + uint(_2207 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2225 = _2224 + 43u;
        uint _2232 = _2224 + 44u;
        uint _2239 = _2224 + 45u;
        uint _2246 = _2224 + 46u;
        float _2257 = fma(_2204, cbSceneParam._m0[_2225].w, fma(_2200, cbSceneParam._m0[_2225].z, fma(_2196, cbSceneParam._m0[_2225].y, _2192 * cbSceneParam._m0[_2225].x)));
        float _2261 = fma(_2204, cbSceneParam._m0[_2232].w, fma(_2200, cbSceneParam._m0[_2232].z, fma(_2196, cbSceneParam._m0[_2232].y, _2192 * cbSceneParam._m0[_2232].x)));
        float _2269 = fma(_2204, cbSceneParam._m0[_2246].w, fma(_2200, cbSceneParam._m0[_2246].z, fma(_2196, cbSceneParam._m0[_2246].y, _2192 * cbSceneParam._m0[_2246].x)));
        float _2273 = cbSceneParam._m0[33u].z * _2269;
        float _2275 = cbSceneParam._m0[33u].w * _2269;
        float _2278 = fma(_2204, cbSceneParam._m0[_2239].w, fma(_2200, cbSceneParam._m0[_2239].z, fma(_2196, cbSceneParam._m0[_2239].y, _2192 * cbSceneParam._m0[_2239].x))) / _2269;
        float _2326 = (cbSceneParam._m0[33u].x - sqrt(((_2206 * _2206) + (_2205 * _2205)) + (_2207 * _2207))) * cbSceneParam._m0[33u].y;
        float _4969 = isnan(0.0) ? _2326 : (isnan(_2326) ? 0.0 : max(_2326, 0.0));
        float _2333 = (isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2273 + _2257) / _2269, (_2275 + _2261) / _2269), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2275 + _2257) / _2269, (_2261 - _2273) / _2269), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2257 - _2273) / _2269, (_2261 - _2275) / _2269), _2278), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2257 - _2275) / _2269, (_2273 + _2261) / _2269), _2278), 0.0)).x), vec4(0.25)));
        _2340 = 1.0 - (_2333 * cbSceneParam._m0[34u].x);
        _2341 = 1.0 - (_2333 * cbSceneParam._m0[34u].y);
        _2342 = 1.0 - (_2333 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2340 = 1.0;
        _2341 = 1.0;
        _2342 = 1.0;
    }
    float _2398;
    float _2400;
    float _2402;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2386 = fma(_2204, cbSceneParam._m0[63u].w, fma(_2200, cbSceneParam._m0[63u].z, fma(_2196, cbSceneParam._m0[63u].y, _2192 * cbSceneParam._m0[63u].x)));
        float _2387 = fma(_2204, cbSceneParam._m0[60u].w, fma(_2200, cbSceneParam._m0[60u].z, fma(_2196, cbSceneParam._m0[60u].y, _2192 * cbSceneParam._m0[60u].x))) / _2386;
        float _2388 = fma(_2204, cbSceneParam._m0[61u].w, fma(_2200, cbSceneParam._m0[61u].z, fma(_2196, cbSceneParam._m0[61u].y, _2192 * cbSceneParam._m0[61u].x))) / _2386;
        float frontier_phi_8_7_ladder;
        float frontier_phi_8_7_ladder_1;
        float frontier_phi_8_7_ladder_2;
        if ((((_2387 >= cbSceneParam._m0[64u].x) && (_2388 >= cbSceneParam._m0[64u].y)) && (_2387 <= cbSceneParam._m0[64u].z)) && (_2388 <= cbSceneParam._m0[64u].w))
        {
            float _2493 = fma(_2204, cbSceneParam._m0[62u].w, fma(_2200, cbSceneParam._m0[62u].z, fma(_2196, cbSceneParam._m0[62u].y, _2192 * cbSceneParam._m0[62u].x))) / _2386;
            float _2497 = isnan(cbSceneParam._m0[41u].w) ? _2493 : (isnan(_2493) ? cbSceneParam._m0[41u].w : max(_2493, cbSceneParam._m0[41u].w));
            float _2540 = (cbSceneParam._m0[33u].x - sqrt(((_2206 * _2206) + (_2205 * _2205)) + (_2207 * _2207))) * cbSceneParam._m0[33u].y;
            float _4985 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
            float _2547 = (isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2387, cbSceneParam._m0[33u].w + _2388), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2387, _2388 - cbSceneParam._m0[33u].z), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2387 - cbSceneParam._m0[33u].z, _2388 - cbSceneParam._m0[33u].w), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2387 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2388), _2497), 0.0)).x), vec4(0.25)));
            float _2551 = 1.0 - (_2547 * cbSceneParam._m0[34u].x);
            float _2552 = 1.0 - (_2547 * cbSceneParam._m0[34u].y);
            float _2553 = 1.0 - (_2547 * cbSceneParam._m0[34u].z);
            frontier_phi_8_7_ladder = isnan(_2553) ? _2342 : (isnan(_2342) ? _2553 : min(_2342, _2553));
            frontier_phi_8_7_ladder_1 = isnan(_2552) ? _2341 : (isnan(_2341) ? _2552 : min(_2341, _2552));
            frontier_phi_8_7_ladder_2 = isnan(_2551) ? _2340 : (isnan(_2340) ? _2551 : min(_2340, _2551));
        }
        else
        {
            frontier_phi_8_7_ladder = _2342;
            frontier_phi_8_7_ladder_1 = _2341;
            frontier_phi_8_7_ladder_2 = _2340;
        }
        _2398 = frontier_phi_8_7_ladder_2;
        _2400 = frontier_phi_8_7_ladder_1;
        _2402 = frontier_phi_8_7_ladder;
    }
    else
    {
        _2398 = _2340;
        _2400 = _2341;
        _2402 = _2342;
    }
    uvec4 _2406 = floatBitsToUint(cbInstanceData._m0[_1237]);
    uint _2408 = _2406.x * 14u;
    uint _2409 = _2408 + 13u;
    float _2416 = _1449 + (-1.0);
    float _2421 = (cbLight._m0[_2409].x * _2416) + 1.0;
    float _2422 = (cbLight._m0[_2409].y * _2416) + 1.0;
    float _2423 = (cbLight._m0[_2409].z * _2416) + 1.0;
    float _2424 = (cbLight._m0[_2409].w * _2416) + 1.0;
    uint _2425 = _2408 + 5u;
    float _2431 = isnan(1.0) ? _2422 : (isnan(_2422) ? 1.0 : min(_2422, 1.0));
    uint _2435 = _2408 + 4u;
    float _2444 = isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0));
    uint _2448 = _2408 | 1u;
    float _2459 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_1296, _1297, _1298));
    float _2462 = dot(vec3(cbLight._m0[_2448].xyz), vec3(_1296, _1297, _1298));
    float _5021 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _5032 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2467 = (isnan(1.0) ? _5021 : (isnan(_5021) ? 1.0 : min(_5021, 1.0))) * 0.3183098733425140380859375;
    float _2469 = (isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0))) * 0.3183098733425140380859375;
    float _2476 = ((cbLight._m0[_2425].x * _2431) * _2469) + (((cbLight._m0[_2435].x * _2398) * _2444) * _2467);
    float _2477 = ((_2431 * cbLight._m0[_2425].y) * _2469) + (((cbLight._m0[_2435].y * _2400) * _2444) * _2467);
    float _2478 = ((_2431 * cbLight._m0[_2425].z) * _2469) + (((cbLight._m0[_2435].z * _2402) * _2444) * _2467);
    uvec4 _2482 = floatBitsToUint(cbLight._m0[_2408 + 12u]);
    bool _2484 = _2482.x == 0u;
    float _2554;
    float _2556;
    float _2558;
    if (_2484)
    {
        _2554 = _2476;
        _2556 = _2477;
        _2558 = _2478;
    }
    else
    {
        uint _2562 = _2408 + 6u;
        float _2578 = (dot(vec3(cbLight._m0[_2408 + 2u].xyz), vec3(_1296, _1297, _1298)) * 0.5) + 0.5;
        float _2579 = _2578 * _2578;
        float _5043 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0));
        float _2580 = isnan(1.0) ? _5043 : (isnan(_5043) ? 1.0 : min(_5043, 1.0));
        float _2581 = isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0));
        _2554 = (((cbLight._m0[_2562].x * 0.3183098733425140380859375) * _2580) * _2581) + _2476;
        _2556 = (((cbLight._m0[_2562].y * 0.3183098733425140380859375) * _2580) * _2581) + _2477;
        _2558 = (((cbLight._m0[_2562].z * 0.3183098733425140380859375) * _2580) * _2581) + _2478;
    }
    bool _2561 = _2482.y == 0u;
    float _2591;
    float _2593;
    float _2595;
    if (_2561)
    {
        _2591 = _2554;
        _2593 = _2556;
        _2595 = _2558;
    }
    else
    {
        uint _2755 = _2408 + 7u;
        float _2771 = (dot(vec3(cbLight._m0[_2408 + 3u].xyz), vec3(_1296, _1297, _1298)) * 0.5) + 0.5;
        float _2772 = _2771 * _2771;
        float _5059 = isnan(0.0) ? _2772 : (isnan(_2772) ? 0.0 : max(_2772, 0.0));
        float _2773 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
        float _2774 = isnan(1.0) ? _2424 : (isnan(_2424) ? 1.0 : min(_2424, 1.0));
        _2591 = (((cbLight._m0[_2755].x * 0.3183098733425140380859375) * _2773) * _2774) + _2554;
        _2593 = (((cbLight._m0[_2755].y * 0.3183098733425140380859375) * _2773) * _2774) + _2556;
        _2595 = (((cbLight._m0[_2755].z * 0.3183098733425140380859375) * _2773) * _2774) + _2558;
    }
    uint _2598 = _2408 + 8u;
    float _2611 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2408].w)) * _1300) * 0.949999988079071044921875);
    float _2612 = _2611 * _2611;
    float _2613 = cbLight._m0[_2408].x + _1371;
    float _2614 = cbLight._m0[_2408].y + _1372;
    float _2615 = cbLight._m0[_2408].z + _1373;
    float _2619 = inversesqrt(dot(vec3(_2613, _2614, _2615), vec3(_2613, _2614, _2615)));
    float _2620 = _2619 * _2613;
    float _2621 = _2619 * _2614;
    float _2622 = _2619 * _2615;
    float _2623 = dot(vec3(_1296, _1297, _1298), vec3(cbLight._m0[_2408].xyz));
    float _5075 = isnan(0.0) ? _2623 : (isnan(_2623) ? 0.0 : max(_2623, 0.0));
    float _2626 = isnan(1.0) ? _5075 : (isnan(_5075) ? 1.0 : min(_5075, 1.0));
    float _2627 = dot(vec3(_1296, _1297, _1298), vec3(_1371, _1372, _1373));
    float _5086 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
    float _2630 = isnan(1.0) ? _5086 : (isnan(_5086) ? 1.0 : min(_5086, 1.0));
    float _2631 = dot(vec3(_1296, _1297, _1298), vec3(_2620, _2621, _2622));
    float _5097 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2634 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
    float _2635 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_2620, _2621, _2622));
    float _5108 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2639 = _2612 * _2612;
    float _2643 = ((_2634 * _2634) * (_2639 + (-1.0))) + 1.0;
    float _2653 = (exp2(log2(1.0 - (isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2654 = 1.0 - _2612;
    float _2665 = (0.5 / (((_2630 * ((_2626 * _2654) + _2612)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2654) + _2612) * _2626))) * _2626;
    float _5119 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
    float _2667 = (isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0))) * (_2639 / ((_2643 * _2643) * 3.141590118408203125));
    uint _2681 = _2408 + 9u;
    float _2692 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2448].w)) * _1300) * 0.949999988079071044921875);
    float _2693 = _2692 * _2692;
    float _2694 = cbLight._m0[_2448].x + _1371;
    float _2695 = cbLight._m0[_2448].y + _1372;
    float _2696 = cbLight._m0[_2448].z + _1373;
    float _2700 = inversesqrt(dot(vec3(_2694, _2695, _2696), vec3(_2694, _2695, _2696)));
    float _2701 = _2700 * _2694;
    float _2702 = _2700 * _2695;
    float _2703 = _2700 * _2696;
    float _2704 = dot(vec3(_1296, _1297, _1298), vec3(cbLight._m0[_2448].xyz));
    float _5130 = isnan(0.0) ? _2704 : (isnan(_2704) ? 0.0 : max(_2704, 0.0));
    float _2707 = isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0));
    float _2708 = dot(vec3(_1296, _1297, _1298), vec3(_2701, _2702, _2703));
    float _5141 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
    float _2711 = isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0));
    float _2712 = dot(vec3(cbLight._m0[_2448].xyz), vec3(_2701, _2702, _2703));
    float _5152 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
    float _2716 = _2693 * _2693;
    float _2720 = ((_2711 * _2711) * (_2716 + (-1.0))) + 1.0;
    float _2729 = (exp2(log2(1.0 - (isnan(1.0) ? _5152 : (isnan(_5152) ? 1.0 : min(_5152, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2730 = 1.0 - _2693;
    float _2740 = (0.5 / (((_2630 * ((_2707 * _2730) + _2693)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2730) + _2693) * _2707))) * _2707;
    float _5163 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2742 = (isnan(1.0) ? _5163 : (isnan(_5163) ? 1.0 : min(_5163, 1.0))) * (_2716 / ((_2720 * _2720) * 3.141590118408203125));
    float _2752 = (((_2729 * cbLight._m0[_2681].x) * _2742) * _2431) + ((((cbLight._m0[_2598].x * _2398) * _2653) * _2667) * _2444);
    float _2753 = (((_2729 * cbLight._m0[_2681].y) * _2742) * _2431) + ((((cbLight._m0[_2598].y * _2400) * _2653) * _2667) * _2444);
    float _2754 = (((_2729 * cbLight._m0[_2681].z) * _2742) * _2431) + ((((cbLight._m0[_2598].z * _2402) * _2653) * _2667) * _2444);
    float _2784;
    float _2786;
    float _2788;
    if (_2484)
    {
        _2784 = _2752;
        _2786 = _2753;
        _2788 = _2754;
    }
    else
    {
        uint _2790 = _2408 + 2u;
        uint _2794 = _2408 + 10u;
        float _2808 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2790].w)) * _1300) * 0.949999988079071044921875);
        float _2809 = _2808 * _2808;
        float _2810 = cbLight._m0[_2790].x + _1371;
        float _2811 = cbLight._m0[_2790].y + _1372;
        float _2812 = cbLight._m0[_2790].z + _1373;
        float _2816 = inversesqrt(dot(vec3(_2810, _2811, _2812), vec3(_2810, _2811, _2812)));
        float _2817 = _2816 * _2810;
        float _2818 = _2816 * _2811;
        float _2819 = _2816 * _2812;
        float _2820 = dot(vec3(_1296, _1297, _1298), vec3(cbLight._m0[_2790].xyz));
        float _5174 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
        float _2823 = isnan(1.0) ? _5174 : (isnan(_5174) ? 1.0 : min(_5174, 1.0));
        float _2824 = dot(vec3(_1296, _1297, _1298), vec3(_2817, _2818, _2819));
        float _5185 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
        float _2827 = isnan(1.0) ? _5185 : (isnan(_5185) ? 1.0 : min(_5185, 1.0));
        float _2828 = dot(vec3(cbLight._m0[_2790].xyz), vec3(_2817, _2818, _2819));
        float _5196 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
        float _2832 = _2809 * _2809;
        float _2836 = ((_2827 * _2827) * (_2832 + (-1.0))) + 1.0;
        float _2845 = (exp2(log2(1.0 - (isnan(1.0) ? _5196 : (isnan(_5196) ? 1.0 : min(_5196, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2846 = 1.0 - _2809;
        float _2856 = (0.5 / (((_2630 * ((_2823 * _2846) + _2809)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2846) + _2809) * _2823))) * _2823;
        float _5207 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
        float _2858 = (isnan(1.0) ? _5207 : (isnan(_5207) ? 1.0 : min(_5207, 1.0))) * (_2832 / ((_2836 * _2836) * 3.141590118408203125));
        float _2859 = isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0));
        _2784 = (((_2845 * cbLight._m0[_2794].x) * _2858) * _2859) + _2752;
        _2786 = (((_2845 * cbLight._m0[_2794].y) * _2858) * _2859) + _2753;
        _2788 = (((_2845 * cbLight._m0[_2794].z) * _2858) * _2859) + _2754;
    }
    float _2869;
    float _2871;
    float _2873;
    if (_2561)
    {
        _2869 = _2784;
        _2871 = _2786;
        _2873 = _2788;
    }
    else
    {
        uint _2880 = _2408 + 3u;
        uint _2884 = _2408 + 11u;
        float _2898 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2880].w)) * _1300) * 0.949999988079071044921875);
        float _2899 = _2898 * _2898;
        float _2900 = cbLight._m0[_2880].x + _1371;
        float _2901 = cbLight._m0[_2880].y + _1372;
        float _2902 = cbLight._m0[_2880].z + _1373;
        float _2906 = inversesqrt(dot(vec3(_2900, _2901, _2902), vec3(_2900, _2901, _2902)));
        float _2907 = _2906 * _2900;
        float _2908 = _2906 * _2901;
        float _2909 = _2906 * _2902;
        float _2910 = dot(vec3(_1296, _1297, _1298), vec3(cbLight._m0[_2880].xyz));
        float _5223 = isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0));
        float _2913 = isnan(1.0) ? _5223 : (isnan(_5223) ? 1.0 : min(_5223, 1.0));
        float _2914 = dot(vec3(_1296, _1297, _1298), vec3(_2907, _2908, _2909));
        float _5234 = isnan(0.0) ? _2914 : (isnan(_2914) ? 0.0 : max(_2914, 0.0));
        float _2917 = isnan(1.0) ? _5234 : (isnan(_5234) ? 1.0 : min(_5234, 1.0));
        float _2918 = dot(vec3(cbLight._m0[_2880].xyz), vec3(_2907, _2908, _2909));
        float _5245 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
        float _2922 = _2899 * _2899;
        float _2926 = ((_2917 * _2917) * (_2922 + (-1.0))) + 1.0;
        float _2935 = (exp2(log2(1.0 - (isnan(1.0) ? _5245 : (isnan(_5245) ? 1.0 : min(_5245, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2936 = 1.0 - _2899;
        float _2946 = (0.5 / (((_2630 * ((_2913 * _2936) + _2899)) + 9.9999999392252902907785028219223e-09) + (((_2630 * _2936) + _2899) * _2913))) * _2913;
        float _5256 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        float _2948 = (isnan(1.0) ? _5256 : (isnan(_5256) ? 1.0 : min(_5256, 1.0))) * (_2922 / ((_2926 * _2926) * 3.141590118408203125));
        float _2949 = isnan(1.0) ? _2424 : (isnan(_2424) ? 1.0 : min(_2424, 1.0));
        _2869 = (((_2935 * cbLight._m0[_2884].x) * _2948) * _2949) + _2784;
        _2871 = (((_2935 * cbLight._m0[_2884].y) * _2948) * _2949) + _2786;
        _2873 = (((_2935 * cbLight._m0[_2884].z) * _2948) * _2949) + _2788;
    }
    float _3015;
    float _3017;
    float _3019;
    float _3021;
    float _3023;
    float _3025;
    if (_2406.y == 0u)
    {
        uvec4 _2970 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2971 = _2970.x;
        uint _2982 = uint((float(_2970.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1386) / _2971))) + floor(float(uint(cbSceneParam._m0[85u].x * _1385) / _2971)));
        float _2992 = (log2(_2207 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2993 = isnan(0.0) ? _2992 : (isnan(_2992) ? 0.0 : max(_2992, 0.0));
        uint _2996 = uint(isnan(14.0) ? _2993 : (isnan(_2993) ? 14.0 : min(_2993, 14.0)));
        uvec4 _3001 = texelFetch(g_lightClusterGridBuffer, int(((_2996 << 2u) + (_2982 << 6u)) >> 2u));
        uint _3002 = _3001.x;
        uint _3003 = _2970.z;
        float _3141;
        float _3143;
        float _3145;
        float _3147;
        float _3149;
        float _3151;
        if (((((1u << ((_3003 >> 4u) & 15u)) + 4294967295u) & _3002) == 0u) || ((_3003 & 240u) == 0u))
        {
            _3141 = 0.0;
            _3143 = 0.0;
            _3145 = 0.0;
            _3147 = 0.0;
            _3149 = 0.0;
            _3151 = 0.0;
        }
        else
        {
            float _3142;
            float _3144;
            float _3146;
            float _3148;
            float _3150;
            float _3152;
            float _3347 = 0.0;
            float _3348 = 0.0;
            float _3349 = 0.0;
            float _3350 = 0.0;
            float _3351 = 0.0;
            float _3352 = 0.0;
            uint _3353 = 0u;
            uint _3362;
            bool _3363;
            for (;;)
            {
                _3362 = texelFetch(g_lightClassification, int((((_2996 << 5u) + (_2982 << 9u)) + (_3353 << 2u)) >> 2u)).x;
                _3363 = _3362 == 0u;
                float frontier_phi_30_pred;
                float frontier_phi_30_pred_1;
                float frontier_phi_30_pred_2;
                float frontier_phi_30_pred_3;
                float frontier_phi_30_pred_4;
                float frontier_phi_30_pred_5;
                if (_3363)
                {
                    frontier_phi_30_pred = _3349;
                    frontier_phi_30_pred_1 = _3348;
                    frontier_phi_30_pred_2 = _3347;
                    frontier_phi_30_pred_3 = _3350;
                    frontier_phi_30_pred_4 = _3352;
                    frontier_phi_30_pred_5 = _3351;
                }
                else
                {
                    float _3581;
                    float _3582;
                    float _3583;
                    float _3584;
                    float _3585;
                    float _3586;
                    uint _3587;
                    _3581 = _3347;
                    _3582 = _3348;
                    _3583 = _3349;
                    _3584 = _3350;
                    _3585 = _3351;
                    _3586 = _3352;
                    _3587 = _3362;
                    float _3496;
                    float _3497;
                    float _3498;
                    float _3499;
                    float _3500;
                    float _3501;
                    for (;;)
                    {
                        uint _3591 = uint(findLSB(_3587)) + (_3353 << 5u);
                        uint _3588 = (_3587 + 4294967295u) & _3587;
                        uint _3593 = _3591 * 48u;
                        vec4 _3607 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3593)).x, texelFetch(g_PointLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3593 + 3u)).x));
                        uint _3613 = (_3591 * 48u) + 4u;
                        vec4 _3626 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3613)).x, texelFetch(g_PointLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3613 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3613 + 3u)).x));
                        uint _3632 = (_3591 * 48u) + 8u;
                        vec3 _3643 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3632)).x, texelFetch(g_PointLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3632 + 2u)).x));
                        float _3647 = _3607.x - _2205;
                        float _3648 = _3607.y - _2206;
                        float _3649 = _3607.z - _2207;
                        float _3650 = dot(vec3(_3647, _3648, _3649), vec3(_3647, _3648, _3649));
                        float _3653 = inversesqrt(_3650);
                        float _3654 = _3653 * _3647;
                        float _3655 = _3653 * _3648;
                        float _3656 = _3653 * _3649;
                        float _3657 = dot(vec3(_1406, _1409, _1412), vec3(_3654, _3655, _3656));
                        float _3662 = 1.0 - (_3650 * _3607.w);
                        float _5282 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                        float _3663 = isnan(1.0) ? _5282 : (isnan(_5282) ? 1.0 : min(_5282, 1.0));
                        float _3664 = sqrt(_3650) * _3626.w;
                        float _3667 = 1.39999997615814208984375 / (_3664 + 1.39999997615814208984375);
                        float _3668 = _3667 * _3667;
                        float _3671 = ((1.0 - _3668) * _3657) + _3668;
                        float _3674 = _3664 * _3664;
                        float _3678 = ((isnan(0.0) ? _3671 : (isnan(_3671) ? 0.0 : max(_3671, 0.0))) * _3663) / ((_3674 * 0.699999988079071044921875) + 1.0);
                        float _3682 = (-0.0) - _2205;
                        float _3683 = (-0.0) - _2206;
                        float _3684 = (-0.0) - _2207;
                        float _3688 = inversesqrt(dot(vec3(_3682, _3683, _3684), vec3(_3682, _3683, _3684)));
                        float _3689 = _3688 * _3682;
                        float _3690 = _3688 * _3683;
                        float _3691 = _3688 * _3684;
                        float _3698 = exp2(log2(1.0 / ((_3674 * 3.5) + 5.0)) * 0.25);
                        float _3700 = 1.0 - sqrt(_1300);
                        float _3707 = sqrt(1.0 - ((1.0 - (_3700 * _3700)) * (1.0 - (_3698 * _3698))));
                        float _3708 = _3707 * _3707;
                        float _3709 = _3708 * _3708;
                        float _3710 = _3689 + _3654;
                        float _3711 = _3690 + _3655;
                        float _3712 = _3691 + _3656;
                        float _3716 = inversesqrt(dot(vec3(_3710, _3711, _3712), vec3(_3710, _3711, _3712)));
                        float _3720 = dot(vec3(_1406, _1409, _1412), vec3(_3689, _3690, _3691));
                        float _5298 = isnan(0.0) ? _3720 : (isnan(_3720) ? 0.0 : max(_3720, 0.0));
                        float _3723 = isnan(1.0) ? _5298 : (isnan(_5298) ? 1.0 : min(_5298, 1.0));
                        float _3724 = dot(vec3(_1406, _1409, _1412), vec3(_3716 * _3710, _3716 * _3711, _3716 * _3712));
                        float _5309 = isnan(0.0) ? _3724 : (isnan(_3724) ? 0.0 : max(_3724, 0.0));
                        float _3727 = isnan(1.0) ? _5309 : (isnan(_5309) ? 1.0 : min(_5309, 1.0));
                        float _3731 = ((_3727 * _3727) * (_3709 + (-1.0))) + 1.0;
                        float _3732 = _3667 * _3708;
                        float _3733 = _3732 * _3732;
                        float _3736 = ((1.0 - _3733) * _3657) + _3733;
                        float _5320 = isnan(0.0) ? _3736 : (isnan(_3736) ? 0.0 : max(_3736, 0.0));
                        float _3737 = isnan(1.0) ? _5320 : (isnan(_5320) ? 1.0 : min(_5320, 1.0));
                        float _3738 = 1.0 - _3708;
                        float _3748 = (0.5 / (((_3737 * ((_3723 * _3738) + _3708)) + 9.9999999392252902907785028219223e-09) + (((_3737 * _3738) + _3708) * _3723))) * _3737;
                        float _5331 = isnan(0.0) ? _3748 : (isnan(_3748) ? 0.0 : max(_3748, 0.0));
                        float _3759 = (((_3709 * 3.1415927410125732421875) * (isnan(1.0) ? _5331 : (isnan(_5331) ? 1.0 : min(_5331, 1.0)))) / ((_3731 * _3731) * ((_3674 * 2.1991131305694580078125) + 3.141590118408203125))) * _3663;
                        _3499 = (_3678 * _3626.x) + _3584;
                        _3500 = (_3678 * _3626.y) + _3585;
                        _3501 = (_3678 * _3626.z) + _3586;
                        _3496 = (_3759 * _3643.x) + _3581;
                        _3497 = (_3759 * _3643.y) + _3582;
                        _3498 = (_3759 * _3643.z) + _3583;
                        if (_3588 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3581 = _3496;
                            _3582 = _3497;
                            _3583 = _3498;
                            _3584 = _3499;
                            _3585 = _3500;
                            _3586 = _3501;
                            _3587 = _3588;
                        }
                    }
                    frontier_phi_30_pred = _3498;
                    frontier_phi_30_pred_1 = _3497;
                    frontier_phi_30_pred_2 = _3496;
                    frontier_phi_30_pred_3 = _3499;
                    frontier_phi_30_pred_4 = _3501;
                    frontier_phi_30_pred_5 = _3500;
                }
                _3146 = frontier_phi_30_pred;
                _3144 = frontier_phi_30_pred_1;
                _3142 = frontier_phi_30_pred_2;
                _3148 = frontier_phi_30_pred_3;
                _3152 = frontier_phi_30_pred_4;
                _3150 = frontier_phi_30_pred_5;
                uint _3354 = _3353 + 1u;
                if (_3354 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3347 = _3142;
                    _3348 = _3144;
                    _3349 = _3146;
                    _3350 = _3148;
                    _3351 = _3150;
                    _3352 = _3152;
                    _3353 = _3354;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3141 = _3142;
            _3143 = _3144;
            _3145 = _3146;
            _3147 = _3148;
            _3149 = _3150;
            _3151 = _3152;
        }
        uvec4 _3155 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3156 = _3155.z;
        uint _3158 = (_3156 >> 8u) & 15u;
        float _3315;
        float _3317;
        float _3319;
        float _3321;
        float _3323;
        float _3325;
        if (((4294967295u << _3158) & _3002) == 0u)
        {
            _3315 = _3141;
            _3317 = _3143;
            _3319 = _3145;
            _3321 = _3147;
            _3323 = _3149;
            _3325 = _3151;
        }
        else
        {
            float _3340 = inversesqrt(dot(vec3(_2205, _2206, _2207), vec3(_2205, _2206, _2207)));
            float _3341 = _3340 * _2205;
            float _3342 = _3340 * _2206;
            float _3343 = _3340 * _2207;
            float frontier_phi_24_25_ladder;
            float frontier_phi_24_25_ladder_1;
            float frontier_phi_24_25_ladder_2;
            float frontier_phi_24_25_ladder_3;
            float frontier_phi_24_25_ladder_4;
            float frontier_phi_24_25_ladder_5;
            if (_3158 < ((_3156 >> 12u) & 15u))
            {
                float _3316;
                float _3318;
                float _3320;
                float _3322;
                float _3324;
                float _3326;
                float _3564 = _3141;
                float _3565 = _3143;
                float _3566 = _3145;
                float _3567 = _3147;
                float _3568 = _3149;
                float _3569 = _3151;
                uint _3570 = _3158;
                uint _3579;
                bool _3580;
                for (;;)
                {
                    _3579 = texelFetch(g_lightClassification, int((((_2996 << 5u) + (_2982 << 9u)) + (_3570 << 2u)) >> 2u)).x;
                    _3580 = _3579 == 0u;
                    float frontier_phi_42_pred;
                    float frontier_phi_42_pred_1;
                    float frontier_phi_42_pred_2;
                    float frontier_phi_42_pred_3;
                    float frontier_phi_42_pred_4;
                    float frontier_phi_42_pred_5;
                    if (_3580)
                    {
                        frontier_phi_42_pred = _3567;
                        frontier_phi_42_pred_1 = _3565;
                        frontier_phi_42_pred_2 = _3564;
                        frontier_phi_42_pred_3 = _3566;
                        frontier_phi_42_pred_4 = _3569;
                        frontier_phi_42_pred_5 = _3568;
                    }
                    else
                    {
                        float _3808;
                        float _3809;
                        float _3810;
                        float _3811;
                        float _3812;
                        float _3813;
                        float _4113;
                        float _4114;
                        float _4115;
                        float _4116;
                        float _4117;
                        float _4118;
                        float _3832 = _3564;
                        float _3833 = _3565;
                        float _3834 = _3566;
                        float _3835 = _3567;
                        float _3836 = _3568;
                        float _3837 = _3569;
                        uint _3838 = _3579;
                        uint _3839;
                        vec4 _3864;
                        float _3865;
                        vec4 _3880;
                        vec3 _3892;
                        vec4 _3907;
                        vec4 _3922;
                        float _3968;
                        bool _3969;
                        for (;;)
                        {
                            uint _3849 = ((_3570 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3838));
                            _3839 = (_3838 + 4294967295u) & _3838;
                            uint _3851 = _3849 * 40u;
                            _3864 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3851)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 3u)).x));
                            _3865 = _3864.w;
                            uint _3867 = (_3849 * 40u) + 4u;
                            _3880 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3867)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3867 + 3u)).x));
                            uint _3882 = (_3849 * 40u) + 8u;
                            _3892 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3882)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3882 + 2u)).x));
                            uint _3894 = (_3849 * 40u) + 16u;
                            _3907 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3894)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3894 + 3u)).x));
                            uint _3909 = (_3849 * 40u) + 20u;
                            _3922 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3909)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3909 + 3u)).x));
                            uint _3924 = (_3849 * 40u) + 24u;
                            vec4 _3937 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3924)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3924 + 3u)).x));
                            uint _3943 = (_3849 * 40u) + 28u;
                            vec4 _3956 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3943)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3943 + 3u)).x));
                            _3968 = fma(_2207, _3956.z, fma(_2206, _3956.y, _3956.x * _2205)) + _3956.w;
                            _3969 = !((fma(_2207, _3937.z, fma(_2206, _3937.y, _3937.x * _2205)) + _3937.w) <= 0.0);
                            float frontier_phi_51_pred;
                            float frontier_phi_51_pred_1;
                            float frontier_phi_51_pred_2;
                            float frontier_phi_51_pred_3;
                            float frontier_phi_51_pred_4;
                            float frontier_phi_51_pred_5;
                            if (_3969)
                            {
                                float _3996 = _3864.x - _2205;
                                float _3997 = _3864.y - _2206;
                                float _3998 = _3864.z - _2207;
                                float _3999 = dot(vec3(_3996, _3997, _3998), vec3(_3996, _3997, _3998));
                                float _4002 = inversesqrt(_3999);
                                float _4003 = _4002 * _3996;
                                float _4004 = _4002 * _3997;
                                float _4005 = _4002 * _3998;
                                float _4009 = 1.0 - (_3999 / (_3865 * _3865));
                                float _5342 = isnan(0.0) ? _4009 : (isnan(_4009) ? 0.0 : max(_4009, 0.0));
                                float _4010 = isnan(1.0) ? _5342 : (isnan(_5342) ? 1.0 : min(_5342, 1.0));
                                float _4014 = sqrt(_3999) * _3880.w;
                                float _4016 = 1.39999997615814208984375 / (_4014 + 1.39999997615814208984375);
                                float _4017 = _4016 * _4016;
                                float _4020 = ((1.0 - _4017) * dot(vec3(_4003, _4004, _4005), vec3(_1406, _1409, _1412))) + _4017;
                                float _4023 = _4014 * _4014;
                                float _4027 = (fma(_2207, _3907.z, fma(_2206, _3907.y, _3907.x * _2205)) + _3907.w) / _3968;
                                float _4028 = (fma(_2207, _3922.z, fma(_2206, _3922.y, _3922.x * _2205)) + _3922.w) / _3968;
                                float _4032 = 1.0 - dot(vec2(_4027, _4028), vec2(_4027, _4028));
                                float _5358 = isnan(0.0) ? _4032 : (isnan(_4032) ? 0.0 : max(_4032, 0.0));
                                float _4033 = isnan(1.0) ? _5358 : (isnan(_5358) ? 1.0 : min(_5358, 1.0));
                                float _4034 = _4033 * (((isnan(0.0) ? _4020 : (isnan(_4020) ? 0.0 : max(_4020, 0.0))) * _4010) / ((_4023 * 0.699999988079071044921875) + 1.0));
                                float _4046 = exp2(log2(1.0 / ((_4023 * 3.5) + 5.0)) * 0.25);
                                float _4048 = 1.0 - sqrt(_1300);
                                float _4055 = sqrt(1.0 - ((1.0 - (_4048 * _4048)) * (1.0 - (_4046 * _4046))));
                                float _4056 = _4055 * _4055;
                                float _4057 = _4056 * _4056;
                                float _4058 = _4003 - _3341;
                                float _4059 = _4004 - _3342;
                                float _4060 = _4005 - _3343;
                                float _4064 = inversesqrt(dot(vec3(_4058, _4059, _4060), vec3(_4058, _4059, _4060)));
                                float _4068 = dot(vec3(_1406, _1409, _1412), vec3((-0.0) - _3341, (-0.0) - _3342, (-0.0) - _3343));
                                float _5369 = isnan(0.0) ? _4068 : (isnan(_4068) ? 0.0 : max(_4068, 0.0));
                                float _4071 = isnan(1.0) ? _5369 : (isnan(_5369) ? 1.0 : min(_5369, 1.0));
                                float _4072 = dot(vec3(_1406, _1409, _1412), vec3(_4064 * _4058, _4064 * _4059, _4064 * _4060));
                                float _5380 = isnan(0.0) ? _4072 : (isnan(_4072) ? 0.0 : max(_4072, 0.0));
                                float _4075 = isnan(1.0) ? _5380 : (isnan(_5380) ? 1.0 : min(_5380, 1.0));
                                float _4079 = ((_4075 * _4075) * (_4057 + (-1.0))) + 1.0;
                                float _4080 = _4016 * _4056;
                                float _4081 = _4080 * _4080;
                                float _4087 = ((1.0 - _4081) * dot(vec3(_1406, _1409, _1412), vec3(_4003, _4004, _4005))) + _4081;
                                float _5391 = isnan(0.0) ? _4087 : (isnan(_4087) ? 0.0 : max(_4087, 0.0));
                                float _4088 = isnan(1.0) ? _5391 : (isnan(_5391) ? 1.0 : min(_5391, 1.0));
                                float _4089 = 1.0 - _4056;
                                float _4099 = (0.5 / (((_4088 * ((_4071 * _4089) + _4056)) + 9.9999999392252902907785028219223e-09) + (((_4088 * _4089) + _4056) * _4071))) * _4088;
                                float _5402 = isnan(0.0) ? _4099 : (isnan(_4099) ? 0.0 : max(_4099, 0.0));
                                float _4109 = (_4033 * _4010) * (((_4057 * 3.1415927410125732421875) * (isnan(1.0) ? _5402 : (isnan(_5402) ? 1.0 : min(_5402, 1.0)))) / ((_4079 * _4079) * ((_4023 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_51_pred = _4034 * _3880.x;
                                frontier_phi_51_pred_1 = _4109 * _3892.z;
                                frontier_phi_51_pred_2 = _4109 * _3892.y;
                                frontier_phi_51_pred_3 = _4109 * _3892.x;
                                frontier_phi_51_pred_4 = _4034 * _3880.z;
                                frontier_phi_51_pred_5 = _4034 * _3880.y;
                            }
                            else
                            {
                                frontier_phi_51_pred = 0.0;
                                frontier_phi_51_pred_1 = 0.0;
                                frontier_phi_51_pred_2 = 0.0;
                                frontier_phi_51_pred_3 = 0.0;
                                frontier_phi_51_pred_4 = 0.0;
                                frontier_phi_51_pred_5 = 0.0;
                            }
                            _4116 = frontier_phi_51_pred;
                            _4115 = frontier_phi_51_pred_1;
                            _4114 = frontier_phi_51_pred_2;
                            _4113 = frontier_phi_51_pred_3;
                            _4118 = frontier_phi_51_pred_4;
                            _4117 = frontier_phi_51_pred_5;
                            _3811 = _4116 + _3835;
                            _3812 = _4117 + _3836;
                            _3813 = _4118 + _3837;
                            _3808 = _4113 + _3832;
                            _3809 = _4114 + _3833;
                            _3810 = _4115 + _3834;
                            if (_3839 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3832 = _3808;
                                _3833 = _3809;
                                _3834 = _3810;
                                _3835 = _3811;
                                _3836 = _3812;
                                _3837 = _3813;
                                _3838 = _3839;
                                continue;
                            }
                        }
                        frontier_phi_42_pred = _3811;
                        frontier_phi_42_pred_1 = _3809;
                        frontier_phi_42_pred_2 = _3808;
                        frontier_phi_42_pred_3 = _3810;
                        frontier_phi_42_pred_4 = _3813;
                        frontier_phi_42_pred_5 = _3812;
                    }
                    _3322 = frontier_phi_42_pred;
                    _3318 = frontier_phi_42_pred_1;
                    _3316 = frontier_phi_42_pred_2;
                    _3320 = frontier_phi_42_pred_3;
                    _3326 = frontier_phi_42_pred_4;
                    _3324 = frontier_phi_42_pred_5;
                    uint _3571 = _3570 + 1u;
                    if (_3571 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3564 = _3316;
                        _3565 = _3318;
                        _3566 = _3320;
                        _3567 = _3322;
                        _3568 = _3324;
                        _3569 = _3326;
                        _3570 = _3571;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_24_25_ladder = _3326;
                frontier_phi_24_25_ladder_1 = _3324;
                frontier_phi_24_25_ladder_2 = _3322;
                frontier_phi_24_25_ladder_3 = _3320;
                frontier_phi_24_25_ladder_4 = _3318;
                frontier_phi_24_25_ladder_5 = _3316;
            }
            else
            {
                frontier_phi_24_25_ladder = _3151;
                frontier_phi_24_25_ladder_1 = _3149;
                frontier_phi_24_25_ladder_2 = _3147;
                frontier_phi_24_25_ladder_3 = _3145;
                frontier_phi_24_25_ladder_4 = _3143;
                frontier_phi_24_25_ladder_5 = _3141;
            }
            _3315 = frontier_phi_24_25_ladder_5;
            _3317 = frontier_phi_24_25_ladder_4;
            _3319 = frontier_phi_24_25_ladder_3;
            _3321 = frontier_phi_24_25_ladder_2;
            _3323 = frontier_phi_24_25_ladder_1;
            _3325 = frontier_phi_24_25_ladder;
        }
        float _3330 = isnan(1.0) ? _1449 : (isnan(_1449) ? 1.0 : min(_1449, 1.0));
        _3015 = (_3330 * _3321) + _2591;
        _3017 = (_3330 * _3323) + _2593;
        _3019 = (_3330 * _3325) + _2595;
        _3021 = ((_3315 * 0.039999999105930328369140625) * _3330) + _2869;
        _3023 = ((_3317 * 0.039999999105930328369140625) * _3330) + _2871;
        _3025 = ((_3319 * 0.039999999105930328369140625) * _3330) + _2873;
    }
    else
    {
        _3015 = _2591;
        _3017 = _2593;
        _3019 = _2595;
        _3021 = _2869;
        _3023 = _2871;
        _3025 = _2873;
    }
    float _3046 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3047 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3048 = cbSceneParam._m0[86u].x * ((_1385 / cbSceneParam._m0[86u].x) + ((_1468 * 0.449999988079071044921875) * dot(vec3(_1296, _1297, _1298), vec3(_219, _220, _221))));
    float _3049 = isnan(_3046) ? _3048 : (isnan(_3048) ? _3046 : min(_3048, _3046));
    float _3050 = isnan(_3047) ? _1386 : (isnan(_1386) ? _3047 : min(_1386, _3047));
    vec4 _3052 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3049, _3050), 0.0);
    float _3054 = _3052.x;
    bool _3074 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3054)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3054))) > _1315;
    float _3075 = _3074 ? _3049 : _1385;
    float _3076 = _3074 ? _3050 : _1386;
    vec4 _3078 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3075, _3076));
    vec4 _3083 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3075, _3076));
    float _3085 = _3083.x;
    bool _3090 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3099 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3105 = (_3090 ? (_3099 / (cbSceneParam._m0[2u].x - _3085)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3085))) - _1315;
    float _3107 = cbMtdParam._m0[41u].w + cbMtdParam._m0[35u].w;
    float _3108 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _3109 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    bool _3115 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3119 = (isnan(_3105) ? 0.0 : (isnan(0.0) ? _3105 : max(0.0, _3105))) * (-1.44269502162933349609375);
    float _5433 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
    float _5444 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    float _5455 = isnan(0.0) ? _1437 : (isnan(_1437) ? 0.0 : max(_1437, 0.0));
    float _3242;
    float _3243;
    float _3244;
    if ((1.0 - _1220) > 0.00999999977648258209228515625)
    {
        vec4 _3163 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3075, _3076), 0.0);
        float _3165 = _3163.x;
        float _3171 = (_3090 ? (_3099 / (cbSceneParam._m0[2u].x - _3165)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3165))) - _1315;
        uint _3177 = floatBitsToUint(cbInstanceData._m0[_1237]).x * 14u;
        uint _3183 = _3177 + 4u;
        float _3192 = dot(vec3(cbLight._m0[_3177].xyz), vec3(_226, _227, _228));
        float _3199 = dot(vec3((-0.0) - _1371, (-0.0) - _1372, (-0.0) - _1373), vec3((-0.0) - _226, (-0.0) - _227, (-0.0) - _228));
        float _3204 = ((isnan(0.0) ? _3199 : (isnan(_3199) ? 0.0 : max(_3199, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3192 : (isnan(_3192) ? 0.001000000047497451305389404296875 : max(_3192, 0.001000000047497451305389404296875)))) + 1.0;
        float _3206 = (-0.0) - ((isnan(_3171) ? 0.0 : (isnan(0.0) ? _3171 : max(0.0, _3171))) * _3204);
        _3242 = _3115 ? 0.0 : ((((_1281 * cbMtdParam._m0[35u].w) * cbLight._m0[_3183].x) / ((_3204 * _3107) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3107 * 1.44269502162933349609375) * _3206)));
        _3243 = _3115 ? 0.0 : ((((_1281 * cbMtdParam._m0[36u].x) * cbLight._m0[_3183].y) / ((_3204 * _3108) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3108 * 1.44269502162933349609375) * _3206)));
        _3244 = _3115 ? 0.0 : ((((_1281 * cbMtdParam._m0[36u].y) * cbLight._m0[_3183].z) / ((_3204 * _3109) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3109 * 1.44269502162933349609375) * _3206)));
    }
    else
    {
        _3242 = 0.0;
        _3243 = 0.0;
        _3244 = 0.0;
    }
    float _3261 = 0.959999978542327880859375 - (_1459 * 0.959999978542327880859375);
    float _3262 = (_3242 + ((exp2(_3119 * (_3115 ? 0.0 : _3107)) * _3078.x) * cbSceneParam._m0[72u].w)) * _3261;
    float _3263 = (_3243 + ((exp2(_3119 * (_3115 ? 0.0 : _3108)) * _3078.y) * cbSceneParam._m0[72u].w)) * _3261;
    float _3264 = (_3244 + ((exp2(_3119 * (_3115 ? 0.0 : _3109)) * _3078.z) * cbSceneParam._m0[72u].w)) * _3261;
    float _3272 = (_3262 + ((_3021 + ((_1483.x * _1464) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5433 : (isnan(_5433) ? 1.0 : min(_5433, 1.0))) * (_3015 + (_2161 * (isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0)))))) - _3262) * _1220);
    float _3274 = (_3263 + ((_3023 + ((_1483.y * _1464) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5444 : (isnan(_5444) ? 1.0 : min(_5444, 1.0))) * (_3017 + (_2161 * (isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0)))))) - _3263) * _1220);
    float _3276 = (_3264 + ((_3025 + ((_1483.z * _1464) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5455 : (isnan(_5455) ? 1.0 : min(_5455, 1.0))) * (_3019 + (_2161 * (isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0)))))) - _3264) * _1220);
    float _3281 = cbInstanceData._m0[_1236 + 6u].w * (isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0)));
    float _3286 = _1385 / cbSceneParam._m0[86u].x;
    float _3287 = _1386 / cbSceneParam._m0[86u].y;
    vec4 _3301 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, (log2((isnan(cbSceneParam._m0[77u].w) ? _1315 : (isnan(_1315) ? cbSceneParam._m0[77u].w : min(_1315, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3303 = _3301.x;
    float _3304 = _3301.y;
    float _3305 = _3301.z;
    float _3306 = _3301.w;
    float _3404;
    float _3406;
    float _3408;
    float _3410;
    if (_1315 > cbSceneParam._m0[78u].w)
    {
        float _3368 = isnan(_1315) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1315 : min(cbSceneParam._m0[80u].w, _1315));
        float _3369 = _3368 / _1315;
        float _3380 = _3369 * _1364;
        float _3381 = _1365 * _3369;
        float _3382 = (-0.0) - _3381;
        float _3383 = _3369 * _1366;
        float _3385 = (cbSceneParam._m0[77u].w * _3382) / _3368;
        float _3386 = _3385 + cbSceneParam._m0[79u].w;
        float _3387 = cbSceneParam._m0[79u].w - _3381;
        float _3393 = sqrt(((_3380 * _3380) + (_3381 * _3381)) + (_3383 * _3383));
        float _3396 = (1.0 - (cbSceneParam._m0[77u].w / _3368)) * _3393;
        float _3402 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3403 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3764;
        if (abs((_3382 - _3385) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3764 = ((((_3386 > 0.0) ? exp2(_3402 * _3386) : (2.0 - exp2(_3403 * _3386))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3396;
        }
        else
        {
            float _3521 = 1.0 / cbSceneParam._m0[80u].x;
            float _3522 = isnan(_3387) ? _3386 : (isnan(_3386) ? _3387 : max(_3386, _3387));
            float _3523 = isnan(_3387) ? _3386 : (isnan(_3386) ? _3387 : min(_3386, _3387));
            float _3532 = isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : min(_3522, 0.0));
            float _3533 = isnan(0.0) ? _3523 : (isnan(_3523) ? 0.0 : min(_3523, 0.0));
            _3764 = ((abs(_3393 / _3382) * cbSceneParam._m0[80u].y) * ((((_3532 - _3533) * 2.0) - ((exp2(_3402 * (isnan(0.0) ? _3522 : (isnan(_3522) ? 0.0 : max(_3522, 0.0)))) - exp2(_3402 * (isnan(0.0) ? _3523 : (isnan(_3523) ? 0.0 : max(_3523, 0.0))))) * _3521)) - ((exp2(_3403 * _3532) - exp2(_3403 * _3533)) * _3521))) + (_3396 * cbSceneParam._m0[80u].z);
        }
        vec4 _3766 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3286, _3287, 1.0), 0.0);
        float _3775 = exp2((_3764 * (-1.44269502162933349609375)) * (1.0 - _3766.w));
        float _3776 = log2(_3775);
        float _3792 = log2(_3306);
        _3404 = (exp2(_3792 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3776 * cbSceneParam._m0[78u].x)) * _3766.x) / cbSceneParam._m0[78u].x)) + _3303;
        _3406 = (exp2(_3792 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3776 * cbSceneParam._m0[78u].y)) * _3766.y) / cbSceneParam._m0[78u].y)) + _3304;
        _3408 = (exp2(_3792 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3776 * cbSceneParam._m0[78u].z)) * _3766.z) / cbSceneParam._m0[78u].z)) + _3305;
        _3410 = _3775 * _3306;
    }
    else
    {
        _3404 = _3303;
        _3406 = _3304;
        _3408 = _3305;
        _3410 = _3306;
    }
    bool _3802;
    float _3466;
    vec4 _3469;
    float _3471;
    vec4 _3473;
    float _3481;
    float _3482;
    float _3483;
    float _3484;
    bool _3495;
    for (;;)
    {
        bool _3422 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _3424 = log2(_3410);
        float _3431 = exp2(_3424 * cbSceneParam._m0[78u].x) * _3272;
        float _3432 = exp2(_3424 * cbSceneParam._m0[78u].y) * _3274;
        float _3433 = exp2(_3424 * cbSceneParam._m0[78u].z) * _3276;
        vec4 _3441 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1385, _1386));
        float _3443 = _3441.x;
        float _3464 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3443)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3443))) - _1315) * 3.0;
        float _5521 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
        _3466 = _3281 * (isnan(1.0) ? _5521 : (isnan(_5521) ? 1.0 : min(_5521, 1.0)));
        float _3467 = _1380 + (-0.5);
        _3469 = cbMtdParam._m0[1u];
        _3471 = _3469.y * _3467;
        _3473 = cbMatDynParam._m0[0u];
        float _3480 = (roundEven(_3473.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3481 = _3480 * (_3422 ? _3431 : (_3431 + (cbSceneParam._m0[72u].w * _3404)));
        _3482 = _3480 * (_3422 ? _3432 : (_3432 + (cbSceneParam._m0[72u].w * _3406)));
        _3483 = _3480 * (_3422 ? _3433 : (_3433 + (cbSceneParam._m0[72u].w * _3408)));
        _3484 = _3467 * 0.999000012874603271484375;
        _3495 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3495)
        {
            if ((cbInstanceData._m0[_1236 + 7u].x + _3484) < 0.5)
            {
                _3802 = true;
                break;
            }
        }
        uint _3556 = _1425 + uint(_3473.w);
        if ((cbInstanceData._m0[_3556].w < 1.0) && ((cbInstanceData._m0[_3556].w + _3484) < 0.5))
        {
            _3802 = true;
            break;
        }
        if ((_3471 + 1.0) < _3469.x)
        {
            _3802 = true;
            break;
        }
        _3802 = false;
        break;
    }
    float _3823;
    if (_3802)
    {
        discard_state = true;
        _3823 = 0.0;
    }
    else
    {
        _3823 = _3466;
    }
    SV_Target.x = _3481;
    SV_Target.y = _3482;
    SV_Target.z = _3483;
    SV_Target.w = _3823;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3466;
    discard_exit();
}


