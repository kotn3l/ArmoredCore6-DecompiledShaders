#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out vec4 TEXCOORD_8;
layout(location = 5) out float TEXCOORD_11;
layout(location = 5, component = 1) out float TEXCOORD_12;
layout(location = 5, component = 2) out float TEXCOORD_13;
layout(location = 5, component = 3) out float TEXCOORD_15;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_15 = 0.0;
    float _185 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _206 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _208 = texelFetch(g_InstanceIndexBuffer, int(_206));
    uint _209 = _208.x;
    uint _219 = (floatBitsToUint(cbInstanceData._m0[(_209 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _226 = _219 + 1u;
    uint _233 = _219 + 2u;
    float _244 = fma(POSITION.z, cbObjMatrix._m0[_219].z, fma(POSITION.y, cbObjMatrix._m0[_219].y, cbObjMatrix._m0[_219].x * POSITION.x)) + cbObjMatrix._m0[_219].w;
    float _248 = fma(POSITION.z, cbObjMatrix._m0[_226].z, fma(POSITION.y, cbObjMatrix._m0[_226].y, cbObjMatrix._m0[_226].x * POSITION.x)) + cbObjMatrix._m0[_226].w;
    float _252 = fma(POSITION.z, cbObjMatrix._m0[_233].z, fma(POSITION.y, cbObjMatrix._m0[_233].y, cbObjMatrix._m0[_233].x * POSITION.x)) + cbObjMatrix._m0[_233].w;
    float _258 = cbSceneParam._m0[3u].x - _244;
    float _259 = cbSceneParam._m0[3u].y - _248;
    float _260 = cbSceneParam._m0[3u].z - _252;
    float _303 = (floatBitsToUint(cbSceneParam._m0[69u]).w != 0u) ? (1.0 - ((sqrt(((_258 * _258) + (_259 * _259)) + (_260 * _260)) + (-30.0)) * 0.002702702768146991729736328125)) : 0.0;
    float _306 = (_303 + (-0.930000007152557373046875)) * 12.0;
    float _337 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    POSITION_1.x = _244;
    POSITION_1.y = _248;
    POSITION_1.z = _252;
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_188, cbObjMatrix._m0[_219].z, fma(_187, cbObjMatrix._m0[_219].y, cbObjMatrix._m0[_219].x * _185));
    NORMAL_1.y = fma(_188, cbObjMatrix._m0[_226].z, fma(_187, cbObjMatrix._m0[_226].y, cbObjMatrix._m0[_226].x * _185));
    NORMAL_1.z = fma(_188, cbObjMatrix._m0[_233].z, fma(_187, cbObjMatrix._m0[_233].y, cbObjMatrix._m0[_233].x * _185));
    NORMAL_1.w = float(_209);
    TANGENT_1.x = fma(_200, cbObjMatrix._m0[_219].z, fma(_199, cbObjMatrix._m0[_219].y, cbObjMatrix._m0[_219].x * _198));
    TANGENT_1.y = fma(_200, cbObjMatrix._m0[_226].z, fma(_199, cbObjMatrix._m0[_226].y, cbObjMatrix._m0[_226].x * _198));
    TANGENT_1.z = fma(_200, cbObjMatrix._m0[_233].z, fma(_199, cbObjMatrix._m0[_233].y, cbObjMatrix._m0[_233].x * _198));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_11 = TEXCOORD_4.x;
    TEXCOORD_12 = TEXCOORD_4.y;
    TEXCOORD_13 = TEXCOORD_4.z;
    TEXCOORD_15 = (_303 * cbMtdParam._m0[13u].z) + ((isnan(1.0) ? _337 : (isnan(_337) ? 1.0 : min(_337, 1.0))) * cbMtdParam._m0[16u].y);
}


