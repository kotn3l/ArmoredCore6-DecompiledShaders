#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _277 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _287 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _277);
    float _288 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _277);
    float _289 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _277);
    float _306 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    vec4 _323 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_306 * cbMtdParam._m0[26u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_306 * cbMtdParam._m0[27u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _326 = _323.x;
    float _327 = _323.y;
    float _328 = _323.z;
    float _329 = _323.w;
    float _342 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _345 = (sqrt(((_287 * _287) + (_288 * _288)) + (_289 * _289)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _342 : (isnan(_342) ? 0.001000000047497451305389404296875 : max(_342, 0.001000000047497451305389404296875)));
    float _346 = _345 + 0.180000007152557373046875;
    float _348 = _346 * 12.0;
    float _4154 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _351 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
    vec4 _363 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _365 = _363.x;
    float _388 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _365)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _365))) - POSITION_1.w;
    float _389 = _388 / ((_351 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _4165 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
    float _391 = isnan(0.5) ? _390 : (isnan(_390) ? 0.5 : max(_390, 0.5));
    float _393 = 1.0 - _391;
    float _394 = _346 * 7.0;
    float _4181 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _396 = isnan(1.0) ? _4181 : (isnan(_4181) ? 1.0 : min(_4181, 1.0));
    float _407 = (_328 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _408 = (_328 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _422 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _306) + _407) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _306) + _408) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _424 = _422.x;
    float _446 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _407) + (cbMtdParam._m0[26u].y * _306)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _408) + (cbMtdParam._m0[26u].z * _306)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _449 = (isnan(_446) ? _424 : (isnan(_424) ? _446 : max(_424, _446))) - _396;
    float _4197 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _451 = _396 + 0.5;
    float _4208 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _464 = cbMtdParam._m0[17u].x * _306;
    float _465 = cos(_464);
    float _466 = sin(_464);
    vec4 _493 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_466 * cbMtdParam._m0[30u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_465 * cbMtdParam._m0[31u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _497 = _493.z;
    vec4 _509 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _306) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _306) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _513 = _509.z;
    float _516 = (isnan(_513) ? _497 : (isnan(_497) ? _513 : max(_497, _513))) * (isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0)));
    float _4224 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _517 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
    float _520 = (_393 - _329) + (isnan(_517) ? _450 : (isnan(_450) ? _517 : max(_450, _517)));
    float _4240 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
    float _522 = _521 * _391;
    float _4251 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _531 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _532 = _328 - _531;
    float _4262 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _533 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    vec4 _583 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _306) + (cbMtdParam._m0[30u].y * _466)) + (cbMtdParam._m0[34u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _306) + (cbMtdParam._m0[30u].z * _465)) + (cbMtdParam._m0[34u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _607 = cbMtdParam._m0[37u].z * TEXCOORD_5.x;
    float _669 = ((((((_583.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_493.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_509.w + (-0.5)))) + (((_607 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _306)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _306) * (cbMtdParam._m0[40u].z + _607)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _702 = 1.0 - _329;
    float _707 = ((isnan(0.550000011920928955078125) ? _702 : (isnan(_702) ? 0.550000011920928955078125 : max(_702, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _710 = ((TEXCOORD_5.y * (-0.5)) * _707) + _707;
    float _714 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _710) + _710;
    float _727 = (((_669 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * TEXCOORD_5.y)) * _328)) + ((texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * TEXCOORD.x) + (cbMtdParam._m0[22u].y * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * TEXCOORD.y) + (cbMtdParam._m0[22u].z * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _306) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _714;
    float _730 = (_727 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4283 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _731 = isnan(1.0) ? _4283 : (isnan(_4283) ? 1.0 : min(_4283, 1.0));
    float _740 = inversesqrt(dot(vec3(_287, _288, _289), vec3(_287, _288, _289)));
    float _744 = dot(vec4(_740 * _287, _740 * _288, _740 * _289, 0.0), vec4(_222, _223, _224, 0.0));
    float _4294 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _752 = exp2(log2((1.0 - (isnan(1.0) ? _4294 : (isnan(_4294) ? 1.0 : min(_4294, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _4305 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _753 = isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0));
    float _757 = ((_522 + cbMtdParam._m0[9u].x) + (_533 * cbMtdParam._m0[10u].x)) + ((_731 * cbMtdParam._m0[11u].x) * _753);
    float _758 = ((_522 + cbMtdParam._m0[9u].y) + (_533 * cbMtdParam._m0[10u].y)) + ((_731 * cbMtdParam._m0[11u].y) * _753);
    float _759 = ((_522 + cbMtdParam._m0[9u].z) + (_533 * cbMtdParam._m0[10u].z)) + ((_731 * cbMtdParam._m0[11u].z) * _753);
    float _4316 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _760 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
    float _4327 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _770 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
    float _773 = (_351 * (-0.87999999523162841796875)) * _770;
    float _776 = (((((1.0 - _757) - _760) * _531) + _757) + _770) + _773;
    float _779 = (((((1.0 - _758) - _760) * _531) + _758) + _770) + _773;
    float _782 = (((((1.0 - _759) - _760) * _531) + _759) + _770) + _773;
    float _783 = _328 * 0.01200000010430812835693359375;
    float _808 = (_328 * 0.300000011920928955078125) * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _306) + _783) + (cbMtdParam._m0[23u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _306) + _783) + (cbMtdParam._m0[24u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4338 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _809 = isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0));
    float _819 = (((1.0 - _776) * TEXCOORD_5.x) * _809) + _776;
    float _820 = (((1.0 - _779) * TEXCOORD_5.x) * _809) + _779;
    float _821 = (((1.0 - _782) * TEXCOORD_5.x) * _809) + _782;
    vec4 _857 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _306) + (cbMtdParam._m0[29u].w * _466)) + (cbMtdParam._m0[28u].w * _407)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _306) + (cbMtdParam._m0[30u].x * _465)) + (cbMtdParam._m0[29u].x * _408)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _860 = _857.y;
    float _870 = 1.0 - (_388 / cbMtdParam._m0[19u].x);
    float _874 = ((_857.x * TEXCOORD_8) * cbMtdParam._m0[18u].w) * (isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0)));
    float _877 = _860 * TEXCOORD_9;
    float _880 = ((isnan(cbMtdParam._m0[19u].y) ? _877 : (isnan(_877) ? cbMtdParam._m0[19u].y : max(_877, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _881 = isnan(_880) ? _874 : (isnan(_874) ? _880 : max(_874, _880));
    float _4364 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _882 = isnan(1.0) ? _4364 : (isnan(_4364) ? 1.0 : min(_4364, 1.0));
    float _889 = (_882 * (1.0 - _819)) + _819;
    float _890 = (_882 * (1.0 - _820)) + _820;
    float _891 = (_882 * (1.0 - _821)) + _821;
    float _924 = exp2(log2(cbMtdParam._m0[15u].z * _702) * cbMtdParam._m0[17u].y);
    float _4375 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _925 = isnan(1.0) ? _4375 : (isnan(_4375) ? 1.0 : min(_4375, 1.0));
    float _926 = _925 * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _306) + (cbMtdParam._m0[28u].y * _702)) + (cbMtdParam._m0[29u].y * _407)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _306) + (cbMtdParam._m0[28u].z * _702)) + (cbMtdParam._m0[29u].z * _408)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _929 = ((_925 - _926) * cbMtdParam._m0[18u].x) + _926;
    float _933 = _396 * TEXCOORD_10;
    float _940 = ((_933 * (1.0 - _889)) * _929) + _889;
    float _941 = ((_933 * (1.0 - _890)) * _929) + _890;
    float _942 = ((_933 * (1.0 - _891)) * _929) + _891;
    float _946 = 1.0 - (_388 / cbMtdParam._m0[18u].y);
    float _952 = (cbMtdParam._m0[18u].z * _860) * (isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0)));
    float _956 = (_952 * (1.0 - _940)) + _940;
    float _957 = (_952 * (1.0 - _941)) + _941;
    float _958 = (_952 * (1.0 - _942)) + _942;
    float _963 = _345 / cbMtdParam._m0[15u].x;
    float _4391 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _966 = (1.0 - (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0)))) * cbMtdParam._m0[14u].w;
    float _970 = _345 + 0.20000000298023223876953125;
    float _972 = _970 * 9.0;
    float _4402 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _977 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0)))) + cbMtdParam._m0[12u].x;
    float _980 = (_345 + 0.099999986588954925537109375) * 2.5;
    float _4413 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _985 = ((cbMtdParam._m0[14u].z - _977) * (isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0)))) + _977;
    float _986 = _956 + _521;
    float _4424 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _991 = ((0.3499999940395355224609375 - _985) * (isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0)))) + _985;
    float _992 = TEXCOORD_5.z * 0.5;
    float _1004 = (_345 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4435 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1009 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0)))) + cbMtdParam._m0[20u].y;
    float _1014 = (_1009 * (_326 + (-0.5))) + 0.5;
    float _1015 = (_1009 * (_327 + (-0.5))) + 0.5;
    float _4446 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1016 = isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0));
    vec4 _1048 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[25u].w * TEXCOORD.z) + (cbMtdParam._m0[31u].w * _306)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].x * TEXCOORD.w) + (cbMtdParam._m0[32u].x * _306)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1056 = ((_509.x + (-0.5)) * 0.5) + _493.x;
    float _1057 = ((_509.y + (-0.5)) * 0.5) + _493.y;
    vec4 _1079 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * TEXCOORD.x) + (cbMtdParam._m0[24u].w * _306)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * TEXCOORD.y) + (cbMtdParam._m0[25u].x * _306)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1086 = _970 * 12.0;
    float _4457 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1088 = 1.0 - (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0)));
    float _1102 = cbMtdParam._m0[33u].y * TEXCOORD.x;
    float _1103 = cbMtdParam._m0[33u].z * TEXCOORD.y;
    vec4 _1116 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1102 + (cbMtdParam._m0[32u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1103 + (cbMtdParam._m0[33u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1137 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1102 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _533)) + (cbMtdParam._m0[33u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1103 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _533)) + (cbMtdParam._m0[34u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1151 = (((0.5 - _1056) * 0.10999999940395355224609375) + _1056) + (((((((_1079.z + (-0.5)) * cbMtdParam._m0[15u].w) * _1088) + (-1.0)) + _1116.x) + _1137.x) * cbMtdParam._m0[15u].y);
    float _1152 = (((0.5 - _1057) * 0.10999999940395355224609375) + _1057) + (((((((_1079.w + (-0.5)) * cbMtdParam._m0[15u].w) * _1088) + (-1.0)) + _1116.y) + _1137.y) * cbMtdParam._m0[15u].y);
    float _1157 = ((_1048.x - _1151) * _345) + _1151;
    float _1158 = ((_1048.y - _1152) * _345) + _1152;
    float _1159 = _345 * 0.5;
    float _4468 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1160 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
    float _1173 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _714);
    float _1182 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * TEXCOORD_5.y);
    float _1184 = _1182 - (_1182 * _1160);
    float _1188 = (((((((0.5 - _326) * 0.60000002384185791015625) + _326) - _1014) * _1016) + _1014) + (_1184 * (_583.x + (-0.5)))) + (((_1157 + (-0.5)) + ((0.5 - _1157) * _1160)) * _1173);
    float _1190 = (((((((0.5 - _327) * 0.60000002384185791015625) + _327) - _1015) * _1016) + _1015) + (_1184 * (_583.y + (-0.5)))) + (((_1158 + (-0.5)) + ((0.5 - _1158) * _1160)) * _1173);
    float _1200 = (((_992 * (0.5 - _1188)) + _1188) * 2.0) + (-1.0);
    float _1201 = (((_992 * (0.5 - _1190)) + _1190) * 2.0) + (-1.0);
    float _1202 = dot(vec2(_1200, _1201), vec2(_1200, _1201));
    float _4479 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
    float _1207 = sqrt(1.0 - (isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))));
    float _1209 = _970 * 6.0;
    float _4490 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _1212 = cbMtdParam._m0[16u].x * (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0)));
    float _4501 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _1213 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
    float _1216 = ((1.0 - _1213) * _986) + _1213;
    uint _1232 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1233 = _1232 + 5u;
    float _1244 = (-0.0) - _287;
    float _1245 = (-0.0) - _288;
    float _1246 = (-0.0) - _289;
    float _1250 = inversesqrt(dot(vec3(_1244, _1245, _1246), vec3(_1244, _1245, _1246)));
    float _1254 = dot(vec3(_1250 * _1244, _1250 * _1245, _1250 * _1246), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1233]).x * 14u].xyz));
    float _1264 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1254 * 0.60000002384185791015625)) * 1.5);
    float _1277 = ((((0.959999978542327880859375 / exp2(log2((_1254 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1264) * 0.5) + _1264) * 0.079577468335628509521484375;
    float _1281 = fma(_1207, _222, fma(_1201, _228 * TANGENT.x, _1200 * _215));
    float _1284 = fma(_1207, _223, fma(_1201, _228 * TANGENT.y, _1200 * _216));
    float _1287 = fma(_1207, _224, fma(_1201, _228 * TANGENT.z, _1200 * _217));
    float _1291 = inversesqrt(dot(vec3(_1281, _1284, _1287), vec3(_1281, _1284, _1287)));
    float _1292 = _1291 * _1281;
    float _1293 = _1291 * _1284;
    float _1294 = _1291 * _1287;
    float _4512 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _4523 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _1296 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _4534 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _4545 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _4556 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _1311 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1351 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1360 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1351);
    float _1361 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1351);
    float _1362 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1351);
    float _1366 = inversesqrt(dot(vec3(_1360, _1361, _1362), vec3(_1360, _1361, _1362)));
    float _1367 = _1360 * _1366;
    float _1368 = _1361 * _1366;
    float _1369 = _1362 * _1366;
    float _1374 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1375 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1395 = fma(_1294, cbSceneParam._m0[5u].z, fma(_1293, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1292));
    float _1398 = fma(_1294, cbSceneParam._m0[6u].z, fma(_1293, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1292));
    float _1401 = fma(_1294, cbSceneParam._m0[7u].z, fma(_1293, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1292));
    uint _1415 = (_1232 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1421 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0)))) * cbInstanceData._m0[_1415].x;
    float _1422 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * cbInstanceData._m0[_1415].y;
    float _1423 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0)))) * cbInstanceData._m0[_1415].z;
    float _4567 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    float _1424 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
    float _4578 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _1425 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
    float _4589 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
    float _1426 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
    vec4 _1435 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1374, cbSceneParam._m0[86u].y * _1375));
    float _1438 = _1435.x * TEXCOORD_5.w;
    float _1442 = abs(dot(vec3(_1367, _1368, _1369), vec3(_1292, _1293, _1294)));
    float _4600 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
    float _1448 = exp2(log2(1.0 - (isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0)))) * 5.0);
    float _1449 = cbMtdParam._m0[16u].z + (-0.039999999105930328369140625);
    float _4611 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
    float _1452 = (isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * _1448;
    float _1453 = _1452 + 0.039999999105930328369140625;
    float _1457 = 10.0 / (_1311 + 10.0);
    vec4 _1472 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1457 * cbMtdParam._m0[19u].w) * dot(vec3(_1292, _1293, _1294), vec3(1.0, 0.0, 0.0))) + (_1374 / cbSceneParam._m0[86u].x), 1.0 - (_1375 / cbSceneParam._m0[86u].y)));
    float _1508 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1512 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1516 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1812;
    float _1813;
    float _1814;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1541 = fma(_1516, cbModelParam._m0[26u].z, fma(_1512, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1508));
        float _1545 = fma(_1516, cbModelParam._m0[27u].z, fma(_1512, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1508));
        float _1549 = fma(_1516, cbModelParam._m0[28u].z, fma(_1512, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1508));
        float _1571 = _1508 + _1292;
        float _1572 = _1512 + _1293;
        float _1573 = _1516 + _1294;
        float _1583 = fma(_1573, cbModelParam._m0[26u].z, fma(_1572, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1571)) - _1541;
        float _1584 = fma(_1573, cbModelParam._m0[27u].z, fma(_1572, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1571)) - _1545;
        float _1585 = fma(_1573, cbModelParam._m0[28u].z, fma(_1572, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1571)) - _1549;
        float _1589 = inversesqrt(dot(vec3(_1583, _1584, _1585), vec3(_1583, _1584, _1585)));
        float _1601 = ((_1589 * _1583) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1541 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1602 = ((_1589 * _1584) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1545 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1603 = ((_1589 * _1585) / cbModelParam._m0[34u].z) + ((((((_1549 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1606 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1601, _1602, _1603), 0.0);
        vec4 _1613 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1601, _1602, _1603), 0.0);
        vec4 _1620 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1601, _1602, _1603), 0.0);
        vec4 _1627 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1601, _1602, _1603), 0.0);
        float _1640 = exp2((_1606.w + (-0.5)) * 20.0) * 2.0;
        float _1647 = exp2((_1613.w + (-0.5)) * 20.0) * 2.0;
        float _1654 = exp2((_1620.w + (-0.5)) * 20.0) * 2.0;
        float _1661 = exp2((_1627.w + (-0.5)) * 20.0) * 2.0;
        float _1662 = _1661 * (_1627.x + (-0.5));
        float _1663 = _1661 * (_1627.y + (-0.5));
        float _1664 = _1661 * (_1627.z + (-0.5));
        float _1665 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1666 = isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0));
        float _1667 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
        float _1669 = ((_1606.x + (-0.5)) * 0.5) * _1640;
        float _1671 = ((_1613.x + (-0.5)) * 0.5) * _1647;
        float _1673 = ((_1620.x + (-0.5)) * 0.5) * _1654;
        float _1674 = dot(vec3(_1669, _1671, _1673), vec3(_1669, _1671, _1673));
        float _1679 = (_1674 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1674);
        float _1688 = (dot(vec3(_1292, _1293, _1294), vec3(_1679 * _1669, _1679 * _1671, _1679 * _1673)) + 1.0) * 0.5;
        float _4637 = isnan(0.0) ? _1688 : (isnan(_1688) ? 0.0 : max(_1688, 0.0));
        float _1698 = sqrt(((_1671 * _1671) + (_1669 * _1669)) + (_1673 * _1673)) / (_1665 + 9.9999997473787516355514526367188e-06);
        float _4648 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        float _1699 = isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0));
        float _1700 = _1699 * 2.0;
        float _1704 = (1.0 - _1699) / (_1699 + 1.0);
        float _4659 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1705 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
        float _1714 = ((((1.0 - _1705) * (_1700 + 2.0)) * exp2(log2(isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0))) * (_1700 + 1.0))) + _1705) * _1665;
        float _1716 = ((_1606.y + (-0.5)) * 0.5) * _1640;
        float _1718 = ((_1613.y + (-0.5)) * 0.5) * _1647;
        float _1720 = ((_1620.y + (-0.5)) * 0.5) * _1654;
        float _1721 = dot(vec3(_1716, _1718, _1720), vec3(_1716, _1718, _1720));
        float _1726 = (_1721 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1721);
        float _1734 = (dot(vec3(_1292, _1293, _1294), vec3(_1726 * _1716, _1726 * _1718, _1726 * _1720)) + 1.0) * 0.5;
        float _4670 = isnan(0.0) ? _1734 : (isnan(_1734) ? 0.0 : max(_1734, 0.0));
        float _1743 = sqrt(((_1718 * _1718) + (_1716 * _1716)) + (_1720 * _1720)) / (_1666 + 9.9999997473787516355514526367188e-06);
        float _4681 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
        float _1745 = _1744 * 2.0;
        float _1749 = (1.0 - _1744) / (_1744 + 1.0);
        float _4692 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
        float _1750 = isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0));
        float _1759 = ((((1.0 - _1750) * (_1745 + 2.0)) * exp2(log2(isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0))) * (_1745 + 1.0))) + _1750) * _1666;
        float _1761 = ((_1606.z + (-0.5)) * 0.5) * _1640;
        float _1763 = ((_1613.z + (-0.5)) * 0.5) * _1647;
        float _1765 = ((_1620.z + (-0.5)) * 0.5) * _1654;
        float _1766 = dot(vec3(_1761, _1763, _1765), vec3(_1761, _1763, _1765));
        float _1771 = (_1766 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1766);
        float _1779 = (dot(vec3(_1292, _1293, _1294), vec3(_1771 * _1761, _1771 * _1763, _1771 * _1765)) + 1.0) * 0.5;
        float _4703 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1788 = sqrt(((_1763 * _1763) + (_1761 * _1761)) + (_1765 * _1765)) / (_1667 + 9.9999997473787516355514526367188e-06);
        float _4714 = isnan(0.0) ? _1788 : (isnan(_1788) ? 0.0 : max(_1788, 0.0));
        float _1789 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
        float _1790 = _1789 * 2.0;
        float _1794 = (1.0 - _1789) / (_1789 + 1.0);
        float _4725 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1795 = isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0));
        float _1804 = ((((1.0 - _1795) * (_1790 + 2.0)) * exp2(log2(isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0))) * (_1790 + 1.0))) + _1795) * _1667;
        _1812 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0)));
        _1813 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1759 : (isnan(_1759) ? 0.0 : max(_1759, 0.0)));
        _1814 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)));
    }
    else
    {
        _1812 = 0.0;
        _1813 = 0.0;
        _1814 = 0.0;
    }
    float _2104;
    float _2105;
    float _2106;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1837 = fma(_1516, cbModelParam._m0[30u].z, fma(_1512, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1508));
        float _1841 = fma(_1516, cbModelParam._m0[31u].z, fma(_1512, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1508));
        float _1845 = fma(_1516, cbModelParam._m0[32u].z, fma(_1512, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1508));
        float _1867 = _1508 + _1292;
        float _1868 = _1512 + _1293;
        float _1869 = _1516 + _1294;
        float _1879 = fma(_1869, cbModelParam._m0[30u].z, fma(_1868, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1867)) - _1837;
        float _1880 = fma(_1869, cbModelParam._m0[31u].z, fma(_1868, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1867)) - _1841;
        float _1881 = fma(_1869, cbModelParam._m0[32u].z, fma(_1868, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1867)) - _1845;
        float _1885 = inversesqrt(dot(vec3(_1879, _1880, _1881), vec3(_1879, _1880, _1881)));
        float _1897 = ((_1885 * _1879) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1837 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1898 = ((_1885 * _1880) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1841 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1899 = ((_1885 * _1881) / cbModelParam._m0[35u].z) + ((((((_1845 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1901 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1897, _1898, _1899), 0.0);
        vec4 _1908 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1897, _1898, _1899), 0.0);
        vec4 _1915 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1897, _1898, _1899), 0.0);
        vec4 _1922 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1897, _1898, _1899), 0.0);
        float _1934 = exp2((_1901.w + (-0.5)) * 20.0) * 2.0;
        float _1941 = exp2((_1908.w + (-0.5)) * 20.0) * 2.0;
        float _1948 = exp2((_1915.w + (-0.5)) * 20.0) * 2.0;
        float _1955 = exp2((_1922.w + (-0.5)) * 20.0) * 2.0;
        float _1956 = _1955 * (_1922.x + (-0.5));
        float _1957 = _1955 * (_1922.y + (-0.5));
        float _1958 = _1955 * (_1922.z + (-0.5));
        float _1959 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
        float _1960 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0));
        float _1961 = isnan(0.0) ? _1958 : (isnan(_1958) ? 0.0 : max(_1958, 0.0));
        float _1963 = ((_1901.x + (-0.5)) * 0.5) * _1934;
        float _1965 = ((_1908.x + (-0.5)) * 0.5) * _1941;
        float _1967 = ((_1915.x + (-0.5)) * 0.5) * _1948;
        float _1968 = dot(vec3(_1963, _1965, _1967), vec3(_1963, _1965, _1967));
        float _1973 = (_1968 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1968);
        float _1981 = (dot(vec3(_1292, _1293, _1294), vec3(_1973 * _1963, _1973 * _1965, _1973 * _1967)) + 1.0) * 0.5;
        float _4766 = isnan(0.0) ? _1981 : (isnan(_1981) ? 0.0 : max(_1981, 0.0));
        float _1990 = sqrt(((_1965 * _1965) + (_1963 * _1963)) + (_1967 * _1967)) / (_1959 + 9.9999997473787516355514526367188e-06);
        float _4777 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
        float _1991 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
        float _1992 = _1991 * 2.0;
        float _1996 = (1.0 - _1991) / (_1991 + 1.0);
        float _4788 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _1997 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
        float _2006 = ((((1.0 - _1997) * (_1992 + 2.0)) * exp2(log2(isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0))) * (_1992 + 1.0))) + _1997) * _1959;
        float _2008 = ((_1901.y + (-0.5)) * 0.5) * _1934;
        float _2010 = ((_1908.y + (-0.5)) * 0.5) * _1941;
        float _2012 = ((_1915.y + (-0.5)) * 0.5) * _1948;
        float _2013 = dot(vec3(_2008, _2010, _2012), vec3(_2008, _2010, _2012));
        float _2018 = (_2013 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2013);
        float _2026 = (dot(vec3(_1292, _1293, _1294), vec3(_2018 * _2008, _2018 * _2010, _2018 * _2012)) + 1.0) * 0.5;
        float _4799 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
        float _2035 = sqrt(((_2010 * _2010) + (_2008 * _2008)) + (_2012 * _2012)) / (_1960 + 9.9999997473787516355514526367188e-06);
        float _4810 = isnan(0.0) ? _2035 : (isnan(_2035) ? 0.0 : max(_2035, 0.0));
        float _2036 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
        float _2037 = _2036 * 2.0;
        float _2041 = (1.0 - _2036) / (_2036 + 1.0);
        float _4821 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2042 = isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0));
        float _2051 = ((((1.0 - _2042) * (_2037 + 2.0)) * exp2(log2(isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0))) * (_2037 + 1.0))) + _2042) * _1960;
        float _2053 = ((_1901.z + (-0.5)) * 0.5) * _1934;
        float _2055 = ((_1908.z + (-0.5)) * 0.5) * _1941;
        float _2057 = ((_1915.z + (-0.5)) * 0.5) * _1948;
        float _2058 = dot(vec3(_2053, _2055, _2057), vec3(_2053, _2055, _2057));
        float _2063 = (_2058 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2058);
        float _2071 = (dot(vec3(_1292, _1293, _1294), vec3(_2063 * _2053, _2063 * _2055, _2063 * _2057)) + 1.0) * 0.5;
        float _4832 = isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0));
        float _2080 = sqrt(((_2055 * _2055) + (_2053 * _2053)) + (_2057 * _2057)) / (_1961 + 9.9999997473787516355514526367188e-06);
        float _4843 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
        float _2081 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
        float _2082 = _2081 * 2.0;
        float _2086 = (1.0 - _2081) / (_2081 + 1.0);
        float _4854 = isnan(0.0) ? _2086 : (isnan(_2086) ? 0.0 : max(_2086, 0.0));
        float _2087 = isnan(1.0) ? _4854 : (isnan(_4854) ? 1.0 : min(_4854, 1.0));
        float _2096 = ((((1.0 - _2087) * (_2082 + 2.0)) * exp2(log2(isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0))) * (_2082 + 1.0))) + _2087) * _1961;
        _2104 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0)));
        _2105 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0)));
        _2106 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2096 : (isnan(_2096) ? 0.0 : max(_2096, 0.0)));
    }
    else
    {
        _2104 = 0.0;
        _2105 = 0.0;
        _2106 = 0.0;
    }
    float _2116 = (cbModelParam._m0[1u].x * (_2104 - _1812)) + _1812;
    float _2117 = (cbModelParam._m0[1u].x * (_2105 - _1813)) + _1813;
    float _2118 = (cbModelParam._m0[1u].x * (_2106 - _1814)) + _1814;
    float _2139 = fma(_2118, cbSceneParam._m0[89u].z, fma(_2117, cbSceneParam._m0[89u].y, _2116 * cbSceneParam._m0[89u].x));
    float _2142 = fma(_2118, cbSceneParam._m0[90u].z, fma(_2117, cbSceneParam._m0[90u].y, _2116 * cbSceneParam._m0[90u].x));
    float _2145 = fma(_2118, cbSceneParam._m0[91u].z, fma(_2117, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2116));
    float _2150 = (0.959999978542327880859375 - _1452) * _1438;
    float _2181 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2185 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2189 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2193 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2194 = _2181 / _2193;
    float _2195 = _2185 / _2193;
    float _2196 = _2189 / _2193;
    float _2329;
    float _2330;
    float _2331;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2213 = ((uint(_2196 > cbSceneParam._m0[59u].y) + uint(_2196 > cbSceneParam._m0[59u].x)) + uint(_2196 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2214 = _2213 + 43u;
        uint _2221 = _2213 + 44u;
        uint _2228 = _2213 + 45u;
        uint _2235 = _2213 + 46u;
        float _2246 = fma(_2193, cbSceneParam._m0[_2214].w, fma(_2189, cbSceneParam._m0[_2214].z, fma(_2185, cbSceneParam._m0[_2214].y, _2181 * cbSceneParam._m0[_2214].x)));
        float _2250 = fma(_2193, cbSceneParam._m0[_2221].w, fma(_2189, cbSceneParam._m0[_2221].z, fma(_2185, cbSceneParam._m0[_2221].y, _2181 * cbSceneParam._m0[_2221].x)));
        float _2258 = fma(_2193, cbSceneParam._m0[_2235].w, fma(_2189, cbSceneParam._m0[_2235].z, fma(_2185, cbSceneParam._m0[_2235].y, _2181 * cbSceneParam._m0[_2235].x)));
        float _2262 = cbSceneParam._m0[33u].z * _2258;
        float _2264 = cbSceneParam._m0[33u].w * _2258;
        float _2267 = fma(_2193, cbSceneParam._m0[_2228].w, fma(_2189, cbSceneParam._m0[_2228].z, fma(_2185, cbSceneParam._m0[_2228].y, _2181 * cbSceneParam._m0[_2228].x))) / _2258;
        float _2315 = (cbSceneParam._m0[33u].x - sqrt(((_2195 * _2195) + (_2194 * _2194)) + (_2196 * _2196))) * cbSceneParam._m0[33u].y;
        float _4895 = isnan(0.0) ? _2315 : (isnan(_2315) ? 0.0 : max(_2315, 0.0));
        float _2322 = (isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2262 + _2246) / _2258, (_2264 + _2250) / _2258), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2264 + _2246) / _2258, (_2250 - _2262) / _2258), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2246 - _2262) / _2258, (_2250 - _2264) / _2258), _2267), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2246 - _2264) / _2258, (_2262 + _2250) / _2258), _2267), 0.0)).x), vec4(0.25)));
        _2329 = 1.0 - (_2322 * cbSceneParam._m0[34u].x);
        _2330 = 1.0 - (_2322 * cbSceneParam._m0[34u].y);
        _2331 = 1.0 - (_2322 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2329 = 1.0;
        _2330 = 1.0;
        _2331 = 1.0;
    }
    float _2387;
    float _2389;
    float _2391;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2375 = fma(_2193, cbSceneParam._m0[63u].w, fma(_2189, cbSceneParam._m0[63u].z, fma(_2185, cbSceneParam._m0[63u].y, _2181 * cbSceneParam._m0[63u].x)));
        float _2376 = fma(_2193, cbSceneParam._m0[60u].w, fma(_2189, cbSceneParam._m0[60u].z, fma(_2185, cbSceneParam._m0[60u].y, _2181 * cbSceneParam._m0[60u].x))) / _2375;
        float _2377 = fma(_2193, cbSceneParam._m0[61u].w, fma(_2189, cbSceneParam._m0[61u].z, fma(_2185, cbSceneParam._m0[61u].y, _2181 * cbSceneParam._m0[61u].x))) / _2375;
        float frontier_phi_8_7_ladder;
        float frontier_phi_8_7_ladder_1;
        float frontier_phi_8_7_ladder_2;
        if ((((_2376 >= cbSceneParam._m0[64u].x) && (_2377 >= cbSceneParam._m0[64u].y)) && (_2376 <= cbSceneParam._m0[64u].z)) && (_2377 <= cbSceneParam._m0[64u].w))
        {
            float _2482 = fma(_2193, cbSceneParam._m0[62u].w, fma(_2189, cbSceneParam._m0[62u].z, fma(_2185, cbSceneParam._m0[62u].y, _2181 * cbSceneParam._m0[62u].x))) / _2375;
            float _2486 = isnan(cbSceneParam._m0[41u].w) ? _2482 : (isnan(_2482) ? cbSceneParam._m0[41u].w : max(_2482, cbSceneParam._m0[41u].w));
            float _2529 = (cbSceneParam._m0[33u].x - sqrt(((_2195 * _2195) + (_2194 * _2194)) + (_2196 * _2196))) * cbSceneParam._m0[33u].y;
            float _4911 = isnan(0.0) ? _2529 : (isnan(_2529) ? 0.0 : max(_2529, 0.0));
            float _2536 = (isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2376, cbSceneParam._m0[33u].w + _2377), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2376, _2377 - cbSceneParam._m0[33u].z), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2376 - cbSceneParam._m0[33u].z, _2377 - cbSceneParam._m0[33u].w), _2486), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2376 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2377), _2486), 0.0)).x), vec4(0.25)));
            float _2540 = 1.0 - (_2536 * cbSceneParam._m0[34u].x);
            float _2541 = 1.0 - (_2536 * cbSceneParam._m0[34u].y);
            float _2542 = 1.0 - (_2536 * cbSceneParam._m0[34u].z);
            frontier_phi_8_7_ladder = isnan(_2542) ? _2331 : (isnan(_2331) ? _2542 : min(_2331, _2542));
            frontier_phi_8_7_ladder_1 = isnan(_2541) ? _2330 : (isnan(_2330) ? _2541 : min(_2330, _2541));
            frontier_phi_8_7_ladder_2 = isnan(_2540) ? _2329 : (isnan(_2329) ? _2540 : min(_2329, _2540));
        }
        else
        {
            frontier_phi_8_7_ladder = _2331;
            frontier_phi_8_7_ladder_1 = _2330;
            frontier_phi_8_7_ladder_2 = _2329;
        }
        _2387 = frontier_phi_8_7_ladder_2;
        _2389 = frontier_phi_8_7_ladder_1;
        _2391 = frontier_phi_8_7_ladder;
    }
    else
    {
        _2387 = _2329;
        _2389 = _2330;
        _2391 = _2331;
    }
    uvec4 _2395 = floatBitsToUint(cbInstanceData._m0[_1233]);
    uint _2397 = _2395.x * 14u;
    uint _2398 = _2397 + 13u;
    float _2405 = _1438 + (-1.0);
    float _2410 = (cbLight._m0[_2398].x * _2405) + 1.0;
    float _2411 = (cbLight._m0[_2398].y * _2405) + 1.0;
    float _2412 = (cbLight._m0[_2398].z * _2405) + 1.0;
    float _2413 = (cbLight._m0[_2398].w * _2405) + 1.0;
    uint _2414 = _2397 + 5u;
    float _2420 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
    uint _2424 = _2397 + 4u;
    float _2433 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
    uint _2437 = _2397 | 1u;
    float _2448 = dot(vec3(cbLight._m0[_2397].xyz), vec3(_1292, _1293, _1294));
    float _2451 = dot(vec3(cbLight._m0[_2437].xyz), vec3(_1292, _1293, _1294));
    float _4947 = isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0));
    float _4958 = isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0));
    float _2456 = (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0))) * 0.3183098733425140380859375;
    float _2458 = (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * 0.3183098733425140380859375;
    float _2465 = ((cbLight._m0[_2414].x * _2420) * _2458) + (((cbLight._m0[_2424].x * _2387) * _2433) * _2456);
    float _2466 = ((_2420 * cbLight._m0[_2414].y) * _2458) + (((cbLight._m0[_2424].y * _2389) * _2433) * _2456);
    float _2467 = ((_2420 * cbLight._m0[_2414].z) * _2458) + (((cbLight._m0[_2424].z * _2391) * _2433) * _2456);
    uvec4 _2471 = floatBitsToUint(cbLight._m0[_2397 + 12u]);
    bool _2473 = _2471.x == 0u;
    float _2543;
    float _2545;
    float _2547;
    if (_2473)
    {
        _2543 = _2465;
        _2545 = _2466;
        _2547 = _2467;
    }
    else
    {
        uint _2551 = _2397 + 6u;
        float _2567 = (dot(vec3(cbLight._m0[_2397 + 2u].xyz), vec3(_1292, _1293, _1294)) * 0.5) + 0.5;
        float _2568 = _2567 * _2567;
        float _4969 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
        float _2569 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
        float _2570 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2543 = (((cbLight._m0[_2551].x * 0.3183098733425140380859375) * _2569) * _2570) + _2465;
        _2545 = (((cbLight._m0[_2551].y * 0.3183098733425140380859375) * _2569) * _2570) + _2466;
        _2547 = (((cbLight._m0[_2551].z * 0.3183098733425140380859375) * _2569) * _2570) + _2467;
    }
    bool _2550 = _2471.y == 0u;
    float _2580;
    float _2582;
    float _2584;
    if (_2550)
    {
        _2580 = _2543;
        _2582 = _2545;
        _2584 = _2547;
    }
    else
    {
        uint _2744 = _2397 + 7u;
        float _2760 = (dot(vec3(cbLight._m0[_2397 + 3u].xyz), vec3(_1292, _1293, _1294)) * 0.5) + 0.5;
        float _2761 = _2760 * _2760;
        float _4985 = isnan(0.0) ? _2761 : (isnan(_2761) ? 0.0 : max(_2761, 0.0));
        float _2762 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
        float _2763 = isnan(1.0) ? _2413 : (isnan(_2413) ? 1.0 : min(_2413, 1.0));
        _2580 = (((cbLight._m0[_2744].x * 0.3183098733425140380859375) * _2762) * _2763) + _2543;
        _2582 = (((cbLight._m0[_2744].y * 0.3183098733425140380859375) * _2762) * _2763) + _2545;
        _2584 = (((cbLight._m0[_2744].z * 0.3183098733425140380859375) * _2762) * _2763) + _2547;
    }
    uint _2587 = _2397 + 8u;
    float _2600 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2397].w)) * _1296) * 0.949999988079071044921875);
    float _2601 = _2600 * _2600;
    float _2602 = cbLight._m0[_2397].x + _1367;
    float _2603 = cbLight._m0[_2397].y + _1368;
    float _2604 = cbLight._m0[_2397].z + _1369;
    float _2608 = inversesqrt(dot(vec3(_2602, _2603, _2604), vec3(_2602, _2603, _2604)));
    float _2609 = _2608 * _2602;
    float _2610 = _2608 * _2603;
    float _2611 = _2608 * _2604;
    float _2612 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2397].xyz));
    float _5001 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0));
    float _2615 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
    float _2616 = dot(vec3(_1292, _1293, _1294), vec3(_1367, _1368, _1369));
    float _5012 = isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0));
    float _2619 = isnan(1.0) ? _5012 : (isnan(_5012) ? 1.0 : min(_5012, 1.0));
    float _2620 = dot(vec3(_1292, _1293, _1294), vec3(_2609, _2610, _2611));
    float _5023 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2623 = isnan(1.0) ? _5023 : (isnan(_5023) ? 1.0 : min(_5023, 1.0));
    float _2624 = dot(vec3(cbLight._m0[_2397].xyz), vec3(_2609, _2610, _2611));
    float _5034 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
    float _2628 = _2601 * _2601;
    float _2632 = ((_2623 * _2623) * (_2628 + (-1.0))) + 1.0;
    float _2642 = (exp2(log2(1.0 - (isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2643 = 1.0 - _2601;
    float _2654 = (0.5 / (((_2619 * ((_2615 * _2643) + _2601)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2643) + _2601) * _2615))) * _2615;
    float _5045 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
    float _2656 = (isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0))) * (_2628 / ((_2632 * _2632) * 3.141590118408203125));
    uint _2670 = _2397 + 9u;
    float _2681 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2437].w)) * _1296) * 0.949999988079071044921875);
    float _2682 = _2681 * _2681;
    float _2683 = cbLight._m0[_2437].x + _1367;
    float _2684 = cbLight._m0[_2437].y + _1368;
    float _2685 = cbLight._m0[_2437].z + _1369;
    float _2689 = inversesqrt(dot(vec3(_2683, _2684, _2685), vec3(_2683, _2684, _2685)));
    float _2690 = _2689 * _2683;
    float _2691 = _2689 * _2684;
    float _2692 = _2689 * _2685;
    float _2693 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2437].xyz));
    float _5056 = isnan(0.0) ? _2693 : (isnan(_2693) ? 0.0 : max(_2693, 0.0));
    float _2696 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
    float _2697 = dot(vec3(_1292, _1293, _1294), vec3(_2690, _2691, _2692));
    float _5067 = isnan(0.0) ? _2697 : (isnan(_2697) ? 0.0 : max(_2697, 0.0));
    float _2700 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
    float _2701 = dot(vec3(cbLight._m0[_2437].xyz), vec3(_2690, _2691, _2692));
    float _5078 = isnan(0.0) ? _2701 : (isnan(_2701) ? 0.0 : max(_2701, 0.0));
    float _2705 = _2682 * _2682;
    float _2709 = ((_2700 * _2700) * (_2705 + (-1.0))) + 1.0;
    float _2718 = (exp2(log2(1.0 - (isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2719 = 1.0 - _2682;
    float _2729 = (0.5 / (((_2619 * ((_2696 * _2719) + _2682)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2719) + _2682) * _2696))) * _2696;
    float _5089 = isnan(0.0) ? _2729 : (isnan(_2729) ? 0.0 : max(_2729, 0.0));
    float _2731 = (isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0))) * (_2705 / ((_2709 * _2709) * 3.141590118408203125));
    float _2741 = (((_2718 * cbLight._m0[_2670].x) * _2731) * _2420) + ((((cbLight._m0[_2587].x * _2387) * _2642) * _2656) * _2433);
    float _2742 = (((_2718 * cbLight._m0[_2670].y) * _2731) * _2420) + ((((cbLight._m0[_2587].y * _2389) * _2642) * _2656) * _2433);
    float _2743 = (((_2718 * cbLight._m0[_2670].z) * _2731) * _2420) + ((((cbLight._m0[_2587].z * _2391) * _2642) * _2656) * _2433);
    float _2773;
    float _2775;
    float _2777;
    if (_2473)
    {
        _2773 = _2741;
        _2775 = _2742;
        _2777 = _2743;
    }
    else
    {
        uint _2779 = _2397 + 2u;
        uint _2783 = _2397 + 10u;
        float _2797 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2779].w)) * _1296) * 0.949999988079071044921875);
        float _2798 = _2797 * _2797;
        float _2799 = cbLight._m0[_2779].x + _1367;
        float _2800 = cbLight._m0[_2779].y + _1368;
        float _2801 = cbLight._m0[_2779].z + _1369;
        float _2805 = inversesqrt(dot(vec3(_2799, _2800, _2801), vec3(_2799, _2800, _2801)));
        float _2806 = _2805 * _2799;
        float _2807 = _2805 * _2800;
        float _2808 = _2805 * _2801;
        float _2809 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2779].xyz));
        float _5100 = isnan(0.0) ? _2809 : (isnan(_2809) ? 0.0 : max(_2809, 0.0));
        float _2812 = isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0));
        float _2813 = dot(vec3(_1292, _1293, _1294), vec3(_2806, _2807, _2808));
        float _5111 = isnan(0.0) ? _2813 : (isnan(_2813) ? 0.0 : max(_2813, 0.0));
        float _2816 = isnan(1.0) ? _5111 : (isnan(_5111) ? 1.0 : min(_5111, 1.0));
        float _2817 = dot(vec3(cbLight._m0[_2779].xyz), vec3(_2806, _2807, _2808));
        float _5122 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
        float _2821 = _2798 * _2798;
        float _2825 = ((_2816 * _2816) * (_2821 + (-1.0))) + 1.0;
        float _2834 = (exp2(log2(1.0 - (isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2835 = 1.0 - _2798;
        float _2845 = (0.5 / (((_2619 * ((_2812 * _2835) + _2798)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2835) + _2798) * _2812))) * _2812;
        float _5133 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
        float _2847 = (isnan(1.0) ? _5133 : (isnan(_5133) ? 1.0 : min(_5133, 1.0))) * (_2821 / ((_2825 * _2825) * 3.141590118408203125));
        float _2848 = isnan(1.0) ? _2412 : (isnan(_2412) ? 1.0 : min(_2412, 1.0));
        _2773 = (((_2834 * cbLight._m0[_2783].x) * _2847) * _2848) + _2741;
        _2775 = (((_2834 * cbLight._m0[_2783].y) * _2847) * _2848) + _2742;
        _2777 = (((_2834 * cbLight._m0[_2783].z) * _2847) * _2848) + _2743;
    }
    float _2858;
    float _2860;
    float _2862;
    if (_2550)
    {
        _2858 = _2773;
        _2860 = _2775;
        _2862 = _2777;
    }
    else
    {
        uint _2869 = _2397 + 3u;
        uint _2873 = _2397 + 11u;
        float _2887 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2869].w)) * _1296) * 0.949999988079071044921875);
        float _2888 = _2887 * _2887;
        float _2889 = cbLight._m0[_2869].x + _1367;
        float _2890 = cbLight._m0[_2869].y + _1368;
        float _2891 = cbLight._m0[_2869].z + _1369;
        float _2895 = inversesqrt(dot(vec3(_2889, _2890, _2891), vec3(_2889, _2890, _2891)));
        float _2896 = _2895 * _2889;
        float _2897 = _2895 * _2890;
        float _2898 = _2895 * _2891;
        float _2899 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2869].xyz));
        float _5149 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
        float _2902 = isnan(1.0) ? _5149 : (isnan(_5149) ? 1.0 : min(_5149, 1.0));
        float _2903 = dot(vec3(_1292, _1293, _1294), vec3(_2896, _2897, _2898));
        float _5160 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
        float _2906 = isnan(1.0) ? _5160 : (isnan(_5160) ? 1.0 : min(_5160, 1.0));
        float _2907 = dot(vec3(cbLight._m0[_2869].xyz), vec3(_2896, _2897, _2898));
        float _5171 = isnan(0.0) ? _2907 : (isnan(_2907) ? 0.0 : max(_2907, 0.0));
        float _2911 = _2888 * _2888;
        float _2915 = ((_2906 * _2906) * (_2911 + (-1.0))) + 1.0;
        float _2924 = (exp2(log2(1.0 - (isnan(1.0) ? _5171 : (isnan(_5171) ? 1.0 : min(_5171, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2925 = 1.0 - _2888;
        float _2935 = (0.5 / (((_2619 * ((_2902 * _2925) + _2888)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2925) + _2888) * _2902))) * _2902;
        float _5182 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
        float _2937 = (isnan(1.0) ? _5182 : (isnan(_5182) ? 1.0 : min(_5182, 1.0))) * (_2911 / ((_2915 * _2915) * 3.141590118408203125));
        float _2938 = isnan(1.0) ? _2413 : (isnan(_2413) ? 1.0 : min(_2413, 1.0));
        _2858 = (((_2924 * cbLight._m0[_2873].x) * _2937) * _2938) + _2773;
        _2860 = (((_2924 * cbLight._m0[_2873].y) * _2937) * _2938) + _2775;
        _2862 = (((_2924 * cbLight._m0[_2873].z) * _2937) * _2938) + _2777;
    }
    float _3004;
    float _3006;
    float _3008;
    float _3010;
    float _3012;
    float _3014;
    if (_2395.y == 0u)
    {
        uvec4 _2959 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2960 = _2959.x;
        uint _2971 = uint((float(_2959.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1375) / _2960))) + floor(float(uint(cbSceneParam._m0[85u].x * _1374) / _2960)));
        float _2981 = (log2(_2196 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2982 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        uint _2985 = uint(isnan(14.0) ? _2982 : (isnan(_2982) ? 14.0 : min(_2982, 14.0)));
        uvec4 _2990 = texelFetch(g_lightClusterGridBuffer, int(((_2985 << 2u) + (_2971 << 6u)) >> 2u));
        uint _2991 = _2990.x;
        uint _2992 = _2959.z;
        float _3130;
        float _3132;
        float _3134;
        float _3136;
        float _3138;
        float _3140;
        if (((((1u << ((_2992 >> 4u) & 15u)) + 4294967295u) & _2991) == 0u) || ((_2992 & 240u) == 0u))
        {
            _3130 = 0.0;
            _3132 = 0.0;
            _3134 = 0.0;
            _3136 = 0.0;
            _3138 = 0.0;
            _3140 = 0.0;
        }
        else
        {
            float _3131;
            float _3133;
            float _3135;
            float _3137;
            float _3139;
            float _3141;
            float _3336 = 0.0;
            float _3337 = 0.0;
            float _3338 = 0.0;
            float _3339 = 0.0;
            float _3340 = 0.0;
            float _3341 = 0.0;
            uint _3342 = 0u;
            uint _3351;
            bool _3352;
            for (;;)
            {
                _3351 = texelFetch(g_lightClassification, int((((_2985 << 5u) + (_2971 << 9u)) + (_3342 << 2u)) >> 2u)).x;
                _3352 = _3351 == 0u;
                float frontier_phi_30_pred;
                float frontier_phi_30_pred_1;
                float frontier_phi_30_pred_2;
                float frontier_phi_30_pred_3;
                float frontier_phi_30_pred_4;
                float frontier_phi_30_pred_5;
                if (_3352)
                {
                    frontier_phi_30_pred = _3336;
                    frontier_phi_30_pred_1 = _3337;
                    frontier_phi_30_pred_2 = _3341;
                    frontier_phi_30_pred_3 = _3340;
                    frontier_phi_30_pred_4 = _3339;
                    frontier_phi_30_pred_5 = _3338;
                }
                else
                {
                    float _3545;
                    float _3546;
                    float _3547;
                    float _3548;
                    float _3549;
                    float _3550;
                    uint _3551;
                    _3545 = _3336;
                    _3546 = _3337;
                    _3547 = _3338;
                    _3548 = _3339;
                    _3549 = _3340;
                    _3550 = _3341;
                    _3551 = _3351;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    float _3481;
                    for (;;)
                    {
                        uint _3555 = uint(findLSB(_3551)) + (_3342 << 5u);
                        uint _3552 = (_3551 + 4294967295u) & _3551;
                        uint _3557 = _3555 * 48u;
                        vec4 _3571 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3557)).x, texelFetch(g_PointLightRenderingBuffer, int(_3557 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3557 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3557 + 3u)).x));
                        uint _3577 = (_3555 * 48u) + 4u;
                        vec4 _3590 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3577)).x, texelFetch(g_PointLightRenderingBuffer, int(_3577 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3577 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3577 + 3u)).x));
                        uint _3596 = (_3555 * 48u) + 8u;
                        vec3 _3607 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3596)).x, texelFetch(g_PointLightRenderingBuffer, int(_3596 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3596 + 2u)).x));
                        float _3611 = _3571.x - _2194;
                        float _3612 = _3571.y - _2195;
                        float _3613 = _3571.z - _2196;
                        float _3614 = dot(vec3(_3611, _3612, _3613), vec3(_3611, _3612, _3613));
                        float _3617 = inversesqrt(_3614);
                        float _3618 = _3617 * _3611;
                        float _3619 = _3617 * _3612;
                        float _3620 = _3617 * _3613;
                        float _3621 = dot(vec3(_1395, _1398, _1401), vec3(_3618, _3619, _3620));
                        float _3626 = 1.0 - (_3614 * _3571.w);
                        float _5208 = isnan(0.0) ? _3626 : (isnan(_3626) ? 0.0 : max(_3626, 0.0));
                        float _3627 = isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0));
                        float _3628 = sqrt(_3614) * _3590.w;
                        float _3631 = 1.39999997615814208984375 / (_3628 + 1.39999997615814208984375);
                        float _3632 = _3631 * _3631;
                        float _3635 = ((1.0 - _3632) * _3621) + _3632;
                        float _3638 = _3628 * _3628;
                        float _3642 = ((isnan(0.0) ? _3635 : (isnan(_3635) ? 0.0 : max(_3635, 0.0))) * _3627) / ((_3638 * 0.699999988079071044921875) + 1.0);
                        float _3646 = (-0.0) - _2194;
                        float _3647 = (-0.0) - _2195;
                        float _3648 = (-0.0) - _2196;
                        float _3652 = inversesqrt(dot(vec3(_3646, _3647, _3648), vec3(_3646, _3647, _3648)));
                        float _3653 = _3652 * _3646;
                        float _3654 = _3652 * _3647;
                        float _3655 = _3652 * _3648;
                        float _3662 = exp2(log2(1.0 / ((_3638 * 3.5) + 5.0)) * 0.25);
                        float _3664 = 1.0 - sqrt(_1296);
                        float _3671 = sqrt(1.0 - ((1.0 - (_3664 * _3664)) * (1.0 - (_3662 * _3662))));
                        float _3672 = _3671 * _3671;
                        float _3673 = _3672 * _3672;
                        float _3674 = _3653 + _3618;
                        float _3675 = _3654 + _3619;
                        float _3676 = _3655 + _3620;
                        float _3680 = inversesqrt(dot(vec3(_3674, _3675, _3676), vec3(_3674, _3675, _3676)));
                        float _3684 = dot(vec3(_1395, _1398, _1401), vec3(_3653, _3654, _3655));
                        float _5224 = isnan(0.0) ? _3684 : (isnan(_3684) ? 0.0 : max(_3684, 0.0));
                        float _3687 = isnan(1.0) ? _5224 : (isnan(_5224) ? 1.0 : min(_5224, 1.0));
                        float _3688 = dot(vec3(_1395, _1398, _1401), vec3(_3680 * _3674, _3680 * _3675, _3680 * _3676));
                        float _5235 = isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0));
                        float _3691 = isnan(1.0) ? _5235 : (isnan(_5235) ? 1.0 : min(_5235, 1.0));
                        float _3695 = ((_3691 * _3691) * (_3673 + (-1.0))) + 1.0;
                        float _3696 = _3631 * _3672;
                        float _3697 = _3696 * _3696;
                        float _3700 = ((1.0 - _3697) * _3621) + _3697;
                        float _5246 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                        float _3701 = isnan(1.0) ? _5246 : (isnan(_5246) ? 1.0 : min(_5246, 1.0));
                        float _3702 = 1.0 - _3672;
                        float _3712 = (0.5 / (((_3701 * ((_3687 * _3702) + _3672)) + 9.9999999392252902907785028219223e-09) + (((_3701 * _3702) + _3672) * _3687))) * _3701;
                        float _5257 = isnan(0.0) ? _3712 : (isnan(_3712) ? 0.0 : max(_3712, 0.0));
                        float _3723 = (((_3673 * 3.1415927410125732421875) * (isnan(1.0) ? _5257 : (isnan(_5257) ? 1.0 : min(_5257, 1.0)))) / ((_3695 * _3695) * ((_3638 * 2.1991131305694580078125) + 3.141590118408203125))) * _3627;
                        _3479 = (_3642 * _3590.x) + _3548;
                        _3480 = (_3642 * _3590.y) + _3549;
                        _3481 = (_3642 * _3590.z) + _3550;
                        _3476 = (_3723 * _3607.x) + _3545;
                        _3477 = (_3723 * _3607.y) + _3546;
                        _3478 = (_3723 * _3607.z) + _3547;
                        if (_3552 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3545 = _3476;
                            _3546 = _3477;
                            _3547 = _3478;
                            _3548 = _3479;
                            _3549 = _3480;
                            _3550 = _3481;
                            _3551 = _3552;
                        }
                    }
                    frontier_phi_30_pred = _3476;
                    frontier_phi_30_pred_1 = _3477;
                    frontier_phi_30_pred_2 = _3481;
                    frontier_phi_30_pred_3 = _3480;
                    frontier_phi_30_pred_4 = _3479;
                    frontier_phi_30_pred_5 = _3478;
                }
                _3131 = frontier_phi_30_pred;
                _3133 = frontier_phi_30_pred_1;
                _3141 = frontier_phi_30_pred_2;
                _3139 = frontier_phi_30_pred_3;
                _3137 = frontier_phi_30_pred_4;
                _3135 = frontier_phi_30_pred_5;
                uint _3343 = _3342 + 1u;
                if (_3343 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3336 = _3131;
                    _3337 = _3133;
                    _3338 = _3135;
                    _3339 = _3137;
                    _3340 = _3139;
                    _3341 = _3141;
                    _3342 = _3343;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3130 = _3131;
            _3132 = _3133;
            _3134 = _3135;
            _3136 = _3137;
            _3138 = _3139;
            _3140 = _3141;
        }
        uvec4 _3144 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3145 = _3144.z;
        uint _3147 = (_3145 >> 8u) & 15u;
        float _3304;
        float _3306;
        float _3308;
        float _3310;
        float _3312;
        float _3314;
        if (((4294967295u << _3147) & _2991) == 0u)
        {
            _3304 = _3130;
            _3306 = _3132;
            _3308 = _3134;
            _3310 = _3136;
            _3312 = _3138;
            _3314 = _3140;
        }
        else
        {
            float _3329 = inversesqrt(dot(vec3(_2194, _2195, _2196), vec3(_2194, _2195, _2196)));
            float _3330 = _3329 * _2194;
            float _3331 = _3329 * _2195;
            float _3332 = _3329 * _2196;
            float frontier_phi_24_25_ladder;
            float frontier_phi_24_25_ladder_1;
            float frontier_phi_24_25_ladder_2;
            float frontier_phi_24_25_ladder_3;
            float frontier_phi_24_25_ladder_4;
            float frontier_phi_24_25_ladder_5;
            if (_3147 < ((_3145 >> 12u) & 15u))
            {
                float _3305;
                float _3307;
                float _3309;
                float _3311;
                float _3313;
                float _3315;
                float _3528 = _3130;
                float _3529 = _3132;
                float _3530 = _3134;
                float _3531 = _3136;
                float _3532 = _3138;
                float _3533 = _3140;
                uint _3534 = _3147;
                uint _3543;
                bool _3544;
                for (;;)
                {
                    _3543 = texelFetch(g_lightClassification, int((((_2985 << 5u) + (_2971 << 9u)) + (_3534 << 2u)) >> 2u)).x;
                    _3544 = _3543 == 0u;
                    float frontier_phi_38_pred;
                    float frontier_phi_38_pred_1;
                    float frontier_phi_38_pred_2;
                    float frontier_phi_38_pred_3;
                    float frontier_phi_38_pred_4;
                    float frontier_phi_38_pred_5;
                    if (_3544)
                    {
                        frontier_phi_38_pred = _3531;
                        frontier_phi_38_pred_1 = _3532;
                        frontier_phi_38_pred_2 = _3533;
                        frontier_phi_38_pred_3 = _3530;
                        frontier_phi_38_pred_4 = _3529;
                        frontier_phi_38_pred_5 = _3528;
                    }
                    else
                    {
                        float _3766;
                        float _3767;
                        float _3768;
                        float _3769;
                        float _3770;
                        float _3771;
                        float _4060;
                        float _4061;
                        float _4062;
                        float _4063;
                        float _4064;
                        float _4065;
                        float _3779 = _3528;
                        float _3780 = _3529;
                        float _3781 = _3530;
                        float _3782 = _3531;
                        float _3783 = _3532;
                        float _3784 = _3533;
                        uint _3785 = _3543;
                        uint _3786;
                        vec4 _3811;
                        float _3812;
                        vec4 _3827;
                        vec3 _3839;
                        vec4 _3854;
                        vec4 _3869;
                        float _3915;
                        bool _3916;
                        for (;;)
                        {
                            uint _3796 = ((_3534 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3785));
                            _3786 = (_3785 + 4294967295u) & _3785;
                            uint _3798 = _3796 * 40u;
                            _3811 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3798)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3798 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3798 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3798 + 3u)).x));
                            _3812 = _3811.w;
                            uint _3814 = (_3796 * 40u) + 4u;
                            _3827 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3814)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3814 + 3u)).x));
                            uint _3829 = (_3796 * 40u) + 8u;
                            _3839 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3829)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3829 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3829 + 2u)).x));
                            uint _3841 = (_3796 * 40u) + 16u;
                            _3854 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3841)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3841 + 3u)).x));
                            uint _3856 = (_3796 * 40u) + 20u;
                            _3869 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3856)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3856 + 3u)).x));
                            uint _3871 = (_3796 * 40u) + 24u;
                            vec4 _3884 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3871)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 3u)).x));
                            uint _3890 = (_3796 * 40u) + 28u;
                            vec4 _3903 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3890)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3890 + 3u)).x));
                            _3915 = fma(_2196, _3903.z, fma(_2195, _3903.y, _3903.x * _2194)) + _3903.w;
                            _3916 = !((fma(_2196, _3884.z, fma(_2195, _3884.y, _3884.x * _2194)) + _3884.w) <= 0.0);
                            float frontier_phi_44_pred;
                            float frontier_phi_44_pred_1;
                            float frontier_phi_44_pred_2;
                            float frontier_phi_44_pred_3;
                            float frontier_phi_44_pred_4;
                            float frontier_phi_44_pred_5;
                            if (_3916)
                            {
                                float _3943 = _3811.x - _2194;
                                float _3944 = _3811.y - _2195;
                                float _3945 = _3811.z - _2196;
                                float _3946 = dot(vec3(_3943, _3944, _3945), vec3(_3943, _3944, _3945));
                                float _3949 = inversesqrt(_3946);
                                float _3950 = _3949 * _3943;
                                float _3951 = _3949 * _3944;
                                float _3952 = _3949 * _3945;
                                float _3956 = 1.0 - (_3946 / (_3812 * _3812));
                                float _5268 = isnan(0.0) ? _3956 : (isnan(_3956) ? 0.0 : max(_3956, 0.0));
                                float _3957 = isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0));
                                float _3961 = sqrt(_3946) * _3827.w;
                                float _3963 = 1.39999997615814208984375 / (_3961 + 1.39999997615814208984375);
                                float _3964 = _3963 * _3963;
                                float _3967 = ((1.0 - _3964) * dot(vec3(_3950, _3951, _3952), vec3(_1395, _1398, _1401))) + _3964;
                                float _3970 = _3961 * _3961;
                                float _3974 = (fma(_2196, _3854.z, fma(_2195, _3854.y, _3854.x * _2194)) + _3854.w) / _3915;
                                float _3975 = (fma(_2196, _3869.z, fma(_2195, _3869.y, _3869.x * _2194)) + _3869.w) / _3915;
                                float _3979 = 1.0 - dot(vec2(_3974, _3975), vec2(_3974, _3975));
                                float _5284 = isnan(0.0) ? _3979 : (isnan(_3979) ? 0.0 : max(_3979, 0.0));
                                float _3980 = isnan(1.0) ? _5284 : (isnan(_5284) ? 1.0 : min(_5284, 1.0));
                                float _3981 = _3980 * (((isnan(0.0) ? _3967 : (isnan(_3967) ? 0.0 : max(_3967, 0.0))) * _3957) / ((_3970 * 0.699999988079071044921875) + 1.0));
                                float _3993 = exp2(log2(1.0 / ((_3970 * 3.5) + 5.0)) * 0.25);
                                float _3995 = 1.0 - sqrt(_1296);
                                float _4002 = sqrt(1.0 - ((1.0 - (_3995 * _3995)) * (1.0 - (_3993 * _3993))));
                                float _4003 = _4002 * _4002;
                                float _4004 = _4003 * _4003;
                                float _4005 = _3950 - _3330;
                                float _4006 = _3951 - _3331;
                                float _4007 = _3952 - _3332;
                                float _4011 = inversesqrt(dot(vec3(_4005, _4006, _4007), vec3(_4005, _4006, _4007)));
                                float _4015 = dot(vec3(_1395, _1398, _1401), vec3((-0.0) - _3330, (-0.0) - _3331, (-0.0) - _3332));
                                float _5295 = isnan(0.0) ? _4015 : (isnan(_4015) ? 0.0 : max(_4015, 0.0));
                                float _4018 = isnan(1.0) ? _5295 : (isnan(_5295) ? 1.0 : min(_5295, 1.0));
                                float _4019 = dot(vec3(_1395, _1398, _1401), vec3(_4011 * _4005, _4011 * _4006, _4011 * _4007));
                                float _5306 = isnan(0.0) ? _4019 : (isnan(_4019) ? 0.0 : max(_4019, 0.0));
                                float _4022 = isnan(1.0) ? _5306 : (isnan(_5306) ? 1.0 : min(_5306, 1.0));
                                float _4026 = ((_4022 * _4022) * (_4004 + (-1.0))) + 1.0;
                                float _4027 = _3963 * _4003;
                                float _4028 = _4027 * _4027;
                                float _4034 = ((1.0 - _4028) * dot(vec3(_1395, _1398, _1401), vec3(_3950, _3951, _3952))) + _4028;
                                float _5317 = isnan(0.0) ? _4034 : (isnan(_4034) ? 0.0 : max(_4034, 0.0));
                                float _4035 = isnan(1.0) ? _5317 : (isnan(_5317) ? 1.0 : min(_5317, 1.0));
                                float _4036 = 1.0 - _4003;
                                float _4046 = (0.5 / (((_4035 * ((_4018 * _4036) + _4003)) + 9.9999999392252902907785028219223e-09) + (((_4035 * _4036) + _4003) * _4018))) * _4035;
                                float _5328 = isnan(0.0) ? _4046 : (isnan(_4046) ? 0.0 : max(_4046, 0.0));
                                float _4056 = (_3980 * _3957) * (((_4004 * 3.1415927410125732421875) * (isnan(1.0) ? _5328 : (isnan(_5328) ? 1.0 : min(_5328, 1.0)))) / ((_4026 * _4026) * ((_3970 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_44_pred = _3981 * _3827.z;
                                frontier_phi_44_pred_1 = _3981 * _3827.y;
                                frontier_phi_44_pred_2 = _3981 * _3827.x;
                                frontier_phi_44_pred_3 = _4056 * _3839.z;
                                frontier_phi_44_pred_4 = _4056 * _3839.y;
                                frontier_phi_44_pred_5 = _4056 * _3839.x;
                            }
                            else
                            {
                                frontier_phi_44_pred = 0.0;
                                frontier_phi_44_pred_1 = 0.0;
                                frontier_phi_44_pred_2 = 0.0;
                                frontier_phi_44_pred_3 = 0.0;
                                frontier_phi_44_pred_4 = 0.0;
                                frontier_phi_44_pred_5 = 0.0;
                            }
                            _4065 = frontier_phi_44_pred;
                            _4064 = frontier_phi_44_pred_1;
                            _4063 = frontier_phi_44_pred_2;
                            _4062 = frontier_phi_44_pred_3;
                            _4061 = frontier_phi_44_pred_4;
                            _4060 = frontier_phi_44_pred_5;
                            _3769 = _4063 + _3782;
                            _3770 = _4064 + _3783;
                            _3771 = _4065 + _3784;
                            _3766 = _4060 + _3779;
                            _3767 = _4061 + _3780;
                            _3768 = _4062 + _3781;
                            if (_3786 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3779 = _3766;
                                _3780 = _3767;
                                _3781 = _3768;
                                _3782 = _3769;
                                _3783 = _3770;
                                _3784 = _3771;
                                _3785 = _3786;
                                continue;
                            }
                        }
                        frontier_phi_38_pred = _3769;
                        frontier_phi_38_pred_1 = _3770;
                        frontier_phi_38_pred_2 = _3771;
                        frontier_phi_38_pred_3 = _3768;
                        frontier_phi_38_pred_4 = _3767;
                        frontier_phi_38_pred_5 = _3766;
                    }
                    _3311 = frontier_phi_38_pred;
                    _3313 = frontier_phi_38_pred_1;
                    _3315 = frontier_phi_38_pred_2;
                    _3309 = frontier_phi_38_pred_3;
                    _3307 = frontier_phi_38_pred_4;
                    _3305 = frontier_phi_38_pred_5;
                    uint _3535 = _3534 + 1u;
                    if (_3535 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3528 = _3305;
                        _3529 = _3307;
                        _3530 = _3309;
                        _3531 = _3311;
                        _3532 = _3313;
                        _3533 = _3315;
                        _3534 = _3535;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_24_25_ladder = _3315;
                frontier_phi_24_25_ladder_1 = _3313;
                frontier_phi_24_25_ladder_2 = _3311;
                frontier_phi_24_25_ladder_3 = _3309;
                frontier_phi_24_25_ladder_4 = _3307;
                frontier_phi_24_25_ladder_5 = _3305;
            }
            else
            {
                frontier_phi_24_25_ladder = _3140;
                frontier_phi_24_25_ladder_1 = _3138;
                frontier_phi_24_25_ladder_2 = _3136;
                frontier_phi_24_25_ladder_3 = _3134;
                frontier_phi_24_25_ladder_4 = _3132;
                frontier_phi_24_25_ladder_5 = _3130;
            }
            _3304 = frontier_phi_24_25_ladder_5;
            _3306 = frontier_phi_24_25_ladder_4;
            _3308 = frontier_phi_24_25_ladder_3;
            _3310 = frontier_phi_24_25_ladder_2;
            _3312 = frontier_phi_24_25_ladder_1;
            _3314 = frontier_phi_24_25_ladder;
        }
        float _3319 = isnan(1.0) ? _1438 : (isnan(_1438) ? 1.0 : min(_1438, 1.0));
        _3004 = (_3319 * _3310) + _2580;
        _3006 = (_3319 * _3312) + _2582;
        _3008 = (_3319 * _3314) + _2584;
        _3010 = ((_3304 * 0.039999999105930328369140625) * _3319) + _2858;
        _3012 = ((_3306 * 0.039999999105930328369140625) * _3319) + _2860;
        _3014 = ((_3308 * 0.039999999105930328369140625) * _3319) + _2862;
    }
    else
    {
        _3004 = _2580;
        _3006 = _2582;
        _3008 = _2584;
        _3010 = _2858;
        _3012 = _2860;
        _3014 = _2862;
    }
    float _3035 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3036 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3037 = cbSceneParam._m0[86u].x * ((_1374 / cbSceneParam._m0[86u].x) + ((_1457 * 0.449999988079071044921875) * dot(vec3(_1292, _1293, _1294), vec3(_215, _216, _217))));
    float _3038 = isnan(_3035) ? _3037 : (isnan(_3037) ? _3035 : min(_3037, _3035));
    float _3039 = isnan(_3036) ? _1375 : (isnan(_1375) ? _3036 : min(_1375, _3036));
    vec4 _3041 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3038, _3039), 0.0);
    float _3043 = _3041.x;
    bool _3063 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3043)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3043))) > _1311;
    float _3064 = _3063 ? _3038 : _1374;
    float _3065 = _3063 ? _3039 : _1375;
    vec4 _3067 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3064, _3065));
    vec4 _3072 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3064, _3065));
    float _3074 = _3072.x;
    bool _3079 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3088 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3094 = (_3079 ? (_3088 / (cbSceneParam._m0[2u].x - _3074)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3074))) - _1311;
    float _3096 = cbMtdParam._m0[41u].w + cbMtdParam._m0[35u].w;
    float _3097 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _3098 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    bool _3104 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3108 = (isnan(_3094) ? 0.0 : (isnan(0.0) ? _3094 : max(0.0, _3094))) * (-1.44269502162933349609375);
    float _5359 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
    float _5370 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
    float _5381 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    float _3231;
    float _3232;
    float _3233;
    if ((1.0 - _1216) > 0.00999999977648258209228515625)
    {
        vec4 _3152 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3064, _3065), 0.0);
        float _3154 = _3152.x;
        float _3160 = (_3079 ? (_3088 / (cbSceneParam._m0[2u].x - _3154)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3154))) - _1311;
        uint _3166 = floatBitsToUint(cbInstanceData._m0[_1233]).x * 14u;
        uint _3172 = _3166 + 4u;
        float _3181 = dot(vec3(cbLight._m0[_3166].xyz), vec3(_222, _223, _224));
        float _3188 = dot(vec3((-0.0) - _1367, (-0.0) - _1368, (-0.0) - _1369), vec3((-0.0) - _222, (-0.0) - _223, (-0.0) - _224));
        float _3193 = ((isnan(0.0) ? _3188 : (isnan(_3188) ? 0.0 : max(_3188, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3181 : (isnan(_3181) ? 0.001000000047497451305389404296875 : max(_3181, 0.001000000047497451305389404296875)))) + 1.0;
        float _3195 = (-0.0) - ((isnan(_3160) ? 0.0 : (isnan(0.0) ? _3160 : max(0.0, _3160))) * _3193);
        _3231 = _3104 ? 0.0 : ((((_1277 * cbMtdParam._m0[35u].w) * cbLight._m0[_3172].x) / ((_3193 * _3096) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3096 * 1.44269502162933349609375) * _3195)));
        _3232 = _3104 ? 0.0 : ((((_1277 * cbMtdParam._m0[36u].x) * cbLight._m0[_3172].y) / ((_3193 * _3097) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3097 * 1.44269502162933349609375) * _3195)));
        _3233 = _3104 ? 0.0 : ((((_1277 * cbMtdParam._m0[36u].y) * cbLight._m0[_3172].z) / ((_3193 * _3098) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3098 * 1.44269502162933349609375) * _3195)));
    }
    else
    {
        _3231 = 0.0;
        _3232 = 0.0;
        _3233 = 0.0;
    }
    float _3250 = 0.959999978542327880859375 - (_1448 * 0.959999978542327880859375);
    float _3251 = (_3231 + ((exp2(_3108 * (_3104 ? 0.0 : _3096)) * _3067.x) * cbSceneParam._m0[72u].w)) * _3250;
    float _3252 = (_3232 + ((exp2(_3108 * (_3104 ? 0.0 : _3097)) * _3067.y) * cbSceneParam._m0[72u].w)) * _3250;
    float _3253 = (_3233 + ((exp2(_3108 * (_3104 ? 0.0 : _3098)) * _3067.z) * cbSceneParam._m0[72u].w)) * _3250;
    float _3275 = _1374 / cbSceneParam._m0[86u].x;
    float _3276 = _1375 / cbSceneParam._m0[86u].y;
    vec4 _3290 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3275, _3276, (log2((isnan(cbSceneParam._m0[77u].w) ? _1311 : (isnan(_1311) ? cbSceneParam._m0[77u].w : min(_1311, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3292 = _3290.x;
    float _3293 = _3290.y;
    float _3294 = _3290.z;
    float _3295 = _3290.w;
    float _3393;
    float _3395;
    float _3397;
    float _3399;
    if (_1311 > cbSceneParam._m0[78u].w)
    {
        float _3357 = isnan(_1311) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1311 : min(cbSceneParam._m0[80u].w, _1311));
        float _3358 = _3357 / _1311;
        float _3369 = _3358 * _1360;
        float _3370 = _1361 * _3358;
        float _3371 = (-0.0) - _3370;
        float _3372 = _3358 * _1362;
        float _3374 = (cbSceneParam._m0[77u].w * _3371) / _3357;
        float _3375 = _3374 + cbSceneParam._m0[79u].w;
        float _3376 = cbSceneParam._m0[79u].w - _3370;
        float _3382 = sqrt(((_3369 * _3369) + (_3370 * _3370)) + (_3372 * _3372));
        float _3385 = (1.0 - (cbSceneParam._m0[77u].w / _3357)) * _3382;
        float _3391 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3392 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3728;
        if (abs((_3371 - _3374) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3728 = ((((_3375 > 0.0) ? exp2(_3391 * _3375) : (2.0 - exp2(_3392 * _3375))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3385;
        }
        else
        {
            float _3501 = 1.0 / cbSceneParam._m0[80u].x;
            float _3502 = isnan(_3376) ? _3375 : (isnan(_3375) ? _3376 : max(_3375, _3376));
            float _3503 = isnan(_3376) ? _3375 : (isnan(_3375) ? _3376 : min(_3375, _3376));
            float _3512 = isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : min(_3502, 0.0));
            float _3513 = isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : min(_3503, 0.0));
            _3728 = ((abs(_3382 / _3371) * cbSceneParam._m0[80u].y) * ((((_3512 - _3513) * 2.0) - ((exp2(_3391 * (isnan(0.0) ? _3502 : (isnan(_3502) ? 0.0 : max(_3502, 0.0)))) - exp2(_3391 * (isnan(0.0) ? _3503 : (isnan(_3503) ? 0.0 : max(_3503, 0.0))))) * _3501)) - ((exp2(_3392 * _3512) - exp2(_3392 * _3513)) * _3501))) + (_3385 * cbSceneParam._m0[80u].z);
        }
        vec4 _3730 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3275, _3276, 1.0), 0.0);
        float _3739 = exp2((_3728 * (-1.44269502162933349609375)) * (1.0 - _3730.w));
        float _3740 = log2(_3739);
        float _3756 = log2(_3295);
        _3393 = (exp2(_3756 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3740 * cbSceneParam._m0[78u].x)) * _3730.x) / cbSceneParam._m0[78u].x)) + _3292;
        _3395 = (exp2(_3756 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3740 * cbSceneParam._m0[78u].y)) * _3730.y) / cbSceneParam._m0[78u].y)) + _3293;
        _3397 = (exp2(_3756 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3740 * cbSceneParam._m0[78u].z)) * _3730.z) / cbSceneParam._m0[78u].z)) + _3294;
        _3399 = _3739 * _3295;
    }
    else
    {
        _3393 = _3292;
        _3395 = _3293;
        _3397 = _3294;
        _3399 = _3295;
    }
    bool _3411 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3413 = log2(_3399);
    float _3420 = exp2(_3413 * cbSceneParam._m0[78u].x) * ((_3251 + ((_3010 + ((_1472.x * _1453) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5359 : (isnan(_5359) ? 1.0 : min(_5359, 1.0))) * (_3004 + (_2150 * (isnan(0.0) ? _2139 : (isnan(_2139) ? 0.0 : max(_2139, 0.0)))))) - _3251) * _1216));
    float _3421 = exp2(_3413 * cbSceneParam._m0[78u].y) * ((_3252 + ((_3012 + ((_1472.y * _1453) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5370 : (isnan(_5370) ? 1.0 : min(_5370, 1.0))) * (_3006 + (_2150 * (isnan(0.0) ? _2142 : (isnan(_2142) ? 0.0 : max(_2142, 0.0)))))) - _3252) * _1216));
    float _3422 = exp2(_3413 * cbSceneParam._m0[78u].z) * ((_3253 + ((_3014 + ((_1472.z * _1453) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5381 : (isnan(_5381) ? 1.0 : min(_5381, 1.0))) * (_3008 + (_2150 * (isnan(0.0) ? _2145 : (isnan(_2145) ? 0.0 : max(_2145, 0.0)))))) - _3253) * _1216));
    vec4 _3430 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1374, _1375));
    float _3432 = _3430.x;
    float _3453 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3432)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3432))) - _1311) * 3.0;
    float _5447 = isnan(0.0) ? _3453 : (isnan(_3453) ? 0.0 : max(_3453, 0.0));
    float _3455 = (cbInstanceData._m0[_1232 + 6u].w * (isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0)))) * (isnan(1.0) ? _5447 : (isnan(_5447) ? 1.0 : min(_5447, 1.0)));
    float _3464 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3464 * (_3411 ? _3420 : (_3420 + (cbSceneParam._m0[72u].w * _3393)));
    SV_Target.y = _3464 * (_3411 ? _3421 : (_3421 + (cbSceneParam._m0[72u].w * _3395)));
    SV_Target.z = _3464 * (_3411 ? _3422 : (_3422 + (cbSceneParam._m0[72u].w * _3397)));
    SV_Target.w = _3455;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3455;
}


