#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _204 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _205 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _206 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _212 = inversesqrt(dot(vec3(_204, _205, _206), vec3(_204, _205, _206)));
    float _213 = _212 * _204;
    float _214 = _212 * _205;
    float _215 = _212 * _206;
    float _219 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _220 = _219 * NORMAL.x;
    float _221 = _219 * NORMAL.y;
    float _222 = _219 * NORMAL.z;
    float _226 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _275 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _285 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _275);
    float _286 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _275);
    float _287 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _275);
    float _304 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    vec4 _321 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_304 * cbMtdParam._m0[26u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_304 * cbMtdParam._m0[27u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _324 = _321.x;
    float _325 = _321.y;
    float _326 = _321.z;
    float _327 = _321.w;
    float _340 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _343 = (sqrt(((_285 * _285) + (_286 * _286)) + (_287 * _287)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _340 : (isnan(_340) ? 0.001000000047497451305389404296875 : max(_340, 0.001000000047497451305389404296875)));
    float _344 = _343 + 0.180000007152557373046875;
    float _346 = _344 * 12.0;
    float _3897 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _349 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    vec4 _361 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _363 = _361.x;
    float _386 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _363)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _363))) - POSITION_1.w;
    float _387 = _386 / ((_349 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3908 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _388 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _389 = isnan(0.5) ? _388 : (isnan(_388) ? 0.5 : max(_388, 0.5));
    float _391 = 1.0 - _389;
    float _392 = _344 * 7.0;
    float _3924 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _394 = isnan(1.0) ? _3924 : (isnan(_3924) ? 1.0 : min(_3924, 1.0));
    float _405 = (_326 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _406 = (_326 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _420 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _304) + _405) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _304) + _406) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _422 = _420.x;
    float _444 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _405) + (cbMtdParam._m0[26u].y * _304)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _406) + (cbMtdParam._m0[26u].z * _304)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _447 = (isnan(_444) ? _422 : (isnan(_422) ? _444 : max(_422, _444))) - _394;
    float _3940 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _448 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _449 = _394 + 0.5;
    float _3951 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _462 = cbMtdParam._m0[17u].x * _304;
    float _463 = cos(_462);
    float _464 = sin(_462);
    vec4 _491 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_464 * cbMtdParam._m0[30u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _304)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_463 * cbMtdParam._m0[31u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _304)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _495 = _491.z;
    vec4 _507 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _304) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _304) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _511 = _507.z;
    float _514 = (isnan(_511) ? _495 : (isnan(_495) ? _511 : max(_495, _511))) * (isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0)));
    float _3967 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _515 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    float _518 = (_391 - _327) + (isnan(_515) ? _448 : (isnan(_448) ? _515 : max(_448, _515)));
    float _3983 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _519 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
    float _520 = _519 * _389;
    float _3994 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _529 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
    float _530 = _326 - _529;
    float _4005 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _4005 : (isnan(_4005) ? 1.0 : min(_4005, 1.0));
    vec4 _581 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _304) + (cbMtdParam._m0[30u].y * _464)) + (cbMtdParam._m0[34u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _304) + (cbMtdParam._m0[30u].z * _463)) + (cbMtdParam._m0[34u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _605 = cbMtdParam._m0[37u].z * TEXCOORD_5.x;
    float _667 = ((((((_581.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_491.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_507.w + (-0.5)))) + (((_605 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _304)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _304) * (cbMtdParam._m0[40u].z + _605)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _700 = 1.0 - _327;
    float _705 = ((isnan(0.550000011920928955078125) ? _700 : (isnan(_700) ? 0.550000011920928955078125 : max(_700, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _708 = ((TEXCOORD_5.y * (-0.5)) * _705) + _705;
    float _712 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _708) + _708;
    float _725 = (((_667 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * TEXCOORD_5.y)) * _326)) + ((texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * TEXCOORD.x) + (cbMtdParam._m0[22u].y * _304)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * TEXCOORD.y) + (cbMtdParam._m0[22u].z * _304)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _304) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _712;
    float _728 = (_725 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4026 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
    float _729 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _738 = inversesqrt(dot(vec3(_285, _286, _287), vec3(_285, _286, _287)));
    float _742 = dot(vec4(_738 * _285, _738 * _286, _738 * _287, 0.0), vec4(_220, _221, _222, 0.0));
    float _4037 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _750 = exp2(log2((1.0 - (isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _4048 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _751 = isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0));
    float _755 = ((_520 + cbMtdParam._m0[9u].x) + (_531 * cbMtdParam._m0[10u].x)) + ((_729 * cbMtdParam._m0[11u].x) * _751);
    float _756 = ((_520 + cbMtdParam._m0[9u].y) + (_531 * cbMtdParam._m0[10u].y)) + ((_729 * cbMtdParam._m0[11u].y) * _751);
    float _757 = ((_520 + cbMtdParam._m0[9u].z) + (_531 * cbMtdParam._m0[10u].z)) + ((_729 * cbMtdParam._m0[11u].z) * _751);
    float _4059 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _758 = isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0));
    float _4070 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _768 = isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0));
    float _771 = (_349 * (-0.87999999523162841796875)) * _768;
    float _774 = (((((1.0 - _755) - _758) * _529) + _755) + _768) + _771;
    float _777 = (((((1.0 - _756) - _758) * _529) + _756) + _768) + _771;
    float _780 = (((((1.0 - _757) - _758) * _529) + _757) + _768) + _771;
    float _781 = _326 * 0.01200000010430812835693359375;
    float _806 = (_326 * 0.300000011920928955078125) * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _304) + _781) + (cbMtdParam._m0[23u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _304) + _781) + (cbMtdParam._m0[24u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4081 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    float _807 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _817 = (((1.0 - _774) * TEXCOORD_5.x) * _807) + _774;
    float _818 = (((1.0 - _777) * TEXCOORD_5.x) * _807) + _777;
    float _819 = (((1.0 - _780) * TEXCOORD_5.x) * _807) + _780;
    vec4 _855 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _304) + (cbMtdParam._m0[29u].w * _464)) + (cbMtdParam._m0[28u].w * _405)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _304) + (cbMtdParam._m0[30u].x * _463)) + (cbMtdParam._m0[29u].x * _406)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _858 = _855.y;
    float _868 = 1.0 - (_386 / cbMtdParam._m0[19u].x);
    float _872 = ((_855.x * TEXCOORD_8) * cbMtdParam._m0[18u].w) * (isnan(0.0) ? _868 : (isnan(_868) ? 0.0 : max(_868, 0.0)));
    float _875 = _858 * TEXCOORD_9;
    float _878 = ((isnan(cbMtdParam._m0[19u].y) ? _875 : (isnan(_875) ? cbMtdParam._m0[19u].y : max(_875, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _879 = isnan(_878) ? _872 : (isnan(_872) ? _878 : max(_872, _878));
    float _4107 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _880 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
    float _887 = (_880 * (1.0 - _817)) + _817;
    float _888 = (_880 * (1.0 - _818)) + _818;
    float _889 = (_880 * (1.0 - _819)) + _819;
    float _922 = exp2(log2(cbMtdParam._m0[15u].z * _700) * cbMtdParam._m0[17u].y);
    float _4118 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _923 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
    float _924 = _923 * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _304) + (cbMtdParam._m0[28u].y * _700)) + (cbMtdParam._m0[29u].y * _405)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _304) + (cbMtdParam._m0[28u].z * _700)) + (cbMtdParam._m0[29u].z * _406)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _927 = ((_923 - _924) * cbMtdParam._m0[18u].x) + _924;
    float _931 = _394 * TEXCOORD_10;
    float _938 = ((_931 * (1.0 - _887)) * _927) + _887;
    float _939 = ((_931 * (1.0 - _888)) * _927) + _888;
    float _940 = ((_931 * (1.0 - _889)) * _927) + _889;
    float _944 = 1.0 - (_386 / cbMtdParam._m0[18u].y);
    float _950 = (cbMtdParam._m0[18u].z * _858) * (isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0)));
    float _954 = (_950 * (1.0 - _938)) + _938;
    float _955 = (_950 * (1.0 - _939)) + _939;
    float _956 = (_950 * (1.0 - _940)) + _940;
    float _961 = _343 / cbMtdParam._m0[15u].x;
    float _4134 = isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0));
    float _964 = (1.0 - (isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0)))) * cbMtdParam._m0[14u].w;
    float _968 = _343 + 0.20000000298023223876953125;
    float _970 = _968 * 9.0;
    float _4145 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _975 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0)))) + cbMtdParam._m0[12u].x;
    float _978 = (_343 + 0.099999986588954925537109375) * 2.5;
    float _4156 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
    float _983 = ((cbMtdParam._m0[14u].z - _975) * (isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0)))) + _975;
    float _984 = _954 + _519;
    float _4167 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
    float _989 = ((0.3499999940395355224609375 - _983) * (isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0)))) + _983;
    float _990 = TEXCOORD_5.z * 0.5;
    float _1002 = (_343 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4178 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1007 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0)))) + cbMtdParam._m0[20u].y;
    float _1012 = (_1007 * (_324 + (-0.5))) + 0.5;
    float _1013 = (_1007 * (_325 + (-0.5))) + 0.5;
    float _4189 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1014 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
    vec4 _1046 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[25u].w * TEXCOORD.z) + (cbMtdParam._m0[31u].w * _304)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].x * TEXCOORD.w) + (cbMtdParam._m0[32u].x * _304)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1054 = ((_507.x + (-0.5)) * 0.5) + _491.x;
    float _1055 = ((_507.y + (-0.5)) * 0.5) + _491.y;
    vec4 _1077 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * TEXCOORD.x) + (cbMtdParam._m0[24u].w * _304)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * TEXCOORD.y) + (cbMtdParam._m0[25u].x * _304)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1084 = _968 * 12.0;
    float _4200 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1086 = 1.0 - (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0)));
    float _1100 = cbMtdParam._m0[33u].y * TEXCOORD.x;
    float _1101 = cbMtdParam._m0[33u].z * TEXCOORD.y;
    vec4 _1114 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1100 + (cbMtdParam._m0[32u].w * _304)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1101 + (cbMtdParam._m0[33u].x * _304)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1135 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1100 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _531)) + (cbMtdParam._m0[33u].w * _304)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1101 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _531)) + (cbMtdParam._m0[34u].x * _304)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1149 = (((0.5 - _1054) * 0.10999999940395355224609375) + _1054) + (((((((_1077.z + (-0.5)) * cbMtdParam._m0[15u].w) * _1086) + (-1.0)) + _1114.x) + _1135.x) * cbMtdParam._m0[15u].y);
    float _1150 = (((0.5 - _1055) * 0.10999999940395355224609375) + _1055) + (((((((_1077.w + (-0.5)) * cbMtdParam._m0[15u].w) * _1086) + (-1.0)) + _1114.y) + _1135.y) * cbMtdParam._m0[15u].y);
    float _1155 = ((_1046.x - _1149) * _343) + _1149;
    float _1156 = ((_1046.y - _1150) * _343) + _1150;
    float _1157 = _343 * 0.5;
    float _4211 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
    float _1158 = isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0));
    float _1171 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _712);
    float _1180 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * TEXCOORD_5.y);
    float _1182 = _1180 - (_1180 * _1158);
    float _1186 = (((((((0.5 - _324) * 0.60000002384185791015625) + _324) - _1012) * _1014) + _1012) + (_1182 * (_581.x + (-0.5)))) + (((_1155 + (-0.5)) + ((0.5 - _1155) * _1158)) * _1171);
    float _1188 = (((((((0.5 - _325) * 0.60000002384185791015625) + _325) - _1013) * _1014) + _1013) + (_1182 * (_581.y + (-0.5)))) + (((_1156 + (-0.5)) + ((0.5 - _1156) * _1158)) * _1171);
    float _1198 = (((_990 * (0.5 - _1186)) + _1186) * 2.0) + (-1.0);
    float _1199 = (((_990 * (0.5 - _1188)) + _1188) * 2.0) + (-1.0);
    float _1200 = dot(vec2(_1198, _1199), vec2(_1198, _1199));
    float _4222 = isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0));
    float _1205 = sqrt(1.0 - (isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0))));
    float _1207 = _968 * 6.0;
    float _4233 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
    float _1210 = cbMtdParam._m0[16u].x * (isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0)));
    float _4244 = isnan(0.0) ? _1210 : (isnan(_1210) ? 0.0 : max(_1210, 0.0));
    float _1211 = isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0));
    float _1214 = ((1.0 - _1211) * _984) + _1211;
    uint _1230 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1231 = _1230 + 5u;
    float _1242 = (-0.0) - _285;
    float _1243 = (-0.0) - _286;
    float _1244 = (-0.0) - _287;
    float _1248 = inversesqrt(dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244)));
    float _1252 = dot(vec3(_1248 * _1242, _1248 * _1243, _1248 * _1244), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1231]).x * 14u].xyz));
    float _1262 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1252 * 0.60000002384185791015625)) * 1.5);
    float _1275 = ((((0.959999978542327880859375 / exp2(log2((_1252 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1262) * 0.5) + _1262) * 0.079577468335628509521484375;
    float _1279 = fma(_1205, _220, fma(_1199, _226 * TANGENT.x, _1198 * _213));
    float _1282 = fma(_1205, _221, fma(_1199, _226 * TANGENT.y, _1198 * _214));
    float _1285 = fma(_1205, _222, fma(_1199, _226 * TANGENT.z, _1198 * _215));
    float _1289 = inversesqrt(dot(vec3(_1279, _1282, _1285), vec3(_1279, _1282, _1285)));
    float _1290 = _1289 * _1279;
    float _1291 = _1289 * _1282;
    float _1292 = _1289 * _1285;
    float _4255 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
    float _4266 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
    float _1294 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
    float _4277 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _4288 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
    float _4299 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _1309 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1349 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1358 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1349);
    float _1359 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1349);
    float _1360 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1349);
    float _1364 = inversesqrt(dot(vec3(_1358, _1359, _1360), vec3(_1358, _1359, _1360)));
    float _1365 = _1358 * _1364;
    float _1366 = _1359 * _1364;
    float _1367 = _1360 * _1364;
    float _1372 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1373 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1393 = fma(_1292, cbSceneParam._m0[5u].z, fma(_1291, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1290));
    float _1396 = fma(_1292, cbSceneParam._m0[6u].z, fma(_1291, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1290));
    float _1399 = fma(_1292, cbSceneParam._m0[7u].z, fma(_1291, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1290));
    uint _1413 = (_1230 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1419 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0)))) * cbInstanceData._m0[_1413].x;
    float _1420 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0)))) * cbInstanceData._m0[_1413].y;
    float _1421 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0)))) * cbInstanceData._m0[_1413].z;
    float _4310 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    float _1422 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
    float _4321 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
    float _1423 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
    float _4332 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    float _1424 = isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0));
    vec4 _1433 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1372, cbSceneParam._m0[86u].y * _1373));
    float _1436 = _1433.x * TEXCOORD_5.w;
    float _1440 = abs(dot(vec3(_1365, _1366, _1367), vec3(_1290, _1291, _1292)));
    float _4343 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
    float _1446 = exp2(log2(1.0 - (isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0)))) * 5.0);
    float _1447 = cbMtdParam._m0[16u].z + (-0.039999999105930328369140625);
    float _4354 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
    float _1450 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * _1446;
    float _1451 = _1450 + 0.039999999105930328369140625;
    float _1455 = 10.0 / (_1309 + 10.0);
    vec4 _1470 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1455 * cbMtdParam._m0[19u].w) * dot(vec3(_1290, _1291, _1292), vec3(1.0, 0.0, 0.0))) + (_1372 / cbSceneParam._m0[86u].x), 1.0 - (_1373 / cbSceneParam._m0[86u].y)));
    float _1506 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1510 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1514 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1810;
    float _1811;
    float _1812;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1539 = fma(_1514, cbModelParam._m0[26u].z, fma(_1510, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1506));
        float _1543 = fma(_1514, cbModelParam._m0[27u].z, fma(_1510, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1506));
        float _1547 = fma(_1514, cbModelParam._m0[28u].z, fma(_1510, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1506));
        float _1569 = _1506 + _1290;
        float _1570 = _1510 + _1291;
        float _1571 = _1514 + _1292;
        float _1581 = fma(_1571, cbModelParam._m0[26u].z, fma(_1570, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1569)) - _1539;
        float _1582 = fma(_1571, cbModelParam._m0[27u].z, fma(_1570, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1569)) - _1543;
        float _1583 = fma(_1571, cbModelParam._m0[28u].z, fma(_1570, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1569)) - _1547;
        float _1587 = inversesqrt(dot(vec3(_1581, _1582, _1583), vec3(_1581, _1582, _1583)));
        float _1599 = ((_1587 * _1581) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1539 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1600 = ((_1587 * _1582) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1543 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1601 = ((_1587 * _1583) / cbModelParam._m0[34u].z) + ((((((_1547 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1604 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1599, _1600, _1601), 0.0);
        vec4 _1611 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1599, _1600, _1601), 0.0);
        vec4 _1618 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1599, _1600, _1601), 0.0);
        vec4 _1625 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1599, _1600, _1601), 0.0);
        float _1638 = exp2((_1604.w + (-0.5)) * 20.0) * 2.0;
        float _1645 = exp2((_1611.w + (-0.5)) * 20.0) * 2.0;
        float _1652 = exp2((_1618.w + (-0.5)) * 20.0) * 2.0;
        float _1659 = exp2((_1625.w + (-0.5)) * 20.0) * 2.0;
        float _1660 = _1659 * (_1625.x + (-0.5));
        float _1661 = _1659 * (_1625.y + (-0.5));
        float _1662 = _1659 * (_1625.z + (-0.5));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1664 = isnan(0.0) ? _1661 : (isnan(_1661) ? 0.0 : max(_1661, 0.0));
        float _1665 = isnan(0.0) ? _1662 : (isnan(_1662) ? 0.0 : max(_1662, 0.0));
        float _1667 = ((_1604.x + (-0.5)) * 0.5) * _1638;
        float _1669 = ((_1611.x + (-0.5)) * 0.5) * _1645;
        float _1671 = ((_1618.x + (-0.5)) * 0.5) * _1652;
        float _1672 = dot(vec3(_1667, _1669, _1671), vec3(_1667, _1669, _1671));
        float _1677 = (_1672 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1672);
        float _1686 = (dot(vec3(_1290, _1291, _1292), vec3(_1677 * _1667, _1677 * _1669, _1677 * _1671)) + 1.0) * 0.5;
        float _4380 = isnan(0.0) ? _1686 : (isnan(_1686) ? 0.0 : max(_1686, 0.0));
        float _1696 = sqrt(((_1669 * _1669) + (_1667 * _1667)) + (_1671 * _1671)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4391 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0));
        float _1698 = _1697 * 2.0;
        float _1702 = (1.0 - _1697) / (_1697 + 1.0);
        float _4402 = isnan(0.0) ? _1702 : (isnan(_1702) ? 0.0 : max(_1702, 0.0));
        float _1703 = isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0));
        float _1712 = ((((1.0 - _1703) * (_1698 + 2.0)) * exp2(log2(isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0))) * (_1698 + 1.0))) + _1703) * _1663;
        float _1714 = ((_1604.y + (-0.5)) * 0.5) * _1638;
        float _1716 = ((_1611.y + (-0.5)) * 0.5) * _1645;
        float _1718 = ((_1618.y + (-0.5)) * 0.5) * _1652;
        float _1719 = dot(vec3(_1714, _1716, _1718), vec3(_1714, _1716, _1718));
        float _1724 = (_1719 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1719);
        float _1732 = (dot(vec3(_1290, _1291, _1292), vec3(_1724 * _1714, _1724 * _1716, _1724 * _1718)) + 1.0) * 0.5;
        float _4413 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1741 = sqrt(((_1716 * _1716) + (_1714 * _1714)) + (_1718 * _1718)) / (_1664 + 9.9999997473787516355514526367188e-06);
        float _4424 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1742 = isnan(1.0) ? _4424 : (isnan(_4424) ? 1.0 : min(_4424, 1.0));
        float _1743 = _1742 * 2.0;
        float _1747 = (1.0 - _1742) / (_1742 + 1.0);
        float _4435 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        float _1748 = isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0));
        float _1757 = ((((1.0 - _1748) * (_1743 + 2.0)) * exp2(log2(isnan(1.0) ? _4413 : (isnan(_4413) ? 1.0 : min(_4413, 1.0))) * (_1743 + 1.0))) + _1748) * _1664;
        float _1759 = ((_1604.z + (-0.5)) * 0.5) * _1638;
        float _1761 = ((_1611.z + (-0.5)) * 0.5) * _1645;
        float _1763 = ((_1618.z + (-0.5)) * 0.5) * _1652;
        float _1764 = dot(vec3(_1759, _1761, _1763), vec3(_1759, _1761, _1763));
        float _1769 = (_1764 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1764);
        float _1777 = (dot(vec3(_1290, _1291, _1292), vec3(_1769 * _1759, _1769 * _1761, _1769 * _1763)) + 1.0) * 0.5;
        float _4446 = isnan(0.0) ? _1777 : (isnan(_1777) ? 0.0 : max(_1777, 0.0));
        float _1786 = sqrt(((_1761 * _1761) + (_1759 * _1759)) + (_1763 * _1763)) / (_1665 + 9.9999997473787516355514526367188e-06);
        float _4457 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1787 = isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0));
        float _1788 = _1787 * 2.0;
        float _1792 = (1.0 - _1787) / (_1787 + 1.0);
        float _4468 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
        float _1793 = isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0));
        float _1802 = ((((1.0 - _1793) * (_1788 + 2.0)) * exp2(log2(isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))) * (_1788 + 1.0))) + _1793) * _1665;
        _1810 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0)));
        _1811 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0)));
        _1812 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0)));
    }
    else
    {
        _1810 = 0.0;
        _1811 = 0.0;
        _1812 = 0.0;
    }
    float _2102;
    float _2103;
    float _2104;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1835 = fma(_1514, cbModelParam._m0[30u].z, fma(_1510, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1506));
        float _1839 = fma(_1514, cbModelParam._m0[31u].z, fma(_1510, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1506));
        float _1843 = fma(_1514, cbModelParam._m0[32u].z, fma(_1510, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1506));
        float _1865 = _1506 + _1290;
        float _1866 = _1510 + _1291;
        float _1867 = _1514 + _1292;
        float _1877 = fma(_1867, cbModelParam._m0[30u].z, fma(_1866, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1865)) - _1835;
        float _1878 = fma(_1867, cbModelParam._m0[31u].z, fma(_1866, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1865)) - _1839;
        float _1879 = fma(_1867, cbModelParam._m0[32u].z, fma(_1866, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1865)) - _1843;
        float _1883 = inversesqrt(dot(vec3(_1877, _1878, _1879), vec3(_1877, _1878, _1879)));
        float _1895 = ((_1883 * _1877) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1835 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1896 = ((_1883 * _1878) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1839 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1897 = ((_1883 * _1879) / cbModelParam._m0[35u].z) + ((((((_1843 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1899 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1895, _1896, _1897), 0.0);
        vec4 _1906 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1895, _1896, _1897), 0.0);
        vec4 _1913 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1895, _1896, _1897), 0.0);
        vec4 _1920 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1895, _1896, _1897), 0.0);
        float _1932 = exp2((_1899.w + (-0.5)) * 20.0) * 2.0;
        float _1939 = exp2((_1906.w + (-0.5)) * 20.0) * 2.0;
        float _1946 = exp2((_1913.w + (-0.5)) * 20.0) * 2.0;
        float _1953 = exp2((_1920.w + (-0.5)) * 20.0) * 2.0;
        float _1954 = _1953 * (_1920.x + (-0.5));
        float _1955 = _1953 * (_1920.y + (-0.5));
        float _1956 = _1953 * (_1920.z + (-0.5));
        float _1957 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1958 = isnan(0.0) ? _1955 : (isnan(_1955) ? 0.0 : max(_1955, 0.0));
        float _1959 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0));
        float _1961 = ((_1899.x + (-0.5)) * 0.5) * _1932;
        float _1963 = ((_1906.x + (-0.5)) * 0.5) * _1939;
        float _1965 = ((_1913.x + (-0.5)) * 0.5) * _1946;
        float _1966 = dot(vec3(_1961, _1963, _1965), vec3(_1961, _1963, _1965));
        float _1971 = (_1966 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1966);
        float _1979 = (dot(vec3(_1290, _1291, _1292), vec3(_1971 * _1961, _1971 * _1963, _1971 * _1965)) + 1.0) * 0.5;
        float _4509 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0));
        float _1988 = sqrt(((_1963 * _1963) + (_1961 * _1961)) + (_1965 * _1965)) / (_1957 + 9.9999997473787516355514526367188e-06);
        float _4520 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        float _1989 = isnan(1.0) ? _4520 : (isnan(_4520) ? 1.0 : min(_4520, 1.0));
        float _1990 = _1989 * 2.0;
        float _1994 = (1.0 - _1989) / (_1989 + 1.0);
        float _4531 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        float _1995 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
        float _2004 = ((((1.0 - _1995) * (_1990 + 2.0)) * exp2(log2(isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0))) * (_1990 + 1.0))) + _1995) * _1957;
        float _2006 = ((_1899.y + (-0.5)) * 0.5) * _1932;
        float _2008 = ((_1906.y + (-0.5)) * 0.5) * _1939;
        float _2010 = ((_1913.y + (-0.5)) * 0.5) * _1946;
        float _2011 = dot(vec3(_2006, _2008, _2010), vec3(_2006, _2008, _2010));
        float _2016 = (_2011 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2011);
        float _2024 = (dot(vec3(_1290, _1291, _1292), vec3(_2016 * _2006, _2016 * _2008, _2016 * _2010)) + 1.0) * 0.5;
        float _4542 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
        float _2033 = sqrt(((_2008 * _2008) + (_2006 * _2006)) + (_2010 * _2010)) / (_1958 + 9.9999997473787516355514526367188e-06);
        float _4553 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
        float _2034 = isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0));
        float _2035 = _2034 * 2.0;
        float _2039 = (1.0 - _2034) / (_2034 + 1.0);
        float _4564 = isnan(0.0) ? _2039 : (isnan(_2039) ? 0.0 : max(_2039, 0.0));
        float _2040 = isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0));
        float _2049 = ((((1.0 - _2040) * (_2035 + 2.0)) * exp2(log2(isnan(1.0) ? _4542 : (isnan(_4542) ? 1.0 : min(_4542, 1.0))) * (_2035 + 1.0))) + _2040) * _1958;
        float _2051 = ((_1899.z + (-0.5)) * 0.5) * _1932;
        float _2053 = ((_1906.z + (-0.5)) * 0.5) * _1939;
        float _2055 = ((_1913.z + (-0.5)) * 0.5) * _1946;
        float _2056 = dot(vec3(_2051, _2053, _2055), vec3(_2051, _2053, _2055));
        float _2061 = (_2056 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2056);
        float _2069 = (dot(vec3(_1290, _1291, _1292), vec3(_2061 * _2051, _2061 * _2053, _2061 * _2055)) + 1.0) * 0.5;
        float _4575 = isnan(0.0) ? _2069 : (isnan(_2069) ? 0.0 : max(_2069, 0.0));
        float _2078 = sqrt(((_2053 * _2053) + (_2051 * _2051)) + (_2055 * _2055)) / (_1959 + 9.9999997473787516355514526367188e-06);
        float _4586 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2079 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _2080 = _2079 * 2.0;
        float _2084 = (1.0 - _2079) / (_2079 + 1.0);
        float _4597 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2085 = isnan(1.0) ? _4597 : (isnan(_4597) ? 1.0 : min(_4597, 1.0));
        float _2094 = ((((1.0 - _2085) * (_2080 + 2.0)) * exp2(log2(isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0))) * (_2080 + 1.0))) + _2085) * _1959;
        _2102 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2004 : (isnan(_2004) ? 0.0 : max(_2004, 0.0)));
        _2103 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0)));
        _2104 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2094 : (isnan(_2094) ? 0.0 : max(_2094, 0.0)));
    }
    else
    {
        _2102 = 0.0;
        _2103 = 0.0;
        _2104 = 0.0;
    }
    float _2114 = (cbModelParam._m0[1u].x * (_2102 - _1810)) + _1810;
    float _2115 = (cbModelParam._m0[1u].x * (_2103 - _1811)) + _1811;
    float _2116 = (cbModelParam._m0[1u].x * (_2104 - _1812)) + _1812;
    float _2137 = fma(_2116, cbSceneParam._m0[89u].z, fma(_2115, cbSceneParam._m0[89u].y, _2114 * cbSceneParam._m0[89u].x));
    float _2140 = fma(_2116, cbSceneParam._m0[90u].z, fma(_2115, cbSceneParam._m0[90u].y, _2114 * cbSceneParam._m0[90u].x));
    float _2143 = fma(_2116, cbSceneParam._m0[91u].z, fma(_2115, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2114));
    float _2148 = (0.959999978542327880859375 - _1450) * _1436;
    vec4 _2153 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1372, _1373));
    float _2155 = _2153.w;
    float _2167 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2155);
    float _2168 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2155);
    float _2169 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2155);
    uvec4 _2172 = floatBitsToUint(cbInstanceData._m0[_1231]);
    uint _2174 = _2172.x * 14u;
    uint _2175 = _2174 + 13u;
    float _2182 = _1436 + (-1.0);
    float _2187 = (cbLight._m0[_2175].x * _2182) + 1.0;
    float _2188 = (cbLight._m0[_2175].y * _2182) + 1.0;
    float _2189 = (cbLight._m0[_2175].z * _2182) + 1.0;
    float _2190 = (cbLight._m0[_2175].w * _2182) + 1.0;
    uint _2191 = _2174 + 5u;
    float _2197 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
    uint _2201 = _2174 + 4u;
    float _2210 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
    uint _2214 = _2174 | 1u;
    float _2225 = dot(vec3(cbLight._m0[_2174].xyz), vec3(_1290, _1291, _1292));
    float _2228 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_1290, _1291, _1292));
    float _4648 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0));
    float _4659 = isnan(0.0) ? _2228 : (isnan(_2228) ? 0.0 : max(_2228, 0.0));
    float _2233 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * 0.3183098733425140380859375;
    float _2235 = (isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * 0.3183098733425140380859375;
    float _2242 = ((cbLight._m0[_2191].x * _2197) * _2235) + (((cbLight._m0[_2201].x * _2167) * _2210) * _2233);
    float _2243 = ((_2197 * cbLight._m0[_2191].y) * _2235) + (((cbLight._m0[_2201].y * _2168) * _2210) * _2233);
    float _2244 = ((_2197 * cbLight._m0[_2191].z) * _2235) + (((cbLight._m0[_2201].z * _2169) * _2210) * _2233);
    uvec4 _2248 = floatBitsToUint(cbLight._m0[_2174 + 12u]);
    bool _2250 = _2248.x == 0u;
    float _2251;
    float _2253;
    float _2255;
    if (_2250)
    {
        _2251 = _2242;
        _2253 = _2243;
        _2255 = _2244;
    }
    else
    {
        uint _2259 = _2174 + 6u;
        float _2275 = (dot(vec3(cbLight._m0[_2174 + 2u].xyz), vec3(_1290, _1291, _1292)) * 0.5) + 0.5;
        float _2276 = _2275 * _2275;
        float _4670 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        float _2277 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _2278 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        _2251 = (((cbLight._m0[_2259].x * 0.3183098733425140380859375) * _2277) * _2278) + _2242;
        _2253 = (((cbLight._m0[_2259].y * 0.3183098733425140380859375) * _2277) * _2278) + _2243;
        _2255 = (((cbLight._m0[_2259].z * 0.3183098733425140380859375) * _2277) * _2278) + _2244;
    }
    bool _2258 = _2248.y == 0u;
    float _2288;
    float _2290;
    float _2292;
    if (_2258)
    {
        _2288 = _2251;
        _2290 = _2253;
        _2292 = _2255;
    }
    else
    {
        uint _2452 = _2174 + 7u;
        float _2468 = (dot(vec3(cbLight._m0[_2174 + 3u].xyz), vec3(_1290, _1291, _1292)) * 0.5) + 0.5;
        float _2469 = _2468 * _2468;
        float _4686 = isnan(0.0) ? _2469 : (isnan(_2469) ? 0.0 : max(_2469, 0.0));
        float _2470 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
        float _2471 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
        _2288 = (((cbLight._m0[_2452].x * 0.3183098733425140380859375) * _2470) * _2471) + _2251;
        _2290 = (((cbLight._m0[_2452].y * 0.3183098733425140380859375) * _2470) * _2471) + _2253;
        _2292 = (((cbLight._m0[_2452].z * 0.3183098733425140380859375) * _2470) * _2471) + _2255;
    }
    uint _2295 = _2174 + 8u;
    float _2308 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2174].w)) * _1294) * 0.949999988079071044921875);
    float _2309 = _2308 * _2308;
    float _2310 = cbLight._m0[_2174].x + _1365;
    float _2311 = cbLight._m0[_2174].y + _1366;
    float _2312 = cbLight._m0[_2174].z + _1367;
    float _2316 = inversesqrt(dot(vec3(_2310, _2311, _2312), vec3(_2310, _2311, _2312)));
    float _2317 = _2316 * _2310;
    float _2318 = _2316 * _2311;
    float _2319 = _2316 * _2312;
    float _2320 = dot(vec3(_1290, _1291, _1292), vec3(cbLight._m0[_2174].xyz));
    float _4702 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
    float _2323 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
    float _2324 = dot(vec3(_1290, _1291, _1292), vec3(_1365, _1366, _1367));
    float _4713 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
    float _2327 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
    float _2328 = dot(vec3(_1290, _1291, _1292), vec3(_2317, _2318, _2319));
    float _4724 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
    float _2331 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
    float _2332 = dot(vec3(cbLight._m0[_2174].xyz), vec3(_2317, _2318, _2319));
    float _4735 = isnan(0.0) ? _2332 : (isnan(_2332) ? 0.0 : max(_2332, 0.0));
    float _2336 = _2309 * _2309;
    float _2340 = ((_2331 * _2331) * (_2336 + (-1.0))) + 1.0;
    float _2350 = (exp2(log2(1.0 - (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2351 = 1.0 - _2309;
    float _2362 = (0.5 / (((_2327 * ((_2323 * _2351) + _2309)) + 9.9999999392252902907785028219223e-09) + (((_2327 * _2351) + _2309) * _2323))) * _2323;
    float _4746 = isnan(0.0) ? _2362 : (isnan(_2362) ? 0.0 : max(_2362, 0.0));
    float _2364 = (isnan(1.0) ? _4746 : (isnan(_4746) ? 1.0 : min(_4746, 1.0))) * (_2336 / ((_2340 * _2340) * 3.141590118408203125));
    uint _2378 = _2174 + 9u;
    float _2389 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2214].w)) * _1294) * 0.949999988079071044921875);
    float _2390 = _2389 * _2389;
    float _2391 = cbLight._m0[_2214].x + _1365;
    float _2392 = cbLight._m0[_2214].y + _1366;
    float _2393 = cbLight._m0[_2214].z + _1367;
    float _2397 = inversesqrt(dot(vec3(_2391, _2392, _2393), vec3(_2391, _2392, _2393)));
    float _2398 = _2397 * _2391;
    float _2399 = _2397 * _2392;
    float _2400 = _2397 * _2393;
    float _2401 = dot(vec3(_1290, _1291, _1292), vec3(cbLight._m0[_2214].xyz));
    float _4757 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
    float _2404 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
    float _2405 = dot(vec3(_1290, _1291, _1292), vec3(_2398, _2399, _2400));
    float _4768 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
    float _2408 = isnan(1.0) ? _4768 : (isnan(_4768) ? 1.0 : min(_4768, 1.0));
    float _2409 = dot(vec3(cbLight._m0[_2214].xyz), vec3(_2398, _2399, _2400));
    float _4779 = isnan(0.0) ? _2409 : (isnan(_2409) ? 0.0 : max(_2409, 0.0));
    float _2413 = _2390 * _2390;
    float _2417 = ((_2408 * _2408) * (_2413 + (-1.0))) + 1.0;
    float _2426 = (exp2(log2(1.0 - (isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2427 = 1.0 - _2390;
    float _2437 = (0.5 / (((_2327 * ((_2404 * _2427) + _2390)) + 9.9999999392252902907785028219223e-09) + (((_2327 * _2427) + _2390) * _2404))) * _2404;
    float _4790 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
    float _2439 = (isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0))) * (_2413 / ((_2417 * _2417) * 3.141590118408203125));
    float _2449 = (((_2426 * cbLight._m0[_2378].x) * _2439) * _2197) + ((((cbLight._m0[_2295].x * _2167) * _2350) * _2364) * _2210);
    float _2450 = (((_2426 * cbLight._m0[_2378].y) * _2439) * _2197) + ((((cbLight._m0[_2295].y * _2168) * _2350) * _2364) * _2210);
    float _2451 = (((_2426 * cbLight._m0[_2378].z) * _2439) * _2197) + ((((cbLight._m0[_2295].z * _2169) * _2350) * _2364) * _2210);
    float _2481;
    float _2483;
    float _2485;
    if (_2250)
    {
        _2481 = _2449;
        _2483 = _2450;
        _2485 = _2451;
    }
    else
    {
        uint _2487 = _2174 + 2u;
        uint _2491 = _2174 + 10u;
        float _2505 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2487].w)) * _1294) * 0.949999988079071044921875);
        float _2506 = _2505 * _2505;
        float _2507 = cbLight._m0[_2487].x + _1365;
        float _2508 = cbLight._m0[_2487].y + _1366;
        float _2509 = cbLight._m0[_2487].z + _1367;
        float _2513 = inversesqrt(dot(vec3(_2507, _2508, _2509), vec3(_2507, _2508, _2509)));
        float _2514 = _2513 * _2507;
        float _2515 = _2513 * _2508;
        float _2516 = _2513 * _2509;
        float _2517 = dot(vec3(_1290, _1291, _1292), vec3(cbLight._m0[_2487].xyz));
        float _4801 = isnan(0.0) ? _2517 : (isnan(_2517) ? 0.0 : max(_2517, 0.0));
        float _2520 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
        float _2521 = dot(vec3(_1290, _1291, _1292), vec3(_2514, _2515, _2516));
        float _4812 = isnan(0.0) ? _2521 : (isnan(_2521) ? 0.0 : max(_2521, 0.0));
        float _2524 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
        float _2525 = dot(vec3(cbLight._m0[_2487].xyz), vec3(_2514, _2515, _2516));
        float _4823 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
        float _2529 = _2506 * _2506;
        float _2533 = ((_2524 * _2524) * (_2529 + (-1.0))) + 1.0;
        float _2542 = (exp2(log2(1.0 - (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2543 = 1.0 - _2506;
        float _2553 = (0.5 / (((_2327 * ((_2520 * _2543) + _2506)) + 9.9999999392252902907785028219223e-09) + (((_2327 * _2543) + _2506) * _2520))) * _2520;
        float _4834 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2555 = (isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0))) * (_2529 / ((_2533 * _2533) * 3.141590118408203125));
        float _2556 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
        _2481 = (((_2542 * cbLight._m0[_2491].x) * _2555) * _2556) + _2449;
        _2483 = (((_2542 * cbLight._m0[_2491].y) * _2555) * _2556) + _2450;
        _2485 = (((_2542 * cbLight._m0[_2491].z) * _2555) * _2556) + _2451;
    }
    float _2566;
    float _2568;
    float _2570;
    if (_2258)
    {
        _2566 = _2481;
        _2568 = _2483;
        _2570 = _2485;
    }
    else
    {
        uint _2577 = _2174 + 3u;
        uint _2581 = _2174 + 11u;
        float _2595 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2577].w)) * _1294) * 0.949999988079071044921875);
        float _2596 = _2595 * _2595;
        float _2597 = cbLight._m0[_2577].x + _1365;
        float _2598 = cbLight._m0[_2577].y + _1366;
        float _2599 = cbLight._m0[_2577].z + _1367;
        float _2603 = inversesqrt(dot(vec3(_2597, _2598, _2599), vec3(_2597, _2598, _2599)));
        float _2604 = _2603 * _2597;
        float _2605 = _2603 * _2598;
        float _2606 = _2603 * _2599;
        float _2607 = dot(vec3(_1290, _1291, _1292), vec3(cbLight._m0[_2577].xyz));
        float _4850 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
        float _2610 = isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0));
        float _2611 = dot(vec3(_1290, _1291, _1292), vec3(_2604, _2605, _2606));
        float _4861 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
        float _2614 = isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0));
        float _2615 = dot(vec3(cbLight._m0[_2577].xyz), vec3(_2604, _2605, _2606));
        float _4872 = isnan(0.0) ? _2615 : (isnan(_2615) ? 0.0 : max(_2615, 0.0));
        float _2619 = _2596 * _2596;
        float _2623 = ((_2614 * _2614) * (_2619 + (-1.0))) + 1.0;
        float _2632 = (exp2(log2(1.0 - (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2633 = 1.0 - _2596;
        float _2643 = (0.5 / (((_2327 * ((_2610 * _2633) + _2596)) + 9.9999999392252902907785028219223e-09) + (((_2327 * _2633) + _2596) * _2610))) * _2610;
        float _4883 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
        float _2645 = (isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0))) * (_2619 / ((_2623 * _2623) * 3.141590118408203125));
        float _2646 = isnan(1.0) ? _2190 : (isnan(_2190) ? 1.0 : min(_2190, 1.0));
        _2566 = (((_2632 * cbLight._m0[_2581].x) * _2645) * _2646) + _2481;
        _2568 = (((_2632 * cbLight._m0[_2581].y) * _2645) * _2646) + _2483;
        _2570 = (((_2632 * cbLight._m0[_2581].z) * _2645) * _2646) + _2485;
    }
    float _2755;
    float _2757;
    float _2759;
    float _2761;
    float _2763;
    float _2765;
    if (_2172.y == 0u)
    {
        float _2695 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2696 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2695;
        float _2697 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2695;
        float _2698 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2695;
        uvec4 _2710 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2711 = _2710.x;
        uint _2722 = uint((float(_2710.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1373) / _2711))) + floor(float(uint(cbSceneParam._m0[85u].x * _1372) / _2711)));
        float _2732 = (log2(_2698 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2733 = isnan(0.0) ? _2732 : (isnan(_2732) ? 0.0 : max(_2732, 0.0));
        uint _2736 = uint(isnan(14.0) ? _2733 : (isnan(_2733) ? 14.0 : min(_2733, 14.0)));
        uvec4 _2741 = texelFetch(g_lightClusterGridBuffer, int(((_2736 << 2u) + (_2722 << 6u)) >> 2u));
        uint _2742 = _2741.x;
        uint _2743 = _2710.z;
        float _2881;
        float _2883;
        float _2885;
        float _2887;
        float _2889;
        float _2891;
        if (((((1u << ((_2743 >> 4u) & 15u)) + 4294967295u) & _2742) == 0u) || ((_2743 & 240u) == 0u))
        {
            _2881 = 0.0;
            _2883 = 0.0;
            _2885 = 0.0;
            _2887 = 0.0;
            _2889 = 0.0;
            _2891 = 0.0;
        }
        else
        {
            float _2882;
            float _2884;
            float _2886;
            float _2888;
            float _2890;
            float _2892;
            float _3087 = 0.0;
            float _3088 = 0.0;
            float _3089 = 0.0;
            float _3090 = 0.0;
            float _3091 = 0.0;
            float _3092 = 0.0;
            uint _3093 = 0u;
            uint _3102;
            bool _3103;
            for (;;)
            {
                _3102 = texelFetch(g_lightClassification, int((((_2736 << 5u) + (_2722 << 9u)) + (_3093 << 2u)) >> 2u)).x;
                _3103 = _3102 == 0u;
                float frontier_phi_25_pred;
                float frontier_phi_25_pred_1;
                float frontier_phi_25_pred_2;
                float frontier_phi_25_pred_3;
                float frontier_phi_25_pred_4;
                float frontier_phi_25_pred_5;
                if (_3103)
                {
                    frontier_phi_25_pred = _3092;
                    frontier_phi_25_pred_1 = _3091;
                    frontier_phi_25_pred_2 = _3090;
                    frontier_phi_25_pred_3 = _3089;
                    frontier_phi_25_pred_4 = _3088;
                    frontier_phi_25_pred_5 = _3087;
                }
                else
                {
                    float _3296;
                    float _3297;
                    float _3298;
                    float _3299;
                    float _3300;
                    float _3301;
                    uint _3302;
                    _3296 = _3087;
                    _3297 = _3088;
                    _3298 = _3089;
                    _3299 = _3090;
                    _3300 = _3091;
                    _3301 = _3092;
                    _3302 = _3102;
                    float _3227;
                    float _3228;
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    for (;;)
                    {
                        uint _3306 = uint(findLSB(_3302)) + (_3093 << 5u);
                        uint _3303 = (_3302 + 4294967295u) & _3302;
                        uint _3308 = _3306 * 48u;
                        vec4 _3322 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3308)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3308 + 3u)).x));
                        uint _3328 = (_3306 * 48u) + 4u;
                        vec4 _3341 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3328)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3328 + 3u)).x));
                        uint _3347 = (_3306 * 48u) + 8u;
                        vec3 _3358 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3347)).x, texelFetch(g_PointLightRenderingBuffer, int(_3347 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3347 + 2u)).x));
                        float _3362 = _3322.x - _2696;
                        float _3363 = _3322.y - _2697;
                        float _3364 = _3322.z - _2698;
                        float _3365 = dot(vec3(_3362, _3363, _3364), vec3(_3362, _3363, _3364));
                        float _3368 = inversesqrt(_3365);
                        float _3369 = _3368 * _3362;
                        float _3370 = _3368 * _3363;
                        float _3371 = _3368 * _3364;
                        float _3372 = dot(vec3(_1393, _1396, _1399), vec3(_3369, _3370, _3371));
                        float _3377 = 1.0 - (_3365 * _3322.w);
                        float _4909 = isnan(0.0) ? _3377 : (isnan(_3377) ? 0.0 : max(_3377, 0.0));
                        float _3378 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                        float _3379 = sqrt(_3365) * _3341.w;
                        float _3382 = 1.39999997615814208984375 / (_3379 + 1.39999997615814208984375);
                        float _3383 = _3382 * _3382;
                        float _3386 = ((1.0 - _3383) * _3372) + _3383;
                        float _3389 = _3379 * _3379;
                        float _3393 = ((isnan(0.0) ? _3386 : (isnan(_3386) ? 0.0 : max(_3386, 0.0))) * _3378) / ((_3389 * 0.699999988079071044921875) + 1.0);
                        float _3397 = (-0.0) - _2696;
                        float _3398 = (-0.0) - _2697;
                        float _3399 = (-0.0) - _2698;
                        float _3403 = inversesqrt(dot(vec3(_3397, _3398, _3399), vec3(_3397, _3398, _3399)));
                        float _3404 = _3403 * _3397;
                        float _3405 = _3403 * _3398;
                        float _3406 = _3403 * _3399;
                        float _3414 = exp2(log2(1.0 / ((_3389 * 3.5) + 5.0)) * 0.25);
                        float _3416 = 1.0 - sqrt(_1294);
                        float _3423 = sqrt(1.0 - ((1.0 - (_3416 * _3416)) * (1.0 - (_3414 * _3414))));
                        float _3424 = _3423 * _3423;
                        float _3425 = _3424 * _3424;
                        float _3426 = _3404 + _3369;
                        float _3427 = _3405 + _3370;
                        float _3428 = _3406 + _3371;
                        float _3432 = inversesqrt(dot(vec3(_3426, _3427, _3428), vec3(_3426, _3427, _3428)));
                        float _3436 = dot(vec3(_1393, _1396, _1399), vec3(_3404, _3405, _3406));
                        float _4925 = isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : max(_3436, 0.0));
                        float _3439 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
                        float _3440 = dot(vec3(_1393, _1396, _1399), vec3(_3432 * _3426, _3432 * _3427, _3432 * _3428));
                        float _4936 = isnan(0.0) ? _3440 : (isnan(_3440) ? 0.0 : max(_3440, 0.0));
                        float _3443 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
                        float _3447 = ((_3443 * _3443) * (_3425 + (-1.0))) + 1.0;
                        float _3448 = _3382 * _3424;
                        float _3449 = _3448 * _3448;
                        float _3452 = ((1.0 - _3449) * _3372) + _3449;
                        float _4947 = isnan(0.0) ? _3452 : (isnan(_3452) ? 0.0 : max(_3452, 0.0));
                        float _3453 = isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0));
                        float _3454 = 1.0 - _3424;
                        float _3464 = (0.5 / (((_3453 * ((_3439 * _3454) + _3424)) + 9.9999999392252902907785028219223e-09) + (((_3453 * _3454) + _3424) * _3439))) * _3453;
                        float _4958 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3475 = (((_3425 * 3.1415927410125732421875) * (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0)))) / ((_3447 * _3447) * ((_3389 * 2.1991131305694580078125) + 3.141590118408203125))) * _3378;
                        _3230 = (_3393 * _3341.x) + _3299;
                        _3231 = (_3393 * _3341.y) + _3300;
                        _3232 = (_3393 * _3341.z) + _3301;
                        _3227 = (_3475 * _3358.x) + _3296;
                        _3228 = (_3475 * _3358.y) + _3297;
                        _3229 = (_3475 * _3358.z) + _3298;
                        if (_3303 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3296 = _3227;
                            _3297 = _3228;
                            _3298 = _3229;
                            _3299 = _3230;
                            _3300 = _3231;
                            _3301 = _3232;
                            _3302 = _3303;
                        }
                    }
                    frontier_phi_25_pred = _3232;
                    frontier_phi_25_pred_1 = _3231;
                    frontier_phi_25_pred_2 = _3230;
                    frontier_phi_25_pred_3 = _3229;
                    frontier_phi_25_pred_4 = _3228;
                    frontier_phi_25_pred_5 = _3227;
                }
                _2892 = frontier_phi_25_pred;
                _2890 = frontier_phi_25_pred_1;
                _2888 = frontier_phi_25_pred_2;
                _2886 = frontier_phi_25_pred_3;
                _2884 = frontier_phi_25_pred_4;
                _2882 = frontier_phi_25_pred_5;
                uint _3094 = _3093 + 1u;
                if (_3094 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3087 = _2882;
                    _3088 = _2884;
                    _3089 = _2886;
                    _3090 = _2888;
                    _3091 = _2890;
                    _3092 = _2892;
                    _3093 = _3094;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2881 = _2882;
            _2883 = _2884;
            _2885 = _2886;
            _2887 = _2888;
            _2889 = _2890;
            _2891 = _2892;
        }
        uvec4 _2895 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2896 = _2895.z;
        uint _2898 = (_2896 >> 8u) & 15u;
        float _3055;
        float _3057;
        float _3059;
        float _3061;
        float _3063;
        float _3065;
        if (((4294967295u << _2898) & _2742) == 0u)
        {
            _3055 = _2881;
            _3057 = _2883;
            _3059 = _2885;
            _3061 = _2887;
            _3063 = _2889;
            _3065 = _2891;
        }
        else
        {
            float _3080 = inversesqrt(dot(vec3(_2696, _2697, _2698), vec3(_2696, _2697, _2698)));
            float _3081 = _3080 * _2696;
            float _3082 = _3080 * _2697;
            float _3083 = _3080 * _2698;
            float frontier_phi_19_20_ladder;
            float frontier_phi_19_20_ladder_1;
            float frontier_phi_19_20_ladder_2;
            float frontier_phi_19_20_ladder_3;
            float frontier_phi_19_20_ladder_4;
            float frontier_phi_19_20_ladder_5;
            if (_2898 < ((_2896 >> 12u) & 15u))
            {
                float _3056;
                float _3058;
                float _3060;
                float _3062;
                float _3064;
                float _3066;
                float _3279 = _2881;
                float _3280 = _2883;
                float _3281 = _2885;
                float _3282 = _2887;
                float _3283 = _2889;
                float _3284 = _2891;
                uint _3285 = _2898;
                uint _3294;
                bool _3295;
                for (;;)
                {
                    _3294 = texelFetch(g_lightClassification, int((((_2736 << 5u) + (_2722 << 9u)) + (_3285 << 2u)) >> 2u)).x;
                    _3295 = _3294 == 0u;
                    float frontier_phi_33_pred;
                    float frontier_phi_33_pred_1;
                    float frontier_phi_33_pred_2;
                    float frontier_phi_33_pred_3;
                    float frontier_phi_33_pred_4;
                    float frontier_phi_33_pred_5;
                    if (_3295)
                    {
                        frontier_phi_33_pred = _3284;
                        frontier_phi_33_pred_1 = _3283;
                        frontier_phi_33_pred_2 = _3282;
                        frontier_phi_33_pred_3 = _3280;
                        frontier_phi_33_pred_4 = _3279;
                        frontier_phi_33_pred_5 = _3281;
                    }
                    else
                    {
                        float _3518;
                        float _3519;
                        float _3520;
                        float _3521;
                        float _3522;
                        float _3523;
                        float _3812;
                        float _3813;
                        float _3814;
                        float _3815;
                        float _3816;
                        float _3817;
                        float _3531 = _3279;
                        float _3532 = _3280;
                        float _3533 = _3281;
                        float _3534 = _3282;
                        float _3535 = _3283;
                        float _3536 = _3284;
                        uint _3537 = _3294;
                        uint _3538;
                        vec4 _3563;
                        float _3564;
                        vec4 _3579;
                        vec3 _3591;
                        vec4 _3606;
                        vec4 _3621;
                        float _3667;
                        bool _3668;
                        for (;;)
                        {
                            uint _3548 = ((_3285 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3537));
                            _3538 = (_3537 + 4294967295u) & _3537;
                            uint _3550 = _3548 * 40u;
                            _3563 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3550)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 3u)).x));
                            _3564 = _3563.w;
                            uint _3566 = (_3548 * 40u) + 4u;
                            _3579 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3566)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3566 + 3u)).x));
                            uint _3581 = (_3548 * 40u) + 8u;
                            _3591 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3581)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3581 + 2u)).x));
                            uint _3593 = (_3548 * 40u) + 16u;
                            _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            uint _3608 = (_3548 * 40u) + 20u;
                            _3621 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3608)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 3u)).x));
                            uint _3623 = (_3548 * 40u) + 24u;
                            vec4 _3636 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3623)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3623 + 3u)).x));
                            uint _3642 = (_3548 * 40u) + 28u;
                            vec4 _3655 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3642)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3642 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3642 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3642 + 3u)).x));
                            _3667 = fma(_2698, _3655.z, fma(_2697, _3655.y, _3655.x * _2696)) + _3655.w;
                            _3668 = !((fma(_2698, _3636.z, fma(_2697, _3636.y, _3636.x * _2696)) + _3636.w) <= 0.0);
                            float frontier_phi_39_pred;
                            float frontier_phi_39_pred_1;
                            float frontier_phi_39_pred_2;
                            float frontier_phi_39_pred_3;
                            float frontier_phi_39_pred_4;
                            float frontier_phi_39_pred_5;
                            if (_3668)
                            {
                                float _3695 = _3563.x - _2696;
                                float _3696 = _3563.y - _2697;
                                float _3697 = _3563.z - _2698;
                                float _3698 = dot(vec3(_3695, _3696, _3697), vec3(_3695, _3696, _3697));
                                float _3701 = inversesqrt(_3698);
                                float _3702 = _3701 * _3695;
                                float _3703 = _3701 * _3696;
                                float _3704 = _3701 * _3697;
                                float _3708 = 1.0 - (_3698 / (_3564 * _3564));
                                float _4969 = isnan(0.0) ? _3708 : (isnan(_3708) ? 0.0 : max(_3708, 0.0));
                                float _3709 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                                float _3713 = sqrt(_3698) * _3579.w;
                                float _3715 = 1.39999997615814208984375 / (_3713 + 1.39999997615814208984375);
                                float _3716 = _3715 * _3715;
                                float _3719 = ((1.0 - _3716) * dot(vec3(_3702, _3703, _3704), vec3(_1393, _1396, _1399))) + _3716;
                                float _3722 = _3713 * _3713;
                                float _3726 = (fma(_2698, _3606.z, fma(_2697, _3606.y, _3606.x * _2696)) + _3606.w) / _3667;
                                float _3727 = (fma(_2698, _3621.z, fma(_2697, _3621.y, _3621.x * _2696)) + _3621.w) / _3667;
                                float _3731 = 1.0 - dot(vec2(_3726, _3727), vec2(_3726, _3727));
                                float _4985 = isnan(0.0) ? _3731 : (isnan(_3731) ? 0.0 : max(_3731, 0.0));
                                float _3732 = isnan(1.0) ? _4985 : (isnan(_4985) ? 1.0 : min(_4985, 1.0));
                                float _3733 = _3732 * (((isnan(0.0) ? _3719 : (isnan(_3719) ? 0.0 : max(_3719, 0.0))) * _3709) / ((_3722 * 0.699999988079071044921875) + 1.0));
                                float _3745 = exp2(log2(1.0 / ((_3722 * 3.5) + 5.0)) * 0.25);
                                float _3747 = 1.0 - sqrt(_1294);
                                float _3754 = sqrt(1.0 - ((1.0 - (_3747 * _3747)) * (1.0 - (_3745 * _3745))));
                                float _3755 = _3754 * _3754;
                                float _3756 = _3755 * _3755;
                                float _3757 = _3702 - _3081;
                                float _3758 = _3703 - _3082;
                                float _3759 = _3704 - _3083;
                                float _3763 = inversesqrt(dot(vec3(_3757, _3758, _3759), vec3(_3757, _3758, _3759)));
                                float _3767 = dot(vec3(_1393, _1396, _1399), vec3((-0.0) - _3081, (-0.0) - _3082, (-0.0) - _3083));
                                float _4996 = isnan(0.0) ? _3767 : (isnan(_3767) ? 0.0 : max(_3767, 0.0));
                                float _3770 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                                float _3771 = dot(vec3(_1393, _1396, _1399), vec3(_3763 * _3757, _3763 * _3758, _3763 * _3759));
                                float _5007 = isnan(0.0) ? _3771 : (isnan(_3771) ? 0.0 : max(_3771, 0.0));
                                float _3774 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                                float _3778 = ((_3774 * _3774) * (_3756 + (-1.0))) + 1.0;
                                float _3779 = _3715 * _3755;
                                float _3780 = _3779 * _3779;
                                float _3786 = ((1.0 - _3780) * dot(vec3(_1393, _1396, _1399), vec3(_3702, _3703, _3704))) + _3780;
                                float _5018 = isnan(0.0) ? _3786 : (isnan(_3786) ? 0.0 : max(_3786, 0.0));
                                float _3787 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                                float _3788 = 1.0 - _3755;
                                float _3798 = (0.5 / (((_3787 * ((_3770 * _3788) + _3755)) + 9.9999999392252902907785028219223e-09) + (((_3787 * _3788) + _3755) * _3770))) * _3787;
                                float _5029 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                                float _3808 = (_3732 * _3709) * (((_3756 * 3.1415927410125732421875) * (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) / ((_3778 * _3778) * ((_3722 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_39_pred = _3733 * _3579.z;
                                frontier_phi_39_pred_1 = _3733 * _3579.y;
                                frontier_phi_39_pred_2 = _3733 * _3579.x;
                                frontier_phi_39_pred_3 = _3808 * _3591.z;
                                frontier_phi_39_pred_4 = _3808 * _3591.y;
                                frontier_phi_39_pred_5 = _3808 * _3591.x;
                            }
                            else
                            {
                                frontier_phi_39_pred = 0.0;
                                frontier_phi_39_pred_1 = 0.0;
                                frontier_phi_39_pred_2 = 0.0;
                                frontier_phi_39_pred_3 = 0.0;
                                frontier_phi_39_pred_4 = 0.0;
                                frontier_phi_39_pred_5 = 0.0;
                            }
                            _3817 = frontier_phi_39_pred;
                            _3816 = frontier_phi_39_pred_1;
                            _3815 = frontier_phi_39_pred_2;
                            _3814 = frontier_phi_39_pred_3;
                            _3813 = frontier_phi_39_pred_4;
                            _3812 = frontier_phi_39_pred_5;
                            _3521 = _3815 + _3534;
                            _3522 = _3816 + _3535;
                            _3523 = _3817 + _3536;
                            _3518 = _3812 + _3531;
                            _3519 = _3813 + _3532;
                            _3520 = _3814 + _3533;
                            if (_3538 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3531 = _3518;
                                _3532 = _3519;
                                _3533 = _3520;
                                _3534 = _3521;
                                _3535 = _3522;
                                _3536 = _3523;
                                _3537 = _3538;
                                continue;
                            }
                        }
                        frontier_phi_33_pred = _3523;
                        frontier_phi_33_pred_1 = _3522;
                        frontier_phi_33_pred_2 = _3521;
                        frontier_phi_33_pred_3 = _3519;
                        frontier_phi_33_pred_4 = _3518;
                        frontier_phi_33_pred_5 = _3520;
                    }
                    _3066 = frontier_phi_33_pred;
                    _3064 = frontier_phi_33_pred_1;
                    _3062 = frontier_phi_33_pred_2;
                    _3058 = frontier_phi_33_pred_3;
                    _3056 = frontier_phi_33_pred_4;
                    _3060 = frontier_phi_33_pred_5;
                    uint _3286 = _3285 + 1u;
                    if (_3286 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3279 = _3056;
                        _3280 = _3058;
                        _3281 = _3060;
                        _3282 = _3062;
                        _3283 = _3064;
                        _3284 = _3066;
                        _3285 = _3286;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_19_20_ladder = _3066;
                frontier_phi_19_20_ladder_1 = _3064;
                frontier_phi_19_20_ladder_2 = _3062;
                frontier_phi_19_20_ladder_3 = _3060;
                frontier_phi_19_20_ladder_4 = _3058;
                frontier_phi_19_20_ladder_5 = _3056;
            }
            else
            {
                frontier_phi_19_20_ladder = _2891;
                frontier_phi_19_20_ladder_1 = _2889;
                frontier_phi_19_20_ladder_2 = _2887;
                frontier_phi_19_20_ladder_3 = _2885;
                frontier_phi_19_20_ladder_4 = _2883;
                frontier_phi_19_20_ladder_5 = _2881;
            }
            _3055 = frontier_phi_19_20_ladder_5;
            _3057 = frontier_phi_19_20_ladder_4;
            _3059 = frontier_phi_19_20_ladder_3;
            _3061 = frontier_phi_19_20_ladder_2;
            _3063 = frontier_phi_19_20_ladder_1;
            _3065 = frontier_phi_19_20_ladder;
        }
        float _3070 = isnan(1.0) ? _1436 : (isnan(_1436) ? 1.0 : min(_1436, 1.0));
        _2755 = (_3070 * _3061) + _2288;
        _2757 = (_3070 * _3063) + _2290;
        _2759 = (_3070 * _3065) + _2292;
        _2761 = ((_3055 * 0.039999999105930328369140625) * _3070) + _2566;
        _2763 = ((_3057 * 0.039999999105930328369140625) * _3070) + _2568;
        _2765 = ((_3059 * 0.039999999105930328369140625) * _3070) + _2570;
    }
    else
    {
        _2755 = _2288;
        _2757 = _2290;
        _2759 = _2292;
        _2761 = _2566;
        _2763 = _2568;
        _2765 = _2570;
    }
    float _2786 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2787 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2788 = cbSceneParam._m0[86u].x * ((_1372 / cbSceneParam._m0[86u].x) + ((_1455 * 0.449999988079071044921875) * dot(vec3(_1290, _1291, _1292), vec3(_213, _214, _215))));
    float _2789 = isnan(_2786) ? _2788 : (isnan(_2788) ? _2786 : min(_2788, _2786));
    float _2790 = isnan(_2787) ? _1373 : (isnan(_1373) ? _2787 : min(_1373, _2787));
    vec4 _2792 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2789, _2790), 0.0);
    float _2794 = _2792.x;
    bool _2814 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2794)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2794))) > _1309;
    float _2815 = _2814 ? _2789 : _1372;
    float _2816 = _2814 ? _2790 : _1373;
    vec4 _2818 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2815, _2816));
    vec4 _2823 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2815, _2816));
    float _2825 = _2823.x;
    bool _2830 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2839 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2845 = (_2830 ? (_2839 / (cbSceneParam._m0[2u].x - _2825)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2825))) - _1309;
    float _2847 = cbMtdParam._m0[41u].w + cbMtdParam._m0[35u].w;
    float _2848 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _2849 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    bool _2855 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2859 = (isnan(_2845) ? 0.0 : (isnan(0.0) ? _2845 : max(0.0, _2845))) * (-1.44269502162933349609375);
    float _5060 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _5071 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
    float _5082 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
    float _2982;
    float _2983;
    float _2984;
    if ((1.0 - _1214) > 0.00999999977648258209228515625)
    {
        vec4 _2903 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2815, _2816), 0.0);
        float _2905 = _2903.x;
        float _2911 = (_2830 ? (_2839 / (cbSceneParam._m0[2u].x - _2905)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2905))) - _1309;
        uint _2917 = floatBitsToUint(cbInstanceData._m0[_1231]).x * 14u;
        uint _2923 = _2917 + 4u;
        float _2932 = dot(vec3(cbLight._m0[_2917].xyz), vec3(_220, _221, _222));
        float _2939 = dot(vec3((-0.0) - _1365, (-0.0) - _1366, (-0.0) - _1367), vec3((-0.0) - _220, (-0.0) - _221, (-0.0) - _222));
        float _2944 = ((isnan(0.0) ? _2939 : (isnan(_2939) ? 0.0 : max(_2939, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2932 : (isnan(_2932) ? 0.001000000047497451305389404296875 : max(_2932, 0.001000000047497451305389404296875)))) + 1.0;
        float _2946 = (-0.0) - ((isnan(_2911) ? 0.0 : (isnan(0.0) ? _2911 : max(0.0, _2911))) * _2944);
        _2982 = _2855 ? 0.0 : ((((_1275 * cbMtdParam._m0[35u].w) * cbLight._m0[_2923].x) / ((_2944 * _2847) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2847 * 1.44269502162933349609375) * _2946)));
        _2983 = _2855 ? 0.0 : ((((_1275 * cbMtdParam._m0[36u].x) * cbLight._m0[_2923].y) / ((_2944 * _2848) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2848 * 1.44269502162933349609375) * _2946)));
        _2984 = _2855 ? 0.0 : ((((_1275 * cbMtdParam._m0[36u].y) * cbLight._m0[_2923].z) / ((_2944 * _2849) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2849 * 1.44269502162933349609375) * _2946)));
    }
    else
    {
        _2982 = 0.0;
        _2983 = 0.0;
        _2984 = 0.0;
    }
    float _3001 = 0.959999978542327880859375 - (_1446 * 0.959999978542327880859375);
    float _3002 = (_2982 + ((exp2(_2859 * (_2855 ? 0.0 : _2847)) * _2818.x) * cbSceneParam._m0[72u].w)) * _3001;
    float _3003 = (_2983 + ((exp2(_2859 * (_2855 ? 0.0 : _2848)) * _2818.y) * cbSceneParam._m0[72u].w)) * _3001;
    float _3004 = (_2984 + ((exp2(_2859 * (_2855 ? 0.0 : _2849)) * _2818.z) * cbSceneParam._m0[72u].w)) * _3001;
    float _3026 = _1372 / cbSceneParam._m0[86u].x;
    float _3027 = _1373 / cbSceneParam._m0[86u].y;
    vec4 _3041 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3026, _3027, (log2((isnan(cbSceneParam._m0[77u].w) ? _1309 : (isnan(_1309) ? cbSceneParam._m0[77u].w : min(_1309, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3043 = _3041.x;
    float _3044 = _3041.y;
    float _3045 = _3041.z;
    float _3046 = _3041.w;
    float _3144;
    float _3146;
    float _3148;
    float _3150;
    if (_1309 > cbSceneParam._m0[78u].w)
    {
        float _3108 = isnan(_1309) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1309 : min(cbSceneParam._m0[80u].w, _1309));
        float _3109 = _3108 / _1309;
        float _3120 = _3109 * _1358;
        float _3121 = _1359 * _3109;
        float _3122 = (-0.0) - _3121;
        float _3123 = _3109 * _1360;
        float _3125 = (cbSceneParam._m0[77u].w * _3122) / _3108;
        float _3126 = _3125 + cbSceneParam._m0[79u].w;
        float _3127 = cbSceneParam._m0[79u].w - _3121;
        float _3133 = sqrt(((_3120 * _3120) + (_3121 * _3121)) + (_3123 * _3123));
        float _3136 = (1.0 - (cbSceneParam._m0[77u].w / _3108)) * _3133;
        float _3142 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3143 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3480;
        if (abs((_3122 - _3125) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3480 = ((((_3126 > 0.0) ? exp2(_3142 * _3126) : (2.0 - exp2(_3143 * _3126))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3136;
        }
        else
        {
            float _3252 = 1.0 / cbSceneParam._m0[80u].x;
            float _3253 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : max(_3126, _3127));
            float _3254 = isnan(_3127) ? _3126 : (isnan(_3126) ? _3127 : min(_3126, _3127));
            float _3263 = isnan(0.0) ? _3253 : (isnan(_3253) ? 0.0 : min(_3253, 0.0));
            float _3264 = isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : min(_3254, 0.0));
            _3480 = ((abs(_3133 / _3122) * cbSceneParam._m0[80u].y) * ((((_3263 - _3264) * 2.0) - ((exp2(_3142 * (isnan(0.0) ? _3253 : (isnan(_3253) ? 0.0 : max(_3253, 0.0)))) - exp2(_3142 * (isnan(0.0) ? _3254 : (isnan(_3254) ? 0.0 : max(_3254, 0.0))))) * _3252)) - ((exp2(_3143 * _3263) - exp2(_3143 * _3264)) * _3252))) + (_3136 * cbSceneParam._m0[80u].z);
        }
        vec4 _3482 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3026, _3027, 1.0), 0.0);
        float _3491 = exp2((_3480 * (-1.44269502162933349609375)) * (1.0 - _3482.w));
        float _3492 = log2(_3491);
        float _3508 = log2(_3046);
        _3144 = (exp2(_3508 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3492 * cbSceneParam._m0[78u].x)) * _3482.x) / cbSceneParam._m0[78u].x)) + _3043;
        _3146 = (exp2(_3508 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3492 * cbSceneParam._m0[78u].y)) * _3482.y) / cbSceneParam._m0[78u].y)) + _3044;
        _3148 = (exp2(_3508 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3492 * cbSceneParam._m0[78u].z)) * _3482.z) / cbSceneParam._m0[78u].z)) + _3045;
        _3150 = _3491 * _3046;
    }
    else
    {
        _3144 = _3043;
        _3146 = _3044;
        _3148 = _3045;
        _3150 = _3046;
    }
    bool _3162 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3164 = log2(_3150);
    float _3171 = exp2(_3164 * cbSceneParam._m0[78u].x) * ((_3002 + ((_2761 + ((_1470.x * _1451) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5060 : (isnan(_5060) ? 1.0 : min(_5060, 1.0))) * (_2755 + (_2148 * (isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0)))))) - _3002) * _1214));
    float _3172 = exp2(_3164 * cbSceneParam._m0[78u].y) * ((_3003 + ((_2763 + ((_1470.y * _1451) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5071 : (isnan(_5071) ? 1.0 : min(_5071, 1.0))) * (_2757 + (_2148 * (isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0)))))) - _3003) * _1214));
    float _3173 = exp2(_3164 * cbSceneParam._m0[78u].z) * ((_3004 + ((_2765 + ((_1470.z * _1451) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5082 : (isnan(_5082) ? 1.0 : min(_5082, 1.0))) * (_2759 + (_2148 * (isnan(0.0) ? _2143 : (isnan(_2143) ? 0.0 : max(_2143, 0.0)))))) - _3004) * _1214));
    vec4 _3181 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1372, _1373));
    float _3183 = _3181.x;
    float _3204 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3183)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3183))) - _1309) * 3.0;
    float _5148 = isnan(0.0) ? _3204 : (isnan(_3204) ? 0.0 : max(_3204, 0.0));
    float _3206 = (cbInstanceData._m0[_1230 + 6u].w * (isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0)))) * (isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0)));
    float _3215 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3215 * (_3162 ? _3171 : (_3171 + (cbSceneParam._m0[72u].w * _3144)));
    SV_Target.y = _3215 * (_3162 ? _3172 : (_3172 + (cbSceneParam._m0[72u].w * _3146)));
    SV_Target.z = _3215 * (_3162 ? _3173 : (_3173 + (cbSceneParam._m0[72u].w * _3148)));
    SV_Target.w = _3206;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3206;
}


