#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _202 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _203 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _204 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _210 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _211 = _210 * _202;
    float _212 = _210 * _203;
    float _213 = _210 * _204;
    float _217 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _218 = _217 * NORMAL.x;
    float _219 = _217 * NORMAL.y;
    float _220 = _217 * NORMAL.z;
    float _224 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _273 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _283 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _273);
    float _284 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _273);
    float _285 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _273);
    float _302 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    vec4 _319 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_302 * cbMtdParam._m0[26u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_302 * cbMtdParam._m0[27u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _322 = _319.x;
    float _323 = _319.y;
    float _324 = _319.z;
    float _325 = _319.w;
    float _338 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _341 = (sqrt(((_283 * _283) + (_284 * _284)) + (_285 * _285)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _338 : (isnan(_338) ? 0.001000000047497451305389404296875 : max(_338, 0.001000000047497451305389404296875)));
    float _342 = _341 + 0.180000007152557373046875;
    float _344 = _342 * 12.0;
    float _3871 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _347 = isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0));
    vec4 _359 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _361 = _359.x;
    float _384 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _361)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _361))) - POSITION_1.w;
    float _385 = _384 / ((_347 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3882 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0));
    float _387 = isnan(0.5) ? _386 : (isnan(_386) ? 0.5 : max(_386, 0.5));
    float _389 = 1.0 - _387;
    float _390 = _342 * 7.0;
    float _3898 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _392 = isnan(1.0) ? _3898 : (isnan(_3898) ? 1.0 : min(_3898, 1.0));
    float _403 = (_324 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _404 = (_324 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _418 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _302) + _403) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _302) + _404) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _420 = _418.x;
    float _442 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _403) + (cbMtdParam._m0[26u].y * _302)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _404) + (cbMtdParam._m0[26u].z * _302)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _445 = (isnan(_442) ? _420 : (isnan(_420) ? _442 : max(_420, _442))) - _392;
    float _3914 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _446 = isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0));
    float _447 = _392 + 0.5;
    float _3925 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _460 = cbMtdParam._m0[17u].x * _302;
    float _461 = cos(_460);
    float _462 = sin(_460);
    vec4 _489 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_462 * cbMtdParam._m0[30u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _302)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_461 * cbMtdParam._m0[31u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _302)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _493 = _489.z;
    vec4 _505 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _302) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _302) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _509 = _505.z;
    float _512 = (isnan(_509) ? _493 : (isnan(_493) ? _509 : max(_493, _509))) * (isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0)));
    float _3941 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _513 = isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0));
    float _516 = (_389 - _325) + (isnan(_513) ? _446 : (isnan(_446) ? _513 : max(_446, _513)));
    float _3957 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _517 = isnan(1.0) ? _3957 : (isnan(_3957) ? 1.0 : min(_3957, 1.0));
    float _518 = _517 * _387;
    float _3968 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _527 = isnan(1.0) ? _3968 : (isnan(_3968) ? 1.0 : min(_3968, 1.0));
    float _528 = _324 - _527;
    float _3979 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _529 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
    vec4 _579 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _302) + (cbMtdParam._m0[30u].y * _462)) + (cbMtdParam._m0[34u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _302) + (cbMtdParam._m0[30u].z * _461)) + (cbMtdParam._m0[34u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _603 = cbMtdParam._m0[37u].z * TEXCOORD_5.x;
    float _665 = ((((((_579.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_489.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_505.w + (-0.5)))) + (((_603 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _302)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _302) * (cbMtdParam._m0[40u].z + _603)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _698 = 1.0 - _325;
    float _703 = ((isnan(0.550000011920928955078125) ? _698 : (isnan(_698) ? 0.550000011920928955078125 : max(_698, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _706 = ((TEXCOORD_5.y * (-0.5)) * _703) + _703;
    float _710 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _706) + _706;
    float _723 = (((_665 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * TEXCOORD_5.y)) * _324)) + ((texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * TEXCOORD.x) + (cbMtdParam._m0[22u].y * _302)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * TEXCOORD.y) + (cbMtdParam._m0[22u].z * _302)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _302) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _710;
    float _726 = (_723 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4000 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _727 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _736 = inversesqrt(dot(vec3(_283, _284, _285), vec3(_283, _284, _285)));
    float _740 = dot(vec4(_736 * _283, _736 * _284, _736 * _285, 0.0), vec4(_218, _219, _220, 0.0));
    float _4011 = isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0));
    float _748 = exp2(log2((1.0 - (isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _4022 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _749 = isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0));
    float _753 = ((_518 + cbMtdParam._m0[9u].x) + (_529 * cbMtdParam._m0[10u].x)) + ((_727 * cbMtdParam._m0[11u].x) * _749);
    float _754 = ((_518 + cbMtdParam._m0[9u].y) + (_529 * cbMtdParam._m0[10u].y)) + ((_727 * cbMtdParam._m0[11u].y) * _749);
    float _755 = ((_518 + cbMtdParam._m0[9u].z) + (_529 * cbMtdParam._m0[10u].z)) + ((_727 * cbMtdParam._m0[11u].z) * _749);
    float _4033 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _756 = isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0));
    float _4044 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _766 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
    float _769 = (_347 * (-0.87999999523162841796875)) * _766;
    float _772 = (((((1.0 - _753) - _756) * _527) + _753) + _766) + _769;
    float _775 = (((((1.0 - _754) - _756) * _527) + _754) + _766) + _769;
    float _778 = (((((1.0 - _755) - _756) * _527) + _755) + _766) + _769;
    float _779 = _324 * 0.01200000010430812835693359375;
    float _804 = (_324 * 0.300000011920928955078125) * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _302) + _779) + (cbMtdParam._m0[23u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _302) + _779) + (cbMtdParam._m0[24u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4055 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
    float _805 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    float _815 = (((1.0 - _772) * TEXCOORD_5.x) * _805) + _772;
    float _816 = (((1.0 - _775) * TEXCOORD_5.x) * _805) + _775;
    float _817 = (((1.0 - _778) * TEXCOORD_5.x) * _805) + _778;
    vec4 _853 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _302) + (cbMtdParam._m0[29u].w * _462)) + (cbMtdParam._m0[28u].w * _403)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _302) + (cbMtdParam._m0[30u].x * _461)) + (cbMtdParam._m0[29u].x * _404)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _856 = _853.y;
    float _866 = 1.0 - (_384 / cbMtdParam._m0[19u].x);
    float _870 = ((_853.x * TEXCOORD_8) * cbMtdParam._m0[18u].w) * (isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0)));
    float _873 = _856 * TEXCOORD_9;
    float _876 = ((isnan(cbMtdParam._m0[19u].y) ? _873 : (isnan(_873) ? cbMtdParam._m0[19u].y : max(_873, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _877 = isnan(_876) ? _870 : (isnan(_870) ? _876 : max(_870, _876));
    float _4081 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _878 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
    float _885 = (_878 * (1.0 - _815)) + _815;
    float _886 = (_878 * (1.0 - _816)) + _816;
    float _887 = (_878 * (1.0 - _817)) + _817;
    float _920 = exp2(log2(cbMtdParam._m0[15u].z * _698) * cbMtdParam._m0[17u].y);
    float _4092 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    float _921 = isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0));
    float _922 = _921 * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _302) + (cbMtdParam._m0[28u].y * _698)) + (cbMtdParam._m0[29u].y * _403)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _302) + (cbMtdParam._m0[28u].z * _698)) + (cbMtdParam._m0[29u].z * _404)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _925 = ((_921 - _922) * cbMtdParam._m0[18u].x) + _922;
    float _929 = _392 * TEXCOORD_10;
    float _936 = ((_929 * (1.0 - _885)) * _925) + _885;
    float _937 = ((_929 * (1.0 - _886)) * _925) + _886;
    float _938 = ((_929 * (1.0 - _887)) * _925) + _887;
    float _942 = 1.0 - (_384 / cbMtdParam._m0[18u].y);
    float _948 = (cbMtdParam._m0[18u].z * _856) * (isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0)));
    float _952 = (_948 * (1.0 - _936)) + _936;
    float _953 = (_948 * (1.0 - _937)) + _937;
    float _954 = (_948 * (1.0 - _938)) + _938;
    float _959 = _341 / cbMtdParam._m0[15u].x;
    float _4108 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
    float _962 = (1.0 - (isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0)))) * cbMtdParam._m0[14u].w;
    float _966 = _341 + 0.20000000298023223876953125;
    float _968 = _966 * 9.0;
    float _4119 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _973 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0)))) + cbMtdParam._m0[12u].x;
    float _976 = (_341 + 0.099999986588954925537109375) * 2.5;
    float _4130 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _981 = ((cbMtdParam._m0[14u].z - _973) * (isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0)))) + _973;
    float _982 = _952 + _517;
    float _4141 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _987 = ((0.3499999940395355224609375 - _981) * (isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0)))) + _981;
    float _988 = TEXCOORD_5.z * 0.5;
    float _1000 = (_341 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4152 = isnan(0.0) ? _1000 : (isnan(_1000) ? 0.0 : max(_1000, 0.0));
    float _1005 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0)))) + cbMtdParam._m0[20u].y;
    float _1010 = (_1005 * (_322 + (-0.5))) + 0.5;
    float _1011 = (_1005 * (_323 + (-0.5))) + 0.5;
    float _4163 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1012 = isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0));
    vec4 _1044 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[25u].w * TEXCOORD.z) + (cbMtdParam._m0[31u].w * _302)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].x * TEXCOORD.w) + (cbMtdParam._m0[32u].x * _302)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1052 = ((_505.x + (-0.5)) * 0.5) + _489.x;
    float _1053 = ((_505.y + (-0.5)) * 0.5) + _489.y;
    vec4 _1075 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * TEXCOORD.x) + (cbMtdParam._m0[24u].w * _302)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * TEXCOORD.y) + (cbMtdParam._m0[25u].x * _302)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1082 = _966 * 12.0;
    float _4174 = isnan(0.0) ? _1082 : (isnan(_1082) ? 0.0 : max(_1082, 0.0));
    float _1084 = 1.0 - (isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0)));
    float _1098 = cbMtdParam._m0[33u].y * TEXCOORD.x;
    float _1099 = cbMtdParam._m0[33u].z * TEXCOORD.y;
    vec4 _1112 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1098 + (cbMtdParam._m0[32u].w * _302)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1099 + (cbMtdParam._m0[33u].x * _302)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1133 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1098 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _529)) + (cbMtdParam._m0[33u].w * _302)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1099 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _529)) + (cbMtdParam._m0[34u].x * _302)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1147 = (((0.5 - _1052) * 0.10999999940395355224609375) + _1052) + (((((((_1075.z + (-0.5)) * cbMtdParam._m0[15u].w) * _1084) + (-1.0)) + _1112.x) + _1133.x) * cbMtdParam._m0[15u].y);
    float _1148 = (((0.5 - _1053) * 0.10999999940395355224609375) + _1053) + (((((((_1075.w + (-0.5)) * cbMtdParam._m0[15u].w) * _1084) + (-1.0)) + _1112.y) + _1133.y) * cbMtdParam._m0[15u].y);
    float _1153 = ((_1044.x - _1147) * _341) + _1147;
    float _1154 = ((_1044.y - _1148) * _341) + _1148;
    float _1155 = _341 * 0.5;
    float _4185 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
    float _1156 = isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0));
    float _1169 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _710);
    float _1178 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * TEXCOORD_5.y);
    float _1180 = _1178 - (_1178 * _1156);
    float _1184 = (((((((0.5 - _322) * 0.60000002384185791015625) + _322) - _1010) * _1012) + _1010) + (_1180 * (_579.x + (-0.5)))) + (((_1153 + (-0.5)) + ((0.5 - _1153) * _1156)) * _1169);
    float _1186 = (((((((0.5 - _323) * 0.60000002384185791015625) + _323) - _1011) * _1012) + _1011) + (_1180 * (_579.y + (-0.5)))) + (((_1154 + (-0.5)) + ((0.5 - _1154) * _1156)) * _1169);
    float _1196 = (((_988 * (0.5 - _1184)) + _1184) * 2.0) + (-1.0);
    float _1197 = (((_988 * (0.5 - _1186)) + _1186) * 2.0) + (-1.0);
    float _1198 = dot(vec2(_1196, _1197), vec2(_1196, _1197));
    float _4196 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
    float _1203 = sqrt(1.0 - (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0))));
    float _1205 = _966 * 6.0;
    float _4207 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
    float _1208 = cbMtdParam._m0[16u].x * (isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0)));
    float _4218 = isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0));
    float _1209 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
    float _1212 = ((1.0 - _1209) * _982) + _1209;
    uint _1228 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1229 = _1228 + 5u;
    float _1240 = (-0.0) - _283;
    float _1241 = (-0.0) - _284;
    float _1242 = (-0.0) - _285;
    float _1246 = inversesqrt(dot(vec3(_1240, _1241, _1242), vec3(_1240, _1241, _1242)));
    float _1250 = dot(vec3(_1246 * _1240, _1246 * _1241, _1246 * _1242), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1229]).x * 14u].xyz));
    float _1260 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1250 * 0.60000002384185791015625)) * 1.5);
    float _1273 = ((((0.959999978542327880859375 / exp2(log2((_1250 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1260) * 0.5) + _1260) * 0.079577468335628509521484375;
    float _1277 = fma(_1203, _218, fma(_1197, _224 * TANGENT.x, _1196 * _211));
    float _1280 = fma(_1203, _219, fma(_1197, _224 * TANGENT.y, _1196 * _212));
    float _1283 = fma(_1203, _220, fma(_1197, _224 * TANGENT.z, _1196 * _213));
    float _1287 = inversesqrt(dot(vec3(_1277, _1280, _1283), vec3(_1277, _1280, _1283)));
    float _1288 = _1287 * _1277;
    float _1289 = _1287 * _1280;
    float _1290 = _1287 * _1283;
    float _4229 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
    float _4240 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
    float _1292 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
    float _4251 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
    float _4262 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
    float _4273 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
    float _1307 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1347 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1356 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1347);
    float _1357 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1347);
    float _1358 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1347);
    float _1362 = inversesqrt(dot(vec3(_1356, _1357, _1358), vec3(_1356, _1357, _1358)));
    float _1363 = _1356 * _1362;
    float _1364 = _1357 * _1362;
    float _1365 = _1358 * _1362;
    float _1370 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1371 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1391 = fma(_1290, cbSceneParam._m0[5u].z, fma(_1289, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1288));
    float _1394 = fma(_1290, cbSceneParam._m0[6u].z, fma(_1289, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1288));
    float _1397 = fma(_1290, cbSceneParam._m0[7u].z, fma(_1289, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1288));
    uint _1411 = (_1228 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1417 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0)))) * cbInstanceData._m0[_1411].x;
    float _1418 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0)))) * cbInstanceData._m0[_1411].y;
    float _1419 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) * cbInstanceData._m0[_1411].z;
    float _4284 = isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0));
    float _1420 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
    float _4295 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
    float _1421 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
    float _4306 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    float _1422 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
    vec4 _1431 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1370, cbSceneParam._m0[86u].y * _1371));
    float _1434 = _1431.x * TEXCOORD_5.w;
    float _1438 = abs(dot(vec3(_1363, _1364, _1365), vec3(_1288, _1289, _1290)));
    float _4317 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
    float _1444 = exp2(log2(1.0 - (isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0)))) * 5.0);
    float _1445 = cbMtdParam._m0[16u].z + (-0.039999999105930328369140625);
    float _4328 = isnan(0.0) ? _1445 : (isnan(_1445) ? 0.0 : max(_1445, 0.0));
    float _1448 = (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * _1444;
    float _1449 = _1448 + 0.039999999105930328369140625;
    float _1453 = 10.0 / (_1307 + 10.0);
    vec4 _1468 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1453 * cbMtdParam._m0[19u].w) * dot(vec3(_1288, _1289, _1290), vec3(1.0, 0.0, 0.0))) + (_1370 / cbSceneParam._m0[86u].x), 1.0 - (_1371 / cbSceneParam._m0[86u].y)));
    float _1504 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1508 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1512 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1808;
    float _1809;
    float _1810;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1537 = fma(_1512, cbModelParam._m0[26u].z, fma(_1508, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1504));
        float _1541 = fma(_1512, cbModelParam._m0[27u].z, fma(_1508, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1504));
        float _1545 = fma(_1512, cbModelParam._m0[28u].z, fma(_1508, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1504));
        float _1567 = _1504 + _1288;
        float _1568 = _1508 + _1289;
        float _1569 = _1512 + _1290;
        float _1579 = fma(_1569, cbModelParam._m0[26u].z, fma(_1568, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1567)) - _1537;
        float _1580 = fma(_1569, cbModelParam._m0[27u].z, fma(_1568, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1567)) - _1541;
        float _1581 = fma(_1569, cbModelParam._m0[28u].z, fma(_1568, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1567)) - _1545;
        float _1585 = inversesqrt(dot(vec3(_1579, _1580, _1581), vec3(_1579, _1580, _1581)));
        float _1597 = ((_1585 * _1579) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1537 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1598 = ((_1585 * _1580) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1541 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1599 = ((_1585 * _1581) / cbModelParam._m0[34u].z) + ((((((_1545 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1602 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1609 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1616 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        vec4 _1623 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1597, _1598, _1599), 0.0);
        float _1636 = exp2((_1602.w + (-0.5)) * 20.0) * 2.0;
        float _1643 = exp2((_1609.w + (-0.5)) * 20.0) * 2.0;
        float _1650 = exp2((_1616.w + (-0.5)) * 20.0) * 2.0;
        float _1657 = exp2((_1623.w + (-0.5)) * 20.0) * 2.0;
        float _1658 = _1657 * (_1623.x + (-0.5));
        float _1659 = _1657 * (_1623.y + (-0.5));
        float _1660 = _1657 * (_1623.z + (-0.5));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0));
        float _1665 = ((_1602.x + (-0.5)) * 0.5) * _1636;
        float _1667 = ((_1609.x + (-0.5)) * 0.5) * _1643;
        float _1669 = ((_1616.x + (-0.5)) * 0.5) * _1650;
        float _1670 = dot(vec3(_1665, _1667, _1669), vec3(_1665, _1667, _1669));
        float _1675 = (_1670 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1670);
        float _1684 = (dot(vec3(_1288, _1289, _1290), vec3(_1675 * _1665, _1675 * _1667, _1675 * _1669)) + 1.0) * 0.5;
        float _4354 = isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0));
        float _1694 = sqrt(((_1667 * _1667) + (_1665 * _1665)) + (_1669 * _1669)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4365 = isnan(0.0) ? _1694 : (isnan(_1694) ? 0.0 : max(_1694, 0.0));
        float _1695 = isnan(1.0) ? _4365 : (isnan(_4365) ? 1.0 : min(_4365, 1.0));
        float _1696 = _1695 * 2.0;
        float _1700 = (1.0 - _1695) / (_1695 + 1.0);
        float _4376 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1701 = isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0));
        float _1710 = ((((1.0 - _1701) * (_1696 + 2.0)) * exp2(log2(isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * (_1696 + 1.0))) + _1701) * _1661;
        float _1712 = ((_1602.y + (-0.5)) * 0.5) * _1636;
        float _1714 = ((_1609.y + (-0.5)) * 0.5) * _1643;
        float _1716 = ((_1616.y + (-0.5)) * 0.5) * _1650;
        float _1717 = dot(vec3(_1712, _1714, _1716), vec3(_1712, _1714, _1716));
        float _1722 = (_1717 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1717);
        float _1730 = (dot(vec3(_1288, _1289, _1290), vec3(_1722 * _1712, _1722 * _1714, _1722 * _1716)) + 1.0) * 0.5;
        float _4387 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
        float _1739 = sqrt(((_1714 * _1714) + (_1712 * _1712)) + (_1716 * _1716)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4398 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
        float _1741 = _1740 * 2.0;
        float _1745 = (1.0 - _1740) / (_1740 + 1.0);
        float _4409 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1746 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
        float _1755 = ((((1.0 - _1746) * (_1741 + 2.0)) * exp2(log2(isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0))) * (_1741 + 1.0))) + _1746) * _1662;
        float _1757 = ((_1602.z + (-0.5)) * 0.5) * _1636;
        float _1759 = ((_1609.z + (-0.5)) * 0.5) * _1643;
        float _1761 = ((_1616.z + (-0.5)) * 0.5) * _1650;
        float _1762 = dot(vec3(_1757, _1759, _1761), vec3(_1757, _1759, _1761));
        float _1767 = (_1762 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1762);
        float _1775 = (dot(vec3(_1288, _1289, _1290), vec3(_1767 * _1757, _1767 * _1759, _1767 * _1761)) + 1.0) * 0.5;
        float _4420 = isnan(0.0) ? _1775 : (isnan(_1775) ? 0.0 : max(_1775, 0.0));
        float _1784 = sqrt(((_1759 * _1759) + (_1757 * _1757)) + (_1761 * _1761)) / (_1663 + 9.9999997473787516355514526367188e-06);
        float _4431 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1785 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
        float _1786 = _1785 * 2.0;
        float _1790 = (1.0 - _1785) / (_1785 + 1.0);
        float _4442 = isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0));
        float _1791 = isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0));
        float _1800 = ((((1.0 - _1791) * (_1786 + 2.0)) * exp2(log2(isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0))) * (_1786 + 1.0))) + _1791) * _1663;
        _1808 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)));
        _1809 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)));
        _1810 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0)));
    }
    else
    {
        _1808 = 0.0;
        _1809 = 0.0;
        _1810 = 0.0;
    }
    float _2100;
    float _2101;
    float _2102;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1833 = fma(_1512, cbModelParam._m0[30u].z, fma(_1508, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1504));
        float _1837 = fma(_1512, cbModelParam._m0[31u].z, fma(_1508, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1504));
        float _1841 = fma(_1512, cbModelParam._m0[32u].z, fma(_1508, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1504));
        float _1863 = _1504 + _1288;
        float _1864 = _1508 + _1289;
        float _1865 = _1512 + _1290;
        float _1875 = fma(_1865, cbModelParam._m0[30u].z, fma(_1864, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1863)) - _1833;
        float _1876 = fma(_1865, cbModelParam._m0[31u].z, fma(_1864, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1863)) - _1837;
        float _1877 = fma(_1865, cbModelParam._m0[32u].z, fma(_1864, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1863)) - _1841;
        float _1881 = inversesqrt(dot(vec3(_1875, _1876, _1877), vec3(_1875, _1876, _1877)));
        float _1893 = ((_1881 * _1875) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1833 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1894 = ((_1881 * _1876) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1837 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1895 = ((_1881 * _1877) / cbModelParam._m0[35u].z) + ((((((_1841 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1897 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1893, _1894, _1895), 0.0);
        vec4 _1904 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1893, _1894, _1895), 0.0);
        vec4 _1911 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1893, _1894, _1895), 0.0);
        vec4 _1918 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1893, _1894, _1895), 0.0);
        float _1930 = exp2((_1897.w + (-0.5)) * 20.0) * 2.0;
        float _1937 = exp2((_1904.w + (-0.5)) * 20.0) * 2.0;
        float _1944 = exp2((_1911.w + (-0.5)) * 20.0) * 2.0;
        float _1951 = exp2((_1918.w + (-0.5)) * 20.0) * 2.0;
        float _1952 = _1951 * (_1918.x + (-0.5));
        float _1953 = _1951 * (_1918.y + (-0.5));
        float _1954 = _1951 * (_1918.z + (-0.5));
        float _1955 = isnan(0.0) ? _1952 : (isnan(_1952) ? 0.0 : max(_1952, 0.0));
        float _1956 = isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0));
        float _1957 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
        float _1959 = ((_1897.x + (-0.5)) * 0.5) * _1930;
        float _1961 = ((_1904.x + (-0.5)) * 0.5) * _1937;
        float _1963 = ((_1911.x + (-0.5)) * 0.5) * _1944;
        float _1964 = dot(vec3(_1959, _1961, _1963), vec3(_1959, _1961, _1963));
        float _1969 = (_1964 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1964);
        float _1977 = (dot(vec3(_1288, _1289, _1290), vec3(_1969 * _1959, _1969 * _1961, _1969 * _1963)) + 1.0) * 0.5;
        float _4483 = isnan(0.0) ? _1977 : (isnan(_1977) ? 0.0 : max(_1977, 0.0));
        float _1986 = sqrt(((_1961 * _1961) + (_1959 * _1959)) + (_1963 * _1963)) / (_1955 + 9.9999997473787516355514526367188e-06);
        float _4494 = isnan(0.0) ? _1986 : (isnan(_1986) ? 0.0 : max(_1986, 0.0));
        float _1987 = isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0));
        float _1988 = _1987 * 2.0;
        float _1992 = (1.0 - _1987) / (_1987 + 1.0);
        float _4505 = isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0));
        float _1993 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _2002 = ((((1.0 - _1993) * (_1988 + 2.0)) * exp2(log2(isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0))) * (_1988 + 1.0))) + _1993) * _1955;
        float _2004 = ((_1897.y + (-0.5)) * 0.5) * _1930;
        float _2006 = ((_1904.y + (-0.5)) * 0.5) * _1937;
        float _2008 = ((_1911.y + (-0.5)) * 0.5) * _1944;
        float _2009 = dot(vec3(_2004, _2006, _2008), vec3(_2004, _2006, _2008));
        float _2014 = (_2009 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2009);
        float _2022 = (dot(vec3(_1288, _1289, _1290), vec3(_2014 * _2004, _2014 * _2006, _2014 * _2008)) + 1.0) * 0.5;
        float _4516 = isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0));
        float _2031 = sqrt(((_2006 * _2006) + (_2004 * _2004)) + (_2008 * _2008)) / (_1956 + 9.9999997473787516355514526367188e-06);
        float _4527 = isnan(0.0) ? _2031 : (isnan(_2031) ? 0.0 : max(_2031, 0.0));
        float _2032 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _2033 = _2032 * 2.0;
        float _2037 = (1.0 - _2032) / (_2032 + 1.0);
        float _4538 = isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0));
        float _2038 = isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0));
        float _2047 = ((((1.0 - _2038) * (_2033 + 2.0)) * exp2(log2(isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0))) * (_2033 + 1.0))) + _2038) * _1956;
        float _2049 = ((_1897.z + (-0.5)) * 0.5) * _1930;
        float _2051 = ((_1904.z + (-0.5)) * 0.5) * _1937;
        float _2053 = ((_1911.z + (-0.5)) * 0.5) * _1944;
        float _2054 = dot(vec3(_2049, _2051, _2053), vec3(_2049, _2051, _2053));
        float _2059 = (_2054 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2054);
        float _2067 = (dot(vec3(_1288, _1289, _1290), vec3(_2059 * _2049, _2059 * _2051, _2059 * _2053)) + 1.0) * 0.5;
        float _4549 = isnan(0.0) ? _2067 : (isnan(_2067) ? 0.0 : max(_2067, 0.0));
        float _2076 = sqrt(((_2051 * _2051) + (_2049 * _2049)) + (_2053 * _2053)) / (_1957 + 9.9999997473787516355514526367188e-06);
        float _4560 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
        float _2077 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _2078 = _2077 * 2.0;
        float _2082 = (1.0 - _2077) / (_2077 + 1.0);
        float _4571 = isnan(0.0) ? _2082 : (isnan(_2082) ? 0.0 : max(_2082, 0.0));
        float _2083 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
        float _2092 = ((((1.0 - _2083) * (_2078 + 2.0)) * exp2(log2(isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0))) * (_2078 + 1.0))) + _2083) * _1957;
        _2100 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0)));
        _2101 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0)));
        _2102 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0)));
    }
    else
    {
        _2100 = 0.0;
        _2101 = 0.0;
        _2102 = 0.0;
    }
    float _2112 = (cbModelParam._m0[1u].x * (_2100 - _1808)) + _1808;
    float _2113 = (cbModelParam._m0[1u].x * (_2101 - _1809)) + _1809;
    float _2114 = (cbModelParam._m0[1u].x * (_2102 - _1810)) + _1810;
    float _2135 = fma(_2114, cbSceneParam._m0[89u].z, fma(_2113, cbSceneParam._m0[89u].y, _2112 * cbSceneParam._m0[89u].x));
    float _2138 = fma(_2114, cbSceneParam._m0[90u].z, fma(_2113, cbSceneParam._m0[90u].y, _2112 * cbSceneParam._m0[90u].x));
    float _2141 = fma(_2114, cbSceneParam._m0[91u].z, fma(_2113, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2112));
    float _2146 = (0.959999978542327880859375 - _1448) * _1434;
    uvec4 _2152 = floatBitsToUint(cbInstanceData._m0[_1229]);
    uint _2154 = _2152.x * 14u;
    uint _2155 = _2154 + 13u;
    float _2162 = _1434 + (-1.0);
    float _2167 = (cbLight._m0[_2155].x * _2162) + 1.0;
    float _2168 = (cbLight._m0[_2155].y * _2162) + 1.0;
    float _2169 = (cbLight._m0[_2155].z * _2162) + 1.0;
    float _2170 = (cbLight._m0[_2155].w * _2162) + 1.0;
    uint _2171 = _2154 + 5u;
    float _2177 = isnan(1.0) ? _2168 : (isnan(_2168) ? 1.0 : min(_2168, 1.0));
    uint _2181 = _2154 + 4u;
    float _2187 = isnan(1.0) ? _2167 : (isnan(_2167) ? 1.0 : min(_2167, 1.0));
    uint _2191 = _2154 | 1u;
    float _2202 = dot(vec3(cbLight._m0[_2154].xyz), vec3(_1288, _1289, _1290));
    float _2205 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_1288, _1289, _1290));
    float _4622 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _4633 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
    float _2210 = (isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))) * 0.3183098733425140380859375;
    float _2212 = (isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0))) * 0.3183098733425140380859375;
    float _2219 = ((cbLight._m0[_2171].x * _2177) * _2212) + ((cbLight._m0[_2181].x * _2187) * _2210);
    float _2220 = ((_2177 * cbLight._m0[_2171].y) * _2212) + ((_2187 * cbLight._m0[_2181].y) * _2210);
    float _2221 = ((_2177 * cbLight._m0[_2171].z) * _2212) + ((_2187 * cbLight._m0[_2181].z) * _2210);
    uvec4 _2225 = floatBitsToUint(cbLight._m0[_2154 + 12u]);
    bool _2227 = _2225.x == 0u;
    float _2228;
    float _2230;
    float _2232;
    if (_2227)
    {
        _2228 = _2219;
        _2230 = _2220;
        _2232 = _2221;
    }
    else
    {
        uint _2236 = _2154 + 6u;
        float _2252 = (dot(vec3(cbLight._m0[_2154 + 2u].xyz), vec3(_1288, _1289, _1290)) * 0.5) + 0.5;
        float _2253 = _2252 * _2252;
        float _4644 = isnan(0.0) ? _2253 : (isnan(_2253) ? 0.0 : max(_2253, 0.0));
        float _2254 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
        float _2255 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
        _2228 = (((cbLight._m0[_2236].x * 0.3183098733425140380859375) * _2254) * _2255) + _2219;
        _2230 = (((cbLight._m0[_2236].y * 0.3183098733425140380859375) * _2254) * _2255) + _2220;
        _2232 = (((cbLight._m0[_2236].z * 0.3183098733425140380859375) * _2254) * _2255) + _2221;
    }
    bool _2235 = _2225.y == 0u;
    float _2265;
    float _2267;
    float _2269;
    if (_2235)
    {
        _2265 = _2228;
        _2267 = _2230;
        _2269 = _2232;
    }
    else
    {
        uint _2426 = _2154 + 7u;
        float _2442 = (dot(vec3(cbLight._m0[_2154 + 3u].xyz), vec3(_1288, _1289, _1290)) * 0.5) + 0.5;
        float _2443 = _2442 * _2442;
        float _4660 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
        float _2444 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _2445 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
        _2265 = (((cbLight._m0[_2426].x * 0.3183098733425140380859375) * _2444) * _2445) + _2228;
        _2267 = (((cbLight._m0[_2426].y * 0.3183098733425140380859375) * _2444) * _2445) + _2230;
        _2269 = (((cbLight._m0[_2426].z * 0.3183098733425140380859375) * _2444) * _2445) + _2232;
    }
    uint _2272 = _2154 + 8u;
    float _2285 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2154].w)) * _1292) * 0.949999988079071044921875);
    float _2286 = _2285 * _2285;
    float _2287 = cbLight._m0[_2154].x + _1363;
    float _2288 = cbLight._m0[_2154].y + _1364;
    float _2289 = cbLight._m0[_2154].z + _1365;
    float _2293 = inversesqrt(dot(vec3(_2287, _2288, _2289), vec3(_2287, _2288, _2289)));
    float _2294 = _2293 * _2287;
    float _2295 = _2293 * _2288;
    float _2296 = _2293 * _2289;
    float _2297 = dot(vec3(_1288, _1289, _1290), vec3(cbLight._m0[_2154].xyz));
    float _4676 = isnan(0.0) ? _2297 : (isnan(_2297) ? 0.0 : max(_2297, 0.0));
    float _2300 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
    float _2301 = dot(vec3(_1288, _1289, _1290), vec3(_1363, _1364, _1365));
    float _4687 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0));
    float _2304 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
    float _2305 = dot(vec3(_1288, _1289, _1290), vec3(_2294, _2295, _2296));
    float _4698 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2308 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
    float _2309 = dot(vec3(cbLight._m0[_2154].xyz), vec3(_2294, _2295, _2296));
    float _4709 = isnan(0.0) ? _2309 : (isnan(_2309) ? 0.0 : max(_2309, 0.0));
    float _2313 = _2286 * _2286;
    float _2317 = ((_2308 * _2308) * (_2313 + (-1.0))) + 1.0;
    float _2327 = (exp2(log2(1.0 - (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2328 = 1.0 - _2286;
    float _2339 = (0.5 / (((_2304 * ((_2300 * _2328) + _2286)) + 9.9999999392252902907785028219223e-09) + (((_2304 * _2328) + _2286) * _2300))) * _2300;
    float _4720 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _2341 = (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_2313 / ((_2317 * _2317) * 3.141590118408203125));
    uint _2352 = _2154 + 9u;
    float _2363 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2191].w)) * _1292) * 0.949999988079071044921875);
    float _2364 = _2363 * _2363;
    float _2365 = cbLight._m0[_2191].x + _1363;
    float _2366 = cbLight._m0[_2191].y + _1364;
    float _2367 = cbLight._m0[_2191].z + _1365;
    float _2371 = inversesqrt(dot(vec3(_2365, _2366, _2367), vec3(_2365, _2366, _2367)));
    float _2372 = _2371 * _2365;
    float _2373 = _2371 * _2366;
    float _2374 = _2371 * _2367;
    float _2375 = dot(vec3(_1288, _1289, _1290), vec3(cbLight._m0[_2191].xyz));
    float _4731 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
    float _2378 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
    float _2379 = dot(vec3(_1288, _1289, _1290), vec3(_2372, _2373, _2374));
    float _4742 = isnan(0.0) ? _2379 : (isnan(_2379) ? 0.0 : max(_2379, 0.0));
    float _2382 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
    float _2383 = dot(vec3(cbLight._m0[_2191].xyz), vec3(_2372, _2373, _2374));
    float _4753 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
    float _2387 = _2364 * _2364;
    float _2391 = ((_2382 * _2382) * (_2387 + (-1.0))) + 1.0;
    float _2400 = (exp2(log2(1.0 - (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2401 = 1.0 - _2364;
    float _2411 = (0.5 / (((_2304 * ((_2378 * _2401) + _2364)) + 9.9999999392252902907785028219223e-09) + (((_2304 * _2401) + _2364) * _2378))) * _2378;
    float _4764 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2413 = (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (_2387 / ((_2391 * _2391) * 3.141590118408203125));
    float _2423 = (((_2400 * cbLight._m0[_2352].x) * _2413) * _2177) + (((_2327 * cbLight._m0[_2272].x) * _2341) * _2187);
    float _2424 = (((_2400 * cbLight._m0[_2352].y) * _2413) * _2177) + (((_2327 * cbLight._m0[_2272].y) * _2341) * _2187);
    float _2425 = (((_2400 * cbLight._m0[_2352].z) * _2413) * _2177) + (((_2327 * cbLight._m0[_2272].z) * _2341) * _2187);
    float _2455;
    float _2457;
    float _2459;
    if (_2227)
    {
        _2455 = _2423;
        _2457 = _2424;
        _2459 = _2425;
    }
    else
    {
        uint _2461 = _2154 + 2u;
        uint _2465 = _2154 + 10u;
        float _2479 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2461].w)) * _1292) * 0.949999988079071044921875);
        float _2480 = _2479 * _2479;
        float _2481 = cbLight._m0[_2461].x + _1363;
        float _2482 = cbLight._m0[_2461].y + _1364;
        float _2483 = cbLight._m0[_2461].z + _1365;
        float _2487 = inversesqrt(dot(vec3(_2481, _2482, _2483), vec3(_2481, _2482, _2483)));
        float _2488 = _2487 * _2481;
        float _2489 = _2487 * _2482;
        float _2490 = _2487 * _2483;
        float _2491 = dot(vec3(_1288, _1289, _1290), vec3(cbLight._m0[_2461].xyz));
        float _4775 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
        float _2494 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
        float _2495 = dot(vec3(_1288, _1289, _1290), vec3(_2488, _2489, _2490));
        float _4786 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
        float _2498 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
        float _2499 = dot(vec3(cbLight._m0[_2461].xyz), vec3(_2488, _2489, _2490));
        float _4797 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
        float _2503 = _2480 * _2480;
        float _2507 = ((_2498 * _2498) * (_2503 + (-1.0))) + 1.0;
        float _2516 = (exp2(log2(1.0 - (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2517 = 1.0 - _2480;
        float _2527 = (0.5 / (((_2304 * ((_2494 * _2517) + _2480)) + 9.9999999392252902907785028219223e-09) + (((_2304 * _2517) + _2480) * _2494))) * _2494;
        float _4808 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
        float _2529 = (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0))) * (_2503 / ((_2507 * _2507) * 3.141590118408203125));
        float _2530 = isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0));
        _2455 = (((_2516 * cbLight._m0[_2465].x) * _2529) * _2530) + _2423;
        _2457 = (((_2516 * cbLight._m0[_2465].y) * _2529) * _2530) + _2424;
        _2459 = (((_2516 * cbLight._m0[_2465].z) * _2529) * _2530) + _2425;
    }
    float _2540;
    float _2542;
    float _2544;
    if (_2235)
    {
        _2540 = _2455;
        _2542 = _2457;
        _2544 = _2459;
    }
    else
    {
        uint _2551 = _2154 + 3u;
        uint _2555 = _2154 + 11u;
        float _2569 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2551].w)) * _1292) * 0.949999988079071044921875);
        float _2570 = _2569 * _2569;
        float _2571 = cbLight._m0[_2551].x + _1363;
        float _2572 = cbLight._m0[_2551].y + _1364;
        float _2573 = cbLight._m0[_2551].z + _1365;
        float _2577 = inversesqrt(dot(vec3(_2571, _2572, _2573), vec3(_2571, _2572, _2573)));
        float _2578 = _2577 * _2571;
        float _2579 = _2577 * _2572;
        float _2580 = _2577 * _2573;
        float _2581 = dot(vec3(_1288, _1289, _1290), vec3(cbLight._m0[_2551].xyz));
        float _4824 = isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0));
        float _2584 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
        float _2585 = dot(vec3(_1288, _1289, _1290), vec3(_2578, _2579, _2580));
        float _4835 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
        float _2588 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _2589 = dot(vec3(cbLight._m0[_2551].xyz), vec3(_2578, _2579, _2580));
        float _4846 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
        float _2593 = _2570 * _2570;
        float _2597 = ((_2588 * _2588) * (_2593 + (-1.0))) + 1.0;
        float _2606 = (exp2(log2(1.0 - (isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2607 = 1.0 - _2570;
        float _2617 = (0.5 / (((_2304 * ((_2584 * _2607) + _2570)) + 9.9999999392252902907785028219223e-09) + (((_2304 * _2607) + _2570) * _2584))) * _2584;
        float _4857 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
        float _2619 = (isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_2593 / ((_2597 * _2597) * 3.141590118408203125));
        float _2620 = isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0));
        _2540 = (((_2606 * cbLight._m0[_2555].x) * _2619) * _2620) + _2455;
        _2542 = (((_2606 * cbLight._m0[_2555].y) * _2619) * _2620) + _2457;
        _2544 = (((_2606 * cbLight._m0[_2555].z) * _2619) * _2620) + _2459;
    }
    float _2729;
    float _2731;
    float _2733;
    float _2735;
    float _2737;
    float _2739;
    if (_2152.y == 0u)
    {
        float _2669 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2670 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2669;
        float _2671 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2669;
        float _2672 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2669;
        uvec4 _2684 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2685 = _2684.x;
        uint _2696 = uint((float(_2684.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1371) / _2685))) + floor(float(uint(cbSceneParam._m0[85u].x * _1370) / _2685)));
        float _2706 = (log2(_2672 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2707 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
        uint _2710 = uint(isnan(14.0) ? _2707 : (isnan(_2707) ? 14.0 : min(_2707, 14.0)));
        uvec4 _2715 = texelFetch(g_lightClusterGridBuffer, int(((_2710 << 2u) + (_2696 << 6u)) >> 2u));
        uint _2716 = _2715.x;
        uint _2717 = _2684.z;
        float _2855;
        float _2857;
        float _2859;
        float _2861;
        float _2863;
        float _2865;
        if (((((1u << ((_2717 >> 4u) & 15u)) + 4294967295u) & _2716) == 0u) || ((_2717 & 240u) == 0u))
        {
            _2855 = 0.0;
            _2857 = 0.0;
            _2859 = 0.0;
            _2861 = 0.0;
            _2863 = 0.0;
            _2865 = 0.0;
        }
        else
        {
            float _2856;
            float _2858;
            float _2860;
            float _2862;
            float _2864;
            float _2866;
            float _3061 = 0.0;
            float _3062 = 0.0;
            float _3063 = 0.0;
            float _3064 = 0.0;
            float _3065 = 0.0;
            float _3066 = 0.0;
            uint _3067 = 0u;
            uint _3076;
            bool _3077;
            for (;;)
            {
                _3076 = texelFetch(g_lightClassification, int((((_2710 << 5u) + (_2696 << 9u)) + (_3067 << 2u)) >> 2u)).x;
                _3077 = _3076 == 0u;
                float frontier_phi_25_pred;
                float frontier_phi_25_pred_1;
                float frontier_phi_25_pred_2;
                float frontier_phi_25_pred_3;
                float frontier_phi_25_pred_4;
                float frontier_phi_25_pred_5;
                if (_3077)
                {
                    frontier_phi_25_pred = _3066;
                    frontier_phi_25_pred_1 = _3065;
                    frontier_phi_25_pred_2 = _3064;
                    frontier_phi_25_pred_3 = _3063;
                    frontier_phi_25_pred_4 = _3062;
                    frontier_phi_25_pred_5 = _3061;
                }
                else
                {
                    float _3270;
                    float _3271;
                    float _3272;
                    float _3273;
                    float _3274;
                    float _3275;
                    uint _3276;
                    _3270 = _3061;
                    _3271 = _3062;
                    _3272 = _3063;
                    _3273 = _3064;
                    _3274 = _3065;
                    _3275 = _3066;
                    _3276 = _3076;
                    float _3201;
                    float _3202;
                    float _3203;
                    float _3204;
                    float _3205;
                    float _3206;
                    for (;;)
                    {
                        uint _3280 = uint(findLSB(_3276)) + (_3067 << 5u);
                        uint _3277 = (_3276 + 4294967295u) & _3276;
                        uint _3282 = _3280 * 48u;
                        vec4 _3296 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3282)).x, texelFetch(g_PointLightRenderingBuffer, int(_3282 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3282 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3282 + 3u)).x));
                        uint _3302 = (_3280 * 48u) + 4u;
                        vec4 _3315 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3302)).x, texelFetch(g_PointLightRenderingBuffer, int(_3302 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3302 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3302 + 3u)).x));
                        uint _3321 = (_3280 * 48u) + 8u;
                        vec3 _3332 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3321)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3321 + 2u)).x));
                        float _3336 = _3296.x - _2670;
                        float _3337 = _3296.y - _2671;
                        float _3338 = _3296.z - _2672;
                        float _3339 = dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338));
                        float _3342 = inversesqrt(_3339);
                        float _3343 = _3342 * _3336;
                        float _3344 = _3342 * _3337;
                        float _3345 = _3342 * _3338;
                        float _3346 = dot(vec3(_1391, _1394, _1397), vec3(_3343, _3344, _3345));
                        float _3351 = 1.0 - (_3339 * _3296.w);
                        float _4883 = isnan(0.0) ? _3351 : (isnan(_3351) ? 0.0 : max(_3351, 0.0));
                        float _3352 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
                        float _3353 = sqrt(_3339) * _3315.w;
                        float _3356 = 1.39999997615814208984375 / (_3353 + 1.39999997615814208984375);
                        float _3357 = _3356 * _3356;
                        float _3360 = ((1.0 - _3357) * _3346) + _3357;
                        float _3363 = _3353 * _3353;
                        float _3367 = ((isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0))) * _3352) / ((_3363 * 0.699999988079071044921875) + 1.0);
                        float _3371 = (-0.0) - _2670;
                        float _3372 = (-0.0) - _2671;
                        float _3373 = (-0.0) - _2672;
                        float _3377 = inversesqrt(dot(vec3(_3371, _3372, _3373), vec3(_3371, _3372, _3373)));
                        float _3378 = _3377 * _3371;
                        float _3379 = _3377 * _3372;
                        float _3380 = _3377 * _3373;
                        float _3388 = exp2(log2(1.0 / ((_3363 * 3.5) + 5.0)) * 0.25);
                        float _3390 = 1.0 - sqrt(_1292);
                        float _3397 = sqrt(1.0 - ((1.0 - (_3390 * _3390)) * (1.0 - (_3388 * _3388))));
                        float _3398 = _3397 * _3397;
                        float _3399 = _3398 * _3398;
                        float _3400 = _3378 + _3343;
                        float _3401 = _3379 + _3344;
                        float _3402 = _3380 + _3345;
                        float _3406 = inversesqrt(dot(vec3(_3400, _3401, _3402), vec3(_3400, _3401, _3402)));
                        float _3410 = dot(vec3(_1391, _1394, _1397), vec3(_3378, _3379, _3380));
                        float _4899 = isnan(0.0) ? _3410 : (isnan(_3410) ? 0.0 : max(_3410, 0.0));
                        float _3413 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
                        float _3414 = dot(vec3(_1391, _1394, _1397), vec3(_3406 * _3400, _3406 * _3401, _3406 * _3402));
                        float _4910 = isnan(0.0) ? _3414 : (isnan(_3414) ? 0.0 : max(_3414, 0.0));
                        float _3417 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                        float _3421 = ((_3417 * _3417) * (_3399 + (-1.0))) + 1.0;
                        float _3422 = _3356 * _3398;
                        float _3423 = _3422 * _3422;
                        float _3426 = ((1.0 - _3423) * _3346) + _3423;
                        float _4921 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                        float _3427 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                        float _3428 = 1.0 - _3398;
                        float _3438 = (0.5 / (((_3427 * ((_3413 * _3428) + _3398)) + 9.9999999392252902907785028219223e-09) + (((_3427 * _3428) + _3398) * _3413))) * _3427;
                        float _4932 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                        float _3449 = (((_3399 * 3.1415927410125732421875) * (isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0)))) / ((_3421 * _3421) * ((_3363 * 2.1991131305694580078125) + 3.141590118408203125))) * _3352;
                        _3204 = (_3367 * _3315.x) + _3273;
                        _3205 = (_3367 * _3315.y) + _3274;
                        _3206 = (_3367 * _3315.z) + _3275;
                        _3201 = (_3449 * _3332.x) + _3270;
                        _3202 = (_3449 * _3332.y) + _3271;
                        _3203 = (_3449 * _3332.z) + _3272;
                        if (_3277 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3270 = _3201;
                            _3271 = _3202;
                            _3272 = _3203;
                            _3273 = _3204;
                            _3274 = _3205;
                            _3275 = _3206;
                            _3276 = _3277;
                        }
                    }
                    frontier_phi_25_pred = _3206;
                    frontier_phi_25_pred_1 = _3205;
                    frontier_phi_25_pred_2 = _3204;
                    frontier_phi_25_pred_3 = _3203;
                    frontier_phi_25_pred_4 = _3202;
                    frontier_phi_25_pred_5 = _3201;
                }
                _2866 = frontier_phi_25_pred;
                _2864 = frontier_phi_25_pred_1;
                _2862 = frontier_phi_25_pred_2;
                _2860 = frontier_phi_25_pred_3;
                _2858 = frontier_phi_25_pred_4;
                _2856 = frontier_phi_25_pred_5;
                uint _3068 = _3067 + 1u;
                if (_3068 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3061 = _2856;
                    _3062 = _2858;
                    _3063 = _2860;
                    _3064 = _2862;
                    _3065 = _2864;
                    _3066 = _2866;
                    _3067 = _3068;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2855 = _2856;
            _2857 = _2858;
            _2859 = _2860;
            _2861 = _2862;
            _2863 = _2864;
            _2865 = _2866;
        }
        uvec4 _2869 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2870 = _2869.z;
        uint _2872 = (_2870 >> 8u) & 15u;
        float _3029;
        float _3031;
        float _3033;
        float _3035;
        float _3037;
        float _3039;
        if (((4294967295u << _2872) & _2716) == 0u)
        {
            _3029 = _2855;
            _3031 = _2857;
            _3033 = _2859;
            _3035 = _2861;
            _3037 = _2863;
            _3039 = _2865;
        }
        else
        {
            float _3054 = inversesqrt(dot(vec3(_2670, _2671, _2672), vec3(_2670, _2671, _2672)));
            float _3055 = _3054 * _2670;
            float _3056 = _3054 * _2671;
            float _3057 = _3054 * _2672;
            float frontier_phi_19_20_ladder;
            float frontier_phi_19_20_ladder_1;
            float frontier_phi_19_20_ladder_2;
            float frontier_phi_19_20_ladder_3;
            float frontier_phi_19_20_ladder_4;
            float frontier_phi_19_20_ladder_5;
            if (_2872 < ((_2870 >> 12u) & 15u))
            {
                float _3030;
                float _3032;
                float _3034;
                float _3036;
                float _3038;
                float _3040;
                float _3253 = _2855;
                float _3254 = _2857;
                float _3255 = _2859;
                float _3256 = _2861;
                float _3257 = _2863;
                float _3258 = _2865;
                uint _3259 = _2872;
                uint _3268;
                bool _3269;
                for (;;)
                {
                    _3268 = texelFetch(g_lightClassification, int((((_2710 << 5u) + (_2696 << 9u)) + (_3259 << 2u)) >> 2u)).x;
                    _3269 = _3268 == 0u;
                    float frontier_phi_33_pred;
                    float frontier_phi_33_pred_1;
                    float frontier_phi_33_pred_2;
                    float frontier_phi_33_pred_3;
                    float frontier_phi_33_pred_4;
                    float frontier_phi_33_pred_5;
                    if (_3269)
                    {
                        frontier_phi_33_pred = _3258;
                        frontier_phi_33_pred_1 = _3257;
                        frontier_phi_33_pred_2 = _3256;
                        frontier_phi_33_pred_3 = _3254;
                        frontier_phi_33_pred_4 = _3253;
                        frontier_phi_33_pred_5 = _3255;
                    }
                    else
                    {
                        float _3492;
                        float _3493;
                        float _3494;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3786;
                        float _3787;
                        float _3788;
                        float _3789;
                        float _3790;
                        float _3791;
                        float _3505 = _3253;
                        float _3506 = _3254;
                        float _3507 = _3255;
                        float _3508 = _3256;
                        float _3509 = _3257;
                        float _3510 = _3258;
                        uint _3511 = _3268;
                        uint _3512;
                        vec4 _3537;
                        float _3538;
                        vec4 _3553;
                        vec3 _3565;
                        vec4 _3580;
                        vec4 _3595;
                        float _3641;
                        bool _3642;
                        for (;;)
                        {
                            uint _3522 = ((_3259 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3511));
                            _3512 = (_3511 + 4294967295u) & _3511;
                            uint _3524 = _3522 * 40u;
                            _3537 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3524)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3524 + 3u)).x));
                            _3538 = _3537.w;
                            uint _3540 = (_3522 * 40u) + 4u;
                            _3553 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3540)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 3u)).x));
                            uint _3555 = (_3522 * 40u) + 8u;
                            _3565 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3555)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3555 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3555 + 2u)).x));
                            uint _3567 = (_3522 * 40u) + 16u;
                            _3580 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3567)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 3u)).x));
                            uint _3582 = (_3522 * 40u) + 20u;
                            _3595 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3582)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3582 + 3u)).x));
                            uint _3597 = (_3522 * 40u) + 24u;
                            vec4 _3610 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3597)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3597 + 3u)).x));
                            uint _3616 = (_3522 * 40u) + 28u;
                            vec4 _3629 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3616)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3616 + 3u)).x));
                            _3641 = fma(_2672, _3629.z, fma(_2671, _3629.y, _3629.x * _2670)) + _3629.w;
                            _3642 = !((fma(_2672, _3610.z, fma(_2671, _3610.y, _3610.x * _2670)) + _3610.w) <= 0.0);
                            float frontier_phi_39_pred;
                            float frontier_phi_39_pred_1;
                            float frontier_phi_39_pred_2;
                            float frontier_phi_39_pred_3;
                            float frontier_phi_39_pred_4;
                            float frontier_phi_39_pred_5;
                            if (_3642)
                            {
                                float _3669 = _3537.x - _2670;
                                float _3670 = _3537.y - _2671;
                                float _3671 = _3537.z - _2672;
                                float _3672 = dot(vec3(_3669, _3670, _3671), vec3(_3669, _3670, _3671));
                                float _3675 = inversesqrt(_3672);
                                float _3676 = _3675 * _3669;
                                float _3677 = _3675 * _3670;
                                float _3678 = _3675 * _3671;
                                float _3682 = 1.0 - (_3672 / (_3538 * _3538));
                                float _4943 = isnan(0.0) ? _3682 : (isnan(_3682) ? 0.0 : max(_3682, 0.0));
                                float _3683 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
                                float _3687 = sqrt(_3672) * _3553.w;
                                float _3689 = 1.39999997615814208984375 / (_3687 + 1.39999997615814208984375);
                                float _3690 = _3689 * _3689;
                                float _3693 = ((1.0 - _3690) * dot(vec3(_3676, _3677, _3678), vec3(_1391, _1394, _1397))) + _3690;
                                float _3696 = _3687 * _3687;
                                float _3700 = (fma(_2672, _3580.z, fma(_2671, _3580.y, _3580.x * _2670)) + _3580.w) / _3641;
                                float _3701 = (fma(_2672, _3595.z, fma(_2671, _3595.y, _3595.x * _2670)) + _3595.w) / _3641;
                                float _3705 = 1.0 - dot(vec2(_3700, _3701), vec2(_3700, _3701));
                                float _4959 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                                float _3706 = isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0));
                                float _3707 = _3706 * (((isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0))) * _3683) / ((_3696 * 0.699999988079071044921875) + 1.0));
                                float _3719 = exp2(log2(1.0 / ((_3696 * 3.5) + 5.0)) * 0.25);
                                float _3721 = 1.0 - sqrt(_1292);
                                float _3728 = sqrt(1.0 - ((1.0 - (_3721 * _3721)) * (1.0 - (_3719 * _3719))));
                                float _3729 = _3728 * _3728;
                                float _3730 = _3729 * _3729;
                                float _3731 = _3676 - _3055;
                                float _3732 = _3677 - _3056;
                                float _3733 = _3678 - _3057;
                                float _3737 = inversesqrt(dot(vec3(_3731, _3732, _3733), vec3(_3731, _3732, _3733)));
                                float _3741 = dot(vec3(_1391, _1394, _1397), vec3((-0.0) - _3055, (-0.0) - _3056, (-0.0) - _3057));
                                float _4970 = isnan(0.0) ? _3741 : (isnan(_3741) ? 0.0 : max(_3741, 0.0));
                                float _3744 = isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0));
                                float _3745 = dot(vec3(_1391, _1394, _1397), vec3(_3737 * _3731, _3737 * _3732, _3737 * _3733));
                                float _4981 = isnan(0.0) ? _3745 : (isnan(_3745) ? 0.0 : max(_3745, 0.0));
                                float _3748 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
                                float _3752 = ((_3748 * _3748) * (_3730 + (-1.0))) + 1.0;
                                float _3753 = _3689 * _3729;
                                float _3754 = _3753 * _3753;
                                float _3760 = ((1.0 - _3754) * dot(vec3(_1391, _1394, _1397), vec3(_3676, _3677, _3678))) + _3754;
                                float _4992 = isnan(0.0) ? _3760 : (isnan(_3760) ? 0.0 : max(_3760, 0.0));
                                float _3761 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
                                float _3762 = 1.0 - _3729;
                                float _3772 = (0.5 / (((_3761 * ((_3744 * _3762) + _3729)) + 9.9999999392252902907785028219223e-09) + (((_3761 * _3762) + _3729) * _3744))) * _3761;
                                float _5003 = isnan(0.0) ? _3772 : (isnan(_3772) ? 0.0 : max(_3772, 0.0));
                                float _3782 = (_3706 * _3683) * (((_3730 * 3.1415927410125732421875) * (isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0)))) / ((_3752 * _3752) * ((_3696 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_39_pred = _3707 * _3553.z;
                                frontier_phi_39_pred_1 = _3707 * _3553.y;
                                frontier_phi_39_pred_2 = _3707 * _3553.x;
                                frontier_phi_39_pred_3 = _3782 * _3565.z;
                                frontier_phi_39_pred_4 = _3782 * _3565.y;
                                frontier_phi_39_pred_5 = _3782 * _3565.x;
                            }
                            else
                            {
                                frontier_phi_39_pred = 0.0;
                                frontier_phi_39_pred_1 = 0.0;
                                frontier_phi_39_pred_2 = 0.0;
                                frontier_phi_39_pred_3 = 0.0;
                                frontier_phi_39_pred_4 = 0.0;
                                frontier_phi_39_pred_5 = 0.0;
                            }
                            _3791 = frontier_phi_39_pred;
                            _3790 = frontier_phi_39_pred_1;
                            _3789 = frontier_phi_39_pred_2;
                            _3788 = frontier_phi_39_pred_3;
                            _3787 = frontier_phi_39_pred_4;
                            _3786 = frontier_phi_39_pred_5;
                            _3495 = _3789 + _3508;
                            _3496 = _3790 + _3509;
                            _3497 = _3791 + _3510;
                            _3492 = _3786 + _3505;
                            _3493 = _3787 + _3506;
                            _3494 = _3788 + _3507;
                            if (_3512 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3505 = _3492;
                                _3506 = _3493;
                                _3507 = _3494;
                                _3508 = _3495;
                                _3509 = _3496;
                                _3510 = _3497;
                                _3511 = _3512;
                                continue;
                            }
                        }
                        frontier_phi_33_pred = _3497;
                        frontier_phi_33_pred_1 = _3496;
                        frontier_phi_33_pred_2 = _3495;
                        frontier_phi_33_pred_3 = _3493;
                        frontier_phi_33_pred_4 = _3492;
                        frontier_phi_33_pred_5 = _3494;
                    }
                    _3040 = frontier_phi_33_pred;
                    _3038 = frontier_phi_33_pred_1;
                    _3036 = frontier_phi_33_pred_2;
                    _3032 = frontier_phi_33_pred_3;
                    _3030 = frontier_phi_33_pred_4;
                    _3034 = frontier_phi_33_pred_5;
                    uint _3260 = _3259 + 1u;
                    if (_3260 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3253 = _3030;
                        _3254 = _3032;
                        _3255 = _3034;
                        _3256 = _3036;
                        _3257 = _3038;
                        _3258 = _3040;
                        _3259 = _3260;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_19_20_ladder = _3040;
                frontier_phi_19_20_ladder_1 = _3038;
                frontier_phi_19_20_ladder_2 = _3036;
                frontier_phi_19_20_ladder_3 = _3034;
                frontier_phi_19_20_ladder_4 = _3032;
                frontier_phi_19_20_ladder_5 = _3030;
            }
            else
            {
                frontier_phi_19_20_ladder = _2865;
                frontier_phi_19_20_ladder_1 = _2863;
                frontier_phi_19_20_ladder_2 = _2861;
                frontier_phi_19_20_ladder_3 = _2859;
                frontier_phi_19_20_ladder_4 = _2857;
                frontier_phi_19_20_ladder_5 = _2855;
            }
            _3029 = frontier_phi_19_20_ladder_5;
            _3031 = frontier_phi_19_20_ladder_4;
            _3033 = frontier_phi_19_20_ladder_3;
            _3035 = frontier_phi_19_20_ladder_2;
            _3037 = frontier_phi_19_20_ladder_1;
            _3039 = frontier_phi_19_20_ladder;
        }
        float _3044 = isnan(1.0) ? _1434 : (isnan(_1434) ? 1.0 : min(_1434, 1.0));
        _2729 = (_3044 * _3035) + _2265;
        _2731 = (_3044 * _3037) + _2267;
        _2733 = (_3044 * _3039) + _2269;
        _2735 = ((_3029 * 0.039999999105930328369140625) * _3044) + _2540;
        _2737 = ((_3031 * 0.039999999105930328369140625) * _3044) + _2542;
        _2739 = ((_3033 * 0.039999999105930328369140625) * _3044) + _2544;
    }
    else
    {
        _2729 = _2265;
        _2731 = _2267;
        _2733 = _2269;
        _2735 = _2540;
        _2737 = _2542;
        _2739 = _2544;
    }
    float _2760 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2761 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2762 = cbSceneParam._m0[86u].x * ((_1370 / cbSceneParam._m0[86u].x) + ((_1453 * 0.449999988079071044921875) * dot(vec3(_1288, _1289, _1290), vec3(_211, _212, _213))));
    float _2763 = isnan(_2760) ? _2762 : (isnan(_2762) ? _2760 : min(_2762, _2760));
    float _2764 = isnan(_2761) ? _1371 : (isnan(_1371) ? _2761 : min(_1371, _2761));
    vec4 _2766 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2763, _2764), 0.0);
    float _2768 = _2766.x;
    bool _2788 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2768)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2768))) > _1307;
    float _2789 = _2788 ? _2763 : _1370;
    float _2790 = _2788 ? _2764 : _1371;
    vec4 _2792 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2789, _2790));
    vec4 _2797 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2789, _2790));
    float _2799 = _2797.x;
    bool _2804 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2813 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2819 = (_2804 ? (_2813 / (cbSceneParam._m0[2u].x - _2799)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2799))) - _1307;
    float _2821 = cbMtdParam._m0[41u].w + cbMtdParam._m0[35u].w;
    float _2822 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _2823 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    bool _2829 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2833 = (isnan(_2819) ? 0.0 : (isnan(0.0) ? _2819 : max(0.0, _2819))) * (-1.44269502162933349609375);
    float _5034 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
    float _5045 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
    float _5056 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _2956;
    float _2957;
    float _2958;
    if ((1.0 - _1212) > 0.00999999977648258209228515625)
    {
        vec4 _2877 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2789, _2790), 0.0);
        float _2879 = _2877.x;
        float _2885 = (_2804 ? (_2813 / (cbSceneParam._m0[2u].x - _2879)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2879))) - _1307;
        uint _2891 = floatBitsToUint(cbInstanceData._m0[_1229]).x * 14u;
        uint _2897 = _2891 + 4u;
        float _2906 = dot(vec3(cbLight._m0[_2891].xyz), vec3(_218, _219, _220));
        float _2913 = dot(vec3((-0.0) - _1363, (-0.0) - _1364, (-0.0) - _1365), vec3((-0.0) - _218, (-0.0) - _219, (-0.0) - _220));
        float _2918 = ((isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2906 : (isnan(_2906) ? 0.001000000047497451305389404296875 : max(_2906, 0.001000000047497451305389404296875)))) + 1.0;
        float _2920 = (-0.0) - ((isnan(_2885) ? 0.0 : (isnan(0.0) ? _2885 : max(0.0, _2885))) * _2918);
        _2956 = _2829 ? 0.0 : ((((_1273 * cbMtdParam._m0[35u].w) * cbLight._m0[_2897].x) / ((_2918 * _2821) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2821 * 1.44269502162933349609375) * _2920)));
        _2957 = _2829 ? 0.0 : ((((_1273 * cbMtdParam._m0[36u].x) * cbLight._m0[_2897].y) / ((_2918 * _2822) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2822 * 1.44269502162933349609375) * _2920)));
        _2958 = _2829 ? 0.0 : ((((_1273 * cbMtdParam._m0[36u].y) * cbLight._m0[_2897].z) / ((_2918 * _2823) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2823 * 1.44269502162933349609375) * _2920)));
    }
    else
    {
        _2956 = 0.0;
        _2957 = 0.0;
        _2958 = 0.0;
    }
    float _2975 = 0.959999978542327880859375 - (_1444 * 0.959999978542327880859375);
    float _2976 = (_2956 + ((exp2(_2833 * (_2829 ? 0.0 : _2821)) * _2792.x) * cbSceneParam._m0[72u].w)) * _2975;
    float _2977 = (_2957 + ((exp2(_2833 * (_2829 ? 0.0 : _2822)) * _2792.y) * cbSceneParam._m0[72u].w)) * _2975;
    float _2978 = (_2958 + ((exp2(_2833 * (_2829 ? 0.0 : _2823)) * _2792.z) * cbSceneParam._m0[72u].w)) * _2975;
    float _3000 = _1370 / cbSceneParam._m0[86u].x;
    float _3001 = _1371 / cbSceneParam._m0[86u].y;
    vec4 _3015 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3000, _3001, (log2((isnan(cbSceneParam._m0[77u].w) ? _1307 : (isnan(_1307) ? cbSceneParam._m0[77u].w : min(_1307, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3017 = _3015.x;
    float _3018 = _3015.y;
    float _3019 = _3015.z;
    float _3020 = _3015.w;
    float _3118;
    float _3120;
    float _3122;
    float _3124;
    if (_1307 > cbSceneParam._m0[78u].w)
    {
        float _3082 = isnan(_1307) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1307 : min(cbSceneParam._m0[80u].w, _1307));
        float _3083 = _3082 / _1307;
        float _3094 = _3083 * _1356;
        float _3095 = _1357 * _3083;
        float _3096 = (-0.0) - _3095;
        float _3097 = _3083 * _1358;
        float _3099 = (cbSceneParam._m0[77u].w * _3096) / _3082;
        float _3100 = _3099 + cbSceneParam._m0[79u].w;
        float _3101 = cbSceneParam._m0[79u].w - _3095;
        float _3107 = sqrt(((_3094 * _3094) + (_3095 * _3095)) + (_3097 * _3097));
        float _3110 = (1.0 - (cbSceneParam._m0[77u].w / _3082)) * _3107;
        float _3116 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3117 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3454;
        if (abs((_3096 - _3099) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3454 = ((((_3100 > 0.0) ? exp2(_3116 * _3100) : (2.0 - exp2(_3117 * _3100))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3110;
        }
        else
        {
            float _3226 = 1.0 / cbSceneParam._m0[80u].x;
            float _3227 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : max(_3100, _3101));
            float _3228 = isnan(_3101) ? _3100 : (isnan(_3100) ? _3101 : min(_3100, _3101));
            float _3237 = isnan(0.0) ? _3227 : (isnan(_3227) ? 0.0 : min(_3227, 0.0));
            float _3238 = isnan(0.0) ? _3228 : (isnan(_3228) ? 0.0 : min(_3228, 0.0));
            _3454 = ((abs(_3107 / _3096) * cbSceneParam._m0[80u].y) * ((((_3237 - _3238) * 2.0) - ((exp2(_3116 * (isnan(0.0) ? _3227 : (isnan(_3227) ? 0.0 : max(_3227, 0.0)))) - exp2(_3116 * (isnan(0.0) ? _3228 : (isnan(_3228) ? 0.0 : max(_3228, 0.0))))) * _3226)) - ((exp2(_3117 * _3237) - exp2(_3117 * _3238)) * _3226))) + (_3110 * cbSceneParam._m0[80u].z);
        }
        vec4 _3456 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3000, _3001, 1.0), 0.0);
        float _3465 = exp2((_3454 * (-1.44269502162933349609375)) * (1.0 - _3456.w));
        float _3466 = log2(_3465);
        float _3482 = log2(_3020);
        _3118 = (exp2(_3482 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3466 * cbSceneParam._m0[78u].x)) * _3456.x) / cbSceneParam._m0[78u].x)) + _3017;
        _3120 = (exp2(_3482 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3466 * cbSceneParam._m0[78u].y)) * _3456.y) / cbSceneParam._m0[78u].y)) + _3018;
        _3122 = (exp2(_3482 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3466 * cbSceneParam._m0[78u].z)) * _3456.z) / cbSceneParam._m0[78u].z)) + _3019;
        _3124 = _3465 * _3020;
    }
    else
    {
        _3118 = _3017;
        _3120 = _3018;
        _3122 = _3019;
        _3124 = _3020;
    }
    bool _3136 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3138 = log2(_3124);
    float _3145 = exp2(_3138 * cbSceneParam._m0[78u].x) * ((_2976 + ((_2735 + ((_1468.x * _1449) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5034 : (isnan(_5034) ? 1.0 : min(_5034, 1.0))) * (_2729 + (_2146 * (isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0)))))) - _2976) * _1212));
    float _3146 = exp2(_3138 * cbSceneParam._m0[78u].y) * ((_2977 + ((_2737 + ((_1468.y * _1449) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5045 : (isnan(_5045) ? 1.0 : min(_5045, 1.0))) * (_2731 + (_2146 * (isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0)))))) - _2977) * _1212));
    float _3147 = exp2(_3138 * cbSceneParam._m0[78u].z) * ((_2978 + ((_2739 + ((_1468.z * _1449) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0))) * (_2733 + (_2146 * (isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0)))))) - _2978) * _1212));
    vec4 _3155 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1370, _1371));
    float _3157 = _3155.x;
    float _3178 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3157)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3157))) - _1307) * 3.0;
    float _5122 = isnan(0.0) ? _3178 : (isnan(_3178) ? 0.0 : max(_3178, 0.0));
    float _3180 = (cbInstanceData._m0[_1228 + 6u].w * (isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0)))) * (isnan(1.0) ? _5122 : (isnan(_5122) ? 1.0 : min(_5122, 1.0)));
    float _3189 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3189 * (_3136 ? _3145 : (_3145 + (cbSceneParam._m0[72u].w * _3118)));
    SV_Target.y = _3189 * (_3136 ? _3146 : (_3146 + (cbSceneParam._m0[72u].w * _3120)));
    SV_Target.z = _3189 * (_3136 ? _3147 : (_3147 + (cbSceneParam._m0[72u].w * _3122)));
    SV_Target.w = _3180;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3180;
}


