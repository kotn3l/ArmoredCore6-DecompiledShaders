#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in float TEXCOORD_8;
layout(location = 6, component = 1) in float TEXCOORD_9;
layout(location = 6, component = 2) in float TEXCOORD_10;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _3928;
float _3929;
float _3930;
float _3931;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _215 = _214 * _206;
    float _216 = _214 * _207;
    float _217 = _214 * _208;
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _277 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _287 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _277);
    float _288 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _277);
    float _289 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _277);
    float _306 = cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x;
    vec4 _323 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_2, SS_BumpMap), vec2((((_306 * cbMtdParam._m0[26u].w) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_306 * cbMtdParam._m0[27u].x) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _326 = _323.x;
    float _327 = _323.y;
    float _328 = _323.z;
    float _329 = _323.w;
    float _342 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _345 = (sqrt(((_287 * _287) + (_288 * _288)) + (_289 * _289)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _342 : (isnan(_342) ? 0.001000000047497451305389404296875 : max(_342, 0.001000000047497451305389404296875)));
    float _346 = _345 + 0.180000007152557373046875;
    float _348 = _346 * 12.0;
    float _3945 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _351 = isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0));
    vec4 _363 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _365 = _363.x;
    float _388 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _365)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _365))) - POSITION_1.w;
    float _389 = _388 / ((_351 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _3956 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
    float _390 = isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0));
    float _391 = isnan(0.5) ? _390 : (isnan(_390) ? 0.5 : max(_390, 0.5));
    float _393 = 1.0 - _391;
    float _394 = _346 * 7.0;
    float _3972 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _396 = isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0));
    float _407 = (_328 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _408 = (_328 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _422 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].y * _306) + _407) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].z * _306) + _408) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _424 = _422.x;
    float _446 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].y * _407) + (cbMtdParam._m0[26u].y * _306)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].z * _408) + (cbMtdParam._m0[26u].z * _306)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _449 = (isnan(_446) ? _424 : (isnan(_424) ? _446 : max(_424, _446))) - _396;
    float _3988 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0));
    float _451 = _396 + 0.5;
    float _3999 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _464 = cbMtdParam._m0[17u].x * _306;
    float _465 = cos(_464);
    float _466 = sin(_464);
    vec4 _493 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_466 * cbMtdParam._m0[30u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_465 * cbMtdParam._m0[31u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _497 = _493.z;
    vec4 _509 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].y * _306) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].z * _306) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _513 = _509.z;
    float _516 = (isnan(_513) ? _497 : (isnan(_497) ? _513 : max(_497, _513))) * (isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0)));
    float _4015 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _517 = isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0));
    float _520 = (_393 - _329) + (isnan(_517) ? _450 : (isnan(_450) ? _517 : max(_450, _517)));
    float _4031 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _521 = isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0));
    float _522 = _521 * _391;
    float _4042 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _531 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
    float _532 = _328 - _531;
    float _4053 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _533 = isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0));
    vec4 _583 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[22u].w * _306) + (cbMtdParam._m0[30u].y * _466)) + (cbMtdParam._m0[34u].y * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].x * _306) + (cbMtdParam._m0[30u].z * _465)) + (cbMtdParam._m0[34u].z * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _607 = cbMtdParam._m0[37u].z * TEXCOORD_5.x;
    float _669 = ((((((_583.w + (-0.5)) * cbMtdParam._m0[43u].z) + (cbMtdParam._m0[39u].x * (_493.w + (-0.5)))) + (cbMtdParam._m0[39u].w * (_509.w + (-0.5)))) + (((_607 + cbMtdParam._m0[41u].y) * cos(cbMtdParam._m0[13u].x * _306)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[12u].w * _306) * (cbMtdParam._m0[40u].z + _607)) * (texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].y * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].z * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _702 = 1.0 - _329;
    float _707 = ((isnan(0.550000011920928955078125) ? _702 : (isnan(_702) ? 0.550000011920928955078125 : max(_702, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].w;
    float _710 = ((TEXCOORD_5.y * (-0.5)) * _707) + _707;
    float _714 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _710) + _710;
    float _727 = (((_669 + ((cbMtdParam._m0[36u].w - (cbMtdParam._m0[36u].w * TEXCOORD_5.y)) * _328)) + ((texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].y * TEXCOORD.x) + (cbMtdParam._m0[22u].y * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].z * TEXCOORD.y) + (cbMtdParam._m0[22u].z * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].y)) + ((sin(cbMtdParam._m0[21u].x * _306) * cbMtdParam._m0[38u].y) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _714;
    float _730 = (_727 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4074 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
    float _731 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
    float _740 = inversesqrt(dot(vec3(_287, _288, _289), vec3(_287, _288, _289)));
    float _744 = dot(vec4(_740 * _287, _740 * _288, _740 * _289, 0.0), vec4(_222, _223, _224, 0.0));
    float _4085 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    float _752 = exp2(log2((1.0 - (isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0)))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _4096 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _753 = isnan(1.0) ? _4096 : (isnan(_4096) ? 1.0 : min(_4096, 1.0));
    float _757 = ((_522 + cbMtdParam._m0[9u].x) + (_533 * cbMtdParam._m0[10u].x)) + ((_731 * cbMtdParam._m0[11u].x) * _753);
    float _758 = ((_522 + cbMtdParam._m0[9u].y) + (_533 * cbMtdParam._m0[10u].y)) + ((_731 * cbMtdParam._m0[11u].y) * _753);
    float _759 = ((_522 + cbMtdParam._m0[9u].z) + (_533 * cbMtdParam._m0[10u].z)) + ((_731 * cbMtdParam._m0[11u].z) * _753);
    float _4107 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _760 = isnan(1.0) ? _4107 : (isnan(_4107) ? 1.0 : min(_4107, 1.0));
    float _4118 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _770 = isnan(1.0) ? _4118 : (isnan(_4118) ? 1.0 : min(_4118, 1.0));
    float _773 = (_351 * (-0.87999999523162841796875)) * _770;
    float _776 = (((((1.0 - _757) - _760) * _531) + _757) + _770) + _773;
    float _779 = (((((1.0 - _758) - _760) * _531) + _758) + _770) + _773;
    float _782 = (((((1.0 - _759) - _760) * _531) + _759) + _770) + _773;
    float _783 = _328 * 0.01200000010430812835693359375;
    float _808 = (_328 * 0.300000011920928955078125) * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[34u].w * _306) + _783) + (cbMtdParam._m0[23u].w * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].x * _306) + _783) + (cbMtdParam._m0[24u].x * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4129 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
    float _809 = isnan(1.0) ? _4129 : (isnan(_4129) ? 1.0 : min(_4129, 1.0));
    float _819 = (((1.0 - _776) * TEXCOORD_5.x) * _809) + _776;
    float _820 = (((1.0 - _779) * TEXCOORD_5.x) * _809) + _779;
    float _821 = (((1.0 - _782) * TEXCOORD_5.x) * _809) + _782;
    vec4 _857 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].y * _306) + (cbMtdParam._m0[29u].w * _466)) + (cbMtdParam._m0[28u].w * _407)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].z * _306) + (cbMtdParam._m0[30u].x * _465)) + (cbMtdParam._m0[29u].x * _408)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _860 = _857.y;
    float _870 = 1.0 - (_388 / cbMtdParam._m0[19u].x);
    float _874 = ((_857.x * TEXCOORD_8) * cbMtdParam._m0[18u].w) * (isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0)));
    float _877 = _860 * TEXCOORD_9;
    float _880 = ((isnan(cbMtdParam._m0[19u].y) ? _877 : (isnan(_877) ? cbMtdParam._m0[19u].y : max(_877, cbMtdParam._m0[19u].y))) - cbMtdParam._m0[19u].y) * cbMtdParam._m0[19u].z;
    float _881 = isnan(_880) ? _874 : (isnan(_874) ? _880 : max(_874, _880));
    float _4155 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
    float _882 = isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0));
    float _889 = (_882 * (1.0 - _819)) + _819;
    float _890 = (_882 * (1.0 - _820)) + _820;
    float _891 = (_882 * (1.0 - _821)) + _821;
    float _924 = exp2(log2(cbMtdParam._m0[15u].z * _702) * cbMtdParam._m0[17u].y);
    float _4166 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _925 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    float _926 = _925 * texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].w * _306) + (cbMtdParam._m0[28u].y * _702)) + (cbMtdParam._m0[29u].y * _407)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].x * _306) + (cbMtdParam._m0[28u].z * _702)) + (cbMtdParam._m0[29u].z * _408)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _929 = ((_925 - _926) * cbMtdParam._m0[18u].x) + _926;
    float _933 = _396 * TEXCOORD_10;
    float _940 = ((_933 * (1.0 - _889)) * _929) + _889;
    float _941 = ((_933 * (1.0 - _890)) * _929) + _890;
    float _942 = ((_933 * (1.0 - _891)) * _929) + _891;
    float _946 = 1.0 - (_388 / cbMtdParam._m0[18u].y);
    float _952 = (cbMtdParam._m0[18u].z * _860) * (isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0)));
    float _956 = (_952 * (1.0 - _940)) + _940;
    float _957 = (_952 * (1.0 - _941)) + _941;
    float _958 = (_952 * (1.0 - _942)) + _942;
    float _963 = _345 / cbMtdParam._m0[15u].x;
    float _4182 = isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0));
    float _966 = (1.0 - (isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0)))) * cbMtdParam._m0[14u].w;
    float _970 = _345 + 0.20000000298023223876953125;
    float _972 = _970 * 9.0;
    float _4193 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _977 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0)))) + cbMtdParam._m0[12u].x;
    float _980 = (_345 + 0.099999986588954925537109375) * 2.5;
    float _4204 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
    float _985 = ((cbMtdParam._m0[14u].z - _977) * (isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0)))) + _977;
    float _986 = _956 + _521;
    float _4215 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
    float _991 = ((0.3499999940395355224609375 - _985) * (isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0)))) + _985;
    float _992 = TEXCOORD_5.z * 0.5;
    float _1004 = (_345 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4226 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1009 = ((cbMtdParam._m0[17u].z - cbMtdParam._m0[20u].y) * (isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0)))) + cbMtdParam._m0[20u].y;
    float _1014 = (_1009 * (_326 + (-0.5))) + 0.5;
    float _1015 = (_1009 * (_327 + (-0.5))) + 0.5;
    float _4237 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1016 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    vec4 _1048 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[25u].w * TEXCOORD.z) + (cbMtdParam._m0[31u].w * _306)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].x * TEXCOORD.w) + (cbMtdParam._m0[32u].x * _306)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1056 = ((_509.x + (-0.5)) * 0.5) + _493.x;
    float _1057 = ((_509.y + (-0.5)) * 0.5) + _493.y;
    vec4 _1079 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].y * TEXCOORD.x) + (cbMtdParam._m0[24u].w * _306)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].z * TEXCOORD.y) + (cbMtdParam._m0[25u].x * _306)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1086 = _970 * 12.0;
    float _4248 = isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0));
    float _1088 = 1.0 - (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0)));
    float _1102 = cbMtdParam._m0[33u].y * TEXCOORD.x;
    float _1103 = cbMtdParam._m0[33u].z * TEXCOORD.y;
    vec4 _1116 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1102 + (cbMtdParam._m0[32u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1103 + (cbMtdParam._m0[33u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1137 = texture(sampler2D(M_Cutscene_Water_ocean4_PlanarReflection_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1102 + ((cbMtdParam._m0[26u].w * 0.4000000059604644775390625) * _533)) + (cbMtdParam._m0[33u].w * _306)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1103 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _533)) + (cbMtdParam._m0[34u].x * _306)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1151 = (((0.5 - _1056) * 0.10999999940395355224609375) + _1056) + (((((((_1079.z + (-0.5)) * cbMtdParam._m0[15u].w) * _1088) + (-1.0)) + _1116.x) + _1137.x) * cbMtdParam._m0[15u].y);
    float _1152 = (((0.5 - _1057) * 0.10999999940395355224609375) + _1057) + (((((((_1079.w + (-0.5)) * cbMtdParam._m0[15u].w) * _1088) + (-1.0)) + _1116.y) + _1137.y) * cbMtdParam._m0[15u].y);
    float _1157 = ((_1048.x - _1151) * _345) + _1151;
    float _1158 = ((_1048.y - _1152) * _345) + _1152;
    float _1159 = _345 * 0.5;
    float _4259 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1160 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
    float _1173 = cbMtdParam._m0[17u].w - (cbMtdParam._m0[17u].w * _714);
    float _1182 = cbMtdParam._m0[20u].x - (cbMtdParam._m0[20u].x * TEXCOORD_5.y);
    float _1184 = _1182 - (_1182 * _1160);
    float _1188 = (((((((0.5 - _326) * 0.60000002384185791015625) + _326) - _1014) * _1016) + _1014) + (_1184 * (_583.x + (-0.5)))) + (((_1157 + (-0.5)) + ((0.5 - _1157) * _1160)) * _1173);
    float _1190 = (((((((0.5 - _327) * 0.60000002384185791015625) + _327) - _1015) * _1016) + _1015) + (_1184 * (_583.y + (-0.5)))) + (((_1158 + (-0.5)) + ((0.5 - _1158) * _1160)) * _1173);
    float _1200 = (((_992 * (0.5 - _1188)) + _1188) * 2.0) + (-1.0);
    float _1201 = (((_992 * (0.5 - _1190)) + _1190) * 2.0) + (-1.0);
    float _1202 = dot(vec2(_1200, _1201), vec2(_1200, _1201));
    float _4270 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
    float _1207 = sqrt(1.0 - (isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0))));
    float _1209 = _970 * 6.0;
    float _4281 = isnan(0.0) ? _1209 : (isnan(_1209) ? 0.0 : max(_1209, 0.0));
    float _1212 = cbMtdParam._m0[16u].x * (isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0)));
    float _4292 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
    float _1213 = isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0));
    float _1216 = ((1.0 - _1213) * _986) + _1213;
    uint _1232 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1233 = _1232 + 5u;
    float _1244 = (-0.0) - _287;
    float _1245 = (-0.0) - _288;
    float _1246 = (-0.0) - _289;
    float _1250 = inversesqrt(dot(vec3(_1244, _1245, _1246), vec3(_1244, _1245, _1246)));
    float _1254 = dot(vec3(_1250 * _1244, _1250 * _1245, _1250 * _1246), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1233]).x * 14u].xyz));
    float _1264 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1254 * 0.60000002384185791015625)) * 1.5);
    float _1277 = ((((0.959999978542327880859375 / exp2(log2((_1254 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1264) * 0.5) + _1264) * 0.079577468335628509521484375;
    float _1281 = fma(_1207, _222, fma(_1201, _228 * TANGENT.x, _1200 * _215));
    float _1284 = fma(_1207, _223, fma(_1201, _228 * TANGENT.y, _1200 * _216));
    float _1287 = fma(_1207, _224, fma(_1201, _228 * TANGENT.z, _1200 * _217));
    float _1291 = inversesqrt(dot(vec3(_1281, _1284, _1287), vec3(_1281, _1284, _1287)));
    float _1292 = _1291 * _1281;
    float _1293 = _1291 * _1284;
    float _1294 = _1291 * _1287;
    float _4303 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
    float _4314 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
    float _1296 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
    float _4325 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
    float _4336 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
    float _4347 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _1311 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1351 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1360 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1351);
    float _1361 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1351);
    float _1362 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1351);
    float _1366 = inversesqrt(dot(vec3(_1360, _1361, _1362), vec3(_1360, _1361, _1362)));
    float _1367 = _1360 * _1366;
    float _1368 = _1361 * _1366;
    float _1369 = _1362 * _1366;
    vec4 _1374 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1376 = _1374.w;
    float _1381 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1382 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1402 = fma(_1294, cbSceneParam._m0[5u].z, fma(_1293, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1292));
    float _1405 = fma(_1294, cbSceneParam._m0[6u].z, fma(_1293, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1292));
    float _1408 = fma(_1294, cbSceneParam._m0[7u].z, fma(_1293, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1292));
    uint _1421 = _1232 + 9u;
    uint _1422 = _1421 + uint(cbMatDynParam._m0[0u].w);
    float _1428 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4325 : (isnan(_4325) ? 1.0 : min(_4325, 1.0)))) * cbInstanceData._m0[_1422].x;
    float _1429 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4336 : (isnan(_4336) ? 1.0 : min(_4336, 1.0)))) * cbInstanceData._m0[_1422].y;
    float _1430 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4347 : (isnan(_4347) ? 1.0 : min(_4347, 1.0)))) * cbInstanceData._m0[_1422].z;
    float _4358 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
    float _1431 = isnan(1.0) ? _4358 : (isnan(_4358) ? 1.0 : min(_4358, 1.0));
    float _4369 = isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0));
    float _1432 = isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0));
    float _4380 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
    float _1433 = isnan(1.0) ? _4380 : (isnan(_4380) ? 1.0 : min(_4380, 1.0));
    vec4 _1442 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1381, cbSceneParam._m0[86u].y * _1382));
    float _1445 = _1442.x * TEXCOORD_5.w;
    float _1449 = abs(dot(vec3(_1367, _1368, _1369), vec3(_1292, _1293, _1294)));
    float _4391 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
    float _1455 = exp2(log2(1.0 - (isnan(1.0) ? _4391 : (isnan(_4391) ? 1.0 : min(_4391, 1.0)))) * 5.0);
    float _1456 = cbMtdParam._m0[16u].z + (-0.039999999105930328369140625);
    float _4402 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
    float _1459 = (isnan(1.0) ? _4402 : (isnan(_4402) ? 1.0 : min(_4402, 1.0))) * _1455;
    float _1460 = _1459 + 0.039999999105930328369140625;
    float _1464 = 10.0 / (_1311 + 10.0);
    vec4 _1479 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2(((_1464 * cbMtdParam._m0[19u].w) * dot(vec3(_1292, _1293, _1294), vec3(1.0, 0.0, 0.0))) + (_1381 / cbSceneParam._m0[86u].x), 1.0 - (_1382 / cbSceneParam._m0[86u].y)));
    float _1515 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1519 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1523 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1819;
    float _1820;
    float _1821;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1548 = fma(_1523, cbModelParam._m0[26u].z, fma(_1519, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1515));
        float _1552 = fma(_1523, cbModelParam._m0[27u].z, fma(_1519, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1515));
        float _1556 = fma(_1523, cbModelParam._m0[28u].z, fma(_1519, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1515));
        float _1578 = _1515 + _1292;
        float _1579 = _1519 + _1293;
        float _1580 = _1523 + _1294;
        float _1590 = fma(_1580, cbModelParam._m0[26u].z, fma(_1579, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1578)) - _1548;
        float _1591 = fma(_1580, cbModelParam._m0[27u].z, fma(_1579, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1578)) - _1552;
        float _1592 = fma(_1580, cbModelParam._m0[28u].z, fma(_1579, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1578)) - _1556;
        float _1596 = inversesqrt(dot(vec3(_1590, _1591, _1592), vec3(_1590, _1591, _1592)));
        float _1608 = ((_1596 * _1590) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1548 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1609 = ((_1596 * _1591) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1552 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1610 = ((_1596 * _1592) / cbModelParam._m0[34u].z) + ((((((_1556 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1613 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1608, _1609, _1610), 0.0);
        vec4 _1620 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1608, _1609, _1610), 0.0);
        vec4 _1627 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1608, _1609, _1610), 0.0);
        vec4 _1634 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1608, _1609, _1610), 0.0);
        float _1647 = exp2((_1613.w + (-0.5)) * 20.0) * 2.0;
        float _1654 = exp2((_1620.w + (-0.5)) * 20.0) * 2.0;
        float _1661 = exp2((_1627.w + (-0.5)) * 20.0) * 2.0;
        float _1668 = exp2((_1634.w + (-0.5)) * 20.0) * 2.0;
        float _1669 = _1668 * (_1634.x + (-0.5));
        float _1670 = _1668 * (_1634.y + (-0.5));
        float _1671 = _1668 * (_1634.z + (-0.5));
        float _1672 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        float _1673 = isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0));
        float _1674 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1676 = ((_1613.x + (-0.5)) * 0.5) * _1647;
        float _1678 = ((_1620.x + (-0.5)) * 0.5) * _1654;
        float _1680 = ((_1627.x + (-0.5)) * 0.5) * _1661;
        float _1681 = dot(vec3(_1676, _1678, _1680), vec3(_1676, _1678, _1680));
        float _1686 = (_1681 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1681);
        float _1695 = (dot(vec3(_1292, _1293, _1294), vec3(_1686 * _1676, _1686 * _1678, _1686 * _1680)) + 1.0) * 0.5;
        float _4428 = isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0));
        float _1705 = sqrt(((_1678 * _1678) + (_1676 * _1676)) + (_1680 * _1680)) / (_1672 + 9.9999997473787516355514526367188e-06);
        float _4439 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1706 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1707 = _1706 * 2.0;
        float _1711 = (1.0 - _1706) / (_1706 + 1.0);
        float _4450 = isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0));
        float _1712 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _1721 = ((((1.0 - _1712) * (_1707 + 2.0)) * exp2(log2(isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * (_1707 + 1.0))) + _1712) * _1672;
        float _1723 = ((_1613.y + (-0.5)) * 0.5) * _1647;
        float _1725 = ((_1620.y + (-0.5)) * 0.5) * _1654;
        float _1727 = ((_1627.y + (-0.5)) * 0.5) * _1661;
        float _1728 = dot(vec3(_1723, _1725, _1727), vec3(_1723, _1725, _1727));
        float _1733 = (_1728 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1728);
        float _1741 = (dot(vec3(_1292, _1293, _1294), vec3(_1733 * _1723, _1733 * _1725, _1733 * _1727)) + 1.0) * 0.5;
        float _4461 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1750 = sqrt(((_1725 * _1725) + (_1723 * _1723)) + (_1727 * _1727)) / (_1673 + 9.9999997473787516355514526367188e-06);
        float _4472 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1751 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1752 = _1751 * 2.0;
        float _1756 = (1.0 - _1751) / (_1751 + 1.0);
        float _4483 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _1766 = ((((1.0 - _1757) * (_1752 + 2.0)) * exp2(log2(isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0))) * (_1752 + 1.0))) + _1757) * _1673;
        float _1768 = ((_1613.z + (-0.5)) * 0.5) * _1647;
        float _1770 = ((_1620.z + (-0.5)) * 0.5) * _1654;
        float _1772 = ((_1627.z + (-0.5)) * 0.5) * _1661;
        float _1773 = dot(vec3(_1768, _1770, _1772), vec3(_1768, _1770, _1772));
        float _1778 = (_1773 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1773);
        float _1786 = (dot(vec3(_1292, _1293, _1294), vec3(_1778 * _1768, _1778 * _1770, _1778 * _1772)) + 1.0) * 0.5;
        float _4494 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1795 = sqrt(((_1770 * _1770) + (_1768 * _1768)) + (_1772 * _1772)) / (_1674 + 9.9999997473787516355514526367188e-06);
        float _4505 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
        float _1796 = isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0));
        float _1797 = _1796 * 2.0;
        float _1801 = (1.0 - _1796) / (_1796 + 1.0);
        float _4516 = isnan(0.0) ? _1801 : (isnan(_1801) ? 0.0 : max(_1801, 0.0));
        float _1802 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1811 = ((((1.0 - _1802) * (_1797 + 2.0)) * exp2(log2(isnan(1.0) ? _4494 : (isnan(_4494) ? 1.0 : min(_4494, 1.0))) * (_1797 + 1.0))) + _1802) * _1674;
        _1819 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)));
        _1820 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0)));
        _1821 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1811 : (isnan(_1811) ? 0.0 : max(_1811, 0.0)));
    }
    else
    {
        _1819 = 0.0;
        _1820 = 0.0;
        _1821 = 0.0;
    }
    float _2111;
    float _2112;
    float _2113;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1844 = fma(_1523, cbModelParam._m0[30u].z, fma(_1519, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1515));
        float _1848 = fma(_1523, cbModelParam._m0[31u].z, fma(_1519, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1515));
        float _1852 = fma(_1523, cbModelParam._m0[32u].z, fma(_1519, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1515));
        float _1874 = _1515 + _1292;
        float _1875 = _1519 + _1293;
        float _1876 = _1523 + _1294;
        float _1886 = fma(_1876, cbModelParam._m0[30u].z, fma(_1875, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1874)) - _1844;
        float _1887 = fma(_1876, cbModelParam._m0[31u].z, fma(_1875, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1874)) - _1848;
        float _1888 = fma(_1876, cbModelParam._m0[32u].z, fma(_1875, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1874)) - _1852;
        float _1892 = inversesqrt(dot(vec3(_1886, _1887, _1888), vec3(_1886, _1887, _1888)));
        float _1904 = ((_1892 * _1886) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1844 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1905 = ((_1892 * _1887) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1848 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1906 = ((_1892 * _1888) / cbModelParam._m0[35u].z) + ((((((_1852 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1908 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1904, _1905, _1906), 0.0);
        vec4 _1915 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1904, _1905, _1906), 0.0);
        vec4 _1922 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1904, _1905, _1906), 0.0);
        vec4 _1929 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1904, _1905, _1906), 0.0);
        float _1941 = exp2((_1908.w + (-0.5)) * 20.0) * 2.0;
        float _1948 = exp2((_1915.w + (-0.5)) * 20.0) * 2.0;
        float _1955 = exp2((_1922.w + (-0.5)) * 20.0) * 2.0;
        float _1962 = exp2((_1929.w + (-0.5)) * 20.0) * 2.0;
        float _1963 = _1962 * (_1929.x + (-0.5));
        float _1964 = _1962 * (_1929.y + (-0.5));
        float _1965 = _1962 * (_1929.z + (-0.5));
        float _1966 = isnan(0.0) ? _1963 : (isnan(_1963) ? 0.0 : max(_1963, 0.0));
        float _1967 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
        float _1968 = isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0));
        float _1970 = ((_1908.x + (-0.5)) * 0.5) * _1941;
        float _1972 = ((_1915.x + (-0.5)) * 0.5) * _1948;
        float _1974 = ((_1922.x + (-0.5)) * 0.5) * _1955;
        float _1975 = dot(vec3(_1970, _1972, _1974), vec3(_1970, _1972, _1974));
        float _1980 = (_1975 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1975);
        float _1988 = (dot(vec3(_1292, _1293, _1294), vec3(_1980 * _1970, _1980 * _1972, _1980 * _1974)) + 1.0) * 0.5;
        float _4557 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        float _1997 = sqrt(((_1972 * _1972) + (_1970 * _1970)) + (_1974 * _1974)) / (_1966 + 9.9999997473787516355514526367188e-06);
        float _4568 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
        float _1998 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
        float _1999 = _1998 * 2.0;
        float _2003 = (1.0 - _1998) / (_1998 + 1.0);
        float _4579 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
        float _2004 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
        float _2013 = ((((1.0 - _2004) * (_1999 + 2.0)) * exp2(log2(isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))) * (_1999 + 1.0))) + _2004) * _1966;
        float _2015 = ((_1908.y + (-0.5)) * 0.5) * _1941;
        float _2017 = ((_1915.y + (-0.5)) * 0.5) * _1948;
        float _2019 = ((_1922.y + (-0.5)) * 0.5) * _1955;
        float _2020 = dot(vec3(_2015, _2017, _2019), vec3(_2015, _2017, _2019));
        float _2025 = (_2020 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2020);
        float _2033 = (dot(vec3(_1292, _1293, _1294), vec3(_2025 * _2015, _2025 * _2017, _2025 * _2019)) + 1.0) * 0.5;
        float _4590 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
        float _2042 = sqrt(((_2017 * _2017) + (_2015 * _2015)) + (_2019 * _2019)) / (_1967 + 9.9999997473787516355514526367188e-06);
        float _4601 = isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0));
        float _2043 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
        float _2044 = _2043 * 2.0;
        float _2048 = (1.0 - _2043) / (_2043 + 1.0);
        float _4612 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2049 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
        float _2058 = ((((1.0 - _2049) * (_2044 + 2.0)) * exp2(log2(isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0))) * (_2044 + 1.0))) + _2049) * _1967;
        float _2060 = ((_1908.z + (-0.5)) * 0.5) * _1941;
        float _2062 = ((_1915.z + (-0.5)) * 0.5) * _1948;
        float _2064 = ((_1922.z + (-0.5)) * 0.5) * _1955;
        float _2065 = dot(vec3(_2060, _2062, _2064), vec3(_2060, _2062, _2064));
        float _2070 = (_2065 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2065);
        float _2078 = (dot(vec3(_1292, _1293, _1294), vec3(_2070 * _2060, _2070 * _2062, _2070 * _2064)) + 1.0) * 0.5;
        float _4623 = isnan(0.0) ? _2078 : (isnan(_2078) ? 0.0 : max(_2078, 0.0));
        float _2087 = sqrt(((_2062 * _2062) + (_2060 * _2060)) + (_2064 * _2064)) / (_1968 + 9.9999997473787516355514526367188e-06);
        float _4634 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
        float _2088 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
        float _2089 = _2088 * 2.0;
        float _2093 = (1.0 - _2088) / (_2088 + 1.0);
        float _4645 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
        float _2094 = isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0));
        float _2103 = ((((1.0 - _2094) * (_2089 + 2.0)) * exp2(log2(isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0))) * (_2089 + 1.0))) + _2094) * _1968;
        _2111 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2013 : (isnan(_2013) ? 0.0 : max(_2013, 0.0)));
        _2112 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0)));
        _2113 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0)));
    }
    else
    {
        _2111 = 0.0;
        _2112 = 0.0;
        _2113 = 0.0;
    }
    float _2123 = (cbModelParam._m0[1u].x * (_2111 - _1819)) + _1819;
    float _2124 = (cbModelParam._m0[1u].x * (_2112 - _1820)) + _1820;
    float _2125 = (cbModelParam._m0[1u].x * (_2113 - _1821)) + _1821;
    float _2146 = fma(_2125, cbSceneParam._m0[89u].z, fma(_2124, cbSceneParam._m0[89u].y, _2123 * cbSceneParam._m0[89u].x));
    float _2149 = fma(_2125, cbSceneParam._m0[90u].z, fma(_2124, cbSceneParam._m0[90u].y, _2123 * cbSceneParam._m0[90u].x));
    float _2152 = fma(_2125, cbSceneParam._m0[91u].z, fma(_2124, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2123));
    float _2157 = (0.959999978542327880859375 - _1459) * _1445;
    uvec4 _2163 = floatBitsToUint(cbInstanceData._m0[_1233]);
    uint _2165 = _2163.x * 14u;
    uint _2166 = _2165 + 13u;
    float _2173 = _1445 + (-1.0);
    float _2178 = (cbLight._m0[_2166].x * _2173) + 1.0;
    float _2179 = (cbLight._m0[_2166].y * _2173) + 1.0;
    float _2180 = (cbLight._m0[_2166].z * _2173) + 1.0;
    float _2181 = (cbLight._m0[_2166].w * _2173) + 1.0;
    uint _2182 = _2165 + 5u;
    float _2188 = isnan(1.0) ? _2179 : (isnan(_2179) ? 1.0 : min(_2179, 1.0));
    uint _2192 = _2165 + 4u;
    float _2198 = isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0));
    uint _2202 = _2165 | 1u;
    float _2213 = dot(vec3(cbLight._m0[_2165].xyz), vec3(_1292, _1293, _1294));
    float _2216 = dot(vec3(cbLight._m0[_2202].xyz), vec3(_1292, _1293, _1294));
    float _4696 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
    float _4707 = isnan(0.0) ? _2216 : (isnan(_2216) ? 0.0 : max(_2216, 0.0));
    float _2221 = (isnan(1.0) ? _4696 : (isnan(_4696) ? 1.0 : min(_4696, 1.0))) * 0.3183098733425140380859375;
    float _2223 = (isnan(1.0) ? _4707 : (isnan(_4707) ? 1.0 : min(_4707, 1.0))) * 0.3183098733425140380859375;
    float _2230 = ((cbLight._m0[_2182].x * _2188) * _2223) + ((cbLight._m0[_2192].x * _2198) * _2221);
    float _2231 = ((_2188 * cbLight._m0[_2182].y) * _2223) + ((_2198 * cbLight._m0[_2192].y) * _2221);
    float _2232 = ((_2188 * cbLight._m0[_2182].z) * _2223) + ((_2198 * cbLight._m0[_2192].z) * _2221);
    uvec4 _2236 = floatBitsToUint(cbLight._m0[_2165 + 12u]);
    bool _2238 = _2236.x == 0u;
    float _2239;
    float _2241;
    float _2243;
    if (_2238)
    {
        _2239 = _2230;
        _2241 = _2231;
        _2243 = _2232;
    }
    else
    {
        uint _2247 = _2165 + 6u;
        float _2263 = (dot(vec3(cbLight._m0[_2165 + 2u].xyz), vec3(_1292, _1293, _1294)) * 0.5) + 0.5;
        float _2264 = _2263 * _2263;
        float _4718 = isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0));
        float _2265 = isnan(1.0) ? _4718 : (isnan(_4718) ? 1.0 : min(_4718, 1.0));
        float _2266 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        _2239 = (((cbLight._m0[_2247].x * 0.3183098733425140380859375) * _2265) * _2266) + _2230;
        _2241 = (((cbLight._m0[_2247].y * 0.3183098733425140380859375) * _2265) * _2266) + _2231;
        _2243 = (((cbLight._m0[_2247].z * 0.3183098733425140380859375) * _2265) * _2266) + _2232;
    }
    bool _2246 = _2236.y == 0u;
    float _2276;
    float _2278;
    float _2280;
    if (_2246)
    {
        _2276 = _2239;
        _2278 = _2241;
        _2280 = _2243;
    }
    else
    {
        uint _2437 = _2165 + 7u;
        float _2453 = (dot(vec3(cbLight._m0[_2165 + 3u].xyz), vec3(_1292, _1293, _1294)) * 0.5) + 0.5;
        float _2454 = _2453 * _2453;
        float _4734 = isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0));
        float _2455 = isnan(1.0) ? _4734 : (isnan(_4734) ? 1.0 : min(_4734, 1.0));
        float _2456 = isnan(1.0) ? _2181 : (isnan(_2181) ? 1.0 : min(_2181, 1.0));
        _2276 = (((cbLight._m0[_2437].x * 0.3183098733425140380859375) * _2455) * _2456) + _2239;
        _2278 = (((cbLight._m0[_2437].y * 0.3183098733425140380859375) * _2455) * _2456) + _2241;
        _2280 = (((cbLight._m0[_2437].z * 0.3183098733425140380859375) * _2455) * _2456) + _2243;
    }
    uint _2283 = _2165 + 8u;
    float _2296 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2165].w)) * _1296) * 0.949999988079071044921875);
    float _2297 = _2296 * _2296;
    float _2298 = cbLight._m0[_2165].x + _1367;
    float _2299 = cbLight._m0[_2165].y + _1368;
    float _2300 = cbLight._m0[_2165].z + _1369;
    float _2304 = inversesqrt(dot(vec3(_2298, _2299, _2300), vec3(_2298, _2299, _2300)));
    float _2305 = _2304 * _2298;
    float _2306 = _2304 * _2299;
    float _2307 = _2304 * _2300;
    float _2308 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2165].xyz));
    float _4750 = isnan(0.0) ? _2308 : (isnan(_2308) ? 0.0 : max(_2308, 0.0));
    float _2311 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
    float _2312 = dot(vec3(_1292, _1293, _1294), vec3(_1367, _1368, _1369));
    float _4761 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
    float _2315 = isnan(1.0) ? _4761 : (isnan(_4761) ? 1.0 : min(_4761, 1.0));
    float _2316 = dot(vec3(_1292, _1293, _1294), vec3(_2305, _2306, _2307));
    float _4772 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2319 = isnan(1.0) ? _4772 : (isnan(_4772) ? 1.0 : min(_4772, 1.0));
    float _2320 = dot(vec3(cbLight._m0[_2165].xyz), vec3(_2305, _2306, _2307));
    float _4783 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
    float _2324 = _2297 * _2297;
    float _2328 = ((_2319 * _2319) * (_2324 + (-1.0))) + 1.0;
    float _2338 = (exp2(log2(1.0 - (isnan(1.0) ? _4783 : (isnan(_4783) ? 1.0 : min(_4783, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2339 = 1.0 - _2297;
    float _2350 = (0.5 / (((_2315 * ((_2311 * _2339) + _2297)) + 9.9999999392252902907785028219223e-09) + (((_2315 * _2339) + _2297) * _2311))) * _2311;
    float _4794 = isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0));
    float _2352 = (isnan(1.0) ? _4794 : (isnan(_4794) ? 1.0 : min(_4794, 1.0))) * (_2324 / ((_2328 * _2328) * 3.141590118408203125));
    uint _2363 = _2165 + 9u;
    float _2374 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2202].w)) * _1296) * 0.949999988079071044921875);
    float _2375 = _2374 * _2374;
    float _2376 = cbLight._m0[_2202].x + _1367;
    float _2377 = cbLight._m0[_2202].y + _1368;
    float _2378 = cbLight._m0[_2202].z + _1369;
    float _2382 = inversesqrt(dot(vec3(_2376, _2377, _2378), vec3(_2376, _2377, _2378)));
    float _2383 = _2382 * _2376;
    float _2384 = _2382 * _2377;
    float _2385 = _2382 * _2378;
    float _2386 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2202].xyz));
    float _4805 = isnan(0.0) ? _2386 : (isnan(_2386) ? 0.0 : max(_2386, 0.0));
    float _2389 = isnan(1.0) ? _4805 : (isnan(_4805) ? 1.0 : min(_4805, 1.0));
    float _2390 = dot(vec3(_1292, _1293, _1294), vec3(_2383, _2384, _2385));
    float _4816 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
    float _2393 = isnan(1.0) ? _4816 : (isnan(_4816) ? 1.0 : min(_4816, 1.0));
    float _2394 = dot(vec3(cbLight._m0[_2202].xyz), vec3(_2383, _2384, _2385));
    float _4827 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
    float _2398 = _2375 * _2375;
    float _2402 = ((_2393 * _2393) * (_2398 + (-1.0))) + 1.0;
    float _2411 = (exp2(log2(1.0 - (isnan(1.0) ? _4827 : (isnan(_4827) ? 1.0 : min(_4827, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2412 = 1.0 - _2375;
    float _2422 = (0.5 / (((_2315 * ((_2389 * _2412) + _2375)) + 9.9999999392252902907785028219223e-09) + (((_2315 * _2412) + _2375) * _2389))) * _2389;
    float _4838 = isnan(0.0) ? _2422 : (isnan(_2422) ? 0.0 : max(_2422, 0.0));
    float _2424 = (isnan(1.0) ? _4838 : (isnan(_4838) ? 1.0 : min(_4838, 1.0))) * (_2398 / ((_2402 * _2402) * 3.141590118408203125));
    float _2434 = (((_2411 * cbLight._m0[_2363].x) * _2424) * _2188) + (((_2338 * cbLight._m0[_2283].x) * _2352) * _2198);
    float _2435 = (((_2411 * cbLight._m0[_2363].y) * _2424) * _2188) + (((_2338 * cbLight._m0[_2283].y) * _2352) * _2198);
    float _2436 = (((_2411 * cbLight._m0[_2363].z) * _2424) * _2188) + (((_2338 * cbLight._m0[_2283].z) * _2352) * _2198);
    float _2466;
    float _2468;
    float _2470;
    if (_2238)
    {
        _2466 = _2434;
        _2468 = _2435;
        _2470 = _2436;
    }
    else
    {
        uint _2472 = _2165 + 2u;
        uint _2476 = _2165 + 10u;
        float _2490 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2472].w)) * _1296) * 0.949999988079071044921875);
        float _2491 = _2490 * _2490;
        float _2492 = cbLight._m0[_2472].x + _1367;
        float _2493 = cbLight._m0[_2472].y + _1368;
        float _2494 = cbLight._m0[_2472].z + _1369;
        float _2498 = inversesqrt(dot(vec3(_2492, _2493, _2494), vec3(_2492, _2493, _2494)));
        float _2499 = _2498 * _2492;
        float _2500 = _2498 * _2493;
        float _2501 = _2498 * _2494;
        float _2502 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2472].xyz));
        float _4849 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
        float _2505 = isnan(1.0) ? _4849 : (isnan(_4849) ? 1.0 : min(_4849, 1.0));
        float _2506 = dot(vec3(_1292, _1293, _1294), vec3(_2499, _2500, _2501));
        float _4860 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
        float _2509 = isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0));
        float _2510 = dot(vec3(cbLight._m0[_2472].xyz), vec3(_2499, _2500, _2501));
        float _4871 = isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0));
        float _2514 = _2491 * _2491;
        float _2518 = ((_2509 * _2509) * (_2514 + (-1.0))) + 1.0;
        float _2527 = (exp2(log2(1.0 - (isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2528 = 1.0 - _2491;
        float _2538 = (0.5 / (((_2315 * ((_2505 * _2528) + _2491)) + 9.9999999392252902907785028219223e-09) + (((_2315 * _2528) + _2491) * _2505))) * _2505;
        float _4882 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
        float _2540 = (isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0))) * (_2514 / ((_2518 * _2518) * 3.141590118408203125));
        float _2541 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        _2466 = (((_2527 * cbLight._m0[_2476].x) * _2540) * _2541) + _2434;
        _2468 = (((_2527 * cbLight._m0[_2476].y) * _2540) * _2541) + _2435;
        _2470 = (((_2527 * cbLight._m0[_2476].z) * _2540) * _2541) + _2436;
    }
    float _2551;
    float _2553;
    float _2555;
    if (_2246)
    {
        _2551 = _2466;
        _2553 = _2468;
        _2555 = _2470;
    }
    else
    {
        uint _2562 = _2165 + 3u;
        uint _2566 = _2165 + 11u;
        float _2580 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2562].w)) * _1296) * 0.949999988079071044921875);
        float _2581 = _2580 * _2580;
        float _2582 = cbLight._m0[_2562].x + _1367;
        float _2583 = cbLight._m0[_2562].y + _1368;
        float _2584 = cbLight._m0[_2562].z + _1369;
        float _2588 = inversesqrt(dot(vec3(_2582, _2583, _2584), vec3(_2582, _2583, _2584)));
        float _2589 = _2588 * _2582;
        float _2590 = _2588 * _2583;
        float _2591 = _2588 * _2584;
        float _2592 = dot(vec3(_1292, _1293, _1294), vec3(cbLight._m0[_2562].xyz));
        float _4898 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
        float _2595 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
        float _2596 = dot(vec3(_1292, _1293, _1294), vec3(_2589, _2590, _2591));
        float _4909 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
        float _2599 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
        float _2600 = dot(vec3(cbLight._m0[_2562].xyz), vec3(_2589, _2590, _2591));
        float _4920 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
        float _2604 = _2581 * _2581;
        float _2608 = ((_2599 * _2599) * (_2604 + (-1.0))) + 1.0;
        float _2617 = (exp2(log2(1.0 - (isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2618 = 1.0 - _2581;
        float _2628 = (0.5 / (((_2315 * ((_2595 * _2618) + _2581)) + 9.9999999392252902907785028219223e-09) + (((_2315 * _2618) + _2581) * _2595))) * _2595;
        float _4931 = isnan(0.0) ? _2628 : (isnan(_2628) ? 0.0 : max(_2628, 0.0));
        float _2630 = (isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0))) * (_2604 / ((_2608 * _2608) * 3.141590118408203125));
        float _2631 = isnan(1.0) ? _2181 : (isnan(_2181) ? 1.0 : min(_2181, 1.0));
        _2551 = (((_2617 * cbLight._m0[_2566].x) * _2630) * _2631) + _2466;
        _2553 = (((_2617 * cbLight._m0[_2566].y) * _2630) * _2631) + _2468;
        _2555 = (((_2617 * cbLight._m0[_2566].z) * _2630) * _2631) + _2470;
    }
    float _2740;
    float _2742;
    float _2744;
    float _2746;
    float _2748;
    float _2750;
    if (_2163.y == 0u)
    {
        float _2680 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2681 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2680;
        float _2682 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2680;
        float _2683 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2680;
        uvec4 _2695 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2696 = _2695.x;
        uint _2707 = uint((float(_2695.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1382) / _2696))) + floor(float(uint(cbSceneParam._m0[85u].x * _1381) / _2696)));
        float _2717 = (log2(_2683 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2718 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
        uint _2721 = uint(isnan(14.0) ? _2718 : (isnan(_2718) ? 14.0 : min(_2718, 14.0)));
        uvec4 _2726 = texelFetch(g_lightClusterGridBuffer, int(((_2721 << 2u) + (_2707 << 6u)) >> 2u));
        uint _2727 = _2726.x;
        uint _2728 = _2695.z;
        float _2866;
        float _2868;
        float _2870;
        float _2872;
        float _2874;
        float _2876;
        if (((((1u << ((_2728 >> 4u) & 15u)) + 4294967295u) & _2727) == 0u) || ((_2728 & 240u) == 0u))
        {
            _2866 = 0.0;
            _2868 = 0.0;
            _2870 = 0.0;
            _2872 = 0.0;
            _2874 = 0.0;
            _2876 = 0.0;
        }
        else
        {
            float _2867;
            float _2869;
            float _2871;
            float _2873;
            float _2875;
            float _2877;
            float _3072 = 0.0;
            float _3073 = 0.0;
            float _3074 = 0.0;
            float _3075 = 0.0;
            float _3076 = 0.0;
            float _3077 = 0.0;
            uint _3078 = 0u;
            uint _3087;
            bool _3088;
            for (;;)
            {
                _3087 = texelFetch(g_lightClassification, int((((_2721 << 5u) + (_2707 << 9u)) + (_3078 << 2u)) >> 2u)).x;
                _3088 = _3087 == 0u;
                float frontier_phi_25_pred;
                float frontier_phi_25_pred_1;
                float frontier_phi_25_pred_2;
                float frontier_phi_25_pred_3;
                float frontier_phi_25_pred_4;
                float frontier_phi_25_pred_5;
                if (_3088)
                {
                    frontier_phi_25_pred = _3073;
                    frontier_phi_25_pred_1 = _3077;
                    frontier_phi_25_pred_2 = _3075;
                    frontier_phi_25_pred_3 = _3072;
                    frontier_phi_25_pred_4 = _3076;
                    frontier_phi_25_pred_5 = _3074;
                }
                else
                {
                    float _3306;
                    float _3307;
                    float _3308;
                    float _3309;
                    float _3310;
                    float _3311;
                    uint _3312;
                    _3306 = _3072;
                    _3307 = _3073;
                    _3308 = _3074;
                    _3309 = _3075;
                    _3310 = _3076;
                    _3311 = _3077;
                    _3312 = _3087;
                    float _3221;
                    float _3222;
                    float _3223;
                    float _3224;
                    float _3225;
                    float _3226;
                    for (;;)
                    {
                        uint _3316 = uint(findLSB(_3312)) + (_3078 << 5u);
                        uint _3313 = (_3312 + 4294967295u) & _3312;
                        uint _3318 = _3316 * 48u;
                        vec4 _3332 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3318)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3318 + 3u)).x));
                        uint _3338 = (_3316 * 48u) + 4u;
                        vec4 _3351 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3338)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 3u)).x));
                        uint _3357 = (_3316 * 48u) + 8u;
                        vec3 _3368 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3357)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3357 + 2u)).x));
                        float _3372 = _3332.x - _2681;
                        float _3373 = _3332.y - _2682;
                        float _3374 = _3332.z - _2683;
                        float _3375 = dot(vec3(_3372, _3373, _3374), vec3(_3372, _3373, _3374));
                        float _3378 = inversesqrt(_3375);
                        float _3379 = _3378 * _3372;
                        float _3380 = _3378 * _3373;
                        float _3381 = _3378 * _3374;
                        float _3382 = dot(vec3(_1402, _1405, _1408), vec3(_3379, _3380, _3381));
                        float _3387 = 1.0 - (_3375 * _3332.w);
                        float _4957 = isnan(0.0) ? _3387 : (isnan(_3387) ? 0.0 : max(_3387, 0.0));
                        float _3388 = isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0));
                        float _3389 = sqrt(_3375) * _3351.w;
                        float _3392 = 1.39999997615814208984375 / (_3389 + 1.39999997615814208984375);
                        float _3393 = _3392 * _3392;
                        float _3396 = ((1.0 - _3393) * _3382) + _3393;
                        float _3399 = _3389 * _3389;
                        float _3403 = ((isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0))) * _3388) / ((_3399 * 0.699999988079071044921875) + 1.0);
                        float _3407 = (-0.0) - _2681;
                        float _3408 = (-0.0) - _2682;
                        float _3409 = (-0.0) - _2683;
                        float _3413 = inversesqrt(dot(vec3(_3407, _3408, _3409), vec3(_3407, _3408, _3409)));
                        float _3414 = _3413 * _3407;
                        float _3415 = _3413 * _3408;
                        float _3416 = _3413 * _3409;
                        float _3424 = exp2(log2(1.0 / ((_3399 * 3.5) + 5.0)) * 0.25);
                        float _3426 = 1.0 - sqrt(_1296);
                        float _3433 = sqrt(1.0 - ((1.0 - (_3426 * _3426)) * (1.0 - (_3424 * _3424))));
                        float _3434 = _3433 * _3433;
                        float _3435 = _3434 * _3434;
                        float _3436 = _3414 + _3379;
                        float _3437 = _3415 + _3380;
                        float _3438 = _3416 + _3381;
                        float _3442 = inversesqrt(dot(vec3(_3436, _3437, _3438), vec3(_3436, _3437, _3438)));
                        float _3446 = dot(vec3(_1402, _1405, _1408), vec3(_3414, _3415, _3416));
                        float _4973 = isnan(0.0) ? _3446 : (isnan(_3446) ? 0.0 : max(_3446, 0.0));
                        float _3449 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
                        float _3450 = dot(vec3(_1402, _1405, _1408), vec3(_3442 * _3436, _3442 * _3437, _3442 * _3438));
                        float _4984 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                        float _3453 = isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0));
                        float _3457 = ((_3453 * _3453) * (_3435 + (-1.0))) + 1.0;
                        float _3458 = _3392 * _3434;
                        float _3459 = _3458 * _3458;
                        float _3462 = ((1.0 - _3459) * _3382) + _3459;
                        float _4995 = isnan(0.0) ? _3462 : (isnan(_3462) ? 0.0 : max(_3462, 0.0));
                        float _3463 = isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0));
                        float _3464 = 1.0 - _3434;
                        float _3474 = (0.5 / (((_3463 * ((_3449 * _3464) + _3434)) + 9.9999999392252902907785028219223e-09) + (((_3463 * _3464) + _3434) * _3449))) * _3463;
                        float _5006 = isnan(0.0) ? _3474 : (isnan(_3474) ? 0.0 : max(_3474, 0.0));
                        float _3485 = (((_3435 * 3.1415927410125732421875) * (isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0)))) / ((_3457 * _3457) * ((_3399 * 2.1991131305694580078125) + 3.141590118408203125))) * _3388;
                        _3224 = (_3403 * _3351.x) + _3309;
                        _3225 = (_3403 * _3351.y) + _3310;
                        _3226 = (_3403 * _3351.z) + _3311;
                        _3221 = (_3485 * _3368.x) + _3306;
                        _3222 = (_3485 * _3368.y) + _3307;
                        _3223 = (_3485 * _3368.z) + _3308;
                        if (_3313 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3306 = _3221;
                            _3307 = _3222;
                            _3308 = _3223;
                            _3309 = _3224;
                            _3310 = _3225;
                            _3311 = _3226;
                            _3312 = _3313;
                        }
                    }
                    frontier_phi_25_pred = _3222;
                    frontier_phi_25_pred_1 = _3226;
                    frontier_phi_25_pred_2 = _3224;
                    frontier_phi_25_pred_3 = _3221;
                    frontier_phi_25_pred_4 = _3225;
                    frontier_phi_25_pred_5 = _3223;
                }
                _2869 = frontier_phi_25_pred;
                _2877 = frontier_phi_25_pred_1;
                _2873 = frontier_phi_25_pred_2;
                _2867 = frontier_phi_25_pred_3;
                _2875 = frontier_phi_25_pred_4;
                _2871 = frontier_phi_25_pred_5;
                uint _3079 = _3078 + 1u;
                if (_3079 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3072 = _2867;
                    _3073 = _2869;
                    _3074 = _2871;
                    _3075 = _2873;
                    _3076 = _2875;
                    _3077 = _2877;
                    _3078 = _3079;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2866 = _2867;
            _2868 = _2869;
            _2870 = _2871;
            _2872 = _2873;
            _2874 = _2875;
            _2876 = _2877;
        }
        uvec4 _2880 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2881 = _2880.z;
        uint _2883 = (_2881 >> 8u) & 15u;
        float _3040;
        float _3042;
        float _3044;
        float _3046;
        float _3048;
        float _3050;
        if (((4294967295u << _2883) & _2727) == 0u)
        {
            _3040 = _2866;
            _3042 = _2868;
            _3044 = _2870;
            _3046 = _2872;
            _3048 = _2874;
            _3050 = _2876;
        }
        else
        {
            float _3065 = inversesqrt(dot(vec3(_2681, _2682, _2683), vec3(_2681, _2682, _2683)));
            float _3066 = _3065 * _2681;
            float _3067 = _3065 * _2682;
            float _3068 = _3065 * _2683;
            float frontier_phi_19_20_ladder;
            float frontier_phi_19_20_ladder_1;
            float frontier_phi_19_20_ladder_2;
            float frontier_phi_19_20_ladder_3;
            float frontier_phi_19_20_ladder_4;
            float frontier_phi_19_20_ladder_5;
            if (_2883 < ((_2881 >> 12u) & 15u))
            {
                float _3041;
                float _3043;
                float _3045;
                float _3047;
                float _3049;
                float _3051;
                float _3289 = _2866;
                float _3290 = _2868;
                float _3291 = _2870;
                float _3292 = _2872;
                float _3293 = _2874;
                float _3294 = _2876;
                uint _3295 = _2883;
                uint _3304;
                bool _3305;
                for (;;)
                {
                    _3304 = texelFetch(g_lightClassification, int((((_2721 << 5u) + (_2707 << 9u)) + (_3295 << 2u)) >> 2u)).x;
                    _3305 = _3304 == 0u;
                    float frontier_phi_37_pred;
                    float frontier_phi_37_pred_1;
                    float frontier_phi_37_pred_2;
                    float frontier_phi_37_pred_3;
                    float frontier_phi_37_pred_4;
                    float frontier_phi_37_pred_5;
                    if (_3305)
                    {
                        frontier_phi_37_pred = _3294;
                        frontier_phi_37_pred_1 = _3293;
                        frontier_phi_37_pred_2 = _3292;
                        frontier_phi_37_pred_3 = _3291;
                        frontier_phi_37_pred_4 = _3290;
                        frontier_phi_37_pred_5 = _3289;
                    }
                    else
                    {
                        float _3534;
                        float _3535;
                        float _3536;
                        float _3537;
                        float _3538;
                        float _3539;
                        float _3839;
                        float _3840;
                        float _3841;
                        float _3842;
                        float _3843;
                        float _3844;
                        float _3558 = _3289;
                        float _3559 = _3290;
                        float _3560 = _3291;
                        float _3561 = _3292;
                        float _3562 = _3293;
                        float _3563 = _3294;
                        uint _3564 = _3304;
                        uint _3565;
                        vec4 _3590;
                        float _3591;
                        vec4 _3606;
                        vec3 _3618;
                        vec4 _3633;
                        vec4 _3648;
                        float _3694;
                        bool _3695;
                        for (;;)
                        {
                            uint _3575 = ((_3295 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3564));
                            _3565 = (_3564 + 4294967295u) & _3564;
                            uint _3577 = _3575 * 40u;
                            _3590 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3577)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3577 + 3u)).x));
                            _3591 = _3590.w;
                            uint _3593 = (_3575 * 40u) + 4u;
                            _3606 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3593)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3593 + 3u)).x));
                            uint _3608 = (_3575 * 40u) + 8u;
                            _3618 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3608)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3608 + 2u)).x));
                            uint _3620 = (_3575 * 40u) + 16u;
                            _3633 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3620)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 3u)).x));
                            uint _3635 = (_3575 * 40u) + 20u;
                            _3648 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3635)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3635 + 3u)).x));
                            uint _3650 = (_3575 * 40u) + 24u;
                            vec4 _3663 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3650)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3650 + 3u)).x));
                            uint _3669 = (_3575 * 40u) + 28u;
                            vec4 _3682 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3669)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3669 + 3u)).x));
                            _3694 = fma(_2683, _3682.z, fma(_2682, _3682.y, _3682.x * _2681)) + _3682.w;
                            _3695 = !((fma(_2683, _3663.z, fma(_2682, _3663.y, _3663.x * _2681)) + _3663.w) <= 0.0);
                            float frontier_phi_46_pred;
                            float frontier_phi_46_pred_1;
                            float frontier_phi_46_pred_2;
                            float frontier_phi_46_pred_3;
                            float frontier_phi_46_pred_4;
                            float frontier_phi_46_pred_5;
                            if (_3695)
                            {
                                float _3722 = _3590.x - _2681;
                                float _3723 = _3590.y - _2682;
                                float _3724 = _3590.z - _2683;
                                float _3725 = dot(vec3(_3722, _3723, _3724), vec3(_3722, _3723, _3724));
                                float _3728 = inversesqrt(_3725);
                                float _3729 = _3728 * _3722;
                                float _3730 = _3728 * _3723;
                                float _3731 = _3728 * _3724;
                                float _3735 = 1.0 - (_3725 / (_3591 * _3591));
                                float _5017 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3736 = isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0));
                                float _3740 = sqrt(_3725) * _3606.w;
                                float _3742 = 1.39999997615814208984375 / (_3740 + 1.39999997615814208984375);
                                float _3743 = _3742 * _3742;
                                float _3746 = ((1.0 - _3743) * dot(vec3(_3729, _3730, _3731), vec3(_1402, _1405, _1408))) + _3743;
                                float _3749 = _3740 * _3740;
                                float _3753 = (fma(_2683, _3633.z, fma(_2682, _3633.y, _3633.x * _2681)) + _3633.w) / _3694;
                                float _3754 = (fma(_2683, _3648.z, fma(_2682, _3648.y, _3648.x * _2681)) + _3648.w) / _3694;
                                float _3758 = 1.0 - dot(vec2(_3753, _3754), vec2(_3753, _3754));
                                float _5033 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0));
                                float _3759 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
                                float _3760 = _3759 * (((isnan(0.0) ? _3746 : (isnan(_3746) ? 0.0 : max(_3746, 0.0))) * _3736) / ((_3749 * 0.699999988079071044921875) + 1.0));
                                float _3772 = exp2(log2(1.0 / ((_3749 * 3.5) + 5.0)) * 0.25);
                                float _3774 = 1.0 - sqrt(_1296);
                                float _3781 = sqrt(1.0 - ((1.0 - (_3774 * _3774)) * (1.0 - (_3772 * _3772))));
                                float _3782 = _3781 * _3781;
                                float _3783 = _3782 * _3782;
                                float _3784 = _3729 - _3066;
                                float _3785 = _3730 - _3067;
                                float _3786 = _3731 - _3068;
                                float _3790 = inversesqrt(dot(vec3(_3784, _3785, _3786), vec3(_3784, _3785, _3786)));
                                float _3794 = dot(vec3(_1402, _1405, _1408), vec3((-0.0) - _3066, (-0.0) - _3067, (-0.0) - _3068));
                                float _5044 = isnan(0.0) ? _3794 : (isnan(_3794) ? 0.0 : max(_3794, 0.0));
                                float _3797 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
                                float _3798 = dot(vec3(_1402, _1405, _1408), vec3(_3790 * _3784, _3790 * _3785, _3790 * _3786));
                                float _5055 = isnan(0.0) ? _3798 : (isnan(_3798) ? 0.0 : max(_3798, 0.0));
                                float _3801 = isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0));
                                float _3805 = ((_3801 * _3801) * (_3783 + (-1.0))) + 1.0;
                                float _3806 = _3742 * _3782;
                                float _3807 = _3806 * _3806;
                                float _3813 = ((1.0 - _3807) * dot(vec3(_1402, _1405, _1408), vec3(_3729, _3730, _3731))) + _3807;
                                float _5066 = isnan(0.0) ? _3813 : (isnan(_3813) ? 0.0 : max(_3813, 0.0));
                                float _3814 = isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0));
                                float _3815 = 1.0 - _3782;
                                float _3825 = (0.5 / (((_3814 * ((_3797 * _3815) + _3782)) + 9.9999999392252902907785028219223e-09) + (((_3814 * _3815) + _3782) * _3797))) * _3814;
                                float _5077 = isnan(0.0) ? _3825 : (isnan(_3825) ? 0.0 : max(_3825, 0.0));
                                float _3835 = (_3759 * _3736) * (((_3783 * 3.1415927410125732421875) * (isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0)))) / ((_3805 * _3805) * ((_3749 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_46_pred = _3760 * _3606.z;
                                frontier_phi_46_pred_1 = _3760 * _3606.y;
                                frontier_phi_46_pred_2 = _3760 * _3606.x;
                                frontier_phi_46_pred_3 = _3835 * _3618.z;
                                frontier_phi_46_pred_4 = _3835 * _3618.y;
                                frontier_phi_46_pred_5 = _3835 * _3618.x;
                            }
                            else
                            {
                                frontier_phi_46_pred = 0.0;
                                frontier_phi_46_pred_1 = 0.0;
                                frontier_phi_46_pred_2 = 0.0;
                                frontier_phi_46_pred_3 = 0.0;
                                frontier_phi_46_pred_4 = 0.0;
                                frontier_phi_46_pred_5 = 0.0;
                            }
                            _3844 = frontier_phi_46_pred;
                            _3843 = frontier_phi_46_pred_1;
                            _3842 = frontier_phi_46_pred_2;
                            _3841 = frontier_phi_46_pred_3;
                            _3840 = frontier_phi_46_pred_4;
                            _3839 = frontier_phi_46_pred_5;
                            _3537 = _3842 + _3561;
                            _3538 = _3843 + _3562;
                            _3539 = _3844 + _3563;
                            _3534 = _3839 + _3558;
                            _3535 = _3840 + _3559;
                            _3536 = _3841 + _3560;
                            if (_3565 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3558 = _3534;
                                _3559 = _3535;
                                _3560 = _3536;
                                _3561 = _3537;
                                _3562 = _3538;
                                _3563 = _3539;
                                _3564 = _3565;
                                continue;
                            }
                        }
                        frontier_phi_37_pred = _3539;
                        frontier_phi_37_pred_1 = _3538;
                        frontier_phi_37_pred_2 = _3537;
                        frontier_phi_37_pred_3 = _3536;
                        frontier_phi_37_pred_4 = _3535;
                        frontier_phi_37_pred_5 = _3534;
                    }
                    _3051 = frontier_phi_37_pred;
                    _3049 = frontier_phi_37_pred_1;
                    _3047 = frontier_phi_37_pred_2;
                    _3045 = frontier_phi_37_pred_3;
                    _3043 = frontier_phi_37_pred_4;
                    _3041 = frontier_phi_37_pred_5;
                    uint _3296 = _3295 + 1u;
                    if (_3296 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3289 = _3041;
                        _3290 = _3043;
                        _3291 = _3045;
                        _3292 = _3047;
                        _3293 = _3049;
                        _3294 = _3051;
                        _3295 = _3296;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_19_20_ladder = _3041;
                frontier_phi_19_20_ladder_1 = _3051;
                frontier_phi_19_20_ladder_2 = _3049;
                frontier_phi_19_20_ladder_3 = _3047;
                frontier_phi_19_20_ladder_4 = _3045;
                frontier_phi_19_20_ladder_5 = _3043;
            }
            else
            {
                frontier_phi_19_20_ladder = _2866;
                frontier_phi_19_20_ladder_1 = _2876;
                frontier_phi_19_20_ladder_2 = _2874;
                frontier_phi_19_20_ladder_3 = _2872;
                frontier_phi_19_20_ladder_4 = _2870;
                frontier_phi_19_20_ladder_5 = _2868;
            }
            _3040 = frontier_phi_19_20_ladder;
            _3042 = frontier_phi_19_20_ladder_5;
            _3044 = frontier_phi_19_20_ladder_4;
            _3046 = frontier_phi_19_20_ladder_3;
            _3048 = frontier_phi_19_20_ladder_2;
            _3050 = frontier_phi_19_20_ladder_1;
        }
        float _3055 = isnan(1.0) ? _1445 : (isnan(_1445) ? 1.0 : min(_1445, 1.0));
        _2740 = (_3055 * _3046) + _2276;
        _2742 = (_3055 * _3048) + _2278;
        _2744 = (_3055 * _3050) + _2280;
        _2746 = ((_3040 * 0.039999999105930328369140625) * _3055) + _2551;
        _2748 = ((_3042 * 0.039999999105930328369140625) * _3055) + _2553;
        _2750 = ((_3044 * 0.039999999105930328369140625) * _3055) + _2555;
    }
    else
    {
        _2740 = _2276;
        _2742 = _2278;
        _2744 = _2280;
        _2746 = _2551;
        _2748 = _2553;
        _2750 = _2555;
    }
    float _2771 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2772 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2773 = cbSceneParam._m0[86u].x * ((_1381 / cbSceneParam._m0[86u].x) + ((_1464 * 0.449999988079071044921875) * dot(vec3(_1292, _1293, _1294), vec3(_215, _216, _217))));
    float _2774 = isnan(_2771) ? _2773 : (isnan(_2773) ? _2771 : min(_2773, _2771));
    float _2775 = isnan(_2772) ? _1382 : (isnan(_1382) ? _2772 : min(_1382, _2772));
    vec4 _2777 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2774, _2775), 0.0);
    float _2779 = _2777.x;
    bool _2799 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2779)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2779))) > _1311;
    float _2800 = _2799 ? _2774 : _1381;
    float _2801 = _2799 ? _2775 : _1382;
    vec4 _2803 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2800, _2801));
    vec4 _2808 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2800, _2801));
    float _2810 = _2808.x;
    bool _2815 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2824 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2830 = (_2815 ? (_2824 / (cbSceneParam._m0[2u].x - _2810)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2810))) - _1311;
    float _2832 = cbMtdParam._m0[41u].w + cbMtdParam._m0[35u].w;
    float _2833 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _2834 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    bool _2840 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2844 = (isnan(_2830) ? 0.0 : (isnan(0.0) ? _2830 : max(0.0, _2830))) * (-1.44269502162933349609375);
    float _5108 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
    float _5119 = isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0));
    float _5130 = isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0));
    float _2967;
    float _2968;
    float _2969;
    if ((1.0 - _1216) > 0.00999999977648258209228515625)
    {
        vec4 _2888 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2800, _2801), 0.0);
        float _2890 = _2888.x;
        float _2896 = (_2815 ? (_2824 / (cbSceneParam._m0[2u].x - _2890)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2890))) - _1311;
        uint _2902 = floatBitsToUint(cbInstanceData._m0[_1233]).x * 14u;
        uint _2908 = _2902 + 4u;
        float _2917 = dot(vec3(cbLight._m0[_2902].xyz), vec3(_222, _223, _224));
        float _2924 = dot(vec3((-0.0) - _1367, (-0.0) - _1368, (-0.0) - _1369), vec3((-0.0) - _222, (-0.0) - _223, (-0.0) - _224));
        float _2929 = ((isnan(0.0) ? _2924 : (isnan(_2924) ? 0.0 : max(_2924, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2917 : (isnan(_2917) ? 0.001000000047497451305389404296875 : max(_2917, 0.001000000047497451305389404296875)))) + 1.0;
        float _2931 = (-0.0) - ((isnan(_2896) ? 0.0 : (isnan(0.0) ? _2896 : max(0.0, _2896))) * _2929);
        _2967 = _2840 ? 0.0 : ((((_1277 * cbMtdParam._m0[35u].w) * cbLight._m0[_2908].x) / ((_2929 * _2832) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2832 * 1.44269502162933349609375) * _2931)));
        _2968 = _2840 ? 0.0 : ((((_1277 * cbMtdParam._m0[36u].x) * cbLight._m0[_2908].y) / ((_2929 * _2833) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2833 * 1.44269502162933349609375) * _2931)));
        _2969 = _2840 ? 0.0 : ((((_1277 * cbMtdParam._m0[36u].y) * cbLight._m0[_2908].z) / ((_2929 * _2834) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2834 * 1.44269502162933349609375) * _2931)));
    }
    else
    {
        _2967 = 0.0;
        _2968 = 0.0;
        _2969 = 0.0;
    }
    float _2986 = 0.959999978542327880859375 - (_1455 * 0.959999978542327880859375);
    float _2987 = (_2967 + ((exp2(_2844 * (_2840 ? 0.0 : _2832)) * _2803.x) * cbSceneParam._m0[72u].w)) * _2986;
    float _2988 = (_2968 + ((exp2(_2844 * (_2840 ? 0.0 : _2833)) * _2803.y) * cbSceneParam._m0[72u].w)) * _2986;
    float _2989 = (_2969 + ((exp2(_2844 * (_2840 ? 0.0 : _2834)) * _2803.z) * cbSceneParam._m0[72u].w)) * _2986;
    float _2997 = (_2987 + ((_2746 + ((_1479.x * _1460) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0))) * (_2740 + (_2157 * (isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0)))))) - _2987) * _1216);
    float _2999 = (_2988 + ((_2748 + ((_1479.y * _1460) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0))) * (_2742 + (_2157 * (isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0)))))) - _2988) * _1216);
    float _3001 = (_2989 + ((_2750 + ((_1479.z * _1460) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0))) * (_2744 + (_2157 * (isnan(0.0) ? _2152 : (isnan(_2152) ? 0.0 : max(_2152, 0.0)))))) - _2989) * _1216);
    float _3006 = cbInstanceData._m0[_1232 + 6u].w * (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0)));
    float _3011 = _1381 / cbSceneParam._m0[86u].x;
    float _3012 = _1382 / cbSceneParam._m0[86u].y;
    vec4 _3026 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3011, _3012, (log2((isnan(cbSceneParam._m0[77u].w) ? _1311 : (isnan(_1311) ? cbSceneParam._m0[77u].w : min(_1311, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3028 = _3026.x;
    float _3029 = _3026.y;
    float _3030 = _3026.z;
    float _3031 = _3026.w;
    float _3129;
    float _3131;
    float _3133;
    float _3135;
    if (_1311 > cbSceneParam._m0[78u].w)
    {
        float _3093 = isnan(_1311) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1311 : min(cbSceneParam._m0[80u].w, _1311));
        float _3094 = _3093 / _1311;
        float _3105 = _3094 * _1360;
        float _3106 = _1361 * _3094;
        float _3107 = (-0.0) - _3106;
        float _3108 = _3094 * _1362;
        float _3110 = (cbSceneParam._m0[77u].w * _3107) / _3093;
        float _3111 = _3110 + cbSceneParam._m0[79u].w;
        float _3112 = cbSceneParam._m0[79u].w - _3106;
        float _3118 = sqrt(((_3105 * _3105) + (_3106 * _3106)) + (_3108 * _3108));
        float _3121 = (1.0 - (cbSceneParam._m0[77u].w / _3093)) * _3118;
        float _3127 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3128 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3490;
        if (abs((_3107 - _3110) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3490 = ((((_3111 > 0.0) ? exp2(_3127 * _3111) : (2.0 - exp2(_3128 * _3111))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3121;
        }
        else
        {
            float _3246 = 1.0 / cbSceneParam._m0[80u].x;
            float _3247 = isnan(_3112) ? _3111 : (isnan(_3111) ? _3112 : max(_3111, _3112));
            float _3248 = isnan(_3112) ? _3111 : (isnan(_3111) ? _3112 : min(_3111, _3112));
            float _3257 = isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : min(_3247, 0.0));
            float _3258 = isnan(0.0) ? _3248 : (isnan(_3248) ? 0.0 : min(_3248, 0.0));
            _3490 = ((abs(_3118 / _3107) * cbSceneParam._m0[80u].y) * ((((_3257 - _3258) * 2.0) - ((exp2(_3127 * (isnan(0.0) ? _3247 : (isnan(_3247) ? 0.0 : max(_3247, 0.0)))) - exp2(_3127 * (isnan(0.0) ? _3248 : (isnan(_3248) ? 0.0 : max(_3248, 0.0))))) * _3246)) - ((exp2(_3128 * _3257) - exp2(_3128 * _3258)) * _3246))) + (_3121 * cbSceneParam._m0[80u].z);
        }
        vec4 _3492 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3011, _3012, 1.0), 0.0);
        float _3501 = exp2((_3490 * (-1.44269502162933349609375)) * (1.0 - _3492.w));
        float _3502 = log2(_3501);
        float _3518 = log2(_3031);
        _3129 = (exp2(_3518 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3502 * cbSceneParam._m0[78u].x)) * _3492.x) / cbSceneParam._m0[78u].x)) + _3028;
        _3131 = (exp2(_3518 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3502 * cbSceneParam._m0[78u].y)) * _3492.y) / cbSceneParam._m0[78u].y)) + _3029;
        _3133 = (exp2(_3518 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3502 * cbSceneParam._m0[78u].z)) * _3492.z) / cbSceneParam._m0[78u].z)) + _3030;
        _3135 = _3501 * _3031;
    }
    else
    {
        _3129 = _3028;
        _3131 = _3029;
        _3133 = _3030;
        _3135 = _3031;
    }
    bool _3528;
    float _3191;
    vec4 _3194;
    float _3196;
    vec4 _3198;
    float _3206;
    float _3207;
    float _3208;
    float _3209;
    bool _3220;
    for (;;)
    {
        bool _3147 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _3149 = log2(_3135);
        float _3156 = exp2(_3149 * cbSceneParam._m0[78u].x) * _2997;
        float _3157 = exp2(_3149 * cbSceneParam._m0[78u].y) * _2999;
        float _3158 = exp2(_3149 * cbSceneParam._m0[78u].z) * _3001;
        vec4 _3166 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1381, _1382));
        float _3168 = _3166.x;
        float _3189 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3168)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3168))) - _1311) * 3.0;
        float _5196 = isnan(0.0) ? _3189 : (isnan(_3189) ? 0.0 : max(_3189, 0.0));
        _3191 = _3006 * (isnan(1.0) ? _5196 : (isnan(_5196) ? 1.0 : min(_5196, 1.0)));
        float _3192 = _1376 + (-0.5);
        _3194 = cbMtdParam._m0[1u];
        _3196 = _3194.y * _3192;
        _3198 = cbMatDynParam._m0[0u];
        float _3205 = (roundEven(_3198.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3206 = _3205 * (_3147 ? _3156 : (_3156 + (cbSceneParam._m0[72u].w * _3129)));
        _3207 = _3205 * (_3147 ? _3157 : (_3157 + (cbSceneParam._m0[72u].w * _3131)));
        _3208 = _3205 * (_3147 ? _3158 : (_3158 + (cbSceneParam._m0[72u].w * _3133)));
        _3209 = _3192 * 0.999000012874603271484375;
        _3220 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3220)
        {
            if ((cbInstanceData._m0[_1232 + 7u].x + _3209) < 0.5)
            {
                _3528 = true;
                break;
            }
        }
        uint _3281 = _1421 + uint(_3198.w);
        if ((cbInstanceData._m0[_3281].w < 1.0) && ((cbInstanceData._m0[_3281].w + _3209) < 0.5))
        {
            _3528 = true;
            break;
        }
        if ((_3196 + 1.0) < _3194.x)
        {
            _3528 = true;
            break;
        }
        _3528 = false;
        break;
    }
    float _3549;
    if (_3528)
    {
        discard_state = true;
        _3549 = 0.0;
    }
    else
    {
        _3549 = _3191;
    }
    SV_Target.x = _3206;
    SV_Target.y = _3207;
    SV_Target.z = _3208;
    SV_Target.w = _3549;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3191;
    discard_exit();
}


