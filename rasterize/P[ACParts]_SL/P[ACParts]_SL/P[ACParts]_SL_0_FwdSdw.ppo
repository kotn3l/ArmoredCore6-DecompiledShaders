#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[17];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_SL_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_SL_snp_0_Texture2D_14;
layout(set = 0, binding = 2) uniform texture2D P_ACParts_SL_snp_0_Texture2D_19;
layout(set = 0, binding = 3) uniform texture2D P_ACParts_SL_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D P_ACParts_SL_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1015;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _191 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _192 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _193 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _199 = inversesqrt(dot(vec3(_191, _192, _193), vec3(_191, _192, _193)));
    float _206 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _213 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _231 = texture(sampler2D(P_ACParts_SL_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _248 = texture(sampler2D(P_ACParts_SL_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _270 = texture(sampler2D(P_ACParts_SL_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _272 = _270.x;
    float _273 = _270.y;
    bool _310 = _272 >= 0.25;
    bool _315 = _272 >= 0.3499999940395355224609375;
    bool _320 = _272 >= 0.5;
    bool _325 = _272 >= 0.64999997615814208984375;
    bool _330 = _272 >= 0.75;
    float _347 = ((_231.x * 4.55000019073486328125) * _248.x) * ((((_330 ? cbMtdParam._m0[10u].x : (_325 ? cbMtdParam._m0[15u].x : (_320 ? cbMtdParam._m0[14u].x : (_315 ? cbMtdParam._m0[13u].x : (_310 ? cbMtdParam._m0[12u].x : cbMtdParam._m0[11u].x))))) - cbMtdParam._m0[9u].x) * _273) + cbMtdParam._m0[9u].x);
    float _350 = ((_231.y * 4.55000019073486328125) * _248.y) * ((((_330 ? cbMtdParam._m0[10u].y : (_325 ? cbMtdParam._m0[15u].y : (_320 ? cbMtdParam._m0[14u].y : (_315 ? cbMtdParam._m0[13u].y : (_310 ? cbMtdParam._m0[12u].y : cbMtdParam._m0[11u].y))))) - cbMtdParam._m0[9u].y) * _273) + cbMtdParam._m0[9u].y);
    float _353 = ((_231.z * 4.55000019073486328125) * _248.z) * ((((_330 ? cbMtdParam._m0[10u].z : (_325 ? cbMtdParam._m0[15u].z : (_320 ? cbMtdParam._m0[14u].z : (_315 ? cbMtdParam._m0[13u].z : (_310 ? cbMtdParam._m0[12u].z : cbMtdParam._m0[11u].z))))) - cbMtdParam._m0[9u].z) * _273) + cbMtdParam._m0[9u].z);
    vec4 _365 = texture(sampler2D(P_ACParts_SL_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _372 = cbMtdParam._m0[16u].x + _365.x;
    vec4 _385 = texture(sampler2D(P_ACParts_SL_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _393 = (_385.x * 2.0) + (-1.0);
    float _395 = (_385.y * 2.0) + (-1.0);
    float _396 = dot(vec2(_393, _395), vec2(_393, _395));
    float _3629 = isnan(0.0) ? _396 : (isnan(_396) ? 0.0 : max(_396, 0.0));
    float _402 = sqrt(1.0 - (isnan(1.0) ? _3629 : (isnan(_3629) ? 1.0 : min(_3629, 1.0))));
    float _403 = _385.z * cbMtdParam._m0[16u].y;
    float _407 = (cbMtdParam._m0[16u].z * _393) + _393;
    float _408 = (cbMtdParam._m0[16u].z * _395) + _395;
    float _411 = fma(_402, _206 * NORMAL.x, fma(_408, _213 * TANGENT.x, (_199 * _191) * _407));
    float _414 = fma(_402, _206 * NORMAL.y, fma(_408, _213 * TANGENT.y, (_199 * _192) * _407));
    float _417 = fma(_402, _206 * NORMAL.z, fma(_408, _213 * TANGENT.z, (_199 * _193) * _407));
    float _421 = inversesqrt(dot(vec3(_411, _414, _417), vec3(_411, _414, _417)));
    float _422 = _421 * _411;
    float _423 = _421 * _414;
    float _424 = _421 * _417;
    float _3640 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _425 = isnan(1.0) ? _3640 : (isnan(_3640) ? 1.0 : min(_3640, 1.0));
    float _3651 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _3662 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _3673 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _3684 = isnan(0.0) ? _372 : (isnan(_372) ? 0.0 : max(_372, 0.0));
    float _429 = isnan(1.0) ? _3684 : (isnan(_3684) ? 1.0 : min(_3684, 1.0));
    float _445 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _486 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _496 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _486);
    float _497 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _486);
    float _498 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _486);
    float _502 = inversesqrt(dot(vec3(_496, _497, _498), vec3(_496, _497, _498)));
    float _503 = _496 * _502;
    float _504 = _497 * _502;
    float _505 = _498 * _502;
    float _511 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _512 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _514 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _516 = _514.w;
    float _537 = fma(_424, cbSceneParam._m0[5u].z, fma(_423, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _422));
    float _540 = fma(_424, cbSceneParam._m0[6u].z, fma(_423, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _422));
    float _543 = fma(_424, cbSceneParam._m0[7u].z, fma(_423, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _422));
    vec4 _545 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _556 = (((_545.y - _425) + (_545.w * _425)) * cbMtdParam._m0[3u].x) + _425;
    uint _569 = uint(roundEven(NORMAL.w)) * 13u;
    uint _571 = (_569 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _577 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3651 : (isnan(_3651) ? 1.0 : min(_3651, 1.0)))) * cbInstanceData._m0[_571].x;
    float _578 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3662 : (isnan(_3662) ? 1.0 : min(_3662, 1.0)))) * cbInstanceData._m0[_571].y;
    float _579 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3673 : (isnan(_3673) ? 1.0 : min(_3673, 1.0)))) * cbInstanceData._m0[_571].z;
    float _3695 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _580 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
    float _3706 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _581 = isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0));
    float _3717 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _582 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
    vec4 _583 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _588 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _599 = (((_588.x - _429) + (_588.w * _429)) * cbMtdParam._m0[3u].x) + _429;
    float _612 = (cbMtdParam._m0[3u].x * (((_580 * _516) - _580) + _583.x)) + _580;
    float _613 = (cbMtdParam._m0[3u].x * (((_581 * _516) - _581) + _583.y)) + _581;
    float _614 = (cbMtdParam._m0[3u].x * (((_582 * _516) - _582) + _583.z)) + _582;
    float _615 = 1.0 - _599;
    float _616 = _615 * _612;
    float _617 = _615 * _613;
    float _618 = _615 * _614;
    float _623 = (_612 + (-0.039999999105930328369140625)) * _599;
    float _624 = (_613 + (-0.039999999105930328369140625)) * _599;
    float _625 = (_614 + (-0.039999999105930328369140625)) * _599;
    float _626 = _623 + 0.039999999105930328369140625;
    float _628 = _624 + 0.039999999105930328369140625;
    float _629 = _625 + 0.039999999105930328369140625;
    vec4 _638 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _511, cbSceneParam._m0[86u].y * _512));
    float _641 = _638.x * TEXCOORD_4;
    float _642 = dot(vec3(_422, _423, _424), vec3(_503, _504, _505));
    float _645 = _642 * 2.0;
    float _649 = (_645 * _422) - _503;
    float _650 = (_645 * _423) - _504;
    float _651 = (_645 * _424) - _505;
    float _655 = abs(dot(vec3(_503, _504, _505), vec3(_422, _423, _424)));
    float _3728 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _657 = sqrt(_556);
    float _670 = exp2((_657 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_657 * 3.0));
    float _676 = (1.0 - _670) * ((_657 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _677 = _670 * _657;
    float _705 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _709 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _713 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1014;
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    float _1020;
    float _1021;
    float _1022;
    float _1023;
    float _1024;
    float _1025;
    float _1026;
    float _1027;
    float _1028;
    float _1029;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _740 = fma(_713, cbModelParam._m0[26u].z, fma(_709, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _705));
        float _744 = fma(_713, cbModelParam._m0[27u].z, fma(_709, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _705));
        float _748 = fma(_713, cbModelParam._m0[28u].z, fma(_709, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _705));
        float _772 = _705 + _422;
        float _773 = _709 + _423;
        float _774 = _713 + _424;
        float _784 = fma(_774, cbModelParam._m0[26u].z, fma(_773, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _772)) - _740;
        float _785 = fma(_774, cbModelParam._m0[27u].z, fma(_773, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _772)) - _744;
        float _786 = fma(_774, cbModelParam._m0[28u].z, fma(_773, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _772)) - _748;
        float _790 = inversesqrt(dot(vec3(_784, _785, _786), vec3(_784, _785, _786)));
        float _803 = ((_790 * _784) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_740 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _804 = ((_790 * _785) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_744 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _805 = ((_790 * _786) / cbModelParam._m0[34u].z) + ((((((_748 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _808 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _815 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _822 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        vec4 _829 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_803, _804, _805), 0.0);
        float _842 = exp2((_808.w + (-0.5)) * 20.0) * 2.0;
        float _843 = _842 * (_808.x + (-0.5));
        float _844 = _842 * (_808.y + (-0.5));
        float _845 = _842 * (_808.z + (-0.5));
        float _852 = exp2((_815.w + (-0.5)) * 20.0) * 2.0;
        float _853 = _852 * (_815.x + (-0.5));
        float _854 = _852 * (_815.y + (-0.5));
        float _855 = _852 * (_815.z + (-0.5));
        float _862 = exp2((_822.w + (-0.5)) * 20.0) * 2.0;
        float _863 = _862 * (_822.x + (-0.5));
        float _864 = _862 * (_822.y + (-0.5));
        float _865 = _862 * (_822.z + (-0.5));
        float _872 = exp2((_829.w + (-0.5)) * 20.0) * 2.0;
        float _873 = _872 * (_829.x + (-0.5));
        float _874 = _872 * (_829.y + (-0.5));
        float _875 = _872 * (_829.z + (-0.5));
        float _876 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        float _877 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
        float _878 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
        float _879 = _843 * 0.5;
        float _880 = _853 * 0.5;
        float _881 = _863 * 0.5;
        float _882 = dot(vec3(_879, _880, _881), vec3(_879, _880, _881));
        float _887 = (_882 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_882);
        float _896 = (dot(vec3(_422, _423, _424), vec3(_887 * _879, _887 * _880, _887 * _881)) + 1.0) * 0.5;
        float _3754 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0));
        float _906 = sqrt(((_880 * _880) + (_879 * _879)) + (_881 * _881)) / (_876 + 9.9999997473787516355514526367188e-06);
        float _3765 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _907 = isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0));
        float _908 = _907 * 2.0;
        float _912 = (1.0 - _907) / (_907 + 1.0);
        float _3776 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
        float _913 = isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0));
        float _922 = ((((1.0 - _913) * (_908 + 2.0)) * exp2(log2(isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0))) * (_908 + 1.0))) + _913) * _876;
        float _923 = _844 * 0.5;
        float _924 = _854 * 0.5;
        float _925 = _864 * 0.5;
        float _926 = dot(vec3(_923, _924, _925), vec3(_923, _924, _925));
        float _931 = (_926 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_926);
        float _939 = (dot(vec3(_422, _423, _424), vec3(_931 * _923, _931 * _924, _931 * _925)) + 1.0) * 0.5;
        float _3787 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
        float _948 = sqrt(((_924 * _924) + (_923 * _923)) + (_925 * _925)) / (_877 + 9.9999997473787516355514526367188e-06);
        float _3798 = isnan(0.0) ? _948 : (isnan(_948) ? 0.0 : max(_948, 0.0));
        float _949 = isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0));
        float _950 = _949 * 2.0;
        float _954 = (1.0 - _949) / (_949 + 1.0);
        float _3809 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _955 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
        float _964 = ((((1.0 - _955) * (_950 + 2.0)) * exp2(log2(isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0))) * (_950 + 1.0))) + _955) * _877;
        float _965 = _845 * 0.5;
        float _966 = _855 * 0.5;
        float _967 = _865 * 0.5;
        float _968 = dot(vec3(_965, _966, _967), vec3(_965, _966, _967));
        float _973 = (_968 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_968);
        float _981 = (dot(vec3(_422, _423, _424), vec3(_973 * _965, _973 * _966, _973 * _967)) + 1.0) * 0.5;
        float _3820 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
        float _990 = sqrt(((_966 * _966) + (_965 * _965)) + (_967 * _967)) / (_878 + 9.9999997473787516355514526367188e-06);
        float _3831 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
        float _991 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
        float _992 = _991 * 2.0;
        float _996 = (1.0 - _991) / (_991 + 1.0);
        float _3842 = isnan(0.0) ? _996 : (isnan(_996) ? 0.0 : max(_996, 0.0));
        float _997 = isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0));
        float _1006 = ((((1.0 - _997) * (_992 + 2.0)) * exp2(log2(isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0))) * (_992 + 1.0))) + _997) * _878;
        _1014 = _845;
        _1016 = _844;
        _1017 = _843;
        _1018 = _855;
        _1019 = _854;
        _1020 = _853;
        _1021 = _865;
        _1022 = _864;
        _1023 = _863;
        _1024 = _878;
        _1025 = _877;
        _1026 = _876;
        _1027 = cbModelParam._m0[36u].z * (isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0)));
        _1028 = cbModelParam._m0[36u].z * (isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0)));
        _1029 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0)));
    }
    else
    {
        _1014 = _1015;
        _1016 = _1015;
        _1017 = _1015;
        _1018 = _1015;
        _1019 = _1015;
        _1020 = _1015;
        _1021 = _1015;
        _1022 = _1015;
        _1023 = _1015;
        _1024 = _1015;
        _1025 = _1015;
        _1026 = _1015;
        _1027 = 0.0;
        _1028 = 0.0;
        _1029 = 0.0;
    }
    float _1324;
    float _1325;
    float _1326;
    float _1327;
    float _1328;
    float _1329;
    float _1330;
    float _1331;
    float _1332;
    float _1333;
    float _1334;
    float _1335;
    float _1336;
    float _1337;
    float _1338;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1055 = fma(_713, cbModelParam._m0[30u].z, fma(_709, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _705));
        float _1059 = fma(_713, cbModelParam._m0[31u].z, fma(_709, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _705));
        float _1063 = fma(_713, cbModelParam._m0[32u].z, fma(_709, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _705));
        float _1086 = _705 + _422;
        float _1087 = _709 + _423;
        float _1088 = _713 + _424;
        float _1098 = fma(_1088, cbModelParam._m0[30u].z, fma(_1087, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1086)) - _1055;
        float _1099 = fma(_1088, cbModelParam._m0[31u].z, fma(_1087, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1086)) - _1059;
        float _1100 = fma(_1088, cbModelParam._m0[32u].z, fma(_1087, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1086)) - _1063;
        float _1104 = inversesqrt(dot(vec3(_1098, _1099, _1100), vec3(_1098, _1099, _1100)));
        float _1117 = ((_1104 * _1098) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1055 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1118 = ((_1104 * _1099) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1059 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1119 = ((_1104 * _1100) / cbModelParam._m0[35u].z) + ((((((_1063 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1121 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1117, _1118, _1119), 0.0);
        vec4 _1128 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1117, _1118, _1119), 0.0);
        vec4 _1135 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1117, _1118, _1119), 0.0);
        vec4 _1142 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1117, _1118, _1119), 0.0);
        float _1154 = exp2((_1121.w + (-0.5)) * 20.0) * 2.0;
        float _1155 = _1154 * (_1121.x + (-0.5));
        float _1156 = _1154 * (_1121.y + (-0.5));
        float _1157 = _1154 * (_1121.z + (-0.5));
        float _1164 = exp2((_1128.w + (-0.5)) * 20.0) * 2.0;
        float _1165 = _1164 * (_1128.x + (-0.5));
        float _1166 = _1164 * (_1128.y + (-0.5));
        float _1167 = _1164 * (_1128.z + (-0.5));
        float _1174 = exp2((_1135.w + (-0.5)) * 20.0) * 2.0;
        float _1175 = _1174 * (_1135.x + (-0.5));
        float _1176 = _1174 * (_1135.y + (-0.5));
        float _1177 = _1174 * (_1135.z + (-0.5));
        float _1184 = exp2((_1142.w + (-0.5)) * 20.0) * 2.0;
        float _1185 = _1184 * (_1142.x + (-0.5));
        float _1186 = _1184 * (_1142.y + (-0.5));
        float _1187 = _1184 * (_1142.z + (-0.5));
        float _1188 = isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0));
        float _1189 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1190 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1191 = _1155 * 0.5;
        float _1192 = _1165 * 0.5;
        float _1193 = _1175 * 0.5;
        float _1194 = dot(vec3(_1191, _1192, _1193), vec3(_1191, _1192, _1193));
        float _1199 = (_1194 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1194);
        float _1207 = (dot(vec3(_422, _423, _424), vec3(_1199 * _1191, _1199 * _1192, _1199 * _1193)) + 1.0) * 0.5;
        float _3883 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1216 = sqrt(((_1192 * _1192) + (_1191 * _1191)) + (_1193 * _1193)) / (_1188 + 9.9999997473787516355514526367188e-06);
        float _3894 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1217 = isnan(1.0) ? _3894 : (isnan(_3894) ? 1.0 : min(_3894, 1.0));
        float _1218 = _1217 * 2.0;
        float _1222 = (1.0 - _1217) / (_1217 + 1.0);
        float _3905 = isnan(0.0) ? _1222 : (isnan(_1222) ? 0.0 : max(_1222, 0.0));
        float _1223 = isnan(1.0) ? _3905 : (isnan(_3905) ? 1.0 : min(_3905, 1.0));
        float _1232 = ((((1.0 - _1223) * (_1218 + 2.0)) * exp2(log2(isnan(1.0) ? _3883 : (isnan(_3883) ? 1.0 : min(_3883, 1.0))) * (_1218 + 1.0))) + _1223) * _1188;
        float _1233 = _1156 * 0.5;
        float _1234 = _1166 * 0.5;
        float _1235 = _1176 * 0.5;
        float _1236 = dot(vec3(_1233, _1234, _1235), vec3(_1233, _1234, _1235));
        float _1241 = (_1236 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1236);
        float _1249 = (dot(vec3(_422, _423, _424), vec3(_1241 * _1233, _1241 * _1234, _1241 * _1235)) + 1.0) * 0.5;
        float _3916 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1258 = sqrt(((_1234 * _1234) + (_1233 * _1233)) + (_1235 * _1235)) / (_1189 + 9.9999997473787516355514526367188e-06);
        float _3927 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1259 = isnan(1.0) ? _3927 : (isnan(_3927) ? 1.0 : min(_3927, 1.0));
        float _1260 = _1259 * 2.0;
        float _1264 = (1.0 - _1259) / (_1259 + 1.0);
        float _3938 = isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0));
        float _1265 = isnan(1.0) ? _3938 : (isnan(_3938) ? 1.0 : min(_3938, 1.0));
        float _1274 = ((((1.0 - _1265) * (_1260 + 2.0)) * exp2(log2(isnan(1.0) ? _3916 : (isnan(_3916) ? 1.0 : min(_3916, 1.0))) * (_1260 + 1.0))) + _1265) * _1189;
        float _1275 = _1157 * 0.5;
        float _1276 = _1167 * 0.5;
        float _1277 = _1177 * 0.5;
        float _1278 = dot(vec3(_1275, _1276, _1277), vec3(_1275, _1276, _1277));
        float _1283 = (_1278 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1278);
        float _1291 = (dot(vec3(_422, _423, _424), vec3(_1283 * _1275, _1283 * _1276, _1283 * _1277)) + 1.0) * 0.5;
        float _3949 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1300 = sqrt(((_1276 * _1276) + (_1275 * _1275)) + (_1277 * _1277)) / (_1190 + 9.9999997473787516355514526367188e-06);
        float _3960 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1301 = isnan(1.0) ? _3960 : (isnan(_3960) ? 1.0 : min(_3960, 1.0));
        float _1302 = _1301 * 2.0;
        float _1306 = (1.0 - _1301) / (_1301 + 1.0);
        float _3971 = isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0));
        float _1307 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
        float _1316 = ((((1.0 - _1307) * (_1302 + 2.0)) * exp2(log2(isnan(1.0) ? _3949 : (isnan(_3949) ? 1.0 : min(_3949, 1.0))) * (_1302 + 1.0))) + _1307) * _1190;
        _1324 = _1157;
        _1325 = _1156;
        _1326 = _1155;
        _1327 = _1167;
        _1328 = _1166;
        _1329 = _1165;
        _1330 = _1177;
        _1331 = _1176;
        _1332 = _1175;
        _1333 = _1190;
        _1334 = _1189;
        _1335 = _1188;
        _1336 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0)));
        _1337 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0)));
        _1338 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0)));
    }
    else
    {
        _1324 = _1015;
        _1325 = _1015;
        _1326 = _1015;
        _1327 = _1015;
        _1328 = _1015;
        _1329 = _1015;
        _1330 = _1015;
        _1331 = _1015;
        _1332 = _1015;
        _1333 = _1015;
        _1334 = _1015;
        _1335 = _1015;
        _1336 = 0.0;
        _1337 = 0.0;
        _1338 = 0.0;
    }
    float _1348 = (cbModelParam._m0[1u].x * (_1336 - _1027)) + _1027;
    float _1349 = (cbModelParam._m0[1u].x * (_1337 - _1028)) + _1028;
    float _1350 = (cbModelParam._m0[1u].x * (_1338 - _1029)) + _1029;
    float _1371 = fma(_1350, cbSceneParam._m0[89u].z, fma(_1349, cbSceneParam._m0[89u].y, _1348 * cbSceneParam._m0[89u].x));
    float _1374 = fma(_1350, cbSceneParam._m0[90u].z, fma(_1349, cbSceneParam._m0[90u].y, _1348 * cbSceneParam._m0[90u].x));
    float _1377 = fma(_1350, cbSceneParam._m0[91u].z, fma(_1349, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1348));
    float _1392 = _649 * 0.5;
    float _1393 = _650 * 0.5;
    float _1394 = _651 * 0.5;
    float _1395 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1326, _1329, _1332, _1335));
    float _1398 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1325, _1328, _1331, _1334));
    float _1401 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1324, _1327, _1330, _1333));
    float _1435;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1408 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1014, _1018, _1021, _1024));
        float _1412 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1016, _1019, _1022, _1025));
        float _1416 = dot(vec4(_1392, _1393, _1394, 1.0), vec4(_1017, _1020, _1023, _1026));
        float _1423 = dot(vec4(cbModelParam._m0[39u]), vec4(_1392, _1393, _1394, 1.0));
        _1435 = dot(vec3(isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0)), isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0)), isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1423) ? 0.0 : (isnan(0.0) ? _1423 : max(0.0, _1423))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1435 = 1.0;
    }
    float _1446;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1437 = dot(vec4(cbModelParam._m0[40u]), vec4(_1392, _1393, _1394, 1.0));
        _1446 = dot(vec3(isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0)), isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0)), isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1437) ? 0.0 : (isnan(0.0) ? _1437 : max(0.0, _1437))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1446 = 1.0;
    }
    float _1450 = (_1446 * cbModelParam._m0[1u].x) + (_1435 * (1.0 - cbModelParam._m0[1u].x));
    float _1460 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _556);
    float _1461 = isnan(_1460) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1460 : min(cbModelParam._m0[25u].z, _1460));
    float _1541;
    float _1543;
    float _1545;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1508 = fma(_713, cbModelParam._m0[13u].z, fma(_709, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _705)) + cbModelParam._m0[13u].w;
        float _1512 = fma(_713, cbModelParam._m0[14u].z, fma(_709, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _705)) + cbModelParam._m0[14u].w;
        float _1516 = fma(_713, cbModelParam._m0[15u].z, fma(_709, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _705)) + cbModelParam._m0[15u].w;
        float _1519 = fma(_651, cbModelParam._m0[13u].z, fma(_650, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _649));
        float _1522 = fma(_651, cbModelParam._m0[14u].z, fma(_650, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _649));
        float _1525 = fma(_651, cbModelParam._m0[15u].z, fma(_650, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _649));
        float _1553;
        if (_1519 > 0.0)
        {
            _1553 = abs((1.0 - _1508) / _1519);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1519 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1508 + 1.0) / _1519);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1553 = frontier_phi_14_12_ladder;
        }
        float _1728;
        if (_1522 > 0.0)
        {
            _1728 = abs((1.0 - _1512) / _1522);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1522 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1512 + 1.0) / _1522);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1728 = frontier_phi_23_19_ladder;
        }
        float _2022;
        if (_1525 > 0.0)
        {
            _2022 = abs((1.0 - _1516) / _1525);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1525 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1516 + 1.0) / _1525);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2022 = frontier_phi_35_30_ladder;
        }
        float _2024 = isnan(_1728) ? _1553 : (isnan(_1553) ? _1728 : min(_1553, _1728));
        float _2025 = isnan(_2022) ? _2024 : (isnan(_2024) ? _2022 : min(_2024, _2022));
        float _2029 = (_2025 * _1519) + _1508;
        float _2030 = (_2025 * _1522) + _1512;
        float _2031 = (_2025 * _1525) + _1516;
        float _2032 = _2025 * 9.9999997473787516355514526367188e-05;
        float _2034 = (-1.0) - _2032;
        float _2036 = _2032 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2031 > _2036) || ((_2031 < _2034) || ((_2030 > _2036) || ((_2030 < _2034) || ((_2029 < _2034) || (_2029 > _2036))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2176 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2031, cbModelParam._m0[9u].z, fma(_2030, cbModelParam._m0[9u].y, _2029 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2031, cbModelParam._m0[10u].z, fma(_2030, cbModelParam._m0[10u].y, _2029 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2031, cbModelParam._m0[11u].z, fma(_2030, cbModelParam._m0[11u].y, _2029 * cbModelParam._m0[11u].x))), _1461);
            frontier_phi_13_35_ladder = _2176.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2176.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2176.x * cbModelParam._m0[1u].y;
        }
        _1541 = frontier_phi_13_35_ladder_2;
        _1543 = frontier_phi_13_35_ladder_1;
        _1545 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1529 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_649, _650, _651), _1461);
        _1541 = _1529.x * cbModelParam._m0[1u].y;
        _1543 = _1529.y * cbModelParam._m0[1u].y;
        _1545 = _1529.z * cbModelParam._m0[1u].y;
    }
    float _1549 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _556);
    float _1550 = isnan(_1549) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1549 : min(cbModelParam._m0[25u].w, _1549));
    float _1643;
    float _1645;
    float _1647;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1607 = fma(_713, cbModelParam._m0[21u].z, fma(_709, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _705)) + cbModelParam._m0[21u].w;
        float _1611 = fma(_713, cbModelParam._m0[22u].z, fma(_709, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _705)) + cbModelParam._m0[22u].w;
        float _1615 = fma(_713, cbModelParam._m0[23u].z, fma(_709, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _705)) + cbModelParam._m0[23u].w;
        float _1618 = fma(_651, cbModelParam._m0[21u].z, fma(_650, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _649));
        float _1621 = fma(_651, cbModelParam._m0[22u].z, fma(_650, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _649));
        float _1624 = fma(_651, cbModelParam._m0[23u].z, fma(_650, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _649));
        float _1733;
        if (_1618 > 0.0)
        {
            _1733 = abs((1.0 - _1607) / _1618);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1618 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1607 + 1.0) / _1618);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1733 = frontier_phi_25_21_ladder;
        }
        float _2049;
        if (_1621 > 0.0)
        {
            _2049 = abs((1.0 - _1611) / _1621);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1621 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1611 + 1.0) / _1621);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2049 = frontier_phi_37_32_ladder;
        }
        float _2387;
        if (_1624 > 0.0)
        {
            _2387 = abs((1.0 - _1615) / _1624);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1624 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1615 + 1.0) / _1624);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2387 = frontier_phi_47_44_ladder;
        }
        float _2389 = isnan(_2049) ? _1733 : (isnan(_1733) ? _2049 : min(_1733, _2049));
        float _2390 = isnan(_2387) ? _2389 : (isnan(_2389) ? _2387 : min(_2389, _2387));
        float _2394 = (_2390 * _1618) + _1607;
        float _2395 = (_2390 * _1621) + _1611;
        float _2396 = (_2390 * _1624) + _1615;
        float _2397 = _2390 * 9.9999997473787516355514526367188e-05;
        float _2398 = (-1.0) - _2397;
        float _2400 = _2397 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2396 > _2400) || ((_2396 < _2398) || ((_2395 > _2400) || ((_2395 < _2398) || ((_2394 < _2398) || (_2394 > _2400))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2518 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2396, cbModelParam._m0[17u].z, fma(_2395, cbModelParam._m0[17u].y, _2394 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2396, cbModelParam._m0[18u].z, fma(_2395, cbModelParam._m0[18u].y, _2394 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2396, cbModelParam._m0[19u].z, fma(_2395, cbModelParam._m0[19u].y, _2394 * cbModelParam._m0[19u].x))), _1550);
            frontier_phi_22_47_ladder = _2518.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2518.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2518.x * cbModelParam._m0[1u].z;
        }
        _1643 = frontier_phi_22_47_ladder_2;
        _1645 = frontier_phi_22_47_ladder_1;
        _1647 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1627 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_649, _650, _651), _1550);
        _1643 = _1627.x * cbModelParam._m0[1u].z;
        _1645 = _1627.y * cbModelParam._m0[1u].z;
        _1647 = _1627.z * cbModelParam._m0[1u].z;
    }
    float _1660 = (((_676 * _626) + _677) * _641) * ((cbModelParam._m0[1u].w * (_1643 - _1541)) + _1541);
    float _1662 = (((_676 * _628) + _677) * _641) * ((cbModelParam._m0[1u].w * (_1645 - _1543)) + _1543);
    float _1664 = (((_676 * _629) + _677) * _641) * ((cbModelParam._m0[1u].w * (_1647 - _1545)) + _1545);
    float _1667 = fma(_1664, cbSceneParam._m0[89u].z, fma(_1662, cbSceneParam._m0[89u].y, _1660 * cbSceneParam._m0[89u].x));
    float _1670 = fma(_1664, cbSceneParam._m0[90u].z, fma(_1662, cbSceneParam._m0[90u].y, _1660 * cbSceneParam._m0[90u].x));
    float _1673 = fma(_1664, cbSceneParam._m0[91u].z, fma(_1662, cbSceneParam._m0[91u].y, _1660 * cbSceneParam._m0[91u].x));
    float _1707 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1711 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1715 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1719 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1720 = _1707 / _1719;
    float _1721 = _1711 / _1719;
    float _1722 = _1715 / _1719;
    float _1868;
    float _1869;
    float _1870;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1749 = ((uint(_1722 > cbSceneParam._m0[59u].y) + uint(_1722 > cbSceneParam._m0[59u].x)) + uint(_1722 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1750 = _1749 + 43u;
        uint _1758 = _1749 + 44u;
        uint _1766 = _1749 + 45u;
        uint _1774 = _1749 + 46u;
        float _1785 = fma(_1719, cbSceneParam._m0[_1750].w, fma(_1715, cbSceneParam._m0[_1750].z, fma(_1711, cbSceneParam._m0[_1750].y, _1707 * cbSceneParam._m0[_1750].x)));
        float _1789 = fma(_1719, cbSceneParam._m0[_1758].w, fma(_1715, cbSceneParam._m0[_1758].z, fma(_1711, cbSceneParam._m0[_1758].y, _1707 * cbSceneParam._m0[_1758].x)));
        float _1797 = fma(_1719, cbSceneParam._m0[_1774].w, fma(_1715, cbSceneParam._m0[_1774].z, fma(_1711, cbSceneParam._m0[_1774].y, _1707 * cbSceneParam._m0[_1774].x)));
        float _1802 = cbSceneParam._m0[33u].z * _1797;
        float _1804 = cbSceneParam._m0[33u].w * _1797;
        float _1807 = fma(_1719, cbSceneParam._m0[_1766].w, fma(_1715, cbSceneParam._m0[_1766].z, fma(_1711, cbSceneParam._m0[_1766].y, _1707 * cbSceneParam._m0[_1766].x))) / _1797;
        float _1854 = (cbSceneParam._m0[33u].x - sqrt(((_1721 * _1721) + (_1720 * _1720)) + (_1722 * _1722))) * cbSceneParam._m0[33u].y;
        float _4097 = isnan(0.0) ? _1854 : (isnan(_1854) ? 0.0 : max(_1854, 0.0));
        float _1861 = (isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1802 + _1785) / _1797, (_1804 + _1789) / _1797), _1807), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1804 + _1785) / _1797, (_1789 - _1802) / _1797), _1807), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1785 - _1802) / _1797, (_1789 - _1804) / _1797), _1807), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1785 - _1804) / _1797, (_1802 + _1789) / _1797), _1807), 0.0)).x), vec4(0.25)));
        _1868 = 1.0 - (_1861 * cbSceneParam._m0[34u].x);
        _1869 = 1.0 - (_1861 * cbSceneParam._m0[34u].y);
        _1870 = 1.0 - (_1861 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1868 = 1.0;
        _1869 = 1.0;
        _1870 = 1.0;
    }
    float _1934;
    float _1936;
    float _1938;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1922 = fma(_1719, cbSceneParam._m0[63u].w, fma(_1715, cbSceneParam._m0[63u].z, fma(_1711, cbSceneParam._m0[63u].y, _1707 * cbSceneParam._m0[63u].x)));
        float _1923 = fma(_1719, cbSceneParam._m0[60u].w, fma(_1715, cbSceneParam._m0[60u].z, fma(_1711, cbSceneParam._m0[60u].y, _1707 * cbSceneParam._m0[60u].x))) / _1922;
        float _1924 = fma(_1719, cbSceneParam._m0[61u].w, fma(_1715, cbSceneParam._m0[61u].z, fma(_1711, cbSceneParam._m0[61u].y, _1707 * cbSceneParam._m0[61u].x))) / _1922;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1923 >= cbSceneParam._m0[64u].x) && (_1924 >= cbSceneParam._m0[64u].y)) && (_1923 <= cbSceneParam._m0[64u].z)) && (_1924 <= cbSceneParam._m0[64u].w))
        {
            float _2062 = fma(_1719, cbSceneParam._m0[62u].w, fma(_1715, cbSceneParam._m0[62u].z, fma(_1711, cbSceneParam._m0[62u].y, _1707 * cbSceneParam._m0[62u].x))) / _1922;
            float _2066 = isnan(cbSceneParam._m0[41u].w) ? _2062 : (isnan(_2062) ? cbSceneParam._m0[41u].w : max(_2062, cbSceneParam._m0[41u].w));
            float _2109 = (cbSceneParam._m0[33u].x - sqrt(((_1721 * _1721) + (_1720 * _1720)) + (_1722 * _1722))) * cbSceneParam._m0[33u].y;
            float _4113 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
            float _2116 = (isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1923, cbSceneParam._m0[33u].w + _1924), _2066), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1923, _1924 - cbSceneParam._m0[33u].z), _2066), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1923 - cbSceneParam._m0[33u].z, _1924 - cbSceneParam._m0[33u].w), _2066), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1923 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1924), _2066), 0.0)).x), vec4(0.25)));
            float _2120 = 1.0 - (_2116 * cbSceneParam._m0[34u].x);
            float _2121 = 1.0 - (_2116 * cbSceneParam._m0[34u].y);
            float _2122 = 1.0 - (_2116 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2122) ? _1870 : (isnan(_1870) ? _2122 : min(_1870, _2122));
            frontier_phi_34_33_ladder_1 = isnan(_2121) ? _1869 : (isnan(_1869) ? _2121 : min(_1869, _2121));
            frontier_phi_34_33_ladder_2 = isnan(_2120) ? _1868 : (isnan(_1868) ? _2120 : min(_1868, _2120));
        }
        else
        {
            frontier_phi_34_33_ladder = _1870;
            frontier_phi_34_33_ladder_1 = _1869;
            frontier_phi_34_33_ladder_2 = _1868;
        }
        _1934 = frontier_phi_34_33_ladder_2;
        _1936 = frontier_phi_34_33_ladder_1;
        _1938 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1934 = _1868;
        _1936 = _1869;
        _1938 = _1870;
    }
    uvec4 _1943 = floatBitsToUint(cbInstanceData._m0[_569 + 5u]);
    uint _1945 = _1943.x * 14u;
    uint _1946 = _1945 + 13u;
    float _1953 = _641 + (-1.0);
    float _1958 = (cbLight._m0[_1946].x * _1953) + 1.0;
    float _1959 = (cbLight._m0[_1946].y * _1953) + 1.0;
    float _1960 = (cbLight._m0[_1946].z * _1953) + 1.0;
    float _1961 = (cbLight._m0[_1946].w * _1953) + 1.0;
    uint _1962 = _1945 + 5u;
    float _1968 = isnan(1.0) ? _1959 : (isnan(_1959) ? 1.0 : min(_1959, 1.0));
    uint _1972 = _1945 + 4u;
    float _1981 = isnan(1.0) ? _1958 : (isnan(_1958) ? 1.0 : min(_1958, 1.0));
    uint _1985 = _1945 | 1u;
    float _1996 = dot(vec3(cbLight._m0[_1945].xyz), vec3(_422, _423, _424));
    float _1999 = dot(vec3(cbLight._m0[_1985].xyz), vec3(_422, _423, _424));
    float _4149 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
    float _4160 = isnan(0.0) ? _1999 : (isnan(_1999) ? 0.0 : max(_1999, 0.0));
    float _2004 = (isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0))) * 0.3183098733425140380859375;
    float _2006 = (isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0))) * 0.3183098733425140380859375;
    float _2013 = ((cbLight._m0[_1962].x * _1968) * _2006) + (((cbLight._m0[_1972].x * _1934) * _1981) * _2004);
    float _2014 = ((_1968 * cbLight._m0[_1962].y) * _2006) + (((cbLight._m0[_1972].y * _1936) * _1981) * _2004);
    float _2015 = ((_1968 * cbLight._m0[_1962].z) * _2006) + (((cbLight._m0[_1972].z * _1938) * _1981) * _2004);
    uvec4 _2019 = floatBitsToUint(cbLight._m0[_1945 + 12u]);
    bool _2021 = _2019.x == 0u;
    float _2123;
    float _2125;
    float _2127;
    if (_2021)
    {
        _2123 = _2013;
        _2125 = _2014;
        _2127 = _2015;
    }
    else
    {
        uint _2131 = _1945 + 6u;
        float _2147 = (dot(vec3(cbLight._m0[_1945 + 2u].xyz), vec3(_422, _423, _424)) * 0.5) + 0.5;
        float _2148 = _2147 * _2147;
        float _4171 = isnan(0.0) ? _2148 : (isnan(_2148) ? 0.0 : max(_2148, 0.0));
        float _2149 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
        float _2150 = isnan(1.0) ? _1960 : (isnan(_1960) ? 1.0 : min(_1960, 1.0));
        _2123 = (((cbLight._m0[_2131].x * 0.3183098733425140380859375) * _2149) * _2150) + _2013;
        _2125 = (((cbLight._m0[_2131].y * 0.3183098733425140380859375) * _2149) * _2150) + _2014;
        _2127 = (((cbLight._m0[_2131].z * 0.3183098733425140380859375) * _2149) * _2150) + _2015;
    }
    bool _2130 = _2019.y == 0u;
    float _2185;
    float _2187;
    float _2189;
    if (_2130)
    {
        _2185 = _2123;
        _2187 = _2125;
        _2189 = _2127;
    }
    else
    {
        uint _2358 = _1945 + 7u;
        float _2374 = (dot(vec3(cbLight._m0[_1945 + 3u].xyz), vec3(_422, _423, _424)) * 0.5) + 0.5;
        float _2375 = _2374 * _2374;
        float _4187 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
        float _2376 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
        float _2377 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
        _2185 = (((cbLight._m0[_2358].x * 0.3183098733425140380859375) * _2376) * _2377) + _2123;
        _2187 = (((cbLight._m0[_2358].y * 0.3183098733425140380859375) * _2376) * _2377) + _2125;
        _2189 = (((cbLight._m0[_2358].z * 0.3183098733425140380859375) * _2376) * _2377) + _2127;
    }
    uint _2192 = _1945 + 8u;
    float _2205 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1945].w)) * _556) * 0.949999988079071044921875);
    float _2206 = _2205 * _2205;
    float _2207 = cbLight._m0[_1945].x + _503;
    float _2208 = cbLight._m0[_1945].y + _504;
    float _2209 = cbLight._m0[_1945].z + _505;
    float _2213 = inversesqrt(dot(vec3(_2207, _2208, _2209), vec3(_2207, _2208, _2209)));
    float _2214 = _2213 * _2207;
    float _2215 = _2213 * _2208;
    float _2216 = _2213 * _2209;
    float _2217 = dot(vec3(_422, _423, _424), vec3(cbLight._m0[_1945].xyz));
    float _4203 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
    float _2220 = isnan(1.0) ? _4203 : (isnan(_4203) ? 1.0 : min(_4203, 1.0));
    float _4214 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _2221 = isnan(1.0) ? _4214 : (isnan(_4214) ? 1.0 : min(_4214, 1.0));
    float _2222 = dot(vec3(_422, _423, _424), vec3(_2214, _2215, _2216));
    float _4225 = isnan(0.0) ? _2222 : (isnan(_2222) ? 0.0 : max(_2222, 0.0));
    float _2225 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _2226 = dot(vec3(cbLight._m0[_1945].xyz), vec3(_2214, _2215, _2216));
    float _4236 = isnan(0.0) ? _2226 : (isnan(_2226) ? 0.0 : max(_2226, 0.0));
    float _2230 = _2206 * _2206;
    float _2234 = ((_2225 * _2225) * (_2230 + (-1.0))) + 1.0;
    float _2242 = exp2(log2(1.0 - (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0)))) * 5.0);
    float _2243 = 0.959999978542327880859375 - _623;
    float _2245 = 0.959999978542327880859375 - _624;
    float _2246 = 0.959999978542327880859375 - _625;
    float _2253 = 1.0 - _2206;
    float _2264 = (0.5 / (((_2221 * ((_2220 * _2253) + _2206)) + 9.9999999392252902907785028219223e-09) + (((_2221 * _2253) + _2206) * _2220))) * _2220;
    float _4247 = isnan(0.0) ? _2264 : (isnan(_2264) ? 0.0 : max(_2264, 0.0));
    float _2266 = (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0))) * (_2230 / ((_2234 * _2234) * 3.141590118408203125));
    uint _2280 = _1945 + 9u;
    float _2291 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1985].w)) * _556) * 0.949999988079071044921875);
    float _2292 = _2291 * _2291;
    float _2293 = cbLight._m0[_1985].x + _503;
    float _2294 = cbLight._m0[_1985].y + _504;
    float _2295 = cbLight._m0[_1985].z + _505;
    float _2299 = inversesqrt(dot(vec3(_2293, _2294, _2295), vec3(_2293, _2294, _2295)));
    float _2300 = _2299 * _2293;
    float _2301 = _2299 * _2294;
    float _2302 = _2299 * _2295;
    float _2303 = dot(vec3(_422, _423, _424), vec3(cbLight._m0[_1985].xyz));
    float _4258 = isnan(0.0) ? _2303 : (isnan(_2303) ? 0.0 : max(_2303, 0.0));
    float _2306 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    float _2307 = dot(vec3(_422, _423, _424), vec3(_2300, _2301, _2302));
    float _4269 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0));
    float _2310 = isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0));
    float _2311 = dot(vec3(cbLight._m0[_1985].xyz), vec3(_2300, _2301, _2302));
    float _4280 = isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0));
    float _2315 = _2292 * _2292;
    float _2319 = ((_2310 * _2310) * (_2315 + (-1.0))) + 1.0;
    float _2326 = exp2(log2(1.0 - (isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0)))) * 5.0);
    float _2333 = 1.0 - _2292;
    float _2343 = (0.5 / (((_2221 * ((_2306 * _2333) + _2292)) + 9.9999999392252902907785028219223e-09) + (((_2221 * _2333) + _2292) * _2306))) * _2306;
    float _4291 = isnan(0.0) ? _2343 : (isnan(_2343) ? 0.0 : max(_2343, 0.0));
    float _2345 = (isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0))) * (_2315 / ((_2319 * _2319) * 3.141590118408203125));
    float _2355 = (((((_2326 * _2243) + _626) * cbLight._m0[_2280].x) * _2345) * _1968) + ((((cbLight._m0[_2192].x * _1934) * ((_2242 * _2243) + _626)) * _2266) * _1981);
    float _2356 = (((((_2326 * _2245) + _628) * cbLight._m0[_2280].y) * _2345) * _1968) + ((((cbLight._m0[_2192].y * _1936) * ((_2242 * _2245) + _628)) * _2266) * _1981);
    float _2357 = (((((_2326 * _2246) + _629) * cbLight._m0[_2280].z) * _2345) * _1968) + ((((cbLight._m0[_2192].z * _1938) * ((_2242 * _2246) + _629)) * _2266) * _1981);
    float _2413;
    float _2415;
    float _2417;
    if (_2021)
    {
        _2413 = _2355;
        _2415 = _2356;
        _2417 = _2357;
    }
    else
    {
        uint _2419 = _1945 + 2u;
        uint _2423 = _1945 + 10u;
        float _2437 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2419].w)) * _556) * 0.949999988079071044921875);
        float _2438 = _2437 * _2437;
        float _2439 = cbLight._m0[_2419].x + _503;
        float _2440 = cbLight._m0[_2419].y + _504;
        float _2441 = cbLight._m0[_2419].z + _505;
        float _2445 = inversesqrt(dot(vec3(_2439, _2440, _2441), vec3(_2439, _2440, _2441)));
        float _2446 = _2445 * _2439;
        float _2447 = _2445 * _2440;
        float _2448 = _2445 * _2441;
        float _2449 = dot(vec3(_422, _423, _424), vec3(cbLight._m0[_2419].xyz));
        float _4302 = isnan(0.0) ? _2449 : (isnan(_2449) ? 0.0 : max(_2449, 0.0));
        float _2452 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
        float _2453 = dot(vec3(_422, _423, _424), vec3(_2446, _2447, _2448));
        float _4313 = isnan(0.0) ? _2453 : (isnan(_2453) ? 0.0 : max(_2453, 0.0));
        float _2456 = isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0));
        float _2457 = dot(vec3(cbLight._m0[_2419].xyz), vec3(_2446, _2447, _2448));
        float _4324 = isnan(0.0) ? _2457 : (isnan(_2457) ? 0.0 : max(_2457, 0.0));
        float _2461 = _2438 * _2438;
        float _2465 = ((_2456 * _2456) * (_2461 + (-1.0))) + 1.0;
        float _2472 = exp2(log2(1.0 - (isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0)))) * 5.0);
        float _2479 = 1.0 - _2438;
        float _2489 = (0.5 / (((_2221 * ((_2452 * _2479) + _2438)) + 9.9999999392252902907785028219223e-09) + (((_2221 * _2479) + _2438) * _2452))) * _2452;
        float _4335 = isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0));
        float _2491 = (isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_2461 / ((_2465 * _2465) * 3.141590118408203125));
        float _2492 = isnan(1.0) ? _1960 : (isnan(_1960) ? 1.0 : min(_1960, 1.0));
        _2413 = (((((_2472 * _2243) + _626) * cbLight._m0[_2423].x) * _2491) * _2492) + _2355;
        _2415 = (((((_2472 * _2245) + _628) * cbLight._m0[_2423].y) * _2491) * _2492) + _2356;
        _2417 = (((((_2472 * _2246) + _629) * cbLight._m0[_2423].z) * _2491) * _2492) + _2357;
    }
    float _2523;
    float _2525;
    float _2527;
    if (_2130)
    {
        _2523 = _2413;
        _2525 = _2415;
        _2527 = _2417;
    }
    else
    {
        uint _2534 = _1945 + 3u;
        uint _2538 = _1945 + 11u;
        float _2552 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2534].w)) * _556) * 0.949999988079071044921875);
        float _2553 = _2552 * _2552;
        float _2554 = cbLight._m0[_2534].x + _503;
        float _2555 = cbLight._m0[_2534].y + _504;
        float _2556 = cbLight._m0[_2534].z + _505;
        float _2560 = inversesqrt(dot(vec3(_2554, _2555, _2556), vec3(_2554, _2555, _2556)));
        float _2561 = _2560 * _2554;
        float _2562 = _2560 * _2555;
        float _2563 = _2560 * _2556;
        float _2564 = dot(vec3(_422, _423, _424), vec3(cbLight._m0[_2534].xyz));
        float _4351 = isnan(0.0) ? _2564 : (isnan(_2564) ? 0.0 : max(_2564, 0.0));
        float _2567 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _2568 = dot(vec3(_422, _423, _424), vec3(_2561, _2562, _2563));
        float _4362 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
        float _2571 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _2572 = dot(vec3(cbLight._m0[_2534].xyz), vec3(_2561, _2562, _2563));
        float _4373 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
        float _2576 = _2553 * _2553;
        float _2580 = ((_2571 * _2571) * (_2576 + (-1.0))) + 1.0;
        float _2587 = exp2(log2(1.0 - (isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0)))) * 5.0);
        float _2594 = 1.0 - _2553;
        float _2604 = (0.5 / (((_2221 * ((_2567 * _2594) + _2553)) + 9.9999999392252902907785028219223e-09) + (((_2221 * _2594) + _2553) * _2567))) * _2567;
        float _4384 = isnan(0.0) ? _2604 : (isnan(_2604) ? 0.0 : max(_2604, 0.0));
        float _2606 = (isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0))) * (_2576 / ((_2580 * _2580) * 3.141590118408203125));
        float _2607 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
        _2523 = (((((_2587 * _2243) + _626) * cbLight._m0[_2538].x) * _2606) * _2607) + _2413;
        _2525 = (((((_2587 * _2245) + _628) * cbLight._m0[_2538].y) * _2606) * _2607) + _2415;
        _2527 = (((((_2587 * _2246) + _629) * cbLight._m0[_2538].z) * _2606) * _2607) + _2417;
    }
    float _2673;
    float _2675;
    float _2677;
    float _2679;
    float _2681;
    float _2683;
    if (_1943.y == 0u)
    {
        uvec4 _2628 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2629 = _2628.x;
        uint _2640 = uint((float(_2628.y) * floor(float(uint(cbSceneParam._m0[85u].y * _512) / _2629))) + floor(float(uint(cbSceneParam._m0[85u].x * _511) / _2629)));
        float _2650 = (log2(_1722 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2651 = isnan(0.0) ? _2650 : (isnan(_2650) ? 0.0 : max(_2650, 0.0));
        uint _2654 = uint(isnan(14.0) ? _2651 : (isnan(_2651) ? 14.0 : min(_2651, 14.0)));
        uvec4 _2659 = texelFetch(g_lightClusterGridBuffer, int(((_2654 << 2u) + (_2640 << 6u)) >> 2u));
        uint _2660 = _2659.x;
        uint _2661 = _2628.z;
        float _2740;
        float _2742;
        float _2744;
        float _2746;
        float _2748;
        float _2750;
        if (((((1u << ((_2661 >> 4u) & 15u)) + 4294967295u) & _2660) == 0u) || ((_2661 & 240u) == 0u))
        {
            _2740 = 0.0;
            _2742 = 0.0;
            _2744 = 0.0;
            _2746 = 0.0;
            _2748 = 0.0;
            _2750 = 0.0;
        }
        else
        {
            float _2741;
            float _2743;
            float _2745;
            float _2747;
            float _2749;
            float _2751;
            float _2885 = 0.0;
            float _2886 = 0.0;
            float _2887 = 0.0;
            float _2888 = 0.0;
            float _2889 = 0.0;
            float _2890 = 0.0;
            uint _2891 = 0u;
            uint _2900;
            bool _2901;
            for (;;)
            {
                _2900 = texelFetch(g_lightClassification, int((((_2654 << 5u) + (_2640 << 9u)) + (_2891 << 2u)) >> 2u)).x;
                _2901 = _2900 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2901)
                {
                    frontier_phi_66_pred = _2890;
                    frontier_phi_66_pred_1 = _2889;
                    frontier_phi_66_pred_2 = _2888;
                    frontier_phi_66_pred_3 = _2887;
                    frontier_phi_66_pred_4 = _2886;
                    frontier_phi_66_pred_5 = _2885;
                }
                else
                {
                    float _3009;
                    float _3010;
                    float _3011;
                    float _3012;
                    float _3013;
                    float _3014;
                    uint _3015;
                    _3009 = _2885;
                    _3010 = _2886;
                    _3011 = _2887;
                    _3012 = _2888;
                    _3013 = _2889;
                    _3014 = _2890;
                    _3015 = _2900;
                    float _2941;
                    float _2942;
                    float _2943;
                    float _2944;
                    float _2945;
                    float _2946;
                    for (;;)
                    {
                        uint _3019 = uint(findLSB(_3015)) + (_2891 << 5u);
                        uint _3016 = (_3015 + 4294967295u) & _3015;
                        uint _3021 = _3019 * 48u;
                        vec4 _3035 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3021)).x, texelFetch(g_PointLightRenderingBuffer, int(_3021 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3021 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3021 + 3u)).x));
                        uint _3041 = (_3019 * 48u) + 4u;
                        vec4 _3054 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3041)).x, texelFetch(g_PointLightRenderingBuffer, int(_3041 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3041 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3041 + 3u)).x));
                        uint _3060 = (_3019 * 48u) + 8u;
                        vec3 _3071 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3060)).x, texelFetch(g_PointLightRenderingBuffer, int(_3060 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3060 + 2u)).x));
                        float _3075 = _3035.x - _1720;
                        float _3076 = _3035.y - _1721;
                        float _3077 = _3035.z - _1722;
                        float _3078 = dot(vec3(_3075, _3076, _3077), vec3(_3075, _3076, _3077));
                        float _3081 = inversesqrt(_3078);
                        float _3082 = _3081 * _3075;
                        float _3083 = _3081 * _3076;
                        float _3084 = _3081 * _3077;
                        float _3085 = dot(vec3(_537, _540, _543), vec3(_3082, _3083, _3084));
                        float _3090 = 1.0 - (_3078 * _3035.w);
                        float _4410 = isnan(0.0) ? _3090 : (isnan(_3090) ? 0.0 : max(_3090, 0.0));
                        float _3091 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
                        float _3092 = sqrt(_3078) * _3054.w;
                        float _3095 = 1.39999997615814208984375 / (_3092 + 1.39999997615814208984375);
                        float _3096 = _3095 * _3095;
                        float _3099 = ((1.0 - _3096) * _3085) + _3096;
                        float _3102 = _3092 * _3092;
                        float _3106 = ((isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : max(_3099, 0.0))) * _3091) / ((_3102 * 0.699999988079071044921875) + 1.0);
                        float _3110 = (-0.0) - _1720;
                        float _3111 = (-0.0) - _1721;
                        float _3112 = (-0.0) - _1722;
                        float _3116 = inversesqrt(dot(vec3(_3110, _3111, _3112), vec3(_3110, _3111, _3112)));
                        float _3117 = _3116 * _3110;
                        float _3118 = _3116 * _3111;
                        float _3119 = _3116 * _3112;
                        float _3126 = exp2(log2(1.0 / ((_3102 * 3.5) + 5.0)) * 0.25);
                        float _3127 = 1.0 - _657;
                        float _3134 = sqrt(1.0 - ((1.0 - (_3127 * _3127)) * (1.0 - (_3126 * _3126))));
                        float _3135 = _3134 * _3134;
                        float _3136 = _3135 * _3135;
                        float _3137 = _3117 + _3082;
                        float _3138 = _3118 + _3083;
                        float _3139 = _3119 + _3084;
                        float _3143 = inversesqrt(dot(vec3(_3137, _3138, _3139), vec3(_3137, _3138, _3139)));
                        float _3147 = dot(vec3(_537, _540, _543), vec3(_3117, _3118, _3119));
                        float _4426 = isnan(0.0) ? _3147 : (isnan(_3147) ? 0.0 : max(_3147, 0.0));
                        float _3150 = isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0));
                        float _3151 = dot(vec3(_537, _540, _543), vec3(_3143 * _3137, _3143 * _3138, _3143 * _3139));
                        float _4437 = isnan(0.0) ? _3151 : (isnan(_3151) ? 0.0 : max(_3151, 0.0));
                        float _3154 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
                        float _3158 = ((_3154 * _3154) * (_3136 + (-1.0))) + 1.0;
                        float _3159 = _3095 * _3135;
                        float _3160 = _3159 * _3159;
                        float _3163 = ((1.0 - _3160) * _3085) + _3160;
                        float _4448 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0));
                        float _3164 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
                        float _3165 = 1.0 - _3135;
                        float _3175 = (0.5 / (((_3164 * ((_3150 * _3165) + _3135)) + 9.9999999392252902907785028219223e-09) + (((_3164 * _3165) + _3135) * _3150))) * _3164;
                        float _4459 = isnan(0.0) ? _3175 : (isnan(_3175) ? 0.0 : max(_3175, 0.0));
                        float _3186 = (((_3136 * 3.1415927410125732421875) * (isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0)))) / ((_3158 * _3158) * ((_3102 * 2.1991131305694580078125) + 3.141590118408203125))) * _3091;
                        _2944 = (_3106 * _3054.x) + _3012;
                        _2945 = (_3106 * _3054.y) + _3013;
                        _2946 = (_3106 * _3054.z) + _3014;
                        _2941 = (_3186 * _3071.x) + _3009;
                        _2942 = (_3186 * _3071.y) + _3010;
                        _2943 = (_3186 * _3071.z) + _3011;
                        if (_3016 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3009 = _2941;
                            _3010 = _2942;
                            _3011 = _2943;
                            _3012 = _2944;
                            _3013 = _2945;
                            _3014 = _2946;
                            _3015 = _3016;
                        }
                    }
                    frontier_phi_66_pred = _2946;
                    frontier_phi_66_pred_1 = _2945;
                    frontier_phi_66_pred_2 = _2944;
                    frontier_phi_66_pred_3 = _2943;
                    frontier_phi_66_pred_4 = _2942;
                    frontier_phi_66_pred_5 = _2941;
                }
                _2751 = frontier_phi_66_pred;
                _2749 = frontier_phi_66_pred_1;
                _2747 = frontier_phi_66_pred_2;
                _2745 = frontier_phi_66_pred_3;
                _2743 = frontier_phi_66_pred_4;
                _2741 = frontier_phi_66_pred_5;
                uint _2892 = _2891 + 1u;
                if (_2892 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2885 = _2741;
                    _2886 = _2743;
                    _2887 = _2745;
                    _2888 = _2747;
                    _2889 = _2749;
                    _2890 = _2751;
                    _2891 = _2892;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2740 = _2741;
            _2742 = _2743;
            _2744 = _2745;
            _2746 = _2747;
            _2748 = _2749;
            _2750 = _2751;
        }
        uvec4 _2754 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2755 = _2754.z;
        uint _2757 = (_2755 >> 8u) & 15u;
        float _2853;
        float _2855;
        float _2857;
        float _2859;
        float _2861;
        float _2863;
        if (((4294967295u << _2757) & _2660) == 0u)
        {
            _2853 = _2740;
            _2855 = _2742;
            _2857 = _2744;
            _2859 = _2746;
            _2861 = _2748;
            _2863 = _2750;
        }
        else
        {
            float _2878 = inversesqrt(dot(vec3(_1720, _1721, _1722), vec3(_1720, _1721, _1722)));
            float _2879 = _2878 * _1720;
            float _2880 = _2878 * _1721;
            float _2881 = _2878 * _1722;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2757 < ((_2755 >> 12u) & 15u))
            {
                float _2854;
                float _2856;
                float _2858;
                float _2860;
                float _2862;
                float _2864;
                float _2992 = _2740;
                float _2993 = _2742;
                float _2994 = _2744;
                float _2995 = _2746;
                float _2996 = _2748;
                float _2997 = _2750;
                uint _2998 = _2757;
                uint _3007;
                bool _3008;
                for (;;)
                {
                    _3007 = texelFetch(g_lightClassification, int((((_2654 << 5u) + (_2640 << 9u)) + (_2998 << 2u)) >> 2u)).x;
                    _3008 = _3007 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3008)
                    {
                        frontier_phi_72_pred = _2997;
                        frontier_phi_72_pred_1 = _2996;
                        frontier_phi_72_pred_2 = _2995;
                        frontier_phi_72_pred_3 = _2994;
                        frontier_phi_72_pred_4 = _2993;
                        frontier_phi_72_pred_5 = _2992;
                    }
                    else
                    {
                        float _3191;
                        float _3192;
                        float _3193;
                        float _3194;
                        float _3195;
                        float _3196;
                        float _3486;
                        float _3487;
                        float _3488;
                        float _3489;
                        float _3490;
                        float _3491;
                        float _3204 = _2992;
                        float _3205 = _2993;
                        float _3206 = _2994;
                        float _3207 = _2995;
                        float _3208 = _2996;
                        float _3209 = _2997;
                        uint _3210 = _3007;
                        uint _3211;
                        vec4 _3236;
                        float _3237;
                        vec4 _3252;
                        vec3 _3264;
                        vec4 _3279;
                        vec4 _3295;
                        float _3342;
                        bool _3343;
                        for (;;)
                        {
                            uint _3221 = ((_2998 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3210));
                            _3211 = (_3210 + 4294967295u) & _3210;
                            uint _3223 = _3221 * 40u;
                            _3236 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3223)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3223 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3223 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3223 + 3u)).x));
                            _3237 = _3236.w;
                            uint _3239 = (_3221 * 40u) + 4u;
                            _3252 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 3u)).x));
                            uint _3254 = (_3221 * 40u) + 8u;
                            _3264 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3254)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3254 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3254 + 2u)).x));
                            uint _3266 = (_3221 * 40u) + 16u;
                            _3279 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3266)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3266 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3266 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3266 + 3u)).x));
                            uint _3282 = (_3221 * 40u) + 20u;
                            _3295 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3282)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 3u)).x));
                            uint _3298 = (_3221 * 40u) + 24u;
                            vec4 _3311 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3298)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3298 + 3u)).x));
                            uint _3317 = (_3221 * 40u) + 28u;
                            vec4 _3330 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3317)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 3u)).x));
                            _3342 = fma(_1722, _3330.z, fma(_1721, _3330.y, _3330.x * _1720)) + _3330.w;
                            _3343 = !((fma(_1722, _3311.z, fma(_1721, _3311.y, _3311.x * _1720)) + _3311.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3343)
                            {
                                float _3370 = _3236.x - _1720;
                                float _3371 = _3236.y - _1721;
                                float _3372 = _3236.z - _1722;
                                float _3373 = dot(vec3(_3370, _3371, _3372), vec3(_3370, _3371, _3372));
                                float _3376 = inversesqrt(_3373);
                                float _3377 = _3376 * _3370;
                                float _3378 = _3376 * _3371;
                                float _3379 = _3376 * _3372;
                                float _3383 = 1.0 - (_3373 / (_3237 * _3237));
                                float _4470 = isnan(0.0) ? _3383 : (isnan(_3383) ? 0.0 : max(_3383, 0.0));
                                float _3384 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
                                float _3388 = sqrt(_3373) * _3252.w;
                                float _3390 = 1.39999997615814208984375 / (_3388 + 1.39999997615814208984375);
                                float _3391 = _3390 * _3390;
                                float _3394 = ((1.0 - _3391) * dot(vec3(_3377, _3378, _3379), vec3(_537, _540, _543))) + _3391;
                                float _3397 = _3388 * _3388;
                                float _3401 = (fma(_1722, _3279.z, fma(_1721, _3279.y, _3279.x * _1720)) + _3279.w) / _3342;
                                float _3402 = (fma(_1722, _3295.z, fma(_1721, _3295.y, _3295.x * _1720)) + _3295.w) / _3342;
                                float _3406 = 1.0 - dot(vec2(_3401, _3402), vec2(_3401, _3402));
                                float _4486 = isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0));
                                float _3407 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
                                float _3408 = _3407 * (((isnan(0.0) ? _3394 : (isnan(_3394) ? 0.0 : max(_3394, 0.0))) * _3384) / ((_3397 * 0.699999988079071044921875) + 1.0));
                                float _3420 = exp2(log2(1.0 / ((_3397 * 3.5) + 5.0)) * 0.25);
                                float _3421 = 1.0 - _657;
                                float _3428 = sqrt(1.0 - ((1.0 - (_3421 * _3421)) * (1.0 - (_3420 * _3420))));
                                float _3429 = _3428 * _3428;
                                float _3430 = _3429 * _3429;
                                float _3431 = _3377 - _2879;
                                float _3432 = _3378 - _2880;
                                float _3433 = _3379 - _2881;
                                float _3437 = inversesqrt(dot(vec3(_3431, _3432, _3433), vec3(_3431, _3432, _3433)));
                                float _3441 = dot(vec3(_537, _540, _543), vec3((-0.0) - _2879, (-0.0) - _2880, (-0.0) - _2881));
                                float _4497 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                                float _3444 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
                                float _3445 = dot(vec3(_537, _540, _543), vec3(_3437 * _3431, _3437 * _3432, _3437 * _3433));
                                float _4508 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0));
                                float _3448 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
                                float _3452 = ((_3448 * _3448) * (_3430 + (-1.0))) + 1.0;
                                float _3453 = _3390 * _3429;
                                float _3454 = _3453 * _3453;
                                float _3460 = ((1.0 - _3454) * dot(vec3(_537, _540, _543), vec3(_3377, _3378, _3379))) + _3454;
                                float _4519 = isnan(0.0) ? _3460 : (isnan(_3460) ? 0.0 : max(_3460, 0.0));
                                float _3461 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
                                float _3462 = 1.0 - _3429;
                                float _3472 = (0.5 / (((_3461 * ((_3444 * _3462) + _3429)) + 9.9999999392252902907785028219223e-09) + (((_3461 * _3462) + _3429) * _3444))) * _3461;
                                float _4530 = isnan(0.0) ? _3472 : (isnan(_3472) ? 0.0 : max(_3472, 0.0));
                                float _3482 = (_3407 * _3384) * (((_3430 * 3.1415927410125732421875) * (isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0)))) / ((_3452 * _3452) * ((_3397 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3408 * _3252.y;
                                frontier_phi_78_pred_1 = _3408 * _3252.x;
                                frontier_phi_78_pred_2 = _3482 * _3264.z;
                                frontier_phi_78_pred_3 = _3482 * _3264.y;
                                frontier_phi_78_pred_4 = _3482 * _3264.x;
                                frontier_phi_78_pred_5 = _3408 * _3252.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3490 = frontier_phi_78_pred;
                            _3489 = frontier_phi_78_pred_1;
                            _3488 = frontier_phi_78_pred_2;
                            _3487 = frontier_phi_78_pred_3;
                            _3486 = frontier_phi_78_pred_4;
                            _3491 = frontier_phi_78_pred_5;
                            _3194 = _3489 + _3207;
                            _3195 = _3490 + _3208;
                            _3196 = _3491 + _3209;
                            _3191 = _3486 + _3204;
                            _3192 = _3487 + _3205;
                            _3193 = _3488 + _3206;
                            if (_3211 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3204 = _3191;
                                _3205 = _3192;
                                _3206 = _3193;
                                _3207 = _3194;
                                _3208 = _3195;
                                _3209 = _3196;
                                _3210 = _3211;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3196;
                        frontier_phi_72_pred_1 = _3195;
                        frontier_phi_72_pred_2 = _3194;
                        frontier_phi_72_pred_3 = _3193;
                        frontier_phi_72_pred_4 = _3192;
                        frontier_phi_72_pred_5 = _3191;
                    }
                    _2864 = frontier_phi_72_pred;
                    _2862 = frontier_phi_72_pred_1;
                    _2860 = frontier_phi_72_pred_2;
                    _2858 = frontier_phi_72_pred_3;
                    _2856 = frontier_phi_72_pred_4;
                    _2854 = frontier_phi_72_pred_5;
                    uint _2999 = _2998 + 1u;
                    if (_2999 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2992 = _2854;
                        _2993 = _2856;
                        _2994 = _2858;
                        _2995 = _2860;
                        _2996 = _2862;
                        _2997 = _2864;
                        _2998 = _2999;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2864;
                frontier_phi_60_61_ladder_1 = _2862;
                frontier_phi_60_61_ladder_2 = _2858;
                frontier_phi_60_61_ladder_3 = _2856;
                frontier_phi_60_61_ladder_4 = _2854;
                frontier_phi_60_61_ladder_5 = _2860;
            }
            else
            {
                frontier_phi_60_61_ladder = _2750;
                frontier_phi_60_61_ladder_1 = _2748;
                frontier_phi_60_61_ladder_2 = _2744;
                frontier_phi_60_61_ladder_3 = _2742;
                frontier_phi_60_61_ladder_4 = _2740;
                frontier_phi_60_61_ladder_5 = _2746;
            }
            _2853 = frontier_phi_60_61_ladder_4;
            _2855 = frontier_phi_60_61_ladder_3;
            _2857 = frontier_phi_60_61_ladder_2;
            _2859 = frontier_phi_60_61_ladder_5;
            _2861 = frontier_phi_60_61_ladder_1;
            _2863 = frontier_phi_60_61_ladder;
        }
        float _2868 = isnan(1.0) ? _641 : (isnan(_641) ? 1.0 : min(_641, 1.0));
        _2673 = (_2868 * _2859) + _2185;
        _2675 = (_2868 * _2861) + _2187;
        _2677 = (_2868 * _2863) + _2189;
        _2679 = ((_2853 * _626) * _2868) + _2523;
        _2681 = ((_2855 * _628) * _2868) + _2525;
        _2683 = ((_2857 * _629) * _2868) + _2527;
    }
    else
    {
        _2673 = _2185;
        _2675 = _2187;
        _2677 = _2189;
        _2679 = _2523;
        _2681 = _2525;
        _2683 = _2527;
    }
    float _4546 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _4557 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _4568 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    uint _2703 = _569 + 6u;
    float _2711 = _511 / cbSceneParam._m0[86u].x;
    float _2712 = _512 / cbSceneParam._m0[86u].y;
    vec4 _2726 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2711, _2712, (log2((isnan(cbSceneParam._m0[77u].w) ? _445 : (isnan(_445) ? cbSceneParam._m0[77u].w : min(_445, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2728 = _2726.x;
    float _2729 = _2726.y;
    float _2730 = _2726.z;
    float _2731 = _2726.w;
    float _2803;
    float _2805;
    float _2807;
    float _2809;
    if (_445 > cbSceneParam._m0[78u].w)
    {
        float _2765 = isnan(_445) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _445 : min(cbSceneParam._m0[80u].w, _445));
        float _2766 = _2765 / _445;
        float _2777 = _2766 * _496;
        float _2778 = _497 * _2766;
        float _2779 = (-0.0) - _2778;
        float _2781 = _2766 * _498;
        float _2783 = (cbSceneParam._m0[77u].w * _2779) / _2765;
        float _2784 = _2783 + cbSceneParam._m0[79u].w;
        float _2785 = cbSceneParam._m0[79u].w - _2778;
        float _2791 = sqrt(((_2777 * _2777) + (_2778 * _2778)) + (_2781 * _2781));
        float _2794 = (1.0 - (cbSceneParam._m0[77u].w / _2765)) * _2791;
        float _2799 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2801 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2954;
        if (abs((_2779 - _2783) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2954 = ((((_2784 > 0.0) ? exp2(_2799 * _2784) : (2.0 - exp2(_2801 * _2784))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2794;
        }
        else
        {
            float _2914 = 1.0 / cbSceneParam._m0[80u].x;
            float _2915 = isnan(_2785) ? _2784 : (isnan(_2784) ? _2785 : max(_2784, _2785));
            float _2916 = isnan(_2785) ? _2784 : (isnan(_2784) ? _2785 : min(_2784, _2785));
            float _2925 = isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : min(_2915, 0.0));
            float _2926 = isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : min(_2916, 0.0));
            _2954 = ((abs(_2791 / _2779) * cbSceneParam._m0[80u].y) * ((((_2925 - _2926) * 2.0) - ((exp2(_2799 * (isnan(0.0) ? _2915 : (isnan(_2915) ? 0.0 : max(_2915, 0.0)))) - exp2(_2799 * (isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0))))) * _2914)) - ((exp2(_2801 * _2925) - exp2(_2801 * _2926)) * _2914))) + (_2794 * cbSceneParam._m0[80u].z);
        }
        vec4 _2956 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2711, _2712, 1.0), 0.0);
        float _2965 = exp2((_2954 * (-1.44269502162933349609375)) * (1.0 - _2956.w));
        float _2966 = log2(_2965);
        float _2982 = log2(_2731);
        _2803 = (exp2(_2982 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2966 * cbSceneParam._m0[78u].x)) * _2956.x) / cbSceneParam._m0[78u].x)) + _2728;
        _2805 = (exp2(_2982 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2966 * cbSceneParam._m0[78u].y)) * _2956.y) / cbSceneParam._m0[78u].y)) + _2729;
        _2807 = (exp2(_2982 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2966 * cbSceneParam._m0[78u].z)) * _2956.z) / cbSceneParam._m0[78u].z)) + _2730;
        _2809 = _2965 * _2731;
    }
    else
    {
        _2803 = _2728;
        _2805 = _2729;
        _2807 = _2730;
        _2809 = _2731;
    }
    float _2821 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2822 = _2821 == 3.0;
    float _2823 = log2(_2809);
    float _2830 = exp2(_2823 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))) * (_2673 + ((isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0))) * _641))) + ((_2679 + ((isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0))) * _1450)) * cbPerFrame._m0[3u].x));
    float _2831 = exp2(_2823 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))) * (_2675 + ((isnan(0.0) ? _1374 : (isnan(_1374) ? 0.0 : max(_1374, 0.0))) * _641))) + ((_2681 + ((isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))) * _1450)) * cbPerFrame._m0[3u].x));
    float _2832 = exp2(_2823 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0))) * (_2677 + ((isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0))) * _641))) + ((_2683 + ((isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0))) * _1450)) * cbPerFrame._m0[3u].x));
    float _2841 = (_2821 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2841 * (_2822 ? _2830 : (_2830 + (cbSceneParam._m0[72u].w * _2803)));
    SV_Target.y = _2841 * (_2822 ? _2831 : (_2831 + (cbSceneParam._m0[72u].w * _2805)));
    SV_Target.z = _2841 * (_2822 ? _2832 : (_2832 + (cbSceneParam._m0[72u].w * _2807)));
    SV_Target.w = cbInstanceData._m0[_2703].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2703].w;
}


