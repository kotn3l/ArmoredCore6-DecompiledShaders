#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out vec2 TEXCOORD_6;
layout(location = 4, component = 3) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    float _180 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _193 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _204 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _206 = texelFetch(g_InstanceIndexBuffer, int(_204));
    uint _207 = _206.x;
    precise float _208 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _213 = isnan(_208) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _208 : max(0.001000000047497451305389404296875, _208));
    precise float _215 = BLENDWEIGHT.x / _213;
    precise float _216 = BLENDWEIGHT.y / _213;
    precise float _217 = BLENDWEIGHT.z / _213;
    precise float _218 = BLENDWEIGHT.w / _213;
    uvec4 _225 = floatBitsToUint(cbInstanceData._m0[(_207 * 13u) + 4u]);
    uint _226 = _225.x;
    uint _228 = (_226 + uint(float(BLENDINDICES.x))) * 3u;
    uint _235 = _228 + 1u;
    uint _242 = _228 + 2u;
    precise float _249 = _215 * cbObjMatrix._m0[_228].x;
    precise float _250 = _215 * cbObjMatrix._m0[_235].x;
    precise float _251 = _215 * cbObjMatrix._m0[_242].x;
    precise float _252 = _215 * cbObjMatrix._m0[_228].y;
    precise float _253 = _215 * cbObjMatrix._m0[_235].y;
    precise float _254 = _215 * cbObjMatrix._m0[_242].y;
    precise float _255 = _215 * cbObjMatrix._m0[_228].z;
    precise float _256 = _215 * cbObjMatrix._m0[_235].z;
    precise float _257 = _215 * cbObjMatrix._m0[_242].z;
    precise float _258 = _215 * cbObjMatrix._m0[_228].w;
    precise float _259 = _215 * cbObjMatrix._m0[_235].w;
    precise float _260 = _215 * cbObjMatrix._m0[_242].w;
    uint _263 = (_226 + uint(float(BLENDINDICES.y))) * 3u;
    uint _270 = _263 + 1u;
    uint _277 = _263 + 2u;
    precise float _284 = _216 * cbObjMatrix._m0[_263].x;
    precise float _285 = _216 * cbObjMatrix._m0[_270].x;
    precise float _286 = _216 * cbObjMatrix._m0[_277].x;
    precise float _287 = _216 * cbObjMatrix._m0[_263].y;
    precise float _288 = _216 * cbObjMatrix._m0[_270].y;
    precise float _289 = _216 * cbObjMatrix._m0[_277].y;
    precise float _290 = _216 * cbObjMatrix._m0[_263].z;
    precise float _291 = _216 * cbObjMatrix._m0[_270].z;
    precise float _292 = _216 * cbObjMatrix._m0[_277].z;
    precise float _293 = _216 * cbObjMatrix._m0[_263].w;
    precise float _294 = _216 * cbObjMatrix._m0[_270].w;
    precise float _295 = _216 * cbObjMatrix._m0[_277].w;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    precise float _307 = _260 + _295;
    uint _310 = (_226 + uint(float(BLENDINDICES.z))) * 3u;
    uint _317 = _310 + 1u;
    uint _324 = _310 + 2u;
    precise float _331 = _217 * cbObjMatrix._m0[_310].x;
    precise float _332 = _217 * cbObjMatrix._m0[_317].x;
    precise float _333 = _217 * cbObjMatrix._m0[_324].x;
    precise float _334 = _217 * cbObjMatrix._m0[_310].y;
    precise float _335 = _217 * cbObjMatrix._m0[_317].y;
    precise float _336 = _217 * cbObjMatrix._m0[_324].y;
    precise float _337 = _217 * cbObjMatrix._m0[_310].z;
    precise float _338 = _217 * cbObjMatrix._m0[_317].z;
    precise float _339 = _217 * cbObjMatrix._m0[_324].z;
    precise float _340 = _217 * cbObjMatrix._m0[_310].w;
    precise float _341 = _217 * cbObjMatrix._m0[_317].w;
    precise float _342 = _217 * cbObjMatrix._m0[_324].w;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    uint _357 = (_226 + uint(float(BLENDINDICES.w))) * 3u;
    uint _364 = _357 + 1u;
    uint _371 = _357 + 2u;
    precise float _378 = _218 * cbObjMatrix._m0[_357].x;
    precise float _379 = _218 * cbObjMatrix._m0[_364].x;
    precise float _380 = _218 * cbObjMatrix._m0[_371].x;
    precise float _381 = _218 * cbObjMatrix._m0[_357].y;
    precise float _382 = _218 * cbObjMatrix._m0[_364].y;
    precise float _383 = _218 * cbObjMatrix._m0[_371].y;
    precise float _384 = _218 * cbObjMatrix._m0[_357].z;
    precise float _385 = _218 * cbObjMatrix._m0[_364].z;
    precise float _386 = _218 * cbObjMatrix._m0[_371].z;
    precise float _387 = _218 * cbObjMatrix._m0[_357].w;
    precise float _388 = _218 * cbObjMatrix._m0[_364].w;
    precise float _389 = _218 * cbObjMatrix._m0[_371].w;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = POSITION.x * _390;
    precise float _403 = POSITION.y * _393;
    precise float _404 = _403 + _402;
    precise float _405 = POSITION.z * _396;
    precise float _406 = _405 + _404;
    precise float _407 = 1.0 * _399;
    precise float _408 = _407 + _406;
    precise float _409 = POSITION.x * _391;
    precise float _410 = POSITION.y * _394;
    precise float _411 = _410 + _409;
    precise float _412 = POSITION.z * _397;
    precise float _413 = _412 + _411;
    precise float _414 = 1.0 * _400;
    precise float _415 = _414 + _413;
    precise float _416 = POSITION.x * _392;
    precise float _417 = POSITION.y * _395;
    precise float _418 = _417 + _416;
    precise float _419 = POSITION.z * _398;
    precise float _420 = _419 + _418;
    precise float _421 = 1.0 * _401;
    precise float _422 = _421 + _420;
    float _428 = cbSceneParam._m0[3u].x - _408;
    float _429 = cbSceneParam._m0[3u].y - _415;
    float _430 = cbSceneParam._m0[3u].z - _422;
    precise float _456 = _408 - cbSceneParam._m0[3u].x;
    precise float _457 = _415 - cbSceneParam._m0[3u].y;
    precise float _458 = _422 - cbSceneParam._m0[3u].z;
    precise float _486 = _456 * cbSceneParam._m0[24u].x;
    precise float _487 = _457 * cbSceneParam._m0[24u].y;
    precise float _488 = _487 + _486;
    precise float _489 = _458 * cbSceneParam._m0[24u].z;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _492 = _491 + _490;
    precise float _493 = _456 * cbSceneParam._m0[25u].x;
    precise float _494 = _457 * cbSceneParam._m0[25u].y;
    precise float _495 = _494 + _493;
    precise float _496 = _458 * cbSceneParam._m0[25u].z;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _499 = _498 + _497;
    precise float _500 = _456 * cbSceneParam._m0[26u].x;
    precise float _501 = _457 * cbSceneParam._m0[26u].y;
    precise float _502 = _501 + _500;
    precise float _503 = _458 * cbSceneParam._m0[26u].z;
    precise float _504 = _503 + _502;
    precise float _505 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _506 = _505 + _504;
    precise float _507 = _456 * cbSceneParam._m0[27u].x;
    precise float _508 = _457 * cbSceneParam._m0[27u].y;
    precise float _509 = _508 + _507;
    precise float _510 = _458 * cbSceneParam._m0[27u].z;
    precise float _511 = _510 + _509;
    precise float _512 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _513 = _512 + _511;
    gl_Position.x = _492;
    gl_Position.y = _499;
    gl_Position.z = _506;
    gl_Position.w = _513;
    NORMAL_1.x = fma(_183, _396, fma(_182, _393, _390 * _180));
    NORMAL_1.y = fma(_183, _397, fma(_182, _394, _391 * _180));
    NORMAL_1.z = fma(_183, _398, fma(_182, _395, _392 * _180));
    NORMAL_1.w = float(_207);
    TANGENT_1.x = fma(_194, _396, fma(_193, _393, _390 * _192));
    TANGENT_1.y = fma(_194, _397, fma(_193, _394, _391 * _192));
    TANGENT_1.z = fma(_194, _398, fma(_193, _395, _392 * _192));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _506;
    TEXCOORD_6.y = _513;
    TEXCOORD_10 = sqrt(((_428 * _428) + (_429 * _429)) + (_430 * _430));
}


