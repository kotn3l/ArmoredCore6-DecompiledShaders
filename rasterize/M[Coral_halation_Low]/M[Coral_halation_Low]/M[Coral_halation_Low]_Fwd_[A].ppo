#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_Coral_halation_Low_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_Coral_halation_Low_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _661;
float _662;
float _663;
float _664;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _134 = (cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x) + TEXCOORD.x;
    float _135 = (cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) + TEXCOORD.y;
    vec4 _156 = texture(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _163 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[10u].z;
    float _170 = ((_156.y * 0.5) + (-0.25)) * cbMtdParam._m0[10u].y;
    float _172 = (-0.0) - (cbMtdParam._m0[10u].y * ((_156.x * 0.5) + (-0.25)));
    float _175 = fract(_163);
    float _177 = fract(_163 + 0.5);
    float _189 = abs((_175 * 2.0) + (-1.0));
    vec4 _205 = texture(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_175 * _172) + _134) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_170 * _175) + _135) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _210 = texture(sampler2D(M_Coral_halation_Low_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_177 * _172) + _134) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_170 * _177) + _135) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _239 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _280 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _290 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _280);
    float _291 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _280);
    float _292 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _280);
    vec4 _297 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _299 = _297.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _393 = sqrt(((_290 * _290) + (_291 * _291)) + (_292 * _292));
        float _400 = (cbMatDynParam._m0[5u].x * _393) + cbMatDynParam._m0[5u].y;
        float _673 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
        float _401 = isnan(1.0) ? _673 : (isnan(_673) ? 1.0 : min(_673, 1.0));
        float _405 = (cbMatDynParam._m0[5u].z * _393) + cbMatDynParam._m0[5u].w;
        float _684 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _684 : (isnan(_684) ? 1.0 : min(_684, 1.0))) - _401)) + _401) < ((_299 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _317 = uint(roundEven(NORMAL.w)) * 13u;
    uint _319 = _317 + 9u;
    uint _320 = _319 + uint(cbMatDynParam._m0[0u].w);
    float _328 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * (((_210.x - _205.x) * _189) + _205.x)) * cbInstanceData._m0[_320].x;
    float _331 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * (((_210.y - _205.y) * _189) + _205.y)) * cbInstanceData._m0[_320].y;
    float _334 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * (((_210.z - _205.z) * _189) + _205.z)) * cbInstanceData._m0[_320].z;
    float _335 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _336 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _337 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _343 = cbMtdParam._m0[2u].x * _328;
    float _344 = cbMtdParam._m0[2u].y * _331;
    float _345 = cbMtdParam._m0[2u].z * _334;
    float _710 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _348 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
    uint _349 = _317 + 6u;
    float _358 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _359 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _374 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_358, _359, (log2((isnan(cbSceneParam._m0[77u].w) ? _239 : (isnan(_239) ? cbSceneParam._m0[77u].w : min(_239, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _376 = _374.x;
    float _377 = _374.y;
    float _378 = _374.z;
    float _379 = _374.w;
    float _460;
    float _462;
    float _464;
    float _466;
    if (_239 > cbSceneParam._m0[78u].w)
    {
        float _422 = isnan(_239) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _239 : min(cbSceneParam._m0[80u].w, _239));
        float _423 = _422 / _239;
        float _434 = _423 * _290;
        float _435 = _291 * _423;
        float _436 = (-0.0) - _435;
        float _437 = _423 * _292;
        float _439 = (cbSceneParam._m0[77u].w * _436) / _422;
        float _440 = _439 + cbSceneParam._m0[79u].w;
        float _441 = cbSceneParam._m0[79u].w - _435;
        float _447 = sqrt(((_434 * _434) + (_435 * _435)) + (_437 * _437));
        float _450 = (1.0 - (cbSceneParam._m0[77u].w / _422)) * _447;
        float _456 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _458 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _589;
        if (abs((_436 - _439) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _589 = ((((_440 > 0.0) ? exp2(_456 * _440) : (2.0 - exp2(_458 * _440))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _450;
        }
        else
        {
            float _545 = 1.0 / cbSceneParam._m0[80u].x;
            float _546 = isnan(_441) ? _440 : (isnan(_440) ? _441 : max(_440, _441));
            float _547 = isnan(_441) ? _440 : (isnan(_440) ? _441 : min(_440, _441));
            float _556 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : min(_546, 0.0));
            float _557 = isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : min(_547, 0.0));
            _589 = ((abs(_447 / _436) * cbSceneParam._m0[80u].y) * ((((_556 - _557) * 2.0) - ((exp2(_456 * (isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0)))) - exp2(_456 * (isnan(0.0) ? _547 : (isnan(_547) ? 0.0 : max(_547, 0.0))))) * _545)) - ((exp2(_458 * _556) - exp2(_458 * _557)) * _545))) + (_450 * cbSceneParam._m0[80u].z);
        }
        vec4 _591 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_358, _359, 1.0), 0.0);
        float _600 = exp2((_589 * (-1.44269502162933349609375)) * (1.0 - _591.w));
        float _601 = log2(_600);
        float _617 = log2(_379);
        _460 = (exp2(_617 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_601 * cbSceneParam._m0[78u].x)) * _591.x) / cbSceneParam._m0[78u].x)) + _376;
        _462 = (exp2(_617 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_601 * cbSceneParam._m0[78u].y)) * _591.y) / cbSceneParam._m0[78u].y)) + _377;
        _464 = (exp2(_617 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_601 * cbSceneParam._m0[78u].z)) * _591.z) / cbSceneParam._m0[78u].z)) + _378;
        _466 = _600 * _379;
    }
    else
    {
        _460 = _376;
        _462 = _377;
        _464 = _378;
        _466 = _379;
    }
    bool _627;
    vec4 _476;
    vec4 _500;
    float _502;
    float _506;
    float _507;
    float _508;
    float _511;
    float _514;
    float _517;
    float _518;
    bool _529;
    for (;;)
    {
        _476 = cbMatDynParam._m0[0u];
        float _478 = roundEven(_476.y);
        bool _479 = _478 == 3.0;
        float _481 = log2(_466);
        float _485 = exp2(_481 * cbSceneParam._m0[78u].x);
        float _486 = exp2(_481 * cbSceneParam._m0[78u].y);
        float _487 = exp2(_481 * cbSceneParam._m0[78u].z);
        float _488 = _485 * _335;
        float _489 = _486 * _336;
        float _490 = _487 * _337;
        float _497 = _299 + (-0.5);
        _500 = cbMtdParam._m0[1u];
        _502 = _500.y * _497;
        float _505 = (_478 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _506 = _505 * (_479 ? _488 : (_488 + (cbSceneParam._m0[72u].w * _460)));
        _507 = _505 * (_479 ? _489 : (_489 + (cbSceneParam._m0[72u].w * _462)));
        _508 = _505 * (_479 ? _490 : (_490 + (cbSceneParam._m0[72u].w * _464)));
        _511 = ((_343 * _348) * _485) * _505;
        _514 = ((_344 * _348) * _486) * _505;
        _517 = ((_345 * _348) * _487) * _505;
        _518 = _497 * 0.999000012874603271484375;
        _529 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_529)
        {
            if ((cbInstanceData._m0[_317 + 7u].x + _518) < 0.5)
            {
                _627 = true;
                break;
            }
        }
        uint _581 = _319 + uint(_476.w);
        if ((cbInstanceData._m0[_581].w < 1.0) && ((cbInstanceData._m0[_581].w + _518) < 0.5))
        {
            _627 = true;
            break;
        }
        if ((_502 + 1.0) < _500.x)
        {
            _627 = true;
            break;
        }
        _627 = false;
        break;
    }
    float _632;
    if (_627)
    {
        discard_state = true;
        _632 = 0.0;
    }
    else
    {
        _632 = cbInstanceData._m0[_349].w;
    }
    SV_Target.x = _506;
    SV_Target.y = _507;
    SV_Target.z = _508;
    SV_Target.w = _632;
    SV_Target_1.x = _511;
    SV_Target_1.y = _514;
    SV_Target_1.z = _517;
    SV_Target_1.w = cbInstanceData._m0[_349].w;
    discard_exit();
}


