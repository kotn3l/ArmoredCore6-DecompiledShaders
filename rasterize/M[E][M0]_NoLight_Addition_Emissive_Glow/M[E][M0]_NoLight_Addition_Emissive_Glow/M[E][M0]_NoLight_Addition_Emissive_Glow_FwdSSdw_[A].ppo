#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _540;
float _1640;
float _1641;
float _1642;
float _1643;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _153 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = _153 * NORMAL.x;
    float _155 = _153 * NORMAL.y;
    float _156 = _153 * NORMAL.z;
    vec4 _180 = texture(sampler2D(M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = inversesqrt(dot(vec3(_154, _155, _156), vec3(_154, _155, _156)));
    float _190 = _189 * _154;
    float _191 = _189 * _155;
    float _192 = _189 * _156;
    float _208 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _249 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _259 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _249);
    float _260 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _249);
    float _261 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _249);
    float _265 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _266 = _259 * _265;
    float _267 = _260 * _265;
    float _268 = _261 * _265;
    vec4 _273 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _275 = _273.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _352 = sqrt(((_259 * _259) + (_260 * _260)) + (_261 * _261));
        float _359 = (cbMatDynParam._m0[5u].x * _352) + cbMatDynParam._m0[5u].y;
        float _1652 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
        float _361 = isnan(1.0) ? _1652 : (isnan(_1652) ? 1.0 : min(_1652, 1.0));
        float _365 = (cbMatDynParam._m0[5u].z * _352) + cbMatDynParam._m0[5u].w;
        float _1663 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1663 : (isnan(_1663) ? 1.0 : min(_1663, 1.0))) - _361)) + _361) < ((_275 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _287 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _288 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _297 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_287 * cbSceneParam._m0[86u].x, _288 * cbSceneParam._m0[86u].y));
    float _300 = _297.x * TEXCOORD.z;
    float _301 = dot(vec3(_190, _191, _192), vec3(_266, _267, _268));
    float _304 = _301 * 2.0;
    float _309 = (_304 * _190) - _266;
    float _310 = (_304 * _191) - _267;
    float _311 = (_304 * _192) - _268;
    float _333 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _337 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _341 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _539;
    float _541;
    float _542;
    float _543;
    float _544;
    float _545;
    float _546;
    float _547;
    float _548;
    float _549;
    float _550;
    float _551;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _399 = fma(_341, cbModelParam._m0[26u].z, fma(_337, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _333));
        float _403 = fma(_341, cbModelParam._m0[27u].z, fma(_337, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _333));
        float _407 = fma(_341, cbModelParam._m0[28u].z, fma(_337, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _333));
        float _432 = _333 + _190;
        float _433 = _337 + _191;
        float _434 = _341 + _192;
        float _444 = fma(_434, cbModelParam._m0[26u].z, fma(_433, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _432)) - _399;
        float _445 = fma(_434, cbModelParam._m0[27u].z, fma(_433, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _432)) - _403;
        float _446 = fma(_434, cbModelParam._m0[28u].z, fma(_433, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _432)) - _407;
        float _450 = inversesqrt(dot(vec3(_444, _445, _446), vec3(_444, _445, _446)));
        float _463 = ((_450 * _444) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_399 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _464 = ((_450 * _445) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_403 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _465 = ((_450 * _446) / cbModelParam._m0[34u].z) + ((((((_407 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _468 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_463, _464, _465), 0.0);
        vec4 _475 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_463, _464, _465), 0.0);
        vec4 _482 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_463, _464, _465), 0.0);
        vec4 _489 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_463, _464, _465), 0.0);
        float _502 = exp2((_468.w + (-0.5)) * 20.0) * 2.0;
        float _512 = exp2((_475.w + (-0.5)) * 20.0) * 2.0;
        float _522 = exp2((_482.w + (-0.5)) * 20.0) * 2.0;
        float _532 = exp2((_489.w + (-0.5)) * 20.0) * 2.0;
        float _533 = _532 * (_489.x + (-0.5));
        float _534 = _532 * (_489.y + (-0.5));
        float _535 = _532 * (_489.z + (-0.5));
        _539 = _502 * (_468.z + (-0.5));
        _541 = _502 * (_468.y + (-0.5));
        _542 = _502 * (_468.x + (-0.5));
        _543 = _512 * (_475.z + (-0.5));
        _544 = _512 * (_475.y + (-0.5));
        _545 = _512 * (_475.x + (-0.5));
        _546 = _522 * (_482.z + (-0.5));
        _547 = _522 * (_482.y + (-0.5));
        _548 = _522 * (_482.x + (-0.5));
        _549 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
        _550 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
        _551 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    }
    else
    {
        _539 = _540;
        _541 = _540;
        _542 = _540;
        _543 = _540;
        _544 = _540;
        _545 = _540;
        _546 = _540;
        _547 = _540;
        _548 = _540;
        _549 = _540;
        _550 = _540;
        _551 = _540;
    }
    float _716;
    float _717;
    float _718;
    float _719;
    float _720;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _580 = fma(_341, cbModelParam._m0[30u].z, fma(_337, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _333));
        float _584 = fma(_341, cbModelParam._m0[31u].z, fma(_337, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _333));
        float _588 = fma(_341, cbModelParam._m0[32u].z, fma(_337, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _333));
        float _611 = _333 + _190;
        float _612 = _337 + _191;
        float _613 = _341 + _192;
        float _623 = fma(_613, cbModelParam._m0[30u].z, fma(_612, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _611)) - _580;
        float _624 = fma(_613, cbModelParam._m0[31u].z, fma(_612, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _611)) - _584;
        float _625 = fma(_613, cbModelParam._m0[32u].z, fma(_612, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _611)) - _588;
        float _629 = inversesqrt(dot(vec3(_623, _624, _625), vec3(_623, _624, _625)));
        float _642 = ((_629 * _623) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_580 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _643 = ((_629 * _624) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_584 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _644 = ((_629 * _625) / cbModelParam._m0[35u].z) + ((((((_588 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _646 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_642, _643, _644), 0.0);
        vec4 _653 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_642, _643, _644), 0.0);
        vec4 _660 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_642, _643, _644), 0.0);
        vec4 _667 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_642, _643, _644), 0.0);
        float _679 = exp2((_646.w + (-0.5)) * 20.0) * 2.0;
        float _689 = exp2((_653.w + (-0.5)) * 20.0) * 2.0;
        float _699 = exp2((_660.w + (-0.5)) * 20.0) * 2.0;
        float _709 = exp2((_667.w + (-0.5)) * 20.0) * 2.0;
        float _710 = _709 * (_667.x + (-0.5));
        float _711 = _709 * (_667.y + (-0.5));
        float _712 = _709 * (_667.z + (-0.5));
        _716 = _679 * (_646.z + (-0.5));
        _717 = _679 * (_646.y + (-0.5));
        _718 = _679 * (_646.x + (-0.5));
        _719 = _689 * (_653.z + (-0.5));
        _720 = _689 * (_653.y + (-0.5));
        _721 = _689 * (_653.x + (-0.5));
        _722 = _699 * (_660.z + (-0.5));
        _723 = _699 * (_660.y + (-0.5));
        _724 = _699 * (_660.x + (-0.5));
        _725 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
        _726 = isnan(0.0) ? _711 : (isnan(_711) ? 0.0 : max(_711, 0.0));
        _727 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
    }
    else
    {
        _716 = _540;
        _717 = _540;
        _718 = _540;
        _719 = _540;
        _720 = _540;
        _721 = _540;
        _722 = _540;
        _723 = _540;
        _724 = _540;
        _725 = _540;
        _726 = _540;
        _727 = _540;
    }
    float _742 = _309 * 0.5;
    float _743 = _310 * 0.5;
    float _744 = _311 * 0.5;
    float _745 = dot(vec4(_742, _743, _744, 1.0), vec4(_718, _721, _724, _727));
    float _748 = dot(vec4(_742, _743, _744, 1.0), vec4(_717, _720, _723, _726));
    float _751 = dot(vec4(_742, _743, _744, 1.0), vec4(_716, _719, _722, _725));
    float _786;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _758 = dot(vec4(_742, _743, _744, 1.0), vec4(_539, _543, _546, _549));
        float _762 = dot(vec4(_742, _743, _744, 1.0), vec4(_541, _544, _547, _550));
        float _766 = dot(vec4(_742, _743, _744, 1.0), vec4(_542, _545, _548, _551));
        float _773 = dot(vec4(cbModelParam._m0[39u]), vec4(_742, _743, _744, 1.0));
        _786 = dot(vec3(isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0)), isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0)), isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_773) ? 0.0 : (isnan(0.0) ? _773 : max(0.0, _773))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _786 = 1.0;
    }
    float _797;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _788 = dot(vec4(cbModelParam._m0[40u]), vec4(_742, _743, _744, 1.0));
        _797 = dot(vec3(isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0)), isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0)), isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_788) ? 0.0 : (isnan(0.0) ? _788 : max(0.0, _788))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _797 = 1.0;
    }
    float _801 = (_797 * cbModelParam._m0[1u].x) + (_786 * (1.0 - cbModelParam._m0[1u].x));
    float _807 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _891;
    float _893;
    float _895;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _858 = fma(_341, cbModelParam._m0[13u].z, fma(_337, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _333)) + cbModelParam._m0[13u].w;
        float _862 = fma(_341, cbModelParam._m0[14u].z, fma(_337, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _333)) + cbModelParam._m0[14u].w;
        float _866 = fma(_341, cbModelParam._m0[15u].z, fma(_337, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _333)) + cbModelParam._m0[15u].w;
        float _869 = fma(_311, cbModelParam._m0[13u].z, fma(_310, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _309));
        float _872 = fma(_311, cbModelParam._m0[14u].z, fma(_310, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _309));
        float _875 = fma(_311, cbModelParam._m0[15u].z, fma(_310, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _309));
        float _901;
        if (_869 > 0.0)
        {
            _901 = abs((1.0 - _858) / _869);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_869 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_858 + 1.0) / _869);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _901 = frontier_phi_17_15_ladder;
        }
        float _1220;
        if (_872 > 0.0)
        {
            _1220 = abs((1.0 - _862) / _872);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_872 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_862 + 1.0) / _872);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1220 = frontier_phi_26_22_ladder;
        }
        float _1405;
        if (_875 > 0.0)
        {
            _1405 = abs((1.0 - _866) / _875);
        }
        else
        {
            float frontier_phi_40_33_ladder;
            if (_875 < 0.0)
            {
                frontier_phi_40_33_ladder = abs((_866 + 1.0) / _875);
            }
            else
            {
                frontier_phi_40_33_ladder = 5000.0;
            }
            _1405 = frontier_phi_40_33_ladder;
        }
        float _1407 = isnan(_1220) ? _901 : (isnan(_901) ? _1220 : min(_901, _1220));
        float _1408 = isnan(_1405) ? _1407 : (isnan(_1407) ? _1405 : min(_1407, _1405));
        float _1412 = (_1408 * _869) + _858;
        float _1413 = (_1408 * _872) + _862;
        float _1414 = (_1408 * _875) + _866;
        float _1415 = _1408 * 9.9999997473787516355514526367188e-05;
        float _1416 = (-1.0) - _1415;
        float _1418 = _1415 + 1.0;
        float frontier_phi_16_40_ladder;
        float frontier_phi_16_40_ladder_1;
        float frontier_phi_16_40_ladder_2;
        if ((_1414 > _1418) || ((_1414 < _1416) || ((_1413 > _1418) || ((_1413 < _1416) || ((_1412 < _1416) || (_1412 > _1418))))))
        {
            frontier_phi_16_40_ladder = 0.0;
            frontier_phi_16_40_ladder_1 = 0.0;
            frontier_phi_16_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1495 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1414, cbModelParam._m0[9u].z, fma(_1413, cbModelParam._m0[9u].y, _1412 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1414, cbModelParam._m0[10u].z, fma(_1413, cbModelParam._m0[10u].y, _1412 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1414, cbModelParam._m0[11u].z, fma(_1413, cbModelParam._m0[11u].y, _1412 * cbModelParam._m0[11u].x))), _807);
            frontier_phi_16_40_ladder = _1495.z * cbModelParam._m0[1u].y;
            frontier_phi_16_40_ladder_1 = _1495.y * cbModelParam._m0[1u].y;
            frontier_phi_16_40_ladder_2 = _1495.x * cbModelParam._m0[1u].y;
        }
        _891 = frontier_phi_16_40_ladder_2;
        _893 = frontier_phi_16_40_ladder_1;
        _895 = frontier_phi_16_40_ladder;
    }
    else
    {
        vec4 _879 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_309, _310, _311), _807);
        _891 = _879.x * cbModelParam._m0[1u].y;
        _893 = _879.y * cbModelParam._m0[1u].y;
        _895 = _879.z * cbModelParam._m0[1u].y;
    }
    float _898 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _991;
    float _993;
    float _995;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _955 = fma(_341, cbModelParam._m0[21u].z, fma(_337, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _333)) + cbModelParam._m0[21u].w;
        float _959 = fma(_341, cbModelParam._m0[22u].z, fma(_337, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _333)) + cbModelParam._m0[22u].w;
        float _963 = fma(_341, cbModelParam._m0[23u].z, fma(_337, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _333)) + cbModelParam._m0[23u].w;
        float _966 = fma(_311, cbModelParam._m0[21u].z, fma(_310, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _309));
        float _969 = fma(_311, cbModelParam._m0[22u].z, fma(_310, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _309));
        float _972 = fma(_311, cbModelParam._m0[23u].z, fma(_310, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _309));
        float _1225;
        if (_966 > 0.0)
        {
            _1225 = abs((1.0 - _955) / _966);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_966 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_955 + 1.0) / _966);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1225 = frontier_phi_28_24_ladder;
        }
        float _1431;
        if (_969 > 0.0)
        {
            _1431 = abs((1.0 - _959) / _969);
        }
        else
        {
            float frontier_phi_42_35_ladder;
            if (_969 < 0.0)
            {
                frontier_phi_42_35_ladder = abs((_959 + 1.0) / _969);
            }
            else
            {
                frontier_phi_42_35_ladder = 5000.0;
            }
            _1431 = frontier_phi_42_35_ladder;
        }
        float _1513;
        if (_972 > 0.0)
        {
            _1513 = abs((1.0 - _963) / _972);
        }
        else
        {
            float frontier_phi_53_49_ladder;
            if (_972 < 0.0)
            {
                frontier_phi_53_49_ladder = abs((_963 + 1.0) / _972);
            }
            else
            {
                frontier_phi_53_49_ladder = 5000.0;
            }
            _1513 = frontier_phi_53_49_ladder;
        }
        float _1515 = isnan(_1431) ? _1225 : (isnan(_1225) ? _1431 : min(_1225, _1431));
        float _1516 = isnan(_1513) ? _1515 : (isnan(_1515) ? _1513 : min(_1515, _1513));
        float _1520 = (_1516 * _966) + _955;
        float _1521 = (_1516 * _969) + _959;
        float _1522 = (_1516 * _972) + _963;
        float _1523 = _1516 * 9.9999997473787516355514526367188e-05;
        float _1524 = (-1.0) - _1523;
        float _1526 = _1523 + 1.0;
        float frontier_phi_25_53_ladder;
        float frontier_phi_25_53_ladder_1;
        float frontier_phi_25_53_ladder_2;
        if ((_1522 > _1526) || ((_1522 < _1524) || ((_1521 > _1526) || ((_1521 < _1524) || ((_1520 < _1524) || (_1520 > _1526))))))
        {
            frontier_phi_25_53_ladder = 0.0;
            frontier_phi_25_53_ladder_1 = 0.0;
            frontier_phi_25_53_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1555 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1522, cbModelParam._m0[17u].z, fma(_1521, cbModelParam._m0[17u].y, _1520 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1522, cbModelParam._m0[18u].z, fma(_1521, cbModelParam._m0[18u].y, _1520 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1522, cbModelParam._m0[19u].z, fma(_1521, cbModelParam._m0[19u].y, _1520 * cbModelParam._m0[19u].x))), _898);
            frontier_phi_25_53_ladder = _1555.x * cbModelParam._m0[1u].z;
            frontier_phi_25_53_ladder_1 = _1555.y * cbModelParam._m0[1u].z;
            frontier_phi_25_53_ladder_2 = _1555.z * cbModelParam._m0[1u].z;
        }
        _991 = frontier_phi_25_53_ladder;
        _993 = frontier_phi_25_53_ladder_1;
        _995 = frontier_phi_25_53_ladder_2;
    }
    else
    {
        vec4 _975 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_309, _310, _311), _898);
        _991 = _975.x * cbModelParam._m0[1u].z;
        _993 = _975.y * cbModelParam._m0[1u].z;
        _995 = _975.z * cbModelParam._m0[1u].z;
    }
    float _1007 = _300 * 0.01200000010430812835693359375;
    float _1009 = _1007 * ((cbModelParam._m0[1u].w * (_991 - _891)) + _891);
    float _1010 = _1007 * ((cbModelParam._m0[1u].w * (_993 - _893)) + _893);
    float _1011 = _1007 * ((cbModelParam._m0[1u].w * (_995 - _895)) + _895);
    float _1032 = fma(_1011, cbSceneParam._m0[89u].z, fma(_1010, cbSceneParam._m0[89u].y, _1009 * cbSceneParam._m0[89u].x));
    float _1035 = fma(_1011, cbSceneParam._m0[90u].z, fma(_1010, cbSceneParam._m0[90u].y, _1009 * cbSceneParam._m0[90u].x));
    float _1038 = fma(_1011, cbSceneParam._m0[91u].z, fma(_1010, cbSceneParam._m0[91u].y, _1009 * cbSceneParam._m0[91u].x));
    vec4 _1046 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_287, _288));
    float _1048 = _1046.w;
    uint _1063 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1069 = floatBitsToUint(cbInstanceData._m0[_1063 + 5u]).x * 14u;
    float _1077 = (cbLight._m0[_1069 + 13u].x * (_300 + (-1.0))) + 1.0;
    uint _1078 = _1069 + 8u;
    float _1089 = cbLight._m0[_1069].x + _266;
    float _1090 = cbLight._m0[_1069].y + _267;
    float _1091 = cbLight._m0[_1069].z + _268;
    float _1095 = inversesqrt(dot(vec3(_1089, _1090, _1091), vec3(_1089, _1090, _1091)));
    float _1099 = dot(vec3(_190, _191, _192), vec3(cbLight._m0[_1069].xyz));
    float _1789 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
    float _1102 = isnan(1.0) ? _1789 : (isnan(_1789) ? 1.0 : min(_1789, 1.0));
    float _1800 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _1104 = dot(vec3(cbLight._m0[_1069].xyz), vec3(_1089 * _1095, _1090 * _1095, _1091 * _1095));
    float _1811 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
    float _1115 = (exp2(log2(1.0 - (isnan(1.0) ? _1811 : (isnan(_1811) ? 1.0 : min(_1811, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1121 = (0.5 / ((_1102 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _1800 : (isnan(_1800) ? 1.0 : min(_1800, 1.0))))) * _1102;
    float _1822 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
    float _1123 = (isnan(1.0) ? _1822 : (isnan(_1822) ? 1.0 : min(_1822, 1.0))) * 0.31831014156341552734375;
    float _1125 = isnan(1.0) ? _1077 : (isnan(_1077) ? 1.0 : min(_1077, 1.0));
    uint _1145 = _1063 + 9u;
    uint _1146 = _1145 + uint(cbMatDynParam._m0[0u].w);
    float _1154 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _180.x) * cbInstanceData._m0[_1146].x;
    float _1157 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _180.y) * cbInstanceData._m0[_1146].y;
    float _1160 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _180.z) * cbInstanceData._m0[_1146].z;
    float _1167 = _1154 + ((((((cbLight._m0[_1078].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1048))) * _1115) * _1123) * _1125) + ((isnan(0.0) ? _1032 : (isnan(_1032) ? 0.0 : max(_1032, 0.0))) * _801)) * cbPerFrame._m0[3u].x);
    float _1168 = _1157 + ((((((cbLight._m0[_1078].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1048))) * _1115) * _1123) * _1125) + ((isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0))) * _801)) * cbPerFrame._m0[3u].x);
    float _1169 = _1160 + ((((((cbLight._m0[_1078].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1048))) * _1115) * _1123) * _1125) + ((isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0))) * _801)) * cbPerFrame._m0[3u].x);
    float _1170 = isnan(0.0) ? _1167 : (isnan(_1167) ? 0.0 : max(_1167, 0.0));
    float _1171 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
    float _1172 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
    float _1178 = cbMtdParam._m0[2u].x * _1154;
    float _1179 = cbMtdParam._m0[2u].y * _1157;
    float _1180 = cbMtdParam._m0[2u].z * _1160;
    float _1853 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1182 = isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0));
    uint _1183 = _1063 + 6u;
    float _1191 = _287 / cbSceneParam._m0[86u].x;
    float _1192 = _288 / cbSceneParam._m0[86u].y;
    vec4 _1206 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1191, _1192, (log2((isnan(cbSceneParam._m0[77u].w) ? _208 : (isnan(_208) ? cbSceneParam._m0[77u].w : min(_208, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1208 = _1206.x;
    float _1209 = _1206.y;
    float _1210 = _1206.z;
    float _1211 = _1206.w;
    float _1273;
    float _1275;
    float _1277;
    float _1279;
    if (_208 > cbSceneParam._m0[78u].w)
    {
        float _1234 = isnan(_208) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _208 : min(cbSceneParam._m0[80u].w, _208));
        float _1235 = _1234 / _208;
        float _1246 = _1235 * _259;
        float _1247 = _260 * _1235;
        float _1248 = (-0.0) - _1247;
        float _1250 = _1235 * _261;
        float _1252 = (cbSceneParam._m0[77u].w * _1248) / _1234;
        float _1253 = _1252 + cbSceneParam._m0[79u].w;
        float _1254 = cbSceneParam._m0[79u].w - _1247;
        float _1260 = sqrt(((_1246 * _1246) + (_1247 * _1247)) + (_1250 * _1250));
        float _1263 = (1.0 - (cbSceneParam._m0[77u].w / _1234)) * _1260;
        float _1269 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1271 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1436;
        if (abs((_1248 - _1252) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1436 = ((((_1253 > 0.0) ? exp2(_1269 * _1253) : (2.0 - exp2(_1271 * _1253))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1263;
        }
        else
        {
            float _1362 = 1.0 / cbSceneParam._m0[80u].x;
            float _1363 = isnan(_1254) ? _1253 : (isnan(_1253) ? _1254 : max(_1253, _1254));
            float _1364 = isnan(_1254) ? _1253 : (isnan(_1253) ? _1254 : min(_1253, _1254));
            float _1373 = isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : min(_1363, 0.0));
            float _1374 = isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : min(_1364, 0.0));
            _1436 = ((abs(_1260 / _1248) * cbSceneParam._m0[80u].y) * ((((_1373 - _1374) * 2.0) - ((exp2(_1269 * (isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0)))) - exp2(_1269 * (isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0))))) * _1362)) - ((exp2(_1271 * _1373) - exp2(_1271 * _1374)) * _1362))) + (_1263 * cbSceneParam._m0[80u].z);
        }
        vec4 _1438 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1191, _1192, 1.0), 0.0);
        float _1447 = exp2((_1436 * (-1.44269502162933349609375)) * (1.0 - _1438.w));
        float _1448 = log2(_1447);
        float _1464 = log2(_1211);
        _1273 = (exp2(_1464 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1448 * cbSceneParam._m0[78u].x)) * _1438.x) / cbSceneParam._m0[78u].x)) + _1208;
        _1275 = (exp2(_1464 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1448 * cbSceneParam._m0[78u].y)) * _1438.y) / cbSceneParam._m0[78u].y)) + _1209;
        _1277 = (exp2(_1464 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1448 * cbSceneParam._m0[78u].z)) * _1438.z) / cbSceneParam._m0[78u].z)) + _1210;
        _1279 = _1447 * _1211;
    }
    else
    {
        _1273 = _1208;
        _1275 = _1209;
        _1277 = _1210;
        _1279 = _1211;
    }
    bool _1474;
    vec4 _1289;
    vec4 _1312;
    float _1314;
    float _1318;
    float _1319;
    float _1320;
    float _1323;
    float _1326;
    float _1329;
    float _1330;
    bool _1341;
    for (;;)
    {
        _1289 = cbMatDynParam._m0[0u];
        float _1291 = roundEven(_1289.y);
        bool _1292 = _1291 == 3.0;
        float _1294 = log2(_1279);
        float _1298 = exp2(_1294 * cbSceneParam._m0[78u].x);
        float _1299 = exp2(_1294 * cbSceneParam._m0[78u].y);
        float _1300 = exp2(_1294 * cbSceneParam._m0[78u].z);
        float _1301 = _1298 * _1170;
        float _1302 = _1299 * _1171;
        float _1303 = _1300 * _1172;
        float _1310 = _275 + (-0.5);
        _1312 = cbMtdParam._m0[1u];
        _1314 = _1312.y * _1310;
        float _1317 = (_1291 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1318 = _1317 * (_1292 ? _1301 : (_1301 + (cbSceneParam._m0[72u].w * _1273)));
        _1319 = _1317 * (_1292 ? _1302 : (_1302 + (cbSceneParam._m0[72u].w * _1275)));
        _1320 = _1317 * (_1292 ? _1303 : (_1303 + (cbSceneParam._m0[72u].w * _1277)));
        _1323 = ((_1178 * _1182) * _1298) * _1317;
        _1326 = ((_1179 * _1182) * _1299) * _1317;
        _1329 = ((_1180 * _1182) * _1300) * _1317;
        _1330 = _1310 * 0.999000012874603271484375;
        _1341 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1341)
        {
            if ((cbInstanceData._m0[_1063 + 7u].x + _1330) < 0.5)
            {
                _1474 = true;
                break;
            }
        }
        uint _1397 = _1145 + uint(_1289.w);
        if ((cbInstanceData._m0[_1397].w < 1.0) && ((cbInstanceData._m0[_1397].w + _1330) < 0.5))
        {
            _1474 = true;
            break;
        }
        if ((_1314 + 1.0) < _1312.x)
        {
            _1474 = true;
            break;
        }
        _1474 = false;
        break;
    }
    float _1504;
    if (_1474)
    {
        discard_state = true;
        _1504 = 0.0;
    }
    else
    {
        _1504 = cbInstanceData._m0[_1183].w;
    }
    SV_Target.x = _1318;
    SV_Target.y = _1319;
    SV_Target.z = _1320;
    SV_Target.w = _1504;
    SV_Target_1.x = _1323;
    SV_Target_1.y = _1326;
    SV_Target_1.z = _1329;
    SV_Target_1.w = cbInstanceData._m0[_1183].w;
    discard_exit();
}


