#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _495;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _152 = _151 * NORMAL.x;
    float _153 = _151 * NORMAL.y;
    float _154 = _151 * NORMAL.z;
    vec4 _178 = texture(sampler2D(M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _187 = inversesqrt(dot(vec3(_152, _153, _154), vec3(_152, _153, _154)));
    float _188 = _187 * _152;
    float _189 = _187 * _153;
    float _190 = _187 * _154;
    float _206 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _247 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _257 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _247);
    float _258 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _247);
    float _259 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _247);
    float _263 = inversesqrt(dot(vec3(_257, _258, _259), vec3(_257, _258, _259)));
    float _264 = _257 * _263;
    float _265 = _258 * _263;
    float _266 = _259 * _263;
    float _272 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _273 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _282 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_272 * cbSceneParam._m0[86u].x, _273 * cbSceneParam._m0[86u].y));
    float _285 = _282.x * TEXCOORD.z;
    float _286 = dot(vec3(_188, _189, _190), vec3(_264, _265, _266));
    float _289 = _286 * 2.0;
    float _294 = (_289 * _188) - _264;
    float _295 = (_289 * _189) - _265;
    float _296 = (_289 * _190) - _266;
    float _318 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _322 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _326 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _494;
    float _496;
    float _497;
    float _498;
    float _499;
    float _500;
    float _501;
    float _502;
    float _503;
    float _504;
    float _505;
    float _506;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _353 = fma(_326, cbModelParam._m0[26u].z, fma(_322, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _318));
        float _357 = fma(_326, cbModelParam._m0[27u].z, fma(_322, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _318));
        float _361 = fma(_326, cbModelParam._m0[28u].z, fma(_322, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _318));
        float _387 = _318 + _188;
        float _388 = _322 + _189;
        float _389 = _326 + _190;
        float _399 = fma(_389, cbModelParam._m0[26u].z, fma(_388, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _387)) - _353;
        float _400 = fma(_389, cbModelParam._m0[27u].z, fma(_388, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _387)) - _357;
        float _401 = fma(_389, cbModelParam._m0[28u].z, fma(_388, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _387)) - _361;
        float _405 = inversesqrt(dot(vec3(_399, _400, _401), vec3(_399, _400, _401)));
        float _418 = ((_405 * _399) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_353 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _419 = ((_405 * _400) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_357 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _420 = ((_405 * _401) / cbModelParam._m0[34u].z) + ((((((_361 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _423 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_418, _419, _420), 0.0);
        vec4 _430 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_418, _419, _420), 0.0);
        vec4 _437 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_418, _419, _420), 0.0);
        vec4 _444 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_418, _419, _420), 0.0);
        float _457 = exp2((_423.w + (-0.5)) * 20.0) * 2.0;
        float _467 = exp2((_430.w + (-0.5)) * 20.0) * 2.0;
        float _477 = exp2((_437.w + (-0.5)) * 20.0) * 2.0;
        float _487 = exp2((_444.w + (-0.5)) * 20.0) * 2.0;
        float _488 = _487 * (_444.x + (-0.5));
        float _489 = _487 * (_444.y + (-0.5));
        float _490 = _487 * (_444.z + (-0.5));
        _494 = _457 * (_423.z + (-0.5));
        _496 = _457 * (_423.y + (-0.5));
        _497 = _457 * (_423.x + (-0.5));
        _498 = _467 * (_430.z + (-0.5));
        _499 = _467 * (_430.y + (-0.5));
        _500 = _467 * (_430.x + (-0.5));
        _501 = _477 * (_437.z + (-0.5));
        _502 = _477 * (_437.y + (-0.5));
        _503 = _477 * (_437.x + (-0.5));
        _504 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
        _505 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
        _506 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    }
    else
    {
        _494 = _495;
        _496 = _495;
        _497 = _495;
        _498 = _495;
        _499 = _495;
        _500 = _495;
        _501 = _495;
        _502 = _495;
        _503 = _495;
        _504 = _495;
        _505 = _495;
        _506 = _495;
    }
    float _668;
    float _669;
    float _670;
    float _671;
    float _672;
    float _673;
    float _674;
    float _675;
    float _676;
    float _677;
    float _678;
    float _679;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _532 = fma(_326, cbModelParam._m0[30u].z, fma(_322, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _318));
        float _536 = fma(_326, cbModelParam._m0[31u].z, fma(_322, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _318));
        float _540 = fma(_326, cbModelParam._m0[32u].z, fma(_322, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _318));
        float _563 = _318 + _188;
        float _564 = _322 + _189;
        float _565 = _326 + _190;
        float _575 = fma(_565, cbModelParam._m0[30u].z, fma(_564, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _563)) - _532;
        float _576 = fma(_565, cbModelParam._m0[31u].z, fma(_564, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _563)) - _536;
        float _577 = fma(_565, cbModelParam._m0[32u].z, fma(_564, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _563)) - _540;
        float _581 = inversesqrt(dot(vec3(_575, _576, _577), vec3(_575, _576, _577)));
        float _594 = ((_581 * _575) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_532 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _595 = ((_581 * _576) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_536 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _596 = ((_581 * _577) / cbModelParam._m0[35u].z) + ((((((_540 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _598 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_594, _595, _596), 0.0);
        vec4 _605 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_594, _595, _596), 0.0);
        vec4 _612 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_594, _595, _596), 0.0);
        vec4 _619 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_594, _595, _596), 0.0);
        float _631 = exp2((_598.w + (-0.5)) * 20.0) * 2.0;
        float _641 = exp2((_605.w + (-0.5)) * 20.0) * 2.0;
        float _651 = exp2((_612.w + (-0.5)) * 20.0) * 2.0;
        float _661 = exp2((_619.w + (-0.5)) * 20.0) * 2.0;
        float _662 = _661 * (_619.x + (-0.5));
        float _663 = _661 * (_619.y + (-0.5));
        float _664 = _661 * (_619.z + (-0.5));
        _668 = _631 * (_598.z + (-0.5));
        _669 = _631 * (_598.y + (-0.5));
        _670 = _631 * (_598.x + (-0.5));
        _671 = _641 * (_605.z + (-0.5));
        _672 = _641 * (_605.y + (-0.5));
        _673 = _641 * (_605.x + (-0.5));
        _674 = _651 * (_612.z + (-0.5));
        _675 = _651 * (_612.y + (-0.5));
        _676 = _651 * (_612.x + (-0.5));
        _677 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
        _678 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        _679 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    }
    else
    {
        _668 = _495;
        _669 = _495;
        _670 = _495;
        _671 = _495;
        _672 = _495;
        _673 = _495;
        _674 = _495;
        _675 = _495;
        _676 = _495;
        _677 = _495;
        _678 = _495;
        _679 = _495;
    }
    float _694 = _294 * 0.5;
    float _695 = _295 * 0.5;
    float _696 = _296 * 0.5;
    float _697 = dot(vec4(_694, _695, _696, 1.0), vec4(_670, _673, _676, _679));
    float _700 = dot(vec4(_694, _695, _696, 1.0), vec4(_669, _672, _675, _678));
    float _703 = dot(vec4(_694, _695, _696, 1.0), vec4(_668, _671, _674, _677));
    float _738;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _710 = dot(vec4(_694, _695, _696, 1.0), vec4(_494, _498, _501, _504));
        float _714 = dot(vec4(_694, _695, _696, 1.0), vec4(_496, _499, _502, _505));
        float _718 = dot(vec4(_694, _695, _696, 1.0), vec4(_497, _500, _503, _506));
        float _725 = dot(vec4(cbModelParam._m0[39u]), vec4(_694, _695, _696, 1.0));
        _738 = dot(vec3(isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0)), isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0)), isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_725) ? 0.0 : (isnan(0.0) ? _725 : max(0.0, _725))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _738 = 1.0;
    }
    float _749;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _740 = dot(vec4(cbModelParam._m0[40u]), vec4(_694, _695, _696, 1.0));
        _749 = dot(vec3(isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0)), isnan(0.0) ? _700 : (isnan(_700) ? 0.0 : max(_700, 0.0)), isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_740) ? 0.0 : (isnan(0.0) ? _740 : max(0.0, _740))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _749 = 1.0;
    }
    float _753 = (_749 * cbModelParam._m0[1u].x) + (_738 * (1.0 - cbModelParam._m0[1u].x));
    float _759 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _843;
    float _845;
    float _847;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _810 = fma(_326, cbModelParam._m0[13u].z, fma(_322, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _318)) + cbModelParam._m0[13u].w;
        float _814 = fma(_326, cbModelParam._m0[14u].z, fma(_322, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _318)) + cbModelParam._m0[14u].w;
        float _818 = fma(_326, cbModelParam._m0[15u].z, fma(_322, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _318)) + cbModelParam._m0[15u].w;
        float _821 = fma(_296, cbModelParam._m0[13u].z, fma(_295, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _294));
        float _824 = fma(_296, cbModelParam._m0[14u].z, fma(_295, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _294));
        float _827 = fma(_296, cbModelParam._m0[15u].z, fma(_295, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _294));
        float _853;
        if (_821 > 0.0)
        {
            _853 = abs((1.0 - _810) / _821);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_821 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_810 + 1.0) / _821);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _853 = frontier_phi_14_12_ladder;
        }
        float _1046;
        if (_824 > 0.0)
        {
            _1046 = abs((1.0 - _814) / _824);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_824 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_814 + 1.0) / _824);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1046 = frontier_phi_23_19_ladder;
        }
        float _1418;
        if (_827 > 0.0)
        {
            _1418 = abs((1.0 - _818) / _827);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_827 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_818 + 1.0) / _827);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1418 = frontier_phi_35_30_ladder;
        }
        float _1420 = isnan(_1046) ? _853 : (isnan(_853) ? _1046 : min(_853, _1046));
        float _1421 = isnan(_1418) ? _1420 : (isnan(_1420) ? _1418 : min(_1420, _1418));
        float _1425 = (_1421 * _821) + _810;
        float _1426 = (_1421 * _824) + _814;
        float _1427 = (_1421 * _827) + _818;
        float _1428 = _1421 * 9.9999997473787516355514526367188e-05;
        float _1430 = (-1.0) - _1428;
        float _1432 = _1428 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1427 > _1432) || ((_1427 < _1430) || ((_1426 > _1432) || ((_1426 < _1430) || ((_1425 < _1430) || (_1425 > _1432))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1637 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1427, cbModelParam._m0[9u].z, fma(_1426, cbModelParam._m0[9u].y, _1425 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1427, cbModelParam._m0[10u].z, fma(_1426, cbModelParam._m0[10u].y, _1425 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1427, cbModelParam._m0[11u].z, fma(_1426, cbModelParam._m0[11u].y, _1425 * cbModelParam._m0[11u].x))), _759);
            frontier_phi_13_35_ladder = _1637.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _1637.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _1637.x * cbModelParam._m0[1u].y;
        }
        _843 = frontier_phi_13_35_ladder_2;
        _845 = frontier_phi_13_35_ladder_1;
        _847 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _831 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_294, _295, _296), _759);
        _843 = _831.x * cbModelParam._m0[1u].y;
        _845 = _831.y * cbModelParam._m0[1u].y;
        _847 = _831.z * cbModelParam._m0[1u].y;
    }
    float _850 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _943;
    float _945;
    float _947;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _907 = fma(_326, cbModelParam._m0[21u].z, fma(_322, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _318)) + cbModelParam._m0[21u].w;
        float _911 = fma(_326, cbModelParam._m0[22u].z, fma(_322, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _318)) + cbModelParam._m0[22u].w;
        float _915 = fma(_326, cbModelParam._m0[23u].z, fma(_322, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _318)) + cbModelParam._m0[23u].w;
        float _918 = fma(_296, cbModelParam._m0[21u].z, fma(_295, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _294));
        float _921 = fma(_296, cbModelParam._m0[22u].z, fma(_295, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _294));
        float _924 = fma(_296, cbModelParam._m0[23u].z, fma(_295, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _294));
        float _1051;
        if (_918 > 0.0)
        {
            _1051 = abs((1.0 - _907) / _918);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_918 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_907 + 1.0) / _918);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1051 = frontier_phi_25_21_ladder;
        }
        float _1445;
        if (_921 > 0.0)
        {
            _1445 = abs((1.0 - _911) / _921);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_921 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_911 + 1.0) / _921);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1445 = frontier_phi_37_32_ladder;
        }
        float _1685;
        if (_924 > 0.0)
        {
            _1685 = abs((1.0 - _915) / _924);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_924 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_915 + 1.0) / _924);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _1685 = frontier_phi_47_44_ladder;
        }
        float _1687 = isnan(_1445) ? _1051 : (isnan(_1051) ? _1445 : min(_1051, _1445));
        float _1688 = isnan(_1685) ? _1687 : (isnan(_1687) ? _1685 : min(_1687, _1685));
        float _1692 = (_1688 * _918) + _907;
        float _1693 = (_1688 * _921) + _911;
        float _1694 = (_1688 * _924) + _915;
        float _1695 = _1688 * 9.9999997473787516355514526367188e-05;
        float _1696 = (-1.0) - _1695;
        float _1698 = _1695 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_1694 > _1698) || ((_1694 < _1696) || ((_1693 > _1698) || ((_1693 < _1696) || ((_1692 < _1696) || (_1692 > _1698))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1765 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1694, cbModelParam._m0[17u].z, fma(_1693, cbModelParam._m0[17u].y, _1692 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1694, cbModelParam._m0[18u].z, fma(_1693, cbModelParam._m0[18u].y, _1692 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1694, cbModelParam._m0[19u].z, fma(_1693, cbModelParam._m0[19u].y, _1692 * cbModelParam._m0[19u].x))), _850);
            frontier_phi_22_47_ladder = _1765.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _1765.x * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _1765.y * cbModelParam._m0[1u].z;
        }
        _943 = frontier_phi_22_47_ladder_1;
        _945 = frontier_phi_22_47_ladder_2;
        _947 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _927 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_294, _295, _296), _850);
        _943 = _927.x * cbModelParam._m0[1u].z;
        _945 = _927.y * cbModelParam._m0[1u].z;
        _947 = _927.z * cbModelParam._m0[1u].z;
    }
    float _959 = _285 * 0.01200000010430812835693359375;
    float _961 = _959 * ((cbModelParam._m0[1u].w * (_943 - _843)) + _843);
    float _962 = _959 * ((cbModelParam._m0[1u].w * (_945 - _845)) + _845);
    float _963 = _959 * ((cbModelParam._m0[1u].w * (_947 - _847)) + _847);
    float _984 = fma(_963, cbSceneParam._m0[89u].z, fma(_962, cbSceneParam._m0[89u].y, _961 * cbSceneParam._m0[89u].x));
    float _987 = fma(_963, cbSceneParam._m0[90u].z, fma(_962, cbSceneParam._m0[90u].y, _961 * cbSceneParam._m0[90u].x));
    float _990 = fma(_963, cbSceneParam._m0[91u].z, fma(_962, cbSceneParam._m0[91u].y, _961 * cbSceneParam._m0[91u].x));
    float _1025 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1029 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1033 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1037 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1038 = _1025 / _1037;
    float _1039 = _1029 / _1037;
    float _1040 = _1033 / _1037;
    float _1187;
    float _1188;
    float _1189;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1067 = ((uint(_1040 > cbSceneParam._m0[59u].y) + uint(_1040 > cbSceneParam._m0[59u].x)) + uint(_1040 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1068 = _1067 + 43u;
        uint _1076 = _1067 + 44u;
        uint _1084 = _1067 + 45u;
        uint _1092 = _1067 + 46u;
        float _1103 = fma(_1037, cbSceneParam._m0[_1068].w, fma(_1033, cbSceneParam._m0[_1068].z, fma(_1029, cbSceneParam._m0[_1068].y, _1025 * cbSceneParam._m0[_1068].x)));
        float _1107 = fma(_1037, cbSceneParam._m0[_1076].w, fma(_1033, cbSceneParam._m0[_1076].z, fma(_1029, cbSceneParam._m0[_1076].y, _1025 * cbSceneParam._m0[_1076].x)));
        float _1115 = fma(_1037, cbSceneParam._m0[_1092].w, fma(_1033, cbSceneParam._m0[_1092].z, fma(_1029, cbSceneParam._m0[_1092].y, _1025 * cbSceneParam._m0[_1092].x)));
        float _1120 = cbSceneParam._m0[33u].z * _1115;
        float _1122 = cbSceneParam._m0[33u].w * _1115;
        float _1125 = fma(_1037, cbSceneParam._m0[_1084].w, fma(_1033, cbSceneParam._m0[_1084].z, fma(_1029, cbSceneParam._m0[_1084].y, _1025 * cbSceneParam._m0[_1084].x))) / _1115;
        float _1173 = (cbSceneParam._m0[33u].x - sqrt(((_1039 * _1039) + (_1038 * _1038)) + (_1040 * _1040))) * cbSceneParam._m0[33u].y;
        float _1961 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
        float _1180 = (isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1120 + _1103) / _1115, (_1122 + _1107) / _1115), _1125), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1122 + _1103) / _1115, (_1107 - _1120) / _1115), _1125), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1103 - _1120) / _1115, (_1107 - _1122) / _1115), _1125), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1103 - _1122) / _1115, (_1120 + _1107) / _1115), _1125), 0.0)).x), vec4(0.25)));
        _1187 = 1.0 - (_1180 * cbSceneParam._m0[34u].x);
        _1188 = 1.0 - (_1180 * cbSceneParam._m0[34u].y);
        _1189 = 1.0 - (_1180 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1187 = 1.0;
        _1188 = 1.0;
        _1189 = 1.0;
    }
    float _1253;
    float _1255;
    float _1257;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1241 = fma(_1037, cbSceneParam._m0[63u].w, fma(_1033, cbSceneParam._m0[63u].z, fma(_1029, cbSceneParam._m0[63u].y, _1025 * cbSceneParam._m0[63u].x)));
        float _1242 = fma(_1037, cbSceneParam._m0[60u].w, fma(_1033, cbSceneParam._m0[60u].z, fma(_1029, cbSceneParam._m0[60u].y, _1025 * cbSceneParam._m0[60u].x))) / _1241;
        float _1243 = fma(_1037, cbSceneParam._m0[61u].w, fma(_1033, cbSceneParam._m0[61u].z, fma(_1029, cbSceneParam._m0[61u].y, _1025 * cbSceneParam._m0[61u].x))) / _1241;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1242 >= cbSceneParam._m0[64u].x) && (_1243 >= cbSceneParam._m0[64u].y)) && (_1242 <= cbSceneParam._m0[64u].z)) && (_1243 <= cbSceneParam._m0[64u].w))
        {
            float _1458 = fma(_1037, cbSceneParam._m0[62u].w, fma(_1033, cbSceneParam._m0[62u].z, fma(_1029, cbSceneParam._m0[62u].y, _1025 * cbSceneParam._m0[62u].x))) / _1241;
            float _1462 = isnan(cbSceneParam._m0[41u].w) ? _1458 : (isnan(_1458) ? cbSceneParam._m0[41u].w : max(_1458, cbSceneParam._m0[41u].w));
            float _1505 = (cbSceneParam._m0[33u].x - sqrt(((_1039 * _1039) + (_1038 * _1038)) + (_1040 * _1040))) * cbSceneParam._m0[33u].y;
            float _1977 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
            float _1512 = (isnan(1.0) ? _1977 : (isnan(_1977) ? 1.0 : min(_1977, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1242, cbSceneParam._m0[33u].w + _1243), _1462), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1242, _1243 - cbSceneParam._m0[33u].z), _1462), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1242 - cbSceneParam._m0[33u].z, _1243 - cbSceneParam._m0[33u].w), _1462), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1242 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1243), _1462), 0.0)).x), vec4(0.25)));
            float _1516 = 1.0 - (_1512 * cbSceneParam._m0[34u].x);
            float _1517 = 1.0 - (_1512 * cbSceneParam._m0[34u].y);
            float _1518 = 1.0 - (_1512 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_1518) ? _1189 : (isnan(_1189) ? _1518 : min(_1189, _1518));
            frontier_phi_34_33_ladder_1 = isnan(_1517) ? _1188 : (isnan(_1188) ? _1517 : min(_1188, _1517));
            frontier_phi_34_33_ladder_2 = isnan(_1516) ? _1187 : (isnan(_1187) ? _1516 : min(_1187, _1516));
        }
        else
        {
            frontier_phi_34_33_ladder = _1189;
            frontier_phi_34_33_ladder_1 = _1188;
            frontier_phi_34_33_ladder_2 = _1187;
        }
        _1253 = frontier_phi_34_33_ladder_2;
        _1255 = frontier_phi_34_33_ladder_1;
        _1257 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1253 = _1187;
        _1255 = _1188;
        _1257 = _1189;
    }
    uint _1259 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1266 = floatBitsToUint(cbInstanceData._m0[_1259 + 5u]).x * 14u;
    float _1274 = (cbLight._m0[_1266 + 13u].x * (_285 + (-1.0))) + 1.0;
    uint _1275 = _1266 + 8u;
    float _1286 = cbLight._m0[_1266].x + _264;
    float _1287 = cbLight._m0[_1266].y + _265;
    float _1288 = cbLight._m0[_1266].z + _266;
    float _1292 = inversesqrt(dot(vec3(_1286, _1287, _1288), vec3(_1286, _1287, _1288)));
    float _1296 = dot(vec3(_188, _189, _190), vec3(cbLight._m0[_1266].xyz));
    float _2003 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
    float _1299 = isnan(1.0) ? _2003 : (isnan(_2003) ? 1.0 : min(_2003, 1.0));
    float _2014 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _1301 = dot(vec3(cbLight._m0[_1266].xyz), vec3(_1286 * _1292, _1287 * _1292, _1288 * _1292));
    float _2025 = isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0));
    float _1312 = (exp2(log2(1.0 - (isnan(1.0) ? _2025 : (isnan(_2025) ? 1.0 : min(_2025, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1318 = (0.5 / ((_1299 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2014 : (isnan(_2014) ? 1.0 : min(_2014, 1.0))))) * _1299;
    float _2036 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
    float _1320 = (isnan(1.0) ? _2036 : (isnan(_2036) ? 1.0 : min(_2036, 1.0))) * 0.31831014156341552734375;
    float _1322 = isnan(1.0) ? _1274 : (isnan(_1274) ? 1.0 : min(_1274, 1.0));
    uint _1343 = (_1259 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1351 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _178.x) * cbInstanceData._m0[_1343].x;
    float _1354 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _178.y) * cbInstanceData._m0[_1343].y;
    float _1357 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _178.z) * cbInstanceData._m0[_1343].z;
    float _1364 = _1351 + ((((((cbLight._m0[_1275].x * _1253) * _1312) * _1320) * _1322) + ((isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0))) * _753)) * cbPerFrame._m0[3u].x);
    float _1365 = _1354 + ((((((cbLight._m0[_1275].y * _1255) * _1312) * _1320) * _1322) + ((isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0))) * _753)) * cbPerFrame._m0[3u].x);
    float _1366 = _1357 + ((((((cbLight._m0[_1275].z * _1257) * _1312) * _1320) * _1322) + ((isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0))) * _753)) * cbPerFrame._m0[3u].x);
    float _2067 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1379 = isnan(1.0) ? _2067 : (isnan(_2067) ? 1.0 : min(_2067, 1.0));
    uint _1380 = _1259 + 6u;
    float _1389 = _272 / cbSceneParam._m0[86u].x;
    float _1390 = _273 / cbSceneParam._m0[86u].y;
    vec4 _1404 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1389, _1390, (log2((isnan(cbSceneParam._m0[77u].w) ? _206 : (isnan(_206) ? cbSceneParam._m0[77u].w : min(_206, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1406 = _1404.x;
    float _1407 = _1404.y;
    float _1408 = _1404.z;
    float _1409 = _1404.w;
    float _1561;
    float _1563;
    float _1565;
    float _1567;
    if (_206 > cbSceneParam._m0[78u].w)
    {
        float _1523 = isnan(_206) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _206 : min(cbSceneParam._m0[80u].w, _206));
        float _1524 = _1523 / _206;
        float _1535 = _1524 * _257;
        float _1536 = _258 * _1524;
        float _1537 = (-0.0) - _1536;
        float _1539 = _1524 * _259;
        float _1541 = (cbSceneParam._m0[77u].w * _1537) / _1523;
        float _1542 = _1541 + cbSceneParam._m0[79u].w;
        float _1543 = cbSceneParam._m0[79u].w - _1536;
        float _1549 = sqrt(((_1535 * _1535) + (_1536 * _1536)) + (_1539 * _1539));
        float _1552 = (1.0 - (cbSceneParam._m0[77u].w / _1523)) * _1549;
        float _1557 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1559 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1711;
        if (abs((_1537 - _1541) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1711 = ((((_1542 > 0.0) ? exp2(_1557 * _1542) : (2.0 - exp2(_1559 * _1542))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1552;
        }
        else
        {
            float _1658 = 1.0 / cbSceneParam._m0[80u].x;
            float _1659 = isnan(_1543) ? _1542 : (isnan(_1542) ? _1543 : max(_1542, _1543));
            float _1660 = isnan(_1543) ? _1542 : (isnan(_1542) ? _1543 : min(_1542, _1543));
            float _1669 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : min(_1659, 0.0));
            float _1670 = isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : min(_1660, 0.0));
            _1711 = ((abs(_1549 / _1537) * cbSceneParam._m0[80u].y) * ((((_1669 - _1670) * 2.0) - ((exp2(_1557 * (isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0)))) - exp2(_1557 * (isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))))) * _1658)) - ((exp2(_1559 * _1669) - exp2(_1559 * _1670)) * _1658))) + (_1552 * cbSceneParam._m0[80u].z);
        }
        vec4 _1713 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1389, _1390, 1.0), 0.0);
        float _1722 = exp2((_1711 * (-1.44269502162933349609375)) * (1.0 - _1713.w));
        float _1723 = log2(_1722);
        float _1739 = log2(_1409);
        _1561 = (exp2(_1739 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1723 * cbSceneParam._m0[78u].x)) * _1713.x) / cbSceneParam._m0[78u].x)) + _1406;
        _1563 = (exp2(_1739 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1723 * cbSceneParam._m0[78u].y)) * _1713.y) / cbSceneParam._m0[78u].y)) + _1407;
        _1565 = (exp2(_1739 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1723 * cbSceneParam._m0[78u].z)) * _1713.z) / cbSceneParam._m0[78u].z)) + _1408;
        _1567 = _1722 * _1409;
    }
    else
    {
        _1561 = _1406;
        _1563 = _1407;
        _1565 = _1408;
        _1567 = _1409;
    }
    float _1579 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1580 = _1579 == 3.0;
    float _1582 = log2(_1567);
    float _1586 = exp2(_1582 * cbSceneParam._m0[78u].x);
    float _1587 = exp2(_1582 * cbSceneParam._m0[78u].y);
    float _1588 = exp2(_1582 * cbSceneParam._m0[78u].z);
    float _1589 = _1586 * (isnan(0.0) ? _1364 : (isnan(_1364) ? 0.0 : max(_1364, 0.0)));
    float _1590 = _1587 * (isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0)));
    float _1591 = _1588 * (isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0)));
    float _1600 = (_1579 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1600 * (_1580 ? _1589 : (_1589 + (cbSceneParam._m0[72u].w * _1561)));
    SV_Target.y = _1600 * (_1580 ? _1590 : (_1590 + (cbSceneParam._m0[72u].w * _1563)));
    SV_Target.z = _1600 * (_1580 ? _1591 : (_1591 + (cbSceneParam._m0[72u].w * _1565)));
    SV_Target.w = cbInstanceData._m0[_1380].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1351) * _1379) * _1586) * _1600;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1354) * _1379) * _1587) * _1600;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1357) * _1379) * _1588) * _1600;
    SV_Target_1.w = cbInstanceData._m0[_1380].w;
}


