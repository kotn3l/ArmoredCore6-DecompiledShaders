#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _542;
float _1946;
float _1947;
float _1948;
float _1949;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _155 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _156 = _155 * NORMAL.x;
    float _157 = _155 * NORMAL.y;
    float _158 = _155 * NORMAL.z;
    vec4 _182 = texture(sampler2D(M_E_M0_NoLight_Addition_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _191 = inversesqrt(dot(vec3(_156, _157, _158), vec3(_156, _157, _158)));
    float _192 = _191 * _156;
    float _193 = _191 * _157;
    float _194 = _191 * _158;
    float _210 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    float _267 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _268 = _261 * _267;
    float _269 = _262 * _267;
    float _270 = _263 * _267;
    vec4 _275 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _277 = _275.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _354 = sqrt(((_261 * _261) + (_262 * _262)) + (_263 * _263));
        float _361 = (cbMatDynParam._m0[5u].x * _354) + cbMatDynParam._m0[5u].y;
        float _1958 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
        float _363 = isnan(1.0) ? _1958 : (isnan(_1958) ? 1.0 : min(_1958, 1.0));
        float _367 = (cbMatDynParam._m0[5u].z * _354) + cbMatDynParam._m0[5u].w;
        float _1969 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1969 : (isnan(_1969) ? 1.0 : min(_1969, 1.0))) - _363)) + _363) < ((_277 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _289 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _290 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _299 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_289 * cbSceneParam._m0[86u].x, _290 * cbSceneParam._m0[86u].y));
    float _302 = _299.x * TEXCOORD.z;
    float _303 = dot(vec3(_192, _193, _194), vec3(_268, _269, _270));
    float _306 = _303 * 2.0;
    float _311 = (_306 * _192) - _268;
    float _312 = (_306 * _193) - _269;
    float _313 = (_306 * _194) - _270;
    float _335 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _339 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _343 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _541;
    float _543;
    float _544;
    float _545;
    float _546;
    float _547;
    float _548;
    float _549;
    float _550;
    float _551;
    float _552;
    float _553;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _401 = fma(_343, cbModelParam._m0[26u].z, fma(_339, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _335));
        float _405 = fma(_343, cbModelParam._m0[27u].z, fma(_339, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _335));
        float _409 = fma(_343, cbModelParam._m0[28u].z, fma(_339, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _335));
        float _434 = _335 + _192;
        float _435 = _339 + _193;
        float _436 = _343 + _194;
        float _446 = fma(_436, cbModelParam._m0[26u].z, fma(_435, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _434)) - _401;
        float _447 = fma(_436, cbModelParam._m0[27u].z, fma(_435, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _434)) - _405;
        float _448 = fma(_436, cbModelParam._m0[28u].z, fma(_435, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _434)) - _409;
        float _452 = inversesqrt(dot(vec3(_446, _447, _448), vec3(_446, _447, _448)));
        float _465 = ((_452 * _446) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_401 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _466 = ((_452 * _447) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_405 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _467 = ((_452 * _448) / cbModelParam._m0[34u].z) + ((((((_409 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _470 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_465, _466, _467), 0.0);
        vec4 _477 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_465, _466, _467), 0.0);
        vec4 _484 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_465, _466, _467), 0.0);
        vec4 _491 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_465, _466, _467), 0.0);
        float _504 = exp2((_470.w + (-0.5)) * 20.0) * 2.0;
        float _514 = exp2((_477.w + (-0.5)) * 20.0) * 2.0;
        float _524 = exp2((_484.w + (-0.5)) * 20.0) * 2.0;
        float _534 = exp2((_491.w + (-0.5)) * 20.0) * 2.0;
        float _535 = _534 * (_491.x + (-0.5));
        float _536 = _534 * (_491.y + (-0.5));
        float _537 = _534 * (_491.z + (-0.5));
        _541 = _504 * (_470.z + (-0.5));
        _543 = _504 * (_470.y + (-0.5));
        _544 = _504 * (_470.x + (-0.5));
        _545 = _514 * (_477.z + (-0.5));
        _546 = _514 * (_477.y + (-0.5));
        _547 = _514 * (_477.x + (-0.5));
        _548 = _524 * (_484.z + (-0.5));
        _549 = _524 * (_484.y + (-0.5));
        _550 = _524 * (_484.x + (-0.5));
        _551 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
        _552 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
        _553 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    }
    else
    {
        _541 = _542;
        _543 = _542;
        _544 = _542;
        _545 = _542;
        _546 = _542;
        _547 = _542;
        _548 = _542;
        _549 = _542;
        _550 = _542;
        _551 = _542;
        _552 = _542;
        _553 = _542;
    }
    float _718;
    float _719;
    float _720;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    float _728;
    float _729;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _582 = fma(_343, cbModelParam._m0[30u].z, fma(_339, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _335));
        float _586 = fma(_343, cbModelParam._m0[31u].z, fma(_339, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _335));
        float _590 = fma(_343, cbModelParam._m0[32u].z, fma(_339, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _335));
        float _613 = _335 + _192;
        float _614 = _339 + _193;
        float _615 = _343 + _194;
        float _625 = fma(_615, cbModelParam._m0[30u].z, fma(_614, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _613)) - _582;
        float _626 = fma(_615, cbModelParam._m0[31u].z, fma(_614, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _613)) - _586;
        float _627 = fma(_615, cbModelParam._m0[32u].z, fma(_614, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _613)) - _590;
        float _631 = inversesqrt(dot(vec3(_625, _626, _627), vec3(_625, _626, _627)));
        float _644 = ((_631 * _625) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_582 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _645 = ((_631 * _626) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_586 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _646 = ((_631 * _627) / cbModelParam._m0[35u].z) + ((((((_590 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _648 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_644, _645, _646), 0.0);
        vec4 _655 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_644, _645, _646), 0.0);
        vec4 _662 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_644, _645, _646), 0.0);
        vec4 _669 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_644, _645, _646), 0.0);
        float _681 = exp2((_648.w + (-0.5)) * 20.0) * 2.0;
        float _691 = exp2((_655.w + (-0.5)) * 20.0) * 2.0;
        float _701 = exp2((_662.w + (-0.5)) * 20.0) * 2.0;
        float _711 = exp2((_669.w + (-0.5)) * 20.0) * 2.0;
        float _712 = _711 * (_669.x + (-0.5));
        float _713 = _711 * (_669.y + (-0.5));
        float _714 = _711 * (_669.z + (-0.5));
        _718 = _681 * (_648.z + (-0.5));
        _719 = _681 * (_648.y + (-0.5));
        _720 = _681 * (_648.x + (-0.5));
        _721 = _691 * (_655.z + (-0.5));
        _722 = _691 * (_655.y + (-0.5));
        _723 = _691 * (_655.x + (-0.5));
        _724 = _701 * (_662.z + (-0.5));
        _725 = _701 * (_662.y + (-0.5));
        _726 = _701 * (_662.x + (-0.5));
        _727 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        _728 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
        _729 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    }
    else
    {
        _718 = _542;
        _719 = _542;
        _720 = _542;
        _721 = _542;
        _722 = _542;
        _723 = _542;
        _724 = _542;
        _725 = _542;
        _726 = _542;
        _727 = _542;
        _728 = _542;
        _729 = _542;
    }
    float _744 = _311 * 0.5;
    float _745 = _312 * 0.5;
    float _746 = _313 * 0.5;
    float _747 = dot(vec4(_744, _745, _746, 1.0), vec4(_720, _723, _726, _729));
    float _750 = dot(vec4(_744, _745, _746, 1.0), vec4(_719, _722, _725, _728));
    float _753 = dot(vec4(_744, _745, _746, 1.0), vec4(_718, _721, _724, _727));
    float _788;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _760 = dot(vec4(_744, _745, _746, 1.0), vec4(_541, _545, _548, _551));
        float _764 = dot(vec4(_744, _745, _746, 1.0), vec4(_543, _546, _549, _552));
        float _768 = dot(vec4(_744, _745, _746, 1.0), vec4(_544, _547, _550, _553));
        float _775 = dot(vec4(cbModelParam._m0[39u]), vec4(_744, _745, _746, 1.0));
        _788 = dot(vec3(isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0)), isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0)), isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_775) ? 0.0 : (isnan(0.0) ? _775 : max(0.0, _775))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _788 = 1.0;
    }
    float _799;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _790 = dot(vec4(cbModelParam._m0[40u]), vec4(_744, _745, _746, 1.0));
        _799 = dot(vec3(isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0)), isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0)), isnan(0.0) ? _753 : (isnan(_753) ? 0.0 : max(_753, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_790) ? 0.0 : (isnan(0.0) ? _790 : max(0.0, _790))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _799 = 1.0;
    }
    float _803 = (_799 * cbModelParam._m0[1u].x) + (_788 * (1.0 - cbModelParam._m0[1u].x));
    float _809 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _893;
    float _895;
    float _897;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _860 = fma(_343, cbModelParam._m0[13u].z, fma(_339, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _335)) + cbModelParam._m0[13u].w;
        float _864 = fma(_343, cbModelParam._m0[14u].z, fma(_339, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _335)) + cbModelParam._m0[14u].w;
        float _868 = fma(_343, cbModelParam._m0[15u].z, fma(_339, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _335)) + cbModelParam._m0[15u].w;
        float _871 = fma(_313, cbModelParam._m0[13u].z, fma(_312, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _311));
        float _874 = fma(_313, cbModelParam._m0[14u].z, fma(_312, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _311));
        float _877 = fma(_313, cbModelParam._m0[15u].z, fma(_312, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _311));
        float _903;
        if (_871 > 0.0)
        {
            _903 = abs((1.0 - _860) / _871);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_871 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_860 + 1.0) / _871);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _903 = frontier_phi_17_15_ladder;
        }
        float _1096;
        if (_874 > 0.0)
        {
            _1096 = abs((1.0 - _864) / _874);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_874 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_864 + 1.0) / _874);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1096 = frontier_phi_26_22_ladder;
        }
        float _1466;
        if (_877 > 0.0)
        {
            _1466 = abs((1.0 - _868) / _877);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_877 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_868 + 1.0) / _877);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _1466 = frontier_phi_38_33_ladder;
        }
        float _1468 = isnan(_1096) ? _903 : (isnan(_903) ? _1096 : min(_903, _1096));
        float _1469 = isnan(_1466) ? _1468 : (isnan(_1468) ? _1466 : min(_1468, _1466));
        float _1473 = (_1469 * _871) + _860;
        float _1474 = (_1469 * _874) + _864;
        float _1475 = (_1469 * _877) + _868;
        float _1476 = _1469 * 9.9999997473787516355514526367188e-05;
        float _1478 = (-1.0) - _1476;
        float _1480 = _1476 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_1475 > _1480) || ((_1475 < _1478) || ((_1474 > _1480) || ((_1474 < _1478) || ((_1473 < _1478) || (_1473 > _1480))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1694 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1475, cbModelParam._m0[9u].z, fma(_1474, cbModelParam._m0[9u].y, _1473 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1475, cbModelParam._m0[10u].z, fma(_1474, cbModelParam._m0[10u].y, _1473 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1475, cbModelParam._m0[11u].z, fma(_1474, cbModelParam._m0[11u].y, _1473 * cbModelParam._m0[11u].x))), _809);
            frontier_phi_16_38_ladder = _1694.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _1694.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _1694.x * cbModelParam._m0[1u].y;
        }
        _893 = frontier_phi_16_38_ladder_2;
        _895 = frontier_phi_16_38_ladder_1;
        _897 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _881 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_311, _312, _313), _809);
        _893 = _881.x * cbModelParam._m0[1u].y;
        _895 = _881.y * cbModelParam._m0[1u].y;
        _897 = _881.z * cbModelParam._m0[1u].y;
    }
    float _900 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _993;
    float _995;
    float _997;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _957 = fma(_343, cbModelParam._m0[21u].z, fma(_339, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _335)) + cbModelParam._m0[21u].w;
        float _961 = fma(_343, cbModelParam._m0[22u].z, fma(_339, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _335)) + cbModelParam._m0[22u].w;
        float _965 = fma(_343, cbModelParam._m0[23u].z, fma(_339, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _335)) + cbModelParam._m0[23u].w;
        float _968 = fma(_313, cbModelParam._m0[21u].z, fma(_312, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _311));
        float _971 = fma(_313, cbModelParam._m0[22u].z, fma(_312, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _311));
        float _974 = fma(_313, cbModelParam._m0[23u].z, fma(_312, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _311));
        float _1101;
        if (_968 > 0.0)
        {
            _1101 = abs((1.0 - _957) / _968);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_968 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_957 + 1.0) / _968);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1101 = frontier_phi_28_24_ladder;
        }
        float _1493;
        if (_971 > 0.0)
        {
            _1493 = abs((1.0 - _961) / _971);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_971 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_961 + 1.0) / _971);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _1493 = frontier_phi_40_35_ladder;
        }
        float _1758;
        if (_974 > 0.0)
        {
            _1758 = abs((1.0 - _965) / _974);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_974 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_965 + 1.0) / _974);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _1758 = frontier_phi_52_47_ladder;
        }
        float _1760 = isnan(_1493) ? _1101 : (isnan(_1101) ? _1493 : min(_1101, _1493));
        float _1761 = isnan(_1758) ? _1760 : (isnan(_1760) ? _1758 : min(_1760, _1758));
        float _1765 = (_1761 * _968) + _957;
        float _1766 = (_1761 * _971) + _961;
        float _1767 = (_1761 * _974) + _965;
        float _1768 = _1761 * 9.9999997473787516355514526367188e-05;
        float _1769 = (-1.0) - _1768;
        float _1771 = _1768 + 1.0;
        float frontier_phi_25_52_ladder;
        float frontier_phi_25_52_ladder_1;
        float frontier_phi_25_52_ladder_2;
        if ((_1767 > _1771) || ((_1767 < _1769) || ((_1766 > _1771) || ((_1766 < _1769) || ((_1765 < _1769) || (_1765 > _1771))))))
        {
            frontier_phi_25_52_ladder = 0.0;
            frontier_phi_25_52_ladder_1 = 0.0;
            frontier_phi_25_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1843 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1767, cbModelParam._m0[17u].z, fma(_1766, cbModelParam._m0[17u].y, _1765 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1767, cbModelParam._m0[18u].z, fma(_1766, cbModelParam._m0[18u].y, _1765 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1767, cbModelParam._m0[19u].z, fma(_1766, cbModelParam._m0[19u].y, _1765 * cbModelParam._m0[19u].x))), _900);
            frontier_phi_25_52_ladder = _1843.z * cbModelParam._m0[1u].z;
            frontier_phi_25_52_ladder_1 = _1843.y * cbModelParam._m0[1u].z;
            frontier_phi_25_52_ladder_2 = _1843.x * cbModelParam._m0[1u].z;
        }
        _993 = frontier_phi_25_52_ladder_2;
        _995 = frontier_phi_25_52_ladder_1;
        _997 = frontier_phi_25_52_ladder;
    }
    else
    {
        vec4 _977 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_311, _312, _313), _900);
        _993 = _977.x * cbModelParam._m0[1u].z;
        _995 = _977.y * cbModelParam._m0[1u].z;
        _997 = _977.z * cbModelParam._m0[1u].z;
    }
    float _1009 = _302 * 0.01200000010430812835693359375;
    float _1011 = _1009 * ((cbModelParam._m0[1u].w * (_993 - _893)) + _893);
    float _1012 = _1009 * ((cbModelParam._m0[1u].w * (_995 - _895)) + _895);
    float _1013 = _1009 * ((cbModelParam._m0[1u].w * (_997 - _897)) + _897);
    float _1034 = fma(_1013, cbSceneParam._m0[89u].z, fma(_1012, cbSceneParam._m0[89u].y, _1011 * cbSceneParam._m0[89u].x));
    float _1037 = fma(_1013, cbSceneParam._m0[90u].z, fma(_1012, cbSceneParam._m0[90u].y, _1011 * cbSceneParam._m0[90u].x));
    float _1040 = fma(_1013, cbSceneParam._m0[91u].z, fma(_1012, cbSceneParam._m0[91u].y, _1011 * cbSceneParam._m0[91u].x));
    float _1075 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1079 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1087 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1088 = _1075 / _1087;
    float _1089 = _1079 / _1087;
    float _1090 = _1083 / _1087;
    float _1237;
    float _1238;
    float _1239;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1117 = ((uint(_1090 > cbSceneParam._m0[59u].y) + uint(_1090 > cbSceneParam._m0[59u].x)) + uint(_1090 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1118 = _1117 + 43u;
        uint _1126 = _1117 + 44u;
        uint _1134 = _1117 + 45u;
        uint _1142 = _1117 + 46u;
        float _1153 = fma(_1087, cbSceneParam._m0[_1118].w, fma(_1083, cbSceneParam._m0[_1118].z, fma(_1079, cbSceneParam._m0[_1118].y, _1075 * cbSceneParam._m0[_1118].x)));
        float _1157 = fma(_1087, cbSceneParam._m0[_1126].w, fma(_1083, cbSceneParam._m0[_1126].z, fma(_1079, cbSceneParam._m0[_1126].y, _1075 * cbSceneParam._m0[_1126].x)));
        float _1165 = fma(_1087, cbSceneParam._m0[_1142].w, fma(_1083, cbSceneParam._m0[_1142].z, fma(_1079, cbSceneParam._m0[_1142].y, _1075 * cbSceneParam._m0[_1142].x)));
        float _1170 = cbSceneParam._m0[33u].z * _1165;
        float _1172 = cbSceneParam._m0[33u].w * _1165;
        float _1175 = fma(_1087, cbSceneParam._m0[_1134].w, fma(_1083, cbSceneParam._m0[_1134].z, fma(_1079, cbSceneParam._m0[_1134].y, _1075 * cbSceneParam._m0[_1134].x))) / _1165;
        float _1223 = (cbSceneParam._m0[33u].x - sqrt(((_1089 * _1089) + (_1088 * _1088)) + (_1090 * _1090))) * cbSceneParam._m0[33u].y;
        float _2095 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1230 = (isnan(1.0) ? _2095 : (isnan(_2095) ? 1.0 : min(_2095, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1170 + _1153) / _1165, (_1172 + _1157) / _1165), _1175), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1172 + _1153) / _1165, (_1157 - _1170) / _1165), _1175), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1153 - _1170) / _1165, (_1157 - _1172) / _1165), _1175), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1153 - _1172) / _1165, (_1170 + _1157) / _1165), _1175), 0.0)).x), vec4(0.25)));
        _1237 = 1.0 - (_1230 * cbSceneParam._m0[34u].x);
        _1238 = 1.0 - (_1230 * cbSceneParam._m0[34u].y);
        _1239 = 1.0 - (_1230 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1237 = 1.0;
        _1238 = 1.0;
        _1239 = 1.0;
    }
    float _1303;
    float _1305;
    float _1307;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1291 = fma(_1087, cbSceneParam._m0[63u].w, fma(_1083, cbSceneParam._m0[63u].z, fma(_1079, cbSceneParam._m0[63u].y, _1075 * cbSceneParam._m0[63u].x)));
        float _1292 = fma(_1087, cbSceneParam._m0[60u].w, fma(_1083, cbSceneParam._m0[60u].z, fma(_1079, cbSceneParam._m0[60u].y, _1075 * cbSceneParam._m0[60u].x))) / _1291;
        float _1293 = fma(_1087, cbSceneParam._m0[61u].w, fma(_1083, cbSceneParam._m0[61u].z, fma(_1079, cbSceneParam._m0[61u].y, _1075 * cbSceneParam._m0[61u].x))) / _1291;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_1292 >= cbSceneParam._m0[64u].x) && (_1293 >= cbSceneParam._m0[64u].y)) && (_1292 <= cbSceneParam._m0[64u].z)) && (_1293 <= cbSceneParam._m0[64u].w))
        {
            float _1506 = fma(_1087, cbSceneParam._m0[62u].w, fma(_1083, cbSceneParam._m0[62u].z, fma(_1079, cbSceneParam._m0[62u].y, _1075 * cbSceneParam._m0[62u].x))) / _1291;
            float _1510 = isnan(cbSceneParam._m0[41u].w) ? _1506 : (isnan(_1506) ? cbSceneParam._m0[41u].w : max(_1506, cbSceneParam._m0[41u].w));
            float _1553 = (cbSceneParam._m0[33u].x - sqrt(((_1089 * _1089) + (_1088 * _1088)) + (_1090 * _1090))) * cbSceneParam._m0[33u].y;
            float _2111 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
            float _1560 = (isnan(1.0) ? _2111 : (isnan(_2111) ? 1.0 : min(_2111, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1292, cbSceneParam._m0[33u].w + _1293), _1510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1292, _1293 - cbSceneParam._m0[33u].z), _1510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1292 - cbSceneParam._m0[33u].z, _1293 - cbSceneParam._m0[33u].w), _1510), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1292 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1293), _1510), 0.0)).x), vec4(0.25)));
            float _1564 = 1.0 - (_1560 * cbSceneParam._m0[34u].x);
            float _1565 = 1.0 - (_1560 * cbSceneParam._m0[34u].y);
            float _1566 = 1.0 - (_1560 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_1566) ? _1239 : (isnan(_1239) ? _1566 : min(_1239, _1566));
            frontier_phi_37_36_ladder_1 = isnan(_1565) ? _1238 : (isnan(_1238) ? _1565 : min(_1238, _1565));
            frontier_phi_37_36_ladder_2 = isnan(_1564) ? _1237 : (isnan(_1237) ? _1564 : min(_1237, _1564));
        }
        else
        {
            frontier_phi_37_36_ladder = _1239;
            frontier_phi_37_36_ladder_1 = _1238;
            frontier_phi_37_36_ladder_2 = _1237;
        }
        _1303 = frontier_phi_37_36_ladder_2;
        _1305 = frontier_phi_37_36_ladder_1;
        _1307 = frontier_phi_37_36_ladder;
    }
    else
    {
        _1303 = _1237;
        _1305 = _1238;
        _1307 = _1239;
    }
    uint _1309 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1315 = floatBitsToUint(cbInstanceData._m0[_1309 + 5u]).x * 14u;
    float _1323 = (cbLight._m0[_1315 + 13u].x * (_302 + (-1.0))) + 1.0;
    uint _1324 = _1315 + 8u;
    float _1335 = cbLight._m0[_1315].x + _268;
    float _1336 = cbLight._m0[_1315].y + _269;
    float _1337 = cbLight._m0[_1315].z + _270;
    float _1341 = inversesqrt(dot(vec3(_1335, _1336, _1337), vec3(_1335, _1336, _1337)));
    float _1345 = dot(vec3(_192, _193, _194), vec3(cbLight._m0[_1315].xyz));
    float _2137 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
    float _1348 = isnan(1.0) ? _2137 : (isnan(_2137) ? 1.0 : min(_2137, 1.0));
    float _2148 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _1350 = dot(vec3(cbLight._m0[_1315].xyz), vec3(_1335 * _1341, _1336 * _1341, _1337 * _1341));
    float _2159 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
    float _1361 = (exp2(log2(1.0 - (isnan(1.0) ? _2159 : (isnan(_2159) ? 1.0 : min(_2159, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1367 = (0.5 / ((_1348 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2148 : (isnan(_2148) ? 1.0 : min(_2148, 1.0))))) * _1348;
    float _2170 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
    float _1369 = (isnan(1.0) ? _2170 : (isnan(_2170) ? 1.0 : min(_2170, 1.0))) * 0.31831014156341552734375;
    float _1371 = isnan(1.0) ? _1323 : (isnan(_1323) ? 1.0 : min(_1323, 1.0));
    uint _1391 = _1309 + 9u;
    uint _1392 = _1391 + uint(cbMatDynParam._m0[0u].w);
    float _1400 = ((cbMtdParam._m0[9u].x * cbMtdParam._m0[10u].x) * _182.x) * cbInstanceData._m0[_1392].x;
    float _1403 = ((cbMtdParam._m0[9u].y * cbMtdParam._m0[10u].x) * _182.y) * cbInstanceData._m0[_1392].y;
    float _1406 = ((cbMtdParam._m0[9u].z * cbMtdParam._m0[10u].x) * _182.z) * cbInstanceData._m0[_1392].z;
    float _1413 = _1400 + ((((((cbLight._m0[_1324].x * _1303) * _1361) * _1369) * _1371) + ((isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0))) * _803)) * cbPerFrame._m0[3u].x);
    float _1414 = _1403 + ((((((cbLight._m0[_1324].y * _1305) * _1361) * _1369) * _1371) + ((isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0))) * _803)) * cbPerFrame._m0[3u].x);
    float _1415 = _1406 + ((((((cbLight._m0[_1324].z * _1307) * _1361) * _1369) * _1371) + ((isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0))) * _803)) * cbPerFrame._m0[3u].x);
    float _1416 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    float _1417 = isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0));
    float _1418 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
    float _1424 = cbMtdParam._m0[2u].x * _1400;
    float _1425 = cbMtdParam._m0[2u].y * _1403;
    float _1426 = cbMtdParam._m0[2u].z * _1406;
    float _2201 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1428 = isnan(1.0) ? _2201 : (isnan(_2201) ? 1.0 : min(_2201, 1.0));
    uint _1429 = _1309 + 6u;
    float _1437 = _289 / cbSceneParam._m0[86u].x;
    float _1438 = _290 / cbSceneParam._m0[86u].y;
    vec4 _1452 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1437, _1438, (log2((isnan(cbSceneParam._m0[77u].w) ? _210 : (isnan(_210) ? cbSceneParam._m0[77u].w : min(_210, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1454 = _1452.x;
    float _1455 = _1452.y;
    float _1456 = _1452.z;
    float _1457 = _1452.w;
    float _1609;
    float _1611;
    float _1613;
    float _1615;
    if (_210 > cbSceneParam._m0[78u].w)
    {
        float _1571 = isnan(_210) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _210 : min(cbSceneParam._m0[80u].w, _210));
        float _1572 = _1571 / _210;
        float _1583 = _1572 * _261;
        float _1584 = _262 * _1572;
        float _1585 = (-0.0) - _1584;
        float _1587 = _1572 * _263;
        float _1589 = (cbSceneParam._m0[77u].w * _1585) / _1571;
        float _1590 = _1589 + cbSceneParam._m0[79u].w;
        float _1591 = cbSceneParam._m0[79u].w - _1584;
        float _1597 = sqrt(((_1583 * _1583) + (_1584 * _1584)) + (_1587 * _1587));
        float _1600 = (1.0 - (cbSceneParam._m0[77u].w / _1571)) * _1597;
        float _1605 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1607 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1784;
        if (abs((_1585 - _1589) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1784 = ((((_1590 > 0.0) ? exp2(_1605 * _1590) : (2.0 - exp2(_1607 * _1590))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1600;
        }
        else
        {
            float _1715 = 1.0 / cbSceneParam._m0[80u].x;
            float _1716 = isnan(_1591) ? _1590 : (isnan(_1590) ? _1591 : max(_1590, _1591));
            float _1717 = isnan(_1591) ? _1590 : (isnan(_1590) ? _1591 : min(_1590, _1591));
            float _1726 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : min(_1716, 0.0));
            float _1727 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : min(_1717, 0.0));
            _1784 = ((abs(_1597 / _1585) * cbSceneParam._m0[80u].y) * ((((_1726 - _1727) * 2.0) - ((exp2(_1605 * (isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0)))) - exp2(_1605 * (isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0))))) * _1715)) - ((exp2(_1607 * _1726) - exp2(_1607 * _1727)) * _1715))) + (_1600 * cbSceneParam._m0[80u].z);
        }
        vec4 _1786 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1437, _1438, 1.0), 0.0);
        float _1795 = exp2((_1784 * (-1.44269502162933349609375)) * (1.0 - _1786.w));
        float _1796 = log2(_1795);
        float _1812 = log2(_1457);
        _1609 = (exp2(_1812 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1796 * cbSceneParam._m0[78u].x)) * _1786.x) / cbSceneParam._m0[78u].x)) + _1454;
        _1611 = (exp2(_1812 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1796 * cbSceneParam._m0[78u].y)) * _1786.y) / cbSceneParam._m0[78u].y)) + _1455;
        _1613 = (exp2(_1812 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1796 * cbSceneParam._m0[78u].z)) * _1786.z) / cbSceneParam._m0[78u].z)) + _1456;
        _1615 = _1795 * _1457;
    }
    else
    {
        _1609 = _1454;
        _1611 = _1455;
        _1613 = _1456;
        _1615 = _1457;
    }
    bool _1822;
    vec4 _1625;
    vec4 _1648;
    float _1650;
    float _1654;
    float _1655;
    float _1656;
    float _1659;
    float _1662;
    float _1665;
    float _1666;
    bool _1677;
    for (;;)
    {
        _1625 = cbMatDynParam._m0[0u];
        float _1627 = roundEven(_1625.y);
        bool _1628 = _1627 == 3.0;
        float _1630 = log2(_1615);
        float _1634 = exp2(_1630 * cbSceneParam._m0[78u].x);
        float _1635 = exp2(_1630 * cbSceneParam._m0[78u].y);
        float _1636 = exp2(_1630 * cbSceneParam._m0[78u].z);
        float _1637 = _1634 * _1416;
        float _1638 = _1635 * _1417;
        float _1639 = _1636 * _1418;
        float _1646 = _277 + (-0.5);
        _1648 = cbMtdParam._m0[1u];
        _1650 = _1648.y * _1646;
        float _1653 = (_1627 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1654 = _1653 * (_1628 ? _1637 : (_1637 + (cbSceneParam._m0[72u].w * _1609)));
        _1655 = _1653 * (_1628 ? _1638 : (_1638 + (cbSceneParam._m0[72u].w * _1611)));
        _1656 = _1653 * (_1628 ? _1639 : (_1639 + (cbSceneParam._m0[72u].w * _1613)));
        _1659 = ((_1424 * _1428) * _1634) * _1653;
        _1662 = ((_1425 * _1428) * _1635) * _1653;
        _1665 = ((_1426 * _1428) * _1636) * _1653;
        _1666 = _1646 * 0.999000012874603271484375;
        _1677 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1677)
        {
            if ((cbInstanceData._m0[_1309 + 7u].x + _1666) < 0.5)
            {
                _1822 = true;
                break;
            }
        }
        uint _1750 = _1391 + uint(_1625.w);
        if ((cbInstanceData._m0[_1750].w < 1.0) && ((cbInstanceData._m0[_1750].w + _1666) < 0.5))
        {
            _1822 = true;
            break;
        }
        if ((_1650 + 1.0) < _1648.x)
        {
            _1822 = true;
            break;
        }
        _1822 = false;
        break;
    }
    float _1848;
    if (_1822)
    {
        discard_state = true;
        _1848 = 0.0;
    }
    else
    {
        _1848 = cbInstanceData._m0[_1429].w;
    }
    SV_Target.x = _1654;
    SV_Target.y = _1655;
    SV_Target.z = _1656;
    SV_Target.w = _1848;
    SV_Target_1.x = _1659;
    SV_Target_1.y = _1662;
    SV_Target_1.z = _1665;
    SV_Target_1.w = cbInstanceData._m0[_1429].w;
    discard_exit();
}


