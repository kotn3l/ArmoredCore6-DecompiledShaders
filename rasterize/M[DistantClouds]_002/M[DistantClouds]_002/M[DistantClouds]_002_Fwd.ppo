#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[22];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_DistantClouds_002_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_DistantClouds_002_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _130 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _131 = _130 * NORMAL.x;
    float _132 = _130 * NORMAL.y;
    float _133 = _130 * NORMAL.z;
    float _138;
    float _139;
    float _140;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _138 = (-0.0) - _131;
        _139 = (-0.0) - _132;
        _140 = (-0.0) - _133;
    }
    else
    {
        _138 = _131;
        _139 = _132;
        _140 = _133;
    }
    float _186 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _196 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _186);
    float _197 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _186);
    float _198 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _186);
    float _225 = cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x;
    vec4 _244 = texture(sampler2D(M_DistantClouds_002_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[20u].x) * ((_225 * cbMtdParam._m0[19u].z) + TEXCOORD.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[20u].y) * ((_225 * cbMtdParam._m0[19u].w) + TEXCOORD.y)) + cbTextureTilingScale._m0[0u].w));
    float _247 = _244.x;
    vec4 _276 = texture(sampler2D(M_DistantClouds_002_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((((_247 * cbMtdParam._m0[19u].x) + TEXCOORD.x) + (cbMtdParam._m0[18u].z * _225)) + cbMtdParam._m0[18u].x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_247 * cbMtdParam._m0[19u].y) + TEXCOORD.y) + (cbMtdParam._m0[18u].w * _225)) + cbMtdParam._m0[18u].y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _295 = cbMtdParam._m0[15u].w - cbMtdParam._m0[15u].z;
    float _297 = (sqrt(((_196 * _196) + (_197 * _197)) + (_198 * _198)) - cbMtdParam._m0[15u].z) / (isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0)));
    float _1042 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    vec4 _310 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _312 = _310.x;
    bool _318 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _334 = ((_318 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _312)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _312))) - POSITION_1.w) / cbMtdParam._m0[15u].y;
    float _1053 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _336 = ((_276.w * cbMtdParam._m0[13u].z) * (isnan(1.0) ? _1042 : (isnan(_1042) ? 1.0 : min(_1042, 1.0)))) * (isnan(1.0) ? _1053 : (isnan(_1053) ? 1.0 : min(_1053, 1.0)));
    float _346 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _347 = _346 * _196;
    float _348 = _346 * _197;
    float _349 = _346 * _198;
    float _353 = dot(vec4(_347, _348, _349, 0.0), vec4(_138, _139, _140, 0.0)) - cbMtdParam._m0[15u].x;
    float _1064 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _363 = (floatBitsToUint(cbMtdParam._m0[9u]).x != 0u) ? (_336 - (exp2(log2(1.0 - (isnan(1.0) ? _1064 : (isnan(_1064) ? 1.0 : min(_1064, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[14u].y, 0.001000000047497451305389404296875)))) * _336)) : _336;
    float _1080 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _368 = cbMtdParam._m0[13u].w * (isnan(1.0) ? _1080 : (isnan(_1080) ? 1.0 : min(_1080, 1.0)));
    float _394 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _398 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _402 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _406 = inversesqrt(dot(vec3(_394, _398, _402), vec3(_394, _398, _402)));
    float _407 = _406 * _394;
    float _408 = _406 * _398;
    float _409 = _406 * _402;
    bool _414 = floatBitsToUint(cbMtdParam._m0[9u]).y != 0u;
    float _426 = inversesqrt(dot(vec3(cbMtdParam._m0[20u].zw, cbMtdParam._m0[21u].x), vec3(cbMtdParam._m0[20u].zw, cbMtdParam._m0[21u].x)));
    uint _430 = uint(roundEven(NORMAL.w)) * 13u;
    uint _437 = floatBitsToUint(cbInstanceData._m0[_430 + 5u]).x * 14u;
    float _443 = _414 ? cbLight._m0[_437].x : (_426 * cbMtdParam._m0[20u].z);
    float _444 = _414 ? cbLight._m0[_437].y : (_426 * cbMtdParam._m0[20u].w);
    float _445 = _414 ? cbLight._m0[_437].z : (_426 * cbMtdParam._m0[21u].x);
    float _449 = inversesqrt(dot(vec3(_443, _444, _445), vec3(_443, _444, _445)));
    float _450 = _443 * _449;
    float _451 = _444 * _449;
    float _452 = _445 * _449;
    float _453 = dot(vec4(_407, _408, _409, 0.0), vec4(_450, _451, _452, 0.0));
    float _1091 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _456 = isnan(1.0) ? _1091 : (isnan(_1091) ? 1.0 : min(_1091, 1.0));
    float _458 = 1.0 - (_456 * _456);
    float _460 = (-0.0) - (_458 - cbMtdParam._m0[16u].w);
    float _461 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
    float _481 = (-0.0) - (_458 - cbMtdParam._m0[17u].y);
    float _482 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _520 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _347, (-0.0) - _348, (-0.0) - _349)) * 0.5;
    float _522 = _520 + 0.5;
    float _532 = 0.5 - _520;
    float _549 = (((cbSceneParam._m0[83u].x * _532) + (cbSceneParam._m0[82u].x * _522)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _550 = (((cbSceneParam._m0[83u].y * _532) + (cbSceneParam._m0[82u].y * _522)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _551 = (((cbSceneParam._m0[83u].z * _532) + (cbSceneParam._m0[82u].z * _522)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _558 = ((_549 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].z;
    float _559 = ((_550 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].w;
    float _560 = ((_551 - cbMtdParam._m0[13u].x) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[13u].x;
    float _576 = inversesqrt(dot(vec3(_450, _451, _452), vec3(_450, _451, _452)));
    float _591 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_407, _408, _409, 0.0), vec4(_576 * _450, _576 * _451, _576 * _452, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1122 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _593 = isnan(1.0) ? _1122 : (isnan(_1122) ? 1.0 : min(_1122, 1.0));
    float _599 = exp2(log2(_593 * 6.5) * 7.0);
    float _1133 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _601 = (isnan(1.0) ? _1133 : (isnan(_1133) ? 1.0 : min(_1133, 1.0))) + _593;
    float _1144 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _602 = isnan(1.0) ? _1144 : (isnan(_1144) ? 1.0 : min(_1144, 1.0));
    float _612 = ((_602 * ((((_549 - cbMtdParam._m0[11u].z) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[11u].z) - _558)) + _558) * _276.x;
    float _613 = ((_602 * ((((_550 - cbMtdParam._m0[11u].w) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[11u].w) - _559)) + _559) * _276.y;
    float _614 = ((_602 * ((((_551 - cbMtdParam._m0[12u].x) * cbMtdParam._m0[16u].z) + cbMtdParam._m0[12u].x) - _560)) + _560) * _276.z;
    float _615 = isnan(_613) ? _612 : (isnan(_612) ? _613 : max(_612, _613));
    float _616 = isnan(_614) ? _615 : (isnan(_615) ? _614 : max(_615, _614));
    float _619;
    float _621;
    if (_616 < 1.1920928955078125e-07)
    {
        _619 = 0.0;
        _621 = 0.0;
    }
    else
    {
        float _646 = isnan(_613) ? _612 : (isnan(_612) ? _613 : min(_612, _613));
        float _648 = _616 - (isnan(_614) ? _646 : (isnan(_646) ? _614 : min(_646, _614)));
        float _622 = _648 / _616;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_648 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _622;
        }
        else
        {
            float _941;
            if (_616 == _612)
            {
                _941 = ((_613 - _614) / _648) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_16_12_ladder;
                if (_616 == _613)
                {
                    frontier_phi_16_12_ladder = (((_614 - _612) / _648) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_16_12_ladder = (((_612 - _613) / _648) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _941 = frontier_phi_16_12_ladder;
            }
            float _946 = (_941 < 0.0) ? (_941 + 1.0) : _941;
            precise float _620 = (_946 - floor(_946)) * 6.0;
            frontier_phi_3_4_ladder = _620;
            frontier_phi_3_4_ladder_1 = _622;
        }
        _619 = frontier_phi_3_4_ladder;
        _621 = frontier_phi_3_4_ladder_1;
    }
    float _624 = cbMtdParam._m0[17u].x + _616;
    float _1175 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
    float _625 = isnan(1.0) ? _1175 : (isnan(_1175) ? 1.0 : min(_1175, 1.0));
    float _627 = cbMtdParam._m0[17u].z + _621;
    float _1186 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _628 = isnan(1.0) ? _1186 : (isnan(_1186) ? 1.0 : min(_1186, 1.0));
    uint _630 = uint(int(floor(_619)));
    float _632 = _619 - float(int(_630));
    float _634 = (1.0 - _628) * _625;
    float _637 = (1.0 - (_632 * _628)) * _625;
    float _641 = (1.0 - ((1.0 - _632) * _628)) * _625;
    float _650;
    float _652;
    float _653;
    if ((_630 == 0u) || (_630 == 6u))
    {
        _650 = _625;
        _652 = _641;
        _653 = _634;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_630 == 1u)
        {
            frontier_phi_5_6_ladder = _637;
            frontier_phi_5_6_ladder_1 = _625;
            frontier_phi_5_6_ladder_2 = _634;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_630 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _634;
                frontier_phi_5_6_ladder_10_ladder_1 = _625;
                frontier_phi_5_6_ladder_10_ladder_2 = _641;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_15_ladder;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
                if (_630 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _634;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _637;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _625;
                }
                else
                {
                    bool _996 = _630 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _996 ? _641 : _625;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _634;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _996 ? _625 : _637;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_15_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _650 = frontier_phi_5_6_ladder;
        _652 = frontier_phi_5_6_ladder_1;
        _653 = frontier_phi_5_6_ladder_2;
    }
    float _662 = exp2(log2(_650) * cbMtdParam._m0[17u].w);
    float _663 = exp2(log2(_652) * cbMtdParam._m0[17u].w);
    float _664 = exp2(log2(_653) * cbMtdParam._m0[17u].w);
    float _674 = inversesqrt(dot(vec3(cbMtdParam._m0[21u].yzw), vec3(cbMtdParam._m0[21u].yzw)));
    float _682 = (dot(vec4(_407, _408, _409, 0.0), vec4(_674 * cbMtdParam._m0[21u].y, _674 * cbMtdParam._m0[21u].z, _674 * cbMtdParam._m0[21u].w, 0.0)) + 1.0) * 0.5;
    float _1197 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _689 = cbMtdParam._m0[14u].x * exp2(log2(isnan(1.0) ? _1197 : (isnan(_1197) ? 1.0 : min(_1197, 1.0))) * cbMtdParam._m0[14u].z);
    float _1208 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _690 = isnan(1.0) ? _1208 : (isnan(_1208) ? 1.0 : min(_1208, 1.0));
    float _697 = (cbMtdParam._m0[16u].x * exp2(log2(isnan(64.0) ? _482 : (isnan(_482) ? 64.0 : min(_482, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[16u].y * exp2(log2(isnan(64.0) ? _461 : (isnan(_461) ? 64.0 : min(_461, 64.0))) * 1.64999997615814208984375));
    float _700 = ((_690 * ((_662 * cbMtdParam._m0[9u].z) - _662)) + _662) + (_697 * cbMtdParam._m0[10u].z);
    float _703 = ((_690 * ((_663 * cbMtdParam._m0[9u].w) - _663)) + _663) + (_697 * cbMtdParam._m0[10u].w);
    float _706 = ((_690 * ((_664 * cbMtdParam._m0[10u].x) - _664)) + _664) + (_697 * cbMtdParam._m0[11u].x);
    float _1234 = isnan(0.0) ? _368 : (isnan(_368) ? 0.0 : max(_368, 0.0));
    float _714 = _318 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _724 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _738 = (_430 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _744 = cbInstanceData._m0[_738].x * (isnan(4.0) ? _700 : (isnan(_700) ? 4.0 : min(_700, 4.0)));
    float _745 = cbInstanceData._m0[_738].y * (isnan(4.0) ? _703 : (isnan(_703) ? 4.0 : min(_703, 4.0)));
    float _746 = cbInstanceData._m0[_738].z * (isnan(4.0) ? _706 : (isnan(_706) ? 4.0 : min(_706, 4.0)));
    float _754 = cbInstanceData._m0[_430 + 6u].w * (isnan(1.0) ? _1234 : (isnan(_1234) ? 1.0 : min(_1234, 1.0)));
    float _760 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _761 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _776 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_760, _761, (log2((isnan(cbSceneParam._m0[77u].w) ? _714 : (isnan(_714) ? cbSceneParam._m0[77u].w : min(_714, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _778 = _776.x;
    float _779 = _776.y;
    float _780 = _776.z;
    float _781 = _776.w;
    float _843;
    float _845;
    float _847;
    float _849;
    if (_714 > cbSceneParam._m0[78u].w)
    {
        float _805 = isnan(_714) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _714 : min(cbSceneParam._m0[80u].w, _714));
        float _806 = _805 / _714;
        float _817 = _806 * (cbSceneParam._m0[71u].x - (_394 / _724));
        float _818 = (cbSceneParam._m0[71u].y - (_398 / _724)) * _806;
        float _819 = (-0.0) - _818;
        float _820 = _806 * (cbSceneParam._m0[71u].z - (_402 / _724));
        float _822 = (cbSceneParam._m0[77u].w * _819) / _805;
        float _823 = _822 + cbSceneParam._m0[79u].w;
        float _824 = cbSceneParam._m0[79u].w - _818;
        float _830 = sqrt(((_817 * _817) + (_818 * _818)) + (_820 * _820));
        float _833 = (1.0 - (cbSceneParam._m0[77u].w / _805)) * _830;
        float _839 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _841 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _958;
        if (abs((_819 - _822) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _958 = ((((_823 > 0.0) ? exp2(_839 * _823) : (2.0 - exp2(_841 * _823))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _833;
        }
        else
        {
            float _913 = 1.0 / cbSceneParam._m0[80u].x;
            float _914 = isnan(_824) ? _823 : (isnan(_823) ? _824 : max(_823, _824));
            float _915 = isnan(_824) ? _823 : (isnan(_823) ? _824 : min(_823, _824));
            float _924 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : min(_914, 0.0));
            float _925 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : min(_915, 0.0));
            _958 = ((abs(_830 / _819) * cbSceneParam._m0[80u].y) * ((((_924 - _925) * 2.0) - ((exp2(_839 * (isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0)))) - exp2(_839 * (isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0))))) * _913)) - ((exp2(_841 * _924) - exp2(_841 * _925)) * _913))) + (_833 * cbSceneParam._m0[80u].z);
        }
        vec4 _960 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_760, _761, 1.0), 0.0);
        float _969 = exp2((_958 * (-1.44269502162933349609375)) * (1.0 - _960.w));
        float _970 = log2(_969);
        float _986 = log2(_781);
        _843 = (exp2(_986 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_970 * cbSceneParam._m0[78u].x)) * _960.x) / cbSceneParam._m0[78u].x)) + _778;
        _845 = (exp2(_986 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_970 * cbSceneParam._m0[78u].y)) * _960.y) / cbSceneParam._m0[78u].y)) + _779;
        _847 = (exp2(_986 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_970 * cbSceneParam._m0[78u].z)) * _960.z) / cbSceneParam._m0[78u].z)) + _780;
        _849 = _969 * _781;
    }
    else
    {
        _843 = _778;
        _845 = _779;
        _847 = _780;
        _849 = _781;
    }
    float _861 = roundEven(cbMatDynParam._m0[0u].y);
    bool _862 = _861 == 3.0;
    float _864 = log2(_849);
    float _871 = exp2(_864 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0)));
    float _872 = exp2(_864 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0)));
    float _873 = exp2(_864 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0)));
    float _883 = (_861 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _883 * (_862 ? _871 : (_871 + (cbSceneParam._m0[72u].w * _843)));
    SV_Target.y = _883 * (_862 ? _872 : (_872 + (cbSceneParam._m0[72u].w * _845)));
    SV_Target.z = _883 * (_862 ? _873 : (_873 + (cbSceneParam._m0[72u].w * _847)));
    SV_Target.w = _754;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _754;
}


