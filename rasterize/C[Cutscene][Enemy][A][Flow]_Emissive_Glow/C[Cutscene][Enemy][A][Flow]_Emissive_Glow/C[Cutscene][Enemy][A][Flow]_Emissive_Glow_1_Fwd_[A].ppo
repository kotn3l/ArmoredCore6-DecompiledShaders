#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _754;
float _755;
float _756;
float _757;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _142 = texture(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[10u].x;
    float _149 = _142.y * cbMtdParam._m0[10u].y;
    float _150 = _142.z * cbMtdParam._m0[10u].z;
    vec4 _176 = texture(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _178 = _176.x;
    float _200 = (cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) + TEXCOORD.x;
    float _201 = (cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD.y;
    vec4 _221 = texture(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) + TEXCOORD.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _227 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].x;
    float _234 = ((_221.y * 0.5) + (-0.25)) * cbMtdParam._m0[12u].w;
    float _236 = (-0.0) - (cbMtdParam._m0[12u].w * ((_221.x * 0.5) + (-0.25)));
    float _239 = fract(_227);
    float _241 = fract(_227 + 0.5);
    float _253 = abs((_239 * 2.0) + (-1.0));
    vec4 _269 = texture(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_239 * _236) + _200) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_234 * _239) + _201) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _271 = _269.x;
    float _272 = _269.y;
    float _273 = _269.z;
    vec4 _274 = texture(sampler2D(C_Cutscene_Enemy_A_Flow_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_241 * _236) + _200) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_234 * _241) + _201) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _292 = cbMtdParam._m0[12u].y * _178;
    float _302 = ((((_292 * cbMtdParam._m0[9u].y) * cbMtdParam._m0[12u].x) * (((_274.y - _272) * _253) + _272)) + ((cbMtdParam._m0[11u].y * cbMtdParam._m0[13u].y) * _176.y)) * cbMtdParam._m0[12u].z;
    float _303 = ((((_292 * cbMtdParam._m0[9u].z) * cbMtdParam._m0[12u].x) * (((_274.z - _273) * _253) + _273)) + ((cbMtdParam._m0[11u].z * cbMtdParam._m0[13u].y) * _176.z)) * cbMtdParam._m0[12u].z;
    float _322 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _363 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _373 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _363);
    float _374 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _363);
    float _375 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _363);
    vec4 _380 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _382 = _380.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _486 = sqrt(((_373 * _373) + (_374 * _374)) + (_375 * _375));
        float _493 = (cbMatDynParam._m0[5u].x * _486) + cbMatDynParam._m0[5u].y;
        float _781 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
        float _494 = isnan(1.0) ? _781 : (isnan(_781) ? 1.0 : min(_781, 1.0));
        float _498 = (cbMatDynParam._m0[5u].z * _486) + cbMatDynParam._m0[5u].w;
        float _792 = isnan(0.0) ? _498 : (isnan(_498) ? 0.0 : max(_498, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0))) - _494)) + _494) < ((_382 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _408 = uint(roundEven(NORMAL.w)) * 13u;
    uint _409 = _408 + 9u;
    uint _410 = _409 + uint(cbMatDynParam._m0[0u].w);
    float _417 = (_178 * cbMtdParam._m0[12u].z) * ((((cbMtdParam._m0[9u].x * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].x) * (((_274.x - _271) * _253) + _271)) + (cbMtdParam._m0[11u].x * cbMtdParam._m0[13u].y));
    float _422 = cbInstanceData._m0[_410].x * (_417 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0)))));
    float _424 = cbInstanceData._m0[_410].y * (_302 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0)))));
    float _426 = cbInstanceData._m0[_410].z * (_303 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0)))));
    float _427 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _428 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _429 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _435 = cbMtdParam._m0[2u].x * (_417 * cbInstanceData._m0[_410].x);
    float _436 = cbMtdParam._m0[2u].y * (_302 * cbInstanceData._m0[_410].y);
    float _437 = cbMtdParam._m0[2u].z * (_303 * cbInstanceData._m0[_410].z);
    float _818 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _440 = isnan(1.0) ? _818 : (isnan(_818) ? 1.0 : min(_818, 1.0));
    uint _441 = _408 + 6u;
    float _450 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _451 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _466 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_450, _451, (log2((isnan(cbSceneParam._m0[77u].w) ? _322 : (isnan(_322) ? cbSceneParam._m0[77u].w : min(_322, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _469 = _466.x;
    float _470 = _466.y;
    float _471 = _466.z;
    float _472 = _466.w;
    float _553;
    float _555;
    float _557;
    float _559;
    if (_322 > cbSceneParam._m0[78u].w)
    {
        float _515 = isnan(_322) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _322 : min(cbSceneParam._m0[80u].w, _322));
        float _516 = _515 / _322;
        float _527 = _516 * _373;
        float _528 = _374 * _516;
        float _529 = (-0.0) - _528;
        float _530 = _516 * _375;
        float _532 = (cbSceneParam._m0[77u].w * _529) / _515;
        float _533 = _532 + cbSceneParam._m0[79u].w;
        float _534 = cbSceneParam._m0[79u].w - _528;
        float _540 = sqrt(((_527 * _527) + (_528 * _528)) + (_530 * _530));
        float _543 = (1.0 - (cbSceneParam._m0[77u].w / _515)) * _540;
        float _549 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _551 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _682;
        if (abs((_529 - _532) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _682 = ((((_533 > 0.0) ? exp2(_549 * _533) : (2.0 - exp2(_551 * _533))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _543;
        }
        else
        {
            float _638 = 1.0 / cbSceneParam._m0[80u].x;
            float _639 = isnan(_534) ? _533 : (isnan(_533) ? _534 : max(_533, _534));
            float _640 = isnan(_534) ? _533 : (isnan(_533) ? _534 : min(_533, _534));
            float _649 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : min(_639, 0.0));
            float _650 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : min(_640, 0.0));
            _682 = ((abs(_540 / _529) * cbSceneParam._m0[80u].y) * ((((_649 - _650) * 2.0) - ((exp2(_549 * (isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0)))) - exp2(_549 * (isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0))))) * _638)) - ((exp2(_551 * _649) - exp2(_551 * _650)) * _638))) + (_543 * cbSceneParam._m0[80u].z);
        }
        vec4 _684 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_450, _451, 1.0), 0.0);
        float _693 = exp2((_682 * (-1.44269502162933349609375)) * (1.0 - _684.w));
        float _694 = log2(_693);
        float _710 = log2(_472);
        _553 = (exp2(_710 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_694 * cbSceneParam._m0[78u].x)) * _684.x) / cbSceneParam._m0[78u].x)) + _469;
        _555 = (exp2(_710 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_694 * cbSceneParam._m0[78u].y)) * _684.y) / cbSceneParam._m0[78u].y)) + _470;
        _557 = (exp2(_710 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_694 * cbSceneParam._m0[78u].z)) * _684.z) / cbSceneParam._m0[78u].z)) + _471;
        _559 = _693 * _472;
    }
    else
    {
        _553 = _469;
        _555 = _470;
        _557 = _471;
        _559 = _472;
    }
    bool _720;
    vec4 _569;
    vec4 _593;
    float _595;
    float _599;
    float _600;
    float _601;
    float _604;
    float _607;
    float _610;
    float _611;
    bool _622;
    for (;;)
    {
        _569 = cbMatDynParam._m0[0u];
        float _571 = roundEven(_569.y);
        bool _572 = _571 == 3.0;
        float _574 = log2(_559);
        float _578 = exp2(_574 * cbSceneParam._m0[78u].x);
        float _579 = exp2(_574 * cbSceneParam._m0[78u].y);
        float _580 = exp2(_574 * cbSceneParam._m0[78u].z);
        float _581 = _578 * _427;
        float _582 = _579 * _428;
        float _583 = _580 * _429;
        float _590 = _382 + (-0.5);
        _593 = cbMtdParam._m0[1u];
        _595 = _593.y * _590;
        float _598 = (_571 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _599 = _598 * (_572 ? _581 : (_581 + (cbSceneParam._m0[72u].w * _553)));
        _600 = _598 * (_572 ? _582 : (_582 + (cbSceneParam._m0[72u].w * _555)));
        _601 = _598 * (_572 ? _583 : (_583 + (cbSceneParam._m0[72u].w * _557)));
        _604 = ((_435 * _440) * _578) * _598;
        _607 = ((_436 * _440) * _579) * _598;
        _610 = ((_437 * _440) * _580) * _598;
        _611 = _590 * 0.999000012874603271484375;
        _622 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_622)
        {
            if ((cbInstanceData._m0[_408 + 7u].x + _611) < 0.5)
            {
                _720 = true;
                break;
            }
        }
        uint _674 = _409 + uint(_569.w);
        if ((cbInstanceData._m0[_674].w < 1.0) && ((cbInstanceData._m0[_674].w + _611) < 0.5))
        {
            _720 = true;
            break;
        }
        if ((_595 + 1.0) < _593.x)
        {
            _720 = true;
            break;
        }
        _720 = false;
        break;
    }
    float _725;
    if (_720)
    {
        discard_state = true;
        _725 = 0.0;
    }
    else
    {
        _725 = cbInstanceData._m0[_441].w;
    }
    SV_Target.x = _599;
    SV_Target.y = _600;
    SV_Target.z = _601;
    SV_Target.w = _725;
    SV_Target_1.x = _604;
    SV_Target_1.y = _607;
    SV_Target_1.z = _610;
    SV_Target_1.w = cbInstanceData._m0[_441].w;
    discard_exit();
}


