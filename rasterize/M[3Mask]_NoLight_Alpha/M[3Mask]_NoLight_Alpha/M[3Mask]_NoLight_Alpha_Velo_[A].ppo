#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_3Mask_NoLight_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _122 = cbMtdParam._m0[10u].w * cbPerFrame._m0[22u].x;
    float _129 = TEXCOORD_1.y - ((cbMtdParam._m0[11u].x * cbPerFrame._m0[22u].x) * 0.550000011920928955078125);
    float _172 = ((_129 * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w;
    float _191 = (((texture(sampler2D(M_3Mask_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2((((cbMtdParam._m0[11u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[11u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z - (texture(sampler2D(M_3Mask_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[0u].x * cbMtdParam._m0[10u].x) * ((_122 * 3.2999999523162841796875) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbTextureTilingScale._m0[0u].y * cbMtdParam._m0[10u].x) * _129) + cbTextureTilingScale._m0[0u].w)).y * 0.20000000298023223876953125)) + (texture(sampler2D(M_3Mask_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_122 * 6.900000095367431640625) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _172)).x * 0.0500000007450580596923828125)) + (texture(sampler2D(M_3Mask_NoLight_Alpha_snp_0_Texture2D_0, SS_WrapLinear), vec2(((((_122 * 16.0) + TEXCOORD_1.x) * cbMtdParam._m0[10u].x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, _172)).x * 0.100000001490116119384765625)) * TEXCOORD_1.z;
    uint _194 = uint(roundEven(NORMAL.w));
    float _208 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _250 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _260 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _250);
    float _261 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _250);
    float _262 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _250);
    vec4 _267 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _269 = _267.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _305 = sqrt(((_260 * _260) + (_261 * _261)) + (_262 * _262));
        float _312 = (cbMatDynParam._m0[5u].x * _305) + cbMatDynParam._m0[5u].y;
        float _401 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
        float _314 = isnan(1.0) ? _401 : (isnan(_401) ? 1.0 : min(_401, 1.0));
        float _318 = (cbMatDynParam._m0[5u].z * _305) + cbMatDynParam._m0[5u].w;
        float _412 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _412 : (isnan(_412) ? 1.0 : min(_412, 1.0))) - _314)) + _314) < ((_269 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _351;
    float _280;
    float _281;
    vec4 _285;
    float _287;
    float _288;
    bool _299;
    for (;;)
    {
        _280 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _281 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _282 = _269 + (-0.5);
        _285 = cbMtdParam._m0[1u];
        _287 = _285.y * _282;
        _288 = _282 * 0.999000012874603271484375;
        _299 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_299)
        {
            if ((cbInstanceData._m0[(_194 * 13u) + 7u].x + _288) < 0.5)
            {
                _351 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _288) < 0.5))
        {
            _351 = true;
            break;
        }
        if ((_287 + _191) < _285.x)
        {
            _351 = true;
            break;
        }
        _351 = false;
        break;
    }
    if (_351)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _280) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _281) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _208 / (_208 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


