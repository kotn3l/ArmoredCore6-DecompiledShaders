#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 5, component = 1) out vec3 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _203 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _227 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _229 = texelFetch(g_InstanceIndexBuffer, int(_227));
    uint _230 = _229.x;
    precise float _231 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _236 = isnan(_231) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _231 : max(0.001000000047497451305389404296875, _231));
    precise float _238 = BLENDWEIGHT.x / _236;
    precise float _239 = BLENDWEIGHT.y / _236;
    precise float _240 = BLENDWEIGHT.z / _236;
    precise float _241 = BLENDWEIGHT.w / _236;
    uint _243 = _230 * 13u;
    uvec4 _248 = floatBitsToUint(cbInstanceData._m0[_243 + 4u]);
    uint _249 = _248.x;
    uint _251 = (_249 + uint(float(BLENDINDICES.x))) * 3u;
    uint _258 = _251 + 1u;
    uint _265 = _251 + 2u;
    precise float _272 = _238 * cbObjMatrix._m0[_251].x;
    precise float _273 = _238 * cbObjMatrix._m0[_258].x;
    precise float _274 = _238 * cbObjMatrix._m0[_265].x;
    precise float _275 = _238 * cbObjMatrix._m0[_251].y;
    precise float _276 = _238 * cbObjMatrix._m0[_258].y;
    precise float _277 = _238 * cbObjMatrix._m0[_265].y;
    precise float _278 = _238 * cbObjMatrix._m0[_251].z;
    precise float _279 = _238 * cbObjMatrix._m0[_258].z;
    precise float _280 = _238 * cbObjMatrix._m0[_265].z;
    precise float _281 = _238 * cbObjMatrix._m0[_251].w;
    precise float _282 = _238 * cbObjMatrix._m0[_258].w;
    precise float _283 = _238 * cbObjMatrix._m0[_265].w;
    uint _286 = (_249 + uint(float(BLENDINDICES.y))) * 3u;
    uint _293 = _286 + 1u;
    uint _300 = _286 + 2u;
    precise float _307 = _239 * cbObjMatrix._m0[_286].x;
    precise float _308 = _239 * cbObjMatrix._m0[_293].x;
    precise float _309 = _239 * cbObjMatrix._m0[_300].x;
    precise float _310 = _239 * cbObjMatrix._m0[_286].y;
    precise float _311 = _239 * cbObjMatrix._m0[_293].y;
    precise float _312 = _239 * cbObjMatrix._m0[_300].y;
    precise float _313 = _239 * cbObjMatrix._m0[_286].z;
    precise float _314 = _239 * cbObjMatrix._m0[_293].z;
    precise float _315 = _239 * cbObjMatrix._m0[_300].z;
    precise float _316 = _239 * cbObjMatrix._m0[_286].w;
    precise float _317 = _239 * cbObjMatrix._m0[_293].w;
    precise float _318 = _239 * cbObjMatrix._m0[_300].w;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    uint _333 = (_249 + uint(float(BLENDINDICES.z))) * 3u;
    uint _340 = _333 + 1u;
    uint _347 = _333 + 2u;
    precise float _354 = _240 * cbObjMatrix._m0[_333].x;
    precise float _355 = _240 * cbObjMatrix._m0[_340].x;
    precise float _356 = _240 * cbObjMatrix._m0[_347].x;
    precise float _357 = _240 * cbObjMatrix._m0[_333].y;
    precise float _358 = _240 * cbObjMatrix._m0[_340].y;
    precise float _359 = _240 * cbObjMatrix._m0[_347].y;
    precise float _360 = _240 * cbObjMatrix._m0[_333].z;
    precise float _361 = _240 * cbObjMatrix._m0[_340].z;
    precise float _362 = _240 * cbObjMatrix._m0[_347].z;
    precise float _363 = _240 * cbObjMatrix._m0[_333].w;
    precise float _364 = _240 * cbObjMatrix._m0[_340].w;
    precise float _365 = _240 * cbObjMatrix._m0[_347].w;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    uint _380 = (_249 + uint(float(BLENDINDICES.w))) * 3u;
    uint _387 = _380 + 1u;
    uint _394 = _380 + 2u;
    precise float _401 = _241 * cbObjMatrix._m0[_380].x;
    precise float _402 = _241 * cbObjMatrix._m0[_387].x;
    precise float _403 = _241 * cbObjMatrix._m0[_394].x;
    precise float _404 = _241 * cbObjMatrix._m0[_380].y;
    precise float _405 = _241 * cbObjMatrix._m0[_387].y;
    precise float _406 = _241 * cbObjMatrix._m0[_394].y;
    precise float _407 = _241 * cbObjMatrix._m0[_380].z;
    precise float _408 = _241 * cbObjMatrix._m0[_387].z;
    precise float _409 = _241 * cbObjMatrix._m0[_394].z;
    precise float _410 = _241 * cbObjMatrix._m0[_380].w;
    precise float _411 = _241 * cbObjMatrix._m0[_387].w;
    precise float _412 = _241 * cbObjMatrix._m0[_394].w;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = POSITION.x * _413;
    precise float _426 = POSITION.y * _416;
    precise float _427 = _426 + _425;
    precise float _428 = POSITION.z * _419;
    precise float _429 = _428 + _427;
    precise float _430 = 1.0 * _422;
    precise float _431 = _430 + _429;
    precise float _432 = POSITION.x * _414;
    precise float _433 = POSITION.y * _417;
    precise float _434 = _433 + _432;
    precise float _435 = POSITION.z * _420;
    precise float _436 = _435 + _434;
    precise float _437 = 1.0 * _423;
    precise float _438 = _437 + _436;
    precise float _439 = POSITION.x * _415;
    precise float _440 = POSITION.y * _418;
    precise float _441 = _440 + _439;
    precise float _442 = POSITION.z * _421;
    precise float _443 = _442 + _441;
    precise float _444 = 1.0 * _424;
    precise float _445 = _444 + _443;
    float _620 = (((((cbPrevObjMatrix._m0[_286].w * _239) + (cbPrevObjMatrix._m0[_251].w * _238)) + (cbPrevObjMatrix._m0[_333].w * _240)) + (cbPrevObjMatrix._m0[_380].w * _241)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_286].z * _239) + (cbPrevObjMatrix._m0[_251].z * _238)) + (cbPrevObjMatrix._m0[_333].z * _240)) + (cbPrevObjMatrix._m0[_380].z * _241), fma(POSITION.y, (((cbPrevObjMatrix._m0[_286].y * _239) + (cbPrevObjMatrix._m0[_251].y * _238)) + (cbPrevObjMatrix._m0[_333].y * _240)) + (cbPrevObjMatrix._m0[_380].y * _241), ((((cbPrevObjMatrix._m0[_286].x * _239) + (cbPrevObjMatrix._m0[_251].x * _238)) + (cbPrevObjMatrix._m0[_333].x * _240)) + (cbPrevObjMatrix._m0[_380].x * _241)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _621 = (((((cbPrevObjMatrix._m0[_293].w * _239) + (cbPrevObjMatrix._m0[_258].w * _238)) + (cbPrevObjMatrix._m0[_340].w * _240)) + (cbPrevObjMatrix._m0[_387].w * _241)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_293].z * _239) + (cbPrevObjMatrix._m0[_258].z * _238)) + (cbPrevObjMatrix._m0[_340].z * _240)) + (cbPrevObjMatrix._m0[_387].z * _241), fma(POSITION.y, (((cbPrevObjMatrix._m0[_293].y * _239) + (cbPrevObjMatrix._m0[_258].y * _238)) + (cbPrevObjMatrix._m0[_340].y * _240)) + (cbPrevObjMatrix._m0[_387].y * _241), ((((cbPrevObjMatrix._m0[_293].x * _239) + (cbPrevObjMatrix._m0[_258].x * _238)) + (cbPrevObjMatrix._m0[_340].x * _240)) + (cbPrevObjMatrix._m0[_387].x * _241)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _622 = (((((cbPrevObjMatrix._m0[_300].w * _239) + (cbPrevObjMatrix._m0[_265].w * _238)) + (cbPrevObjMatrix._m0[_347].w * _240)) + (cbPrevObjMatrix._m0[_394].w * _241)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_300].z * _239) + (cbPrevObjMatrix._m0[_265].z * _238)) + (cbPrevObjMatrix._m0[_347].z * _240)) + (cbPrevObjMatrix._m0[_394].z * _241), fma(POSITION.y, (((cbPrevObjMatrix._m0[_300].y * _239) + (cbPrevObjMatrix._m0[_265].y * _238)) + (cbPrevObjMatrix._m0[_347].y * _240)) + (cbPrevObjMatrix._m0[_394].y * _241), ((((cbPrevObjMatrix._m0[_300].x * _239) + (cbPrevObjMatrix._m0[_265].x * _238)) + (cbPrevObjMatrix._m0[_347].x * _240)) + (cbPrevObjMatrix._m0[_394].x * _241)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _669 = fma(_206, _419, fma(_205, _416, _413 * _203));
    float _672 = fma(_206, _420, fma(_205, _417, _414 * _203));
    float _675 = fma(_206, _421, fma(_205, _418, _415 * _203));
    precise float _691 = _431 - cbSceneParam._m0[3u].x;
    precise float _692 = _438 - cbSceneParam._m0[3u].y;
    precise float _693 = _445 - cbSceneParam._m0[3u].z;
    precise float _721 = _691 * cbSceneParam._m0[24u].x;
    precise float _722 = _692 * cbSceneParam._m0[24u].y;
    precise float _723 = _722 + _721;
    precise float _724 = _693 * cbSceneParam._m0[24u].z;
    precise float _725 = _724 + _723;
    precise float _726 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _727 = _726 + _725;
    precise float _728 = _691 * cbSceneParam._m0[25u].x;
    precise float _729 = _692 * cbSceneParam._m0[25u].y;
    precise float _730 = _729 + _728;
    precise float _731 = _693 * cbSceneParam._m0[25u].z;
    precise float _732 = _731 + _730;
    precise float _733 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _734 = _733 + _732;
    precise float _735 = _691 * cbSceneParam._m0[26u].x;
    precise float _736 = _692 * cbSceneParam._m0[26u].y;
    precise float _737 = _736 + _735;
    precise float _738 = _693 * cbSceneParam._m0[26u].z;
    precise float _739 = _738 + _737;
    precise float _740 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _741 = _740 + _739;
    precise float _742 = _691 * cbSceneParam._m0[27u].x;
    precise float _743 = _692 * cbSceneParam._m0[27u].y;
    precise float _744 = _743 + _742;
    precise float _745 = _693 * cbSceneParam._m0[27u].z;
    precise float _746 = _745 + _744;
    precise float _747 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _748 = _747 + _746;
    gl_Position.x = _727;
    gl_Position.y = _734;
    gl_Position.z = _741;
    gl_Position.w = _748;
    POSITION_1.x = _727;
    POSITION_1.y = _734;
    POSITION_1.z = _741;
    POSITION_1.w = _748;
    NORMAL_1.x = _669;
    NORMAL_1.y = _672;
    NORMAL_1.z = _675;
    NORMAL_1.w = float(_230);
    TANGENT_1.x = fma(_217, _419, fma(_216, _416, _413 * _215));
    TANGENT_1.y = fma(_217, _420, fma(_216, _417, _414 * _215));
    TANGENT_1.z = fma(_217, _421, fma(_216, _418, _415 * _215));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_7.x = _727;
    TEXCOORD_7.y = _734;
    TEXCOORD_7.z = _741;
    TEXCOORD_7.w = _748;
    TEXCOORD_8.x = fma(_622, cbSceneParam._m0[29u].z, fma(_621, cbSceneParam._m0[29u].y, _620 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_622, cbSceneParam._m0[30u].z, fma(_621, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _620)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_622, cbSceneParam._m0[31u].z, fma(_621, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _620)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_622, cbSceneParam._m0[32u].z, fma(_621, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _620)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _669;
    TEXCOORD_9.y = _672;
    TEXCOORD_9.z = _675;
    gl_ClipDistance[0u] = dot(vec4(_727, _734, _741, _748), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_727, _734, _741, _748), vec4(cbInstanceData._m0[_243 + 3u]));
}


