#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;
layout(location = 5) out vec2 TEXCOORD_4;

void main()
{
    uint _82 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _170 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _422;
    float _423;
    float _424;
    float _425;
    float _426;
    float _427;
    float _428;
    float _429;
    float _430;
    float _431;
    float _432;
    float _433;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _206 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        precise float _210 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _215 = isnan(_210) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _210 : max(0.001000000047497451305389404296875, _210));
        precise float _217 = BLENDWEIGHT.x / _215;
        precise float _218 = BLENDWEIGHT.y / _215;
        precise float _219 = BLENDWEIGHT.z / _215;
        precise float _220 = BLENDWEIGHT.w / _215;
        uvec4 _227 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_206)).x * 13u) + 4u]);
        uint _228 = _227.x;
        uint _230 = (_228 + uint(float(BLENDINDICES.x))) * 3u;
        uint _237 = _230 + 1u;
        uint _244 = _230 + 2u;
        precise float _251 = _217 * cbObjMatrix._m0[_230].x;
        precise float _252 = _217 * cbObjMatrix._m0[_237].x;
        precise float _253 = _217 * cbObjMatrix._m0[_244].x;
        precise float _254 = _217 * cbObjMatrix._m0[_230].y;
        precise float _255 = _217 * cbObjMatrix._m0[_237].y;
        precise float _256 = _217 * cbObjMatrix._m0[_244].y;
        precise float _257 = _217 * cbObjMatrix._m0[_230].z;
        precise float _258 = _217 * cbObjMatrix._m0[_237].z;
        precise float _259 = _217 * cbObjMatrix._m0[_244].z;
        precise float _260 = _217 * cbObjMatrix._m0[_230].w;
        precise float _261 = _217 * cbObjMatrix._m0[_237].w;
        precise float _262 = _217 * cbObjMatrix._m0[_244].w;
        uint _265 = (_228 + uint(float(BLENDINDICES.y))) * 3u;
        uint _272 = _265 + 1u;
        uint _279 = _265 + 2u;
        precise float _286 = _218 * cbObjMatrix._m0[_265].x;
        precise float _287 = _218 * cbObjMatrix._m0[_272].x;
        precise float _288 = _218 * cbObjMatrix._m0[_279].x;
        precise float _289 = _218 * cbObjMatrix._m0[_265].y;
        precise float _290 = _218 * cbObjMatrix._m0[_272].y;
        precise float _291 = _218 * cbObjMatrix._m0[_279].y;
        precise float _292 = _218 * cbObjMatrix._m0[_265].z;
        precise float _293 = _218 * cbObjMatrix._m0[_272].z;
        precise float _294 = _218 * cbObjMatrix._m0[_279].z;
        precise float _295 = _218 * cbObjMatrix._m0[_265].w;
        precise float _296 = _218 * cbObjMatrix._m0[_272].w;
        precise float _297 = _218 * cbObjMatrix._m0[_279].w;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        precise float _305 = _258 + _293;
        precise float _306 = _259 + _294;
        precise float _307 = _260 + _295;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        uint _312 = (_228 + uint(float(BLENDINDICES.z))) * 3u;
        uint _319 = _312 + 1u;
        uint _326 = _312 + 2u;
        precise float _333 = _219 * cbObjMatrix._m0[_312].x;
        precise float _334 = _219 * cbObjMatrix._m0[_319].x;
        precise float _335 = _219 * cbObjMatrix._m0[_326].x;
        precise float _336 = _219 * cbObjMatrix._m0[_312].y;
        precise float _337 = _219 * cbObjMatrix._m0[_319].y;
        precise float _338 = _219 * cbObjMatrix._m0[_326].y;
        precise float _339 = _219 * cbObjMatrix._m0[_312].z;
        precise float _340 = _219 * cbObjMatrix._m0[_319].z;
        precise float _341 = _219 * cbObjMatrix._m0[_326].z;
        precise float _342 = _219 * cbObjMatrix._m0[_312].w;
        precise float _343 = _219 * cbObjMatrix._m0[_319].w;
        precise float _344 = _219 * cbObjMatrix._m0[_326].w;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        uint _359 = (_228 + uint(float(BLENDINDICES.w))) * 3u;
        uint _366 = _359 + 1u;
        uint _373 = _359 + 2u;
        precise float _380 = _220 * cbObjMatrix._m0[_359].x;
        precise float _381 = _220 * cbObjMatrix._m0[_366].x;
        precise float _382 = _220 * cbObjMatrix._m0[_373].x;
        precise float _383 = _220 * cbObjMatrix._m0[_359].y;
        precise float _384 = _220 * cbObjMatrix._m0[_366].y;
        precise float _385 = _220 * cbObjMatrix._m0[_373].y;
        precise float _386 = _220 * cbObjMatrix._m0[_359].z;
        precise float _387 = _220 * cbObjMatrix._m0[_366].z;
        precise float _388 = _220 * cbObjMatrix._m0[_373].z;
        precise float _389 = _220 * cbObjMatrix._m0[_359].w;
        precise float _390 = _220 * cbObjMatrix._m0[_366].w;
        precise float _391 = _220 * cbObjMatrix._m0[_373].w;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        precise float _401 = _354 + _389;
        precise float _402 = _355 + _390;
        precise float _403 = _356 + _391;
        _422 = _392;
        _423 = _395;
        _424 = _398;
        _425 = _401;
        _426 = _393;
        _427 = _396;
        _428 = _399;
        _429 = _402;
        _430 = _394;
        _431 = _397;
        _432 = _400;
        _433 = _403;
    }
    else
    {
        _422 = cbvModelParam._m0[0u].x;
        _423 = cbvModelParam._m0[0u].y;
        _424 = cbvModelParam._m0[0u].z;
        _425 = cbvModelParam._m0[0u].w;
        _426 = cbvModelParam._m0[1u].x;
        _427 = cbvModelParam._m0[1u].y;
        _428 = cbvModelParam._m0[1u].z;
        _429 = cbvModelParam._m0[1u].w;
        _430 = cbvModelParam._m0[2u].x;
        _431 = cbvModelParam._m0[2u].y;
        _432 = cbvModelParam._m0[2u].z;
        _433 = cbvModelParam._m0[2u].w;
    }
    precise float _434 = POSITION.x * _422;
    precise float _435 = POSITION.y * _423;
    precise float _436 = _435 + _434;
    precise float _437 = POSITION.z * _424;
    precise float _438 = _437 + _436;
    precise float _439 = 1.0 * _425;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.x * _426;
    precise float _442 = POSITION.y * _427;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.z * _428;
    precise float _445 = _444 + _443;
    precise float _446 = 1.0 * _429;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.x * _430;
    precise float _449 = POSITION.y * _431;
    precise float _450 = _449 + _448;
    precise float _451 = POSITION.z * _432;
    precise float _452 = _451 + _450;
    precise float _453 = 1.0 * _433;
    precise float _454 = _453 + _452;
    uint _468 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
    uvec4 _470 = texelFetch(g_InstanceIndexBuffer, int(_468));
    uint _471 = _470.x;
    precise float _487 = _440 - cbSceneParam._m0[3u].x;
    precise float _488 = _447 - cbSceneParam._m0[3u].y;
    precise float _489 = _454 - cbSceneParam._m0[3u].z;
    precise float _517 = _487 * cbSceneParam._m0[24u].x;
    precise float _518 = _488 * cbSceneParam._m0[24u].y;
    precise float _519 = _518 + _517;
    precise float _520 = _489 * cbSceneParam._m0[24u].z;
    precise float _521 = _520 + _519;
    precise float _522 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _523 = _522 + _521;
    precise float _524 = _487 * cbSceneParam._m0[25u].x;
    precise float _525 = _488 * cbSceneParam._m0[25u].y;
    precise float _526 = _525 + _524;
    precise float _527 = _489 * cbSceneParam._m0[25u].z;
    precise float _528 = _527 + _526;
    precise float _529 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _530 = _529 + _528;
    precise float _531 = _487 * cbSceneParam._m0[26u].x;
    precise float _532 = _488 * cbSceneParam._m0[26u].y;
    precise float _533 = _532 + _531;
    precise float _534 = _489 * cbSceneParam._m0[26u].z;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _537 = _536 + _535;
    precise float _538 = _487 * cbSceneParam._m0[27u].x;
    precise float _539 = _488 * cbSceneParam._m0[27u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _489 * cbSceneParam._m0[27u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _544 = _543 + _542;
    gl_Position.x = _523;
    gl_Position.y = _530;
    gl_Position.z = _537;
    gl_Position.w = _544;
    POSITION_1.x = _523;
    POSITION_1.y = _530;
    POSITION_1.z = _537;
    POSITION_1.w = _544;
    NORMAL_1.x = fma(_173, _424, fma(_172, _423, _422 * _170));
    NORMAL_1.y = fma(_173, _428, fma(_172, _427, _426 * _170));
    NORMAL_1.z = fma(_173, _432, fma(_172, _431, _430 * _170));
    NORMAL_1.w = float(_471);
    TANGENT_1.x = fma(_182, _424, fma(_181, _423, _422 * _180));
    TANGENT_1.y = fma(_182, _428, fma(_181, _427, _426 * _180));
    TANGENT_1.z = fma(_182, _432, fma(_181, _431, _430 * _180));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _537;
    TEXCOORD_4.y = _544;
    gl_ClipDistance[0u] = dot(vec4(_523, _530, _537, _544), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_523, _530, _537, _544), vec4(cbInstanceData._m0[(_471 * 13u) + 3u]));
}


