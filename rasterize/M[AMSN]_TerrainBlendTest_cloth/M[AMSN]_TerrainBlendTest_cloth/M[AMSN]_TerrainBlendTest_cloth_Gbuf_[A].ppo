#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    float _127;
    float _128;
    float _129;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _127 = (-0.0) - _120;
        _128 = (-0.0) - _121;
        _129 = (-0.0) - _122;
    }
    else
    {
        _127 = _120;
        _128 = _121;
        _129 = _122;
    }
    vec4 _152 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _155 = _152.x;
    float _182 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _155)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _155))) - POSITION_1.w) / cbMtdParam._m0[11u].x;
    float _449 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _185 = 1.0 - (isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0)));
    float _460 = isnan(0.0) ? _185 : (isnan(_185) ? 0.0 : max(_185, 0.0));
    float _186 = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    float _189 = 3.0 - (_186 * 2.0);
    float _194 = _186 * _186;
    float _201 = ((_194 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[10u].x)) * _189) + cbMtdParam._m0[10u].x;
    float _202 = ((_194 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[10u].y)) * _189) + cbMtdParam._m0[10u].y;
    float _203 = ((_194 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[10u].z)) * _189) + cbMtdParam._m0[10u].z;
    float _207 = inversesqrt(dot(vec3(_127, _128, _129), vec3(_127, _128, _129)));
    float _471 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _208 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    float _482 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _209 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
    float _493 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _210 = isnan(1.0) ? _493 : (isnan(_493) ? 1.0 : min(_493, 1.0));
    uint _212 = uint(roundEven(NORMAL.w));
    float _253 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _263 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _253);
    float _264 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _253);
    float _265 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _253);
    vec4 _270 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _272 = _270.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _333 = sqrt(((_263 * _263) + (_264 * _264)) + (_265 * _265));
        float _340 = (cbMatDynParam._m0[5u].x * _333) + cbMatDynParam._m0[5u].y;
        float _504 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
        float _341 = isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0));
        float _345 = (cbMatDynParam._m0[5u].z * _333) + cbMatDynParam._m0[5u].w;
        float _515 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0))) - _341)) + _341) < ((_272 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _374;
    uint _291;
    vec4 _296;
    float _303;
    float _304;
    float _305;
    float _309;
    vec4 _313;
    float _315;
    float _316;
    bool _327;
    for (;;)
    {
        _291 = _212 * 13u;
        _296 = cbInstanceData._m0[(_291 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _300 = (cbMtdParam._m0[0u].x * _208) * _296.x;
        float _301 = (cbMtdParam._m0[0u].y * _209) * _296.y;
        float _302 = (cbMtdParam._m0[0u].z * _210) * _296.z;
        float _526 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        _303 = isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0));
        float _537 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        _304 = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
        float _548 = isnan(0.0) ? _302 : (isnan(_302) ? 0.0 : max(_302, 0.0));
        _305 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
        _309 = cbInstanceData._m0[_291 + 6u].w;
        float _310 = _272 + (-0.5);
        _313 = cbMtdParam._m0[1u];
        _315 = _313.y * _310;
        _316 = _310 * 0.999000012874603271484375;
        _327 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_327)
        {
            if ((cbInstanceData._m0[_291 + 7u].x + _316) < 0.5)
            {
                _374 = true;
                break;
            }
        }
        if ((_296.w < 1.0) && ((_296.w + _316) < 0.5))
        {
            _374 = true;
            break;
        }
        if ((_315 + 1.0) < _313.x)
        {
            _374 = true;
            break;
        }
        _374 = false;
        break;
    }
    if (_374)
    {
        discard_state = true;
    }
    bool _400 = cbMtdParam._m0[1u].z != 0.0;
    float _401 = _400 ? _309 : 0.0;
    SV_Target.x = ((_127 * 0.5) * _207) + 0.500488758087158203125;
    SV_Target.y = ((_128 * 0.5) * _207) + 0.500488758087158203125;
    SV_Target.z = ((_129 * 0.5) * _207) + 0.500488758087158203125;
    SV_Target.w = _401;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _400 ? _309 : TEXCOORD.z;
    SV_Target_2.x = _303;
    SV_Target_2.y = _304;
    SV_Target_2.z = _305;
    SV_Target_2.w = _400 ? _309 : (float(floatBitsToUint(cbInstanceData._m0[_291 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _401;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _401;
    discard_exit();
}


