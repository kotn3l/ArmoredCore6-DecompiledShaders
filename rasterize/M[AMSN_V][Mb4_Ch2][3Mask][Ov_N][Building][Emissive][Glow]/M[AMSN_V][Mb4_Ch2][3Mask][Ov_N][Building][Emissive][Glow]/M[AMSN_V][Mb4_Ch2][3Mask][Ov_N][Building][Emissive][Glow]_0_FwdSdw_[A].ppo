#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec4 TEXCOORD_10;
layout(location = 8) in vec4 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1846;
float _4514;
float _4515;
float _4516;
float _4517;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _247 = _246 * _238;
    float _248 = _246 * _239;
    float _249 = _246 * _240;
    float _259 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _260 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _261 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _265 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _266 = _265 * _259;
    float _267 = _265 * _260;
    float _268 = _265 * _261;
    float _272 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _273 = _272 * NORMAL.x;
    float _274 = _272 * NORMAL.y;
    float _275 = _272 * NORMAL.z;
    float _279 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _280 = _279 * TANGENT.x;
    float _281 = _279 * TANGENT.y;
    float _282 = _279 * TANGENT.z;
    float _286 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _287 = _286 * TANGENT_2.x;
    float _288 = _286 * TANGENT_2.y;
    float _289 = _286 * TANGENT_2.z;
    float _294;
    float _295;
    float _296;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _294 = (-0.0) - _273;
        _295 = (-0.0) - _274;
        _296 = (-0.0) - _275;
    }
    else
    {
        _294 = _273;
        _295 = _274;
        _296 = _275;
    }
    vec4 _316 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _328 = 1.0 - ((1.0 - _316.z) * 1.39999997615814208984375);
    float _4526 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _329 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _331 = 1.0 - ((1.0 - _316.x) * 1.39999997615814208984375);
    float _4537 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _332 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    float _334 = 1.0 - ((1.0 - _316.y) * 1.39999997615814208984375);
    float _4548 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _335 = isnan(1.0) ? _4548 : (isnan(_4548) ? 1.0 : min(_4548, 1.0));
    float _337 = (_332 + _329) + _335;
    float _344 = (_337 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _345 = (_337 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _346 = (_337 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _371 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _380 = 1.0 - ((1.0 - _371.x) * 1.39999997615814208984375);
    float _4559 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _381 = isnan(1.0) ? _4559 : (isnan(_4559) ? 1.0 : min(_4559, 1.0));
    float _391 = (_381 * ((cbMtdParam._m0[9u].x - _344) + ((1.0 - cbMtdParam._m0[9u].x) * _337))) + _344;
    float _392 = (_381 * ((cbMtdParam._m0[9u].y - _345) + ((1.0 - cbMtdParam._m0[9u].y) * _337))) + _345;
    float _393 = (_381 * ((cbMtdParam._m0[9u].z - _346) + ((1.0 - cbMtdParam._m0[9u].z) * _337))) + _346;
    float _406 = 1.0 - ((1.0 - _371.y) * 1.39999997615814208984375);
    float _4570 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _407 = isnan(1.0) ? _4570 : (isnan(_4570) ? 1.0 : min(_4570, 1.0));
    float _417 = (((cbMtdParam._m0[17u].x - _391) + ((1.0 - cbMtdParam._m0[17u].x) * _337)) * _407) + _391;
    float _418 = (((cbMtdParam._m0[17u].y - _392) + ((1.0 - cbMtdParam._m0[17u].y) * _337)) * _407) + _392;
    float _419 = (((cbMtdParam._m0[17u].z - _393) + ((1.0 - cbMtdParam._m0[17u].z) * _337)) * _407) + _393;
    float _433 = 1.0 - ((1.0 - _371.z) * 1.39999997615814208984375);
    float _4581 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _434 = isnan(1.0) ? _4581 : (isnan(_4581) ? 1.0 : min(_4581, 1.0));
    float _465 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w)).x * cbMtdParam._m0[25u].z;
    float _479 = ((cbMtdParam._m0[23u].y * (-1.39999997615814208984375)) * ((TEXCOORD_13.w - _465) + (cbMtdParam._m0[24u].x * TEXCOORD_13.w))) + 1.0;
    float _4592 = isnan(0.0) ? _479 : (isnan(_479) ? 0.0 : max(_479, 0.0));
    float _481 = 1.0 - (isnan(1.0) ? _4592 : (isnan(_4592) ? 1.0 : min(_4592, 1.0)));
    float _489 = ((cbMtdParam._m0[23u].x * (-1.39999997615814208984375)) * ((TEXCOORD_10.w - _465) + (cbMtdParam._m0[24u].y * TEXCOORD_10.w))) + 1.0;
    float _4603 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _491 = 1.0 - (isnan(1.0) ? _4603 : (isnan(_4603) ? 1.0 : min(_4603, 1.0)));
    vec4 _509 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _511 = _509.x;
    float _512 = _509.y;
    float _513 = _509.z;
    float _514 = cbMtdParam._m0[10u].x * _491;
    float _516 = cbMtdParam._m0[10u].y * _491;
    float _518 = cbMtdParam._m0[10u].z * _491;
    float _535 = ((_511 * (cbMtdParam._m0[16u].x - _514)) * _481) + (_514 * _511);
    float _536 = ((_512 * (cbMtdParam._m0[16u].y - _516)) * _481) + (_516 * _512);
    float _537 = ((_513 * (cbMtdParam._m0[16u].z - _518)) * _481) + (_518 * _513);
    float _560 = cbMtdParam._m0[23u].w * (-1.39999997615814208984375);
    float _564 = (_560 * ((TEXCOORD_7.x - _465) + (cbMtdParam._m0[22u].w * TEXCOORD_7.x))) + 1.0;
    float _565 = (_560 * ((TEXCOORD_7.y - _465) + (cbMtdParam._m0[22u].w * TEXCOORD_7.y))) + 1.0;
    float _566 = (_560 * ((TEXCOORD_7.z - _465) + (cbMtdParam._m0[22u].w * TEXCOORD_7.z))) + 1.0;
    float _4614 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _4625 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
    float _4636 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _575 = (1.0 - cbMtdParam._m0[25u].x) + _332;
    float _578 = _575 * (1.0 - (isnan(1.0) ? _4614 : (isnan(_4614) ? 1.0 : min(_4614, 1.0))));
    float _579 = _575 * (1.0 - (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0))));
    float _580 = ((_332 + 1.0) - cbMtdParam._m0[25u].x) * (1.0 - (isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))));
    float _590 = _491 + _481;
    float _591 = _590 + _578;
    float _592 = _590 + _579;
    float _593 = _590 + _580;
    float _594 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _595 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _596 = isnan(0.0) ? _593 : (isnan(_593) ? 0.0 : max(_593, 0.0));
    float _597 = isnan(1.0) ? _594 : (isnan(_594) ? 1.0 : min(_594, 1.0));
    float _598 = isnan(1.0) ? _595 : (isnan(_595) ? 1.0 : min(_595, 1.0));
    float _599 = isnan(1.0) ? _596 : (isnan(_596) ? 1.0 : min(_596, 1.0));
    vec4 _617 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _622 = _617.w;
    float _623 = _617.x * cbMtdParam._m0[12u].x;
    float _624 = _617.y * cbMtdParam._m0[12u].y;
    float _625 = _617.z * cbMtdParam._m0[12u].z;
    vec4 _643 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _657 = (((_643.x * cbMtdParam._m0[13u].x) - _623) * _332) + _623;
    float _658 = (((_643.y * cbMtdParam._m0[13u].y) - _624) * _332) + _624;
    float _659 = (((_643.z * cbMtdParam._m0[13u].z) - _625) * _332) + _625;
    vec4 _678 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _692 = (((_678.x * cbMtdParam._m0[14u].x) - _657) * _335) + _657;
    float _693 = (((_678.y * cbMtdParam._m0[14u].y) - _658) * _335) + _658;
    float _694 = (((_678.z * cbMtdParam._m0[14u].z) - _659) * _335) + _659;
    vec4 _711 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _725 = (((_711.x * cbMtdParam._m0[15u].x) - _692) * _329) + _692;
    float _726 = (((_711.y * cbMtdParam._m0[15u].y) - _693) * _329) + _693;
    float _727 = (((_711.z * cbMtdParam._m0[15u].z) - _694) * _329) + _694;
    float _747 = ((_725 - (_725 * _597)) + (((_597 * 4.55000019073486328125) * ((_578 * ((cbMtdParam._m0[11u].x * _511) - _535)) + _535)) * _725)) * ((((cbMtdParam._m0[18u].x - _417) + ((1.0 - cbMtdParam._m0[18u].x) * _337)) * _434) + _417);
    float _748 = ((_726 - (_726 * _598)) + (((_598 * 4.55000019073486328125) * ((_579 * ((cbMtdParam._m0[11u].y * _512) - _536)) + _536)) * _726)) * ((((cbMtdParam._m0[18u].y - _418) + ((1.0 - cbMtdParam._m0[18u].y) * _337)) * _434) + _418);
    float _749 = ((_727 - (_599 * _727)) + (((_599 * 4.55000019073486328125) * ((_580 * ((cbMtdParam._m0[11u].z * _513) - _537)) + _537)) * _727)) * ((((cbMtdParam._m0[18u].z - _419) + ((1.0 - cbMtdParam._m0[18u].z) * _337)) * _434) + _419);
    float _760 = ((cbMtdParam._m0[22u].z - cbMtdParam._m0[25u].w) * _597) + cbMtdParam._m0[25u].w;
    float _763 = ((cbMtdParam._m0[20u].x - _760) * _332) + _760;
    float _766 = ((cbMtdParam._m0[20u].y - _763) * _335) + _763;
    float _769 = ((cbMtdParam._m0[20u].z - _766) * _329) + _766;
    vec4 _781 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _785 = _781.z;
    float _789 = (_781.x * 2.0) + (-1.0);
    float _791 = (_781.y * 2.0) + (-1.0);
    float _792 = dot(vec2(_789, _791), vec2(_789, _791));
    float _4677 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _797 = sqrt(1.0 - (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0))));
    float _800 = fma(_797, _294, fma(_791, _287, _789 * _266));
    float _803 = fma(_797, _295, fma(_791, _288, _789 * _267));
    float _806 = fma(_797, _296, fma(_791, _289, _789 * _268));
    float _810 = inversesqrt(dot(vec3(_800, _803, _806), vec3(_800, _803, _806)));
    float _811 = _810 * _800;
    float _812 = _810 * _803;
    float _813 = _810 * _806;
    vec4 _826 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _832 = (_826.x * 2.0) + (-1.0);
    float _833 = (_826.y * 2.0) + (-1.0);
    float _834 = dot(vec2(_832, _833), vec2(_832, _833));
    float _4688 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
    float _839 = sqrt(1.0 - (isnan(1.0) ? _4688 : (isnan(_4688) ? 1.0 : min(_4688, 1.0))));
    float _842 = fma(_839, _294, fma(_833, _287, _832 * _266));
    float _845 = fma(_839, _295, fma(_833, _288, _832 * _267));
    float _848 = fma(_839, _296, fma(_833, _289, _832 * _268));
    float _852 = inversesqrt(dot(vec3(_842, _845, _848), vec3(_842, _845, _848)));
    float _853 = _852 * _842;
    float _854 = _852 * _845;
    float _855 = _852 * _848;
    float _858 = fma(_855, _249, fma(_854, _248, _853 * _247));
    float _861 = fma(_855, _282, fma(_854, _281, _853 * _280));
    float _864 = fma(_855, _296, fma(_854, _295, _853 * _294));
    float _868 = inversesqrt(dot(vec3(_858, _861, _864), vec3(_858, _861, _864)));
    vec4 _882 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _888 = (_882.x * 2.0) + (-1.0);
    float _889 = (_882.y * 2.0) + (-1.0);
    float _890 = dot(vec2(_888, _889), vec2(_888, _889));
    float _4699 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _895 = sqrt(1.0 - (isnan(1.0) ? _4699 : (isnan(_4699) ? 1.0 : min(_4699, 1.0))));
    float _898 = fma(_895, _294, fma(_889, _287, _888 * _266));
    float _901 = fma(_895, _295, fma(_889, _288, _888 * _267));
    float _904 = fma(_895, _296, fma(_889, _289, _888 * _268));
    float _908 = inversesqrt(dot(vec3(_898, _901, _904), vec3(_898, _901, _904)));
    float _909 = _908 * _898;
    float _910 = _908 * _901;
    float _911 = _908 * _904;
    float _914 = fma(_911, _249, fma(_910, _248, _909 * _247));
    float _917 = fma(_911, _282, fma(_910, _281, _909 * _280));
    float _920 = fma(_911, _296, fma(_910, _295, _909 * _294));
    float _924 = inversesqrt(dot(vec3(_914, _917, _920), vec3(_914, _917, _920)));
    vec4 _937 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _943 = (_937.x * 2.0) + (-1.0);
    float _944 = (_937.y * 2.0) + (-1.0);
    float _945 = dot(vec2(_943, _944), vec2(_943, _944));
    float _4710 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
    float _950 = sqrt(1.0 - (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0))));
    float _953 = fma(_950, _294, fma(_944, _287, _943 * _266));
    float _956 = fma(_950, _295, fma(_944, _288, _943 * _267));
    float _959 = fma(_950, _296, fma(_944, _289, _943 * _268));
    float _963 = inversesqrt(dot(vec3(_953, _956, _959), vec3(_953, _956, _959)));
    float _964 = _963 * _953;
    float _965 = _963 * _956;
    float _966 = _963 * _959;
    float _969 = fma(_966, _249, fma(_965, _248, _964 * _247));
    float _972 = fma(_966, _282, fma(_965, _281, _964 * _280));
    float _975 = fma(_966, _296, fma(_965, _295, _964 * _294));
    float _979 = inversesqrt(dot(vec3(_969, _972, _975), vec3(_969, _972, _975)));
    float _985 = fma(_813, _249, fma(_812, _248, _811 * _247));
    float _988 = fma(_813, _282, fma(_812, _281, _811 * _280));
    float _991 = fma(_813, _296, fma(_812, _295, _811 * _294));
    float _995 = inversesqrt(dot(vec3(_985, _988, _991), vec3(_985, _988, _991)));
    float _996 = _995 * _985;
    float _997 = _995 * _988;
    float _998 = _995 * _991;
    float _1005 = (((_979 * _969) - _996) * _332) + _996;
    float _1006 = (((_979 * _972) - _997) * _332) + _997;
    float _1007 = (((_979 * _975) - _998) * _332) + _998;
    vec4 _1020 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1026 = (_1020.x * 2.0) + (-1.0);
    float _1027 = (_1020.y * 2.0) + (-1.0);
    float _1028 = dot(vec2(_1026, _1027), vec2(_1026, _1027));
    float _4721 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
    float _1033 = sqrt(1.0 - (isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0))));
    float _1036 = fma(_1033, _294, fma(_1027, _287, _1026 * _266));
    float _1039 = fma(_1033, _295, fma(_1027, _288, _1026 * _267));
    float _1042 = fma(_1033, _296, fma(_1027, _289, _1026 * _268));
    float _1046 = inversesqrt(dot(vec3(_1036, _1039, _1042), vec3(_1036, _1039, _1042)));
    float _1047 = _1046 * _1036;
    float _1048 = _1046 * _1039;
    float _1049 = _1046 * _1042;
    float _1052 = fma(_1049, _249, fma(_1048, _248, _1047 * _247));
    float _1055 = fma(_1049, _282, fma(_1048, _281, _1047 * _280));
    float _1058 = fma(_1049, _296, fma(_1048, _295, _1047 * _294));
    float _1062 = inversesqrt(dot(vec3(_1052, _1055, _1058), vec3(_1052, _1055, _1058)));
    float _1072 = (((_1062 * _1052) - _1005) * _335) + _1005;
    float _1073 = (((_1062 * _1055) - _1006) * _335) + _1006;
    float _1074 = (((_1062 * _1058) - _1007) * _335) + _1007;
    vec4 _1087 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _1093 = (_1087.x * 2.0) + (-1.0);
    float _1094 = (_1087.y * 2.0) + (-1.0);
    float _1095 = dot(vec2(_1093, _1094), vec2(_1093, _1094));
    float _4732 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
    float _1100 = sqrt(1.0 - (isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0))));
    float _1103 = fma(_1100, _294, fma(_1094, _287, _1093 * _266));
    float _1106 = fma(_1100, _295, fma(_1094, _288, _1093 * _267));
    float _1109 = fma(_1100, _296, fma(_1094, _289, _1093 * _268));
    float _1113 = inversesqrt(dot(vec3(_1103, _1106, _1109), vec3(_1103, _1106, _1109)));
    float _1114 = _1113 * _1103;
    float _1115 = _1113 * _1106;
    float _1116 = _1113 * _1109;
    float _1119 = fma(_1116, _249, fma(_1115, _248, _1114 * _247));
    float _1122 = fma(_1116, _282, fma(_1115, _281, _1114 * _280));
    float _1125 = fma(_1116, _296, fma(_1115, _295, _1114 * _294));
    float _1129 = inversesqrt(dot(vec3(_1119, _1122, _1125), vec3(_1119, _1122, _1125)));
    float _1139 = (((_1129 * _1125) - _1074) * _329) + _1074;
    vec4 _1151 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1157 = (_1151.x * 2.0) + (-1.0);
    float _1158 = (_1151.y * 2.0) + (-1.0);
    float _1159 = dot(vec2(_1157, _1158), vec2(_1157, _1158));
    float _4743 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
    float _1164 = sqrt(1.0 - (isnan(1.0) ? _4743 : (isnan(_4743) ? 1.0 : min(_4743, 1.0))));
    float _1167 = fma(_1164, _294, fma(_1158, _287, _1157 * _266));
    float _1170 = fma(_1164, _295, fma(_1158, _288, _1157 * _267));
    float _1173 = fma(_1164, _296, fma(_1158, _289, _1157 * _268));
    float _1177 = inversesqrt(dot(vec3(_1167, _1170, _1173), vec3(_1167, _1170, _1173)));
    float _1178 = _1177 * _1167;
    float _1179 = _1177 * _1170;
    float _1180 = _1177 * _1173;
    float _1183 = fma(_1180, _249, fma(_1179, _248, _1178 * _247));
    float _1186 = fma(_1180, _282, fma(_1179, _281, _1178 * _280));
    float _1189 = fma(_1180, _296, fma(_1179, _295, _1178 * _294));
    float _1193 = inversesqrt(dot(vec3(_1183, _1186, _1189), vec3(_1183, _1186, _1189)));
    vec4 _1231 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _1245 = (((((((_914 * _481) * _924) * cbMtdParam._m0[24u].z) + ((((_591 * _575) * _858) * _868) * cbMtdParam._m0[24u].w)) + _1072) + (((_1129 * _1119) - _1072) * _329)) + (((_1183 * _491) * _1193) * cbMtdParam._m0[23u].z)) + (((_1231.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1250 = (((((((_917 * _481) * _924) * cbMtdParam._m0[24u].z) + ((((_592 * _575) * _861) * _868) * cbMtdParam._m0[24u].w)) + _1073) + (((_1129 * _1122) - _1073) * _329)) + (((_1186 * _491) * _1193) * cbMtdParam._m0[23u].z)) + (((_1231.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1253 = fma(_1139, _294, fma(_1250, _280, _1245 * _247));
    float _1256 = fma(_1139, _295, fma(_1250, _281, _1245 * _248));
    float _1259 = fma(_1139, _296, fma(_1250, _282, _1245 * _249));
    float _1263 = inversesqrt(dot(vec3(_1253, _1256, _1259), vec3(_1253, _1256, _1259)));
    float _1264 = _1263 * _1253;
    float _1265 = _1263 * _1256;
    float _1266 = _1263 * _1259;
    float _4754 = isnan(0.0) ? _622 : (isnan(_622) ? 0.0 : max(_622, 0.0));
    float _1267 = isnan(1.0) ? _4754 : (isnan(_4754) ? 1.0 : min(_4754, 1.0));
    float _4765 = isnan(0.0) ? _785 : (isnan(_785) ? 0.0 : max(_785, 0.0));
    float _1268 = isnan(1.0) ? _4765 : (isnan(_4765) ? 1.0 : min(_4765, 1.0));
    float _4776 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _4787 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    float _4798 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _4809 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _1272 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
    float _1288 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1328 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1338 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1328);
    float _1339 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1328);
    float _1340 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1328);
    float _1344 = inversesqrt(dot(vec3(_1338, _1339, _1340), vec3(_1338, _1339, _1340)));
    float _1345 = _1338 * _1344;
    float _1346 = _1339 * _1344;
    float _1347 = _1340 * _1344;
    vec4 _1352 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1354 = _1352.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1526 = sqrt(((_1338 * _1338) + (_1339 * _1339)) + (_1340 * _1340));
        float _1532 = (cbMatDynParam._m0[5u].x * _1526) + cbMatDynParam._m0[5u].y;
        float _4820 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1533 = isnan(1.0) ? _4820 : (isnan(_4820) ? 1.0 : min(_4820, 1.0));
        float _1537 = (cbMatDynParam._m0[5u].z * _1526) + cbMatDynParam._m0[5u].w;
        float _4831 = isnan(0.0) ? _1537 : (isnan(_1537) ? 0.0 : max(_1537, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4831 : (isnan(_4831) ? 1.0 : min(_4831, 1.0))) - _1533)) + _1533) < ((_1354 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1365 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1366 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1384 = fma(_1266, cbSceneParam._m0[5u].z, fma(_1265, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1264));
    float _1387 = fma(_1266, cbSceneParam._m0[6u].z, fma(_1265, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1264));
    float _1390 = fma(_1266, cbSceneParam._m0[7u].z, fma(_1265, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1264));
    uint _1403 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1404 = _1403 + 9u;
    uint _1405 = _1404 + uint(cbMatDynParam._m0[0u].w);
    float _1411 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4776 : (isnan(_4776) ? 1.0 : min(_4776, 1.0)))) * cbInstanceData._m0[_1405].x;
    float _1412 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0)))) * cbInstanceData._m0[_1405].y;
    float _1413 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4798 : (isnan(_4798) ? 1.0 : min(_4798, 1.0)))) * cbInstanceData._m0[_1405].z;
    float _4842 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
    float _1414 = isnan(1.0) ? _4842 : (isnan(_4842) ? 1.0 : min(_4842, 1.0));
    float _4853 = isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0));
    float _1415 = isnan(1.0) ? _4853 : (isnan(_4853) ? 1.0 : min(_4853, 1.0));
    float _4864 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
    float _1416 = isnan(1.0) ? _4864 : (isnan(_4864) ? 1.0 : min(_4864, 1.0));
    float _1417 = 1.0 - _1272;
    float _1418 = _1414 * _1417;
    float _1419 = _1415 * _1417;
    float _1420 = _1416 * _1417;
    float _1425 = (_1414 + (-0.039999999105930328369140625)) * _1272;
    float _1426 = (_1415 + (-0.039999999105930328369140625)) * _1272;
    float _1427 = (_1416 + (-0.039999999105930328369140625)) * _1272;
    float _1428 = _1425 + 0.039999999105930328369140625;
    float _1430 = _1426 + 0.039999999105930328369140625;
    float _1431 = _1427 + 0.039999999105930328369140625;
    vec4 _1440 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1365, cbSceneParam._m0[86u].y * _1366));
    float _1443 = _1440.x * TEXCOORD_7.w;
    float _1444 = dot(vec3(_1264, _1265, _1266), vec3(_1345, _1346, _1347));
    float _1447 = _1444 * 2.0;
    float _1451 = (_1447 * _1264) - _1345;
    float _1452 = (_1447 * _1265) - _1346;
    float _1453 = (_1447 * _1266) - _1347;
    float _1457 = abs(dot(vec3(_1345, _1346, _1347), vec3(_1264, _1265, _1266)));
    float _4875 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
    float _1459 = sqrt(_1268);
    float _1472 = exp2((_1459 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4875 : (isnan(_4875) ? 1.0 : min(_4875, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1459 * 3.0));
    float _1478 = (1.0 - _1472) * ((_1459 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1479 = _1472 * _1459;
    float _1507 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1511 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1515 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1845;
    float _1847;
    float _1848;
    float _1849;
    float _1850;
    float _1851;
    float _1852;
    float _1853;
    float _1854;
    float _1855;
    float _1856;
    float _1857;
    float _1858;
    float _1859;
    float _1860;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1570 = fma(_1515, cbModelParam._m0[26u].z, fma(_1511, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1507));
        float _1574 = fma(_1515, cbModelParam._m0[27u].z, fma(_1511, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1507));
        float _1578 = fma(_1515, cbModelParam._m0[28u].z, fma(_1511, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1507));
        float _1603 = _1507 + _1264;
        float _1604 = _1511 + _1265;
        float _1605 = _1515 + _1266;
        float _1615 = fma(_1605, cbModelParam._m0[26u].z, fma(_1604, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1603)) - _1570;
        float _1616 = fma(_1605, cbModelParam._m0[27u].z, fma(_1604, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1603)) - _1574;
        float _1617 = fma(_1605, cbModelParam._m0[28u].z, fma(_1604, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1603)) - _1578;
        float _1621 = inversesqrt(dot(vec3(_1615, _1616, _1617), vec3(_1615, _1616, _1617)));
        float _1634 = ((_1621 * _1615) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1570 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1635 = ((_1621 * _1616) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1574 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1636 = ((_1621 * _1617) / cbModelParam._m0[34u].z) + ((((((_1578 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1639 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1634, _1635, _1636), 0.0);
        vec4 _1646 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1634, _1635, _1636), 0.0);
        vec4 _1653 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1634, _1635, _1636), 0.0);
        vec4 _1660 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1634, _1635, _1636), 0.0);
        float _1673 = exp2((_1639.w + (-0.5)) * 20.0) * 2.0;
        float _1674 = _1673 * (_1639.x + (-0.5));
        float _1675 = _1673 * (_1639.y + (-0.5));
        float _1676 = _1673 * (_1639.z + (-0.5));
        float _1683 = exp2((_1646.w + (-0.5)) * 20.0) * 2.0;
        float _1684 = _1683 * (_1646.x + (-0.5));
        float _1685 = _1683 * (_1646.y + (-0.5));
        float _1686 = _1683 * (_1646.z + (-0.5));
        float _1693 = exp2((_1653.w + (-0.5)) * 20.0) * 2.0;
        float _1694 = _1693 * (_1653.x + (-0.5));
        float _1695 = _1693 * (_1653.y + (-0.5));
        float _1696 = _1693 * (_1653.z + (-0.5));
        float _1703 = exp2((_1660.w + (-0.5)) * 20.0) * 2.0;
        float _1704 = _1703 * (_1660.x + (-0.5));
        float _1705 = _1703 * (_1660.y + (-0.5));
        float _1706 = _1703 * (_1660.z + (-0.5));
        float _1707 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        float _1708 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
        float _1709 = isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0));
        float _1710 = _1674 * 0.5;
        float _1711 = _1684 * 0.5;
        float _1712 = _1694 * 0.5;
        float _1713 = dot(vec3(_1710, _1711, _1712), vec3(_1710, _1711, _1712));
        float _1718 = (_1713 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1713);
        float _1727 = (dot(vec3(_1264, _1265, _1266), vec3(_1718 * _1710, _1718 * _1711, _1718 * _1712)) + 1.0) * 0.5;
        float _4901 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
        float _1737 = sqrt(((_1711 * _1711) + (_1710 * _1710)) + (_1712 * _1712)) / (_1707 + 9.9999997473787516355514526367188e-06);
        float _4912 = isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0));
        float _1738 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
        float _1739 = _1738 * 2.0;
        float _1743 = (1.0 - _1738) / (_1738 + 1.0);
        float _4923 = isnan(0.0) ? _1743 : (isnan(_1743) ? 0.0 : max(_1743, 0.0));
        float _1744 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
        float _1753 = ((((1.0 - _1744) * (_1739 + 2.0)) * exp2(log2(isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0))) * (_1739 + 1.0))) + _1744) * _1707;
        float _1754 = _1675 * 0.5;
        float _1755 = _1685 * 0.5;
        float _1756 = _1695 * 0.5;
        float _1757 = dot(vec3(_1754, _1755, _1756), vec3(_1754, _1755, _1756));
        float _1762 = (_1757 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1757);
        float _1770 = (dot(vec3(_1264, _1265, _1266), vec3(_1762 * _1754, _1762 * _1755, _1762 * _1756)) + 1.0) * 0.5;
        float _4934 = isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0));
        float _1779 = sqrt(((_1755 * _1755) + (_1754 * _1754)) + (_1756 * _1756)) / (_1708 + 9.9999997473787516355514526367188e-06);
        float _4945 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1780 = isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0));
        float _1781 = _1780 * 2.0;
        float _1785 = (1.0 - _1780) / (_1780 + 1.0);
        float _4956 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1786 = isnan(1.0) ? _4956 : (isnan(_4956) ? 1.0 : min(_4956, 1.0));
        float _1795 = ((((1.0 - _1786) * (_1781 + 2.0)) * exp2(log2(isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0))) * (_1781 + 1.0))) + _1786) * _1708;
        float _1796 = _1676 * 0.5;
        float _1797 = _1686 * 0.5;
        float _1798 = _1696 * 0.5;
        float _1799 = dot(vec3(_1796, _1797, _1798), vec3(_1796, _1797, _1798));
        float _1804 = (_1799 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1799);
        float _1812 = (dot(vec3(_1264, _1265, _1266), vec3(_1804 * _1796, _1804 * _1797, _1804 * _1798)) + 1.0) * 0.5;
        float _4967 = isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0));
        float _1821 = sqrt(((_1797 * _1797) + (_1796 * _1796)) + (_1798 * _1798)) / (_1709 + 9.9999997473787516355514526367188e-06);
        float _4978 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
        float _1822 = isnan(1.0) ? _4978 : (isnan(_4978) ? 1.0 : min(_4978, 1.0));
        float _1823 = _1822 * 2.0;
        float _1827 = (1.0 - _1822) / (_1822 + 1.0);
        float _4989 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1828 = isnan(1.0) ? _4989 : (isnan(_4989) ? 1.0 : min(_4989, 1.0));
        float _1837 = ((((1.0 - _1828) * (_1823 + 2.0)) * exp2(log2(isnan(1.0) ? _4967 : (isnan(_4967) ? 1.0 : min(_4967, 1.0))) * (_1823 + 1.0))) + _1828) * _1709;
        _1845 = _1676;
        _1847 = _1675;
        _1848 = _1674;
        _1849 = _1686;
        _1850 = _1685;
        _1851 = _1684;
        _1852 = _1696;
        _1853 = _1695;
        _1854 = _1694;
        _1855 = _1709;
        _1856 = _1708;
        _1857 = _1707;
        _1858 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1753 : (isnan(_1753) ? 0.0 : max(_1753, 0.0)));
        _1859 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0)));
        _1860 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1837 : (isnan(_1837) ? 0.0 : max(_1837, 0.0)));
    }
    else
    {
        _1845 = _1846;
        _1847 = _1846;
        _1848 = _1846;
        _1849 = _1846;
        _1850 = _1846;
        _1851 = _1846;
        _1852 = _1846;
        _1853 = _1846;
        _1854 = _1846;
        _1855 = _1846;
        _1856 = _1846;
        _1857 = _1846;
        _1858 = 0.0;
        _1859 = 0.0;
        _1860 = 0.0;
    }
    float _2158;
    float _2159;
    float _2160;
    float _2161;
    float _2162;
    float _2163;
    float _2164;
    float _2165;
    float _2166;
    float _2167;
    float _2168;
    float _2169;
    float _2170;
    float _2171;
    float _2172;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1889 = fma(_1515, cbModelParam._m0[30u].z, fma(_1511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1507));
        float _1893 = fma(_1515, cbModelParam._m0[31u].z, fma(_1511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1507));
        float _1897 = fma(_1515, cbModelParam._m0[32u].z, fma(_1511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1507));
        float _1920 = _1507 + _1264;
        float _1921 = _1511 + _1265;
        float _1922 = _1515 + _1266;
        float _1932 = fma(_1922, cbModelParam._m0[30u].z, fma(_1921, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1920)) - _1889;
        float _1933 = fma(_1922, cbModelParam._m0[31u].z, fma(_1921, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1920)) - _1893;
        float _1934 = fma(_1922, cbModelParam._m0[32u].z, fma(_1921, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1920)) - _1897;
        float _1938 = inversesqrt(dot(vec3(_1932, _1933, _1934), vec3(_1932, _1933, _1934)));
        float _1951 = ((_1938 * _1932) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1889 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1952 = ((_1938 * _1933) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1893 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1953 = ((_1938 * _1934) / cbModelParam._m0[35u].z) + ((((((_1897 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1955 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1951, _1952, _1953), 0.0);
        vec4 _1962 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1951, _1952, _1953), 0.0);
        vec4 _1969 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1951, _1952, _1953), 0.0);
        vec4 _1976 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1951, _1952, _1953), 0.0);
        float _1988 = exp2((_1955.w + (-0.5)) * 20.0) * 2.0;
        float _1989 = _1988 * (_1955.x + (-0.5));
        float _1990 = _1988 * (_1955.y + (-0.5));
        float _1991 = _1988 * (_1955.z + (-0.5));
        float _1998 = exp2((_1962.w + (-0.5)) * 20.0) * 2.0;
        float _1999 = _1998 * (_1962.x + (-0.5));
        float _2000 = _1998 * (_1962.y + (-0.5));
        float _2001 = _1998 * (_1962.z + (-0.5));
        float _2008 = exp2((_1969.w + (-0.5)) * 20.0) * 2.0;
        float _2009 = _2008 * (_1969.x + (-0.5));
        float _2010 = _2008 * (_1969.y + (-0.5));
        float _2011 = _2008 * (_1969.z + (-0.5));
        float _2018 = exp2((_1976.w + (-0.5)) * 20.0) * 2.0;
        float _2019 = _2018 * (_1976.x + (-0.5));
        float _2020 = _2018 * (_1976.y + (-0.5));
        float _2021 = _2018 * (_1976.z + (-0.5));
        float _2022 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
        float _2023 = isnan(0.0) ? _2020 : (isnan(_2020) ? 0.0 : max(_2020, 0.0));
        float _2024 = isnan(0.0) ? _2021 : (isnan(_2021) ? 0.0 : max(_2021, 0.0));
        float _2025 = _1989 * 0.5;
        float _2026 = _1999 * 0.5;
        float _2027 = _2009 * 0.5;
        float _2028 = dot(vec3(_2025, _2026, _2027), vec3(_2025, _2026, _2027));
        float _2033 = (_2028 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2028);
        float _2041 = (dot(vec3(_1264, _1265, _1266), vec3(_2033 * _2025, _2033 * _2026, _2033 * _2027)) + 1.0) * 0.5;
        float _5030 = isnan(0.0) ? _2041 : (isnan(_2041) ? 0.0 : max(_2041, 0.0));
        float _2050 = sqrt(((_2026 * _2026) + (_2025 * _2025)) + (_2027 * _2027)) / (_2022 + 9.9999997473787516355514526367188e-06);
        float _5041 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
        float _2051 = isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0));
        float _2052 = _2051 * 2.0;
        float _2056 = (1.0 - _2051) / (_2051 + 1.0);
        float _5052 = isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0));
        float _2057 = isnan(1.0) ? _5052 : (isnan(_5052) ? 1.0 : min(_5052, 1.0));
        float _2066 = ((((1.0 - _2057) * (_2052 + 2.0)) * exp2(log2(isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0))) * (_2052 + 1.0))) + _2057) * _2022;
        float _2067 = _1990 * 0.5;
        float _2068 = _2000 * 0.5;
        float _2069 = _2010 * 0.5;
        float _2070 = dot(vec3(_2067, _2068, _2069), vec3(_2067, _2068, _2069));
        float _2075 = (_2070 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2070);
        float _2083 = (dot(vec3(_1264, _1265, _1266), vec3(_2075 * _2067, _2075 * _2068, _2075 * _2069)) + 1.0) * 0.5;
        float _5063 = isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0));
        float _2092 = sqrt(((_2068 * _2068) + (_2067 * _2067)) + (_2069 * _2069)) / (_2023 + 9.9999997473787516355514526367188e-06);
        float _5074 = isnan(0.0) ? _2092 : (isnan(_2092) ? 0.0 : max(_2092, 0.0));
        float _2093 = isnan(1.0) ? _5074 : (isnan(_5074) ? 1.0 : min(_5074, 1.0));
        float _2094 = _2093 * 2.0;
        float _2098 = (1.0 - _2093) / (_2093 + 1.0);
        float _5085 = isnan(0.0) ? _2098 : (isnan(_2098) ? 0.0 : max(_2098, 0.0));
        float _2099 = isnan(1.0) ? _5085 : (isnan(_5085) ? 1.0 : min(_5085, 1.0));
        float _2108 = ((((1.0 - _2099) * (_2094 + 2.0)) * exp2(log2(isnan(1.0) ? _5063 : (isnan(_5063) ? 1.0 : min(_5063, 1.0))) * (_2094 + 1.0))) + _2099) * _2023;
        float _2109 = _1991 * 0.5;
        float _2110 = _2001 * 0.5;
        float _2111 = _2011 * 0.5;
        float _2112 = dot(vec3(_2109, _2110, _2111), vec3(_2109, _2110, _2111));
        float _2117 = (_2112 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2112);
        float _2125 = (dot(vec3(_1264, _1265, _1266), vec3(_2117 * _2109, _2117 * _2110, _2117 * _2111)) + 1.0) * 0.5;
        float _5096 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
        float _2134 = sqrt(((_2110 * _2110) + (_2109 * _2109)) + (_2111 * _2111)) / (_2024 + 9.9999997473787516355514526367188e-06);
        float _5107 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
        float _2135 = isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0));
        float _2136 = _2135 * 2.0;
        float _2140 = (1.0 - _2135) / (_2135 + 1.0);
        float _5118 = isnan(0.0) ? _2140 : (isnan(_2140) ? 0.0 : max(_2140, 0.0));
        float _2141 = isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0));
        float _2150 = ((((1.0 - _2141) * (_2136 + 2.0)) * exp2(log2(isnan(1.0) ? _5096 : (isnan(_5096) ? 1.0 : min(_5096, 1.0))) * (_2136 + 1.0))) + _2141) * _2024;
        _2158 = _1991;
        _2159 = _1990;
        _2160 = _1989;
        _2161 = _2001;
        _2162 = _2000;
        _2163 = _1999;
        _2164 = _2011;
        _2165 = _2010;
        _2166 = _2009;
        _2167 = _2024;
        _2168 = _2023;
        _2169 = _2022;
        _2170 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0)));
        _2171 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0)));
        _2172 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0)));
    }
    else
    {
        _2158 = _1846;
        _2159 = _1846;
        _2160 = _1846;
        _2161 = _1846;
        _2162 = _1846;
        _2163 = _1846;
        _2164 = _1846;
        _2165 = _1846;
        _2166 = _1846;
        _2167 = _1846;
        _2168 = _1846;
        _2169 = _1846;
        _2170 = 0.0;
        _2171 = 0.0;
        _2172 = 0.0;
    }
    float _2182 = (cbModelParam._m0[1u].x * (_2170 - _1858)) + _1858;
    float _2183 = (cbModelParam._m0[1u].x * (_2171 - _1859)) + _1859;
    float _2184 = (cbModelParam._m0[1u].x * (_2172 - _1860)) + _1860;
    float _2205 = fma(_2184, cbSceneParam._m0[89u].z, fma(_2183, cbSceneParam._m0[89u].y, _2182 * cbSceneParam._m0[89u].x));
    float _2208 = fma(_2184, cbSceneParam._m0[90u].z, fma(_2183, cbSceneParam._m0[90u].y, _2182 * cbSceneParam._m0[90u].x));
    float _2211 = fma(_2184, cbSceneParam._m0[91u].z, fma(_2183, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2182));
    float _2226 = _1451 * 0.5;
    float _2227 = _1452 * 0.5;
    float _2228 = _1453 * 0.5;
    float _2229 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_2160, _2163, _2166, _2169));
    float _2232 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_2159, _2162, _2165, _2168));
    float _2235 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_2158, _2161, _2164, _2167));
    float _2269;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2242 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_1845, _1849, _1852, _1855));
        float _2246 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_1847, _1850, _1853, _1856));
        float _2250 = dot(vec4(_2226, _2227, _2228, 1.0), vec4(_1848, _1851, _1854, _1857));
        float _2257 = dot(vec4(cbModelParam._m0[39u]), vec4(_2226, _2227, _2228, 1.0));
        _2269 = dot(vec3(isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0)), isnan(0.0) ? _2246 : (isnan(_2246) ? 0.0 : max(_2246, 0.0)), isnan(0.0) ? _2242 : (isnan(_2242) ? 0.0 : max(_2242, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2257) ? 0.0 : (isnan(0.0) ? _2257 : max(0.0, _2257))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2269 = 1.0;
    }
    float _2280;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2271 = dot(vec4(cbModelParam._m0[40u]), vec4(_2226, _2227, _2228, 1.0));
        _2280 = dot(vec3(isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0)), isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0)), isnan(0.0) ? _2235 : (isnan(_2235) ? 0.0 : max(_2235, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2271) ? 0.0 : (isnan(0.0) ? _2271 : max(0.0, _2271))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2280 = 1.0;
    }
    float _2284 = (_2280 * cbModelParam._m0[1u].x) + (_2269 * (1.0 - cbModelParam._m0[1u].x));
    float _2294 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1268);
    float _2295 = isnan(_2294) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2294 : min(cbModelParam._m0[25u].z, _2294));
    float _2375;
    float _2377;
    float _2379;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2342 = fma(_1515, cbModelParam._m0[13u].z, fma(_1511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1507)) + cbModelParam._m0[13u].w;
        float _2346 = fma(_1515, cbModelParam._m0[14u].z, fma(_1511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1507)) + cbModelParam._m0[14u].w;
        float _2350 = fma(_1515, cbModelParam._m0[15u].z, fma(_1511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1507)) + cbModelParam._m0[15u].w;
        float _2353 = fma(_1453, cbModelParam._m0[13u].z, fma(_1452, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1451));
        float _2356 = fma(_1453, cbModelParam._m0[14u].z, fma(_1452, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1451));
        float _2359 = fma(_1453, cbModelParam._m0[15u].z, fma(_1452, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1451));
        float _2387;
        if (_2353 > 0.0)
        {
            _2387 = abs((1.0 - _2342) / _2353);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2353 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2342 + 1.0) / _2353);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2387 = frontier_phi_19_17_ladder;
        }
        float _2559;
        if (_2356 > 0.0)
        {
            _2559 = abs((1.0 - _2346) / _2356);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2356 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2346 + 1.0) / _2356);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2559 = frontier_phi_28_24_ladder;
        }
        float _2854;
        if (_2359 > 0.0)
        {
            _2854 = abs((1.0 - _2350) / _2359);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2359 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2350 + 1.0) / _2359);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2854 = frontier_phi_40_35_ladder;
        }
        float _2856 = isnan(_2559) ? _2387 : (isnan(_2387) ? _2559 : min(_2387, _2559));
        float _2857 = isnan(_2854) ? _2856 : (isnan(_2856) ? _2854 : min(_2856, _2854));
        float _2861 = (_2857 * _2353) + _2342;
        float _2862 = (_2857 * _2356) + _2346;
        float _2863 = (_2857 * _2359) + _2350;
        float _2864 = _2857 * 9.9999997473787516355514526367188e-05;
        float _2866 = (-1.0) - _2864;
        float _2868 = _2864 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2863 > _2868) || ((_2863 < _2866) || ((_2862 > _2868) || ((_2862 < _2866) || ((_2861 < _2866) || (_2861 > _2868))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3008 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2863, cbModelParam._m0[9u].z, fma(_2862, cbModelParam._m0[9u].y, _2861 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2863, cbModelParam._m0[10u].z, fma(_2862, cbModelParam._m0[10u].y, _2861 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2863, cbModelParam._m0[11u].z, fma(_2862, cbModelParam._m0[11u].y, _2861 * cbModelParam._m0[11u].x))), _2295);
            frontier_phi_18_40_ladder = _3008.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _3008.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _3008.x * cbModelParam._m0[1u].y;
        }
        _2375 = frontier_phi_18_40_ladder_2;
        _2377 = frontier_phi_18_40_ladder_1;
        _2379 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2363 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1451, _1452, _1453), _2295);
        _2375 = _2363.x * cbModelParam._m0[1u].y;
        _2377 = _2363.y * cbModelParam._m0[1u].y;
        _2379 = _2363.z * cbModelParam._m0[1u].y;
    }
    float _2383 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1268);
    float _2384 = isnan(_2383) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2383 : min(cbModelParam._m0[25u].w, _2383));
    float _2474;
    float _2476;
    float _2478;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2438 = fma(_1515, cbModelParam._m0[21u].z, fma(_1511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1507)) + cbModelParam._m0[21u].w;
        float _2442 = fma(_1515, cbModelParam._m0[22u].z, fma(_1511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1507)) + cbModelParam._m0[22u].w;
        float _2446 = fma(_1515, cbModelParam._m0[23u].z, fma(_1511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1507)) + cbModelParam._m0[23u].w;
        float _2449 = fma(_1453, cbModelParam._m0[21u].z, fma(_1452, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1451));
        float _2452 = fma(_1453, cbModelParam._m0[22u].z, fma(_1452, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1451));
        float _2455 = fma(_1453, cbModelParam._m0[23u].z, fma(_1452, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1451));
        float _2564;
        if (_2449 > 0.0)
        {
            _2564 = abs((1.0 - _2438) / _2449);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2449 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2438 + 1.0) / _2449);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2564 = frontier_phi_30_26_ladder;
        }
        float _2881;
        if (_2452 > 0.0)
        {
            _2881 = abs((1.0 - _2442) / _2452);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2452 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2442 + 1.0) / _2452);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2881 = frontier_phi_42_37_ladder;
        }
        float _3219;
        if (_2455 > 0.0)
        {
            _3219 = abs((1.0 - _2446) / _2455);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2455 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2446 + 1.0) / _2455);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _3219 = frontier_phi_52_49_ladder;
        }
        float _3221 = isnan(_2881) ? _2564 : (isnan(_2564) ? _2881 : min(_2564, _2881));
        float _3222 = isnan(_3219) ? _3221 : (isnan(_3221) ? _3219 : min(_3221, _3219));
        float _3226 = (_3222 * _2449) + _2438;
        float _3227 = (_3222 * _2452) + _2442;
        float _3228 = (_3222 * _2455) + _2446;
        float _3229 = _3222 * 9.9999997473787516355514526367188e-05;
        float _3230 = (-1.0) - _3229;
        float _3232 = _3229 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_3228 > _3232) || ((_3228 < _3230) || ((_3227 > _3232) || ((_3227 < _3230) || ((_3226 < _3230) || (_3226 > _3232))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3350 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3228, cbModelParam._m0[17u].z, fma(_3227, cbModelParam._m0[17u].y, _3226 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3228, cbModelParam._m0[18u].z, fma(_3227, cbModelParam._m0[18u].y, _3226 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3228, cbModelParam._m0[19u].z, fma(_3227, cbModelParam._m0[19u].y, _3226 * cbModelParam._m0[19u].x))), _2384);
            frontier_phi_27_52_ladder = _3350.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _3350.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _3350.x * cbModelParam._m0[1u].z;
        }
        _2474 = frontier_phi_27_52_ladder_2;
        _2476 = frontier_phi_27_52_ladder_1;
        _2478 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2458 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1451, _1452, _1453), _2384);
        _2474 = _2458.x * cbModelParam._m0[1u].z;
        _2476 = _2458.y * cbModelParam._m0[1u].z;
        _2478 = _2458.z * cbModelParam._m0[1u].z;
    }
    float _2491 = (((_1478 * _1428) + _1479) * _1443) * ((cbModelParam._m0[1u].w * (_2474 - _2375)) + _2375);
    float _2493 = (((_1478 * _1430) + _1479) * _1443) * ((cbModelParam._m0[1u].w * (_2476 - _2377)) + _2377);
    float _2495 = (((_1478 * _1431) + _1479) * _1443) * ((cbModelParam._m0[1u].w * (_2478 - _2379)) + _2379);
    float _2498 = fma(_2495, cbSceneParam._m0[89u].z, fma(_2493, cbSceneParam._m0[89u].y, _2491 * cbSceneParam._m0[89u].x));
    float _2501 = fma(_2495, cbSceneParam._m0[90u].z, fma(_2493, cbSceneParam._m0[90u].y, _2491 * cbSceneParam._m0[90u].x));
    float _2504 = fma(_2495, cbSceneParam._m0[91u].z, fma(_2493, cbSceneParam._m0[91u].y, _2491 * cbSceneParam._m0[91u].x));
    float _2538 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2542 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2546 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2550 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2551 = _2538 / _2550;
    float _2552 = _2542 / _2550;
    float _2553 = _2546 / _2550;
    float _2700;
    float _2701;
    float _2702;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2580 = ((uint(_2553 > cbSceneParam._m0[59u].y) + uint(_2553 > cbSceneParam._m0[59u].x)) + uint(_2553 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2581 = _2580 + 43u;
        uint _2589 = _2580 + 44u;
        uint _2597 = _2580 + 45u;
        uint _2605 = _2580 + 46u;
        float _2616 = fma(_2550, cbSceneParam._m0[_2581].w, fma(_2546, cbSceneParam._m0[_2581].z, fma(_2542, cbSceneParam._m0[_2581].y, _2538 * cbSceneParam._m0[_2581].x)));
        float _2620 = fma(_2550, cbSceneParam._m0[_2589].w, fma(_2546, cbSceneParam._m0[_2589].z, fma(_2542, cbSceneParam._m0[_2589].y, _2538 * cbSceneParam._m0[_2589].x)));
        float _2628 = fma(_2550, cbSceneParam._m0[_2605].w, fma(_2546, cbSceneParam._m0[_2605].z, fma(_2542, cbSceneParam._m0[_2605].y, _2538 * cbSceneParam._m0[_2605].x)));
        float _2633 = cbSceneParam._m0[33u].z * _2628;
        float _2635 = cbSceneParam._m0[33u].w * _2628;
        float _2638 = fma(_2550, cbSceneParam._m0[_2597].w, fma(_2546, cbSceneParam._m0[_2597].z, fma(_2542, cbSceneParam._m0[_2597].y, _2538 * cbSceneParam._m0[_2597].x))) / _2628;
        float _2686 = (cbSceneParam._m0[33u].x - sqrt(((_2552 * _2552) + (_2551 * _2551)) + (_2553 * _2553))) * cbSceneParam._m0[33u].y;
        float _5244 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2693 = (isnan(1.0) ? _5244 : (isnan(_5244) ? 1.0 : min(_5244, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2633 + _2616) / _2628, (_2635 + _2620) / _2628), _2638), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2635 + _2616) / _2628, (_2620 - _2633) / _2628), _2638), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2616 - _2633) / _2628, (_2620 - _2635) / _2628), _2638), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2616 - _2635) / _2628, (_2633 + _2620) / _2628), _2638), 0.0)).x), vec4(0.25)));
        _2700 = 1.0 - (_2693 * cbSceneParam._m0[34u].x);
        _2701 = 1.0 - (_2693 * cbSceneParam._m0[34u].y);
        _2702 = 1.0 - (_2693 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2700 = 1.0;
        _2701 = 1.0;
        _2702 = 1.0;
    }
    float _2766;
    float _2768;
    float _2770;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2754 = fma(_2550, cbSceneParam._m0[63u].w, fma(_2546, cbSceneParam._m0[63u].z, fma(_2542, cbSceneParam._m0[63u].y, _2538 * cbSceneParam._m0[63u].x)));
        float _2755 = fma(_2550, cbSceneParam._m0[60u].w, fma(_2546, cbSceneParam._m0[60u].z, fma(_2542, cbSceneParam._m0[60u].y, _2538 * cbSceneParam._m0[60u].x))) / _2754;
        float _2756 = fma(_2550, cbSceneParam._m0[61u].w, fma(_2546, cbSceneParam._m0[61u].z, fma(_2542, cbSceneParam._m0[61u].y, _2538 * cbSceneParam._m0[61u].x))) / _2754;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2755 >= cbSceneParam._m0[64u].x) && (_2756 >= cbSceneParam._m0[64u].y)) && (_2755 <= cbSceneParam._m0[64u].z)) && (_2756 <= cbSceneParam._m0[64u].w))
        {
            float _2894 = fma(_2550, cbSceneParam._m0[62u].w, fma(_2546, cbSceneParam._m0[62u].z, fma(_2542, cbSceneParam._m0[62u].y, _2538 * cbSceneParam._m0[62u].x))) / _2754;
            float _2898 = isnan(cbSceneParam._m0[41u].w) ? _2894 : (isnan(_2894) ? cbSceneParam._m0[41u].w : max(_2894, cbSceneParam._m0[41u].w));
            float _2941 = (cbSceneParam._m0[33u].x - sqrt(((_2552 * _2552) + (_2551 * _2551)) + (_2553 * _2553))) * cbSceneParam._m0[33u].y;
            float _5260 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
            float _2948 = (isnan(1.0) ? _5260 : (isnan(_5260) ? 1.0 : min(_5260, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2755, cbSceneParam._m0[33u].w + _2756), _2898), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2755, _2756 - cbSceneParam._m0[33u].z), _2898), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2755 - cbSceneParam._m0[33u].z, _2756 - cbSceneParam._m0[33u].w), _2898), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2755 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2756), _2898), 0.0)).x), vec4(0.25)));
            float _2952 = 1.0 - (_2948 * cbSceneParam._m0[34u].x);
            float _2953 = 1.0 - (_2948 * cbSceneParam._m0[34u].y);
            float _2954 = 1.0 - (_2948 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2953) ? _2701 : (isnan(_2701) ? _2953 : min(_2701, _2953));
            frontier_phi_39_38_ladder_1 = isnan(_2952) ? _2700 : (isnan(_2700) ? _2952 : min(_2700, _2952));
            frontier_phi_39_38_ladder_2 = isnan(_2954) ? _2702 : (isnan(_2702) ? _2954 : min(_2702, _2954));
        }
        else
        {
            frontier_phi_39_38_ladder = _2701;
            frontier_phi_39_38_ladder_1 = _2700;
            frontier_phi_39_38_ladder_2 = _2702;
        }
        _2766 = frontier_phi_39_38_ladder_1;
        _2768 = frontier_phi_39_38_ladder;
        _2770 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2766 = _2700;
        _2768 = _2701;
        _2770 = _2702;
    }
    uvec4 _2775 = floatBitsToUint(cbInstanceData._m0[_1403 + 5u]);
    uint _2777 = _2775.x * 14u;
    uint _2778 = _2777 + 13u;
    float _2785 = _1443 + (-1.0);
    float _2790 = (cbLight._m0[_2778].x * _2785) + 1.0;
    float _2791 = (cbLight._m0[_2778].y * _2785) + 1.0;
    float _2792 = (cbLight._m0[_2778].z * _2785) + 1.0;
    float _2793 = (cbLight._m0[_2778].w * _2785) + 1.0;
    uint _2794 = _2777 + 5u;
    float _2800 = isnan(1.0) ? _2791 : (isnan(_2791) ? 1.0 : min(_2791, 1.0));
    uint _2804 = _2777 + 4u;
    float _2813 = isnan(1.0) ? _2790 : (isnan(_2790) ? 1.0 : min(_2790, 1.0));
    uint _2817 = _2777 | 1u;
    float _2828 = dot(vec3(cbLight._m0[_2777].xyz), vec3(_1264, _1265, _1266));
    float _2831 = dot(vec3(cbLight._m0[_2817].xyz), vec3(_1264, _1265, _1266));
    float _5296 = isnan(0.0) ? _2828 : (isnan(_2828) ? 0.0 : max(_2828, 0.0));
    float _5307 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
    float _2836 = (isnan(1.0) ? _5296 : (isnan(_5296) ? 1.0 : min(_5296, 1.0))) * 0.3183098733425140380859375;
    float _2838 = (isnan(1.0) ? _5307 : (isnan(_5307) ? 1.0 : min(_5307, 1.0))) * 0.3183098733425140380859375;
    float _2845 = ((cbLight._m0[_2794].x * _2800) * _2838) + (((cbLight._m0[_2804].x * _2766) * _2813) * _2836);
    float _2846 = ((_2800 * cbLight._m0[_2794].y) * _2838) + (((cbLight._m0[_2804].y * _2768) * _2813) * _2836);
    float _2847 = ((_2800 * cbLight._m0[_2794].z) * _2838) + (((cbLight._m0[_2804].z * _2770) * _2813) * _2836);
    uvec4 _2851 = floatBitsToUint(cbLight._m0[_2777 + 12u]);
    bool _2853 = _2851.x == 0u;
    float _2955;
    float _2957;
    float _2959;
    if (_2853)
    {
        _2955 = _2845;
        _2957 = _2846;
        _2959 = _2847;
    }
    else
    {
        uint _2963 = _2777 + 6u;
        float _2979 = (dot(vec3(cbLight._m0[_2777 + 2u].xyz), vec3(_1264, _1265, _1266)) * 0.5) + 0.5;
        float _2980 = _2979 * _2979;
        float _5318 = isnan(0.0) ? _2980 : (isnan(_2980) ? 0.0 : max(_2980, 0.0));
        float _2981 = isnan(1.0) ? _5318 : (isnan(_5318) ? 1.0 : min(_5318, 1.0));
        float _2982 = isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0));
        _2955 = (((cbLight._m0[_2963].x * 0.3183098733425140380859375) * _2981) * _2982) + _2845;
        _2957 = (((cbLight._m0[_2963].y * 0.3183098733425140380859375) * _2981) * _2982) + _2846;
        _2959 = (((cbLight._m0[_2963].z * 0.3183098733425140380859375) * _2981) * _2982) + _2847;
    }
    bool _2962 = _2851.y == 0u;
    float _3017;
    float _3019;
    float _3021;
    if (_2962)
    {
        _3017 = _2955;
        _3019 = _2957;
        _3021 = _2959;
    }
    else
    {
        uint _3190 = _2777 + 7u;
        float _3206 = (dot(vec3(cbLight._m0[_2777 + 3u].xyz), vec3(_1264, _1265, _1266)) * 0.5) + 0.5;
        float _3207 = _3206 * _3206;
        float _5334 = isnan(0.0) ? _3207 : (isnan(_3207) ? 0.0 : max(_3207, 0.0));
        float _3208 = isnan(1.0) ? _5334 : (isnan(_5334) ? 1.0 : min(_5334, 1.0));
        float _3209 = isnan(1.0) ? _2793 : (isnan(_2793) ? 1.0 : min(_2793, 1.0));
        _3017 = (((cbLight._m0[_3190].x * 0.3183098733425140380859375) * _3208) * _3209) + _2955;
        _3019 = (((cbLight._m0[_3190].y * 0.3183098733425140380859375) * _3208) * _3209) + _2957;
        _3021 = (((cbLight._m0[_3190].z * 0.3183098733425140380859375) * _3208) * _3209) + _2959;
    }
    uint _3024 = _2777 + 8u;
    float _3037 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2777].w)) * _1268) * 0.949999988079071044921875);
    float _3038 = _3037 * _3037;
    float _3039 = cbLight._m0[_2777].x + _1345;
    float _3040 = cbLight._m0[_2777].y + _1346;
    float _3041 = cbLight._m0[_2777].z + _1347;
    float _3045 = inversesqrt(dot(vec3(_3039, _3040, _3041), vec3(_3039, _3040, _3041)));
    float _3046 = _3045 * _3039;
    float _3047 = _3045 * _3040;
    float _3048 = _3045 * _3041;
    float _3049 = dot(vec3(_1264, _1265, _1266), vec3(cbLight._m0[_2777].xyz));
    float _5350 = isnan(0.0) ? _3049 : (isnan(_3049) ? 0.0 : max(_3049, 0.0));
    float _3052 = isnan(1.0) ? _5350 : (isnan(_5350) ? 1.0 : min(_5350, 1.0));
    float _5361 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
    float _3053 = isnan(1.0) ? _5361 : (isnan(_5361) ? 1.0 : min(_5361, 1.0));
    float _3054 = dot(vec3(_1264, _1265, _1266), vec3(_3046, _3047, _3048));
    float _5372 = isnan(0.0) ? _3054 : (isnan(_3054) ? 0.0 : max(_3054, 0.0));
    float _3057 = isnan(1.0) ? _5372 : (isnan(_5372) ? 1.0 : min(_5372, 1.0));
    float _3058 = dot(vec3(cbLight._m0[_2777].xyz), vec3(_3046, _3047, _3048));
    float _5383 = isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0));
    float _3062 = _3038 * _3038;
    float _3066 = ((_3057 * _3057) * (_3062 + (-1.0))) + 1.0;
    float _3074 = exp2(log2(1.0 - (isnan(1.0) ? _5383 : (isnan(_5383) ? 1.0 : min(_5383, 1.0)))) * 5.0);
    float _3075 = 0.959999978542327880859375 - _1425;
    float _3077 = 0.959999978542327880859375 - _1426;
    float _3078 = 0.959999978542327880859375 - _1427;
    float _3085 = 1.0 - _3038;
    float _3096 = (0.5 / (((_3053 * ((_3052 * _3085) + _3038)) + 9.9999999392252902907785028219223e-09) + (((_3053 * _3085) + _3038) * _3052))) * _3052;
    float _5394 = isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0));
    float _3098 = (isnan(1.0) ? _5394 : (isnan(_5394) ? 1.0 : min(_5394, 1.0))) * (_3062 / ((_3066 * _3066) * 3.141590118408203125));
    uint _3112 = _2777 + 9u;
    float _3123 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2817].w)) * _1268) * 0.949999988079071044921875);
    float _3124 = _3123 * _3123;
    float _3125 = cbLight._m0[_2817].x + _1345;
    float _3126 = cbLight._m0[_2817].y + _1346;
    float _3127 = cbLight._m0[_2817].z + _1347;
    float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
    float _3132 = _3131 * _3125;
    float _3133 = _3131 * _3126;
    float _3134 = _3131 * _3127;
    float _3135 = dot(vec3(_1264, _1265, _1266), vec3(cbLight._m0[_2817].xyz));
    float _5405 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
    float _3138 = isnan(1.0) ? _5405 : (isnan(_5405) ? 1.0 : min(_5405, 1.0));
    float _3139 = dot(vec3(_1264, _1265, _1266), vec3(_3132, _3133, _3134));
    float _5416 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0));
    float _3142 = isnan(1.0) ? _5416 : (isnan(_5416) ? 1.0 : min(_5416, 1.0));
    float _3143 = dot(vec3(cbLight._m0[_2817].xyz), vec3(_3132, _3133, _3134));
    float _5427 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0));
    float _3147 = _3124 * _3124;
    float _3151 = ((_3142 * _3142) * (_3147 + (-1.0))) + 1.0;
    float _3158 = exp2(log2(1.0 - (isnan(1.0) ? _5427 : (isnan(_5427) ? 1.0 : min(_5427, 1.0)))) * 5.0);
    float _3165 = 1.0 - _3124;
    float _3175 = (0.5 / (((_3053 * ((_3138 * _3165) + _3124)) + 9.9999999392252902907785028219223e-09) + (((_3053 * _3165) + _3124) * _3138))) * _3138;
    float _5438 = isnan(0.0) ? _3175 : (isnan(_3175) ? 0.0 : max(_3175, 0.0));
    float _3177 = (isnan(1.0) ? _5438 : (isnan(_5438) ? 1.0 : min(_5438, 1.0))) * (_3147 / ((_3151 * _3151) * 3.141590118408203125));
    float _3187 = (((((_3158 * _3075) + _1428) * cbLight._m0[_3112].x) * _3177) * _2800) + ((((cbLight._m0[_3024].x * _2766) * ((_3074 * _3075) + _1428)) * _3098) * _2813);
    float _3188 = (((((_3158 * _3077) + _1430) * cbLight._m0[_3112].y) * _3177) * _2800) + ((((cbLight._m0[_3024].y * _2768) * ((_3074 * _3077) + _1430)) * _3098) * _2813);
    float _3189 = (((((_3158 * _3078) + _1431) * cbLight._m0[_3112].z) * _3177) * _2800) + ((((cbLight._m0[_3024].z * _2770) * ((_3074 * _3078) + _1431)) * _3098) * _2813);
    float _3245;
    float _3247;
    float _3249;
    if (_2853)
    {
        _3245 = _3187;
        _3247 = _3188;
        _3249 = _3189;
    }
    else
    {
        uint _3251 = _2777 + 2u;
        uint _3255 = _2777 + 10u;
        float _3269 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3251].w)) * _1268) * 0.949999988079071044921875);
        float _3270 = _3269 * _3269;
        float _3271 = cbLight._m0[_3251].x + _1345;
        float _3272 = cbLight._m0[_3251].y + _1346;
        float _3273 = cbLight._m0[_3251].z + _1347;
        float _3277 = inversesqrt(dot(vec3(_3271, _3272, _3273), vec3(_3271, _3272, _3273)));
        float _3278 = _3277 * _3271;
        float _3279 = _3277 * _3272;
        float _3280 = _3277 * _3273;
        float _3281 = dot(vec3(_1264, _1265, _1266), vec3(cbLight._m0[_3251].xyz));
        float _5449 = isnan(0.0) ? _3281 : (isnan(_3281) ? 0.0 : max(_3281, 0.0));
        float _3284 = isnan(1.0) ? _5449 : (isnan(_5449) ? 1.0 : min(_5449, 1.0));
        float _3285 = dot(vec3(_1264, _1265, _1266), vec3(_3278, _3279, _3280));
        float _5460 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
        float _3288 = isnan(1.0) ? _5460 : (isnan(_5460) ? 1.0 : min(_5460, 1.0));
        float _3289 = dot(vec3(cbLight._m0[_3251].xyz), vec3(_3278, _3279, _3280));
        float _5471 = isnan(0.0) ? _3289 : (isnan(_3289) ? 0.0 : max(_3289, 0.0));
        float _3293 = _3270 * _3270;
        float _3297 = ((_3288 * _3288) * (_3293 + (-1.0))) + 1.0;
        float _3304 = exp2(log2(1.0 - (isnan(1.0) ? _5471 : (isnan(_5471) ? 1.0 : min(_5471, 1.0)))) * 5.0);
        float _3311 = 1.0 - _3270;
        float _3321 = (0.5 / (((_3053 * ((_3284 * _3311) + _3270)) + 9.9999999392252902907785028219223e-09) + (((_3053 * _3311) + _3270) * _3284))) * _3284;
        float _5482 = isnan(0.0) ? _3321 : (isnan(_3321) ? 0.0 : max(_3321, 0.0));
        float _3323 = (isnan(1.0) ? _5482 : (isnan(_5482) ? 1.0 : min(_5482, 1.0))) * (_3293 / ((_3297 * _3297) * 3.141590118408203125));
        float _3324 = isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0));
        _3245 = (((((_3304 * _3075) + _1428) * cbLight._m0[_3255].x) * _3323) * _3324) + _3187;
        _3247 = (((((_3304 * _3077) + _1430) * cbLight._m0[_3255].y) * _3323) * _3324) + _3188;
        _3249 = (((((_3304 * _3078) + _1431) * cbLight._m0[_3255].z) * _3323) * _3324) + _3189;
    }
    float _3355;
    float _3357;
    float _3359;
    if (_2962)
    {
        _3355 = _3245;
        _3357 = _3247;
        _3359 = _3249;
    }
    else
    {
        uint _3366 = _2777 + 3u;
        uint _3370 = _2777 + 11u;
        float _3384 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3366].w)) * _1268) * 0.949999988079071044921875);
        float _3385 = _3384 * _3384;
        float _3386 = cbLight._m0[_3366].x + _1345;
        float _3387 = cbLight._m0[_3366].y + _1346;
        float _3388 = cbLight._m0[_3366].z + _1347;
        float _3392 = inversesqrt(dot(vec3(_3386, _3387, _3388), vec3(_3386, _3387, _3388)));
        float _3393 = _3392 * _3386;
        float _3394 = _3392 * _3387;
        float _3395 = _3392 * _3388;
        float _3396 = dot(vec3(_1264, _1265, _1266), vec3(cbLight._m0[_3366].xyz));
        float _5498 = isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0));
        float _3399 = isnan(1.0) ? _5498 : (isnan(_5498) ? 1.0 : min(_5498, 1.0));
        float _3400 = dot(vec3(_1264, _1265, _1266), vec3(_3393, _3394, _3395));
        float _5509 = isnan(0.0) ? _3400 : (isnan(_3400) ? 0.0 : max(_3400, 0.0));
        float _3403 = isnan(1.0) ? _5509 : (isnan(_5509) ? 1.0 : min(_5509, 1.0));
        float _3404 = dot(vec3(cbLight._m0[_3366].xyz), vec3(_3393, _3394, _3395));
        float _5520 = isnan(0.0) ? _3404 : (isnan(_3404) ? 0.0 : max(_3404, 0.0));
        float _3408 = _3385 * _3385;
        float _3412 = ((_3403 * _3403) * (_3408 + (-1.0))) + 1.0;
        float _3419 = exp2(log2(1.0 - (isnan(1.0) ? _5520 : (isnan(_5520) ? 1.0 : min(_5520, 1.0)))) * 5.0);
        float _3426 = 1.0 - _3385;
        float _3436 = (0.5 / (((_3053 * ((_3399 * _3426) + _3385)) + 9.9999999392252902907785028219223e-09) + (((_3053 * _3426) + _3385) * _3399))) * _3399;
        float _5531 = isnan(0.0) ? _3436 : (isnan(_3436) ? 0.0 : max(_3436, 0.0));
        float _3438 = (isnan(1.0) ? _5531 : (isnan(_5531) ? 1.0 : min(_5531, 1.0))) * (_3408 / ((_3412 * _3412) * 3.141590118408203125));
        float _3439 = isnan(1.0) ? _2793 : (isnan(_2793) ? 1.0 : min(_2793, 1.0));
        _3355 = (((((_3419 * _3075) + _1428) * cbLight._m0[_3370].x) * _3438) * _3439) + _3245;
        _3357 = (((((_3419 * _3077) + _1430) * cbLight._m0[_3370].y) * _3438) * _3439) + _3247;
        _3359 = (((((_3419 * _3078) + _1431) * cbLight._m0[_3370].z) * _3438) * _3439) + _3249;
    }
    float _3504;
    float _3506;
    float _3508;
    float _3510;
    float _3512;
    float _3514;
    if (_2775.y == 0u)
    {
        uvec4 _3460 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3461 = _3460.x;
        uint _3472 = uint((float(_3460.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1366) / _3461))) + floor(float(uint(cbSceneParam._m0[85u].x * _1365) / _3461)));
        float _3482 = (log2(_2553 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3483 = isnan(0.0) ? _3482 : (isnan(_3482) ? 0.0 : max(_3482, 0.0));
        uint _3486 = uint(isnan(14.0) ? _3483 : (isnan(_3483) ? 14.0 : min(_3483, 14.0)));
        uvec4 _3491 = texelFetch(g_lightClusterGridBuffer, int(((_3486 << 2u) + (_3472 << 6u)) >> 2u));
        uint _3492 = _3491.x;
        uint _3493 = _3460.z;
        float _3576;
        float _3578;
        float _3580;
        float _3582;
        float _3584;
        float _3586;
        if (((((1u << ((_3493 >> 4u) & 15u)) + 4294967295u) & _3492) == 0u) || ((_3493 & 240u) == 0u))
        {
            _3576 = 0.0;
            _3578 = 0.0;
            _3580 = 0.0;
            _3582 = 0.0;
            _3584 = 0.0;
            _3586 = 0.0;
        }
        else
        {
            float _3577;
            float _3579;
            float _3581;
            float _3583;
            float _3585;
            float _3587;
            float _3728 = 0.0;
            float _3729 = 0.0;
            float _3730 = 0.0;
            float _3731 = 0.0;
            float _3732 = 0.0;
            float _3733 = 0.0;
            uint _3734 = 0u;
            uint _3743;
            bool _3744;
            for (;;)
            {
                _3743 = texelFetch(g_lightClassification, int((((_3486 << 5u) + (_3472 << 9u)) + (_3734 << 2u)) >> 2u)).x;
                _3744 = _3743 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3744)
                {
                    frontier_phi_73_pred = _3733;
                    frontier_phi_73_pred_1 = _3732;
                    frontier_phi_73_pred_2 = _3731;
                    frontier_phi_73_pred_3 = _3730;
                    frontier_phi_73_pred_4 = _3729;
                    frontier_phi_73_pred_5 = _3728;
                }
                else
                {
                    float _3873;
                    float _3874;
                    float _3875;
                    float _3876;
                    float _3877;
                    float _3878;
                    uint _3879;
                    _3873 = _3728;
                    _3874 = _3729;
                    _3875 = _3730;
                    _3876 = _3731;
                    _3877 = _3732;
                    _3878 = _3733;
                    _3879 = _3743;
                    float _3800;
                    float _3801;
                    float _3802;
                    float _3803;
                    float _3804;
                    float _3805;
                    for (;;)
                    {
                        uint _3883 = uint(findLSB(_3879)) + (_3734 << 5u);
                        uint _3880 = (_3879 + 4294967295u) & _3879;
                        uint _3885 = _3883 * 48u;
                        vec4 _3899 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3885)).x, texelFetch(g_PointLightRenderingBuffer, int(_3885 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3885 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3885 + 3u)).x));
                        uint _3905 = (_3883 * 48u) + 4u;
                        vec4 _3918 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3905)).x, texelFetch(g_PointLightRenderingBuffer, int(_3905 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3905 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3905 + 3u)).x));
                        uint _3924 = (_3883 * 48u) + 8u;
                        vec3 _3935 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3924)).x, texelFetch(g_PointLightRenderingBuffer, int(_3924 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3924 + 2u)).x));
                        float _3939 = _3899.x - _2551;
                        float _3940 = _3899.y - _2552;
                        float _3941 = _3899.z - _2553;
                        float _3942 = dot(vec3(_3939, _3940, _3941), vec3(_3939, _3940, _3941));
                        float _3945 = inversesqrt(_3942);
                        float _3946 = _3945 * _3939;
                        float _3947 = _3945 * _3940;
                        float _3948 = _3945 * _3941;
                        float _3949 = dot(vec3(_1384, _1387, _1390), vec3(_3946, _3947, _3948));
                        float _3954 = 1.0 - (_3942 * _3899.w);
                        float _5557 = isnan(0.0) ? _3954 : (isnan(_3954) ? 0.0 : max(_3954, 0.0));
                        float _3955 = isnan(1.0) ? _5557 : (isnan(_5557) ? 1.0 : min(_5557, 1.0));
                        float _3956 = sqrt(_3942) * _3918.w;
                        float _3958 = 1.39999997615814208984375 / (_3956 + 1.39999997615814208984375);
                        float _3959 = _3958 * _3958;
                        float _3962 = ((1.0 - _3959) * _3949) + _3959;
                        float _3965 = _3956 * _3956;
                        float _3969 = ((isnan(0.0) ? _3962 : (isnan(_3962) ? 0.0 : max(_3962, 0.0))) * _3955) / ((_3965 * 0.699999988079071044921875) + 1.0);
                        float _3973 = (-0.0) - _2551;
                        float _3974 = (-0.0) - _2552;
                        float _3975 = (-0.0) - _2553;
                        float _3979 = inversesqrt(dot(vec3(_3973, _3974, _3975), vec3(_3973, _3974, _3975)));
                        float _3980 = _3979 * _3973;
                        float _3981 = _3979 * _3974;
                        float _3982 = _3979 * _3975;
                        float _3989 = exp2(log2(1.0 / ((_3965 * 3.5) + 5.0)) * 0.25);
                        float _3990 = 1.0 - _1459;
                        float _3997 = sqrt(1.0 - ((1.0 - (_3990 * _3990)) * (1.0 - (_3989 * _3989))));
                        float _3998 = _3997 * _3997;
                        float _3999 = _3998 * _3998;
                        float _4000 = _3980 + _3946;
                        float _4001 = _3981 + _3947;
                        float _4002 = _3982 + _3948;
                        float _4006 = inversesqrt(dot(vec3(_4000, _4001, _4002), vec3(_4000, _4001, _4002)));
                        float _4010 = dot(vec3(_1384, _1387, _1390), vec3(_3980, _3981, _3982));
                        float _5573 = isnan(0.0) ? _4010 : (isnan(_4010) ? 0.0 : max(_4010, 0.0));
                        float _4013 = isnan(1.0) ? _5573 : (isnan(_5573) ? 1.0 : min(_5573, 1.0));
                        float _4014 = dot(vec3(_1384, _1387, _1390), vec3(_4006 * _4000, _4006 * _4001, _4006 * _4002));
                        float _5584 = isnan(0.0) ? _4014 : (isnan(_4014) ? 0.0 : max(_4014, 0.0));
                        float _4017 = isnan(1.0) ? _5584 : (isnan(_5584) ? 1.0 : min(_5584, 1.0));
                        float _4021 = ((_4017 * _4017) * (_3999 + (-1.0))) + 1.0;
                        float _4022 = _3958 * _3998;
                        float _4023 = _4022 * _4022;
                        float _4026 = ((1.0 - _4023) * _3949) + _4023;
                        float _5595 = isnan(0.0) ? _4026 : (isnan(_4026) ? 0.0 : max(_4026, 0.0));
                        float _4027 = isnan(1.0) ? _5595 : (isnan(_5595) ? 1.0 : min(_5595, 1.0));
                        float _4028 = 1.0 - _3998;
                        float _4038 = (0.5 / (((_4027 * ((_4013 * _4028) + _3998)) + 9.9999999392252902907785028219223e-09) + (((_4027 * _4028) + _3998) * _4013))) * _4027;
                        float _5606 = isnan(0.0) ? _4038 : (isnan(_4038) ? 0.0 : max(_4038, 0.0));
                        float _4049 = (((_3999 * 3.1415927410125732421875) * (isnan(1.0) ? _5606 : (isnan(_5606) ? 1.0 : min(_5606, 1.0)))) / ((_4021 * _4021) * ((_3965 * 2.1991131305694580078125) + 3.141590118408203125))) * _3955;
                        _3803 = (_3969 * _3918.x) + _3876;
                        _3804 = (_3969 * _3918.y) + _3877;
                        _3805 = (_3969 * _3918.z) + _3878;
                        _3800 = (_4049 * _3935.x) + _3873;
                        _3801 = (_4049 * _3935.y) + _3874;
                        _3802 = (_4049 * _3935.z) + _3875;
                        if (_3880 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3873 = _3800;
                            _3874 = _3801;
                            _3875 = _3802;
                            _3876 = _3803;
                            _3877 = _3804;
                            _3878 = _3805;
                            _3879 = _3880;
                        }
                    }
                    frontier_phi_73_pred = _3805;
                    frontier_phi_73_pred_1 = _3804;
                    frontier_phi_73_pred_2 = _3803;
                    frontier_phi_73_pred_3 = _3802;
                    frontier_phi_73_pred_4 = _3801;
                    frontier_phi_73_pred_5 = _3800;
                }
                _3587 = frontier_phi_73_pred;
                _3585 = frontier_phi_73_pred_1;
                _3583 = frontier_phi_73_pred_2;
                _3581 = frontier_phi_73_pred_3;
                _3579 = frontier_phi_73_pred_4;
                _3577 = frontier_phi_73_pred_5;
                uint _3735 = _3734 + 1u;
                if (_3735 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3728 = _3577;
                    _3729 = _3579;
                    _3730 = _3581;
                    _3731 = _3583;
                    _3732 = _3585;
                    _3733 = _3587;
                    _3734 = _3735;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3576 = _3577;
            _3578 = _3579;
            _3580 = _3581;
            _3582 = _3583;
            _3584 = _3585;
            _3586 = _3587;
        }
        uvec4 _3590 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3591 = _3590.z;
        uint _3593 = (_3591 >> 8u) & 15u;
        float _3696;
        float _3698;
        float _3700;
        float _3702;
        float _3704;
        float _3706;
        if (((4294967295u << _3593) & _3492) == 0u)
        {
            _3696 = _3576;
            _3698 = _3578;
            _3700 = _3580;
            _3702 = _3582;
            _3704 = _3584;
            _3706 = _3586;
        }
        else
        {
            float _3721 = inversesqrt(dot(vec3(_2551, _2552, _2553), vec3(_2551, _2552, _2553)));
            float _3722 = _3721 * _2551;
            float _3723 = _3721 * _2552;
            float _3724 = _3721 * _2553;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3593 < ((_3591 >> 12u) & 15u))
            {
                float _3697;
                float _3699;
                float _3701;
                float _3703;
                float _3705;
                float _3707;
                float _3856 = _3576;
                float _3857 = _3578;
                float _3858 = _3580;
                float _3859 = _3582;
                float _3860 = _3584;
                float _3861 = _3586;
                uint _3862 = _3593;
                uint _3871;
                bool _3872;
                for (;;)
                {
                    _3871 = texelFetch(g_lightClassification, int((((_3486 << 5u) + (_3472 << 9u)) + (_3862 << 2u)) >> 2u)).x;
                    _3872 = _3871 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3872)
                    {
                        frontier_phi_84_pred = _3860;
                        frontier_phi_84_pred_1 = _3859;
                        frontier_phi_84_pred_2 = _3858;
                        frontier_phi_84_pred_3 = _3857;
                        frontier_phi_84_pred_4 = _3856;
                        frontier_phi_84_pred_5 = _3861;
                    }
                    else
                    {
                        float _4063;
                        float _4064;
                        float _4065;
                        float _4066;
                        float _4067;
                        float _4068;
                        float _4356;
                        float _4357;
                        float _4358;
                        float _4359;
                        float _4360;
                        float _4361;
                        float _4076 = _3856;
                        float _4077 = _3857;
                        float _4078 = _3858;
                        float _4079 = _3859;
                        float _4080 = _3860;
                        float _4081 = _3861;
                        uint _4082 = _3871;
                        uint _4083;
                        vec4 _4108;
                        float _4109;
                        vec4 _4124;
                        vec3 _4136;
                        vec4 _4151;
                        vec4 _4166;
                        float _4212;
                        bool _4213;
                        for (;;)
                        {
                            uint _4093 = ((_3862 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_4082));
                            _4083 = (_4082 + 4294967295u) & _4082;
                            uint _4095 = _4093 * 40u;
                            _4108 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4095)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4095 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4095 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4095 + 3u)).x));
                            _4109 = _4108.w;
                            uint _4111 = (_4093 * 40u) + 4u;
                            _4124 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4111)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4111 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4111 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4111 + 3u)).x));
                            uint _4126 = (_4093 * 40u) + 8u;
                            _4136 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_4126)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4126 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4126 + 2u)).x));
                            uint _4138 = (_4093 * 40u) + 16u;
                            _4151 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4138)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4138 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4138 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4138 + 3u)).x));
                            uint _4153 = (_4093 * 40u) + 20u;
                            _4166 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4153)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4153 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4153 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4153 + 3u)).x));
                            uint _4168 = (_4093 * 40u) + 24u;
                            vec4 _4181 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4168)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4168 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4168 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4168 + 3u)).x));
                            uint _4187 = (_4093 * 40u) + 28u;
                            vec4 _4200 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4187)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4187 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4187 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4187 + 3u)).x));
                            _4212 = fma(_2553, _4200.z, fma(_2552, _4200.y, _4200.x * _2551)) + _4200.w;
                            _4213 = !((fma(_2553, _4181.z, fma(_2552, _4181.y, _4181.x * _2551)) + _4181.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_4213)
                            {
                                float _4240 = _4108.x - _2551;
                                float _4241 = _4108.y - _2552;
                                float _4242 = _4108.z - _2553;
                                float _4243 = dot(vec3(_4240, _4241, _4242), vec3(_4240, _4241, _4242));
                                float _4246 = inversesqrt(_4243);
                                float _4247 = _4246 * _4240;
                                float _4248 = _4246 * _4241;
                                float _4249 = _4246 * _4242;
                                float _4253 = 1.0 - (_4243 / (_4109 * _4109));
                                float _5617 = isnan(0.0) ? _4253 : (isnan(_4253) ? 0.0 : max(_4253, 0.0));
                                float _4254 = isnan(1.0) ? _5617 : (isnan(_5617) ? 1.0 : min(_5617, 1.0));
                                float _4258 = sqrt(_4243) * _4124.w;
                                float _4260 = 1.39999997615814208984375 / (_4258 + 1.39999997615814208984375);
                                float _4261 = _4260 * _4260;
                                float _4264 = ((1.0 - _4261) * dot(vec3(_4247, _4248, _4249), vec3(_1384, _1387, _1390))) + _4261;
                                float _4267 = _4258 * _4258;
                                float _4271 = (fma(_2553, _4151.z, fma(_2552, _4151.y, _4151.x * _2551)) + _4151.w) / _4212;
                                float _4272 = (fma(_2553, _4166.z, fma(_2552, _4166.y, _4166.x * _2551)) + _4166.w) / _4212;
                                float _4276 = 1.0 - dot(vec2(_4271, _4272), vec2(_4271, _4272));
                                float _5633 = isnan(0.0) ? _4276 : (isnan(_4276) ? 0.0 : max(_4276, 0.0));
                                float _4277 = isnan(1.0) ? _5633 : (isnan(_5633) ? 1.0 : min(_5633, 1.0));
                                float _4278 = _4277 * (((isnan(0.0) ? _4264 : (isnan(_4264) ? 0.0 : max(_4264, 0.0))) * _4254) / ((_4267 * 0.699999988079071044921875) + 1.0));
                                float _4290 = exp2(log2(1.0 / ((_4267 * 3.5) + 5.0)) * 0.25);
                                float _4291 = 1.0 - _1459;
                                float _4298 = sqrt(1.0 - ((1.0 - (_4291 * _4291)) * (1.0 - (_4290 * _4290))));
                                float _4299 = _4298 * _4298;
                                float _4300 = _4299 * _4299;
                                float _4301 = _4247 - _3722;
                                float _4302 = _4248 - _3723;
                                float _4303 = _4249 - _3724;
                                float _4307 = inversesqrt(dot(vec3(_4301, _4302, _4303), vec3(_4301, _4302, _4303)));
                                float _4311 = dot(vec3(_1384, _1387, _1390), vec3((-0.0) - _3722, (-0.0) - _3723, (-0.0) - _3724));
                                float _5644 = isnan(0.0) ? _4311 : (isnan(_4311) ? 0.0 : max(_4311, 0.0));
                                float _4314 = isnan(1.0) ? _5644 : (isnan(_5644) ? 1.0 : min(_5644, 1.0));
                                float _4315 = dot(vec3(_1384, _1387, _1390), vec3(_4307 * _4301, _4307 * _4302, _4307 * _4303));
                                float _5655 = isnan(0.0) ? _4315 : (isnan(_4315) ? 0.0 : max(_4315, 0.0));
                                float _4318 = isnan(1.0) ? _5655 : (isnan(_5655) ? 1.0 : min(_5655, 1.0));
                                float _4322 = ((_4318 * _4318) * (_4300 + (-1.0))) + 1.0;
                                float _4323 = _4260 * _4299;
                                float _4324 = _4323 * _4323;
                                float _4330 = ((1.0 - _4324) * dot(vec3(_1384, _1387, _1390), vec3(_4247, _4248, _4249))) + _4324;
                                float _5666 = isnan(0.0) ? _4330 : (isnan(_4330) ? 0.0 : max(_4330, 0.0));
                                float _4331 = isnan(1.0) ? _5666 : (isnan(_5666) ? 1.0 : min(_5666, 1.0));
                                float _4332 = 1.0 - _4299;
                                float _4342 = (0.5 / (((_4331 * ((_4314 * _4332) + _4299)) + 9.9999999392252902907785028219223e-09) + (((_4331 * _4332) + _4299) * _4314))) * _4331;
                                float _5677 = isnan(0.0) ? _4342 : (isnan(_4342) ? 0.0 : max(_4342, 0.0));
                                float _4352 = (_4277 * _4254) * (((_4300 * 3.1415927410125732421875) * (isnan(1.0) ? _5677 : (isnan(_5677) ? 1.0 : min(_5677, 1.0)))) / ((_4322 * _4322) * ((_4267 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _4278 * _4124.y;
                                frontier_phi_90_pred_1 = _4278 * _4124.x;
                                frontier_phi_90_pred_2 = _4352 * _4136.z;
                                frontier_phi_90_pred_3 = _4352 * _4136.y;
                                frontier_phi_90_pred_4 = _4352 * _4136.x;
                                frontier_phi_90_pred_5 = _4278 * _4124.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _4360 = frontier_phi_90_pred;
                            _4359 = frontier_phi_90_pred_1;
                            _4358 = frontier_phi_90_pred_2;
                            _4357 = frontier_phi_90_pred_3;
                            _4356 = frontier_phi_90_pred_4;
                            _4361 = frontier_phi_90_pred_5;
                            _4066 = _4359 + _4079;
                            _4067 = _4360 + _4080;
                            _4068 = _4361 + _4081;
                            _4063 = _4356 + _4076;
                            _4064 = _4357 + _4077;
                            _4065 = _4358 + _4078;
                            if (_4083 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _4076 = _4063;
                                _4077 = _4064;
                                _4078 = _4065;
                                _4079 = _4066;
                                _4080 = _4067;
                                _4081 = _4068;
                                _4082 = _4083;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _4067;
                        frontier_phi_84_pred_1 = _4066;
                        frontier_phi_84_pred_2 = _4065;
                        frontier_phi_84_pred_3 = _4064;
                        frontier_phi_84_pred_4 = _4063;
                        frontier_phi_84_pred_5 = _4068;
                    }
                    _3705 = frontier_phi_84_pred;
                    _3703 = frontier_phi_84_pred_1;
                    _3701 = frontier_phi_84_pred_2;
                    _3699 = frontier_phi_84_pred_3;
                    _3697 = frontier_phi_84_pred_4;
                    _3707 = frontier_phi_84_pred_5;
                    uint _3863 = _3862 + 1u;
                    if (_3863 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3856 = _3697;
                        _3857 = _3699;
                        _3858 = _3701;
                        _3859 = _3703;
                        _3860 = _3705;
                        _3861 = _3707;
                        _3862 = _3863;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3707;
                frontier_phi_65_66_ladder_1 = _3703;
                frontier_phi_65_66_ladder_2 = _3705;
                frontier_phi_65_66_ladder_3 = _3699;
                frontier_phi_65_66_ladder_4 = _3697;
                frontier_phi_65_66_ladder_5 = _3701;
            }
            else
            {
                frontier_phi_65_66_ladder = _3586;
                frontier_phi_65_66_ladder_1 = _3582;
                frontier_phi_65_66_ladder_2 = _3584;
                frontier_phi_65_66_ladder_3 = _3578;
                frontier_phi_65_66_ladder_4 = _3576;
                frontier_phi_65_66_ladder_5 = _3580;
            }
            _3696 = frontier_phi_65_66_ladder_4;
            _3698 = frontier_phi_65_66_ladder_3;
            _3700 = frontier_phi_65_66_ladder_5;
            _3702 = frontier_phi_65_66_ladder_1;
            _3704 = frontier_phi_65_66_ladder_2;
            _3706 = frontier_phi_65_66_ladder;
        }
        float _3711 = isnan(1.0) ? _1443 : (isnan(_1443) ? 1.0 : min(_1443, 1.0));
        _3504 = (_3711 * _3702) + _3017;
        _3506 = (_3711 * _3704) + _3019;
        _3508 = (_3711 * _3706) + _3021;
        _3510 = ((_3696 * _1428) * _3711) + _3355;
        _3512 = ((_3698 * _1430) * _3711) + _3357;
        _3514 = ((_3700 * _1431) * _3711) + _3359;
    }
    else
    {
        _3504 = _3017;
        _3506 = _3019;
        _3508 = _3021;
        _3510 = _3355;
        _3512 = _3357;
        _3514 = _3359;
    }
    float _5693 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
    float _5704 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    float _5715 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
    float _5726 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
    float _3532 = ((isnan(1.0) ? _5693 : (isnan(_5693) ? 1.0 : min(_5693, 1.0))) * (_3504 + ((isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0))) * _1443))) + ((_3510 + ((isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0))) * _2284)) * cbPerFrame._m0[3u].x);
    float _3533 = ((isnan(1.0) ? _5704 : (isnan(_5704) ? 1.0 : min(_5704, 1.0))) * (_3506 + ((isnan(0.0) ? _2208 : (isnan(_2208) ? 0.0 : max(_2208, 0.0))) * _1443))) + ((_3512 + ((isnan(0.0) ? _2501 : (isnan(_2501) ? 0.0 : max(_2501, 0.0))) * _2284)) * cbPerFrame._m0[3u].x);
    float _3534 = ((isnan(1.0) ? _5715 : (isnan(_5715) ? 1.0 : min(_5715, 1.0))) * (_3508 + ((isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0))) * _1443))) + ((_3514 + ((isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0))) * _2284)) * cbPerFrame._m0[3u].x);
    float _3535 = isnan(0.0) ? _3532 : (isnan(_3532) ? 0.0 : max(_3532, 0.0));
    float _3536 = isnan(0.0) ? _3533 : (isnan(_3533) ? 0.0 : max(_3533, 0.0));
    float _3537 = isnan(0.0) ? _3534 : (isnan(_3534) ? 0.0 : max(_3534, 0.0));
    float _3542 = cbInstanceData._m0[_1403 + 6u].w * (isnan(1.0) ? _5726 : (isnan(_5726) ? 1.0 : min(_5726, 1.0)));
    float _3547 = _1365 / cbSceneParam._m0[86u].x;
    float _3548 = _1366 / cbSceneParam._m0[86u].y;
    vec4 _3562 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3547, _3548, (log2((isnan(cbSceneParam._m0[77u].w) ? _1288 : (isnan(_1288) ? cbSceneParam._m0[77u].w : min(_1288, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3564 = _3562.x;
    float _3565 = _3562.y;
    float _3566 = _3562.z;
    float _3567 = _3562.w;
    float _3638;
    float _3640;
    float _3642;
    float _3644;
    if (_1288 > cbSceneParam._m0[78u].w)
    {
        float _3601 = isnan(_1288) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1288 : min(cbSceneParam._m0[80u].w, _1288));
        float _3602 = _3601 / _1288;
        float _3613 = _3602 * _1338;
        float _3614 = _1339 * _3602;
        float _3615 = (-0.0) - _3614;
        float _3616 = _3602 * _1340;
        float _3618 = (cbSceneParam._m0[77u].w * _3615) / _3601;
        float _3619 = _3618 + cbSceneParam._m0[79u].w;
        float _3620 = cbSceneParam._m0[79u].w - _3614;
        float _3626 = sqrt(((_3613 * _3613) + (_3614 * _3614)) + (_3616 * _3616));
        float _3629 = (1.0 - (cbSceneParam._m0[77u].w / _3601)) * _3626;
        float _3634 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3636 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3813;
        if (abs((_3615 - _3618) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3813 = ((((_3619 > 0.0) ? exp2(_3634 * _3619) : (2.0 - exp2(_3636 * _3619))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3629;
        }
        else
        {
            float _3757 = 1.0 / cbSceneParam._m0[80u].x;
            float _3758 = isnan(_3620) ? _3619 : (isnan(_3619) ? _3620 : max(_3619, _3620));
            float _3759 = isnan(_3620) ? _3619 : (isnan(_3619) ? _3620 : min(_3619, _3620));
            float _3768 = isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : min(_3758, 0.0));
            float _3769 = isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : min(_3759, 0.0));
            _3813 = ((abs(_3626 / _3615) * cbSceneParam._m0[80u].y) * ((((_3768 - _3769) * 2.0) - ((exp2(_3634 * (isnan(0.0) ? _3758 : (isnan(_3758) ? 0.0 : max(_3758, 0.0)))) - exp2(_3634 * (isnan(0.0) ? _3759 : (isnan(_3759) ? 0.0 : max(_3759, 0.0))))) * _3757)) - ((exp2(_3636 * _3768) - exp2(_3636 * _3769)) * _3757))) + (_3629 * cbSceneParam._m0[80u].z);
        }
        vec4 _3815 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3547, _3548, 1.0), 0.0);
        float _3824 = exp2((_3813 * (-1.44269502162933349609375)) * (1.0 - _3815.w));
        float _3825 = log2(_3824);
        float _3841 = log2(_3567);
        _3638 = (exp2(_3841 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3825 * cbSceneParam._m0[78u].x)) * _3815.x) / cbSceneParam._m0[78u].x)) + _3564;
        _3640 = (exp2(_3841 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3825 * cbSceneParam._m0[78u].y)) * _3815.y) / cbSceneParam._m0[78u].y)) + _3565;
        _3642 = (exp2(_3841 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3825 * cbSceneParam._m0[78u].z)) * _3815.z) / cbSceneParam._m0[78u].z)) + _3566;
        _3644 = _3824 * _3567;
    }
    else
    {
        _3638 = _3564;
        _3640 = _3565;
        _3642 = _3566;
        _3644 = _3567;
    }
    bool _3851;
    vec4 _3654;
    vec4 _3676;
    float _3678;
    float _3682;
    float _3683;
    float _3684;
    float _3685;
    bool _3695;
    for (;;)
    {
        _3654 = cbMatDynParam._m0[0u];
        float _3656 = roundEven(_3654.y);
        bool _3657 = _3656 == 3.0;
        float _3658 = log2(_3644);
        float _3665 = exp2(_3658 * cbSceneParam._m0[78u].x) * _3535;
        float _3666 = exp2(_3658 * cbSceneParam._m0[78u].y) * _3536;
        float _3667 = exp2(_3658 * cbSceneParam._m0[78u].z) * _3537;
        float _3674 = _1354 + (-0.5);
        _3676 = cbMtdParam._m0[1u];
        _3678 = _3676.y * _3674;
        float _3681 = (_3656 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3682 = _3681 * (_3657 ? _3665 : (_3665 + (cbSceneParam._m0[72u].w * _3638)));
        _3683 = _3681 * (_3657 ? _3666 : (_3666 + (cbSceneParam._m0[72u].w * _3640)));
        _3684 = _3681 * (_3657 ? _3667 : (_3667 + (cbSceneParam._m0[72u].w * _3642)));
        _3685 = _3674 * 0.999000012874603271484375;
        _3695 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3695)
        {
            if ((cbInstanceData._m0[_1403 + 7u].x + _3685) < 0.5)
            {
                _3851 = true;
                break;
            }
        }
        uint _3792 = _1404 + uint(_3654.w);
        if ((cbInstanceData._m0[_3792].w < 1.0) && ((cbInstanceData._m0[_3792].w + _3685) < 0.5))
        {
            _3851 = true;
            break;
        }
        if ((_3678 + _622) < _3676.x)
        {
            _3851 = true;
            break;
        }
        _3851 = false;
        break;
    }
    float _4054;
    if (_3851)
    {
        discard_state = true;
        _4054 = 0.0;
    }
    else
    {
        _4054 = _3542;
    }
    SV_Target.x = _3682;
    SV_Target.y = _3683;
    SV_Target.z = _3684;
    SV_Target.w = _4054;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3542;
    discard_exit();
}


