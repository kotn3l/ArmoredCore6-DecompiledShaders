#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec4 TEXCOORD_10;
layout(location = 8) in vec4 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1882;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _251 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _252 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _253 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _259 = inversesqrt(dot(vec3(_251, _252, _253), vec3(_251, _252, _253)));
    float _260 = _259 * _251;
    float _261 = _259 * _252;
    float _262 = _259 * _253;
    float _272 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _273 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _274 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _278 = inversesqrt(dot(vec3(_272, _273, _274), vec3(_272, _273, _274)));
    float _279 = _278 * _272;
    float _280 = _278 * _273;
    float _281 = _278 * _274;
    float _285 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _286 = _285 * NORMAL.x;
    float _287 = _285 * NORMAL.y;
    float _288 = _285 * NORMAL.z;
    float _292 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _293 = _292 * TANGENT.x;
    float _294 = _292 * TANGENT.y;
    float _295 = _292 * TANGENT.z;
    float _299 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _300 = _299 * TANGENT_2.x;
    float _301 = _299 * TANGENT_2.y;
    float _302 = _299 * TANGENT_2.z;
    float _307;
    float _308;
    float _309;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _307 = (-0.0) - _286;
        _308 = (-0.0) - _287;
        _309 = (-0.0) - _288;
    }
    else
    {
        _307 = _286;
        _308 = _287;
        _309 = _288;
    }
    vec4 _328 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _340 = 1.0 - ((1.0 - _328.z) * 1.39999997615814208984375);
    float _4252 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _341 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
    float _343 = 1.0 - ((1.0 - _328.x) * 1.39999997615814208984375);
    float _4263 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _344 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
    float _346 = 1.0 - ((1.0 - _328.y) * 1.39999997615814208984375);
    float _4274 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _347 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
    float _349 = (_344 + _341) + _347;
    float _356 = (_349 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _357 = (_349 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _358 = (_349 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _383 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _392 = 1.0 - ((1.0 - _383.x) * 1.39999997615814208984375);
    float _4285 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _393 = isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0));
    float _403 = (_393 * ((cbMtdParam._m0[9u].x - _356) + ((1.0 - cbMtdParam._m0[9u].x) * _349))) + _356;
    float _404 = (_393 * ((cbMtdParam._m0[9u].y - _357) + ((1.0 - cbMtdParam._m0[9u].y) * _349))) + _357;
    float _405 = (_393 * ((cbMtdParam._m0[9u].z - _358) + ((1.0 - cbMtdParam._m0[9u].z) * _349))) + _358;
    float _418 = 1.0 - ((1.0 - _383.y) * 1.39999997615814208984375);
    float _4296 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _419 = isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0));
    float _429 = (((cbMtdParam._m0[17u].x - _403) + ((1.0 - cbMtdParam._m0[17u].x) * _349)) * _419) + _403;
    float _430 = (((cbMtdParam._m0[17u].y - _404) + ((1.0 - cbMtdParam._m0[17u].y) * _349)) * _419) + _404;
    float _431 = (((cbMtdParam._m0[17u].z - _405) + ((1.0 - cbMtdParam._m0[17u].z) * _349)) * _419) + _405;
    float _445 = 1.0 - ((1.0 - _383.z) * 1.39999997615814208984375);
    float _4307 = isnan(0.0) ? _445 : (isnan(_445) ? 0.0 : max(_445, 0.0));
    float _446 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
    float _477 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w)).x * cbMtdParam._m0[25u].z;
    float _491 = ((cbMtdParam._m0[23u].y * (-1.39999997615814208984375)) * ((TEXCOORD_13.w - _477) + (cbMtdParam._m0[24u].x * TEXCOORD_13.w))) + 1.0;
    float _4318 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _493 = 1.0 - (isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0)));
    float _501 = ((cbMtdParam._m0[23u].x * (-1.39999997615814208984375)) * ((TEXCOORD_10.w - _477) + (cbMtdParam._m0[24u].y * TEXCOORD_10.w))) + 1.0;
    float _4329 = isnan(0.0) ? _501 : (isnan(_501) ? 0.0 : max(_501, 0.0));
    float _503 = 1.0 - (isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0)));
    vec4 _521 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _523 = _521.x;
    float _524 = _521.y;
    float _525 = _521.z;
    float _526 = cbMtdParam._m0[10u].x * _503;
    float _528 = cbMtdParam._m0[10u].y * _503;
    float _530 = cbMtdParam._m0[10u].z * _503;
    float _547 = ((_523 * (cbMtdParam._m0[16u].x - _526)) * _493) + (_526 * _523);
    float _548 = ((_524 * (cbMtdParam._m0[16u].y - _528)) * _493) + (_528 * _524);
    float _549 = ((_525 * (cbMtdParam._m0[16u].z - _530)) * _493) + (_530 * _525);
    float _571 = cbMtdParam._m0[23u].w * (-1.39999997615814208984375);
    float _575 = (_571 * ((TEXCOORD_7.x - _477) + (cbMtdParam._m0[22u].w * TEXCOORD_7.x))) + 1.0;
    float _576 = (_571 * ((TEXCOORD_7.y - _477) + (cbMtdParam._m0[22u].w * TEXCOORD_7.y))) + 1.0;
    float _577 = (_571 * ((TEXCOORD_7.z - _477) + (cbMtdParam._m0[22u].w * TEXCOORD_7.z))) + 1.0;
    float _4340 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _4351 = isnan(0.0) ? _576 : (isnan(_576) ? 0.0 : max(_576, 0.0));
    float _4362 = isnan(0.0) ? _577 : (isnan(_577) ? 0.0 : max(_577, 0.0));
    float _586 = (1.0 - cbMtdParam._m0[25u].x) + _344;
    float _589 = _586 * (1.0 - (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))));
    float _590 = _586 * (1.0 - (isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0))));
    float _591 = ((_344 + 1.0) - cbMtdParam._m0[25u].x) * (1.0 - (isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0))));
    float _601 = _503 + _493;
    float _602 = _601 + _589;
    float _603 = _601 + _590;
    float _604 = _601 + _591;
    float _605 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _606 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _607 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _608 = isnan(1.0) ? _605 : (isnan(_605) ? 1.0 : min(_605, 1.0));
    float _609 = isnan(1.0) ? _606 : (isnan(_606) ? 1.0 : min(_606, 1.0));
    float _610 = isnan(1.0) ? _607 : (isnan(_607) ? 1.0 : min(_607, 1.0));
    vec4 _628 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _633 = _628.w;
    float _634 = _628.x * cbMtdParam._m0[12u].x;
    float _635 = _628.y * cbMtdParam._m0[12u].y;
    float _636 = _628.z * cbMtdParam._m0[12u].z;
    vec4 _654 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _668 = (((_654.x * cbMtdParam._m0[13u].x) - _634) * _344) + _634;
    float _669 = (((_654.y * cbMtdParam._m0[13u].y) - _635) * _344) + _635;
    float _670 = (((_654.z * cbMtdParam._m0[13u].z) - _636) * _344) + _636;
    vec4 _689 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _703 = (((_689.x * cbMtdParam._m0[14u].x) - _668) * _347) + _668;
    float _704 = (((_689.y * cbMtdParam._m0[14u].y) - _669) * _347) + _669;
    float _705 = (((_689.z * cbMtdParam._m0[14u].z) - _670) * _347) + _670;
    vec4 _722 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _736 = (((_722.x * cbMtdParam._m0[15u].x) - _703) * _341) + _703;
    float _737 = (((_722.y * cbMtdParam._m0[15u].y) - _704) * _341) + _704;
    float _738 = (((_722.z * cbMtdParam._m0[15u].z) - _705) * _341) + _705;
    float _758 = ((_736 - (_736 * _608)) + (((_608 * 4.55000019073486328125) * ((_589 * ((cbMtdParam._m0[11u].x * _523) - _547)) + _547)) * _736)) * ((((cbMtdParam._m0[18u].x - _429) + ((1.0 - cbMtdParam._m0[18u].x) * _349)) * _446) + _429);
    float _759 = ((_737 - (_737 * _609)) + (((_609 * 4.55000019073486328125) * ((_590 * ((cbMtdParam._m0[11u].y * _524) - _548)) + _548)) * _737)) * ((((cbMtdParam._m0[18u].y - _430) + ((1.0 - cbMtdParam._m0[18u].y) * _349)) * _446) + _430);
    float _760 = ((_738 - (_610 * _738)) + (((_610 * 4.55000019073486328125) * ((_591 * ((cbMtdParam._m0[11u].z * _525) - _549)) + _549)) * _738)) * ((((cbMtdParam._m0[18u].z - _431) + ((1.0 - cbMtdParam._m0[18u].z) * _349)) * _446) + _431);
    float _771 = ((cbMtdParam._m0[22u].z - cbMtdParam._m0[25u].w) * _608) + cbMtdParam._m0[25u].w;
    float _774 = ((cbMtdParam._m0[20u].x - _771) * _344) + _771;
    float _777 = ((cbMtdParam._m0[20u].y - _774) * _347) + _774;
    float _780 = ((cbMtdParam._m0[20u].z - _777) * _341) + _777;
    vec4 _792 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _796 = _792.z;
    float _800 = (_792.x * 2.0) + (-1.0);
    float _802 = (_792.y * 2.0) + (-1.0);
    float _803 = dot(vec2(_800, _802), vec2(_800, _802));
    float _4403 = isnan(0.0) ? _803 : (isnan(_803) ? 0.0 : max(_803, 0.0));
    float _808 = sqrt(1.0 - (isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0))));
    float _811 = fma(_808, _307, fma(_802, _300, _800 * _279));
    float _814 = fma(_808, _308, fma(_802, _301, _800 * _280));
    float _817 = fma(_808, _309, fma(_802, _302, _800 * _281));
    float _821 = inversesqrt(dot(vec3(_811, _814, _817), vec3(_811, _814, _817)));
    float _822 = _821 * _811;
    float _823 = _821 * _814;
    float _824 = _821 * _817;
    float _841 = abs((fract(cbMtdParam._m0[21u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4414 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _842 = isnan(1.0) ? _4414 : (isnan(_4414) ? 1.0 : min(_4414, 1.0));
    float _847 = (_842 * _842) * (3.0 - (_842 * 2.0));
    float _848 = isnan(cbMtdParam._m0[21u].y) ? _847 : (isnan(_847) ? cbMtdParam._m0[21u].y : max(_847, cbMtdParam._m0[21u].y));
    vec4 _867 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].x * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[21u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _872 = (isnan(cbMtdParam._m0[21u].x) ? _848 : (isnan(_848) ? cbMtdParam._m0[21u].x : min(_848, cbMtdParam._m0[21u].x))) * cbMtdParam._m0[22u].y;
    vec4 _904 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _910 = (_904.x * 2.0) + (-1.0);
    float _911 = (_904.y * 2.0) + (-1.0);
    float _912 = dot(vec2(_910, _911), vec2(_910, _911));
    float _4435 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    float _917 = sqrt(1.0 - (isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))));
    float _920 = fma(_917, _307, fma(_911, _300, _910 * _279));
    float _923 = fma(_917, _308, fma(_911, _301, _910 * _280));
    float _926 = fma(_917, _309, fma(_911, _302, _910 * _281));
    float _930 = inversesqrt(dot(vec3(_920, _923, _926), vec3(_920, _923, _926)));
    float _931 = _930 * _920;
    float _932 = _930 * _923;
    float _933 = _930 * _926;
    float _936 = fma(_933, _262, fma(_932, _261, _931 * _260));
    float _939 = fma(_933, _295, fma(_932, _294, _931 * _293));
    float _942 = fma(_933, _309, fma(_932, _308, _931 * _307));
    float _946 = inversesqrt(dot(vec3(_936, _939, _942), vec3(_936, _939, _942)));
    vec4 _960 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _966 = (_960.x * 2.0) + (-1.0);
    float _967 = (_960.y * 2.0) + (-1.0);
    float _968 = dot(vec2(_966, _967), vec2(_966, _967));
    float _4446 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
    float _973 = sqrt(1.0 - (isnan(1.0) ? _4446 : (isnan(_4446) ? 1.0 : min(_4446, 1.0))));
    float _976 = fma(_973, _307, fma(_967, _300, _966 * _279));
    float _979 = fma(_973, _308, fma(_967, _301, _966 * _280));
    float _982 = fma(_973, _309, fma(_967, _302, _966 * _281));
    float _986 = inversesqrt(dot(vec3(_976, _979, _982), vec3(_976, _979, _982)));
    float _987 = _986 * _976;
    float _988 = _986 * _979;
    float _989 = _986 * _982;
    float _992 = fma(_989, _262, fma(_988, _261, _987 * _260));
    float _995 = fma(_989, _295, fma(_988, _294, _987 * _293));
    float _998 = fma(_989, _309, fma(_988, _308, _987 * _307));
    float _1002 = inversesqrt(dot(vec3(_992, _995, _998), vec3(_992, _995, _998)));
    vec4 _1015 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1021 = (_1015.x * 2.0) + (-1.0);
    float _1022 = (_1015.y * 2.0) + (-1.0);
    float _1023 = dot(vec2(_1021, _1022), vec2(_1021, _1022));
    float _4457 = isnan(0.0) ? _1023 : (isnan(_1023) ? 0.0 : max(_1023, 0.0));
    float _1028 = sqrt(1.0 - (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))));
    float _1031 = fma(_1028, _307, fma(_1022, _300, _1021 * _279));
    float _1034 = fma(_1028, _308, fma(_1022, _301, _1021 * _280));
    float _1037 = fma(_1028, _309, fma(_1022, _302, _1021 * _281));
    float _1041 = inversesqrt(dot(vec3(_1031, _1034, _1037), vec3(_1031, _1034, _1037)));
    float _1042 = _1041 * _1031;
    float _1043 = _1041 * _1034;
    float _1044 = _1041 * _1037;
    float _1047 = fma(_1044, _262, fma(_1043, _261, _1042 * _260));
    float _1050 = fma(_1044, _295, fma(_1043, _294, _1042 * _293));
    float _1053 = fma(_1044, _309, fma(_1043, _308, _1042 * _307));
    float _1057 = inversesqrt(dot(vec3(_1047, _1050, _1053), vec3(_1047, _1050, _1053)));
    float _1063 = fma(_824, _262, fma(_823, _261, _822 * _260));
    float _1066 = fma(_824, _295, fma(_823, _294, _822 * _293));
    float _1069 = fma(_824, _309, fma(_823, _308, _822 * _307));
    float _1073 = inversesqrt(dot(vec3(_1063, _1066, _1069), vec3(_1063, _1066, _1069)));
    float _1074 = _1073 * _1063;
    float _1075 = _1073 * _1066;
    float _1076 = _1073 * _1069;
    float _1083 = (((_1057 * _1047) - _1074) * _344) + _1074;
    float _1084 = (((_1057 * _1050) - _1075) * _344) + _1075;
    float _1085 = (((_1057 * _1053) - _1076) * _344) + _1076;
    vec4 _1098 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1104 = (_1098.x * 2.0) + (-1.0);
    float _1105 = (_1098.y * 2.0) + (-1.0);
    float _1106 = dot(vec2(_1104, _1105), vec2(_1104, _1105));
    float _4468 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1111 = sqrt(1.0 - (isnan(1.0) ? _4468 : (isnan(_4468) ? 1.0 : min(_4468, 1.0))));
    float _1114 = fma(_1111, _307, fma(_1105, _300, _1104 * _279));
    float _1117 = fma(_1111, _308, fma(_1105, _301, _1104 * _280));
    float _1120 = fma(_1111, _309, fma(_1105, _302, _1104 * _281));
    float _1124 = inversesqrt(dot(vec3(_1114, _1117, _1120), vec3(_1114, _1117, _1120)));
    float _1125 = _1124 * _1114;
    float _1126 = _1124 * _1117;
    float _1127 = _1124 * _1120;
    float _1130 = fma(_1127, _262, fma(_1126, _261, _1125 * _260));
    float _1133 = fma(_1127, _295, fma(_1126, _294, _1125 * _293));
    float _1136 = fma(_1127, _309, fma(_1126, _308, _1125 * _307));
    float _1140 = inversesqrt(dot(vec3(_1130, _1133, _1136), vec3(_1130, _1133, _1136)));
    float _1150 = (((_1140 * _1130) - _1083) * _347) + _1083;
    float _1151 = (((_1140 * _1133) - _1084) * _347) + _1084;
    float _1152 = (((_1140 * _1136) - _1085) * _347) + _1085;
    vec4 _1165 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _1171 = (_1165.x * 2.0) + (-1.0);
    float _1172 = (_1165.y * 2.0) + (-1.0);
    float _1173 = dot(vec2(_1171, _1172), vec2(_1171, _1172));
    float _4479 = isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0));
    float _1178 = sqrt(1.0 - (isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0))));
    float _1181 = fma(_1178, _307, fma(_1172, _300, _1171 * _279));
    float _1184 = fma(_1178, _308, fma(_1172, _301, _1171 * _280));
    float _1187 = fma(_1178, _309, fma(_1172, _302, _1171 * _281));
    float _1191 = inversesqrt(dot(vec3(_1181, _1184, _1187), vec3(_1181, _1184, _1187)));
    float _1192 = _1191 * _1181;
    float _1193 = _1191 * _1184;
    float _1194 = _1191 * _1187;
    float _1197 = fma(_1194, _262, fma(_1193, _261, _1192 * _260));
    float _1200 = fma(_1194, _295, fma(_1193, _294, _1192 * _293));
    float _1203 = fma(_1194, _309, fma(_1193, _308, _1192 * _307));
    float _1207 = inversesqrt(dot(vec3(_1197, _1200, _1203), vec3(_1197, _1200, _1203)));
    float _1217 = (((_1207 * _1203) - _1152) * _341) + _1152;
    vec4 _1229 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1235 = (_1229.x * 2.0) + (-1.0);
    float _1236 = (_1229.y * 2.0) + (-1.0);
    float _1237 = dot(vec2(_1235, _1236), vec2(_1235, _1236));
    float _4490 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
    float _1242 = sqrt(1.0 - (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0))));
    float _1245 = fma(_1242, _307, fma(_1236, _300, _1235 * _279));
    float _1248 = fma(_1242, _308, fma(_1236, _301, _1235 * _280));
    float _1251 = fma(_1242, _309, fma(_1236, _302, _1235 * _281));
    float _1255 = inversesqrt(dot(vec3(_1245, _1248, _1251), vec3(_1245, _1248, _1251)));
    float _1256 = _1255 * _1245;
    float _1257 = _1255 * _1248;
    float _1258 = _1255 * _1251;
    float _1261 = fma(_1258, _262, fma(_1257, _261, _1256 * _260));
    float _1264 = fma(_1258, _295, fma(_1257, _294, _1256 * _293));
    float _1267 = fma(_1258, _309, fma(_1257, _308, _1256 * _307));
    float _1271 = inversesqrt(dot(vec3(_1261, _1264, _1267), vec3(_1261, _1264, _1267)));
    vec4 _1309 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _1323 = (((((((_992 * _493) * _1002) * cbMtdParam._m0[24u].z) + ((((_602 * _586) * _936) * _946) * cbMtdParam._m0[24u].w)) + _1150) + (((_1207 * _1197) - _1150) * _341)) + (((_1261 * _503) * _1271) * cbMtdParam._m0[23u].z)) + (((_1309.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1328 = (((((((_995 * _493) * _1002) * cbMtdParam._m0[24u].z) + ((((_603 * _586) * _939) * _946) * cbMtdParam._m0[24u].w)) + _1151) + (((_1207 * _1200) - _1151) * _341)) + (((_1264 * _503) * _1271) * cbMtdParam._m0[23u].z)) + (((_1309.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1331 = fma(_1217, _307, fma(_1328, _293, _1323 * _260));
    float _1334 = fma(_1217, _308, fma(_1328, _294, _1323 * _261));
    float _1337 = fma(_1217, _309, fma(_1328, _295, _1323 * _262));
    float _1341 = inversesqrt(dot(vec3(_1331, _1334, _1337), vec3(_1331, _1334, _1337)));
    float _1342 = _1341 * _1331;
    float _1343 = _1341 * _1334;
    float _1344 = _1341 * _1337;
    float _4501 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _1345 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
    float _4512 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _1346 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
    float _4523 = isnan(0.0) ? _758 : (isnan(_758) ? 0.0 : max(_758, 0.0));
    float _4534 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
    float _4545 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _4556 = isnan(0.0) ? _780 : (isnan(_780) ? 0.0 : max(_780, 0.0));
    float _1350 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
    float _1366 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1406 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1416 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1406);
    float _1417 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1406);
    float _1418 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1406);
    float _1422 = inversesqrt(dot(vec3(_1416, _1417, _1418), vec3(_1416, _1417, _1418)));
    float _1423 = _1416 * _1422;
    float _1424 = _1417 * _1422;
    float _1425 = _1418 * _1422;
    float _1431 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1432 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1450 = fma(_1344, cbSceneParam._m0[5u].z, fma(_1343, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1342));
    float _1453 = fma(_1344, cbSceneParam._m0[6u].z, fma(_1343, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1342));
    float _1456 = fma(_1344, cbSceneParam._m0[7u].z, fma(_1343, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1342));
    uint _1469 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1470 = _1469 + 9u;
    uint _1471 = _1470 + uint(cbMatDynParam._m0[0u].w);
    float _1477 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0)))) * cbInstanceData._m0[_1471].x;
    float _1478 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0)))) * cbInstanceData._m0[_1471].y;
    float _1479 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0)))) * cbInstanceData._m0[_1471].z;
    float _4567 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
    float _1480 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
    float _4578 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    float _1481 = isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0));
    float _4589 = isnan(0.0) ? _1479 : (isnan(_1479) ? 0.0 : max(_1479, 0.0));
    float _1482 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
    float _1483 = 1.0 - _1350;
    float _1484 = _1480 * _1483;
    float _1485 = _1481 * _1483;
    float _1486 = _1482 * _1483;
    float _1491 = (_1480 + (-0.039999999105930328369140625)) * _1350;
    float _1492 = (_1481 + (-0.039999999105930328369140625)) * _1350;
    float _1493 = (_1482 + (-0.039999999105930328369140625)) * _1350;
    float _1494 = _1491 + 0.039999999105930328369140625;
    float _1496 = _1492 + 0.039999999105930328369140625;
    float _1497 = _1493 + 0.039999999105930328369140625;
    vec4 _1506 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1431, cbSceneParam._m0[86u].y * _1432));
    float _1509 = _1506.x * TEXCOORD_7.w;
    float _1510 = dot(vec3(_1342, _1343, _1344), vec3(_1423, _1424, _1425));
    float _1513 = _1510 * 2.0;
    float _1517 = (_1513 * _1342) - _1423;
    float _1518 = (_1513 * _1343) - _1424;
    float _1519 = (_1513 * _1344) - _1425;
    float _1523 = abs(dot(vec3(_1423, _1424, _1425), vec3(_1342, _1343, _1344)));
    float _4600 = isnan(0.0) ? _1523 : (isnan(_1523) ? 0.0 : max(_1523, 0.0));
    float _1525 = sqrt(_1346);
    float _1537 = exp2((_1525 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1525 * 3.0));
    float _1543 = (1.0 - _1537) * ((_1525 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1544 = _1537 * _1525;
    float _1572 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1576 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1580 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1881;
    float _1883;
    float _1884;
    float _1885;
    float _1886;
    float _1887;
    float _1888;
    float _1889;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    float _1894;
    float _1895;
    float _1896;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1606 = fma(_1580, cbModelParam._m0[26u].z, fma(_1576, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1572));
        float _1610 = fma(_1580, cbModelParam._m0[27u].z, fma(_1576, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1572));
        float _1614 = fma(_1580, cbModelParam._m0[28u].z, fma(_1576, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1572));
        float _1639 = _1572 + _1342;
        float _1640 = _1576 + _1343;
        float _1641 = _1580 + _1344;
        float _1651 = fma(_1641, cbModelParam._m0[26u].z, fma(_1640, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1639)) - _1606;
        float _1652 = fma(_1641, cbModelParam._m0[27u].z, fma(_1640, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1639)) - _1610;
        float _1653 = fma(_1641, cbModelParam._m0[28u].z, fma(_1640, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1639)) - _1614;
        float _1657 = inversesqrt(dot(vec3(_1651, _1652, _1653), vec3(_1651, _1652, _1653)));
        float _1670 = ((_1657 * _1651) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1606 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1671 = ((_1657 * _1652) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1610 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1672 = ((_1657 * _1653) / cbModelParam._m0[34u].z) + ((((((_1614 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1675 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1670, _1671, _1672), 0.0);
        vec4 _1682 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1670, _1671, _1672), 0.0);
        vec4 _1689 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1670, _1671, _1672), 0.0);
        vec4 _1696 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1670, _1671, _1672), 0.0);
        float _1709 = exp2((_1675.w + (-0.5)) * 20.0) * 2.0;
        float _1710 = _1709 * (_1675.x + (-0.5));
        float _1711 = _1709 * (_1675.y + (-0.5));
        float _1712 = _1709 * (_1675.z + (-0.5));
        float _1719 = exp2((_1682.w + (-0.5)) * 20.0) * 2.0;
        float _1720 = _1719 * (_1682.x + (-0.5));
        float _1721 = _1719 * (_1682.y + (-0.5));
        float _1722 = _1719 * (_1682.z + (-0.5));
        float _1729 = exp2((_1689.w + (-0.5)) * 20.0) * 2.0;
        float _1730 = _1729 * (_1689.x + (-0.5));
        float _1731 = _1729 * (_1689.y + (-0.5));
        float _1732 = _1729 * (_1689.z + (-0.5));
        float _1739 = exp2((_1696.w + (-0.5)) * 20.0) * 2.0;
        float _1740 = _1739 * (_1696.x + (-0.5));
        float _1741 = _1739 * (_1696.y + (-0.5));
        float _1742 = _1739 * (_1696.z + (-0.5));
        float _1743 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
        float _1744 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1745 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1746 = _1710 * 0.5;
        float _1747 = _1720 * 0.5;
        float _1748 = _1730 * 0.5;
        float _1749 = dot(vec3(_1746, _1747, _1748), vec3(_1746, _1747, _1748));
        float _1754 = (_1749 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1749);
        float _1763 = (dot(vec3(_1342, _1343, _1344), vec3(_1754 * _1746, _1754 * _1747, _1754 * _1748)) + 1.0) * 0.5;
        float _4626 = isnan(0.0) ? _1763 : (isnan(_1763) ? 0.0 : max(_1763, 0.0));
        float _1773 = sqrt(((_1747 * _1747) + (_1746 * _1746)) + (_1748 * _1748)) / (_1743 + 9.9999997473787516355514526367188e-06);
        float _4637 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
        float _1774 = isnan(1.0) ? _4637 : (isnan(_4637) ? 1.0 : min(_4637, 1.0));
        float _1775 = _1774 * 2.0;
        float _1779 = (1.0 - _1774) / (_1774 + 1.0);
        float _4648 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
        float _1780 = isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0));
        float _1789 = ((((1.0 - _1780) * (_1775 + 2.0)) * exp2(log2(isnan(1.0) ? _4626 : (isnan(_4626) ? 1.0 : min(_4626, 1.0))) * (_1775 + 1.0))) + _1780) * _1743;
        float _1790 = _1711 * 0.5;
        float _1791 = _1721 * 0.5;
        float _1792 = _1731 * 0.5;
        float _1793 = dot(vec3(_1790, _1791, _1792), vec3(_1790, _1791, _1792));
        float _1798 = (_1793 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1793);
        float _1806 = (dot(vec3(_1342, _1343, _1344), vec3(_1798 * _1790, _1798 * _1791, _1798 * _1792)) + 1.0) * 0.5;
        float _4659 = isnan(0.0) ? _1806 : (isnan(_1806) ? 0.0 : max(_1806, 0.0));
        float _1815 = sqrt(((_1791 * _1791) + (_1790 * _1790)) + (_1792 * _1792)) / (_1744 + 9.9999997473787516355514526367188e-06);
        float _4670 = isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0));
        float _1816 = isnan(1.0) ? _4670 : (isnan(_4670) ? 1.0 : min(_4670, 1.0));
        float _1817 = _1816 * 2.0;
        float _1821 = (1.0 - _1816) / (_1816 + 1.0);
        float _4681 = isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0));
        float _1822 = isnan(1.0) ? _4681 : (isnan(_4681) ? 1.0 : min(_4681, 1.0));
        float _1831 = ((((1.0 - _1822) * (_1817 + 2.0)) * exp2(log2(isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0))) * (_1817 + 1.0))) + _1822) * _1744;
        float _1832 = _1712 * 0.5;
        float _1833 = _1722 * 0.5;
        float _1834 = _1732 * 0.5;
        float _1835 = dot(vec3(_1832, _1833, _1834), vec3(_1832, _1833, _1834));
        float _1840 = (_1835 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1835);
        float _1848 = (dot(vec3(_1342, _1343, _1344), vec3(_1840 * _1832, _1840 * _1833, _1840 * _1834)) + 1.0) * 0.5;
        float _4692 = isnan(0.0) ? _1848 : (isnan(_1848) ? 0.0 : max(_1848, 0.0));
        float _1857 = sqrt(((_1833 * _1833) + (_1832 * _1832)) + (_1834 * _1834)) / (_1745 + 9.9999997473787516355514526367188e-06);
        float _4703 = isnan(0.0) ? _1857 : (isnan(_1857) ? 0.0 : max(_1857, 0.0));
        float _1858 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
        float _1859 = _1858 * 2.0;
        float _1863 = (1.0 - _1858) / (_1858 + 1.0);
        float _4714 = isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0));
        float _1864 = isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0));
        float _1873 = ((((1.0 - _1864) * (_1859 + 2.0)) * exp2(log2(isnan(1.0) ? _4692 : (isnan(_4692) ? 1.0 : min(_4692, 1.0))) * (_1859 + 1.0))) + _1864) * _1745;
        _1881 = _1712;
        _1883 = _1711;
        _1884 = _1710;
        _1885 = _1722;
        _1886 = _1721;
        _1887 = _1720;
        _1888 = _1732;
        _1889 = _1731;
        _1890 = _1730;
        _1891 = _1745;
        _1892 = _1744;
        _1893 = _1743;
        _1894 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0)));
        _1895 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0)));
        _1896 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0)));
    }
    else
    {
        _1881 = _1882;
        _1883 = _1882;
        _1884 = _1882;
        _1885 = _1882;
        _1886 = _1882;
        _1887 = _1882;
        _1888 = _1882;
        _1889 = _1882;
        _1890 = _1882;
        _1891 = _1882;
        _1892 = _1882;
        _1893 = _1882;
        _1894 = 0.0;
        _1895 = 0.0;
        _1896 = 0.0;
    }
    float _2191;
    float _2192;
    float _2193;
    float _2194;
    float _2195;
    float _2196;
    float _2197;
    float _2198;
    float _2199;
    float _2200;
    float _2201;
    float _2202;
    float _2203;
    float _2204;
    float _2205;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1922 = fma(_1580, cbModelParam._m0[30u].z, fma(_1576, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1572));
        float _1926 = fma(_1580, cbModelParam._m0[31u].z, fma(_1576, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1572));
        float _1930 = fma(_1580, cbModelParam._m0[32u].z, fma(_1576, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1572));
        float _1953 = _1572 + _1342;
        float _1954 = _1576 + _1343;
        float _1955 = _1580 + _1344;
        float _1965 = fma(_1955, cbModelParam._m0[30u].z, fma(_1954, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1953)) - _1922;
        float _1966 = fma(_1955, cbModelParam._m0[31u].z, fma(_1954, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1953)) - _1926;
        float _1967 = fma(_1955, cbModelParam._m0[32u].z, fma(_1954, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1953)) - _1930;
        float _1971 = inversesqrt(dot(vec3(_1965, _1966, _1967), vec3(_1965, _1966, _1967)));
        float _1984 = ((_1971 * _1965) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1922 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1985 = ((_1971 * _1966) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1926 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1986 = ((_1971 * _1967) / cbModelParam._m0[35u].z) + ((((((_1930 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1988 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1984, _1985, _1986), 0.0);
        vec4 _1995 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1984, _1985, _1986), 0.0);
        vec4 _2002 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1984, _1985, _1986), 0.0);
        vec4 _2009 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1984, _1985, _1986), 0.0);
        float _2021 = exp2((_1988.w + (-0.5)) * 20.0) * 2.0;
        float _2022 = _2021 * (_1988.x + (-0.5));
        float _2023 = _2021 * (_1988.y + (-0.5));
        float _2024 = _2021 * (_1988.z + (-0.5));
        float _2031 = exp2((_1995.w + (-0.5)) * 20.0) * 2.0;
        float _2032 = _2031 * (_1995.x + (-0.5));
        float _2033 = _2031 * (_1995.y + (-0.5));
        float _2034 = _2031 * (_1995.z + (-0.5));
        float _2041 = exp2((_2002.w + (-0.5)) * 20.0) * 2.0;
        float _2042 = _2041 * (_2002.x + (-0.5));
        float _2043 = _2041 * (_2002.y + (-0.5));
        float _2044 = _2041 * (_2002.z + (-0.5));
        float _2051 = exp2((_2009.w + (-0.5)) * 20.0) * 2.0;
        float _2052 = _2051 * (_2009.x + (-0.5));
        float _2053 = _2051 * (_2009.y + (-0.5));
        float _2054 = _2051 * (_2009.z + (-0.5));
        float _2055 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
        float _2056 = isnan(0.0) ? _2053 : (isnan(_2053) ? 0.0 : max(_2053, 0.0));
        float _2057 = isnan(0.0) ? _2054 : (isnan(_2054) ? 0.0 : max(_2054, 0.0));
        float _2058 = _2022 * 0.5;
        float _2059 = _2032 * 0.5;
        float _2060 = _2042 * 0.5;
        float _2061 = dot(vec3(_2058, _2059, _2060), vec3(_2058, _2059, _2060));
        float _2066 = (_2061 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2061);
        float _2074 = (dot(vec3(_1342, _1343, _1344), vec3(_2066 * _2058, _2066 * _2059, _2066 * _2060)) + 1.0) * 0.5;
        float _4755 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
        float _2083 = sqrt(((_2059 * _2059) + (_2058 * _2058)) + (_2060 * _2060)) / (_2055 + 9.9999997473787516355514526367188e-06);
        float _4766 = isnan(0.0) ? _2083 : (isnan(_2083) ? 0.0 : max(_2083, 0.0));
        float _2084 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _2085 = _2084 * 2.0;
        float _2089 = (1.0 - _2084) / (_2084 + 1.0);
        float _4777 = isnan(0.0) ? _2089 : (isnan(_2089) ? 0.0 : max(_2089, 0.0));
        float _2090 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
        float _2099 = ((((1.0 - _2090) * (_2085 + 2.0)) * exp2(log2(isnan(1.0) ? _4755 : (isnan(_4755) ? 1.0 : min(_4755, 1.0))) * (_2085 + 1.0))) + _2090) * _2055;
        float _2100 = _2023 * 0.5;
        float _2101 = _2033 * 0.5;
        float _2102 = _2043 * 0.5;
        float _2103 = dot(vec3(_2100, _2101, _2102), vec3(_2100, _2101, _2102));
        float _2108 = (_2103 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2103);
        float _2116 = (dot(vec3(_1342, _1343, _1344), vec3(_2108 * _2100, _2108 * _2101, _2108 * _2102)) + 1.0) * 0.5;
        float _4788 = isnan(0.0) ? _2116 : (isnan(_2116) ? 0.0 : max(_2116, 0.0));
        float _2125 = sqrt(((_2101 * _2101) + (_2100 * _2100)) + (_2102 * _2102)) / (_2056 + 9.9999997473787516355514526367188e-06);
        float _4799 = isnan(0.0) ? _2125 : (isnan(_2125) ? 0.0 : max(_2125, 0.0));
        float _2126 = isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0));
        float _2127 = _2126 * 2.0;
        float _2131 = (1.0 - _2126) / (_2126 + 1.0);
        float _4810 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2132 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
        float _2141 = ((((1.0 - _2132) * (_2127 + 2.0)) * exp2(log2(isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0))) * (_2127 + 1.0))) + _2132) * _2056;
        float _2142 = _2024 * 0.5;
        float _2143 = _2034 * 0.5;
        float _2144 = _2044 * 0.5;
        float _2145 = dot(vec3(_2142, _2143, _2144), vec3(_2142, _2143, _2144));
        float _2150 = (_2145 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2145);
        float _2158 = (dot(vec3(_1342, _1343, _1344), vec3(_2150 * _2142, _2150 * _2143, _2150 * _2144)) + 1.0) * 0.5;
        float _4821 = isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0));
        float _2167 = sqrt(((_2143 * _2143) + (_2142 * _2142)) + (_2144 * _2144)) / (_2057 + 9.9999997473787516355514526367188e-06);
        float _4832 = isnan(0.0) ? _2167 : (isnan(_2167) ? 0.0 : max(_2167, 0.0));
        float _2168 = isnan(1.0) ? _4832 : (isnan(_4832) ? 1.0 : min(_4832, 1.0));
        float _2169 = _2168 * 2.0;
        float _2173 = (1.0 - _2168) / (_2168 + 1.0);
        float _4843 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
        float _2174 = isnan(1.0) ? _4843 : (isnan(_4843) ? 1.0 : min(_4843, 1.0));
        float _2183 = ((((1.0 - _2174) * (_2169 + 2.0)) * exp2(log2(isnan(1.0) ? _4821 : (isnan(_4821) ? 1.0 : min(_4821, 1.0))) * (_2169 + 1.0))) + _2174) * _2057;
        _2191 = _2024;
        _2192 = _2023;
        _2193 = _2022;
        _2194 = _2034;
        _2195 = _2033;
        _2196 = _2032;
        _2197 = _2044;
        _2198 = _2043;
        _2199 = _2042;
        _2200 = _2057;
        _2201 = _2056;
        _2202 = _2055;
        _2203 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0)));
        _2204 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0)));
        _2205 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0)));
    }
    else
    {
        _2191 = _1882;
        _2192 = _1882;
        _2193 = _1882;
        _2194 = _1882;
        _2195 = _1882;
        _2196 = _1882;
        _2197 = _1882;
        _2198 = _1882;
        _2199 = _1882;
        _2200 = _1882;
        _2201 = _1882;
        _2202 = _1882;
        _2203 = 0.0;
        _2204 = 0.0;
        _2205 = 0.0;
    }
    float _2215 = (cbModelParam._m0[1u].x * (_2203 - _1894)) + _1894;
    float _2216 = (cbModelParam._m0[1u].x * (_2204 - _1895)) + _1895;
    float _2217 = (cbModelParam._m0[1u].x * (_2205 - _1896)) + _1896;
    float _2238 = fma(_2217, cbSceneParam._m0[89u].z, fma(_2216, cbSceneParam._m0[89u].y, _2215 * cbSceneParam._m0[89u].x));
    float _2241 = fma(_2217, cbSceneParam._m0[90u].z, fma(_2216, cbSceneParam._m0[90u].y, _2215 * cbSceneParam._m0[90u].x));
    float _2244 = fma(_2217, cbSceneParam._m0[91u].z, fma(_2216, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2215));
    float _2259 = _1517 * 0.5;
    float _2260 = _1518 * 0.5;
    float _2261 = _1519 * 0.5;
    float _2262 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_2193, _2196, _2199, _2202));
    float _2265 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_2192, _2195, _2198, _2201));
    float _2268 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_2191, _2194, _2197, _2200));
    float _2302;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2275 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_1881, _1885, _1888, _1891));
        float _2279 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_1883, _1886, _1889, _1892));
        float _2283 = dot(vec4(_2259, _2260, _2261, 1.0), vec4(_1884, _1887, _1890, _1893));
        float _2290 = dot(vec4(cbModelParam._m0[39u]), vec4(_2259, _2260, _2261, 1.0));
        _2302 = dot(vec3(isnan(0.0) ? _2283 : (isnan(_2283) ? 0.0 : max(_2283, 0.0)), isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0)), isnan(0.0) ? _2275 : (isnan(_2275) ? 0.0 : max(_2275, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2290) ? 0.0 : (isnan(0.0) ? _2290 : max(0.0, _2290))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2302 = 1.0;
    }
    float _2313;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2304 = dot(vec4(cbModelParam._m0[40u]), vec4(_2259, _2260, _2261, 1.0));
        _2313 = dot(vec3(isnan(0.0) ? _2262 : (isnan(_2262) ? 0.0 : max(_2262, 0.0)), isnan(0.0) ? _2265 : (isnan(_2265) ? 0.0 : max(_2265, 0.0)), isnan(0.0) ? _2268 : (isnan(_2268) ? 0.0 : max(_2268, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2304) ? 0.0 : (isnan(0.0) ? _2304 : max(0.0, _2304))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2313 = 1.0;
    }
    float _2317 = (_2313 * cbModelParam._m0[1u].x) + (_2302 * (1.0 - cbModelParam._m0[1u].x));
    float _2327 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1346);
    float _2328 = isnan(_2327) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2327 : min(cbModelParam._m0[25u].z, _2327));
    float _2408;
    float _2410;
    float _2412;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2375 = fma(_1580, cbModelParam._m0[13u].z, fma(_1576, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1572)) + cbModelParam._m0[13u].w;
        float _2379 = fma(_1580, cbModelParam._m0[14u].z, fma(_1576, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1572)) + cbModelParam._m0[14u].w;
        float _2383 = fma(_1580, cbModelParam._m0[15u].z, fma(_1576, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1572)) + cbModelParam._m0[15u].w;
        float _2386 = fma(_1519, cbModelParam._m0[13u].z, fma(_1518, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1517));
        float _2389 = fma(_1519, cbModelParam._m0[14u].z, fma(_1518, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1517));
        float _2392 = fma(_1519, cbModelParam._m0[15u].z, fma(_1518, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1517));
        float _2420;
        if (_2386 > 0.0)
        {
            _2420 = abs((1.0 - _2375) / _2386);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2386 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2375 + 1.0) / _2386);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2420 = frontier_phi_16_14_ladder;
        }
        float _2643;
        if (_2389 > 0.0)
        {
            _2643 = abs((1.0 - _2379) / _2389);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2389 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2379 + 1.0) / _2389);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2643 = frontier_phi_25_21_ladder;
        }
        float _2900;
        if (_2392 > 0.0)
        {
            _2900 = abs((1.0 - _2383) / _2392);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2392 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2383 + 1.0) / _2392);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2900 = frontier_phi_37_32_ladder;
        }
        float _2902 = isnan(_2643) ? _2420 : (isnan(_2420) ? _2643 : min(_2420, _2643));
        float _2903 = isnan(_2900) ? _2902 : (isnan(_2902) ? _2900 : min(_2902, _2900));
        float _2907 = (_2903 * _2386) + _2375;
        float _2908 = (_2903 * _2389) + _2379;
        float _2909 = (_2903 * _2392) + _2383;
        float _2910 = _2903 * 9.9999997473787516355514526367188e-05;
        float _2912 = (-1.0) - _2910;
        float _2914 = _2910 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2909 > _2914) || ((_2909 < _2912) || ((_2908 > _2914) || ((_2908 < _2912) || ((_2907 < _2912) || (_2907 > _2914))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3037 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2909, cbModelParam._m0[9u].z, fma(_2908, cbModelParam._m0[9u].y, _2907 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2909, cbModelParam._m0[10u].z, fma(_2908, cbModelParam._m0[10u].y, _2907 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2909, cbModelParam._m0[11u].z, fma(_2908, cbModelParam._m0[11u].y, _2907 * cbModelParam._m0[11u].x))), _2328);
            frontier_phi_15_37_ladder = _3037.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _3037.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _3037.x * cbModelParam._m0[1u].y;
        }
        _2408 = frontier_phi_15_37_ladder_2;
        _2410 = frontier_phi_15_37_ladder_1;
        _2412 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2396 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1517, _1518, _1519), _2328);
        _2408 = _2396.x * cbModelParam._m0[1u].y;
        _2410 = _2396.y * cbModelParam._m0[1u].y;
        _2412 = _2396.z * cbModelParam._m0[1u].y;
    }
    float _2416 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1346);
    float _2417 = isnan(_2416) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2416 : min(cbModelParam._m0[25u].w, _2416));
    float _2506;
    float _2508;
    float _2510;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2470 = fma(_1580, cbModelParam._m0[21u].z, fma(_1576, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1572)) + cbModelParam._m0[21u].w;
        float _2474 = fma(_1580, cbModelParam._m0[22u].z, fma(_1576, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1572)) + cbModelParam._m0[22u].w;
        float _2478 = fma(_1580, cbModelParam._m0[23u].z, fma(_1576, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1572)) + cbModelParam._m0[23u].w;
        float _2481 = fma(_1519, cbModelParam._m0[21u].z, fma(_1518, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1517));
        float _2484 = fma(_1519, cbModelParam._m0[22u].z, fma(_1518, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1517));
        float _2487 = fma(_1519, cbModelParam._m0[23u].z, fma(_1518, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1517));
        float _2648;
        if (_2481 > 0.0)
        {
            _2648 = abs((1.0 - _2470) / _2481);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2481 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2470 + 1.0) / _2481);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2648 = frontier_phi_27_23_ladder;
        }
        float _2927;
        if (_2484 > 0.0)
        {
            _2927 = abs((1.0 - _2474) / _2484);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2484 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2474 + 1.0) / _2484);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2927 = frontier_phi_39_34_ladder;
        }
        float _3140;
        if (_2487 > 0.0)
        {
            _3140 = abs((1.0 - _2478) / _2487);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_2487 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_2478 + 1.0) / _2487);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _3140 = frontier_phi_48_45_ladder;
        }
        float _3142 = isnan(_2927) ? _2648 : (isnan(_2648) ? _2927 : min(_2648, _2927));
        float _3143 = isnan(_3140) ? _3142 : (isnan(_3142) ? _3140 : min(_3142, _3140));
        float _3147 = (_3143 * _2481) + _2470;
        float _3148 = (_3143 * _2484) + _2474;
        float _3149 = (_3143 * _2487) + _2478;
        float _3150 = _3143 * 9.9999997473787516355514526367188e-05;
        float _3151 = (-1.0) - _3150;
        float _3153 = _3150 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_3149 > _3153) || ((_3149 < _3151) || ((_3148 > _3153) || ((_3148 < _3151) || ((_3147 < _3151) || (_3147 > _3153))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3368 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3149, cbModelParam._m0[17u].z, fma(_3148, cbModelParam._m0[17u].y, _3147 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3149, cbModelParam._m0[18u].z, fma(_3148, cbModelParam._m0[18u].y, _3147 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3149, cbModelParam._m0[19u].z, fma(_3148, cbModelParam._m0[19u].y, _3147 * cbModelParam._m0[19u].x))), _2417);
            frontier_phi_24_48_ladder = _3368.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _3368.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _3368.x * cbModelParam._m0[1u].z;
        }
        _2506 = frontier_phi_24_48_ladder_2;
        _2508 = frontier_phi_24_48_ladder_1;
        _2510 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _2490 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1517, _1518, _1519), _2417);
        _2506 = _2490.x * cbModelParam._m0[1u].z;
        _2508 = _2490.y * cbModelParam._m0[1u].z;
        _2510 = _2490.z * cbModelParam._m0[1u].z;
    }
    float _2523 = (((_1543 * _1494) + _1544) * _1509) * ((cbModelParam._m0[1u].w * (_2506 - _2408)) + _2408);
    float _2525 = (((_1543 * _1496) + _1544) * _1509) * ((cbModelParam._m0[1u].w * (_2508 - _2410)) + _2410);
    float _2527 = (((_1543 * _1497) + _1544) * _1509) * ((cbModelParam._m0[1u].w * (_2510 - _2412)) + _2412);
    float _2530 = fma(_2527, cbSceneParam._m0[89u].z, fma(_2525, cbSceneParam._m0[89u].y, _2523 * cbSceneParam._m0[89u].x));
    float _2533 = fma(_2527, cbSceneParam._m0[90u].z, fma(_2525, cbSceneParam._m0[90u].y, _2523 * cbSceneParam._m0[90u].x));
    float _2536 = fma(_2527, cbSceneParam._m0[91u].z, fma(_2525, cbSceneParam._m0[91u].y, _2523 * cbSceneParam._m0[91u].x));
    vec4 _2544 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1431, _1432));
    float _2546 = _2544.w;
    float _2558 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2546);
    float _2559 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2546);
    float _2560 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2546);
    uvec4 _2564 = floatBitsToUint(cbInstanceData._m0[_1469 + 5u]);
    uint _2566 = _2564.x * 14u;
    uint _2567 = _2566 + 13u;
    float _2574 = _1509 + (-1.0);
    float _2579 = (cbLight._m0[_2567].x * _2574) + 1.0;
    float _2580 = (cbLight._m0[_2567].y * _2574) + 1.0;
    float _2581 = (cbLight._m0[_2567].z * _2574) + 1.0;
    float _2582 = (cbLight._m0[_2567].w * _2574) + 1.0;
    uint _2583 = _2566 + 5u;
    float _2589 = isnan(1.0) ? _2580 : (isnan(_2580) ? 1.0 : min(_2580, 1.0));
    uint _2593 = _2566 + 4u;
    float _2602 = isnan(1.0) ? _2579 : (isnan(_2579) ? 1.0 : min(_2579, 1.0));
    uint _2606 = _2566 | 1u;
    float _2617 = dot(vec3(cbLight._m0[_2566].xyz), vec3(_1342, _1343, _1344));
    float _2620 = dot(vec3(cbLight._m0[_2606].xyz), vec3(_1342, _1343, _1344));
    float _4979 = isnan(0.0) ? _2617 : (isnan(_2617) ? 0.0 : max(_2617, 0.0));
    float _4990 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2625 = (isnan(1.0) ? _4979 : (isnan(_4979) ? 1.0 : min(_4979, 1.0))) * 0.3183098733425140380859375;
    float _2627 = (isnan(1.0) ? _4990 : (isnan(_4990) ? 1.0 : min(_4990, 1.0))) * 0.3183098733425140380859375;
    float _2634 = ((cbLight._m0[_2583].x * _2589) * _2627) + (((cbLight._m0[_2593].x * _2558) * _2602) * _2625);
    float _2635 = ((_2589 * cbLight._m0[_2583].y) * _2627) + (((cbLight._m0[_2593].y * _2559) * _2602) * _2625);
    float _2636 = ((_2589 * cbLight._m0[_2583].z) * _2627) + (((cbLight._m0[_2593].z * _2560) * _2602) * _2625);
    uvec4 _2640 = floatBitsToUint(cbLight._m0[_2566 + 12u]);
    bool _2642 = _2640.x == 0u;
    float _2653;
    float _2655;
    float _2657;
    if (_2642)
    {
        _2653 = _2634;
        _2655 = _2635;
        _2657 = _2636;
    }
    else
    {
        uint _2661 = _2566 + 6u;
        float _2677 = (dot(vec3(cbLight._m0[_2566 + 2u].xyz), vec3(_1342, _1343, _1344)) * 0.5) + 0.5;
        float _2678 = _2677 * _2677;
        float _5001 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2679 = isnan(1.0) ? _5001 : (isnan(_5001) ? 1.0 : min(_5001, 1.0));
        float _2680 = isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0));
        _2653 = (((cbLight._m0[_2661].x * 0.3183098733425140380859375) * _2679) * _2680) + _2634;
        _2655 = (((cbLight._m0[_2661].y * 0.3183098733425140380859375) * _2679) * _2680) + _2635;
        _2657 = (((cbLight._m0[_2661].z * 0.3183098733425140380859375) * _2679) * _2680) + _2636;
    }
    bool _2660 = _2640.y == 0u;
    float _2698;
    float _2700;
    float _2702;
    if (_2660)
    {
        _2698 = _2653;
        _2700 = _2655;
        _2702 = _2657;
    }
    else
    {
        uint _2871 = _2566 + 7u;
        float _2887 = (dot(vec3(cbLight._m0[_2566 + 3u].xyz), vec3(_1342, _1343, _1344)) * 0.5) + 0.5;
        float _2888 = _2887 * _2887;
        float _5017 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
        float _2889 = isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0));
        float _2890 = isnan(1.0) ? _2582 : (isnan(_2582) ? 1.0 : min(_2582, 1.0));
        _2698 = (((cbLight._m0[_2871].x * 0.3183098733425140380859375) * _2889) * _2890) + _2653;
        _2700 = (((cbLight._m0[_2871].y * 0.3183098733425140380859375) * _2889) * _2890) + _2655;
        _2702 = (((cbLight._m0[_2871].z * 0.3183098733425140380859375) * _2889) * _2890) + _2657;
    }
    uint _2705 = _2566 + 8u;
    float _2718 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2566].w)) * _1346) * 0.949999988079071044921875);
    float _2719 = _2718 * _2718;
    float _2720 = cbLight._m0[_2566].x + _1423;
    float _2721 = cbLight._m0[_2566].y + _1424;
    float _2722 = cbLight._m0[_2566].z + _1425;
    float _2726 = inversesqrt(dot(vec3(_2720, _2721, _2722), vec3(_2720, _2721, _2722)));
    float _2727 = _2726 * _2720;
    float _2728 = _2726 * _2721;
    float _2729 = _2726 * _2722;
    float _2730 = dot(vec3(_1342, _1343, _1344), vec3(cbLight._m0[_2566].xyz));
    float _5033 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
    float _2733 = isnan(1.0) ? _5033 : (isnan(_5033) ? 1.0 : min(_5033, 1.0));
    float _5044 = isnan(0.0) ? _1510 : (isnan(_1510) ? 0.0 : max(_1510, 0.0));
    float _2734 = isnan(1.0) ? _5044 : (isnan(_5044) ? 1.0 : min(_5044, 1.0));
    float _2735 = dot(vec3(_1342, _1343, _1344), vec3(_2727, _2728, _2729));
    float _5055 = isnan(0.0) ? _2735 : (isnan(_2735) ? 0.0 : max(_2735, 0.0));
    float _2738 = isnan(1.0) ? _5055 : (isnan(_5055) ? 1.0 : min(_5055, 1.0));
    float _2739 = dot(vec3(cbLight._m0[_2566].xyz), vec3(_2727, _2728, _2729));
    float _5066 = isnan(0.0) ? _2739 : (isnan(_2739) ? 0.0 : max(_2739, 0.0));
    float _2743 = _2719 * _2719;
    float _2747 = ((_2738 * _2738) * (_2743 + (-1.0))) + 1.0;
    float _2755 = exp2(log2(1.0 - (isnan(1.0) ? _5066 : (isnan(_5066) ? 1.0 : min(_5066, 1.0)))) * 5.0);
    float _2756 = 0.959999978542327880859375 - _1491;
    float _2758 = 0.959999978542327880859375 - _1492;
    float _2759 = 0.959999978542327880859375 - _1493;
    float _2766 = 1.0 - _2719;
    float _2777 = (0.5 / (((_2734 * ((_2733 * _2766) + _2719)) + 9.9999999392252902907785028219223e-09) + (((_2734 * _2766) + _2719) * _2733))) * _2733;
    float _5077 = isnan(0.0) ? _2777 : (isnan(_2777) ? 0.0 : max(_2777, 0.0));
    float _2779 = (isnan(1.0) ? _5077 : (isnan(_5077) ? 1.0 : min(_5077, 1.0))) * (_2743 / ((_2747 * _2747) * 3.141590118408203125));
    uint _2793 = _2566 + 9u;
    float _2804 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2606].w)) * _1346) * 0.949999988079071044921875);
    float _2805 = _2804 * _2804;
    float _2806 = cbLight._m0[_2606].x + _1423;
    float _2807 = cbLight._m0[_2606].y + _1424;
    float _2808 = cbLight._m0[_2606].z + _1425;
    float _2812 = inversesqrt(dot(vec3(_2806, _2807, _2808), vec3(_2806, _2807, _2808)));
    float _2813 = _2812 * _2806;
    float _2814 = _2812 * _2807;
    float _2815 = _2812 * _2808;
    float _2816 = dot(vec3(_1342, _1343, _1344), vec3(cbLight._m0[_2606].xyz));
    float _5088 = isnan(0.0) ? _2816 : (isnan(_2816) ? 0.0 : max(_2816, 0.0));
    float _2819 = isnan(1.0) ? _5088 : (isnan(_5088) ? 1.0 : min(_5088, 1.0));
    float _2820 = dot(vec3(_1342, _1343, _1344), vec3(_2813, _2814, _2815));
    float _5099 = isnan(0.0) ? _2820 : (isnan(_2820) ? 0.0 : max(_2820, 0.0));
    float _2823 = isnan(1.0) ? _5099 : (isnan(_5099) ? 1.0 : min(_5099, 1.0));
    float _2824 = dot(vec3(cbLight._m0[_2606].xyz), vec3(_2813, _2814, _2815));
    float _5110 = isnan(0.0) ? _2824 : (isnan(_2824) ? 0.0 : max(_2824, 0.0));
    float _2828 = _2805 * _2805;
    float _2832 = ((_2823 * _2823) * (_2828 + (-1.0))) + 1.0;
    float _2839 = exp2(log2(1.0 - (isnan(1.0) ? _5110 : (isnan(_5110) ? 1.0 : min(_5110, 1.0)))) * 5.0);
    float _2846 = 1.0 - _2805;
    float _2856 = (0.5 / (((_2734 * ((_2819 * _2846) + _2805)) + 9.9999999392252902907785028219223e-09) + (((_2734 * _2846) + _2805) * _2819))) * _2819;
    float _5121 = isnan(0.0) ? _2856 : (isnan(_2856) ? 0.0 : max(_2856, 0.0));
    float _2858 = (isnan(1.0) ? _5121 : (isnan(_5121) ? 1.0 : min(_5121, 1.0))) * (_2828 / ((_2832 * _2832) * 3.141590118408203125));
    float _2868 = (((((_2839 * _2756) + _1494) * cbLight._m0[_2793].x) * _2858) * _2589) + ((((cbLight._m0[_2705].x * _2558) * ((_2755 * _2756) + _1494)) * _2779) * _2602);
    float _2869 = (((((_2839 * _2758) + _1496) * cbLight._m0[_2793].y) * _2858) * _2589) + ((((cbLight._m0[_2705].y * _2559) * ((_2755 * _2758) + _1496)) * _2779) * _2602);
    float _2870 = (((((_2839 * _2759) + _1497) * cbLight._m0[_2793].z) * _2858) * _2589) + ((((cbLight._m0[_2705].z * _2560) * ((_2755 * _2759) + _1497)) * _2779) * _2602);
    float _2932;
    float _2934;
    float _2936;
    if (_2642)
    {
        _2932 = _2868;
        _2934 = _2869;
        _2936 = _2870;
    }
    else
    {
        uint _2938 = _2566 + 2u;
        uint _2942 = _2566 + 10u;
        float _2956 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2938].w)) * _1346) * 0.949999988079071044921875);
        float _2957 = _2956 * _2956;
        float _2958 = cbLight._m0[_2938].x + _1423;
        float _2959 = cbLight._m0[_2938].y + _1424;
        float _2960 = cbLight._m0[_2938].z + _1425;
        float _2964 = inversesqrt(dot(vec3(_2958, _2959, _2960), vec3(_2958, _2959, _2960)));
        float _2965 = _2964 * _2958;
        float _2966 = _2964 * _2959;
        float _2967 = _2964 * _2960;
        float _2968 = dot(vec3(_1342, _1343, _1344), vec3(cbLight._m0[_2938].xyz));
        float _5132 = isnan(0.0) ? _2968 : (isnan(_2968) ? 0.0 : max(_2968, 0.0));
        float _2971 = isnan(1.0) ? _5132 : (isnan(_5132) ? 1.0 : min(_5132, 1.0));
        float _2972 = dot(vec3(_1342, _1343, _1344), vec3(_2965, _2966, _2967));
        float _5143 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
        float _2975 = isnan(1.0) ? _5143 : (isnan(_5143) ? 1.0 : min(_5143, 1.0));
        float _2976 = dot(vec3(cbLight._m0[_2938].xyz), vec3(_2965, _2966, _2967));
        float _5154 = isnan(0.0) ? _2976 : (isnan(_2976) ? 0.0 : max(_2976, 0.0));
        float _2980 = _2957 * _2957;
        float _2984 = ((_2975 * _2975) * (_2980 + (-1.0))) + 1.0;
        float _2991 = exp2(log2(1.0 - (isnan(1.0) ? _5154 : (isnan(_5154) ? 1.0 : min(_5154, 1.0)))) * 5.0);
        float _2998 = 1.0 - _2957;
        float _3008 = (0.5 / (((_2734 * ((_2971 * _2998) + _2957)) + 9.9999999392252902907785028219223e-09) + (((_2734 * _2998) + _2957) * _2971))) * _2971;
        float _5165 = isnan(0.0) ? _3008 : (isnan(_3008) ? 0.0 : max(_3008, 0.0));
        float _3010 = (isnan(1.0) ? _5165 : (isnan(_5165) ? 1.0 : min(_5165, 1.0))) * (_2980 / ((_2984 * _2984) * 3.141590118408203125));
        float _3011 = isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0));
        _2932 = (((((_2991 * _2756) + _1494) * cbLight._m0[_2942].x) * _3010) * _3011) + _2868;
        _2934 = (((((_2991 * _2758) + _1496) * cbLight._m0[_2942].y) * _3010) * _3011) + _2869;
        _2936 = (((((_2991 * _2759) + _1497) * cbLight._m0[_2942].z) * _3010) * _3011) + _2870;
    }
    float _3046;
    float _3048;
    float _3050;
    if (_2660)
    {
        _3046 = _2932;
        _3048 = _2934;
        _3050 = _2936;
    }
    else
    {
        uint _3057 = _2566 + 3u;
        uint _3061 = _2566 + 11u;
        float _3075 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3057].w)) * _1346) * 0.949999988079071044921875);
        float _3076 = _3075 * _3075;
        float _3077 = cbLight._m0[_3057].x + _1423;
        float _3078 = cbLight._m0[_3057].y + _1424;
        float _3079 = cbLight._m0[_3057].z + _1425;
        float _3083 = inversesqrt(dot(vec3(_3077, _3078, _3079), vec3(_3077, _3078, _3079)));
        float _3084 = _3083 * _3077;
        float _3085 = _3083 * _3078;
        float _3086 = _3083 * _3079;
        float _3087 = dot(vec3(_1342, _1343, _1344), vec3(cbLight._m0[_3057].xyz));
        float _5181 = isnan(0.0) ? _3087 : (isnan(_3087) ? 0.0 : max(_3087, 0.0));
        float _3090 = isnan(1.0) ? _5181 : (isnan(_5181) ? 1.0 : min(_5181, 1.0));
        float _3091 = dot(vec3(_1342, _1343, _1344), vec3(_3084, _3085, _3086));
        float _5192 = isnan(0.0) ? _3091 : (isnan(_3091) ? 0.0 : max(_3091, 0.0));
        float _3094 = isnan(1.0) ? _5192 : (isnan(_5192) ? 1.0 : min(_5192, 1.0));
        float _3095 = dot(vec3(cbLight._m0[_3057].xyz), vec3(_3084, _3085, _3086));
        float _5203 = isnan(0.0) ? _3095 : (isnan(_3095) ? 0.0 : max(_3095, 0.0));
        float _3099 = _3076 * _3076;
        float _3103 = ((_3094 * _3094) * (_3099 + (-1.0))) + 1.0;
        float _3110 = exp2(log2(1.0 - (isnan(1.0) ? _5203 : (isnan(_5203) ? 1.0 : min(_5203, 1.0)))) * 5.0);
        float _3117 = 1.0 - _3076;
        float _3127 = (0.5 / (((_2734 * ((_3090 * _3117) + _3076)) + 9.9999999392252902907785028219223e-09) + (((_2734 * _3117) + _3076) * _3090))) * _3090;
        float _5214 = isnan(0.0) ? _3127 : (isnan(_3127) ? 0.0 : max(_3127, 0.0));
        float _3129 = (isnan(1.0) ? _5214 : (isnan(_5214) ? 1.0 : min(_5214, 1.0))) * (_3099 / ((_3103 * _3103) * 3.141590118408203125));
        float _3130 = isnan(1.0) ? _2582 : (isnan(_2582) ? 1.0 : min(_2582, 1.0));
        _3046 = (((((_3110 * _2756) + _1494) * cbLight._m0[_3061].x) * _3129) * _3130) + _2932;
        _3048 = (((((_3110 * _2758) + _1496) * cbLight._m0[_3061].y) * _3129) * _3130) + _2934;
        _3050 = (((((_3110 * _2759) + _1497) * cbLight._m0[_3061].z) * _3129) * _3130) + _2936;
    }
    float _3264;
    float _3266;
    float _3268;
    float _3270;
    float _3272;
    float _3274;
    if (_2564.y == 0u)
    {
        float _3205 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3206 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3205;
        float _3207 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3205;
        float _3208 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3205;
        uvec4 _3220 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3221 = _3220.x;
        uint _3232 = uint((float(_3220.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1432) / _3221))) + floor(float(uint(cbSceneParam._m0[85u].x * _1431) / _3221)));
        float _3242 = (log2(_3208 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3243 = isnan(0.0) ? _3242 : (isnan(_3242) ? 0.0 : max(_3242, 0.0));
        uint _3246 = uint(isnan(14.0) ? _3243 : (isnan(_3243) ? 14.0 : min(_3243, 14.0)));
        uvec4 _3251 = texelFetch(g_lightClusterGridBuffer, int(((_3246 << 2u) + (_3232 << 6u)) >> 2u));
        uint _3252 = _3251.x;
        uint _3253 = _3220.z;
        float _3373;
        float _3375;
        float _3377;
        float _3379;
        float _3381;
        float _3383;
        if (((((1u << ((_3253 >> 4u) & 15u)) + 4294967295u) & _3252) == 0u) || ((_3253 & 240u) == 0u))
        {
            _3373 = 0.0;
            _3375 = 0.0;
            _3377 = 0.0;
            _3379 = 0.0;
            _3381 = 0.0;
            _3383 = 0.0;
        }
        else
        {
            float _3374;
            float _3376;
            float _3378;
            float _3380;
            float _3382;
            float _3384;
            float _3517 = 0.0;
            float _3518 = 0.0;
            float _3519 = 0.0;
            float _3520 = 0.0;
            float _3521 = 0.0;
            float _3522 = 0.0;
            uint _3523 = 0u;
            uint _3532;
            bool _3533;
            for (;;)
            {
                _3532 = texelFetch(g_lightClassification, int((((_3246 << 5u) + (_3232 << 9u)) + (_3523 << 2u)) >> 2u)).x;
                _3533 = _3532 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3533)
                {
                    frontier_phi_63_pred = _3522;
                    frontier_phi_63_pred_1 = _3521;
                    frontier_phi_63_pred_2 = _3520;
                    frontier_phi_63_pred_3 = _3519;
                    frontier_phi_63_pred_4 = _3518;
                    frontier_phi_63_pred_5 = _3517;
                }
                else
                {
                    float _3641;
                    float _3642;
                    float _3643;
                    float _3644;
                    float _3645;
                    float _3646;
                    uint _3647;
                    _3641 = _3517;
                    _3642 = _3518;
                    _3643 = _3519;
                    _3644 = _3520;
                    _3645 = _3521;
                    _3646 = _3522;
                    _3647 = _3532;
                    float _3573;
                    float _3574;
                    float _3575;
                    float _3576;
                    float _3577;
                    float _3578;
                    for (;;)
                    {
                        uint _3651 = uint(findLSB(_3647)) + (_3523 << 5u);
                        uint _3648 = (_3647 + 4294967295u) & _3647;
                        uint _3653 = _3651 * 48u;
                        vec4 _3667 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3653)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3653 + 3u)).x));
                        uint _3673 = (_3651 * 48u) + 4u;
                        vec4 _3686 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3673)).x, texelFetch(g_PointLightRenderingBuffer, int(_3673 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3673 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3673 + 3u)).x));
                        uint _3692 = (_3651 * 48u) + 8u;
                        vec3 _3703 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3692)).x, texelFetch(g_PointLightRenderingBuffer, int(_3692 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3692 + 2u)).x));
                        float _3707 = _3667.x - _3206;
                        float _3708 = _3667.y - _3207;
                        float _3709 = _3667.z - _3208;
                        float _3710 = dot(vec3(_3707, _3708, _3709), vec3(_3707, _3708, _3709));
                        float _3713 = inversesqrt(_3710);
                        float _3714 = _3713 * _3707;
                        float _3715 = _3713 * _3708;
                        float _3716 = _3713 * _3709;
                        float _3717 = dot(vec3(_1450, _1453, _1456), vec3(_3714, _3715, _3716));
                        float _3722 = 1.0 - (_3710 * _3667.w);
                        float _5240 = isnan(0.0) ? _3722 : (isnan(_3722) ? 0.0 : max(_3722, 0.0));
                        float _3723 = isnan(1.0) ? _5240 : (isnan(_5240) ? 1.0 : min(_5240, 1.0));
                        float _3724 = sqrt(_3710) * _3686.w;
                        float _3726 = 1.39999997615814208984375 / (_3724 + 1.39999997615814208984375);
                        float _3727 = _3726 * _3726;
                        float _3730 = ((1.0 - _3727) * _3717) + _3727;
                        float _3733 = _3724 * _3724;
                        float _3737 = ((isnan(0.0) ? _3730 : (isnan(_3730) ? 0.0 : max(_3730, 0.0))) * _3723) / ((_3733 * 0.699999988079071044921875) + 1.0);
                        float _3741 = (-0.0) - _3206;
                        float _3742 = (-0.0) - _3207;
                        float _3743 = (-0.0) - _3208;
                        float _3747 = inversesqrt(dot(vec3(_3741, _3742, _3743), vec3(_3741, _3742, _3743)));
                        float _3748 = _3747 * _3741;
                        float _3749 = _3747 * _3742;
                        float _3750 = _3747 * _3743;
                        float _3758 = exp2(log2(1.0 / ((_3733 * 3.5) + 5.0)) * 0.25);
                        float _3759 = 1.0 - _1525;
                        float _3766 = sqrt(1.0 - ((1.0 - (_3759 * _3759)) * (1.0 - (_3758 * _3758))));
                        float _3767 = _3766 * _3766;
                        float _3768 = _3767 * _3767;
                        float _3769 = _3748 + _3714;
                        float _3770 = _3749 + _3715;
                        float _3771 = _3750 + _3716;
                        float _3775 = inversesqrt(dot(vec3(_3769, _3770, _3771), vec3(_3769, _3770, _3771)));
                        float _3779 = dot(vec3(_1450, _1453, _1456), vec3(_3748, _3749, _3750));
                        float _5256 = isnan(0.0) ? _3779 : (isnan(_3779) ? 0.0 : max(_3779, 0.0));
                        float _3782 = isnan(1.0) ? _5256 : (isnan(_5256) ? 1.0 : min(_5256, 1.0));
                        float _3783 = dot(vec3(_1450, _1453, _1456), vec3(_3775 * _3769, _3775 * _3770, _3775 * _3771));
                        float _5267 = isnan(0.0) ? _3783 : (isnan(_3783) ? 0.0 : max(_3783, 0.0));
                        float _3786 = isnan(1.0) ? _5267 : (isnan(_5267) ? 1.0 : min(_5267, 1.0));
                        float _3790 = ((_3786 * _3786) * (_3768 + (-1.0))) + 1.0;
                        float _3791 = _3726 * _3767;
                        float _3792 = _3791 * _3791;
                        float _3795 = ((1.0 - _3792) * _3717) + _3792;
                        float _5278 = isnan(0.0) ? _3795 : (isnan(_3795) ? 0.0 : max(_3795, 0.0));
                        float _3796 = isnan(1.0) ? _5278 : (isnan(_5278) ? 1.0 : min(_5278, 1.0));
                        float _3797 = 1.0 - _3767;
                        float _3807 = (0.5 / (((_3796 * ((_3782 * _3797) + _3767)) + 9.9999999392252902907785028219223e-09) + (((_3796 * _3797) + _3767) * _3782))) * _3796;
                        float _5289 = isnan(0.0) ? _3807 : (isnan(_3807) ? 0.0 : max(_3807, 0.0));
                        float _3818 = (((_3768 * 3.1415927410125732421875) * (isnan(1.0) ? _5289 : (isnan(_5289) ? 1.0 : min(_5289, 1.0)))) / ((_3790 * _3790) * ((_3733 * 2.1991131305694580078125) + 3.141590118408203125))) * _3723;
                        _3576 = (_3737 * _3686.x) + _3644;
                        _3577 = (_3737 * _3686.y) + _3645;
                        _3578 = (_3737 * _3686.z) + _3646;
                        _3573 = (_3818 * _3703.x) + _3641;
                        _3574 = (_3818 * _3703.y) + _3642;
                        _3575 = (_3818 * _3703.z) + _3643;
                        if (_3648 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3641 = _3573;
                            _3642 = _3574;
                            _3643 = _3575;
                            _3644 = _3576;
                            _3645 = _3577;
                            _3646 = _3578;
                            _3647 = _3648;
                        }
                    }
                    frontier_phi_63_pred = _3578;
                    frontier_phi_63_pred_1 = _3577;
                    frontier_phi_63_pred_2 = _3576;
                    frontier_phi_63_pred_3 = _3575;
                    frontier_phi_63_pred_4 = _3574;
                    frontier_phi_63_pred_5 = _3573;
                }
                _3384 = frontier_phi_63_pred;
                _3382 = frontier_phi_63_pred_1;
                _3380 = frontier_phi_63_pred_2;
                _3378 = frontier_phi_63_pred_3;
                _3376 = frontier_phi_63_pred_4;
                _3374 = frontier_phi_63_pred_5;
                uint _3524 = _3523 + 1u;
                if (_3524 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3517 = _3374;
                    _3518 = _3376;
                    _3519 = _3378;
                    _3520 = _3380;
                    _3521 = _3382;
                    _3522 = _3384;
                    _3523 = _3524;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3373 = _3374;
            _3375 = _3376;
            _3377 = _3378;
            _3379 = _3380;
            _3381 = _3382;
            _3383 = _3384;
        }
        uvec4 _3387 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3388 = _3387.z;
        uint _3390 = (_3388 >> 8u) & 15u;
        float _3485;
        float _3487;
        float _3489;
        float _3491;
        float _3493;
        float _3495;
        if (((4294967295u << _3390) & _3252) == 0u)
        {
            _3485 = _3373;
            _3487 = _3375;
            _3489 = _3377;
            _3491 = _3379;
            _3493 = _3381;
            _3495 = _3383;
        }
        else
        {
            float _3510 = inversesqrt(dot(vec3(_3206, _3207, _3208), vec3(_3206, _3207, _3208)));
            float _3511 = _3510 * _3206;
            float _3512 = _3510 * _3207;
            float _3513 = _3510 * _3208;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_3390 < ((_3388 >> 12u) & 15u))
            {
                float _3486;
                float _3488;
                float _3490;
                float _3492;
                float _3494;
                float _3496;
                float _3624 = _3373;
                float _3625 = _3375;
                float _3626 = _3377;
                float _3627 = _3379;
                float _3628 = _3381;
                float _3629 = _3383;
                uint _3630 = _3390;
                uint _3639;
                bool _3640;
                for (;;)
                {
                    _3639 = texelFetch(g_lightClassification, int((((_3246 << 5u) + (_3232 << 9u)) + (_3630 << 2u)) >> 2u)).x;
                    _3640 = _3639 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3640)
                    {
                        frontier_phi_69_pred = _3629;
                        frontier_phi_69_pred_1 = _3628;
                        frontier_phi_69_pred_2 = _3627;
                        frontier_phi_69_pred_3 = _3626;
                        frontier_phi_69_pred_4 = _3625;
                        frontier_phi_69_pred_5 = _3624;
                    }
                    else
                    {
                        float _3823;
                        float _3824;
                        float _3825;
                        float _3826;
                        float _3827;
                        float _3828;
                        float _4116;
                        float _4117;
                        float _4118;
                        float _4119;
                        float _4120;
                        float _4121;
                        float _3836 = _3624;
                        float _3837 = _3625;
                        float _3838 = _3626;
                        float _3839 = _3627;
                        float _3840 = _3628;
                        float _3841 = _3629;
                        uint _3842 = _3639;
                        uint _3843;
                        vec4 _3868;
                        float _3869;
                        vec4 _3884;
                        vec3 _3896;
                        vec4 _3911;
                        vec4 _3926;
                        float _3972;
                        bool _3973;
                        for (;;)
                        {
                            uint _3853 = ((_3630 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3842));
                            _3843 = (_3842 + 4294967295u) & _3842;
                            uint _3855 = _3853 * 40u;
                            _3868 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3855)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3855 + 3u)).x));
                            _3869 = _3868.w;
                            uint _3871 = (_3853 * 40u) + 4u;
                            _3884 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3871)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3871 + 3u)).x));
                            uint _3886 = (_3853 * 40u) + 8u;
                            _3896 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3886)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3886 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3886 + 2u)).x));
                            uint _3898 = (_3853 * 40u) + 16u;
                            _3911 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3898)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3898 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3898 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3898 + 3u)).x));
                            uint _3913 = (_3853 * 40u) + 20u;
                            _3926 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3913)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3913 + 3u)).x));
                            uint _3928 = (_3853 * 40u) + 24u;
                            vec4 _3941 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3928)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3928 + 3u)).x));
                            uint _3947 = (_3853 * 40u) + 28u;
                            vec4 _3960 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3947)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3947 + 3u)).x));
                            _3972 = fma(_3208, _3960.z, fma(_3207, _3960.y, _3960.x * _3206)) + _3960.w;
                            _3973 = !((fma(_3208, _3941.z, fma(_3207, _3941.y, _3941.x * _3206)) + _3941.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3973)
                            {
                                float _4000 = _3868.x - _3206;
                                float _4001 = _3868.y - _3207;
                                float _4002 = _3868.z - _3208;
                                float _4003 = dot(vec3(_4000, _4001, _4002), vec3(_4000, _4001, _4002));
                                float _4006 = inversesqrt(_4003);
                                float _4007 = _4006 * _4000;
                                float _4008 = _4006 * _4001;
                                float _4009 = _4006 * _4002;
                                float _4013 = 1.0 - (_4003 / (_3869 * _3869));
                                float _5300 = isnan(0.0) ? _4013 : (isnan(_4013) ? 0.0 : max(_4013, 0.0));
                                float _4014 = isnan(1.0) ? _5300 : (isnan(_5300) ? 1.0 : min(_5300, 1.0));
                                float _4018 = sqrt(_4003) * _3884.w;
                                float _4020 = 1.39999997615814208984375 / (_4018 + 1.39999997615814208984375);
                                float _4021 = _4020 * _4020;
                                float _4024 = ((1.0 - _4021) * dot(vec3(_4007, _4008, _4009), vec3(_1450, _1453, _1456))) + _4021;
                                float _4027 = _4018 * _4018;
                                float _4031 = (fma(_3208, _3911.z, fma(_3207, _3911.y, _3911.x * _3206)) + _3911.w) / _3972;
                                float _4032 = (fma(_3208, _3926.z, fma(_3207, _3926.y, _3926.x * _3206)) + _3926.w) / _3972;
                                float _4036 = 1.0 - dot(vec2(_4031, _4032), vec2(_4031, _4032));
                                float _5316 = isnan(0.0) ? _4036 : (isnan(_4036) ? 0.0 : max(_4036, 0.0));
                                float _4037 = isnan(1.0) ? _5316 : (isnan(_5316) ? 1.0 : min(_5316, 1.0));
                                float _4038 = _4037 * (((isnan(0.0) ? _4024 : (isnan(_4024) ? 0.0 : max(_4024, 0.0))) * _4014) / ((_4027 * 0.699999988079071044921875) + 1.0));
                                float _4050 = exp2(log2(1.0 / ((_4027 * 3.5) + 5.0)) * 0.25);
                                float _4051 = 1.0 - _1525;
                                float _4058 = sqrt(1.0 - ((1.0 - (_4051 * _4051)) * (1.0 - (_4050 * _4050))));
                                float _4059 = _4058 * _4058;
                                float _4060 = _4059 * _4059;
                                float _4061 = _4007 - _3511;
                                float _4062 = _4008 - _3512;
                                float _4063 = _4009 - _3513;
                                float _4067 = inversesqrt(dot(vec3(_4061, _4062, _4063), vec3(_4061, _4062, _4063)));
                                float _4071 = dot(vec3(_1450, _1453, _1456), vec3((-0.0) - _3511, (-0.0) - _3512, (-0.0) - _3513));
                                float _5327 = isnan(0.0) ? _4071 : (isnan(_4071) ? 0.0 : max(_4071, 0.0));
                                float _4074 = isnan(1.0) ? _5327 : (isnan(_5327) ? 1.0 : min(_5327, 1.0));
                                float _4075 = dot(vec3(_1450, _1453, _1456), vec3(_4067 * _4061, _4067 * _4062, _4067 * _4063));
                                float _5338 = isnan(0.0) ? _4075 : (isnan(_4075) ? 0.0 : max(_4075, 0.0));
                                float _4078 = isnan(1.0) ? _5338 : (isnan(_5338) ? 1.0 : min(_5338, 1.0));
                                float _4082 = ((_4078 * _4078) * (_4060 + (-1.0))) + 1.0;
                                float _4083 = _4020 * _4059;
                                float _4084 = _4083 * _4083;
                                float _4090 = ((1.0 - _4084) * dot(vec3(_1450, _1453, _1456), vec3(_4007, _4008, _4009))) + _4084;
                                float _5349 = isnan(0.0) ? _4090 : (isnan(_4090) ? 0.0 : max(_4090, 0.0));
                                float _4091 = isnan(1.0) ? _5349 : (isnan(_5349) ? 1.0 : min(_5349, 1.0));
                                float _4092 = 1.0 - _4059;
                                float _4102 = (0.5 / (((_4091 * ((_4074 * _4092) + _4059)) + 9.9999999392252902907785028219223e-09) + (((_4091 * _4092) + _4059) * _4074))) * _4091;
                                float _5360 = isnan(0.0) ? _4102 : (isnan(_4102) ? 0.0 : max(_4102, 0.0));
                                float _4112 = (_4037 * _4014) * (((_4060 * 3.1415927410125732421875) * (isnan(1.0) ? _5360 : (isnan(_5360) ? 1.0 : min(_5360, 1.0)))) / ((_4082 * _4082) * ((_4027 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _4038 * _3884.z;
                                frontier_phi_75_pred_1 = _4038 * _3884.y;
                                frontier_phi_75_pred_2 = _4038 * _3884.x;
                                frontier_phi_75_pred_3 = _4112 * _3896.z;
                                frontier_phi_75_pred_4 = _4112 * _3896.y;
                                frontier_phi_75_pred_5 = _4112 * _3896.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _4121 = frontier_phi_75_pred;
                            _4120 = frontier_phi_75_pred_1;
                            _4119 = frontier_phi_75_pred_2;
                            _4118 = frontier_phi_75_pred_3;
                            _4117 = frontier_phi_75_pred_4;
                            _4116 = frontier_phi_75_pred_5;
                            _3826 = _4119 + _3839;
                            _3827 = _4120 + _3840;
                            _3828 = _4121 + _3841;
                            _3823 = _4116 + _3836;
                            _3824 = _4117 + _3837;
                            _3825 = _4118 + _3838;
                            if (_3843 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3836 = _3823;
                                _3837 = _3824;
                                _3838 = _3825;
                                _3839 = _3826;
                                _3840 = _3827;
                                _3841 = _3828;
                                _3842 = _3843;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3828;
                        frontier_phi_69_pred_1 = _3827;
                        frontier_phi_69_pred_2 = _3826;
                        frontier_phi_69_pred_3 = _3825;
                        frontier_phi_69_pred_4 = _3824;
                        frontier_phi_69_pred_5 = _3823;
                    }
                    _3496 = frontier_phi_69_pred;
                    _3494 = frontier_phi_69_pred_1;
                    _3492 = frontier_phi_69_pred_2;
                    _3490 = frontier_phi_69_pred_3;
                    _3488 = frontier_phi_69_pred_4;
                    _3486 = frontier_phi_69_pred_5;
                    uint _3631 = _3630 + 1u;
                    if (_3631 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3624 = _3486;
                        _3625 = _3488;
                        _3626 = _3490;
                        _3627 = _3492;
                        _3628 = _3494;
                        _3629 = _3496;
                        _3630 = _3631;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _3496;
                frontier_phi_57_58_ladder_1 = _3494;
                frontier_phi_57_58_ladder_2 = _3492;
                frontier_phi_57_58_ladder_3 = _3490;
                frontier_phi_57_58_ladder_4 = _3488;
                frontier_phi_57_58_ladder_5 = _3486;
            }
            else
            {
                frontier_phi_57_58_ladder = _3383;
                frontier_phi_57_58_ladder_1 = _3381;
                frontier_phi_57_58_ladder_2 = _3379;
                frontier_phi_57_58_ladder_3 = _3377;
                frontier_phi_57_58_ladder_4 = _3375;
                frontier_phi_57_58_ladder_5 = _3373;
            }
            _3485 = frontier_phi_57_58_ladder_5;
            _3487 = frontier_phi_57_58_ladder_4;
            _3489 = frontier_phi_57_58_ladder_3;
            _3491 = frontier_phi_57_58_ladder_2;
            _3493 = frontier_phi_57_58_ladder_1;
            _3495 = frontier_phi_57_58_ladder;
        }
        float _3500 = isnan(1.0) ? _1509 : (isnan(_1509) ? 1.0 : min(_1509, 1.0));
        _3264 = (_3500 * _3491) + _2698;
        _3266 = (_3500 * _3493) + _2700;
        _3268 = (_3500 * _3495) + _2702;
        _3270 = ((_3485 * _1494) * _3500) + _3046;
        _3272 = ((_3487 * _1496) * _3500) + _3048;
        _3274 = ((_3489 * _1497) * _3500) + _3050;
    }
    else
    {
        _3264 = _2698;
        _3266 = _2700;
        _3268 = _2702;
        _3270 = _3046;
        _3272 = _3048;
        _3274 = _3050;
    }
    uint _3280 = _1470 + uint(cbMatDynParam._m0[0u].w);
    float _5376 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
    float _5387 = isnan(0.0) ? _1485 : (isnan(_1485) ? 0.0 : max(_1485, 0.0));
    float _5398 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _5409 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
    float _3306 = (((isnan(1.0) ? _5376 : (isnan(_5376) ? 1.0 : min(_5376, 1.0))) * (_3264 + ((isnan(0.0) ? _2238 : (isnan(_2238) ? 0.0 : max(_2238, 0.0))) * _1509))) + ((_3270 + ((isnan(0.0) ? _2530 : (isnan(_2530) ? 0.0 : max(_2530, 0.0))) * _2317)) * cbPerFrame._m0[3u].x)) + (((((_872 * _867.x) + cbMtdParam._m0[26u].x) * ((_344 * TEXCOORD_13.x) + TEXCOORD_10.x)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3280].x);
    float _3308 = ((((((_872 * _867.y) + cbMtdParam._m0[26u].y) * ((_344 * TEXCOORD_13.y) + TEXCOORD_10.y)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3280].y) + ((_3272 + ((isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0))) * _2317)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5387 : (isnan(_5387) ? 1.0 : min(_5387, 1.0))) * (_3266 + ((isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0))) * _1509)));
    float _3310 = ((((((_872 * _867.z) + cbMtdParam._m0[26u].z) * ((_344 * TEXCOORD_13.z) + TEXCOORD_10.z)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3280].z) + ((_3274 + ((isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0))) * _2317)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5398 : (isnan(_5398) ? 1.0 : min(_5398, 1.0))) * (_3268 + ((isnan(0.0) ? _2244 : (isnan(_2244) ? 0.0 : max(_2244, 0.0))) * _1509)));
    float _3318 = cbInstanceData._m0[_1469 + 6u].w * (isnan(1.0) ? _5409 : (isnan(_5409) ? 1.0 : min(_5409, 1.0)));
    float _3323 = _1431 / cbSceneParam._m0[86u].x;
    float _3324 = _1432 / cbSceneParam._m0[86u].y;
    vec4 _3338 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3323, _3324, (log2((isnan(cbSceneParam._m0[77u].w) ? _1366 : (isnan(_1366) ? cbSceneParam._m0[77u].w : min(_1366, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3340 = _3338.x;
    float _3341 = _3338.y;
    float _3342 = _3338.z;
    float _3343 = _3338.w;
    float _3435;
    float _3437;
    float _3439;
    float _3441;
    if (_1366 > cbSceneParam._m0[78u].w)
    {
        float _3398 = isnan(_1366) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1366 : min(cbSceneParam._m0[80u].w, _1366));
        float _3399 = _3398 / _1366;
        float _3410 = _3399 * _1416;
        float _3411 = _1417 * _3399;
        float _3412 = (-0.0) - _3411;
        float _3413 = _3399 * _1418;
        float _3415 = (cbSceneParam._m0[77u].w * _3412) / _3398;
        float _3416 = _3415 + cbSceneParam._m0[79u].w;
        float _3417 = cbSceneParam._m0[79u].w - _3411;
        float _3423 = sqrt(((_3410 * _3410) + (_3411 * _3411)) + (_3413 * _3413));
        float _3426 = (1.0 - (cbSceneParam._m0[77u].w / _3398)) * _3423;
        float _3431 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3433 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3586;
        if (abs((_3412 - _3415) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3586 = ((((_3416 > 0.0) ? exp2(_3431 * _3416) : (2.0 - exp2(_3433 * _3416))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3426;
        }
        else
        {
            float _3546 = 1.0 / cbSceneParam._m0[80u].x;
            float _3547 = isnan(_3417) ? _3416 : (isnan(_3416) ? _3417 : max(_3416, _3417));
            float _3548 = isnan(_3417) ? _3416 : (isnan(_3416) ? _3417 : min(_3416, _3417));
            float _3557 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : min(_3547, 0.0));
            float _3558 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : min(_3548, 0.0));
            _3586 = ((abs(_3423 / _3412) * cbSceneParam._m0[80u].y) * ((((_3557 - _3558) * 2.0) - ((exp2(_3431 * (isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0)))) - exp2(_3431 * (isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0))))) * _3546)) - ((exp2(_3433 * _3557) - exp2(_3433 * _3558)) * _3546))) + (_3426 * cbSceneParam._m0[80u].z);
        }
        vec4 _3588 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3323, _3324, 1.0), 0.0);
        float _3597 = exp2((_3586 * (-1.44269502162933349609375)) * (1.0 - _3588.w));
        float _3598 = log2(_3597);
        float _3614 = log2(_3343);
        _3435 = (exp2(_3614 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].x)) * _3588.x) / cbSceneParam._m0[78u].x)) + _3340;
        _3437 = (exp2(_3614 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].y)) * _3588.y) / cbSceneParam._m0[78u].y)) + _3341;
        _3439 = (exp2(_3614 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3598 * cbSceneParam._m0[78u].z)) * _3588.z) / cbSceneParam._m0[78u].z)) + _3342;
        _3441 = _3597 * _3343;
    }
    else
    {
        _3435 = _3340;
        _3437 = _3341;
        _3439 = _3342;
        _3441 = _3343;
    }
    float _3453 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3454 = _3453 == 3.0;
    float _3455 = log2(_3441);
    float _3462 = exp2(_3455 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3306 : (isnan(_3306) ? 0.0 : max(_3306, 0.0)));
    float _3463 = exp2(_3455 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3308 : (isnan(_3308) ? 0.0 : max(_3308, 0.0)));
    float _3464 = exp2(_3455 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : max(_3310, 0.0)));
    float _3473 = (_3453 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3473 * (_3454 ? _3462 : (_3462 + (cbSceneParam._m0[72u].w * _3435)));
    SV_Target.y = _3473 * (_3454 ? _3463 : (_3463 + (cbSceneParam._m0[72u].w * _3437)));
    SV_Target.z = _3473 * (_3454 ? _3464 : (_3464 + (cbSceneParam._m0[72u].w * _3439)));
    SV_Target.w = _3318;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3318;
}


