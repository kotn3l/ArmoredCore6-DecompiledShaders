#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_5;
layout(location = 5) out vec4 TEXCOORD_7;
layout(location = 6) out vec4 TEXCOORD_10;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out float TEXCOORD_21;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_21 = 0.0;
    float _213 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _246 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _248 = texelFetch(g_InstanceIndexBuffer, int(_246));
    uint _249 = _248.x;
    uint _259 = (floatBitsToUint(cbInstanceData._m0[(_249 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _266 = _259 + 1u;
    uint _273 = _259 + 2u;
    precise float _280 = POSITION.x * cbObjMatrix._m0[_259].x;
    precise float _281 = POSITION.y * cbObjMatrix._m0[_259].y;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.z * cbObjMatrix._m0[_259].z;
    precise float _284 = _283 + _282;
    precise float _285 = 1.0 * cbObjMatrix._m0[_259].w;
    precise float _287 = _285 + _284;
    precise float _288 = POSITION.x * cbObjMatrix._m0[_266].x;
    precise float _289 = POSITION.y * cbObjMatrix._m0[_266].y;
    precise float _290 = _289 + _288;
    precise float _291 = POSITION.z * cbObjMatrix._m0[_266].z;
    precise float _292 = _291 + _290;
    precise float _293 = 1.0 * cbObjMatrix._m0[_266].w;
    precise float _294 = _293 + _292;
    precise float _295 = POSITION.x * cbObjMatrix._m0[_273].x;
    precise float _296 = POSITION.y * cbObjMatrix._m0[_273].y;
    precise float _297 = _296 + _295;
    precise float _298 = POSITION.z * cbObjMatrix._m0[_273].z;
    precise float _299 = _298 + _297;
    precise float _300 = 1.0 * cbObjMatrix._m0[_273].w;
    precise float _301 = _300 + _299;
    float _307 = cbSceneParam._m0[3u].x - _287;
    float _308 = cbSceneParam._m0[3u].y - _294;
    float _309 = cbSceneParam._m0[3u].z - _301;
    precise float _345 = _287 - cbSceneParam._m0[3u].x;
    precise float _346 = _294 - cbSceneParam._m0[3u].y;
    precise float _347 = _301 - cbSceneParam._m0[3u].z;
    precise float _375 = _345 * cbSceneParam._m0[24u].x;
    precise float _376 = _346 * cbSceneParam._m0[24u].y;
    precise float _377 = _376 + _375;
    precise float _378 = _347 * cbSceneParam._m0[24u].z;
    precise float _379 = _378 + _377;
    precise float _380 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _381 = _380 + _379;
    precise float _382 = _345 * cbSceneParam._m0[25u].x;
    precise float _383 = _346 * cbSceneParam._m0[25u].y;
    precise float _384 = _383 + _382;
    precise float _385 = _347 * cbSceneParam._m0[25u].z;
    precise float _386 = _385 + _384;
    precise float _387 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _388 = _387 + _386;
    precise float _389 = _345 * cbSceneParam._m0[26u].x;
    precise float _390 = _346 * cbSceneParam._m0[26u].y;
    precise float _391 = _390 + _389;
    precise float _392 = _347 * cbSceneParam._m0[26u].z;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _395 = _394 + _393;
    precise float _396 = _345 * cbSceneParam._m0[27u].x;
    precise float _397 = _346 * cbSceneParam._m0[27u].y;
    precise float _398 = _397 + _396;
    precise float _399 = _347 * cbSceneParam._m0[27u].z;
    precise float _400 = _399 + _398;
    precise float _401 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _402 = _401 + _400;
    gl_Position.x = _381;
    gl_Position.y = _388;
    gl_Position.z = _395;
    gl_Position.w = _402;
    NORMAL_1.x = fma(_216, cbObjMatrix._m0[_259].z, fma(_215, cbObjMatrix._m0[_259].y, cbObjMatrix._m0[_259].x * _213));
    NORMAL_1.y = fma(_216, cbObjMatrix._m0[_266].z, fma(_215, cbObjMatrix._m0[_266].y, cbObjMatrix._m0[_266].x * _213));
    NORMAL_1.z = fma(_216, cbObjMatrix._m0[_273].z, fma(_215, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _213));
    NORMAL_1.w = float(_249);
    TANGENT_1.x = fma(_228, cbObjMatrix._m0[_259].z, fma(_227, cbObjMatrix._m0[_259].y, cbObjMatrix._m0[_259].x * _226));
    TANGENT_1.y = fma(_228, cbObjMatrix._m0[_266].z, fma(_227, cbObjMatrix._m0[_266].y, cbObjMatrix._m0[_266].x * _226));
    TANGENT_1.z = fma(_228, cbObjMatrix._m0[_273].z, fma(_227, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _226));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_240, cbObjMatrix._m0[_259].z, fma(_239, cbObjMatrix._m0[_259].y, cbObjMatrix._m0[_259].x * _238));
    TANGENT_2_1.y = fma(_240, cbObjMatrix._m0[_266].z, fma(_239, cbObjMatrix._m0[_266].y, cbObjMatrix._m0[_266].x * _238));
    TANGENT_2_1.z = fma(_240, cbObjMatrix._m0[_273].z, fma(_239, cbObjMatrix._m0[_273].y, cbObjMatrix._m0[_273].x * _238));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_10.x = TEXCOORD_3.x;
    TEXCOORD_10.y = TEXCOORD_3.y;
    TEXCOORD_10.z = TEXCOORD_3.z;
    TEXCOORD_10.w = TEXCOORD_1.x;
    TEXCOORD_13.x = TEXCOORD_4.x;
    TEXCOORD_13.y = TEXCOORD_4.y;
    TEXCOORD_13.z = TEXCOORD_4.z;
    TEXCOORD_13.w = TEXCOORD_1.y;
    TEXCOORD_21 = sqrt(((_307 * _307) + (_308 * _308)) + (_309 * _309));
}


