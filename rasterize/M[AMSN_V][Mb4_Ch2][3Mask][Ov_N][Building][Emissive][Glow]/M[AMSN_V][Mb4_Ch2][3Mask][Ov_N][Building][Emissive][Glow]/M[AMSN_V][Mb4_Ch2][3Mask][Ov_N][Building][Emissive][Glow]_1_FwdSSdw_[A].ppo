#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec4 TEXCOORD_10;
layout(location = 8) in vec4 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1927;
float _4351;
float _4352;
float _4353;
float _4354;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _255 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _256 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _257 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _263 = inversesqrt(dot(vec3(_255, _256, _257), vec3(_255, _256, _257)));
    float _264 = _263 * _255;
    float _265 = _263 * _256;
    float _266 = _263 * _257;
    float _276 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _277 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _278 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _282 = inversesqrt(dot(vec3(_276, _277, _278), vec3(_276, _277, _278)));
    float _283 = _282 * _276;
    float _284 = _282 * _277;
    float _285 = _282 * _278;
    float _289 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _290 = _289 * NORMAL.x;
    float _291 = _289 * NORMAL.y;
    float _292 = _289 * NORMAL.z;
    float _296 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _297 = _296 * TANGENT.x;
    float _298 = _296 * TANGENT.y;
    float _299 = _296 * TANGENT.z;
    float _303 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _304 = _303 * TANGENT_2.x;
    float _305 = _303 * TANGENT_2.y;
    float _306 = _303 * TANGENT_2.z;
    float _311;
    float _312;
    float _313;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _311 = (-0.0) - _290;
        _312 = (-0.0) - _291;
        _313 = (-0.0) - _292;
    }
    else
    {
        _311 = _290;
        _312 = _291;
        _313 = _292;
    }
    vec4 _332 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _344 = 1.0 - ((1.0 - _332.z) * 1.39999997615814208984375);
    float _4363 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _345 = isnan(1.0) ? _4363 : (isnan(_4363) ? 1.0 : min(_4363, 1.0));
    float _347 = 1.0 - ((1.0 - _332.x) * 1.39999997615814208984375);
    float _4374 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _348 = isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0));
    float _350 = 1.0 - ((1.0 - _332.y) * 1.39999997615814208984375);
    float _4385 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _351 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
    float _353 = (_348 + _345) + _351;
    float _360 = (_353 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _361 = (_353 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _362 = (_353 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _387 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _396 = 1.0 - ((1.0 - _387.x) * 1.39999997615814208984375);
    float _4396 = isnan(0.0) ? _396 : (isnan(_396) ? 0.0 : max(_396, 0.0));
    float _397 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
    float _407 = (_397 * ((cbMtdParam._m0[9u].x - _360) + ((1.0 - cbMtdParam._m0[9u].x) * _353))) + _360;
    float _408 = (_397 * ((cbMtdParam._m0[9u].y - _361) + ((1.0 - cbMtdParam._m0[9u].y) * _353))) + _361;
    float _409 = (_397 * ((cbMtdParam._m0[9u].z - _362) + ((1.0 - cbMtdParam._m0[9u].z) * _353))) + _362;
    float _422 = 1.0 - ((1.0 - _387.y) * 1.39999997615814208984375);
    float _4407 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _423 = isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0));
    float _433 = (((cbMtdParam._m0[17u].x - _407) + ((1.0 - cbMtdParam._m0[17u].x) * _353)) * _423) + _407;
    float _434 = (((cbMtdParam._m0[17u].y - _408) + ((1.0 - cbMtdParam._m0[17u].y) * _353)) * _423) + _408;
    float _435 = (((cbMtdParam._m0[17u].z - _409) + ((1.0 - cbMtdParam._m0[17u].z) * _353)) * _423) + _409;
    float _449 = 1.0 - ((1.0 - _387.z) * 1.39999997615814208984375);
    float _4418 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
    float _481 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w)).x * cbMtdParam._m0[25u].z;
    float _495 = ((cbMtdParam._m0[23u].y * (-1.39999997615814208984375)) * ((TEXCOORD_13.w - _481) + (cbMtdParam._m0[24u].x * TEXCOORD_13.w))) + 1.0;
    float _4429 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _497 = 1.0 - (isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0)));
    float _505 = ((cbMtdParam._m0[23u].x * (-1.39999997615814208984375)) * ((TEXCOORD_10.w - _481) + (cbMtdParam._m0[24u].y * TEXCOORD_10.w))) + 1.0;
    float _4440 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _507 = 1.0 - (isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0)));
    vec4 _525 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _527 = _525.x;
    float _528 = _525.y;
    float _529 = _525.z;
    float _530 = cbMtdParam._m0[10u].x * _507;
    float _532 = cbMtdParam._m0[10u].y * _507;
    float _534 = cbMtdParam._m0[10u].z * _507;
    float _551 = ((_527 * (cbMtdParam._m0[16u].x - _530)) * _497) + (_530 * _527);
    float _552 = ((_528 * (cbMtdParam._m0[16u].y - _532)) * _497) + (_532 * _528);
    float _553 = ((_529 * (cbMtdParam._m0[16u].z - _534)) * _497) + (_534 * _529);
    float _575 = cbMtdParam._m0[23u].w * (-1.39999997615814208984375);
    float _579 = (_575 * ((TEXCOORD_7.x - _481) + (cbMtdParam._m0[22u].w * TEXCOORD_7.x))) + 1.0;
    float _580 = (_575 * ((TEXCOORD_7.y - _481) + (cbMtdParam._m0[22u].w * TEXCOORD_7.y))) + 1.0;
    float _581 = (_575 * ((TEXCOORD_7.z - _481) + (cbMtdParam._m0[22u].w * TEXCOORD_7.z))) + 1.0;
    float _4451 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _4462 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
    float _4473 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _590 = (1.0 - cbMtdParam._m0[25u].x) + _348;
    float _593 = _590 * (1.0 - (isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0))));
    float _594 = _590 * (1.0 - (isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0))));
    float _595 = ((_348 + 1.0) - cbMtdParam._m0[25u].x) * (1.0 - (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))));
    float _605 = _507 + _497;
    float _606 = _605 + _593;
    float _607 = _605 + _594;
    float _608 = _605 + _595;
    float _609 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _610 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
    float _611 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _612 = isnan(1.0) ? _609 : (isnan(_609) ? 1.0 : min(_609, 1.0));
    float _613 = isnan(1.0) ? _610 : (isnan(_610) ? 1.0 : min(_610, 1.0));
    float _614 = isnan(1.0) ? _611 : (isnan(_611) ? 1.0 : min(_611, 1.0));
    vec4 _632 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _637 = _632.w;
    float _638 = _632.x * cbMtdParam._m0[12u].x;
    float _639 = _632.y * cbMtdParam._m0[12u].y;
    float _640 = _632.z * cbMtdParam._m0[12u].z;
    vec4 _658 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _672 = (((_658.x * cbMtdParam._m0[13u].x) - _638) * _348) + _638;
    float _673 = (((_658.y * cbMtdParam._m0[13u].y) - _639) * _348) + _639;
    float _674 = (((_658.z * cbMtdParam._m0[13u].z) - _640) * _348) + _640;
    vec4 _693 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _707 = (((_693.x * cbMtdParam._m0[14u].x) - _672) * _351) + _672;
    float _708 = (((_693.y * cbMtdParam._m0[14u].y) - _673) * _351) + _673;
    float _709 = (((_693.z * cbMtdParam._m0[14u].z) - _674) * _351) + _674;
    vec4 _726 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _740 = (((_726.x * cbMtdParam._m0[15u].x) - _707) * _345) + _707;
    float _741 = (((_726.y * cbMtdParam._m0[15u].y) - _708) * _345) + _708;
    float _742 = (((_726.z * cbMtdParam._m0[15u].z) - _709) * _345) + _709;
    float _762 = ((_740 - (_740 * _612)) + (((_612 * 4.55000019073486328125) * ((_593 * ((cbMtdParam._m0[11u].x * _527) - _551)) + _551)) * _740)) * ((((cbMtdParam._m0[18u].x - _433) + ((1.0 - cbMtdParam._m0[18u].x) * _353)) * _450) + _433);
    float _763 = ((_741 - (_741 * _613)) + (((_613 * 4.55000019073486328125) * ((_594 * ((cbMtdParam._m0[11u].y * _528) - _552)) + _552)) * _741)) * ((((cbMtdParam._m0[18u].y - _434) + ((1.0 - cbMtdParam._m0[18u].y) * _353)) * _450) + _434);
    float _764 = ((_742 - (_614 * _742)) + (((_614 * 4.55000019073486328125) * ((_595 * ((cbMtdParam._m0[11u].z * _529) - _553)) + _553)) * _742)) * ((((cbMtdParam._m0[18u].z - _435) + ((1.0 - cbMtdParam._m0[18u].z) * _353)) * _450) + _435);
    float _775 = ((cbMtdParam._m0[22u].z - cbMtdParam._m0[25u].w) * _612) + cbMtdParam._m0[25u].w;
    float _778 = ((cbMtdParam._m0[20u].x - _775) * _348) + _775;
    float _781 = ((cbMtdParam._m0[20u].y - _778) * _351) + _778;
    float _784 = ((cbMtdParam._m0[20u].z - _781) * _345) + _781;
    vec4 _796 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _800 = _796.z;
    float _804 = (_796.x * 2.0) + (-1.0);
    float _806 = (_796.y * 2.0) + (-1.0);
    float _807 = dot(vec2(_804, _806), vec2(_804, _806));
    float _4514 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
    float _812 = sqrt(1.0 - (isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0))));
    float _815 = fma(_812, _311, fma(_806, _304, _804 * _283));
    float _818 = fma(_812, _312, fma(_806, _305, _804 * _284));
    float _821 = fma(_812, _313, fma(_806, _306, _804 * _285));
    float _825 = inversesqrt(dot(vec3(_815, _818, _821), vec3(_815, _818, _821)));
    float _826 = _825 * _815;
    float _827 = _825 * _818;
    float _828 = _825 * _821;
    float _845 = abs((fract(cbMtdParam._m0[21u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4525 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _846 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
    float _851 = (_846 * _846) * (3.0 - (_846 * 2.0));
    float _852 = isnan(cbMtdParam._m0[21u].y) ? _851 : (isnan(_851) ? cbMtdParam._m0[21u].y : max(_851, cbMtdParam._m0[21u].y));
    vec4 _871 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_10, SS_DiffuseMap), vec2((((cbMtdParam._m0[22u].x * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[21u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _876 = (isnan(cbMtdParam._m0[21u].x) ? _852 : (isnan(_852) ? cbMtdParam._m0[21u].x : min(_852, cbMtdParam._m0[21u].x))) * cbMtdParam._m0[22u].y;
    vec4 _908 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _914 = (_908.x * 2.0) + (-1.0);
    float _915 = (_908.y * 2.0) + (-1.0);
    float _916 = dot(vec2(_914, _915), vec2(_914, _915));
    float _4546 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _921 = sqrt(1.0 - (isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0))));
    float _924 = fma(_921, _311, fma(_915, _304, _914 * _283));
    float _927 = fma(_921, _312, fma(_915, _305, _914 * _284));
    float _930 = fma(_921, _313, fma(_915, _306, _914 * _285));
    float _934 = inversesqrt(dot(vec3(_924, _927, _930), vec3(_924, _927, _930)));
    float _935 = _934 * _924;
    float _936 = _934 * _927;
    float _937 = _934 * _930;
    float _940 = fma(_937, _266, fma(_936, _265, _935 * _264));
    float _943 = fma(_937, _299, fma(_936, _298, _935 * _297));
    float _946 = fma(_937, _313, fma(_936, _312, _935 * _311));
    float _950 = inversesqrt(dot(vec3(_940, _943, _946), vec3(_940, _943, _946)));
    vec4 _964 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _970 = (_964.x * 2.0) + (-1.0);
    float _971 = (_964.y * 2.0) + (-1.0);
    float _972 = dot(vec2(_970, _971), vec2(_970, _971));
    float _4557 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _977 = sqrt(1.0 - (isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0))));
    float _980 = fma(_977, _311, fma(_971, _304, _970 * _283));
    float _983 = fma(_977, _312, fma(_971, _305, _970 * _284));
    float _986 = fma(_977, _313, fma(_971, _306, _970 * _285));
    float _990 = inversesqrt(dot(vec3(_980, _983, _986), vec3(_980, _983, _986)));
    float _991 = _990 * _980;
    float _992 = _990 * _983;
    float _993 = _990 * _986;
    float _996 = fma(_993, _266, fma(_992, _265, _991 * _264));
    float _999 = fma(_993, _299, fma(_992, _298, _991 * _297));
    float _1002 = fma(_993, _313, fma(_992, _312, _991 * _311));
    float _1006 = inversesqrt(dot(vec3(_996, _999, _1002), vec3(_996, _999, _1002)));
    vec4 _1019 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _1025 = (_1019.x * 2.0) + (-1.0);
    float _1026 = (_1019.y * 2.0) + (-1.0);
    float _1027 = dot(vec2(_1025, _1026), vec2(_1025, _1026));
    float _4568 = isnan(0.0) ? _1027 : (isnan(_1027) ? 0.0 : max(_1027, 0.0));
    float _1032 = sqrt(1.0 - (isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0))));
    float _1035 = fma(_1032, _311, fma(_1026, _304, _1025 * _283));
    float _1038 = fma(_1032, _312, fma(_1026, _305, _1025 * _284));
    float _1041 = fma(_1032, _313, fma(_1026, _306, _1025 * _285));
    float _1045 = inversesqrt(dot(vec3(_1035, _1038, _1041), vec3(_1035, _1038, _1041)));
    float _1046 = _1045 * _1035;
    float _1047 = _1045 * _1038;
    float _1048 = _1045 * _1041;
    float _1051 = fma(_1048, _266, fma(_1047, _265, _1046 * _264));
    float _1054 = fma(_1048, _299, fma(_1047, _298, _1046 * _297));
    float _1057 = fma(_1048, _313, fma(_1047, _312, _1046 * _311));
    float _1061 = inversesqrt(dot(vec3(_1051, _1054, _1057), vec3(_1051, _1054, _1057)));
    float _1067 = fma(_828, _266, fma(_827, _265, _826 * _264));
    float _1070 = fma(_828, _299, fma(_827, _298, _826 * _297));
    float _1073 = fma(_828, _313, fma(_827, _312, _826 * _311));
    float _1077 = inversesqrt(dot(vec3(_1067, _1070, _1073), vec3(_1067, _1070, _1073)));
    float _1078 = _1077 * _1067;
    float _1079 = _1077 * _1070;
    float _1080 = _1077 * _1073;
    float _1087 = (((_1061 * _1051) - _1078) * _348) + _1078;
    float _1088 = (((_1061 * _1054) - _1079) * _348) + _1079;
    float _1089 = (((_1061 * _1057) - _1080) * _348) + _1080;
    vec4 _1102 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1108 = (_1102.x * 2.0) + (-1.0);
    float _1109 = (_1102.y * 2.0) + (-1.0);
    float _1110 = dot(vec2(_1108, _1109), vec2(_1108, _1109));
    float _4579 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
    float _1115 = sqrt(1.0 - (isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0))));
    float _1118 = fma(_1115, _311, fma(_1109, _304, _1108 * _283));
    float _1121 = fma(_1115, _312, fma(_1109, _305, _1108 * _284));
    float _1124 = fma(_1115, _313, fma(_1109, _306, _1108 * _285));
    float _1128 = inversesqrt(dot(vec3(_1118, _1121, _1124), vec3(_1118, _1121, _1124)));
    float _1129 = _1128 * _1118;
    float _1130 = _1128 * _1121;
    float _1131 = _1128 * _1124;
    float _1134 = fma(_1131, _266, fma(_1130, _265, _1129 * _264));
    float _1137 = fma(_1131, _299, fma(_1130, _298, _1129 * _297));
    float _1140 = fma(_1131, _313, fma(_1130, _312, _1129 * _311));
    float _1144 = inversesqrt(dot(vec3(_1134, _1137, _1140), vec3(_1134, _1137, _1140)));
    float _1154 = (((_1144 * _1134) - _1087) * _351) + _1087;
    float _1155 = (((_1144 * _1137) - _1088) * _351) + _1088;
    float _1156 = (((_1144 * _1140) - _1089) * _351) + _1089;
    vec4 _1169 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _1175 = (_1169.x * 2.0) + (-1.0);
    float _1176 = (_1169.y * 2.0) + (-1.0);
    float _1177 = dot(vec2(_1175, _1176), vec2(_1175, _1176));
    float _4590 = isnan(0.0) ? _1177 : (isnan(_1177) ? 0.0 : max(_1177, 0.0));
    float _1182 = sqrt(1.0 - (isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0))));
    float _1185 = fma(_1182, _311, fma(_1176, _304, _1175 * _283));
    float _1188 = fma(_1182, _312, fma(_1176, _305, _1175 * _284));
    float _1191 = fma(_1182, _313, fma(_1176, _306, _1175 * _285));
    float _1195 = inversesqrt(dot(vec3(_1185, _1188, _1191), vec3(_1185, _1188, _1191)));
    float _1196 = _1195 * _1185;
    float _1197 = _1195 * _1188;
    float _1198 = _1195 * _1191;
    float _1201 = fma(_1198, _266, fma(_1197, _265, _1196 * _264));
    float _1204 = fma(_1198, _299, fma(_1197, _298, _1196 * _297));
    float _1207 = fma(_1198, _313, fma(_1197, _312, _1196 * _311));
    float _1211 = inversesqrt(dot(vec3(_1201, _1204, _1207), vec3(_1201, _1204, _1207)));
    float _1221 = (((_1211 * _1207) - _1156) * _345) + _1156;
    vec4 _1233 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1239 = (_1233.x * 2.0) + (-1.0);
    float _1240 = (_1233.y * 2.0) + (-1.0);
    float _1241 = dot(vec2(_1239, _1240), vec2(_1239, _1240));
    float _4601 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1246 = sqrt(1.0 - (isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0))));
    float _1249 = fma(_1246, _311, fma(_1240, _304, _1239 * _283));
    float _1252 = fma(_1246, _312, fma(_1240, _305, _1239 * _284));
    float _1255 = fma(_1246, _313, fma(_1240, _306, _1239 * _285));
    float _1259 = inversesqrt(dot(vec3(_1249, _1252, _1255), vec3(_1249, _1252, _1255)));
    float _1260 = _1259 * _1249;
    float _1261 = _1259 * _1252;
    float _1262 = _1259 * _1255;
    float _1265 = fma(_1262, _266, fma(_1261, _265, _1260 * _264));
    float _1268 = fma(_1262, _299, fma(_1261, _298, _1260 * _297));
    float _1271 = fma(_1262, _313, fma(_1261, _312, _1260 * _311));
    float _1275 = inversesqrt(dot(vec3(_1265, _1268, _1271), vec3(_1265, _1268, _1271)));
    vec4 _1313 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _1327 = (((((((_996 * _497) * _1006) * cbMtdParam._m0[24u].z) + ((((_606 * _590) * _940) * _950) * cbMtdParam._m0[24u].w)) + _1154) + (((_1211 * _1201) - _1154) * _345)) + (((_1265 * _507) * _1275) * cbMtdParam._m0[23u].z)) + (((_1313.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1332 = (((((((_999 * _497) * _1006) * cbMtdParam._m0[24u].z) + ((((_607 * _590) * _943) * _950) * cbMtdParam._m0[24u].w)) + _1155) + (((_1211 * _1204) - _1155) * _345)) + (((_1268 * _507) * _1275) * cbMtdParam._m0[23u].z)) + (((_1313.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1335 = fma(_1221, _311, fma(_1332, _297, _1327 * _264));
    float _1338 = fma(_1221, _312, fma(_1332, _298, _1327 * _265));
    float _1341 = fma(_1221, _313, fma(_1332, _299, _1327 * _266));
    float _1345 = inversesqrt(dot(vec3(_1335, _1338, _1341), vec3(_1335, _1338, _1341)));
    float _1346 = _1345 * _1335;
    float _1347 = _1345 * _1338;
    float _1348 = _1345 * _1341;
    float _4612 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
    float _1349 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
    float _4623 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
    float _1350 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
    float _4634 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _4645 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4656 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _4667 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
    float _1354 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
    float _1370 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1410 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1420 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1410);
    float _1421 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1410);
    float _1422 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1410);
    float _1426 = inversesqrt(dot(vec3(_1420, _1421, _1422), vec3(_1420, _1421, _1422)));
    float _1427 = _1420 * _1426;
    float _1428 = _1421 * _1426;
    float _1429 = _1422 * _1426;
    vec4 _1434 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1436 = _1434.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1607 = sqrt(((_1420 * _1420) + (_1421 * _1421)) + (_1422 * _1422));
        float _1613 = (cbMatDynParam._m0[5u].x * _1607) + cbMatDynParam._m0[5u].y;
        float _4678 = isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0));
        float _1614 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
        float _1618 = (cbMatDynParam._m0[5u].z * _1607) + cbMatDynParam._m0[5u].w;
        float _4689 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0))) - _1614)) + _1614) < ((_1436 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _1447 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1448 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1466 = fma(_1348, cbSceneParam._m0[5u].z, fma(_1347, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1346));
    float _1469 = fma(_1348, cbSceneParam._m0[6u].z, fma(_1347, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1346));
    float _1472 = fma(_1348, cbSceneParam._m0[7u].z, fma(_1347, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1346));
    uint _1485 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1486 = _1485 + 9u;
    uint _1487 = _1486 + uint(cbMatDynParam._m0[0u].w);
    float _1493 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0)))) * cbInstanceData._m0[_1487].x;
    float _1494 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0)))) * cbInstanceData._m0[_1487].y;
    float _1495 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0)))) * cbInstanceData._m0[_1487].z;
    float _4700 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
    float _1496 = isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0));
    float _4711 = isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0));
    float _1497 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
    float _4722 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
    float _1498 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
    float _1499 = 1.0 - _1354;
    float _1500 = _1496 * _1499;
    float _1501 = _1497 * _1499;
    float _1502 = _1498 * _1499;
    float _1507 = (_1496 + (-0.039999999105930328369140625)) * _1354;
    float _1508 = (_1497 + (-0.039999999105930328369140625)) * _1354;
    float _1509 = (_1498 + (-0.039999999105930328369140625)) * _1354;
    float _1510 = _1507 + 0.039999999105930328369140625;
    float _1512 = _1508 + 0.039999999105930328369140625;
    float _1513 = _1509 + 0.039999999105930328369140625;
    vec4 _1522 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1447, cbSceneParam._m0[86u].y * _1448));
    float _1525 = _1522.x * TEXCOORD_7.w;
    float _1526 = dot(vec3(_1346, _1347, _1348), vec3(_1427, _1428, _1429));
    float _1529 = _1526 * 2.0;
    float _1533 = (_1529 * _1346) - _1427;
    float _1534 = (_1529 * _1347) - _1428;
    float _1535 = (_1529 * _1348) - _1429;
    float _1539 = abs(dot(vec3(_1427, _1428, _1429), vec3(_1346, _1347, _1348)));
    float _4733 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
    float _1541 = sqrt(_1350);
    float _1553 = exp2((_1541 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1541 * 3.0));
    float _1559 = (1.0 - _1553) * ((_1541 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1560 = _1553 * _1541;
    float _1588 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1592 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1596 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1926;
    float _1928;
    float _1929;
    float _1930;
    float _1931;
    float _1932;
    float _1933;
    float _1934;
    float _1935;
    float _1936;
    float _1937;
    float _1938;
    float _1939;
    float _1940;
    float _1941;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1651 = fma(_1596, cbModelParam._m0[26u].z, fma(_1592, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1588));
        float _1655 = fma(_1596, cbModelParam._m0[27u].z, fma(_1592, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1588));
        float _1659 = fma(_1596, cbModelParam._m0[28u].z, fma(_1592, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1588));
        float _1684 = _1588 + _1346;
        float _1685 = _1592 + _1347;
        float _1686 = _1596 + _1348;
        float _1696 = fma(_1686, cbModelParam._m0[26u].z, fma(_1685, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1684)) - _1651;
        float _1697 = fma(_1686, cbModelParam._m0[27u].z, fma(_1685, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1684)) - _1655;
        float _1698 = fma(_1686, cbModelParam._m0[28u].z, fma(_1685, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1684)) - _1659;
        float _1702 = inversesqrt(dot(vec3(_1696, _1697, _1698), vec3(_1696, _1697, _1698)));
        float _1715 = ((_1702 * _1696) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1651 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1716 = ((_1702 * _1697) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1655 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1717 = ((_1702 * _1698) / cbModelParam._m0[34u].z) + ((((((_1659 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1720 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1715, _1716, _1717), 0.0);
        vec4 _1727 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1715, _1716, _1717), 0.0);
        vec4 _1734 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1715, _1716, _1717), 0.0);
        vec4 _1741 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1715, _1716, _1717), 0.0);
        float _1754 = exp2((_1720.w + (-0.5)) * 20.0) * 2.0;
        float _1755 = _1754 * (_1720.x + (-0.5));
        float _1756 = _1754 * (_1720.y + (-0.5));
        float _1757 = _1754 * (_1720.z + (-0.5));
        float _1764 = exp2((_1727.w + (-0.5)) * 20.0) * 2.0;
        float _1765 = _1764 * (_1727.x + (-0.5));
        float _1766 = _1764 * (_1727.y + (-0.5));
        float _1767 = _1764 * (_1727.z + (-0.5));
        float _1774 = exp2((_1734.w + (-0.5)) * 20.0) * 2.0;
        float _1775 = _1774 * (_1734.x + (-0.5));
        float _1776 = _1774 * (_1734.y + (-0.5));
        float _1777 = _1774 * (_1734.z + (-0.5));
        float _1784 = exp2((_1741.w + (-0.5)) * 20.0) * 2.0;
        float _1785 = _1784 * (_1741.x + (-0.5));
        float _1786 = _1784 * (_1741.y + (-0.5));
        float _1787 = _1784 * (_1741.z + (-0.5));
        float _1788 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1789 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
        float _1790 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1791 = _1755 * 0.5;
        float _1792 = _1765 * 0.5;
        float _1793 = _1775 * 0.5;
        float _1794 = dot(vec3(_1791, _1792, _1793), vec3(_1791, _1792, _1793));
        float _1799 = (_1794 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1794);
        float _1808 = (dot(vec3(_1346, _1347, _1348), vec3(_1799 * _1791, _1799 * _1792, _1799 * _1793)) + 1.0) * 0.5;
        float _4759 = isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0));
        float _1818 = sqrt(((_1792 * _1792) + (_1791 * _1791)) + (_1793 * _1793)) / (_1788 + 9.9999997473787516355514526367188e-06);
        float _4770 = isnan(0.0) ? _1818 : (isnan(_1818) ? 0.0 : max(_1818, 0.0));
        float _1819 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
        float _1820 = _1819 * 2.0;
        float _1824 = (1.0 - _1819) / (_1819 + 1.0);
        float _4781 = isnan(0.0) ? _1824 : (isnan(_1824) ? 0.0 : max(_1824, 0.0));
        float _1825 = isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0));
        float _1834 = ((((1.0 - _1825) * (_1820 + 2.0)) * exp2(log2(isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0))) * (_1820 + 1.0))) + _1825) * _1788;
        float _1835 = _1756 * 0.5;
        float _1836 = _1766 * 0.5;
        float _1837 = _1776 * 0.5;
        float _1838 = dot(vec3(_1835, _1836, _1837), vec3(_1835, _1836, _1837));
        float _1843 = (_1838 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1838);
        float _1851 = (dot(vec3(_1346, _1347, _1348), vec3(_1843 * _1835, _1843 * _1836, _1843 * _1837)) + 1.0) * 0.5;
        float _4792 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0));
        float _1860 = sqrt(((_1836 * _1836) + (_1835 * _1835)) + (_1837 * _1837)) / (_1789 + 9.9999997473787516355514526367188e-06);
        float _4803 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1861 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
        float _1862 = _1861 * 2.0;
        float _1866 = (1.0 - _1861) / (_1861 + 1.0);
        float _4814 = isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0));
        float _1867 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
        float _1876 = ((((1.0 - _1867) * (_1862 + 2.0)) * exp2(log2(isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0))) * (_1862 + 1.0))) + _1867) * _1789;
        float _1877 = _1757 * 0.5;
        float _1878 = _1767 * 0.5;
        float _1879 = _1777 * 0.5;
        float _1880 = dot(vec3(_1877, _1878, _1879), vec3(_1877, _1878, _1879));
        float _1885 = (_1880 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1880);
        float _1893 = (dot(vec3(_1346, _1347, _1348), vec3(_1885 * _1877, _1885 * _1878, _1885 * _1879)) + 1.0) * 0.5;
        float _4825 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
        float _1902 = sqrt(((_1878 * _1878) + (_1877 * _1877)) + (_1879 * _1879)) / (_1790 + 9.9999997473787516355514526367188e-06);
        float _4836 = isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0));
        float _1903 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
        float _1904 = _1903 * 2.0;
        float _1908 = (1.0 - _1903) / (_1903 + 1.0);
        float _4847 = isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0));
        float _1909 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
        float _1918 = ((((1.0 - _1909) * (_1904 + 2.0)) * exp2(log2(isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0))) * (_1904 + 1.0))) + _1909) * _1790;
        _1926 = _1757;
        _1928 = _1756;
        _1929 = _1755;
        _1930 = _1767;
        _1931 = _1766;
        _1932 = _1765;
        _1933 = _1777;
        _1934 = _1776;
        _1935 = _1775;
        _1936 = _1790;
        _1937 = _1789;
        _1938 = _1788;
        _1939 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0)));
        _1940 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1876 : (isnan(_1876) ? 0.0 : max(_1876, 0.0)));
        _1941 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1918 : (isnan(_1918) ? 0.0 : max(_1918, 0.0)));
    }
    else
    {
        _1926 = _1927;
        _1928 = _1927;
        _1929 = _1927;
        _1930 = _1927;
        _1931 = _1927;
        _1932 = _1927;
        _1933 = _1927;
        _1934 = _1927;
        _1935 = _1927;
        _1936 = _1927;
        _1937 = _1927;
        _1938 = _1927;
        _1939 = 0.0;
        _1940 = 0.0;
        _1941 = 0.0;
    }
    float _2239;
    float _2240;
    float _2241;
    float _2242;
    float _2243;
    float _2244;
    float _2245;
    float _2246;
    float _2247;
    float _2248;
    float _2249;
    float _2250;
    float _2251;
    float _2252;
    float _2253;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1970 = fma(_1596, cbModelParam._m0[30u].z, fma(_1592, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1588));
        float _1974 = fma(_1596, cbModelParam._m0[31u].z, fma(_1592, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1588));
        float _1978 = fma(_1596, cbModelParam._m0[32u].z, fma(_1592, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1588));
        float _2001 = _1588 + _1346;
        float _2002 = _1592 + _1347;
        float _2003 = _1596 + _1348;
        float _2013 = fma(_2003, cbModelParam._m0[30u].z, fma(_2002, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _2001)) - _1970;
        float _2014 = fma(_2003, cbModelParam._m0[31u].z, fma(_2002, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _2001)) - _1974;
        float _2015 = fma(_2003, cbModelParam._m0[32u].z, fma(_2002, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _2001)) - _1978;
        float _2019 = inversesqrt(dot(vec3(_2013, _2014, _2015), vec3(_2013, _2014, _2015)));
        float _2032 = ((_2019 * _2013) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1970 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2033 = ((_2019 * _2014) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1974 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _2034 = ((_2019 * _2015) / cbModelParam._m0[35u].z) + ((((((_1978 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _2036 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_2032, _2033, _2034), 0.0);
        vec4 _2043 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_2032, _2033, _2034), 0.0);
        vec4 _2050 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_2032, _2033, _2034), 0.0);
        vec4 _2057 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_2032, _2033, _2034), 0.0);
        float _2069 = exp2((_2036.w + (-0.5)) * 20.0) * 2.0;
        float _2070 = _2069 * (_2036.x + (-0.5));
        float _2071 = _2069 * (_2036.y + (-0.5));
        float _2072 = _2069 * (_2036.z + (-0.5));
        float _2079 = exp2((_2043.w + (-0.5)) * 20.0) * 2.0;
        float _2080 = _2079 * (_2043.x + (-0.5));
        float _2081 = _2079 * (_2043.y + (-0.5));
        float _2082 = _2079 * (_2043.z + (-0.5));
        float _2089 = exp2((_2050.w + (-0.5)) * 20.0) * 2.0;
        float _2090 = _2089 * (_2050.x + (-0.5));
        float _2091 = _2089 * (_2050.y + (-0.5));
        float _2092 = _2089 * (_2050.z + (-0.5));
        float _2099 = exp2((_2057.w + (-0.5)) * 20.0) * 2.0;
        float _2100 = _2099 * (_2057.x + (-0.5));
        float _2101 = _2099 * (_2057.y + (-0.5));
        float _2102 = _2099 * (_2057.z + (-0.5));
        float _2103 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2104 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
        float _2105 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
        float _2106 = _2070 * 0.5;
        float _2107 = _2080 * 0.5;
        float _2108 = _2090 * 0.5;
        float _2109 = dot(vec3(_2106, _2107, _2108), vec3(_2106, _2107, _2108));
        float _2114 = (_2109 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2109);
        float _2122 = (dot(vec3(_1346, _1347, _1348), vec3(_2114 * _2106, _2114 * _2107, _2114 * _2108)) + 1.0) * 0.5;
        float _4888 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
        float _2131 = sqrt(((_2107 * _2107) + (_2106 * _2106)) + (_2108 * _2108)) / (_2103 + 9.9999997473787516355514526367188e-06);
        float _4899 = isnan(0.0) ? _2131 : (isnan(_2131) ? 0.0 : max(_2131, 0.0));
        float _2132 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
        float _2133 = _2132 * 2.0;
        float _2137 = (1.0 - _2132) / (_2132 + 1.0);
        float _4910 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
        float _2138 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
        float _2147 = ((((1.0 - _2138) * (_2133 + 2.0)) * exp2(log2(isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0))) * (_2133 + 1.0))) + _2138) * _2103;
        float _2148 = _2071 * 0.5;
        float _2149 = _2081 * 0.5;
        float _2150 = _2091 * 0.5;
        float _2151 = dot(vec3(_2148, _2149, _2150), vec3(_2148, _2149, _2150));
        float _2156 = (_2151 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2151);
        float _2164 = (dot(vec3(_1346, _1347, _1348), vec3(_2156 * _2148, _2156 * _2149, _2156 * _2150)) + 1.0) * 0.5;
        float _4921 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
        float _2173 = sqrt(((_2149 * _2149) + (_2148 * _2148)) + (_2150 * _2150)) / (_2104 + 9.9999997473787516355514526367188e-06);
        float _4932 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
        float _2174 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _2175 = _2174 * 2.0;
        float _2179 = (1.0 - _2174) / (_2174 + 1.0);
        float _4943 = isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0));
        float _2180 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
        float _2189 = ((((1.0 - _2180) * (_2175 + 2.0)) * exp2(log2(isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0))) * (_2175 + 1.0))) + _2180) * _2104;
        float _2190 = _2072 * 0.5;
        float _2191 = _2082 * 0.5;
        float _2192 = _2092 * 0.5;
        float _2193 = dot(vec3(_2190, _2191, _2192), vec3(_2190, _2191, _2192));
        float _2198 = (_2193 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2193);
        float _2206 = (dot(vec3(_1346, _1347, _1348), vec3(_2198 * _2190, _2198 * _2191, _2198 * _2192)) + 1.0) * 0.5;
        float _4954 = isnan(0.0) ? _2206 : (isnan(_2206) ? 0.0 : max(_2206, 0.0));
        float _2215 = sqrt(((_2191 * _2191) + (_2190 * _2190)) + (_2192 * _2192)) / (_2105 + 9.9999997473787516355514526367188e-06);
        float _4965 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
        float _2216 = isnan(1.0) ? _4965 : (isnan(_4965) ? 1.0 : min(_4965, 1.0));
        float _2217 = _2216 * 2.0;
        float _2221 = (1.0 - _2216) / (_2216 + 1.0);
        float _4976 = isnan(0.0) ? _2221 : (isnan(_2221) ? 0.0 : max(_2221, 0.0));
        float _2222 = isnan(1.0) ? _4976 : (isnan(_4976) ? 1.0 : min(_4976, 1.0));
        float _2231 = ((((1.0 - _2222) * (_2217 + 2.0)) * exp2(log2(isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0))) * (_2217 + 1.0))) + _2222) * _2105;
        _2239 = _2072;
        _2240 = _2071;
        _2241 = _2070;
        _2242 = _2082;
        _2243 = _2081;
        _2244 = _2080;
        _2245 = _2092;
        _2246 = _2091;
        _2247 = _2090;
        _2248 = _2105;
        _2249 = _2104;
        _2250 = _2103;
        _2251 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0)));
        _2252 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0)));
        _2253 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0)));
    }
    else
    {
        _2239 = _1927;
        _2240 = _1927;
        _2241 = _1927;
        _2242 = _1927;
        _2243 = _1927;
        _2244 = _1927;
        _2245 = _1927;
        _2246 = _1927;
        _2247 = _1927;
        _2248 = _1927;
        _2249 = _1927;
        _2250 = _1927;
        _2251 = 0.0;
        _2252 = 0.0;
        _2253 = 0.0;
    }
    float _2263 = (cbModelParam._m0[1u].x * (_2251 - _1939)) + _1939;
    float _2264 = (cbModelParam._m0[1u].x * (_2252 - _1940)) + _1940;
    float _2265 = (cbModelParam._m0[1u].x * (_2253 - _1941)) + _1941;
    float _2286 = fma(_2265, cbSceneParam._m0[89u].z, fma(_2264, cbSceneParam._m0[89u].y, _2263 * cbSceneParam._m0[89u].x));
    float _2289 = fma(_2265, cbSceneParam._m0[90u].z, fma(_2264, cbSceneParam._m0[90u].y, _2263 * cbSceneParam._m0[90u].x));
    float _2292 = fma(_2265, cbSceneParam._m0[91u].z, fma(_2264, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2263));
    float _2307 = _1533 * 0.5;
    float _2308 = _1534 * 0.5;
    float _2309 = _1535 * 0.5;
    float _2310 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_2241, _2244, _2247, _2250));
    float _2313 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_2240, _2243, _2246, _2249));
    float _2316 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_2239, _2242, _2245, _2248));
    float _2350;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2323 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_1926, _1930, _1933, _1936));
        float _2327 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_1928, _1931, _1934, _1937));
        float _2331 = dot(vec4(_2307, _2308, _2309, 1.0), vec4(_1929, _1932, _1935, _1938));
        float _2338 = dot(vec4(cbModelParam._m0[39u]), vec4(_2307, _2308, _2309, 1.0));
        _2350 = dot(vec3(isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0)), isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0)), isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2338) ? 0.0 : (isnan(0.0) ? _2338 : max(0.0, _2338))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2350 = 1.0;
    }
    float _2361;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2352 = dot(vec4(cbModelParam._m0[40u]), vec4(_2307, _2308, _2309, 1.0));
        _2361 = dot(vec3(isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0)), isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0)), isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2352) ? 0.0 : (isnan(0.0) ? _2352 : max(0.0, _2352))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2361 = 1.0;
    }
    float _2365 = (_2361 * cbModelParam._m0[1u].x) + (_2350 * (1.0 - cbModelParam._m0[1u].x));
    float _2375 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1350);
    float _2376 = isnan(_2375) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2375 : min(cbModelParam._m0[25u].z, _2375));
    float _2456;
    float _2458;
    float _2460;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2423 = fma(_1596, cbModelParam._m0[13u].z, fma(_1592, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1588)) + cbModelParam._m0[13u].w;
        float _2427 = fma(_1596, cbModelParam._m0[14u].z, fma(_1592, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1588)) + cbModelParam._m0[14u].w;
        float _2431 = fma(_1596, cbModelParam._m0[15u].z, fma(_1592, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1588)) + cbModelParam._m0[15u].w;
        float _2434 = fma(_1535, cbModelParam._m0[13u].z, fma(_1534, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1533));
        float _2437 = fma(_1535, cbModelParam._m0[14u].z, fma(_1534, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1533));
        float _2440 = fma(_1535, cbModelParam._m0[15u].z, fma(_1534, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1533));
        float _2468;
        if (_2434 > 0.0)
        {
            _2468 = abs((1.0 - _2423) / _2434);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_2434 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_2423 + 1.0) / _2434);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _2468 = frontier_phi_19_17_ladder;
        }
        float _2691;
        if (_2437 > 0.0)
        {
            _2691 = abs((1.0 - _2427) / _2437);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2437 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2427 + 1.0) / _2437);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2691 = frontier_phi_28_24_ladder;
        }
        float _2948;
        if (_2440 > 0.0)
        {
            _2948 = abs((1.0 - _2431) / _2440);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2440 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2431 + 1.0) / _2440);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2948 = frontier_phi_40_35_ladder;
        }
        float _2950 = isnan(_2691) ? _2468 : (isnan(_2468) ? _2691 : min(_2468, _2691));
        float _2951 = isnan(_2948) ? _2950 : (isnan(_2950) ? _2948 : min(_2950, _2948));
        float _2955 = (_2951 * _2434) + _2423;
        float _2956 = (_2951 * _2437) + _2427;
        float _2957 = (_2951 * _2440) + _2431;
        float _2958 = _2951 * 9.9999997473787516355514526367188e-05;
        float _2960 = (-1.0) - _2958;
        float _2962 = _2958 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2957 > _2962) || ((_2957 < _2960) || ((_2956 > _2962) || ((_2956 < _2960) || ((_2955 < _2960) || (_2955 > _2962))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3085 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2957, cbModelParam._m0[9u].z, fma(_2956, cbModelParam._m0[9u].y, _2955 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2957, cbModelParam._m0[10u].z, fma(_2956, cbModelParam._m0[10u].y, _2955 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2957, cbModelParam._m0[11u].z, fma(_2956, cbModelParam._m0[11u].y, _2955 * cbModelParam._m0[11u].x))), _2376);
            frontier_phi_18_40_ladder = _3085.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _3085.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _3085.x * cbModelParam._m0[1u].y;
        }
        _2456 = frontier_phi_18_40_ladder_2;
        _2458 = frontier_phi_18_40_ladder_1;
        _2460 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _2444 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1533, _1534, _1535), _2376);
        _2456 = _2444.x * cbModelParam._m0[1u].y;
        _2458 = _2444.y * cbModelParam._m0[1u].y;
        _2460 = _2444.z * cbModelParam._m0[1u].y;
    }
    float _2464 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1350);
    float _2465 = isnan(_2464) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2464 : min(cbModelParam._m0[25u].w, _2464));
    float _2554;
    float _2556;
    float _2558;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2518 = fma(_1596, cbModelParam._m0[21u].z, fma(_1592, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1588)) + cbModelParam._m0[21u].w;
        float _2522 = fma(_1596, cbModelParam._m0[22u].z, fma(_1592, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1588)) + cbModelParam._m0[22u].w;
        float _2526 = fma(_1596, cbModelParam._m0[23u].z, fma(_1592, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1588)) + cbModelParam._m0[23u].w;
        float _2529 = fma(_1535, cbModelParam._m0[21u].z, fma(_1534, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1533));
        float _2532 = fma(_1535, cbModelParam._m0[22u].z, fma(_1534, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1533));
        float _2535 = fma(_1535, cbModelParam._m0[23u].z, fma(_1534, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1533));
        float _2696;
        if (_2529 > 0.0)
        {
            _2696 = abs((1.0 - _2518) / _2529);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2529 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2518 + 1.0) / _2529);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2696 = frontier_phi_30_26_ladder;
        }
        float _2975;
        if (_2532 > 0.0)
        {
            _2975 = abs((1.0 - _2522) / _2532);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2532 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2522 + 1.0) / _2532);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2975 = frontier_phi_42_37_ladder;
        }
        float _3188;
        if (_2535 > 0.0)
        {
            _3188 = abs((1.0 - _2526) / _2535);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_2535 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_2526 + 1.0) / _2535);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _3188 = frontier_phi_51_48_ladder;
        }
        float _3190 = isnan(_2975) ? _2696 : (isnan(_2696) ? _2975 : min(_2696, _2975));
        float _3191 = isnan(_3188) ? _3190 : (isnan(_3190) ? _3188 : min(_3190, _3188));
        float _3195 = (_3191 * _2529) + _2518;
        float _3196 = (_3191 * _2532) + _2522;
        float _3197 = (_3191 * _2535) + _2526;
        float _3198 = _3191 * 9.9999997473787516355514526367188e-05;
        float _3199 = (-1.0) - _3198;
        float _3201 = _3198 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_3197 > _3201) || ((_3197 < _3199) || ((_3196 > _3201) || ((_3196 < _3199) || ((_3195 < _3199) || (_3195 > _3201))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3416 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3197, cbModelParam._m0[17u].z, fma(_3196, cbModelParam._m0[17u].y, _3195 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3197, cbModelParam._m0[18u].z, fma(_3196, cbModelParam._m0[18u].y, _3195 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3197, cbModelParam._m0[19u].z, fma(_3196, cbModelParam._m0[19u].y, _3195 * cbModelParam._m0[19u].x))), _2465);
            frontier_phi_27_51_ladder = _3416.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _3416.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _3416.x * cbModelParam._m0[1u].z;
        }
        _2554 = frontier_phi_27_51_ladder_2;
        _2556 = frontier_phi_27_51_ladder_1;
        _2558 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _2538 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1533, _1534, _1535), _2465);
        _2554 = _2538.x * cbModelParam._m0[1u].z;
        _2556 = _2538.y * cbModelParam._m0[1u].z;
        _2558 = _2538.z * cbModelParam._m0[1u].z;
    }
    float _2571 = (((_1559 * _1510) + _1560) * _1525) * ((cbModelParam._m0[1u].w * (_2554 - _2456)) + _2456);
    float _2573 = (((_1559 * _1512) + _1560) * _1525) * ((cbModelParam._m0[1u].w * (_2556 - _2458)) + _2458);
    float _2575 = (((_1559 * _1513) + _1560) * _1525) * ((cbModelParam._m0[1u].w * (_2558 - _2460)) + _2460);
    float _2578 = fma(_2575, cbSceneParam._m0[89u].z, fma(_2573, cbSceneParam._m0[89u].y, _2571 * cbSceneParam._m0[89u].x));
    float _2581 = fma(_2575, cbSceneParam._m0[90u].z, fma(_2573, cbSceneParam._m0[90u].y, _2571 * cbSceneParam._m0[90u].x));
    float _2584 = fma(_2575, cbSceneParam._m0[91u].z, fma(_2573, cbSceneParam._m0[91u].y, _2571 * cbSceneParam._m0[91u].x));
    vec4 _2592 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1447, _1448));
    float _2594 = _2592.w;
    float _2606 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2594);
    float _2607 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2594);
    float _2608 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2594);
    uvec4 _2612 = floatBitsToUint(cbInstanceData._m0[_1485 + 5u]);
    uint _2614 = _2612.x * 14u;
    uint _2615 = _2614 + 13u;
    float _2622 = _1525 + (-1.0);
    float _2627 = (cbLight._m0[_2615].x * _2622) + 1.0;
    float _2628 = (cbLight._m0[_2615].y * _2622) + 1.0;
    float _2629 = (cbLight._m0[_2615].z * _2622) + 1.0;
    float _2630 = (cbLight._m0[_2615].w * _2622) + 1.0;
    uint _2631 = _2614 + 5u;
    float _2637 = isnan(1.0) ? _2628 : (isnan(_2628) ? 1.0 : min(_2628, 1.0));
    uint _2641 = _2614 + 4u;
    float _2650 = isnan(1.0) ? _2627 : (isnan(_2627) ? 1.0 : min(_2627, 1.0));
    uint _2654 = _2614 | 1u;
    float _2665 = dot(vec3(cbLight._m0[_2614].xyz), vec3(_1346, _1347, _1348));
    float _2668 = dot(vec3(cbLight._m0[_2654].xyz), vec3(_1346, _1347, _1348));
    float _5112 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
    float _5123 = isnan(0.0) ? _2668 : (isnan(_2668) ? 0.0 : max(_2668, 0.0));
    float _2673 = (isnan(1.0) ? _5112 : (isnan(_5112) ? 1.0 : min(_5112, 1.0))) * 0.3183098733425140380859375;
    float _2675 = (isnan(1.0) ? _5123 : (isnan(_5123) ? 1.0 : min(_5123, 1.0))) * 0.3183098733425140380859375;
    float _2682 = ((cbLight._m0[_2631].x * _2637) * _2675) + (((cbLight._m0[_2641].x * _2606) * _2650) * _2673);
    float _2683 = ((_2637 * cbLight._m0[_2631].y) * _2675) + (((cbLight._m0[_2641].y * _2607) * _2650) * _2673);
    float _2684 = ((_2637 * cbLight._m0[_2631].z) * _2675) + (((cbLight._m0[_2641].z * _2608) * _2650) * _2673);
    uvec4 _2688 = floatBitsToUint(cbLight._m0[_2614 + 12u]);
    bool _2690 = _2688.x == 0u;
    float _2701;
    float _2703;
    float _2705;
    if (_2690)
    {
        _2701 = _2682;
        _2703 = _2683;
        _2705 = _2684;
    }
    else
    {
        uint _2709 = _2614 + 6u;
        float _2725 = (dot(vec3(cbLight._m0[_2614 + 2u].xyz), vec3(_1346, _1347, _1348)) * 0.5) + 0.5;
        float _2726 = _2725 * _2725;
        float _5134 = isnan(0.0) ? _2726 : (isnan(_2726) ? 0.0 : max(_2726, 0.0));
        float _2727 = isnan(1.0) ? _5134 : (isnan(_5134) ? 1.0 : min(_5134, 1.0));
        float _2728 = isnan(1.0) ? _2629 : (isnan(_2629) ? 1.0 : min(_2629, 1.0));
        _2701 = (((cbLight._m0[_2709].x * 0.3183098733425140380859375) * _2727) * _2728) + _2682;
        _2703 = (((cbLight._m0[_2709].y * 0.3183098733425140380859375) * _2727) * _2728) + _2683;
        _2705 = (((cbLight._m0[_2709].z * 0.3183098733425140380859375) * _2727) * _2728) + _2684;
    }
    bool _2708 = _2688.y == 0u;
    float _2746;
    float _2748;
    float _2750;
    if (_2708)
    {
        _2746 = _2701;
        _2748 = _2703;
        _2750 = _2705;
    }
    else
    {
        uint _2919 = _2614 + 7u;
        float _2935 = (dot(vec3(cbLight._m0[_2614 + 3u].xyz), vec3(_1346, _1347, _1348)) * 0.5) + 0.5;
        float _2936 = _2935 * _2935;
        float _5150 = isnan(0.0) ? _2936 : (isnan(_2936) ? 0.0 : max(_2936, 0.0));
        float _2937 = isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0));
        float _2938 = isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0));
        _2746 = (((cbLight._m0[_2919].x * 0.3183098733425140380859375) * _2937) * _2938) + _2701;
        _2748 = (((cbLight._m0[_2919].y * 0.3183098733425140380859375) * _2937) * _2938) + _2703;
        _2750 = (((cbLight._m0[_2919].z * 0.3183098733425140380859375) * _2937) * _2938) + _2705;
    }
    uint _2753 = _2614 + 8u;
    float _2766 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2614].w)) * _1350) * 0.949999988079071044921875);
    float _2767 = _2766 * _2766;
    float _2768 = cbLight._m0[_2614].x + _1427;
    float _2769 = cbLight._m0[_2614].y + _1428;
    float _2770 = cbLight._m0[_2614].z + _1429;
    float _2774 = inversesqrt(dot(vec3(_2768, _2769, _2770), vec3(_2768, _2769, _2770)));
    float _2775 = _2774 * _2768;
    float _2776 = _2774 * _2769;
    float _2777 = _2774 * _2770;
    float _2778 = dot(vec3(_1346, _1347, _1348), vec3(cbLight._m0[_2614].xyz));
    float _5166 = isnan(0.0) ? _2778 : (isnan(_2778) ? 0.0 : max(_2778, 0.0));
    float _2781 = isnan(1.0) ? _5166 : (isnan(_5166) ? 1.0 : min(_5166, 1.0));
    float _5177 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
    float _2782 = isnan(1.0) ? _5177 : (isnan(_5177) ? 1.0 : min(_5177, 1.0));
    float _2783 = dot(vec3(_1346, _1347, _1348), vec3(_2775, _2776, _2777));
    float _5188 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0));
    float _2786 = isnan(1.0) ? _5188 : (isnan(_5188) ? 1.0 : min(_5188, 1.0));
    float _2787 = dot(vec3(cbLight._m0[_2614].xyz), vec3(_2775, _2776, _2777));
    float _5199 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
    float _2791 = _2767 * _2767;
    float _2795 = ((_2786 * _2786) * (_2791 + (-1.0))) + 1.0;
    float _2803 = exp2(log2(1.0 - (isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0)))) * 5.0);
    float _2804 = 0.959999978542327880859375 - _1507;
    float _2806 = 0.959999978542327880859375 - _1508;
    float _2807 = 0.959999978542327880859375 - _1509;
    float _2814 = 1.0 - _2767;
    float _2825 = (0.5 / (((_2782 * ((_2781 * _2814) + _2767)) + 9.9999999392252902907785028219223e-09) + (((_2782 * _2814) + _2767) * _2781))) * _2781;
    float _5210 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
    float _2827 = (isnan(1.0) ? _5210 : (isnan(_5210) ? 1.0 : min(_5210, 1.0))) * (_2791 / ((_2795 * _2795) * 3.141590118408203125));
    uint _2841 = _2614 + 9u;
    float _2852 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2654].w)) * _1350) * 0.949999988079071044921875);
    float _2853 = _2852 * _2852;
    float _2854 = cbLight._m0[_2654].x + _1427;
    float _2855 = cbLight._m0[_2654].y + _1428;
    float _2856 = cbLight._m0[_2654].z + _1429;
    float _2860 = inversesqrt(dot(vec3(_2854, _2855, _2856), vec3(_2854, _2855, _2856)));
    float _2861 = _2860 * _2854;
    float _2862 = _2860 * _2855;
    float _2863 = _2860 * _2856;
    float _2864 = dot(vec3(_1346, _1347, _1348), vec3(cbLight._m0[_2654].xyz));
    float _5221 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
    float _2867 = isnan(1.0) ? _5221 : (isnan(_5221) ? 1.0 : min(_5221, 1.0));
    float _2868 = dot(vec3(_1346, _1347, _1348), vec3(_2861, _2862, _2863));
    float _5232 = isnan(0.0) ? _2868 : (isnan(_2868) ? 0.0 : max(_2868, 0.0));
    float _2871 = isnan(1.0) ? _5232 : (isnan(_5232) ? 1.0 : min(_5232, 1.0));
    float _2872 = dot(vec3(cbLight._m0[_2654].xyz), vec3(_2861, _2862, _2863));
    float _5243 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
    float _2876 = _2853 * _2853;
    float _2880 = ((_2871 * _2871) * (_2876 + (-1.0))) + 1.0;
    float _2887 = exp2(log2(1.0 - (isnan(1.0) ? _5243 : (isnan(_5243) ? 1.0 : min(_5243, 1.0)))) * 5.0);
    float _2894 = 1.0 - _2853;
    float _2904 = (0.5 / (((_2782 * ((_2867 * _2894) + _2853)) + 9.9999999392252902907785028219223e-09) + (((_2782 * _2894) + _2853) * _2867))) * _2867;
    float _5254 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
    float _2906 = (isnan(1.0) ? _5254 : (isnan(_5254) ? 1.0 : min(_5254, 1.0))) * (_2876 / ((_2880 * _2880) * 3.141590118408203125));
    float _2916 = (((((_2887 * _2804) + _1510) * cbLight._m0[_2841].x) * _2906) * _2637) + ((((cbLight._m0[_2753].x * _2606) * ((_2803 * _2804) + _1510)) * _2827) * _2650);
    float _2917 = (((((_2887 * _2806) + _1512) * cbLight._m0[_2841].y) * _2906) * _2637) + ((((cbLight._m0[_2753].y * _2607) * ((_2803 * _2806) + _1512)) * _2827) * _2650);
    float _2918 = (((((_2887 * _2807) + _1513) * cbLight._m0[_2841].z) * _2906) * _2637) + ((((cbLight._m0[_2753].z * _2608) * ((_2803 * _2807) + _1513)) * _2827) * _2650);
    float _2980;
    float _2982;
    float _2984;
    if (_2690)
    {
        _2980 = _2916;
        _2982 = _2917;
        _2984 = _2918;
    }
    else
    {
        uint _2986 = _2614 + 2u;
        uint _2990 = _2614 + 10u;
        float _3004 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2986].w)) * _1350) * 0.949999988079071044921875);
        float _3005 = _3004 * _3004;
        float _3006 = cbLight._m0[_2986].x + _1427;
        float _3007 = cbLight._m0[_2986].y + _1428;
        float _3008 = cbLight._m0[_2986].z + _1429;
        float _3012 = inversesqrt(dot(vec3(_3006, _3007, _3008), vec3(_3006, _3007, _3008)));
        float _3013 = _3012 * _3006;
        float _3014 = _3012 * _3007;
        float _3015 = _3012 * _3008;
        float _3016 = dot(vec3(_1346, _1347, _1348), vec3(cbLight._m0[_2986].xyz));
        float _5265 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
        float _3019 = isnan(1.0) ? _5265 : (isnan(_5265) ? 1.0 : min(_5265, 1.0));
        float _3020 = dot(vec3(_1346, _1347, _1348), vec3(_3013, _3014, _3015));
        float _5276 = isnan(0.0) ? _3020 : (isnan(_3020) ? 0.0 : max(_3020, 0.0));
        float _3023 = isnan(1.0) ? _5276 : (isnan(_5276) ? 1.0 : min(_5276, 1.0));
        float _3024 = dot(vec3(cbLight._m0[_2986].xyz), vec3(_3013, _3014, _3015));
        float _5287 = isnan(0.0) ? _3024 : (isnan(_3024) ? 0.0 : max(_3024, 0.0));
        float _3028 = _3005 * _3005;
        float _3032 = ((_3023 * _3023) * (_3028 + (-1.0))) + 1.0;
        float _3039 = exp2(log2(1.0 - (isnan(1.0) ? _5287 : (isnan(_5287) ? 1.0 : min(_5287, 1.0)))) * 5.0);
        float _3046 = 1.0 - _3005;
        float _3056 = (0.5 / (((_2782 * ((_3019 * _3046) + _3005)) + 9.9999999392252902907785028219223e-09) + (((_2782 * _3046) + _3005) * _3019))) * _3019;
        float _5298 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
        float _3058 = (isnan(1.0) ? _5298 : (isnan(_5298) ? 1.0 : min(_5298, 1.0))) * (_3028 / ((_3032 * _3032) * 3.141590118408203125));
        float _3059 = isnan(1.0) ? _2629 : (isnan(_2629) ? 1.0 : min(_2629, 1.0));
        _2980 = (((((_3039 * _2804) + _1510) * cbLight._m0[_2990].x) * _3058) * _3059) + _2916;
        _2982 = (((((_3039 * _2806) + _1512) * cbLight._m0[_2990].y) * _3058) * _3059) + _2917;
        _2984 = (((((_3039 * _2807) + _1513) * cbLight._m0[_2990].z) * _3058) * _3059) + _2918;
    }
    float _3094;
    float _3096;
    float _3098;
    if (_2708)
    {
        _3094 = _2980;
        _3096 = _2982;
        _3098 = _2984;
    }
    else
    {
        uint _3105 = _2614 + 3u;
        uint _3109 = _2614 + 11u;
        float _3123 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3105].w)) * _1350) * 0.949999988079071044921875);
        float _3124 = _3123 * _3123;
        float _3125 = cbLight._m0[_3105].x + _1427;
        float _3126 = cbLight._m0[_3105].y + _1428;
        float _3127 = cbLight._m0[_3105].z + _1429;
        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
        float _3132 = _3131 * _3125;
        float _3133 = _3131 * _3126;
        float _3134 = _3131 * _3127;
        float _3135 = dot(vec3(_1346, _1347, _1348), vec3(cbLight._m0[_3105].xyz));
        float _5314 = isnan(0.0) ? _3135 : (isnan(_3135) ? 0.0 : max(_3135, 0.0));
        float _3138 = isnan(1.0) ? _5314 : (isnan(_5314) ? 1.0 : min(_5314, 1.0));
        float _3139 = dot(vec3(_1346, _1347, _1348), vec3(_3132, _3133, _3134));
        float _5325 = isnan(0.0) ? _3139 : (isnan(_3139) ? 0.0 : max(_3139, 0.0));
        float _3142 = isnan(1.0) ? _5325 : (isnan(_5325) ? 1.0 : min(_5325, 1.0));
        float _3143 = dot(vec3(cbLight._m0[_3105].xyz), vec3(_3132, _3133, _3134));
        float _5336 = isnan(0.0) ? _3143 : (isnan(_3143) ? 0.0 : max(_3143, 0.0));
        float _3147 = _3124 * _3124;
        float _3151 = ((_3142 * _3142) * (_3147 + (-1.0))) + 1.0;
        float _3158 = exp2(log2(1.0 - (isnan(1.0) ? _5336 : (isnan(_5336) ? 1.0 : min(_5336, 1.0)))) * 5.0);
        float _3165 = 1.0 - _3124;
        float _3175 = (0.5 / (((_2782 * ((_3138 * _3165) + _3124)) + 9.9999999392252902907785028219223e-09) + (((_2782 * _3165) + _3124) * _3138))) * _3138;
        float _5347 = isnan(0.0) ? _3175 : (isnan(_3175) ? 0.0 : max(_3175, 0.0));
        float _3177 = (isnan(1.0) ? _5347 : (isnan(_5347) ? 1.0 : min(_5347, 1.0))) * (_3147 / ((_3151 * _3151) * 3.141590118408203125));
        float _3178 = isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0));
        _3094 = (((((_3158 * _2804) + _1510) * cbLight._m0[_3109].x) * _3177) * _3178) + _2980;
        _3096 = (((((_3158 * _2806) + _1512) * cbLight._m0[_3109].y) * _3177) * _3178) + _2982;
        _3098 = (((((_3158 * _2807) + _1513) * cbLight._m0[_3109].z) * _3177) * _3178) + _2984;
    }
    float _3312;
    float _3314;
    float _3316;
    float _3318;
    float _3320;
    float _3322;
    if (_2612.y == 0u)
    {
        float _3253 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3254 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3253;
        float _3255 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3253;
        float _3256 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3253;
        uvec4 _3268 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3269 = _3268.x;
        uint _3280 = uint((float(_3268.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1448) / _3269))) + floor(float(uint(cbSceneParam._m0[85u].x * _1447) / _3269)));
        float _3290 = (log2(_3256 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3291 = isnan(0.0) ? _3290 : (isnan(_3290) ? 0.0 : max(_3290, 0.0));
        uint _3294 = uint(isnan(14.0) ? _3291 : (isnan(_3291) ? 14.0 : min(_3291, 14.0)));
        uvec4 _3299 = texelFetch(g_lightClusterGridBuffer, int(((_3294 << 2u) + (_3280 << 6u)) >> 2u));
        uint _3300 = _3299.x;
        uint _3301 = _3268.z;
        float _3421;
        float _3423;
        float _3425;
        float _3427;
        float _3429;
        float _3431;
        if (((((1u << ((_3301 >> 4u) & 15u)) + 4294967295u) & _3300) == 0u) || ((_3301 & 240u) == 0u))
        {
            _3421 = 0.0;
            _3423 = 0.0;
            _3425 = 0.0;
            _3427 = 0.0;
            _3429 = 0.0;
            _3431 = 0.0;
        }
        else
        {
            float _3422;
            float _3424;
            float _3426;
            float _3428;
            float _3430;
            float _3432;
            float _3573 = 0.0;
            float _3574 = 0.0;
            float _3575 = 0.0;
            float _3576 = 0.0;
            float _3577 = 0.0;
            float _3578 = 0.0;
            uint _3579 = 0u;
            uint _3588;
            bool _3589;
            for (;;)
            {
                _3588 = texelFetch(g_lightClassification, int((((_3294 << 5u) + (_3280 << 9u)) + (_3579 << 2u)) >> 2u)).x;
                _3589 = _3588 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3589)
                {
                    frontier_phi_68_pred = _3575;
                    frontier_phi_68_pred_1 = _3578;
                    frontier_phi_68_pred_2 = _3577;
                    frontier_phi_68_pred_3 = _3576;
                    frontier_phi_68_pred_4 = _3574;
                    frontier_phi_68_pred_5 = _3573;
                }
                else
                {
                    float _3718;
                    float _3719;
                    float _3720;
                    float _3721;
                    float _3722;
                    float _3723;
                    uint _3724;
                    _3718 = _3573;
                    _3719 = _3574;
                    _3720 = _3575;
                    _3721 = _3576;
                    _3722 = _3577;
                    _3723 = _3578;
                    _3724 = _3588;
                    float _3645;
                    float _3646;
                    float _3647;
                    float _3648;
                    float _3649;
                    float _3650;
                    for (;;)
                    {
                        uint _3728 = uint(findLSB(_3724)) + (_3579 << 5u);
                        uint _3725 = (_3724 + 4294967295u) & _3724;
                        uint _3730 = _3728 * 48u;
                        vec4 _3744 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3730)).x, texelFetch(g_PointLightRenderingBuffer, int(_3730 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3730 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3730 + 3u)).x));
                        uint _3750 = (_3728 * 48u) + 4u;
                        vec4 _3763 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3750)).x, texelFetch(g_PointLightRenderingBuffer, int(_3750 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3750 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3750 + 3u)).x));
                        uint _3769 = (_3728 * 48u) + 8u;
                        vec3 _3780 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3769)).x, texelFetch(g_PointLightRenderingBuffer, int(_3769 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3769 + 2u)).x));
                        float _3784 = _3744.x - _3254;
                        float _3785 = _3744.y - _3255;
                        float _3786 = _3744.z - _3256;
                        float _3787 = dot(vec3(_3784, _3785, _3786), vec3(_3784, _3785, _3786));
                        float _3790 = inversesqrt(_3787);
                        float _3791 = _3790 * _3784;
                        float _3792 = _3790 * _3785;
                        float _3793 = _3790 * _3786;
                        float _3794 = dot(vec3(_1466, _1469, _1472), vec3(_3791, _3792, _3793));
                        float _3799 = 1.0 - (_3787 * _3744.w);
                        float _5373 = isnan(0.0) ? _3799 : (isnan(_3799) ? 0.0 : max(_3799, 0.0));
                        float _3800 = isnan(1.0) ? _5373 : (isnan(_5373) ? 1.0 : min(_5373, 1.0));
                        float _3801 = sqrt(_3787) * _3763.w;
                        float _3803 = 1.39999997615814208984375 / (_3801 + 1.39999997615814208984375);
                        float _3804 = _3803 * _3803;
                        float _3807 = ((1.0 - _3804) * _3794) + _3804;
                        float _3810 = _3801 * _3801;
                        float _3814 = ((isnan(0.0) ? _3807 : (isnan(_3807) ? 0.0 : max(_3807, 0.0))) * _3800) / ((_3810 * 0.699999988079071044921875) + 1.0);
                        float _3818 = (-0.0) - _3254;
                        float _3819 = (-0.0) - _3255;
                        float _3820 = (-0.0) - _3256;
                        float _3824 = inversesqrt(dot(vec3(_3818, _3819, _3820), vec3(_3818, _3819, _3820)));
                        float _3825 = _3824 * _3818;
                        float _3826 = _3824 * _3819;
                        float _3827 = _3824 * _3820;
                        float _3835 = exp2(log2(1.0 / ((_3810 * 3.5) + 5.0)) * 0.25);
                        float _3836 = 1.0 - _1541;
                        float _3843 = sqrt(1.0 - ((1.0 - (_3836 * _3836)) * (1.0 - (_3835 * _3835))));
                        float _3844 = _3843 * _3843;
                        float _3845 = _3844 * _3844;
                        float _3846 = _3825 + _3791;
                        float _3847 = _3826 + _3792;
                        float _3848 = _3827 + _3793;
                        float _3852 = inversesqrt(dot(vec3(_3846, _3847, _3848), vec3(_3846, _3847, _3848)));
                        float _3856 = dot(vec3(_1466, _1469, _1472), vec3(_3825, _3826, _3827));
                        float _5389 = isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0));
                        float _3859 = isnan(1.0) ? _5389 : (isnan(_5389) ? 1.0 : min(_5389, 1.0));
                        float _3860 = dot(vec3(_1466, _1469, _1472), vec3(_3852 * _3846, _3852 * _3847, _3852 * _3848));
                        float _5400 = isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0));
                        float _3863 = isnan(1.0) ? _5400 : (isnan(_5400) ? 1.0 : min(_5400, 1.0));
                        float _3867 = ((_3863 * _3863) * (_3845 + (-1.0))) + 1.0;
                        float _3868 = _3803 * _3844;
                        float _3869 = _3868 * _3868;
                        float _3872 = ((1.0 - _3869) * _3794) + _3869;
                        float _5411 = isnan(0.0) ? _3872 : (isnan(_3872) ? 0.0 : max(_3872, 0.0));
                        float _3873 = isnan(1.0) ? _5411 : (isnan(_5411) ? 1.0 : min(_5411, 1.0));
                        float _3874 = 1.0 - _3844;
                        float _3884 = (0.5 / (((_3873 * ((_3859 * _3874) + _3844)) + 9.9999999392252902907785028219223e-09) + (((_3873 * _3874) + _3844) * _3859))) * _3873;
                        float _5422 = isnan(0.0) ? _3884 : (isnan(_3884) ? 0.0 : max(_3884, 0.0));
                        float _3895 = (((_3845 * 3.1415927410125732421875) * (isnan(1.0) ? _5422 : (isnan(_5422) ? 1.0 : min(_5422, 1.0)))) / ((_3867 * _3867) * ((_3810 * 2.1991131305694580078125) + 3.141590118408203125))) * _3800;
                        _3648 = (_3814 * _3763.x) + _3721;
                        _3649 = (_3814 * _3763.y) + _3722;
                        _3650 = (_3814 * _3763.z) + _3723;
                        _3645 = (_3895 * _3780.x) + _3718;
                        _3646 = (_3895 * _3780.y) + _3719;
                        _3647 = (_3895 * _3780.z) + _3720;
                        if (_3725 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3718 = _3645;
                            _3719 = _3646;
                            _3720 = _3647;
                            _3721 = _3648;
                            _3722 = _3649;
                            _3723 = _3650;
                            _3724 = _3725;
                        }
                    }
                    frontier_phi_68_pred = _3647;
                    frontier_phi_68_pred_1 = _3650;
                    frontier_phi_68_pred_2 = _3649;
                    frontier_phi_68_pred_3 = _3648;
                    frontier_phi_68_pred_4 = _3646;
                    frontier_phi_68_pred_5 = _3645;
                }
                _3426 = frontier_phi_68_pred;
                _3432 = frontier_phi_68_pred_1;
                _3430 = frontier_phi_68_pred_2;
                _3428 = frontier_phi_68_pred_3;
                _3424 = frontier_phi_68_pred_4;
                _3422 = frontier_phi_68_pred_5;
                uint _3580 = _3579 + 1u;
                if (_3580 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3573 = _3422;
                    _3574 = _3424;
                    _3575 = _3426;
                    _3576 = _3428;
                    _3577 = _3430;
                    _3578 = _3432;
                    _3579 = _3580;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3421 = _3422;
            _3423 = _3424;
            _3425 = _3426;
            _3427 = _3428;
            _3429 = _3430;
            _3431 = _3432;
        }
        uvec4 _3435 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3436 = _3435.z;
        uint _3438 = (_3436 >> 8u) & 15u;
        float _3541;
        float _3543;
        float _3545;
        float _3547;
        float _3549;
        float _3551;
        if (((4294967295u << _3438) & _3300) == 0u)
        {
            _3541 = _3421;
            _3543 = _3423;
            _3545 = _3425;
            _3547 = _3427;
            _3549 = _3429;
            _3551 = _3431;
        }
        else
        {
            float _3566 = inversesqrt(dot(vec3(_3254, _3255, _3256), vec3(_3254, _3255, _3256)));
            float _3567 = _3566 * _3254;
            float _3568 = _3566 * _3255;
            float _3569 = _3566 * _3256;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3438 < ((_3436 >> 12u) & 15u))
            {
                float _3542;
                float _3544;
                float _3546;
                float _3548;
                float _3550;
                float _3552;
                float _3701 = _3421;
                float _3702 = _3423;
                float _3703 = _3425;
                float _3704 = _3427;
                float _3705 = _3429;
                float _3706 = _3431;
                uint _3707 = _3438;
                uint _3716;
                bool _3717;
                for (;;)
                {
                    _3716 = texelFetch(g_lightClassification, int((((_3294 << 5u) + (_3280 << 9u)) + (_3707 << 2u)) >> 2u)).x;
                    _3717 = _3716 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3717)
                    {
                        frontier_phi_79_pred = _3706;
                        frontier_phi_79_pred_1 = _3705;
                        frontier_phi_79_pred_2 = _3704;
                        frontier_phi_79_pred_3 = _3703;
                        frontier_phi_79_pred_4 = _3702;
                        frontier_phi_79_pred_5 = _3701;
                    }
                    else
                    {
                        float _3909;
                        float _3910;
                        float _3911;
                        float _3912;
                        float _3913;
                        float _3914;
                        float _4202;
                        float _4203;
                        float _4204;
                        float _4205;
                        float _4206;
                        float _4207;
                        float _3922 = _3701;
                        float _3923 = _3702;
                        float _3924 = _3703;
                        float _3925 = _3704;
                        float _3926 = _3705;
                        float _3927 = _3706;
                        uint _3928 = _3716;
                        uint _3929;
                        vec4 _3954;
                        float _3955;
                        vec4 _3970;
                        vec3 _3982;
                        vec4 _3997;
                        vec4 _4012;
                        float _4058;
                        bool _4059;
                        for (;;)
                        {
                            uint _3939 = ((_3707 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3928));
                            _3929 = (_3928 + 4294967295u) & _3928;
                            uint _3941 = _3939 * 40u;
                            _3954 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3941)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3941 + 3u)).x));
                            _3955 = _3954.w;
                            uint _3957 = (_3939 * 40u) + 4u;
                            _3970 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3957)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3957 + 3u)).x));
                            uint _3972 = (_3939 * 40u) + 8u;
                            _3982 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3972)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3972 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3972 + 2u)).x));
                            uint _3984 = (_3939 * 40u) + 16u;
                            _3997 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3984)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3984 + 3u)).x));
                            uint _3999 = (_3939 * 40u) + 20u;
                            _4012 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3999)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3999 + 3u)).x));
                            uint _4014 = (_3939 * 40u) + 24u;
                            vec4 _4027 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4014)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4014 + 3u)).x));
                            uint _4033 = (_3939 * 40u) + 28u;
                            vec4 _4046 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4033)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4033 + 3u)).x));
                            _4058 = fma(_3256, _4046.z, fma(_3255, _4046.y, _4046.x * _3254)) + _4046.w;
                            _4059 = !((fma(_3256, _4027.z, fma(_3255, _4027.y, _4027.x * _3254)) + _4027.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_4059)
                            {
                                float _4086 = _3954.x - _3254;
                                float _4087 = _3954.y - _3255;
                                float _4088 = _3954.z - _3256;
                                float _4089 = dot(vec3(_4086, _4087, _4088), vec3(_4086, _4087, _4088));
                                float _4092 = inversesqrt(_4089);
                                float _4093 = _4092 * _4086;
                                float _4094 = _4092 * _4087;
                                float _4095 = _4092 * _4088;
                                float _4099 = 1.0 - (_4089 / (_3955 * _3955));
                                float _5433 = isnan(0.0) ? _4099 : (isnan(_4099) ? 0.0 : max(_4099, 0.0));
                                float _4100 = isnan(1.0) ? _5433 : (isnan(_5433) ? 1.0 : min(_5433, 1.0));
                                float _4104 = sqrt(_4089) * _3970.w;
                                float _4106 = 1.39999997615814208984375 / (_4104 + 1.39999997615814208984375);
                                float _4107 = _4106 * _4106;
                                float _4110 = ((1.0 - _4107) * dot(vec3(_4093, _4094, _4095), vec3(_1466, _1469, _1472))) + _4107;
                                float _4113 = _4104 * _4104;
                                float _4117 = (fma(_3256, _3997.z, fma(_3255, _3997.y, _3997.x * _3254)) + _3997.w) / _4058;
                                float _4118 = (fma(_3256, _4012.z, fma(_3255, _4012.y, _4012.x * _3254)) + _4012.w) / _4058;
                                float _4122 = 1.0 - dot(vec2(_4117, _4118), vec2(_4117, _4118));
                                float _5449 = isnan(0.0) ? _4122 : (isnan(_4122) ? 0.0 : max(_4122, 0.0));
                                float _4123 = isnan(1.0) ? _5449 : (isnan(_5449) ? 1.0 : min(_5449, 1.0));
                                float _4124 = _4123 * (((isnan(0.0) ? _4110 : (isnan(_4110) ? 0.0 : max(_4110, 0.0))) * _4100) / ((_4113 * 0.699999988079071044921875) + 1.0));
                                float _4136 = exp2(log2(1.0 / ((_4113 * 3.5) + 5.0)) * 0.25);
                                float _4137 = 1.0 - _1541;
                                float _4144 = sqrt(1.0 - ((1.0 - (_4137 * _4137)) * (1.0 - (_4136 * _4136))));
                                float _4145 = _4144 * _4144;
                                float _4146 = _4145 * _4145;
                                float _4147 = _4093 - _3567;
                                float _4148 = _4094 - _3568;
                                float _4149 = _4095 - _3569;
                                float _4153 = inversesqrt(dot(vec3(_4147, _4148, _4149), vec3(_4147, _4148, _4149)));
                                float _4157 = dot(vec3(_1466, _1469, _1472), vec3((-0.0) - _3567, (-0.0) - _3568, (-0.0) - _3569));
                                float _5460 = isnan(0.0) ? _4157 : (isnan(_4157) ? 0.0 : max(_4157, 0.0));
                                float _4160 = isnan(1.0) ? _5460 : (isnan(_5460) ? 1.0 : min(_5460, 1.0));
                                float _4161 = dot(vec3(_1466, _1469, _1472), vec3(_4153 * _4147, _4153 * _4148, _4153 * _4149));
                                float _5471 = isnan(0.0) ? _4161 : (isnan(_4161) ? 0.0 : max(_4161, 0.0));
                                float _4164 = isnan(1.0) ? _5471 : (isnan(_5471) ? 1.0 : min(_5471, 1.0));
                                float _4168 = ((_4164 * _4164) * (_4146 + (-1.0))) + 1.0;
                                float _4169 = _4106 * _4145;
                                float _4170 = _4169 * _4169;
                                float _4176 = ((1.0 - _4170) * dot(vec3(_1466, _1469, _1472), vec3(_4093, _4094, _4095))) + _4170;
                                float _5482 = isnan(0.0) ? _4176 : (isnan(_4176) ? 0.0 : max(_4176, 0.0));
                                float _4177 = isnan(1.0) ? _5482 : (isnan(_5482) ? 1.0 : min(_5482, 1.0));
                                float _4178 = 1.0 - _4145;
                                float _4188 = (0.5 / (((_4177 * ((_4160 * _4178) + _4145)) + 9.9999999392252902907785028219223e-09) + (((_4177 * _4178) + _4145) * _4160))) * _4177;
                                float _5493 = isnan(0.0) ? _4188 : (isnan(_4188) ? 0.0 : max(_4188, 0.0));
                                float _4198 = (_4123 * _4100) * (((_4146 * 3.1415927410125732421875) * (isnan(1.0) ? _5493 : (isnan(_5493) ? 1.0 : min(_5493, 1.0)))) / ((_4168 * _4168) * ((_4113 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _4124 * _3970.z;
                                frontier_phi_85_pred_1 = _4124 * _3970.y;
                                frontier_phi_85_pred_2 = _4124 * _3970.x;
                                frontier_phi_85_pred_3 = _4198 * _3982.z;
                                frontier_phi_85_pred_4 = _4198 * _3982.y;
                                frontier_phi_85_pred_5 = _4198 * _3982.x;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _4207 = frontier_phi_85_pred;
                            _4206 = frontier_phi_85_pred_1;
                            _4205 = frontier_phi_85_pred_2;
                            _4204 = frontier_phi_85_pred_3;
                            _4203 = frontier_phi_85_pred_4;
                            _4202 = frontier_phi_85_pred_5;
                            _3912 = _4205 + _3925;
                            _3913 = _4206 + _3926;
                            _3914 = _4207 + _3927;
                            _3909 = _4202 + _3922;
                            _3910 = _4203 + _3923;
                            _3911 = _4204 + _3924;
                            if (_3929 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3922 = _3909;
                                _3923 = _3910;
                                _3924 = _3911;
                                _3925 = _3912;
                                _3926 = _3913;
                                _3927 = _3914;
                                _3928 = _3929;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3914;
                        frontier_phi_79_pred_1 = _3913;
                        frontier_phi_79_pred_2 = _3912;
                        frontier_phi_79_pred_3 = _3911;
                        frontier_phi_79_pred_4 = _3910;
                        frontier_phi_79_pred_5 = _3909;
                    }
                    _3552 = frontier_phi_79_pred;
                    _3550 = frontier_phi_79_pred_1;
                    _3548 = frontier_phi_79_pred_2;
                    _3546 = frontier_phi_79_pred_3;
                    _3544 = frontier_phi_79_pred_4;
                    _3542 = frontier_phi_79_pred_5;
                    uint _3708 = _3707 + 1u;
                    if (_3708 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3701 = _3542;
                        _3702 = _3544;
                        _3703 = _3546;
                        _3704 = _3548;
                        _3705 = _3550;
                        _3706 = _3552;
                        _3707 = _3708;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3548;
                frontier_phi_60_61_ladder_1 = _3552;
                frontier_phi_60_61_ladder_2 = _3550;
                frontier_phi_60_61_ladder_3 = _3546;
                frontier_phi_60_61_ladder_4 = _3544;
                frontier_phi_60_61_ladder_5 = _3542;
            }
            else
            {
                frontier_phi_60_61_ladder = _3427;
                frontier_phi_60_61_ladder_1 = _3431;
                frontier_phi_60_61_ladder_2 = _3429;
                frontier_phi_60_61_ladder_3 = _3425;
                frontier_phi_60_61_ladder_4 = _3423;
                frontier_phi_60_61_ladder_5 = _3421;
            }
            _3541 = frontier_phi_60_61_ladder_5;
            _3543 = frontier_phi_60_61_ladder_4;
            _3545 = frontier_phi_60_61_ladder_3;
            _3547 = frontier_phi_60_61_ladder;
            _3549 = frontier_phi_60_61_ladder_2;
            _3551 = frontier_phi_60_61_ladder_1;
        }
        float _3556 = isnan(1.0) ? _1525 : (isnan(_1525) ? 1.0 : min(_1525, 1.0));
        _3312 = (_3556 * _3547) + _2746;
        _3314 = (_3556 * _3549) + _2748;
        _3316 = (_3556 * _3551) + _2750;
        _3318 = ((_3541 * _1510) * _3556) + _3094;
        _3320 = ((_3543 * _1512) * _3556) + _3096;
        _3322 = ((_3545 * _1513) * _3556) + _3098;
    }
    else
    {
        _3312 = _2746;
        _3314 = _2748;
        _3316 = _2750;
        _3318 = _3094;
        _3320 = _3096;
        _3322 = _3098;
    }
    uint _3328 = _1486 + uint(cbMatDynParam._m0[0u].w);
    float _5509 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
    float _5520 = isnan(0.0) ? _1501 : (isnan(_1501) ? 0.0 : max(_1501, 0.0));
    float _5531 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
    float _5542 = isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0));
    float _3354 = (((isnan(1.0) ? _5509 : (isnan(_5509) ? 1.0 : min(_5509, 1.0))) * (_3312 + ((isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0))) * _1525))) + ((_3318 + ((isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0))) * _2365)) * cbPerFrame._m0[3u].x)) + (((((_876 * _871.x) + cbMtdParam._m0[26u].x) * ((_348 * TEXCOORD_13.x) + TEXCOORD_10.x)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3328].x);
    float _3356 = ((((((_876 * _871.y) + cbMtdParam._m0[26u].y) * ((_348 * TEXCOORD_13.y) + TEXCOORD_10.y)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3328].y) + ((_3320 + ((isnan(0.0) ? _2581 : (isnan(_2581) ? 0.0 : max(_2581, 0.0))) * _2365)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5520 : (isnan(_5520) ? 1.0 : min(_5520, 1.0))) * (_3314 + ((isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0))) * _1525)));
    float _3358 = ((((((_876 * _871.z) + cbMtdParam._m0[26u].z) * ((_348 * TEXCOORD_13.z) + TEXCOORD_10.z)) * cbMtdParam._m0[20u].w) * cbInstanceData._m0[_3328].z) + ((_3322 + ((isnan(0.0) ? _2584 : (isnan(_2584) ? 0.0 : max(_2584, 0.0))) * _2365)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5531 : (isnan(_5531) ? 1.0 : min(_5531, 1.0))) * (_3316 + ((isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0))) * _1525)));
    float _3359 = isnan(0.0) ? _3354 : (isnan(_3354) ? 0.0 : max(_3354, 0.0));
    float _3360 = isnan(0.0) ? _3356 : (isnan(_3356) ? 0.0 : max(_3356, 0.0));
    float _3361 = isnan(0.0) ? _3358 : (isnan(_3358) ? 0.0 : max(_3358, 0.0));
    float _3366 = cbInstanceData._m0[_1485 + 6u].w * (isnan(1.0) ? _5542 : (isnan(_5542) ? 1.0 : min(_5542, 1.0)));
    float _3371 = _1447 / cbSceneParam._m0[86u].x;
    float _3372 = _1448 / cbSceneParam._m0[86u].y;
    vec4 _3386 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3371, _3372, (log2((isnan(cbSceneParam._m0[77u].w) ? _1370 : (isnan(_1370) ? cbSceneParam._m0[77u].w : min(_1370, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3388 = _3386.x;
    float _3389 = _3386.y;
    float _3390 = _3386.z;
    float _3391 = _3386.w;
    float _3483;
    float _3485;
    float _3487;
    float _3489;
    if (_1370 > cbSceneParam._m0[78u].w)
    {
        float _3446 = isnan(_1370) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1370 : min(cbSceneParam._m0[80u].w, _1370));
        float _3447 = _3446 / _1370;
        float _3458 = _3447 * _1420;
        float _3459 = _1421 * _3447;
        float _3460 = (-0.0) - _3459;
        float _3461 = _3447 * _1422;
        float _3463 = (cbSceneParam._m0[77u].w * _3460) / _3446;
        float _3464 = _3463 + cbSceneParam._m0[79u].w;
        float _3465 = cbSceneParam._m0[79u].w - _3459;
        float _3471 = sqrt(((_3458 * _3458) + (_3459 * _3459)) + (_3461 * _3461));
        float _3474 = (1.0 - (cbSceneParam._m0[77u].w / _3446)) * _3471;
        float _3479 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3481 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3658;
        if (abs((_3460 - _3463) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3658 = ((((_3464 > 0.0) ? exp2(_3479 * _3464) : (2.0 - exp2(_3481 * _3464))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3474;
        }
        else
        {
            float _3602 = 1.0 / cbSceneParam._m0[80u].x;
            float _3603 = isnan(_3465) ? _3464 : (isnan(_3464) ? _3465 : max(_3464, _3465));
            float _3604 = isnan(_3465) ? _3464 : (isnan(_3464) ? _3465 : min(_3464, _3465));
            float _3613 = isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : min(_3603, 0.0));
            float _3614 = isnan(0.0) ? _3604 : (isnan(_3604) ? 0.0 : min(_3604, 0.0));
            _3658 = ((abs(_3471 / _3460) * cbSceneParam._m0[80u].y) * ((((_3613 - _3614) * 2.0) - ((exp2(_3479 * (isnan(0.0) ? _3603 : (isnan(_3603) ? 0.0 : max(_3603, 0.0)))) - exp2(_3479 * (isnan(0.0) ? _3604 : (isnan(_3604) ? 0.0 : max(_3604, 0.0))))) * _3602)) - ((exp2(_3481 * _3613) - exp2(_3481 * _3614)) * _3602))) + (_3474 * cbSceneParam._m0[80u].z);
        }
        vec4 _3660 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3371, _3372, 1.0), 0.0);
        float _3669 = exp2((_3658 * (-1.44269502162933349609375)) * (1.0 - _3660.w));
        float _3670 = log2(_3669);
        float _3686 = log2(_3391);
        _3483 = (exp2(_3686 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3670 * cbSceneParam._m0[78u].x)) * _3660.x) / cbSceneParam._m0[78u].x)) + _3388;
        _3485 = (exp2(_3686 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3670 * cbSceneParam._m0[78u].y)) * _3660.y) / cbSceneParam._m0[78u].y)) + _3389;
        _3487 = (exp2(_3686 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3670 * cbSceneParam._m0[78u].z)) * _3660.z) / cbSceneParam._m0[78u].z)) + _3390;
        _3489 = _3669 * _3391;
    }
    else
    {
        _3483 = _3388;
        _3485 = _3389;
        _3487 = _3390;
        _3489 = _3391;
    }
    bool _3696;
    vec4 _3499;
    vec4 _3521;
    float _3523;
    float _3527;
    float _3528;
    float _3529;
    float _3530;
    bool _3540;
    for (;;)
    {
        _3499 = cbMatDynParam._m0[0u];
        float _3501 = roundEven(_3499.y);
        bool _3502 = _3501 == 3.0;
        float _3503 = log2(_3489);
        float _3510 = exp2(_3503 * cbSceneParam._m0[78u].x) * _3359;
        float _3511 = exp2(_3503 * cbSceneParam._m0[78u].y) * _3360;
        float _3512 = exp2(_3503 * cbSceneParam._m0[78u].z) * _3361;
        float _3519 = _1436 + (-0.5);
        _3521 = cbMtdParam._m0[1u];
        _3523 = _3521.y * _3519;
        float _3526 = (_3501 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3527 = _3526 * (_3502 ? _3510 : (_3510 + (cbSceneParam._m0[72u].w * _3483)));
        _3528 = _3526 * (_3502 ? _3511 : (_3511 + (cbSceneParam._m0[72u].w * _3485)));
        _3529 = _3526 * (_3502 ? _3512 : (_3512 + (cbSceneParam._m0[72u].w * _3487)));
        _3530 = _3519 * 0.999000012874603271484375;
        _3540 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3540)
        {
            if ((cbInstanceData._m0[_1485 + 7u].x + _3530) < 0.5)
            {
                _3696 = true;
                break;
            }
        }
        uint _3637 = _1486 + uint(_3499.w);
        if ((cbInstanceData._m0[_3637].w < 1.0) && ((cbInstanceData._m0[_3637].w + _3530) < 0.5))
        {
            _3696 = true;
            break;
        }
        if ((_3523 + _637) < _3521.x)
        {
            _3696 = true;
            break;
        }
        _3696 = false;
        break;
    }
    float _3900;
    if (_3696)
    {
        discard_state = true;
        _3900 = 0.0;
    }
    else
    {
        _3900 = _3366;
    }
    SV_Target.x = _3527;
    SV_Target.y = _3528;
    SV_Target.z = _3529;
    SV_Target.w = _3900;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3366;
    discard_exit();
}


