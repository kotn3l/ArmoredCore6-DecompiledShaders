#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec4 TEXCOORD_10;
layout(location = 8) in vec4 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1799;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _232 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _233 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _234 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _240 = inversesqrt(dot(vec3(_232, _233, _234), vec3(_232, _233, _234)));
    float _241 = _240 * _232;
    float _242 = _240 * _233;
    float _243 = _240 * _234;
    float _253 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _254 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _255 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _259 = inversesqrt(dot(vec3(_253, _254, _255), vec3(_253, _254, _255)));
    float _260 = _259 * _253;
    float _261 = _259 * _254;
    float _262 = _259 * _255;
    float _266 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _267 = _266 * NORMAL.x;
    float _268 = _266 * NORMAL.y;
    float _269 = _266 * NORMAL.z;
    float _273 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = _273 * TANGENT.x;
    float _275 = _273 * TANGENT.y;
    float _276 = _273 * TANGENT.z;
    float _280 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _281 = _280 * TANGENT_2.x;
    float _282 = _280 * TANGENT_2.y;
    float _283 = _280 * TANGENT_2.z;
    float _288;
    float _289;
    float _290;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _288 = (-0.0) - _267;
        _289 = (-0.0) - _268;
        _290 = (-0.0) - _269;
    }
    else
    {
        _288 = _267;
        _289 = _268;
        _290 = _269;
    }
    vec4 _310 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _322 = 1.0 - ((1.0 - _310.z) * 1.39999997615814208984375);
    float _4154 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _323 = isnan(1.0) ? _4154 : (isnan(_4154) ? 1.0 : min(_4154, 1.0));
    float _325 = 1.0 - ((1.0 - _310.x) * 1.39999997615814208984375);
    float _4165 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _326 = isnan(1.0) ? _4165 : (isnan(_4165) ? 1.0 : min(_4165, 1.0));
    float _328 = 1.0 - ((1.0 - _310.y) * 1.39999997615814208984375);
    float _4176 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _329 = isnan(1.0) ? _4176 : (isnan(_4176) ? 1.0 : min(_4176, 1.0));
    float _331 = (_326 + _323) + _329;
    float _338 = (_331 * (1.0 - cbMtdParam._m0[19u].x)) + cbMtdParam._m0[19u].x;
    float _339 = (_331 * (1.0 - cbMtdParam._m0[19u].y)) + cbMtdParam._m0[19u].y;
    float _340 = (_331 * (1.0 - cbMtdParam._m0[19u].z)) + cbMtdParam._m0[19u].z;
    vec4 _365 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _374 = 1.0 - ((1.0 - _365.x) * 1.39999997615814208984375);
    float _4187 = isnan(0.0) ? _374 : (isnan(_374) ? 0.0 : max(_374, 0.0));
    float _375 = isnan(1.0) ? _4187 : (isnan(_4187) ? 1.0 : min(_4187, 1.0));
    float _385 = (_375 * ((cbMtdParam._m0[9u].x - _338) + ((1.0 - cbMtdParam._m0[9u].x) * _331))) + _338;
    float _386 = (_375 * ((cbMtdParam._m0[9u].y - _339) + ((1.0 - cbMtdParam._m0[9u].y) * _331))) + _339;
    float _387 = (_375 * ((cbMtdParam._m0[9u].z - _340) + ((1.0 - cbMtdParam._m0[9u].z) * _331))) + _340;
    float _400 = 1.0 - ((1.0 - _365.y) * 1.39999997615814208984375);
    float _4198 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0));
    float _411 = (((cbMtdParam._m0[17u].x - _385) + ((1.0 - cbMtdParam._m0[17u].x) * _331)) * _401) + _385;
    float _412 = (((cbMtdParam._m0[17u].y - _386) + ((1.0 - cbMtdParam._m0[17u].y) * _331)) * _401) + _386;
    float _413 = (((cbMtdParam._m0[17u].z - _387) + ((1.0 - cbMtdParam._m0[17u].z) * _331)) * _401) + _387;
    float _427 = 1.0 - ((1.0 - _365.z) * 1.39999997615814208984375);
    float _4209 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _428 = isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0));
    float _459 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w)).x * cbMtdParam._m0[25u].z;
    float _473 = ((cbMtdParam._m0[23u].y * (-1.39999997615814208984375)) * ((TEXCOORD_13.w - _459) + (cbMtdParam._m0[24u].x * TEXCOORD_13.w))) + 1.0;
    float _4220 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _475 = 1.0 - (isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0)));
    float _483 = ((cbMtdParam._m0[23u].x * (-1.39999997615814208984375)) * ((TEXCOORD_10.w - _459) + (cbMtdParam._m0[24u].y * TEXCOORD_10.w))) + 1.0;
    float _4231 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _485 = 1.0 - (isnan(1.0) ? _4231 : (isnan(_4231) ? 1.0 : min(_4231, 1.0)));
    vec4 _503 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _505 = _503.x;
    float _506 = _503.y;
    float _507 = _503.z;
    float _508 = cbMtdParam._m0[10u].x * _485;
    float _510 = cbMtdParam._m0[10u].y * _485;
    float _512 = cbMtdParam._m0[10u].z * _485;
    float _529 = ((_505 * (cbMtdParam._m0[16u].x - _508)) * _475) + (_508 * _505);
    float _530 = ((_506 * (cbMtdParam._m0[16u].y - _510)) * _475) + (_510 * _506);
    float _531 = ((_507 * (cbMtdParam._m0[16u].z - _512)) * _475) + (_512 * _507);
    float _554 = cbMtdParam._m0[23u].w * (-1.39999997615814208984375);
    float _558 = (_554 * ((TEXCOORD_7.x - _459) + (cbMtdParam._m0[22u].w * TEXCOORD_7.x))) + 1.0;
    float _559 = (_554 * ((TEXCOORD_7.y - _459) + (cbMtdParam._m0[22u].w * TEXCOORD_7.y))) + 1.0;
    float _560 = (_554 * ((TEXCOORD_7.z - _459) + (cbMtdParam._m0[22u].w * TEXCOORD_7.z))) + 1.0;
    float _4242 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _4253 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _4264 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _569 = (1.0 - cbMtdParam._m0[25u].x) + _326;
    float _572 = _569 * (1.0 - (isnan(1.0) ? _4242 : (isnan(_4242) ? 1.0 : min(_4242, 1.0))));
    float _573 = _569 * (1.0 - (isnan(1.0) ? _4253 : (isnan(_4253) ? 1.0 : min(_4253, 1.0))));
    float _574 = ((_326 + 1.0) - cbMtdParam._m0[25u].x) * (1.0 - (isnan(1.0) ? _4264 : (isnan(_4264) ? 1.0 : min(_4264, 1.0))));
    float _584 = _485 + _475;
    float _585 = _584 + _572;
    float _586 = _584 + _573;
    float _587 = _584 + _574;
    float _588 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _589 = isnan(0.0) ? _586 : (isnan(_586) ? 0.0 : max(_586, 0.0));
    float _590 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _591 = isnan(1.0) ? _588 : (isnan(_588) ? 1.0 : min(_588, 1.0));
    float _592 = isnan(1.0) ? _589 : (isnan(_589) ? 1.0 : min(_589, 1.0));
    float _593 = isnan(1.0) ? _590 : (isnan(_590) ? 1.0 : min(_590, 1.0));
    vec4 _611 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _616 = _611.w;
    float _617 = _611.x * cbMtdParam._m0[12u].x;
    float _618 = _611.y * cbMtdParam._m0[12u].y;
    float _619 = _611.z * cbMtdParam._m0[12u].z;
    vec4 _637 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    float _651 = (((_637.x * cbMtdParam._m0[13u].x) - _617) * _326) + _617;
    float _652 = (((_637.y * cbMtdParam._m0[13u].y) - _618) * _326) + _618;
    float _653 = (((_637.z * cbMtdParam._m0[13u].z) - _619) * _326) + _619;
    vec4 _672 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _686 = (((_672.x * cbMtdParam._m0[14u].x) - _651) * _329) + _651;
    float _687 = (((_672.y * cbMtdParam._m0[14u].y) - _652) * _329) + _652;
    float _688 = (((_672.z * cbMtdParam._m0[14u].z) - _653) * _329) + _653;
    vec4 _705 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _719 = (((_705.x * cbMtdParam._m0[15u].x) - _686) * _323) + _686;
    float _720 = (((_705.y * cbMtdParam._m0[15u].y) - _687) * _323) + _687;
    float _721 = (((_705.z * cbMtdParam._m0[15u].z) - _688) * _323) + _688;
    float _741 = ((_719 - (_719 * _591)) + (((_591 * 4.55000019073486328125) * ((_572 * ((cbMtdParam._m0[11u].x * _505) - _529)) + _529)) * _719)) * ((((cbMtdParam._m0[18u].x - _411) + ((1.0 - cbMtdParam._m0[18u].x) * _331)) * _428) + _411);
    float _742 = ((_720 - (_720 * _592)) + (((_592 * 4.55000019073486328125) * ((_573 * ((cbMtdParam._m0[11u].y * _506) - _530)) + _530)) * _720)) * ((((cbMtdParam._m0[18u].y - _412) + ((1.0 - cbMtdParam._m0[18u].y) * _331)) * _428) + _412);
    float _743 = ((_721 - (_593 * _721)) + (((_593 * 4.55000019073486328125) * ((_574 * ((cbMtdParam._m0[11u].z * _507) - _531)) + _531)) * _721)) * ((((cbMtdParam._m0[18u].z - _413) + ((1.0 - cbMtdParam._m0[18u].z) * _331)) * _428) + _413);
    float _754 = ((cbMtdParam._m0[22u].z - cbMtdParam._m0[25u].w) * _591) + cbMtdParam._m0[25u].w;
    float _757 = ((cbMtdParam._m0[20u].x - _754) * _326) + _754;
    float _760 = ((cbMtdParam._m0[20u].y - _757) * _329) + _757;
    float _763 = ((cbMtdParam._m0[20u].z - _760) * _323) + _760;
    vec4 _775 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _779 = _775.z;
    float _783 = (_775.x * 2.0) + (-1.0);
    float _785 = (_775.y * 2.0) + (-1.0);
    float _786 = dot(vec2(_783, _785), vec2(_783, _785));
    float _4305 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
    float _791 = sqrt(1.0 - (isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0))));
    float _794 = fma(_791, _288, fma(_785, _281, _783 * _260));
    float _797 = fma(_791, _289, fma(_785, _282, _783 * _261));
    float _800 = fma(_791, _290, fma(_785, _283, _783 * _262));
    float _804 = inversesqrt(dot(vec3(_794, _797, _800), vec3(_794, _797, _800)));
    float _805 = _804 * _794;
    float _806 = _804 * _797;
    float _807 = _804 * _800;
    vec4 _820 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _826 = (_820.x * 2.0) + (-1.0);
    float _827 = (_820.y * 2.0) + (-1.0);
    float _828 = dot(vec2(_826, _827), vec2(_826, _827));
    float _4316 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _833 = sqrt(1.0 - (isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0))));
    float _836 = fma(_833, _288, fma(_827, _281, _826 * _260));
    float _839 = fma(_833, _289, fma(_827, _282, _826 * _261));
    float _842 = fma(_833, _290, fma(_827, _283, _826 * _262));
    float _846 = inversesqrt(dot(vec3(_836, _839, _842), vec3(_836, _839, _842)));
    float _847 = _846 * _836;
    float _848 = _846 * _839;
    float _849 = _846 * _842;
    float _852 = fma(_849, _243, fma(_848, _242, _847 * _241));
    float _855 = fma(_849, _276, fma(_848, _275, _847 * _274));
    float _858 = fma(_849, _290, fma(_848, _289, _847 * _288));
    float _862 = inversesqrt(dot(vec3(_852, _855, _858), vec3(_852, _855, _858)));
    vec4 _876 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    float _882 = (_876.x * 2.0) + (-1.0);
    float _883 = (_876.y * 2.0) + (-1.0);
    float _884 = dot(vec2(_882, _883), vec2(_882, _883));
    float _4327 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    float _889 = sqrt(1.0 - (isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))));
    float _892 = fma(_889, _288, fma(_883, _281, _882 * _260));
    float _895 = fma(_889, _289, fma(_883, _282, _882 * _261));
    float _898 = fma(_889, _290, fma(_883, _283, _882 * _262));
    float _902 = inversesqrt(dot(vec3(_892, _895, _898), vec3(_892, _895, _898)));
    float _903 = _902 * _892;
    float _904 = _902 * _895;
    float _905 = _902 * _898;
    float _908 = fma(_905, _243, fma(_904, _242, _903 * _241));
    float _911 = fma(_905, _276, fma(_904, _275, _903 * _274));
    float _914 = fma(_905, _290, fma(_904, _289, _903 * _288));
    float _918 = inversesqrt(dot(vec3(_908, _911, _914), vec3(_908, _911, _914)));
    vec4 _931 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _937 = (_931.x * 2.0) + (-1.0);
    float _938 = (_931.y * 2.0) + (-1.0);
    float _939 = dot(vec2(_937, _938), vec2(_937, _938));
    float _4338 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
    float _944 = sqrt(1.0 - (isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))));
    float _947 = fma(_944, _288, fma(_938, _281, _937 * _260));
    float _950 = fma(_944, _289, fma(_938, _282, _937 * _261));
    float _953 = fma(_944, _290, fma(_938, _283, _937 * _262));
    float _957 = inversesqrt(dot(vec3(_947, _950, _953), vec3(_947, _950, _953)));
    float _958 = _957 * _947;
    float _959 = _957 * _950;
    float _960 = _957 * _953;
    float _963 = fma(_960, _243, fma(_959, _242, _958 * _241));
    float _966 = fma(_960, _276, fma(_959, _275, _958 * _274));
    float _969 = fma(_960, _290, fma(_959, _289, _958 * _288));
    float _973 = inversesqrt(dot(vec3(_963, _966, _969), vec3(_963, _966, _969)));
    float _979 = fma(_807, _243, fma(_806, _242, _805 * _241));
    float _982 = fma(_807, _276, fma(_806, _275, _805 * _274));
    float _985 = fma(_807, _290, fma(_806, _289, _805 * _288));
    float _989 = inversesqrt(dot(vec3(_979, _982, _985), vec3(_979, _982, _985)));
    float _990 = _989 * _979;
    float _991 = _989 * _982;
    float _992 = _989 * _985;
    float _999 = (((_973 * _963) - _990) * _326) + _990;
    float _1000 = (((_973 * _966) - _991) * _326) + _991;
    float _1001 = (((_973 * _969) - _992) * _326) + _992;
    vec4 _1014 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _1020 = (_1014.x * 2.0) + (-1.0);
    float _1021 = (_1014.y * 2.0) + (-1.0);
    float _1022 = dot(vec2(_1020, _1021), vec2(_1020, _1021));
    float _4349 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1027 = sqrt(1.0 - (isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0))));
    float _1030 = fma(_1027, _288, fma(_1021, _281, _1020 * _260));
    float _1033 = fma(_1027, _289, fma(_1021, _282, _1020 * _261));
    float _1036 = fma(_1027, _290, fma(_1021, _283, _1020 * _262));
    float _1040 = inversesqrt(dot(vec3(_1030, _1033, _1036), vec3(_1030, _1033, _1036)));
    float _1041 = _1040 * _1030;
    float _1042 = _1040 * _1033;
    float _1043 = _1040 * _1036;
    float _1046 = fma(_1043, _243, fma(_1042, _242, _1041 * _241));
    float _1049 = fma(_1043, _276, fma(_1042, _275, _1041 * _274));
    float _1052 = fma(_1043, _290, fma(_1042, _289, _1041 * _288));
    float _1056 = inversesqrt(dot(vec3(_1046, _1049, _1052), vec3(_1046, _1049, _1052)));
    float _1066 = (((_1056 * _1046) - _999) * _329) + _999;
    float _1067 = (((_1056 * _1049) - _1000) * _329) + _1000;
    float _1068 = (((_1056 * _1052) - _1001) * _329) + _1001;
    vec4 _1081 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _1087 = (_1081.x * 2.0) + (-1.0);
    float _1088 = (_1081.y * 2.0) + (-1.0);
    float _1089 = dot(vec2(_1087, _1088), vec2(_1087, _1088));
    float _4360 = isnan(0.0) ? _1089 : (isnan(_1089) ? 0.0 : max(_1089, 0.0));
    float _1094 = sqrt(1.0 - (isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0))));
    float _1097 = fma(_1094, _288, fma(_1088, _281, _1087 * _260));
    float _1100 = fma(_1094, _289, fma(_1088, _282, _1087 * _261));
    float _1103 = fma(_1094, _290, fma(_1088, _283, _1087 * _262));
    float _1107 = inversesqrt(dot(vec3(_1097, _1100, _1103), vec3(_1097, _1100, _1103)));
    float _1108 = _1107 * _1097;
    float _1109 = _1107 * _1100;
    float _1110 = _1107 * _1103;
    float _1113 = fma(_1110, _243, fma(_1109, _242, _1108 * _241));
    float _1116 = fma(_1110, _276, fma(_1109, _275, _1108 * _274));
    float _1119 = fma(_1110, _290, fma(_1109, _289, _1108 * _288));
    float _1123 = inversesqrt(dot(vec3(_1113, _1116, _1119), vec3(_1113, _1116, _1119)));
    float _1133 = (((_1123 * _1119) - _1068) * _323) + _1068;
    vec4 _1145 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w));
    float _1151 = (_1145.x * 2.0) + (-1.0);
    float _1152 = (_1145.y * 2.0) + (-1.0);
    float _1153 = dot(vec2(_1151, _1152), vec2(_1151, _1152));
    float _4371 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
    float _1158 = sqrt(1.0 - (isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))));
    float _1161 = fma(_1158, _288, fma(_1152, _281, _1151 * _260));
    float _1164 = fma(_1158, _289, fma(_1152, _282, _1151 * _261));
    float _1167 = fma(_1158, _290, fma(_1152, _283, _1151 * _262));
    float _1171 = inversesqrt(dot(vec3(_1161, _1164, _1167), vec3(_1161, _1164, _1167)));
    float _1172 = _1171 * _1161;
    float _1173 = _1171 * _1164;
    float _1174 = _1171 * _1167;
    float _1177 = fma(_1174, _243, fma(_1173, _242, _1172 * _241));
    float _1180 = fma(_1174, _276, fma(_1173, _275, _1172 * _274));
    float _1183 = fma(_1174, _290, fma(_1173, _289, _1172 * _288));
    float _1187 = inversesqrt(dot(vec3(_1177, _1180, _1183), vec3(_1177, _1180, _1183)));
    vec4 _1225 = texture(sampler2D(M_AMSN_V_Mb4_Ch2_3Mask_Ov_N_Building_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _1239 = (((((((_908 * _475) * _918) * cbMtdParam._m0[24u].z) + ((((_585 * _569) * _852) * _862) * cbMtdParam._m0[24u].w)) + _1066) + (((_1123 * _1113) - _1066) * _323)) + (((_1177 * _485) * _1187) * cbMtdParam._m0[23u].z)) + (((_1225.x * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1244 = (((((((_911 * _475) * _918) * cbMtdParam._m0[24u].z) + ((((_586 * _569) * _855) * _862) * cbMtdParam._m0[24u].w)) + _1067) + (((_1123 * _1116) - _1067) * _323)) + (((_1180 * _485) * _1187) * cbMtdParam._m0[23u].z)) + (((_1225.y * 2.0) + (-1.0)) * cbMtdParam._m0[25u].y);
    float _1247 = fma(_1133, _288, fma(_1244, _274, _1239 * _241));
    float _1250 = fma(_1133, _289, fma(_1244, _275, _1239 * _242));
    float _1253 = fma(_1133, _290, fma(_1244, _276, _1239 * _243));
    float _1257 = inversesqrt(dot(vec3(_1247, _1250, _1253), vec3(_1247, _1250, _1253)));
    float _1258 = _1257 * _1247;
    float _1259 = _1257 * _1250;
    float _1260 = _1257 * _1253;
    float _4382 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _1261 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
    float _4393 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    float _1262 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _4404 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
    float _4415 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _4426 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _4437 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _1266 = isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0));
    float _1282 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1322 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1332 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1322);
    float _1333 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1322);
    float _1334 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1322);
    float _1338 = inversesqrt(dot(vec3(_1332, _1333, _1334), vec3(_1332, _1333, _1334)));
    float _1339 = _1332 * _1338;
    float _1340 = _1333 * _1338;
    float _1341 = _1334 * _1338;
    float _1347 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1348 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _1366 = fma(_1260, cbSceneParam._m0[5u].z, fma(_1259, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _1258));
    float _1369 = fma(_1260, cbSceneParam._m0[6u].z, fma(_1259, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _1258));
    float _1372 = fma(_1260, cbSceneParam._m0[7u].z, fma(_1259, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _1258));
    uint _1385 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1387 = (_1385 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1393 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0)))) * cbInstanceData._m0[_1387].x;
    float _1394 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4415 : (isnan(_4415) ? 1.0 : min(_4415, 1.0)))) * cbInstanceData._m0[_1387].y;
    float _1395 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4426 : (isnan(_4426) ? 1.0 : min(_4426, 1.0)))) * cbInstanceData._m0[_1387].z;
    float _4448 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
    float _1396 = isnan(1.0) ? _4448 : (isnan(_4448) ? 1.0 : min(_4448, 1.0));
    float _4459 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
    float _1397 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
    float _4470 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
    float _1398 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
    float _1399 = 1.0 - _1266;
    float _1400 = _1396 * _1399;
    float _1401 = _1397 * _1399;
    float _1402 = _1398 * _1399;
    float _1407 = (_1396 + (-0.039999999105930328369140625)) * _1266;
    float _1408 = (_1397 + (-0.039999999105930328369140625)) * _1266;
    float _1409 = (_1398 + (-0.039999999105930328369140625)) * _1266;
    float _1410 = _1407 + 0.039999999105930328369140625;
    float _1412 = _1408 + 0.039999999105930328369140625;
    float _1413 = _1409 + 0.039999999105930328369140625;
    vec4 _1422 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1347, cbSceneParam._m0[86u].y * _1348));
    float _1425 = _1422.x * TEXCOORD_7.w;
    float _1426 = dot(vec3(_1258, _1259, _1260), vec3(_1339, _1340, _1341));
    float _1429 = _1426 * 2.0;
    float _1433 = (_1429 * _1258) - _1339;
    float _1434 = (_1429 * _1259) - _1340;
    float _1435 = (_1429 * _1260) - _1341;
    float _1439 = abs(dot(vec3(_1339, _1340, _1341), vec3(_1258, _1259, _1260)));
    float _4481 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
    float _1441 = sqrt(_1262);
    float _1454 = exp2((_1441 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1441 * 3.0));
    float _1460 = (1.0 - _1454) * ((_1441 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1461 = _1454 * _1441;
    float _1489 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1493 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1497 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1798;
    float _1800;
    float _1801;
    float _1802;
    float _1803;
    float _1804;
    float _1805;
    float _1806;
    float _1807;
    float _1808;
    float _1809;
    float _1810;
    float _1811;
    float _1812;
    float _1813;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1523 = fma(_1497, cbModelParam._m0[26u].z, fma(_1493, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1489));
        float _1527 = fma(_1497, cbModelParam._m0[27u].z, fma(_1493, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1489));
        float _1531 = fma(_1497, cbModelParam._m0[28u].z, fma(_1493, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1489));
        float _1556 = _1489 + _1258;
        float _1557 = _1493 + _1259;
        float _1558 = _1497 + _1260;
        float _1568 = fma(_1558, cbModelParam._m0[26u].z, fma(_1557, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1556)) - _1523;
        float _1569 = fma(_1558, cbModelParam._m0[27u].z, fma(_1557, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1556)) - _1527;
        float _1570 = fma(_1558, cbModelParam._m0[28u].z, fma(_1557, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1556)) - _1531;
        float _1574 = inversesqrt(dot(vec3(_1568, _1569, _1570), vec3(_1568, _1569, _1570)));
        float _1587 = ((_1574 * _1568) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1523 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1588 = ((_1574 * _1569) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1527 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1589 = ((_1574 * _1570) / cbModelParam._m0[34u].z) + ((((((_1531 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1592 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1587, _1588, _1589), 0.0);
        vec4 _1599 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1587, _1588, _1589), 0.0);
        vec4 _1606 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1587, _1588, _1589), 0.0);
        vec4 _1613 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1587, _1588, _1589), 0.0);
        float _1626 = exp2((_1592.w + (-0.5)) * 20.0) * 2.0;
        float _1627 = _1626 * (_1592.x + (-0.5));
        float _1628 = _1626 * (_1592.y + (-0.5));
        float _1629 = _1626 * (_1592.z + (-0.5));
        float _1636 = exp2((_1599.w + (-0.5)) * 20.0) * 2.0;
        float _1637 = _1636 * (_1599.x + (-0.5));
        float _1638 = _1636 * (_1599.y + (-0.5));
        float _1639 = _1636 * (_1599.z + (-0.5));
        float _1646 = exp2((_1606.w + (-0.5)) * 20.0) * 2.0;
        float _1647 = _1646 * (_1606.x + (-0.5));
        float _1648 = _1646 * (_1606.y + (-0.5));
        float _1649 = _1646 * (_1606.z + (-0.5));
        float _1656 = exp2((_1613.w + (-0.5)) * 20.0) * 2.0;
        float _1657 = _1656 * (_1613.x + (-0.5));
        float _1658 = _1656 * (_1613.y + (-0.5));
        float _1659 = _1656 * (_1613.z + (-0.5));
        float _1660 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1661 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1662 = isnan(0.0) ? _1659 : (isnan(_1659) ? 0.0 : max(_1659, 0.0));
        float _1663 = _1627 * 0.5;
        float _1664 = _1637 * 0.5;
        float _1665 = _1647 * 0.5;
        float _1666 = dot(vec3(_1663, _1664, _1665), vec3(_1663, _1664, _1665));
        float _1671 = (_1666 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1666);
        float _1680 = (dot(vec3(_1258, _1259, _1260), vec3(_1671 * _1663, _1671 * _1664, _1671 * _1665)) + 1.0) * 0.5;
        float _4507 = isnan(0.0) ? _1680 : (isnan(_1680) ? 0.0 : max(_1680, 0.0));
        float _1690 = sqrt(((_1664 * _1664) + (_1663 * _1663)) + (_1665 * _1665)) / (_1660 + 9.9999997473787516355514526367188e-06);
        float _4518 = isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0));
        float _1691 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
        float _1692 = _1691 * 2.0;
        float _1696 = (1.0 - _1691) / (_1691 + 1.0);
        float _4529 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0));
        float _1706 = ((((1.0 - _1697) * (_1692 + 2.0)) * exp2(log2(isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * (_1692 + 1.0))) + _1697) * _1660;
        float _1707 = _1628 * 0.5;
        float _1708 = _1638 * 0.5;
        float _1709 = _1648 * 0.5;
        float _1710 = dot(vec3(_1707, _1708, _1709), vec3(_1707, _1708, _1709));
        float _1715 = (_1710 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1710);
        float _1723 = (dot(vec3(_1258, _1259, _1260), vec3(_1715 * _1707, _1715 * _1708, _1715 * _1709)) + 1.0) * 0.5;
        float _4540 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
        float _1732 = sqrt(((_1708 * _1708) + (_1707 * _1707)) + (_1709 * _1709)) / (_1661 + 9.9999997473787516355514526367188e-06);
        float _4551 = isnan(0.0) ? _1732 : (isnan(_1732) ? 0.0 : max(_1732, 0.0));
        float _1733 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
        float _1734 = _1733 * 2.0;
        float _1738 = (1.0 - _1733) / (_1733 + 1.0);
        float _4562 = isnan(0.0) ? _1738 : (isnan(_1738) ? 0.0 : max(_1738, 0.0));
        float _1739 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
        float _1748 = ((((1.0 - _1739) * (_1734 + 2.0)) * exp2(log2(isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0))) * (_1734 + 1.0))) + _1739) * _1661;
        float _1749 = _1629 * 0.5;
        float _1750 = _1639 * 0.5;
        float _1751 = _1649 * 0.5;
        float _1752 = dot(vec3(_1749, _1750, _1751), vec3(_1749, _1750, _1751));
        float _1757 = (_1752 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1752);
        float _1765 = (dot(vec3(_1258, _1259, _1260), vec3(_1757 * _1749, _1757 * _1750, _1757 * _1751)) + 1.0) * 0.5;
        float _4573 = isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0));
        float _1774 = sqrt(((_1750 * _1750) + (_1749 * _1749)) + (_1751 * _1751)) / (_1662 + 9.9999997473787516355514526367188e-06);
        float _4584 = isnan(0.0) ? _1774 : (isnan(_1774) ? 0.0 : max(_1774, 0.0));
        float _1775 = isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0));
        float _1776 = _1775 * 2.0;
        float _1780 = (1.0 - _1775) / (_1775 + 1.0);
        float _4595 = isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0));
        float _1781 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _1790 = ((((1.0 - _1781) * (_1776 + 2.0)) * exp2(log2(isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0))) * (_1776 + 1.0))) + _1781) * _1662;
        _1798 = _1629;
        _1800 = _1628;
        _1801 = _1627;
        _1802 = _1639;
        _1803 = _1638;
        _1804 = _1637;
        _1805 = _1649;
        _1806 = _1648;
        _1807 = _1647;
        _1808 = _1662;
        _1809 = _1661;
        _1810 = _1660;
        _1811 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0)));
        _1812 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1748 : (isnan(_1748) ? 0.0 : max(_1748, 0.0)));
        _1813 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1790 : (isnan(_1790) ? 0.0 : max(_1790, 0.0)));
    }
    else
    {
        _1798 = _1799;
        _1800 = _1799;
        _1801 = _1799;
        _1802 = _1799;
        _1803 = _1799;
        _1804 = _1799;
        _1805 = _1799;
        _1806 = _1799;
        _1807 = _1799;
        _1808 = _1799;
        _1809 = _1799;
        _1810 = _1799;
        _1811 = 0.0;
        _1812 = 0.0;
        _1813 = 0.0;
    }
    float _2108;
    float _2109;
    float _2110;
    float _2111;
    float _2112;
    float _2113;
    float _2114;
    float _2115;
    float _2116;
    float _2117;
    float _2118;
    float _2119;
    float _2120;
    float _2121;
    float _2122;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1839 = fma(_1497, cbModelParam._m0[30u].z, fma(_1493, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1489));
        float _1843 = fma(_1497, cbModelParam._m0[31u].z, fma(_1493, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1489));
        float _1847 = fma(_1497, cbModelParam._m0[32u].z, fma(_1493, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1489));
        float _1870 = _1489 + _1258;
        float _1871 = _1493 + _1259;
        float _1872 = _1497 + _1260;
        float _1882 = fma(_1872, cbModelParam._m0[30u].z, fma(_1871, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1870)) - _1839;
        float _1883 = fma(_1872, cbModelParam._m0[31u].z, fma(_1871, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1870)) - _1843;
        float _1884 = fma(_1872, cbModelParam._m0[32u].z, fma(_1871, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1870)) - _1847;
        float _1888 = inversesqrt(dot(vec3(_1882, _1883, _1884), vec3(_1882, _1883, _1884)));
        float _1901 = ((_1888 * _1882) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1839 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1902 = ((_1888 * _1883) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1843 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1903 = ((_1888 * _1884) / cbModelParam._m0[35u].z) + ((((((_1847 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1905 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1901, _1902, _1903), 0.0);
        vec4 _1912 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1901, _1902, _1903), 0.0);
        vec4 _1919 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1901, _1902, _1903), 0.0);
        vec4 _1926 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1901, _1902, _1903), 0.0);
        float _1938 = exp2((_1905.w + (-0.5)) * 20.0) * 2.0;
        float _1939 = _1938 * (_1905.x + (-0.5));
        float _1940 = _1938 * (_1905.y + (-0.5));
        float _1941 = _1938 * (_1905.z + (-0.5));
        float _1948 = exp2((_1912.w + (-0.5)) * 20.0) * 2.0;
        float _1949 = _1948 * (_1912.x + (-0.5));
        float _1950 = _1948 * (_1912.y + (-0.5));
        float _1951 = _1948 * (_1912.z + (-0.5));
        float _1958 = exp2((_1919.w + (-0.5)) * 20.0) * 2.0;
        float _1959 = _1958 * (_1919.x + (-0.5));
        float _1960 = _1958 * (_1919.y + (-0.5));
        float _1961 = _1958 * (_1919.z + (-0.5));
        float _1968 = exp2((_1926.w + (-0.5)) * 20.0) * 2.0;
        float _1969 = _1968 * (_1926.x + (-0.5));
        float _1970 = _1968 * (_1926.y + (-0.5));
        float _1971 = _1968 * (_1926.z + (-0.5));
        float _1972 = isnan(0.0) ? _1969 : (isnan(_1969) ? 0.0 : max(_1969, 0.0));
        float _1973 = isnan(0.0) ? _1970 : (isnan(_1970) ? 0.0 : max(_1970, 0.0));
        float _1974 = isnan(0.0) ? _1971 : (isnan(_1971) ? 0.0 : max(_1971, 0.0));
        float _1975 = _1939 * 0.5;
        float _1976 = _1949 * 0.5;
        float _1977 = _1959 * 0.5;
        float _1978 = dot(vec3(_1975, _1976, _1977), vec3(_1975, _1976, _1977));
        float _1983 = (_1978 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1978);
        float _1991 = (dot(vec3(_1258, _1259, _1260), vec3(_1983 * _1975, _1983 * _1976, _1983 * _1977)) + 1.0) * 0.5;
        float _4636 = isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0));
        float _2000 = sqrt(((_1976 * _1976) + (_1975 * _1975)) + (_1977 * _1977)) / (_1972 + 9.9999997473787516355514526367188e-06);
        float _4647 = isnan(0.0) ? _2000 : (isnan(_2000) ? 0.0 : max(_2000, 0.0));
        float _2001 = isnan(1.0) ? _4647 : (isnan(_4647) ? 1.0 : min(_4647, 1.0));
        float _2002 = _2001 * 2.0;
        float _2006 = (1.0 - _2001) / (_2001 + 1.0);
        float _4658 = isnan(0.0) ? _2006 : (isnan(_2006) ? 0.0 : max(_2006, 0.0));
        float _2007 = isnan(1.0) ? _4658 : (isnan(_4658) ? 1.0 : min(_4658, 1.0));
        float _2016 = ((((1.0 - _2007) * (_2002 + 2.0)) * exp2(log2(isnan(1.0) ? _4636 : (isnan(_4636) ? 1.0 : min(_4636, 1.0))) * (_2002 + 1.0))) + _2007) * _1972;
        float _2017 = _1940 * 0.5;
        float _2018 = _1950 * 0.5;
        float _2019 = _1960 * 0.5;
        float _2020 = dot(vec3(_2017, _2018, _2019), vec3(_2017, _2018, _2019));
        float _2025 = (_2020 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2020);
        float _2033 = (dot(vec3(_1258, _1259, _1260), vec3(_2025 * _2017, _2025 * _2018, _2025 * _2019)) + 1.0) * 0.5;
        float _4669 = isnan(0.0) ? _2033 : (isnan(_2033) ? 0.0 : max(_2033, 0.0));
        float _2042 = sqrt(((_2018 * _2018) + (_2017 * _2017)) + (_2019 * _2019)) / (_1973 + 9.9999997473787516355514526367188e-06);
        float _4680 = isnan(0.0) ? _2042 : (isnan(_2042) ? 0.0 : max(_2042, 0.0));
        float _2043 = isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0));
        float _2044 = _2043 * 2.0;
        float _2048 = (1.0 - _2043) / (_2043 + 1.0);
        float _4691 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2049 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _2058 = ((((1.0 - _2049) * (_2044 + 2.0)) * exp2(log2(isnan(1.0) ? _4669 : (isnan(_4669) ? 1.0 : min(_4669, 1.0))) * (_2044 + 1.0))) + _2049) * _1973;
        float _2059 = _1941 * 0.5;
        float _2060 = _1951 * 0.5;
        float _2061 = _1961 * 0.5;
        float _2062 = dot(vec3(_2059, _2060, _2061), vec3(_2059, _2060, _2061));
        float _2067 = (_2062 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2062);
        float _2075 = (dot(vec3(_1258, _1259, _1260), vec3(_2067 * _2059, _2067 * _2060, _2067 * _2061)) + 1.0) * 0.5;
        float _4702 = isnan(0.0) ? _2075 : (isnan(_2075) ? 0.0 : max(_2075, 0.0));
        float _2084 = sqrt(((_2060 * _2060) + (_2059 * _2059)) + (_2061 * _2061)) / (_1974 + 9.9999997473787516355514526367188e-06);
        float _4713 = isnan(0.0) ? _2084 : (isnan(_2084) ? 0.0 : max(_2084, 0.0));
        float _2085 = isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0));
        float _2086 = _2085 * 2.0;
        float _2090 = (1.0 - _2085) / (_2085 + 1.0);
        float _4724 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2091 = isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0));
        float _2100 = ((((1.0 - _2091) * (_2086 + 2.0)) * exp2(log2(isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0))) * (_2086 + 1.0))) + _2091) * _1974;
        _2108 = _1941;
        _2109 = _1940;
        _2110 = _1939;
        _2111 = _1951;
        _2112 = _1950;
        _2113 = _1949;
        _2114 = _1961;
        _2115 = _1960;
        _2116 = _1959;
        _2117 = _1974;
        _2118 = _1973;
        _2119 = _1972;
        _2120 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2016 : (isnan(_2016) ? 0.0 : max(_2016, 0.0)));
        _2121 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0)));
        _2122 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0)));
    }
    else
    {
        _2108 = _1799;
        _2109 = _1799;
        _2110 = _1799;
        _2111 = _1799;
        _2112 = _1799;
        _2113 = _1799;
        _2114 = _1799;
        _2115 = _1799;
        _2116 = _1799;
        _2117 = _1799;
        _2118 = _1799;
        _2119 = _1799;
        _2120 = 0.0;
        _2121 = 0.0;
        _2122 = 0.0;
    }
    float _2132 = (cbModelParam._m0[1u].x * (_2120 - _1811)) + _1811;
    float _2133 = (cbModelParam._m0[1u].x * (_2121 - _1812)) + _1812;
    float _2134 = (cbModelParam._m0[1u].x * (_2122 - _1813)) + _1813;
    float _2155 = fma(_2134, cbSceneParam._m0[89u].z, fma(_2133, cbSceneParam._m0[89u].y, _2132 * cbSceneParam._m0[89u].x));
    float _2158 = fma(_2134, cbSceneParam._m0[90u].z, fma(_2133, cbSceneParam._m0[90u].y, _2132 * cbSceneParam._m0[90u].x));
    float _2161 = fma(_2134, cbSceneParam._m0[91u].z, fma(_2133, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2132));
    float _2176 = _1433 * 0.5;
    float _2177 = _1434 * 0.5;
    float _2178 = _1435 * 0.5;
    float _2179 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_2110, _2113, _2116, _2119));
    float _2182 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_2109, _2112, _2115, _2118));
    float _2185 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_2108, _2111, _2114, _2117));
    float _2219;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2192 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_1798, _1802, _1805, _1808));
        float _2196 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_1800, _1803, _1806, _1809));
        float _2200 = dot(vec4(_2176, _2177, _2178, 1.0), vec4(_1801, _1804, _1807, _1810));
        float _2207 = dot(vec4(cbModelParam._m0[39u]), vec4(_2176, _2177, _2178, 1.0));
        _2219 = dot(vec3(isnan(0.0) ? _2200 : (isnan(_2200) ? 0.0 : max(_2200, 0.0)), isnan(0.0) ? _2196 : (isnan(_2196) ? 0.0 : max(_2196, 0.0)), isnan(0.0) ? _2192 : (isnan(_2192) ? 0.0 : max(_2192, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2207) ? 0.0 : (isnan(0.0) ? _2207 : max(0.0, _2207))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2219 = 1.0;
    }
    float _2230;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2221 = dot(vec4(cbModelParam._m0[40u]), vec4(_2176, _2177, _2178, 1.0));
        _2230 = dot(vec3(isnan(0.0) ? _2179 : (isnan(_2179) ? 0.0 : max(_2179, 0.0)), isnan(0.0) ? _2182 : (isnan(_2182) ? 0.0 : max(_2182, 0.0)), isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2221) ? 0.0 : (isnan(0.0) ? _2221 : max(0.0, _2221))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2230 = 1.0;
    }
    float _2234 = (_2230 * cbModelParam._m0[1u].x) + (_2219 * (1.0 - cbModelParam._m0[1u].x));
    float _2244 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1262);
    float _2245 = isnan(_2244) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2244 : min(cbModelParam._m0[25u].z, _2244));
    float _2325;
    float _2327;
    float _2329;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2292 = fma(_1497, cbModelParam._m0[13u].z, fma(_1493, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1489)) + cbModelParam._m0[13u].w;
        float _2296 = fma(_1497, cbModelParam._m0[14u].z, fma(_1493, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1489)) + cbModelParam._m0[14u].w;
        float _2300 = fma(_1497, cbModelParam._m0[15u].z, fma(_1493, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1489)) + cbModelParam._m0[15u].w;
        float _2303 = fma(_1435, cbModelParam._m0[13u].z, fma(_1434, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1433));
        float _2306 = fma(_1435, cbModelParam._m0[14u].z, fma(_1434, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1433));
        float _2309 = fma(_1435, cbModelParam._m0[15u].z, fma(_1434, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1433));
        float _2337;
        if (_2303 > 0.0)
        {
            _2337 = abs((1.0 - _2292) / _2303);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2303 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2292 + 1.0) / _2303);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2337 = frontier_phi_16_14_ladder;
        }
        float _2561;
        if (_2306 > 0.0)
        {
            _2561 = abs((1.0 - _2296) / _2306);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2306 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2296 + 1.0) / _2306);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2561 = frontier_phi_25_21_ladder;
        }
        float _2818;
        if (_2309 > 0.0)
        {
            _2818 = abs((1.0 - _2300) / _2309);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2309 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2300 + 1.0) / _2309);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2818 = frontier_phi_37_32_ladder;
        }
        float _2820 = isnan(_2561) ? _2337 : (isnan(_2337) ? _2561 : min(_2337, _2561));
        float _2821 = isnan(_2818) ? _2820 : (isnan(_2820) ? _2818 : min(_2820, _2818));
        float _2825 = (_2821 * _2303) + _2292;
        float _2826 = (_2821 * _2306) + _2296;
        float _2827 = (_2821 * _2309) + _2300;
        float _2828 = _2821 * 9.9999997473787516355514526367188e-05;
        float _2830 = (-1.0) - _2828;
        float _2832 = _2828 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2827 > _2832) || ((_2827 < _2830) || ((_2826 > _2832) || ((_2826 < _2830) || ((_2825 < _2830) || (_2825 > _2832))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2955 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2827, cbModelParam._m0[9u].z, fma(_2826, cbModelParam._m0[9u].y, _2825 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2827, cbModelParam._m0[10u].z, fma(_2826, cbModelParam._m0[10u].y, _2825 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2827, cbModelParam._m0[11u].z, fma(_2826, cbModelParam._m0[11u].y, _2825 * cbModelParam._m0[11u].x))), _2245);
            frontier_phi_15_37_ladder = _2955.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2955.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2955.x * cbModelParam._m0[1u].y;
        }
        _2325 = frontier_phi_15_37_ladder_2;
        _2327 = frontier_phi_15_37_ladder_1;
        _2329 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2313 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1433, _1434, _1435), _2245);
        _2325 = _2313.x * cbModelParam._m0[1u].y;
        _2327 = _2313.y * cbModelParam._m0[1u].y;
        _2329 = _2313.z * cbModelParam._m0[1u].y;
    }
    float _2333 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1262);
    float _2334 = isnan(_2333) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2333 : min(cbModelParam._m0[25u].w, _2333));
    float _2424;
    float _2426;
    float _2428;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2388 = fma(_1497, cbModelParam._m0[21u].z, fma(_1493, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1489)) + cbModelParam._m0[21u].w;
        float _2392 = fma(_1497, cbModelParam._m0[22u].z, fma(_1493, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1489)) + cbModelParam._m0[22u].w;
        float _2396 = fma(_1497, cbModelParam._m0[23u].z, fma(_1493, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1489)) + cbModelParam._m0[23u].w;
        float _2399 = fma(_1435, cbModelParam._m0[21u].z, fma(_1434, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1433));
        float _2402 = fma(_1435, cbModelParam._m0[22u].z, fma(_1434, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1433));
        float _2405 = fma(_1435, cbModelParam._m0[23u].z, fma(_1434, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1433));
        float _2566;
        if (_2399 > 0.0)
        {
            _2566 = abs((1.0 - _2388) / _2399);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2399 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2388 + 1.0) / _2399);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2566 = frontier_phi_27_23_ladder;
        }
        float _2845;
        if (_2402 > 0.0)
        {
            _2845 = abs((1.0 - _2392) / _2402);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2402 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2392 + 1.0) / _2402);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2845 = frontier_phi_39_34_ladder;
        }
        float _3058;
        if (_2405 > 0.0)
        {
            _3058 = abs((1.0 - _2396) / _2405);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_2405 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_2396 + 1.0) / _2405);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _3058 = frontier_phi_48_45_ladder;
        }
        float _3060 = isnan(_2845) ? _2566 : (isnan(_2566) ? _2845 : min(_2566, _2845));
        float _3061 = isnan(_3058) ? _3060 : (isnan(_3060) ? _3058 : min(_3060, _3058));
        float _3065 = (_3061 * _2399) + _2388;
        float _3066 = (_3061 * _2402) + _2392;
        float _3067 = (_3061 * _2405) + _2396;
        float _3068 = _3061 * 9.9999997473787516355514526367188e-05;
        float _3069 = (-1.0) - _3068;
        float _3071 = _3068 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_3067 > _3071) || ((_3067 < _3069) || ((_3066 > _3071) || ((_3066 < _3069) || ((_3065 < _3069) || (_3065 > _3071))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3270 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3067, cbModelParam._m0[17u].z, fma(_3066, cbModelParam._m0[17u].y, _3065 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3067, cbModelParam._m0[18u].z, fma(_3066, cbModelParam._m0[18u].y, _3065 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3067, cbModelParam._m0[19u].z, fma(_3066, cbModelParam._m0[19u].y, _3065 * cbModelParam._m0[19u].x))), _2334);
            frontier_phi_24_48_ladder = _3270.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _3270.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _3270.x * cbModelParam._m0[1u].z;
        }
        _2424 = frontier_phi_24_48_ladder_2;
        _2426 = frontier_phi_24_48_ladder_1;
        _2428 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _2408 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1433, _1434, _1435), _2334);
        _2424 = _2408.x * cbModelParam._m0[1u].z;
        _2426 = _2408.y * cbModelParam._m0[1u].z;
        _2428 = _2408.z * cbModelParam._m0[1u].z;
    }
    float _2441 = (((_1460 * _1410) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2424 - _2325)) + _2325);
    float _2443 = (((_1460 * _1412) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2426 - _2327)) + _2327);
    float _2445 = (((_1460 * _1413) + _1461) * _1425) * ((cbModelParam._m0[1u].w * (_2428 - _2329)) + _2329);
    float _2448 = fma(_2445, cbSceneParam._m0[89u].z, fma(_2443, cbSceneParam._m0[89u].y, _2441 * cbSceneParam._m0[89u].x));
    float _2451 = fma(_2445, cbSceneParam._m0[90u].z, fma(_2443, cbSceneParam._m0[90u].y, _2441 * cbSceneParam._m0[90u].x));
    float _2454 = fma(_2445, cbSceneParam._m0[91u].z, fma(_2443, cbSceneParam._m0[91u].y, _2441 * cbSceneParam._m0[91u].x));
    vec4 _2462 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_1347, _1348));
    float _2464 = _2462.w;
    float _2476 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2464);
    float _2477 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2464);
    float _2478 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2464);
    uvec4 _2482 = floatBitsToUint(cbInstanceData._m0[_1385 + 5u]);
    uint _2484 = _2482.x * 14u;
    uint _2485 = _2484 + 13u;
    float _2492 = _1425 + (-1.0);
    float _2497 = (cbLight._m0[_2485].x * _2492) + 1.0;
    float _2498 = (cbLight._m0[_2485].y * _2492) + 1.0;
    float _2499 = (cbLight._m0[_2485].z * _2492) + 1.0;
    float _2500 = (cbLight._m0[_2485].w * _2492) + 1.0;
    uint _2501 = _2484 + 5u;
    float _2507 = isnan(1.0) ? _2498 : (isnan(_2498) ? 1.0 : min(_2498, 1.0));
    uint _2511 = _2484 + 4u;
    float _2520 = isnan(1.0) ? _2497 : (isnan(_2497) ? 1.0 : min(_2497, 1.0));
    uint _2524 = _2484 | 1u;
    float _2535 = dot(vec3(cbLight._m0[_2484].xyz), vec3(_1258, _1259, _1260));
    float _2538 = dot(vec3(cbLight._m0[_2524].xyz), vec3(_1258, _1259, _1260));
    float _4860 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
    float _4871 = isnan(0.0) ? _2538 : (isnan(_2538) ? 0.0 : max(_2538, 0.0));
    float _2543 = (isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0))) * 0.3183098733425140380859375;
    float _2545 = (isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0))) * 0.3183098733425140380859375;
    float _2552 = ((cbLight._m0[_2501].x * _2507) * _2545) + (((cbLight._m0[_2511].x * _2476) * _2520) * _2543);
    float _2553 = ((_2507 * cbLight._m0[_2501].y) * _2545) + (((cbLight._m0[_2511].y * _2477) * _2520) * _2543);
    float _2554 = ((_2507 * cbLight._m0[_2501].z) * _2545) + (((cbLight._m0[_2511].z * _2478) * _2520) * _2543);
    uvec4 _2558 = floatBitsToUint(cbLight._m0[_2484 + 12u]);
    bool _2560 = _2558.x == 0u;
    float _2571;
    float _2573;
    float _2575;
    if (_2560)
    {
        _2571 = _2552;
        _2573 = _2553;
        _2575 = _2554;
    }
    else
    {
        uint _2579 = _2484 + 6u;
        float _2595 = (dot(vec3(cbLight._m0[_2484 + 2u].xyz), vec3(_1258, _1259, _1260)) * 0.5) + 0.5;
        float _2596 = _2595 * _2595;
        float _4882 = isnan(0.0) ? _2596 : (isnan(_2596) ? 0.0 : max(_2596, 0.0));
        float _2597 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
        float _2598 = isnan(1.0) ? _2499 : (isnan(_2499) ? 1.0 : min(_2499, 1.0));
        _2571 = (((cbLight._m0[_2579].x * 0.3183098733425140380859375) * _2597) * _2598) + _2552;
        _2573 = (((cbLight._m0[_2579].y * 0.3183098733425140380859375) * _2597) * _2598) + _2553;
        _2575 = (((cbLight._m0[_2579].z * 0.3183098733425140380859375) * _2597) * _2598) + _2554;
    }
    bool _2578 = _2558.y == 0u;
    float _2616;
    float _2618;
    float _2620;
    if (_2578)
    {
        _2616 = _2571;
        _2618 = _2573;
        _2620 = _2575;
    }
    else
    {
        uint _2789 = _2484 + 7u;
        float _2805 = (dot(vec3(cbLight._m0[_2484 + 3u].xyz), vec3(_1258, _1259, _1260)) * 0.5) + 0.5;
        float _2806 = _2805 * _2805;
        float _4898 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
        float _2807 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
        float _2808 = isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0));
        _2616 = (((cbLight._m0[_2789].x * 0.3183098733425140380859375) * _2807) * _2808) + _2571;
        _2618 = (((cbLight._m0[_2789].y * 0.3183098733425140380859375) * _2807) * _2808) + _2573;
        _2620 = (((cbLight._m0[_2789].z * 0.3183098733425140380859375) * _2807) * _2808) + _2575;
    }
    uint _2623 = _2484 + 8u;
    float _2636 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2484].w)) * _1262) * 0.949999988079071044921875);
    float _2637 = _2636 * _2636;
    float _2638 = cbLight._m0[_2484].x + _1339;
    float _2639 = cbLight._m0[_2484].y + _1340;
    float _2640 = cbLight._m0[_2484].z + _1341;
    float _2644 = inversesqrt(dot(vec3(_2638, _2639, _2640), vec3(_2638, _2639, _2640)));
    float _2645 = _2644 * _2638;
    float _2646 = _2644 * _2639;
    float _2647 = _2644 * _2640;
    float _2648 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2484].xyz));
    float _4914 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
    float _2651 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
    float _4925 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    float _2652 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
    float _2653 = dot(vec3(_1258, _1259, _1260), vec3(_2645, _2646, _2647));
    float _4936 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
    float _2656 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
    float _2657 = dot(vec3(cbLight._m0[_2484].xyz), vec3(_2645, _2646, _2647));
    float _4947 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
    float _2661 = _2637 * _2637;
    float _2665 = ((_2656 * _2656) * (_2661 + (-1.0))) + 1.0;
    float _2673 = exp2(log2(1.0 - (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) * 5.0);
    float _2674 = 0.959999978542327880859375 - _1407;
    float _2676 = 0.959999978542327880859375 - _1408;
    float _2677 = 0.959999978542327880859375 - _1409;
    float _2684 = 1.0 - _2637;
    float _2695 = (0.5 / (((_2652 * ((_2651 * _2684) + _2637)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2684) + _2637) * _2651))) * _2651;
    float _4958 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
    float _2697 = (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2661 / ((_2665 * _2665) * 3.141590118408203125));
    uint _2711 = _2484 + 9u;
    float _2722 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2524].w)) * _1262) * 0.949999988079071044921875);
    float _2723 = _2722 * _2722;
    float _2724 = cbLight._m0[_2524].x + _1339;
    float _2725 = cbLight._m0[_2524].y + _1340;
    float _2726 = cbLight._m0[_2524].z + _1341;
    float _2730 = inversesqrt(dot(vec3(_2724, _2725, _2726), vec3(_2724, _2725, _2726)));
    float _2731 = _2730 * _2724;
    float _2732 = _2730 * _2725;
    float _2733 = _2730 * _2726;
    float _2734 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2524].xyz));
    float _4969 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
    float _2737 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
    float _2738 = dot(vec3(_1258, _1259, _1260), vec3(_2731, _2732, _2733));
    float _4980 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
    float _2741 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
    float _2742 = dot(vec3(cbLight._m0[_2524].xyz), vec3(_2731, _2732, _2733));
    float _4991 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
    float _2746 = _2723 * _2723;
    float _2750 = ((_2741 * _2741) * (_2746 + (-1.0))) + 1.0;
    float _2757 = exp2(log2(1.0 - (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0)))) * 5.0);
    float _2764 = 1.0 - _2723;
    float _2774 = (0.5 / (((_2652 * ((_2737 * _2764) + _2723)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2764) + _2723) * _2737))) * _2737;
    float _5002 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
    float _2776 = (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0))) * (_2746 / ((_2750 * _2750) * 3.141590118408203125));
    float _2786 = (((((_2757 * _2674) + _1410) * cbLight._m0[_2711].x) * _2776) * _2507) + ((((cbLight._m0[_2623].x * _2476) * ((_2673 * _2674) + _1410)) * _2697) * _2520);
    float _2787 = (((((_2757 * _2676) + _1412) * cbLight._m0[_2711].y) * _2776) * _2507) + ((((cbLight._m0[_2623].y * _2477) * ((_2673 * _2676) + _1412)) * _2697) * _2520);
    float _2788 = (((((_2757 * _2677) + _1413) * cbLight._m0[_2711].z) * _2776) * _2507) + ((((cbLight._m0[_2623].z * _2478) * ((_2673 * _2677) + _1413)) * _2697) * _2520);
    float _2850;
    float _2852;
    float _2854;
    if (_2560)
    {
        _2850 = _2786;
        _2852 = _2787;
        _2854 = _2788;
    }
    else
    {
        uint _2856 = _2484 + 2u;
        uint _2860 = _2484 + 10u;
        float _2874 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2856].w)) * _1262) * 0.949999988079071044921875);
        float _2875 = _2874 * _2874;
        float _2876 = cbLight._m0[_2856].x + _1339;
        float _2877 = cbLight._m0[_2856].y + _1340;
        float _2878 = cbLight._m0[_2856].z + _1341;
        float _2882 = inversesqrt(dot(vec3(_2876, _2877, _2878), vec3(_2876, _2877, _2878)));
        float _2883 = _2882 * _2876;
        float _2884 = _2882 * _2877;
        float _2885 = _2882 * _2878;
        float _2886 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2856].xyz));
        float _5013 = isnan(0.0) ? _2886 : (isnan(_2886) ? 0.0 : max(_2886, 0.0));
        float _2889 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
        float _2890 = dot(vec3(_1258, _1259, _1260), vec3(_2883, _2884, _2885));
        float _5024 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
        float _2893 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
        float _2894 = dot(vec3(cbLight._m0[_2856].xyz), vec3(_2883, _2884, _2885));
        float _5035 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
        float _2898 = _2875 * _2875;
        float _2902 = ((_2893 * _2893) * (_2898 + (-1.0))) + 1.0;
        float _2909 = exp2(log2(1.0 - (isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0)))) * 5.0);
        float _2916 = 1.0 - _2875;
        float _2926 = (0.5 / (((_2652 * ((_2889 * _2916) + _2875)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2916) + _2875) * _2889))) * _2889;
        float _5046 = isnan(0.0) ? _2926 : (isnan(_2926) ? 0.0 : max(_2926, 0.0));
        float _2928 = (isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0))) * (_2898 / ((_2902 * _2902) * 3.141590118408203125));
        float _2929 = isnan(1.0) ? _2499 : (isnan(_2499) ? 1.0 : min(_2499, 1.0));
        _2850 = (((((_2909 * _2674) + _1410) * cbLight._m0[_2860].x) * _2928) * _2929) + _2786;
        _2852 = (((((_2909 * _2676) + _1412) * cbLight._m0[_2860].y) * _2928) * _2929) + _2787;
        _2854 = (((((_2909 * _2677) + _1413) * cbLight._m0[_2860].z) * _2928) * _2929) + _2788;
    }
    float _2964;
    float _2966;
    float _2968;
    if (_2578)
    {
        _2964 = _2850;
        _2966 = _2852;
        _2968 = _2854;
    }
    else
    {
        uint _2975 = _2484 + 3u;
        uint _2979 = _2484 + 11u;
        float _2993 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2975].w)) * _1262) * 0.949999988079071044921875);
        float _2994 = _2993 * _2993;
        float _2995 = cbLight._m0[_2975].x + _1339;
        float _2996 = cbLight._m0[_2975].y + _1340;
        float _2997 = cbLight._m0[_2975].z + _1341;
        float _3001 = inversesqrt(dot(vec3(_2995, _2996, _2997), vec3(_2995, _2996, _2997)));
        float _3002 = _3001 * _2995;
        float _3003 = _3001 * _2996;
        float _3004 = _3001 * _2997;
        float _3005 = dot(vec3(_1258, _1259, _1260), vec3(cbLight._m0[_2975].xyz));
        float _5062 = isnan(0.0) ? _3005 : (isnan(_3005) ? 0.0 : max(_3005, 0.0));
        float _3008 = isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0));
        float _3009 = dot(vec3(_1258, _1259, _1260), vec3(_3002, _3003, _3004));
        float _5073 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3012 = isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0));
        float _3013 = dot(vec3(cbLight._m0[_2975].xyz), vec3(_3002, _3003, _3004));
        float _5084 = isnan(0.0) ? _3013 : (isnan(_3013) ? 0.0 : max(_3013, 0.0));
        float _3017 = _2994 * _2994;
        float _3021 = ((_3012 * _3012) * (_3017 + (-1.0))) + 1.0;
        float _3028 = exp2(log2(1.0 - (isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0)))) * 5.0);
        float _3035 = 1.0 - _2994;
        float _3045 = (0.5 / (((_2652 * ((_3008 * _3035) + _2994)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _3035) + _2994) * _3008))) * _3008;
        float _5095 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
        float _3047 = (isnan(1.0) ? _5095 : (isnan(_5095) ? 1.0 : min(_5095, 1.0))) * (_3017 / ((_3021 * _3021) * 3.141590118408203125));
        float _3048 = isnan(1.0) ? _2500 : (isnan(_2500) ? 1.0 : min(_2500, 1.0));
        _2964 = (((((_3028 * _2674) + _1410) * cbLight._m0[_2979].x) * _3047) * _3048) + _2850;
        _2966 = (((((_3028 * _2676) + _1412) * cbLight._m0[_2979].y) * _3047) * _3048) + _2852;
        _2968 = (((((_3028 * _2677) + _1413) * cbLight._m0[_2979].z) * _3047) * _3048) + _2854;
    }
    float _3182;
    float _3184;
    float _3186;
    float _3188;
    float _3190;
    float _3192;
    if (_2482.y == 0u)
    {
        float _3123 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _3124 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _3123;
        float _3125 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _3123;
        float _3126 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _3123;
        uvec4 _3138 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3139 = _3138.x;
        uint _3150 = uint((float(_3138.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1348) / _3139))) + floor(float(uint(cbSceneParam._m0[85u].x * _1347) / _3139)));
        float _3160 = (log2(_3126 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3161 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0));
        uint _3164 = uint(isnan(14.0) ? _3161 : (isnan(_3161) ? 14.0 : min(_3161, 14.0)));
        uvec4 _3169 = texelFetch(g_lightClusterGridBuffer, int(((_3164 << 2u) + (_3150 << 6u)) >> 2u));
        uint _3170 = _3169.x;
        uint _3171 = _3138.z;
        float _3275;
        float _3277;
        float _3279;
        float _3281;
        float _3283;
        float _3285;
        if (((((1u << ((_3171 >> 4u) & 15u)) + 4294967295u) & _3170) == 0u) || ((_3171 & 240u) == 0u))
        {
            _3275 = 0.0;
            _3277 = 0.0;
            _3279 = 0.0;
            _3281 = 0.0;
            _3283 = 0.0;
            _3285 = 0.0;
        }
        else
        {
            float _3276;
            float _3278;
            float _3280;
            float _3282;
            float _3284;
            float _3286;
            float _3419 = 0.0;
            float _3420 = 0.0;
            float _3421 = 0.0;
            float _3422 = 0.0;
            float _3423 = 0.0;
            float _3424 = 0.0;
            uint _3425 = 0u;
            uint _3434;
            bool _3435;
            for (;;)
            {
                _3434 = texelFetch(g_lightClassification, int((((_3164 << 5u) + (_3150 << 9u)) + (_3425 << 2u)) >> 2u)).x;
                _3435 = _3434 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3435)
                {
                    frontier_phi_63_pred = _3424;
                    frontier_phi_63_pred_1 = _3423;
                    frontier_phi_63_pred_2 = _3422;
                    frontier_phi_63_pred_3 = _3421;
                    frontier_phi_63_pred_4 = _3420;
                    frontier_phi_63_pred_5 = _3419;
                }
                else
                {
                    float _3543;
                    float _3544;
                    float _3545;
                    float _3546;
                    float _3547;
                    float _3548;
                    uint _3549;
                    _3543 = _3419;
                    _3544 = _3420;
                    _3545 = _3421;
                    _3546 = _3422;
                    _3547 = _3423;
                    _3548 = _3424;
                    _3549 = _3434;
                    float _3475;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    for (;;)
                    {
                        uint _3553 = uint(findLSB(_3549)) + (_3425 << 5u);
                        uint _3550 = (_3549 + 4294967295u) & _3549;
                        uint _3555 = _3553 * 48u;
                        vec4 _3569 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3555)).x, texelFetch(g_PointLightRenderingBuffer, int(_3555 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3555 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3555 + 3u)).x));
                        uint _3575 = (_3553 * 48u) + 4u;
                        vec4 _3588 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3575)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3575 + 3u)).x));
                        uint _3594 = (_3553 * 48u) + 8u;
                        vec3 _3605 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3594)).x, texelFetch(g_PointLightRenderingBuffer, int(_3594 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3594 + 2u)).x));
                        float _3609 = _3569.x - _3124;
                        float _3610 = _3569.y - _3125;
                        float _3611 = _3569.z - _3126;
                        float _3612 = dot(vec3(_3609, _3610, _3611), vec3(_3609, _3610, _3611));
                        float _3615 = inversesqrt(_3612);
                        float _3616 = _3615 * _3609;
                        float _3617 = _3615 * _3610;
                        float _3618 = _3615 * _3611;
                        float _3619 = dot(vec3(_1366, _1369, _1372), vec3(_3616, _3617, _3618));
                        float _3624 = 1.0 - (_3612 * _3569.w);
                        float _5121 = isnan(0.0) ? _3624 : (isnan(_3624) ? 0.0 : max(_3624, 0.0));
                        float _3625 = isnan(1.0) ? _5121 : (isnan(_5121) ? 1.0 : min(_5121, 1.0));
                        float _3626 = sqrt(_3612) * _3588.w;
                        float _3628 = 1.39999997615814208984375 / (_3626 + 1.39999997615814208984375);
                        float _3629 = _3628 * _3628;
                        float _3632 = ((1.0 - _3629) * _3619) + _3629;
                        float _3635 = _3626 * _3626;
                        float _3639 = ((isnan(0.0) ? _3632 : (isnan(_3632) ? 0.0 : max(_3632, 0.0))) * _3625) / ((_3635 * 0.699999988079071044921875) + 1.0);
                        float _3643 = (-0.0) - _3124;
                        float _3644 = (-0.0) - _3125;
                        float _3645 = (-0.0) - _3126;
                        float _3649 = inversesqrt(dot(vec3(_3643, _3644, _3645), vec3(_3643, _3644, _3645)));
                        float _3650 = _3649 * _3643;
                        float _3651 = _3649 * _3644;
                        float _3652 = _3649 * _3645;
                        float _3660 = exp2(log2(1.0 / ((_3635 * 3.5) + 5.0)) * 0.25);
                        float _3661 = 1.0 - _1441;
                        float _3668 = sqrt(1.0 - ((1.0 - (_3661 * _3661)) * (1.0 - (_3660 * _3660))));
                        float _3669 = _3668 * _3668;
                        float _3670 = _3669 * _3669;
                        float _3671 = _3650 + _3616;
                        float _3672 = _3651 + _3617;
                        float _3673 = _3652 + _3618;
                        float _3677 = inversesqrt(dot(vec3(_3671, _3672, _3673), vec3(_3671, _3672, _3673)));
                        float _3681 = dot(vec3(_1366, _1369, _1372), vec3(_3650, _3651, _3652));
                        float _5137 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                        float _3684 = isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0));
                        float _3685 = dot(vec3(_1366, _1369, _1372), vec3(_3677 * _3671, _3677 * _3672, _3677 * _3673));
                        float _5148 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                        float _3688 = isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0));
                        float _3692 = ((_3688 * _3688) * (_3670 + (-1.0))) + 1.0;
                        float _3693 = _3628 * _3669;
                        float _3694 = _3693 * _3693;
                        float _3697 = ((1.0 - _3694) * _3619) + _3694;
                        float _5159 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                        float _3698 = isnan(1.0) ? _5159 : (isnan(_5159) ? 1.0 : min(_5159, 1.0));
                        float _3699 = 1.0 - _3669;
                        float _3709 = (0.5 / (((_3698 * ((_3684 * _3699) + _3669)) + 9.9999999392252902907785028219223e-09) + (((_3698 * _3699) + _3669) * _3684))) * _3698;
                        float _5170 = isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0));
                        float _3720 = (((_3670 * 3.1415927410125732421875) * (isnan(1.0) ? _5170 : (isnan(_5170) ? 1.0 : min(_5170, 1.0)))) / ((_3692 * _3692) * ((_3635 * 2.1991131305694580078125) + 3.141590118408203125))) * _3625;
                        _3478 = (_3639 * _3588.x) + _3546;
                        _3479 = (_3639 * _3588.y) + _3547;
                        _3480 = (_3639 * _3588.z) + _3548;
                        _3475 = (_3720 * _3605.x) + _3543;
                        _3476 = (_3720 * _3605.y) + _3544;
                        _3477 = (_3720 * _3605.z) + _3545;
                        if (_3550 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3543 = _3475;
                            _3544 = _3476;
                            _3545 = _3477;
                            _3546 = _3478;
                            _3547 = _3479;
                            _3548 = _3480;
                            _3549 = _3550;
                        }
                    }
                    frontier_phi_63_pred = _3480;
                    frontier_phi_63_pred_1 = _3479;
                    frontier_phi_63_pred_2 = _3478;
                    frontier_phi_63_pred_3 = _3477;
                    frontier_phi_63_pred_4 = _3476;
                    frontier_phi_63_pred_5 = _3475;
                }
                _3286 = frontier_phi_63_pred;
                _3284 = frontier_phi_63_pred_1;
                _3282 = frontier_phi_63_pred_2;
                _3280 = frontier_phi_63_pred_3;
                _3278 = frontier_phi_63_pred_4;
                _3276 = frontier_phi_63_pred_5;
                uint _3426 = _3425 + 1u;
                if (_3426 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3419 = _3276;
                    _3420 = _3278;
                    _3421 = _3280;
                    _3422 = _3282;
                    _3423 = _3284;
                    _3424 = _3286;
                    _3425 = _3426;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3275 = _3276;
            _3277 = _3278;
            _3279 = _3280;
            _3281 = _3282;
            _3283 = _3284;
            _3285 = _3286;
        }
        uvec4 _3289 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3290 = _3289.z;
        uint _3292 = (_3290 >> 8u) & 15u;
        float _3387;
        float _3389;
        float _3391;
        float _3393;
        float _3395;
        float _3397;
        if (((4294967295u << _3292) & _3170) == 0u)
        {
            _3387 = _3275;
            _3389 = _3277;
            _3391 = _3279;
            _3393 = _3281;
            _3395 = _3283;
            _3397 = _3285;
        }
        else
        {
            float _3412 = inversesqrt(dot(vec3(_3124, _3125, _3126), vec3(_3124, _3125, _3126)));
            float _3413 = _3412 * _3124;
            float _3414 = _3412 * _3125;
            float _3415 = _3412 * _3126;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_3292 < ((_3290 >> 12u) & 15u))
            {
                float _3388;
                float _3390;
                float _3392;
                float _3394;
                float _3396;
                float _3398;
                float _3526 = _3275;
                float _3527 = _3277;
                float _3528 = _3279;
                float _3529 = _3281;
                float _3530 = _3283;
                float _3531 = _3285;
                uint _3532 = _3292;
                uint _3541;
                bool _3542;
                for (;;)
                {
                    _3541 = texelFetch(g_lightClassification, int((((_3164 << 5u) + (_3150 << 9u)) + (_3532 << 2u)) >> 2u)).x;
                    _3542 = _3541 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3542)
                    {
                        frontier_phi_69_pred = _3531;
                        frontier_phi_69_pred_1 = _3530;
                        frontier_phi_69_pred_2 = _3529;
                        frontier_phi_69_pred_3 = _3528;
                        frontier_phi_69_pred_4 = _3527;
                        frontier_phi_69_pred_5 = _3526;
                    }
                    else
                    {
                        float _3725;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3729;
                        float _3730;
                        float _4018;
                        float _4019;
                        float _4020;
                        float _4021;
                        float _4022;
                        float _4023;
                        float _3738 = _3526;
                        float _3739 = _3527;
                        float _3740 = _3528;
                        float _3741 = _3529;
                        float _3742 = _3530;
                        float _3743 = _3531;
                        uint _3744 = _3541;
                        uint _3745;
                        vec4 _3770;
                        float _3771;
                        vec4 _3786;
                        vec3 _3798;
                        vec4 _3813;
                        vec4 _3828;
                        float _3874;
                        bool _3875;
                        for (;;)
                        {
                            uint _3755 = ((_3532 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3744));
                            _3745 = (_3744 + 4294967295u) & _3744;
                            uint _3757 = _3755 * 40u;
                            _3770 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3757)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 3u)).x));
                            _3771 = _3770.w;
                            uint _3773 = (_3755 * 40u) + 4u;
                            _3786 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3773)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 3u)).x));
                            uint _3788 = (_3755 * 40u) + 8u;
                            _3798 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3788)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 2u)).x));
                            uint _3800 = (_3755 * 40u) + 16u;
                            _3813 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3800)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 3u)).x));
                            uint _3815 = (_3755 * 40u) + 20u;
                            _3828 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3815)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3815 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3815 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3815 + 3u)).x));
                            uint _3830 = (_3755 * 40u) + 24u;
                            vec4 _3843 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3830)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3830 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3830 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3830 + 3u)).x));
                            uint _3849 = (_3755 * 40u) + 28u;
                            vec4 _3862 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3849)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3849 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3849 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3849 + 3u)).x));
                            _3874 = fma(_3126, _3862.z, fma(_3125, _3862.y, _3862.x * _3124)) + _3862.w;
                            _3875 = !((fma(_3126, _3843.z, fma(_3125, _3843.y, _3843.x * _3124)) + _3843.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3875)
                            {
                                float _3902 = _3770.x - _3124;
                                float _3903 = _3770.y - _3125;
                                float _3904 = _3770.z - _3126;
                                float _3905 = dot(vec3(_3902, _3903, _3904), vec3(_3902, _3903, _3904));
                                float _3908 = inversesqrt(_3905);
                                float _3909 = _3908 * _3902;
                                float _3910 = _3908 * _3903;
                                float _3911 = _3908 * _3904;
                                float _3915 = 1.0 - (_3905 / (_3771 * _3771));
                                float _5181 = isnan(0.0) ? _3915 : (isnan(_3915) ? 0.0 : max(_3915, 0.0));
                                float _3916 = isnan(1.0) ? _5181 : (isnan(_5181) ? 1.0 : min(_5181, 1.0));
                                float _3920 = sqrt(_3905) * _3786.w;
                                float _3922 = 1.39999997615814208984375 / (_3920 + 1.39999997615814208984375);
                                float _3923 = _3922 * _3922;
                                float _3926 = ((1.0 - _3923) * dot(vec3(_3909, _3910, _3911), vec3(_1366, _1369, _1372))) + _3923;
                                float _3929 = _3920 * _3920;
                                float _3933 = (fma(_3126, _3813.z, fma(_3125, _3813.y, _3813.x * _3124)) + _3813.w) / _3874;
                                float _3934 = (fma(_3126, _3828.z, fma(_3125, _3828.y, _3828.x * _3124)) + _3828.w) / _3874;
                                float _3938 = 1.0 - dot(vec2(_3933, _3934), vec2(_3933, _3934));
                                float _5197 = isnan(0.0) ? _3938 : (isnan(_3938) ? 0.0 : max(_3938, 0.0));
                                float _3939 = isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0));
                                float _3940 = _3939 * (((isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0))) * _3916) / ((_3929 * 0.699999988079071044921875) + 1.0));
                                float _3952 = exp2(log2(1.0 / ((_3929 * 3.5) + 5.0)) * 0.25);
                                float _3953 = 1.0 - _1441;
                                float _3960 = sqrt(1.0 - ((1.0 - (_3953 * _3953)) * (1.0 - (_3952 * _3952))));
                                float _3961 = _3960 * _3960;
                                float _3962 = _3961 * _3961;
                                float _3963 = _3909 - _3413;
                                float _3964 = _3910 - _3414;
                                float _3965 = _3911 - _3415;
                                float _3969 = inversesqrt(dot(vec3(_3963, _3964, _3965), vec3(_3963, _3964, _3965)));
                                float _3973 = dot(vec3(_1366, _1369, _1372), vec3((-0.0) - _3413, (-0.0) - _3414, (-0.0) - _3415));
                                float _5208 = isnan(0.0) ? _3973 : (isnan(_3973) ? 0.0 : max(_3973, 0.0));
                                float _3976 = isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0));
                                float _3977 = dot(vec3(_1366, _1369, _1372), vec3(_3969 * _3963, _3969 * _3964, _3969 * _3965));
                                float _5219 = isnan(0.0) ? _3977 : (isnan(_3977) ? 0.0 : max(_3977, 0.0));
                                float _3980 = isnan(1.0) ? _5219 : (isnan(_5219) ? 1.0 : min(_5219, 1.0));
                                float _3984 = ((_3980 * _3980) * (_3962 + (-1.0))) + 1.0;
                                float _3985 = _3922 * _3961;
                                float _3986 = _3985 * _3985;
                                float _3992 = ((1.0 - _3986) * dot(vec3(_1366, _1369, _1372), vec3(_3909, _3910, _3911))) + _3986;
                                float _5230 = isnan(0.0) ? _3992 : (isnan(_3992) ? 0.0 : max(_3992, 0.0));
                                float _3993 = isnan(1.0) ? _5230 : (isnan(_5230) ? 1.0 : min(_5230, 1.0));
                                float _3994 = 1.0 - _3961;
                                float _4004 = (0.5 / (((_3993 * ((_3976 * _3994) + _3961)) + 9.9999999392252902907785028219223e-09) + (((_3993 * _3994) + _3961) * _3976))) * _3993;
                                float _5241 = isnan(0.0) ? _4004 : (isnan(_4004) ? 0.0 : max(_4004, 0.0));
                                float _4014 = (_3939 * _3916) * (((_3962 * 3.1415927410125732421875) * (isnan(1.0) ? _5241 : (isnan(_5241) ? 1.0 : min(_5241, 1.0)))) / ((_3984 * _3984) * ((_3929 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3940 * _3786.z;
                                frontier_phi_75_pred_1 = _3940 * _3786.y;
                                frontier_phi_75_pred_2 = _3940 * _3786.x;
                                frontier_phi_75_pred_3 = _4014 * _3798.z;
                                frontier_phi_75_pred_4 = _4014 * _3798.y;
                                frontier_phi_75_pred_5 = _4014 * _3798.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _4023 = frontier_phi_75_pred;
                            _4022 = frontier_phi_75_pred_1;
                            _4021 = frontier_phi_75_pred_2;
                            _4020 = frontier_phi_75_pred_3;
                            _4019 = frontier_phi_75_pred_4;
                            _4018 = frontier_phi_75_pred_5;
                            _3728 = _4021 + _3741;
                            _3729 = _4022 + _3742;
                            _3730 = _4023 + _3743;
                            _3725 = _4018 + _3738;
                            _3726 = _4019 + _3739;
                            _3727 = _4020 + _3740;
                            if (_3745 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3738 = _3725;
                                _3739 = _3726;
                                _3740 = _3727;
                                _3741 = _3728;
                                _3742 = _3729;
                                _3743 = _3730;
                                _3744 = _3745;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3730;
                        frontier_phi_69_pred_1 = _3729;
                        frontier_phi_69_pred_2 = _3728;
                        frontier_phi_69_pred_3 = _3727;
                        frontier_phi_69_pred_4 = _3726;
                        frontier_phi_69_pred_5 = _3725;
                    }
                    _3398 = frontier_phi_69_pred;
                    _3396 = frontier_phi_69_pred_1;
                    _3394 = frontier_phi_69_pred_2;
                    _3392 = frontier_phi_69_pred_3;
                    _3390 = frontier_phi_69_pred_4;
                    _3388 = frontier_phi_69_pred_5;
                    uint _3533 = _3532 + 1u;
                    if (_3533 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3526 = _3388;
                        _3527 = _3390;
                        _3528 = _3392;
                        _3529 = _3394;
                        _3530 = _3396;
                        _3531 = _3398;
                        _3532 = _3533;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _3398;
                frontier_phi_57_58_ladder_1 = _3396;
                frontier_phi_57_58_ladder_2 = _3394;
                frontier_phi_57_58_ladder_3 = _3392;
                frontier_phi_57_58_ladder_4 = _3390;
                frontier_phi_57_58_ladder_5 = _3388;
            }
            else
            {
                frontier_phi_57_58_ladder = _3285;
                frontier_phi_57_58_ladder_1 = _3283;
                frontier_phi_57_58_ladder_2 = _3281;
                frontier_phi_57_58_ladder_3 = _3279;
                frontier_phi_57_58_ladder_4 = _3277;
                frontier_phi_57_58_ladder_5 = _3275;
            }
            _3387 = frontier_phi_57_58_ladder_5;
            _3389 = frontier_phi_57_58_ladder_4;
            _3391 = frontier_phi_57_58_ladder_3;
            _3393 = frontier_phi_57_58_ladder_2;
            _3395 = frontier_phi_57_58_ladder_1;
            _3397 = frontier_phi_57_58_ladder;
        }
        float _3402 = isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0));
        _3182 = (_3402 * _3393) + _2616;
        _3184 = (_3402 * _3395) + _2618;
        _3186 = (_3402 * _3397) + _2620;
        _3188 = ((_3387 * _1410) * _3402) + _2964;
        _3190 = ((_3389 * _1412) * _3402) + _2966;
        _3192 = ((_3391 * _1413) * _3402) + _2968;
    }
    else
    {
        _3182 = _2616;
        _3184 = _2618;
        _3186 = _2620;
        _3188 = _2964;
        _3190 = _2966;
        _3192 = _2968;
    }
    float _5257 = isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0));
    float _5268 = isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0));
    float _5279 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
    float _5290 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
    float _3210 = ((isnan(1.0) ? _5257 : (isnan(_5257) ? 1.0 : min(_5257, 1.0))) * (_3182 + ((isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0))) * _1425))) + ((_3188 + ((isnan(0.0) ? _2448 : (isnan(_2448) ? 0.0 : max(_2448, 0.0))) * _2234)) * cbPerFrame._m0[3u].x);
    float _3211 = ((isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0))) * (_3184 + ((isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0))) * _1425))) + ((_3190 + ((isnan(0.0) ? _2451 : (isnan(_2451) ? 0.0 : max(_2451, 0.0))) * _2234)) * cbPerFrame._m0[3u].x);
    float _3212 = ((isnan(1.0) ? _5279 : (isnan(_5279) ? 1.0 : min(_5279, 1.0))) * (_3186 + ((isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0))) * _1425))) + ((_3192 + ((isnan(0.0) ? _2454 : (isnan(_2454) ? 0.0 : max(_2454, 0.0))) * _2234)) * cbPerFrame._m0[3u].x);
    float _3220 = cbInstanceData._m0[_1385 + 6u].w * (isnan(1.0) ? _5290 : (isnan(_5290) ? 1.0 : min(_5290, 1.0)));
    float _3225 = _1347 / cbSceneParam._m0[86u].x;
    float _3226 = _1348 / cbSceneParam._m0[86u].y;
    vec4 _3240 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3225, _3226, (log2((isnan(cbSceneParam._m0[77u].w) ? _1282 : (isnan(_1282) ? cbSceneParam._m0[77u].w : min(_1282, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3242 = _3240.x;
    float _3243 = _3240.y;
    float _3244 = _3240.z;
    float _3245 = _3240.w;
    float _3337;
    float _3339;
    float _3341;
    float _3343;
    if (_1282 > cbSceneParam._m0[78u].w)
    {
        float _3300 = isnan(_1282) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1282 : min(cbSceneParam._m0[80u].w, _1282));
        float _3301 = _3300 / _1282;
        float _3312 = _3301 * _1332;
        float _3313 = _1333 * _3301;
        float _3314 = (-0.0) - _3313;
        float _3315 = _3301 * _1334;
        float _3317 = (cbSceneParam._m0[77u].w * _3314) / _3300;
        float _3318 = _3317 + cbSceneParam._m0[79u].w;
        float _3319 = cbSceneParam._m0[79u].w - _3313;
        float _3325 = sqrt(((_3312 * _3312) + (_3313 * _3313)) + (_3315 * _3315));
        float _3328 = (1.0 - (cbSceneParam._m0[77u].w / _3300)) * _3325;
        float _3333 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3335 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3488;
        if (abs((_3314 - _3317) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3488 = ((((_3318 > 0.0) ? exp2(_3333 * _3318) : (2.0 - exp2(_3335 * _3318))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3328;
        }
        else
        {
            float _3448 = 1.0 / cbSceneParam._m0[80u].x;
            float _3449 = isnan(_3319) ? _3318 : (isnan(_3318) ? _3319 : max(_3318, _3319));
            float _3450 = isnan(_3319) ? _3318 : (isnan(_3318) ? _3319 : min(_3318, _3319));
            float _3459 = isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : min(_3449, 0.0));
            float _3460 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : min(_3450, 0.0));
            _3488 = ((abs(_3325 / _3314) * cbSceneParam._m0[80u].y) * ((((_3459 - _3460) * 2.0) - ((exp2(_3333 * (isnan(0.0) ? _3449 : (isnan(_3449) ? 0.0 : max(_3449, 0.0)))) - exp2(_3333 * (isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0))))) * _3448)) - ((exp2(_3335 * _3459) - exp2(_3335 * _3460)) * _3448))) + (_3328 * cbSceneParam._m0[80u].z);
        }
        vec4 _3490 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3225, _3226, 1.0), 0.0);
        float _3499 = exp2((_3488 * (-1.44269502162933349609375)) * (1.0 - _3490.w));
        float _3500 = log2(_3499);
        float _3516 = log2(_3245);
        _3337 = (exp2(_3516 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3500 * cbSceneParam._m0[78u].x)) * _3490.x) / cbSceneParam._m0[78u].x)) + _3242;
        _3339 = (exp2(_3516 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3500 * cbSceneParam._m0[78u].y)) * _3490.y) / cbSceneParam._m0[78u].y)) + _3243;
        _3341 = (exp2(_3516 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3500 * cbSceneParam._m0[78u].z)) * _3490.z) / cbSceneParam._m0[78u].z)) + _3244;
        _3343 = _3499 * _3245;
    }
    else
    {
        _3337 = _3242;
        _3339 = _3243;
        _3341 = _3244;
        _3343 = _3245;
    }
    float _3355 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3356 = _3355 == 3.0;
    float _3357 = log2(_3343);
    float _3364 = exp2(_3357 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : max(_3210, 0.0)));
    float _3365 = exp2(_3357 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _3211 : (isnan(_3211) ? 0.0 : max(_3211, 0.0)));
    float _3366 = exp2(_3357 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _3212 : (isnan(_3212) ? 0.0 : max(_3212, 0.0)));
    float _3375 = (_3355 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3375 * (_3356 ? _3364 : (_3364 + (cbSceneParam._m0[72u].w * _3337)));
    SV_Target.y = _3375 * (_3356 ? _3365 : (_3365 + (cbSceneParam._m0[72u].w * _3339)));
    SV_Target.z = _3375 * (_3356 ? _3366 : (_3366 + (cbSceneParam._m0[72u].w * _3341)));
    SV_Target.w = _3220;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3220;
}


