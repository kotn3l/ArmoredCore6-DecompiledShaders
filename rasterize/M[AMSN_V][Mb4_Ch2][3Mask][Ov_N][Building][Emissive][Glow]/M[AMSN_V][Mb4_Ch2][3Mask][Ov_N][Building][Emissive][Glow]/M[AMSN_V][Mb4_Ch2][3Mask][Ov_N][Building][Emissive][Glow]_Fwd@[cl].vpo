#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec4 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    float _217 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _250 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _252 = texelFetch(g_InstanceIndexBuffer, int(_250));
    uint _253 = _252.x;
    uint _263 = (floatBitsToUint(cbInstanceData._m0[(_253 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _270 = _263 + 1u;
    uint _277 = _263 + 2u;
    precise float _284 = POSITION.x * cbObjMatrix._m0[_263].x;
    precise float _285 = POSITION.y * cbObjMatrix._m0[_263].y;
    precise float _286 = _285 + _284;
    precise float _287 = POSITION.z * cbObjMatrix._m0[_263].z;
    precise float _288 = _287 + _286;
    precise float _289 = 1.0 * cbObjMatrix._m0[_263].w;
    precise float _291 = _289 + _288;
    precise float _292 = POSITION.x * cbObjMatrix._m0[_270].x;
    precise float _293 = POSITION.y * cbObjMatrix._m0[_270].y;
    precise float _294 = _293 + _292;
    precise float _295 = POSITION.z * cbObjMatrix._m0[_270].z;
    precise float _296 = _295 + _294;
    precise float _297 = 1.0 * cbObjMatrix._m0[_270].w;
    precise float _298 = _297 + _296;
    precise float _299 = POSITION.x * cbObjMatrix._m0[_277].x;
    precise float _300 = POSITION.y * cbObjMatrix._m0[_277].y;
    precise float _301 = _300 + _299;
    precise float _302 = POSITION.z * cbObjMatrix._m0[_277].z;
    precise float _303 = _302 + _301;
    precise float _304 = 1.0 * cbObjMatrix._m0[_277].w;
    precise float _305 = _304 + _303;
    precise float _340 = _291 - cbSceneParam._m0[3u].x;
    precise float _341 = _298 - cbSceneParam._m0[3u].y;
    precise float _342 = _305 - cbSceneParam._m0[3u].z;
    precise float _370 = _340 * cbSceneParam._m0[24u].x;
    precise float _371 = _341 * cbSceneParam._m0[24u].y;
    precise float _372 = _371 + _370;
    precise float _373 = _342 * cbSceneParam._m0[24u].z;
    precise float _374 = _373 + _372;
    precise float _375 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _376 = _375 + _374;
    precise float _377 = _340 * cbSceneParam._m0[25u].x;
    precise float _378 = _341 * cbSceneParam._m0[25u].y;
    precise float _379 = _378 + _377;
    precise float _380 = _342 * cbSceneParam._m0[25u].z;
    precise float _381 = _380 + _379;
    precise float _382 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _383 = _382 + _381;
    precise float _384 = _340 * cbSceneParam._m0[26u].x;
    precise float _385 = _341 * cbSceneParam._m0[26u].y;
    precise float _386 = _385 + _384;
    precise float _387 = _342 * cbSceneParam._m0[26u].z;
    precise float _388 = _387 + _386;
    precise float _389 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _390 = _389 + _388;
    precise float _391 = _340 * cbSceneParam._m0[27u].x;
    precise float _392 = _341 * cbSceneParam._m0[27u].y;
    precise float _393 = _392 + _391;
    precise float _394 = _342 * cbSceneParam._m0[27u].z;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _397 = _396 + _395;
    gl_Position.x = _376;
    gl_Position.y = _383;
    gl_Position.z = _390;
    gl_Position.w = _397;
    POSITION_1.x = _376;
    POSITION_1.y = _383;
    POSITION_1.z = _390;
    POSITION_1.w = _397;
    NORMAL_1.x = fma(_220, cbObjMatrix._m0[_263].z, fma(_219, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _217));
    NORMAL_1.y = fma(_220, cbObjMatrix._m0[_270].z, fma(_219, cbObjMatrix._m0[_270].y, cbObjMatrix._m0[_270].x * _217));
    NORMAL_1.z = fma(_220, cbObjMatrix._m0[_277].z, fma(_219, cbObjMatrix._m0[_277].y, cbObjMatrix._m0[_277].x * _217));
    NORMAL_1.w = float(_253);
    TANGENT_1.x = fma(_232, cbObjMatrix._m0[_263].z, fma(_231, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _230));
    TANGENT_1.y = fma(_232, cbObjMatrix._m0[_270].z, fma(_231, cbObjMatrix._m0[_270].y, cbObjMatrix._m0[_270].x * _230));
    TANGENT_1.z = fma(_232, cbObjMatrix._m0[_277].z, fma(_231, cbObjMatrix._m0[_277].y, cbObjMatrix._m0[_277].x * _230));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_244, cbObjMatrix._m0[_263].z, fma(_243, cbObjMatrix._m0[_263].y, cbObjMatrix._m0[_263].x * _242));
    TANGENT_2_1.y = fma(_244, cbObjMatrix._m0[_270].z, fma(_243, cbObjMatrix._m0[_270].y, cbObjMatrix._m0[_270].x * _242));
    TANGENT_2_1.z = fma(_244, cbObjMatrix._m0[_277].z, fma(_243, cbObjMatrix._m0[_277].y, cbObjMatrix._m0[_277].x * _242));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_5.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_5.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_5.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_5.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_7.x = TEXCOORD_2.x;
    TEXCOORD_7.y = TEXCOORD_2.y;
    TEXCOORD_7.z = TEXCOORD_2.z;
    TEXCOORD_7.w = COLOR_1.x;
    TEXCOORD_10.x = TEXCOORD_3.x;
    TEXCOORD_10.y = TEXCOORD_3.y;
    TEXCOORD_10.z = TEXCOORD_3.z;
    TEXCOORD_10.w = TEXCOORD_1.x;
    TEXCOORD_13.x = TEXCOORD_4.x;
    TEXCOORD_13.y = TEXCOORD_4.y;
    TEXCOORD_13.z = TEXCOORD_4.z;
    TEXCOORD_13.w = TEXCOORD_1.y;
}


