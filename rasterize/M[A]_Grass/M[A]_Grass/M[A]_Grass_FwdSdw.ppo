#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_Grass_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _700;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _173;
    float _174;
    float _175;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _173 = (-0.0) - _166;
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
    }
    else
    {
        _173 = _166;
        _174 = _167;
        _175 = _168;
    }
    vec4 _189 = texture(sampler2D(M_A_Grass_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _192 = _189.x;
    float _193 = _189.y;
    float _194 = _189.z;
    float _198 = inversesqrt(dot(vec3(_173, _174, _175), vec3(_173, _174, _175)));
    float _199 = _198 * _173;
    float _200 = _198 * _174;
    float _201 = _198 * _175;
    float _3094 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _3105 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _3116 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _221 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _264 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _274 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _264);
    float _275 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _264);
    float _276 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _264);
    float _280 = inversesqrt(dot(vec3(_274, _275, _276), vec3(_274, _275, _276)));
    float _281 = _274 * _280;
    float _282 = _275 * _280;
    float _283 = _276 * _280;
    float _289 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _290 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _311 = fma(_201, cbSceneParam._m0[5u].z, fma(_200, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _199));
    float _314 = fma(_201, cbSceneParam._m0[6u].z, fma(_200, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _199));
    float _317 = fma(_201, cbSceneParam._m0[7u].z, fma(_200, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _199));
    uint _330 = uint(roundEven(NORMAL.w)) * 13u;
    uint _333 = (_330 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _339 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3094 : (isnan(_3094) ? 1.0 : min(_3094, 1.0)))) * cbInstanceData._m0[_333].x;
    float _340 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3105 : (isnan(_3105) ? 1.0 : min(_3105, 1.0)))) * cbInstanceData._m0[_333].y;
    float _341 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3116 : (isnan(_3116) ? 1.0 : min(_3116, 1.0)))) * cbInstanceData._m0[_333].z;
    float _3127 = isnan(0.0) ? _339 : (isnan(_339) ? 0.0 : max(_339, 0.0));
    float _342 = isnan(1.0) ? _3127 : (isnan(_3127) ? 1.0 : min(_3127, 1.0));
    float _3138 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _343 = isnan(1.0) ? _3138 : (isnan(_3138) ? 1.0 : min(_3138, 1.0));
    float _3149 = isnan(0.0) ? _341 : (isnan(_341) ? 0.0 : max(_341, 0.0));
    float _344 = isnan(1.0) ? _3149 : (isnan(_3149) ? 1.0 : min(_3149, 1.0));
    vec4 _353 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _289, cbSceneParam._m0[86u].y * _290));
    float _356 = _353.x * TEXCOORD.z;
    float _357 = dot(vec3(_199, _200, _201), vec3(_281, _282, _283));
    float _360 = _357 * 2.0;
    float _365 = (_360 * _199) - _281;
    float _366 = (_360 * _200) - _282;
    float _367 = (_360 * _201) - _283;
    float _389 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _393 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _397 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _699;
    float _701;
    float _702;
    float _703;
    float _704;
    float _705;
    float _706;
    float _707;
    float _708;
    float _709;
    float _710;
    float _711;
    float _712;
    float _713;
    float _714;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _424 = fma(_397, cbModelParam._m0[26u].z, fma(_393, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _389));
        float _428 = fma(_397, cbModelParam._m0[27u].z, fma(_393, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _389));
        float _432 = fma(_397, cbModelParam._m0[28u].z, fma(_393, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _389));
        float _457 = _389 + _199;
        float _458 = _393 + _200;
        float _459 = _397 + _201;
        float _469 = fma(_459, cbModelParam._m0[26u].z, fma(_458, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _457)) - _424;
        float _470 = fma(_459, cbModelParam._m0[27u].z, fma(_458, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _457)) - _428;
        float _471 = fma(_459, cbModelParam._m0[28u].z, fma(_458, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _457)) - _432;
        float _475 = inversesqrt(dot(vec3(_469, _470, _471), vec3(_469, _470, _471)));
        float _488 = ((_475 * _469) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_424 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _489 = ((_475 * _470) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_428 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _490 = ((_475 * _471) / cbModelParam._m0[34u].z) + ((((((_432 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _493 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_488, _489, _490), 0.0);
        vec4 _500 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_488, _489, _490), 0.0);
        vec4 _507 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_488, _489, _490), 0.0);
        vec4 _514 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_488, _489, _490), 0.0);
        float _527 = exp2((_493.w + (-0.5)) * 20.0) * 2.0;
        float _528 = _527 * (_493.x + (-0.5));
        float _529 = _527 * (_493.y + (-0.5));
        float _530 = _527 * (_493.z + (-0.5));
        float _537 = exp2((_500.w + (-0.5)) * 20.0) * 2.0;
        float _538 = _537 * (_500.x + (-0.5));
        float _539 = _537 * (_500.y + (-0.5));
        float _540 = _537 * (_500.z + (-0.5));
        float _547 = exp2((_507.w + (-0.5)) * 20.0) * 2.0;
        float _548 = _547 * (_507.x + (-0.5));
        float _549 = _547 * (_507.y + (-0.5));
        float _550 = _547 * (_507.z + (-0.5));
        float _557 = exp2((_514.w + (-0.5)) * 20.0) * 2.0;
        float _558 = _557 * (_514.x + (-0.5));
        float _559 = _557 * (_514.y + (-0.5));
        float _560 = _557 * (_514.z + (-0.5));
        float _561 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
        float _562 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
        float _563 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
        float _564 = _528 * 0.5;
        float _565 = _538 * 0.5;
        float _566 = _548 * 0.5;
        float _567 = dot(vec3(_564, _565, _566), vec3(_564, _565, _566));
        float _572 = (_567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_567);
        float _581 = (dot(vec3(_199, _200, _201), vec3(_572 * _564, _572 * _565, _572 * _566)) + 1.0) * 0.5;
        float _3175 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
        float _591 = sqrt(((_565 * _565) + (_564 * _564)) + (_566 * _566)) / (_561 + 9.9999997473787516355514526367188e-06);
        float _3186 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
        float _592 = isnan(1.0) ? _3186 : (isnan(_3186) ? 1.0 : min(_3186, 1.0));
        float _593 = _592 * 2.0;
        float _597 = (1.0 - _592) / (_592 + 1.0);
        float _3197 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
        float _598 = isnan(1.0) ? _3197 : (isnan(_3197) ? 1.0 : min(_3197, 1.0));
        float _607 = ((((1.0 - _598) * (_593 + 2.0)) * exp2(log2(isnan(1.0) ? _3175 : (isnan(_3175) ? 1.0 : min(_3175, 1.0))) * (_593 + 1.0))) + _598) * _561;
        float _608 = _529 * 0.5;
        float _609 = _539 * 0.5;
        float _610 = _549 * 0.5;
        float _611 = dot(vec3(_608, _609, _610), vec3(_608, _609, _610));
        float _616 = (_611 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_611);
        float _624 = (dot(vec3(_199, _200, _201), vec3(_616 * _608, _616 * _609, _616 * _610)) + 1.0) * 0.5;
        float _3208 = isnan(0.0) ? _624 : (isnan(_624) ? 0.0 : max(_624, 0.0));
        float _633 = sqrt(((_609 * _609) + (_608 * _608)) + (_610 * _610)) / (_562 + 9.9999997473787516355514526367188e-06);
        float _3219 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
        float _634 = isnan(1.0) ? _3219 : (isnan(_3219) ? 1.0 : min(_3219, 1.0));
        float _635 = _634 * 2.0;
        float _639 = (1.0 - _634) / (_634 + 1.0);
        float _3230 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
        float _640 = isnan(1.0) ? _3230 : (isnan(_3230) ? 1.0 : min(_3230, 1.0));
        float _649 = ((((1.0 - _640) * (_635 + 2.0)) * exp2(log2(isnan(1.0) ? _3208 : (isnan(_3208) ? 1.0 : min(_3208, 1.0))) * (_635 + 1.0))) + _640) * _562;
        float _650 = _530 * 0.5;
        float _651 = _540 * 0.5;
        float _652 = _550 * 0.5;
        float _653 = dot(vec3(_650, _651, _652), vec3(_650, _651, _652));
        float _658 = (_653 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_653);
        float _666 = (dot(vec3(_199, _200, _201), vec3(_658 * _650, _658 * _651, _658 * _652)) + 1.0) * 0.5;
        float _3241 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _675 = sqrt(((_651 * _651) + (_650 * _650)) + (_652 * _652)) / (_563 + 9.9999997473787516355514526367188e-06);
        float _3252 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        float _676 = isnan(1.0) ? _3252 : (isnan(_3252) ? 1.0 : min(_3252, 1.0));
        float _677 = _676 * 2.0;
        float _681 = (1.0 - _676) / (_676 + 1.0);
        float _3263 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _682 = isnan(1.0) ? _3263 : (isnan(_3263) ? 1.0 : min(_3263, 1.0));
        float _691 = ((((1.0 - _682) * (_677 + 2.0)) * exp2(log2(isnan(1.0) ? _3241 : (isnan(_3241) ? 1.0 : min(_3241, 1.0))) * (_677 + 1.0))) + _682) * _563;
        _699 = _530;
        _701 = _529;
        _702 = _528;
        _703 = _540;
        _704 = _539;
        _705 = _538;
        _706 = _550;
        _707 = _549;
        _708 = _548;
        _709 = _563;
        _710 = _562;
        _711 = _561;
        _712 = cbModelParam._m0[36u].z * (isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0)));
        _713 = cbModelParam._m0[36u].z * (isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0)));
        _714 = cbModelParam._m0[36u].z * (isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0)));
    }
    else
    {
        _699 = _700;
        _701 = _700;
        _702 = _700;
        _703 = _700;
        _704 = _700;
        _705 = _700;
        _706 = _700;
        _707 = _700;
        _708 = _700;
        _709 = _700;
        _710 = _700;
        _711 = _700;
        _712 = 0.0;
        _713 = 0.0;
        _714 = 0.0;
    }
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    float _1015;
    float _1016;
    float _1017;
    float _1018;
    float _1019;
    float _1020;
    float _1021;
    float _1022;
    float _1023;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _740 = fma(_397, cbModelParam._m0[30u].z, fma(_393, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _389));
        float _744 = fma(_397, cbModelParam._m0[31u].z, fma(_393, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _389));
        float _748 = fma(_397, cbModelParam._m0[32u].z, fma(_393, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _389));
        float _771 = _389 + _199;
        float _772 = _393 + _200;
        float _773 = _397 + _201;
        float _783 = fma(_773, cbModelParam._m0[30u].z, fma(_772, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _771)) - _740;
        float _784 = fma(_773, cbModelParam._m0[31u].z, fma(_772, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _771)) - _744;
        float _785 = fma(_773, cbModelParam._m0[32u].z, fma(_772, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _771)) - _748;
        float _789 = inversesqrt(dot(vec3(_783, _784, _785), vec3(_783, _784, _785)));
        float _802 = ((_789 * _783) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_740 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _803 = ((_789 * _784) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_744 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _804 = ((_789 * _785) / cbModelParam._m0[35u].z) + ((((((_748 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _806 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_802, _803, _804), 0.0);
        vec4 _813 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_802, _803, _804), 0.0);
        vec4 _820 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_802, _803, _804), 0.0);
        vec4 _827 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_802, _803, _804), 0.0);
        float _839 = exp2((_806.w + (-0.5)) * 20.0) * 2.0;
        float _840 = _839 * (_806.x + (-0.5));
        float _841 = _839 * (_806.y + (-0.5));
        float _842 = _839 * (_806.z + (-0.5));
        float _849 = exp2((_813.w + (-0.5)) * 20.0) * 2.0;
        float _850 = _849 * (_813.x + (-0.5));
        float _851 = _849 * (_813.y + (-0.5));
        float _852 = _849 * (_813.z + (-0.5));
        float _859 = exp2((_820.w + (-0.5)) * 20.0) * 2.0;
        float _860 = _859 * (_820.x + (-0.5));
        float _861 = _859 * (_820.y + (-0.5));
        float _862 = _859 * (_820.z + (-0.5));
        float _869 = exp2((_827.w + (-0.5)) * 20.0) * 2.0;
        float _870 = _869 * (_827.x + (-0.5));
        float _871 = _869 * (_827.y + (-0.5));
        float _872 = _869 * (_827.z + (-0.5));
        float _873 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
        float _874 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        float _875 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
        float _876 = _840 * 0.5;
        float _877 = _850 * 0.5;
        float _878 = _860 * 0.5;
        float _879 = dot(vec3(_876, _877, _878), vec3(_876, _877, _878));
        float _884 = (_879 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_879);
        float _892 = (dot(vec3(_199, _200, _201), vec3(_884 * _876, _884 * _877, _884 * _878)) + 1.0) * 0.5;
        float _3304 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
        float _901 = sqrt(((_877 * _877) + (_876 * _876)) + (_878 * _878)) / (_873 + 9.9999997473787516355514526367188e-06);
        float _3315 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
        float _902 = isnan(1.0) ? _3315 : (isnan(_3315) ? 1.0 : min(_3315, 1.0));
        float _903 = _902 * 2.0;
        float _907 = (1.0 - _902) / (_902 + 1.0);
        float _3326 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
        float _908 = isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0));
        float _917 = ((((1.0 - _908) * (_903 + 2.0)) * exp2(log2(isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0))) * (_903 + 1.0))) + _908) * _873;
        float _918 = _841 * 0.5;
        float _919 = _851 * 0.5;
        float _920 = _861 * 0.5;
        float _921 = dot(vec3(_918, _919, _920), vec3(_918, _919, _920));
        float _926 = (_921 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_921);
        float _934 = (dot(vec3(_199, _200, _201), vec3(_926 * _918, _926 * _919, _926 * _920)) + 1.0) * 0.5;
        float _3337 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _943 = sqrt(((_919 * _919) + (_918 * _918)) + (_920 * _920)) / (_874 + 9.9999997473787516355514526367188e-06);
        float _3348 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
        float _944 = isnan(1.0) ? _3348 : (isnan(_3348) ? 1.0 : min(_3348, 1.0));
        float _945 = _944 * 2.0;
        float _949 = (1.0 - _944) / (_944 + 1.0);
        float _3359 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
        float _950 = isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0));
        float _959 = ((((1.0 - _950) * (_945 + 2.0)) * exp2(log2(isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0))) * (_945 + 1.0))) + _950) * _874;
        float _960 = _842 * 0.5;
        float _961 = _852 * 0.5;
        float _962 = _862 * 0.5;
        float _963 = dot(vec3(_960, _961, _962), vec3(_960, _961, _962));
        float _968 = (_963 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_963);
        float _976 = (dot(vec3(_199, _200, _201), vec3(_968 * _960, _968 * _961, _968 * _962)) + 1.0) * 0.5;
        float _3370 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
        float _985 = sqrt(((_961 * _961) + (_960 * _960)) + (_962 * _962)) / (_875 + 9.9999997473787516355514526367188e-06);
        float _3381 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        float _986 = isnan(1.0) ? _3381 : (isnan(_3381) ? 1.0 : min(_3381, 1.0));
        float _987 = _986 * 2.0;
        float _991 = (1.0 - _986) / (_986 + 1.0);
        float _3392 = isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0));
        float _992 = isnan(1.0) ? _3392 : (isnan(_3392) ? 1.0 : min(_3392, 1.0));
        float _1001 = ((((1.0 - _992) * (_987 + 2.0)) * exp2(log2(isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0))) * (_987 + 1.0))) + _992) * _875;
        _1009 = _842;
        _1010 = _841;
        _1011 = _840;
        _1012 = _852;
        _1013 = _851;
        _1014 = _850;
        _1015 = _862;
        _1016 = _861;
        _1017 = _860;
        _1018 = _875;
        _1019 = _874;
        _1020 = _873;
        _1021 = cbModelParam._m0[36u].w * (isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0)));
        _1022 = cbModelParam._m0[36u].w * (isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0)));
        _1023 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0)));
    }
    else
    {
        _1009 = _700;
        _1010 = _700;
        _1011 = _700;
        _1012 = _700;
        _1013 = _700;
        _1014 = _700;
        _1015 = _700;
        _1016 = _700;
        _1017 = _700;
        _1018 = _700;
        _1019 = _700;
        _1020 = _700;
        _1021 = 0.0;
        _1022 = 0.0;
        _1023 = 0.0;
    }
    float _1033 = (cbModelParam._m0[1u].x * (_1021 - _712)) + _712;
    float _1034 = (cbModelParam._m0[1u].x * (_1022 - _713)) + _713;
    float _1035 = (cbModelParam._m0[1u].x * (_1023 - _714)) + _714;
    float _1056 = fma(_1035, cbSceneParam._m0[89u].z, fma(_1034, cbSceneParam._m0[89u].y, _1033 * cbSceneParam._m0[89u].x));
    float _1059 = fma(_1035, cbSceneParam._m0[90u].z, fma(_1034, cbSceneParam._m0[90u].y, _1033 * cbSceneParam._m0[90u].x));
    float _1062 = fma(_1035, cbSceneParam._m0[91u].z, fma(_1034, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1033));
    float _1077 = _365 * 0.5;
    float _1078 = _366 * 0.5;
    float _1079 = _367 * 0.5;
    float _1080 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_1011, _1014, _1017, _1020));
    float _1083 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_1010, _1013, _1016, _1019));
    float _1086 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_1009, _1012, _1015, _1018));
    float _1120;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1093 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_699, _703, _706, _709));
        float _1097 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_701, _704, _707, _710));
        float _1101 = dot(vec4(_1077, _1078, _1079, 1.0), vec4(_702, _705, _708, _711));
        float _1108 = dot(vec4(cbModelParam._m0[39u]), vec4(_1077, _1078, _1079, 1.0));
        _1120 = dot(vec3(isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0)), isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0)), isnan(0.0) ? _1093 : (isnan(_1093) ? 0.0 : max(_1093, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1108) ? 0.0 : (isnan(0.0) ? _1108 : max(0.0, _1108))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1120 = 1.0;
    }
    float _1131;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1122 = dot(vec4(cbModelParam._m0[40u]), vec4(_1077, _1078, _1079, 1.0));
        _1131 = dot(vec3(isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0)), isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0)), isnan(0.0) ? _1086 : (isnan(_1086) ? 0.0 : max(_1086, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1122) ? 0.0 : (isnan(0.0) ? _1122 : max(0.0, _1122))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1131 = 1.0;
    }
    float _1135 = (_1131 * cbModelParam._m0[1u].x) + (_1120 * (1.0 - cbModelParam._m0[1u].x));
    float _1144 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1226;
    float _1228;
    float _1230;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1193 = fma(_397, cbModelParam._m0[13u].z, fma(_393, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _389)) + cbModelParam._m0[13u].w;
        float _1197 = fma(_397, cbModelParam._m0[14u].z, fma(_393, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _389)) + cbModelParam._m0[14u].w;
        float _1201 = fma(_397, cbModelParam._m0[15u].z, fma(_393, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _389)) + cbModelParam._m0[15u].w;
        float _1204 = fma(_367, cbModelParam._m0[13u].z, fma(_366, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _365));
        float _1207 = fma(_367, cbModelParam._m0[14u].z, fma(_366, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _365));
        float _1210 = fma(_367, cbModelParam._m0[15u].z, fma(_366, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _365));
        float _1236;
        if (_1204 > 0.0)
        {
            _1236 = abs((1.0 - _1193) / _1204);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1204 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1193 + 1.0) / _1204);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1236 = frontier_phi_16_14_ladder;
        }
        float _1411;
        if (_1207 > 0.0)
        {
            _1411 = abs((1.0 - _1197) / _1207);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1207 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1197 + 1.0) / _1207);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1411 = frontier_phi_25_21_ladder;
        }
        float _1708;
        if (_1210 > 0.0)
        {
            _1708 = abs((1.0 - _1201) / _1210);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1210 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1201 + 1.0) / _1210);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1708 = frontier_phi_37_32_ladder;
        }
        float _1710 = isnan(_1411) ? _1236 : (isnan(_1236) ? _1411 : min(_1236, _1411));
        float _1711 = isnan(_1708) ? _1710 : (isnan(_1710) ? _1708 : min(_1710, _1708));
        float _1715 = (_1711 * _1204) + _1193;
        float _1716 = (_1711 * _1207) + _1197;
        float _1717 = (_1711 * _1210) + _1201;
        float _1718 = _1711 * 9.9999997473787516355514526367188e-05;
        float _1720 = (-1.0) - _1718;
        float _1722 = _1718 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1717 > _1722) || ((_1717 < _1720) || ((_1716 > _1722) || ((_1716 < _1720) || ((_1715 < _1720) || (_1715 > _1722))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1862 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1717, cbModelParam._m0[9u].z, fma(_1716, cbModelParam._m0[9u].y, _1715 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1717, cbModelParam._m0[10u].z, fma(_1716, cbModelParam._m0[10u].y, _1715 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1717, cbModelParam._m0[11u].z, fma(_1716, cbModelParam._m0[11u].y, _1715 * cbModelParam._m0[11u].x))), _1144);
            frontier_phi_15_37_ladder = _1862.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1862.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1862.z * cbModelParam._m0[1u].y;
        }
        _1226 = frontier_phi_15_37_ladder_1;
        _1228 = frontier_phi_15_37_ladder;
        _1230 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1214 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_365, _366, _367), _1144);
        _1226 = _1214.x * cbModelParam._m0[1u].y;
        _1228 = _1214.y * cbModelParam._m0[1u].y;
        _1230 = _1214.z * cbModelParam._m0[1u].y;
    }
    float _1233 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1326;
    float _1328;
    float _1330;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1290 = fma(_397, cbModelParam._m0[21u].z, fma(_393, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _389)) + cbModelParam._m0[21u].w;
        float _1294 = fma(_397, cbModelParam._m0[22u].z, fma(_393, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _389)) + cbModelParam._m0[22u].w;
        float _1298 = fma(_397, cbModelParam._m0[23u].z, fma(_393, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _389)) + cbModelParam._m0[23u].w;
        float _1301 = fma(_367, cbModelParam._m0[21u].z, fma(_366, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _365));
        float _1304 = fma(_367, cbModelParam._m0[22u].z, fma(_366, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _365));
        float _1307 = fma(_367, cbModelParam._m0[23u].z, fma(_366, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _365));
        float _1416;
        if (_1301 > 0.0)
        {
            _1416 = abs((1.0 - _1290) / _1301);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1301 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1290 + 1.0) / _1301);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1416 = frontier_phi_27_23_ladder;
        }
        float _1735;
        if (_1304 > 0.0)
        {
            _1735 = abs((1.0 - _1294) / _1304);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1304 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1294 + 1.0) / _1304);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1735 = frontier_phi_39_34_ladder;
        }
        float _2008;
        if (_1307 > 0.0)
        {
            _2008 = abs((1.0 - _1298) / _1307);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1307 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1298 + 1.0) / _1307);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2008 = frontier_phi_49_46_ladder;
        }
        float _2010 = isnan(_1735) ? _1416 : (isnan(_1416) ? _1735 : min(_1416, _1735));
        float _2011 = isnan(_2008) ? _2010 : (isnan(_2010) ? _2008 : min(_2010, _2008));
        float _2015 = (_2011 * _1301) + _1290;
        float _2016 = (_2011 * _1304) + _1294;
        float _2017 = (_2011 * _1307) + _1298;
        float _2018 = _2011 * 9.9999997473787516355514526367188e-05;
        float _2019 = (-1.0) - _2018;
        float _2021 = _2018 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2017 > _2021) || ((_2017 < _2019) || ((_2016 > _2021) || ((_2016 < _2019) || ((_2015 < _2019) || (_2015 > _2021))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2108 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2017, cbModelParam._m0[17u].z, fma(_2016, cbModelParam._m0[17u].y, _2015 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2017, cbModelParam._m0[18u].z, fma(_2016, cbModelParam._m0[18u].y, _2015 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2017, cbModelParam._m0[19u].z, fma(_2016, cbModelParam._m0[19u].y, _2015 * cbModelParam._m0[19u].x))), _1233);
            frontier_phi_24_49_ladder = _2108.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2108.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2108.x * cbModelParam._m0[1u].z;
        }
        _1326 = frontier_phi_24_49_ladder_2;
        _1328 = frontier_phi_24_49_ladder_1;
        _1330 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1310 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_365, _366, _367), _1233);
        _1326 = _1310.x * cbModelParam._m0[1u].z;
        _1328 = _1310.y * cbModelParam._m0[1u].z;
        _1330 = _1310.z * cbModelParam._m0[1u].z;
    }
    float _1342 = _356 * 0.01200000010430812835693359375;
    float _1344 = _1342 * ((cbModelParam._m0[1u].w * (_1326 - _1226)) + _1226);
    float _1345 = _1342 * ((cbModelParam._m0[1u].w * (_1328 - _1228)) + _1228);
    float _1346 = _1342 * ((cbModelParam._m0[1u].w * (_1330 - _1230)) + _1230);
    float _1349 = fma(_1346, cbSceneParam._m0[89u].z, fma(_1345, cbSceneParam._m0[89u].y, _1344 * cbSceneParam._m0[89u].x));
    float _1352 = fma(_1346, cbSceneParam._m0[90u].z, fma(_1345, cbSceneParam._m0[90u].y, _1344 * cbSceneParam._m0[90u].x));
    float _1355 = fma(_1346, cbSceneParam._m0[91u].z, fma(_1345, cbSceneParam._m0[91u].y, _1344 * cbSceneParam._m0[91u].x));
    float _1390 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1394 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1398 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1402 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1403 = _1390 / _1402;
    float _1404 = _1394 / _1402;
    float _1405 = _1398 / _1402;
    float _1552;
    float _1553;
    float _1554;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1432 = ((uint(_1405 > cbSceneParam._m0[59u].y) + uint(_1405 > cbSceneParam._m0[59u].x)) + uint(_1405 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1433 = _1432 + 43u;
        uint _1441 = _1432 + 44u;
        uint _1449 = _1432 + 45u;
        uint _1457 = _1432 + 46u;
        float _1468 = fma(_1402, cbSceneParam._m0[_1433].w, fma(_1398, cbSceneParam._m0[_1433].z, fma(_1394, cbSceneParam._m0[_1433].y, _1390 * cbSceneParam._m0[_1433].x)));
        float _1472 = fma(_1402, cbSceneParam._m0[_1441].w, fma(_1398, cbSceneParam._m0[_1441].z, fma(_1394, cbSceneParam._m0[_1441].y, _1390 * cbSceneParam._m0[_1441].x)));
        float _1480 = fma(_1402, cbSceneParam._m0[_1457].w, fma(_1398, cbSceneParam._m0[_1457].z, fma(_1394, cbSceneParam._m0[_1457].y, _1390 * cbSceneParam._m0[_1457].x)));
        float _1485 = cbSceneParam._m0[33u].z * _1480;
        float _1487 = cbSceneParam._m0[33u].w * _1480;
        float _1490 = fma(_1402, cbSceneParam._m0[_1449].w, fma(_1398, cbSceneParam._m0[_1449].z, fma(_1394, cbSceneParam._m0[_1449].y, _1390 * cbSceneParam._m0[_1449].x))) / _1480;
        float _1538 = (cbSceneParam._m0[33u].x - sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405))) * cbSceneParam._m0[33u].y;
        float _3518 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1545 = (isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1485 + _1468) / _1480, (_1487 + _1472) / _1480), _1490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1487 + _1468) / _1480, (_1472 - _1485) / _1480), _1490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1468 - _1485) / _1480, (_1472 - _1487) / _1480), _1490), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1468 - _1487) / _1480, (_1485 + _1472) / _1480), _1490), 0.0)).x), vec4(0.25)));
        _1552 = 1.0 - (_1545 * cbSceneParam._m0[34u].x);
        _1553 = 1.0 - (_1545 * cbSceneParam._m0[34u].y);
        _1554 = 1.0 - (_1545 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1552 = 1.0;
        _1553 = 1.0;
        _1554 = 1.0;
    }
    float _1618;
    float _1620;
    float _1622;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1606 = fma(_1402, cbSceneParam._m0[63u].w, fma(_1398, cbSceneParam._m0[63u].z, fma(_1394, cbSceneParam._m0[63u].y, _1390 * cbSceneParam._m0[63u].x)));
        float _1607 = fma(_1402, cbSceneParam._m0[60u].w, fma(_1398, cbSceneParam._m0[60u].z, fma(_1394, cbSceneParam._m0[60u].y, _1390 * cbSceneParam._m0[60u].x))) / _1606;
        float _1608 = fma(_1402, cbSceneParam._m0[61u].w, fma(_1398, cbSceneParam._m0[61u].z, fma(_1394, cbSceneParam._m0[61u].y, _1390 * cbSceneParam._m0[61u].x))) / _1606;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1607 >= cbSceneParam._m0[64u].x) && (_1608 >= cbSceneParam._m0[64u].y)) && (_1607 <= cbSceneParam._m0[64u].z)) && (_1608 <= cbSceneParam._m0[64u].w))
        {
            float _1748 = fma(_1402, cbSceneParam._m0[62u].w, fma(_1398, cbSceneParam._m0[62u].z, fma(_1394, cbSceneParam._m0[62u].y, _1390 * cbSceneParam._m0[62u].x))) / _1606;
            float _1752 = isnan(cbSceneParam._m0[41u].w) ? _1748 : (isnan(_1748) ? cbSceneParam._m0[41u].w : max(_1748, cbSceneParam._m0[41u].w));
            float _1795 = (cbSceneParam._m0[33u].x - sqrt(((_1404 * _1404) + (_1403 * _1403)) + (_1405 * _1405))) * cbSceneParam._m0[33u].y;
            float _3534 = isnan(0.0) ? _1795 : (isnan(_1795) ? 0.0 : max(_1795, 0.0));
            float _1802 = (isnan(1.0) ? _3534 : (isnan(_3534) ? 1.0 : min(_3534, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1607, cbSceneParam._m0[33u].w + _1608), _1752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1607, _1608 - cbSceneParam._m0[33u].z), _1752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1607 - cbSceneParam._m0[33u].z, _1608 - cbSceneParam._m0[33u].w), _1752), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1607 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1608), _1752), 0.0)).x), vec4(0.25)));
            float _1806 = 1.0 - (_1802 * cbSceneParam._m0[34u].x);
            float _1807 = 1.0 - (_1802 * cbSceneParam._m0[34u].y);
            float _1808 = 1.0 - (_1802 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1807) ? _1553 : (isnan(_1553) ? _1807 : min(_1553, _1807));
            frontier_phi_36_35_ladder_1 = isnan(_1808) ? _1554 : (isnan(_1554) ? _1808 : min(_1554, _1808));
            frontier_phi_36_35_ladder_2 = isnan(_1806) ? _1552 : (isnan(_1552) ? _1806 : min(_1552, _1806));
        }
        else
        {
            frontier_phi_36_35_ladder = _1553;
            frontier_phi_36_35_ladder_1 = _1554;
            frontier_phi_36_35_ladder_2 = _1552;
        }
        _1618 = frontier_phi_36_35_ladder_2;
        _1620 = frontier_phi_36_35_ladder;
        _1622 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1618 = _1552;
        _1620 = _1553;
        _1622 = _1554;
    }
    uvec4 _1627 = floatBitsToUint(cbInstanceData._m0[_330 + 5u]);
    uint _1629 = _1627.x * 14u;
    uint _1630 = _1629 + 13u;
    float _1637 = _356 + (-1.0);
    float _1643 = (cbLight._m0[_1630].x * _1637) + 1.0;
    float _1644 = (cbLight._m0[_1630].y * _1637) + 1.0;
    float _1645 = (cbLight._m0[_1630].z * _1637) + 1.0;
    float _1646 = (cbLight._m0[_1630].w * _1637) + 1.0;
    uint _1647 = _1629 + 5u;
    float _1653 = isnan(1.0) ? _1644 : (isnan(_1644) ? 1.0 : min(_1644, 1.0));
    uint _1657 = _1629 + 4u;
    float _1667 = isnan(1.0) ? _1643 : (isnan(_1643) ? 1.0 : min(_1643, 1.0));
    uint _1671 = _1629 | 1u;
    float _1682 = dot(vec3(cbLight._m0[_1629].xyz), vec3(_199, _200, _201));
    float _1685 = dot(vec3(cbLight._m0[_1671].xyz), vec3(_199, _200, _201));
    float _3570 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
    float _3581 = isnan(0.0) ? _1685 : (isnan(_1685) ? 0.0 : max(_1685, 0.0));
    float _1690 = (isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0))) * 0.3183098733425140380859375;
    float _1692 = (isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0))) * 0.3183098733425140380859375;
    float _1699 = ((cbLight._m0[_1647].x * _1653) * _1692) + (((cbLight._m0[_1657].x * _1618) * _1667) * _1690);
    float _1700 = ((_1653 * cbLight._m0[_1647].y) * _1692) + (((cbLight._m0[_1657].y * _1620) * _1667) * _1690);
    float _1701 = ((_1653 * cbLight._m0[_1647].z) * _1692) + (((cbLight._m0[_1657].z * _1622) * _1667) * _1690);
    uvec4 _1705 = floatBitsToUint(cbLight._m0[_1629 + 12u]);
    bool _1707 = _1705.x == 0u;
    float _1809;
    float _1811;
    float _1813;
    if (_1707)
    {
        _1809 = _1699;
        _1811 = _1700;
        _1813 = _1701;
    }
    else
    {
        uint _1817 = _1629 + 6u;
        float _1833 = (dot(vec3(cbLight._m0[_1629 + 2u].xyz), vec3(_199, _200, _201)) * 0.5) + 0.5;
        float _1834 = _1833 * _1833;
        float _3592 = isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0));
        float _1835 = isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0));
        float _1836 = isnan(1.0) ? _1645 : (isnan(_1645) ? 1.0 : min(_1645, 1.0));
        _1809 = (((cbLight._m0[_1817].x * 0.3183098733425140380859375) * _1835) * _1836) + _1699;
        _1811 = (((cbLight._m0[_1817].y * 0.3183098733425140380859375) * _1835) * _1836) + _1700;
        _1813 = (((cbLight._m0[_1817].z * 0.3183098733425140380859375) * _1835) * _1836) + _1701;
    }
    bool _1816 = _1705.y == 0u;
    float _1871;
    float _1873;
    float _1875;
    if (_1816)
    {
        _1871 = _1809;
        _1873 = _1811;
        _1875 = _1813;
    }
    else
    {
        uint _1979 = _1629 + 7u;
        float _1995 = (dot(vec3(cbLight._m0[_1629 + 3u].xyz), vec3(_199, _200, _201)) * 0.5) + 0.5;
        float _1996 = _1995 * _1995;
        float _3608 = isnan(0.0) ? _1996 : (isnan(_1996) ? 0.0 : max(_1996, 0.0));
        float _1997 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
        float _1998 = isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0));
        _1871 = (((cbLight._m0[_1979].x * 0.3183098733425140380859375) * _1997) * _1998) + _1809;
        _1873 = (((cbLight._m0[_1979].y * 0.3183098733425140380859375) * _1997) * _1998) + _1811;
        _1875 = (((cbLight._m0[_1979].z * 0.3183098733425140380859375) * _1997) * _1998) + _1813;
    }
    uint _1877 = _1629 + 8u;
    float _1883 = cbLight._m0[_1629].x + _281;
    float _1884 = cbLight._m0[_1629].y + _282;
    float _1885 = cbLight._m0[_1629].z + _283;
    float _1889 = inversesqrt(dot(vec3(_1883, _1884, _1885), vec3(_1883, _1884, _1885)));
    float _1893 = dot(vec3(_199, _200, _201), vec3(cbLight._m0[_1629].xyz));
    float _3624 = isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0));
    float _1896 = isnan(1.0) ? _3624 : (isnan(_3624) ? 1.0 : min(_3624, 1.0));
    float _3635 = isnan(0.0) ? _357 : (isnan(_357) ? 0.0 : max(_357, 0.0));
    float _1897 = isnan(1.0) ? _3635 : (isnan(_3635) ? 1.0 : min(_3635, 1.0));
    float _1898 = dot(vec3(cbLight._m0[_1629].xyz), vec3(_1883 * _1889, _1884 * _1889, _1885 * _1889));
    float _3646 = isnan(0.0) ? _1898 : (isnan(_1898) ? 0.0 : max(_1898, 0.0));
    float _1909 = (exp2(log2(1.0 - (isnan(1.0) ? _3646 : (isnan(_3646) ? 1.0 : min(_3646, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1915 = (0.5 / ((_1896 + 9.9999999392252902907785028219223e-09) + _1897)) * _1896;
    float _3657 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0));
    float _1917 = (isnan(1.0) ? _3657 : (isnan(_3657) ? 1.0 : min(_3657, 1.0))) * 0.31831014156341552734375;
    uint _1931 = _1629 + 9u;
    float _1937 = cbLight._m0[_1671].x + _281;
    float _1938 = cbLight._m0[_1671].y + _282;
    float _1939 = cbLight._m0[_1671].z + _283;
    float _1943 = inversesqrt(dot(vec3(_1937, _1938, _1939), vec3(_1937, _1938, _1939)));
    float _1947 = dot(vec3(_199, _200, _201), vec3(cbLight._m0[_1671].xyz));
    float _3668 = isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0));
    float _1950 = isnan(1.0) ? _3668 : (isnan(_3668) ? 1.0 : min(_3668, 1.0));
    float _1951 = dot(vec3(cbLight._m0[_1671].xyz), vec3(_1937 * _1943, _1938 * _1943, _1939 * _1943));
    float _3679 = isnan(0.0) ? _1951 : (isnan(_1951) ? 0.0 : max(_1951, 0.0));
    float _1960 = (exp2(log2(1.0 - (isnan(1.0) ? _3679 : (isnan(_3679) ? 1.0 : min(_3679, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1964 = (0.5 / ((_1950 + 9.9999999392252902907785028219223e-09) + _1897)) * _1950;
    float _3690 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
    float _1966 = (isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0))) * 0.31831014156341552734375;
    float _1976 = (((_1960 * cbLight._m0[_1931].x) * _1966) * _1653) + ((((cbLight._m0[_1877].x * _1618) * _1909) * _1917) * _1667);
    float _1977 = (((_1960 * cbLight._m0[_1931].y) * _1966) * _1653) + ((((cbLight._m0[_1877].y * _1620) * _1909) * _1917) * _1667);
    float _1978 = (((_1960 * cbLight._m0[_1931].z) * _1966) * _1653) + ((((cbLight._m0[_1877].z * _1622) * _1909) * _1917) * _1667);
    float _2034;
    float _2036;
    float _2038;
    if (_1707)
    {
        _2034 = _1976;
        _2036 = _1977;
        _2038 = _1978;
    }
    else
    {
        uint _2040 = _1629 + 10u;
        uint _2046 = _1629 + 2u;
        float _2052 = cbLight._m0[_2046].x + _281;
        float _2053 = cbLight._m0[_2046].y + _282;
        float _2054 = cbLight._m0[_2046].z + _283;
        float _2058 = inversesqrt(dot(vec3(_2052, _2053, _2054), vec3(_2052, _2053, _2054)));
        float _2062 = dot(vec3(_199, _200, _201), vec3(cbLight._m0[_2046].xyz));
        float _3701 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
        float _2065 = isnan(1.0) ? _3701 : (isnan(_3701) ? 1.0 : min(_3701, 1.0));
        float _2066 = dot(vec3(cbLight._m0[_2046].xyz), vec3(_2052 * _2058, _2053 * _2058, _2054 * _2058));
        float _3712 = isnan(0.0) ? _2066 : (isnan(_2066) ? 0.0 : max(_2066, 0.0));
        float _2075 = (exp2(log2(1.0 - (isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2079 = (0.5 / ((_2065 + 9.9999999392252902907785028219223e-09) + _1897)) * _2065;
        float _3723 = isnan(0.0) ? _2079 : (isnan(_2079) ? 0.0 : max(_2079, 0.0));
        float _2081 = (isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0))) * 0.31831014156341552734375;
        float _2082 = isnan(1.0) ? _1645 : (isnan(_1645) ? 1.0 : min(_1645, 1.0));
        _2034 = (((_2075 * cbLight._m0[_2040].x) * _2081) * _2082) + _1976;
        _2036 = (((_2075 * cbLight._m0[_2040].y) * _2081) * _2082) + _1977;
        _2038 = (((_2075 * cbLight._m0[_2040].z) * _2081) * _2082) + _1978;
    }
    float _2113;
    float _2115;
    float _2117;
    if (_1816)
    {
        _2113 = _2034;
        _2115 = _2036;
        _2117 = _2038;
    }
    else
    {
        uint _2124 = _1629 + 11u;
        uint _2130 = _1629 + 3u;
        float _2136 = cbLight._m0[_2130].x + _281;
        float _2137 = cbLight._m0[_2130].y + _282;
        float _2138 = cbLight._m0[_2130].z + _283;
        float _2142 = inversesqrt(dot(vec3(_2136, _2137, _2138), vec3(_2136, _2137, _2138)));
        float _2146 = dot(vec3(_199, _200, _201), vec3(cbLight._m0[_2130].xyz));
        float _3739 = isnan(0.0) ? _2146 : (isnan(_2146) ? 0.0 : max(_2146, 0.0));
        float _2149 = isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0));
        float _2150 = dot(vec3(cbLight._m0[_2130].xyz), vec3(_2136 * _2142, _2137 * _2142, _2138 * _2142));
        float _3750 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
        float _2159 = (exp2(log2(1.0 - (isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2163 = (0.5 / ((_2149 + 9.9999999392252902907785028219223e-09) + _1897)) * _2149;
        float _3761 = isnan(0.0) ? _2163 : (isnan(_2163) ? 0.0 : max(_2163, 0.0));
        float _2165 = (isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0))) * 0.31831014156341552734375;
        float _2166 = isnan(1.0) ? _1646 : (isnan(_1646) ? 1.0 : min(_1646, 1.0));
        _2113 = (((_2159 * cbLight._m0[_2124].x) * _2165) * _2166) + _2034;
        _2115 = (((_2159 * cbLight._m0[_2124].y) * _2165) * _2166) + _2036;
        _2117 = (((_2159 * cbLight._m0[_2124].z) * _2165) * _2166) + _2038;
    }
    float _2231;
    float _2233;
    float _2235;
    float _2237;
    float _2239;
    float _2241;
    if (_1627.y == 0u)
    {
        uvec4 _2187 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2188 = _2187.x;
        uint _2199 = uint((float(_2187.y) * floor(float(uint(cbSceneParam._m0[85u].y * _290) / _2188))) + floor(float(uint(cbSceneParam._m0[85u].x * _289) / _2188)));
        float _2209 = (log2(_1405 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2210 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
        uint _2213 = uint(isnan(14.0) ? _2210 : (isnan(_2210) ? 14.0 : min(_2210, 14.0)));
        uvec4 _2218 = texelFetch(g_lightClusterGridBuffer, int(((_2213 << 2u) + (_2199 << 6u)) >> 2u));
        uint _2219 = _2218.x;
        uint _2220 = _2187.z;
        float _2298;
        float _2300;
        float _2302;
        float _2304;
        float _2306;
        float _2308;
        if (((((1u << ((_2220 >> 4u) & 15u)) + 4294967295u) & _2219) == 0u) || ((_2220 & 240u) == 0u))
        {
            _2298 = 0.0;
            _2300 = 0.0;
            _2302 = 0.0;
            _2304 = 0.0;
            _2306 = 0.0;
            _2308 = 0.0;
        }
        else
        {
            float _2299;
            float _2301;
            float _2303;
            float _2305;
            float _2307;
            float _2309;
            float _2440 = 0.0;
            float _2441 = 0.0;
            float _2442 = 0.0;
            float _2443 = 0.0;
            float _2444 = 0.0;
            float _2445 = 0.0;
            uint _2446 = 0u;
            uint _2455;
            bool _2456;
            for (;;)
            {
                _2455 = texelFetch(g_lightClassification, int((((_2213 << 5u) + (_2199 << 9u)) + (_2446 << 2u)) >> 2u)).x;
                _2456 = _2455 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2456)
                {
                    frontier_phi_68_pred = _2445;
                    frontier_phi_68_pred_1 = _2444;
                    frontier_phi_68_pred_2 = _2443;
                    frontier_phi_68_pred_3 = _2441;
                    frontier_phi_68_pred_4 = _2440;
                    frontier_phi_68_pred_5 = _2442;
                }
                else
                {
                    float _2564;
                    float _2565;
                    float _2566;
                    float _2567;
                    float _2568;
                    float _2569;
                    uint _2570;
                    _2564 = _2440;
                    _2565 = _2441;
                    _2566 = _2442;
                    _2567 = _2443;
                    _2568 = _2444;
                    _2569 = _2445;
                    _2570 = _2455;
                    float _2496;
                    float _2497;
                    float _2498;
                    float _2499;
                    float _2500;
                    float _2501;
                    for (;;)
                    {
                        uint _2574 = uint(findLSB(_2570)) + (_2446 << 5u);
                        uint _2571 = (_2570 + 4294967295u) & _2570;
                        uint _2576 = _2574 * 48u;
                        vec4 _2590 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2576)).x, texelFetch(g_PointLightRenderingBuffer, int(_2576 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2576 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2576 + 3u)).x));
                        uint _2596 = (_2574 * 48u) + 4u;
                        vec4 _2609 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2596)).x, texelFetch(g_PointLightRenderingBuffer, int(_2596 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2596 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2596 + 3u)).x));
                        uint _2615 = (_2574 * 48u) + 8u;
                        vec3 _2626 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2615)).x, texelFetch(g_PointLightRenderingBuffer, int(_2615 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2615 + 2u)).x));
                        float _2630 = _2590.x - _1403;
                        float _2631 = _2590.y - _1404;
                        float _2632 = _2590.z - _1405;
                        float _2633 = dot(vec3(_2630, _2631, _2632), vec3(_2630, _2631, _2632));
                        float _2636 = inversesqrt(_2633);
                        float _2645 = 1.0 - (_2633 * _2590.w);
                        float _3787 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
                        float _2646 = isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0));
                        float _2647 = sqrt(_2633) * _2609.w;
                        float _2650 = 1.39999997615814208984375 / (_2647 + 1.39999997615814208984375);
                        float _2651 = _2650 * _2650;
                        float _2654 = ((1.0 - _2651) * dot(vec3(_311, _314, _317), vec3(_2636 * _2630, _2636 * _2631, _2636 * _2632))) + _2651;
                        float _2657 = _2647 * _2647;
                        float _2661 = ((isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0))) * _2646) / ((_2657 * 0.699999988079071044921875) + 1.0);
                        float _2665 = (-0.0) - _1403;
                        float _2666 = (-0.0) - _1404;
                        float _2667 = (-0.0) - _1405;
                        float _2671 = inversesqrt(dot(vec3(_2665, _2666, _2667), vec3(_2665, _2666, _2667)));
                        float _2675 = dot(vec3(_311, _314, _317), vec3(_2671 * _2665, _2671 * _2666, _2671 * _2667));
                        float _3803 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
                        float _3814 = isnan(0.0) ? _2654 : (isnan(_2654) ? 0.0 : max(_2654, 0.0));
                        float _2679 = isnan(1.0) ? _3814 : (isnan(_3814) ? 1.0 : min(_3814, 1.0));
                        float _2683 = (0.5 / (((isnan(1.0) ? _3803 : (isnan(_3803) ? 1.0 : min(_3803, 1.0))) + 9.9999999392252902907785028219223e-09) + _2679)) * _2679;
                        float _3825 = isnan(0.0) ? _2683 : (isnan(_2683) ? 0.0 : max(_2683, 0.0));
                        float _2692 = (((isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0))) * 3.1415927410125732421875) / ((_2657 * 2.1991131305694580078125) + 3.141590118408203125)) * _2646;
                        _2499 = (_2661 * _2609.x) + _2567;
                        _2500 = (_2661 * _2609.y) + _2568;
                        _2501 = (_2661 * _2609.z) + _2569;
                        _2496 = (_2692 * _2626.x) + _2564;
                        _2497 = (_2692 * _2626.y) + _2565;
                        _2498 = (_2692 * _2626.z) + _2566;
                        if (_2571 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2564 = _2496;
                            _2565 = _2497;
                            _2566 = _2498;
                            _2567 = _2499;
                            _2568 = _2500;
                            _2569 = _2501;
                            _2570 = _2571;
                        }
                    }
                    frontier_phi_68_pred = _2501;
                    frontier_phi_68_pred_1 = _2500;
                    frontier_phi_68_pred_2 = _2499;
                    frontier_phi_68_pred_3 = _2497;
                    frontier_phi_68_pred_4 = _2496;
                    frontier_phi_68_pred_5 = _2498;
                }
                _2309 = frontier_phi_68_pred;
                _2307 = frontier_phi_68_pred_1;
                _2305 = frontier_phi_68_pred_2;
                _2301 = frontier_phi_68_pred_3;
                _2299 = frontier_phi_68_pred_4;
                _2303 = frontier_phi_68_pred_5;
                uint _2447 = _2446 + 1u;
                if (_2447 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2440 = _2299;
                    _2441 = _2301;
                    _2442 = _2303;
                    _2443 = _2305;
                    _2444 = _2307;
                    _2445 = _2309;
                    _2446 = _2447;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2298 = _2299;
            _2300 = _2301;
            _2302 = _2303;
            _2304 = _2305;
            _2306 = _2307;
            _2308 = _2309;
        }
        uvec4 _2312 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2313 = _2312.z;
        uint _2315 = (_2313 >> 8u) & 15u;
        float _2411;
        float _2413;
        float _2415;
        float _2417;
        float _2419;
        float _2421;
        if (((4294967295u << _2315) & _2219) == 0u)
        {
            _2411 = _2298;
            _2413 = _2300;
            _2415 = _2302;
            _2417 = _2304;
            _2419 = _2306;
            _2421 = _2308;
        }
        else
        {
            float _2436 = inversesqrt(dot(vec3(_1403, _1404, _1405), vec3(_1403, _1404, _1405)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2315 < ((_2313 >> 12u) & 15u))
            {
                float _2412;
                float _2414;
                float _2416;
                float _2418;
                float _2420;
                float _2422;
                float _2547 = _2298;
                float _2548 = _2300;
                float _2549 = _2302;
                float _2550 = _2304;
                float _2551 = _2306;
                float _2552 = _2308;
                uint _2553 = _2315;
                uint _2562;
                bool _2563;
                for (;;)
                {
                    _2562 = texelFetch(g_lightClassification, int((((_2213 << 5u) + (_2199 << 9u)) + (_2553 << 2u)) >> 2u)).x;
                    _2563 = _2562 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_2563)
                    {
                        frontier_phi_74_pred = _2549;
                        frontier_phi_74_pred_1 = _2548;
                        frontier_phi_74_pred_2 = _2547;
                        frontier_phi_74_pred_3 = _2552;
                        frontier_phi_74_pred_4 = _2551;
                        frontier_phi_74_pred_5 = _2550;
                    }
                    else
                    {
                        float _2697;
                        float _2698;
                        float _2699;
                        float _2700;
                        float _2701;
                        float _2702;
                        float _2949;
                        float _2950;
                        float _2951;
                        float _2952;
                        float _2953;
                        float _2954;
                        float _2710 = _2547;
                        float _2711 = _2548;
                        float _2712 = _2549;
                        float _2713 = _2550;
                        float _2714 = _2551;
                        float _2715 = _2552;
                        uint _2716 = _2562;
                        uint _2717;
                        vec4 _2742;
                        float _2743;
                        vec4 _2758;
                        vec3 _2770;
                        vec4 _2786;
                        vec4 _2802;
                        float _2849;
                        bool _2850;
                        for (;;)
                        {
                            uint _2727 = ((_2553 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2716));
                            _2717 = (_2716 + 4294967295u) & _2716;
                            uint _2729 = _2727 * 40u;
                            _2742 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2729)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2729 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2729 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2729 + 3u)).x));
                            _2743 = _2742.w;
                            uint _2745 = (_2727 * 40u) + 4u;
                            _2758 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2745)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2745 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2745 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2745 + 3u)).x));
                            uint _2760 = (_2727 * 40u) + 8u;
                            _2770 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2760)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2760 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2760 + 2u)).x));
                            uint _2773 = (_2727 * 40u) + 16u;
                            _2786 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2773)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2773 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2773 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2773 + 3u)).x));
                            uint _2789 = (_2727 * 40u) + 20u;
                            _2802 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2789)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2789 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2789 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2789 + 3u)).x));
                            uint _2805 = (_2727 * 40u) + 24u;
                            vec4 _2818 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2805)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2805 + 3u)).x));
                            uint _2824 = (_2727 * 40u) + 28u;
                            vec4 _2837 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2824)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2824 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2824 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2824 + 3u)).x));
                            _2849 = fma(_1405, _2837.z, fma(_1404, _2837.y, _2837.x * _1403)) + _2837.w;
                            _2850 = !((fma(_1405, _2818.z, fma(_1404, _2818.y, _2818.x * _1403)) + _2818.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_2850)
                            {
                                float _2877 = _2742.x - _1403;
                                float _2878 = _2742.y - _1404;
                                float _2879 = _2742.z - _1405;
                                float _2880 = dot(vec3(_2877, _2878, _2879), vec3(_2877, _2878, _2879));
                                float _2883 = inversesqrt(_2880);
                                float _2884 = _2883 * _2877;
                                float _2885 = _2883 * _2878;
                                float _2886 = _2883 * _2879;
                                float _2890 = 1.0 - (_2880 / (_2743 * _2743));
                                float _3836 = isnan(0.0) ? _2890 : (isnan(_2890) ? 0.0 : max(_2890, 0.0));
                                float _2891 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
                                float _2895 = sqrt(_2880) * _2758.w;
                                float _2897 = 1.39999997615814208984375 / (_2895 + 1.39999997615814208984375);
                                float _2898 = _2897 * _2897;
                                float _2899 = 1.0 - _2898;
                                float _2901 = (_2899 * dot(vec3(_2884, _2885, _2886), vec3(_311, _314, _317))) + _2898;
                                float _2904 = _2895 * _2895;
                                float _2908 = (fma(_1405, _2786.z, fma(_1404, _2786.y, _2786.x * _1403)) + _2786.w) / _2849;
                                float _2909 = (fma(_1405, _2802.z, fma(_1404, _2802.y, _2802.x * _1403)) + _2802.w) / _2849;
                                float _2913 = 1.0 - dot(vec2(_2908, _2909), vec2(_2908, _2909));
                                float _3852 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
                                float _2914 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
                                float _2915 = _2914 * (((isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0))) * _2891) / ((_2904 * 0.699999988079071044921875) + 1.0));
                                float _2925 = dot(vec3(_311, _314, _317), vec3((-0.0) - (_1403 * _2436), (-0.0) - (_1404 * _2436), (-0.0) - (_1405 * _2436)));
                                float _3863 = isnan(0.0) ? _2925 : (isnan(_2925) ? 0.0 : max(_2925, 0.0));
                                float _2933 = (_2899 * dot(vec3(_311, _314, _317), vec3(_2884, _2885, _2886))) + _2898;
                                float _3874 = isnan(0.0) ? _2933 : (isnan(_2933) ? 0.0 : max(_2933, 0.0));
                                float _2934 = isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0));
                                float _2938 = (0.5 / (((isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0))) + 9.9999999392252902907785028219223e-09) + _2934)) * _2934;
                                float _3885 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
                                float _2945 = (_2914 * _2891) * (((isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0))) * 3.1415927410125732421875) / ((_2904 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_80_pred = _2945 * _2770.z;
                                frontier_phi_80_pred_1 = _2945 * _2770.y;
                                frontier_phi_80_pred_2 = _2945 * _2770.x;
                                frontier_phi_80_pred_3 = _2915 * _2758.z;
                                frontier_phi_80_pred_4 = _2915 * _2758.y;
                                frontier_phi_80_pred_5 = _2915 * _2758.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _2951 = frontier_phi_80_pred;
                            _2950 = frontier_phi_80_pred_1;
                            _2949 = frontier_phi_80_pred_2;
                            _2954 = frontier_phi_80_pred_3;
                            _2953 = frontier_phi_80_pred_4;
                            _2952 = frontier_phi_80_pred_5;
                            _2700 = _2952 + _2713;
                            _2701 = _2953 + _2714;
                            _2702 = _2954 + _2715;
                            _2697 = _2949 + _2710;
                            _2698 = _2950 + _2711;
                            _2699 = _2951 + _2712;
                            if (_2717 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2710 = _2697;
                                _2711 = _2698;
                                _2712 = _2699;
                                _2713 = _2700;
                                _2714 = _2701;
                                _2715 = _2702;
                                _2716 = _2717;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _2699;
                        frontier_phi_74_pred_1 = _2698;
                        frontier_phi_74_pred_2 = _2697;
                        frontier_phi_74_pred_3 = _2702;
                        frontier_phi_74_pred_4 = _2701;
                        frontier_phi_74_pred_5 = _2700;
                    }
                    _2416 = frontier_phi_74_pred;
                    _2414 = frontier_phi_74_pred_1;
                    _2412 = frontier_phi_74_pred_2;
                    _2422 = frontier_phi_74_pred_3;
                    _2420 = frontier_phi_74_pred_4;
                    _2418 = frontier_phi_74_pred_5;
                    uint _2554 = _2553 + 1u;
                    if (_2554 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2547 = _2412;
                        _2548 = _2414;
                        _2549 = _2416;
                        _2550 = _2418;
                        _2551 = _2420;
                        _2552 = _2422;
                        _2553 = _2554;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _2420;
                frontier_phi_62_63_ladder_1 = _2418;
                frontier_phi_62_63_ladder_2 = _2416;
                frontier_phi_62_63_ladder_3 = _2422;
                frontier_phi_62_63_ladder_4 = _2414;
                frontier_phi_62_63_ladder_5 = _2412;
            }
            else
            {
                frontier_phi_62_63_ladder = _2306;
                frontier_phi_62_63_ladder_1 = _2304;
                frontier_phi_62_63_ladder_2 = _2302;
                frontier_phi_62_63_ladder_3 = _2308;
                frontier_phi_62_63_ladder_4 = _2300;
                frontier_phi_62_63_ladder_5 = _2298;
            }
            _2411 = frontier_phi_62_63_ladder_5;
            _2413 = frontier_phi_62_63_ladder_4;
            _2415 = frontier_phi_62_63_ladder_2;
            _2417 = frontier_phi_62_63_ladder_1;
            _2419 = frontier_phi_62_63_ladder;
            _2421 = frontier_phi_62_63_ladder_3;
        }
        float _2426 = isnan(1.0) ? _356 : (isnan(_356) ? 1.0 : min(_356, 1.0));
        _2231 = (_2426 * _2417) + _1871;
        _2233 = (_2426 * _2419) + _1873;
        _2235 = (_2426 * _2421) + _1875;
        _2237 = ((_2411 * 0.039999999105930328369140625) * _2426) + _2113;
        _2239 = ((_2413 * 0.039999999105930328369140625) * _2426) + _2115;
        _2241 = ((_2415 * 0.039999999105930328369140625) * _2426) + _2117;
    }
    else
    {
        _2231 = _1871;
        _2233 = _1873;
        _2235 = _1875;
        _2237 = _2113;
        _2239 = _2115;
        _2241 = _2117;
    }
    float _3901 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _3912 = isnan(0.0) ? _343 : (isnan(_343) ? 0.0 : max(_343, 0.0));
    float _3923 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    uint _2261 = _330 + 6u;
    float _2269 = _289 / cbSceneParam._m0[86u].x;
    float _2270 = _290 / cbSceneParam._m0[86u].y;
    vec4 _2284 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2269, _2270, (log2((isnan(cbSceneParam._m0[77u].w) ? _221 : (isnan(_221) ? cbSceneParam._m0[77u].w : min(_221, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2286 = _2284.x;
    float _2287 = _2284.y;
    float _2288 = _2284.z;
    float _2289 = _2284.w;
    float _2360;
    float _2362;
    float _2364;
    float _2366;
    if (_221 > cbSceneParam._m0[78u].w)
    {
        float _2323 = isnan(_221) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _221 : min(cbSceneParam._m0[80u].w, _221));
        float _2324 = _2323 / _221;
        float _2335 = _2324 * _274;
        float _2336 = _275 * _2324;
        float _2337 = (-0.0) - _2336;
        float _2338 = _2324 * _276;
        float _2340 = (cbSceneParam._m0[77u].w * _2337) / _2323;
        float _2341 = _2340 + cbSceneParam._m0[79u].w;
        float _2342 = cbSceneParam._m0[79u].w - _2336;
        float _2348 = sqrt(((_2335 * _2335) + (_2336 * _2336)) + (_2338 * _2338));
        float _2351 = (1.0 - (cbSceneParam._m0[77u].w / _2323)) * _2348;
        float _2356 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2358 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2509;
        if (abs((_2337 - _2340) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2509 = ((((_2341 > 0.0) ? exp2(_2356 * _2341) : (2.0 - exp2(_2358 * _2341))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2351;
        }
        else
        {
            float _2469 = 1.0 / cbSceneParam._m0[80u].x;
            float _2470 = isnan(_2342) ? _2341 : (isnan(_2341) ? _2342 : max(_2341, _2342));
            float _2471 = isnan(_2342) ? _2341 : (isnan(_2341) ? _2342 : min(_2341, _2342));
            float _2480 = isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : min(_2470, 0.0));
            float _2481 = isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : min(_2471, 0.0));
            _2509 = ((abs(_2348 / _2337) * cbSceneParam._m0[80u].y) * ((((_2480 - _2481) * 2.0) - ((exp2(_2356 * (isnan(0.0) ? _2470 : (isnan(_2470) ? 0.0 : max(_2470, 0.0)))) - exp2(_2356 * (isnan(0.0) ? _2471 : (isnan(_2471) ? 0.0 : max(_2471, 0.0))))) * _2469)) - ((exp2(_2358 * _2480) - exp2(_2358 * _2481)) * _2469))) + (_2351 * cbSceneParam._m0[80u].z);
        }
        vec4 _2511 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2269, _2270, 1.0), 0.0);
        float _2520 = exp2((_2509 * (-1.44269502162933349609375)) * (1.0 - _2511.w));
        float _2521 = log2(_2520);
        float _2537 = log2(_2289);
        _2360 = (exp2(_2537 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2521 * cbSceneParam._m0[78u].x)) * _2511.x) / cbSceneParam._m0[78u].x)) + _2286;
        _2362 = (exp2(_2537 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2521 * cbSceneParam._m0[78u].y)) * _2511.y) / cbSceneParam._m0[78u].y)) + _2287;
        _2364 = (exp2(_2537 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2521 * cbSceneParam._m0[78u].z)) * _2511.z) / cbSceneParam._m0[78u].z)) + _2288;
        _2366 = _2520 * _2289;
    }
    else
    {
        _2360 = _2286;
        _2362 = _2287;
        _2364 = _2288;
        _2366 = _2289;
    }
    float _2378 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2379 = _2378 == 3.0;
    float _2381 = log2(_2366);
    float _2388 = exp2(_2381 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0))) * (_2231 + ((isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0))) * _356))) + ((_2237 + ((isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0))) * _1135)) * cbPerFrame._m0[3u].x));
    float _2389 = exp2(_2381 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0))) * (_2233 + ((isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0))) * _356))) + ((_2239 + ((isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0))) * _1135)) * cbPerFrame._m0[3u].x));
    float _2390 = exp2(_2381 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0))) * (_2235 + ((isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0))) * _356))) + ((_2241 + ((isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0))) * _1135)) * cbPerFrame._m0[3u].x));
    float _2399 = (_2378 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2399 * (_2379 ? _2388 : (_2388 + (cbSceneParam._m0[72u].w * _2360)));
    SV_Target.y = _2399 * (_2379 ? _2389 : (_2389 + (cbSceneParam._m0[72u].w * _2362)));
    SV_Target.z = _2399 * (_2379 ? _2390 : (_2390 + (cbSceneParam._m0[72u].w * _2364)));
    SV_Target.w = cbInstanceData._m0[_2261].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2261].w;
}


