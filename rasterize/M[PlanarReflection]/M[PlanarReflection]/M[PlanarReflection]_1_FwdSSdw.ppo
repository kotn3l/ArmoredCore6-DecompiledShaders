#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 54) uniform texture2D g_ReflectionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _191 = _190 * NORMAL.x;
    float _192 = _190 * NORMAL.y;
    float _193 = _190 * NORMAL.z;
    float _197 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _205;
    float _206;
    float _207;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _205 = (-0.0) - _191;
        _206 = (-0.0) - _192;
        _207 = (-0.0) - _193;
    }
    else
    {
        _205 = _191;
        _206 = _192;
        _207 = _193;
    }
    vec4 _227 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _233 = _227.x * cbMtdParam._m0[9u].x;
    float _234 = _227.y * cbMtdParam._m0[9u].y;
    float _235 = _227.z * cbMtdParam._m0[9u].z;
    vec4 _247 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _251 = _247.z;
    float _255 = (_247.x * 2.0) + (-1.0);
    float _257 = (_247.y * 2.0) + (-1.0);
    float _258 = dot(vec2(_255, _257), vec2(_255, _257));
    float _2667 = isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0));
    float _264 = sqrt(1.0 - (isnan(1.0) ? _2667 : (isnan(_2667) ? 1.0 : min(_2667, 1.0))));
    float _271 = fma(_264, _205, fma(_257, _197 * TANGENT.x, (_183 * _176) * _255));
    float _274 = fma(_264, _206, fma(_257, _197 * TANGENT.y, (_183 * _177) * _255));
    float _277 = fma(_264, _207, fma(_257, _197 * TANGENT.z, (_183 * _178) * _255));
    float _281 = inversesqrt(dot(vec3(_271, _274, _277), vec3(_271, _274, _277)));
    float _282 = _281 * _271;
    float _283 = _281 * _274;
    float _284 = _281 * _277;
    float _2678 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _285 = isnan(1.0) ? _2678 : (isnan(_2678) ? 1.0 : min(_2678, 1.0));
    float _2689 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
    float _2700 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _2711 = isnan(0.0) ? _235 : (isnan(_235) ? 0.0 : max(_235, 0.0));
    float _304 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _345 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _355 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _345);
    float _356 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _345);
    float _357 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _345);
    float _361 = inversesqrt(dot(vec3(_355, _356, _357), vec3(_355, _356, _357)));
    float _362 = _355 * _361;
    float _363 = _356 * _361;
    float _364 = _357 * _361;
    float _370 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _371 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _392 = fma(_284, cbSceneParam._m0[5u].z, fma(_283, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _282));
    float _395 = fma(_284, cbSceneParam._m0[6u].z, fma(_283, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _282));
    float _398 = fma(_284, cbSceneParam._m0[7u].z, fma(_283, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _282));
    uint _411 = uint(roundEven(NORMAL.w)) * 13u;
    uint _414 = (_411 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _420 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2689 : (isnan(_2689) ? 1.0 : min(_2689, 1.0)))) * cbInstanceData._m0[_414].x;
    float _421 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2700 : (isnan(_2700) ? 1.0 : min(_2700, 1.0)))) * cbInstanceData._m0[_414].y;
    float _422 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2711 : (isnan(_2711) ? 1.0 : min(_2711, 1.0)))) * cbInstanceData._m0[_414].z;
    float _2722 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _423 = isnan(1.0) ? _2722 : (isnan(_2722) ? 1.0 : min(_2722, 1.0));
    float _2733 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _424 = isnan(1.0) ? _2733 : (isnan(_2733) ? 1.0 : min(_2733, 1.0));
    float _2744 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _425 = isnan(1.0) ? _2744 : (isnan(_2744) ? 1.0 : min(_2744, 1.0));
    vec4 _434 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _370, cbSceneParam._m0[86u].y * _371));
    float _437 = _434.x * TEXCOORD.z;
    float _441 = abs(dot(vec3(_362, _363, _364), vec3(_282, _283, _284)));
    float _2755 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _448 = exp2(log2(1.0 - (isnan(1.0) ? _2755 : (isnan(_2755) ? 1.0 : min(_2755, 1.0)))) * 5.0) * 0.959999978542327880859375;
    float _450 = _448 + 0.039999999105930328369140625;
    vec4 _469 = texture(sampler2D(g_ReflectionTexture, SS_ClampLinear), vec2((((10.0 / (_304 + 10.0)) * cbMtdParam._m0[10u].x) * dot(vec3(_282, _283, _284), vec3(1.0, 0.0, 0.0))) + (_370 / cbSceneParam._m0[86u].x), 1.0 - (_371 / cbSceneParam._m0[86u].y)));
    float _505 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _509 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _513 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _815;
    float _816;
    float _817;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _540 = fma(_513, cbModelParam._m0[26u].z, fma(_509, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _505));
        float _544 = fma(_513, cbModelParam._m0[27u].z, fma(_509, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _505));
        float _548 = fma(_513, cbModelParam._m0[28u].z, fma(_509, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _505));
        float _573 = _505 + _282;
        float _574 = _509 + _283;
        float _575 = _513 + _284;
        float _585 = fma(_575, cbModelParam._m0[26u].z, fma(_574, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _573)) - _540;
        float _586 = fma(_575, cbModelParam._m0[27u].z, fma(_574, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _573)) - _544;
        float _587 = fma(_575, cbModelParam._m0[28u].z, fma(_574, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _573)) - _548;
        float _591 = inversesqrt(dot(vec3(_585, _586, _587), vec3(_585, _586, _587)));
        float _604 = ((_591 * _585) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_540 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _605 = ((_591 * _586) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_544 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _606 = ((_591 * _587) / cbModelParam._m0[34u].z) + ((((((_548 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _609 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _616 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _623 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        vec4 _630 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_604, _605, _606), 0.0);
        float _643 = exp2((_609.w + (-0.5)) * 20.0) * 2.0;
        float _650 = exp2((_616.w + (-0.5)) * 20.0) * 2.0;
        float _657 = exp2((_623.w + (-0.5)) * 20.0) * 2.0;
        float _664 = exp2((_630.w + (-0.5)) * 20.0) * 2.0;
        float _665 = _664 * (_630.x + (-0.5));
        float _666 = _664 * (_630.y + (-0.5));
        float _667 = _664 * (_630.z + (-0.5));
        float _668 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        float _669 = isnan(0.0) ? _666 : (isnan(_666) ? 0.0 : max(_666, 0.0));
        float _670 = isnan(0.0) ? _667 : (isnan(_667) ? 0.0 : max(_667, 0.0));
        float _672 = ((_609.x + (-0.5)) * 0.5) * _643;
        float _674 = ((_616.x + (-0.5)) * 0.5) * _650;
        float _676 = ((_623.x + (-0.5)) * 0.5) * _657;
        float _677 = dot(vec3(_672, _674, _676), vec3(_672, _674, _676));
        float _682 = (_677 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_677);
        float _691 = (dot(vec3(_282, _283, _284), vec3(_682 * _672, _682 * _674, _682 * _676)) + 1.0) * 0.5;
        float _2781 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
        float _701 = sqrt(((_674 * _674) + (_672 * _672)) + (_676 * _676)) / (_668 + 9.9999997473787516355514526367188e-06);
        float _2792 = isnan(0.0) ? _701 : (isnan(_701) ? 0.0 : max(_701, 0.0));
        float _702 = isnan(1.0) ? _2792 : (isnan(_2792) ? 1.0 : min(_2792, 1.0));
        float _703 = _702 * 2.0;
        float _707 = (1.0 - _702) / (_702 + 1.0);
        float _2803 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0));
        float _708 = isnan(1.0) ? _2803 : (isnan(_2803) ? 1.0 : min(_2803, 1.0));
        float _717 = ((((1.0 - _708) * (_703 + 2.0)) * exp2(log2(isnan(1.0) ? _2781 : (isnan(_2781) ? 1.0 : min(_2781, 1.0))) * (_703 + 1.0))) + _708) * _668;
        float _719 = ((_609.y + (-0.5)) * 0.5) * _643;
        float _721 = ((_616.y + (-0.5)) * 0.5) * _650;
        float _723 = ((_623.y + (-0.5)) * 0.5) * _657;
        float _724 = dot(vec3(_719, _721, _723), vec3(_719, _721, _723));
        float _729 = (_724 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_724);
        float _737 = (dot(vec3(_282, _283, _284), vec3(_729 * _719, _729 * _721, _729 * _723)) + 1.0) * 0.5;
        float _2814 = isnan(0.0) ? _737 : (isnan(_737) ? 0.0 : max(_737, 0.0));
        float _746 = sqrt(((_721 * _721) + (_719 * _719)) + (_723 * _723)) / (_669 + 9.9999997473787516355514526367188e-06);
        float _2825 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        float _747 = isnan(1.0) ? _2825 : (isnan(_2825) ? 1.0 : min(_2825, 1.0));
        float _748 = _747 * 2.0;
        float _752 = (1.0 - _747) / (_747 + 1.0);
        float _2836 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
        float _753 = isnan(1.0) ? _2836 : (isnan(_2836) ? 1.0 : min(_2836, 1.0));
        float _762 = ((((1.0 - _753) * (_748 + 2.0)) * exp2(log2(isnan(1.0) ? _2814 : (isnan(_2814) ? 1.0 : min(_2814, 1.0))) * (_748 + 1.0))) + _753) * _669;
        float _764 = ((_609.z + (-0.5)) * 0.5) * _643;
        float _766 = ((_616.z + (-0.5)) * 0.5) * _650;
        float _768 = ((_623.z + (-0.5)) * 0.5) * _657;
        float _769 = dot(vec3(_764, _766, _768), vec3(_764, _766, _768));
        float _774 = (_769 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_769);
        float _782 = (dot(vec3(_282, _283, _284), vec3(_774 * _764, _774 * _766, _774 * _768)) + 1.0) * 0.5;
        float _2847 = isnan(0.0) ? _782 : (isnan(_782) ? 0.0 : max(_782, 0.0));
        float _791 = sqrt(((_766 * _766) + (_764 * _764)) + (_768 * _768)) / (_670 + 9.9999997473787516355514526367188e-06);
        float _2858 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
        float _792 = isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0));
        float _793 = _792 * 2.0;
        float _797 = (1.0 - _792) / (_792 + 1.0);
        float _2869 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
        float _798 = isnan(1.0) ? _2869 : (isnan(_2869) ? 1.0 : min(_2869, 1.0));
        float _807 = ((((1.0 - _798) * (_793 + 2.0)) * exp2(log2(isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0))) * (_793 + 1.0))) + _798) * _670;
        _815 = cbModelParam._m0[36u].z * (isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0)));
        _816 = cbModelParam._m0[36u].z * (isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0)));
        _817 = cbModelParam._m0[36u].z * (isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0)));
    }
    else
    {
        _815 = 0.0;
        _816 = 0.0;
        _817 = 0.0;
    }
    float _1112;
    float _1113;
    float _1114;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _843 = fma(_513, cbModelParam._m0[30u].z, fma(_509, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _505));
        float _847 = fma(_513, cbModelParam._m0[31u].z, fma(_509, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _505));
        float _851 = fma(_513, cbModelParam._m0[32u].z, fma(_509, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _505));
        float _874 = _505 + _282;
        float _875 = _509 + _283;
        float _876 = _513 + _284;
        float _886 = fma(_876, cbModelParam._m0[30u].z, fma(_875, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _874)) - _843;
        float _887 = fma(_876, cbModelParam._m0[31u].z, fma(_875, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _874)) - _847;
        float _888 = fma(_876, cbModelParam._m0[32u].z, fma(_875, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _874)) - _851;
        float _892 = inversesqrt(dot(vec3(_886, _887, _888), vec3(_886, _887, _888)));
        float _905 = ((_892 * _886) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_843 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _906 = ((_892 * _887) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_847 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _907 = ((_892 * _888) / cbModelParam._m0[35u].z) + ((((((_851 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _909 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_905, _906, _907), 0.0);
        vec4 _916 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_905, _906, _907), 0.0);
        vec4 _923 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_905, _906, _907), 0.0);
        vec4 _930 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_905, _906, _907), 0.0);
        float _942 = exp2((_909.w + (-0.5)) * 20.0) * 2.0;
        float _949 = exp2((_916.w + (-0.5)) * 20.0) * 2.0;
        float _956 = exp2((_923.w + (-0.5)) * 20.0) * 2.0;
        float _963 = exp2((_930.w + (-0.5)) * 20.0) * 2.0;
        float _964 = _963 * (_930.x + (-0.5));
        float _965 = _963 * (_930.y + (-0.5));
        float _966 = _963 * (_930.z + (-0.5));
        float _967 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
        float _968 = isnan(0.0) ? _965 : (isnan(_965) ? 0.0 : max(_965, 0.0));
        float _969 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
        float _971 = ((_909.x + (-0.5)) * 0.5) * _942;
        float _973 = ((_916.x + (-0.5)) * 0.5) * _949;
        float _975 = ((_923.x + (-0.5)) * 0.5) * _956;
        float _976 = dot(vec3(_971, _973, _975), vec3(_971, _973, _975));
        float _981 = (_976 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_976);
        float _989 = (dot(vec3(_282, _283, _284), vec3(_981 * _971, _981 * _973, _981 * _975)) + 1.0) * 0.5;
        float _2910 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
        float _998 = sqrt(((_973 * _973) + (_971 * _971)) + (_975 * _975)) / (_967 + 9.9999997473787516355514526367188e-06);
        float _2921 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
        float _999 = isnan(1.0) ? _2921 : (isnan(_2921) ? 1.0 : min(_2921, 1.0));
        float _1000 = _999 * 2.0;
        float _1004 = (1.0 - _999) / (_999 + 1.0);
        float _2932 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
        float _1005 = isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0));
        float _1014 = ((((1.0 - _1005) * (_1000 + 2.0)) * exp2(log2(isnan(1.0) ? _2910 : (isnan(_2910) ? 1.0 : min(_2910, 1.0))) * (_1000 + 1.0))) + _1005) * _967;
        float _1016 = ((_909.y + (-0.5)) * 0.5) * _942;
        float _1018 = ((_916.y + (-0.5)) * 0.5) * _949;
        float _1020 = ((_923.y + (-0.5)) * 0.5) * _956;
        float _1021 = dot(vec3(_1016, _1018, _1020), vec3(_1016, _1018, _1020));
        float _1026 = (_1021 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1021);
        float _1034 = (dot(vec3(_282, _283, _284), vec3(_1026 * _1016, _1026 * _1018, _1026 * _1020)) + 1.0) * 0.5;
        float _2943 = isnan(0.0) ? _1034 : (isnan(_1034) ? 0.0 : max(_1034, 0.0));
        float _1043 = sqrt(((_1018 * _1018) + (_1016 * _1016)) + (_1020 * _1020)) / (_968 + 9.9999997473787516355514526367188e-06);
        float _2954 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1044 = isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0));
        float _1045 = _1044 * 2.0;
        float _1049 = (1.0 - _1044) / (_1044 + 1.0);
        float _2965 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
        float _1050 = isnan(1.0) ? _2965 : (isnan(_2965) ? 1.0 : min(_2965, 1.0));
        float _1059 = ((((1.0 - _1050) * (_1045 + 2.0)) * exp2(log2(isnan(1.0) ? _2943 : (isnan(_2943) ? 1.0 : min(_2943, 1.0))) * (_1045 + 1.0))) + _1050) * _968;
        float _1061 = ((_909.z + (-0.5)) * 0.5) * _942;
        float _1063 = ((_916.z + (-0.5)) * 0.5) * _949;
        float _1065 = ((_923.z + (-0.5)) * 0.5) * _956;
        float _1066 = dot(vec3(_1061, _1063, _1065), vec3(_1061, _1063, _1065));
        float _1071 = (_1066 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1066);
        float _1079 = (dot(vec3(_282, _283, _284), vec3(_1071 * _1061, _1071 * _1063, _1071 * _1065)) + 1.0) * 0.5;
        float _2976 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1088 = sqrt(((_1063 * _1063) + (_1061 * _1061)) + (_1065 * _1065)) / (_969 + 9.9999997473787516355514526367188e-06);
        float _2987 = isnan(0.0) ? _1088 : (isnan(_1088) ? 0.0 : max(_1088, 0.0));
        float _1089 = isnan(1.0) ? _2987 : (isnan(_2987) ? 1.0 : min(_2987, 1.0));
        float _1090 = _1089 * 2.0;
        float _1094 = (1.0 - _1089) / (_1089 + 1.0);
        float _2998 = isnan(0.0) ? _1094 : (isnan(_1094) ? 0.0 : max(_1094, 0.0));
        float _1095 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
        float _1104 = ((((1.0 - _1095) * (_1090 + 2.0)) * exp2(log2(isnan(1.0) ? _2976 : (isnan(_2976) ? 1.0 : min(_2976, 1.0))) * (_1090 + 1.0))) + _1095) * _969;
        _1112 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0)));
        _1113 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1059 : (isnan(_1059) ? 0.0 : max(_1059, 0.0)));
        _1114 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0)));
    }
    else
    {
        _1112 = 0.0;
        _1113 = 0.0;
        _1114 = 0.0;
    }
    float _1124 = (cbModelParam._m0[1u].x * (_1112 - _815)) + _815;
    float _1125 = (cbModelParam._m0[1u].x * (_1113 - _816)) + _816;
    float _1126 = (cbModelParam._m0[1u].x * (_1114 - _817)) + _817;
    float _1147 = fma(_1126, cbSceneParam._m0[89u].z, fma(_1125, cbSceneParam._m0[89u].y, _1124 * cbSceneParam._m0[89u].x));
    float _1150 = fma(_1126, cbSceneParam._m0[90u].z, fma(_1125, cbSceneParam._m0[90u].y, _1124 * cbSceneParam._m0[90u].x));
    float _1153 = fma(_1126, cbSceneParam._m0[91u].z, fma(_1125, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1124));
    float _1158 = (0.959999978542327880859375 - _448) * _437;
    vec4 _1163 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_370, _371));
    float _1165 = _1163.w;
    float _1177 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1165);
    float _1178 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1165);
    float _1179 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1165);
    uvec4 _1183 = floatBitsToUint(cbInstanceData._m0[_411 + 5u]);
    uint _1185 = _1183.x * 14u;
    uint _1187 = _1185 + 13u;
    float _1194 = _437 + (-1.0);
    float _1199 = (cbLight._m0[_1187].x * _1194) + 1.0;
    float _1200 = (cbLight._m0[_1187].y * _1194) + 1.0;
    float _1201 = (cbLight._m0[_1187].z * _1194) + 1.0;
    float _1202 = (cbLight._m0[_1187].w * _1194) + 1.0;
    uint _1203 = _1185 + 5u;
    float _1209 = isnan(1.0) ? _1200 : (isnan(_1200) ? 1.0 : min(_1200, 1.0));
    uint _1213 = _1185 + 4u;
    float _1223 = isnan(1.0) ? _1199 : (isnan(_1199) ? 1.0 : min(_1199, 1.0));
    uint _1227 = _1185 | 1u;
    float _1238 = dot(vec3(cbLight._m0[_1185].xyz), vec3(_282, _283, _284));
    float _1241 = dot(vec3(cbLight._m0[_1227].xyz), vec3(_282, _283, _284));
    float _3049 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
    float _3060 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
    float _1246 = (isnan(1.0) ? _3049 : (isnan(_3049) ? 1.0 : min(_3049, 1.0))) * 0.3183098733425140380859375;
    float _1248 = (isnan(1.0) ? _3060 : (isnan(_3060) ? 1.0 : min(_3060, 1.0))) * 0.3183098733425140380859375;
    float _1255 = ((cbLight._m0[_1203].x * _1209) * _1248) + (((cbLight._m0[_1213].x * _1177) * _1223) * _1246);
    float _1256 = ((_1209 * cbLight._m0[_1203].y) * _1248) + (((cbLight._m0[_1213].y * _1178) * _1223) * _1246);
    float _1257 = ((_1209 * cbLight._m0[_1203].z) * _1248) + (((cbLight._m0[_1213].z * _1179) * _1223) * _1246);
    uvec4 _1262 = floatBitsToUint(cbLight._m0[_1185 + 12u]);
    bool _1264 = _1262.x == 0u;
    float _1265;
    float _1267;
    float _1269;
    if (_1264)
    {
        _1265 = _1255;
        _1267 = _1256;
        _1269 = _1257;
    }
    else
    {
        uint _1273 = _1185 + 6u;
        float _1289 = (dot(vec3(cbLight._m0[_1185 + 2u].xyz), vec3(_282, _283, _284)) * 0.5) + 0.5;
        float _1290 = _1289 * _1289;
        float _3071 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
        float _1291 = isnan(1.0) ? _3071 : (isnan(_3071) ? 1.0 : min(_3071, 1.0));
        float _1292 = isnan(1.0) ? _1201 : (isnan(_1201) ? 1.0 : min(_1201, 1.0));
        _1265 = (((cbLight._m0[_1273].x * 0.3183098733425140380859375) * _1291) * _1292) + _1255;
        _1267 = (((cbLight._m0[_1273].y * 0.3183098733425140380859375) * _1291) * _1292) + _1256;
        _1269 = (((cbLight._m0[_1273].z * 0.3183098733425140380859375) * _1291) * _1292) + _1257;
    }
    bool _1272 = _1262.y == 0u;
    float _1302;
    float _1304;
    float _1306;
    if (_1272)
    {
        _1302 = _1265;
        _1304 = _1267;
        _1306 = _1269;
    }
    else
    {
        uint _1466 = _1185 + 7u;
        float _1482 = (dot(vec3(cbLight._m0[_1185 + 3u].xyz), vec3(_282, _283, _284)) * 0.5) + 0.5;
        float _1483 = _1482 * _1482;
        float _3087 = isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0));
        float _1484 = isnan(1.0) ? _3087 : (isnan(_3087) ? 1.0 : min(_3087, 1.0));
        float _1485 = isnan(1.0) ? _1202 : (isnan(_1202) ? 1.0 : min(_1202, 1.0));
        _1302 = (((cbLight._m0[_1466].x * 0.3183098733425140380859375) * _1484) * _1485) + _1265;
        _1304 = (((cbLight._m0[_1466].y * 0.3183098733425140380859375) * _1484) * _1485) + _1267;
        _1306 = (((cbLight._m0[_1466].z * 0.3183098733425140380859375) * _1484) * _1485) + _1269;
    }
    uint _1309 = _1185 + 8u;
    float _1322 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1185].w)) * _285) * 0.949999988079071044921875);
    float _1323 = _1322 * _1322;
    float _1324 = cbLight._m0[_1185].x + _362;
    float _1325 = cbLight._m0[_1185].y + _363;
    float _1326 = cbLight._m0[_1185].z + _364;
    float _1330 = inversesqrt(dot(vec3(_1324, _1325, _1326), vec3(_1324, _1325, _1326)));
    float _1331 = _1330 * _1324;
    float _1332 = _1330 * _1325;
    float _1333 = _1330 * _1326;
    float _1334 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1185].xyz));
    float _3103 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
    float _1337 = isnan(1.0) ? _3103 : (isnan(_3103) ? 1.0 : min(_3103, 1.0));
    float _1338 = dot(vec3(_282, _283, _284), vec3(_362, _363, _364));
    float _3114 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
    float _1341 = isnan(1.0) ? _3114 : (isnan(_3114) ? 1.0 : min(_3114, 1.0));
    float _1342 = dot(vec3(_282, _283, _284), vec3(_1331, _1332, _1333));
    float _3125 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
    float _1345 = isnan(1.0) ? _3125 : (isnan(_3125) ? 1.0 : min(_3125, 1.0));
    float _1346 = dot(vec3(cbLight._m0[_1185].xyz), vec3(_1331, _1332, _1333));
    float _3136 = isnan(0.0) ? _1346 : (isnan(_1346) ? 0.0 : max(_1346, 0.0));
    float _1350 = _1323 * _1323;
    float _1354 = ((_1345 * _1345) * (_1350 + (-1.0))) + 1.0;
    float _1364 = (exp2(log2(1.0 - (isnan(1.0) ? _3136 : (isnan(_3136) ? 1.0 : min(_3136, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1365 = 1.0 - _1323;
    float _1376 = (0.5 / (((_1341 * ((_1337 * _1365) + _1323)) + 9.9999999392252902907785028219223e-09) + (((_1341 * _1365) + _1323) * _1337))) * _1337;
    float _3147 = isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0));
    float _1378 = (isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0))) * (_1350 / ((_1354 * _1354) * 3.141590118408203125));
    uint _1392 = _1185 + 9u;
    float _1403 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1227].w)) * _285) * 0.949999988079071044921875);
    float _1404 = _1403 * _1403;
    float _1405 = cbLight._m0[_1227].x + _362;
    float _1406 = cbLight._m0[_1227].y + _363;
    float _1407 = cbLight._m0[_1227].z + _364;
    float _1411 = inversesqrt(dot(vec3(_1405, _1406, _1407), vec3(_1405, _1406, _1407)));
    float _1412 = _1411 * _1405;
    float _1413 = _1411 * _1406;
    float _1414 = _1411 * _1407;
    float _1415 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1227].xyz));
    float _3158 = isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0));
    float _1418 = isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0));
    float _1419 = dot(vec3(_282, _283, _284), vec3(_1412, _1413, _1414));
    float _3169 = isnan(0.0) ? _1419 : (isnan(_1419) ? 0.0 : max(_1419, 0.0));
    float _1422 = isnan(1.0) ? _3169 : (isnan(_3169) ? 1.0 : min(_3169, 1.0));
    float _1423 = dot(vec3(cbLight._m0[_1227].xyz), vec3(_1412, _1413, _1414));
    float _3180 = isnan(0.0) ? _1423 : (isnan(_1423) ? 0.0 : max(_1423, 0.0));
    float _1427 = _1404 * _1404;
    float _1431 = ((_1422 * _1422) * (_1427 + (-1.0))) + 1.0;
    float _1440 = (exp2(log2(1.0 - (isnan(1.0) ? _3180 : (isnan(_3180) ? 1.0 : min(_3180, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1441 = 1.0 - _1404;
    float _1451 = (0.5 / (((_1341 * ((_1418 * _1441) + _1404)) + 9.9999999392252902907785028219223e-09) + (((_1341 * _1441) + _1404) * _1418))) * _1418;
    float _3191 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
    float _1453 = (isnan(1.0) ? _3191 : (isnan(_3191) ? 1.0 : min(_3191, 1.0))) * (_1427 / ((_1431 * _1431) * 3.141590118408203125));
    float _1463 = (((_1440 * cbLight._m0[_1392].x) * _1453) * _1209) + ((((cbLight._m0[_1309].x * _1177) * _1364) * _1378) * _1223);
    float _1464 = (((_1440 * cbLight._m0[_1392].y) * _1453) * _1209) + ((((cbLight._m0[_1309].y * _1178) * _1364) * _1378) * _1223);
    float _1465 = (((_1440 * cbLight._m0[_1392].z) * _1453) * _1209) + ((((cbLight._m0[_1309].z * _1179) * _1364) * _1378) * _1223);
    float _1495;
    float _1497;
    float _1499;
    if (_1264)
    {
        _1495 = _1463;
        _1497 = _1464;
        _1499 = _1465;
    }
    else
    {
        uint _1501 = _1185 + 2u;
        uint _1505 = _1185 + 10u;
        float _1519 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1501].w)) * _285) * 0.949999988079071044921875);
        float _1520 = _1519 * _1519;
        float _1521 = cbLight._m0[_1501].x + _362;
        float _1522 = cbLight._m0[_1501].y + _363;
        float _1523 = cbLight._m0[_1501].z + _364;
        float _1527 = inversesqrt(dot(vec3(_1521, _1522, _1523), vec3(_1521, _1522, _1523)));
        float _1528 = _1527 * _1521;
        float _1529 = _1527 * _1522;
        float _1530 = _1527 * _1523;
        float _1531 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1501].xyz));
        float _3202 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1534 = isnan(1.0) ? _3202 : (isnan(_3202) ? 1.0 : min(_3202, 1.0));
        float _1535 = dot(vec3(_282, _283, _284), vec3(_1528, _1529, _1530));
        float _3213 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1538 = isnan(1.0) ? _3213 : (isnan(_3213) ? 1.0 : min(_3213, 1.0));
        float _1539 = dot(vec3(cbLight._m0[_1501].xyz), vec3(_1528, _1529, _1530));
        float _3224 = isnan(0.0) ? _1539 : (isnan(_1539) ? 0.0 : max(_1539, 0.0));
        float _1543 = _1520 * _1520;
        float _1547 = ((_1538 * _1538) * (_1543 + (-1.0))) + 1.0;
        float _1556 = (exp2(log2(1.0 - (isnan(1.0) ? _3224 : (isnan(_3224) ? 1.0 : min(_3224, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1557 = 1.0 - _1520;
        float _1567 = (0.5 / (((_1341 * ((_1534 * _1557) + _1520)) + 9.9999999392252902907785028219223e-09) + (((_1341 * _1557) + _1520) * _1534))) * _1534;
        float _3235 = isnan(0.0) ? _1567 : (isnan(_1567) ? 0.0 : max(_1567, 0.0));
        float _1569 = (isnan(1.0) ? _3235 : (isnan(_3235) ? 1.0 : min(_3235, 1.0))) * (_1543 / ((_1547 * _1547) * 3.141590118408203125));
        float _1570 = isnan(1.0) ? _1201 : (isnan(_1201) ? 1.0 : min(_1201, 1.0));
        _1495 = (((_1556 * cbLight._m0[_1505].x) * _1569) * _1570) + _1463;
        _1497 = (((_1556 * cbLight._m0[_1505].y) * _1569) * _1570) + _1464;
        _1499 = (((_1556 * cbLight._m0[_1505].z) * _1569) * _1570) + _1465;
    }
    float _1580;
    float _1582;
    float _1584;
    if (_1272)
    {
        _1580 = _1495;
        _1582 = _1497;
        _1584 = _1499;
    }
    else
    {
        uint _1591 = _1185 + 3u;
        uint _1595 = _1185 + 11u;
        float _1609 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1591].w)) * _285) * 0.949999988079071044921875);
        float _1610 = _1609 * _1609;
        float _1611 = cbLight._m0[_1591].x + _362;
        float _1612 = cbLight._m0[_1591].y + _363;
        float _1613 = cbLight._m0[_1591].z + _364;
        float _1617 = inversesqrt(dot(vec3(_1611, _1612, _1613), vec3(_1611, _1612, _1613)));
        float _1618 = _1617 * _1611;
        float _1619 = _1617 * _1612;
        float _1620 = _1617 * _1613;
        float _1621 = dot(vec3(_282, _283, _284), vec3(cbLight._m0[_1591].xyz));
        float _3251 = isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0));
        float _1624 = isnan(1.0) ? _3251 : (isnan(_3251) ? 1.0 : min(_3251, 1.0));
        float _1625 = dot(vec3(_282, _283, _284), vec3(_1618, _1619, _1620));
        float _3262 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1628 = isnan(1.0) ? _3262 : (isnan(_3262) ? 1.0 : min(_3262, 1.0));
        float _1629 = dot(vec3(cbLight._m0[_1591].xyz), vec3(_1618, _1619, _1620));
        float _3273 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1633 = _1610 * _1610;
        float _1637 = ((_1628 * _1628) * (_1633 + (-1.0))) + 1.0;
        float _1646 = (exp2(log2(1.0 - (isnan(1.0) ? _3273 : (isnan(_3273) ? 1.0 : min(_3273, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1647 = 1.0 - _1610;
        float _1657 = (0.5 / (((_1341 * ((_1624 * _1647) + _1610)) + 9.9999999392252902907785028219223e-09) + (((_1341 * _1647) + _1610) * _1624))) * _1624;
        float _3284 = isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0));
        float _1659 = (isnan(1.0) ? _3284 : (isnan(_3284) ? 1.0 : min(_3284, 1.0))) * (_1633 / ((_1637 * _1637) * 3.141590118408203125));
        float _1660 = isnan(1.0) ? _1202 : (isnan(_1202) ? 1.0 : min(_1202, 1.0));
        _1580 = (((_1646 * cbLight._m0[_1595].x) * _1659) * _1660) + _1495;
        _1582 = (((_1646 * cbLight._m0[_1595].y) * _1659) * _1660) + _1497;
        _1584 = (((_1646 * cbLight._m0[_1595].z) * _1659) * _1660) + _1499;
    }
    float _1769;
    float _1771;
    float _1773;
    float _1775;
    float _1777;
    float _1779;
    if (_1183.y == 0u)
    {
        float _1710 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1711 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1710;
        float _1712 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1710;
        float _1713 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1710;
        uvec4 _1725 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1726 = _1725.x;
        uint _1737 = uint((float(_1725.y) * floor(float(uint(cbSceneParam._m0[85u].y * _371) / _1726))) + floor(float(uint(cbSceneParam._m0[85u].x * _370) / _1726)));
        float _1747 = (log2(_1713 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1748 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
        uint _1751 = uint(isnan(14.0) ? _1748 : (isnan(_1748) ? 14.0 : min(_1748, 14.0)));
        uvec4 _1756 = texelFetch(g_lightClusterGridBuffer, int(((_1751 << 2u) + (_1737 << 6u)) >> 2u));
        uint _1757 = _1756.x;
        uint _1758 = _1725.z;
        float _1836;
        float _1838;
        float _1840;
        float _1842;
        float _1844;
        float _1846;
        if (((((1u << ((_1758 >> 4u) & 15u)) + 4294967295u) & _1757) == 0u) || ((_1758 & 240u) == 0u))
        {
            _1836 = 0.0;
            _1838 = 0.0;
            _1840 = 0.0;
            _1842 = 0.0;
            _1844 = 0.0;
            _1846 = 0.0;
        }
        else
        {
            float _1837;
            float _1839;
            float _1841;
            float _1843;
            float _1845;
            float _1847;
            float _1981 = 0.0;
            float _1982 = 0.0;
            float _1983 = 0.0;
            float _1984 = 0.0;
            float _1985 = 0.0;
            float _1986 = 0.0;
            uint _1987 = 0u;
            uint _1996;
            bool _1997;
            for (;;)
            {
                _1996 = texelFetch(g_lightClassification, int((((_1751 << 5u) + (_1737 << 9u)) + (_1987 << 2u)) >> 2u)).x;
                _1997 = _1996 == 0u;
                float frontier_phi_27_pred;
                float frontier_phi_27_pred_1;
                float frontier_phi_27_pred_2;
                float frontier_phi_27_pred_3;
                float frontier_phi_27_pred_4;
                float frontier_phi_27_pred_5;
                if (_1997)
                {
                    frontier_phi_27_pred = _1981;
                    frontier_phi_27_pred_1 = _1982;
                    frontier_phi_27_pred_2 = _1986;
                    frontier_phi_27_pred_3 = _1985;
                    frontier_phi_27_pred_4 = _1984;
                    frontier_phi_27_pred_5 = _1983;
                }
                else
                {
                    float _2105;
                    float _2106;
                    float _2107;
                    float _2108;
                    float _2109;
                    float _2110;
                    uint _2111;
                    _2105 = _1981;
                    _2106 = _1982;
                    _2107 = _1983;
                    _2108 = _1984;
                    _2109 = _1985;
                    _2110 = _1986;
                    _2111 = _1996;
                    float _2037;
                    float _2038;
                    float _2039;
                    float _2040;
                    float _2041;
                    float _2042;
                    for (;;)
                    {
                        uint _2115 = uint(findLSB(_2111)) + (_1987 << 5u);
                        uint _2112 = (_2111 + 4294967295u) & _2111;
                        uint _2117 = _2115 * 48u;
                        vec4 _2131 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2117)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 3u)).x));
                        uint _2137 = (_2115 * 48u) + 4u;
                        vec4 _2150 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2137)).x, texelFetch(g_PointLightRenderingBuffer, int(_2137 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2137 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2137 + 3u)).x));
                        uint _2156 = (_2115 * 48u) + 8u;
                        vec3 _2167 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2156)).x, texelFetch(g_PointLightRenderingBuffer, int(_2156 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2156 + 2u)).x));
                        float _2171 = _2131.x - _1711;
                        float _2172 = _2131.y - _1712;
                        float _2173 = _2131.z - _1713;
                        float _2174 = dot(vec3(_2171, _2172, _2173), vec3(_2171, _2172, _2173));
                        float _2177 = inversesqrt(_2174);
                        float _2178 = _2177 * _2171;
                        float _2179 = _2177 * _2172;
                        float _2180 = _2177 * _2173;
                        float _2181 = dot(vec3(_392, _395, _398), vec3(_2178, _2179, _2180));
                        float _2186 = 1.0 - (_2174 * _2131.w);
                        float _3310 = isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0));
                        float _2187 = isnan(1.0) ? _3310 : (isnan(_3310) ? 1.0 : min(_3310, 1.0));
                        float _2188 = sqrt(_2174) * _2150.w;
                        float _2191 = 1.39999997615814208984375 / (_2188 + 1.39999997615814208984375);
                        float _2192 = _2191 * _2191;
                        float _2195 = ((1.0 - _2192) * _2181) + _2192;
                        float _2198 = _2188 * _2188;
                        float _2202 = ((isnan(0.0) ? _2195 : (isnan(_2195) ? 0.0 : max(_2195, 0.0))) * _2187) / ((_2198 * 0.699999988079071044921875) + 1.0);
                        float _2206 = (-0.0) - _1711;
                        float _2207 = (-0.0) - _1712;
                        float _2208 = (-0.0) - _1713;
                        float _2212 = inversesqrt(dot(vec3(_2206, _2207, _2208), vec3(_2206, _2207, _2208)));
                        float _2213 = _2212 * _2206;
                        float _2214 = _2212 * _2207;
                        float _2215 = _2212 * _2208;
                        float _2223 = exp2(log2(1.0 / ((_2198 * 3.5) + 5.0)) * 0.25);
                        float _2225 = 1.0 - sqrt(_285);
                        float _2232 = sqrt(1.0 - ((1.0 - (_2225 * _2225)) * (1.0 - (_2223 * _2223))));
                        float _2233 = _2232 * _2232;
                        float _2234 = _2233 * _2233;
                        float _2235 = _2213 + _2178;
                        float _2236 = _2214 + _2179;
                        float _2237 = _2215 + _2180;
                        float _2241 = inversesqrt(dot(vec3(_2235, _2236, _2237), vec3(_2235, _2236, _2237)));
                        float _2245 = dot(vec3(_392, _395, _398), vec3(_2213, _2214, _2215));
                        float _3326 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
                        float _2248 = isnan(1.0) ? _3326 : (isnan(_3326) ? 1.0 : min(_3326, 1.0));
                        float _2249 = dot(vec3(_392, _395, _398), vec3(_2241 * _2235, _2241 * _2236, _2241 * _2237));
                        float _3337 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
                        float _2252 = isnan(1.0) ? _3337 : (isnan(_3337) ? 1.0 : min(_3337, 1.0));
                        float _2256 = ((_2252 * _2252) * (_2234 + (-1.0))) + 1.0;
                        float _2257 = _2191 * _2233;
                        float _2258 = _2257 * _2257;
                        float _2261 = ((1.0 - _2258) * _2181) + _2258;
                        float _3348 = isnan(0.0) ? _2261 : (isnan(_2261) ? 0.0 : max(_2261, 0.0));
                        float _2262 = isnan(1.0) ? _3348 : (isnan(_3348) ? 1.0 : min(_3348, 1.0));
                        float _2263 = 1.0 - _2233;
                        float _2273 = (0.5 / (((_2262 * ((_2248 * _2263) + _2233)) + 9.9999999392252902907785028219223e-09) + (((_2262 * _2263) + _2233) * _2248))) * _2262;
                        float _3359 = isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0));
                        float _2284 = (((_2234 * 3.1415927410125732421875) * (isnan(1.0) ? _3359 : (isnan(_3359) ? 1.0 : min(_3359, 1.0)))) / ((_2256 * _2256) * ((_2198 * 2.1991131305694580078125) + 3.141590118408203125))) * _2187;
                        _2040 = (_2202 * _2150.x) + _2108;
                        _2041 = (_2202 * _2150.y) + _2109;
                        _2042 = (_2202 * _2150.z) + _2110;
                        _2037 = (_2284 * _2167.x) + _2105;
                        _2038 = (_2284 * _2167.y) + _2106;
                        _2039 = (_2284 * _2167.z) + _2107;
                        if (_2112 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2105 = _2037;
                            _2106 = _2038;
                            _2107 = _2039;
                            _2108 = _2040;
                            _2109 = _2041;
                            _2110 = _2042;
                            _2111 = _2112;
                        }
                    }
                    frontier_phi_27_pred = _2037;
                    frontier_phi_27_pred_1 = _2038;
                    frontier_phi_27_pred_2 = _2042;
                    frontier_phi_27_pred_3 = _2041;
                    frontier_phi_27_pred_4 = _2040;
                    frontier_phi_27_pred_5 = _2039;
                }
                _1837 = frontier_phi_27_pred;
                _1839 = frontier_phi_27_pred_1;
                _1847 = frontier_phi_27_pred_2;
                _1845 = frontier_phi_27_pred_3;
                _1843 = frontier_phi_27_pred_4;
                _1841 = frontier_phi_27_pred_5;
                uint _1988 = _1987 + 1u;
                if (_1988 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1981 = _1837;
                    _1982 = _1839;
                    _1983 = _1841;
                    _1984 = _1843;
                    _1985 = _1845;
                    _1986 = _1847;
                    _1987 = _1988;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1836 = _1837;
            _1838 = _1839;
            _1840 = _1841;
            _1842 = _1843;
            _1844 = _1845;
            _1846 = _1847;
        }
        uvec4 _1850 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1851 = _1850.z;
        uint _1853 = (_1851 >> 8u) & 15u;
        float _1949;
        float _1951;
        float _1953;
        float _1955;
        float _1957;
        float _1959;
        if (((4294967295u << _1853) & _1757) == 0u)
        {
            _1949 = _1836;
            _1951 = _1838;
            _1953 = _1840;
            _1955 = _1842;
            _1957 = _1844;
            _1959 = _1846;
        }
        else
        {
            float _1974 = inversesqrt(dot(vec3(_1711, _1712, _1713), vec3(_1711, _1712, _1713)));
            float _1975 = _1974 * _1711;
            float _1976 = _1974 * _1712;
            float _1977 = _1974 * _1713;
            float frontier_phi_21_22_ladder;
            float frontier_phi_21_22_ladder_1;
            float frontier_phi_21_22_ladder_2;
            float frontier_phi_21_22_ladder_3;
            float frontier_phi_21_22_ladder_4;
            float frontier_phi_21_22_ladder_5;
            if (_1853 < ((_1851 >> 12u) & 15u))
            {
                float _1950;
                float _1952;
                float _1954;
                float _1956;
                float _1958;
                float _1960;
                float _2088 = _1836;
                float _2089 = _1838;
                float _2090 = _1840;
                float _2091 = _1842;
                float _2092 = _1844;
                float _2093 = _1846;
                uint _2094 = _1853;
                uint _2103;
                bool _2104;
                for (;;)
                {
                    _2103 = texelFetch(g_lightClassification, int((((_1751 << 5u) + (_1737 << 9u)) + (_2094 << 2u)) >> 2u)).x;
                    _2104 = _2103 == 0u;
                    float frontier_phi_33_pred;
                    float frontier_phi_33_pred_1;
                    float frontier_phi_33_pred_2;
                    float frontier_phi_33_pred_3;
                    float frontier_phi_33_pred_4;
                    float frontier_phi_33_pred_5;
                    if (_2104)
                    {
                        frontier_phi_33_pred = _2093;
                        frontier_phi_33_pred_1 = _2092;
                        frontier_phi_33_pred_2 = _2091;
                        frontier_phi_33_pred_3 = _2090;
                        frontier_phi_33_pred_4 = _2089;
                        frontier_phi_33_pred_5 = _2088;
                    }
                    else
                    {
                        float _2289;
                        float _2290;
                        float _2291;
                        float _2292;
                        float _2293;
                        float _2294;
                        float _2587;
                        float _2588;
                        float _2589;
                        float _2590;
                        float _2591;
                        float _2592;
                        float _2302 = _2088;
                        float _2303 = _2089;
                        float _2304 = _2090;
                        float _2305 = _2091;
                        float _2306 = _2092;
                        float _2307 = _2093;
                        uint _2308 = _2103;
                        uint _2309;
                        vec4 _2335;
                        float _2336;
                        vec4 _2351;
                        vec3 _2363;
                        vec4 _2379;
                        vec4 _2395;
                        float _2442;
                        bool _2443;
                        for (;;)
                        {
                            uint _2319 = ((_2094 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2308));
                            _2309 = (_2308 + 4294967295u) & _2308;
                            uint _2321 = _2319 * 40u;
                            _2335 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2321)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2321 + 3u)).x));
                            _2336 = _2335.w;
                            uint _2338 = (_2319 * 40u) + 4u;
                            _2351 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2338)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2338 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2338 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2338 + 3u)).x));
                            uint _2353 = (_2319 * 40u) + 8u;
                            _2363 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2353)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2353 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2353 + 2u)).x));
                            uint _2366 = (_2319 * 40u) + 16u;
                            _2379 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2366)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2366 + 3u)).x));
                            uint _2382 = (_2319 * 40u) + 20u;
                            _2395 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2382)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2382 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2382 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2382 + 3u)).x));
                            uint _2398 = (_2319 * 40u) + 24u;
                            vec4 _2411 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2398)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2398 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2398 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2398 + 3u)).x));
                            uint _2417 = (_2319 * 40u) + 28u;
                            vec4 _2430 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2417)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2417 + 3u)).x));
                            _2442 = fma(_1713, _2430.z, fma(_1712, _2430.y, _2430.x * _1711)) + _2430.w;
                            _2443 = !((fma(_1713, _2411.z, fma(_1712, _2411.y, _2411.x * _1711)) + _2411.w) <= 0.0);
                            float frontier_phi_39_pred;
                            float frontier_phi_39_pred_1;
                            float frontier_phi_39_pred_2;
                            float frontier_phi_39_pred_3;
                            float frontier_phi_39_pred_4;
                            float frontier_phi_39_pred_5;
                            if (_2443)
                            {
                                float _2470 = _2335.x - _1711;
                                float _2471 = _2335.y - _1712;
                                float _2472 = _2335.z - _1713;
                                float _2473 = dot(vec3(_2470, _2471, _2472), vec3(_2470, _2471, _2472));
                                float _2476 = inversesqrt(_2473);
                                float _2477 = _2476 * _2470;
                                float _2478 = _2476 * _2471;
                                float _2479 = _2476 * _2472;
                                float _2483 = 1.0 - (_2473 / (_2336 * _2336));
                                float _3370 = isnan(0.0) ? _2483 : (isnan(_2483) ? 0.0 : max(_2483, 0.0));
                                float _2484 = isnan(1.0) ? _3370 : (isnan(_3370) ? 1.0 : min(_3370, 1.0));
                                float _2488 = sqrt(_2473) * _2351.w;
                                float _2490 = 1.39999997615814208984375 / (_2488 + 1.39999997615814208984375);
                                float _2491 = _2490 * _2490;
                                float _2494 = ((1.0 - _2491) * dot(vec3(_2477, _2478, _2479), vec3(_392, _395, _398))) + _2491;
                                float _2497 = _2488 * _2488;
                                float _2501 = (fma(_1713, _2379.z, fma(_1712, _2379.y, _2379.x * _1711)) + _2379.w) / _2442;
                                float _2502 = (fma(_1713, _2395.z, fma(_1712, _2395.y, _2395.x * _1711)) + _2395.w) / _2442;
                                float _2506 = 1.0 - dot(vec2(_2501, _2502), vec2(_2501, _2502));
                                float _3386 = isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0));
                                float _2507 = isnan(1.0) ? _3386 : (isnan(_3386) ? 1.0 : min(_3386, 1.0));
                                float _2508 = _2507 * (((isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0))) * _2484) / ((_2497 * 0.699999988079071044921875) + 1.0));
                                float _2520 = exp2(log2(1.0 / ((_2497 * 3.5) + 5.0)) * 0.25);
                                float _2522 = 1.0 - sqrt(_285);
                                float _2529 = sqrt(1.0 - ((1.0 - (_2522 * _2522)) * (1.0 - (_2520 * _2520))));
                                float _2530 = _2529 * _2529;
                                float _2531 = _2530 * _2530;
                                float _2532 = _2477 - _1975;
                                float _2533 = _2478 - _1976;
                                float _2534 = _2479 - _1977;
                                float _2538 = inversesqrt(dot(vec3(_2532, _2533, _2534), vec3(_2532, _2533, _2534)));
                                float _2542 = dot(vec3(_392, _395, _398), vec3((-0.0) - _1975, (-0.0) - _1976, (-0.0) - _1977));
                                float _3397 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
                                float _2545 = isnan(1.0) ? _3397 : (isnan(_3397) ? 1.0 : min(_3397, 1.0));
                                float _2546 = dot(vec3(_392, _395, _398), vec3(_2538 * _2532, _2538 * _2533, _2538 * _2534));
                                float _3408 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
                                float _2549 = isnan(1.0) ? _3408 : (isnan(_3408) ? 1.0 : min(_3408, 1.0));
                                float _2553 = ((_2549 * _2549) * (_2531 + (-1.0))) + 1.0;
                                float _2554 = _2490 * _2530;
                                float _2555 = _2554 * _2554;
                                float _2561 = ((1.0 - _2555) * dot(vec3(_392, _395, _398), vec3(_2477, _2478, _2479))) + _2555;
                                float _3419 = isnan(0.0) ? _2561 : (isnan(_2561) ? 0.0 : max(_2561, 0.0));
                                float _2562 = isnan(1.0) ? _3419 : (isnan(_3419) ? 1.0 : min(_3419, 1.0));
                                float _2563 = 1.0 - _2530;
                                float _2573 = (0.5 / (((_2562 * ((_2545 * _2563) + _2530)) + 9.9999999392252902907785028219223e-09) + (((_2562 * _2563) + _2530) * _2545))) * _2562;
                                float _3430 = isnan(0.0) ? _2573 : (isnan(_2573) ? 0.0 : max(_2573, 0.0));
                                float _2583 = (_2507 * _2484) * (((_2531 * 3.1415927410125732421875) * (isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0)))) / ((_2553 * _2553) * ((_2497 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_39_pred = _2583 * _2363.y;
                                frontier_phi_39_pred_1 = _2583 * _2363.x;
                                frontier_phi_39_pred_2 = _2508 * _2351.z;
                                frontier_phi_39_pred_3 = _2508 * _2351.y;
                                frontier_phi_39_pred_4 = _2508 * _2351.x;
                                frontier_phi_39_pred_5 = _2583 * _2363.z;
                            }
                            else
                            {
                                frontier_phi_39_pred = 0.0;
                                frontier_phi_39_pred_1 = 0.0;
                                frontier_phi_39_pred_2 = 0.0;
                                frontier_phi_39_pred_3 = 0.0;
                                frontier_phi_39_pred_4 = 0.0;
                                frontier_phi_39_pred_5 = 0.0;
                            }
                            _2588 = frontier_phi_39_pred;
                            _2587 = frontier_phi_39_pred_1;
                            _2592 = frontier_phi_39_pred_2;
                            _2591 = frontier_phi_39_pred_3;
                            _2590 = frontier_phi_39_pred_4;
                            _2589 = frontier_phi_39_pred_5;
                            _2292 = _2590 + _2305;
                            _2293 = _2591 + _2306;
                            _2294 = _2592 + _2307;
                            _2289 = _2587 + _2302;
                            _2290 = _2588 + _2303;
                            _2291 = _2589 + _2304;
                            if (_2309 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2302 = _2289;
                                _2303 = _2290;
                                _2304 = _2291;
                                _2305 = _2292;
                                _2306 = _2293;
                                _2307 = _2294;
                                _2308 = _2309;
                                continue;
                            }
                        }
                        frontier_phi_33_pred = _2294;
                        frontier_phi_33_pred_1 = _2293;
                        frontier_phi_33_pred_2 = _2292;
                        frontier_phi_33_pred_3 = _2291;
                        frontier_phi_33_pred_4 = _2290;
                        frontier_phi_33_pred_5 = _2289;
                    }
                    _1960 = frontier_phi_33_pred;
                    _1958 = frontier_phi_33_pred_1;
                    _1956 = frontier_phi_33_pred_2;
                    _1954 = frontier_phi_33_pred_3;
                    _1952 = frontier_phi_33_pred_4;
                    _1950 = frontier_phi_33_pred_5;
                    uint _2095 = _2094 + 1u;
                    if (_2095 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2088 = _1950;
                        _2089 = _1952;
                        _2090 = _1954;
                        _2091 = _1956;
                        _2092 = _1958;
                        _2093 = _1960;
                        _2094 = _2095;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_21_22_ladder = _1960;
                frontier_phi_21_22_ladder_1 = _1958;
                frontier_phi_21_22_ladder_2 = _1956;
                frontier_phi_21_22_ladder_3 = _1950;
                frontier_phi_21_22_ladder_4 = _1954;
                frontier_phi_21_22_ladder_5 = _1952;
            }
            else
            {
                frontier_phi_21_22_ladder = _1846;
                frontier_phi_21_22_ladder_1 = _1844;
                frontier_phi_21_22_ladder_2 = _1842;
                frontier_phi_21_22_ladder_3 = _1836;
                frontier_phi_21_22_ladder_4 = _1840;
                frontier_phi_21_22_ladder_5 = _1838;
            }
            _1949 = frontier_phi_21_22_ladder_3;
            _1951 = frontier_phi_21_22_ladder_5;
            _1953 = frontier_phi_21_22_ladder_4;
            _1955 = frontier_phi_21_22_ladder_2;
            _1957 = frontier_phi_21_22_ladder_1;
            _1959 = frontier_phi_21_22_ladder;
        }
        float _1964 = isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0));
        _1769 = (_1964 * _1955) + _1302;
        _1771 = (_1964 * _1957) + _1304;
        _1773 = (_1964 * _1959) + _1306;
        _1775 = ((_1949 * 0.039999999105930328369140625) * _1964) + _1580;
        _1777 = ((_1951 * 0.039999999105930328369140625) * _1964) + _1582;
        _1779 = ((_1953 * 0.039999999105930328369140625) * _1964) + _1584;
    }
    else
    {
        _1769 = _1302;
        _1771 = _1304;
        _1773 = _1306;
        _1775 = _1580;
        _1777 = _1582;
        _1779 = _1584;
    }
    float _3446 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _3457 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0));
    float _3468 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    uint _1799 = _411 + 6u;
    float _1807 = _370 / cbSceneParam._m0[86u].x;
    float _1808 = _371 / cbSceneParam._m0[86u].y;
    vec4 _1822 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1807, _1808, (log2((isnan(cbSceneParam._m0[77u].w) ? _304 : (isnan(_304) ? cbSceneParam._m0[77u].w : min(_304, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1824 = _1822.x;
    float _1825 = _1822.y;
    float _1826 = _1822.z;
    float _1827 = _1822.w;
    float _1899;
    float _1901;
    float _1903;
    float _1905;
    if (_304 > cbSceneParam._m0[78u].w)
    {
        float _1861 = isnan(_304) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _304 : min(cbSceneParam._m0[80u].w, _304));
        float _1862 = _1861 / _304;
        float _1873 = _1862 * _355;
        float _1874 = _356 * _1862;
        float _1875 = (-0.0) - _1874;
        float _1876 = _1862 * _357;
        float _1878 = (cbSceneParam._m0[77u].w * _1875) / _1861;
        float _1879 = _1878 + cbSceneParam._m0[79u].w;
        float _1880 = cbSceneParam._m0[79u].w - _1874;
        float _1886 = sqrt(((_1873 * _1873) + (_1874 * _1874)) + (_1876 * _1876));
        float _1889 = (1.0 - (cbSceneParam._m0[77u].w / _1861)) * _1886;
        float _1895 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1897 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2050;
        if (abs((_1875 - _1878) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2050 = ((((_1879 > 0.0) ? exp2(_1895 * _1879) : (2.0 - exp2(_1897 * _1879))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1889;
        }
        else
        {
            float _2010 = 1.0 / cbSceneParam._m0[80u].x;
            float _2011 = isnan(_1880) ? _1879 : (isnan(_1879) ? _1880 : max(_1879, _1880));
            float _2012 = isnan(_1880) ? _1879 : (isnan(_1879) ? _1880 : min(_1879, _1880));
            float _2021 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : min(_2011, 0.0));
            float _2022 = isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : min(_2012, 0.0));
            _2050 = ((abs(_1886 / _1875) * cbSceneParam._m0[80u].y) * ((((_2021 - _2022) * 2.0) - ((exp2(_1895 * (isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0)))) - exp2(_1895 * (isnan(0.0) ? _2012 : (isnan(_2012) ? 0.0 : max(_2012, 0.0))))) * _2010)) - ((exp2(_1897 * _2021) - exp2(_1897 * _2022)) * _2010))) + (_1889 * cbSceneParam._m0[80u].z);
        }
        vec4 _2052 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1807, _1808, 1.0), 0.0);
        float _2061 = exp2((_2050 * (-1.44269502162933349609375)) * (1.0 - _2052.w));
        float _2062 = log2(_2061);
        float _2078 = log2(_1827);
        _1899 = (exp2(_2078 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2062 * cbSceneParam._m0[78u].x)) * _2052.x) / cbSceneParam._m0[78u].x)) + _1824;
        _1901 = (exp2(_2078 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2062 * cbSceneParam._m0[78u].y)) * _2052.y) / cbSceneParam._m0[78u].y)) + _1825;
        _1903 = (exp2(_2078 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2062 * cbSceneParam._m0[78u].z)) * _2052.z) / cbSceneParam._m0[78u].z)) + _1826;
        _1905 = _2061 * _1827;
    }
    else
    {
        _1899 = _1824;
        _1901 = _1825;
        _1903 = _1826;
        _1905 = _1827;
    }
    float _1916 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1917 = _1916 == 3.0;
    float _1919 = log2(_1905);
    float _1926 = exp2(_1919 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _3446 : (isnan(_3446) ? 1.0 : min(_3446, 1.0))) * (_1769 + (_1158 * (isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0)))))) + ((_1775 + ((_469.x * _450) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x));
    float _1927 = exp2(_1919 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _3457 : (isnan(_3457) ? 1.0 : min(_3457, 1.0))) * (_1771 + (_1158 * (isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0)))))) + ((_1777 + ((_469.y * _450) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x));
    float _1928 = exp2(_1919 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _3468 : (isnan(_3468) ? 1.0 : min(_3468, 1.0))) * (_1773 + (_1158 * (isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)))))) + ((_1779 + ((_469.z * _450) * cbSceneParam._m0[72u].w)) * cbPerFrame._m0[3u].x));
    float _1937 = (_1916 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1937 * (_1917 ? _1926 : (_1926 + (cbSceneParam._m0[72u].w * _1899)));
    SV_Target.y = _1937 * (_1917 ? _1927 : (_1927 + (cbSceneParam._m0[72u].w * _1901)));
    SV_Target.z = _1937 * (_1917 ? _1928 : (_1928 + (cbSceneParam._m0[72u].w * _1903)));
    SV_Target.w = cbInstanceData._m0[_1799].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1799].w;
}


