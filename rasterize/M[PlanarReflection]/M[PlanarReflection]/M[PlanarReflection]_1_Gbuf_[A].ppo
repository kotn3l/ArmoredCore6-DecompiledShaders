#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_PlanarReflection_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanarReflection_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _148 = _147 * NORMAL.x;
    float _149 = _147 * NORMAL.y;
    float _150 = _147 * NORMAL.z;
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _162;
    float _163;
    float _164;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
    }
    else
    {
        _162 = _148;
        _163 = _149;
        _164 = _150;
    }
    vec4 _184 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _190 = _184.x * cbMtdParam._m0[9u].x;
    float _191 = _184.y * cbMtdParam._m0[9u].y;
    float _192 = _184.z * cbMtdParam._m0[9u].z;
    vec4 _204 = texture(sampler2D(M_PlanarReflection_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _208 = _204.z;
    float _212 = (_204.x * 2.0) + (-1.0);
    float _214 = (_204.y * 2.0) + (-1.0);
    float _215 = dot(vec2(_212, _214), vec2(_212, _214));
    float _419 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _221 = sqrt(1.0 - (isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0))));
    float _224 = fma(_221, _162, fma(_214, _154 * TANGENT.x, (_140 * _133) * _212));
    float _227 = fma(_221, _163, fma(_214, _154 * TANGENT.y, (_140 * _134) * _212));
    float _230 = fma(_221, _164, fma(_214, _154 * TANGENT.z, (_140 * _135) * _212));
    float _234 = inversesqrt(dot(vec3(_224, _227, _230), vec3(_224, _227, _230)));
    float _430 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    float _441 = isnan(0.0) ? _190 : (isnan(_190) ? 0.0 : max(_190, 0.0));
    float _236 = isnan(1.0) ? _441 : (isnan(_441) ? 1.0 : min(_441, 1.0));
    float _452 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _237 = isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0));
    float _463 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _238 = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
    uint _240 = uint(roundEven(NORMAL.w));
    vec4 _245 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _247 = _245.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _310 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _474 = isnan(0.0) ? _310 : (isnan(_310) ? 0.0 : max(_310, 0.0));
        float _311 = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
        float _315 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _485 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _485 : (isnan(_485) ? 1.0 : min(_485, 1.0))) - _311)) + _311) < ((_247 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _344;
    uint _267;
    vec4 _272;
    float _279;
    float _280;
    float _281;
    float _285;
    vec4 _289;
    float _291;
    float _292;
    bool _303;
    for (;;)
    {
        _267 = _240 * 13u;
        _272 = cbInstanceData._m0[(_267 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _276 = (cbMtdParam._m0[0u].x * _236) * _272.x;
        float _277 = (cbMtdParam._m0[0u].y * _237) * _272.y;
        float _278 = (cbMtdParam._m0[0u].z * _238) * _272.z;
        float _496 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        _279 = isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0));
        float _507 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
        _280 = isnan(1.0) ? _507 : (isnan(_507) ? 1.0 : min(_507, 1.0));
        float _518 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        _281 = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
        _285 = cbInstanceData._m0[_267 + 6u].w;
        float _286 = _247 + (-0.5);
        _289 = cbMtdParam._m0[1u];
        _291 = _289.y * _286;
        _292 = _286 * 0.999000012874603271484375;
        _303 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_303)
        {
            if ((cbInstanceData._m0[_267 + 7u].x + _292) < 0.5)
            {
                _344 = true;
                break;
            }
        }
        if ((_272.w < 1.0) && ((_272.w + _292) < 0.5))
        {
            _344 = true;
            break;
        }
        if ((_291 + 1.0) < _289.x)
        {
            _344 = true;
            break;
        }
        _344 = false;
        break;
    }
    if (_344)
    {
        discard_state = true;
    }
    bool _370 = cbMtdParam._m0[1u].z != 0.0;
    float _371 = _370 ? _285 : 0.0;
    SV_Target.x = ((_224 * 0.5) * _234) + 0.500488758087158203125;
    SV_Target.y = ((_227 * 0.5) * _234) + 0.500488758087158203125;
    SV_Target.z = ((_230 * 0.5) * _234) + 0.500488758087158203125;
    SV_Target.w = _371;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _370 ? _285 : TEXCOORD.z;
    SV_Target_2.x = _279;
    SV_Target_2.y = _280;
    SV_Target_2.z = _281;
    SV_Target_2.w = _370 ? _285 : (float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _371;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _371;
    discard_exit();
}


