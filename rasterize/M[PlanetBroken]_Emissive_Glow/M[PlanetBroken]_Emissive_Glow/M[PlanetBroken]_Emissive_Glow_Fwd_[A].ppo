#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _821;
float _822;
float _823;
float _824;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _140 = cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x;
    uint _145 = uint(roundEven(NORMAL.w)) * 13u;
    uint _150 = _145 + 1u;
    uint _155 = _145 + 2u;
    float _165 = sqrt(((cbInstanceData._m0[_150].x * cbInstanceData._m0[_150].x) + (cbInstanceData._m0[_145].x * cbInstanceData._m0[_145].x)) + (cbInstanceData._m0[_155].x * cbInstanceData._m0[_155].x));
    float _171 = sqrt(((cbInstanceData._m0[_150].y * cbInstanceData._m0[_150].y) + (cbInstanceData._m0[_145].y * cbInstanceData._m0[_145].y)) + (cbInstanceData._m0[_155].y * cbInstanceData._m0[_155].y));
    vec4 _188 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (_165 * ((_140 * cbMtdParam._m0[14u].y) + TEXCOORD_1.x))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (_171 * ((_140 * cbMtdParam._m0[14u].z) + TEXCOORD_1.y))) + cbTextureTilingScale._m0[1u].w));
    float _195 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].x;
    float _196 = _195 * cbMtdParam._m0[13u].z;
    float _199 = (_188.x * 0.5) + (-0.25);
    float _202 = (_188.y * 0.5) + (-0.25);
    float _203 = _202 * cbMtdParam._m0[13u].y;
    float _205 = (-0.0) - (cbMtdParam._m0[13u].y * _199);
    float _207 = fract(_196);
    float _209 = fract(_196 + 0.5);
    float _221 = abs((_207 * 2.0) + (-1.0));
    vec4 _237 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_207 * _205) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_203 * _207) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _239 = _237.x;
    float _240 = _237.y;
    float _241 = _237.z;
    float _242 = _237.w;
    vec4 _243 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_209 * _205) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_203 * _209) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _261 = (((_243.x - _239) * _221) + _239) * cbMtdParam._m0[9u].x;
    float _262 = (((_243.y - _240) * _221) + _240) * cbMtdParam._m0[9u].y;
    float _263 = (((_243.z - _241) * _221) + _241) * cbMtdParam._m0[9u].z;
    float _264 = (((_243.w - _242) * _221) + _242) * cbMtdParam._m0[9u].w;
    float _270 = (cbMtdParam._m0[12u].y * TEXCOORD_1.z) * _264;
    vec4 _289 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w));
    float _312 = _165 * ((_140 * cbMtdParam._m0[13u].w) + TEXCOORD_1.x);
    float _313 = _171 * ((_140 * cbMtdParam._m0[14u].x) + TEXCOORD_1.y);
    float _316 = _195 * cbMtdParam._m0[12u].w;
    float _317 = _202 * cbMtdParam._m0[12u].z;
    float _319 = (-0.0) - (cbMtdParam._m0[12u].z * _199);
    float _320 = fract(_316);
    float _322 = fract(_316 + 0.5);
    float _333 = abs((_320 * 2.0) + (-1.0));
    vec4 _349 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_320 * _319) + _312) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_317 * _320) + _313) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _351 = _349.x;
    float _352 = _349.y;
    float _353 = _349.z;
    vec4 _354 = texture(sampler2D(M_PlanetBroken_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_322 * _319) + _312) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((_317 * _322) + _313) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _371 = ((((_354.x - _351) * _333) + _351) * cbMtdParam._m0[11u].x) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[12u].x) * _289.x);
    float _372 = ((((_354.y - _352) * _333) + _352) * cbMtdParam._m0[11u].y) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[12u].x) * _289.y);
    float _373 = ((((_354.z - _353) * _333) + _353) * cbMtdParam._m0[11u].z) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[12u].x) * _289.z);
    float _833 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _392 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _433 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _443 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _433);
    float _444 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _433);
    float _445 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _433);
    vec4 _450 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _452 = _450.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _553 = sqrt(((_443 * _443) + (_444 * _444)) + (_445 * _445));
        float _560 = (cbMatDynParam._m0[5u].x * _553) + cbMatDynParam._m0[5u].y;
        float _859 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
        float _561 = isnan(1.0) ? _859 : (isnan(_859) ? 1.0 : min(_859, 1.0));
        float _565 = (cbMatDynParam._m0[5u].z * _553) + cbMatDynParam._m0[5u].w;
        float _870 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _870 : (isnan(_870) ? 1.0 : min(_870, 1.0))) - _561)) + _561) < ((_452 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _478 = _145 + 9u;
    uint _479 = _478 + uint(cbMatDynParam._m0[0u].w);
    float _489 = cbInstanceData._m0[_479].x * (_371 + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0)))));
    float _491 = cbInstanceData._m0[_479].y * (_372 + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0)))));
    float _493 = cbInstanceData._m0[_479].z * (_373 + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0)))));
    float _494 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _495 = isnan(0.0) ? _491 : (isnan(_491) ? 0.0 : max(_491, 0.0));
    float _496 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _502 = cbMtdParam._m0[2u].x * (cbInstanceData._m0[_479].x * _371);
    float _503 = cbMtdParam._m0[2u].y * (cbInstanceData._m0[_479].y * _372);
    float _504 = cbMtdParam._m0[2u].z * (cbInstanceData._m0[_479].z * _373);
    float _896 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _506 = isnan(1.0) ? _896 : (isnan(_896) ? 1.0 : min(_896, 1.0));
    float _511 = cbInstanceData._m0[_145 + 6u].w * (isnan(1.0) ? _833 : (isnan(_833) ? 1.0 : min(_833, 1.0)));
    float _517 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _518 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _533 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_517, _518, (log2((isnan(cbSceneParam._m0[77u].w) ? _392 : (isnan(_392) ? cbSceneParam._m0[77u].w : min(_392, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _536 = _533.x;
    float _537 = _533.y;
    float _538 = _533.z;
    float _539 = _533.w;
    float _620;
    float _622;
    float _624;
    float _626;
    if (_392 > cbSceneParam._m0[78u].w)
    {
        float _582 = isnan(_392) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _392 : min(cbSceneParam._m0[80u].w, _392));
        float _583 = _582 / _392;
        float _594 = _583 * _443;
        float _595 = _444 * _583;
        float _596 = (-0.0) - _595;
        float _597 = _583 * _445;
        float _599 = (cbSceneParam._m0[77u].w * _596) / _582;
        float _600 = _599 + cbSceneParam._m0[79u].w;
        float _601 = cbSceneParam._m0[79u].w - _595;
        float _607 = sqrt(((_594 * _594) + (_595 * _595)) + (_597 * _597));
        float _610 = (1.0 - (cbSceneParam._m0[77u].w / _582)) * _607;
        float _616 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _618 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _749;
        if (abs((_596 - _599) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _749 = ((((_600 > 0.0) ? exp2(_616 * _600) : (2.0 - exp2(_618 * _600))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _610;
        }
        else
        {
            float _705 = 1.0 / cbSceneParam._m0[80u].x;
            float _706 = isnan(_601) ? _600 : (isnan(_600) ? _601 : max(_600, _601));
            float _707 = isnan(_601) ? _600 : (isnan(_600) ? _601 : min(_600, _601));
            float _716 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : min(_706, 0.0));
            float _717 = isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : min(_707, 0.0));
            _749 = ((abs(_607 / _596) * cbSceneParam._m0[80u].y) * ((((_716 - _717) * 2.0) - ((exp2(_616 * (isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0)))) - exp2(_616 * (isnan(0.0) ? _707 : (isnan(_707) ? 0.0 : max(_707, 0.0))))) * _705)) - ((exp2(_618 * _716) - exp2(_618 * _717)) * _705))) + (_610 * cbSceneParam._m0[80u].z);
        }
        vec4 _751 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_517, _518, 1.0), 0.0);
        float _760 = exp2((_749 * (-1.44269502162933349609375)) * (1.0 - _751.w));
        float _761 = log2(_760);
        float _777 = log2(_539);
        _620 = (exp2(_777 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_761 * cbSceneParam._m0[78u].x)) * _751.x) / cbSceneParam._m0[78u].x)) + _536;
        _622 = (exp2(_777 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_761 * cbSceneParam._m0[78u].y)) * _751.y) / cbSceneParam._m0[78u].y)) + _537;
        _624 = (exp2(_777 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_761 * cbSceneParam._m0[78u].z)) * _751.z) / cbSceneParam._m0[78u].z)) + _538;
        _626 = _760 * _539;
    }
    else
    {
        _620 = _536;
        _622 = _537;
        _624 = _538;
        _626 = _539;
    }
    bool _787;
    vec4 _636;
    vec4 _660;
    float _662;
    float _666;
    float _667;
    float _668;
    float _671;
    float _674;
    float _677;
    float _678;
    bool _689;
    for (;;)
    {
        _636 = cbMatDynParam._m0[0u];
        float _638 = roundEven(_636.y);
        bool _639 = _638 == 3.0;
        float _641 = log2(_626);
        float _645 = exp2(_641 * cbSceneParam._m0[78u].x);
        float _646 = exp2(_641 * cbSceneParam._m0[78u].y);
        float _647 = exp2(_641 * cbSceneParam._m0[78u].z);
        float _648 = _645 * _494;
        float _649 = _646 * _495;
        float _650 = _647 * _496;
        float _657 = _452 + (-0.5);
        _660 = cbMtdParam._m0[1u];
        _662 = _660.y * _657;
        float _665 = (_638 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _666 = _665 * (_639 ? _648 : (_648 + (cbSceneParam._m0[72u].w * _620)));
        _667 = _665 * (_639 ? _649 : (_649 + (cbSceneParam._m0[72u].w * _622)));
        _668 = _665 * (_639 ? _650 : (_650 + (cbSceneParam._m0[72u].w * _624)));
        _671 = ((_502 * _506) * _645) * _665;
        _674 = ((_503 * _506) * _646) * _665;
        _677 = ((_504 * _506) * _647) * _665;
        _678 = _657 * 0.999000012874603271484375;
        _689 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_689)
        {
            if ((cbInstanceData._m0[_145 + 7u].x + _678) < 0.5)
            {
                _787 = true;
                break;
            }
        }
        uint _741 = _478 + uint(_636.w);
        if ((cbInstanceData._m0[_741].w < 1.0) && ((cbInstanceData._m0[_741].w + _678) < 0.5))
        {
            _787 = true;
            break;
        }
        if ((_662 + _264) < _660.x)
        {
            _787 = true;
            break;
        }
        _787 = false;
        break;
    }
    float _792;
    if (_787)
    {
        discard_state = true;
        _792 = 0.0;
    }
    else
    {
        _792 = _511;
    }
    SV_Target.x = _666;
    SV_Target.y = _667;
    SV_Target.z = _668;
    SV_Target.w = _792;
    SV_Target_1.x = _671;
    SV_Target_1.y = _674;
    SV_Target_1.z = _677;
    SV_Target_1.w = _511;
    discard_exit();
}


