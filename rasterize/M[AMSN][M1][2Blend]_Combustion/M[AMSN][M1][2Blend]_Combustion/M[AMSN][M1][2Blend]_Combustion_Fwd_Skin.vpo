#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out float TEXCOORD_5;
layout(location = 7) out vec4 TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _213 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _215 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _249 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _251 = texelFetch(g_InstanceIndexBuffer, int(_249));
    uint _252 = _251.x;
    precise float _253 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _258 = isnan(_253) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _253 : max(0.001000000047497451305389404296875, _253));
    precise float _260 = BLENDWEIGHT.x / _258;
    precise float _261 = BLENDWEIGHT.y / _258;
    precise float _262 = BLENDWEIGHT.z / _258;
    precise float _263 = BLENDWEIGHT.w / _258;
    uint _265 = _252 * 13u;
    uvec4 _270 = floatBitsToUint(cbInstanceData._m0[_265 + 4u]);
    uint _271 = _270.x;
    uint _273 = (_271 + uint(float(BLENDINDICES.x))) * 3u;
    uint _280 = _273 + 1u;
    uint _287 = _273 + 2u;
    precise float _294 = _260 * cbObjMatrix._m0[_273].x;
    precise float _295 = _260 * cbObjMatrix._m0[_280].x;
    precise float _296 = _260 * cbObjMatrix._m0[_287].x;
    precise float _297 = _260 * cbObjMatrix._m0[_273].y;
    precise float _298 = _260 * cbObjMatrix._m0[_280].y;
    precise float _299 = _260 * cbObjMatrix._m0[_287].y;
    precise float _300 = _260 * cbObjMatrix._m0[_273].z;
    precise float _301 = _260 * cbObjMatrix._m0[_280].z;
    precise float _302 = _260 * cbObjMatrix._m0[_287].z;
    precise float _303 = _260 * cbObjMatrix._m0[_273].w;
    precise float _304 = _260 * cbObjMatrix._m0[_280].w;
    precise float _305 = _260 * cbObjMatrix._m0[_287].w;
    uint _308 = (_271 + uint(float(BLENDINDICES.y))) * 3u;
    uint _315 = _308 + 1u;
    uint _322 = _308 + 2u;
    precise float _329 = _261 * cbObjMatrix._m0[_308].x;
    precise float _330 = _261 * cbObjMatrix._m0[_315].x;
    precise float _331 = _261 * cbObjMatrix._m0[_322].x;
    precise float _332 = _261 * cbObjMatrix._m0[_308].y;
    precise float _333 = _261 * cbObjMatrix._m0[_315].y;
    precise float _334 = _261 * cbObjMatrix._m0[_322].y;
    precise float _335 = _261 * cbObjMatrix._m0[_308].z;
    precise float _336 = _261 * cbObjMatrix._m0[_315].z;
    precise float _337 = _261 * cbObjMatrix._m0[_322].z;
    precise float _338 = _261 * cbObjMatrix._m0[_308].w;
    precise float _339 = _261 * cbObjMatrix._m0[_315].w;
    precise float _340 = _261 * cbObjMatrix._m0[_322].w;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    uint _355 = (_271 + uint(float(BLENDINDICES.z))) * 3u;
    uint _362 = _355 + 1u;
    uint _369 = _355 + 2u;
    precise float _376 = _262 * cbObjMatrix._m0[_355].x;
    precise float _377 = _262 * cbObjMatrix._m0[_362].x;
    precise float _378 = _262 * cbObjMatrix._m0[_369].x;
    precise float _379 = _262 * cbObjMatrix._m0[_355].y;
    precise float _380 = _262 * cbObjMatrix._m0[_362].y;
    precise float _381 = _262 * cbObjMatrix._m0[_369].y;
    precise float _382 = _262 * cbObjMatrix._m0[_355].z;
    precise float _383 = _262 * cbObjMatrix._m0[_362].z;
    precise float _384 = _262 * cbObjMatrix._m0[_369].z;
    precise float _385 = _262 * cbObjMatrix._m0[_355].w;
    precise float _386 = _262 * cbObjMatrix._m0[_362].w;
    precise float _387 = _262 * cbObjMatrix._m0[_369].w;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    uint _402 = (_271 + uint(float(BLENDINDICES.w))) * 3u;
    uint _409 = _402 + 1u;
    uint _416 = _402 + 2u;
    precise float _423 = _263 * cbObjMatrix._m0[_402].x;
    precise float _424 = _263 * cbObjMatrix._m0[_409].x;
    precise float _425 = _263 * cbObjMatrix._m0[_416].x;
    precise float _426 = _263 * cbObjMatrix._m0[_402].y;
    precise float _427 = _263 * cbObjMatrix._m0[_409].y;
    precise float _428 = _263 * cbObjMatrix._m0[_416].y;
    precise float _429 = _263 * cbObjMatrix._m0[_402].z;
    precise float _430 = _263 * cbObjMatrix._m0[_409].z;
    precise float _431 = _263 * cbObjMatrix._m0[_416].z;
    precise float _432 = _263 * cbObjMatrix._m0[_402].w;
    precise float _433 = _263 * cbObjMatrix._m0[_409].w;
    precise float _434 = _263 * cbObjMatrix._m0[_416].w;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = POSITION.x * _435;
    precise float _448 = POSITION.y * _438;
    precise float _449 = _448 + _447;
    precise float _450 = POSITION.z * _441;
    precise float _451 = _450 + _449;
    precise float _452 = 1.0 * _444;
    precise float _453 = _452 + _451;
    precise float _454 = POSITION.x * _436;
    precise float _455 = POSITION.y * _439;
    precise float _456 = _455 + _454;
    precise float _457 = POSITION.z * _442;
    precise float _458 = _457 + _456;
    precise float _459 = 1.0 * _445;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.x * _437;
    precise float _462 = POSITION.y * _440;
    precise float _463 = _462 + _461;
    precise float _464 = POSITION.z * _443;
    precise float _465 = _464 + _463;
    precise float _466 = 1.0 * _446;
    precise float _467 = _466 + _465;
    precise float _501 = _453 - cbSceneParam._m0[3u].x;
    precise float _502 = _460 - cbSceneParam._m0[3u].y;
    precise float _503 = _467 - cbSceneParam._m0[3u].z;
    precise float _531 = _501 * cbSceneParam._m0[24u].x;
    precise float _532 = _502 * cbSceneParam._m0[24u].y;
    precise float _533 = _532 + _531;
    precise float _534 = _503 * cbSceneParam._m0[24u].z;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _537 = _536 + _535;
    precise float _538 = _501 * cbSceneParam._m0[25u].x;
    precise float _539 = _502 * cbSceneParam._m0[25u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _503 * cbSceneParam._m0[25u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _544 = _543 + _542;
    precise float _545 = _501 * cbSceneParam._m0[26u].x;
    precise float _546 = _502 * cbSceneParam._m0[26u].y;
    precise float _547 = _546 + _545;
    precise float _548 = _503 * cbSceneParam._m0[26u].z;
    precise float _549 = _548 + _547;
    precise float _550 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _551 = _550 + _549;
    precise float _552 = _501 * cbSceneParam._m0[27u].x;
    precise float _553 = _502 * cbSceneParam._m0[27u].y;
    precise float _554 = _553 + _552;
    precise float _555 = _503 * cbSceneParam._m0[27u].z;
    precise float _556 = _555 + _554;
    precise float _557 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _558 = _557 + _556;
    gl_Position.x = _537;
    gl_Position.y = _544;
    gl_Position.z = _551;
    gl_Position.w = _558;
    POSITION_1.x = _537;
    POSITION_1.y = _544;
    POSITION_1.z = _551;
    POSITION_1.w = _558;
    NORMAL_1.x = fma(_216, _441, fma(_215, _438, _435 * _213));
    NORMAL_1.y = fma(_216, _442, fma(_215, _439, _436 * _213));
    NORMAL_1.z = fma(_216, _443, fma(_215, _440, _437 * _213));
    NORMAL_1.w = float(_252);
    TANGENT_1.x = fma(_227, _441, fma(_226, _438, _435 * _225));
    TANGENT_1.y = fma(_227, _442, fma(_226, _439, _436 * _225));
    TANGENT_1.z = fma(_227, _443, fma(_226, _440, _437 * _225));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_239, _441, fma(_238, _438, _435 * _237));
    TANGENT_2_1.y = fma(_239, _442, fma(_238, _439, _436 * _237));
    TANGENT_2_1.z = fma(_239, _443, fma(_238, _440, _437 * _237));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_537, _544, _551, _558), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_537, _544, _551, _558), vec4(cbInstanceData._m0[_265 + 3u]));
}


