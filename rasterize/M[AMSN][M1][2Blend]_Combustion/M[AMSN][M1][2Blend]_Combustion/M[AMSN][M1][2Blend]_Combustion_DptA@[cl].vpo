#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    float _193 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _226 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _228 = texelFetch(g_InstanceIndexBuffer, int(_226));
    uint _229 = _228.x;
    uint _239 = (floatBitsToUint(cbInstanceData._m0[(_229 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _246 = _239 + 1u;
    uint _253 = _239 + 2u;
    precise float _260 = POSITION.x * cbObjMatrix._m0[_239].x;
    precise float _261 = POSITION.y * cbObjMatrix._m0[_239].y;
    precise float _262 = _261 + _260;
    precise float _263 = POSITION.z * cbObjMatrix._m0[_239].z;
    precise float _264 = _263 + _262;
    precise float _265 = 1.0 * cbObjMatrix._m0[_239].w;
    precise float _267 = _265 + _264;
    precise float _268 = POSITION.x * cbObjMatrix._m0[_246].x;
    precise float _269 = POSITION.y * cbObjMatrix._m0[_246].y;
    precise float _270 = _269 + _268;
    precise float _271 = POSITION.z * cbObjMatrix._m0[_246].z;
    precise float _272 = _271 + _270;
    precise float _273 = 1.0 * cbObjMatrix._m0[_246].w;
    precise float _274 = _273 + _272;
    precise float _275 = POSITION.x * cbObjMatrix._m0[_253].x;
    precise float _276 = POSITION.y * cbObjMatrix._m0[_253].y;
    precise float _277 = _276 + _275;
    precise float _278 = POSITION.z * cbObjMatrix._m0[_253].z;
    precise float _279 = _278 + _277;
    precise float _280 = 1.0 * cbObjMatrix._m0[_253].w;
    precise float _281 = _280 + _279;
    float _287 = cbSceneParam._m0[3u].x - _267;
    float _288 = cbSceneParam._m0[3u].y - _274;
    float _289 = cbSceneParam._m0[3u].z - _281;
    precise float _325 = _267 - cbSceneParam._m0[3u].x;
    precise float _326 = _274 - cbSceneParam._m0[3u].y;
    precise float _327 = _281 - cbSceneParam._m0[3u].z;
    precise float _355 = _325 * cbSceneParam._m0[24u].x;
    precise float _356 = _326 * cbSceneParam._m0[24u].y;
    precise float _357 = _356 + _355;
    precise float _358 = _327 * cbSceneParam._m0[24u].z;
    precise float _359 = _358 + _357;
    precise float _360 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _361 = _360 + _359;
    precise float _362 = _325 * cbSceneParam._m0[25u].x;
    precise float _363 = _326 * cbSceneParam._m0[25u].y;
    precise float _364 = _363 + _362;
    precise float _365 = _327 * cbSceneParam._m0[25u].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _368 = _367 + _366;
    precise float _369 = _325 * cbSceneParam._m0[26u].x;
    precise float _370 = _326 * cbSceneParam._m0[26u].y;
    precise float _371 = _370 + _369;
    precise float _372 = _327 * cbSceneParam._m0[26u].z;
    precise float _373 = _372 + _371;
    precise float _374 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _375 = _374 + _373;
    precise float _376 = _325 * cbSceneParam._m0[27u].x;
    precise float _377 = _326 * cbSceneParam._m0[27u].y;
    precise float _378 = _377 + _376;
    precise float _379 = _327 * cbSceneParam._m0[27u].z;
    precise float _380 = _379 + _378;
    precise float _381 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _382 = _381 + _380;
    gl_Position.x = _361;
    gl_Position.y = _368;
    gl_Position.z = _375;
    gl_Position.w = _382;
    NORMAL_1.x = fma(_196, cbObjMatrix._m0[_239].z, fma(_195, cbObjMatrix._m0[_239].y, cbObjMatrix._m0[_239].x * _193));
    NORMAL_1.y = fma(_196, cbObjMatrix._m0[_246].z, fma(_195, cbObjMatrix._m0[_246].y, cbObjMatrix._m0[_246].x * _193));
    NORMAL_1.z = fma(_196, cbObjMatrix._m0[_253].z, fma(_195, cbObjMatrix._m0[_253].y, cbObjMatrix._m0[_253].x * _193));
    NORMAL_1.w = float(_229);
    TANGENT_1.x = fma(_208, cbObjMatrix._m0[_239].z, fma(_207, cbObjMatrix._m0[_239].y, cbObjMatrix._m0[_239].x * _206));
    TANGENT_1.y = fma(_208, cbObjMatrix._m0[_246].z, fma(_207, cbObjMatrix._m0[_246].y, cbObjMatrix._m0[_246].x * _206));
    TANGENT_1.z = fma(_208, cbObjMatrix._m0[_253].z, fma(_207, cbObjMatrix._m0[_253].y, cbObjMatrix._m0[_253].x * _206));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_220, cbObjMatrix._m0[_239].z, fma(_219, cbObjMatrix._m0[_239].y, cbObjMatrix._m0[_239].x * _218));
    TANGENT_2_1.y = fma(_220, cbObjMatrix._m0[_246].z, fma(_219, cbObjMatrix._m0[_246].y, cbObjMatrix._m0[_246].x * _218));
    TANGENT_2_1.z = fma(_220, cbObjMatrix._m0[_253].z, fma(_219, cbObjMatrix._m0[_253].y, cbObjMatrix._m0[_253].x * _218));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_10.x = _375;
    TEXCOORD_10.y = _382;
    TEXCOORD_14 = sqrt(((_287 * _287) + (_288 * _288)) + (_289 * _289));
}


