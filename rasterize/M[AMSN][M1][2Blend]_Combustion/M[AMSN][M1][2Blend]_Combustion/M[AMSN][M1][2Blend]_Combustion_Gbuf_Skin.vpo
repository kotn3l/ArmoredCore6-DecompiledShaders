#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 5, component = 1) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_14 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _209 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _245 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _247 = texelFetch(g_InstanceIndexBuffer, int(_245));
    uint _248 = _247.x;
    precise float _249 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _254 = isnan(_249) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _249 : max(0.001000000047497451305389404296875, _249));
    precise float _256 = BLENDWEIGHT.x / _254;
    precise float _257 = BLENDWEIGHT.y / _254;
    precise float _258 = BLENDWEIGHT.z / _254;
    precise float _259 = BLENDWEIGHT.w / _254;
    uint _261 = _248 * 13u;
    uvec4 _266 = floatBitsToUint(cbInstanceData._m0[_261 + 4u]);
    uint _267 = _266.x;
    uint _269 = (_267 + uint(float(BLENDINDICES.x))) * 3u;
    uint _276 = _269 + 1u;
    uint _283 = _269 + 2u;
    precise float _290 = _256 * cbObjMatrix._m0[_269].x;
    precise float _291 = _256 * cbObjMatrix._m0[_276].x;
    precise float _292 = _256 * cbObjMatrix._m0[_283].x;
    precise float _293 = _256 * cbObjMatrix._m0[_269].y;
    precise float _294 = _256 * cbObjMatrix._m0[_276].y;
    precise float _295 = _256 * cbObjMatrix._m0[_283].y;
    precise float _296 = _256 * cbObjMatrix._m0[_269].z;
    precise float _297 = _256 * cbObjMatrix._m0[_276].z;
    precise float _298 = _256 * cbObjMatrix._m0[_283].z;
    precise float _299 = _256 * cbObjMatrix._m0[_269].w;
    precise float _300 = _256 * cbObjMatrix._m0[_276].w;
    precise float _301 = _256 * cbObjMatrix._m0[_283].w;
    uint _304 = (_267 + uint(float(BLENDINDICES.y))) * 3u;
    uint _311 = _304 + 1u;
    uint _318 = _304 + 2u;
    precise float _325 = _257 * cbObjMatrix._m0[_304].x;
    precise float _326 = _257 * cbObjMatrix._m0[_311].x;
    precise float _327 = _257 * cbObjMatrix._m0[_318].x;
    precise float _328 = _257 * cbObjMatrix._m0[_304].y;
    precise float _329 = _257 * cbObjMatrix._m0[_311].y;
    precise float _330 = _257 * cbObjMatrix._m0[_318].y;
    precise float _331 = _257 * cbObjMatrix._m0[_304].z;
    precise float _332 = _257 * cbObjMatrix._m0[_311].z;
    precise float _333 = _257 * cbObjMatrix._m0[_318].z;
    precise float _334 = _257 * cbObjMatrix._m0[_304].w;
    precise float _335 = _257 * cbObjMatrix._m0[_311].w;
    precise float _336 = _257 * cbObjMatrix._m0[_318].w;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    uint _351 = (_267 + uint(float(BLENDINDICES.z))) * 3u;
    uint _358 = _351 + 1u;
    uint _365 = _351 + 2u;
    precise float _372 = _258 * cbObjMatrix._m0[_351].x;
    precise float _373 = _258 * cbObjMatrix._m0[_358].x;
    precise float _374 = _258 * cbObjMatrix._m0[_365].x;
    precise float _375 = _258 * cbObjMatrix._m0[_351].y;
    precise float _376 = _258 * cbObjMatrix._m0[_358].y;
    precise float _377 = _258 * cbObjMatrix._m0[_365].y;
    precise float _378 = _258 * cbObjMatrix._m0[_351].z;
    precise float _379 = _258 * cbObjMatrix._m0[_358].z;
    precise float _380 = _258 * cbObjMatrix._m0[_365].z;
    precise float _381 = _258 * cbObjMatrix._m0[_351].w;
    precise float _382 = _258 * cbObjMatrix._m0[_358].w;
    precise float _383 = _258 * cbObjMatrix._m0[_365].w;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    uint _398 = (_267 + uint(float(BLENDINDICES.w))) * 3u;
    uint _405 = _398 + 1u;
    uint _412 = _398 + 2u;
    precise float _419 = _259 * cbObjMatrix._m0[_398].x;
    precise float _420 = _259 * cbObjMatrix._m0[_405].x;
    precise float _421 = _259 * cbObjMatrix._m0[_412].x;
    precise float _422 = _259 * cbObjMatrix._m0[_398].y;
    precise float _423 = _259 * cbObjMatrix._m0[_405].y;
    precise float _424 = _259 * cbObjMatrix._m0[_412].y;
    precise float _425 = _259 * cbObjMatrix._m0[_398].z;
    precise float _426 = _259 * cbObjMatrix._m0[_405].z;
    precise float _427 = _259 * cbObjMatrix._m0[_412].z;
    precise float _428 = _259 * cbObjMatrix._m0[_398].w;
    precise float _429 = _259 * cbObjMatrix._m0[_405].w;
    precise float _430 = _259 * cbObjMatrix._m0[_412].w;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = POSITION.x * _431;
    precise float _444 = POSITION.y * _434;
    precise float _445 = _444 + _443;
    precise float _446 = POSITION.z * _437;
    precise float _447 = _446 + _445;
    precise float _448 = 1.0 * _440;
    precise float _449 = _448 + _447;
    precise float _450 = POSITION.x * _432;
    precise float _451 = POSITION.y * _435;
    precise float _452 = _451 + _450;
    precise float _453 = POSITION.z * _438;
    precise float _454 = _453 + _452;
    precise float _455 = 1.0 * _441;
    precise float _456 = _455 + _454;
    precise float _457 = POSITION.x * _433;
    precise float _458 = POSITION.y * _436;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.z * _439;
    precise float _461 = _460 + _459;
    precise float _462 = 1.0 * _442;
    precise float _463 = _462 + _461;
    float _469 = cbSceneParam._m0[3u].x - _449;
    float _470 = cbSceneParam._m0[3u].y - _456;
    float _471 = cbSceneParam._m0[3u].z - _463;
    precise float _506 = _449 - cbSceneParam._m0[3u].x;
    precise float _507 = _456 - cbSceneParam._m0[3u].y;
    precise float _508 = _463 - cbSceneParam._m0[3u].z;
    precise float _536 = _506 * cbSceneParam._m0[24u].x;
    precise float _537 = _507 * cbSceneParam._m0[24u].y;
    precise float _538 = _537 + _536;
    precise float _539 = _508 * cbSceneParam._m0[24u].z;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _542 = _541 + _540;
    precise float _543 = _506 * cbSceneParam._m0[25u].x;
    precise float _544 = _507 * cbSceneParam._m0[25u].y;
    precise float _545 = _544 + _543;
    precise float _546 = _508 * cbSceneParam._m0[25u].z;
    precise float _547 = _546 + _545;
    precise float _548 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _549 = _548 + _547;
    precise float _550 = _506 * cbSceneParam._m0[26u].x;
    precise float _551 = _507 * cbSceneParam._m0[26u].y;
    precise float _552 = _551 + _550;
    precise float _553 = _508 * cbSceneParam._m0[26u].z;
    precise float _554 = _553 + _552;
    precise float _555 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _556 = _555 + _554;
    precise float _557 = _506 * cbSceneParam._m0[27u].x;
    precise float _558 = _507 * cbSceneParam._m0[27u].y;
    precise float _559 = _558 + _557;
    precise float _560 = _508 * cbSceneParam._m0[27u].z;
    precise float _561 = _560 + _559;
    precise float _562 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _563 = _562 + _561;
    gl_Position.x = _542;
    gl_Position.y = _549;
    gl_Position.z = _556;
    gl_Position.w = _563;
    NORMAL_1.x = fma(_212, _437, fma(_211, _434, _431 * _209));
    NORMAL_1.y = fma(_212, _438, fma(_211, _435, _432 * _209));
    NORMAL_1.z = fma(_212, _439, fma(_211, _436, _433 * _209));
    NORMAL_1.w = float(_248);
    TANGENT_1.x = fma(_223, _437, fma(_222, _434, _431 * _221));
    TANGENT_1.y = fma(_223, _438, fma(_222, _435, _432 * _221));
    TANGENT_1.z = fma(_223, _439, fma(_222, _436, _433 * _221));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_235, _437, fma(_234, _434, _431 * _233));
    TANGENT_2_1.y = fma(_235, _438, fma(_234, _435, _432 * _233));
    TANGENT_2_1.z = fma(_235, _439, fma(_234, _436, _433 * _233));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_14 = sqrt(((_469 * _469) + (_470 * _470)) + (_471 * _471));
    gl_ClipDistance[0u] = dot(vec4(_542, _549, _556, _563), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_542, _549, _556, _563), vec4(cbInstanceData._m0[_261 + 3u]));
}


