#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 5, component = 1) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_14 = 0.0;
    float _204 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _240 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _242 = texelFetch(g_InstanceIndexBuffer, int(_240));
    uint _243 = _242.x;
    precise float _244 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _249 = isnan(_244) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _244 : max(0.001000000047497451305389404296875, _244));
    precise float _251 = BLENDWEIGHT.x / _249;
    precise float _252 = BLENDWEIGHT.y / _249;
    precise float _253 = BLENDWEIGHT.z / _249;
    precise float _254 = BLENDWEIGHT.w / _249;
    uvec4 _261 = floatBitsToUint(cbInstanceData._m0[(_243 * 13u) + 4u]);
    uint _262 = _261.x;
    uint _264 = (_262 + uint(float(BLENDINDICES.x))) * 3u;
    uint _271 = _264 + 1u;
    uint _278 = _264 + 2u;
    precise float _285 = _251 * cbObjMatrix._m0[_264].x;
    precise float _286 = _251 * cbObjMatrix._m0[_271].x;
    precise float _287 = _251 * cbObjMatrix._m0[_278].x;
    precise float _288 = _251 * cbObjMatrix._m0[_264].y;
    precise float _289 = _251 * cbObjMatrix._m0[_271].y;
    precise float _290 = _251 * cbObjMatrix._m0[_278].y;
    precise float _291 = _251 * cbObjMatrix._m0[_264].z;
    precise float _292 = _251 * cbObjMatrix._m0[_271].z;
    precise float _293 = _251 * cbObjMatrix._m0[_278].z;
    precise float _294 = _251 * cbObjMatrix._m0[_264].w;
    precise float _295 = _251 * cbObjMatrix._m0[_271].w;
    precise float _296 = _251 * cbObjMatrix._m0[_278].w;
    uint _299 = (_262 + uint(float(BLENDINDICES.y))) * 3u;
    uint _306 = _299 + 1u;
    uint _313 = _299 + 2u;
    precise float _320 = _252 * cbObjMatrix._m0[_299].x;
    precise float _321 = _252 * cbObjMatrix._m0[_306].x;
    precise float _322 = _252 * cbObjMatrix._m0[_313].x;
    precise float _323 = _252 * cbObjMatrix._m0[_299].y;
    precise float _324 = _252 * cbObjMatrix._m0[_306].y;
    precise float _325 = _252 * cbObjMatrix._m0[_313].y;
    precise float _326 = _252 * cbObjMatrix._m0[_299].z;
    precise float _327 = _252 * cbObjMatrix._m0[_306].z;
    precise float _328 = _252 * cbObjMatrix._m0[_313].z;
    precise float _329 = _252 * cbObjMatrix._m0[_299].w;
    precise float _330 = _252 * cbObjMatrix._m0[_306].w;
    precise float _331 = _252 * cbObjMatrix._m0[_313].w;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    uint _346 = (_262 + uint(float(BLENDINDICES.z))) * 3u;
    uint _353 = _346 + 1u;
    uint _360 = _346 + 2u;
    precise float _367 = _253 * cbObjMatrix._m0[_346].x;
    precise float _368 = _253 * cbObjMatrix._m0[_353].x;
    precise float _369 = _253 * cbObjMatrix._m0[_360].x;
    precise float _370 = _253 * cbObjMatrix._m0[_346].y;
    precise float _371 = _253 * cbObjMatrix._m0[_353].y;
    precise float _372 = _253 * cbObjMatrix._m0[_360].y;
    precise float _373 = _253 * cbObjMatrix._m0[_346].z;
    precise float _374 = _253 * cbObjMatrix._m0[_353].z;
    precise float _375 = _253 * cbObjMatrix._m0[_360].z;
    precise float _376 = _253 * cbObjMatrix._m0[_346].w;
    precise float _377 = _253 * cbObjMatrix._m0[_353].w;
    precise float _378 = _253 * cbObjMatrix._m0[_360].w;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    uint _393 = (_262 + uint(float(BLENDINDICES.w))) * 3u;
    uint _400 = _393 + 1u;
    uint _407 = _393 + 2u;
    precise float _414 = _254 * cbObjMatrix._m0[_393].x;
    precise float _415 = _254 * cbObjMatrix._m0[_400].x;
    precise float _416 = _254 * cbObjMatrix._m0[_407].x;
    precise float _417 = _254 * cbObjMatrix._m0[_393].y;
    precise float _418 = _254 * cbObjMatrix._m0[_400].y;
    precise float _419 = _254 * cbObjMatrix._m0[_407].y;
    precise float _420 = _254 * cbObjMatrix._m0[_393].z;
    precise float _421 = _254 * cbObjMatrix._m0[_400].z;
    precise float _422 = _254 * cbObjMatrix._m0[_407].z;
    precise float _423 = _254 * cbObjMatrix._m0[_393].w;
    precise float _424 = _254 * cbObjMatrix._m0[_400].w;
    precise float _425 = _254 * cbObjMatrix._m0[_407].w;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = POSITION.x * _426;
    precise float _439 = POSITION.y * _429;
    precise float _440 = _439 + _438;
    precise float _441 = POSITION.z * _432;
    precise float _442 = _441 + _440;
    precise float _443 = 1.0 * _435;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.x * _427;
    precise float _446 = POSITION.y * _430;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.z * _433;
    precise float _449 = _448 + _447;
    precise float _450 = 1.0 * _436;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.x * _428;
    precise float _453 = POSITION.y * _431;
    precise float _454 = _453 + _452;
    precise float _455 = POSITION.z * _434;
    precise float _456 = _455 + _454;
    precise float _457 = 1.0 * _437;
    precise float _458 = _457 + _456;
    float _464 = cbSceneParam._m0[3u].x - _444;
    float _465 = cbSceneParam._m0[3u].y - _451;
    float _466 = cbSceneParam._m0[3u].z - _458;
    precise float _501 = _444 - cbSceneParam._m0[3u].x;
    precise float _502 = _451 - cbSceneParam._m0[3u].y;
    precise float _503 = _458 - cbSceneParam._m0[3u].z;
    precise float _531 = _501 * cbSceneParam._m0[24u].x;
    precise float _532 = _502 * cbSceneParam._m0[24u].y;
    precise float _533 = _532 + _531;
    precise float _534 = _503 * cbSceneParam._m0[24u].z;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _537 = _536 + _535;
    precise float _538 = _501 * cbSceneParam._m0[25u].x;
    precise float _539 = _502 * cbSceneParam._m0[25u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _503 * cbSceneParam._m0[25u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _544 = _543 + _542;
    precise float _545 = _501 * cbSceneParam._m0[26u].x;
    precise float _546 = _502 * cbSceneParam._m0[26u].y;
    precise float _547 = _546 + _545;
    precise float _548 = _503 * cbSceneParam._m0[26u].z;
    precise float _549 = _548 + _547;
    precise float _550 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _551 = _550 + _549;
    precise float _552 = _501 * cbSceneParam._m0[27u].x;
    precise float _553 = _502 * cbSceneParam._m0[27u].y;
    precise float _554 = _553 + _552;
    precise float _555 = _503 * cbSceneParam._m0[27u].z;
    precise float _556 = _555 + _554;
    precise float _557 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _558 = _557 + _556;
    gl_Position.x = _537;
    gl_Position.y = _544;
    gl_Position.z = _551;
    gl_Position.w = _558;
    NORMAL_1.x = fma(_207, _432, fma(_206, _429, _426 * _204));
    NORMAL_1.y = fma(_207, _433, fma(_206, _430, _427 * _204));
    NORMAL_1.z = fma(_207, _434, fma(_206, _431, _428 * _204));
    NORMAL_1.w = float(_243);
    TANGENT_1.x = fma(_218, _432, fma(_217, _429, _426 * _216));
    TANGENT_1.y = fma(_218, _433, fma(_217, _430, _427 * _216));
    TANGENT_1.z = fma(_218, _434, fma(_217, _431, _428 * _216));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_230, _432, fma(_229, _429, _426 * _228));
    TANGENT_2_1.y = fma(_230, _433, fma(_229, _430, _427 * _228));
    TANGENT_2_1.z = fma(_230, _434, fma(_229, _431, _428 * _228));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_14 = sqrt(((_464 * _464) + (_465 * _465)) + (_466 * _466));
}


