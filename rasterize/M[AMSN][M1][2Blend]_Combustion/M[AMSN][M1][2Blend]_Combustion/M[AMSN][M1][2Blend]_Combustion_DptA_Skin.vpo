#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _214 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _216 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _226 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _250 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _252 = texelFetch(g_InstanceIndexBuffer, int(_250));
    uint _253 = _252.x;
    precise float _254 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _259 = isnan(_254) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _254 : max(0.001000000047497451305389404296875, _254));
    precise float _261 = BLENDWEIGHT.x / _259;
    precise float _262 = BLENDWEIGHT.y / _259;
    precise float _263 = BLENDWEIGHT.z / _259;
    precise float _264 = BLENDWEIGHT.w / _259;
    uint _266 = _253 * 13u;
    uvec4 _271 = floatBitsToUint(cbInstanceData._m0[_266 + 4u]);
    uint _272 = _271.x;
    uint _274 = (_272 + uint(float(BLENDINDICES.x))) * 3u;
    uint _281 = _274 + 1u;
    uint _288 = _274 + 2u;
    precise float _295 = _261 * cbObjMatrix._m0[_274].x;
    precise float _296 = _261 * cbObjMatrix._m0[_281].x;
    precise float _297 = _261 * cbObjMatrix._m0[_288].x;
    precise float _298 = _261 * cbObjMatrix._m0[_274].y;
    precise float _299 = _261 * cbObjMatrix._m0[_281].y;
    precise float _300 = _261 * cbObjMatrix._m0[_288].y;
    precise float _301 = _261 * cbObjMatrix._m0[_274].z;
    precise float _302 = _261 * cbObjMatrix._m0[_281].z;
    precise float _303 = _261 * cbObjMatrix._m0[_288].z;
    precise float _304 = _261 * cbObjMatrix._m0[_274].w;
    precise float _305 = _261 * cbObjMatrix._m0[_281].w;
    precise float _306 = _261 * cbObjMatrix._m0[_288].w;
    uint _309 = (_272 + uint(float(BLENDINDICES.y))) * 3u;
    uint _316 = _309 + 1u;
    uint _323 = _309 + 2u;
    precise float _330 = _262 * cbObjMatrix._m0[_309].x;
    precise float _331 = _262 * cbObjMatrix._m0[_316].x;
    precise float _332 = _262 * cbObjMatrix._m0[_323].x;
    precise float _333 = _262 * cbObjMatrix._m0[_309].y;
    precise float _334 = _262 * cbObjMatrix._m0[_316].y;
    precise float _335 = _262 * cbObjMatrix._m0[_323].y;
    precise float _336 = _262 * cbObjMatrix._m0[_309].z;
    precise float _337 = _262 * cbObjMatrix._m0[_316].z;
    precise float _338 = _262 * cbObjMatrix._m0[_323].z;
    precise float _339 = _262 * cbObjMatrix._m0[_309].w;
    precise float _340 = _262 * cbObjMatrix._m0[_316].w;
    precise float _341 = _262 * cbObjMatrix._m0[_323].w;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    uint _356 = (_272 + uint(float(BLENDINDICES.z))) * 3u;
    uint _363 = _356 + 1u;
    uint _370 = _356 + 2u;
    precise float _377 = _263 * cbObjMatrix._m0[_356].x;
    precise float _378 = _263 * cbObjMatrix._m0[_363].x;
    precise float _379 = _263 * cbObjMatrix._m0[_370].x;
    precise float _380 = _263 * cbObjMatrix._m0[_356].y;
    precise float _381 = _263 * cbObjMatrix._m0[_363].y;
    precise float _382 = _263 * cbObjMatrix._m0[_370].y;
    precise float _383 = _263 * cbObjMatrix._m0[_356].z;
    precise float _384 = _263 * cbObjMatrix._m0[_363].z;
    precise float _385 = _263 * cbObjMatrix._m0[_370].z;
    precise float _386 = _263 * cbObjMatrix._m0[_356].w;
    precise float _387 = _263 * cbObjMatrix._m0[_363].w;
    precise float _388 = _263 * cbObjMatrix._m0[_370].w;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    uint _403 = (_272 + uint(float(BLENDINDICES.w))) * 3u;
    uint _410 = _403 + 1u;
    uint _417 = _403 + 2u;
    precise float _424 = _264 * cbObjMatrix._m0[_403].x;
    precise float _425 = _264 * cbObjMatrix._m0[_410].x;
    precise float _426 = _264 * cbObjMatrix._m0[_417].x;
    precise float _427 = _264 * cbObjMatrix._m0[_403].y;
    precise float _428 = _264 * cbObjMatrix._m0[_410].y;
    precise float _429 = _264 * cbObjMatrix._m0[_417].y;
    precise float _430 = _264 * cbObjMatrix._m0[_403].z;
    precise float _431 = _264 * cbObjMatrix._m0[_410].z;
    precise float _432 = _264 * cbObjMatrix._m0[_417].z;
    precise float _433 = _264 * cbObjMatrix._m0[_403].w;
    precise float _434 = _264 * cbObjMatrix._m0[_410].w;
    precise float _435 = _264 * cbObjMatrix._m0[_417].w;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = POSITION.x * _436;
    precise float _449 = POSITION.y * _439;
    precise float _450 = _449 + _448;
    precise float _451 = POSITION.z * _442;
    precise float _452 = _451 + _450;
    precise float _453 = 1.0 * _445;
    precise float _454 = _453 + _452;
    precise float _455 = POSITION.x * _437;
    precise float _456 = POSITION.y * _440;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.z * _443;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * _446;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.x * _438;
    precise float _463 = POSITION.y * _441;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.z * _444;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * _447;
    precise float _468 = _467 + _466;
    float _474 = cbSceneParam._m0[3u].x - _454;
    float _475 = cbSceneParam._m0[3u].y - _461;
    float _476 = cbSceneParam._m0[3u].z - _468;
    precise float _511 = _454 - cbSceneParam._m0[3u].x;
    precise float _512 = _461 - cbSceneParam._m0[3u].y;
    precise float _513 = _468 - cbSceneParam._m0[3u].z;
    precise float _541 = _511 * cbSceneParam._m0[24u].x;
    precise float _542 = _512 * cbSceneParam._m0[24u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _513 * cbSceneParam._m0[24u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _547 = _546 + _545;
    precise float _548 = _511 * cbSceneParam._m0[25u].x;
    precise float _549 = _512 * cbSceneParam._m0[25u].y;
    precise float _550 = _549 + _548;
    precise float _551 = _513 * cbSceneParam._m0[25u].z;
    precise float _552 = _551 + _550;
    precise float _553 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _554 = _553 + _552;
    precise float _555 = _511 * cbSceneParam._m0[26u].x;
    precise float _556 = _512 * cbSceneParam._m0[26u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _513 * cbSceneParam._m0[26u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _561 = _560 + _559;
    precise float _562 = _511 * cbSceneParam._m0[27u].x;
    precise float _563 = _512 * cbSceneParam._m0[27u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _513 * cbSceneParam._m0[27u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _568 = _567 + _566;
    gl_Position.x = _547;
    gl_Position.y = _554;
    gl_Position.z = _561;
    gl_Position.w = _568;
    NORMAL_1.x = fma(_217, _442, fma(_216, _439, _436 * _214));
    NORMAL_1.y = fma(_217, _443, fma(_216, _440, _437 * _214));
    NORMAL_1.z = fma(_217, _444, fma(_216, _441, _438 * _214));
    NORMAL_1.w = float(_253);
    TANGENT_1.x = fma(_228, _442, fma(_227, _439, _436 * _226));
    TANGENT_1.y = fma(_228, _443, fma(_227, _440, _437 * _226));
    TANGENT_1.z = fma(_228, _444, fma(_227, _441, _438 * _226));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_240, _442, fma(_239, _439, _436 * _238));
    TANGENT_2_1.y = fma(_240, _443, fma(_239, _440, _437 * _238));
    TANGENT_2_1.z = fma(_240, _444, fma(_239, _441, _438 * _238));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_10.x = _561;
    TEXCOORD_10.y = _568;
    TEXCOORD_14 = sqrt(((_474 * _474) + (_475 * _475)) + (_476 * _476));
    gl_ClipDistance[0u] = dot(vec4(_547, _554, _561, _568), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_547, _554, _561, _568), vec4(cbInstanceData._m0[_266 + 3u]));
}


