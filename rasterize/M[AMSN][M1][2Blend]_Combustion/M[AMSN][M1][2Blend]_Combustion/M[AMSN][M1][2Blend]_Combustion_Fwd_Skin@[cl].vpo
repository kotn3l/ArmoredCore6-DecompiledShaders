#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out float TEXCOORD_5;
layout(location = 7) out vec4 TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    float _208 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _222 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _244 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _246 = texelFetch(g_InstanceIndexBuffer, int(_244));
    uint _247 = _246.x;
    precise float _248 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _253 = isnan(_248) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _248 : max(0.001000000047497451305389404296875, _248));
    precise float _255 = BLENDWEIGHT.x / _253;
    precise float _256 = BLENDWEIGHT.y / _253;
    precise float _257 = BLENDWEIGHT.z / _253;
    precise float _258 = BLENDWEIGHT.w / _253;
    uvec4 _265 = floatBitsToUint(cbInstanceData._m0[(_247 * 13u) + 4u]);
    uint _266 = _265.x;
    uint _268 = (_266 + uint(float(BLENDINDICES.x))) * 3u;
    uint _275 = _268 + 1u;
    uint _282 = _268 + 2u;
    precise float _289 = _255 * cbObjMatrix._m0[_268].x;
    precise float _290 = _255 * cbObjMatrix._m0[_275].x;
    precise float _291 = _255 * cbObjMatrix._m0[_282].x;
    precise float _292 = _255 * cbObjMatrix._m0[_268].y;
    precise float _293 = _255 * cbObjMatrix._m0[_275].y;
    precise float _294 = _255 * cbObjMatrix._m0[_282].y;
    precise float _295 = _255 * cbObjMatrix._m0[_268].z;
    precise float _296 = _255 * cbObjMatrix._m0[_275].z;
    precise float _297 = _255 * cbObjMatrix._m0[_282].z;
    precise float _298 = _255 * cbObjMatrix._m0[_268].w;
    precise float _299 = _255 * cbObjMatrix._m0[_275].w;
    precise float _300 = _255 * cbObjMatrix._m0[_282].w;
    uint _303 = (_266 + uint(float(BLENDINDICES.y))) * 3u;
    uint _310 = _303 + 1u;
    uint _317 = _303 + 2u;
    precise float _324 = _256 * cbObjMatrix._m0[_303].x;
    precise float _325 = _256 * cbObjMatrix._m0[_310].x;
    precise float _326 = _256 * cbObjMatrix._m0[_317].x;
    precise float _327 = _256 * cbObjMatrix._m0[_303].y;
    precise float _328 = _256 * cbObjMatrix._m0[_310].y;
    precise float _329 = _256 * cbObjMatrix._m0[_317].y;
    precise float _330 = _256 * cbObjMatrix._m0[_303].z;
    precise float _331 = _256 * cbObjMatrix._m0[_310].z;
    precise float _332 = _256 * cbObjMatrix._m0[_317].z;
    precise float _333 = _256 * cbObjMatrix._m0[_303].w;
    precise float _334 = _256 * cbObjMatrix._m0[_310].w;
    precise float _335 = _256 * cbObjMatrix._m0[_317].w;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    uint _350 = (_266 + uint(float(BLENDINDICES.z))) * 3u;
    uint _357 = _350 + 1u;
    uint _364 = _350 + 2u;
    precise float _371 = _257 * cbObjMatrix._m0[_350].x;
    precise float _372 = _257 * cbObjMatrix._m0[_357].x;
    precise float _373 = _257 * cbObjMatrix._m0[_364].x;
    precise float _374 = _257 * cbObjMatrix._m0[_350].y;
    precise float _375 = _257 * cbObjMatrix._m0[_357].y;
    precise float _376 = _257 * cbObjMatrix._m0[_364].y;
    precise float _377 = _257 * cbObjMatrix._m0[_350].z;
    precise float _378 = _257 * cbObjMatrix._m0[_357].z;
    precise float _379 = _257 * cbObjMatrix._m0[_364].z;
    precise float _380 = _257 * cbObjMatrix._m0[_350].w;
    precise float _381 = _257 * cbObjMatrix._m0[_357].w;
    precise float _382 = _257 * cbObjMatrix._m0[_364].w;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    uint _397 = (_266 + uint(float(BLENDINDICES.w))) * 3u;
    uint _404 = _397 + 1u;
    uint _411 = _397 + 2u;
    precise float _418 = _258 * cbObjMatrix._m0[_397].x;
    precise float _419 = _258 * cbObjMatrix._m0[_404].x;
    precise float _420 = _258 * cbObjMatrix._m0[_411].x;
    precise float _421 = _258 * cbObjMatrix._m0[_397].y;
    precise float _422 = _258 * cbObjMatrix._m0[_404].y;
    precise float _423 = _258 * cbObjMatrix._m0[_411].y;
    precise float _424 = _258 * cbObjMatrix._m0[_397].z;
    precise float _425 = _258 * cbObjMatrix._m0[_404].z;
    precise float _426 = _258 * cbObjMatrix._m0[_411].z;
    precise float _427 = _258 * cbObjMatrix._m0[_397].w;
    precise float _428 = _258 * cbObjMatrix._m0[_404].w;
    precise float _429 = _258 * cbObjMatrix._m0[_411].w;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = POSITION.x * _430;
    precise float _443 = POSITION.y * _433;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.z * _436;
    precise float _446 = _445 + _444;
    precise float _447 = 1.0 * _439;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.x * _431;
    precise float _450 = POSITION.y * _434;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.z * _437;
    precise float _453 = _452 + _451;
    precise float _454 = 1.0 * _440;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.x * _432;
    precise float _457 = POSITION.y * _435;
    precise float _458 = _457 + _456;
    precise float _459 = POSITION.z * _438;
    precise float _460 = _459 + _458;
    precise float _461 = 1.0 * _441;
    precise float _462 = _461 + _460;
    precise float _496 = _448 - cbSceneParam._m0[3u].x;
    precise float _497 = _455 - cbSceneParam._m0[3u].y;
    precise float _498 = _462 - cbSceneParam._m0[3u].z;
    precise float _526 = _496 * cbSceneParam._m0[24u].x;
    precise float _527 = _497 * cbSceneParam._m0[24u].y;
    precise float _528 = _527 + _526;
    precise float _529 = _498 * cbSceneParam._m0[24u].z;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _532 = _531 + _530;
    precise float _533 = _496 * cbSceneParam._m0[25u].x;
    precise float _534 = _497 * cbSceneParam._m0[25u].y;
    precise float _535 = _534 + _533;
    precise float _536 = _498 * cbSceneParam._m0[25u].z;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _539 = _538 + _537;
    precise float _540 = _496 * cbSceneParam._m0[26u].x;
    precise float _541 = _497 * cbSceneParam._m0[26u].y;
    precise float _542 = _541 + _540;
    precise float _543 = _498 * cbSceneParam._m0[26u].z;
    precise float _544 = _543 + _542;
    precise float _545 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _546 = _545 + _544;
    precise float _547 = _496 * cbSceneParam._m0[27u].x;
    precise float _548 = _497 * cbSceneParam._m0[27u].y;
    precise float _549 = _548 + _547;
    precise float _550 = _498 * cbSceneParam._m0[27u].z;
    precise float _551 = _550 + _549;
    precise float _552 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _553 = _552 + _551;
    gl_Position.x = _532;
    gl_Position.y = _539;
    gl_Position.z = _546;
    gl_Position.w = _553;
    POSITION_1.x = _532;
    POSITION_1.y = _539;
    POSITION_1.z = _546;
    POSITION_1.w = _553;
    NORMAL_1.x = fma(_211, _436, fma(_210, _433, _430 * _208));
    NORMAL_1.y = fma(_211, _437, fma(_210, _434, _431 * _208));
    NORMAL_1.z = fma(_211, _438, fma(_210, _435, _432 * _208));
    NORMAL_1.w = float(_247);
    TANGENT_1.x = fma(_222, _436, fma(_221, _433, _430 * _220));
    TANGENT_1.y = fma(_222, _437, fma(_221, _434, _431 * _220));
    TANGENT_1.z = fma(_222, _438, fma(_221, _435, _432 * _220));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_234, _436, fma(_233, _433, _430 * _232));
    TANGENT_2_1.y = fma(_234, _437, fma(_233, _434, _431 * _232));
    TANGENT_2_1.z = fma(_234, _438, fma(_233, _435, _432 * _232));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
}


