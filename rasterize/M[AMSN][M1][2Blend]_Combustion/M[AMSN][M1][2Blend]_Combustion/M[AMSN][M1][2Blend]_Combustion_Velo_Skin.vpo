#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_3;
layout(location = 6) out float TEXCOORD_5;
layout(location = 7) out vec4 TEXCOORD_6;
layout(location = 8) out vec4 TEXCOORD_11;
layout(location = 9) out vec4 TEXCOORD_12;
layout(location = 6, component = 1) out vec3 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _232 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _268 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _270 = texelFetch(g_InstanceIndexBuffer, int(_268));
    uint _271 = _270.x;
    precise float _272 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _277 = isnan(_272) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _272 : max(0.001000000047497451305389404296875, _272));
    precise float _279 = BLENDWEIGHT.x / _277;
    precise float _280 = BLENDWEIGHT.y / _277;
    precise float _281 = BLENDWEIGHT.z / _277;
    precise float _282 = BLENDWEIGHT.w / _277;
    uint _284 = _271 * 13u;
    uvec4 _289 = floatBitsToUint(cbInstanceData._m0[_284 + 4u]);
    uint _290 = _289.x;
    uint _292 = (_290 + uint(float(BLENDINDICES.x))) * 3u;
    uint _299 = _292 + 1u;
    uint _306 = _292 + 2u;
    precise float _313 = _279 * cbObjMatrix._m0[_292].x;
    precise float _314 = _279 * cbObjMatrix._m0[_299].x;
    precise float _315 = _279 * cbObjMatrix._m0[_306].x;
    precise float _316 = _279 * cbObjMatrix._m0[_292].y;
    precise float _317 = _279 * cbObjMatrix._m0[_299].y;
    precise float _318 = _279 * cbObjMatrix._m0[_306].y;
    precise float _319 = _279 * cbObjMatrix._m0[_292].z;
    precise float _320 = _279 * cbObjMatrix._m0[_299].z;
    precise float _321 = _279 * cbObjMatrix._m0[_306].z;
    precise float _322 = _279 * cbObjMatrix._m0[_292].w;
    precise float _323 = _279 * cbObjMatrix._m0[_299].w;
    precise float _324 = _279 * cbObjMatrix._m0[_306].w;
    uint _327 = (_290 + uint(float(BLENDINDICES.y))) * 3u;
    uint _334 = _327 + 1u;
    uint _341 = _327 + 2u;
    precise float _348 = _280 * cbObjMatrix._m0[_327].x;
    precise float _349 = _280 * cbObjMatrix._m0[_334].x;
    precise float _350 = _280 * cbObjMatrix._m0[_341].x;
    precise float _351 = _280 * cbObjMatrix._m0[_327].y;
    precise float _352 = _280 * cbObjMatrix._m0[_334].y;
    precise float _353 = _280 * cbObjMatrix._m0[_341].y;
    precise float _354 = _280 * cbObjMatrix._m0[_327].z;
    precise float _355 = _280 * cbObjMatrix._m0[_334].z;
    precise float _356 = _280 * cbObjMatrix._m0[_341].z;
    precise float _357 = _280 * cbObjMatrix._m0[_327].w;
    precise float _358 = _280 * cbObjMatrix._m0[_334].w;
    precise float _359 = _280 * cbObjMatrix._m0[_341].w;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    uint _374 = (_290 + uint(float(BLENDINDICES.z))) * 3u;
    uint _381 = _374 + 1u;
    uint _388 = _374 + 2u;
    precise float _395 = _281 * cbObjMatrix._m0[_374].x;
    precise float _396 = _281 * cbObjMatrix._m0[_381].x;
    precise float _397 = _281 * cbObjMatrix._m0[_388].x;
    precise float _398 = _281 * cbObjMatrix._m0[_374].y;
    precise float _399 = _281 * cbObjMatrix._m0[_381].y;
    precise float _400 = _281 * cbObjMatrix._m0[_388].y;
    precise float _401 = _281 * cbObjMatrix._m0[_374].z;
    precise float _402 = _281 * cbObjMatrix._m0[_381].z;
    precise float _403 = _281 * cbObjMatrix._m0[_388].z;
    precise float _404 = _281 * cbObjMatrix._m0[_374].w;
    precise float _405 = _281 * cbObjMatrix._m0[_381].w;
    precise float _406 = _281 * cbObjMatrix._m0[_388].w;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    uint _421 = (_290 + uint(float(BLENDINDICES.w))) * 3u;
    uint _428 = _421 + 1u;
    uint _435 = _421 + 2u;
    precise float _442 = _282 * cbObjMatrix._m0[_421].x;
    precise float _443 = _282 * cbObjMatrix._m0[_428].x;
    precise float _444 = _282 * cbObjMatrix._m0[_435].x;
    precise float _445 = _282 * cbObjMatrix._m0[_421].y;
    precise float _446 = _282 * cbObjMatrix._m0[_428].y;
    precise float _447 = _282 * cbObjMatrix._m0[_435].y;
    precise float _448 = _282 * cbObjMatrix._m0[_421].z;
    precise float _449 = _282 * cbObjMatrix._m0[_428].z;
    precise float _450 = _282 * cbObjMatrix._m0[_435].z;
    precise float _451 = _282 * cbObjMatrix._m0[_421].w;
    precise float _452 = _282 * cbObjMatrix._m0[_428].w;
    precise float _453 = _282 * cbObjMatrix._m0[_435].w;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = POSITION.x * _454;
    precise float _467 = POSITION.y * _457;
    precise float _468 = _467 + _466;
    precise float _469 = POSITION.z * _460;
    precise float _470 = _469 + _468;
    precise float _471 = 1.0 * _463;
    precise float _472 = _471 + _470;
    precise float _473 = POSITION.x * _455;
    precise float _474 = POSITION.y * _458;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.z * _461;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * _464;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.x * _456;
    precise float _481 = POSITION.y * _459;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.z * _462;
    precise float _484 = _483 + _482;
    precise float _485 = 1.0 * _465;
    precise float _486 = _485 + _484;
    float _661 = (((((cbPrevObjMatrix._m0[_327].w * _280) + (cbPrevObjMatrix._m0[_292].w * _279)) + (cbPrevObjMatrix._m0[_374].w * _281)) + (cbPrevObjMatrix._m0[_421].w * _282)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_327].z * _280) + (cbPrevObjMatrix._m0[_292].z * _279)) + (cbPrevObjMatrix._m0[_374].z * _281)) + (cbPrevObjMatrix._m0[_421].z * _282), fma(POSITION.y, (((cbPrevObjMatrix._m0[_327].y * _280) + (cbPrevObjMatrix._m0[_292].y * _279)) + (cbPrevObjMatrix._m0[_374].y * _281)) + (cbPrevObjMatrix._m0[_421].y * _282), ((((cbPrevObjMatrix._m0[_327].x * _280) + (cbPrevObjMatrix._m0[_292].x * _279)) + (cbPrevObjMatrix._m0[_374].x * _281)) + (cbPrevObjMatrix._m0[_421].x * _282)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _662 = (((((cbPrevObjMatrix._m0[_334].w * _280) + (cbPrevObjMatrix._m0[_299].w * _279)) + (cbPrevObjMatrix._m0[_381].w * _281)) + (cbPrevObjMatrix._m0[_428].w * _282)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_334].z * _280) + (cbPrevObjMatrix._m0[_299].z * _279)) + (cbPrevObjMatrix._m0[_381].z * _281)) + (cbPrevObjMatrix._m0[_428].z * _282), fma(POSITION.y, (((cbPrevObjMatrix._m0[_334].y * _280) + (cbPrevObjMatrix._m0[_299].y * _279)) + (cbPrevObjMatrix._m0[_381].y * _281)) + (cbPrevObjMatrix._m0[_428].y * _282), ((((cbPrevObjMatrix._m0[_334].x * _280) + (cbPrevObjMatrix._m0[_299].x * _279)) + (cbPrevObjMatrix._m0[_381].x * _281)) + (cbPrevObjMatrix._m0[_428].x * _282)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _663 = (((((cbPrevObjMatrix._m0[_341].w * _280) + (cbPrevObjMatrix._m0[_306].w * _279)) + (cbPrevObjMatrix._m0[_388].w * _281)) + (cbPrevObjMatrix._m0[_435].w * _282)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_341].z * _280) + (cbPrevObjMatrix._m0[_306].z * _279)) + (cbPrevObjMatrix._m0[_388].z * _281)) + (cbPrevObjMatrix._m0[_435].z * _282), fma(POSITION.y, (((cbPrevObjMatrix._m0[_341].y * _280) + (cbPrevObjMatrix._m0[_306].y * _279)) + (cbPrevObjMatrix._m0[_388].y * _281)) + (cbPrevObjMatrix._m0[_435].y * _282), ((((cbPrevObjMatrix._m0[_341].x * _280) + (cbPrevObjMatrix._m0[_306].x * _279)) + (cbPrevObjMatrix._m0[_388].x * _281)) + (cbPrevObjMatrix._m0[_435].x * _282)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _710 = fma(_235, _460, fma(_234, _457, _454 * _232));
    float _713 = fma(_235, _461, fma(_234, _458, _455 * _232));
    float _716 = fma(_235, _462, fma(_234, _459, _456 * _232));
    precise float _741 = _472 - cbSceneParam._m0[3u].x;
    precise float _742 = _479 - cbSceneParam._m0[3u].y;
    precise float _743 = _486 - cbSceneParam._m0[3u].z;
    precise float _771 = _741 * cbSceneParam._m0[24u].x;
    precise float _772 = _742 * cbSceneParam._m0[24u].y;
    precise float _773 = _772 + _771;
    precise float _774 = _743 * cbSceneParam._m0[24u].z;
    precise float _775 = _774 + _773;
    precise float _776 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _777 = _776 + _775;
    precise float _778 = _741 * cbSceneParam._m0[25u].x;
    precise float _779 = _742 * cbSceneParam._m0[25u].y;
    precise float _780 = _779 + _778;
    precise float _781 = _743 * cbSceneParam._m0[25u].z;
    precise float _782 = _781 + _780;
    precise float _783 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _784 = _783 + _782;
    precise float _785 = _741 * cbSceneParam._m0[26u].x;
    precise float _786 = _742 * cbSceneParam._m0[26u].y;
    precise float _787 = _786 + _785;
    precise float _788 = _743 * cbSceneParam._m0[26u].z;
    precise float _789 = _788 + _787;
    precise float _790 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _791 = _790 + _789;
    precise float _792 = _741 * cbSceneParam._m0[27u].x;
    precise float _793 = _742 * cbSceneParam._m0[27u].y;
    precise float _794 = _793 + _792;
    precise float _795 = _743 * cbSceneParam._m0[27u].z;
    precise float _796 = _795 + _794;
    precise float _797 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _798 = _797 + _796;
    gl_Position.x = _777;
    gl_Position.y = _784;
    gl_Position.z = _791;
    gl_Position.w = _798;
    POSITION_1.x = _777;
    POSITION_1.y = _784;
    POSITION_1.z = _791;
    POSITION_1.w = _798;
    NORMAL_1.x = _710;
    NORMAL_1.y = _713;
    NORMAL_1.z = _716;
    NORMAL_1.w = float(_271);
    TANGENT_1.x = fma(_246, _460, fma(_245, _457, _454 * _244));
    TANGENT_1.y = fma(_246, _461, fma(_245, _458, _455 * _244));
    TANGENT_1.z = fma(_246, _462, fma(_245, _459, _456 * _244));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_258, _460, fma(_257, _457, _454 * _256));
    TANGENT_2_1.y = fma(_258, _461, fma(_257, _458, _455 * _256));
    TANGENT_2_1.z = fma(_258, _462, fma(_257, _459, _456 * _256));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_11.x = _777;
    TEXCOORD_11.y = _784;
    TEXCOORD_11.z = _791;
    TEXCOORD_11.w = _798;
    TEXCOORD_12.x = fma(_663, cbSceneParam._m0[29u].z, fma(_662, cbSceneParam._m0[29u].y, _661 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_663, cbSceneParam._m0[30u].z, fma(_662, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _661)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_663, cbSceneParam._m0[31u].z, fma(_662, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _661)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_663, cbSceneParam._m0[32u].z, fma(_662, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _661)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _710;
    TEXCOORD_13.y = _713;
    TEXCOORD_13.z = _716;
    gl_ClipDistance[0u] = dot(vec4(_777, _784, _791, _798), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_777, _784, _791, _798), vec4(cbInstanceData._m0[_284 + 3u]));
}


