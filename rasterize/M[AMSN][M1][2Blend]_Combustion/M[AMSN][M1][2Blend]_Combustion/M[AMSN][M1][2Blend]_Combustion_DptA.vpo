#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_3;
layout(location = 5) out float TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_3.x = 0.0;
    TEXCOORD_3.y = 0.0;
    TEXCOORD_3.z = 0.0;
    TEXCOORD_3.w = 0.0;
    TEXCOORD_5 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _198 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _213 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _223 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _231 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _233 = texelFetch(g_InstanceIndexBuffer, int(_231));
    uint _234 = _233.x;
    uint _236 = _234 * 13u;
    uint _244 = (floatBitsToUint(cbInstanceData._m0[_236 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _251 = _244 + 1u;
    uint _258 = _244 + 2u;
    precise float _265 = POSITION.x * cbObjMatrix._m0[_244].x;
    precise float _266 = POSITION.y * cbObjMatrix._m0[_244].y;
    precise float _267 = _266 + _265;
    precise float _268 = POSITION.z * cbObjMatrix._m0[_244].z;
    precise float _269 = _268 + _267;
    precise float _270 = 1.0 * cbObjMatrix._m0[_244].w;
    precise float _272 = _270 + _269;
    precise float _273 = POSITION.x * cbObjMatrix._m0[_251].x;
    precise float _274 = POSITION.y * cbObjMatrix._m0[_251].y;
    precise float _275 = _274 + _273;
    precise float _276 = POSITION.z * cbObjMatrix._m0[_251].z;
    precise float _277 = _276 + _275;
    precise float _278 = 1.0 * cbObjMatrix._m0[_251].w;
    precise float _279 = _278 + _277;
    precise float _280 = POSITION.x * cbObjMatrix._m0[_258].x;
    precise float _281 = POSITION.y * cbObjMatrix._m0[_258].y;
    precise float _282 = _281 + _280;
    precise float _283 = POSITION.z * cbObjMatrix._m0[_258].z;
    precise float _284 = _283 + _282;
    precise float _285 = 1.0 * cbObjMatrix._m0[_258].w;
    precise float _286 = _285 + _284;
    float _292 = cbSceneParam._m0[3u].x - _272;
    float _293 = cbSceneParam._m0[3u].y - _279;
    float _294 = cbSceneParam._m0[3u].z - _286;
    precise float _330 = _272 - cbSceneParam._m0[3u].x;
    precise float _331 = _279 - cbSceneParam._m0[3u].y;
    precise float _332 = _286 - cbSceneParam._m0[3u].z;
    precise float _360 = _330 * cbSceneParam._m0[24u].x;
    precise float _361 = _331 * cbSceneParam._m0[24u].y;
    precise float _362 = _361 + _360;
    precise float _363 = _332 * cbSceneParam._m0[24u].z;
    precise float _364 = _363 + _362;
    precise float _365 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _366 = _365 + _364;
    precise float _367 = _330 * cbSceneParam._m0[25u].x;
    precise float _368 = _331 * cbSceneParam._m0[25u].y;
    precise float _369 = _368 + _367;
    precise float _370 = _332 * cbSceneParam._m0[25u].z;
    precise float _371 = _370 + _369;
    precise float _372 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _373 = _372 + _371;
    precise float _374 = _330 * cbSceneParam._m0[26u].x;
    precise float _375 = _331 * cbSceneParam._m0[26u].y;
    precise float _376 = _375 + _374;
    precise float _377 = _332 * cbSceneParam._m0[26u].z;
    precise float _378 = _377 + _376;
    precise float _379 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _380 = _379 + _378;
    precise float _381 = _330 * cbSceneParam._m0[27u].x;
    precise float _382 = _331 * cbSceneParam._m0[27u].y;
    precise float _383 = _382 + _381;
    precise float _384 = _332 * cbSceneParam._m0[27u].z;
    precise float _385 = _384 + _383;
    precise float _386 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _387 = _386 + _385;
    gl_Position.x = _366;
    gl_Position.y = _373;
    gl_Position.z = _380;
    gl_Position.w = _387;
    NORMAL_1.x = fma(_201, cbObjMatrix._m0[_244].z, fma(_200, cbObjMatrix._m0[_244].y, cbObjMatrix._m0[_244].x * _198));
    NORMAL_1.y = fma(_201, cbObjMatrix._m0[_251].z, fma(_200, cbObjMatrix._m0[_251].y, cbObjMatrix._m0[_251].x * _198));
    NORMAL_1.z = fma(_201, cbObjMatrix._m0[_258].z, fma(_200, cbObjMatrix._m0[_258].y, cbObjMatrix._m0[_258].x * _198));
    NORMAL_1.w = float(_234);
    TANGENT_1.x = fma(_213, cbObjMatrix._m0[_244].z, fma(_212, cbObjMatrix._m0[_244].y, cbObjMatrix._m0[_244].x * _211));
    TANGENT_1.y = fma(_213, cbObjMatrix._m0[_251].z, fma(_212, cbObjMatrix._m0[_251].y, cbObjMatrix._m0[_251].x * _211));
    TANGENT_1.z = fma(_213, cbObjMatrix._m0[_258].z, fma(_212, cbObjMatrix._m0[_258].y, cbObjMatrix._m0[_258].x * _211));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_225, cbObjMatrix._m0[_244].z, fma(_224, cbObjMatrix._m0[_244].y, cbObjMatrix._m0[_244].x * _223));
    TANGENT_2_1.y = fma(_225, cbObjMatrix._m0[_251].z, fma(_224, cbObjMatrix._m0[_251].y, cbObjMatrix._m0[_251].x * _223));
    TANGENT_2_1.z = fma(_225, cbObjMatrix._m0[_258].z, fma(_224, cbObjMatrix._m0[_258].y, cbObjMatrix._m0[_258].x * _223));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_3.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_3.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5 = TEXCOORD_1.x;
    TEXCOORD_6.x = TEXCOORD_2.x;
    TEXCOORD_6.y = TEXCOORD_2.y;
    TEXCOORD_6.z = TEXCOORD_2.z;
    TEXCOORD_6.w = COLOR_1.x;
    TEXCOORD_10.x = _380;
    TEXCOORD_10.y = _387;
    TEXCOORD_14 = sqrt(((_292 * _292) + (_293 * _293)) + (_294 * _294));
    gl_ClipDistance[0u] = dot(vec4(_366, _373, _380, _387), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_366, _373, _380, _387), vec4(cbInstanceData._m0[_236 + 3u]));
}


