#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Crystal_M1_snp_0_Texture2D_5;
layout(set = 0, binding = 1) uniform texture2D M_Crystal_M1_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Crystal_M1_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_Crystal_M1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Crystal_M1_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_Crystal_M1_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1049;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _192 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _193 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _194 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _199 = inversesqrt(dot(vec3(_192, _193, _194), vec3(_192, _193, _194)));
    float _200 = _199 * _192;
    float _201 = _199 * _193;
    float _202 = _199 * _194;
    float _206 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _207 = _206 * NORMAL.x;
    float _208 = _206 * NORMAL.y;
    float _209 = _206 * NORMAL.z;
    float _213 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _214 = _213 * TANGENT.x;
    float _215 = _213 * TANGENT.y;
    float _216 = _213 * TANGENT.z;
    float _221;
    float _222;
    float _223;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _221 = (-0.0) - _207;
        _222 = (-0.0) - _208;
        _223 = (-0.0) - _209;
    }
    else
    {
        _221 = _207;
        _222 = _208;
        _223 = _209;
    }
    float _268 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _278 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _268);
    float _279 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _268);
    float _280 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _268);
    vec4 _293 = texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _299 = _293.w;
    float _310 = dot(vec3(_278, _279, _280), vec3(_200, _201, _202));
    float _313 = dot(vec3(_278, _279, _280), vec3(_214, _215, _216));
    float _316 = dot(vec3(_278, _279, _280), vec3(_221, _222, _223));
    float _322 = inversesqrt(dot(vec3(_310, _313, _316), vec3(_310, _313, _316)));
    float _344 = dot(vec4(texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[12u].y;
    vec4 _364 = texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_310 * cbMtdParam._m0[12u].x) * _322) * _344) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((((_313 * cbMtdParam._m0[12u].x) * _322) * _344) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _387 = inversesqrt(dot(vec3(_278, _279, _280), vec3(_278, _279, _280)));
    float _388 = _387 * _278;
    float _389 = _387 * _279;
    float _390 = _387 * _280;
    float _391 = dot(vec4(_388, _389, _390, 0.0), vec4(_221, _222, _223, 0.0));
    float _394 = _391 - cbMtdParam._m0[13u].x;
    float _3637 = isnan(0.0) ? _394 : (isnan(_394) ? 0.0 : max(_394, 0.0));
    float _401 = exp2(log2(1.0 - (isnan(1.0) ? _3637 : (isnan(_3637) ? 1.0 : min(_3637, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].y : (isnan(cbMtdParam._m0[13u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].y, 0.001000000047497451305389404296875))));
    float _417 = ((((_293.x * 4.55000019073486328125) * cbMtdParam._m0[10u].x) * _364.x) * cbMtdParam._m0[9u].x) * ((_401 * (cbMtdParam._m0[11u].x + (-1.0))) + 1.0);
    float _422 = ((((_293.y * 4.55000019073486328125) * cbMtdParam._m0[10u].y) * _364.y) * cbMtdParam._m0[9u].y) * ((_401 * (cbMtdParam._m0[11u].y + (-1.0))) + 1.0);
    float _427 = ((((_293.z * 4.55000019073486328125) * cbMtdParam._m0[10u].z) * _364.z) * cbMtdParam._m0[9u].z) * ((_401 * (cbMtdParam._m0[11u].z + (-1.0))) + 1.0);
    vec4 _444 = texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _452 = (_444.x * 2.0) + (-1.0);
    float _453 = (_444.y * 2.0) + (-1.0);
    float _454 = dot(vec2(_452, _453), vec2(_452, _453));
    float _3653 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _459 = sqrt(1.0 - (isnan(1.0) ? _3653 : (isnan(_3653) ? 1.0 : min(_3653, 1.0))));
    float _462 = fma(_459, _221, fma(_453, _214, _452 * _200));
    float _465 = fma(_459, _222, fma(_453, _215, _452 * _201));
    float _468 = fma(_459, _223, fma(_453, _216, _452 * _202));
    float _472 = inversesqrt(dot(vec3(_462, _465, _468), vec3(_462, _465, _468)));
    float _473 = _472 * _462;
    float _474 = _472 * _465;
    float _476 = cbMtdParam._m0[14u].z + _444.z;
    vec4 _488 = texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _492 = cbMtdParam._m0[13u].w * _488.x;
    vec4 _505 = texture(sampler2D(M_Crystal_M1_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _514 = _391 - cbMtdParam._m0[12u].w;
    float _3664 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _524 = ((cbMtdParam._m0[14u].w * _505.x) + cbMtdParam._m0[14u].x) + (exp2(log2(1.0 - (isnan(1.0) ? _3664 : (isnan(_3664) ? 1.0 : min(_3664, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875)))) * (cbMtdParam._m0[13u].z - cbMtdParam._m0[14u].x));
    float _3680 = isnan(0.0) ? _524 : (isnan(_524) ? 0.0 : max(_524, 0.0));
    float _525 = isnan(1.0) ? _3680 : (isnan(_3680) ? 1.0 : min(_3680, 1.0));
    float _537 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _538 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _548 = cbSceneParam._m0[86u].x * ((_537 / cbSceneParam._m0[86u].x) + (_473 * cbMtdParam._m0[15u].x));
    float _549 = cbSceneParam._m0[86u].y * ((_538 / cbSceneParam._m0[86u].y) + (_474 * cbMtdParam._m0[15u].x));
    float _556 = isnan(cbInstanceData._m0[8u].x) ? _548 : (isnan(_548) ? cbInstanceData._m0[8u].x : max(_548, cbInstanceData._m0[8u].x));
    float _557 = isnan(cbInstanceData._m0[8u].y) ? _549 : (isnan(_549) ? cbInstanceData._m0[8u].y : max(_549, cbInstanceData._m0[8u].y));
    vec4 _561 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _556 : (isnan(_556) ? cbInstanceData._m0[8u].z : min(_556, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _557 : (isnan(_557) ? cbInstanceData._m0[8u].w : min(_557, cbInstanceData._m0[8u].w))));
    float _573 = _472 * _468;
    float _3711 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _574 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
    float _3722 = isnan(0.0) ? _476 : (isnan(_476) ? 0.0 : max(_476, 0.0));
    float _575 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
    float _576 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _3738 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _3749 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _3760 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _3771 = isnan(0.0) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.0 : max(cbMtdParam._m0[14u].y, 0.0));
    float _580 = isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0));
    float _596 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _616 = fma(_573, cbSceneParam._m0[5u].z, fma(_474, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _473));
    float _619 = fma(_573, cbSceneParam._m0[6u].z, fma(_474, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _473));
    float _622 = fma(_573, cbSceneParam._m0[7u].z, fma(_474, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _473));
    uint _635 = uint(roundEven(NORMAL.w)) * 13u;
    uint _637 = (_635 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _643 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3738 : (isnan(_3738) ? 1.0 : min(_3738, 1.0)))) * cbInstanceData._m0[_637].x;
    float _644 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3749 : (isnan(_3749) ? 1.0 : min(_3749, 1.0)))) * cbInstanceData._m0[_637].y;
    float _645 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3760 : (isnan(_3760) ? 1.0 : min(_3760, 1.0)))) * cbInstanceData._m0[_637].z;
    float _3782 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _646 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
    float _3793 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _647 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
    float _3804 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _648 = isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0));
    float _649 = 1.0 - _580;
    float _650 = _646 * _649;
    float _651 = _647 * _649;
    float _652 = _648 * _649;
    float _657 = (_646 + (-0.039999999105930328369140625)) * _580;
    float _658 = (_647 + (-0.039999999105930328369140625)) * _580;
    float _659 = (_648 + (-0.039999999105930328369140625)) * _580;
    float _660 = _657 + 0.039999999105930328369140625;
    float _662 = _658 + 0.039999999105930328369140625;
    float _663 = _659 + 0.039999999105930328369140625;
    vec4 _667 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _537, cbSceneParam._m0[86u].y * _538));
    float _670 = _667.x * TEXCOORD.z;
    float _671 = dot(vec3(_473, _474, _573), vec3(_388, _389, _390));
    float _674 = _671 * 2.0;
    float _678 = (_674 * _473) - _388;
    float _679 = (_674 * _474) - _389;
    float _680 = (_674 * _573) - _390;
    float _681 = dot(vec3(_388, _389, _390), vec3(_473, _474, _573));
    float _684 = abs(_681);
    float _3815 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _685 = isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0));
    float _691 = sqrt(_575);
    float _703 = exp2((_691 * 5.0) * log2(1.0 - (_685 * 0.999000012874603271484375))) / (4.0 - (_691 * 3.0));
    float _709 = (1.0 - _703) * ((_691 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _710 = _703 * _691;
    float _738 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _742 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _746 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1048;
    float _1050;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    float _1055;
    float _1056;
    float _1057;
    float _1058;
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _773 = fma(_746, cbModelParam._m0[26u].z, fma(_742, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _738));
        float _777 = fma(_746, cbModelParam._m0[27u].z, fma(_742, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _738));
        float _781 = fma(_746, cbModelParam._m0[28u].z, fma(_742, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _738));
        float _806 = _738 + _473;
        float _807 = _742 + _474;
        float _808 = _746 + _573;
        float _818 = fma(_808, cbModelParam._m0[26u].z, fma(_807, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _806)) - _773;
        float _819 = fma(_808, cbModelParam._m0[27u].z, fma(_807, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _806)) - _777;
        float _820 = fma(_808, cbModelParam._m0[28u].z, fma(_807, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _806)) - _781;
        float _824 = inversesqrt(dot(vec3(_818, _819, _820), vec3(_818, _819, _820)));
        float _837 = ((_824 * _818) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_773 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _838 = ((_824 * _819) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_777 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _839 = ((_824 * _820) / cbModelParam._m0[34u].z) + ((((((_781 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _842 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _849 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _856 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        vec4 _863 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_837, _838, _839), 0.0);
        float _876 = exp2((_842.w + (-0.5)) * 20.0) * 2.0;
        float _877 = _876 * (_842.x + (-0.5));
        float _878 = _876 * (_842.y + (-0.5));
        float _879 = _876 * (_842.z + (-0.5));
        float _886 = exp2((_849.w + (-0.5)) * 20.0) * 2.0;
        float _887 = _886 * (_849.x + (-0.5));
        float _888 = _886 * (_849.y + (-0.5));
        float _889 = _886 * (_849.z + (-0.5));
        float _896 = exp2((_856.w + (-0.5)) * 20.0) * 2.0;
        float _897 = _896 * (_856.x + (-0.5));
        float _898 = _896 * (_856.y + (-0.5));
        float _899 = _896 * (_856.z + (-0.5));
        float _906 = exp2((_863.w + (-0.5)) * 20.0) * 2.0;
        float _907 = _906 * (_863.x + (-0.5));
        float _908 = _906 * (_863.y + (-0.5));
        float _909 = _906 * (_863.z + (-0.5));
        float _910 = isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0));
        float _911 = isnan(0.0) ? _908 : (isnan(_908) ? 0.0 : max(_908, 0.0));
        float _912 = isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0));
        float _913 = _877 * 0.5;
        float _914 = _887 * 0.5;
        float _915 = _897 * 0.5;
        float _916 = dot(vec3(_913, _914, _915), vec3(_913, _914, _915));
        float _921 = (_916 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_916);
        float _930 = (dot(vec3(_473, _474, _573), vec3(_921 * _913, _921 * _914, _921 * _915)) + 1.0) * 0.5;
        float _3841 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _940 = sqrt(((_914 * _914) + (_913 * _913)) + (_915 * _915)) / (_910 + 9.9999997473787516355514526367188e-06);
        float _3852 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
        float _941 = isnan(1.0) ? _3852 : (isnan(_3852) ? 1.0 : min(_3852, 1.0));
        float _942 = _941 * 2.0;
        float _946 = (1.0 - _941) / (_941 + 1.0);
        float _3863 = isnan(0.0) ? _946 : (isnan(_946) ? 0.0 : max(_946, 0.0));
        float _947 = isnan(1.0) ? _3863 : (isnan(_3863) ? 1.0 : min(_3863, 1.0));
        float _956 = ((((1.0 - _947) * (_942 + 2.0)) * exp2(log2(isnan(1.0) ? _3841 : (isnan(_3841) ? 1.0 : min(_3841, 1.0))) * (_942 + 1.0))) + _947) * _910;
        float _957 = _878 * 0.5;
        float _958 = _888 * 0.5;
        float _959 = _898 * 0.5;
        float _960 = dot(vec3(_957, _958, _959), vec3(_957, _958, _959));
        float _965 = (_960 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_960);
        float _973 = (dot(vec3(_473, _474, _573), vec3(_965 * _957, _965 * _958, _965 * _959)) + 1.0) * 0.5;
        float _3874 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
        float _982 = sqrt(((_958 * _958) + (_957 * _957)) + (_959 * _959)) / (_911 + 9.9999997473787516355514526367188e-06);
        float _3885 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
        float _983 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
        float _984 = _983 * 2.0;
        float _988 = (1.0 - _983) / (_983 + 1.0);
        float _3896 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
        float _989 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
        float _998 = ((((1.0 - _989) * (_984 + 2.0)) * exp2(log2(isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))) * (_984 + 1.0))) + _989) * _911;
        float _999 = _879 * 0.5;
        float _1000 = _889 * 0.5;
        float _1001 = _899 * 0.5;
        float _1002 = dot(vec3(_999, _1000, _1001), vec3(_999, _1000, _1001));
        float _1007 = (_1002 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1002);
        float _1015 = (dot(vec3(_473, _474, _573), vec3(_1007 * _999, _1007 * _1000, _1007 * _1001)) + 1.0) * 0.5;
        float _3907 = isnan(0.0) ? _1015 : (isnan(_1015) ? 0.0 : max(_1015, 0.0));
        float _1024 = sqrt(((_1000 * _1000) + (_999 * _999)) + (_1001 * _1001)) / (_912 + 9.9999997473787516355514526367188e-06);
        float _3918 = isnan(0.0) ? _1024 : (isnan(_1024) ? 0.0 : max(_1024, 0.0));
        float _1025 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
        float _1026 = _1025 * 2.0;
        float _1030 = (1.0 - _1025) / (_1025 + 1.0);
        float _3929 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
        float _1040 = ((((1.0 - _1031) * (_1026 + 2.0)) * exp2(log2(isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0))) * (_1026 + 1.0))) + _1031) * _912;
        _1048 = _879;
        _1050 = _878;
        _1051 = _877;
        _1052 = _889;
        _1053 = _888;
        _1054 = _887;
        _1055 = _899;
        _1056 = _898;
        _1057 = _897;
        _1058 = _912;
        _1059 = _911;
        _1060 = _910;
        _1061 = cbModelParam._m0[36u].z * (isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0)));
        _1062 = cbModelParam._m0[36u].z * (isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0)));
        _1063 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0)));
    }
    else
    {
        _1048 = _1049;
        _1050 = _1049;
        _1051 = _1049;
        _1052 = _1049;
        _1053 = _1049;
        _1054 = _1049;
        _1055 = _1049;
        _1056 = _1049;
        _1057 = _1049;
        _1058 = _1049;
        _1059 = _1049;
        _1060 = _1049;
        _1061 = 0.0;
        _1062 = 0.0;
        _1063 = 0.0;
    }
    float _1358;
    float _1359;
    float _1360;
    float _1361;
    float _1362;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1089 = fma(_746, cbModelParam._m0[30u].z, fma(_742, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _738));
        float _1093 = fma(_746, cbModelParam._m0[31u].z, fma(_742, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _738));
        float _1097 = fma(_746, cbModelParam._m0[32u].z, fma(_742, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _738));
        float _1120 = _738 + _473;
        float _1121 = _742 + _474;
        float _1122 = _746 + _573;
        float _1132 = fma(_1122, cbModelParam._m0[30u].z, fma(_1121, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1120)) - _1089;
        float _1133 = fma(_1122, cbModelParam._m0[31u].z, fma(_1121, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1120)) - _1093;
        float _1134 = fma(_1122, cbModelParam._m0[32u].z, fma(_1121, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1120)) - _1097;
        float _1138 = inversesqrt(dot(vec3(_1132, _1133, _1134), vec3(_1132, _1133, _1134)));
        float _1151 = ((_1138 * _1132) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1089 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1152 = ((_1138 * _1133) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1093 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1153 = ((_1138 * _1134) / cbModelParam._m0[35u].z) + ((((((_1097 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1155 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1162 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1169 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        vec4 _1176 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1151, _1152, _1153), 0.0);
        float _1188 = exp2((_1155.w + (-0.5)) * 20.0) * 2.0;
        float _1189 = _1188 * (_1155.x + (-0.5));
        float _1190 = _1188 * (_1155.y + (-0.5));
        float _1191 = _1188 * (_1155.z + (-0.5));
        float _1198 = exp2((_1162.w + (-0.5)) * 20.0) * 2.0;
        float _1199 = _1198 * (_1162.x + (-0.5));
        float _1200 = _1198 * (_1162.y + (-0.5));
        float _1201 = _1198 * (_1162.z + (-0.5));
        float _1208 = exp2((_1169.w + (-0.5)) * 20.0) * 2.0;
        float _1209 = _1208 * (_1169.x + (-0.5));
        float _1210 = _1208 * (_1169.y + (-0.5));
        float _1211 = _1208 * (_1169.z + (-0.5));
        float _1218 = exp2((_1176.w + (-0.5)) * 20.0) * 2.0;
        float _1219 = _1218 * (_1176.x + (-0.5));
        float _1220 = _1218 * (_1176.y + (-0.5));
        float _1221 = _1218 * (_1176.z + (-0.5));
        float _1222 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1223 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1224 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1225 = _1189 * 0.5;
        float _1226 = _1199 * 0.5;
        float _1227 = _1209 * 0.5;
        float _1228 = dot(vec3(_1225, _1226, _1227), vec3(_1225, _1226, _1227));
        float _1233 = (_1228 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1228);
        float _1241 = (dot(vec3(_473, _474, _573), vec3(_1233 * _1225, _1233 * _1226, _1233 * _1227)) + 1.0) * 0.5;
        float _3970 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
        float _1250 = sqrt(((_1226 * _1226) + (_1225 * _1225)) + (_1227 * _1227)) / (_1222 + 9.9999997473787516355514526367188e-06);
        float _3981 = isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0));
        float _1251 = isnan(1.0) ? _3981 : (isnan(_3981) ? 1.0 : min(_3981, 1.0));
        float _1252 = _1251 * 2.0;
        float _1256 = (1.0 - _1251) / (_1251 + 1.0);
        float _3992 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
        float _1257 = isnan(1.0) ? _3992 : (isnan(_3992) ? 1.0 : min(_3992, 1.0));
        float _1266 = ((((1.0 - _1257) * (_1252 + 2.0)) * exp2(log2(isnan(1.0) ? _3970 : (isnan(_3970) ? 1.0 : min(_3970, 1.0))) * (_1252 + 1.0))) + _1257) * _1222;
        float _1267 = _1190 * 0.5;
        float _1268 = _1200 * 0.5;
        float _1269 = _1210 * 0.5;
        float _1270 = dot(vec3(_1267, _1268, _1269), vec3(_1267, _1268, _1269));
        float _1275 = (_1270 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1270);
        float _1283 = (dot(vec3(_473, _474, _573), vec3(_1275 * _1267, _1275 * _1268, _1275 * _1269)) + 1.0) * 0.5;
        float _4003 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1292 = sqrt(((_1268 * _1268) + (_1267 * _1267)) + (_1269 * _1269)) / (_1223 + 9.9999997473787516355514526367188e-06);
        float _4014 = isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0));
        float _1293 = isnan(1.0) ? _4014 : (isnan(_4014) ? 1.0 : min(_4014, 1.0));
        float _1294 = _1293 * 2.0;
        float _1298 = (1.0 - _1293) / (_1293 + 1.0);
        float _4025 = isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0));
        float _1299 = isnan(1.0) ? _4025 : (isnan(_4025) ? 1.0 : min(_4025, 1.0));
        float _1308 = ((((1.0 - _1299) * (_1294 + 2.0)) * exp2(log2(isnan(1.0) ? _4003 : (isnan(_4003) ? 1.0 : min(_4003, 1.0))) * (_1294 + 1.0))) + _1299) * _1223;
        float _1309 = _1191 * 0.5;
        float _1310 = _1201 * 0.5;
        float _1311 = _1211 * 0.5;
        float _1312 = dot(vec3(_1309, _1310, _1311), vec3(_1309, _1310, _1311));
        float _1317 = (_1312 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1312);
        float _1325 = (dot(vec3(_473, _474, _573), vec3(_1317 * _1309, _1317 * _1310, _1317 * _1311)) + 1.0) * 0.5;
        float _4036 = isnan(0.0) ? _1325 : (isnan(_1325) ? 0.0 : max(_1325, 0.0));
        float _1334 = sqrt(((_1310 * _1310) + (_1309 * _1309)) + (_1311 * _1311)) / (_1224 + 9.9999997473787516355514526367188e-06);
        float _4047 = isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0));
        float _1335 = isnan(1.0) ? _4047 : (isnan(_4047) ? 1.0 : min(_4047, 1.0));
        float _1336 = _1335 * 2.0;
        float _1340 = (1.0 - _1335) / (_1335 + 1.0);
        float _4058 = isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0));
        float _1341 = isnan(1.0) ? _4058 : (isnan(_4058) ? 1.0 : min(_4058, 1.0));
        float _1350 = ((((1.0 - _1341) * (_1336 + 2.0)) * exp2(log2(isnan(1.0) ? _4036 : (isnan(_4036) ? 1.0 : min(_4036, 1.0))) * (_1336 + 1.0))) + _1341) * _1224;
        _1358 = _1191;
        _1359 = _1190;
        _1360 = _1189;
        _1361 = _1201;
        _1362 = _1200;
        _1363 = _1199;
        _1364 = _1211;
        _1365 = _1210;
        _1366 = _1209;
        _1367 = _1224;
        _1368 = _1223;
        _1369 = _1222;
        _1370 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0)));
        _1371 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0)));
        _1372 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0)));
    }
    else
    {
        _1358 = _1049;
        _1359 = _1049;
        _1360 = _1049;
        _1361 = _1049;
        _1362 = _1049;
        _1363 = _1049;
        _1364 = _1049;
        _1365 = _1049;
        _1366 = _1049;
        _1367 = _1049;
        _1368 = _1049;
        _1369 = _1049;
        _1370 = 0.0;
        _1371 = 0.0;
        _1372 = 0.0;
    }
    float _1382 = (cbModelParam._m0[1u].x * (_1370 - _1061)) + _1061;
    float _1383 = (cbModelParam._m0[1u].x * (_1371 - _1062)) + _1062;
    float _1384 = (cbModelParam._m0[1u].x * (_1372 - _1063)) + _1063;
    float _1405 = fma(_1384, cbSceneParam._m0[89u].z, fma(_1383, cbSceneParam._m0[89u].y, _1382 * cbSceneParam._m0[89u].x));
    float _1408 = fma(_1384, cbSceneParam._m0[90u].z, fma(_1383, cbSceneParam._m0[90u].y, _1382 * cbSceneParam._m0[90u].x));
    float _1411 = fma(_1384, cbSceneParam._m0[91u].z, fma(_1383, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1382));
    float _1426 = _678 * 0.5;
    float _1427 = _679 * 0.5;
    float _1428 = _680 * 0.5;
    float _1429 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1360, _1363, _1366, _1369));
    float _1432 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1359, _1362, _1365, _1368));
    float _1435 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1358, _1361, _1364, _1367));
    float _1469;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1442 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1048, _1052, _1055, _1058));
        float _1446 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1050, _1053, _1056, _1059));
        float _1450 = dot(vec4(_1426, _1427, _1428, 1.0), vec4(_1051, _1054, _1057, _1060));
        float _1457 = dot(vec4(cbModelParam._m0[39u]), vec4(_1426, _1427, _1428, 1.0));
        _1469 = dot(vec3(isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0)), isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0)), isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1457) ? 0.0 : (isnan(0.0) ? _1457 : max(0.0, _1457))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1469 = 1.0;
    }
    float _1480;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1471 = dot(vec4(cbModelParam._m0[40u]), vec4(_1426, _1427, _1428, 1.0));
        _1480 = dot(vec3(isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0)), isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0)), isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1471) ? 0.0 : (isnan(0.0) ? _1471 : max(0.0, _1471))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1480 = 1.0;
    }
    float _1484 = (_1480 * cbModelParam._m0[1u].x) + (_1469 * (1.0 - cbModelParam._m0[1u].x));
    float _1494 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _575);
    float _1495 = isnan(_1494) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1494 : min(cbModelParam._m0[25u].z, _1494));
    float _1575;
    float _1577;
    float _1579;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1542 = fma(_746, cbModelParam._m0[13u].z, fma(_742, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _738)) + cbModelParam._m0[13u].w;
        float _1546 = fma(_746, cbModelParam._m0[14u].z, fma(_742, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _738)) + cbModelParam._m0[14u].w;
        float _1550 = fma(_746, cbModelParam._m0[15u].z, fma(_742, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _738)) + cbModelParam._m0[15u].w;
        float _1553 = fma(_680, cbModelParam._m0[13u].z, fma(_679, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _678));
        float _1556 = fma(_680, cbModelParam._m0[14u].z, fma(_679, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _678));
        float _1559 = fma(_680, cbModelParam._m0[15u].z, fma(_679, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _678));
        float _1587;
        if (_1553 > 0.0)
        {
            _1587 = abs((1.0 - _1542) / _1553);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1553 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1542 + 1.0) / _1553);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1587 = frontier_phi_16_14_ladder;
        }
        float _1762;
        if (_1556 > 0.0)
        {
            _1762 = abs((1.0 - _1546) / _1556);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1556 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1546 + 1.0) / _1556);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1762 = frontier_phi_25_21_ladder;
        }
        float _2026;
        if (_1559 > 0.0)
        {
            _2026 = abs((1.0 - _1550) / _1559);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1559 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1550 + 1.0) / _1559);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2026 = frontier_phi_37_32_ladder;
        }
        float _2028 = isnan(_1762) ? _1587 : (isnan(_1587) ? _1762 : min(_1587, _1762));
        float _2029 = isnan(_2026) ? _2028 : (isnan(_2028) ? _2026 : min(_2028, _2026));
        float _2033 = (_2029 * _1553) + _1542;
        float _2034 = (_2029 * _1556) + _1546;
        float _2035 = (_2029 * _1559) + _1550;
        float _2036 = _2029 * 9.9999997473787516355514526367188e-05;
        float _2038 = (-1.0) - _2036;
        float _2040 = _2036 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2035 > _2040) || ((_2035 < _2038) || ((_2034 > _2040) || ((_2034 < _2038) || ((_2033 < _2038) || (_2033 > _2040))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2189 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2035, cbModelParam._m0[9u].z, fma(_2034, cbModelParam._m0[9u].y, _2033 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2035, cbModelParam._m0[10u].z, fma(_2034, cbModelParam._m0[10u].y, _2033 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2035, cbModelParam._m0[11u].z, fma(_2034, cbModelParam._m0[11u].y, _2033 * cbModelParam._m0[11u].x))), _1495);
            frontier_phi_15_37_ladder = _2189.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2189.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2189.x * cbModelParam._m0[1u].y;
        }
        _1575 = frontier_phi_15_37_ladder_2;
        _1577 = frontier_phi_15_37_ladder_1;
        _1579 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1563 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_678, _679, _680), _1495);
        _1575 = _1563.x * cbModelParam._m0[1u].y;
        _1577 = _1563.y * cbModelParam._m0[1u].y;
        _1579 = _1563.z * cbModelParam._m0[1u].y;
    }
    float _1583 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _575);
    float _1584 = isnan(_1583) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1583 : min(cbModelParam._m0[25u].w, _1583));
    float _1677;
    float _1679;
    float _1681;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1641 = fma(_746, cbModelParam._m0[21u].z, fma(_742, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _738)) + cbModelParam._m0[21u].w;
        float _1645 = fma(_746, cbModelParam._m0[22u].z, fma(_742, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _738)) + cbModelParam._m0[22u].w;
        float _1649 = fma(_746, cbModelParam._m0[23u].z, fma(_742, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _738)) + cbModelParam._m0[23u].w;
        float _1652 = fma(_680, cbModelParam._m0[21u].z, fma(_679, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _678));
        float _1655 = fma(_680, cbModelParam._m0[22u].z, fma(_679, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _678));
        float _1658 = fma(_680, cbModelParam._m0[23u].z, fma(_679, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _678));
        float _1767;
        if (_1652 > 0.0)
        {
            _1767 = abs((1.0 - _1641) / _1652);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1652 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1641 + 1.0) / _1652);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1767 = frontier_phi_27_23_ladder;
        }
        float _2053;
        if (_1655 > 0.0)
        {
            _2053 = abs((1.0 - _1645) / _1655);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1655 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1645 + 1.0) / _1655);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2053 = frontier_phi_39_34_ladder;
        }
        float _2383;
        if (_1658 > 0.0)
        {
            _2383 = abs((1.0 - _1649) / _1658);
        }
        else
        {
            float frontier_phi_48_46_ladder;
            if (_1658 < 0.0)
            {
                frontier_phi_48_46_ladder = abs((_1649 + 1.0) / _1658);
            }
            else
            {
                frontier_phi_48_46_ladder = 5000.0;
            }
            _2383 = frontier_phi_48_46_ladder;
        }
        float _2385 = isnan(_2053) ? _1767 : (isnan(_1767) ? _2053 : min(_1767, _2053));
        float _2386 = isnan(_2383) ? _2385 : (isnan(_2385) ? _2383 : min(_2385, _2383));
        float _2390 = (_2386 * _1652) + _1641;
        float _2391 = (_2386 * _1655) + _1645;
        float _2392 = (_2386 * _1658) + _1649;
        float _2393 = _2386 * 9.9999997473787516355514526367188e-05;
        float _2394 = (-1.0) - _2393;
        float _2396 = _2393 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2392 > _2396) || ((_2392 < _2394) || ((_2391 > _2396) || ((_2391 < _2394) || ((_2390 < _2394) || (_2390 > _2396))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2493 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2392, cbModelParam._m0[17u].z, fma(_2391, cbModelParam._m0[17u].y, _2390 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2392, cbModelParam._m0[18u].z, fma(_2391, cbModelParam._m0[18u].y, _2390 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2392, cbModelParam._m0[19u].z, fma(_2391, cbModelParam._m0[19u].y, _2390 * cbModelParam._m0[19u].x))), _1584);
            frontier_phi_24_48_ladder = _2493.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2493.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2493.x * cbModelParam._m0[1u].z;
        }
        _1677 = frontier_phi_24_48_ladder_2;
        _1679 = frontier_phi_24_48_ladder_1;
        _1681 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1661 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_678, _679, _680), _1584);
        _1677 = _1661.x * cbModelParam._m0[1u].z;
        _1679 = _1661.y * cbModelParam._m0[1u].z;
        _1681 = _1661.z * cbModelParam._m0[1u].z;
    }
    float _1694 = (((_709 * _660) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1677 - _1575)) + _1575);
    float _1696 = (((_709 * _662) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1679 - _1577)) + _1577);
    float _1698 = (((_709 * _663) + _710) * _670) * ((cbModelParam._m0[1u].w * (_1681 - _1579)) + _1579);
    float _1701 = fma(_1698, cbSceneParam._m0[89u].z, fma(_1696, cbSceneParam._m0[89u].y, _1694 * cbSceneParam._m0[89u].x));
    float _1704 = fma(_1698, cbSceneParam._m0[90u].z, fma(_1696, cbSceneParam._m0[90u].y, _1694 * cbSceneParam._m0[90u].x));
    float _1707 = fma(_1698, cbSceneParam._m0[91u].z, fma(_1696, cbSceneParam._m0[91u].y, _1694 * cbSceneParam._m0[91u].x));
    float _1741 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1745 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1749 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1753 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1754 = _1741 / _1753;
    float _1755 = _1745 / _1753;
    float _1756 = _1749 / _1753;
    float _1903;
    float _1904;
    float _1905;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1783 = ((uint(_1756 > cbSceneParam._m0[59u].y) + uint(_1756 > cbSceneParam._m0[59u].x)) + uint(_1756 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1784 = _1783 + 43u;
        uint _1792 = _1783 + 44u;
        uint _1800 = _1783 + 45u;
        uint _1808 = _1783 + 46u;
        float _1819 = fma(_1753, cbSceneParam._m0[_1784].w, fma(_1749, cbSceneParam._m0[_1784].z, fma(_1745, cbSceneParam._m0[_1784].y, _1741 * cbSceneParam._m0[_1784].x)));
        float _1823 = fma(_1753, cbSceneParam._m0[_1792].w, fma(_1749, cbSceneParam._m0[_1792].z, fma(_1745, cbSceneParam._m0[_1792].y, _1741 * cbSceneParam._m0[_1792].x)));
        float _1831 = fma(_1753, cbSceneParam._m0[_1808].w, fma(_1749, cbSceneParam._m0[_1808].z, fma(_1745, cbSceneParam._m0[_1808].y, _1741 * cbSceneParam._m0[_1808].x)));
        float _1836 = cbSceneParam._m0[33u].z * _1831;
        float _1838 = cbSceneParam._m0[33u].w * _1831;
        float _1841 = fma(_1753, cbSceneParam._m0[_1800].w, fma(_1749, cbSceneParam._m0[_1800].z, fma(_1745, cbSceneParam._m0[_1800].y, _1741 * cbSceneParam._m0[_1800].x))) / _1831;
        float _1889 = (cbSceneParam._m0[33u].x - sqrt(((_1755 * _1755) + (_1754 * _1754)) + (_1756 * _1756))) * cbSceneParam._m0[33u].y;
        float _4184 = isnan(0.0) ? _1889 : (isnan(_1889) ? 0.0 : max(_1889, 0.0));
        float _1896 = (isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1836 + _1819) / _1831, (_1838 + _1823) / _1831), _1841), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1838 + _1819) / _1831, (_1823 - _1836) / _1831), _1841), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1819 - _1836) / _1831, (_1823 - _1838) / _1831), _1841), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1819 - _1838) / _1831, (_1836 + _1823) / _1831), _1841), 0.0)).x), vec4(0.25)));
        _1903 = 1.0 - (_1896 * cbSceneParam._m0[34u].x);
        _1904 = 1.0 - (_1896 * cbSceneParam._m0[34u].y);
        _1905 = 1.0 - (_1896 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1903 = 1.0;
        _1904 = 1.0;
        _1905 = 1.0;
    }
    float _1969;
    float _1971;
    float _1973;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1957 = fma(_1753, cbSceneParam._m0[63u].w, fma(_1749, cbSceneParam._m0[63u].z, fma(_1745, cbSceneParam._m0[63u].y, _1741 * cbSceneParam._m0[63u].x)));
        float _1958 = fma(_1753, cbSceneParam._m0[60u].w, fma(_1749, cbSceneParam._m0[60u].z, fma(_1745, cbSceneParam._m0[60u].y, _1741 * cbSceneParam._m0[60u].x))) / _1957;
        float _1959 = fma(_1753, cbSceneParam._m0[61u].w, fma(_1749, cbSceneParam._m0[61u].z, fma(_1745, cbSceneParam._m0[61u].y, _1741 * cbSceneParam._m0[61u].x))) / _1957;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1958 >= cbSceneParam._m0[64u].x) && (_1959 >= cbSceneParam._m0[64u].y)) && (_1958 <= cbSceneParam._m0[64u].z)) && (_1959 <= cbSceneParam._m0[64u].w))
        {
            float _2066 = fma(_1753, cbSceneParam._m0[62u].w, fma(_1749, cbSceneParam._m0[62u].z, fma(_1745, cbSceneParam._m0[62u].y, _1741 * cbSceneParam._m0[62u].x))) / _1957;
            float _2070 = isnan(cbSceneParam._m0[41u].w) ? _2066 : (isnan(_2066) ? cbSceneParam._m0[41u].w : max(_2066, cbSceneParam._m0[41u].w));
            float _2113 = (cbSceneParam._m0[33u].x - sqrt(((_1755 * _1755) + (_1754 * _1754)) + (_1756 * _1756))) * cbSceneParam._m0[33u].y;
            float _4200 = isnan(0.0) ? _2113 : (isnan(_2113) ? 0.0 : max(_2113, 0.0));
            float _2120 = (isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1958, cbSceneParam._m0[33u].w + _1959), _2070), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1958, _1959 - cbSceneParam._m0[33u].z), _2070), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1958 - cbSceneParam._m0[33u].z, _1959 - cbSceneParam._m0[33u].w), _2070), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1958 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1959), _2070), 0.0)).x), vec4(0.25)));
            float _2124 = 1.0 - (_2120 * cbSceneParam._m0[34u].x);
            float _2125 = 1.0 - (_2120 * cbSceneParam._m0[34u].y);
            float _2126 = 1.0 - (_2120 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2126) ? _1905 : (isnan(_1905) ? _2126 : min(_1905, _2126));
            frontier_phi_36_35_ladder_1 = isnan(_2125) ? _1904 : (isnan(_1904) ? _2125 : min(_1904, _2125));
            frontier_phi_36_35_ladder_2 = isnan(_2124) ? _1903 : (isnan(_1903) ? _2124 : min(_1903, _2124));
        }
        else
        {
            frontier_phi_36_35_ladder = _1905;
            frontier_phi_36_35_ladder_1 = _1904;
            frontier_phi_36_35_ladder_2 = _1903;
        }
        _1969 = frontier_phi_36_35_ladder_2;
        _1971 = frontier_phi_36_35_ladder_1;
        _1973 = frontier_phi_36_35_ladder;
    }
    else
    {
        _1969 = _1903;
        _1971 = _1904;
        _1973 = _1905;
    }
    uvec4 _1978 = floatBitsToUint(cbInstanceData._m0[_635 + 5u]);
    uint _1980 = _1978.x * 14u;
    uint _1981 = _1980 + 13u;
    float _1986 = _670 + (-1.0);
    float _1989 = (cbLight._m0[_1981].x * _1986) + 1.0;
    float _1990 = (cbLight._m0[_1981].y * _1986) + 1.0;
    uint _1992 = _1980 + 4u;
    float _2003 = dot(vec3(cbLight._m0[_1980].xyz), vec3(_473, _474, _573));
    float _2006 = isnan(1.0) ? _1989 : (isnan(_1989) ? 1.0 : min(_1989, 1.0));
    float _2007 = cbLight._m0[_1992].x * _1969;
    float _2008 = cbLight._m0[_1992].y * _1971;
    float _2009 = cbLight._m0[_1992].z * _1973;
    uint _2010 = _1980 + 5u;
    uint _2016 = _1980 | 1u;
    float _2022 = dot(vec3(cbLight._m0[_2016].xyz), vec3(_473, _474, _573));
    float _2025 = isnan(1.0) ? _1990 : (isnan(_1990) ? 1.0 : min(_1990, 1.0));
    float _2198;
    float _2199;
    float _2200;
    if (_576 == 0.0)
    {
        float _4236 = isnan(0.0) ? _2003 : (isnan(_2003) ? 0.0 : max(_2003, 0.0));
        float _4247 = isnan(0.0) ? _2022 : (isnan(_2022) ? 0.0 : max(_2022, 0.0));
        float _2135 = (isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0))) * 0.3183098733425140380859375;
        float _2137 = (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0))) * 0.3183098733425140380859375;
        _2198 = ((cbLight._m0[_2010].x * _2025) * _2137) + ((_2007 * _2006) * _2135);
        _2199 = ((_2025 * cbLight._m0[_2010].y) * _2137) + ((_2008 * _2006) * _2135);
        _2200 = ((_2025 * cbLight._m0[_2010].z) * _2137) + ((_2009 * _2006) * _2135);
    }
    else
    {
        float _2147 = _2003 + _576;
        float _2150 = (_576 * 2.0) + 1.0;
        float _2151 = (isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0))) / _2150;
        float _2158 = _2022 + _576;
        float _2160 = (isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0))) / _2150;
        _2198 = (((_2160 * cbLight._m0[_2010].x) * _2025) + ((_2007 * _2151) * _2006)) * 0.3183098733425140380859375;
        _2199 = (((_2160 * cbLight._m0[_2010].y) * _2025) + ((_2008 * _2151) * _2006)) * 0.3183098733425140380859375;
        _2200 = (((_2160 * cbLight._m0[_2010].z) * _2025) + ((_2009 * _2151) * _2006)) * 0.3183098733425140380859375;
    }
    uint _2204 = _1980 + 8u;
    float _2220 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1980].w)) * _575) * 0.949999988079071044921875);
    float _2221 = _2220 * _2220;
    float _2222 = cbLight._m0[_1980].x + _388;
    float _2223 = cbLight._m0[_1980].y + _389;
    float _2224 = cbLight._m0[_1980].z + _390;
    float _2228 = inversesqrt(dot(vec3(_2222, _2223, _2224), vec3(_2222, _2223, _2224)));
    float _2229 = _2228 * _2222;
    float _2230 = _2228 * _2223;
    float _2231 = _2228 * _2224;
    float _2232 = dot(vec3(_473, _474, _573), vec3(cbLight._m0[_1980].xyz));
    float _4268 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _2235 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    float _4279 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _2236 = isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0));
    float _2237 = dot(vec3(_473, _474, _573), vec3(_2229, _2230, _2231));
    float _4290 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2240 = isnan(1.0) ? _4290 : (isnan(_4290) ? 1.0 : min(_4290, 1.0));
    float _2241 = dot(vec3(cbLight._m0[_1980].xyz), vec3(_2229, _2230, _2231));
    float _4301 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
    float _2245 = _2221 * _2221;
    float _2249 = ((_2240 * _2240) * (_2245 + (-1.0))) + 1.0;
    float _2257 = exp2(log2(1.0 - (isnan(1.0) ? _4301 : (isnan(_4301) ? 1.0 : min(_4301, 1.0)))) * 5.0);
    float _2258 = 0.959999978542327880859375 - _657;
    float _2260 = 0.959999978542327880859375 - _658;
    float _2261 = 0.959999978542327880859375 - _659;
    float _2268 = 1.0 - _2221;
    float _2279 = (0.5 / (((_2236 * ((_2235 * _2268) + _2221)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2268) + _2221) * _2235))) * _2235;
    float _4312 = isnan(0.0) ? _2279 : (isnan(_2279) ? 0.0 : max(_2279, 0.0));
    float _2281 = (isnan(1.0) ? _4312 : (isnan(_4312) ? 1.0 : min(_4312, 1.0))) * (_2245 / ((_2249 * _2249) * 3.141590118408203125));
    uint _2297 = _1980 + 9u;
    float _2311 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2016].w)) * _575) * 0.949999988079071044921875);
    float _2312 = _2311 * _2311;
    float _2313 = cbLight._m0[_2016].x + _388;
    float _2314 = cbLight._m0[_2016].y + _389;
    float _2315 = cbLight._m0[_2016].z + _390;
    float _2319 = inversesqrt(dot(vec3(_2313, _2314, _2315), vec3(_2313, _2314, _2315)));
    float _2320 = _2319 * _2313;
    float _2321 = _2319 * _2314;
    float _2322 = _2319 * _2315;
    float _2323 = dot(vec3(_473, _474, _573), vec3(cbLight._m0[_2016].xyz));
    float _4323 = isnan(0.0) ? _2323 : (isnan(_2323) ? 0.0 : max(_2323, 0.0));
    float _2326 = isnan(1.0) ? _4323 : (isnan(_4323) ? 1.0 : min(_4323, 1.0));
    float _2327 = dot(vec3(_473, _474, _573), vec3(_2320, _2321, _2322));
    float _4334 = isnan(0.0) ? _2327 : (isnan(_2327) ? 0.0 : max(_2327, 0.0));
    float _2330 = isnan(1.0) ? _4334 : (isnan(_4334) ? 1.0 : min(_4334, 1.0));
    float _2331 = dot(vec3(cbLight._m0[_2016].xyz), vec3(_2320, _2321, _2322));
    float _4345 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
    float _2335 = _2312 * _2312;
    float _2339 = ((_2330 * _2330) * (_2335 + (-1.0))) + 1.0;
    float _2346 = exp2(log2(1.0 - (isnan(1.0) ? _4345 : (isnan(_4345) ? 1.0 : min(_4345, 1.0)))) * 5.0);
    float _2353 = 1.0 - _2312;
    float _2363 = (0.5 / (((_2236 * ((_2326 * _2353) + _2312)) + 9.9999999392252902907785028219223e-09) + (((_2236 * _2353) + _2312) * _2326))) * _2326;
    float _4356 = isnan(0.0) ? _2363 : (isnan(_2363) ? 0.0 : max(_2363, 0.0));
    float _2365 = (isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0))) * (_2335 / ((_2339 * _2339) * 3.141590118408203125));
    float _2375 = (((((_2346 * _2258) + _660) * cbLight._m0[_2297].x) * _2365) * _2025) + ((((cbLight._m0[_2204].x * _1969) * ((_2257 * _2258) + _660)) * _2281) * _2006);
    float _2376 = (((((_2346 * _2260) + _662) * cbLight._m0[_2297].y) * _2365) * _2025) + ((((cbLight._m0[_2204].y * _1971) * ((_2257 * _2260) + _662)) * _2281) * _2006);
    float _2377 = (((((_2346 * _2261) + _663) * cbLight._m0[_2297].z) * _2365) * _2025) + ((((cbLight._m0[_2204].z * _1973) * ((_2257 * _2261) + _663)) * _2281) * _2006);
    float _2464;
    float _2466;
    float _2468;
    float _2470;
    float _2472;
    float _2474;
    if (_1978.y == 0u)
    {
        uvec4 _2420 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2421 = _2420.x;
        uint _2432 = uint((float(_2420.y) * floor(float(uint(cbSceneParam._m0[85u].y * _538) / _2421))) + floor(float(uint(cbSceneParam._m0[85u].x * _537) / _2421)));
        float _2442 = (log2(_1756 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2443 = isnan(0.0) ? _2442 : (isnan(_2442) ? 0.0 : max(_2442, 0.0));
        uint _2446 = uint(isnan(14.0) ? _2443 : (isnan(_2443) ? 14.0 : min(_2443, 14.0)));
        uvec4 _2451 = texelFetch(g_lightClusterGridBuffer, int(((_2446 << 2u) + (_2432 << 6u)) >> 2u));
        uint _2452 = _2451.x;
        uint _2453 = _2420.z;
        float _2498;
        float _2500;
        float _2502;
        float _2504;
        float _2506;
        float _2508;
        if (((((1u << ((_2453 >> 4u) & 15u)) + 4294967295u) & _2452) == 0u) || ((_2453 & 240u) == 0u))
        {
            _2498 = 0.0;
            _2500 = 0.0;
            _2502 = 0.0;
            _2504 = 0.0;
            _2506 = 0.0;
            _2508 = 0.0;
        }
        else
        {
            float _2499;
            float _2501;
            float _2503;
            float _2505;
            float _2507;
            float _2509;
            float _2697 = 0.0;
            float _2698 = 0.0;
            float _2699 = 0.0;
            float _2700 = 0.0;
            float _2701 = 0.0;
            float _2702 = 0.0;
            uint _2703 = 0u;
            uint _2712;
            bool _2713;
            for (;;)
            {
                _2712 = texelFetch(g_lightClassification, int((((_2446 << 5u) + (_2432 << 9u)) + (_2703 << 2u)) >> 2u)).x;
                _2713 = _2712 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2713)
                {
                    frontier_phi_63_pred = _2697;
                    frontier_phi_63_pred_1 = _2698;
                    frontier_phi_63_pred_2 = _2702;
                    frontier_phi_63_pred_3 = _2701;
                    frontier_phi_63_pred_4 = _2700;
                    frontier_phi_63_pred_5 = _2699;
                }
                else
                {
                    float _2873;
                    float _2874;
                    float _2875;
                    float _2876;
                    float _2877;
                    float _2878;
                    uint _2879;
                    _2873 = _2697;
                    _2874 = _2698;
                    _2875 = _2699;
                    _2876 = _2700;
                    _2877 = _2701;
                    _2878 = _2702;
                    _2879 = _2712;
                    float _2804;
                    float _2805;
                    float _2806;
                    float _2807;
                    float _2808;
                    float _2809;
                    for (;;)
                    {
                        uint _2883 = uint(findLSB(_2879)) + (_2703 << 5u);
                        uint _2880 = (_2879 + 4294967295u) & _2879;
                        uint _2885 = _2883 * 48u;
                        vec4 _2899 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2885)).x, texelFetch(g_PointLightRenderingBuffer, int(_2885 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2885 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2885 + 3u)).x));
                        uint _2905 = (_2883 * 48u) + 4u;
                        vec4 _2918 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2905)).x, texelFetch(g_PointLightRenderingBuffer, int(_2905 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2905 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2905 + 3u)).x));
                        float _2919 = _2918.x;
                        float _2920 = _2918.y;
                        float _2921 = _2918.z;
                        uint _2924 = (_2883 * 48u) + 8u;
                        vec3 _2935 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2924)).x, texelFetch(g_PointLightRenderingBuffer, int(_2924 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2924 + 2u)).x));
                        uint _2940 = (_2883 * 48u) + 12u;
                        vec2 _2948 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2940)).x, texelFetch(g_PointLightRenderingBuffer, int(_2940 + 1u)).x));
                        float _2954 = inversesqrt(dot(vec3(_1754, _1755, _1756), vec3(_1754, _1755, _1756)));
                        float _2955 = _2954 * _1754;
                        float _2956 = _2954 * _1755;
                        float _2957 = _2954 * _1756;
                        float _2958 = _2899.x - _1754;
                        float _2959 = _2899.y - _1755;
                        float _2960 = _2899.z - _1756;
                        float _2961 = dot(vec3(_2958, _2959, _2960), vec3(_2958, _2959, _2960));
                        float _2964 = inversesqrt(_2961);
                        float _2965 = _2964 * _2958;
                        float _2966 = _2964 * _2959;
                        float _2967 = _2964 * _2960;
                        float _2968 = dot(vec3(_616, _619, _622), vec3(_2965, _2966, _2967));
                        float _2973 = 1.0 - (_2961 * _2899.w);
                        float _4377 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
                        float _2974 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
                        float _2975 = sqrt(_2961) * _2918.w;
                        float _2978 = 1.39999997615814208984375 / (_2975 + 1.39999997615814208984375);
                        float _2979 = _2978 * _2978;
                        float _2980 = 1.0 - _2979;
                        float _2982 = (_2980 * _2980) * _576;
                        float _2985 = ((_2980 * _2968) + _2979) + _2982;
                        float _2990 = _2975 * _2975;
                        float _2995 = ((isnan(0.0) ? _2985 : (isnan(_2985) ? 0.0 : max(_2985, 0.0))) * _2974) / (((_2982 * 2.0) + 1.0) * ((_2990 * 0.699999988079071044921875) + 1.0));
                        float _2999 = dot(vec3(_2965, _2966, _2967), vec3(_2955, _2956, _2957));
                        float _4393 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
                        float _3006 = dot(vec3((-0.0) - _2955, (-0.0) - _2956, (-0.0) - _2957), vec3(_616, _619, _622)) + 1.0;
                        float _3008 = (isnan(0.0) ? _3006 : (isnan(_3006) ? 0.0 : max(_3006, 0.0))) * 0.5;
                        float _3015 = ((_3008 * _3008) * _2948.x) * exp2((_2948.y * 32.0) * log2(isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0))));
                        float _3017 = _576 / (_576 + 1.0);
                        float _3033 = (-0.0) - _1754;
                        float _3034 = (-0.0) - _1755;
                        float _3035 = (-0.0) - _1756;
                        float _3039 = inversesqrt(dot(vec3(_3033, _3034, _3035), vec3(_3033, _3034, _3035)));
                        float _3040 = _3039 * _3033;
                        float _3041 = _3039 * _3034;
                        float _3042 = _3039 * _3035;
                        float _3049 = exp2(log2(1.0 / ((_2990 * 3.5) + 5.0)) * 0.25);
                        float _3050 = 1.0 - _691;
                        float _3057 = sqrt(1.0 - ((1.0 - (_3050 * _3050)) * (1.0 - (_3049 * _3049))));
                        float _3058 = _3057 * _3057;
                        float _3059 = _3058 * _3058;
                        float _3060 = _3040 + _2965;
                        float _3061 = _3041 + _2966;
                        float _3062 = _3042 + _2967;
                        float _3066 = inversesqrt(dot(vec3(_3060, _3061, _3062), vec3(_3060, _3061, _3062)));
                        float _3070 = dot(vec3(_616, _619, _622), vec3(_3040, _3041, _3042));
                        float _4409 = isnan(0.0) ? _3070 : (isnan(_3070) ? 0.0 : max(_3070, 0.0));
                        float _3073 = isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0));
                        float _3074 = dot(vec3(_616, _619, _622), vec3(_3066 * _3060, _3066 * _3061, _3066 * _3062));
                        float _4420 = isnan(0.0) ? _3074 : (isnan(_3074) ? 0.0 : max(_3074, 0.0));
                        float _3077 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
                        float _3081 = ((_3077 * _3077) * (_3059 + (-1.0))) + 1.0;
                        float _3082 = _2978 * _3058;
                        float _3083 = _3082 * _3082;
                        float _3086 = ((1.0 - _3083) * _2968) + _3083;
                        float _4431 = isnan(0.0) ? _3086 : (isnan(_3086) ? 0.0 : max(_3086, 0.0));
                        float _3087 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
                        float _3088 = 1.0 - _3058;
                        float _3098 = (0.5 / (((_3087 * ((_3073 * _3088) + _3058)) + 9.9999999392252902907785028219223e-09) + (((_3087 * _3088) + _3058) * _3073))) * _3087;
                        float _4442 = isnan(0.0) ? _3098 : (isnan(_3098) ? 0.0 : max(_3098, 0.0));
                        float _3109 = (((_3059 * 3.1415927410125732421875) * (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0)))) / ((_3081 * _3081) * ((_2990 * 2.1991131305694580078125) + 3.141590118408203125))) * _2974;
                        _2807 = (((((_2919 * 0.3183098733425140380859375) * _3017) * _3015) + _2919) * _2995) + _2876;
                        _2808 = (((((_2920 * 0.3183098733425140380859375) * _3017) * _3015) + _2920) * _2995) + _2877;
                        _2809 = (((((_2921 * 0.3183098733425140380859375) * _3017) * _3015) + _2921) * _2995) + _2878;
                        _2804 = (_3109 * _2935.x) + _2873;
                        _2805 = (_3109 * _2935.y) + _2874;
                        _2806 = (_3109 * _2935.z) + _2875;
                        if (_2880 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2873 = _2804;
                            _2874 = _2805;
                            _2875 = _2806;
                            _2876 = _2807;
                            _2877 = _2808;
                            _2878 = _2809;
                            _2879 = _2880;
                        }
                    }
                    frontier_phi_63_pred = _2804;
                    frontier_phi_63_pred_1 = _2805;
                    frontier_phi_63_pred_2 = _2809;
                    frontier_phi_63_pred_3 = _2808;
                    frontier_phi_63_pred_4 = _2807;
                    frontier_phi_63_pred_5 = _2806;
                }
                _2499 = frontier_phi_63_pred;
                _2501 = frontier_phi_63_pred_1;
                _2509 = frontier_phi_63_pred_2;
                _2507 = frontier_phi_63_pred_3;
                _2505 = frontier_phi_63_pred_4;
                _2503 = frontier_phi_63_pred_5;
                uint _2704 = _2703 + 1u;
                if (_2704 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2697 = _2499;
                    _2698 = _2501;
                    _2699 = _2503;
                    _2700 = _2505;
                    _2701 = _2507;
                    _2702 = _2509;
                    _2703 = _2704;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2498 = _2499;
            _2500 = _2501;
            _2502 = _2503;
            _2504 = _2505;
            _2506 = _2507;
            _2508 = _2509;
        }
        uvec4 _2512 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2513 = _2512.z;
        uint _2515 = (_2513 >> 8u) & 15u;
        float _2665;
        float _2667;
        float _2669;
        float _2671;
        float _2673;
        float _2675;
        if (((4294967295u << _2515) & _2452) == 0u)
        {
            _2665 = _2498;
            _2667 = _2500;
            _2669 = _2502;
            _2671 = _2504;
            _2673 = _2506;
            _2675 = _2508;
        }
        else
        {
            float _2690 = inversesqrt(dot(vec3(_1754, _1755, _1756), vec3(_1754, _1755, _1756)));
            float _2691 = _2690 * _1754;
            float _2692 = _2690 * _1755;
            float _2693 = _2690 * _1756;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2515 < ((_2513 >> 12u) & 15u))
            {
                float _2666;
                float _2668;
                float _2670;
                float _2672;
                float _2674;
                float _2676;
                float _2856 = _2498;
                float _2857 = _2500;
                float _2858 = _2502;
                float _2859 = _2504;
                float _2860 = _2506;
                float _2861 = _2508;
                uint _2862 = _2515;
                uint _2871;
                bool _2872;
                for (;;)
                {
                    _2871 = texelFetch(g_lightClassification, int((((_2446 << 5u) + (_2432 << 9u)) + (_2862 << 2u)) >> 2u)).x;
                    _2872 = _2871 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2872)
                    {
                        frontier_phi_71_pred = _2856;
                        frontier_phi_71_pred_1 = _2861;
                        frontier_phi_71_pred_2 = _2860;
                        frontier_phi_71_pred_3 = _2859;
                        frontier_phi_71_pred_4 = _2858;
                        frontier_phi_71_pred_5 = _2857;
                    }
                    else
                    {
                        float _3152;
                        float _3153;
                        float _3154;
                        float _3155;
                        float _3156;
                        float _3157;
                        float _3495;
                        float _3496;
                        float _3497;
                        float _3498;
                        float _3499;
                        float _3500;
                        float _3165 = _2856;
                        float _3166 = _2857;
                        float _3167 = _2858;
                        float _3168 = _2859;
                        float _3169 = _2860;
                        float _3170 = _2861;
                        uint _3171 = _2871;
                        uint _3172;
                        vec4 _3197;
                        float _3198;
                        vec4 _3213;
                        float _3214;
                        float _3215;
                        float _3216;
                        vec3 _3228;
                        vec2 _3237;
                        vec4 _3252;
                        vec4 _3268;
                        float _3315;
                        bool _3316;
                        for (;;)
                        {
                            uint _3182 = ((_2862 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3171));
                            _3172 = (_3171 + 4294967295u) & _3171;
                            uint _3184 = _3182 * 40u;
                            _3197 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3184)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3184 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3184 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3184 + 3u)).x));
                            _3198 = _3197.w;
                            uint _3200 = (_3182 * 40u) + 4u;
                            _3213 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3200)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3200 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3200 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3200 + 3u)).x));
                            _3214 = _3213.x;
                            _3215 = _3213.y;
                            _3216 = _3213.z;
                            uint _3218 = (_3182 * 40u) + 8u;
                            _3228 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3218)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3218 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3218 + 2u)).x));
                            uint _3230 = (_3182 * 40u) + 12u;
                            _3237 = uintBitsToFloat(uvec2(texelFetch(g_SpotLightRenderingBuffer, int(_3230)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3230 + 1u)).x));
                            uint _3239 = (_3182 * 40u) + 16u;
                            _3252 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 3u)).x));
                            uint _3255 = (_3182 * 40u) + 20u;
                            _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            uint _3271 = (_3182 * 40u) + 24u;
                            vec4 _3284 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3271)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3271 + 3u)).x));
                            uint _3290 = (_3182 * 40u) + 28u;
                            vec4 _3303 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3290)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3290 + 3u)).x));
                            _3315 = fma(_1756, _3303.z, fma(_1755, _3303.y, _3303.x * _1754)) + _3303.w;
                            _3316 = !((fma(_1756, _3284.z, fma(_1755, _3284.y, _3284.x * _1754)) + _3284.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_3316)
                            {
                                float _3342 = _3197.x - _1754;
                                float _3343 = _3197.y - _1755;
                                float _3344 = _3197.z - _1756;
                                float _3345 = dot(vec3(_3342, _3343, _3344), vec3(_3342, _3343, _3344));
                                float _3348 = inversesqrt(_3345);
                                float _3349 = _3348 * _3342;
                                float _3350 = _3348 * _3343;
                                float _3351 = _3348 * _3344;
                                float _3355 = 1.0 - (_3345 / (_3198 * _3198));
                                float _4453 = isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0));
                                float _3356 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
                                float _3360 = sqrt(_3345) * _3213.w;
                                float _3362 = 1.39999997615814208984375 / (_3360 + 1.39999997615814208984375);
                                float _3363 = _3362 * _3362;
                                float _3364 = 1.0 - _3363;
                                float _3366 = (_3364 * _3364) * _576;
                                float _3369 = ((_3364 * dot(vec3(_3349, _3350, _3351), vec3(_616, _619, _622))) + _3363) + _3366;
                                float _3374 = _3360 * _3360;
                                float _3379 = (fma(_1756, _3252.z, fma(_1755, _3252.y, _3252.x * _1754)) + _3252.w) / _3315;
                                float _3380 = (fma(_1756, _3268.z, fma(_1755, _3268.y, _3268.x * _1754)) + _3268.w) / _3315;
                                float _3384 = 1.0 - dot(vec2(_3379, _3380), vec2(_3379, _3380));
                                float _4469 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                                float _3385 = isnan(1.0) ? _4469 : (isnan(_4469) ? 1.0 : min(_4469, 1.0));
                                float _3386 = _3385 * (((isnan(0.0) ? _3369 : (isnan(_3369) ? 0.0 : max(_3369, 0.0))) * _3356) / (((_3366 * 2.0) + 1.0) * ((_3374 * 0.699999988079071044921875) + 1.0)));
                                float _3387 = (-0.0) - _2691;
                                float _3388 = (-0.0) - _2692;
                                float _3389 = (-0.0) - _2693;
                                float _3390 = dot(vec3(_3349, _3350, _3351), vec3(_2691, _2692, _2693));
                                float _4480 = isnan(0.0) ? _3390 : (isnan(_3390) ? 0.0 : max(_3390, 0.0));
                                float _3397 = dot(vec3(_3387, _3388, _3389), vec3(_616, _619, _622)) + 1.0;
                                float _3399 = (isnan(0.0) ? _3397 : (isnan(_3397) ? 0.0 : max(_3397, 0.0))) * 0.5;
                                float _3406 = ((_3399 * _3399) * _3237.x) * exp2((_3237.y * 32.0) * log2(isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0))));
                                float _3408 = _576 / (_576 + 1.0);
                                float _3429 = exp2(log2(1.0 / ((_3374 * 3.5) + 5.0)) * 0.25);
                                float _3430 = 1.0 - _691;
                                float _3437 = sqrt(1.0 - ((1.0 - (_3430 * _3430)) * (1.0 - (_3429 * _3429))));
                                float _3438 = _3437 * _3437;
                                float _3439 = _3438 * _3438;
                                float _3440 = _3349 - _2691;
                                float _3441 = _3350 - _2692;
                                float _3442 = _3351 - _2693;
                                float _3446 = inversesqrt(dot(vec3(_3440, _3441, _3442), vec3(_3440, _3441, _3442)));
                                float _3450 = dot(vec3(_616, _619, _622), vec3(_3387, _3388, _3389));
                                float _4496 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0));
                                float _3453 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
                                float _3454 = dot(vec3(_616, _619, _622), vec3(_3446 * _3440, _3446 * _3441, _3446 * _3442));
                                float _4507 = isnan(0.0) ? _3454 : (isnan(_3454) ? 0.0 : max(_3454, 0.0));
                                float _3457 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
                                float _3461 = ((_3457 * _3457) * (_3439 + (-1.0))) + 1.0;
                                float _3462 = _3362 * _3438;
                                float _3463 = _3462 * _3462;
                                float _3469 = ((1.0 - _3463) * dot(vec3(_616, _619, _622), vec3(_3349, _3350, _3351))) + _3463;
                                float _4518 = isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0));
                                float _3470 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
                                float _3471 = 1.0 - _3438;
                                float _3481 = (0.5 / (((_3470 * ((_3453 * _3471) + _3438)) + 9.9999999392252902907785028219223e-09) + (((_3470 * _3471) + _3438) * _3453))) * _3470;
                                float _4529 = isnan(0.0) ? _3481 : (isnan(_3481) ? 0.0 : max(_3481, 0.0));
                                float _3491 = (_3385 * _3356) * (((_3439 * 3.1415927410125732421875) * (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0)))) / ((_3461 * _3461) * ((_3374 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_77_pred = ((((_3216 * 0.3183098733425140380859375) * _3408) * _3406) + _3216) * _3386;
                                frontier_phi_77_pred_1 = ((((_3215 * 0.3183098733425140380859375) * _3408) * _3406) + _3215) * _3386;
                                frontier_phi_77_pred_2 = ((((_3214 * 0.3183098733425140380859375) * _3408) * _3406) + _3214) * _3386;
                                frontier_phi_77_pred_3 = _3491 * _3228.z;
                                frontier_phi_77_pred_4 = _3491 * _3228.y;
                                frontier_phi_77_pred_5 = _3491 * _3228.x;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _3500 = frontier_phi_77_pred;
                            _3499 = frontier_phi_77_pred_1;
                            _3498 = frontier_phi_77_pred_2;
                            _3497 = frontier_phi_77_pred_3;
                            _3496 = frontier_phi_77_pred_4;
                            _3495 = frontier_phi_77_pred_5;
                            _3155 = _3498 + _3168;
                            _3156 = _3499 + _3169;
                            _3157 = _3500 + _3170;
                            _3152 = _3495 + _3165;
                            _3153 = _3496 + _3166;
                            _3154 = _3497 + _3167;
                            if (_3172 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3165 = _3152;
                                _3166 = _3153;
                                _3167 = _3154;
                                _3168 = _3155;
                                _3169 = _3156;
                                _3170 = _3157;
                                _3171 = _3172;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _3152;
                        frontier_phi_71_pred_1 = _3157;
                        frontier_phi_71_pred_2 = _3156;
                        frontier_phi_71_pred_3 = _3155;
                        frontier_phi_71_pred_4 = _3154;
                        frontier_phi_71_pred_5 = _3153;
                    }
                    _2666 = frontier_phi_71_pred;
                    _2676 = frontier_phi_71_pred_1;
                    _2674 = frontier_phi_71_pred_2;
                    _2672 = frontier_phi_71_pred_3;
                    _2670 = frontier_phi_71_pred_4;
                    _2668 = frontier_phi_71_pred_5;
                    uint _2863 = _2862 + 1u;
                    if (_2863 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2856 = _2666;
                        _2857 = _2668;
                        _2858 = _2670;
                        _2859 = _2672;
                        _2860 = _2674;
                        _2861 = _2676;
                        _2862 = _2863;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2670;
                frontier_phi_57_58_ladder_1 = _2676;
                frontier_phi_57_58_ladder_2 = _2674;
                frontier_phi_57_58_ladder_3 = _2672;
                frontier_phi_57_58_ladder_4 = _2668;
                frontier_phi_57_58_ladder_5 = _2666;
            }
            else
            {
                frontier_phi_57_58_ladder = _2502;
                frontier_phi_57_58_ladder_1 = _2508;
                frontier_phi_57_58_ladder_2 = _2506;
                frontier_phi_57_58_ladder_3 = _2504;
                frontier_phi_57_58_ladder_4 = _2500;
                frontier_phi_57_58_ladder_5 = _2498;
            }
            _2665 = frontier_phi_57_58_ladder_5;
            _2667 = frontier_phi_57_58_ladder_4;
            _2669 = frontier_phi_57_58_ladder;
            _2671 = frontier_phi_57_58_ladder_3;
            _2673 = frontier_phi_57_58_ladder_2;
            _2675 = frontier_phi_57_58_ladder_1;
        }
        float _2680 = isnan(1.0) ? _670 : (isnan(_670) ? 1.0 : min(_670, 1.0));
        _2464 = (_2680 * _2671) + _2198;
        _2466 = (_2680 * _2673) + _2199;
        _2468 = (_2680 * _2675) + _2200;
        _2470 = ((_2665 * _660) * _2680) + _2375;
        _2472 = ((_2667 * _662) * _2680) + _2376;
        _2474 = ((_2669 * _663) * _2680) + _2377;
    }
    else
    {
        _2464 = _2198;
        _2466 = _2199;
        _2468 = _2200;
        _2470 = _2375;
        _2472 = _2376;
        _2474 = _2377;
    }
    float _2586;
    float _2587;
    float _2588;
    if (_576 > 0.0)
    {
        uint _2519 = _1980 + 4u;
        float _2525 = (-0.0) - _388;
        float _2526 = (-0.0) - _389;
        float _2527 = (-0.0) - _390;
        float _2528 = dot(vec3(cbLight._m0[_1980].xyz), vec3(_2525, _2526, _2527));
        float _4545 = isnan(0.0) ? _2528 : (isnan(_2528) ? 0.0 : max(_2528, 0.0));
        float _2532 = _681 + 1.0;
        float _2534 = (isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0))) * 0.5;
        float _2539 = _2534 * _2534;
        float _2540 = _2539 * exp2(log2(isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * 32.0);
        float _2542 = _576 / (_576 + 1.0);
        float _2543 = isnan(_1989) ? 1.0 : (isnan(1.0) ? _1989 : min(1.0, _1989));
        uint _2556 = _1980 + 5u;
        float _2562 = dot(vec3(cbLight._m0[_2016].xyz), vec3(_2525, _2526, _2527));
        float _4566 = isnan(0.0) ? _2562 : (isnan(_2562) ? 0.0 : max(_2562, 0.0));
        float _2569 = _2539 * exp2(log2(isnan(1.0) ? _4566 : (isnan(_4566) ? 1.0 : min(_4566, 1.0))) * 32.0);
        float _2570 = isnan(_1990) ? 1.0 : (isnan(1.0) ? _1990 : min(1.0, _1990));
        _2586 = ((((_2569 * cbLight._m0[_2556].x) * _2542) * _2570) + ((((cbLight._m0[_2519].x * _1969) * _2540) * _2542) * _2543)) * 0.3183098733425140380859375;
        _2587 = ((((_2569 * cbLight._m0[_2556].y) * _2542) * _2570) + ((((cbLight._m0[_2519].y * _1971) * _2540) * _2542) * _2543)) * 0.3183098733425140380859375;
        _2588 = ((((_2569 * cbLight._m0[_2556].z) * _2542) * _2570) + ((((cbLight._m0[_2519].z * _1973) * _2540) * _2542) * _2543)) * 0.3183098733425140380859375;
    }
    else
    {
        _2586 = 0.0;
        _2587 = 0.0;
        _2588 = 0.0;
    }
    float _4582 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _4593 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _4604 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
    float _4615 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _2594 = 0.959999978542327880859375 - (_580 * 0.959999978542327880859375);
    float _2605 = (isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0))) * ((_2464 + ((isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0))) * _670)) + _2586);
    float _2606 = (isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0))) * ((_2466 + ((isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0))) * _670)) + _2587);
    float _2607 = (isnan(1.0) ? _4604 : (isnan(_4604) ? 1.0 : min(_4604, 1.0))) * ((_2468 + ((isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0))) * _670)) + _2588);
    float _2611 = _2594 - (exp2(log2(1.0 - _685) * 5.0) * _2594);
    float _2631 = cbInstanceData._m0[_635 + 6u].w * (isnan(1.0) ? _4615 : (isnan(_4615) ? 1.0 : min(_4615, 1.0)));
    float _2636 = _537 / cbSceneParam._m0[86u].x;
    float _2637 = _538 / cbSceneParam._m0[86u].y;
    vec4 _2651 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2636, _2637, (log2((isnan(cbSceneParam._m0[77u].w) ? _596 : (isnan(_596) ? cbSceneParam._m0[77u].w : min(_596, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2653 = _2651.x;
    float _2654 = _2651.y;
    float _2655 = _2651.z;
    float _2656 = _2651.w;
    float _2755;
    float _2757;
    float _2759;
    float _2761;
    if (_596 > cbSceneParam._m0[78u].w)
    {
        float _2718 = isnan(_596) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _596 : min(cbSceneParam._m0[80u].w, _596));
        float _2719 = _2718 / _596;
        float _2730 = _2719 * _278;
        float _2731 = _279 * _2719;
        float _2732 = (-0.0) - _2731;
        float _2733 = _2719 * _280;
        float _2735 = (cbSceneParam._m0[77u].w * _2732) / _2718;
        float _2736 = _2735 + cbSceneParam._m0[79u].w;
        float _2737 = cbSceneParam._m0[79u].w - _2731;
        float _2743 = sqrt(((_2730 * _2730) + (_2731 * _2731)) + (_2733 * _2733));
        float _2746 = (1.0 - (cbSceneParam._m0[77u].w / _2718)) * _2743;
        float _2751 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2753 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3114;
        if (abs((_2732 - _2735) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3114 = ((((_2736 > 0.0) ? exp2(_2751 * _2736) : (2.0 - exp2(_2753 * _2736))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2746;
        }
        else
        {
            float _2829 = 1.0 / cbSceneParam._m0[80u].x;
            float _2830 = isnan(_2737) ? _2736 : (isnan(_2736) ? _2737 : max(_2736, _2737));
            float _2831 = isnan(_2737) ? _2736 : (isnan(_2736) ? _2737 : min(_2736, _2737));
            float _2840 = isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : min(_2830, 0.0));
            float _2841 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : min(_2831, 0.0));
            _3114 = ((abs(_2743 / _2732) * cbSceneParam._m0[80u].y) * ((((_2840 - _2841) * 2.0) - ((exp2(_2751 * (isnan(0.0) ? _2830 : (isnan(_2830) ? 0.0 : max(_2830, 0.0)))) - exp2(_2751 * (isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0))))) * _2829)) - ((exp2(_2753 * _2840) - exp2(_2753 * _2841)) * _2829))) + (_2746 * cbSceneParam._m0[80u].z);
        }
        vec4 _3116 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2636, _2637, 1.0), 0.0);
        float _3125 = exp2((_3114 * (-1.44269502162933349609375)) * (1.0 - _3116.w));
        float _3126 = log2(_3125);
        float _3142 = log2(_2656);
        _2755 = (exp2(_3142 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3126 * cbSceneParam._m0[78u].x)) * _3116.x) / cbSceneParam._m0[78u].x)) + _2653;
        _2757 = (exp2(_3142 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3126 * cbSceneParam._m0[78u].y)) * _3116.y) / cbSceneParam._m0[78u].y)) + _2654;
        _2759 = (exp2(_3142 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3126 * cbSceneParam._m0[78u].z)) * _3116.z) / cbSceneParam._m0[78u].z)) + _2655;
        _2761 = _3125 * _2656;
    }
    else
    {
        _2755 = _2653;
        _2757 = _2654;
        _2759 = _2655;
        _2761 = _2656;
    }
    float _2772 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2773 = _2772 == 3.0;
    float _2774 = log2(_2761);
    float _2781 = exp2(_2774 * cbSceneParam._m0[78u].x) * ((_2605 + ((_2470 + ((isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _561.x) * _2611) - _2605) * _525));
    float _2782 = exp2(_2774 * cbSceneParam._m0[78u].y) * ((_2606 + ((_2472 + ((isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _561.y) * _2611) - _2606) * _525));
    float _2783 = exp2(_2774 * cbSceneParam._m0[78u].z) * ((_2607 + ((_2474 + ((isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0))) * _1484)) * cbPerFrame._m0[3u].x)) + ((((cbSceneParam._m0[72u].w * _561.z) * _2611) - _2607) * _525));
    float _2792 = (_2772 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2792 * (_2773 ? _2781 : (_2781 + (cbSceneParam._m0[72u].w * _2755)));
    SV_Target.y = _2792 * (_2773 ? _2782 : (_2782 + (cbSceneParam._m0[72u].w * _2757)));
    SV_Target.z = _2792 * (_2773 ? _2783 : (_2783 + (cbSceneParam._m0[72u].w * _2759)));
    SV_Target.w = _2631;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2631;
}


