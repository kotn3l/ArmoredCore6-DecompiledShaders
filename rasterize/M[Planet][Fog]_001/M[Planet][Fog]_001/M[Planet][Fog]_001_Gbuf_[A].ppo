#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

float _350;
float _351;
float _352;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _115 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _116 = _115 * NORMAL.x;
    float _117 = _115 * NORMAL.y;
    float _118 = _115 * NORMAL.z;
    float _123;
    float _124;
    float _125;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _123 = (-0.0) - _116;
        _124 = (-0.0) - _117;
        _125 = (-0.0) - _118;
    }
    else
    {
        _123 = _116;
        _124 = _117;
        _125 = _118;
    }
    bool _293;
    float _233;
    uint _246;
    float _252;
    vec4 _256;
    float _258;
    float _259;
    bool _271;
    for (;;)
    {
        float _170 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
        float _180 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _170);
        float _181 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _170);
        float _182 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _170);
        float _195 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
        float _199 = dot(vec4(_195 * _180, _195 * _181, _195 * _182, 0.0), vec4(_123, _124, _125, 0.0));
        float _202 = _199 - cbMtdParam._m0[13u].x;
        float _361 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
        float _211 = exp2(log2(exp2(log2(1.0 - (isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0))))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
        float _372 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
        float _218 = _199 - cbMtdParam._m0[12u].y;
        float _383 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
        float _227 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0)))))) * cbMtdParam._m0[11u].w) * cbMtdParam._m0[12u].x);
        float _394 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
        float _229 = (isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0))) * (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0)));
        _233 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
        float _405 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
        _246 = uint(roundEven(NORMAL.w)) * 13u;
        _252 = cbInstanceData._m0[_246 + 6u].w * (isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0)));
        float _253 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _256 = cbMtdParam._m0[1u];
        _258 = _256.y * _253;
        _259 = _253 * 0.999000012874603271484375;
        _271 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_271)
        {
            if ((cbInstanceData._m0[_246 + 7u].x + _259) < 0.5)
            {
                _293 = true;
                break;
            }
        }
        uint _285 = (_246 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_285].w < 1.0) && ((cbInstanceData._m0[_285].w + _259) < 0.5))
        {
            _293 = true;
            break;
        }
        if ((_258 + 1.0) < _256.x)
        {
            _293 = true;
            break;
        }
        _293 = false;
        break;
    }
    if (_293)
    {
        discard_state = true;
    }
    bool _314 = cbMtdParam._m0[1u].z != 0.0;
    float _315 = _314 ? _252 : 0.0;
    SV_Target.x = ((_123 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.y = ((_124 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.z = ((_125 * 0.5) * _233) + 0.500488758087158203125;
    SV_Target.w = _315;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _314 ? _252 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _252;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _315;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _315;
    discard_exit();
}


