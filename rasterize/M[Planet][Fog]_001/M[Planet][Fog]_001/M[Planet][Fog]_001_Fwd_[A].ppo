#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _674;
float _675;
float _676;
float _677;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _109 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _110 = _109 * NORMAL.x;
    float _111 = _109 * NORMAL.y;
    float _112 = _109 * NORMAL.z;
    float _117;
    float _118;
    float _119;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _117 = (-0.0) - _110;
        _118 = (-0.0) - _111;
        _119 = (-0.0) - _112;
    }
    else
    {
        _117 = _110;
        _118 = _111;
        _119 = _112;
    }
    float _154 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _158 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _162 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _166 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _176 = cbSceneParam._m0[71u].x - (_154 / _166);
    float _177 = cbSceneParam._m0[71u].y - (_158 / _166);
    float _178 = cbSceneParam._m0[71u].z - (_162 / _166);
    float _191 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _195 = dot(vec4(_191 * _176, _191 * _177, _191 * _178, 0.0), vec4(_117, _118, _119, 0.0));
    float _198 = _195 - cbMtdParam._m0[13u].x;
    float _686 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _207 = exp2(log2(exp2(log2(1.0 - (isnan(1.0) ? _686 : (isnan(_686) ? 1.0 : min(_686, 1.0))))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _697 = isnan(0.0) ? _207 : (isnan(_207) ? 0.0 : max(_207, 0.0));
    float _214 = _195 - cbMtdParam._m0[12u].y;
    float _708 = isnan(0.0) ? _214 : (isnan(_214) ? 0.0 : max(_214, 0.0));
    float _223 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _708 : (isnan(_708) ? 1.0 : min(_708, 1.0)))))) * cbMtdParam._m0[11u].w) * cbMtdParam._m0[12u].x);
    float _719 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _225 = (isnan(1.0) ? _719 : (isnan(_719) ? 1.0 : min(_719, 1.0))) * (isnan(1.0) ? _697 : (isnan(_697) ? 1.0 : min(_697, 1.0)));
    float _243 = inversesqrt(dot(vec3(cbMtdParam._m0[13u].yzw), vec3(cbMtdParam._m0[13u].yzw)));
    uint _248 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = floatBitsToUint(cbInstanceData._m0[_248 + 5u]).x * 14u;
    float _268 = (((_243 * cbMtdParam._m0[13u].y) - cbLight._m0[_256].x) * cbMtdParam._m0[11u].x) + cbLight._m0[_256].x;
    float _269 = (((_243 * cbMtdParam._m0[13u].z) - cbLight._m0[_256].y) * cbMtdParam._m0[11u].x) + cbLight._m0[_256].y;
    float _270 = (((_243 * cbMtdParam._m0[13u].w) - cbLight._m0[_256].z) * cbMtdParam._m0[11u].x) + cbLight._m0[_256].z;
    float _274 = inversesqrt(dot(vec3(_268, _269, _270), vec3(_268, _269, _270)));
    float _275 = _268 * _274;
    float _276 = _269 * _274;
    float _277 = _270 * _274;
    float _281 = inversesqrt(dot(vec3(_275, _276, _277), vec3(_275, _276, _277)));
    float _288 = inversesqrt(dot(vec3(_154, _158, _162), vec3(_154, _158, _162)));
    float _304 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_288 * _154, _288 * _158, _288 * _162, 0.0), vec4(_275 * _281, _276 * _281, _277 * _281, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _730 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _306 = isnan(1.0) ? _730 : (isnan(_730) ? 1.0 : min(_730, 1.0));
    float _312 = exp2(log2(_306 * 6.5) * 7.0);
    float _741 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
    float _319 = exp2(log2(cbMtdParam._m0[11u].y * ((isnan(1.0) ? _741 : (isnan(_741) ? 1.0 : min(_741, 1.0))) + _306)) * cbMtdParam._m0[11u].z);
    float _752 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _320 = isnan(1.0) ? _752 : (isnan(_752) ? 1.0 : min(_752, 1.0));
    float _763 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
    float _321 = isnan(1.0) ? _763 : (isnan(_763) ? 1.0 : min(_763, 1.0));
    float _774 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _347 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _353 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _356 = _353.w;
    uint _368 = _248 + 9u;
    uint _369 = _368 + uint(cbMatDynParam._m0[0u].w);
    float _375 = (((_321 * (cbMtdParam._m0[9u].x - cbMtdParam._m0[10u].x)) + cbMtdParam._m0[10u].x) * _225) * cbInstanceData._m0[_369].x;
    float _376 = (_225 * ((_321 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y)) * cbInstanceData._m0[_369].y;
    float _377 = (_225 * ((_321 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z)) * cbInstanceData._m0[_369].z;
    float _378 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _379 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _380 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _386 = cbMtdParam._m0[2u].x * _375;
    float _387 = cbMtdParam._m0[2u].y * _376;
    float _388 = cbMtdParam._m0[2u].z * _377;
    float _800 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _390 = isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0));
    float _396 = cbInstanceData._m0[_248 + 6u].w * (isnan(1.0) ? _774 : (isnan(_774) ? 1.0 : min(_774, 1.0)));
    float _402 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _403 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _418 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_402, _403, (log2((isnan(cbSceneParam._m0[77u].w) ? _347 : (isnan(_347) ? cbSceneParam._m0[77u].w : min(_347, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _420 = _418.x;
    float _421 = _418.y;
    float _422 = _418.z;
    float _423 = _418.w;
    float _474;
    float _476;
    float _478;
    float _480;
    if (_347 > cbSceneParam._m0[78u].w)
    {
        float _436 = isnan(_347) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _347 : min(cbSceneParam._m0[80u].w, _347));
        float _437 = _436 / _347;
        float _448 = _437 * _176;
        float _449 = _177 * _437;
        float _450 = (-0.0) - _449;
        float _451 = _437 * _178;
        float _453 = (cbSceneParam._m0[77u].w * _450) / _436;
        float _454 = _453 + cbSceneParam._m0[79u].w;
        float _455 = cbSceneParam._m0[79u].w - _449;
        float _461 = sqrt(((_448 * _448) + (_449 * _449)) + (_451 * _451));
        float _464 = (1.0 - (cbSceneParam._m0[77u].w / _436)) * _461;
        float _470 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _472 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _601;
        if (abs((_450 - _453) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _601 = ((((_454 > 0.0) ? exp2(_470 * _454) : (2.0 - exp2(_472 * _454))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _464;
        }
        else
        {
            float _557 = 1.0 / cbSceneParam._m0[80u].x;
            float _558 = isnan(_455) ? _454 : (isnan(_454) ? _455 : max(_454, _455));
            float _559 = isnan(_455) ? _454 : (isnan(_454) ? _455 : min(_454, _455));
            float _568 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : min(_558, 0.0));
            float _569 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : min(_559, 0.0));
            _601 = ((abs(_461 / _450) * cbSceneParam._m0[80u].y) * ((((_568 - _569) * 2.0) - ((exp2(_470 * (isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0)))) - exp2(_470 * (isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0))))) * _557)) - ((exp2(_472 * _568) - exp2(_472 * _569)) * _557))) + (_464 * cbSceneParam._m0[80u].z);
        }
        vec4 _603 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_402, _403, 1.0), 0.0);
        float _612 = exp2((_601 * (-1.44269502162933349609375)) * (1.0 - _603.w));
        float _613 = log2(_612);
        float _629 = log2(_423);
        _474 = (exp2(_629 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_613 * cbSceneParam._m0[78u].x)) * _603.x) / cbSceneParam._m0[78u].x)) + _420;
        _476 = (exp2(_629 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_613 * cbSceneParam._m0[78u].y)) * _603.y) / cbSceneParam._m0[78u].y)) + _421;
        _478 = (exp2(_629 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_613 * cbSceneParam._m0[78u].z)) * _603.z) / cbSceneParam._m0[78u].z)) + _422;
        _480 = _612 * _423;
    }
    else
    {
        _474 = _420;
        _476 = _421;
        _478 = _422;
        _480 = _423;
    }
    bool _639;
    vec4 _490;
    vec4 _514;
    float _516;
    float _521;
    float _522;
    float _523;
    float _526;
    float _529;
    float _532;
    float _533;
    bool _544;
    for (;;)
    {
        _490 = cbMatDynParam._m0[0u];
        float _492 = roundEven(_490.y);
        bool _493 = _492 == 3.0;
        float _495 = log2(_480);
        float _499 = exp2(_495 * cbSceneParam._m0[78u].x);
        float _500 = exp2(_495 * cbSceneParam._m0[78u].y);
        float _501 = exp2(_495 * cbSceneParam._m0[78u].z);
        float _502 = _499 * _378;
        float _503 = _500 * _379;
        float _504 = _501 * _380;
        float _511 = _356 + (-0.5);
        _514 = cbMtdParam._m0[1u];
        _516 = _514.y * _511;
        float _520 = (_492 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _521 = _520 * (_493 ? _502 : (_502 + (cbSceneParam._m0[72u].w * _474)));
        _522 = _520 * (_493 ? _503 : (_503 + (cbSceneParam._m0[72u].w * _476)));
        _523 = _520 * (_493 ? _504 : (_504 + (cbSceneParam._m0[72u].w * _478)));
        _526 = ((_386 * _390) * _499) * _520;
        _529 = ((_387 * _390) * _500) * _520;
        _532 = ((_388 * _390) * _501) * _520;
        _533 = _511 * 0.999000012874603271484375;
        _544 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_544)
        {
            if ((cbInstanceData._m0[_248 + 7u].x + _533) < 0.5)
            {
                _639 = true;
                break;
            }
        }
        uint _593 = _368 + uint(_490.w);
        if ((cbInstanceData._m0[_593].w < 1.0) && ((cbInstanceData._m0[_593].w + _533) < 0.5))
        {
            _639 = true;
            break;
        }
        if ((_516 + 1.0) < _514.x)
        {
            _639 = true;
            break;
        }
        _639 = false;
        break;
    }
    float _647;
    if (_639)
    {
        discard_state = true;
        _647 = 0.0;
    }
    else
    {
        _647 = _396;
    }
    SV_Target.x = _521;
    SV_Target.y = _522;
    SV_Target.z = _523;
    SV_Target.w = _647;
    SV_Target_1.x = _526;
    SV_Target_1.y = _529;
    SV_Target_1.z = _532;
    SV_Target_1.w = _396;
    discard_exit();
}


