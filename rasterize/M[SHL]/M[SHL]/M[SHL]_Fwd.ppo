#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SHL_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _111 = texture(sampler2D(M_SHL_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _114 = _111.x;
    float _115 = _111.y;
    float _116 = _111.z;
    float _124 = (cbMtdParam._m0[9u].y * _114) * cbMtdParam._m0[9u].z;
    float _126 = (cbMtdParam._m0[9u].y * _115) * cbMtdParam._m0[9u].z;
    float _128 = (cbMtdParam._m0[9u].y * _116) * cbMtdParam._m0[9u].z;
    float _130 = isnan(_126) ? _124 : (isnan(_124) ? _126 : max(_124, _126));
    float _131 = isnan(_128) ? _130 : (isnan(_130) ? _128 : max(_130, _128));
    float _134;
    float _136;
    if (_131 < 1.1920928955078125e-07)
    {
        _134 = 0.0;
        _136 = 0.0;
    }
    else
    {
        float _162 = isnan(_126) ? _124 : (isnan(_124) ? _126 : min(_124, _126));
        float _164 = _131 - (isnan(_128) ? _162 : (isnan(_162) ? _128 : min(_162, _128)));
        float _137 = _164 / _131;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_164 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _137;
        }
        else
        {
            float _456;
            if (_131 == _124)
            {
                _456 = (((cbMtdParam._m0[9u].y * (_115 - _116)) * cbMtdParam._m0[9u].z) / _164) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_14_10_ladder;
                if (_131 == _126)
                {
                    frontier_phi_14_10_ladder = ((((cbMtdParam._m0[9u].y * (_116 - _114)) * cbMtdParam._m0[9u].z) / _164) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_14_10_ladder = ((((cbMtdParam._m0[9u].y * (_114 - _115)) * cbMtdParam._m0[9u].z) / _164) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _456 = frontier_phi_14_10_ladder;
            }
            float _461 = (_456 < 0.0) ? (_456 + 1.0) : _456;
            frontier_phi_1_2_ladder = _461 - floor(_461);
            frontier_phi_1_2_ladder_1 = _137;
        }
        _134 = frontier_phi_1_2_ladder;
        _136 = frontier_phi_1_2_ladder_1;
    }
    float _138 = _136 + cbMtdParam._m0[10u].x;
    float _142 = fract(cbMtdParam._m0[9u].w + _134) * 6.0;
    uint _145 = uint(int(floor(_142)));
    float _147 = _142 - float(int(_145));
    float _150 = (1.0 - _138) * _131;
    float _153 = (1.0 - (_147 * _138)) * _131;
    float _157 = (1.0 - ((1.0 - _147) * _138)) * _131;
    float _166;
    float _168;
    float _169;
    if ((_145 == 0u) || (_145 == 6u))
    {
        _166 = _131;
        _168 = _157;
        _169 = _150;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_145 == 1u)
        {
            frontier_phi_3_4_ladder = _153;
            frontier_phi_3_4_ladder_1 = _131;
            frontier_phi_3_4_ladder_2 = _150;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_145 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _150;
                frontier_phi_3_4_ladder_8_ladder_1 = _131;
                frontier_phi_3_4_ladder_8_ladder_2 = _157;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_13_ladder;
                float frontier_phi_3_4_ladder_8_ladder_13_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_13_ladder_2;
                if (_145 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_13_ladder = _150;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_1 = _153;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_2 = _131;
                }
                else
                {
                    bool _513 = _145 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder = _513 ? _157 : _131;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_1 = _150;
                    frontier_phi_3_4_ladder_8_ladder_13_ladder_2 = _513 ? _131 : _153;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_13_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_13_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_13_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _166 = frontier_phi_3_4_ladder;
        _168 = frontier_phi_3_4_ladder_1;
        _169 = frontier_phi_3_4_ladder_2;
    }
    float _572 = isnan(0.0) ? TEXCOORD_1.z : (isnan(TEXCOORD_1.z) ? 0.0 : max(TEXCOORD_1.z, 0.0));
    float _190 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _207 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _222 = uint(roundEven(NORMAL.w)) * 13u;
    uint _225 = (_222 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _231 = (_166 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_225].x;
    float _232 = (_168 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_225].y;
    float _233 = (_169 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_225].z;
    float _241 = cbInstanceData._m0[_222 + 6u].w * (isnan(1.0) ? _572 : (isnan(_572) ? 1.0 : min(_572, 1.0)));
    float _247 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _248 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _263 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, (log2((isnan(cbSceneParam._m0[77u].w) ? _190 : (isnan(_190) ? cbSceneParam._m0[77u].w : min(_190, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _266 = _263.x;
    float _267 = _263.y;
    float _268 = _263.z;
    float _269 = _263.w;
    float _356;
    float _358;
    float _360;
    float _362;
    if (_190 > cbSceneParam._m0[78u].w)
    {
        float _317 = isnan(_190) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _190 : min(cbSceneParam._m0[80u].w, _190));
        float _318 = _317 / _190;
        float _329 = _318 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _207));
        float _330 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _207)) * _318;
        float _331 = (-0.0) - _330;
        float _333 = _318 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _207));
        float _335 = (cbSceneParam._m0[77u].w * _331) / _317;
        float _336 = _335 + cbSceneParam._m0[79u].w;
        float _337 = cbSceneParam._m0[79u].w - _330;
        float _343 = sqrt(((_329 * _329) + (_330 * _330)) + (_333 * _333));
        float _346 = (1.0 - (cbSceneParam._m0[77u].w / _317)) * _343;
        float _352 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _354 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _475;
        if (abs((_331 - _335) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _475 = ((((_336 > 0.0) ? exp2(_352 * _336) : (2.0 - exp2(_354 * _336))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _346;
        }
        else
        {
            float _428 = 1.0 / cbSceneParam._m0[80u].x;
            float _429 = isnan(_337) ? _336 : (isnan(_336) ? _337 : max(_336, _337));
            float _430 = isnan(_337) ? _336 : (isnan(_336) ? _337 : min(_336, _337));
            float _439 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : min(_429, 0.0));
            float _440 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : min(_430, 0.0));
            _475 = ((abs(_343 / _331) * cbSceneParam._m0[80u].y) * ((((_439 - _440) * 2.0) - ((exp2(_352 * (isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0)))) - exp2(_352 * (isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0))))) * _428)) - ((exp2(_354 * _439) - exp2(_354 * _440)) * _428))) + (_346 * cbSceneParam._m0[80u].z);
        }
        vec4 _477 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_247, _248, 1.0), 0.0);
        float _486 = exp2((_475 * (-1.44269502162933349609375)) * (1.0 - _477.w));
        float _487 = log2(_486);
        float _503 = log2(_269);
        _356 = (exp2(_503 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_487 * cbSceneParam._m0[78u].x)) * _477.x) / cbSceneParam._m0[78u].x)) + _266;
        _358 = (exp2(_503 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_487 * cbSceneParam._m0[78u].y)) * _477.y) / cbSceneParam._m0[78u].y)) + _267;
        _360 = (exp2(_503 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_487 * cbSceneParam._m0[78u].z)) * _477.z) / cbSceneParam._m0[78u].z)) + _268;
        _362 = _486 * _269;
    }
    else
    {
        _356 = _266;
        _358 = _267;
        _360 = _268;
        _362 = _269;
    }
    float _374 = roundEven(cbMatDynParam._m0[0u].y);
    bool _375 = _374 == 3.0;
    float _377 = log2(_362);
    float _384 = exp2(_377 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0)));
    float _385 = exp2(_377 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0)));
    float _386 = exp2(_377 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0)));
    float _396 = (_374 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _396 * (_375 ? _384 : (_384 + (cbSceneParam._m0[72u].w * _356)));
    SV_Target.y = _396 * (_375 ? _385 : (_385 + (cbSceneParam._m0[72u].w * _358)));
    SV_Target.z = _396 * (_375 ? _386 : (_386 + (cbSceneParam._m0[72u].w * _360)));
    SV_Target.w = _241;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _241;
}


