#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SHL_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _663;
float _664;
float _665;
float _666;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _120 = texture(sampler2D(M_SHL_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _123 = _120.x;
    float _124 = _120.y;
    float _125 = _120.z;
    float _127 = _120.w * cbMtdParam._m0[9u].x;
    float _135 = (cbMtdParam._m0[9u].y * _123) * cbMtdParam._m0[9u].z;
    float _137 = (cbMtdParam._m0[9u].y * _124) * cbMtdParam._m0[9u].z;
    float _139 = (cbMtdParam._m0[9u].y * _125) * cbMtdParam._m0[9u].z;
    float _141 = isnan(_137) ? _135 : (isnan(_135) ? _137 : max(_135, _137));
    float _142 = isnan(_139) ? _141 : (isnan(_141) ? _139 : max(_141, _139));
    float _145;
    float _147;
    if (_142 < 1.1920928955078125e-07)
    {
        _145 = 0.0;
        _147 = 0.0;
    }
    else
    {
        float _173 = isnan(_137) ? _135 : (isnan(_135) ? _137 : min(_135, _137));
        float _175 = _142 - (isnan(_139) ? _173 : (isnan(_173) ? _139 : min(_173, _139)));
        float _148 = _175 / _142;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_175 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _148;
        }
        else
        {
            float _483;
            if (_142 == _135)
            {
                _483 = (((cbMtdParam._m0[9u].y * (_124 - _125)) * cbMtdParam._m0[9u].z) / _175) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_15_10_ladder;
                if (_142 == _137)
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[9u].y * (_125 - _123)) * cbMtdParam._m0[9u].z) / _175) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[9u].y * (_123 - _124)) * cbMtdParam._m0[9u].z) / _175) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _483 = frontier_phi_15_10_ladder;
            }
            float _488 = (_483 < 0.0) ? (_483 + 1.0) : _483;
            frontier_phi_1_2_ladder = _488 - floor(_488);
            frontier_phi_1_2_ladder_1 = _148;
        }
        _145 = frontier_phi_1_2_ladder;
        _147 = frontier_phi_1_2_ladder_1;
    }
    float _149 = _147 + cbMtdParam._m0[10u].x;
    float _153 = fract(cbMtdParam._m0[9u].w + _145) * 6.0;
    uint _156 = uint(int(floor(_153)));
    float _158 = _153 - float(int(_156));
    float _161 = (1.0 - _149) * _142;
    float _164 = (1.0 - (_158 * _149)) * _142;
    float _168 = (1.0 - ((1.0 - _158) * _149)) * _142;
    float _177;
    float _179;
    float _180;
    if ((_156 == 0u) || (_156 == 6u))
    {
        _177 = _142;
        _179 = _168;
        _180 = _161;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_156 == 1u)
        {
            frontier_phi_3_4_ladder = _164;
            frontier_phi_3_4_ladder_1 = _142;
            frontier_phi_3_4_ladder_2 = _161;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_156 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _161;
                frontier_phi_3_4_ladder_8_ladder_1 = _142;
                frontier_phi_3_4_ladder_8_ladder_2 = _168;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_14_ladder;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
                if (_156 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _161;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _164;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _142;
                }
                else
                {
                    bool _559 = _156 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _559 ? _168 : _142;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _161;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _559 ? _142 : _164;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_14_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _177 = frontier_phi_3_4_ladder;
        _179 = frontier_phi_3_4_ladder_1;
        _180 = frontier_phi_3_4_ladder_2;
    }
    float _695 = isnan(0.0) ? TEXCOORD_1.z : (isnan(TEXCOORD_1.z) ? 0.0 : max(TEXCOORD_1.z, 0.0));
    float _201 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _242 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _252 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _242);
    float _253 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _242);
    float _254 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _242);
    vec4 _259 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _261 = _259.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _341 = sqrt(((_252 * _252) + (_253 * _253)) + (_254 * _254));
        float _348 = (cbMatDynParam._m0[5u].x * _341) + cbMatDynParam._m0[5u].y;
        float _706 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
        float _349 = isnan(1.0) ? _706 : (isnan(_706) ? 1.0 : min(_706, 1.0));
        float _353 = (cbMatDynParam._m0[5u].z * _341) + cbMatDynParam._m0[5u].w;
        float _717 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _717 : (isnan(_717) ? 1.0 : min(_717, 1.0))) - _349)) + _349) < ((_261 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _280 = uint(roundEven(NORMAL.w)) * 13u;
    uint _282 = _280 + 9u;
    uint _283 = _282 + uint(cbMatDynParam._m0[0u].w);
    float _289 = (_177 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_283].x;
    float _290 = (_179 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_283].y;
    float _291 = (_180 * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_283].z;
    float _292 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _293 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _294 = isnan(0.0) ? _291 : (isnan(_291) ? 0.0 : max(_291, 0.0));
    float _299 = cbInstanceData._m0[_280 + 6u].w * (isnan(1.0) ? _695 : (isnan(_695) ? 1.0 : min(_695, 1.0)));
    float _305 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _306 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _321 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_305, _306, (log2((isnan(cbSceneParam._m0[77u].w) ? _201 : (isnan(_201) ? cbSceneParam._m0[77u].w : min(_201, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _324 = _321.x;
    float _325 = _321.y;
    float _326 = _321.z;
    float _327 = _321.w;
    float _417;
    float _419;
    float _421;
    float _423;
    if (_201 > cbSceneParam._m0[78u].w)
    {
        float _378 = isnan(_201) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _201 : min(cbSceneParam._m0[80u].w, _201));
        float _379 = _378 / _201;
        float _390 = _379 * _252;
        float _391 = _253 * _379;
        float _392 = (-0.0) - _391;
        float _394 = _379 * _254;
        float _396 = (cbSceneParam._m0[77u].w * _392) / _378;
        float _397 = _396 + cbSceneParam._m0[79u].w;
        float _398 = cbSceneParam._m0[79u].w - _391;
        float _404 = sqrt(((_390 * _390) + (_391 * _391)) + (_394 * _394));
        float _407 = (1.0 - (cbSceneParam._m0[77u].w / _378)) * _404;
        float _413 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _415 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _561;
        if (abs((_392 - _396) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _561 = ((((_397 > 0.0) ? exp2(_413 * _397) : (2.0 - exp2(_415 * _397))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _407;
        }
        else
        {
            float _514 = 1.0 / cbSceneParam._m0[80u].x;
            float _515 = isnan(_398) ? _397 : (isnan(_397) ? _398 : max(_397, _398));
            float _516 = isnan(_398) ? _397 : (isnan(_397) ? _398 : min(_397, _398));
            float _525 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : min(_515, 0.0));
            float _526 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : min(_516, 0.0));
            _561 = ((abs(_404 / _392) * cbSceneParam._m0[80u].y) * ((((_525 - _526) * 2.0) - ((exp2(_413 * (isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0)))) - exp2(_413 * (isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0))))) * _514)) - ((exp2(_415 * _525) - exp2(_415 * _526)) * _514))) + (_407 * cbSceneParam._m0[80u].z);
        }
        vec4 _563 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_305, _306, 1.0), 0.0);
        float _572 = exp2((_561 * (-1.44269502162933349609375)) * (1.0 - _563.w));
        float _573 = log2(_572);
        float _589 = log2(_327);
        _417 = (exp2(_589 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_573 * cbSceneParam._m0[78u].x)) * _563.x) / cbSceneParam._m0[78u].x)) + _324;
        _419 = (exp2(_589 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_573 * cbSceneParam._m0[78u].y)) * _563.y) / cbSceneParam._m0[78u].y)) + _325;
        _421 = (exp2(_589 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_573 * cbSceneParam._m0[78u].z)) * _563.z) / cbSceneParam._m0[78u].z)) + _326;
        _423 = _572 * _327;
    }
    else
    {
        _417 = _324;
        _419 = _325;
        _421 = _326;
        _423 = _327;
    }
    bool _599;
    vec4 _433;
    vec4 _457;
    float _459;
    float _464;
    float _465;
    float _466;
    float _467;
    bool _478;
    for (;;)
    {
        _433 = cbMatDynParam._m0[0u];
        float _435 = roundEven(_433.y);
        bool _436 = _435 == 3.0;
        float _438 = log2(_423);
        float _445 = exp2(_438 * cbSceneParam._m0[78u].x) * _292;
        float _446 = exp2(_438 * cbSceneParam._m0[78u].y) * _293;
        float _447 = exp2(_438 * cbSceneParam._m0[78u].z) * _294;
        float _454 = _261 + (-0.5);
        _457 = cbMtdParam._m0[1u];
        _459 = _457.y * _454;
        float _463 = (_435 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _464 = _463 * (_436 ? _445 : (_445 + (cbSceneParam._m0[72u].w * _417)));
        _465 = _463 * (_436 ? _446 : (_446 + (cbSceneParam._m0[72u].w * _419)));
        _466 = _463 * (_436 ? _447 : (_447 + (cbSceneParam._m0[72u].w * _421)));
        _467 = _454 * 0.999000012874603271484375;
        _478 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_478)
        {
            if ((cbInstanceData._m0[_280 + 7u].x + _467) < 0.5)
            {
                _599 = true;
                break;
            }
        }
        uint _551 = _282 + uint(_433.w);
        if ((cbInstanceData._m0[_551].w < 1.0) && ((cbInstanceData._m0[_551].w + _467) < 0.5))
        {
            _599 = true;
            break;
        }
        if ((_459 + _127) < _457.x)
        {
            _599 = true;
            break;
        }
        _599 = false;
        break;
    }
    float _604;
    if (_599)
    {
        discard_state = true;
        _604 = 0.0;
    }
    else
    {
        _604 = _299;
    }
    SV_Target.x = _464;
    SV_Target.y = _465;
    SV_Target.z = _466;
    SV_Target.w = _604;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _299;
    discard_exit();
}


