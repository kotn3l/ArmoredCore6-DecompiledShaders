#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _779;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _175;
    float _176;
    float _177;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
    }
    else
    {
        _175 = _168;
        _176 = _169;
        _177 = _170;
    }
    vec4 _197 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _203 = _197.x * cbMtdParam._m0[9u].x;
    float _204 = _197.y * cbMtdParam._m0[9u].y;
    float _205 = _197.z * cbMtdParam._m0[9u].z;
    vec4 _226 = texture(sampler2D(M_A_M0_HSV0_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _228 = _226.x;
    float _229 = _226.y;
    float _230 = _226.z;
    float _231 = cbMtdParam._m0[11u].w * cbMtdParam._m0[12u].x;
    float _232 = _231 * _228;
    float _233 = _231 * _229;
    float _234 = _231 * _230;
    float _235 = isnan(_233) ? _232 : (isnan(_232) ? _233 : max(_232, _233));
    float _236 = isnan(_234) ? _235 : (isnan(_235) ? _234 : max(_235, _234));
    float _239;
    float _241;
    if (_236 < 1.1920928955078125e-07)
    {
        _239 = 0.0;
        _241 = 0.0;
    }
    else
    {
        float _267 = isnan(_233) ? _232 : (isnan(_232) ? _233 : min(_232, _233));
        float _269 = _236 - (isnan(_234) ? _267 : (isnan(_267) ? _234 : min(_267, _234)));
        float _242 = _269 / _236;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_269 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = _242;
            frontier_phi_3_4_ladder_1 = 0.0;
        }
        else
        {
            float _1180;
            if (_236 == _232)
            {
                _1180 = ((_231 * (_229 - _230)) / _269) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_16_12_ladder;
                if (_236 == _233)
                {
                    frontier_phi_16_12_ladder = (((_231 * (_230 - _228)) / _269) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_16_12_ladder = (((_231 * (_228 - _229)) / _269) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1180 = frontier_phi_16_12_ladder;
            }
            float _1185 = (_1180 < 0.0) ? (_1180 + 1.0) : _1180;
            frontier_phi_3_4_ladder = _242;
            frontier_phi_3_4_ladder_1 = _1185 - floor(_1185);
        }
        _239 = frontier_phi_3_4_ladder_1;
        _241 = frontier_phi_3_4_ladder;
    }
    float _243 = _241 + cbMtdParam._m0[11u].y;
    float _247 = fract(cbMtdParam._m0[11u].z + _239) * 6.0;
    uint _250 = uint(int(floor(_247)));
    float _252 = _247 - float(int(_250));
    float _255 = (1.0 - _243) * _236;
    float _258 = (1.0 - (_252 * _243)) * _236;
    float _262 = (1.0 - ((1.0 - _252) * _243)) * _236;
    float _271;
    float _273;
    float _274;
    if ((_250 == 0u) || (_250 == 6u))
    {
        _271 = _236;
        _273 = _262;
        _274 = _255;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_250 == 1u)
        {
            frontier_phi_5_6_ladder = _236;
            frontier_phi_5_6_ladder_1 = _255;
            frontier_phi_5_6_ladder_2 = _258;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_250 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _236;
                frontier_phi_5_6_ladder_10_ladder_1 = _262;
                frontier_phi_5_6_ladder_10_ladder_2 = _255;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_15_ladder;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
                if (_250 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _258;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _236;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _255;
                }
                else
                {
                    bool _1226 = _250 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _255;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _1226 ? _236 : _258;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _1226 ? _262 : _236;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_15_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _271 = frontier_phi_5_6_ladder_2;
        _273 = frontier_phi_5_6_ladder;
        _274 = frontier_phi_5_6_ladder_1;
    }
    float _279 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _280 = _279 * _175;
    float _281 = _279 * _176;
    float _282 = _279 * _177;
    float _3286 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _3297 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _3308 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _301 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _343 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _353 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _343);
    float _354 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _343);
    float _355 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _343);
    float _359 = inversesqrt(dot(vec3(_353, _354, _355), vec3(_353, _354, _355)));
    float _360 = _353 * _359;
    float _361 = _354 * _359;
    float _362 = _355 * _359;
    float _368 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _369 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _389 = fma(_282, cbSceneParam._m0[5u].z, fma(_281, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _280));
    float _392 = fma(_282, cbSceneParam._m0[6u].z, fma(_281, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _280));
    float _395 = fma(_282, cbSceneParam._m0[7u].z, fma(_281, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _280));
    uint _408 = uint(roundEven(NORMAL.w)) * 13u;
    uint _409 = _408 + 9u;
    uint _410 = _409 + uint(cbMatDynParam._m0[0u].w);
    float _416 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3286 : (isnan(_3286) ? 1.0 : min(_3286, 1.0)))) * cbInstanceData._m0[_410].x;
    float _417 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3297 : (isnan(_3297) ? 1.0 : min(_3297, 1.0)))) * cbInstanceData._m0[_410].y;
    float _418 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3308 : (isnan(_3308) ? 1.0 : min(_3308, 1.0)))) * cbInstanceData._m0[_410].z;
    float _3319 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _419 = isnan(1.0) ? _3319 : (isnan(_3319) ? 1.0 : min(_3319, 1.0));
    float _3330 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _420 = isnan(1.0) ? _3330 : (isnan(_3330) ? 1.0 : min(_3330, 1.0));
    float _3341 = isnan(0.0) ? _418 : (isnan(_418) ? 0.0 : max(_418, 0.0));
    float _421 = isnan(1.0) ? _3341 : (isnan(_3341) ? 1.0 : min(_3341, 1.0));
    vec4 _430 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _368, cbSceneParam._m0[86u].y * _369));
    float _433 = _430.x * TEXCOORD.z;
    float _434 = dot(vec3(_280, _281, _282), vec3(_360, _361, _362));
    float _437 = _434 * 2.0;
    float _442 = (_437 * _280) - _360;
    float _443 = (_437 * _281) - _361;
    float _444 = (_437 * _282) - _362;
    float _466 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _470 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _474 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _778;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _503 = fma(_474, cbModelParam._m0[26u].z, fma(_470, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _466));
        float _507 = fma(_474, cbModelParam._m0[27u].z, fma(_470, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _466));
        float _511 = fma(_474, cbModelParam._m0[28u].z, fma(_470, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _466));
        float _536 = _466 + _280;
        float _537 = _470 + _281;
        float _538 = _474 + _282;
        float _548 = fma(_538, cbModelParam._m0[26u].z, fma(_537, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _536)) - _503;
        float _549 = fma(_538, cbModelParam._m0[27u].z, fma(_537, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _536)) - _507;
        float _550 = fma(_538, cbModelParam._m0[28u].z, fma(_537, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _536)) - _511;
        float _554 = inversesqrt(dot(vec3(_548, _549, _550), vec3(_548, _549, _550)));
        float _567 = ((_554 * _548) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_503 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _568 = ((_554 * _549) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_507 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _569 = ((_554 * _550) / cbModelParam._m0[34u].z) + ((((((_511 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _572 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_567, _568, _569), 0.0);
        vec4 _579 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_567, _568, _569), 0.0);
        vec4 _586 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_567, _568, _569), 0.0);
        vec4 _593 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_567, _568, _569), 0.0);
        float _606 = exp2((_572.w + (-0.5)) * 20.0) * 2.0;
        float _607 = _606 * (_572.x + (-0.5));
        float _608 = _606 * (_572.y + (-0.5));
        float _609 = _606 * (_572.z + (-0.5));
        float _616 = exp2((_579.w + (-0.5)) * 20.0) * 2.0;
        float _617 = _616 * (_579.x + (-0.5));
        float _618 = _616 * (_579.y + (-0.5));
        float _619 = _616 * (_579.z + (-0.5));
        float _626 = exp2((_586.w + (-0.5)) * 20.0) * 2.0;
        float _627 = _626 * (_586.x + (-0.5));
        float _628 = _626 * (_586.y + (-0.5));
        float _629 = _626 * (_586.z + (-0.5));
        float _636 = exp2((_593.w + (-0.5)) * 20.0) * 2.0;
        float _637 = _636 * (_593.x + (-0.5));
        float _638 = _636 * (_593.y + (-0.5));
        float _639 = _636 * (_593.z + (-0.5));
        float _640 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
        float _641 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
        float _642 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
        float _643 = _607 * 0.5;
        float _644 = _617 * 0.5;
        float _645 = _627 * 0.5;
        float _646 = dot(vec3(_643, _644, _645), vec3(_643, _644, _645));
        float _651 = (_646 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_646);
        float _660 = (dot(vec3(_280, _281, _282), vec3(_651 * _643, _651 * _644, _651 * _645)) + 1.0) * 0.5;
        float _3367 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
        float _670 = sqrt(((_644 * _644) + (_643 * _643)) + (_645 * _645)) / (_640 + 9.9999997473787516355514526367188e-06);
        float _3378 = isnan(0.0) ? _670 : (isnan(_670) ? 0.0 : max(_670, 0.0));
        float _671 = isnan(1.0) ? _3378 : (isnan(_3378) ? 1.0 : min(_3378, 1.0));
        float _672 = _671 * 2.0;
        float _676 = (1.0 - _671) / (_671 + 1.0);
        float _3389 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
        float _677 = isnan(1.0) ? _3389 : (isnan(_3389) ? 1.0 : min(_3389, 1.0));
        float _686 = ((((1.0 - _677) * (_672 + 2.0)) * exp2(log2(isnan(1.0) ? _3367 : (isnan(_3367) ? 1.0 : min(_3367, 1.0))) * (_672 + 1.0))) + _677) * _640;
        float _687 = _608 * 0.5;
        float _688 = _618 * 0.5;
        float _689 = _628 * 0.5;
        float _690 = dot(vec3(_687, _688, _689), vec3(_687, _688, _689));
        float _695 = (_690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_690);
        float _703 = (dot(vec3(_280, _281, _282), vec3(_695 * _687, _695 * _688, _695 * _689)) + 1.0) * 0.5;
        float _3400 = isnan(0.0) ? _703 : (isnan(_703) ? 0.0 : max(_703, 0.0));
        float _712 = sqrt(((_688 * _688) + (_687 * _687)) + (_689 * _689)) / (_641 + 9.9999997473787516355514526367188e-06);
        float _3411 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
        float _713 = isnan(1.0) ? _3411 : (isnan(_3411) ? 1.0 : min(_3411, 1.0));
        float _714 = _713 * 2.0;
        float _718 = (1.0 - _713) / (_713 + 1.0);
        float _3422 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
        float _719 = isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0));
        float _728 = ((((1.0 - _719) * (_714 + 2.0)) * exp2(log2(isnan(1.0) ? _3400 : (isnan(_3400) ? 1.0 : min(_3400, 1.0))) * (_714 + 1.0))) + _719) * _641;
        float _729 = _609 * 0.5;
        float _730 = _619 * 0.5;
        float _731 = _629 * 0.5;
        float _732 = dot(vec3(_729, _730, _731), vec3(_729, _730, _731));
        float _737 = (_732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_732);
        float _745 = (dot(vec3(_280, _281, _282), vec3(_737 * _729, _737 * _730, _737 * _731)) + 1.0) * 0.5;
        float _3433 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
        float _754 = sqrt(((_730 * _730) + (_729 * _729)) + (_731 * _731)) / (_642 + 9.9999997473787516355514526367188e-06);
        float _3444 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
        float _755 = isnan(1.0) ? _3444 : (isnan(_3444) ? 1.0 : min(_3444, 1.0));
        float _756 = _755 * 2.0;
        float _760 = (1.0 - _755) / (_755 + 1.0);
        float _3455 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
        float _761 = isnan(1.0) ? _3455 : (isnan(_3455) ? 1.0 : min(_3455, 1.0));
        float _770 = ((((1.0 - _761) * (_756 + 2.0)) * exp2(log2(isnan(1.0) ? _3433 : (isnan(_3433) ? 1.0 : min(_3433, 1.0))) * (_756 + 1.0))) + _761) * _642;
        _778 = _609;
        _780 = _608;
        _781 = _607;
        _782 = _619;
        _783 = _618;
        _784 = _617;
        _785 = _629;
        _786 = _628;
        _787 = _627;
        _788 = _642;
        _789 = _641;
        _790 = _640;
        _791 = cbModelParam._m0[36u].z * (isnan(0.0) ? _686 : (isnan(_686) ? 0.0 : max(_686, 0.0)));
        _792 = cbModelParam._m0[36u].z * (isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0)));
        _793 = cbModelParam._m0[36u].z * (isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0)));
    }
    else
    {
        _778 = _779;
        _780 = _779;
        _781 = _779;
        _782 = _779;
        _783 = _779;
        _784 = _779;
        _785 = _779;
        _786 = _779;
        _787 = _779;
        _788 = _779;
        _789 = _779;
        _790 = _779;
        _791 = 0.0;
        _792 = 0.0;
        _793 = 0.0;
    }
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    float _1106;
    float _1107;
    float _1108;
    float _1109;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _826 = fma(_474, cbModelParam._m0[30u].z, fma(_470, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _466));
        float _830 = fma(_474, cbModelParam._m0[31u].z, fma(_470, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _466));
        float _834 = fma(_474, cbModelParam._m0[32u].z, fma(_470, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _466));
        float _857 = _466 + _280;
        float _858 = _470 + _281;
        float _859 = _474 + _282;
        float _869 = fma(_859, cbModelParam._m0[30u].z, fma(_858, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _857)) - _826;
        float _870 = fma(_859, cbModelParam._m0[31u].z, fma(_858, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _857)) - _830;
        float _871 = fma(_859, cbModelParam._m0[32u].z, fma(_858, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _857)) - _834;
        float _875 = inversesqrt(dot(vec3(_869, _870, _871), vec3(_869, _870, _871)));
        float _888 = ((_875 * _869) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_826 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _889 = ((_875 * _870) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_830 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _890 = ((_875 * _871) / cbModelParam._m0[35u].z) + ((((((_834 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _892 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_888, _889, _890), 0.0);
        vec4 _899 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_888, _889, _890), 0.0);
        vec4 _906 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_888, _889, _890), 0.0);
        vec4 _913 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_888, _889, _890), 0.0);
        float _925 = exp2((_892.w + (-0.5)) * 20.0) * 2.0;
        float _926 = _925 * (_892.x + (-0.5));
        float _927 = _925 * (_892.y + (-0.5));
        float _928 = _925 * (_892.z + (-0.5));
        float _935 = exp2((_899.w + (-0.5)) * 20.0) * 2.0;
        float _936 = _935 * (_899.x + (-0.5));
        float _937 = _935 * (_899.y + (-0.5));
        float _938 = _935 * (_899.z + (-0.5));
        float _945 = exp2((_906.w + (-0.5)) * 20.0) * 2.0;
        float _946 = _945 * (_906.x + (-0.5));
        float _947 = _945 * (_906.y + (-0.5));
        float _948 = _945 * (_906.z + (-0.5));
        float _955 = exp2((_913.w + (-0.5)) * 20.0) * 2.0;
        float _956 = _955 * (_913.x + (-0.5));
        float _957 = _955 * (_913.y + (-0.5));
        float _958 = _955 * (_913.z + (-0.5));
        float _959 = isnan(0.0) ? _956 : (isnan(_956) ? 0.0 : max(_956, 0.0));
        float _960 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        float _961 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
        float _962 = _926 * 0.5;
        float _963 = _936 * 0.5;
        float _964 = _946 * 0.5;
        float _965 = dot(vec3(_962, _963, _964), vec3(_962, _963, _964));
        float _970 = (_965 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_965);
        float _978 = (dot(vec3(_280, _281, _282), vec3(_970 * _962, _970 * _963, _970 * _964)) + 1.0) * 0.5;
        float _3496 = isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0));
        float _987 = sqrt(((_963 * _963) + (_962 * _962)) + (_964 * _964)) / (_959 + 9.9999997473787516355514526367188e-06);
        float _3507 = isnan(0.0) ? _987 : (isnan(_987) ? 0.0 : max(_987, 0.0));
        float _988 = isnan(1.0) ? _3507 : (isnan(_3507) ? 1.0 : min(_3507, 1.0));
        float _989 = _988 * 2.0;
        float _993 = (1.0 - _988) / (_988 + 1.0);
        float _3518 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _994 = isnan(1.0) ? _3518 : (isnan(_3518) ? 1.0 : min(_3518, 1.0));
        float _1003 = ((((1.0 - _994) * (_989 + 2.0)) * exp2(log2(isnan(1.0) ? _3496 : (isnan(_3496) ? 1.0 : min(_3496, 1.0))) * (_989 + 1.0))) + _994) * _959;
        float _1004 = _927 * 0.5;
        float _1005 = _937 * 0.5;
        float _1006 = _947 * 0.5;
        float _1007 = dot(vec3(_1004, _1005, _1006), vec3(_1004, _1005, _1006));
        float _1012 = (_1007 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1007);
        float _1020 = (dot(vec3(_280, _281, _282), vec3(_1012 * _1004, _1012 * _1005, _1012 * _1006)) + 1.0) * 0.5;
        float _3529 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
        float _1029 = sqrt(((_1005 * _1005) + (_1004 * _1004)) + (_1006 * _1006)) / (_960 + 9.9999997473787516355514526367188e-06);
        float _3540 = isnan(0.0) ? _1029 : (isnan(_1029) ? 0.0 : max(_1029, 0.0));
        float _1030 = isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0));
        float _1031 = _1030 * 2.0;
        float _1035 = (1.0 - _1030) / (_1030 + 1.0);
        float _3551 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1036 = isnan(1.0) ? _3551 : (isnan(_3551) ? 1.0 : min(_3551, 1.0));
        float _1045 = ((((1.0 - _1036) * (_1031 + 2.0)) * exp2(log2(isnan(1.0) ? _3529 : (isnan(_3529) ? 1.0 : min(_3529, 1.0))) * (_1031 + 1.0))) + _1036) * _960;
        float _1046 = _928 * 0.5;
        float _1047 = _938 * 0.5;
        float _1048 = _948 * 0.5;
        float _1049 = dot(vec3(_1046, _1047, _1048), vec3(_1046, _1047, _1048));
        float _1054 = (_1049 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1049);
        float _1062 = (dot(vec3(_280, _281, _282), vec3(_1054 * _1046, _1054 * _1047, _1054 * _1048)) + 1.0) * 0.5;
        float _3562 = isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0));
        float _1071 = sqrt(((_1047 * _1047) + (_1046 * _1046)) + (_1048 * _1048)) / (_961 + 9.9999997473787516355514526367188e-06);
        float _3573 = isnan(0.0) ? _1071 : (isnan(_1071) ? 0.0 : max(_1071, 0.0));
        float _1072 = isnan(1.0) ? _3573 : (isnan(_3573) ? 1.0 : min(_3573, 1.0));
        float _1073 = _1072 * 2.0;
        float _1077 = (1.0 - _1072) / (_1072 + 1.0);
        float _3584 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1078 = isnan(1.0) ? _3584 : (isnan(_3584) ? 1.0 : min(_3584, 1.0));
        float _1087 = ((((1.0 - _1078) * (_1073 + 2.0)) * exp2(log2(isnan(1.0) ? _3562 : (isnan(_3562) ? 1.0 : min(_3562, 1.0))) * (_1073 + 1.0))) + _1078) * _961;
        _1095 = _928;
        _1096 = _927;
        _1097 = _926;
        _1098 = _938;
        _1099 = _937;
        _1100 = _936;
        _1101 = _948;
        _1102 = _947;
        _1103 = _946;
        _1104 = _961;
        _1105 = _960;
        _1106 = _959;
        _1107 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0)));
        _1108 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0)));
        _1109 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1087 : (isnan(_1087) ? 0.0 : max(_1087, 0.0)));
    }
    else
    {
        _1095 = _779;
        _1096 = _779;
        _1097 = _779;
        _1098 = _779;
        _1099 = _779;
        _1100 = _779;
        _1101 = _779;
        _1102 = _779;
        _1103 = _779;
        _1104 = _779;
        _1105 = _779;
        _1106 = _779;
        _1107 = 0.0;
        _1108 = 0.0;
        _1109 = 0.0;
    }
    float _1119 = (cbModelParam._m0[1u].x * (_1107 - _791)) + _791;
    float _1120 = (cbModelParam._m0[1u].x * (_1108 - _792)) + _792;
    float _1121 = (cbModelParam._m0[1u].x * (_1109 - _793)) + _793;
    float _1142 = fma(_1121, cbSceneParam._m0[89u].z, fma(_1120, cbSceneParam._m0[89u].y, _1119 * cbSceneParam._m0[89u].x));
    float _1145 = fma(_1121, cbSceneParam._m0[90u].z, fma(_1120, cbSceneParam._m0[90u].y, _1119 * cbSceneParam._m0[90u].x));
    float _1148 = fma(_1121, cbSceneParam._m0[91u].z, fma(_1120, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1119));
    float _1163 = _442 * 0.5;
    float _1164 = _443 * 0.5;
    float _1165 = _444 * 0.5;
    float _1166 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_1097, _1100, _1103, _1106));
    float _1169 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_1096, _1099, _1102, _1105));
    float _1172 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_1095, _1098, _1101, _1104));
    float _1224;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1197 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_778, _782, _785, _788));
        float _1201 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_780, _783, _786, _789));
        float _1205 = dot(vec4(_1163, _1164, _1165, 1.0), vec4(_781, _784, _787, _790));
        float _1212 = dot(vec4(cbModelParam._m0[39u]), vec4(_1163, _1164, _1165, 1.0));
        _1224 = dot(vec3(isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0)), isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0)), isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1212) ? 0.0 : (isnan(0.0) ? _1212 : max(0.0, _1212))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1224 = 1.0;
    }
    float _1237;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1228 = dot(vec4(cbModelParam._m0[40u]), vec4(_1163, _1164, _1165, 1.0));
        _1237 = dot(vec3(isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0)), isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)), isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1228) ? 0.0 : (isnan(0.0) ? _1228 : max(0.0, _1228))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1237 = 1.0;
    }
    float _1241 = (_1237 * cbModelParam._m0[1u].x) + (_1224 * (1.0 - cbModelParam._m0[1u].x));
    float _1250 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1332;
    float _1334;
    float _1336;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1299 = fma(_474, cbModelParam._m0[13u].z, fma(_470, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _466)) + cbModelParam._m0[13u].w;
        float _1303 = fma(_474, cbModelParam._m0[14u].z, fma(_470, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _466)) + cbModelParam._m0[14u].w;
        float _1307 = fma(_474, cbModelParam._m0[15u].z, fma(_470, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _466)) + cbModelParam._m0[15u].w;
        float _1310 = fma(_444, cbModelParam._m0[13u].z, fma(_443, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _442));
        float _1313 = fma(_444, cbModelParam._m0[14u].z, fma(_443, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _442));
        float _1316 = fma(_444, cbModelParam._m0[15u].z, fma(_443, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _442));
        float _1342;
        if (_1310 > 0.0)
        {
            _1342 = abs((1.0 - _1299) / _1310);
        }
        else
        {
            float frontier_phi_29_27_ladder;
            if (_1310 < 0.0)
            {
                frontier_phi_29_27_ladder = abs((_1299 + 1.0) / _1310);
            }
            else
            {
                frontier_phi_29_27_ladder = 5000.0;
            }
            _1342 = frontier_phi_29_27_ladder;
        }
        float _1516;
        if (_1313 > 0.0)
        {
            _1516 = abs((1.0 - _1303) / _1313);
        }
        else
        {
            float frontier_phi_38_34_ladder;
            if (_1313 < 0.0)
            {
                frontier_phi_38_34_ladder = abs((_1303 + 1.0) / _1313);
            }
            else
            {
                frontier_phi_38_34_ladder = 5000.0;
            }
            _1516 = frontier_phi_38_34_ladder;
        }
        float _1812;
        if (_1316 > 0.0)
        {
            _1812 = abs((1.0 - _1307) / _1316);
        }
        else
        {
            float frontier_phi_50_45_ladder;
            if (_1316 < 0.0)
            {
                frontier_phi_50_45_ladder = abs((_1307 + 1.0) / _1316);
            }
            else
            {
                frontier_phi_50_45_ladder = 5000.0;
            }
            _1812 = frontier_phi_50_45_ladder;
        }
        float _1814 = isnan(_1516) ? _1342 : (isnan(_1342) ? _1516 : min(_1342, _1516));
        float _1815 = isnan(_1812) ? _1814 : (isnan(_1814) ? _1812 : min(_1814, _1812));
        float _1819 = (_1815 * _1310) + _1299;
        float _1820 = (_1815 * _1313) + _1303;
        float _1821 = (_1815 * _1316) + _1307;
        float _1822 = _1815 * 9.9999997473787516355514526367188e-05;
        float _1824 = (-1.0) - _1822;
        float _1826 = _1822 + 1.0;
        float frontier_phi_28_50_ladder;
        float frontier_phi_28_50_ladder_1;
        float frontier_phi_28_50_ladder_2;
        if ((_1821 > _1826) || ((_1821 < _1824) || ((_1820 > _1826) || ((_1820 < _1824) || ((_1819 < _1824) || (_1819 > _1826))))))
        {
            frontier_phi_28_50_ladder = 0.0;
            frontier_phi_28_50_ladder_1 = 0.0;
            frontier_phi_28_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1966 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1821, cbModelParam._m0[9u].z, fma(_1820, cbModelParam._m0[9u].y, _1819 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1821, cbModelParam._m0[10u].z, fma(_1820, cbModelParam._m0[10u].y, _1819 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1821, cbModelParam._m0[11u].z, fma(_1820, cbModelParam._m0[11u].y, _1819 * cbModelParam._m0[11u].x))), _1250);
            frontier_phi_28_50_ladder = _1966.z * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_1 = _1966.y * cbModelParam._m0[1u].y;
            frontier_phi_28_50_ladder_2 = _1966.x * cbModelParam._m0[1u].y;
        }
        _1332 = frontier_phi_28_50_ladder_2;
        _1334 = frontier_phi_28_50_ladder_1;
        _1336 = frontier_phi_28_50_ladder;
    }
    else
    {
        vec4 _1320 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_442, _443, _444), _1250);
        _1332 = _1320.x * cbModelParam._m0[1u].y;
        _1334 = _1320.y * cbModelParam._m0[1u].y;
        _1336 = _1320.z * cbModelParam._m0[1u].y;
    }
    float _1339 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1432;
    float _1434;
    float _1436;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1396 = fma(_474, cbModelParam._m0[21u].z, fma(_470, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _466)) + cbModelParam._m0[21u].w;
        float _1400 = fma(_474, cbModelParam._m0[22u].z, fma(_470, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _466)) + cbModelParam._m0[22u].w;
        float _1404 = fma(_474, cbModelParam._m0[23u].z, fma(_470, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _466)) + cbModelParam._m0[23u].w;
        float _1407 = fma(_444, cbModelParam._m0[21u].z, fma(_443, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _442));
        float _1410 = fma(_444, cbModelParam._m0[22u].z, fma(_443, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _442));
        float _1413 = fma(_444, cbModelParam._m0[23u].z, fma(_443, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _442));
        float _1521;
        if (_1407 > 0.0)
        {
            _1521 = abs((1.0 - _1396) / _1407);
        }
        else
        {
            float frontier_phi_40_36_ladder;
            if (_1407 < 0.0)
            {
                frontier_phi_40_36_ladder = abs((_1396 + 1.0) / _1407);
            }
            else
            {
                frontier_phi_40_36_ladder = 5000.0;
            }
            _1521 = frontier_phi_40_36_ladder;
        }
        float _1839;
        if (_1410 > 0.0)
        {
            _1839 = abs((1.0 - _1400) / _1410);
        }
        else
        {
            float frontier_phi_52_47_ladder;
            if (_1410 < 0.0)
            {
                frontier_phi_52_47_ladder = abs((_1400 + 1.0) / _1410);
            }
            else
            {
                frontier_phi_52_47_ladder = 5000.0;
            }
            _1839 = frontier_phi_52_47_ladder;
        }
        float _2112;
        if (_1413 > 0.0)
        {
            _2112 = abs((1.0 - _1404) / _1413);
        }
        else
        {
            float frontier_phi_62_59_ladder;
            if (_1413 < 0.0)
            {
                frontier_phi_62_59_ladder = abs((_1404 + 1.0) / _1413);
            }
            else
            {
                frontier_phi_62_59_ladder = 5000.0;
            }
            _2112 = frontier_phi_62_59_ladder;
        }
        float _2114 = isnan(_1839) ? _1521 : (isnan(_1521) ? _1839 : min(_1521, _1839));
        float _2115 = isnan(_2112) ? _2114 : (isnan(_2114) ? _2112 : min(_2114, _2112));
        float _2119 = (_2115 * _1407) + _1396;
        float _2120 = (_2115 * _1410) + _1400;
        float _2121 = (_2115 * _1413) + _1404;
        float _2122 = _2115 * 9.9999997473787516355514526367188e-05;
        float _2123 = (-1.0) - _2122;
        float _2125 = _2122 + 1.0;
        float frontier_phi_37_62_ladder;
        float frontier_phi_37_62_ladder_1;
        float frontier_phi_37_62_ladder_2;
        if ((_2121 > _2125) || ((_2121 < _2123) || ((_2120 > _2125) || ((_2120 < _2123) || ((_2119 < _2123) || (_2119 > _2125))))))
        {
            frontier_phi_37_62_ladder = 0.0;
            frontier_phi_37_62_ladder_1 = 0.0;
            frontier_phi_37_62_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2212 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2121, cbModelParam._m0[17u].z, fma(_2120, cbModelParam._m0[17u].y, _2119 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2121, cbModelParam._m0[18u].z, fma(_2120, cbModelParam._m0[18u].y, _2119 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2121, cbModelParam._m0[19u].z, fma(_2120, cbModelParam._m0[19u].y, _2119 * cbModelParam._m0[19u].x))), _1339);
            frontier_phi_37_62_ladder = _2212.z * cbModelParam._m0[1u].z;
            frontier_phi_37_62_ladder_1 = _2212.y * cbModelParam._m0[1u].z;
            frontier_phi_37_62_ladder_2 = _2212.x * cbModelParam._m0[1u].z;
        }
        _1432 = frontier_phi_37_62_ladder_2;
        _1434 = frontier_phi_37_62_ladder_1;
        _1436 = frontier_phi_37_62_ladder;
    }
    else
    {
        vec4 _1416 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_442, _443, _444), _1339);
        _1432 = _1416.x * cbModelParam._m0[1u].z;
        _1434 = _1416.y * cbModelParam._m0[1u].z;
        _1436 = _1416.z * cbModelParam._m0[1u].z;
    }
    float _1448 = _433 * 0.01200000010430812835693359375;
    float _1450 = _1448 * ((cbModelParam._m0[1u].w * (_1432 - _1332)) + _1332);
    float _1451 = _1448 * ((cbModelParam._m0[1u].w * (_1434 - _1334)) + _1334);
    float _1452 = _1448 * ((cbModelParam._m0[1u].w * (_1436 - _1336)) + _1336);
    float _1455 = fma(_1452, cbSceneParam._m0[89u].z, fma(_1451, cbSceneParam._m0[89u].y, _1450 * cbSceneParam._m0[89u].x));
    float _1458 = fma(_1452, cbSceneParam._m0[90u].z, fma(_1451, cbSceneParam._m0[90u].y, _1450 * cbSceneParam._m0[90u].x));
    float _1461 = fma(_1452, cbSceneParam._m0[91u].z, fma(_1451, cbSceneParam._m0[91u].y, _1450 * cbSceneParam._m0[91u].x));
    float _1495 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1499 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1503 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1507 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1508 = _1495 / _1507;
    float _1509 = _1499 / _1507;
    float _1510 = _1503 / _1507;
    float _1657;
    float _1658;
    float _1659;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1537 = ((uint(_1510 > cbSceneParam._m0[59u].y) + uint(_1510 > cbSceneParam._m0[59u].x)) + uint(_1510 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1538 = _1537 + 43u;
        uint _1546 = _1537 + 44u;
        uint _1554 = _1537 + 45u;
        uint _1562 = _1537 + 46u;
        float _1573 = fma(_1507, cbSceneParam._m0[_1538].w, fma(_1503, cbSceneParam._m0[_1538].z, fma(_1499, cbSceneParam._m0[_1538].y, _1495 * cbSceneParam._m0[_1538].x)));
        float _1577 = fma(_1507, cbSceneParam._m0[_1546].w, fma(_1503, cbSceneParam._m0[_1546].z, fma(_1499, cbSceneParam._m0[_1546].y, _1495 * cbSceneParam._m0[_1546].x)));
        float _1585 = fma(_1507, cbSceneParam._m0[_1562].w, fma(_1503, cbSceneParam._m0[_1562].z, fma(_1499, cbSceneParam._m0[_1562].y, _1495 * cbSceneParam._m0[_1562].x)));
        float _1590 = cbSceneParam._m0[33u].z * _1585;
        float _1592 = cbSceneParam._m0[33u].w * _1585;
        float _1595 = fma(_1507, cbSceneParam._m0[_1554].w, fma(_1503, cbSceneParam._m0[_1554].z, fma(_1499, cbSceneParam._m0[_1554].y, _1495 * cbSceneParam._m0[_1554].x))) / _1585;
        float _1643 = (cbSceneParam._m0[33u].x - sqrt(((_1509 * _1509) + (_1508 * _1508)) + (_1510 * _1510))) * cbSceneParam._m0[33u].y;
        float _3710 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
        float _1650 = (isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1590 + _1573) / _1585, (_1592 + _1577) / _1585), _1595), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1592 + _1573) / _1585, (_1577 - _1590) / _1585), _1595), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1573 - _1590) / _1585, (_1577 - _1592) / _1585), _1595), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1573 - _1592) / _1585, (_1590 + _1577) / _1585), _1595), 0.0)).x), vec4(0.25)));
        _1657 = 1.0 - (_1650 * cbSceneParam._m0[34u].x);
        _1658 = 1.0 - (_1650 * cbSceneParam._m0[34u].y);
        _1659 = 1.0 - (_1650 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1657 = 1.0;
        _1658 = 1.0;
        _1659 = 1.0;
    }
    float _1723;
    float _1725;
    float _1727;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1711 = fma(_1507, cbSceneParam._m0[63u].w, fma(_1503, cbSceneParam._m0[63u].z, fma(_1499, cbSceneParam._m0[63u].y, _1495 * cbSceneParam._m0[63u].x)));
        float _1712 = fma(_1507, cbSceneParam._m0[60u].w, fma(_1503, cbSceneParam._m0[60u].z, fma(_1499, cbSceneParam._m0[60u].y, _1495 * cbSceneParam._m0[60u].x))) / _1711;
        float _1713 = fma(_1507, cbSceneParam._m0[61u].w, fma(_1503, cbSceneParam._m0[61u].z, fma(_1499, cbSceneParam._m0[61u].y, _1495 * cbSceneParam._m0[61u].x))) / _1711;
        float frontier_phi_49_48_ladder;
        float frontier_phi_49_48_ladder_1;
        float frontier_phi_49_48_ladder_2;
        if ((((_1712 >= cbSceneParam._m0[64u].x) && (_1713 >= cbSceneParam._m0[64u].y)) && (_1712 <= cbSceneParam._m0[64u].z)) && (_1713 <= cbSceneParam._m0[64u].w))
        {
            float _1852 = fma(_1507, cbSceneParam._m0[62u].w, fma(_1503, cbSceneParam._m0[62u].z, fma(_1499, cbSceneParam._m0[62u].y, _1495 * cbSceneParam._m0[62u].x))) / _1711;
            float _1856 = isnan(cbSceneParam._m0[41u].w) ? _1852 : (isnan(_1852) ? cbSceneParam._m0[41u].w : max(_1852, cbSceneParam._m0[41u].w));
            float _1899 = (cbSceneParam._m0[33u].x - sqrt(((_1509 * _1509) + (_1508 * _1508)) + (_1510 * _1510))) * cbSceneParam._m0[33u].y;
            float _3726 = isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0));
            float _1906 = (isnan(1.0) ? _3726 : (isnan(_3726) ? 1.0 : min(_3726, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1712, cbSceneParam._m0[33u].w + _1713), _1856), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1712, _1713 - cbSceneParam._m0[33u].z), _1856), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1712 - cbSceneParam._m0[33u].z, _1713 - cbSceneParam._m0[33u].w), _1856), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1712 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1713), _1856), 0.0)).x), vec4(0.25)));
            float _1910 = 1.0 - (_1906 * cbSceneParam._m0[34u].x);
            float _1911 = 1.0 - (_1906 * cbSceneParam._m0[34u].y);
            float _1912 = 1.0 - (_1906 * cbSceneParam._m0[34u].z);
            frontier_phi_49_48_ladder = isnan(_1912) ? _1659 : (isnan(_1659) ? _1912 : min(_1659, _1912));
            frontier_phi_49_48_ladder_1 = isnan(_1911) ? _1658 : (isnan(_1658) ? _1911 : min(_1658, _1911));
            frontier_phi_49_48_ladder_2 = isnan(_1910) ? _1657 : (isnan(_1657) ? _1910 : min(_1657, _1910));
        }
        else
        {
            frontier_phi_49_48_ladder = _1659;
            frontier_phi_49_48_ladder_1 = _1658;
            frontier_phi_49_48_ladder_2 = _1657;
        }
        _1723 = frontier_phi_49_48_ladder_2;
        _1725 = frontier_phi_49_48_ladder_1;
        _1727 = frontier_phi_49_48_ladder;
    }
    else
    {
        _1723 = _1657;
        _1725 = _1658;
        _1727 = _1659;
    }
    uvec4 _1732 = floatBitsToUint(cbInstanceData._m0[_408 + 5u]);
    uint _1734 = _1732.x * 14u;
    uint _1735 = _1734 + 13u;
    float _1742 = _433 + (-1.0);
    float _1748 = (cbLight._m0[_1735].x * _1742) + 1.0;
    float _1749 = (cbLight._m0[_1735].y * _1742) + 1.0;
    float _1750 = (cbLight._m0[_1735].z * _1742) + 1.0;
    float _1751 = (cbLight._m0[_1735].w * _1742) + 1.0;
    uint _1752 = _1734 + 5u;
    float _1758 = isnan(1.0) ? _1749 : (isnan(_1749) ? 1.0 : min(_1749, 1.0));
    uint _1762 = _1734 + 4u;
    float _1771 = isnan(1.0) ? _1748 : (isnan(_1748) ? 1.0 : min(_1748, 1.0));
    uint _1775 = _1734 | 1u;
    float _1786 = dot(vec3(cbLight._m0[_1734].xyz), vec3(_280, _281, _282));
    float _1789 = dot(vec3(cbLight._m0[_1775].xyz), vec3(_280, _281, _282));
    float _3762 = isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0));
    float _3773 = isnan(0.0) ? _1789 : (isnan(_1789) ? 0.0 : max(_1789, 0.0));
    float _1794 = (isnan(1.0) ? _3762 : (isnan(_3762) ? 1.0 : min(_3762, 1.0))) * 0.3183098733425140380859375;
    float _1796 = (isnan(1.0) ? _3773 : (isnan(_3773) ? 1.0 : min(_3773, 1.0))) * 0.3183098733425140380859375;
    float _1803 = ((cbLight._m0[_1752].x * _1758) * _1796) + (((cbLight._m0[_1762].x * _1723) * _1771) * _1794);
    float _1804 = ((_1758 * cbLight._m0[_1752].y) * _1796) + (((cbLight._m0[_1762].y * _1725) * _1771) * _1794);
    float _1805 = ((_1758 * cbLight._m0[_1752].z) * _1796) + (((cbLight._m0[_1762].z * _1727) * _1771) * _1794);
    uvec4 _1809 = floatBitsToUint(cbLight._m0[_1734 + 12u]);
    bool _1811 = _1809.x == 0u;
    float _1913;
    float _1915;
    float _1917;
    if (_1811)
    {
        _1913 = _1803;
        _1915 = _1804;
        _1917 = _1805;
    }
    else
    {
        uint _1921 = _1734 + 6u;
        float _1937 = (dot(vec3(cbLight._m0[_1734 + 2u].xyz), vec3(_280, _281, _282)) * 0.5) + 0.5;
        float _1938 = _1937 * _1937;
        float _3784 = isnan(0.0) ? _1938 : (isnan(_1938) ? 0.0 : max(_1938, 0.0));
        float _1939 = isnan(1.0) ? _3784 : (isnan(_3784) ? 1.0 : min(_3784, 1.0));
        float _1940 = isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0));
        _1913 = (((cbLight._m0[_1921].x * 0.3183098733425140380859375) * _1939) * _1940) + _1803;
        _1915 = (((cbLight._m0[_1921].y * 0.3183098733425140380859375) * _1939) * _1940) + _1804;
        _1917 = (((cbLight._m0[_1921].z * 0.3183098733425140380859375) * _1939) * _1940) + _1805;
    }
    bool _1920 = _1809.y == 0u;
    float _1975;
    float _1977;
    float _1979;
    if (_1920)
    {
        _1975 = _1913;
        _1977 = _1915;
        _1979 = _1917;
    }
    else
    {
        uint _2083 = _1734 + 7u;
        float _2099 = (dot(vec3(cbLight._m0[_1734 + 3u].xyz), vec3(_280, _281, _282)) * 0.5) + 0.5;
        float _2100 = _2099 * _2099;
        float _3800 = isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0));
        float _2101 = isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0));
        float _2102 = isnan(1.0) ? _1751 : (isnan(_1751) ? 1.0 : min(_1751, 1.0));
        _1975 = (((cbLight._m0[_2083].x * 0.3183098733425140380859375) * _2101) * _2102) + _1913;
        _1977 = (((cbLight._m0[_2083].y * 0.3183098733425140380859375) * _2101) * _2102) + _1915;
        _1979 = (((cbLight._m0[_2083].z * 0.3183098733425140380859375) * _2101) * _2102) + _1917;
    }
    uint _1981 = _1734 + 8u;
    float _1987 = cbLight._m0[_1734].x + _360;
    float _1988 = cbLight._m0[_1734].y + _361;
    float _1989 = cbLight._m0[_1734].z + _362;
    float _1993 = inversesqrt(dot(vec3(_1987, _1988, _1989), vec3(_1987, _1988, _1989)));
    float _1997 = dot(vec3(_280, _281, _282), vec3(cbLight._m0[_1734].xyz));
    float _3816 = isnan(0.0) ? _1997 : (isnan(_1997) ? 0.0 : max(_1997, 0.0));
    float _2000 = isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0));
    float _3827 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _2001 = isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0));
    float _2002 = dot(vec3(cbLight._m0[_1734].xyz), vec3(_1987 * _1993, _1988 * _1993, _1989 * _1993));
    float _3838 = isnan(0.0) ? _2002 : (isnan(_2002) ? 0.0 : max(_2002, 0.0));
    float _2013 = (exp2(log2(1.0 - (isnan(1.0) ? _3838 : (isnan(_3838) ? 1.0 : min(_3838, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2019 = (0.5 / ((_2000 + 9.9999999392252902907785028219223e-09) + _2001)) * _2000;
    float _3849 = isnan(0.0) ? _2019 : (isnan(_2019) ? 0.0 : max(_2019, 0.0));
    float _2021 = (isnan(1.0) ? _3849 : (isnan(_3849) ? 1.0 : min(_3849, 1.0))) * 0.31831014156341552734375;
    uint _2035 = _1734 + 9u;
    float _2041 = cbLight._m0[_1775].x + _360;
    float _2042 = cbLight._m0[_1775].y + _361;
    float _2043 = cbLight._m0[_1775].z + _362;
    float _2047 = inversesqrt(dot(vec3(_2041, _2042, _2043), vec3(_2041, _2042, _2043)));
    float _2051 = dot(vec3(_280, _281, _282), vec3(cbLight._m0[_1775].xyz));
    float _3860 = isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0));
    float _2054 = isnan(1.0) ? _3860 : (isnan(_3860) ? 1.0 : min(_3860, 1.0));
    float _2055 = dot(vec3(cbLight._m0[_1775].xyz), vec3(_2041 * _2047, _2042 * _2047, _2043 * _2047));
    float _3871 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
    float _2064 = (exp2(log2(1.0 - (isnan(1.0) ? _3871 : (isnan(_3871) ? 1.0 : min(_3871, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2068 = (0.5 / ((_2054 + 9.9999999392252902907785028219223e-09) + _2001)) * _2054;
    float _3882 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
    float _2070 = (isnan(1.0) ? _3882 : (isnan(_3882) ? 1.0 : min(_3882, 1.0))) * 0.31831014156341552734375;
    float _2080 = (((_2064 * cbLight._m0[_2035].x) * _2070) * _1758) + ((((cbLight._m0[_1981].x * _1723) * _2013) * _2021) * _1771);
    float _2081 = (((_2064 * cbLight._m0[_2035].y) * _2070) * _1758) + ((((cbLight._m0[_1981].y * _1725) * _2013) * _2021) * _1771);
    float _2082 = (((_2064 * cbLight._m0[_2035].z) * _2070) * _1758) + ((((cbLight._m0[_1981].z * _1727) * _2013) * _2021) * _1771);
    float _2138;
    float _2140;
    float _2142;
    if (_1811)
    {
        _2138 = _2080;
        _2140 = _2081;
        _2142 = _2082;
    }
    else
    {
        uint _2144 = _1734 + 10u;
        uint _2150 = _1734 + 2u;
        float _2156 = cbLight._m0[_2150].x + _360;
        float _2157 = cbLight._m0[_2150].y + _361;
        float _2158 = cbLight._m0[_2150].z + _362;
        float _2162 = inversesqrt(dot(vec3(_2156, _2157, _2158), vec3(_2156, _2157, _2158)));
        float _2166 = dot(vec3(_280, _281, _282), vec3(cbLight._m0[_2150].xyz));
        float _3893 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
        float _2169 = isnan(1.0) ? _3893 : (isnan(_3893) ? 1.0 : min(_3893, 1.0));
        float _2170 = dot(vec3(cbLight._m0[_2150].xyz), vec3(_2156 * _2162, _2157 * _2162, _2158 * _2162));
        float _3904 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
        float _2179 = (exp2(log2(1.0 - (isnan(1.0) ? _3904 : (isnan(_3904) ? 1.0 : min(_3904, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2183 = (0.5 / ((_2169 + 9.9999999392252902907785028219223e-09) + _2001)) * _2169;
        float _3915 = isnan(0.0) ? _2183 : (isnan(_2183) ? 0.0 : max(_2183, 0.0));
        float _2185 = (isnan(1.0) ? _3915 : (isnan(_3915) ? 1.0 : min(_3915, 1.0))) * 0.31831014156341552734375;
        float _2186 = isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0));
        _2138 = (((_2179 * cbLight._m0[_2144].x) * _2185) * _2186) + _2080;
        _2140 = (((_2179 * cbLight._m0[_2144].y) * _2185) * _2186) + _2081;
        _2142 = (((_2179 * cbLight._m0[_2144].z) * _2185) * _2186) + _2082;
    }
    float _2217;
    float _2219;
    float _2221;
    if (_1920)
    {
        _2217 = _2138;
        _2219 = _2140;
        _2221 = _2142;
    }
    else
    {
        uint _2228 = _1734 + 11u;
        uint _2234 = _1734 + 3u;
        float _2240 = cbLight._m0[_2234].x + _360;
        float _2241 = cbLight._m0[_2234].y + _361;
        float _2242 = cbLight._m0[_2234].z + _362;
        float _2246 = inversesqrt(dot(vec3(_2240, _2241, _2242), vec3(_2240, _2241, _2242)));
        float _2250 = dot(vec3(_280, _281, _282), vec3(cbLight._m0[_2234].xyz));
        float _3931 = isnan(0.0) ? _2250 : (isnan(_2250) ? 0.0 : max(_2250, 0.0));
        float _2253 = isnan(1.0) ? _3931 : (isnan(_3931) ? 1.0 : min(_3931, 1.0));
        float _2254 = dot(vec3(cbLight._m0[_2234].xyz), vec3(_2240 * _2246, _2241 * _2246, _2242 * _2246));
        float _3942 = isnan(0.0) ? _2254 : (isnan(_2254) ? 0.0 : max(_2254, 0.0));
        float _2263 = (exp2(log2(1.0 - (isnan(1.0) ? _3942 : (isnan(_3942) ? 1.0 : min(_3942, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2267 = (0.5 / ((_2253 + 9.9999999392252902907785028219223e-09) + _2001)) * _2253;
        float _3953 = isnan(0.0) ? _2267 : (isnan(_2267) ? 0.0 : max(_2267, 0.0));
        float _2269 = (isnan(1.0) ? _3953 : (isnan(_3953) ? 1.0 : min(_3953, 1.0))) * 0.31831014156341552734375;
        float _2270 = isnan(1.0) ? _1751 : (isnan(_1751) ? 1.0 : min(_1751, 1.0));
        _2217 = (((_2263 * cbLight._m0[_2228].x) * _2269) * _2270) + _2138;
        _2219 = (((_2263 * cbLight._m0[_2228].y) * _2269) * _2270) + _2140;
        _2221 = (((_2263 * cbLight._m0[_2228].z) * _2269) * _2270) + _2142;
    }
    float _2335;
    float _2337;
    float _2339;
    float _2341;
    float _2343;
    float _2345;
    if (_1732.y == 0u)
    {
        uvec4 _2291 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2292 = _2291.x;
        uint _2303 = uint((float(_2291.y) * floor(float(uint(cbSceneParam._m0[85u].y * _369) / _2292))) + floor(float(uint(cbSceneParam._m0[85u].x * _368) / _2292)));
        float _2313 = (log2(_1510 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2314 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
        uint _2317 = uint(isnan(14.0) ? _2314 : (isnan(_2314) ? 14.0 : min(_2314, 14.0)));
        uvec4 _2322 = texelFetch(g_lightClusterGridBuffer, int(((_2317 << 2u) + (_2303 << 6u)) >> 2u));
        uint _2323 = _2322.x;
        uint _2324 = _2291.z;
        float _2431;
        float _2433;
        float _2435;
        float _2437;
        float _2439;
        float _2441;
        if (((((1u << ((_2324 >> 4u) & 15u)) + 4294967295u) & _2323) == 0u) || ((_2324 & 240u) == 0u))
        {
            _2431 = 0.0;
            _2433 = 0.0;
            _2435 = 0.0;
            _2437 = 0.0;
            _2439 = 0.0;
            _2441 = 0.0;
        }
        else
        {
            float _2432;
            float _2434;
            float _2436;
            float _2438;
            float _2440;
            float _2442;
            float _2582 = 0.0;
            float _2583 = 0.0;
            float _2584 = 0.0;
            float _2585 = 0.0;
            float _2586 = 0.0;
            float _2587 = 0.0;
            uint _2588 = 0u;
            uint _2597;
            bool _2598;
            for (;;)
            {
                _2597 = texelFetch(g_lightClassification, int((((_2317 << 5u) + (_2303 << 9u)) + (_2588 << 2u)) >> 2u)).x;
                _2598 = _2597 == 0u;
                float frontier_phi_81_pred;
                float frontier_phi_81_pred_1;
                float frontier_phi_81_pred_2;
                float frontier_phi_81_pred_3;
                float frontier_phi_81_pred_4;
                float frontier_phi_81_pred_5;
                if (_2598)
                {
                    frontier_phi_81_pred = _2586;
                    frontier_phi_81_pred_1 = _2587;
                    frontier_phi_81_pred_2 = _2585;
                    frontier_phi_81_pred_3 = _2584;
                    frontier_phi_81_pred_4 = _2583;
                    frontier_phi_81_pred_5 = _2582;
                }
                else
                {
                    float _2706;
                    float _2707;
                    float _2708;
                    float _2709;
                    float _2710;
                    float _2711;
                    uint _2712;
                    _2706 = _2582;
                    _2707 = _2583;
                    _2708 = _2584;
                    _2709 = _2585;
                    _2710 = _2586;
                    _2711 = _2587;
                    _2712 = _2597;
                    float _2638;
                    float _2639;
                    float _2640;
                    float _2641;
                    float _2642;
                    float _2643;
                    for (;;)
                    {
                        uint _2716 = uint(findLSB(_2712)) + (_2588 << 5u);
                        uint _2713 = (_2712 + 4294967295u) & _2712;
                        uint _2718 = _2716 * 48u;
                        vec4 _2732 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2718)).x, texelFetch(g_PointLightRenderingBuffer, int(_2718 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2718 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2718 + 3u)).x));
                        uint _2738 = (_2716 * 48u) + 4u;
                        vec4 _2751 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2738)).x, texelFetch(g_PointLightRenderingBuffer, int(_2738 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2738 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2738 + 3u)).x));
                        uint _2757 = (_2716 * 48u) + 8u;
                        vec3 _2768 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2757)).x, texelFetch(g_PointLightRenderingBuffer, int(_2757 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2757 + 2u)).x));
                        float _2772 = _2732.x - _1508;
                        float _2773 = _2732.y - _1509;
                        float _2774 = _2732.z - _1510;
                        float _2775 = dot(vec3(_2772, _2773, _2774), vec3(_2772, _2773, _2774));
                        float _2778 = inversesqrt(_2775);
                        float _2787 = 1.0 - (_2775 * _2732.w);
                        float _3979 = isnan(0.0) ? _2787 : (isnan(_2787) ? 0.0 : max(_2787, 0.0));
                        float _2788 = isnan(1.0) ? _3979 : (isnan(_3979) ? 1.0 : min(_3979, 1.0));
                        float _2789 = sqrt(_2775) * _2751.w;
                        float _2792 = 1.39999997615814208984375 / (_2789 + 1.39999997615814208984375);
                        float _2793 = _2792 * _2792;
                        float _2796 = ((1.0 - _2793) * dot(vec3(_389, _392, _395), vec3(_2778 * _2772, _2778 * _2773, _2778 * _2774))) + _2793;
                        float _2799 = _2789 * _2789;
                        float _2803 = ((isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0))) * _2788) / ((_2799 * 0.699999988079071044921875) + 1.0);
                        float _2807 = (-0.0) - _1508;
                        float _2808 = (-0.0) - _1509;
                        float _2809 = (-0.0) - _1510;
                        float _2813 = inversesqrt(dot(vec3(_2807, _2808, _2809), vec3(_2807, _2808, _2809)));
                        float _2817 = dot(vec3(_389, _392, _395), vec3(_2813 * _2807, _2813 * _2808, _2813 * _2809));
                        float _3995 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
                        float _4006 = isnan(0.0) ? _2796 : (isnan(_2796) ? 0.0 : max(_2796, 0.0));
                        float _2821 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
                        float _2825 = (0.5 / (((isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0))) + 9.9999999392252902907785028219223e-09) + _2821)) * _2821;
                        float _4017 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0));
                        float _2834 = (((isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * 3.1415927410125732421875) / ((_2799 * 2.1991131305694580078125) + 3.141590118408203125)) * _2788;
                        _2641 = (_2803 * _2751.x) + _2709;
                        _2642 = (_2803 * _2751.y) + _2710;
                        _2643 = (_2803 * _2751.z) + _2711;
                        _2638 = (_2834 * _2768.x) + _2706;
                        _2639 = (_2834 * _2768.y) + _2707;
                        _2640 = (_2834 * _2768.z) + _2708;
                        if (_2713 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2706 = _2638;
                            _2707 = _2639;
                            _2708 = _2640;
                            _2709 = _2641;
                            _2710 = _2642;
                            _2711 = _2643;
                            _2712 = _2713;
                        }
                    }
                    frontier_phi_81_pred = _2642;
                    frontier_phi_81_pred_1 = _2643;
                    frontier_phi_81_pred_2 = _2641;
                    frontier_phi_81_pred_3 = _2640;
                    frontier_phi_81_pred_4 = _2639;
                    frontier_phi_81_pred_5 = _2638;
                }
                _2440 = frontier_phi_81_pred;
                _2442 = frontier_phi_81_pred_1;
                _2438 = frontier_phi_81_pred_2;
                _2436 = frontier_phi_81_pred_3;
                _2434 = frontier_phi_81_pred_4;
                _2432 = frontier_phi_81_pred_5;
                uint _2589 = _2588 + 1u;
                if (_2589 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2582 = _2432;
                    _2583 = _2434;
                    _2584 = _2436;
                    _2585 = _2438;
                    _2586 = _2440;
                    _2587 = _2442;
                    _2588 = _2589;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2431 = _2432;
            _2433 = _2434;
            _2435 = _2436;
            _2437 = _2438;
            _2439 = _2440;
            _2441 = _2442;
        }
        uvec4 _2445 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2446 = _2445.z;
        uint _2448 = (_2446 >> 8u) & 15u;
        float _2553;
        float _2555;
        float _2557;
        float _2559;
        float _2561;
        float _2563;
        if (((4294967295u << _2448) & _2323) == 0u)
        {
            _2553 = _2431;
            _2555 = _2433;
            _2557 = _2435;
            _2559 = _2437;
            _2561 = _2439;
            _2563 = _2441;
        }
        else
        {
            float _2578 = inversesqrt(dot(vec3(_1508, _1509, _1510), vec3(_1508, _1509, _1510)));
            float frontier_phi_75_76_ladder;
            float frontier_phi_75_76_ladder_1;
            float frontier_phi_75_76_ladder_2;
            float frontier_phi_75_76_ladder_3;
            float frontier_phi_75_76_ladder_4;
            float frontier_phi_75_76_ladder_5;
            if (_2448 < ((_2446 >> 12u) & 15u))
            {
                float _2554;
                float _2556;
                float _2558;
                float _2560;
                float _2562;
                float _2564;
                float _2689 = _2431;
                float _2690 = _2433;
                float _2691 = _2435;
                float _2692 = _2437;
                float _2693 = _2439;
                float _2694 = _2441;
                uint _2695 = _2448;
                uint _2704;
                bool _2705;
                for (;;)
                {
                    _2704 = texelFetch(g_lightClassification, int((((_2317 << 5u) + (_2303 << 9u)) + (_2695 << 2u)) >> 2u)).x;
                    _2705 = _2704 == 0u;
                    float frontier_phi_87_pred;
                    float frontier_phi_87_pred_1;
                    float frontier_phi_87_pred_2;
                    float frontier_phi_87_pred_3;
                    float frontier_phi_87_pred_4;
                    float frontier_phi_87_pred_5;
                    if (_2705)
                    {
                        frontier_phi_87_pred = _2694;
                        frontier_phi_87_pred_1 = _2693;
                        frontier_phi_87_pred_2 = _2692;
                        frontier_phi_87_pred_3 = _2691;
                        frontier_phi_87_pred_4 = _2689;
                        frontier_phi_87_pred_5 = _2690;
                    }
                    else
                    {
                        float _2839;
                        float _2840;
                        float _2841;
                        float _2842;
                        float _2843;
                        float _2844;
                        float _3091;
                        float _3092;
                        float _3093;
                        float _3094;
                        float _3095;
                        float _3096;
                        float _2852 = _2689;
                        float _2853 = _2690;
                        float _2854 = _2691;
                        float _2855 = _2692;
                        float _2856 = _2693;
                        float _2857 = _2694;
                        uint _2858 = _2704;
                        uint _2859;
                        vec4 _2884;
                        float _2885;
                        vec4 _2900;
                        vec3 _2912;
                        vec4 _2928;
                        vec4 _2944;
                        float _2991;
                        bool _2992;
                        for (;;)
                        {
                            uint _2869 = ((_2695 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2858));
                            _2859 = (_2858 + 4294967295u) & _2858;
                            uint _2871 = _2869 * 40u;
                            _2884 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2871)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2871 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2871 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2871 + 3u)).x));
                            _2885 = _2884.w;
                            uint _2887 = (_2869 * 40u) + 4u;
                            _2900 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2887)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2887 + 3u)).x));
                            uint _2902 = (_2869 * 40u) + 8u;
                            _2912 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2902)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2902 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2902 + 2u)).x));
                            uint _2915 = (_2869 * 40u) + 16u;
                            _2928 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2915)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2915 + 3u)).x));
                            uint _2931 = (_2869 * 40u) + 20u;
                            _2944 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2931)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2931 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2931 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2931 + 3u)).x));
                            uint _2947 = (_2869 * 40u) + 24u;
                            vec4 _2960 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2947)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2947 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2947 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2947 + 3u)).x));
                            uint _2966 = (_2869 * 40u) + 28u;
                            vec4 _2979 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2966)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2966 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2966 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2966 + 3u)).x));
                            _2991 = fma(_1510, _2979.z, fma(_1509, _2979.y, _2979.x * _1508)) + _2979.w;
                            _2992 = !((fma(_1510, _2960.z, fma(_1509, _2960.y, _2960.x * _1508)) + _2960.w) <= 0.0);
                            float frontier_phi_93_pred;
                            float frontier_phi_93_pred_1;
                            float frontier_phi_93_pred_2;
                            float frontier_phi_93_pred_3;
                            float frontier_phi_93_pred_4;
                            float frontier_phi_93_pred_5;
                            if (_2992)
                            {
                                float _3019 = _2884.x - _1508;
                                float _3020 = _2884.y - _1509;
                                float _3021 = _2884.z - _1510;
                                float _3022 = dot(vec3(_3019, _3020, _3021), vec3(_3019, _3020, _3021));
                                float _3025 = inversesqrt(_3022);
                                float _3026 = _3025 * _3019;
                                float _3027 = _3025 * _3020;
                                float _3028 = _3025 * _3021;
                                float _3032 = 1.0 - (_3022 / (_2885 * _2885));
                                float _4028 = isnan(0.0) ? _3032 : (isnan(_3032) ? 0.0 : max(_3032, 0.0));
                                float _3033 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
                                float _3037 = sqrt(_3022) * _2900.w;
                                float _3039 = 1.39999997615814208984375 / (_3037 + 1.39999997615814208984375);
                                float _3040 = _3039 * _3039;
                                float _3041 = 1.0 - _3040;
                                float _3043 = (_3041 * dot(vec3(_3026, _3027, _3028), vec3(_389, _392, _395))) + _3040;
                                float _3046 = _3037 * _3037;
                                float _3050 = (fma(_1510, _2928.z, fma(_1509, _2928.y, _2928.x * _1508)) + _2928.w) / _2991;
                                float _3051 = (fma(_1510, _2944.z, fma(_1509, _2944.y, _2944.x * _1508)) + _2944.w) / _2991;
                                float _3055 = 1.0 - dot(vec2(_3050, _3051), vec2(_3050, _3051));
                                float _4044 = isnan(0.0) ? _3055 : (isnan(_3055) ? 0.0 : max(_3055, 0.0));
                                float _3056 = isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0));
                                float _3057 = _3056 * (((isnan(0.0) ? _3043 : (isnan(_3043) ? 0.0 : max(_3043, 0.0))) * _3033) / ((_3046 * 0.699999988079071044921875) + 1.0));
                                float _3067 = dot(vec3(_389, _392, _395), vec3((-0.0) - (_1508 * _2578), (-0.0) - (_1509 * _2578), (-0.0) - (_1510 * _2578)));
                                float _4055 = isnan(0.0) ? _3067 : (isnan(_3067) ? 0.0 : max(_3067, 0.0));
                                float _3075 = (_3041 * dot(vec3(_389, _392, _395), vec3(_3026, _3027, _3028))) + _3040;
                                float _4066 = isnan(0.0) ? _3075 : (isnan(_3075) ? 0.0 : max(_3075, 0.0));
                                float _3076 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
                                float _3080 = (0.5 / (((isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0))) + 9.9999999392252902907785028219223e-09) + _3076)) * _3076;
                                float _4077 = isnan(0.0) ? _3080 : (isnan(_3080) ? 0.0 : max(_3080, 0.0));
                                float _3087 = (_3056 * _3033) * (((isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0))) * 3.1415927410125732421875) / ((_3046 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_93_pred = _3057 * _2900.z;
                                frontier_phi_93_pred_1 = _3057 * _2900.y;
                                frontier_phi_93_pred_2 = _3057 * _2900.x;
                                frontier_phi_93_pred_3 = _3087 * _2912.z;
                                frontier_phi_93_pred_4 = _3087 * _2912.y;
                                frontier_phi_93_pred_5 = _3087 * _2912.x;
                            }
                            else
                            {
                                frontier_phi_93_pred = 0.0;
                                frontier_phi_93_pred_1 = 0.0;
                                frontier_phi_93_pred_2 = 0.0;
                                frontier_phi_93_pred_3 = 0.0;
                                frontier_phi_93_pred_4 = 0.0;
                                frontier_phi_93_pred_5 = 0.0;
                            }
                            _3096 = frontier_phi_93_pred;
                            _3095 = frontier_phi_93_pred_1;
                            _3094 = frontier_phi_93_pred_2;
                            _3093 = frontier_phi_93_pred_3;
                            _3092 = frontier_phi_93_pred_4;
                            _3091 = frontier_phi_93_pred_5;
                            _2842 = _3094 + _2855;
                            _2843 = _3095 + _2856;
                            _2844 = _3096 + _2857;
                            _2839 = _3091 + _2852;
                            _2840 = _3092 + _2853;
                            _2841 = _3093 + _2854;
                            if (_2859 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2852 = _2839;
                                _2853 = _2840;
                                _2854 = _2841;
                                _2855 = _2842;
                                _2856 = _2843;
                                _2857 = _2844;
                                _2858 = _2859;
                                continue;
                            }
                        }
                        frontier_phi_87_pred = _2844;
                        frontier_phi_87_pred_1 = _2843;
                        frontier_phi_87_pred_2 = _2842;
                        frontier_phi_87_pred_3 = _2841;
                        frontier_phi_87_pred_4 = _2839;
                        frontier_phi_87_pred_5 = _2840;
                    }
                    _2564 = frontier_phi_87_pred;
                    _2562 = frontier_phi_87_pred_1;
                    _2560 = frontier_phi_87_pred_2;
                    _2558 = frontier_phi_87_pred_3;
                    _2554 = frontier_phi_87_pred_4;
                    _2556 = frontier_phi_87_pred_5;
                    uint _2696 = _2695 + 1u;
                    if (_2696 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2689 = _2554;
                        _2690 = _2556;
                        _2691 = _2558;
                        _2692 = _2560;
                        _2693 = _2562;
                        _2694 = _2564;
                        _2695 = _2696;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_75_76_ladder = _2564;
                frontier_phi_75_76_ladder_1 = _2562;
                frontier_phi_75_76_ladder_2 = _2560;
                frontier_phi_75_76_ladder_3 = _2558;
                frontier_phi_75_76_ladder_4 = _2556;
                frontier_phi_75_76_ladder_5 = _2554;
            }
            else
            {
                frontier_phi_75_76_ladder = _2441;
                frontier_phi_75_76_ladder_1 = _2439;
                frontier_phi_75_76_ladder_2 = _2437;
                frontier_phi_75_76_ladder_3 = _2435;
                frontier_phi_75_76_ladder_4 = _2433;
                frontier_phi_75_76_ladder_5 = _2431;
            }
            _2553 = frontier_phi_75_76_ladder_5;
            _2555 = frontier_phi_75_76_ladder_4;
            _2557 = frontier_phi_75_76_ladder_3;
            _2559 = frontier_phi_75_76_ladder_2;
            _2561 = frontier_phi_75_76_ladder_1;
            _2563 = frontier_phi_75_76_ladder;
        }
        float _2568 = isnan(1.0) ? _433 : (isnan(_433) ? 1.0 : min(_433, 1.0));
        _2335 = (_2568 * _2559) + _1975;
        _2337 = (_2568 * _2561) + _1977;
        _2339 = (_2568 * _2563) + _1979;
        _2341 = ((_2553 * 0.039999999105930328369140625) * _2568) + _2217;
        _2343 = ((_2555 * 0.039999999105930328369140625) * _2568) + _2219;
        _2345 = ((_2557 * 0.039999999105930328369140625) * _2568) + _2221;
    }
    else
    {
        _2335 = _1975;
        _2337 = _1977;
        _2339 = _1979;
        _2341 = _2217;
        _2343 = _2219;
        _2345 = _2221;
    }
    uint _2351 = _409 + uint(cbMatDynParam._m0[0u].w);
    float _2357 = cbInstanceData._m0[_2351].x * _271;
    float _2358 = cbInstanceData._m0[_2351].y * _273;
    float _2359 = cbInstanceData._m0[_2351].z * _274;
    float _4093 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _4104 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _4115 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _2376 = (((isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0))) * (_2335 + ((isnan(0.0) ? _1142 : (isnan(_1142) ? 0.0 : max(_1142, 0.0))) * _433))) + ((_2341 + ((isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0))) * _1241)) * cbPerFrame._m0[3u].x)) + _2357;
    float _2378 = (_2358 + ((_2343 + ((isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0))) * _1241)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4104 : (isnan(_4104) ? 1.0 : min(_4104, 1.0))) * (_2337 + ((isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0))) * _433)));
    float _2380 = (_2359 + ((_2345 + ((isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0))) * _1241)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4115 : (isnan(_4115) ? 1.0 : min(_4115, 1.0))) * (_2339 + ((isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0))) * _433)));
    float _4141 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2393 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
    uint _2394 = _408 + 6u;
    float _2402 = _368 / cbSceneParam._m0[86u].x;
    float _2403 = _369 / cbSceneParam._m0[86u].y;
    vec4 _2417 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2402, _2403, (log2((isnan(cbSceneParam._m0[77u].w) ? _301 : (isnan(_301) ? cbSceneParam._m0[77u].w : min(_301, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2419 = _2417.x;
    float _2420 = _2417.y;
    float _2421 = _2417.z;
    float _2422 = _2417.w;
    float _2493;
    float _2495;
    float _2497;
    float _2499;
    if (_301 > cbSceneParam._m0[78u].w)
    {
        float _2456 = isnan(_301) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _301 : min(cbSceneParam._m0[80u].w, _301));
        float _2457 = _2456 / _301;
        float _2468 = _2457 * _353;
        float _2469 = _354 * _2457;
        float _2470 = (-0.0) - _2469;
        float _2471 = _2457 * _355;
        float _2473 = (cbSceneParam._m0[77u].w * _2470) / _2456;
        float _2474 = _2473 + cbSceneParam._m0[79u].w;
        float _2475 = cbSceneParam._m0[79u].w - _2469;
        float _2481 = sqrt(((_2468 * _2468) + (_2469 * _2469)) + (_2471 * _2471));
        float _2484 = (1.0 - (cbSceneParam._m0[77u].w / _2456)) * _2481;
        float _2489 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2491 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2651;
        if (abs((_2470 - _2473) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2651 = ((((_2474 > 0.0) ? exp2(_2489 * _2474) : (2.0 - exp2(_2491 * _2474))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2484;
        }
        else
        {
            float _2611 = 1.0 / cbSceneParam._m0[80u].x;
            float _2612 = isnan(_2475) ? _2474 : (isnan(_2474) ? _2475 : max(_2474, _2475));
            float _2613 = isnan(_2475) ? _2474 : (isnan(_2474) ? _2475 : min(_2474, _2475));
            float _2622 = isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : min(_2612, 0.0));
            float _2623 = isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : min(_2613, 0.0));
            _2651 = ((abs(_2481 / _2470) * cbSceneParam._m0[80u].y) * ((((_2622 - _2623) * 2.0) - ((exp2(_2489 * (isnan(0.0) ? _2612 : (isnan(_2612) ? 0.0 : max(_2612, 0.0)))) - exp2(_2489 * (isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : max(_2613, 0.0))))) * _2611)) - ((exp2(_2491 * _2622) - exp2(_2491 * _2623)) * _2611))) + (_2484 * cbSceneParam._m0[80u].z);
        }
        vec4 _2653 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2402, _2403, 1.0), 0.0);
        float _2662 = exp2((_2651 * (-1.44269502162933349609375)) * (1.0 - _2653.w));
        float _2663 = log2(_2662);
        float _2679 = log2(_2422);
        _2493 = (exp2(_2679 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2663 * cbSceneParam._m0[78u].x)) * _2653.x) / cbSceneParam._m0[78u].x)) + _2419;
        _2495 = (exp2(_2679 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2663 * cbSceneParam._m0[78u].y)) * _2653.y) / cbSceneParam._m0[78u].y)) + _2420;
        _2497 = (exp2(_2679 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2663 * cbSceneParam._m0[78u].z)) * _2653.z) / cbSceneParam._m0[78u].z)) + _2421;
        _2499 = _2662 * _2422;
    }
    else
    {
        _2493 = _2419;
        _2495 = _2420;
        _2497 = _2421;
        _2499 = _2422;
    }
    float _2511 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2512 = _2511 == 3.0;
    float _2514 = log2(_2499);
    float _2518 = exp2(_2514 * cbSceneParam._m0[78u].x);
    float _2519 = exp2(_2514 * cbSceneParam._m0[78u].y);
    float _2520 = exp2(_2514 * cbSceneParam._m0[78u].z);
    float _2521 = _2518 * (isnan(0.0) ? _2376 : (isnan(_2376) ? 0.0 : max(_2376, 0.0)));
    float _2522 = _2519 * (isnan(0.0) ? _2378 : (isnan(_2378) ? 0.0 : max(_2378, 0.0)));
    float _2523 = _2520 * (isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0)));
    float _2532 = (_2511 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2532 * (_2512 ? _2521 : (_2521 + (cbSceneParam._m0[72u].w * _2493)));
    SV_Target.y = _2532 * (_2512 ? _2522 : (_2522 + (cbSceneParam._m0[72u].w * _2495)));
    SV_Target.z = _2532 * (_2512 ? _2523 : (_2523 + (cbSceneParam._m0[72u].w * _2497)));
    SV_Target.w = cbInstanceData._m0[_2394].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2357) * _2393) * _2518) * _2532;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2358) * _2393) * _2519) * _2532;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2359) * _2393) * _2520) * _2532;
    SV_Target_1.w = cbInstanceData._m0[_2394].w;
}


