#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[27];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Planet_Clouds_001_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _141;
    float _142;
    float _143;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
        _143 = (-0.0) - _136;
    }
    else
    {
        _141 = _134;
        _142 = _135;
        _143 = _136;
    }
    float _189 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _199 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _189);
    float _200 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _189);
    float _201 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _189);
    float _217 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _218 = _217 * _199;
    float _219 = _217 * _200;
    float _220 = _217 * _201;
    float _221 = dot(vec4(_218, _219, _220, 0.0), vec4(_141, _142, _143, 0.0));
    float _224 = _221 - cbMtdParam._m0[20u].x;
    float _1142 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _234 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1142 : (isnan(_1142) ? 1.0 : min(_1142, 1.0)))))) * cbMtdParam._m0[16u].x) * cbMtdParam._m0[21u].x);
    float _1153 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _256 = cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x;
    vec4 _275 = texture(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[1u].x * cbMtdParam._m0[23u].w) * ((_256 * cbMtdParam._m0[23u].y) + TEXCOORD.x)) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[24u].x) * ((_256 * cbMtdParam._m0[23u].z) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _278 = _275.x;
    vec4 _306 = texture(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[24u].y + TEXCOORD.x) * cbMtdParam._m0[22u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[24u].z + TEXCOORD.y) * cbMtdParam._m0[22u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _335 = texture(sampler2D(M_Planet_Clouds_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((((((_278 * cbMtdParam._m0[22u].w) + TEXCOORD.x) + (cbMtdParam._m0[21u].w * _256)) + cbMtdParam._m0[21u].y) + ((_306.x + (-0.5)) * cbMtdParam._m0[16u].z)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((((((_278 * cbMtdParam._m0[23u].x) + TEXCOORD.y) + (cbMtdParam._m0[22u].x * _256)) + cbMtdParam._m0[21u].z) + ((_306.y + (-0.5)) * cbMtdParam._m0[16u].z)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _354 = cbMtdParam._m0[18u].z - cbMtdParam._m0[18u].y;
    float _356 = (sqrt(((_199 * _199) + (_200 * _200)) + (_201 * _201)) - cbMtdParam._m0[18u].y) / (isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0)));
    float _1169 = isnan(0.0) ? _356 : (isnan(_356) ? 0.0 : max(_356, 0.0));
    vec4 _368 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _370 = _368.x;
    bool _377 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _393 = ((_377 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _370)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _370))) - POSITION_1.w) / cbMtdParam._m0[18u].x;
    float _1180 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    float _395 = ((_335.w * cbMtdParam._m0[15u].z) * (isnan(1.0) ? _1169 : (isnan(_1169) ? 1.0 : min(_1169, 1.0)))) * (isnan(1.0) ? _1180 : (isnan(_1180) ? 1.0 : min(_1180, 1.0)));
    float _1191 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    float _408 = _221 - cbMtdParam._m0[17u].w;
    float _1202 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _416 = exp2(log2(1.0 - (isnan(1.0) ? _1202 : (isnan(_1202) ? 1.0 : min(_1202, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].x : (isnan(cbMtdParam._m0[17u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].x, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].y;
    float _417 = _416 + (cbMtdParam._m0[15u].w * (isnan(1.0) ? _1191 : (isnan(_1191) ? 1.0 : min(_1191, 1.0))));
    float _1218 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _419 = (isnan(1.0) ? _1218 : (isnan(_1218) ? 1.0 : min(_1218, 1.0))) * (isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0)));
    float _445 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _449 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _453 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _457 = inversesqrt(dot(vec3(_445, _449, _453), vec3(_445, _449, _453)));
    float _458 = _457 * _445;
    float _459 = _457 * _449;
    float _460 = _457 * _453;
    uvec4 _463 = floatBitsToUint(cbMtdParam._m0[9u]);
    bool _465 = _463.y != 0u;
    float _476 = inversesqrt(dot(vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy), vec3(cbMtdParam._m0[24u].w, cbMtdParam._m0[25u].xy)));
    uint _480 = uint(roundEven(NORMAL.w)) * 13u;
    uint _488 = floatBitsToUint(cbInstanceData._m0[_480 + 5u]).x * 14u;
    float _495 = _465 ? cbLight._m0[_488].x : (_476 * cbMtdParam._m0[24u].w);
    float _496 = _465 ? cbLight._m0[_488].y : (_476 * cbMtdParam._m0[25u].x);
    float _497 = _465 ? cbLight._m0[_488].z : (_476 * cbMtdParam._m0[25u].y);
    float _501 = inversesqrt(dot(vec3(_495, _496, _497), vec3(_495, _496, _497)));
    float _502 = _495 * _501;
    float _503 = _496 * _501;
    float _504 = _497 * _501;
    float _505 = dot(vec4(_458, _459, _460, 0.0), vec4(_502, _503, _504, 0.0));
    float _1229 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _508 = isnan(1.0) ? _1229 : (isnan(_1229) ? 1.0 : min(_1229, 1.0));
    float _510 = 1.0 - (_508 * _508);
    float _512 = (-0.0) - (_510 - cbMtdParam._m0[19u].z);
    float _513 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _534 = (-0.0) - (_510 - cbMtdParam._m0[20u].y);
    float _535 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _578 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _218, (-0.0) - _219, (-0.0) - _220)) * 0.5;
    float _580 = _578 + 0.5;
    float _590 = 0.5 - _578;
    float _607 = (((cbSceneParam._m0[83u].x * _590) + (cbSceneParam._m0[82u].x * _580)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _608 = (((cbSceneParam._m0[83u].y * _590) + (cbSceneParam._m0[82u].y * _580)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _609 = (((cbSceneParam._m0[83u].z * _590) + (cbSceneParam._m0[82u].z * _580)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _616 = ((_607 - cbMtdParam._m0[13u].z) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[13u].z;
    float _617 = ((_608 - cbMtdParam._m0[13u].w) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[13u].w;
    float _618 = ((_609 - cbMtdParam._m0[14u].x) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[14u].x;
    float _634 = inversesqrt(dot(vec3(_502, _503, _504), vec3(_502, _503, _504)));
    float _649 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_458, _459, _460, 0.0), vec4(_634 * _502, _634 * _503, _634 * _504, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1260 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _651 = isnan(1.0) ? _1260 : (isnan(_1260) ? 1.0 : min(_1260, 1.0));
    float _657 = exp2(log2(_651 * 6.5) * 7.0);
    float _1271 = isnan(0.0) ? _657 : (isnan(_657) ? 0.0 : max(_657, 0.0));
    float _659 = (isnan(1.0) ? _1271 : (isnan(_1271) ? 1.0 : min(_1271, 1.0))) + _651;
    float _1282 = isnan(0.0) ? _659 : (isnan(_659) ? 0.0 : max(_659, 0.0));
    float _660 = isnan(1.0) ? _1282 : (isnan(_1282) ? 1.0 : min(_1282, 1.0));
    float _670 = ((_660 * ((((_607 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[12u].z) - _616)) + _616) * _335.x;
    float _671 = ((_660 * ((((_608 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[12u].w) - _617)) + _617) * _335.y;
    float _672 = ((_660 * ((((_609 - cbMtdParam._m0[13u].x) * cbMtdParam._m0[19u].y) + cbMtdParam._m0[13u].x) - _618)) + _618) * _335.z;
    float _673 = isnan(_671) ? _670 : (isnan(_670) ? _671 : max(_670, _671));
    float _674 = isnan(_672) ? _673 : (isnan(_673) ? _672 : max(_673, _672));
    float _677;
    float _679;
    if (_674 < 1.1920928955078125e-07)
    {
        _677 = 0.0;
        _679 = 0.0;
    }
    else
    {
        float _704 = isnan(_671) ? _670 : (isnan(_670) ? _671 : min(_670, _671));
        float _706 = _674 - (isnan(_672) ? _704 : (isnan(_704) ? _672 : min(_704, _672)));
        float _680 = _706 / _674;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_706 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _680;
        }
        else
        {
            float _1046;
            if (_674 == _670)
            {
                _1046 = ((_671 - _672) / _706) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_16_12_ladder;
                if (_674 == _671)
                {
                    frontier_phi_16_12_ladder = (((_672 - _670) / _706) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_16_12_ladder = (((_670 - _671) / _706) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1046 = frontier_phi_16_12_ladder;
            }
            float _1051 = (_1046 < 0.0) ? (_1046 + 1.0) : _1046;
            precise float _678 = (_1051 - floor(_1051)) * 6.0;
            frontier_phi_3_4_ladder = _678;
            frontier_phi_3_4_ladder_1 = _680;
        }
        _677 = frontier_phi_3_4_ladder;
        _679 = frontier_phi_3_4_ladder_1;
    }
    float _682 = cbMtdParam._m0[19u].w + _674;
    float _1313 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
    float _683 = isnan(1.0) ? _1313 : (isnan(_1313) ? 1.0 : min(_1313, 1.0));
    float _685 = cbMtdParam._m0[20u].z + _679;
    float _1324 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _686 = isnan(1.0) ? _1324 : (isnan(_1324) ? 1.0 : min(_1324, 1.0));
    uint _688 = uint(int(floor(_677)));
    float _690 = _677 - float(int(_688));
    float _692 = (1.0 - _686) * _683;
    float _695 = (1.0 - (_690 * _686)) * _683;
    float _699 = (1.0 - ((1.0 - _690) * _686)) * _683;
    float _708;
    float _710;
    float _711;
    if ((_688 == 0u) || (_688 == 6u))
    {
        _708 = _683;
        _710 = _699;
        _711 = _692;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_688 == 1u)
        {
            frontier_phi_5_6_ladder = _695;
            frontier_phi_5_6_ladder_1 = _683;
            frontier_phi_5_6_ladder_2 = _692;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_688 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _692;
                frontier_phi_5_6_ladder_10_ladder_1 = _683;
                frontier_phi_5_6_ladder_10_ladder_2 = _699;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_15_ladder;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
                if (_688 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _692;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _695;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _683;
                }
                else
                {
                    bool _1101 = _688 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder = _1101 ? _699 : _683;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_1 = _692;
                    frontier_phi_5_6_ladder_10_ladder_15_ladder_2 = _1101 ? _683 : _695;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_15_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_15_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_15_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _708 = frontier_phi_5_6_ladder;
        _710 = frontier_phi_5_6_ladder_1;
        _711 = frontier_phi_5_6_ladder_2;
    }
    float _720 = exp2(log2(_708) * cbMtdParam._m0[20u].w);
    float _721 = exp2(log2(_710) * cbMtdParam._m0[20u].w);
    float _722 = exp2(log2(_711) * cbMtdParam._m0[20u].w);
    float _734 = inversesqrt(dot(vec3(cbMtdParam._m0[25u].zw, cbMtdParam._m0[26u].x), vec3(cbMtdParam._m0[25u].zw, cbMtdParam._m0[26u].x)));
    float _742 = (dot(vec4(_458, _459, _460, 0.0), vec4(_734 * cbMtdParam._m0[25u].z, _734 * cbMtdParam._m0[25u].w, _734 * cbMtdParam._m0[26u].x, 0.0)) + 1.0) * 0.5;
    float _1335 = isnan(0.0) ? _742 : (isnan(_742) ? 0.0 : max(_742, 0.0));
    float _749 = cbMtdParam._m0[16u].w * exp2(log2(isnan(1.0) ? _1335 : (isnan(_1335) ? 1.0 : min(_1335, 1.0))) * cbMtdParam._m0[17u].y);
    float _1346 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _750 = isnan(1.0) ? _1346 : (isnan(_1346) ? 1.0 : min(_1346, 1.0));
    float _757 = (cbMtdParam._m0[18u].w * exp2(log2(isnan(64.0) ? _535 : (isnan(_535) ? 64.0 : min(_535, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[19u].x * exp2(log2(isnan(64.0) ? _513 : (isnan(_513) ? 64.0 : min(_513, 64.0))) * 1.64999997615814208984375));
    float _760 = ((_750 * ((_720 * cbMtdParam._m0[9u].z) - _720)) + _720) + (_757 * cbMtdParam._m0[11u].z);
    float _763 = ((_750 * ((_721 * cbMtdParam._m0[9u].w) - _721)) + _721) + (_757 * cbMtdParam._m0[11u].w);
    float _766 = ((_750 * ((_722 * cbMtdParam._m0[10u].x) - _722)) + _722) + (_757 * cbMtdParam._m0[12u].x);
    bool _772 = _463.x != 0u;
    float _1372 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _800 = _377 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _810 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _824 = (_480 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _830 = cbInstanceData._m0[_824].x * ((_772 ? (((_660 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z) * _416) : 0.0) + (isnan(4.0) ? _760 : (isnan(_760) ? 4.0 : min(_760, 4.0))));
    float _831 = cbInstanceData._m0[_824].y * ((_772 ? (_416 * ((_660 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _763 : (isnan(_763) ? 4.0 : min(_763, 4.0))));
    float _832 = cbInstanceData._m0[_824].z * ((_772 ? (_416 * ((_660 * (cbMtdParam._m0[11u].x - cbMtdParam._m0[15u].x)) + cbMtdParam._m0[15u].x)) : 0.0) + (isnan(4.0) ? _766 : (isnan(_766) ? 4.0 : min(_766, 4.0))));
    float _1398 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _845 = isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0));
    float _850 = cbInstanceData._m0[_480 + 6u].w * (isnan(1.0) ? _1372 : (isnan(_1372) ? 1.0 : min(_1372, 1.0)));
    float _856 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _857 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _872 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_856, _857, (log2((isnan(cbSceneParam._m0[77u].w) ? _800 : (isnan(_800) ? cbSceneParam._m0[77u].w : min(_800, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _874 = _872.x;
    float _875 = _872.y;
    float _876 = _872.z;
    float _877 = _872.w;
    float _939;
    float _941;
    float _943;
    float _945;
    if (_800 > cbSceneParam._m0[78u].w)
    {
        float _901 = isnan(_800) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _800 : min(cbSceneParam._m0[80u].w, _800));
        float _902 = _901 / _800;
        float _913 = _902 * (cbSceneParam._m0[71u].x - (_445 / _810));
        float _914 = (cbSceneParam._m0[71u].y - (_449 / _810)) * _902;
        float _915 = (-0.0) - _914;
        float _916 = _902 * (cbSceneParam._m0[71u].z - (_453 / _810));
        float _918 = (cbSceneParam._m0[77u].w * _915) / _901;
        float _919 = _918 + cbSceneParam._m0[79u].w;
        float _920 = cbSceneParam._m0[79u].w - _914;
        float _926 = sqrt(((_913 * _913) + (_914 * _914)) + (_916 * _916));
        float _929 = (1.0 - (cbSceneParam._m0[77u].w / _901)) * _926;
        float _935 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _937 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1063;
        if (abs((_915 - _918) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1063 = ((((_919 > 0.0) ? exp2(_935 * _919) : (2.0 - exp2(_937 * _919))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _929;
        }
        else
        {
            float _1018 = 1.0 / cbSceneParam._m0[80u].x;
            float _1019 = isnan(_920) ? _919 : (isnan(_919) ? _920 : max(_919, _920));
            float _1020 = isnan(_920) ? _919 : (isnan(_919) ? _920 : min(_919, _920));
            float _1029 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : min(_1019, 0.0));
            float _1030 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : min(_1020, 0.0));
            _1063 = ((abs(_926 / _915) * cbSceneParam._m0[80u].y) * ((((_1029 - _1030) * 2.0) - ((exp2(_935 * (isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0)))) - exp2(_935 * (isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0))))) * _1018)) - ((exp2(_937 * _1029) - exp2(_937 * _1030)) * _1018))) + (_929 * cbSceneParam._m0[80u].z);
        }
        vec4 _1065 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_856, _857, 1.0), 0.0);
        float _1074 = exp2((_1063 * (-1.44269502162933349609375)) * (1.0 - _1065.w));
        float _1075 = log2(_1074);
        float _1091 = log2(_877);
        _939 = (exp2(_1091 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1075 * cbSceneParam._m0[78u].x)) * _1065.x) / cbSceneParam._m0[78u].x)) + _874;
        _941 = (exp2(_1091 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1075 * cbSceneParam._m0[78u].y)) * _1065.y) / cbSceneParam._m0[78u].y)) + _875;
        _943 = (exp2(_1091 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1075 * cbSceneParam._m0[78u].z)) * _1065.z) / cbSceneParam._m0[78u].z)) + _876;
        _945 = _1074 * _877;
    }
    else
    {
        _939 = _874;
        _941 = _875;
        _943 = _876;
        _945 = _877;
    }
    float _957 = roundEven(cbMatDynParam._m0[0u].y);
    bool _958 = _957 == 3.0;
    float _960 = log2(_945);
    float _964 = exp2(_960 * cbSceneParam._m0[78u].x);
    float _965 = exp2(_960 * cbSceneParam._m0[78u].y);
    float _966 = exp2(_960 * cbSceneParam._m0[78u].z);
    float _967 = _964 * (isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0)));
    float _968 = _965 * (isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0)));
    float _969 = _966 * (isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0)));
    float _979 = (_957 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _979 * (_958 ? _967 : (_967 + (cbSceneParam._m0[72u].w * _939)));
    SV_Target.y = _979 * (_958 ? _968 : (_968 + (cbSceneParam._m0[72u].w * _941)));
    SV_Target.z = _979 * (_958 ? _969 : (_969 + (cbSceneParam._m0[72u].w * _943)));
    SV_Target.w = _850;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _830) * _845) * _964) * _979;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _831) * _845) * _965) * _979;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _832) * _845) * _966) * _979;
    SV_Target_1.w = _850;
}


