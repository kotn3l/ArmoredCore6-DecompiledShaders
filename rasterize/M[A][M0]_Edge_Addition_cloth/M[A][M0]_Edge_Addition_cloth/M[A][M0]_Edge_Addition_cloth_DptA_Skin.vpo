#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    uint _83 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _166 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _169 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _418;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    float _425;
    float _426;
    float _427;
    float _428;
    float _429;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _202 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
        precise float _206 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _211 = isnan(_206) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _206 : max(0.001000000047497451305389404296875, _206));
        precise float _213 = BLENDWEIGHT.x / _211;
        precise float _214 = BLENDWEIGHT.y / _211;
        precise float _215 = BLENDWEIGHT.z / _211;
        precise float _216 = BLENDWEIGHT.w / _211;
        uvec4 _223 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_202)).x * 13u) + 4u]);
        uint _224 = _223.x;
        uint _226 = (_224 + uint(float(BLENDINDICES.x))) * 3u;
        uint _233 = _226 + 1u;
        uint _240 = _226 + 2u;
        precise float _247 = _213 * cbObjMatrix._m0[_226].x;
        precise float _248 = _213 * cbObjMatrix._m0[_233].x;
        precise float _249 = _213 * cbObjMatrix._m0[_240].x;
        precise float _250 = _213 * cbObjMatrix._m0[_226].y;
        precise float _251 = _213 * cbObjMatrix._m0[_233].y;
        precise float _252 = _213 * cbObjMatrix._m0[_240].y;
        precise float _253 = _213 * cbObjMatrix._m0[_226].z;
        precise float _254 = _213 * cbObjMatrix._m0[_233].z;
        precise float _255 = _213 * cbObjMatrix._m0[_240].z;
        precise float _256 = _213 * cbObjMatrix._m0[_226].w;
        precise float _257 = _213 * cbObjMatrix._m0[_233].w;
        precise float _258 = _213 * cbObjMatrix._m0[_240].w;
        uint _261 = (_224 + uint(float(BLENDINDICES.y))) * 3u;
        uint _268 = _261 + 1u;
        uint _275 = _261 + 2u;
        precise float _282 = _214 * cbObjMatrix._m0[_261].x;
        precise float _283 = _214 * cbObjMatrix._m0[_268].x;
        precise float _284 = _214 * cbObjMatrix._m0[_275].x;
        precise float _285 = _214 * cbObjMatrix._m0[_261].y;
        precise float _286 = _214 * cbObjMatrix._m0[_268].y;
        precise float _287 = _214 * cbObjMatrix._m0[_275].y;
        precise float _288 = _214 * cbObjMatrix._m0[_261].z;
        precise float _289 = _214 * cbObjMatrix._m0[_268].z;
        precise float _290 = _214 * cbObjMatrix._m0[_275].z;
        precise float _291 = _214 * cbObjMatrix._m0[_261].w;
        precise float _292 = _214 * cbObjMatrix._m0[_268].w;
        precise float _293 = _214 * cbObjMatrix._m0[_275].w;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        precise float _305 = _258 + _293;
        uint _308 = (_224 + uint(float(BLENDINDICES.z))) * 3u;
        uint _315 = _308 + 1u;
        uint _322 = _308 + 2u;
        precise float _329 = _215 * cbObjMatrix._m0[_308].x;
        precise float _330 = _215 * cbObjMatrix._m0[_315].x;
        precise float _331 = _215 * cbObjMatrix._m0[_322].x;
        precise float _332 = _215 * cbObjMatrix._m0[_308].y;
        precise float _333 = _215 * cbObjMatrix._m0[_315].y;
        precise float _334 = _215 * cbObjMatrix._m0[_322].y;
        precise float _335 = _215 * cbObjMatrix._m0[_308].z;
        precise float _336 = _215 * cbObjMatrix._m0[_315].z;
        precise float _337 = _215 * cbObjMatrix._m0[_322].z;
        precise float _338 = _215 * cbObjMatrix._m0[_308].w;
        precise float _339 = _215 * cbObjMatrix._m0[_315].w;
        precise float _340 = _215 * cbObjMatrix._m0[_322].w;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        uint _355 = (_224 + uint(float(BLENDINDICES.w))) * 3u;
        uint _362 = _355 + 1u;
        uint _369 = _355 + 2u;
        precise float _376 = _216 * cbObjMatrix._m0[_355].x;
        precise float _377 = _216 * cbObjMatrix._m0[_362].x;
        precise float _378 = _216 * cbObjMatrix._m0[_369].x;
        precise float _379 = _216 * cbObjMatrix._m0[_355].y;
        precise float _380 = _216 * cbObjMatrix._m0[_362].y;
        precise float _381 = _216 * cbObjMatrix._m0[_369].y;
        precise float _382 = _216 * cbObjMatrix._m0[_355].z;
        precise float _383 = _216 * cbObjMatrix._m0[_362].z;
        precise float _384 = _216 * cbObjMatrix._m0[_369].z;
        precise float _385 = _216 * cbObjMatrix._m0[_355].w;
        precise float _386 = _216 * cbObjMatrix._m0[_362].w;
        precise float _387 = _216 * cbObjMatrix._m0[_369].w;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        _418 = _388;
        _419 = _391;
        _420 = _394;
        _421 = _397;
        _422 = _389;
        _423 = _392;
        _424 = _395;
        _425 = _398;
        _426 = _390;
        _427 = _393;
        _428 = _396;
        _429 = _399;
    }
    else
    {
        _418 = cbvModelParam._m0[0u].x;
        _419 = cbvModelParam._m0[0u].y;
        _420 = cbvModelParam._m0[0u].z;
        _421 = cbvModelParam._m0[0u].w;
        _422 = cbvModelParam._m0[1u].x;
        _423 = cbvModelParam._m0[1u].y;
        _424 = cbvModelParam._m0[1u].z;
        _425 = cbvModelParam._m0[1u].w;
        _426 = cbvModelParam._m0[2u].x;
        _427 = cbvModelParam._m0[2u].y;
        _428 = cbvModelParam._m0[2u].z;
        _429 = cbvModelParam._m0[2u].w;
    }
    precise float _430 = POSITION.x * _418;
    precise float _431 = POSITION.y * _419;
    precise float _432 = _431 + _430;
    precise float _433 = POSITION.z * _420;
    precise float _434 = _433 + _432;
    precise float _435 = 1.0 * _421;
    precise float _436 = _435 + _434;
    precise float _437 = POSITION.x * _422;
    precise float _438 = POSITION.y * _423;
    precise float _439 = _438 + _437;
    precise float _440 = POSITION.z * _424;
    precise float _441 = _440 + _439;
    precise float _442 = 1.0 * _425;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.x * _426;
    precise float _445 = POSITION.y * _427;
    precise float _446 = _445 + _444;
    precise float _447 = POSITION.z * _428;
    precise float _448 = _447 + _446;
    precise float _449 = 1.0 * _429;
    precise float _450 = _449 + _448;
    float _456 = cbSceneParam._m0[3u].x - _436;
    float _457 = cbSceneParam._m0[3u].y - _443;
    float _458 = cbSceneParam._m0[3u].z - _450;
    uint _478 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _83;
    uvec4 _480 = texelFetch(g_InstanceIndexBuffer, int(_478));
    uint _481 = _480.x;
    precise float _492 = _436 - cbSceneParam._m0[3u].x;
    precise float _493 = _443 - cbSceneParam._m0[3u].y;
    precise float _494 = _450 - cbSceneParam._m0[3u].z;
    precise float _522 = _492 * cbSceneParam._m0[24u].x;
    precise float _523 = _493 * cbSceneParam._m0[24u].y;
    precise float _524 = _523 + _522;
    precise float _525 = _494 * cbSceneParam._m0[24u].z;
    precise float _526 = _525 + _524;
    precise float _527 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _528 = _527 + _526;
    precise float _529 = _492 * cbSceneParam._m0[25u].x;
    precise float _530 = _493 * cbSceneParam._m0[25u].y;
    precise float _531 = _530 + _529;
    precise float _532 = _494 * cbSceneParam._m0[25u].z;
    precise float _533 = _532 + _531;
    precise float _534 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _535 = _534 + _533;
    precise float _536 = _492 * cbSceneParam._m0[26u].x;
    precise float _537 = _493 * cbSceneParam._m0[26u].y;
    precise float _538 = _537 + _536;
    precise float _539 = _494 * cbSceneParam._m0[26u].z;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _542 = _541 + _540;
    precise float _543 = _492 * cbSceneParam._m0[27u].x;
    precise float _544 = _493 * cbSceneParam._m0[27u].y;
    precise float _545 = _544 + _543;
    precise float _546 = _494 * cbSceneParam._m0[27u].z;
    precise float _547 = _546 + _545;
    precise float _548 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _549 = _548 + _547;
    gl_Position.x = _528;
    gl_Position.y = _535;
    gl_Position.z = _542;
    gl_Position.w = _549;
    NORMAL_1.x = fma(_169, _420, fma(_168, _419, _418 * _166));
    NORMAL_1.y = fma(_169, _424, fma(_168, _423, _422 * _166));
    NORMAL_1.z = fma(_169, _428, fma(_168, _427, _426 * _166));
    NORMAL_1.w = float(_481);
    TANGENT_1.x = fma(_178, _420, fma(_177, _419, _418 * _176));
    TANGENT_1.y = fma(_178, _424, fma(_177, _423, _422 * _176));
    TANGENT_1.z = fma(_178, _428, fma(_177, _427, _426 * _176));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _542;
    TEXCOORD_4.y = _549;
    TEXCOORD_8 = sqrt(((_456 * _456) + (_457 * _457)) + (_458 * _458));
    gl_ClipDistance[0u] = dot(vec4(_528, _535, _542, _549), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_528, _535, _542, _549), vec4(cbInstanceData._m0[(_481 * 13u) + 3u]));
}


