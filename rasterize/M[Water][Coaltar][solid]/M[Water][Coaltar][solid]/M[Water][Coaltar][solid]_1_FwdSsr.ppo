#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 4) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _99 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _100 = _99 * NORMAL.x;
    float _101 = _99 * NORMAL.y;
    float _102 = _99 * NORMAL.z;
    vec4 _125 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_7, SS_BumpMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _133 = cbMtdParam._m0[14u].w + _125.z;
    float _684 = isnan(0.0) ? _133 : (isnan(_133) ? 0.0 : max(_133, 0.0));
    float _135 = isnan(1.0) ? _684 : (isnan(_684) ? 1.0 : min(_684, 1.0));
    float _149 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _150 = POSITION_1.x / POSITION_1.w;
    float _151 = POSITION_1.y / POSITION_1.w;
    float _155 = (_150 * 0.5) + 0.5;
    float _156 = 0.5 - (_151 * 0.5);
    float _161;
    float _163;
    float _165;
    float _167;
    if (_135 < cbPerScene._m0[22u].z)
    {
        _161 = 0.0;
        _163 = 0.0;
        _165 = 0.0;
        _167 = 0.0;
    }
    else
    {
        float _173 = 1.0 / _149;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        float frontier_phi_1_2_ladder_2;
        float frontier_phi_1_2_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _173))
        {
            float _199 = fma(_102, cbPerScene._m0[8u].z, fma(_101, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _100));
            float _202 = fma(_102, cbPerScene._m0[9u].z, fma(_101, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _100));
            float _205 = fma(_102, cbPerScene._m0[10u].z, fma(_101, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _100));
            float _212 = (_149 * _150) * cbPerScene._m0[28u].x;
            float _214 = (_149 * _151) * cbPerScene._m0[28u].y;
            float _218 = inversesqrt(dot(vec3(_212, _214, _149), vec3(_212, _214, _149)));
            float _219 = _212 * _218;
            float _220 = _214 * _218;
            float _221 = _218 * _149;
            float _225 = dot(vec3(_219, _220, _221), vec3(_199, _202, _205)) * 2.0;
            float _230 = _219 - (_225 * _199);
            float _231 = _220 - (_225 * _202);
            float _232 = _221 - (_225 * _205);
            float _236 = inversesqrt(dot(vec3(_230, _231, _232), vec3(_230, _231, _232)));
            float _239 = _232 * _236;
            float frontier_phi_1_2_ladder_3_ladder;
            float frontier_phi_1_2_ladder_3_ladder_1;
            float frontier_phi_1_2_ladder_3_ladder_2;
            float frontier_phi_1_2_ladder_3_ladder_3;
            if (_239 < cbPerScene._m0[16u].x)
            {
                frontier_phi_1_2_ladder_3_ladder = 0.0;
                frontier_phi_1_2_ladder_3_ladder_1 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_2 = 0.0;
                frontier_phi_1_2_ladder_3_ladder_3 = 0.0;
            }
            else
            {
                float _252 = abs(dot(vec3((-0.0) - _219, (-0.0) - _220, (-0.0) - _221), vec3(_199, _202, _205)));
                float _695 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
                float _263 = (((_135 * _135) * 0.959999978542327880859375) * exp2(log2(1.0 - (isnan(1.0) ? _695 : (isnan(_695) ? 1.0 : min(_695, 1.0)))) * 5.0)) + 0.039999999105930328369140625;
                float _272 = (cbPerScene._m0[29u].x * (1.0 - _135)) + cbPerScene._m0[29u].y;
                float _706 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
                float _280 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _706 : (isnan(_706) ? 1.0 : min(_706, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                float frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
                if (_263 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = 0.0;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = 0.0;
                }
                else
                {
                    float _283 = _239 - cbPerScene._m0[16u].x;
                    float _717 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
                    float _284 = isnan(1.0) ? _717 : (isnan(_717) ? 1.0 : min(_717, 1.0));
                    float _285 = _284 * _284;
                    float _287 = (_263 - cbPerScene._m0[22u].x) * 10.0;
                    float _728 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
                    float _289 = isnan(1.0) ? _728 : (isnan(_728) ? 1.0 : min(_728, 1.0));
                    float _290 = isnan(_289) ? _285 : (isnan(_285) ? _289 : min(_285, _289));
                    float _294 = (cbPerScene._m0[21u].x - _149) * cbPerScene._m0[21u].z;
                    float _744 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
                    float _295 = isnan(1.0) ? _744 : (isnan(_744) ? 1.0 : min(_744, 1.0));
                    float _296 = isnan(_295) ? _290 : (isnan(_290) ? _295 : min(_290, _295));
                    float _297 = (_230 * _236) + _212;
                    float _298 = (_231 * _236) + _214;
                    float _299 = _239 + _149;
                    float _331 = fma(_299, cbPerScene._m0[7u].z, fma(_298, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _297)) + cbPerScene._m0[7u].w;
                    float _335 = ((fma(_299, cbPerScene._m0[4u].z, fma(_298, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _297)) + cbPerScene._m0[4u].w) / _331) - _155;
                    float _336 = ((fma(_299, cbPerScene._m0[5u].z, fma(_298, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _297)) + cbPerScene._m0[5u].w) / _331) - _156;
                    float _342 = cbPerScene._m0[18u].x * _335;
                    float _343 = cbPerScene._m0[18u].y * _336;
                    float _348 = sqrt((_342 * _342) + (_343 * _343)) + 9.9999997473787516355514526367188e-06;
                    float _353 = (_335 / _348) * _280;
                    float _354 = (_336 / _348) * _280;
                    float _355 = (((1.0 / _299) - _173) / _348) * _280;
                    float _384 = abs(float(_353 > 0.0) - _155) / (abs(_353) + 1.0000000116860974230803549289703e-07);
                    float _385 = abs(float(_354 > 0.0) - _156) / (abs(_354) + 1.0000000116860974230803549289703e-07);
                    float _387 = (abs(((_355 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _173) / (abs(_355) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _388 = isnan(_385) ? _384 : (isnan(_384) ? _385 : min(_384, _385));
                    float _389 = isnan(_387) ? _388 : (isnan(_388) ? _387 : min(_388, _387));
                    uint _392 = uint(int(isnan(cbPerScene._m0[23u].y) ? _389 : (isnan(_389) ? cbPerScene._m0[23u].y : min(_389, cbPerScene._m0[23u].y))));
                    float _168;
                    float _397;
                    float _399;
                    float _401;
                    if (int(_392) > int(0u))
                    {
                        float _394 = _355 + _173;
                        float _395 = _354 + _156;
                        float _396 = _353 + _155;
                        float _398;
                        float _400;
                        float _402;
                        float _403;
                        uint _414;
                        float _416;
                        float _418;
                        float _420;
                        float _422;
                        float _424;
                        float _426;
                        float _428;
                        uint _430;
                        float _432;
                        float _434;
                        float _436;
                        float _409 = 0.0;
                        float _410 = 0.0;
                        float _411 = 0.0;
                        float _412 = 0.0;
                        uint _413 = 0u;
                        float _415 = _173;
                        float _417 = _396;
                        float _419 = _395;
                        float _421 = _394;
                        float _423 = _155;
                        float _425 = _156;
                        float _427 = _173;
                        uint _429 = 1u;
                        float _431 = 0.0;
                        float _433 = 0.0;
                        float _435 = 0.0;
                        float _447;
                        float _454;
                        float _455;
                        float _456;
                        float _457;
                        float _458;
                        float _459;
                        uint _460;
                        float _461;
                        bool _468;
                        for (;;)
                        {
                            _447 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _417, cbSceneParam._m0[86u].y * _419), 0.0).x;
                            bool _453 = _413 == (_392 + 4294967295u);
                            _454 = _453 ? _431 : _417;
                            _455 = _453 ? _433 : _419;
                            _456 = _453 ? _435 : _421;
                            _457 = _453 ? _431 : _423;
                            _458 = _453 ? _433 : _425;
                            _459 = _453 ? _435 : _427;
                            _460 = _453 ? 1u : _429;
                            _461 = _453 ? (-1.0) : (_421 - _447);
                            _468 = (_460 != 0u) && ((_461 <= 0.0) && ((_453 ? (-1.0) : (_447 - (_415 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_14_pred;
                            float frontier_phi_14_pred_1;
                            float frontier_phi_14_pred_2;
                            uint frontier_phi_14_pred_3;
                            float frontier_phi_14_pred_4;
                            float frontier_phi_14_pred_5;
                            float frontier_phi_14_pred_6;
                            float frontier_phi_14_pred_7;
                            float frontier_phi_14_pred_8;
                            float frontier_phi_14_pred_9;
                            float frontier_phi_14_pred_10;
                            float frontier_phi_14_pred_11;
                            float frontier_phi_14_pred_12;
                            float frontier_phi_14_pred_13;
                            float frontier_phi_14_pred_14;
                            uint frontier_phi_14_pred_15;
                            if (_468)
                            {
                                uint _478 = uint(int(log2(_280) + 0.999000012874603271484375));
                                float _489;
                                float _491;
                                float _493;
                                float _495;
                                float _497;
                                float _499;
                                float _501;
                                if (int(_478) > int(0u))
                                {
                                    uint _599;
                                    float _601;
                                    float _602;
                                    float _603;
                                    float _604;
                                    float _605;
                                    float _606;
                                    float _607;
                                    _599 = 0u;
                                    _601 = _454;
                                    _602 = _455;
                                    _603 = _456;
                                    _604 = _457;
                                    _605 = _458;
                                    _606 = _459;
                                    _607 = _447;
                                    float _490;
                                    float _492;
                                    float _494;
                                    float _496;
                                    float _498;
                                    float _500;
                                    float _502;
                                    for (;;)
                                    {
                                        float _611 = (_604 + _601) * 0.5;
                                        float _612 = (_605 + _602) * 0.5;
                                        float _613 = (_606 + _603) * 0.5;
                                        vec4 _621 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _611, cbSceneParam._m0[86u].y * _612), 0.0);
                                        float _623 = _621.x;
                                        bool _625 = (_613 - _623) < 0.0;
                                        _490 = _625 ? _611 : _601;
                                        _492 = _625 ? _612 : _602;
                                        _494 = _625 ? _613 : _603;
                                        _496 = _625 ? _604 : _611;
                                        _498 = _625 ? _605 : _612;
                                        _500 = _625 ? _606 : _613;
                                        _502 = _625 ? _623 : _607;
                                        uint _600 = _599 + 1u;
                                        if (_600 == _478)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _599 = _600;
                                            _601 = _490;
                                            _602 = _492;
                                            _603 = _494;
                                            _604 = _496;
                                            _605 = _498;
                                            _606 = _500;
                                            _607 = _502;
                                        }
                                    }
                                    _489 = _490;
                                    _491 = _492;
                                    _493 = _494;
                                    _495 = _496;
                                    _497 = _498;
                                    _499 = _500;
                                    _501 = _502;
                                }
                                else
                                {
                                    _489 = _454;
                                    _491 = _455;
                                    _493 = _456;
                                    _495 = _457;
                                    _497 = _458;
                                    _499 = _459;
                                    _501 = _447;
                                }
                                float _511 = cbPerScene._m0[28u].x * ((_489 * 2.0) + (-1.0));
                                float _512 = cbPerScene._m0[28u].y * (1.0 - (_491 * 2.0));
                                float _544 = fma(_501, cbPerScene._m0[27u].w, fma(_512, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _511) + cbPerScene._m0[27u].z);
                                float _545 = fma(_501, cbPerScene._m0[24u].w, fma(_512, cbPerScene._m0[24u].y, _511 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _544;
                                float _546 = fma(_501, cbPerScene._m0[25u].w, fma(_512, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _511) + cbPerScene._m0[25u].z) / _544;
                                vec4 _555 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _545, cbSceneParam._m0[87u].w * _546), 0.0);
                                float _560 = isnan(_296) ? 1.0 : (isnan(1.0) ? _296 : min(1.0, _296));
                                float _561 = 0.5 - _545;
                                float _562 = 0.5 - _546;
                                float _563 = _561 * 2.0;
                                float _564 = _562 * 2.0;
                                float _565 = _563 * _563;
                                float _566 = _564 * _564;
                                float _780 = isnan(0.0) ? _565 : (isnan(_565) ? 0.0 : max(_565, 0.0));
                                float _791 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
                                float _575 = inversesqrt(dot(vec2(_353, _354), vec2(_353, _354)));
                                float _581 = inversesqrt(dot(vec2(_563, _564), vec2(_563, _564)));
                                float _587 = dot(vec2((_561 * (-2.0)) * _581, (_562 * (-2.0)) * _581), vec2(_575 * _353, _575 * _354));
                                float _802 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
                                float _594 = ((1.0 - (isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0)))) * (1.0 - (isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0))))) * (4.0 - ((isnan(1.0) ? _802 : (isnan(_802) ? 1.0 : min(_802, 1.0))) * 2.0));
                                float _813 = isnan(0.0) ? _594 : (isnan(_594) ? 0.0 : max(_594, 0.0));
                                float _595 = isnan(1.0) ? _813 : (isnan(_813) ? 1.0 : min(_813, 1.0));
                                float _596 = _595 * _595;
                                frontier_phi_14_pred = _435;
                                frontier_phi_14_pred_1 = _433;
                                frontier_phi_14_pred_2 = _431;
                                frontier_phi_14_pred_3 = _460;
                                frontier_phi_14_pred_4 = _499;
                                frontier_phi_14_pred_5 = _497;
                                frontier_phi_14_pred_6 = _495;
                                frontier_phi_14_pred_7 = _493;
                                frontier_phi_14_pred_8 = _491;
                                frontier_phi_14_pred_9 = _489;
                                frontier_phi_14_pred_10 = _415;
                                frontier_phi_14_pred_11 = isnan(_596) ? _560 : (isnan(_560) ? _596 : min(_560, _596));
                                frontier_phi_14_pred_12 = _555.z;
                                frontier_phi_14_pred_13 = _555.y;
                                frontier_phi_14_pred_14 = _555.x;
                                frontier_phi_14_pred_15 = _392;
                            }
                            else
                            {
                                bool _480 = _461 > 0.0;
                                frontier_phi_14_pred = _480 ? _456 : _435;
                                frontier_phi_14_pred_1 = _480 ? _455 : _433;
                                frontier_phi_14_pred_2 = _480 ? _454 : _431;
                                frontier_phi_14_pred_3 = uint(_480);
                                frontier_phi_14_pred_4 = _456;
                                frontier_phi_14_pred_5 = _455;
                                frontier_phi_14_pred_6 = _454;
                                frontier_phi_14_pred_7 = _456 + _355;
                                frontier_phi_14_pred_8 = _455 + _354;
                                frontier_phi_14_pred_9 = _454 + _353;
                                frontier_phi_14_pred_10 = _447;
                                frontier_phi_14_pred_11 = _412;
                                frontier_phi_14_pred_12 = _411;
                                frontier_phi_14_pred_13 = _410;
                                frontier_phi_14_pred_14 = _409;
                                frontier_phi_14_pred_15 = _413 + 1u;
                            }
                            _436 = frontier_phi_14_pred;
                            _434 = frontier_phi_14_pred_1;
                            _432 = frontier_phi_14_pred_2;
                            _430 = frontier_phi_14_pred_3;
                            _428 = frontier_phi_14_pred_4;
                            _426 = frontier_phi_14_pred_5;
                            _424 = frontier_phi_14_pred_6;
                            _422 = frontier_phi_14_pred_7;
                            _420 = frontier_phi_14_pred_8;
                            _418 = frontier_phi_14_pred_9;
                            _416 = frontier_phi_14_pred_10;
                            _403 = frontier_phi_14_pred_11;
                            _402 = frontier_phi_14_pred_12;
                            _400 = frontier_phi_14_pred_13;
                            _398 = frontier_phi_14_pred_14;
                            _414 = frontier_phi_14_pred_15;
                            if (int(_414) < int(_392))
                            {
                                _409 = _398;
                                _410 = _400;
                                _411 = _402;
                                _412 = _403;
                                _413 = _414;
                                _415 = _416;
                                _417 = _418;
                                _419 = _420;
                                _421 = _422;
                                _423 = _424;
                                _425 = _426;
                                _427 = _428;
                                _429 = _430;
                                _431 = _432;
                                _433 = _434;
                                _435 = _436;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _397 = _398;
                        _399 = _400;
                        _401 = _402;
                        _168 = _403;
                    }
                    else
                    {
                        _397 = 0.0;
                        _399 = 0.0;
                        _401 = 0.0;
                        _168 = 0.0;
                    }
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    float frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                    if ((isnan(_397) || isnan(_399)) || isnan(_401))
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = 0.0;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder = (_168 * _397) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1 = _168;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2 = (_168 * _401) * cbPerScene._m0[28u].w;
                        frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3 = (_168 * _399) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_1_2_ladder_3_ladder_4_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_1;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_2;
                    frontier_phi_1_2_ladder_3_ladder_4_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_7_ladder_3;
                }
                frontier_phi_1_2_ladder_3_ladder = frontier_phi_1_2_ladder_3_ladder_4_ladder;
                frontier_phi_1_2_ladder_3_ladder_1 = frontier_phi_1_2_ladder_3_ladder_4_ladder_1;
                frontier_phi_1_2_ladder_3_ladder_2 = frontier_phi_1_2_ladder_3_ladder_4_ladder_2;
                frontier_phi_1_2_ladder_3_ladder_3 = frontier_phi_1_2_ladder_3_ladder_4_ladder_3;
            }
            frontier_phi_1_2_ladder = frontier_phi_1_2_ladder_3_ladder;
            frontier_phi_1_2_ladder_1 = frontier_phi_1_2_ladder_3_ladder_1;
            frontier_phi_1_2_ladder_2 = frontier_phi_1_2_ladder_3_ladder_2;
            frontier_phi_1_2_ladder_3 = frontier_phi_1_2_ladder_3_ladder_3;
        }
        else
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = 0.0;
            frontier_phi_1_2_ladder_2 = 0.0;
            frontier_phi_1_2_ladder_3 = 0.0;
        }
        _161 = frontier_phi_1_2_ladder;
        _163 = frontier_phi_1_2_ladder_3;
        _165 = frontier_phi_1_2_ladder_2;
        _167 = frontier_phi_1_2_ladder_1;
    }
    SV_Target.x = _161;
    SV_Target.y = _163;
    SV_Target.z = _165;
    SV_Target.w = _167;
}


