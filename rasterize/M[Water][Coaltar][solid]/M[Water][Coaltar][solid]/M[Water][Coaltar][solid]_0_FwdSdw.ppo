#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _962;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _193 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _194 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _195 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _201 = inversesqrt(dot(vec3(_193, _194, _195), vec3(_193, _194, _195)));
    float _202 = _201 * _193;
    float _203 = _201 * _194;
    float _204 = _201 * _195;
    float _208 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _209 = _208 * NORMAL.x;
    float _210 = _208 * NORMAL.y;
    float _211 = _208 * NORMAL.z;
    float _215 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _216 = _215 * TANGENT.x;
    float _217 = _215 * TANGENT.y;
    float _218 = _215 * TANGENT.z;
    float _262 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _272 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _262);
    float _273 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _262);
    float _274 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _262);
    float _282 = (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x;
    float _283 = (cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y;
    float _294 = dot(vec3(_272, _273, _274), vec3(_202, _203, _204));
    float _297 = dot(vec3(_272, _273, _274), vec3(_216, _217, _218));
    float _300 = dot(vec3(_272, _273, _274), vec3(_209, _210, _211));
    float _306 = inversesqrt(dot(vec3(_294, _297, _300), vec3(_294, _297, _300)));
    float _330 = dot(vec4(texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[12u].y;
    vec4 _350 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_294 * cbMtdParam._m0[12u].x) * _306) * _330) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_297 * cbMtdParam._m0[12u].x) * _306) * _330) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _373 = inversesqrt(dot(vec3(_272, _273, _274), vec3(_272, _273, _274)));
    float _374 = _373 * _272;
    float _375 = _373 * _273;
    float _376 = _373 * _274;
    float _380 = dot(vec4(_374, _375, _376, 0.0), vec4(_209, _210, _211, 0.0)) - cbMtdParam._m0[12u].w;
    float _3642 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _387 = exp2(log2(1.0 - (isnan(1.0) ? _3642 : (isnan(_3642) ? 1.0 : min(_3642, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].x : (isnan(cbMtdParam._m0[13u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].x, 0.001000000047497451305389404296875))));
    float _402 = (((cbMtdParam._m0[10u].x * 4.55000019073486328125) * _350.x) * cbMtdParam._m0[9u].x) * ((_387 * (cbMtdParam._m0[11u].x + (-1.0))) + 1.0);
    float _406 = (((cbMtdParam._m0[10u].y * 4.55000019073486328125) * _350.y) * cbMtdParam._m0[9u].y) * ((_387 * (cbMtdParam._m0[11u].y + (-1.0))) + 1.0);
    float _410 = (((cbMtdParam._m0[10u].z * 4.55000019073486328125) * _350.z) * cbMtdParam._m0[9u].z) * ((_387 * (cbMtdParam._m0[11u].z + (-1.0))) + 1.0);
    vec4 _423 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _282) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _283) + cbTextureTilingScale._m0[4u].w));
    float _431 = (_423.x * 2.0) + (-1.0);
    float _432 = (_423.y * 2.0) + (-1.0);
    float _433 = dot(vec2(_431, _432), vec2(_431, _432));
    float _3658 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _438 = sqrt(1.0 - (isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0))));
    float _443 = cbMtdParam._m0[14u].w + _423.z;
    vec4 _455 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _282) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _283) + cbTextureTilingScale._m0[0u].w));
    float _459 = cbMtdParam._m0[13u].w * _455.x;
    float _477 = fma(_438, _209, fma(_432, _216, _431 * _202));
    float _480 = fma(_438, _210, fma(_432, _217, _431 * _203));
    float _483 = fma(_438, _211, fma(_432, _218, _431 * _204));
    float _487 = inversesqrt(dot(vec3(_477, _480, _483), vec3(_477, _480, _483)));
    float _488 = _487 * _477;
    float _489 = _487 * _480;
    float _490 = _487 * _483;
    float _3669 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _491 = isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0));
    float _492 = isnan(0.0) ? _459 : (isnan(_459) ? 0.0 : max(_459, 0.0));
    float _3685 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
    float _3696 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
    float _3707 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _511 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _517 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _518 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _539 = fma(_490, cbSceneParam._m0[5u].z, fma(_489, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _488));
    float _542 = fma(_490, cbSceneParam._m0[6u].z, fma(_489, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _488));
    float _545 = fma(_490, cbSceneParam._m0[7u].z, fma(_489, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _488));
    uint _558 = uint(roundEven(NORMAL.w)) * 13u;
    uint _560 = (_558 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _566 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0)))) * cbInstanceData._m0[_560].x;
    float _567 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3696 : (isnan(_3696) ? 1.0 : min(_3696, 1.0)))) * cbInstanceData._m0[_560].y;
    float _568 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3707 : (isnan(_3707) ? 1.0 : min(_3707, 1.0)))) * cbInstanceData._m0[_560].z;
    float _3718 = isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : max(_566, 0.0));
    float _569 = isnan(1.0) ? _3718 : (isnan(_3718) ? 1.0 : min(_3718, 1.0));
    float _3729 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _570 = isnan(1.0) ? _3729 : (isnan(_3729) ? 1.0 : min(_3729, 1.0));
    float _3740 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _571 = isnan(1.0) ? _3740 : (isnan(_3740) ? 1.0 : min(_3740, 1.0));
    vec4 _580 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _517, cbSceneParam._m0[86u].y * _518));
    float _583 = _580.x * TEXCOORD_1.w;
    float _584 = dot(vec3(_488, _489, _490), vec3(_374, _375, _376));
    float _587 = _584 * 2.0;
    float _591 = (_587 * _488) - _374;
    float _592 = (_587 * _489) - _375;
    float _593 = (_587 * _490) - _376;
    float _597 = abs(dot(vec3(_374, _375, _376), vec3(_488, _489, _490)));
    float _3751 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _598 = isnan(1.0) ? _3751 : (isnan(_3751) ? 1.0 : min(_3751, 1.0));
    float _606 = 10.0 / (_511 + 10.0);
    float _607 = sqrt(_491);
    float _619 = exp2((_607 * 5.0) * log2(1.0 - (_598 * 0.999000012874603271484375))) / (4.0 - (_607 * 3.0));
    float _651 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _655 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _659 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _961;
    float _963;
    float _964;
    float _965;
    float _966;
    float _967;
    float _968;
    float _969;
    float _970;
    float _971;
    float _972;
    float _973;
    float _974;
    float _975;
    float _976;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _686 = fma(_659, cbModelParam._m0[26u].z, fma(_655, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _651));
        float _690 = fma(_659, cbModelParam._m0[27u].z, fma(_655, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _651));
        float _694 = fma(_659, cbModelParam._m0[28u].z, fma(_655, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _651));
        float _719 = _651 + _488;
        float _720 = _655 + _489;
        float _721 = _659 + _490;
        float _731 = fma(_721, cbModelParam._m0[26u].z, fma(_720, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _719)) - _686;
        float _732 = fma(_721, cbModelParam._m0[27u].z, fma(_720, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _719)) - _690;
        float _733 = fma(_721, cbModelParam._m0[28u].z, fma(_720, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _719)) - _694;
        float _737 = inversesqrt(dot(vec3(_731, _732, _733), vec3(_731, _732, _733)));
        float _750 = ((_737 * _731) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_686 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _751 = ((_737 * _732) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_690 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _752 = ((_737 * _733) / cbModelParam._m0[34u].z) + ((((((_694 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _755 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_750, _751, _752), 0.0);
        vec4 _762 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_750, _751, _752), 0.0);
        vec4 _769 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_750, _751, _752), 0.0);
        vec4 _776 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_750, _751, _752), 0.0);
        float _789 = exp2((_755.w + (-0.5)) * 20.0) * 2.0;
        float _790 = _789 * (_755.x + (-0.5));
        float _791 = _789 * (_755.y + (-0.5));
        float _792 = _789 * (_755.z + (-0.5));
        float _799 = exp2((_762.w + (-0.5)) * 20.0) * 2.0;
        float _800 = _799 * (_762.x + (-0.5));
        float _801 = _799 * (_762.y + (-0.5));
        float _802 = _799 * (_762.z + (-0.5));
        float _809 = exp2((_769.w + (-0.5)) * 20.0) * 2.0;
        float _810 = _809 * (_769.x + (-0.5));
        float _811 = _809 * (_769.y + (-0.5));
        float _812 = _809 * (_769.z + (-0.5));
        float _819 = exp2((_776.w + (-0.5)) * 20.0) * 2.0;
        float _820 = _819 * (_776.x + (-0.5));
        float _821 = _819 * (_776.y + (-0.5));
        float _822 = _819 * (_776.z + (-0.5));
        float _823 = isnan(0.0) ? _820 : (isnan(_820) ? 0.0 : max(_820, 0.0));
        float _824 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
        float _825 = isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0));
        float _826 = _790 * 0.5;
        float _827 = _800 * 0.5;
        float _828 = _810 * 0.5;
        float _829 = dot(vec3(_826, _827, _828), vec3(_826, _827, _828));
        float _834 = (_829 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_829);
        float _843 = (dot(vec3(_488, _489, _490), vec3(_834 * _826, _834 * _827, _834 * _828)) + 1.0) * 0.5;
        float _3777 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
        float _853 = sqrt(((_827 * _827) + (_826 * _826)) + (_828 * _828)) / (_823 + 9.9999997473787516355514526367188e-06);
        float _3788 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
        float _854 = isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0));
        float _855 = _854 * 2.0;
        float _859 = (1.0 - _854) / (_854 + 1.0);
        float _3799 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
        float _860 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
        float _869 = ((((1.0 - _860) * (_855 + 2.0)) * exp2(log2(isnan(1.0) ? _3777 : (isnan(_3777) ? 1.0 : min(_3777, 1.0))) * (_855 + 1.0))) + _860) * _823;
        float _870 = _791 * 0.5;
        float _871 = _801 * 0.5;
        float _872 = _811 * 0.5;
        float _873 = dot(vec3(_870, _871, _872), vec3(_870, _871, _872));
        float _878 = (_873 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_873);
        float _886 = (dot(vec3(_488, _489, _490), vec3(_878 * _870, _878 * _871, _878 * _872)) + 1.0) * 0.5;
        float _3810 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _895 = sqrt(((_871 * _871) + (_870 * _870)) + (_872 * _872)) / (_824 + 9.9999997473787516355514526367188e-06);
        float _3821 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
        float _896 = isnan(1.0) ? _3821 : (isnan(_3821) ? 1.0 : min(_3821, 1.0));
        float _897 = _896 * 2.0;
        float _901 = (1.0 - _896) / (_896 + 1.0);
        float _3832 = isnan(0.0) ? _901 : (isnan(_901) ? 0.0 : max(_901, 0.0));
        float _902 = isnan(1.0) ? _3832 : (isnan(_3832) ? 1.0 : min(_3832, 1.0));
        float _911 = ((((1.0 - _902) * (_897 + 2.0)) * exp2(log2(isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0))) * (_897 + 1.0))) + _902) * _824;
        float _912 = _792 * 0.5;
        float _913 = _802 * 0.5;
        float _914 = _812 * 0.5;
        float _915 = dot(vec3(_912, _913, _914), vec3(_912, _913, _914));
        float _920 = (_915 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_915);
        float _928 = (dot(vec3(_488, _489, _490), vec3(_920 * _912, _920 * _913, _920 * _914)) + 1.0) * 0.5;
        float _3843 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _937 = sqrt(((_913 * _913) + (_912 * _912)) + (_914 * _914)) / (_825 + 9.9999997473787516355514526367188e-06);
        float _3854 = isnan(0.0) ? _937 : (isnan(_937) ? 0.0 : max(_937, 0.0));
        float _938 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
        float _939 = _938 * 2.0;
        float _943 = (1.0 - _938) / (_938 + 1.0);
        float _3865 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
        float _944 = isnan(1.0) ? _3865 : (isnan(_3865) ? 1.0 : min(_3865, 1.0));
        float _953 = ((((1.0 - _944) * (_939 + 2.0)) * exp2(log2(isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))) * (_939 + 1.0))) + _944) * _825;
        _961 = _792;
        _963 = _791;
        _964 = _790;
        _965 = _802;
        _966 = _801;
        _967 = _800;
        _968 = _812;
        _969 = _811;
        _970 = _810;
        _971 = _825;
        _972 = _824;
        _973 = _823;
        _974 = cbModelParam._m0[36u].z * (isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0)));
        _975 = cbModelParam._m0[36u].z * (isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0)));
        _976 = cbModelParam._m0[36u].z * (isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0)));
    }
    else
    {
        _961 = _962;
        _963 = _962;
        _964 = _962;
        _965 = _962;
        _966 = _962;
        _967 = _962;
        _968 = _962;
        _969 = _962;
        _970 = _962;
        _971 = _962;
        _972 = _962;
        _973 = _962;
        _974 = 0.0;
        _975 = 0.0;
        _976 = 0.0;
    }
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1002 = fma(_659, cbModelParam._m0[30u].z, fma(_655, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _651));
        float _1006 = fma(_659, cbModelParam._m0[31u].z, fma(_655, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _651));
        float _1010 = fma(_659, cbModelParam._m0[32u].z, fma(_655, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _651));
        float _1033 = _651 + _488;
        float _1034 = _655 + _489;
        float _1035 = _659 + _490;
        float _1045 = fma(_1035, cbModelParam._m0[30u].z, fma(_1034, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1033)) - _1002;
        float _1046 = fma(_1035, cbModelParam._m0[31u].z, fma(_1034, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1033)) - _1006;
        float _1047 = fma(_1035, cbModelParam._m0[32u].z, fma(_1034, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1033)) - _1010;
        float _1051 = inversesqrt(dot(vec3(_1045, _1046, _1047), vec3(_1045, _1046, _1047)));
        float _1064 = ((_1051 * _1045) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1002 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1065 = ((_1051 * _1046) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1006 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1066 = ((_1051 * _1047) / cbModelParam._m0[35u].z) + ((((((_1010 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1068 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1064, _1065, _1066), 0.0);
        vec4 _1075 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1064, _1065, _1066), 0.0);
        vec4 _1082 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1064, _1065, _1066), 0.0);
        vec4 _1089 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1064, _1065, _1066), 0.0);
        float _1101 = exp2((_1068.w + (-0.5)) * 20.0) * 2.0;
        float _1102 = _1101 * (_1068.x + (-0.5));
        float _1103 = _1101 * (_1068.y + (-0.5));
        float _1104 = _1101 * (_1068.z + (-0.5));
        float _1111 = exp2((_1075.w + (-0.5)) * 20.0) * 2.0;
        float _1112 = _1111 * (_1075.x + (-0.5));
        float _1113 = _1111 * (_1075.y + (-0.5));
        float _1114 = _1111 * (_1075.z + (-0.5));
        float _1121 = exp2((_1082.w + (-0.5)) * 20.0) * 2.0;
        float _1122 = _1121 * (_1082.x + (-0.5));
        float _1123 = _1121 * (_1082.y + (-0.5));
        float _1124 = _1121 * (_1082.z + (-0.5));
        float _1131 = exp2((_1089.w + (-0.5)) * 20.0) * 2.0;
        float _1132 = _1131 * (_1089.x + (-0.5));
        float _1133 = _1131 * (_1089.y + (-0.5));
        float _1134 = _1131 * (_1089.z + (-0.5));
        float _1135 = isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0));
        float _1136 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1137 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1138 = _1102 * 0.5;
        float _1139 = _1112 * 0.5;
        float _1140 = _1122 * 0.5;
        float _1141 = dot(vec3(_1138, _1139, _1140), vec3(_1138, _1139, _1140));
        float _1146 = (_1141 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1141);
        float _1154 = (dot(vec3(_488, _489, _490), vec3(_1146 * _1138, _1146 * _1139, _1146 * _1140)) + 1.0) * 0.5;
        float _3906 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1163 = sqrt(((_1139 * _1139) + (_1138 * _1138)) + (_1140 * _1140)) / (_1135 + 9.9999997473787516355514526367188e-06);
        float _3917 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1164 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
        float _1165 = _1164 * 2.0;
        float _1169 = (1.0 - _1164) / (_1164 + 1.0);
        float _3928 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1170 = isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0));
        float _1179 = ((((1.0 - _1170) * (_1165 + 2.0)) * exp2(log2(isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0))) * (_1165 + 1.0))) + _1170) * _1135;
        float _1180 = _1103 * 0.5;
        float _1181 = _1113 * 0.5;
        float _1182 = _1123 * 0.5;
        float _1183 = dot(vec3(_1180, _1181, _1182), vec3(_1180, _1181, _1182));
        float _1188 = (_1183 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1183);
        float _1196 = (dot(vec3(_488, _489, _490), vec3(_1188 * _1180, _1188 * _1181, _1188 * _1182)) + 1.0) * 0.5;
        float _3939 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1205 = sqrt(((_1181 * _1181) + (_1180 * _1180)) + (_1182 * _1182)) / (_1136 + 9.9999997473787516355514526367188e-06);
        float _3950 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1206 = isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0));
        float _1207 = _1206 * 2.0;
        float _1211 = (1.0 - _1206) / (_1206 + 1.0);
        float _3961 = isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0));
        float _1212 = isnan(1.0) ? _3961 : (isnan(_3961) ? 1.0 : min(_3961, 1.0));
        float _1221 = ((((1.0 - _1212) * (_1207 + 2.0)) * exp2(log2(isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0))) * (_1207 + 1.0))) + _1212) * _1136;
        float _1222 = _1104 * 0.5;
        float _1223 = _1114 * 0.5;
        float _1224 = _1124 * 0.5;
        float _1225 = dot(vec3(_1222, _1223, _1224), vec3(_1222, _1223, _1224));
        float _1230 = (_1225 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1225);
        float _1238 = (dot(vec3(_488, _489, _490), vec3(_1230 * _1222, _1230 * _1223, _1230 * _1224)) + 1.0) * 0.5;
        float _3972 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1247 = sqrt(((_1223 * _1223) + (_1222 * _1222)) + (_1224 * _1224)) / (_1137 + 9.9999997473787516355514526367188e-06);
        float _3983 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1248 = isnan(1.0) ? _3983 : (isnan(_3983) ? 1.0 : min(_3983, 1.0));
        float _1249 = _1248 * 2.0;
        float _1253 = (1.0 - _1248) / (_1248 + 1.0);
        float _3994 = isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0));
        float _1254 = isnan(1.0) ? _3994 : (isnan(_3994) ? 1.0 : min(_3994, 1.0));
        float _1263 = ((((1.0 - _1254) * (_1249 + 2.0)) * exp2(log2(isnan(1.0) ? _3972 : (isnan(_3972) ? 1.0 : min(_3972, 1.0))) * (_1249 + 1.0))) + _1254) * _1137;
        _1271 = _1104;
        _1272 = _1103;
        _1273 = _1102;
        _1274 = _1114;
        _1275 = _1113;
        _1276 = _1112;
        _1277 = _1124;
        _1278 = _1123;
        _1279 = _1122;
        _1280 = _1137;
        _1281 = _1136;
        _1282 = _1135;
        _1283 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0)));
        _1284 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0)));
        _1285 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0)));
    }
    else
    {
        _1271 = _962;
        _1272 = _962;
        _1273 = _962;
        _1274 = _962;
        _1275 = _962;
        _1276 = _962;
        _1277 = _962;
        _1278 = _962;
        _1279 = _962;
        _1280 = _962;
        _1281 = _962;
        _1282 = _962;
        _1283 = 0.0;
        _1284 = 0.0;
        _1285 = 0.0;
    }
    float _1295 = (cbModelParam._m0[1u].x * (_1283 - _974)) + _974;
    float _1296 = (cbModelParam._m0[1u].x * (_1284 - _975)) + _975;
    float _1297 = (cbModelParam._m0[1u].x * (_1285 - _976)) + _976;
    float _1318 = fma(_1297, cbSceneParam._m0[89u].z, fma(_1296, cbSceneParam._m0[89u].y, _1295 * cbSceneParam._m0[89u].x));
    float _1321 = fma(_1297, cbSceneParam._m0[90u].z, fma(_1296, cbSceneParam._m0[90u].y, _1295 * cbSceneParam._m0[90u].x));
    float _1324 = fma(_1297, cbSceneParam._m0[91u].z, fma(_1296, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1295));
    float _1339 = _591 * 0.5;
    float _1340 = _592 * 0.5;
    float _1341 = _593 * 0.5;
    float _1342 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_1273, _1276, _1279, _1282));
    float _1345 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_1272, _1275, _1278, _1281));
    float _1348 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_1271, _1274, _1277, _1280));
    float _1382;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1355 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_961, _965, _968, _971));
        float _1359 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_963, _966, _969, _972));
        float _1363 = dot(vec4(_1339, _1340, _1341, 1.0), vec4(_964, _967, _970, _973));
        float _1370 = dot(vec4(cbModelParam._m0[39u]), vec4(_1339, _1340, _1341, 1.0));
        _1382 = dot(vec3(isnan(0.0) ? _1363 : (isnan(_1363) ? 0.0 : max(_1363, 0.0)), isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0)), isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1370) ? 0.0 : (isnan(0.0) ? _1370 : max(0.0, _1370))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1382 = 1.0;
    }
    float _1393;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1384 = dot(vec4(cbModelParam._m0[40u]), vec4(_1339, _1340, _1341, 1.0));
        _1393 = dot(vec3(isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0)), isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0)), isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1384) ? 0.0 : (isnan(0.0) ? _1384 : max(0.0, _1384))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1393 = 1.0;
    }
    float _1397 = (_1393 * cbModelParam._m0[1u].x) + (_1382 * (1.0 - cbModelParam._m0[1u].x));
    float _1407 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _491);
    float _1408 = isnan(_1407) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1407 : min(cbModelParam._m0[25u].z, _1407));
    float _1488;
    float _1490;
    float _1492;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1455 = fma(_659, cbModelParam._m0[13u].z, fma(_655, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _651)) + cbModelParam._m0[13u].w;
        float _1459 = fma(_659, cbModelParam._m0[14u].z, fma(_655, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _651)) + cbModelParam._m0[14u].w;
        float _1463 = fma(_659, cbModelParam._m0[15u].z, fma(_655, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _651)) + cbModelParam._m0[15u].w;
        float _1466 = fma(_593, cbModelParam._m0[13u].z, fma(_592, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _591));
        float _1469 = fma(_593, cbModelParam._m0[14u].z, fma(_592, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _591));
        float _1472 = fma(_593, cbModelParam._m0[15u].z, fma(_592, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _591));
        float _1500;
        if (_1466 > 0.0)
        {
            _1500 = abs((1.0 - _1455) / _1466);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1466 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1455 + 1.0) / _1466);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1500 = frontier_phi_14_12_ladder;
        }
        float _1723;
        if (_1469 > 0.0)
        {
            _1723 = abs((1.0 - _1459) / _1469);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1469 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1459 + 1.0) / _1469);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _1723 = frontier_phi_23_19_ladder;
        }
        float _1987;
        if (_1472 > 0.0)
        {
            _1987 = abs((1.0 - _1463) / _1472);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1472 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1463 + 1.0) / _1472);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _1987 = frontier_phi_35_30_ladder;
        }
        float _1989 = isnan(_1723) ? _1500 : (isnan(_1500) ? _1723 : min(_1500, _1723));
        float _1990 = isnan(_1987) ? _1989 : (isnan(_1989) ? _1987 : min(_1989, _1987));
        float _1994 = (_1990 * _1466) + _1455;
        float _1995 = (_1990 * _1469) + _1459;
        float _1996 = (_1990 * _1472) + _1463;
        float _1997 = _1990 * 9.9999997473787516355514526367188e-05;
        float _1999 = (-1.0) - _1997;
        float _2001 = _1997 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_1996 > _2001) || ((_1996 < _1999) || ((_1995 > _2001) || ((_1995 < _1999) || ((_1994 < _1999) || (_1994 > _2001))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2150 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1996, cbModelParam._m0[9u].z, fma(_1995, cbModelParam._m0[9u].y, _1994 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1996, cbModelParam._m0[10u].z, fma(_1995, cbModelParam._m0[10u].y, _1994 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1996, cbModelParam._m0[11u].z, fma(_1995, cbModelParam._m0[11u].y, _1994 * cbModelParam._m0[11u].x))), _1408);
            frontier_phi_13_35_ladder = _2150.x * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2150.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2150.y * cbModelParam._m0[1u].y;
        }
        _1488 = frontier_phi_13_35_ladder;
        _1490 = frontier_phi_13_35_ladder_2;
        _1492 = frontier_phi_13_35_ladder_1;
    }
    else
    {
        vec4 _1476 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_591, _592, _593), _1408);
        _1488 = _1476.x * cbModelParam._m0[1u].y;
        _1490 = _1476.y * cbModelParam._m0[1u].y;
        _1492 = _1476.z * cbModelParam._m0[1u].y;
    }
    float _1496 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _491);
    float _1497 = isnan(_1496) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1496 : min(cbModelParam._m0[25u].w, _1496));
    float _1588;
    float _1590;
    float _1592;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1552 = fma(_659, cbModelParam._m0[21u].z, fma(_655, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _651)) + cbModelParam._m0[21u].w;
        float _1556 = fma(_659, cbModelParam._m0[22u].z, fma(_655, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _651)) + cbModelParam._m0[22u].w;
        float _1560 = fma(_659, cbModelParam._m0[23u].z, fma(_655, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _651)) + cbModelParam._m0[23u].w;
        float _1563 = fma(_593, cbModelParam._m0[21u].z, fma(_592, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _591));
        float _1566 = fma(_593, cbModelParam._m0[22u].z, fma(_592, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _591));
        float _1569 = fma(_593, cbModelParam._m0[23u].z, fma(_592, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _591));
        float _1728;
        if (_1563 > 0.0)
        {
            _1728 = abs((1.0 - _1552) / _1563);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1563 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1552 + 1.0) / _1563);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1728 = frontier_phi_25_21_ladder;
        }
        float _2014;
        if (_1566 > 0.0)
        {
            _2014 = abs((1.0 - _1556) / _1566);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1566 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1556 + 1.0) / _1566);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2014 = frontier_phi_37_32_ladder;
        }
        float _2333;
        if (_1569 > 0.0)
        {
            _2333 = abs((1.0 - _1560) / _1569);
        }
        else
        {
            float frontier_phi_46_44_ladder;
            if (_1569 < 0.0)
            {
                frontier_phi_46_44_ladder = abs((_1560 + 1.0) / _1569);
            }
            else
            {
                frontier_phi_46_44_ladder = 5000.0;
            }
            _2333 = frontier_phi_46_44_ladder;
        }
        float _2335 = isnan(_2014) ? _1728 : (isnan(_1728) ? _2014 : min(_1728, _2014));
        float _2336 = isnan(_2333) ? _2335 : (isnan(_2335) ? _2333 : min(_2335, _2333));
        float _2340 = (_2336 * _1563) + _1552;
        float _2341 = (_2336 * _1566) + _1556;
        float _2342 = (_2336 * _1569) + _1560;
        float _2343 = _2336 * 9.9999997473787516355514526367188e-05;
        float _2344 = (-1.0) - _2343;
        float _2346 = _2343 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2342 > _2346) || ((_2342 < _2344) || ((_2341 > _2346) || ((_2341 < _2344) || ((_2340 < _2344) || (_2340 > _2346))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2615 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2342, cbModelParam._m0[17u].z, fma(_2341, cbModelParam._m0[17u].y, _2340 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2342, cbModelParam._m0[18u].z, fma(_2341, cbModelParam._m0[18u].y, _2340 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2342, cbModelParam._m0[19u].z, fma(_2341, cbModelParam._m0[19u].y, _2340 * cbModelParam._m0[19u].x))), _1497);
            frontier_phi_22_46_ladder = _2615.x * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2615.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2615.y * cbModelParam._m0[1u].z;
        }
        _1588 = frontier_phi_22_46_ladder;
        _1590 = frontier_phi_22_46_ladder_2;
        _1592 = frontier_phi_22_46_ladder_1;
    }
    else
    {
        vec4 _1572 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_591, _592, _593), _1497);
        _1588 = _1572.x * cbModelParam._m0[1u].z;
        _1590 = _1572.y * cbModelParam._m0[1u].z;
        _1592 = _1572.z * cbModelParam._m0[1u].z;
    }
    float _1604 = ((((1.0 - _619) * ((_607 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_619 * _607)) * _583;
    float _1605 = _1604 * ((cbModelParam._m0[1u].w * (_1588 - _1488)) + _1488);
    float _1606 = _1604 * ((cbModelParam._m0[1u].w * (_1590 - _1490)) + _1490);
    float _1607 = _1604 * ((cbModelParam._m0[1u].w * (_1592 - _1492)) + _1492);
    float _1610 = fma(_1607, cbSceneParam._m0[89u].z, fma(_1606, cbSceneParam._m0[89u].y, _1605 * cbSceneParam._m0[89u].x));
    float _1613 = fma(_1607, cbSceneParam._m0[90u].z, fma(_1606, cbSceneParam._m0[90u].y, _1605 * cbSceneParam._m0[90u].x));
    float _1616 = fma(_1607, cbSceneParam._m0[91u].z, fma(_1606, cbSceneParam._m0[91u].y, _1605 * cbSceneParam._m0[91u].x));
    float _1627 = _517 / cbSceneParam._m0[86u].x;
    float _1635 = (cbSceneParam._m0[88u].y * (1.0 - _491)) + cbSceneParam._m0[88u].z;
    float _4120 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
    float _1637 = (isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0))) * 5.0;
    float _1642 = (_606 * cbMtdParam._m0[13u].z) * dot(vec3(_488, _489, _490), vec3(1.0, 0.0, 0.0));
    vec4 _1652 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1642 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1642 + _1627) * cbSceneParam._m0[86u].x, _518), _1637).w) + _1627) * cbSceneParam._m0[86u].x, _518), _1637);
    float _1668 = 1.0 - _1652.w;
    float _1702 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1706 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1710 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1714 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1715 = _1702 / _1714;
    float _1716 = _1706 / _1714;
    float _1717 = _1710 / _1714;
    float _1864;
    float _1865;
    float _1866;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1744 = ((uint(_1717 > cbSceneParam._m0[59u].y) + uint(_1717 > cbSceneParam._m0[59u].x)) + uint(_1717 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1745 = _1744 + 43u;
        uint _1753 = _1744 + 44u;
        uint _1761 = _1744 + 45u;
        uint _1769 = _1744 + 46u;
        float _1780 = fma(_1714, cbSceneParam._m0[_1745].w, fma(_1710, cbSceneParam._m0[_1745].z, fma(_1706, cbSceneParam._m0[_1745].y, _1702 * cbSceneParam._m0[_1745].x)));
        float _1784 = fma(_1714, cbSceneParam._m0[_1753].w, fma(_1710, cbSceneParam._m0[_1753].z, fma(_1706, cbSceneParam._m0[_1753].y, _1702 * cbSceneParam._m0[_1753].x)));
        float _1792 = fma(_1714, cbSceneParam._m0[_1769].w, fma(_1710, cbSceneParam._m0[_1769].z, fma(_1706, cbSceneParam._m0[_1769].y, _1702 * cbSceneParam._m0[_1769].x)));
        float _1797 = cbSceneParam._m0[33u].z * _1792;
        float _1799 = cbSceneParam._m0[33u].w * _1792;
        float _1802 = fma(_1714, cbSceneParam._m0[_1761].w, fma(_1710, cbSceneParam._m0[_1761].z, fma(_1706, cbSceneParam._m0[_1761].y, _1702 * cbSceneParam._m0[_1761].x))) / _1792;
        float _1850 = (cbSceneParam._m0[33u].x - sqrt(((_1716 * _1716) + (_1715 * _1715)) + (_1717 * _1717))) * cbSceneParam._m0[33u].y;
        float _4131 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0));
        float _1857 = (isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1797 + _1780) / _1792, (_1799 + _1784) / _1792), _1802), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1799 + _1780) / _1792, (_1784 - _1797) / _1792), _1802), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1780 - _1797) / _1792, (_1784 - _1799) / _1792), _1802), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1780 - _1799) / _1792, (_1797 + _1784) / _1792), _1802), 0.0)).x), vec4(0.25)));
        _1864 = 1.0 - (_1857 * cbSceneParam._m0[34u].x);
        _1865 = 1.0 - (_1857 * cbSceneParam._m0[34u].y);
        _1866 = 1.0 - (_1857 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1864 = 1.0;
        _1865 = 1.0;
        _1866 = 1.0;
    }
    float _1930;
    float _1932;
    float _1934;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1918 = fma(_1714, cbSceneParam._m0[63u].w, fma(_1710, cbSceneParam._m0[63u].z, fma(_1706, cbSceneParam._m0[63u].y, _1702 * cbSceneParam._m0[63u].x)));
        float _1919 = fma(_1714, cbSceneParam._m0[60u].w, fma(_1710, cbSceneParam._m0[60u].z, fma(_1706, cbSceneParam._m0[60u].y, _1702 * cbSceneParam._m0[60u].x))) / _1918;
        float _1920 = fma(_1714, cbSceneParam._m0[61u].w, fma(_1710, cbSceneParam._m0[61u].z, fma(_1706, cbSceneParam._m0[61u].y, _1702 * cbSceneParam._m0[61u].x))) / _1918;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_1919 >= cbSceneParam._m0[64u].x) && (_1920 >= cbSceneParam._m0[64u].y)) && (_1919 <= cbSceneParam._m0[64u].z)) && (_1920 <= cbSceneParam._m0[64u].w))
        {
            float _2027 = fma(_1714, cbSceneParam._m0[62u].w, fma(_1710, cbSceneParam._m0[62u].z, fma(_1706, cbSceneParam._m0[62u].y, _1702 * cbSceneParam._m0[62u].x))) / _1918;
            float _2031 = isnan(cbSceneParam._m0[41u].w) ? _2027 : (isnan(_2027) ? cbSceneParam._m0[41u].w : max(_2027, cbSceneParam._m0[41u].w));
            float _2074 = (cbSceneParam._m0[33u].x - sqrt(((_1716 * _1716) + (_1715 * _1715)) + (_1717 * _1717))) * cbSceneParam._m0[33u].y;
            float _4147 = isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0));
            float _2081 = (isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1919, cbSceneParam._m0[33u].w + _1920), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1919, _1920 - cbSceneParam._m0[33u].z), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1919 - cbSceneParam._m0[33u].z, _1920 - cbSceneParam._m0[33u].w), _2031), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1919 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1920), _2031), 0.0)).x), vec4(0.25)));
            float _2085 = 1.0 - (_2081 * cbSceneParam._m0[34u].x);
            float _2086 = 1.0 - (_2081 * cbSceneParam._m0[34u].y);
            float _2087 = 1.0 - (_2081 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2087) ? _1866 : (isnan(_1866) ? _2087 : min(_1866, _2087));
            frontier_phi_34_33_ladder_1 = isnan(_2086) ? _1865 : (isnan(_1865) ? _2086 : min(_1865, _2086));
            frontier_phi_34_33_ladder_2 = isnan(_2085) ? _1864 : (isnan(_1864) ? _2085 : min(_1864, _2085));
        }
        else
        {
            frontier_phi_34_33_ladder = _1866;
            frontier_phi_34_33_ladder_1 = _1865;
            frontier_phi_34_33_ladder_2 = _1864;
        }
        _1930 = frontier_phi_34_33_ladder_2;
        _1932 = frontier_phi_34_33_ladder_1;
        _1934 = frontier_phi_34_33_ladder;
    }
    else
    {
        _1930 = _1864;
        _1932 = _1865;
        _1934 = _1866;
    }
    uvec4 _1939 = floatBitsToUint(cbInstanceData._m0[_558 + 5u]);
    uint _1941 = _1939.x * 14u;
    uint _1942 = _1941 + 13u;
    float _1947 = _583 + (-1.0);
    float _1950 = (cbLight._m0[_1942].x * _1947) + 1.0;
    float _1951 = (cbLight._m0[_1942].y * _1947) + 1.0;
    uint _1953 = _1941 + 4u;
    float _1964 = dot(vec3(cbLight._m0[_1941].xyz), vec3(_488, _489, _490));
    float _1967 = isnan(1.0) ? _1950 : (isnan(_1950) ? 1.0 : min(_1950, 1.0));
    float _1968 = cbLight._m0[_1953].x * _1930;
    float _1969 = cbLight._m0[_1953].y * _1932;
    float _1970 = cbLight._m0[_1953].z * _1934;
    uint _1971 = _1941 + 5u;
    uint _1977 = _1941 | 1u;
    float _1983 = dot(vec3(cbLight._m0[_1977].xyz), vec3(_488, _489, _490));
    float _1986 = isnan(1.0) ? _1951 : (isnan(_1951) ? 1.0 : min(_1951, 1.0));
    float _2159;
    float _2160;
    float _2161;
    if (_492 == 0.0)
    {
        float _4183 = isnan(0.0) ? _1964 : (isnan(_1964) ? 0.0 : max(_1964, 0.0));
        float _4194 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
        float _2096 = (isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0))) * 0.3183098733425140380859375;
        float _2098 = (isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0))) * 0.3183098733425140380859375;
        _2159 = ((cbLight._m0[_1971].x * _1986) * _2098) + ((_1968 * _1967) * _2096);
        _2160 = ((_1986 * cbLight._m0[_1971].y) * _2098) + ((_1969 * _1967) * _2096);
        _2161 = ((_1986 * cbLight._m0[_1971].z) * _2098) + ((_1970 * _1967) * _2096);
    }
    else
    {
        float _2108 = _1964 + _492;
        float _2111 = (_492 * 2.0) + 1.0;
        float _2112 = (isnan(0.0) ? _2108 : (isnan(_2108) ? 0.0 : max(_2108, 0.0))) / _2111;
        float _2119 = _1983 + _492;
        float _2121 = (isnan(0.0) ? _2119 : (isnan(_2119) ? 0.0 : max(_2119, 0.0))) / _2111;
        _2159 = (((_2121 * cbLight._m0[_1971].x) * _1986) + ((_1968 * _2112) * _1967)) * 0.3183098733425140380859375;
        _2160 = (((_2121 * cbLight._m0[_1971].y) * _1986) + ((_1969 * _2112) * _1967)) * 0.3183098733425140380859375;
        _2161 = (((_2121 * cbLight._m0[_1971].z) * _1986) + ((_1970 * _2112) * _1967)) * 0.3183098733425140380859375;
    }
    uint _2165 = _1941 + 8u;
    float _2181 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1941].w)) * _491) * 0.949999988079071044921875);
    float _2182 = _2181 * _2181;
    float _2183 = cbLight._m0[_1941].x + _374;
    float _2184 = cbLight._m0[_1941].y + _375;
    float _2185 = cbLight._m0[_1941].z + _376;
    float _2189 = inversesqrt(dot(vec3(_2183, _2184, _2185), vec3(_2183, _2184, _2185)));
    float _2190 = _2189 * _2183;
    float _2191 = _2189 * _2184;
    float _2192 = _2189 * _2185;
    float _2193 = dot(vec3(_488, _489, _490), vec3(cbLight._m0[_1941].xyz));
    float _4215 = isnan(0.0) ? _2193 : (isnan(_2193) ? 0.0 : max(_2193, 0.0));
    float _2196 = isnan(1.0) ? _4215 : (isnan(_4215) ? 1.0 : min(_4215, 1.0));
    float _4226 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0));
    float _2197 = isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0));
    float _2198 = dot(vec3(_488, _489, _490), vec3(_2190, _2191, _2192));
    float _4237 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    float _2201 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
    float _2202 = dot(vec3(cbLight._m0[_1941].xyz), vec3(_2190, _2191, _2192));
    float _4248 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
    float _2206 = _2182 * _2182;
    float _2210 = ((_2201 * _2201) * (_2206 + (-1.0))) + 1.0;
    float _2221 = (exp2(log2(1.0 - (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2222 = 1.0 - _2182;
    float _2233 = (0.5 / (((_2197 * ((_2196 * _2222) + _2182)) + 9.9999999392252902907785028219223e-09) + (((_2197 * _2222) + _2182) * _2196))) * _2196;
    float _4259 = isnan(0.0) ? _2233 : (isnan(_2233) ? 0.0 : max(_2233, 0.0));
    float _2235 = (isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_2206 / ((_2210 * _2210) * 3.141590118408203125));
    uint _2251 = _1941 + 9u;
    float _2265 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1977].w)) * _491) * 0.949999988079071044921875);
    float _2266 = _2265 * _2265;
    float _2267 = cbLight._m0[_1977].x + _374;
    float _2268 = cbLight._m0[_1977].y + _375;
    float _2269 = cbLight._m0[_1977].z + _376;
    float _2273 = inversesqrt(dot(vec3(_2267, _2268, _2269), vec3(_2267, _2268, _2269)));
    float _2274 = _2273 * _2267;
    float _2275 = _2273 * _2268;
    float _2276 = _2273 * _2269;
    float _2277 = dot(vec3(_488, _489, _490), vec3(cbLight._m0[_1977].xyz));
    float _4270 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
    float _2280 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
    float _2281 = dot(vec3(_488, _489, _490), vec3(_2274, _2275, _2276));
    float _4281 = isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0));
    float _2284 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
    float _2285 = dot(vec3(cbLight._m0[_1977].xyz), vec3(_2274, _2275, _2276));
    float _4292 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
    float _2289 = _2266 * _2266;
    float _2293 = ((_2284 * _2284) * (_2289 + (-1.0))) + 1.0;
    float _2302 = (exp2(log2(1.0 - (isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2303 = 1.0 - _2266;
    float _2313 = (0.5 / (((_2197 * ((_2280 * _2303) + _2266)) + 9.9999999392252902907785028219223e-09) + (((_2197 * _2303) + _2266) * _2280))) * _2280;
    float _4303 = isnan(0.0) ? _2313 : (isnan(_2313) ? 0.0 : max(_2313, 0.0));
    float _2315 = (isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0))) * (_2289 / ((_2293 * _2293) * 3.141590118408203125));
    float _2325 = (((_2302 * cbLight._m0[_2251].x) * _2315) * _1986) + ((((cbLight._m0[_2165].x * _1930) * _2221) * _2235) * _1967);
    float _2326 = (((_2302 * cbLight._m0[_2251].y) * _2315) * _1986) + ((((cbLight._m0[_2165].y * _1932) * _2221) * _2235) * _1967);
    float _2327 = (((_2302 * cbLight._m0[_2251].z) * _2315) * _1986) + ((((cbLight._m0[_2165].z * _1934) * _2221) * _2235) * _1967);
    float _2415;
    float _2417;
    float _2419;
    float _2421;
    float _2423;
    float _2425;
    if (_1939.y == 0u)
    {
        uvec4 _2370 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2371 = _2370.x;
        uint _2382 = uint((float(_2370.y) * floor(float(uint(cbSceneParam._m0[85u].y * _518) / _2371))) + floor(float(uint(cbSceneParam._m0[85u].x * _517) / _2371)));
        float _2392 = (log2(_1717 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2393 = isnan(0.0) ? _2392 : (isnan(_2392) ? 0.0 : max(_2392, 0.0));
        uint _2396 = uint(isnan(14.0) ? _2393 : (isnan(_2393) ? 14.0 : min(_2393, 14.0)));
        uvec4 _2401 = texelFetch(g_lightClusterGridBuffer, int(((_2396 << 2u) + (_2382 << 6u)) >> 2u));
        uint _2402 = _2401.x;
        uint _2403 = _2370.z;
        float _2620;
        float _2622;
        float _2624;
        float _2626;
        float _2628;
        float _2630;
        if (((((1u << ((_2403 >> 4u) & 15u)) + 4294967295u) & _2402) == 0u) || ((_2403 & 240u) == 0u))
        {
            _2620 = 0.0;
            _2622 = 0.0;
            _2624 = 0.0;
            _2626 = 0.0;
            _2628 = 0.0;
            _2630 = 0.0;
        }
        else
        {
            float _2621;
            float _2623;
            float _2625;
            float _2627;
            float _2629;
            float _2631;
            float _2795 = 0.0;
            float _2796 = 0.0;
            float _2797 = 0.0;
            float _2798 = 0.0;
            float _2799 = 0.0;
            float _2800 = 0.0;
            uint _2801 = 0u;
            uint _2810;
            bool _2811;
            for (;;)
            {
                _2810 = texelFetch(g_lightClassification, int((((_2396 << 5u) + (_2382 << 9u)) + (_2801 << 2u)) >> 2u)).x;
                _2811 = _2810 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2811)
                {
                    frontier_phi_61_pred = _2795;
                    frontier_phi_61_pred_1 = _2796;
                    frontier_phi_61_pred_2 = _2800;
                    frontier_phi_61_pred_3 = _2799;
                    frontier_phi_61_pred_4 = _2798;
                    frontier_phi_61_pred_5 = _2797;
                }
                else
                {
                    float _2919;
                    float _2920;
                    float _2921;
                    float _2922;
                    float _2923;
                    float _2924;
                    uint _2925;
                    _2919 = _2795;
                    _2920 = _2796;
                    _2921 = _2797;
                    _2922 = _2798;
                    _2923 = _2799;
                    _2924 = _2800;
                    _2925 = _2810;
                    float _2851;
                    float _2852;
                    float _2853;
                    float _2854;
                    float _2855;
                    float _2856;
                    for (;;)
                    {
                        uint _2929 = uint(findLSB(_2925)) + (_2801 << 5u);
                        uint _2926 = (_2925 + 4294967295u) & _2925;
                        uint _2931 = _2929 * 48u;
                        vec4 _2945 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2931)).x, texelFetch(g_PointLightRenderingBuffer, int(_2931 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2931 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2931 + 3u)).x));
                        uint _2951 = (_2929 * 48u) + 4u;
                        vec4 _2964 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2951)).x, texelFetch(g_PointLightRenderingBuffer, int(_2951 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2951 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2951 + 3u)).x));
                        float _2965 = _2964.x;
                        float _2966 = _2964.y;
                        float _2967 = _2964.z;
                        uint _2970 = (_2929 * 48u) + 8u;
                        vec3 _2981 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2970)).x, texelFetch(g_PointLightRenderingBuffer, int(_2970 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2970 + 2u)).x));
                        uint _2986 = (_2929 * 48u) + 12u;
                        vec2 _2994 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_2986)).x, texelFetch(g_PointLightRenderingBuffer, int(_2986 + 1u)).x));
                        float _3000 = inversesqrt(dot(vec3(_1715, _1716, _1717), vec3(_1715, _1716, _1717)));
                        float _3001 = _3000 * _1715;
                        float _3002 = _3000 * _1716;
                        float _3003 = _3000 * _1717;
                        float _3004 = _2945.x - _1715;
                        float _3005 = _2945.y - _1716;
                        float _3006 = _2945.z - _1717;
                        float _3007 = dot(vec3(_3004, _3005, _3006), vec3(_3004, _3005, _3006));
                        float _3010 = inversesqrt(_3007);
                        float _3011 = _3010 * _3004;
                        float _3012 = _3010 * _3005;
                        float _3013 = _3010 * _3006;
                        float _3014 = dot(vec3(_539, _542, _545), vec3(_3011, _3012, _3013));
                        float _3019 = 1.0 - (_3007 * _2945.w);
                        float _4324 = isnan(0.0) ? _3019 : (isnan(_3019) ? 0.0 : max(_3019, 0.0));
                        float _3020 = isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0));
                        float _3021 = sqrt(_3007) * _2964.w;
                        float _3024 = 1.39999997615814208984375 / (_3021 + 1.39999997615814208984375);
                        float _3025 = _3024 * _3024;
                        float _3026 = 1.0 - _3025;
                        float _3028 = (_3026 * _3026) * _492;
                        float _3031 = ((_3026 * _3014) + _3025) + _3028;
                        float _3036 = _3021 * _3021;
                        float _3041 = ((isnan(0.0) ? _3031 : (isnan(_3031) ? 0.0 : max(_3031, 0.0))) * _3020) / (((_3028 * 2.0) + 1.0) * ((_3036 * 0.699999988079071044921875) + 1.0));
                        float _3045 = dot(vec3(_3011, _3012, _3013), vec3(_3001, _3002, _3003));
                        float _4340 = isnan(0.0) ? _3045 : (isnan(_3045) ? 0.0 : max(_3045, 0.0));
                        float _3052 = dot(vec3((-0.0) - _3001, (-0.0) - _3002, (-0.0) - _3003), vec3(_539, _542, _545)) + 1.0;
                        float _3054 = (isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0))) * 0.5;
                        float _3062 = ((_3054 * _3054) * _2994.x) * exp2((_2994.y * 32.0) * log2(isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))));
                        float _3064 = _492 / (_492 + 1.0);
                        float _3080 = (-0.0) - _1715;
                        float _3081 = (-0.0) - _1716;
                        float _3082 = (-0.0) - _1717;
                        float _3086 = inversesqrt(dot(vec3(_3080, _3081, _3082), vec3(_3080, _3081, _3082)));
                        float _3087 = _3086 * _3080;
                        float _3088 = _3086 * _3081;
                        float _3089 = _3086 * _3082;
                        float _3096 = exp2(log2(1.0 / ((_3036 * 3.5) + 5.0)) * 0.25);
                        float _3097 = 1.0 - _607;
                        float _3104 = sqrt(1.0 - ((1.0 - (_3097 * _3097)) * (1.0 - (_3096 * _3096))));
                        float _3105 = _3104 * _3104;
                        float _3106 = _3105 * _3105;
                        float _3107 = _3087 + _3011;
                        float _3108 = _3088 + _3012;
                        float _3109 = _3089 + _3013;
                        float _3113 = inversesqrt(dot(vec3(_3107, _3108, _3109), vec3(_3107, _3108, _3109)));
                        float _3117 = dot(vec3(_539, _542, _545), vec3(_3087, _3088, _3089));
                        float _4356 = isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0));
                        float _3120 = isnan(1.0) ? _4356 : (isnan(_4356) ? 1.0 : min(_4356, 1.0));
                        float _3121 = dot(vec3(_539, _542, _545), vec3(_3113 * _3107, _3113 * _3108, _3113 * _3109));
                        float _4367 = isnan(0.0) ? _3121 : (isnan(_3121) ? 0.0 : max(_3121, 0.0));
                        float _3124 = isnan(1.0) ? _4367 : (isnan(_4367) ? 1.0 : min(_4367, 1.0));
                        float _3128 = ((_3124 * _3124) * (_3106 + (-1.0))) + 1.0;
                        float _3129 = _3024 * _3105;
                        float _3130 = _3129 * _3129;
                        float _3133 = ((1.0 - _3130) * _3014) + _3130;
                        float _4378 = isnan(0.0) ? _3133 : (isnan(_3133) ? 0.0 : max(_3133, 0.0));
                        float _3134 = isnan(1.0) ? _4378 : (isnan(_4378) ? 1.0 : min(_4378, 1.0));
                        float _3135 = 1.0 - _3105;
                        float _3145 = (0.5 / (((_3134 * ((_3120 * _3135) + _3105)) + 9.9999999392252902907785028219223e-09) + (((_3134 * _3135) + _3105) * _3120))) * _3134;
                        float _4389 = isnan(0.0) ? _3145 : (isnan(_3145) ? 0.0 : max(_3145, 0.0));
                        float _3156 = (((_3106 * 3.1415927410125732421875) * (isnan(1.0) ? _4389 : (isnan(_4389) ? 1.0 : min(_4389, 1.0)))) / ((_3128 * _3128) * ((_3036 * 2.1991131305694580078125) + 3.141590118408203125))) * _3020;
                        _2854 = (((((_2965 * 0.3183098733425140380859375) * _3064) * _3062) + _2965) * _3041) + _2922;
                        _2855 = (((((_2966 * 0.3183098733425140380859375) * _3064) * _3062) + _2966) * _3041) + _2923;
                        _2856 = (((((_2967 * 0.3183098733425140380859375) * _3064) * _3062) + _2967) * _3041) + _2924;
                        _2851 = (_3156 * _2981.x) + _2919;
                        _2852 = (_3156 * _2981.y) + _2920;
                        _2853 = (_3156 * _2981.z) + _2921;
                        if (_2926 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2919 = _2851;
                            _2920 = _2852;
                            _2921 = _2853;
                            _2922 = _2854;
                            _2923 = _2855;
                            _2924 = _2856;
                            _2925 = _2926;
                        }
                    }
                    frontier_phi_61_pred = _2851;
                    frontier_phi_61_pred_1 = _2852;
                    frontier_phi_61_pred_2 = _2856;
                    frontier_phi_61_pred_3 = _2855;
                    frontier_phi_61_pred_4 = _2854;
                    frontier_phi_61_pred_5 = _2853;
                }
                _2621 = frontier_phi_61_pred;
                _2623 = frontier_phi_61_pred_1;
                _2631 = frontier_phi_61_pred_2;
                _2629 = frontier_phi_61_pred_3;
                _2627 = frontier_phi_61_pred_4;
                _2625 = frontier_phi_61_pred_5;
                uint _2802 = _2801 + 1u;
                if (_2802 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2795 = _2621;
                    _2796 = _2623;
                    _2797 = _2625;
                    _2798 = _2627;
                    _2799 = _2629;
                    _2800 = _2631;
                    _2801 = _2802;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2620 = _2621;
            _2622 = _2623;
            _2624 = _2625;
            _2626 = _2627;
            _2628 = _2629;
            _2630 = _2631;
        }
        uvec4 _2634 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2635 = _2634.z;
        uint _2637 = (_2635 >> 8u) & 15u;
        float _2763;
        float _2765;
        float _2767;
        float _2769;
        float _2771;
        float _2773;
        if (((4294967295u << _2637) & _2402) == 0u)
        {
            _2763 = _2620;
            _2765 = _2622;
            _2767 = _2624;
            _2769 = _2626;
            _2771 = _2628;
            _2773 = _2630;
        }
        else
        {
            float _2788 = inversesqrt(dot(vec3(_1715, _1716, _1717), vec3(_1715, _1716, _1717)));
            float _2789 = _2788 * _1715;
            float _2790 = _2788 * _1716;
            float _2791 = _2788 * _1717;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2637 < ((_2635 >> 12u) & 15u))
            {
                float _2764;
                float _2766;
                float _2768;
                float _2770;
                float _2772;
                float _2774;
                float _2902 = _2620;
                float _2903 = _2622;
                float _2904 = _2624;
                float _2905 = _2626;
                float _2906 = _2628;
                float _2907 = _2630;
                uint _2908 = _2637;
                uint _2917;
                bool _2918;
                for (;;)
                {
                    _2917 = texelFetch(g_lightClassification, int((((_2396 << 5u) + (_2382 << 9u)) + (_2908 << 2u)) >> 2u)).x;
                    _2918 = _2917 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2918)
                    {
                        frontier_phi_67_pred = _2902;
                        frontier_phi_67_pred_1 = _2907;
                        frontier_phi_67_pred_2 = _2906;
                        frontier_phi_67_pred_3 = _2905;
                        frontier_phi_67_pred_4 = _2904;
                        frontier_phi_67_pred_5 = _2903;
                    }
                    else
                    {
                        float _3161;
                        float _3162;
                        float _3163;
                        float _3164;
                        float _3165;
                        float _3166;
                        float _3504;
                        float _3505;
                        float _3506;
                        float _3507;
                        float _3508;
                        float _3509;
                        float _3174 = _2902;
                        float _3175 = _2903;
                        float _3176 = _2904;
                        float _3177 = _2905;
                        float _3178 = _2906;
                        float _3179 = _2907;
                        uint _3180 = _2917;
                        uint _3181;
                        vec4 _3206;
                        float _3207;
                        vec4 _3222;
                        float _3223;
                        float _3224;
                        float _3225;
                        vec3 _3237;
                        vec2 _3246;
                        vec4 _3261;
                        vec4 _3277;
                        float _3324;
                        bool _3325;
                        for (;;)
                        {
                            uint _3191 = ((_2908 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3180));
                            _3181 = (_3180 + 4294967295u) & _3180;
                            uint _3193 = _3191 * 40u;
                            _3206 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3193)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3193 + 3u)).x));
                            _3207 = _3206.w;
                            uint _3209 = (_3191 * 40u) + 4u;
                            _3222 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3209)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3209 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3209 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3209 + 3u)).x));
                            _3223 = _3222.x;
                            _3224 = _3222.y;
                            _3225 = _3222.z;
                            uint _3227 = (_3191 * 40u) + 8u;
                            _3237 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3227)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3227 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3227 + 2u)).x));
                            uint _3239 = (_3191 * 40u) + 12u;
                            _3246 = uintBitsToFloat(uvec2(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x));
                            uint _3248 = (_3191 * 40u) + 16u;
                            _3261 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3248)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 3u)).x));
                            uint _3264 = (_3191 * 40u) + 20u;
                            _3277 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3264)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 3u)).x));
                            uint _3280 = (_3191 * 40u) + 24u;
                            vec4 _3293 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3280)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3280 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3280 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3280 + 3u)).x));
                            uint _3299 = (_3191 * 40u) + 28u;
                            vec4 _3312 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3299)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3299 + 3u)).x));
                            _3324 = fma(_1717, _3312.z, fma(_1716, _3312.y, _3312.x * _1715)) + _3312.w;
                            _3325 = !((fma(_1717, _3293.z, fma(_1716, _3293.y, _3293.x * _1715)) + _3293.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3325)
                            {
                                float _3351 = _3206.x - _1715;
                                float _3352 = _3206.y - _1716;
                                float _3353 = _3206.z - _1717;
                                float _3354 = dot(vec3(_3351, _3352, _3353), vec3(_3351, _3352, _3353));
                                float _3357 = inversesqrt(_3354);
                                float _3358 = _3357 * _3351;
                                float _3359 = _3357 * _3352;
                                float _3360 = _3357 * _3353;
                                float _3364 = 1.0 - (_3354 / (_3207 * _3207));
                                float _4400 = isnan(0.0) ? _3364 : (isnan(_3364) ? 0.0 : max(_3364, 0.0));
                                float _3365 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
                                float _3369 = sqrt(_3354) * _3222.w;
                                float _3371 = 1.39999997615814208984375 / (_3369 + 1.39999997615814208984375);
                                float _3372 = _3371 * _3371;
                                float _3373 = 1.0 - _3372;
                                float _3375 = (_3373 * _3373) * _492;
                                float _3378 = ((_3373 * dot(vec3(_3358, _3359, _3360), vec3(_539, _542, _545))) + _3372) + _3375;
                                float _3383 = _3369 * _3369;
                                float _3388 = (fma(_1717, _3261.z, fma(_1716, _3261.y, _3261.x * _1715)) + _3261.w) / _3324;
                                float _3389 = (fma(_1717, _3277.z, fma(_1716, _3277.y, _3277.x * _1715)) + _3277.w) / _3324;
                                float _3393 = 1.0 - dot(vec2(_3388, _3389), vec2(_3388, _3389));
                                float _4416 = isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0));
                                float _3394 = isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0));
                                float _3395 = _3394 * (((isnan(0.0) ? _3378 : (isnan(_3378) ? 0.0 : max(_3378, 0.0))) * _3365) / (((_3375 * 2.0) + 1.0) * ((_3383 * 0.699999988079071044921875) + 1.0)));
                                float _3396 = (-0.0) - _2789;
                                float _3397 = (-0.0) - _2790;
                                float _3398 = (-0.0) - _2791;
                                float _3399 = dot(vec3(_3358, _3359, _3360), vec3(_2789, _2790, _2791));
                                float _4427 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                                float _3406 = dot(vec3(_3396, _3397, _3398), vec3(_539, _542, _545)) + 1.0;
                                float _3408 = (isnan(0.0) ? _3406 : (isnan(_3406) ? 0.0 : max(_3406, 0.0))) * 0.5;
                                float _3415 = ((_3408 * _3408) * _3246.x) * exp2((_3246.y * 32.0) * log2(isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0))));
                                float _3417 = _492 / (_492 + 1.0);
                                float _3438 = exp2(log2(1.0 / ((_3383 * 3.5) + 5.0)) * 0.25);
                                float _3439 = 1.0 - _607;
                                float _3446 = sqrt(1.0 - ((1.0 - (_3439 * _3439)) * (1.0 - (_3438 * _3438))));
                                float _3447 = _3446 * _3446;
                                float _3448 = _3447 * _3447;
                                float _3449 = _3358 - _2789;
                                float _3450 = _3359 - _2790;
                                float _3451 = _3360 - _2791;
                                float _3455 = inversesqrt(dot(vec3(_3449, _3450, _3451), vec3(_3449, _3450, _3451)));
                                float _3459 = dot(vec3(_539, _542, _545), vec3(_3396, _3397, _3398));
                                float _4443 = isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0));
                                float _3462 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
                                float _3463 = dot(vec3(_539, _542, _545), vec3(_3455 * _3449, _3455 * _3450, _3455 * _3451));
                                float _4454 = isnan(0.0) ? _3463 : (isnan(_3463) ? 0.0 : max(_3463, 0.0));
                                float _3466 = isnan(1.0) ? _4454 : (isnan(_4454) ? 1.0 : min(_4454, 1.0));
                                float _3470 = ((_3466 * _3466) * (_3448 + (-1.0))) + 1.0;
                                float _3471 = _3371 * _3447;
                                float _3472 = _3471 * _3471;
                                float _3478 = ((1.0 - _3472) * dot(vec3(_539, _542, _545), vec3(_3358, _3359, _3360))) + _3472;
                                float _4465 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                                float _3479 = isnan(1.0) ? _4465 : (isnan(_4465) ? 1.0 : min(_4465, 1.0));
                                float _3480 = 1.0 - _3447;
                                float _3490 = (0.5 / (((_3479 * ((_3462 * _3480) + _3447)) + 9.9999999392252902907785028219223e-09) + (((_3479 * _3480) + _3447) * _3462))) * _3479;
                                float _4476 = isnan(0.0) ? _3490 : (isnan(_3490) ? 0.0 : max(_3490, 0.0));
                                float _3500 = (_3394 * _3365) * (((_3448 * 3.1415927410125732421875) * (isnan(1.0) ? _4476 : (isnan(_4476) ? 1.0 : min(_4476, 1.0)))) / ((_3470 * _3470) * ((_3383 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = ((((_3225 * 0.3183098733425140380859375) * _3417) * _3415) + _3225) * _3395;
                                frontier_phi_73_pred_1 = ((((_3224 * 0.3183098733425140380859375) * _3417) * _3415) + _3224) * _3395;
                                frontier_phi_73_pred_2 = ((((_3223 * 0.3183098733425140380859375) * _3417) * _3415) + _3223) * _3395;
                                frontier_phi_73_pred_3 = _3500 * _3237.z;
                                frontier_phi_73_pred_4 = _3500 * _3237.y;
                                frontier_phi_73_pred_5 = _3500 * _3237.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3509 = frontier_phi_73_pred;
                            _3508 = frontier_phi_73_pred_1;
                            _3507 = frontier_phi_73_pred_2;
                            _3506 = frontier_phi_73_pred_3;
                            _3505 = frontier_phi_73_pred_4;
                            _3504 = frontier_phi_73_pred_5;
                            _3164 = _3507 + _3177;
                            _3165 = _3508 + _3178;
                            _3166 = _3509 + _3179;
                            _3161 = _3504 + _3174;
                            _3162 = _3505 + _3175;
                            _3163 = _3506 + _3176;
                            if (_3181 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3174 = _3161;
                                _3175 = _3162;
                                _3176 = _3163;
                                _3177 = _3164;
                                _3178 = _3165;
                                _3179 = _3166;
                                _3180 = _3181;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3161;
                        frontier_phi_67_pred_1 = _3166;
                        frontier_phi_67_pred_2 = _3165;
                        frontier_phi_67_pred_3 = _3164;
                        frontier_phi_67_pred_4 = _3163;
                        frontier_phi_67_pred_5 = _3162;
                    }
                    _2764 = frontier_phi_67_pred;
                    _2774 = frontier_phi_67_pred_1;
                    _2772 = frontier_phi_67_pred_2;
                    _2770 = frontier_phi_67_pred_3;
                    _2768 = frontier_phi_67_pred_4;
                    _2766 = frontier_phi_67_pred_5;
                    uint _2909 = _2908 + 1u;
                    if (_2909 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2902 = _2764;
                        _2903 = _2766;
                        _2904 = _2768;
                        _2905 = _2770;
                        _2906 = _2772;
                        _2907 = _2774;
                        _2908 = _2909;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2772;
                frontier_phi_55_56_ladder_1 = _2774;
                frontier_phi_55_56_ladder_2 = _2770;
                frontier_phi_55_56_ladder_3 = _2768;
                frontier_phi_55_56_ladder_4 = _2766;
                frontier_phi_55_56_ladder_5 = _2764;
            }
            else
            {
                frontier_phi_55_56_ladder = _2628;
                frontier_phi_55_56_ladder_1 = _2630;
                frontier_phi_55_56_ladder_2 = _2626;
                frontier_phi_55_56_ladder_3 = _2624;
                frontier_phi_55_56_ladder_4 = _2622;
                frontier_phi_55_56_ladder_5 = _2620;
            }
            _2763 = frontier_phi_55_56_ladder_5;
            _2765 = frontier_phi_55_56_ladder_4;
            _2767 = frontier_phi_55_56_ladder_3;
            _2769 = frontier_phi_55_56_ladder_2;
            _2771 = frontier_phi_55_56_ladder;
            _2773 = frontier_phi_55_56_ladder_1;
        }
        float _2778 = isnan(1.0) ? _583 : (isnan(_583) ? 1.0 : min(_583, 1.0));
        _2415 = (_2778 * _2769) + _2159;
        _2417 = (_2778 * _2771) + _2160;
        _2419 = (_2778 * _2773) + _2161;
        _2421 = ((_2763 * 0.039999999105930328369140625) * _2778) + _2325;
        _2423 = ((_2765 * 0.039999999105930328369140625) * _2778) + _2326;
        _2425 = ((_2767 * 0.039999999105930328369140625) * _2778) + _2327;
    }
    else
    {
        _2415 = _2159;
        _2417 = _2160;
        _2419 = _2161;
        _2421 = _2325;
        _2423 = _2326;
        _2425 = _2327;
    }
    float _2439 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2440 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2441 = cbSceneParam._m0[86u].x * (_1627 + ((_606 * cbMtdParam._m0[13u].y) * dot(vec3(_488, _489, _490), vec3(_202, _203, _204))));
    float _2442 = isnan(_2439) ? _2441 : (isnan(_2441) ? _2439 : min(_2441, _2439));
    float _2443 = isnan(_2440) ? _518 : (isnan(_518) ? _2440 : min(_518, _2440));
    vec4 _2445 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2442, _2443), 0.0);
    float _2447 = _2445.x;
    bool _2468 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2447)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2447))) > _511;
    float _2469 = _2468 ? _2442 : _517;
    float _2470 = _2468 ? _2443 : _518;
    vec4 _2472 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2469, _2470));
    vec4 _2477 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2469, _2470));
    float _2479 = _2477.x;
    float _2499 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2479)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2479))) - _511;
    bool _2509 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2513 = (isnan(_2499) ? 0.0 : (isnan(0.0) ? _2499 : max(0.0, _2499))) * (-1.44269502162933349609375);
    float _4507 = isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : max(_569, 0.0));
    float _4518 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _4529 = isnan(0.0) ? _571 : (isnan(_571) ? 0.0 : max(_571, 0.0));
    float _2540 = 0.959999978542327880859375 - (exp2(log2(1.0 - _598) * 5.0) * 0.959999978542327880859375);
    float _2543 = ((_2472.x * _2540) * exp2(_2513 * (_2509 ? 0.0 : (cbMtdParam._m0[16u].z + cbMtdParam._m0[15u].w)))) * cbSceneParam._m0[72u].w;
    float _2546 = ((_2472.y * _2540) * exp2(_2513 * (_2509 ? 0.0 : (cbMtdParam._m0[16u].w + cbMtdParam._m0[16u].x)))) * cbSceneParam._m0[72u].w;
    float _2549 = ((_2472.z * _2540) * exp2(_2513 * (_2509 ? 0.0 : (cbMtdParam._m0[17u].x + cbMtdParam._m0[16u].y)))) * cbSceneParam._m0[72u].w;
    float _2570 = _517 / cbSceneParam._m0[86u].x;
    float _2571 = _518 / cbSceneParam._m0[86u].y;
    vec4 _2585 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2570, _2571, (log2((isnan(cbSceneParam._m0[77u].w) ? _511 : (isnan(_511) ? cbSceneParam._m0[77u].w : min(_511, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2587 = _2585.x;
    float _2588 = _2585.y;
    float _2589 = _2585.z;
    float _2590 = _2585.w;
    float _2681;
    float _2683;
    float _2685;
    float _2687;
    if (_511 > cbSceneParam._m0[78u].w)
    {
        float _2645 = isnan(_511) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _511 : min(cbSceneParam._m0[80u].w, _511));
        float _2646 = _2645 / _511;
        float _2657 = _2646 * _272;
        float _2658 = _273 * _2646;
        float _2659 = (-0.0) - _2658;
        float _2660 = _2646 * _274;
        float _2662 = (cbSceneParam._m0[77u].w * _2659) / _2645;
        float _2663 = _2662 + cbSceneParam._m0[79u].w;
        float _2664 = cbSceneParam._m0[79u].w - _2658;
        float _2670 = sqrt(((_2657 * _2657) + (_2658 * _2658)) + (_2660 * _2660));
        float _2673 = (1.0 - (cbSceneParam._m0[77u].w / _2645)) * _2670;
        float _2678 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2679 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2864;
        if (abs((_2659 - _2662) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2864 = ((((_2663 > 0.0) ? exp2(_2678 * _2663) : (2.0 - exp2(_2679 * _2663))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2673;
        }
        else
        {
            float _2824 = 1.0 / cbSceneParam._m0[80u].x;
            float _2825 = isnan(_2664) ? _2663 : (isnan(_2663) ? _2664 : max(_2663, _2664));
            float _2826 = isnan(_2664) ? _2663 : (isnan(_2663) ? _2664 : min(_2663, _2664));
            float _2835 = isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : min(_2825, 0.0));
            float _2836 = isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : min(_2826, 0.0));
            _2864 = ((abs(_2670 / _2659) * cbSceneParam._m0[80u].y) * ((((_2835 - _2836) * 2.0) - ((exp2(_2678 * (isnan(0.0) ? _2825 : (isnan(_2825) ? 0.0 : max(_2825, 0.0)))) - exp2(_2678 * (isnan(0.0) ? _2826 : (isnan(_2826) ? 0.0 : max(_2826, 0.0))))) * _2824)) - ((exp2(_2679 * _2835) - exp2(_2679 * _2836)) * _2824))) + (_2673 * cbSceneParam._m0[80u].z);
        }
        vec4 _2866 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2570, _2571, 1.0), 0.0);
        float _2875 = exp2((_2864 * (-1.44269502162933349609375)) * (1.0 - _2866.w));
        float _2876 = log2(_2875);
        float _2892 = log2(_2590);
        _2681 = (exp2(_2892 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2876 * cbSceneParam._m0[78u].x)) * _2866.x) / cbSceneParam._m0[78u].x)) + _2587;
        _2683 = (exp2(_2892 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2876 * cbSceneParam._m0[78u].y)) * _2866.y) / cbSceneParam._m0[78u].y)) + _2588;
        _2685 = (exp2(_2892 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2876 * cbSceneParam._m0[78u].z)) * _2866.z) / cbSceneParam._m0[78u].z)) + _2589;
        _2687 = _2875 * _2590;
    }
    else
    {
        _2681 = _2587;
        _2683 = _2588;
        _2685 = _2589;
        _2687 = _2590;
    }
    bool _2699 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2700 = log2(_2687);
    float _2707 = exp2(_2700 * cbSceneParam._m0[78u].x) * ((_2543 + (((((_1604 * _1652.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _1397) * _1668)) + _2421) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0))) * (_2415 + ((isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0))) * _583))) - _2543) * cbMtdParam._m0[15u].x));
    float _2708 = exp2(_2700 * cbSceneParam._m0[78u].y) * ((_2546 + (((((_1604 * _1652.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0))) * _1397) * _1668)) + _2423) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0))) * (_2417 + ((isnan(0.0) ? _1321 : (isnan(_1321) ? 0.0 : max(_1321, 0.0))) * _583))) - _2546) * cbMtdParam._m0[15u].x));
    float _2709 = exp2(_2700 * cbSceneParam._m0[78u].z) * ((_2549 + (((((_1604 * _1652.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0))) * _1397) * _1668)) + _2425) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0))) * (_2419 + ((isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0))) * _583))) - _2549) * cbMtdParam._m0[15u].x));
    vec4 _2717 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_517, _518));
    float _2719 = _2717.x;
    float _2740 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2719)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2719))) - _511) * cbMtdParam._m0[14u].z;
    float _4580 = isnan(0.0) ? _2740 : (isnan(_2740) ? 0.0 : max(_2740, 0.0));
    float _2742 = (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0))) * cbInstanceData._m0[_558 + 6u].w;
    float _2751 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2751 * (_2699 ? _2707 : (_2707 + (cbSceneParam._m0[72u].w * _2681)));
    SV_Target.y = _2751 * (_2699 ? _2708 : (_2708 + (cbSceneParam._m0[72u].w * _2683)));
    SV_Target.z = _2751 * (_2699 ? _2709 : (_2709 + (cbSceneParam._m0[72u].w * _2685)));
    SV_Target.w = _2742;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2742;
}


