#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_7;
layout(set = 0, binding = 5) uniform texture2D M_Water_Coaltar_solid_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1071;
float _3804;
float _3805;
float _3806;
float _3807;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _199 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _200 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _201 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _208 = _207 * _199;
    float _209 = _207 * _200;
    float _210 = _207 * _201;
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _215 = _214 * NORMAL.x;
    float _216 = _214 * NORMAL.y;
    float _217 = _214 * NORMAL.z;
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _222 = _221 * TANGENT.x;
    float _223 = _221 * TANGENT.y;
    float _224 = _221 * TANGENT.z;
    float _268 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _278 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _268);
    float _279 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _268);
    float _280 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _268);
    float _289 = inversesqrt(dot(vec3(_278, _279, _280), vec3(_278, _279, _280)));
    float _290 = _289 * _278;
    float _291 = _289 * _279;
    float _292 = _289 * _280;
    float _300 = (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x;
    float _301 = (cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y;
    vec4 _315 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_8, SS_BumpMap), vec2((_300 * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (_301 * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _323 = (_315.x * 2.0) + (-1.0);
    float _325 = (_315.y * 2.0) + (-1.0);
    float _326 = dot(vec2(_323, _325), vec2(_323, _325));
    float _3816 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _332 = sqrt(1.0 - (isnan(1.0) ? _3816 : (isnan(_3816) ? 1.0 : min(_3816, 1.0))));
    float _335 = fma(_332, _215, fma(_325, _222, _323 * _208));
    float _338 = fma(_332, _216, fma(_325, _223, _323 * _209));
    float _341 = fma(_332, _217, fma(_325, _224, _323 * _210));
    float _345 = inversesqrt(dot(vec3(_335, _338, _341), vec3(_335, _338, _341)));
    float _354 = (dot(vec4(_290, _291, _292, 0.0), vec4(_345 * _335, _345 * _338, _345 * _341, 0.0)) * (cbMtdParam._m0[14u].x - cbMtdParam._m0[14u].y)) + cbMtdParam._m0[14u].y;
    float _367 = dot(vec3(_278, _279, _280), vec3(_208, _209, _210));
    float _370 = dot(vec3(_278, _279, _280), vec3(_222, _223, _224));
    float _373 = dot(vec3(_278, _279, _280), vec3(_215, _216, _217));
    float _379 = inversesqrt(dot(vec3(_367, _370, _373), vec3(_367, _370, _373)));
    float _400 = dot(vec4(texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w))), vec4(1.0, 0.0, 0.0, 0.0)) - cbMtdParam._m0[12u].y;
    vec4 _420 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((((_367 * cbMtdParam._m0[12u].x) * _379) * _400) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((((_370 * cbMtdParam._m0[12u].x) * _379) * _400) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _443 = dot(vec4(_290, _291, _292, 0.0), vec4(_215, _216, _217, 0.0)) - cbMtdParam._m0[12u].w;
    float _3827 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
    float _450 = exp2(log2(1.0 - (isnan(1.0) ? _3827 : (isnan(_3827) ? 1.0 : min(_3827, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].x : (isnan(cbMtdParam._m0[13u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].x, 0.001000000047497451305389404296875))));
    float _465 = (((((sin(_354) + 1.0) * 2.275000095367431640625) * cbMtdParam._m0[10u].x) * _420.x) * cbMtdParam._m0[9u].x) * ((_450 * (cbMtdParam._m0[11u].x + (-1.0))) + 1.0);
    float _474 = ((((cbMtdParam._m0[10u].y * 2.275000095367431640625) * _420.y) * cbMtdParam._m0[9u].y) * ((_450 * (cbMtdParam._m0[11u].y + (-1.0))) + 1.0)) * (sin(_354 * 0.85000002384185791015625) + 1.0);
    float _483 = ((((cbMtdParam._m0[10u].z * 2.275000095367431640625) * _420.z) * cbMtdParam._m0[9u].z) * ((_450 * (cbMtdParam._m0[11u].z + (-1.0))) + 1.0)) * (sin(_354 * 0.699999988079071044921875) + 1.0);
    vec4 _496 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    float _503 = (_496.x * 2.0) + (-1.0);
    float _504 = (_496.y * 2.0) + (-1.0);
    float _505 = dot(vec2(_503, _504), vec2(_503, _504));
    float _3843 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _510 = sqrt(1.0 - (isnan(1.0) ? _3843 : (isnan(_3843) ? 1.0 : min(_3843, 1.0))));
    float _512 = cbMtdParam._m0[14u].w + _496.z;
    vec4 _524 = texture(sampler2D(M_Water_Coaltar_solid_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * _300) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _301) + cbTextureTilingScale._m0[0u].w));
    float _528 = cbMtdParam._m0[13u].w * _524.x;
    float _546 = fma(_510, _215, fma(_504, _222, _503 * _208));
    float _549 = fma(_510, _216, fma(_504, _223, _503 * _209));
    float _552 = fma(_510, _217, fma(_504, _224, _503 * _210));
    float _556 = inversesqrt(dot(vec3(_546, _549, _552), vec3(_546, _549, _552)));
    float _557 = _556 * _546;
    float _558 = _556 * _549;
    float _559 = _556 * _552;
    float _3854 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _560 = isnan(1.0) ? _3854 : (isnan(_3854) ? 1.0 : min(_3854, 1.0));
    float _561 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _3870 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _3881 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
    float _3892 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _580 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _585 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _587 = _585.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _750 = sqrt(((_278 * _278) + (_279 * _279)) + (_280 * _280));
        float _756 = (cbMatDynParam._m0[5u].x * _750) + cbMatDynParam._m0[5u].y;
        float _3903 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
        float _757 = isnan(1.0) ? _3903 : (isnan(_3903) ? 1.0 : min(_3903, 1.0));
        float _761 = (cbMatDynParam._m0[5u].z * _750) + cbMatDynParam._m0[5u].w;
        float _3914 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3914 : (isnan(_3914) ? 1.0 : min(_3914, 1.0))) - _757)) + _757) < ((_587 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _599 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _600 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _619 = fma(_559, cbSceneParam._m0[5u].z, fma(_558, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _557));
    float _622 = fma(_559, cbSceneParam._m0[6u].z, fma(_558, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _557));
    float _625 = fma(_559, cbSceneParam._m0[7u].z, fma(_558, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _557));
    uint _638 = uint(roundEven(NORMAL.w)) * 13u;
    uint _639 = _638 + 9u;
    uint _640 = _639 + uint(cbMatDynParam._m0[0u].w);
    float _646 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3870 : (isnan(_3870) ? 1.0 : min(_3870, 1.0)))) * cbInstanceData._m0[_640].x;
    float _647 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3881 : (isnan(_3881) ? 1.0 : min(_3881, 1.0)))) * cbInstanceData._m0[_640].y;
    float _648 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3892 : (isnan(_3892) ? 1.0 : min(_3892, 1.0)))) * cbInstanceData._m0[_640].z;
    float _3925 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _649 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
    float _3936 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _650 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _3947 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    float _651 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    vec4 _660 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _599, cbSceneParam._m0[86u].y * _600));
    float _663 = _660.x * TEXCOORD_1.w;
    float _664 = dot(vec3(_557, _558, _559), vec3(_290, _291, _292));
    float _667 = _664 * 2.0;
    float _671 = (_667 * _557) - _290;
    float _672 = (_667 * _558) - _291;
    float _673 = (_667 * _559) - _292;
    float _677 = abs(dot(vec3(_290, _291, _292), vec3(_557, _558, _559)));
    float _3958 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _678 = isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0));
    float _686 = 10.0 / (_580 + 10.0);
    float _687 = sqrt(_560);
    float _699 = exp2((_687 * 5.0) * log2(1.0 - (_678 * 0.999000012874603271484375))) / (4.0 - (_687 * 3.0));
    float _731 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _735 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _739 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1070;
    float _1072;
    float _1073;
    float _1074;
    float _1075;
    float _1076;
    float _1077;
    float _1078;
    float _1079;
    float _1080;
    float _1081;
    float _1082;
    float _1083;
    float _1084;
    float _1085;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _795 = fma(_739, cbModelParam._m0[26u].z, fma(_735, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _731));
        float _799 = fma(_739, cbModelParam._m0[27u].z, fma(_735, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _731));
        float _803 = fma(_739, cbModelParam._m0[28u].z, fma(_735, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _731));
        float _828 = _731 + _557;
        float _829 = _735 + _558;
        float _830 = _739 + _559;
        float _840 = fma(_830, cbModelParam._m0[26u].z, fma(_829, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _828)) - _795;
        float _841 = fma(_830, cbModelParam._m0[27u].z, fma(_829, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _828)) - _799;
        float _842 = fma(_830, cbModelParam._m0[28u].z, fma(_829, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _828)) - _803;
        float _846 = inversesqrt(dot(vec3(_840, _841, _842), vec3(_840, _841, _842)));
        float _859 = ((_846 * _840) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_795 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _860 = ((_846 * _841) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_799 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _861 = ((_846 * _842) / cbModelParam._m0[34u].z) + ((((((_803 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _864 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_859, _860, _861), 0.0);
        vec4 _871 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_859, _860, _861), 0.0);
        vec4 _878 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_859, _860, _861), 0.0);
        vec4 _885 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_859, _860, _861), 0.0);
        float _898 = exp2((_864.w + (-0.5)) * 20.0) * 2.0;
        float _899 = _898 * (_864.x + (-0.5));
        float _900 = _898 * (_864.y + (-0.5));
        float _901 = _898 * (_864.z + (-0.5));
        float _908 = exp2((_871.w + (-0.5)) * 20.0) * 2.0;
        float _909 = _908 * (_871.x + (-0.5));
        float _910 = _908 * (_871.y + (-0.5));
        float _911 = _908 * (_871.z + (-0.5));
        float _918 = exp2((_878.w + (-0.5)) * 20.0) * 2.0;
        float _919 = _918 * (_878.x + (-0.5));
        float _920 = _918 * (_878.y + (-0.5));
        float _921 = _918 * (_878.z + (-0.5));
        float _928 = exp2((_885.w + (-0.5)) * 20.0) * 2.0;
        float _929 = _928 * (_885.x + (-0.5));
        float _930 = _928 * (_885.y + (-0.5));
        float _931 = _928 * (_885.z + (-0.5));
        float _932 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
        float _933 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _934 = isnan(0.0) ? _931 : (isnan(_931) ? 0.0 : max(_931, 0.0));
        float _935 = _899 * 0.5;
        float _936 = _909 * 0.5;
        float _937 = _919 * 0.5;
        float _938 = dot(vec3(_935, _936, _937), vec3(_935, _936, _937));
        float _943 = (_938 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_938);
        float _952 = (dot(vec3(_557, _558, _559), vec3(_943 * _935, _943 * _936, _943 * _937)) + 1.0) * 0.5;
        float _3984 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _962 = sqrt(((_936 * _936) + (_935 * _935)) + (_937 * _937)) / (_932 + 9.9999997473787516355514526367188e-06);
        float _3995 = isnan(0.0) ? _962 : (isnan(_962) ? 0.0 : max(_962, 0.0));
        float _963 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _964 = _963 * 2.0;
        float _968 = (1.0 - _963) / (_963 + 1.0);
        float _4006 = isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0));
        float _969 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
        float _978 = ((((1.0 - _969) * (_964 + 2.0)) * exp2(log2(isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * (_964 + 1.0))) + _969) * _932;
        float _979 = _900 * 0.5;
        float _980 = _910 * 0.5;
        float _981 = _920 * 0.5;
        float _982 = dot(vec3(_979, _980, _981), vec3(_979, _980, _981));
        float _987 = (_982 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_982);
        float _995 = (dot(vec3(_557, _558, _559), vec3(_987 * _979, _987 * _980, _987 * _981)) + 1.0) * 0.5;
        float _4017 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
        float _1004 = sqrt(((_980 * _980) + (_979 * _979)) + (_981 * _981)) / (_933 + 9.9999997473787516355514526367188e-06);
        float _4028 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
        float _1005 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
        float _1006 = _1005 * 2.0;
        float _1010 = (1.0 - _1005) / (_1005 + 1.0);
        float _4039 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
        float _1011 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
        float _1020 = ((((1.0 - _1011) * (_1006 + 2.0)) * exp2(log2(isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0))) * (_1006 + 1.0))) + _1011) * _933;
        float _1021 = _901 * 0.5;
        float _1022 = _911 * 0.5;
        float _1023 = _921 * 0.5;
        float _1024 = dot(vec3(_1021, _1022, _1023), vec3(_1021, _1022, _1023));
        float _1029 = (_1024 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1024);
        float _1037 = (dot(vec3(_557, _558, _559), vec3(_1029 * _1021, _1029 * _1022, _1029 * _1023)) + 1.0) * 0.5;
        float _4050 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1046 = sqrt(((_1022 * _1022) + (_1021 * _1021)) + (_1023 * _1023)) / (_934 + 9.9999997473787516355514526367188e-06);
        float _4061 = isnan(0.0) ? _1046 : (isnan(_1046) ? 0.0 : max(_1046, 0.0));
        float _1047 = isnan(1.0) ? _4061 : (isnan(_4061) ? 1.0 : min(_4061, 1.0));
        float _1048 = _1047 * 2.0;
        float _1052 = (1.0 - _1047) / (_1047 + 1.0);
        float _4072 = isnan(0.0) ? _1052 : (isnan(_1052) ? 0.0 : max(_1052, 0.0));
        float _1053 = isnan(1.0) ? _4072 : (isnan(_4072) ? 1.0 : min(_4072, 1.0));
        float _1062 = ((((1.0 - _1053) * (_1048 + 2.0)) * exp2(log2(isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * (_1048 + 1.0))) + _1053) * _934;
        _1070 = _901;
        _1072 = _900;
        _1073 = _899;
        _1074 = _911;
        _1075 = _910;
        _1076 = _909;
        _1077 = _921;
        _1078 = _920;
        _1079 = _919;
        _1080 = _934;
        _1081 = _933;
        _1082 = _932;
        _1083 = cbModelParam._m0[36u].z * (isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0)));
        _1084 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0)));
        _1085 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1062 : (isnan(_1062) ? 0.0 : max(_1062, 0.0)));
    }
    else
    {
        _1070 = _1071;
        _1072 = _1071;
        _1073 = _1071;
        _1074 = _1071;
        _1075 = _1071;
        _1076 = _1071;
        _1077 = _1071;
        _1078 = _1071;
        _1079 = _1071;
        _1080 = _1071;
        _1081 = _1071;
        _1082 = _1071;
        _1083 = 0.0;
        _1084 = 0.0;
        _1085 = 0.0;
    }
    float _1383;
    float _1384;
    float _1385;
    float _1386;
    float _1387;
    float _1388;
    float _1389;
    float _1390;
    float _1391;
    float _1392;
    float _1393;
    float _1394;
    float _1395;
    float _1396;
    float _1397;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1114 = fma(_739, cbModelParam._m0[30u].z, fma(_735, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _731));
        float _1118 = fma(_739, cbModelParam._m0[31u].z, fma(_735, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _731));
        float _1122 = fma(_739, cbModelParam._m0[32u].z, fma(_735, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _731));
        float _1145 = _731 + _557;
        float _1146 = _735 + _558;
        float _1147 = _739 + _559;
        float _1157 = fma(_1147, cbModelParam._m0[30u].z, fma(_1146, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1145)) - _1114;
        float _1158 = fma(_1147, cbModelParam._m0[31u].z, fma(_1146, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1145)) - _1118;
        float _1159 = fma(_1147, cbModelParam._m0[32u].z, fma(_1146, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1145)) - _1122;
        float _1163 = inversesqrt(dot(vec3(_1157, _1158, _1159), vec3(_1157, _1158, _1159)));
        float _1176 = ((_1163 * _1157) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1114 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1177 = ((_1163 * _1158) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1118 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1178 = ((_1163 * _1159) / cbModelParam._m0[35u].z) + ((((((_1122 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1180 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1176, _1177, _1178), 0.0);
        vec4 _1187 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1176, _1177, _1178), 0.0);
        vec4 _1194 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1176, _1177, _1178), 0.0);
        vec4 _1201 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1176, _1177, _1178), 0.0);
        float _1213 = exp2((_1180.w + (-0.5)) * 20.0) * 2.0;
        float _1214 = _1213 * (_1180.x + (-0.5));
        float _1215 = _1213 * (_1180.y + (-0.5));
        float _1216 = _1213 * (_1180.z + (-0.5));
        float _1223 = exp2((_1187.w + (-0.5)) * 20.0) * 2.0;
        float _1224 = _1223 * (_1187.x + (-0.5));
        float _1225 = _1223 * (_1187.y + (-0.5));
        float _1226 = _1223 * (_1187.z + (-0.5));
        float _1233 = exp2((_1194.w + (-0.5)) * 20.0) * 2.0;
        float _1234 = _1233 * (_1194.x + (-0.5));
        float _1235 = _1233 * (_1194.y + (-0.5));
        float _1236 = _1233 * (_1194.z + (-0.5));
        float _1243 = exp2((_1201.w + (-0.5)) * 20.0) * 2.0;
        float _1244 = _1243 * (_1201.x + (-0.5));
        float _1245 = _1243 * (_1201.y + (-0.5));
        float _1246 = _1243 * (_1201.z + (-0.5));
        float _1247 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
        float _1248 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1249 = isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0));
        float _1250 = _1214 * 0.5;
        float _1251 = _1224 * 0.5;
        float _1252 = _1234 * 0.5;
        float _1253 = dot(vec3(_1250, _1251, _1252), vec3(_1250, _1251, _1252));
        float _1258 = (_1253 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1253);
        float _1266 = (dot(vec3(_557, _558, _559), vec3(_1258 * _1250, _1258 * _1251, _1258 * _1252)) + 1.0) * 0.5;
        float _4113 = isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0));
        float _1275 = sqrt(((_1251 * _1251) + (_1250 * _1250)) + (_1252 * _1252)) / (_1247 + 9.9999997473787516355514526367188e-06);
        float _4124 = isnan(0.0) ? _1275 : (isnan(_1275) ? 0.0 : max(_1275, 0.0));
        float _1276 = isnan(1.0) ? _4124 : (isnan(_4124) ? 1.0 : min(_4124, 1.0));
        float _1277 = _1276 * 2.0;
        float _1281 = (1.0 - _1276) / (_1276 + 1.0);
        float _4135 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1282 = isnan(1.0) ? _4135 : (isnan(_4135) ? 1.0 : min(_4135, 1.0));
        float _1291 = ((((1.0 - _1282) * (_1277 + 2.0)) * exp2(log2(isnan(1.0) ? _4113 : (isnan(_4113) ? 1.0 : min(_4113, 1.0))) * (_1277 + 1.0))) + _1282) * _1247;
        float _1292 = _1215 * 0.5;
        float _1293 = _1225 * 0.5;
        float _1294 = _1235 * 0.5;
        float _1295 = dot(vec3(_1292, _1293, _1294), vec3(_1292, _1293, _1294));
        float _1300 = (_1295 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1295);
        float _1308 = (dot(vec3(_557, _558, _559), vec3(_1300 * _1292, _1300 * _1293, _1300 * _1294)) + 1.0) * 0.5;
        float _4146 = isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0));
        float _1317 = sqrt(((_1293 * _1293) + (_1292 * _1292)) + (_1294 * _1294)) / (_1248 + 9.9999997473787516355514526367188e-06);
        float _4157 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
        float _1318 = isnan(1.0) ? _4157 : (isnan(_4157) ? 1.0 : min(_4157, 1.0));
        float _1319 = _1318 * 2.0;
        float _1323 = (1.0 - _1318) / (_1318 + 1.0);
        float _4168 = isnan(0.0) ? _1323 : (isnan(_1323) ? 0.0 : max(_1323, 0.0));
        float _1324 = isnan(1.0) ? _4168 : (isnan(_4168) ? 1.0 : min(_4168, 1.0));
        float _1333 = ((((1.0 - _1324) * (_1319 + 2.0)) * exp2(log2(isnan(1.0) ? _4146 : (isnan(_4146) ? 1.0 : min(_4146, 1.0))) * (_1319 + 1.0))) + _1324) * _1248;
        float _1334 = _1216 * 0.5;
        float _1335 = _1226 * 0.5;
        float _1336 = _1236 * 0.5;
        float _1337 = dot(vec3(_1334, _1335, _1336), vec3(_1334, _1335, _1336));
        float _1342 = (_1337 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1337);
        float _1350 = (dot(vec3(_557, _558, _559), vec3(_1342 * _1334, _1342 * _1335, _1342 * _1336)) + 1.0) * 0.5;
        float _4179 = isnan(0.0) ? _1350 : (isnan(_1350) ? 0.0 : max(_1350, 0.0));
        float _1359 = sqrt(((_1335 * _1335) + (_1334 * _1334)) + (_1336 * _1336)) / (_1249 + 9.9999997473787516355514526367188e-06);
        float _4190 = isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0));
        float _1360 = isnan(1.0) ? _4190 : (isnan(_4190) ? 1.0 : min(_4190, 1.0));
        float _1361 = _1360 * 2.0;
        float _1365 = (1.0 - _1360) / (_1360 + 1.0);
        float _4201 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1366 = isnan(1.0) ? _4201 : (isnan(_4201) ? 1.0 : min(_4201, 1.0));
        float _1375 = ((((1.0 - _1366) * (_1361 + 2.0)) * exp2(log2(isnan(1.0) ? _4179 : (isnan(_4179) ? 1.0 : min(_4179, 1.0))) * (_1361 + 1.0))) + _1366) * _1249;
        _1383 = _1216;
        _1384 = _1215;
        _1385 = _1214;
        _1386 = _1226;
        _1387 = _1225;
        _1388 = _1224;
        _1389 = _1236;
        _1390 = _1235;
        _1391 = _1234;
        _1392 = _1249;
        _1393 = _1248;
        _1394 = _1247;
        _1395 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0)));
        _1396 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1333 : (isnan(_1333) ? 0.0 : max(_1333, 0.0)));
        _1397 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0)));
    }
    else
    {
        _1383 = _1071;
        _1384 = _1071;
        _1385 = _1071;
        _1386 = _1071;
        _1387 = _1071;
        _1388 = _1071;
        _1389 = _1071;
        _1390 = _1071;
        _1391 = _1071;
        _1392 = _1071;
        _1393 = _1071;
        _1394 = _1071;
        _1395 = 0.0;
        _1396 = 0.0;
        _1397 = 0.0;
    }
    float _1407 = (cbModelParam._m0[1u].x * (_1395 - _1083)) + _1083;
    float _1408 = (cbModelParam._m0[1u].x * (_1396 - _1084)) + _1084;
    float _1409 = (cbModelParam._m0[1u].x * (_1397 - _1085)) + _1085;
    float _1430 = fma(_1409, cbSceneParam._m0[89u].z, fma(_1408, cbSceneParam._m0[89u].y, _1407 * cbSceneParam._m0[89u].x));
    float _1433 = fma(_1409, cbSceneParam._m0[90u].z, fma(_1408, cbSceneParam._m0[90u].y, _1407 * cbSceneParam._m0[90u].x));
    float _1436 = fma(_1409, cbSceneParam._m0[91u].z, fma(_1408, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1407));
    float _1451 = _671 * 0.5;
    float _1452 = _672 * 0.5;
    float _1453 = _673 * 0.5;
    float _1454 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1385, _1388, _1391, _1394));
    float _1457 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1384, _1387, _1390, _1393));
    float _1460 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1383, _1386, _1389, _1392));
    float _1494;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1467 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1070, _1074, _1077, _1080));
        float _1471 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1072, _1075, _1078, _1081));
        float _1475 = dot(vec4(_1451, _1452, _1453, 1.0), vec4(_1073, _1076, _1079, _1082));
        float _1482 = dot(vec4(cbModelParam._m0[39u]), vec4(_1451, _1452, _1453, 1.0));
        _1494 = dot(vec3(isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0)), isnan(0.0) ? _1471 : (isnan(_1471) ? 0.0 : max(_1471, 0.0)), isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1482) ? 0.0 : (isnan(0.0) ? _1482 : max(0.0, _1482))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1494 = 1.0;
    }
    float _1505;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1496 = dot(vec4(cbModelParam._m0[40u]), vec4(_1451, _1452, _1453, 1.0));
        _1505 = dot(vec3(isnan(0.0) ? _1454 : (isnan(_1454) ? 0.0 : max(_1454, 0.0)), isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0)), isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1496) ? 0.0 : (isnan(0.0) ? _1496 : max(0.0, _1496))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1505 = 1.0;
    }
    float _1509 = (_1505 * cbModelParam._m0[1u].x) + (_1494 * (1.0 - cbModelParam._m0[1u].x));
    float _1519 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _560);
    float _1520 = isnan(_1519) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1519 : min(cbModelParam._m0[25u].z, _1519));
    float _1600;
    float _1602;
    float _1604;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1567 = fma(_739, cbModelParam._m0[13u].z, fma(_735, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _731)) + cbModelParam._m0[13u].w;
        float _1571 = fma(_739, cbModelParam._m0[14u].z, fma(_735, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _731)) + cbModelParam._m0[14u].w;
        float _1575 = fma(_739, cbModelParam._m0[15u].z, fma(_735, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _731)) + cbModelParam._m0[15u].w;
        float _1578 = fma(_673, cbModelParam._m0[13u].z, fma(_672, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _671));
        float _1581 = fma(_673, cbModelParam._m0[14u].z, fma(_672, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _671));
        float _1584 = fma(_673, cbModelParam._m0[15u].z, fma(_672, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _671));
        float _1612;
        if (_1578 > 0.0)
        {
            _1612 = abs((1.0 - _1567) / _1578);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1578 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1567 + 1.0) / _1578);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1612 = frontier_phi_17_15_ladder;
        }
        float _1835;
        if (_1581 > 0.0)
        {
            _1835 = abs((1.0 - _1571) / _1581);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1581 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1571 + 1.0) / _1581);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1835 = frontier_phi_26_22_ladder;
        }
        float _2099;
        if (_1584 > 0.0)
        {
            _2099 = abs((1.0 - _1575) / _1584);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1584 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1575 + 1.0) / _1584);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2099 = frontier_phi_38_33_ladder;
        }
        float _2101 = isnan(_1835) ? _1612 : (isnan(_1612) ? _1835 : min(_1612, _1835));
        float _2102 = isnan(_2099) ? _2101 : (isnan(_2101) ? _2099 : min(_2101, _2099));
        float _2106 = (_2102 * _1578) + _1567;
        float _2107 = (_2102 * _1581) + _1571;
        float _2108 = (_2102 * _1584) + _1575;
        float _2109 = _2102 * 9.9999997473787516355514526367188e-05;
        float _2111 = (-1.0) - _2109;
        float _2113 = _2109 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2108 > _2113) || ((_2108 < _2111) || ((_2107 > _2113) || ((_2107 < _2111) || ((_2106 < _2111) || (_2106 > _2113))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2262 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2108, cbModelParam._m0[9u].z, fma(_2107, cbModelParam._m0[9u].y, _2106 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2108, cbModelParam._m0[10u].z, fma(_2107, cbModelParam._m0[10u].y, _2106 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2108, cbModelParam._m0[11u].z, fma(_2107, cbModelParam._m0[11u].y, _2106 * cbModelParam._m0[11u].x))), _1520);
            frontier_phi_16_38_ladder = _2262.x * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2262.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2262.y * cbModelParam._m0[1u].y;
        }
        _1600 = frontier_phi_16_38_ladder;
        _1602 = frontier_phi_16_38_ladder_2;
        _1604 = frontier_phi_16_38_ladder_1;
    }
    else
    {
        vec4 _1588 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_671, _672, _673), _1520);
        _1600 = _1588.x * cbModelParam._m0[1u].y;
        _1602 = _1588.y * cbModelParam._m0[1u].y;
        _1604 = _1588.z * cbModelParam._m0[1u].y;
    }
    float _1608 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _560);
    float _1609 = isnan(_1608) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1608 : min(cbModelParam._m0[25u].w, _1608));
    float _1700;
    float _1702;
    float _1704;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1664 = fma(_739, cbModelParam._m0[21u].z, fma(_735, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _731)) + cbModelParam._m0[21u].w;
        float _1668 = fma(_739, cbModelParam._m0[22u].z, fma(_735, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _731)) + cbModelParam._m0[22u].w;
        float _1672 = fma(_739, cbModelParam._m0[23u].z, fma(_735, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _731)) + cbModelParam._m0[23u].w;
        float _1675 = fma(_673, cbModelParam._m0[21u].z, fma(_672, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _671));
        float _1678 = fma(_673, cbModelParam._m0[22u].z, fma(_672, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _671));
        float _1681 = fma(_673, cbModelParam._m0[23u].z, fma(_672, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _671));
        float _1840;
        if (_1675 > 0.0)
        {
            _1840 = abs((1.0 - _1664) / _1675);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1675 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1664 + 1.0) / _1675);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1840 = frontier_phi_28_24_ladder;
        }
        float _2126;
        if (_1678 > 0.0)
        {
            _2126 = abs((1.0 - _1668) / _1678);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1678 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1668 + 1.0) / _1678);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2126 = frontier_phi_40_35_ladder;
        }
        float _2445;
        if (_1681 > 0.0)
        {
            _2445 = abs((1.0 - _1672) / _1681);
        }
        else
        {
            float frontier_phi_49_47_ladder;
            if (_1681 < 0.0)
            {
                frontier_phi_49_47_ladder = abs((_1672 + 1.0) / _1681);
            }
            else
            {
                frontier_phi_49_47_ladder = 5000.0;
            }
            _2445 = frontier_phi_49_47_ladder;
        }
        float _2447 = isnan(_2126) ? _1840 : (isnan(_1840) ? _2126 : min(_1840, _2126));
        float _2448 = isnan(_2445) ? _2447 : (isnan(_2447) ? _2445 : min(_2447, _2445));
        float _2452 = (_2448 * _1675) + _1664;
        float _2453 = (_2448 * _1678) + _1668;
        float _2454 = (_2448 * _1681) + _1672;
        float _2455 = _2448 * 9.9999997473787516355514526367188e-05;
        float _2456 = (-1.0) - _2455;
        float _2458 = _2455 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2454 > _2458) || ((_2454 < _2456) || ((_2453 > _2458) || ((_2453 < _2456) || ((_2452 < _2456) || (_2452 > _2458))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2727 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2454, cbModelParam._m0[17u].z, fma(_2453, cbModelParam._m0[17u].y, _2452 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2454, cbModelParam._m0[18u].z, fma(_2453, cbModelParam._m0[18u].y, _2452 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2454, cbModelParam._m0[19u].z, fma(_2453, cbModelParam._m0[19u].y, _2452 * cbModelParam._m0[19u].x))), _1609);
            frontier_phi_25_49_ladder = _2727.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2727.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2727.x * cbModelParam._m0[1u].z;
        }
        _1700 = frontier_phi_25_49_ladder_2;
        _1702 = frontier_phi_25_49_ladder_1;
        _1704 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1684 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_671, _672, _673), _1609);
        _1700 = _1684.x * cbModelParam._m0[1u].z;
        _1702 = _1684.y * cbModelParam._m0[1u].z;
        _1704 = _1684.z * cbModelParam._m0[1u].z;
    }
    float _1716 = ((((1.0 - _699) * ((_687 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_699 * _687)) * _663;
    float _1717 = _1716 * ((cbModelParam._m0[1u].w * (_1700 - _1600)) + _1600);
    float _1718 = _1716 * ((cbModelParam._m0[1u].w * (_1702 - _1602)) + _1602);
    float _1719 = _1716 * ((cbModelParam._m0[1u].w * (_1704 - _1604)) + _1604);
    float _1722 = fma(_1719, cbSceneParam._m0[89u].z, fma(_1718, cbSceneParam._m0[89u].y, _1717 * cbSceneParam._m0[89u].x));
    float _1725 = fma(_1719, cbSceneParam._m0[90u].z, fma(_1718, cbSceneParam._m0[90u].y, _1717 * cbSceneParam._m0[90u].x));
    float _1728 = fma(_1719, cbSceneParam._m0[91u].z, fma(_1718, cbSceneParam._m0[91u].y, _1717 * cbSceneParam._m0[91u].x));
    float _1739 = _599 / cbSceneParam._m0[86u].x;
    float _1747 = (cbSceneParam._m0[88u].y * (1.0 - _560)) + cbSceneParam._m0[88u].z;
    float _4327 = isnan(0.0) ? _1747 : (isnan(_1747) ? 0.0 : max(_1747, 0.0));
    float _1749 = (isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0))) * 5.0;
    float _1754 = (_686 * cbMtdParam._m0[13u].z) * dot(vec3(_557, _558, _559), vec3(1.0, 0.0, 0.0));
    vec4 _1764 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1754 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1754 + _1739) * cbSceneParam._m0[86u].x, _600), _1749).w) + _1739) * cbSceneParam._m0[86u].x, _600), _1749);
    float _1780 = 1.0 - _1764.w;
    float _1814 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1818 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1822 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1826 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1827 = _1814 / _1826;
    float _1828 = _1818 / _1826;
    float _1829 = _1822 / _1826;
    float _1976;
    float _1977;
    float _1978;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1856 = ((uint(_1829 > cbSceneParam._m0[59u].y) + uint(_1829 > cbSceneParam._m0[59u].x)) + uint(_1829 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1857 = _1856 + 43u;
        uint _1865 = _1856 + 44u;
        uint _1873 = _1856 + 45u;
        uint _1881 = _1856 + 46u;
        float _1892 = fma(_1826, cbSceneParam._m0[_1857].w, fma(_1822, cbSceneParam._m0[_1857].z, fma(_1818, cbSceneParam._m0[_1857].y, _1814 * cbSceneParam._m0[_1857].x)));
        float _1896 = fma(_1826, cbSceneParam._m0[_1865].w, fma(_1822, cbSceneParam._m0[_1865].z, fma(_1818, cbSceneParam._m0[_1865].y, _1814 * cbSceneParam._m0[_1865].x)));
        float _1904 = fma(_1826, cbSceneParam._m0[_1881].w, fma(_1822, cbSceneParam._m0[_1881].z, fma(_1818, cbSceneParam._m0[_1881].y, _1814 * cbSceneParam._m0[_1881].x)));
        float _1909 = cbSceneParam._m0[33u].z * _1904;
        float _1911 = cbSceneParam._m0[33u].w * _1904;
        float _1914 = fma(_1826, cbSceneParam._m0[_1873].w, fma(_1822, cbSceneParam._m0[_1873].z, fma(_1818, cbSceneParam._m0[_1873].y, _1814 * cbSceneParam._m0[_1873].x))) / _1904;
        float _1962 = (cbSceneParam._m0[33u].x - sqrt(((_1828 * _1828) + (_1827 * _1827)) + (_1829 * _1829))) * cbSceneParam._m0[33u].y;
        float _4338 = isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0));
        float _1969 = (isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1909 + _1892) / _1904, (_1911 + _1896) / _1904), _1914), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1911 + _1892) / _1904, (_1896 - _1909) / _1904), _1914), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1892 - _1909) / _1904, (_1896 - _1911) / _1904), _1914), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1892 - _1911) / _1904, (_1909 + _1896) / _1904), _1914), 0.0)).x), vec4(0.25)));
        _1976 = 1.0 - (_1969 * cbSceneParam._m0[34u].x);
        _1977 = 1.0 - (_1969 * cbSceneParam._m0[34u].y);
        _1978 = 1.0 - (_1969 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1976 = 1.0;
        _1977 = 1.0;
        _1978 = 1.0;
    }
    float _2042;
    float _2044;
    float _2046;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2030 = fma(_1826, cbSceneParam._m0[63u].w, fma(_1822, cbSceneParam._m0[63u].z, fma(_1818, cbSceneParam._m0[63u].y, _1814 * cbSceneParam._m0[63u].x)));
        float _2031 = fma(_1826, cbSceneParam._m0[60u].w, fma(_1822, cbSceneParam._m0[60u].z, fma(_1818, cbSceneParam._m0[60u].y, _1814 * cbSceneParam._m0[60u].x))) / _2030;
        float _2032 = fma(_1826, cbSceneParam._m0[61u].w, fma(_1822, cbSceneParam._m0[61u].z, fma(_1818, cbSceneParam._m0[61u].y, _1814 * cbSceneParam._m0[61u].x))) / _2030;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2031 >= cbSceneParam._m0[64u].x) && (_2032 >= cbSceneParam._m0[64u].y)) && (_2031 <= cbSceneParam._m0[64u].z)) && (_2032 <= cbSceneParam._m0[64u].w))
        {
            float _2139 = fma(_1826, cbSceneParam._m0[62u].w, fma(_1822, cbSceneParam._m0[62u].z, fma(_1818, cbSceneParam._m0[62u].y, _1814 * cbSceneParam._m0[62u].x))) / _2030;
            float _2143 = isnan(cbSceneParam._m0[41u].w) ? _2139 : (isnan(_2139) ? cbSceneParam._m0[41u].w : max(_2139, cbSceneParam._m0[41u].w));
            float _2186 = (cbSceneParam._m0[33u].x - sqrt(((_1828 * _1828) + (_1827 * _1827)) + (_1829 * _1829))) * cbSceneParam._m0[33u].y;
            float _4354 = isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0));
            float _2193 = (isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2031, cbSceneParam._m0[33u].w + _2032), _2143), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2031, _2032 - cbSceneParam._m0[33u].z), _2143), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2031 - cbSceneParam._m0[33u].z, _2032 - cbSceneParam._m0[33u].w), _2143), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2031 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2032), _2143), 0.0)).x), vec4(0.25)));
            float _2197 = 1.0 - (_2193 * cbSceneParam._m0[34u].x);
            float _2198 = 1.0 - (_2193 * cbSceneParam._m0[34u].y);
            float _2199 = 1.0 - (_2193 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2199) ? _1978 : (isnan(_1978) ? _2199 : min(_1978, _2199));
            frontier_phi_37_36_ladder_1 = isnan(_2198) ? _1977 : (isnan(_1977) ? _2198 : min(_1977, _2198));
            frontier_phi_37_36_ladder_2 = isnan(_2197) ? _1976 : (isnan(_1976) ? _2197 : min(_1976, _2197));
        }
        else
        {
            frontier_phi_37_36_ladder = _1978;
            frontier_phi_37_36_ladder_1 = _1977;
            frontier_phi_37_36_ladder_2 = _1976;
        }
        _2042 = frontier_phi_37_36_ladder_2;
        _2044 = frontier_phi_37_36_ladder_1;
        _2046 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2042 = _1976;
        _2044 = _1977;
        _2046 = _1978;
    }
    uvec4 _2051 = floatBitsToUint(cbInstanceData._m0[_638 + 5u]);
    uint _2053 = _2051.x * 14u;
    uint _2054 = _2053 + 13u;
    float _2059 = _663 + (-1.0);
    float _2062 = (cbLight._m0[_2054].x * _2059) + 1.0;
    float _2063 = (cbLight._m0[_2054].y * _2059) + 1.0;
    uint _2065 = _2053 + 4u;
    float _2076 = dot(vec3(cbLight._m0[_2053].xyz), vec3(_557, _558, _559));
    float _2079 = isnan(1.0) ? _2062 : (isnan(_2062) ? 1.0 : min(_2062, 1.0));
    float _2080 = cbLight._m0[_2065].x * _2042;
    float _2081 = cbLight._m0[_2065].y * _2044;
    float _2082 = cbLight._m0[_2065].z * _2046;
    uint _2083 = _2053 + 5u;
    uint _2089 = _2053 | 1u;
    float _2095 = dot(vec3(cbLight._m0[_2089].xyz), vec3(_557, _558, _559));
    float _2098 = isnan(1.0) ? _2063 : (isnan(_2063) ? 1.0 : min(_2063, 1.0));
    float _2271;
    float _2272;
    float _2273;
    if (_561 == 0.0)
    {
        float _4390 = isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0));
        float _4401 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
        float _2208 = (isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * 0.3183098733425140380859375;
        float _2210 = (isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0))) * 0.3183098733425140380859375;
        _2271 = ((cbLight._m0[_2083].x * _2098) * _2210) + ((_2080 * _2079) * _2208);
        _2272 = ((_2098 * cbLight._m0[_2083].y) * _2210) + ((_2081 * _2079) * _2208);
        _2273 = ((_2098 * cbLight._m0[_2083].z) * _2210) + ((_2082 * _2079) * _2208);
    }
    else
    {
        float _2220 = _2076 + _561;
        float _2223 = (_561 * 2.0) + 1.0;
        float _2224 = (isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0))) / _2223;
        float _2231 = _2095 + _561;
        float _2233 = (isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0))) / _2223;
        _2271 = (((_2233 * cbLight._m0[_2083].x) * _2098) + ((_2080 * _2224) * _2079)) * 0.3183098733425140380859375;
        _2272 = (((_2233 * cbLight._m0[_2083].y) * _2098) + ((_2081 * _2224) * _2079)) * 0.3183098733425140380859375;
        _2273 = (((_2233 * cbLight._m0[_2083].z) * _2098) + ((_2082 * _2224) * _2079)) * 0.3183098733425140380859375;
    }
    uint _2277 = _2053 + 8u;
    float _2293 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2053].w)) * _560) * 0.949999988079071044921875);
    float _2294 = _2293 * _2293;
    float _2295 = cbLight._m0[_2053].x + _290;
    float _2296 = cbLight._m0[_2053].y + _291;
    float _2297 = cbLight._m0[_2053].z + _292;
    float _2301 = inversesqrt(dot(vec3(_2295, _2296, _2297), vec3(_2295, _2296, _2297)));
    float _2302 = _2301 * _2295;
    float _2303 = _2301 * _2296;
    float _2304 = _2301 * _2297;
    float _2305 = dot(vec3(_557, _558, _559), vec3(cbLight._m0[_2053].xyz));
    float _4422 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
    float _2308 = isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0));
    float _4433 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _2309 = isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0));
    float _2310 = dot(vec3(_557, _558, _559), vec3(_2302, _2303, _2304));
    float _4444 = isnan(0.0) ? _2310 : (isnan(_2310) ? 0.0 : max(_2310, 0.0));
    float _2313 = isnan(1.0) ? _4444 : (isnan(_4444) ? 1.0 : min(_4444, 1.0));
    float _2314 = dot(vec3(cbLight._m0[_2053].xyz), vec3(_2302, _2303, _2304));
    float _4455 = isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0));
    float _2318 = _2294 * _2294;
    float _2322 = ((_2313 * _2313) * (_2318 + (-1.0))) + 1.0;
    float _2333 = (exp2(log2(1.0 - (isnan(1.0) ? _4455 : (isnan(_4455) ? 1.0 : min(_4455, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2334 = 1.0 - _2294;
    float _2345 = (0.5 / (((_2309 * ((_2308 * _2334) + _2294)) + 9.9999999392252902907785028219223e-09) + (((_2309 * _2334) + _2294) * _2308))) * _2308;
    float _4466 = isnan(0.0) ? _2345 : (isnan(_2345) ? 0.0 : max(_2345, 0.0));
    float _2347 = (isnan(1.0) ? _4466 : (isnan(_4466) ? 1.0 : min(_4466, 1.0))) * (_2318 / ((_2322 * _2322) * 3.141590118408203125));
    uint _2363 = _2053 + 9u;
    float _2377 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2089].w)) * _560) * 0.949999988079071044921875);
    float _2378 = _2377 * _2377;
    float _2379 = cbLight._m0[_2089].x + _290;
    float _2380 = cbLight._m0[_2089].y + _291;
    float _2381 = cbLight._m0[_2089].z + _292;
    float _2385 = inversesqrt(dot(vec3(_2379, _2380, _2381), vec3(_2379, _2380, _2381)));
    float _2386 = _2385 * _2379;
    float _2387 = _2385 * _2380;
    float _2388 = _2385 * _2381;
    float _2389 = dot(vec3(_557, _558, _559), vec3(cbLight._m0[_2089].xyz));
    float _4477 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
    float _2392 = isnan(1.0) ? _4477 : (isnan(_4477) ? 1.0 : min(_4477, 1.0));
    float _2393 = dot(vec3(_557, _558, _559), vec3(_2386, _2387, _2388));
    float _4488 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
    float _2396 = isnan(1.0) ? _4488 : (isnan(_4488) ? 1.0 : min(_4488, 1.0));
    float _2397 = dot(vec3(cbLight._m0[_2089].xyz), vec3(_2386, _2387, _2388));
    float _4499 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    float _2401 = _2378 * _2378;
    float _2405 = ((_2396 * _2396) * (_2401 + (-1.0))) + 1.0;
    float _2414 = (exp2(log2(1.0 - (isnan(1.0) ? _4499 : (isnan(_4499) ? 1.0 : min(_4499, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2415 = 1.0 - _2378;
    float _2425 = (0.5 / (((_2309 * ((_2392 * _2415) + _2378)) + 9.9999999392252902907785028219223e-09) + (((_2309 * _2415) + _2378) * _2392))) * _2392;
    float _4510 = isnan(0.0) ? _2425 : (isnan(_2425) ? 0.0 : max(_2425, 0.0));
    float _2427 = (isnan(1.0) ? _4510 : (isnan(_4510) ? 1.0 : min(_4510, 1.0))) * (_2401 / ((_2405 * _2405) * 3.141590118408203125));
    float _2437 = (((_2414 * cbLight._m0[_2363].x) * _2427) * _2098) + ((((cbLight._m0[_2277].x * _2042) * _2333) * _2347) * _2079);
    float _2438 = (((_2414 * cbLight._m0[_2363].y) * _2427) * _2098) + ((((cbLight._m0[_2277].y * _2044) * _2333) * _2347) * _2079);
    float _2439 = (((_2414 * cbLight._m0[_2363].z) * _2427) * _2098) + ((((cbLight._m0[_2277].z * _2046) * _2333) * _2347) * _2079);
    float _2527;
    float _2529;
    float _2531;
    float _2533;
    float _2535;
    float _2537;
    if (_2051.y == 0u)
    {
        uvec4 _2482 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2483 = _2482.x;
        uint _2494 = uint((float(_2482.y) * floor(float(uint(cbSceneParam._m0[85u].y * _600) / _2483))) + floor(float(uint(cbSceneParam._m0[85u].x * _599) / _2483)));
        float _2504 = (log2(_1829 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2505 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
        uint _2508 = uint(isnan(14.0) ? _2505 : (isnan(_2505) ? 14.0 : min(_2505, 14.0)));
        uvec4 _2513 = texelFetch(g_lightClusterGridBuffer, int(((_2508 << 2u) + (_2494 << 6u)) >> 2u));
        uint _2514 = _2513.x;
        uint _2515 = _2482.z;
        float _2732;
        float _2734;
        float _2736;
        float _2738;
        float _2740;
        float _2742;
        if (((((1u << ((_2515 >> 4u) & 15u)) + 4294967295u) & _2514) == 0u) || ((_2515 & 240u) == 0u))
        {
            _2732 = 0.0;
            _2734 = 0.0;
            _2736 = 0.0;
            _2738 = 0.0;
            _2740 = 0.0;
            _2742 = 0.0;
        }
        else
        {
            float _2733;
            float _2735;
            float _2737;
            float _2739;
            float _2741;
            float _2743;
            float _2915 = 0.0;
            float _2916 = 0.0;
            float _2917 = 0.0;
            float _2918 = 0.0;
            float _2919 = 0.0;
            float _2920 = 0.0;
            uint _2921 = 0u;
            uint _2930;
            bool _2931;
            for (;;)
            {
                _2930 = texelFetch(g_lightClassification, int((((_2508 << 5u) + (_2494 << 9u)) + (_2921 << 2u)) >> 2u)).x;
                _2931 = _2930 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2931)
                {
                    frontier_phi_66_pred = _2917;
                    frontier_phi_66_pred_1 = _2916;
                    frontier_phi_66_pred_2 = _2915;
                    frontier_phi_66_pred_3 = _2918;
                    frontier_phi_66_pred_4 = _2920;
                    frontier_phi_66_pred_5 = _2919;
                }
                else
                {
                    float _3060;
                    float _3061;
                    float _3062;
                    float _3063;
                    float _3064;
                    float _3065;
                    uint _3066;
                    _3060 = _2915;
                    _3061 = _2916;
                    _3062 = _2917;
                    _3063 = _2918;
                    _3064 = _2919;
                    _3065 = _2920;
                    _3066 = _2930;
                    float _2987;
                    float _2988;
                    float _2989;
                    float _2990;
                    float _2991;
                    float _2992;
                    for (;;)
                    {
                        uint _3070 = uint(findLSB(_3066)) + (_2921 << 5u);
                        uint _3067 = (_3066 + 4294967295u) & _3066;
                        uint _3072 = _3070 * 48u;
                        vec4 _3086 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3072)).x, texelFetch(g_PointLightRenderingBuffer, int(_3072 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3072 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3072 + 3u)).x));
                        uint _3092 = (_3070 * 48u) + 4u;
                        vec4 _3105 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3092)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3092 + 3u)).x));
                        float _3106 = _3105.x;
                        float _3107 = _3105.y;
                        float _3108 = _3105.z;
                        uint _3111 = (_3070 * 48u) + 8u;
                        vec3 _3122 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3111)).x, texelFetch(g_PointLightRenderingBuffer, int(_3111 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3111 + 2u)).x));
                        uint _3127 = (_3070 * 48u) + 12u;
                        vec2 _3135 = uintBitsToFloat(uvec2(texelFetch(g_PointLightRenderingBuffer, int(_3127)).x, texelFetch(g_PointLightRenderingBuffer, int(_3127 + 1u)).x));
                        float _3141 = inversesqrt(dot(vec3(_1827, _1828, _1829), vec3(_1827, _1828, _1829)));
                        float _3142 = _3141 * _1827;
                        float _3143 = _3141 * _1828;
                        float _3144 = _3141 * _1829;
                        float _3145 = _3086.x - _1827;
                        float _3146 = _3086.y - _1828;
                        float _3147 = _3086.z - _1829;
                        float _3148 = dot(vec3(_3145, _3146, _3147), vec3(_3145, _3146, _3147));
                        float _3151 = inversesqrt(_3148);
                        float _3152 = _3151 * _3145;
                        float _3153 = _3151 * _3146;
                        float _3154 = _3151 * _3147;
                        float _3155 = dot(vec3(_619, _622, _625), vec3(_3152, _3153, _3154));
                        float _3160 = 1.0 - (_3148 * _3086.w);
                        float _4531 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0));
                        float _3161 = isnan(1.0) ? _4531 : (isnan(_4531) ? 1.0 : min(_4531, 1.0));
                        float _3162 = sqrt(_3148) * _3105.w;
                        float _3165 = 1.39999997615814208984375 / (_3162 + 1.39999997615814208984375);
                        float _3166 = _3165 * _3165;
                        float _3167 = 1.0 - _3166;
                        float _3169 = (_3167 * _3167) * _561;
                        float _3172 = ((_3167 * _3155) + _3166) + _3169;
                        float _3177 = _3162 * _3162;
                        float _3181 = ((isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : max(_3172, 0.0))) * _3161) / (((_3169 * 2.0) + 1.0) * ((_3177 * 0.699999988079071044921875) + 1.0));
                        float _3185 = dot(vec3(_3152, _3153, _3154), vec3(_3142, _3143, _3144));
                        float _4547 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                        float _3192 = dot(vec3((-0.0) - _3142, (-0.0) - _3143, (-0.0) - _3144), vec3(_619, _622, _625)) + 1.0;
                        float _3194 = (isnan(0.0) ? _3192 : (isnan(_3192) ? 0.0 : max(_3192, 0.0))) * 0.5;
                        float _3202 = ((_3194 * _3194) * _3135.x) * exp2((_3135.y * 32.0) * log2(isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0))));
                        float _3204 = _561 / (_561 + 1.0);
                        float _3220 = (-0.0) - _1827;
                        float _3221 = (-0.0) - _1828;
                        float _3222 = (-0.0) - _1829;
                        float _3226 = inversesqrt(dot(vec3(_3220, _3221, _3222), vec3(_3220, _3221, _3222)));
                        float _3227 = _3226 * _3220;
                        float _3228 = _3226 * _3221;
                        float _3229 = _3226 * _3222;
                        float _3236 = exp2(log2(1.0 / ((_3177 * 3.5) + 5.0)) * 0.25);
                        float _3237 = 1.0 - _687;
                        float _3244 = sqrt(1.0 - ((1.0 - (_3237 * _3237)) * (1.0 - (_3236 * _3236))));
                        float _3245 = _3244 * _3244;
                        float _3246 = _3245 * _3245;
                        float _3247 = _3227 + _3152;
                        float _3248 = _3228 + _3153;
                        float _3249 = _3229 + _3154;
                        float _3253 = inversesqrt(dot(vec3(_3247, _3248, _3249), vec3(_3247, _3248, _3249)));
                        float _3257 = dot(vec3(_619, _622, _625), vec3(_3227, _3228, _3229));
                        float _4563 = isnan(0.0) ? _3257 : (isnan(_3257) ? 0.0 : max(_3257, 0.0));
                        float _3260 = isnan(1.0) ? _4563 : (isnan(_4563) ? 1.0 : min(_4563, 1.0));
                        float _3261 = dot(vec3(_619, _622, _625), vec3(_3253 * _3247, _3253 * _3248, _3253 * _3249));
                        float _4574 = isnan(0.0) ? _3261 : (isnan(_3261) ? 0.0 : max(_3261, 0.0));
                        float _3264 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
                        float _3268 = ((_3264 * _3264) * (_3246 + (-1.0))) + 1.0;
                        float _3269 = _3165 * _3245;
                        float _3270 = _3269 * _3269;
                        float _3273 = ((1.0 - _3270) * _3155) + _3270;
                        float _4585 = isnan(0.0) ? _3273 : (isnan(_3273) ? 0.0 : max(_3273, 0.0));
                        float _3274 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
                        float _3275 = 1.0 - _3245;
                        float _3285 = (0.5 / (((_3274 * ((_3260 * _3275) + _3245)) + 9.9999999392252902907785028219223e-09) + (((_3274 * _3275) + _3245) * _3260))) * _3274;
                        float _4596 = isnan(0.0) ? _3285 : (isnan(_3285) ? 0.0 : max(_3285, 0.0));
                        float _3296 = (((_3246 * 3.1415927410125732421875) * (isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0)))) / ((_3268 * _3268) * ((_3177 * 2.1991131305694580078125) + 3.141590118408203125))) * _3161;
                        _2990 = (((((_3106 * 0.3183098733425140380859375) * _3204) * _3202) + _3106) * _3181) + _3063;
                        _2991 = (((((_3107 * 0.3183098733425140380859375) * _3204) * _3202) + _3107) * _3181) + _3064;
                        _2992 = (((((_3108 * 0.3183098733425140380859375) * _3204) * _3202) + _3108) * _3181) + _3065;
                        _2987 = (_3296 * _3122.x) + _3060;
                        _2988 = (_3296 * _3122.y) + _3061;
                        _2989 = (_3296 * _3122.z) + _3062;
                        if (_3067 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3060 = _2987;
                            _3061 = _2988;
                            _3062 = _2989;
                            _3063 = _2990;
                            _3064 = _2991;
                            _3065 = _2992;
                            _3066 = _3067;
                        }
                    }
                    frontier_phi_66_pred = _2989;
                    frontier_phi_66_pred_1 = _2988;
                    frontier_phi_66_pred_2 = _2987;
                    frontier_phi_66_pred_3 = _2990;
                    frontier_phi_66_pred_4 = _2992;
                    frontier_phi_66_pred_5 = _2991;
                }
                _2737 = frontier_phi_66_pred;
                _2735 = frontier_phi_66_pred_1;
                _2733 = frontier_phi_66_pred_2;
                _2739 = frontier_phi_66_pred_3;
                _2743 = frontier_phi_66_pred_4;
                _2741 = frontier_phi_66_pred_5;
                uint _2922 = _2921 + 1u;
                if (_2922 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2915 = _2733;
                    _2916 = _2735;
                    _2917 = _2737;
                    _2918 = _2739;
                    _2919 = _2741;
                    _2920 = _2743;
                    _2921 = _2922;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2732 = _2733;
            _2734 = _2735;
            _2736 = _2737;
            _2738 = _2739;
            _2740 = _2741;
            _2742 = _2743;
        }
        uvec4 _2746 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2747 = _2746.z;
        uint _2749 = (_2747 >> 8u) & 15u;
        float _2883;
        float _2885;
        float _2887;
        float _2889;
        float _2891;
        float _2893;
        if (((4294967295u << _2749) & _2514) == 0u)
        {
            _2883 = _2732;
            _2885 = _2734;
            _2887 = _2736;
            _2889 = _2738;
            _2891 = _2740;
            _2893 = _2742;
        }
        else
        {
            float _2908 = inversesqrt(dot(vec3(_1827, _1828, _1829), vec3(_1827, _1828, _1829)));
            float _2909 = _2908 * _1827;
            float _2910 = _2908 * _1828;
            float _2911 = _2908 * _1829;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2749 < ((_2747 >> 12u) & 15u))
            {
                float _2884;
                float _2886;
                float _2888;
                float _2890;
                float _2892;
                float _2894;
                float _3043 = _2732;
                float _3044 = _2734;
                float _3045 = _2736;
                float _3046 = _2738;
                float _3047 = _2740;
                float _3048 = _2742;
                uint _3049 = _2749;
                uint _3058;
                bool _3059;
                for (;;)
                {
                    _3058 = texelFetch(g_lightClassification, int((((_2508 << 5u) + (_2494 << 9u)) + (_3049 << 2u)) >> 2u)).x;
                    _3059 = _3058 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3059)
                    {
                        frontier_phi_77_pred = _3045;
                        frontier_phi_77_pred_1 = _3044;
                        frontier_phi_77_pred_2 = _3043;
                        frontier_phi_77_pred_3 = _3048;
                        frontier_phi_77_pred_4 = _3047;
                        frontier_phi_77_pred_5 = _3046;
                    }
                    else
                    {
                        float _3310;
                        float _3311;
                        float _3312;
                        float _3313;
                        float _3314;
                        float _3315;
                        float _3653;
                        float _3654;
                        float _3655;
                        float _3656;
                        float _3657;
                        float _3658;
                        float _3323 = _3043;
                        float _3324 = _3044;
                        float _3325 = _3045;
                        float _3326 = _3046;
                        float _3327 = _3047;
                        float _3328 = _3048;
                        uint _3329 = _3058;
                        uint _3330;
                        vec4 _3355;
                        float _3356;
                        vec4 _3371;
                        float _3372;
                        float _3373;
                        float _3374;
                        vec3 _3386;
                        vec2 _3395;
                        vec4 _3410;
                        vec4 _3426;
                        float _3473;
                        bool _3474;
                        for (;;)
                        {
                            uint _3340 = ((_3049 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3329));
                            _3330 = (_3329 + 4294967295u) & _3329;
                            uint _3342 = _3340 * 40u;
                            _3355 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3342)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3342 + 3u)).x));
                            _3356 = _3355.w;
                            uint _3358 = (_3340 * 40u) + 4u;
                            _3371 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3358)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3358 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3358 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3358 + 3u)).x));
                            _3372 = _3371.x;
                            _3373 = _3371.y;
                            _3374 = _3371.z;
                            uint _3376 = (_3340 * 40u) + 8u;
                            _3386 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3376)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3376 + 2u)).x));
                            uint _3388 = (_3340 * 40u) + 12u;
                            _3395 = uintBitsToFloat(uvec2(texelFetch(g_SpotLightRenderingBuffer, int(_3388)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3388 + 1u)).x));
                            uint _3397 = (_3340 * 40u) + 16u;
                            _3410 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3397)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3397 + 3u)).x));
                            uint _3413 = (_3340 * 40u) + 20u;
                            _3426 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3413)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3413 + 3u)).x));
                            uint _3429 = (_3340 * 40u) + 24u;
                            vec4 _3442 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3429)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3429 + 3u)).x));
                            uint _3448 = (_3340 * 40u) + 28u;
                            vec4 _3461 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3448)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3448 + 3u)).x));
                            _3473 = fma(_1829, _3461.z, fma(_1828, _3461.y, _3461.x * _1827)) + _3461.w;
                            _3474 = !((fma(_1829, _3442.z, fma(_1828, _3442.y, _3442.x * _1827)) + _3442.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3474)
                            {
                                float _3500 = _3355.x - _1827;
                                float _3501 = _3355.y - _1828;
                                float _3502 = _3355.z - _1829;
                                float _3503 = dot(vec3(_3500, _3501, _3502), vec3(_3500, _3501, _3502));
                                float _3506 = inversesqrt(_3503);
                                float _3507 = _3506 * _3500;
                                float _3508 = _3506 * _3501;
                                float _3509 = _3506 * _3502;
                                float _3513 = 1.0 - (_3503 / (_3356 * _3356));
                                float _4607 = isnan(0.0) ? _3513 : (isnan(_3513) ? 0.0 : max(_3513, 0.0));
                                float _3514 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
                                float _3518 = sqrt(_3503) * _3371.w;
                                float _3520 = 1.39999997615814208984375 / (_3518 + 1.39999997615814208984375);
                                float _3521 = _3520 * _3520;
                                float _3522 = 1.0 - _3521;
                                float _3524 = (_3522 * _3522) * _561;
                                float _3527 = ((_3522 * dot(vec3(_3507, _3508, _3509), vec3(_619, _622, _625))) + _3521) + _3524;
                                float _3532 = _3518 * _3518;
                                float _3537 = (fma(_1829, _3410.z, fma(_1828, _3410.y, _3410.x * _1827)) + _3410.w) / _3473;
                                float _3538 = (fma(_1829, _3426.z, fma(_1828, _3426.y, _3426.x * _1827)) + _3426.w) / _3473;
                                float _3542 = 1.0 - dot(vec2(_3537, _3538), vec2(_3537, _3538));
                                float _4623 = isnan(0.0) ? _3542 : (isnan(_3542) ? 0.0 : max(_3542, 0.0));
                                float _3543 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
                                float _3544 = _3543 * (((isnan(0.0) ? _3527 : (isnan(_3527) ? 0.0 : max(_3527, 0.0))) * _3514) / (((_3524 * 2.0) + 1.0) * ((_3532 * 0.699999988079071044921875) + 1.0)));
                                float _3545 = (-0.0) - _2909;
                                float _3546 = (-0.0) - _2910;
                                float _3547 = (-0.0) - _2911;
                                float _3548 = dot(vec3(_3507, _3508, _3509), vec3(_2909, _2910, _2911));
                                float _4634 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                                float _3555 = dot(vec3(_3545, _3546, _3547), vec3(_619, _622, _625)) + 1.0;
                                float _3557 = (isnan(0.0) ? _3555 : (isnan(_3555) ? 0.0 : max(_3555, 0.0))) * 0.5;
                                float _3564 = ((_3557 * _3557) * _3395.x) * exp2((_3395.y * 32.0) * log2(isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0))));
                                float _3566 = _561 / (_561 + 1.0);
                                float _3587 = exp2(log2(1.0 / ((_3532 * 3.5) + 5.0)) * 0.25);
                                float _3588 = 1.0 - _687;
                                float _3595 = sqrt(1.0 - ((1.0 - (_3588 * _3588)) * (1.0 - (_3587 * _3587))));
                                float _3596 = _3595 * _3595;
                                float _3597 = _3596 * _3596;
                                float _3598 = _3507 - _2909;
                                float _3599 = _3508 - _2910;
                                float _3600 = _3509 - _2911;
                                float _3604 = inversesqrt(dot(vec3(_3598, _3599, _3600), vec3(_3598, _3599, _3600)));
                                float _3608 = dot(vec3(_619, _622, _625), vec3(_3545, _3546, _3547));
                                float _4650 = isnan(0.0) ? _3608 : (isnan(_3608) ? 0.0 : max(_3608, 0.0));
                                float _3611 = isnan(1.0) ? _4650 : (isnan(_4650) ? 1.0 : min(_4650, 1.0));
                                float _3612 = dot(vec3(_619, _622, _625), vec3(_3604 * _3598, _3604 * _3599, _3604 * _3600));
                                float _4661 = isnan(0.0) ? _3612 : (isnan(_3612) ? 0.0 : max(_3612, 0.0));
                                float _3615 = isnan(1.0) ? _4661 : (isnan(_4661) ? 1.0 : min(_4661, 1.0));
                                float _3619 = ((_3615 * _3615) * (_3597 + (-1.0))) + 1.0;
                                float _3620 = _3520 * _3596;
                                float _3621 = _3620 * _3620;
                                float _3627 = ((1.0 - _3621) * dot(vec3(_619, _622, _625), vec3(_3507, _3508, _3509))) + _3621;
                                float _4672 = isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0));
                                float _3628 = isnan(1.0) ? _4672 : (isnan(_4672) ? 1.0 : min(_4672, 1.0));
                                float _3629 = 1.0 - _3596;
                                float _3639 = (0.5 / (((_3628 * ((_3611 * _3629) + _3596)) + 9.9999999392252902907785028219223e-09) + (((_3628 * _3629) + _3596) * _3611))) * _3628;
                                float _4683 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                                float _3649 = (_3543 * _3514) * (((_3597 * 3.1415927410125732421875) * (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0)))) / ((_3619 * _3619) * ((_3532 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3649 * _3386.z;
                                frontier_phi_83_pred_1 = _3649 * _3386.y;
                                frontier_phi_83_pred_2 = _3649 * _3386.x;
                                frontier_phi_83_pred_3 = ((((_3374 * 0.3183098733425140380859375) * _3566) * _3564) + _3374) * _3544;
                                frontier_phi_83_pred_4 = ((((_3373 * 0.3183098733425140380859375) * _3566) * _3564) + _3373) * _3544;
                                frontier_phi_83_pred_5 = ((((_3372 * 0.3183098733425140380859375) * _3566) * _3564) + _3372) * _3544;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3655 = frontier_phi_83_pred;
                            _3654 = frontier_phi_83_pred_1;
                            _3653 = frontier_phi_83_pred_2;
                            _3658 = frontier_phi_83_pred_3;
                            _3657 = frontier_phi_83_pred_4;
                            _3656 = frontier_phi_83_pred_5;
                            _3313 = _3656 + _3326;
                            _3314 = _3657 + _3327;
                            _3315 = _3658 + _3328;
                            _3310 = _3653 + _3323;
                            _3311 = _3654 + _3324;
                            _3312 = _3655 + _3325;
                            if (_3330 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3323 = _3310;
                                _3324 = _3311;
                                _3325 = _3312;
                                _3326 = _3313;
                                _3327 = _3314;
                                _3328 = _3315;
                                _3329 = _3330;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3312;
                        frontier_phi_77_pred_1 = _3311;
                        frontier_phi_77_pred_2 = _3310;
                        frontier_phi_77_pred_3 = _3315;
                        frontier_phi_77_pred_4 = _3314;
                        frontier_phi_77_pred_5 = _3313;
                    }
                    _2888 = frontier_phi_77_pred;
                    _2886 = frontier_phi_77_pred_1;
                    _2884 = frontier_phi_77_pred_2;
                    _2894 = frontier_phi_77_pred_3;
                    _2892 = frontier_phi_77_pred_4;
                    _2890 = frontier_phi_77_pred_5;
                    uint _3050 = _3049 + 1u;
                    if (_3050 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3043 = _2884;
                        _3044 = _2886;
                        _3045 = _2888;
                        _3046 = _2890;
                        _3047 = _2892;
                        _3048 = _2894;
                        _3049 = _3050;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2894;
                frontier_phi_58_59_ladder_1 = _2892;
                frontier_phi_58_59_ladder_2 = _2890;
                frontier_phi_58_59_ladder_3 = _2886;
                frontier_phi_58_59_ladder_4 = _2884;
                frontier_phi_58_59_ladder_5 = _2888;
            }
            else
            {
                frontier_phi_58_59_ladder = _2742;
                frontier_phi_58_59_ladder_1 = _2740;
                frontier_phi_58_59_ladder_2 = _2738;
                frontier_phi_58_59_ladder_3 = _2734;
                frontier_phi_58_59_ladder_4 = _2732;
                frontier_phi_58_59_ladder_5 = _2736;
            }
            _2883 = frontier_phi_58_59_ladder_4;
            _2885 = frontier_phi_58_59_ladder_3;
            _2887 = frontier_phi_58_59_ladder_5;
            _2889 = frontier_phi_58_59_ladder_2;
            _2891 = frontier_phi_58_59_ladder_1;
            _2893 = frontier_phi_58_59_ladder;
        }
        float _2898 = isnan(1.0) ? _663 : (isnan(_663) ? 1.0 : min(_663, 1.0));
        _2527 = (_2898 * _2889) + _2271;
        _2529 = (_2898 * _2891) + _2272;
        _2531 = (_2898 * _2893) + _2273;
        _2533 = ((_2883 * 0.039999999105930328369140625) * _2898) + _2437;
        _2535 = ((_2885 * 0.039999999105930328369140625) * _2898) + _2438;
        _2537 = ((_2887 * 0.039999999105930328369140625) * _2898) + _2439;
    }
    else
    {
        _2527 = _2271;
        _2529 = _2272;
        _2531 = _2273;
        _2533 = _2437;
        _2535 = _2438;
        _2537 = _2439;
    }
    float _2551 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2552 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2553 = cbSceneParam._m0[86u].x * (_1739 + ((_686 * cbMtdParam._m0[13u].y) * dot(vec3(_557, _558, _559), vec3(_208, _209, _210))));
    float _2554 = isnan(_2551) ? _2553 : (isnan(_2553) ? _2551 : min(_2553, _2551));
    float _2555 = isnan(_2552) ? _600 : (isnan(_600) ? _2552 : min(_600, _2552));
    vec4 _2557 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2554, _2555), 0.0);
    float _2559 = _2557.x;
    bool _2580 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2559)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2559))) > _580;
    float _2581 = _2580 ? _2554 : _599;
    float _2582 = _2580 ? _2555 : _600;
    vec4 _2584 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2581, _2582));
    vec4 _2589 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2581, _2582));
    float _2591 = _2589.x;
    float _2611 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2591)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2591))) - _580;
    bool _2621 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2625 = (isnan(_2611) ? 0.0 : (isnan(0.0) ? _2611 : max(0.0, _2611))) * (-1.44269502162933349609375);
    float _4714 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _4725 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    float _4736 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
    float _2652 = 0.959999978542327880859375 - (exp2(log2(1.0 - _678) * 5.0) * 0.959999978542327880859375);
    float _2655 = ((_2584.x * _2652) * exp2(_2625 * (_2621 ? 0.0 : (cbMtdParam._m0[16u].z + cbMtdParam._m0[15u].w)))) * cbSceneParam._m0[72u].w;
    float _2658 = ((_2584.y * _2652) * exp2(_2625 * (_2621 ? 0.0 : (cbMtdParam._m0[16u].w + cbMtdParam._m0[16u].x)))) * cbSceneParam._m0[72u].w;
    float _2661 = ((_2584.z * _2652) * exp2(_2625 * (_2621 ? 0.0 : (cbMtdParam._m0[17u].x + cbMtdParam._m0[16u].y)))) * cbSceneParam._m0[72u].w;
    float _2669 = (_2655 + (((((_1716 * _1764.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0))) * _1509) * _1780)) + _2533) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4714 : (isnan(_4714) ? 1.0 : min(_4714, 1.0))) * (_2527 + ((isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0))) * _663))) - _2655) * cbMtdParam._m0[15u].x);
    float _2671 = (_2658 + (((((_1716 * _1764.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0))) * _1509) * _1780)) + _2535) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4725 : (isnan(_4725) ? 1.0 : min(_4725, 1.0))) * (_2529 + ((isnan(0.0) ? _1433 : (isnan(_1433) ? 0.0 : max(_1433, 0.0))) * _663))) - _2658) * cbMtdParam._m0[15u].x);
    float _2673 = (_2661 + (((((_1716 * _1764.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0))) * _1509) * _1780)) + _2537) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _4736 : (isnan(_4736) ? 1.0 : min(_4736, 1.0))) * (_2531 + ((isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0))) * _663))) - _2661) * cbMtdParam._m0[15u].x);
    uint _2674 = _638 + 6u;
    float _2682 = _599 / cbSceneParam._m0[86u].x;
    float _2683 = _600 / cbSceneParam._m0[86u].y;
    vec4 _2697 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2682, _2683, (log2((isnan(cbSceneParam._m0[77u].w) ? _580 : (isnan(_580) ? cbSceneParam._m0[77u].w : min(_580, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2699 = _2697.x;
    float _2700 = _2697.y;
    float _2701 = _2697.z;
    float _2702 = _2697.w;
    float _2793;
    float _2795;
    float _2797;
    float _2799;
    if (_580 > cbSceneParam._m0[78u].w)
    {
        float _2757 = isnan(_580) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _580 : min(cbSceneParam._m0[80u].w, _580));
        float _2758 = _2757 / _580;
        float _2769 = _2758 * _278;
        float _2770 = _279 * _2758;
        float _2771 = (-0.0) - _2770;
        float _2772 = _2758 * _280;
        float _2774 = (cbSceneParam._m0[77u].w * _2771) / _2757;
        float _2775 = _2774 + cbSceneParam._m0[79u].w;
        float _2776 = cbSceneParam._m0[79u].w - _2770;
        float _2782 = sqrt(((_2769 * _2769) + (_2770 * _2770)) + (_2772 * _2772));
        float _2785 = (1.0 - (cbSceneParam._m0[77u].w / _2757)) * _2782;
        float _2790 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2791 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3000;
        if (abs((_2771 - _2774) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3000 = ((((_2775 > 0.0) ? exp2(_2790 * _2775) : (2.0 - exp2(_2791 * _2775))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2785;
        }
        else
        {
            float _2944 = 1.0 / cbSceneParam._m0[80u].x;
            float _2945 = isnan(_2776) ? _2775 : (isnan(_2775) ? _2776 : max(_2775, _2776));
            float _2946 = isnan(_2776) ? _2775 : (isnan(_2775) ? _2776 : min(_2775, _2776));
            float _2955 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : min(_2945, 0.0));
            float _2956 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : min(_2946, 0.0));
            _3000 = ((abs(_2782 / _2771) * cbSceneParam._m0[80u].y) * ((((_2955 - _2956) * 2.0) - ((exp2(_2790 * (isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0)))) - exp2(_2790 * (isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0))))) * _2944)) - ((exp2(_2791 * _2955) - exp2(_2791 * _2956)) * _2944))) + (_2785 * cbSceneParam._m0[80u].z);
        }
        vec4 _3002 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2682, _2683, 1.0), 0.0);
        float _3011 = exp2((_3000 * (-1.44269502162933349609375)) * (1.0 - _3002.w));
        float _3012 = log2(_3011);
        float _3028 = log2(_2702);
        _2793 = (exp2(_3028 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3012 * cbSceneParam._m0[78u].x)) * _3002.x) / cbSceneParam._m0[78u].x)) + _2699;
        _2795 = (exp2(_3028 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3012 * cbSceneParam._m0[78u].y)) * _3002.y) / cbSceneParam._m0[78u].y)) + _2700;
        _2797 = (exp2(_3028 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3012 * cbSceneParam._m0[78u].z)) * _3002.z) / cbSceneParam._m0[78u].z)) + _2701;
        _2799 = _3011 * _2702;
    }
    else
    {
        _2793 = _2699;
        _2795 = _2700;
        _2797 = _2701;
        _2799 = _2702;
    }
    bool _3038;
    float _2854;
    vec4 _2857;
    float _2859;
    vec4 _2861;
    float _2869;
    float _2870;
    float _2871;
    float _2872;
    bool _2882;
    for (;;)
    {
        bool _2811 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2812 = log2(_2799);
        float _2819 = exp2(_2812 * cbSceneParam._m0[78u].x) * _2669;
        float _2820 = exp2(_2812 * cbSceneParam._m0[78u].y) * _2671;
        float _2821 = exp2(_2812 * cbSceneParam._m0[78u].z) * _2673;
        vec4 _2829 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_599, _600));
        float _2831 = _2829.x;
        float _2852 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2831)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2831))) - _580) * cbMtdParam._m0[14u].z;
        float _4787 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        _2854 = (isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0))) * cbInstanceData._m0[_2674].w;
        float _2855 = _587 + (-0.5);
        _2857 = cbMtdParam._m0[1u];
        _2859 = _2857.y * _2855;
        _2861 = cbMatDynParam._m0[0u];
        float _2868 = (roundEven(_2861.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2869 = _2868 * (_2811 ? _2819 : (_2819 + (cbSceneParam._m0[72u].w * _2793)));
        _2870 = _2868 * (_2811 ? _2820 : (_2820 + (cbSceneParam._m0[72u].w * _2795)));
        _2871 = _2868 * (_2811 ? _2821 : (_2821 + (cbSceneParam._m0[72u].w * _2797)));
        _2872 = _2855 * 0.999000012874603271484375;
        _2882 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2882)
        {
            if ((cbInstanceData._m0[_638 + 7u].x + _2872) < 0.5)
            {
                _3038 = true;
                break;
            }
        }
        uint _2979 = _639 + uint(_2861.w);
        if ((cbInstanceData._m0[_2979].w < 1.0) && ((cbInstanceData._m0[_2979].w + _2872) < 0.5))
        {
            _3038 = true;
            break;
        }
        if ((_2859 + 1.0) < _2857.x)
        {
            _3038 = true;
            break;
        }
        _3038 = false;
        break;
    }
    float _3301;
    if (_3038)
    {
        discard_state = true;
        _3301 = 0.0;
    }
    else
    {
        _3301 = _2854;
    }
    SV_Target.x = _2869;
    SV_Target.y = _2870;
    SV_Target.z = _2871;
    SV_Target.w = _3301;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2854;
    discard_exit();
}


