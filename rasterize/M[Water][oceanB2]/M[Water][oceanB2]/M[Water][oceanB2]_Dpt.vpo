#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    uint _96 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _101 = texelFetch(g_InstanceIndexBuffer, int(_96)).x * 13u;
    uint _110 = (floatBitsToUint(cbInstanceData._m0[_101 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _117 = _110 + 1u;
    uint _124 = _110 + 2u;
    precise float _131 = POSITION.x * cbObjMatrix._m0[_110].x;
    precise float _132 = POSITION.y * cbObjMatrix._m0[_110].y;
    precise float _133 = _132 + _131;
    precise float _134 = POSITION.z * cbObjMatrix._m0[_110].z;
    precise float _135 = _134 + _133;
    precise float _136 = 1.0 * cbObjMatrix._m0[_110].w;
    precise float _138 = _136 + _135;
    precise float _139 = POSITION.x * cbObjMatrix._m0[_117].x;
    precise float _140 = POSITION.y * cbObjMatrix._m0[_117].y;
    precise float _141 = _140 + _139;
    precise float _142 = POSITION.z * cbObjMatrix._m0[_117].z;
    precise float _143 = _142 + _141;
    precise float _144 = 1.0 * cbObjMatrix._m0[_117].w;
    precise float _145 = _144 + _143;
    precise float _146 = POSITION.x * cbObjMatrix._m0[_124].x;
    precise float _147 = POSITION.y * cbObjMatrix._m0[_124].y;
    precise float _148 = _147 + _146;
    precise float _149 = POSITION.z * cbObjMatrix._m0[_124].z;
    precise float _150 = _149 + _148;
    precise float _151 = 1.0 * cbObjMatrix._m0[_124].w;
    precise float _152 = _151 + _150;
    precise float _158 = _138 - cbvModelParam._m0[8u].x;
    precise float _159 = _152 - cbvModelParam._m0[8u].y;
    precise float _176 = dot(vec2(_158, _159), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _177 = dot(vec2(_158, _159), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    vec4 _180 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_176, _177), 0.0);
    float _182 = _180.x;
    precise float _183 = _182 * 0.0;
    precise float _184 = _138 + _183;
    precise float _185 = _145 + _182;
    precise float _186 = _152 + _183;
    precise float _192 = _184 - cbSceneParam._m0[3u].x;
    precise float _193 = _185 - cbSceneParam._m0[3u].y;
    precise float _194 = _186 - cbSceneParam._m0[3u].z;
    precise float _222 = cbSceneParam._m0[24u].x * _192;
    precise float _223 = _193 * cbSceneParam._m0[24u].y;
    precise float _224 = _223 + _222;
    precise float _225 = _194 * cbSceneParam._m0[24u].z;
    precise float _226 = _225 + _224;
    precise float _227 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _228 = _227 + _226;
    precise float _229 = _192 * cbSceneParam._m0[25u].x;
    precise float _230 = _193 * cbSceneParam._m0[25u].y;
    precise float _231 = _230 + _229;
    precise float _232 = _194 * cbSceneParam._m0[25u].z;
    precise float _233 = _232 + _231;
    precise float _234 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _235 = _234 + _233;
    precise float _236 = _192 * cbSceneParam._m0[26u].x;
    precise float _237 = _193 * cbSceneParam._m0[26u].y;
    precise float _238 = _237 + _236;
    precise float _239 = _194 * cbSceneParam._m0[26u].z;
    precise float _240 = _239 + _238;
    precise float _241 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _242 = _241 + _240;
    precise float _243 = _192 * cbSceneParam._m0[27u].x;
    precise float _244 = _193 * cbSceneParam._m0[27u].y;
    precise float _245 = _244 + _243;
    precise float _246 = _194 * cbSceneParam._m0[27u].z;
    precise float _247 = _246 + _245;
    precise float _248 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _249 = _248 + _247;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _228;
    gl_Position.y = _235;
    gl_Position.z = _242;
    gl_Position.w = _249;
    gl_ClipDistance[0u] = dot(vec4(_228, _235, _242, _249), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_228, _235, _242, _249), vec4(cbInstanceData._m0[_101 + 3u]));
}


