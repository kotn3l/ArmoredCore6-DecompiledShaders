#version 460
layout(triangles) in;

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 58) uniform texture2D g_WaterSimulationHeightTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanB2_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanB2_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in vec4 TEXCOORD[];
layout(location = 4) in vec4 TEXCOORD_7[];
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec3 TEXCOORD_8;
layout(location = 7) out vec2 TEXCOORD_12;

void main()
{
    precise float _103 = gl_TessCoord.z * POSITION[0u].x;
    precise float _104 = gl_TessCoord.z * POSITION[0u].y;
    precise float _105 = gl_TessCoord.z * POSITION[0u].z;
    precise float _112 = gl_TessCoord.x * POSITION[1u].x;
    precise float _113 = gl_TessCoord.x * POSITION[1u].y;
    precise float _114 = gl_TessCoord.x * POSITION[1u].z;
    precise float _115 = _103 + _112;
    precise float _116 = _104 + _113;
    precise float _117 = _105 + _114;
    precise float _124 = gl_TessCoord.y * POSITION[2u].x;
    precise float _125 = gl_TessCoord.y * POSITION[2u].y;
    precise float _126 = gl_TessCoord.y * POSITION[2u].z;
    precise float _127 = _115 + _124;
    precise float _128 = _116 + _125;
    precise float _129 = _117 + _126;
    precise float _226 = gl_TessCoord.z * TEXCOORD[0u].x;
    precise float _227 = gl_TessCoord.z * TEXCOORD[0u].y;
    precise float _228 = gl_TessCoord.z * TEXCOORD[0u].z;
    precise float _229 = gl_TessCoord.z * TEXCOORD[0u].w;
    precise float _238 = gl_TessCoord.x * TEXCOORD[1u].x;
    precise float _239 = gl_TessCoord.x * TEXCOORD[1u].y;
    precise float _240 = gl_TessCoord.x * TEXCOORD[1u].z;
    precise float _241 = gl_TessCoord.x * TEXCOORD[1u].w;
    precise float _242 = _226 + _238;
    precise float _243 = _227 + _239;
    precise float _244 = _228 + _240;
    precise float _245 = _229 + _241;
    precise float _254 = gl_TessCoord.y * TEXCOORD[2u].x;
    precise float _255 = gl_TessCoord.y * TEXCOORD[2u].y;
    precise float _256 = gl_TessCoord.y * TEXCOORD[2u].z;
    precise float _257 = gl_TessCoord.y * TEXCOORD[2u].w;
    precise float _258 = _242 + _254;
    precise float _259 = _243 + _255;
    precise float _260 = _244 + _256;
    precise float _261 = _245 + _257;
    precise float _270 = gl_TessCoord.z * TEXCOORD_7[0u].x;
    precise float _271 = gl_TessCoord.z * TEXCOORD_7[0u].y;
    precise float _272 = gl_TessCoord.z * TEXCOORD_7[0u].z;
    precise float _273 = gl_TessCoord.z * TEXCOORD_7[0u].w;
    precise float _282 = gl_TessCoord.x * TEXCOORD_7[1u].x;
    precise float _283 = gl_TessCoord.x * TEXCOORD_7[1u].y;
    precise float _284 = gl_TessCoord.x * TEXCOORD_7[1u].z;
    precise float _285 = gl_TessCoord.x * TEXCOORD_7[1u].w;
    precise float _286 = _270 + _282;
    precise float _287 = _271 + _283;
    precise float _288 = _272 + _284;
    precise float _289 = _273 + _285;
    precise float _298 = gl_TessCoord.y * TEXCOORD_7[2u].x;
    precise float _299 = gl_TessCoord.y * TEXCOORD_7[2u].y;
    precise float _300 = gl_TessCoord.y * TEXCOORD_7[2u].z;
    precise float _301 = gl_TessCoord.y * TEXCOORD_7[2u].w;
    precise float _302 = _286 + _298;
    precise float _303 = _287 + _299;
    precise float _304 = _288 + _300;
    precise float _305 = _289 + _301;
    precise float _318 = cbMtdParam._m0[26u].x - cbMtdParam._m0[24u].z;
    precise float _319 = cbMtdParam._m0[26u].z - cbMtdParam._m0[25u].x;
    precise float _320 = _303 * _318;
    precise float _321 = _303 * _319;
    precise float _322 = cbMtdParam._m0[24u].z + _320;
    precise float _323 = cbMtdParam._m0[25u].x + _321;
    precise float _336 = cbPerFrame._m0[22u].x * cbMtdParam._m0[11u].z;
    precise float _337 = cbMtdParam._m0[20u].w * _336;
    precise float _338 = cbMtdParam._m0[21u].x * _336;
    precise float _339 = _258 + _337;
    precise float _340 = _259 + _338;
    precise float _347 = cbTextureTilingScale._m0[2u].x * _339;
    precise float _348 = cbTextureTilingScale._m0[2u].y * _340;
    precise float _349 = cbTextureTilingScale._m0[2u].z + _347;
    precise float _350 = cbTextureTilingScale._m0[2u].w + _348;
    vec4 _354 = textureLod(sampler2D(M_Water_oceanB2_snp_0_Texture2D_2, SS_BumpMap), vec2(_349, _350), 0.0);
    float _356 = _354.z;
    precise float _357 = _322 * _356;
    precise float _358 = _323 * _356;
    precise float _368 = cbMtdParam._m0[26u].w * cbMtdParam._m0[16u].w;
    precise float _369 = cbMtdParam._m0[27u].y * cbMtdParam._m0[16u].w;
    precise float _370 = _368 - cbMtdParam._m0[26u].w;
    precise float _371 = _369 - cbMtdParam._m0[27u].y;
    precise float _372 = _303 * _370;
    precise float _373 = _303 * _371;
    precise float _374 = cbMtdParam._m0[26u].w + _372;
    precise float _375 = cbMtdParam._m0[27u].y + _373;
    precise float _384 = _336 * cbMtdParam._m0[18u].w;
    precise float _385 = _336 * cbMtdParam._m0[19u].x;
    precise float _390 = _258 * cbMtdParam._m0[23u].y;
    precise float _391 = _259 * cbMtdParam._m0[23u].z;
    precise float _392 = _384 + _390;
    precise float _393 = _385 + _391;
    precise float _400 = _392 * cbTextureTilingScale._m0[0u].x;
    precise float _401 = cbTextureTilingScale._m0[0u].y * _393;
    precise float _402 = cbTextureTilingScale._m0[0u].z + _400;
    precise float _403 = cbTextureTilingScale._m0[0u].w + _401;
    precise float _410 = _336 * cbMtdParam._m0[19u].y;
    precise float _411 = _336 * cbMtdParam._m0[19u].z;
    precise float _412 = _390 + _410;
    precise float _413 = _391 + _411;
    precise float _414 = _412 * cbTextureTilingScale._m0[0u].x;
    precise float _415 = cbTextureTilingScale._m0[0u].y * _413;
    precise float _416 = cbTextureTilingScale._m0[0u].z + _414;
    precise float _417 = cbTextureTilingScale._m0[0u].w + _415;
    precise float _421 = textureLod(sampler2D(M_Water_oceanB2_snp_0_Texture2D_0, SS_BumpMap), vec2(_402, _403), 0.0).w * textureLod(sampler2D(M_Water_oceanB2_snp_0_Texture2D_0, SS_BumpMap), vec2(_416, _417), 0.0).w;
    precise float _422 = _374 * _421;
    precise float _423 = _375 * _421;
    precise float _424 = _357 + _422;
    precise float _425 = _358 + _423;
    precise float _440 = (-0.0) - cbMtdParam._m0[4u].y;
    precise float _481 = _127 + _424;
    precise float _482 = _129 + _425;
    precise float _488 = _481 - cbvModelParam._m0[8u].x;
    precise float _489 = _482 - cbvModelParam._m0[8u].y;
    precise float _505 = dot(vec2(_488, _489), vec2(cbvModelParam._m0[9u].xy)) * cbvModelParam._m0[8u].z;
    precise float _506 = dot(vec2(_488, _489), vec2(cbvModelParam._m0[9u].zw)) * cbvModelParam._m0[8u].w;
    precise float _509 = cbMtdParam._m0[26u].y - cbMtdParam._m0[24u].w;
    precise float _510 = _303 * _509;
    precise float _511 = cbMtdParam._m0[24u].w + _510;
    precise float _512 = _511 * _356;
    precise float _514 = cbMtdParam._m0[27u].x * cbMtdParam._m0[16u].w;
    precise float _515 = _514 - cbMtdParam._m0[27u].x;
    precise float _516 = _303 * _515;
    precise float _517 = cbMtdParam._m0[27u].x + _516;
    precise float _518 = _517 * _421;
    precise float _519 = _512 + _518;
    precise float _520 = _128 + _519;
    vec4 _522 = textureLod(sampler2D(g_WaterSimulationHeightTexture, SS_ClampLinear), vec2(_505, _506), 0.0);
    float _524 = _522.x;
    precise float _525 = _524 * 0.0;
    precise float _526 = _481 + _525;
    precise float _527 = _520 + _524;
    precise float _528 = _482 + _525;
    float _566;
    float _567;
    float _568;
    if (((((dot(vec4(_526, _527, _528, 1.0), vec4(cbSceneParam._m0[73u])) > (-0.0)) && (dot(vec4(_526, _527, _528, 1.0), vec4(cbSceneParam._m0[74u])) > (-0.0))) && (dot(vec4(_526, _527, _528, 1.0), vec4(cbSceneParam._m0[75u])) > (-0.0))) && (dot(vec4(_526, _527, _528, 1.0), vec4(cbSceneParam._m0[76u])) > (-0.0))) && (!((((dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[73u])) > _440) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[74u])) > _440)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[75u])) > _440)) && (dot(vec4(_127, _128, _129, 1.0), vec4(cbSceneParam._m0[76u])) > _440))))
    {
        precise float _549 = _526 - _127;
        precise float _550 = _527 - _128;
        precise float _551 = _528 - _129;
        float _556 = inversesqrt(dot(vec3(_549, _550, _551), vec3(_549, _550, _551)));
        precise float _557 = _549 * _556;
        precise float _558 = _550 * _556;
        precise float _559 = _551 * _556;
        precise float _560 = _557 * cbMtdParam._m0[4u].y;
        precise float _561 = _558 * cbMtdParam._m0[4u].y;
        precise float _562 = _559 * cbMtdParam._m0[4u].y;
        precise float _563 = _127 + _560;
        precise float _564 = _128 + _561;
        precise float _565 = _129 + _562;
        _566 = _563;
        _567 = _564;
        _568 = _565;
    }
    else
    {
        _566 = _526;
        _567 = _527;
        _568 = _528;
    }
    precise float _574 = _566 - cbSceneParam._m0[3u].x;
    precise float _575 = _567 - cbSceneParam._m0[3u].y;
    precise float _576 = _568 - cbSceneParam._m0[3u].z;
    precise float _601 = _574 * cbSceneParam._m0[24u].x;
    precise float _602 = _575 * cbSceneParam._m0[24u].y;
    precise float _603 = _602 + _601;
    precise float _604 = _576 * cbSceneParam._m0[24u].z;
    precise float _605 = _604 + _603;
    precise float _606 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _607 = _606 + _605;
    precise float _608 = _574 * cbSceneParam._m0[25u].x;
    precise float _609 = _575 * cbSceneParam._m0[25u].y;
    precise float _610 = _609 + _608;
    precise float _611 = _576 * cbSceneParam._m0[25u].z;
    precise float _612 = _611 + _610;
    precise float _613 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _614 = _613 + _612;
    precise float _615 = _574 * cbSceneParam._m0[26u].x;
    precise float _616 = _575 * cbSceneParam._m0[26u].y;
    precise float _617 = _616 + _615;
    precise float _618 = _576 * cbSceneParam._m0[26u].z;
    precise float _619 = _618 + _617;
    precise float _620 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _621 = _620 + _619;
    precise float _622 = _574 * cbSceneParam._m0[27u].x;
    precise float _623 = _575 * cbSceneParam._m0[27u].y;
    precise float _624 = _623 + _622;
    precise float _625 = _576 * cbSceneParam._m0[27u].z;
    precise float _626 = _625 + _624;
    precise float _627 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _628 = _627 + _626;
    gl_Position.x = _607;
    gl_Position.y = _614;
    gl_Position.z = _621;
    gl_Position.w = _628;
    POSITION_1.x = _607;
    POSITION_1.y = _614;
    POSITION_1.z = _621;
    POSITION_1.w = _628;
    NORMAL_1.x = ((NORMAL[1u].x * gl_TessCoord.x) + (NORMAL[0u].x * gl_TessCoord.z)) + (NORMAL[2u].x * gl_TessCoord.y);
    NORMAL_1.y = ((NORMAL[1u].y * gl_TessCoord.x) + (NORMAL[0u].y * gl_TessCoord.z)) + (NORMAL[2u].y * gl_TessCoord.y);
    NORMAL_1.z = ((NORMAL[1u].z * gl_TessCoord.x) + (NORMAL[0u].z * gl_TessCoord.z)) + (NORMAL[2u].z * gl_TessCoord.y);
    NORMAL_1.w = ((NORMAL[1u].w * gl_TessCoord.x) + (NORMAL[0u].w * gl_TessCoord.z)) + (NORMAL[2u].w * gl_TessCoord.y);
    TANGENT_1.x = ((TANGENT[1u].x * gl_TessCoord.x) + (TANGENT[0u].x * gl_TessCoord.z)) + (TANGENT[2u].x * gl_TessCoord.y);
    TANGENT_1.y = ((TANGENT[1u].y * gl_TessCoord.x) + (TANGENT[0u].y * gl_TessCoord.z)) + (TANGENT[2u].y * gl_TessCoord.y);
    TANGENT_1.z = ((TANGENT[1u].z * gl_TessCoord.x) + (TANGENT[0u].z * gl_TessCoord.z)) + (TANGENT[2u].z * gl_TessCoord.y);
    TANGENT_1.w = ((TANGENT[1u].w * gl_TessCoord.x) + (TANGENT[0u].w * gl_TessCoord.z)) + (TANGENT[2u].w * gl_TessCoord.y);
    TEXCOORD_1.x = _258;
    TEXCOORD_1.y = _259;
    TEXCOORD_1.z = _260;
    TEXCOORD_1.w = _261;
    TEXCOORD_5.x = _302;
    TEXCOORD_5.y = _303;
    TEXCOORD_5.z = _304;
    TEXCOORD_5.w = _305;
    TEXCOORD_8.x = _505;
    TEXCOORD_8.y = _506;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_12.x = _621;
    TEXCOORD_12.y = _628;
    gl_ClipDistance[0u] = dot(vec4(_607, _614, _621, _628), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_607, _614, _621, _628), vec4(0.0));
    gl_CullDistance[0u] = 0.0;
}


