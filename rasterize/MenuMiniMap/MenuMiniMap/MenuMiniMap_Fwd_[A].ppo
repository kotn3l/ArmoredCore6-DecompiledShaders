#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _562;
float _563;
float _564;
float _565;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _100 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _130 = cbMtdParam._m0[10u].x + dot(vec3(cbSceneParam._m0[20u].z, cbSceneParam._m0[21u].z, cbSceneParam._m0[22u].z), vec3(_100 * NORMAL.x, _100 * NORMAL.y, _100 * NORMAL.z));
    float _574 = isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0));
    float _132 = isnan(1.0) ? _574 : (isnan(_574) ? 1.0 : min(_574, 1.0));
    float _585 = isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0));
    float _152 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _193 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _203 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _193);
    float _204 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _193);
    float _205 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _193);
    vec4 _211 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _214 = _211.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _300 = sqrt(((_203 * _203) + (_204 * _204)) + (_205 * _205));
        float _307 = (cbMatDynParam._m0[5u].x * _300) + cbMatDynParam._m0[5u].y;
        float _611 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
        float _308 = isnan(1.0) ? _611 : (isnan(_611) ? 1.0 : min(_611, 1.0));
        float _312 = (cbMatDynParam._m0[5u].z * _300) + cbMatDynParam._m0[5u].w;
        float _622 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _622 : (isnan(_622) ? 1.0 : min(_622, 1.0))) - _308)) + _308) < ((_214 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _240 = uint(roundEven(NORMAL.w)) * 13u;
    uint _242 = _240 + 9u;
    uint _243 = _242 + uint(cbMatDynParam._m0[0u].w);
    float _249 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0)))) * cbInstanceData._m0[_243].x;
    float _250 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? cbMtdParam._m0[9u].y : (isnan(cbMtdParam._m0[9u].y) ? 0.0 : max(cbMtdParam._m0[9u].y, 0.0)))) * cbInstanceData._m0[_243].y;
    float _251 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0)))) * cbInstanceData._m0[_243].z;
    float _252 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _253 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    float _254 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _259 = cbInstanceData._m0[_240 + 6u].w * (isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0)));
    float _265 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _266 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _281 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_265, _266, (log2((isnan(cbSceneParam._m0[77u].w) ? _152 : (isnan(_152) ? cbSceneParam._m0[77u].w : min(_152, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _283 = _281.x;
    float _284 = _281.y;
    float _285 = _281.z;
    float _286 = _281.w;
    float _368;
    float _370;
    float _372;
    float _374;
    if (_152 > cbSceneParam._m0[78u].w)
    {
        float _329 = isnan(_152) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _152 : min(cbSceneParam._m0[80u].w, _152));
        float _330 = _329 / _152;
        float _341 = _330 * _203;
        float _342 = _204 * _330;
        float _343 = (-0.0) - _342;
        float _345 = _330 * _205;
        float _347 = (cbSceneParam._m0[77u].w * _343) / _329;
        float _348 = _347 + cbSceneParam._m0[79u].w;
        float _349 = cbSceneParam._m0[79u].w - _342;
        float _355 = sqrt(((_341 * _341) + (_342 * _342)) + (_345 * _345));
        float _358 = (1.0 - (cbSceneParam._m0[77u].w / _329)) * _355;
        float _364 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _366 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _490;
        if (abs((_343 - _347) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _490 = ((((_348 > 0.0) ? exp2(_364 * _348) : (2.0 - exp2(_366 * _348))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _358;
        }
        else
        {
            float _445 = 1.0 / cbSceneParam._m0[80u].x;
            float _446 = isnan(_349) ? _348 : (isnan(_348) ? _349 : max(_348, _349));
            float _447 = isnan(_349) ? _348 : (isnan(_348) ? _349 : min(_348, _349));
            float _456 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : min(_446, 0.0));
            float _457 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : min(_447, 0.0));
            _490 = ((abs(_355 / _343) * cbSceneParam._m0[80u].y) * ((((_456 - _457) * 2.0) - ((exp2(_364 * (isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0)))) - exp2(_364 * (isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0))))) * _445)) - ((exp2(_366 * _456) - exp2(_366 * _457)) * _445))) + (_358 * cbSceneParam._m0[80u].z);
        }
        vec4 _492 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_265, _266, 1.0), 0.0);
        float _501 = exp2((_490 * (-1.44269502162933349609375)) * (1.0 - _492.w));
        float _502 = log2(_501);
        float _518 = log2(_286);
        _368 = (exp2(_518 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_502 * cbSceneParam._m0[78u].x)) * _492.x) / cbSceneParam._m0[78u].x)) + _283;
        _370 = (exp2(_518 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_502 * cbSceneParam._m0[78u].y)) * _492.y) / cbSceneParam._m0[78u].y)) + _284;
        _372 = (exp2(_518 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_502 * cbSceneParam._m0[78u].z)) * _492.z) / cbSceneParam._m0[78u].z)) + _285;
        _374 = _501 * _286;
    }
    else
    {
        _368 = _283;
        _370 = _284;
        _372 = _285;
        _374 = _286;
    }
    bool _528;
    vec4 _384;
    vec4 _408;
    float _410;
    float _415;
    float _416;
    float _417;
    float _418;
    bool _429;
    for (;;)
    {
        _384 = cbMatDynParam._m0[0u];
        float _386 = roundEven(_384.y);
        bool _387 = _386 == 3.0;
        float _389 = log2(_374);
        float _396 = exp2(_389 * cbSceneParam._m0[78u].x) * _252;
        float _397 = exp2(_389 * cbSceneParam._m0[78u].y) * _253;
        float _398 = exp2(_389 * cbSceneParam._m0[78u].z) * _254;
        float _405 = _214 + (-0.5);
        _408 = cbMtdParam._m0[1u];
        _410 = _408.y * _405;
        float _414 = (_386 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _415 = _414 * (_387 ? _396 : (_396 + (cbSceneParam._m0[72u].w * _368)));
        _416 = _414 * (_387 ? _397 : (_397 + (cbSceneParam._m0[72u].w * _370)));
        _417 = _414 * (_387 ? _398 : (_398 + (cbSceneParam._m0[72u].w * _372)));
        _418 = _405 * 0.999000012874603271484375;
        _429 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_429)
        {
            if ((cbInstanceData._m0[_240 + 7u].x + _418) < 0.5)
            {
                _528 = true;
                break;
            }
        }
        uint _482 = _242 + uint(_384.w);
        if ((cbInstanceData._m0[_482].w < 1.0) && ((cbInstanceData._m0[_482].w + _418) < 0.5))
        {
            _528 = true;
            break;
        }
        if ((_410 + 1.0) < _408.x)
        {
            _528 = true;
            break;
        }
        _528 = false;
        break;
    }
    float _533;
    if (_528)
    {
        discard_state = true;
        _533 = 0.0;
    }
    else
    {
        _533 = _259;
    }
    SV_Target.x = _415;
    SV_Target.y = _416;
    SV_Target.z = _417;
    SV_Target.w = _533;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _259;
    discard_exit();
}


