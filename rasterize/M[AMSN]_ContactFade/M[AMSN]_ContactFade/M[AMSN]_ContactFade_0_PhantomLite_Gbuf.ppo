#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _140 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _141 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _142 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _147 = inversesqrt(dot(vec3(_140, _141, _142), vec3(_140, _141, _142)));
    float _154 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _161 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _208 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _218 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _208);
    float _219 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _208);
    float _220 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _208);
    vec4 _233 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _239 = _233.w;
    float _245 = cbMtdParam._m0[9u].x * _233.x;
    float _246 = cbMtdParam._m0[9u].y * _233.y;
    float _247 = cbMtdParam._m0[9u].z * _233.z;
    vec4 _259 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _261 = _259.x;
    float _285 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _261)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _261))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _580 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _288 = 1.0 - (isnan(1.0) ? _580 : (isnan(_580) ? 1.0 : min(_580, 1.0)));
    float _591 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _289 = isnan(1.0) ? _591 : (isnan(_591) ? 1.0 : min(_591, 1.0));
    float _297 = _239 - (((_289 * _289) * _239) * (3.0 - (_289 * 2.0)));
    vec4 _309 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_0, SS_SpecularMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _315 = cbMtdParam._m0[10u].x + _309.x;
    vec4 _327 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _331 = _327.z;
    float _334 = (_327.x * 2.0) + (-1.0);
    float _336 = (_327.y * 2.0) + (-1.0);
    float _337 = dot(vec2(_334, _336), vec2(_334, _336));
    float _602 = isnan(0.0) ? _337 : (isnan(_337) ? 0.0 : max(_337, 0.0));
    float _342 = sqrt(1.0 - (isnan(1.0) ? _602 : (isnan(_602) ? 1.0 : min(_602, 1.0))));
    float _345 = fma(_342, _154 * NORMAL.x, fma(_336, _161 * TANGENT.x, (_147 * _140) * _334));
    float _348 = fma(_342, _154 * NORMAL.y, fma(_336, _161 * TANGENT.y, (_147 * _141) * _334));
    float _351 = fma(_342, _154 * NORMAL.z, fma(_336, _161 * TANGENT.z, (_147 * _142) * _334));
    float _355 = inversesqrt(dot(vec3(_345, _348, _351), vec3(_345, _348, _351)));
    float _356 = _355 * _345;
    float _357 = _355 * _348;
    float _358 = _355 * _351;
    float _613 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _359 = isnan(1.0) ? _613 : (isnan(_613) ? 1.0 : min(_613, 1.0));
    float _624 = isnan(0.0) ? _331 : (isnan(_331) ? 0.0 : max(_331, 0.0));
    float _635 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _361 = isnan(1.0) ? _635 : (isnan(_635) ? 1.0 : min(_635, 1.0));
    float _646 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
    float _362 = isnan(1.0) ? _646 : (isnan(_646) ? 1.0 : min(_646, 1.0));
    float _657 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _363 = isnan(1.0) ? _657 : (isnan(_657) ? 1.0 : min(_657, 1.0));
    float _668 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _364 = isnan(1.0) ? _668 : (isnan(_668) ? 1.0 : min(_668, 1.0));
    float _382 = inversesqrt(dot(vec3(_218, _219, _220), vec3(_218, _219, _220)));
    float _383 = _382 * _218;
    float _384 = _382 * _219;
    float _385 = _382 * _220;
    float _392 = abs(exp2(log2(dot(vec3(_356, _357, _358), vec3(_383, _384, _385))) * cbMatDynParam._m0[12u].x));
    float _393 = isnan(0.100000001490116119384765625) ? _392 : (isnan(_392) ? 0.100000001490116119384765625 : max(_392, 0.100000001490116119384765625));
    float _399 = ((isnan(0.699999988079071044921875) ? _393 : (isnan(_393) ? 0.699999988079071044921875 : min(_393, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _422 = 1.0 - cbMatDynParam._m0[8u].w;
    float _689 = isnan(0.0) ? _422 : (isnan(_422) ? 0.0 : max(_422, 0.0));
    float _425 = 1.0 - cbMatDynParam._m0[7u].w;
    float _700 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0));
    float _426 = isnan(1.0) ? _700 : (isnan(_700) ? 1.0 : min(_700, 1.0));
    float _430 = dot(vec3(_356, _357, _358), vec3(0.0, -1.0, 0.0));
    float _711 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _433 = isnan(1.0) ? _711 : (isnan(_711) ? 1.0 : min(_711, 1.0));
    float _440 = (_433 * _361) * cbMatDynParam._m0[11u].x;
    float _442 = (_433 * _362) * cbMatDynParam._m0[11u].y;
    float _444 = (_433 * _363) * cbMatDynParam._m0[11u].z;
    float _454 = dot(vec3(_383, _384, _385), vec3(_356, _357, _358)) * 2.0;
    float _464 = dot(vec3((-0.0) - (_383 - (_454 * _356)), (-0.0) - (_384 - (_454 * _357)), (-0.0) - (_385 - (_454 * _358))), vec3(0.0, -1.0, 0.0));
    float _722 = isnan(0.0) ? _464 : (isnan(_464) ? 0.0 : max(_464, 0.0));
    float _471 = exp2(log2(isnan(1.0) ? _722 : (isnan(_722) ? 1.0 : min(_722, 1.0))) * 4.0);
    uint _496 = uint(roundEven(NORMAL.w)) * 13u;
    uint _499 = (_496 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _505 = ((cbMatDynParam._m0[9u].x * _361) * cbMtdParam._m0[0u].x) * cbInstanceData._m0[_499].x;
    float _506 = ((cbMatDynParam._m0[9u].y * _362) * cbMtdParam._m0[0u].y) * cbInstanceData._m0[_499].y;
    float _507 = ((cbMatDynParam._m0[9u].z * _363) * cbMtdParam._m0[0u].z) * cbInstanceData._m0[_499].z;
    float _733 = isnan(0.0) ? _505 : (isnan(_505) ? 0.0 : max(_505, 0.0));
    float _744 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _755 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _766 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _523 = cbInstanceData._m0[_496 + 6u].w * (isnan(1.0) ? _766 : (isnan(_766) ? 1.0 : min(_766, 1.0)));
    float _552;
    float _553;
    float _554;
    float _555;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _552 = _523;
        _553 = _523;
        _554 = _523;
        _555 = _523;
    }
    else
    {
        _552 = cbMatDynParam._m0[12u].y - (cbMatDynParam._m0[12u].y * ((((isnan(1.0) ? _689 : (isnan(_689) ? 1.0 : min(_689, 1.0))) - _426) * _399) + _426));
        _553 = 0.0;
        _554 = float(floatBitsToUint(cbInstanceData._m0[_496 + 5u]).x) * 0.0039215688593685626983642578125;
        _555 = TEXCOORD.z;
    }
    SV_Target.x = (_356 * 0.5) + 0.500488758087158203125;
    SV_Target.y = (_357 * 0.5) + 0.500488758087158203125;
    SV_Target.z = (_358 * 0.5) + 0.500488758087158203125;
    SV_Target.w = _553;
    SV_Target_1.x = _364;
    SV_Target_1.y = isnan(1.0) ? _624 : (isnan(_624) ? 1.0 : min(_624, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _555;
    SV_Target_2.x = isnan(1.0) ? _733 : (isnan(_733) ? 1.0 : min(_733, 1.0));
    SV_Target_2.y = isnan(1.0) ? _744 : (isnan(_744) ? 1.0 : min(_744, 1.0));
    SV_Target_2.z = isnan(1.0) ? _755 : (isnan(_755) ? 1.0 : min(_755, 1.0));
    SV_Target_2.w = _554;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _553;
    SV_Target_4.x = (cbInstanceData._m0[_499].x * ((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _399) + cbMatDynParam._m0[7u].x) + (((_440 - (_440 * _364)) + (cbMatDynParam._m0[11u].x * _471)) * cbMatDynParam._m0[9u].x))) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (cbInstanceData._m0[_499].y * ((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _399) + cbMatDynParam._m0[7u].y) + (((_442 - (_442 * _364)) + (cbMatDynParam._m0[11u].y * _471)) * cbMatDynParam._m0[9u].y))) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (cbInstanceData._m0[_499].z * ((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _399) + cbMatDynParam._m0[7u].z) + (((_444 - (_444 * _364)) + (cbMatDynParam._m0[11u].z * _471)) * cbMatDynParam._m0[9u].z))) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _552;
}


