#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_6;
layout(location = 7) in vec3 TEXCOORD_7;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    vec4 _120 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _123 = _120.w;
    vec4 _136 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _138 = _136.x;
    bool _145 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _162 = ((_145 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _138)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _138))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _372 = isnan(0.0) ? _162 : (isnan(_162) ? 0.0 : max(_162, 0.0));
    float _166 = 1.0 - (isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0)));
    float _383 = isnan(0.0) ? _166 : (isnan(_166) ? 0.0 : max(_166, 0.0));
    float _167 = isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0));
    float _175 = _123 - (((_167 * _167) * _123) * (3.0 - (_167 * 2.0)));
    uint _177 = uint(roundEven(NORMAL.w));
    float _180 = _145 ? TEXCOORD_5.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_5.z));
    float _222 = fma(TEXCOORD_5.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_5.x)));
    float _232 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_5.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_5.x))) / _222);
    float _233 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_5.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_5.x))) / _222);
    float _234 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_5.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_5.x))) / _222);
    vec4 _239 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _241 = _239.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _277 = sqrt(((_232 * _232) + (_233 * _233)) + (_234 * _234));
        float _284 = (cbMatDynParam._m0[5u].x * _277) + cbMatDynParam._m0[5u].y;
        float _394 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
        float _285 = isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0));
        float _289 = (cbMatDynParam._m0[5u].z * _277) + cbMatDynParam._m0[5u].w;
        float _405 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0))) - _285)) + _285) < ((_241 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _322;
    float _252;
    float _253;
    vec4 _257;
    float _259;
    float _260;
    bool _271;
    for (;;)
    {
        _252 = (TEXCOORD_5.x / TEXCOORD_5.w) - (TEXCOORD_6.x / TEXCOORD_6.w);
        _253 = (TEXCOORD_5.y / TEXCOORD_5.w) - (TEXCOORD_6.y / TEXCOORD_6.w);
        float _254 = _241 + (-0.5);
        _257 = cbMtdParam._m0[1u];
        _259 = _257.y * _254;
        _260 = _254 * 0.999000012874603271484375;
        _271 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_271)
        {
            if ((cbInstanceData._m0[(_177 * 13u) + 7u].x + _260) < 0.5)
            {
                _322 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _260) < 0.5))
        {
            _322 = true;
            break;
        }
        if ((_175 + _259) < _257.x)
        {
            _322 = true;
            break;
        }
        _322 = false;
        break;
    }
    if (_322)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _252) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _253) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _180 / (_180 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


