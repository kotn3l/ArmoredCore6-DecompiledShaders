#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _145 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _146 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _147 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _152 = inversesqrt(dot(vec3(_145, _146, _147), vec3(_145, _146, _147)));
    float _159 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _183 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = _183.w;
    float _196 = cbMtdParam._m0[9u].x * _183.x;
    float _197 = cbMtdParam._m0[9u].y * _183.y;
    float _198 = cbMtdParam._m0[9u].z * _183.z;
    vec4 _211 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _213 = _211.x;
    float _237 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _213)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _213))) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _537 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _240 = 1.0 - (isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0)));
    float _548 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _241 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
    float _249 = _189 - (((_241 * _241) * _189) * (3.0 - (_241 * 2.0)));
    vec4 _264 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _268 = _264.z;
    float _271 = (_264.x * 2.0) + (-1.0);
    float _273 = (_264.y * 2.0) + (-1.0);
    float _274 = dot(vec2(_271, _273), vec2(_271, _273));
    float _559 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _279 = sqrt(1.0 - (isnan(1.0) ? _559 : (isnan(_559) ? 1.0 : min(_559, 1.0))));
    float _282 = fma(_279, _159 * NORMAL.x, fma(_273, _166 * TANGENT.x, (_152 * _145) * _271));
    float _285 = fma(_279, _159 * NORMAL.y, fma(_273, _166 * TANGENT.y, (_152 * _146) * _271));
    float _288 = fma(_279, _159 * NORMAL.z, fma(_273, _166 * TANGENT.z, (_152 * _147) * _271));
    float _292 = inversesqrt(dot(vec3(_282, _285, _288), vec3(_282, _285, _288)));
    float _570 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _293 = isnan(1.0) ? _570 : (isnan(_570) ? 1.0 : min(_570, 1.0));
    float _581 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _592 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _295 = isnan(1.0) ? _592 : (isnan(_592) ? 1.0 : min(_592, 1.0));
    float _603 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _296 = isnan(1.0) ? _603 : (isnan(_603) ? 1.0 : min(_603, 1.0));
    float _614 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _297 = isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0));
    float _625 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    uint _300 = uint(roundEven(NORMAL.w));
    float _341 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _351 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _341);
    float _352 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _341);
    float _353 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _341);
    vec4 _358 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _360 = _358.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _423 = sqrt(((_351 * _351) + (_352 * _352)) + (_353 * _353));
        float _430 = (cbMatDynParam._m0[5u].x * _423) + cbMatDynParam._m0[5u].y;
        float _636 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
        float _431 = isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0));
        float _435 = (cbMatDynParam._m0[5u].z * _423) + cbMatDynParam._m0[5u].w;
        float _647 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0))) - _431)) + _431) < ((_360 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _464;
    uint _379;
    vec4 _384;
    float _391;
    float _392;
    float _393;
    float _399;
    vec4 _403;
    float _405;
    float _406;
    bool _417;
    for (;;)
    {
        _379 = _300 * 13u;
        _384 = cbInstanceData._m0[(_379 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _388 = (cbMtdParam._m0[0u].x * _295) * _384.x;
        float _389 = (cbMtdParam._m0[0u].y * _296) * _384.y;
        float _390 = (cbMtdParam._m0[0u].z * _297) * _384.z;
        float _658 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
        _391 = isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0));
        float _669 = isnan(0.0) ? _389 : (isnan(_389) ? 0.0 : max(_389, 0.0));
        _392 = isnan(1.0) ? _669 : (isnan(_669) ? 1.0 : min(_669, 1.0));
        float _680 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
        _393 = isnan(1.0) ? _680 : (isnan(_680) ? 1.0 : min(_680, 1.0));
        float _691 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
        _399 = cbInstanceData._m0[_379 + 6u].w * (isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0)));
        float _400 = _360 + (-0.5);
        _403 = cbMtdParam._m0[1u];
        _405 = _403.y * _400;
        _406 = _400 * 0.999000012874603271484375;
        _417 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_417)
        {
            if ((cbInstanceData._m0[_379 + 7u].x + _406) < 0.5)
            {
                _464 = true;
                break;
            }
        }
        if ((_384.w < 1.0) && ((_384.w + _406) < 0.5))
        {
            _464 = true;
            break;
        }
        if ((_405 + _249) < _403.x)
        {
            _464 = true;
            break;
        }
        _464 = false;
        break;
    }
    if (_464)
    {
        discard_state = true;
    }
    bool _490 = cbMtdParam._m0[1u].z != 0.0;
    float _491 = _490 ? _399 : 0.0;
    SV_Target.x = ((_282 * 0.5) * _292) + 0.500488758087158203125;
    SV_Target.y = ((_285 * 0.5) * _292) + 0.500488758087158203125;
    SV_Target.z = ((_288 * 0.5) * _292) + 0.500488758087158203125;
    SV_Target.w = _491;
    SV_Target_1.x = isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0));
    SV_Target_1.y = isnan(1.0) ? _581 : (isnan(_581) ? 1.0 : min(_581, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _490 ? _399 : TEXCOORD.z;
    SV_Target_2.x = _391;
    SV_Target_2.y = _392;
    SV_Target_2.z = _393;
    SV_Target_2.w = _490 ? _399 : (float(floatBitsToUint(cbInstanceData._m0[_379 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _491;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _491;
    discard_exit();
}


