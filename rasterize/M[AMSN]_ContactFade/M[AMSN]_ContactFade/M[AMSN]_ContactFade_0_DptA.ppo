#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_ContactFade_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 5) in vec2 TEXCOORD_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    vec4 _101 = texture(sampler2D(M_AMSN_ContactFade_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _103 = _101.w;
    float _127 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / cbSceneParam._m0[2u].x) : cbSceneParam._m0[0u].x) - POSITION_1.w) / cbMtdParam._m0[10u].y;
    float _312 = isnan(0.0) ? _127 : (isnan(_127) ? 0.0 : max(_127, 0.0));
    float _131 = 1.0 - (isnan(1.0) ? _312 : (isnan(_312) ? 1.0 : min(_312, 1.0)));
    float _323 = isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0));
    float _132 = isnan(1.0) ? _323 : (isnan(_323) ? 1.0 : min(_323, 1.0));
    float _140 = _103 - (((_132 * _132) * _103) * (3.0 - (_132 * 2.0)));
    uint _142 = uint(roundEven(NORMAL.w));
    float _184 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _194 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _184);
    float _195 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _184);
    float _196 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _184);
    vec4 _201 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _203 = _201.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _235 = sqrt(((_194 * _194) + (_195 * _195)) + (_196 * _196));
        float _242 = (cbMatDynParam._m0[5u].x * _235) + cbMatDynParam._m0[5u].y;
        float _334 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
        float _243 = isnan(1.0) ? _334 : (isnan(_334) ? 1.0 : min(_334, 1.0));
        float _247 = (cbMatDynParam._m0[5u].z * _235) + cbMatDynParam._m0[5u].w;
        float _345 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _345 : (isnan(_345) ? 1.0 : min(_345, 1.0))) - _243)) + _243) < ((_203 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _284;
    vec4 _213;
    float _215;
    float _216;
    bool _227;
    uint _228;
    for (;;)
    {
        float _210 = _203 + (-0.5);
        _213 = cbMtdParam._m0[1u];
        _215 = _213.y * _210;
        _216 = _210 * 0.999000012874603271484375;
        _227 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _228 = _142 * 13u;
        if (_227)
        {
            if ((cbInstanceData._m0[_228 + 7u].x + _216) < 0.5)
            {
                _284 = true;
                break;
            }
        }
        uint _273 = (_228 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_273].w < 1.0) && ((cbInstanceData._m0[_273].w + _216) < 0.5))
        {
            _284 = true;
            break;
        }
        if ((_140 + _215) < _213.x)
        {
            _284 = true;
            break;
        }
        _284 = false;
        break;
    }
    if (_284)
    {
        discard_state = true;
    }
    discard_exit();
}


