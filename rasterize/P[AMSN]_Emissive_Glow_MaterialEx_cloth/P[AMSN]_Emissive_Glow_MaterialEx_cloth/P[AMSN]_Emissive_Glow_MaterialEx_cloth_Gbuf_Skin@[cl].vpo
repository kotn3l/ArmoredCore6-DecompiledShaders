#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;
layout(location = 4, component = 1) out float TEXCOORD_10;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_10 = 0.0;
    float _177 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _429;
    float _430;
    float _431;
    float _432;
    float _433;
    float _434;
    float _435;
    float _436;
    float _437;
    float _438;
    float _439;
    float _440;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _213 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
        precise float _217 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _222 = isnan(_217) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _217 : max(0.001000000047497451305389404296875, _217));
        precise float _224 = BLENDWEIGHT.x / _222;
        precise float _225 = BLENDWEIGHT.y / _222;
        precise float _226 = BLENDWEIGHT.z / _222;
        precise float _227 = BLENDWEIGHT.w / _222;
        uvec4 _234 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_213)).x * 13u) + 4u]);
        uint _235 = _234.x;
        uint _237 = (_235 + uint(float(BLENDINDICES.x))) * 3u;
        uint _244 = _237 + 1u;
        uint _251 = _237 + 2u;
        precise float _258 = _224 * cbObjMatrix._m0[_237].x;
        precise float _259 = _224 * cbObjMatrix._m0[_244].x;
        precise float _260 = _224 * cbObjMatrix._m0[_251].x;
        precise float _261 = _224 * cbObjMatrix._m0[_237].y;
        precise float _262 = _224 * cbObjMatrix._m0[_244].y;
        precise float _263 = _224 * cbObjMatrix._m0[_251].y;
        precise float _264 = _224 * cbObjMatrix._m0[_237].z;
        precise float _265 = _224 * cbObjMatrix._m0[_244].z;
        precise float _266 = _224 * cbObjMatrix._m0[_251].z;
        precise float _267 = _224 * cbObjMatrix._m0[_237].w;
        precise float _268 = _224 * cbObjMatrix._m0[_244].w;
        precise float _269 = _224 * cbObjMatrix._m0[_251].w;
        uint _272 = (_235 + uint(float(BLENDINDICES.y))) * 3u;
        uint _279 = _272 + 1u;
        uint _286 = _272 + 2u;
        precise float _293 = _225 * cbObjMatrix._m0[_272].x;
        precise float _294 = _225 * cbObjMatrix._m0[_279].x;
        precise float _295 = _225 * cbObjMatrix._m0[_286].x;
        precise float _296 = _225 * cbObjMatrix._m0[_272].y;
        precise float _297 = _225 * cbObjMatrix._m0[_279].y;
        precise float _298 = _225 * cbObjMatrix._m0[_286].y;
        precise float _299 = _225 * cbObjMatrix._m0[_272].z;
        precise float _300 = _225 * cbObjMatrix._m0[_279].z;
        precise float _301 = _225 * cbObjMatrix._m0[_286].z;
        precise float _302 = _225 * cbObjMatrix._m0[_272].w;
        precise float _303 = _225 * cbObjMatrix._m0[_279].w;
        precise float _304 = _225 * cbObjMatrix._m0[_286].w;
        precise float _305 = _258 + _293;
        precise float _306 = _259 + _294;
        precise float _307 = _260 + _295;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        uint _319 = (_235 + uint(float(BLENDINDICES.z))) * 3u;
        uint _326 = _319 + 1u;
        uint _333 = _319 + 2u;
        precise float _340 = _226 * cbObjMatrix._m0[_319].x;
        precise float _341 = _226 * cbObjMatrix._m0[_326].x;
        precise float _342 = _226 * cbObjMatrix._m0[_333].x;
        precise float _343 = _226 * cbObjMatrix._m0[_319].y;
        precise float _344 = _226 * cbObjMatrix._m0[_326].y;
        precise float _345 = _226 * cbObjMatrix._m0[_333].y;
        precise float _346 = _226 * cbObjMatrix._m0[_319].z;
        precise float _347 = _226 * cbObjMatrix._m0[_326].z;
        precise float _348 = _226 * cbObjMatrix._m0[_333].z;
        precise float _349 = _226 * cbObjMatrix._m0[_319].w;
        precise float _350 = _226 * cbObjMatrix._m0[_326].w;
        precise float _351 = _226 * cbObjMatrix._m0[_333].w;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        uint _366 = (_235 + uint(float(BLENDINDICES.w))) * 3u;
        uint _373 = _366 + 1u;
        uint _380 = _366 + 2u;
        precise float _387 = _227 * cbObjMatrix._m0[_366].x;
        precise float _388 = _227 * cbObjMatrix._m0[_373].x;
        precise float _389 = _227 * cbObjMatrix._m0[_380].x;
        precise float _390 = _227 * cbObjMatrix._m0[_366].y;
        precise float _391 = _227 * cbObjMatrix._m0[_373].y;
        precise float _392 = _227 * cbObjMatrix._m0[_380].y;
        precise float _393 = _227 * cbObjMatrix._m0[_366].z;
        precise float _394 = _227 * cbObjMatrix._m0[_373].z;
        precise float _395 = _227 * cbObjMatrix._m0[_380].z;
        precise float _396 = _227 * cbObjMatrix._m0[_366].w;
        precise float _397 = _227 * cbObjMatrix._m0[_373].w;
        precise float _398 = _227 * cbObjMatrix._m0[_380].w;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        precise float _401 = _354 + _389;
        precise float _402 = _355 + _390;
        precise float _403 = _356 + _391;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        _429 = _399;
        _430 = _402;
        _431 = _405;
        _432 = _408;
        _433 = _400;
        _434 = _403;
        _435 = _406;
        _436 = _409;
        _437 = _401;
        _438 = _404;
        _439 = _407;
        _440 = _410;
    }
    else
    {
        _429 = cbvModelParam._m0[0u].x;
        _430 = cbvModelParam._m0[0u].y;
        _431 = cbvModelParam._m0[0u].z;
        _432 = cbvModelParam._m0[0u].w;
        _433 = cbvModelParam._m0[1u].x;
        _434 = cbvModelParam._m0[1u].y;
        _435 = cbvModelParam._m0[1u].z;
        _436 = cbvModelParam._m0[1u].w;
        _437 = cbvModelParam._m0[2u].x;
        _438 = cbvModelParam._m0[2u].y;
        _439 = cbvModelParam._m0[2u].z;
        _440 = cbvModelParam._m0[2u].w;
    }
    precise float _441 = POSITION.x * _429;
    precise float _442 = POSITION.y * _430;
    precise float _443 = _442 + _441;
    precise float _444 = POSITION.z * _431;
    precise float _445 = _444 + _443;
    precise float _446 = 1.0 * _432;
    precise float _447 = _446 + _445;
    precise float _448 = POSITION.x * _433;
    precise float _449 = POSITION.y * _434;
    precise float _450 = _449 + _448;
    precise float _451 = POSITION.z * _435;
    precise float _452 = _451 + _450;
    precise float _453 = 1.0 * _436;
    precise float _454 = _453 + _452;
    precise float _455 = POSITION.x * _437;
    precise float _456 = POSITION.y * _438;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.z * _439;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * _440;
    precise float _461 = _460 + _459;
    float _467 = cbSceneParam._m0[3u].x - _447;
    float _468 = cbSceneParam._m0[3u].y - _454;
    float _469 = cbSceneParam._m0[3u].z - _461;
    uint _489 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    precise float _503 = _447 - cbSceneParam._m0[3u].x;
    precise float _504 = _454 - cbSceneParam._m0[3u].y;
    precise float _505 = _461 - cbSceneParam._m0[3u].z;
    precise float _533 = _503 * cbSceneParam._m0[24u].x;
    precise float _534 = _504 * cbSceneParam._m0[24u].y;
    precise float _535 = _534 + _533;
    precise float _536 = _505 * cbSceneParam._m0[24u].z;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _539 = _538 + _537;
    precise float _540 = _503 * cbSceneParam._m0[25u].x;
    precise float _541 = _504 * cbSceneParam._m0[25u].y;
    precise float _542 = _541 + _540;
    precise float _543 = _505 * cbSceneParam._m0[25u].z;
    precise float _544 = _543 + _542;
    precise float _545 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _546 = _545 + _544;
    precise float _547 = _503 * cbSceneParam._m0[26u].x;
    precise float _548 = _504 * cbSceneParam._m0[26u].y;
    precise float _549 = _548 + _547;
    precise float _550 = _505 * cbSceneParam._m0[26u].z;
    precise float _551 = _550 + _549;
    precise float _552 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _553 = _552 + _551;
    precise float _554 = _503 * cbSceneParam._m0[27u].x;
    precise float _555 = _504 * cbSceneParam._m0[27u].y;
    precise float _556 = _555 + _554;
    precise float _557 = _505 * cbSceneParam._m0[27u].z;
    precise float _558 = _557 + _556;
    precise float _559 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _560 = _559 + _558;
    gl_Position.x = _539;
    gl_Position.y = _546;
    gl_Position.z = _553;
    gl_Position.w = _560;
    NORMAL_1.x = fma(_180, _431, fma(_179, _430, _429 * _177));
    NORMAL_1.y = fma(_180, _435, fma(_179, _434, _433 * _177));
    NORMAL_1.z = fma(_180, _439, fma(_179, _438, _437 * _177));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_489)).x);
    TANGENT_1.x = fma(_189, _431, fma(_188, _430, _429 * _187));
    TANGENT_1.y = fma(_189, _435, fma(_188, _434, _433 * _187));
    TANGENT_1.z = fma(_189, _439, fma(_188, _438, _437 * _187));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_10 = sqrt(((_467 * _467) + (_468 * _468)) + (_469 * _469));
}


