#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SCL_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_SCL_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_SCL_snp_0_Texture2D_8;
layout(set = 0, binding = 11) uniform texture2D M_SCL_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_SCL_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_SCL_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_SCL_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D M_SCL_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_SCL_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_SCL_snp_0_Texture2D_5;
layout(set = 0, binding = 8) uniform texture2D M_SCL_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_SCL_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1334;
float _1335;
float _1336;
float _1337;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _137 = cbMtdParam._m0[17u].y * TEXCOORD_1.z;
    vec4 _150 = texture(sampler2D(M_SCL_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _153 = _150.x;
    float _154 = _150.y;
    float _155 = _150.z;
    float _156 = _150.w;
    float _166 = (cbMtdParam._m0[22u].y * _153) * cbMtdParam._m0[22u].z;
    float _168 = (cbMtdParam._m0[22u].y * _154) * cbMtdParam._m0[22u].z;
    float _170 = (cbMtdParam._m0[22u].y * _155) * cbMtdParam._m0[22u].z;
    float _172 = isnan(_168) ? _166 : (isnan(_166) ? _168 : max(_166, _168));
    float _173 = isnan(_170) ? _172 : (isnan(_172) ? _170 : max(_172, _170));
    float _176;
    float _178;
    if (_173 < 1.1920928955078125e-07)
    {
        _176 = 0.0;
        _178 = 0.0;
    }
    else
    {
        float _204 = isnan(_168) ? _166 : (isnan(_166) ? _168 : min(_166, _168));
        float _206 = _173 - (isnan(_170) ? _204 : (isnan(_204) ? _170 : min(_204, _170)));
        float _179 = _206 / _173;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_206 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _179;
        }
        else
        {
            float _360;
            if (_173 == _166)
            {
                _360 = (((cbMtdParam._m0[22u].y * (_154 - _155)) * cbMtdParam._m0[22u].z) / _206) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_15_10_ladder;
                if (_173 == _168)
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[22u].y * (_155 - _153)) * cbMtdParam._m0[22u].z) / _206) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[22u].y * (_153 - _154)) * cbMtdParam._m0[22u].z) / _206) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _360 = frontier_phi_15_10_ladder;
            }
            float _365 = (_360 < 0.0) ? (_360 + 1.0) : _360;
            frontier_phi_1_2_ladder = _365 - floor(_365);
            frontier_phi_1_2_ladder_1 = _179;
        }
        _176 = frontier_phi_1_2_ladder;
        _178 = frontier_phi_1_2_ladder_1;
    }
    float _180 = _178 + cbMtdParam._m0[23u].x;
    float _184 = fract(cbMtdParam._m0[22u].w + _176) * 6.0;
    uint _187 = uint(int(floor(_184)));
    float _189 = _184 - float(int(_187));
    float _192 = (1.0 - _180) * _173;
    float _195 = (1.0 - (_189 * _180)) * _173;
    float _199 = (1.0 - ((1.0 - _189) * _180)) * _173;
    float _208;
    float _210;
    float _211;
    if ((_187 == 0u) || (_187 == 6u))
    {
        _208 = _173;
        _210 = _199;
        _211 = _192;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_187 == 1u)
        {
            frontier_phi_3_4_ladder = _195;
            frontier_phi_3_4_ladder_1 = _173;
            frontier_phi_3_4_ladder_2 = _192;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_187 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _192;
                frontier_phi_3_4_ladder_8_ladder_1 = _173;
                frontier_phi_3_4_ladder_8_ladder_2 = _199;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_14_ladder;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
                if (_187 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _192;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _195;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _173;
                }
                else
                {
                    bool _414 = _187 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _414 ? _199 : _173;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _192;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _414 ? _173 : _195;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_14_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _208 = frontier_phi_3_4_ladder;
        _210 = frontier_phi_3_4_ladder_1;
        _211 = frontier_phi_3_4_ladder_2;
    }
    vec4 _235 = texture(sampler2D(M_SCL_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[7u].w));
    float _237 = _235.x;
    float _238 = _235.y;
    float _239 = _235.z;
    float _240 = cbMtdParam._m0[17u].z * cbMtdParam._m0[23u].z;
    float _241 = _240 * _237;
    float _242 = _240 * _238;
    float _243 = _240 * _239;
    float _244 = isnan(_242) ? _241 : (isnan(_241) ? _242 : max(_241, _242));
    float _245 = isnan(_243) ? _244 : (isnan(_244) ? _243 : max(_244, _243));
    float _249;
    float _251;
    if (_245 < 1.1920928955078125e-07)
    {
        _249 = 0.0;
        _251 = 0.0;
    }
    else
    {
        float _274 = isnan(_242) ? _241 : (isnan(_241) ? _242 : min(_241, _242));
        float _276 = _245 - (isnan(_243) ? _274 : (isnan(_274) ? _243 : min(_274, _243)));
        float _252 = _276 / _245;
        float frontier_phi_6_7_ladder;
        float frontier_phi_6_7_ladder_1;
        if (_276 < 1.1920928955078125e-07)
        {
            frontier_phi_6_7_ladder = 0.0;
            frontier_phi_6_7_ladder_1 = _252;
        }
        else
        {
            float _457;
            if (_245 == _241)
            {
                _457 = ((_240 * (_238 - _239)) / _276) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_28_22_ladder;
                if (_245 == _242)
                {
                    frontier_phi_28_22_ladder = (((_240 * (_239 - _237)) / _276) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_28_22_ladder = (((_240 * (_237 - _238)) / _276) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _457 = frontier_phi_28_22_ladder;
            }
            float _462 = (_457 < 0.0) ? (_457 + 1.0) : _457;
            frontier_phi_6_7_ladder = _462 - floor(_462);
            frontier_phi_6_7_ladder_1 = _252;
        }
        _249 = frontier_phi_6_7_ladder;
        _251 = frontier_phi_6_7_ladder_1;
    }
    float _253 = _251 + cbMtdParam._m0[23u].y;
    float _257 = fract(cbMtdParam._m0[17u].w + _249) * 6.0;
    uint _259 = uint(int(floor(_257)));
    float _261 = _257 - float(int(_259));
    float _263 = (1.0 - _253) * _245;
    float _266 = (1.0 - (_261 * _253)) * _245;
    float _270 = (1.0 - ((1.0 - _261) * _253)) * _245;
    float _286;
    float _288;
    float _289;
    if ((_259 == 0u) || (_259 == 6u))
    {
        _286 = _245;
        _288 = _270;
        _289 = _263;
    }
    else
    {
        float frontier_phi_11_12_ladder;
        float frontier_phi_11_12_ladder_1;
        float frontier_phi_11_12_ladder_2;
        if (_259 == 1u)
        {
            frontier_phi_11_12_ladder = _266;
            frontier_phi_11_12_ladder_1 = _245;
            frontier_phi_11_12_ladder_2 = _263;
        }
        else
        {
            float frontier_phi_11_12_ladder_20_ladder;
            float frontier_phi_11_12_ladder_20_ladder_1;
            float frontier_phi_11_12_ladder_20_ladder_2;
            if (_259 == 2u)
            {
                frontier_phi_11_12_ladder_20_ladder = _263;
                frontier_phi_11_12_ladder_20_ladder_1 = _245;
                frontier_phi_11_12_ladder_20_ladder_2 = _270;
            }
            else
            {
                float frontier_phi_11_12_ladder_20_ladder_27_ladder;
                float frontier_phi_11_12_ladder_20_ladder_27_ladder_1;
                float frontier_phi_11_12_ladder_20_ladder_27_ladder_2;
                if (_259 == 3u)
                {
                    frontier_phi_11_12_ladder_20_ladder_27_ladder = _263;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_1 = _266;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_2 = _245;
                }
                else
                {
                    bool _507 = _259 == 4u;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder = _507 ? _270 : _245;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_1 = _263;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_2 = _507 ? _245 : _266;
                }
                frontier_phi_11_12_ladder_20_ladder = frontier_phi_11_12_ladder_20_ladder_27_ladder;
                frontier_phi_11_12_ladder_20_ladder_1 = frontier_phi_11_12_ladder_20_ladder_27_ladder_1;
                frontier_phi_11_12_ladder_20_ladder_2 = frontier_phi_11_12_ladder_20_ladder_27_ladder_2;
            }
            frontier_phi_11_12_ladder = frontier_phi_11_12_ladder_20_ladder;
            frontier_phi_11_12_ladder_1 = frontier_phi_11_12_ladder_20_ladder_1;
            frontier_phi_11_12_ladder_2 = frontier_phi_11_12_ladder_20_ladder_2;
        }
        _286 = frontier_phi_11_12_ladder;
        _288 = frontier_phi_11_12_ladder_1;
        _289 = frontier_phi_11_12_ladder_2;
    }
    vec4 _316 = texture(sampler2D(M_SCL_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _345 = texture(sampler2D(M_SCL_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[6u].w));
    float _347 = _345.x;
    float _348 = _345.y;
    float _349 = _345.z;
    float _350 = cbMtdParam._m0[20u].y * cbMtdParam._m0[20u].z;
    float _351 = _350 * _347;
    float _352 = _350 * _348;
    float _353 = _350 * _349;
    float _354 = isnan(_352) ? _351 : (isnan(_351) ? _352 : max(_351, _352));
    float _355 = isnan(_353) ? _354 : (isnan(_354) ? _353 : max(_354, _353));
    float _379;
    float _381;
    if (_355 < 1.1920928955078125e-07)
    {
        _379 = 0.0;
        _381 = 0.0;
    }
    else
    {
        float _404 = isnan(_352) ? _351 : (isnan(_351) ? _352 : min(_351, _352));
        float _406 = _355 - (isnan(_353) ? _404 : (isnan(_404) ? _353 : min(_404, _353)));
        float _382 = _406 / _355;
        float frontier_phi_18_19_ladder;
        float frontier_phi_18_19_ladder_1;
        if (_406 < 1.1920928955078125e-07)
        {
            frontier_phi_18_19_ladder = 0.0;
            frontier_phi_18_19_ladder_1 = _382;
        }
        else
        {
            float _844;
            if (_355 == _351)
            {
                _844 = ((_350 * (_348 - _349)) / _406) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_41_35_ladder;
                if (_355 == _352)
                {
                    frontier_phi_41_35_ladder = (((_350 * (_349 - _347)) / _406) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_41_35_ladder = (((_350 * (_347 - _348)) / _406) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _844 = frontier_phi_41_35_ladder;
            }
            float _849 = (_844 < 0.0) ? (_844 + 1.0) : _844;
            frontier_phi_18_19_ladder = _849 - floor(_849);
            frontier_phi_18_19_ladder_1 = _382;
        }
        _379 = frontier_phi_18_19_ladder;
        _381 = frontier_phi_18_19_ladder_1;
    }
    float _383 = _381 + cbMtdParam._m0[19u].z;
    float _387 = fract(cbMtdParam._m0[19u].w + _379) * 6.0;
    uint _389 = uint(int(floor(_387)));
    float _391 = _387 - float(int(_389));
    float _393 = (1.0 - _383) * _355;
    float _396 = (1.0 - (_391 * _383)) * _355;
    float _400 = (1.0 - ((1.0 - _391) * _383)) * _355;
    float _416;
    float _418;
    float _419;
    if ((_389 == 0u) || (_389 == 6u))
    {
        _416 = _355;
        _418 = _400;
        _419 = _393;
    }
    else
    {
        float frontier_phi_24_25_ladder;
        float frontier_phi_24_25_ladder_1;
        float frontier_phi_24_25_ladder_2;
        if (_389 == 1u)
        {
            frontier_phi_24_25_ladder = _396;
            frontier_phi_24_25_ladder_1 = _355;
            frontier_phi_24_25_ladder_2 = _393;
        }
        else
        {
            float frontier_phi_24_25_ladder_33_ladder;
            float frontier_phi_24_25_ladder_33_ladder_1;
            float frontier_phi_24_25_ladder_33_ladder_2;
            if (_389 == 2u)
            {
                frontier_phi_24_25_ladder_33_ladder = _393;
                frontier_phi_24_25_ladder_33_ladder_1 = _355;
                frontier_phi_24_25_ladder_33_ladder_2 = _400;
            }
            else
            {
                float frontier_phi_24_25_ladder_33_ladder_40_ladder;
                float frontier_phi_24_25_ladder_33_ladder_40_ladder_1;
                float frontier_phi_24_25_ladder_33_ladder_40_ladder_2;
                if (_389 == 3u)
                {
                    frontier_phi_24_25_ladder_33_ladder_40_ladder = _393;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_1 = _396;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_2 = _355;
                }
                else
                {
                    bool _960 = _389 == 4u;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder = _960 ? _400 : _355;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_1 = _393;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_2 = _960 ? _355 : _396;
                }
                frontier_phi_24_25_ladder_33_ladder = frontier_phi_24_25_ladder_33_ladder_40_ladder;
                frontier_phi_24_25_ladder_33_ladder_1 = frontier_phi_24_25_ladder_33_ladder_40_ladder_1;
                frontier_phi_24_25_ladder_33_ladder_2 = frontier_phi_24_25_ladder_33_ladder_40_ladder_2;
            }
            frontier_phi_24_25_ladder = frontier_phi_24_25_ladder_33_ladder;
            frontier_phi_24_25_ladder_1 = frontier_phi_24_25_ladder_33_ladder_1;
            frontier_phi_24_25_ladder_2 = frontier_phi_24_25_ladder_33_ladder_2;
        }
        _416 = frontier_phi_24_25_ladder;
        _418 = frontier_phi_24_25_ladder_1;
        _419 = frontier_phi_24_25_ladder_2;
    }
    vec4 _442 = texture(sampler2D(M_SCL_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[3u].w));
    float _444 = _442.x;
    float _445 = _442.y;
    float _446 = _442.z;
    float _447 = cbMtdParam._m0[20u].w * cbMtdParam._m0[21u].x;
    float _448 = _447 * _444;
    float _449 = _447 * _445;
    float _450 = _447 * _446;
    float _451 = isnan(_449) ? _448 : (isnan(_448) ? _449 : max(_448, _449));
    float _452 = isnan(_450) ? _451 : (isnan(_451) ? _450 : max(_451, _450));
    float _472;
    float _474;
    if (_452 < 1.1920928955078125e-07)
    {
        _472 = 0.0;
        _474 = 0.0;
    }
    else
    {
        float _497 = isnan(_449) ? _448 : (isnan(_448) ? _449 : min(_448, _449));
        float _499 = _452 - (isnan(_450) ? _497 : (isnan(_497) ? _450 : min(_497, _450)));
        float _475 = _499 / _452;
        float frontier_phi_31_32_ladder;
        float frontier_phi_31_32_ladder_1;
        if (_499 < 1.1920928955078125e-07)
        {
            frontier_phi_31_32_ladder = 0.0;
            frontier_phi_31_32_ladder_1 = _475;
        }
        else
        {
            float _1070;
            if (_452 == _448)
            {
                _1070 = ((_447 * (_445 - _446)) / _499) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_54_48_ladder;
                if (_452 == _449)
                {
                    frontier_phi_54_48_ladder = (((_447 * (_446 - _444)) / _499) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_54_48_ladder = (((_447 * (_444 - _445)) / _499) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1070 = frontier_phi_54_48_ladder;
            }
            float _1075 = (_1070 < 0.0) ? (_1070 + 1.0) : _1070;
            frontier_phi_31_32_ladder = _1075 - floor(_1075);
            frontier_phi_31_32_ladder_1 = _475;
        }
        _472 = frontier_phi_31_32_ladder;
        _474 = frontier_phi_31_32_ladder_1;
    }
    float _476 = _474 + cbMtdParam._m0[21u].z;
    float _480 = fract(cbMtdParam._m0[21u].y + _472) * 6.0;
    uint _482 = uint(int(floor(_480)));
    float _484 = _480 - float(int(_482));
    float _486 = (1.0 - _476) * _452;
    float _489 = (1.0 - (_484 * _476)) * _452;
    float _493 = (1.0 - ((1.0 - _484) * _476)) * _452;
    float _508;
    float _510;
    float _511;
    if ((_482 == 0u) || (_482 == 6u))
    {
        _508 = _452;
        _510 = _493;
        _511 = _486;
    }
    else
    {
        float frontier_phi_37_38_ladder;
        float frontier_phi_37_38_ladder_1;
        float frontier_phi_37_38_ladder_2;
        if (_482 == 1u)
        {
            frontier_phi_37_38_ladder = _489;
            frontier_phi_37_38_ladder_1 = _452;
            frontier_phi_37_38_ladder_2 = _486;
        }
        else
        {
            float frontier_phi_37_38_ladder_46_ladder;
            float frontier_phi_37_38_ladder_46_ladder_1;
            float frontier_phi_37_38_ladder_46_ladder_2;
            if (_482 == 2u)
            {
                frontier_phi_37_38_ladder_46_ladder = _486;
                frontier_phi_37_38_ladder_46_ladder_1 = _452;
                frontier_phi_37_38_ladder_46_ladder_2 = _493;
            }
            else
            {
                float frontier_phi_37_38_ladder_46_ladder_53_ladder;
                float frontier_phi_37_38_ladder_46_ladder_53_ladder_1;
                float frontier_phi_37_38_ladder_46_ladder_53_ladder_2;
                if (_482 == 3u)
                {
                    frontier_phi_37_38_ladder_46_ladder_53_ladder = _486;
                    frontier_phi_37_38_ladder_46_ladder_53_ladder_1 = _489;
                    frontier_phi_37_38_ladder_46_ladder_53_ladder_2 = _452;
                }
                else
                {
                    bool _1141 = _482 == 4u;
                    frontier_phi_37_38_ladder_46_ladder_53_ladder = _1141 ? _493 : _452;
                    frontier_phi_37_38_ladder_46_ladder_53_ladder_1 = _486;
                    frontier_phi_37_38_ladder_46_ladder_53_ladder_2 = _1141 ? _452 : _489;
                }
                frontier_phi_37_38_ladder_46_ladder = frontier_phi_37_38_ladder_46_ladder_53_ladder;
                frontier_phi_37_38_ladder_46_ladder_1 = frontier_phi_37_38_ladder_46_ladder_53_ladder_1;
                frontier_phi_37_38_ladder_46_ladder_2 = frontier_phi_37_38_ladder_46_ladder_53_ladder_2;
            }
            frontier_phi_37_38_ladder = frontier_phi_37_38_ladder_46_ladder;
            frontier_phi_37_38_ladder_1 = frontier_phi_37_38_ladder_46_ladder_1;
            frontier_phi_37_38_ladder_2 = frontier_phi_37_38_ladder_46_ladder_2;
        }
        _508 = frontier_phi_37_38_ladder;
        _510 = frontier_phi_37_38_ladder_1;
        _511 = frontier_phi_37_38_ladder_2;
    }
    vec4 _534 = texture(sampler2D(M_SCL_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _564 = texture(sampler2D(M_SCL_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _594 = texture(sampler2D(M_SCL_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _623 = texture(sampler2D(M_SCL_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _653 = texture(sampler2D(M_SCL_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _689 = texture(sampler2D(M_SCL_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _719 = texture(sampler2D(M_SCL_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _735 = (((((((((_286 * cbMtdParam._m0[20u].x) + (_208 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _316.x)) + (_416 * cbMtdParam._m0[18u].y)) + (_508 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].x * cbMtdParam._m0[21u].w) * _534.x)) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[19u].x) * _564.x)) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[18u].z) * _594.x)) + ((cbMtdParam._m0[14u].x * cbMtdParam._m0[18u].w) * _623.x)) + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[22u].x) * _653.x);
    float _746 = (((((((((_288 * cbMtdParam._m0[20u].x) + (_210 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _316.y)) + (_418 * cbMtdParam._m0[18u].y)) + (_510 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].y * cbMtdParam._m0[21u].w) * _534.y)) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[19u].x) * _564.y)) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[18u].z) * _594.y)) + ((cbMtdParam._m0[14u].y * cbMtdParam._m0[18u].w) * _623.y)) + ((cbMtdParam._m0[12u].y * cbMtdParam._m0[22u].x) * _653.y);
    float _757 = (((((((((_289 * cbMtdParam._m0[20u].x) + (_211 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _316.z)) + (_419 * cbMtdParam._m0[18u].y)) + (_511 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].z * cbMtdParam._m0[21u].w) * _534.z)) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[19u].x) * _564.z)) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[18u].z) * _594.z)) + ((cbMtdParam._m0[14u].z * cbMtdParam._m0[18u].w) * _623.z)) + ((cbMtdParam._m0[12u].z * cbMtdParam._m0[22u].x) * _653.z);
    float _1426 = isnan(0.0) ? _137 : (isnan(_137) ? 0.0 : max(_137, 0.0));
    float _776 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _816 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _826 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _816);
    float _827 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _816);
    float _828 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _816);
    vec4 _833 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _835 = _833.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _930 = sqrt(((_826 * _826) + (_827 * _827)) + (_828 * _828));
        float _936 = (cbMatDynParam._m0[5u].x * _930) + cbMatDynParam._m0[5u].y;
        float _1437 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
        float _937 = isnan(1.0) ? _1437 : (isnan(_1437) ? 1.0 : min(_1437, 1.0));
        float _941 = (cbMatDynParam._m0[5u].z * _930) + cbMatDynParam._m0[5u].w;
        float _1448 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1448 : (isnan(_1448) ? 1.0 : min(_1448, 1.0))) - _937)) + _937) < ((_835 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _870 = uint(roundEven(NORMAL.w)) * 13u;
    uint _871 = _870 + 9u;
    uint _872 = _871 + uint(cbMatDynParam._m0[0u].w);
    float _878 = cbInstanceData._m0[_872].x * ((_735 + (_689.x * cbMtdParam._m0[9u].x)) + (_719.x * cbMtdParam._m0[11u].x));
    float _879 = cbInstanceData._m0[_872].y * ((_746 + (_689.y * cbMtdParam._m0[9u].y)) + (_719.y * cbMtdParam._m0[11u].y));
    float _880 = cbInstanceData._m0[_872].z * ((_757 + (_689.z * cbMtdParam._m0[9u].z)) + (_719.z * cbMtdParam._m0[11u].z));
    float _881 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _882 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _883 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _888 = cbInstanceData._m0[_870 + 6u].w * (isnan(1.0) ? _1426 : (isnan(_1426) ? 1.0 : min(_1426, 1.0)));
    float _894 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _895 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _910 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_894, _895, (log2((isnan(cbSceneParam._m0[77u].w) ? _776 : (isnan(_776) ? cbSceneParam._m0[77u].w : min(_776, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _913 = _910.x;
    float _914 = _910.y;
    float _915 = _910.z;
    float _916 = _910.w;
    float _1004;
    float _1006;
    float _1008;
    float _1010;
    if (_776 > cbSceneParam._m0[78u].w)
    {
        float _965 = isnan(_776) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _776 : min(cbSceneParam._m0[80u].w, _776));
        float _966 = _965 / _776;
        float _977 = _966 * _826;
        float _978 = _827 * _966;
        float _979 = (-0.0) - _978;
        float _981 = _966 * _828;
        float _983 = (cbSceneParam._m0[77u].w * _979) / _965;
        float _984 = _983 + cbSceneParam._m0[79u].w;
        float _985 = cbSceneParam._m0[79u].w - _978;
        float _991 = sqrt(((_977 * _977) + (_978 * _978)) + (_981 * _981));
        float _994 = (1.0 - (cbSceneParam._m0[77u].w / _965)) * _991;
        float _1000 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1002 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1142;
        if (abs((_979 - _983) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1142 = ((((_984 > 0.0) ? exp2(_1000 * _984) : (2.0 - exp2(_1002 * _984))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _994;
        }
        else
        {
            float _1097 = 1.0 / cbSceneParam._m0[80u].x;
            float _1098 = isnan(_985) ? _984 : (isnan(_984) ? _985 : max(_984, _985));
            float _1099 = isnan(_985) ? _984 : (isnan(_984) ? _985 : min(_984, _985));
            float _1108 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : min(_1098, 0.0));
            float _1109 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : min(_1099, 0.0));
            _1142 = ((abs(_991 / _979) * cbSceneParam._m0[80u].y) * ((((_1108 - _1109) * 2.0) - ((exp2(_1000 * (isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0)))) - exp2(_1000 * (isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0))))) * _1097)) - ((exp2(_1002 * _1108) - exp2(_1002 * _1109)) * _1097))) + (_994 * cbSceneParam._m0[80u].z);
        }
        vec4 _1144 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_894, _895, 1.0), 0.0);
        float _1153 = exp2((_1142 * (-1.44269502162933349609375)) * (1.0 - _1144.w));
        float _1154 = log2(_1153);
        float _1170 = log2(_916);
        _1004 = (exp2(_1170 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].x)) * _1144.x) / cbSceneParam._m0[78u].x)) + _913;
        _1006 = (exp2(_1170 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].y)) * _1144.y) / cbSceneParam._m0[78u].y)) + _914;
        _1008 = (exp2(_1170 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1154 * cbSceneParam._m0[78u].z)) * _1144.z) / cbSceneParam._m0[78u].z)) + _915;
        _1010 = _1153 * _916;
    }
    else
    {
        _1004 = _913;
        _1006 = _914;
        _1008 = _915;
        _1010 = _916;
    }
    bool _1180;
    vec4 _1020;
    vec4 _1044;
    float _1046;
    float _1051;
    float _1052;
    float _1053;
    float _1054;
    bool _1065;
    for (;;)
    {
        _1020 = cbMatDynParam._m0[0u];
        float _1022 = roundEven(_1020.y);
        bool _1023 = _1022 == 3.0;
        float _1025 = log2(_1010);
        float _1032 = exp2(_1025 * cbSceneParam._m0[78u].x) * _881;
        float _1033 = exp2(_1025 * cbSceneParam._m0[78u].y) * _882;
        float _1034 = exp2(_1025 * cbSceneParam._m0[78u].z) * _883;
        float _1041 = _835 + (-0.5);
        _1044 = cbMtdParam._m0[1u];
        _1046 = _1044.y * _1041;
        float _1050 = (_1022 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1051 = _1050 * (_1023 ? _1032 : (_1032 + (cbSceneParam._m0[72u].w * _1004)));
        _1052 = _1050 * (_1023 ? _1033 : (_1033 + (cbSceneParam._m0[72u].w * _1006)));
        _1053 = _1050 * (_1023 ? _1034 : (_1034 + (cbSceneParam._m0[72u].w * _1008)));
        _1054 = _1041 * 0.999000012874603271484375;
        _1065 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1065)
        {
            if ((cbInstanceData._m0[_870 + 7u].x + _1054) < 0.5)
            {
                _1180 = true;
                break;
            }
        }
        uint _1133 = _871 + uint(_1020.w);
        if ((cbInstanceData._m0[_1133].w < 1.0) && ((cbInstanceData._m0[_1133].w + _1054) < 0.5))
        {
            _1180 = true;
            break;
        }
        if ((_1046 + _156) < _1044.x)
        {
            _1180 = true;
            break;
        }
        _1180 = false;
        break;
    }
    float _1185;
    if (_1180)
    {
        discard_state = true;
        _1185 = 0.0;
    }
    else
    {
        _1185 = _888;
    }
    SV_Target.x = _1051;
    SV_Target.y = _1052;
    SV_Target.z = _1053;
    SV_Target.w = _1185;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _888;
    discard_exit();
}


