#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[25];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SCL_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D M_SCL_snp_0_Texture2D_0;
layout(set = 0, binding = 10) uniform texture2D M_SCL_snp_0_Texture2D_8;
layout(set = 0, binding = 11) uniform texture2D M_SCL_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_SCL_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D M_SCL_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D M_SCL_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D M_SCL_snp_0_Texture2D_3;
layout(set = 0, binding = 6) uniform texture2D M_SCL_snp_0_Texture2D_4;
layout(set = 0, binding = 7) uniform texture2D M_SCL_snp_0_Texture2D_5;
layout(set = 0, binding = 8) uniform texture2D M_SCL_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_SCL_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _128 = cbMtdParam._m0[17u].y * TEXCOORD_1.z;
    vec4 _141 = texture(sampler2D(M_SCL_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _144 = _141.x;
    float _145 = _141.y;
    float _146 = _141.z;
    float _156 = (cbMtdParam._m0[22u].y * _144) * cbMtdParam._m0[22u].z;
    float _158 = (cbMtdParam._m0[22u].y * _145) * cbMtdParam._m0[22u].z;
    float _160 = (cbMtdParam._m0[22u].y * _146) * cbMtdParam._m0[22u].z;
    float _162 = isnan(_158) ? _156 : (isnan(_156) ? _158 : max(_156, _158));
    float _163 = isnan(_160) ? _162 : (isnan(_162) ? _160 : max(_162, _160));
    float _166;
    float _168;
    if (_163 < 1.1920928955078125e-07)
    {
        _166 = 0.0;
        _168 = 0.0;
    }
    else
    {
        float _194 = isnan(_158) ? _156 : (isnan(_156) ? _158 : min(_156, _158));
        float _196 = _163 - (isnan(_160) ? _194 : (isnan(_194) ? _160 : min(_194, _160)));
        float _169 = _196 / _163;
        float frontier_phi_1_2_ladder;
        float frontier_phi_1_2_ladder_1;
        if (_196 < 1.1920928955078125e-07)
        {
            frontier_phi_1_2_ladder = 0.0;
            frontier_phi_1_2_ladder_1 = _169;
        }
        else
        {
            float _350;
            if (_163 == _156)
            {
                _350 = (((cbMtdParam._m0[22u].y * (_145 - _146)) * cbMtdParam._m0[22u].z) / _196) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_15_10_ladder;
                if (_163 == _158)
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[22u].y * (_146 - _144)) * cbMtdParam._m0[22u].z) / _196) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_15_10_ladder = ((((cbMtdParam._m0[22u].y * (_144 - _145)) * cbMtdParam._m0[22u].z) / _196) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _350 = frontier_phi_15_10_ladder;
            }
            float _355 = (_350 < 0.0) ? (_350 + 1.0) : _350;
            frontier_phi_1_2_ladder = _355 - floor(_355);
            frontier_phi_1_2_ladder_1 = _169;
        }
        _166 = frontier_phi_1_2_ladder;
        _168 = frontier_phi_1_2_ladder_1;
    }
    float _170 = _168 + cbMtdParam._m0[23u].x;
    float _174 = fract(cbMtdParam._m0[22u].w + _166) * 6.0;
    uint _177 = uint(int(floor(_174)));
    float _179 = _174 - float(int(_177));
    float _182 = (1.0 - _170) * _163;
    float _185 = (1.0 - (_179 * _170)) * _163;
    float _189 = (1.0 - ((1.0 - _179) * _170)) * _163;
    float _198;
    float _200;
    float _201;
    if ((_177 == 0u) || (_177 == 6u))
    {
        _198 = _163;
        _200 = _189;
        _201 = _182;
    }
    else
    {
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        if (_177 == 1u)
        {
            frontier_phi_3_4_ladder = _185;
            frontier_phi_3_4_ladder_1 = _163;
            frontier_phi_3_4_ladder_2 = _182;
        }
        else
        {
            float frontier_phi_3_4_ladder_8_ladder;
            float frontier_phi_3_4_ladder_8_ladder_1;
            float frontier_phi_3_4_ladder_8_ladder_2;
            if (_177 == 2u)
            {
                frontier_phi_3_4_ladder_8_ladder = _182;
                frontier_phi_3_4_ladder_8_ladder_1 = _163;
                frontier_phi_3_4_ladder_8_ladder_2 = _189;
            }
            else
            {
                float frontier_phi_3_4_ladder_8_ladder_14_ladder;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                float frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
                if (_177 == 3u)
                {
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _182;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _185;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _163;
                }
                else
                {
                    bool _404 = _177 == 4u;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder = _404 ? _189 : _163;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_1 = _182;
                    frontier_phi_3_4_ladder_8_ladder_14_ladder_2 = _404 ? _163 : _185;
                }
                frontier_phi_3_4_ladder_8_ladder = frontier_phi_3_4_ladder_8_ladder_14_ladder;
                frontier_phi_3_4_ladder_8_ladder_1 = frontier_phi_3_4_ladder_8_ladder_14_ladder_1;
                frontier_phi_3_4_ladder_8_ladder_2 = frontier_phi_3_4_ladder_8_ladder_14_ladder_2;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_8_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_8_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_8_ladder_2;
        }
        _198 = frontier_phi_3_4_ladder;
        _200 = frontier_phi_3_4_ladder_1;
        _201 = frontier_phi_3_4_ladder_2;
    }
    vec4 _225 = texture(sampler2D(M_SCL_snp_0_Texture2D_5, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[7u].w));
    float _227 = _225.x;
    float _228 = _225.y;
    float _229 = _225.z;
    float _230 = cbMtdParam._m0[17u].z * cbMtdParam._m0[23u].z;
    float _231 = _230 * _227;
    float _232 = _230 * _228;
    float _233 = _230 * _229;
    float _234 = isnan(_232) ? _231 : (isnan(_231) ? _232 : max(_231, _232));
    float _235 = isnan(_233) ? _234 : (isnan(_234) ? _233 : max(_234, _233));
    float _239;
    float _241;
    if (_235 < 1.1920928955078125e-07)
    {
        _239 = 0.0;
        _241 = 0.0;
    }
    else
    {
        float _264 = isnan(_232) ? _231 : (isnan(_231) ? _232 : min(_231, _232));
        float _266 = _235 - (isnan(_233) ? _264 : (isnan(_264) ? _233 : min(_264, _233)));
        float _242 = _266 / _235;
        float frontier_phi_6_7_ladder;
        float frontier_phi_6_7_ladder_1;
        if (_266 < 1.1920928955078125e-07)
        {
            frontier_phi_6_7_ladder = 0.0;
            frontier_phi_6_7_ladder_1 = _242;
        }
        else
        {
            float _447;
            if (_235 == _231)
            {
                _447 = ((_230 * (_228 - _229)) / _266) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_28_22_ladder;
                if (_235 == _232)
                {
                    frontier_phi_28_22_ladder = (((_230 * (_229 - _227)) / _266) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_28_22_ladder = (((_230 * (_227 - _228)) / _266) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _447 = frontier_phi_28_22_ladder;
            }
            float _452 = (_447 < 0.0) ? (_447 + 1.0) : _447;
            frontier_phi_6_7_ladder = _452 - floor(_452);
            frontier_phi_6_7_ladder_1 = _242;
        }
        _239 = frontier_phi_6_7_ladder;
        _241 = frontier_phi_6_7_ladder_1;
    }
    float _243 = _241 + cbMtdParam._m0[23u].y;
    float _247 = fract(cbMtdParam._m0[17u].w + _239) * 6.0;
    uint _249 = uint(int(floor(_247)));
    float _251 = _247 - float(int(_249));
    float _253 = (1.0 - _243) * _235;
    float _256 = (1.0 - (_251 * _243)) * _235;
    float _260 = (1.0 - ((1.0 - _251) * _243)) * _235;
    float _276;
    float _278;
    float _279;
    if ((_249 == 0u) || (_249 == 6u))
    {
        _276 = _235;
        _278 = _260;
        _279 = _253;
    }
    else
    {
        float frontier_phi_11_12_ladder;
        float frontier_phi_11_12_ladder_1;
        float frontier_phi_11_12_ladder_2;
        if (_249 == 1u)
        {
            frontier_phi_11_12_ladder = _256;
            frontier_phi_11_12_ladder_1 = _235;
            frontier_phi_11_12_ladder_2 = _253;
        }
        else
        {
            float frontier_phi_11_12_ladder_20_ladder;
            float frontier_phi_11_12_ladder_20_ladder_1;
            float frontier_phi_11_12_ladder_20_ladder_2;
            if (_249 == 2u)
            {
                frontier_phi_11_12_ladder_20_ladder = _253;
                frontier_phi_11_12_ladder_20_ladder_1 = _235;
                frontier_phi_11_12_ladder_20_ladder_2 = _260;
            }
            else
            {
                float frontier_phi_11_12_ladder_20_ladder_27_ladder;
                float frontier_phi_11_12_ladder_20_ladder_27_ladder_1;
                float frontier_phi_11_12_ladder_20_ladder_27_ladder_2;
                if (_249 == 3u)
                {
                    frontier_phi_11_12_ladder_20_ladder_27_ladder = _253;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_1 = _256;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_2 = _235;
                }
                else
                {
                    bool _497 = _249 == 4u;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder = _497 ? _260 : _235;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_1 = _253;
                    frontier_phi_11_12_ladder_20_ladder_27_ladder_2 = _497 ? _235 : _256;
                }
                frontier_phi_11_12_ladder_20_ladder = frontier_phi_11_12_ladder_20_ladder_27_ladder;
                frontier_phi_11_12_ladder_20_ladder_1 = frontier_phi_11_12_ladder_20_ladder_27_ladder_1;
                frontier_phi_11_12_ladder_20_ladder_2 = frontier_phi_11_12_ladder_20_ladder_27_ladder_2;
            }
            frontier_phi_11_12_ladder = frontier_phi_11_12_ladder_20_ladder;
            frontier_phi_11_12_ladder_1 = frontier_phi_11_12_ladder_20_ladder_1;
            frontier_phi_11_12_ladder_2 = frontier_phi_11_12_ladder_20_ladder_2;
        }
        _276 = frontier_phi_11_12_ladder;
        _278 = frontier_phi_11_12_ladder_1;
        _279 = frontier_phi_11_12_ladder_2;
    }
    vec4 _306 = texture(sampler2D(M_SCL_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _335 = texture(sampler2D(M_SCL_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[6u].w));
    float _337 = _335.x;
    float _338 = _335.y;
    float _339 = _335.z;
    float _340 = cbMtdParam._m0[20u].y * cbMtdParam._m0[20u].z;
    float _341 = _340 * _337;
    float _342 = _340 * _338;
    float _343 = _340 * _339;
    float _344 = isnan(_342) ? _341 : (isnan(_341) ? _342 : max(_341, _342));
    float _345 = isnan(_343) ? _344 : (isnan(_344) ? _343 : max(_344, _343));
    float _369;
    float _371;
    if (_345 < 1.1920928955078125e-07)
    {
        _369 = 0.0;
        _371 = 0.0;
    }
    else
    {
        float _394 = isnan(_342) ? _341 : (isnan(_341) ? _342 : min(_341, _342));
        float _396 = _345 - (isnan(_343) ? _394 : (isnan(_394) ? _343 : min(_394, _343)));
        float _372 = _396 / _345;
        float frontier_phi_18_19_ladder;
        float frontier_phi_18_19_ladder_1;
        if (_396 < 1.1920928955078125e-07)
        {
            frontier_phi_18_19_ladder = 0.0;
            frontier_phi_18_19_ladder_1 = _372;
        }
        else
        {
            float _855;
            if (_345 == _341)
            {
                _855 = ((_340 * (_338 - _339)) / _396) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_41_35_ladder;
                if (_345 == _342)
                {
                    frontier_phi_41_35_ladder = (((_340 * (_339 - _337)) / _396) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_41_35_ladder = (((_340 * (_337 - _338)) / _396) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _855 = frontier_phi_41_35_ladder;
            }
            float _860 = (_855 < 0.0) ? (_855 + 1.0) : _855;
            frontier_phi_18_19_ladder = _860 - floor(_860);
            frontier_phi_18_19_ladder_1 = _372;
        }
        _369 = frontier_phi_18_19_ladder;
        _371 = frontier_phi_18_19_ladder_1;
    }
    float _373 = _371 + cbMtdParam._m0[19u].z;
    float _377 = fract(cbMtdParam._m0[19u].w + _369) * 6.0;
    uint _379 = uint(int(floor(_377)));
    float _381 = _377 - float(int(_379));
    float _383 = (1.0 - _373) * _345;
    float _386 = (1.0 - (_381 * _373)) * _345;
    float _390 = (1.0 - ((1.0 - _381) * _373)) * _345;
    float _406;
    float _408;
    float _409;
    if ((_379 == 0u) || (_379 == 6u))
    {
        _406 = _345;
        _408 = _390;
        _409 = _383;
    }
    else
    {
        float frontier_phi_24_25_ladder;
        float frontier_phi_24_25_ladder_1;
        float frontier_phi_24_25_ladder_2;
        if (_379 == 1u)
        {
            frontier_phi_24_25_ladder = _386;
            frontier_phi_24_25_ladder_1 = _345;
            frontier_phi_24_25_ladder_2 = _383;
        }
        else
        {
            float frontier_phi_24_25_ladder_33_ladder;
            float frontier_phi_24_25_ladder_33_ladder_1;
            float frontier_phi_24_25_ladder_33_ladder_2;
            if (_379 == 2u)
            {
                frontier_phi_24_25_ladder_33_ladder = _383;
                frontier_phi_24_25_ladder_33_ladder_1 = _345;
                frontier_phi_24_25_ladder_33_ladder_2 = _390;
            }
            else
            {
                float frontier_phi_24_25_ladder_33_ladder_40_ladder;
                float frontier_phi_24_25_ladder_33_ladder_40_ladder_1;
                float frontier_phi_24_25_ladder_33_ladder_40_ladder_2;
                if (_379 == 3u)
                {
                    frontier_phi_24_25_ladder_33_ladder_40_ladder = _383;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_1 = _386;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_2 = _345;
                }
                else
                {
                    bool _1004 = _379 == 4u;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder = _1004 ? _390 : _345;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_1 = _383;
                    frontier_phi_24_25_ladder_33_ladder_40_ladder_2 = _1004 ? _345 : _386;
                }
                frontier_phi_24_25_ladder_33_ladder = frontier_phi_24_25_ladder_33_ladder_40_ladder;
                frontier_phi_24_25_ladder_33_ladder_1 = frontier_phi_24_25_ladder_33_ladder_40_ladder_1;
                frontier_phi_24_25_ladder_33_ladder_2 = frontier_phi_24_25_ladder_33_ladder_40_ladder_2;
            }
            frontier_phi_24_25_ladder = frontier_phi_24_25_ladder_33_ladder;
            frontier_phi_24_25_ladder_1 = frontier_phi_24_25_ladder_33_ladder_1;
            frontier_phi_24_25_ladder_2 = frontier_phi_24_25_ladder_33_ladder_2;
        }
        _406 = frontier_phi_24_25_ladder;
        _408 = frontier_phi_24_25_ladder_1;
        _409 = frontier_phi_24_25_ladder_2;
    }
    vec4 _432 = texture(sampler2D(M_SCL_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[3u].w));
    float _434 = _432.x;
    float _435 = _432.y;
    float _436 = _432.z;
    float _437 = cbMtdParam._m0[20u].w * cbMtdParam._m0[21u].x;
    float _438 = _437 * _434;
    float _439 = _437 * _435;
    float _440 = _437 * _436;
    float _441 = isnan(_439) ? _438 : (isnan(_438) ? _439 : max(_438, _439));
    float _442 = isnan(_440) ? _441 : (isnan(_441) ? _440 : max(_441, _440));
    float _462;
    float _464;
    if (_442 < 1.1920928955078125e-07)
    {
        _462 = 0.0;
        _464 = 0.0;
    }
    else
    {
        float _487 = isnan(_439) ? _438 : (isnan(_438) ? _439 : min(_438, _439));
        float _489 = _442 - (isnan(_440) ? _487 : (isnan(_487) ? _440 : min(_487, _440)));
        float _465 = _489 / _442;
        float frontier_phi_31_32_ladder;
        float frontier_phi_31_32_ladder_1;
        if (_489 < 1.1920928955078125e-07)
        {
            frontier_phi_31_32_ladder = 0.0;
            frontier_phi_31_32_ladder_1 = _465;
        }
        else
        {
            float _1045;
            if (_442 == _438)
            {
                _1045 = ((_437 * (_435 - _436)) / _489) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_53_48_ladder;
                if (_442 == _439)
                {
                    frontier_phi_53_48_ladder = (((_437 * (_436 - _434)) / _489) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_53_48_ladder = (((_437 * (_434 - _435)) / _489) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1045 = frontier_phi_53_48_ladder;
            }
            float _1050 = (_1045 < 0.0) ? (_1045 + 1.0) : _1045;
            frontier_phi_31_32_ladder = _1050 - floor(_1050);
            frontier_phi_31_32_ladder_1 = _465;
        }
        _462 = frontier_phi_31_32_ladder;
        _464 = frontier_phi_31_32_ladder_1;
    }
    float _466 = _464 + cbMtdParam._m0[21u].z;
    float _470 = fract(cbMtdParam._m0[21u].y + _462) * 6.0;
    uint _472 = uint(int(floor(_470)));
    float _474 = _470 - float(int(_472));
    float _476 = (1.0 - _466) * _442;
    float _479 = (1.0 - (_474 * _466)) * _442;
    float _483 = (1.0 - ((1.0 - _474) * _466)) * _442;
    float _498;
    float _500;
    float _501;
    if ((_472 == 0u) || (_472 == 6u))
    {
        _498 = _442;
        _500 = _483;
        _501 = _476;
    }
    else
    {
        float frontier_phi_37_38_ladder;
        float frontier_phi_37_38_ladder_1;
        float frontier_phi_37_38_ladder_2;
        if (_472 == 1u)
        {
            frontier_phi_37_38_ladder = _479;
            frontier_phi_37_38_ladder_1 = _442;
            frontier_phi_37_38_ladder_2 = _476;
        }
        else
        {
            float frontier_phi_37_38_ladder_46_ladder;
            float frontier_phi_37_38_ladder_46_ladder_1;
            float frontier_phi_37_38_ladder_46_ladder_2;
            if (_472 == 2u)
            {
                frontier_phi_37_38_ladder_46_ladder = _476;
                frontier_phi_37_38_ladder_46_ladder_1 = _442;
                frontier_phi_37_38_ladder_46_ladder_2 = _483;
            }
            else
            {
                float frontier_phi_37_38_ladder_46_ladder_52_ladder;
                float frontier_phi_37_38_ladder_46_ladder_52_ladder_1;
                float frontier_phi_37_38_ladder_46_ladder_52_ladder_2;
                if (_472 == 3u)
                {
                    frontier_phi_37_38_ladder_46_ladder_52_ladder = _476;
                    frontier_phi_37_38_ladder_46_ladder_52_ladder_1 = _479;
                    frontier_phi_37_38_ladder_46_ladder_52_ladder_2 = _442;
                }
                else
                {
                    bool _1098 = _472 == 4u;
                    frontier_phi_37_38_ladder_46_ladder_52_ladder = _1098 ? _483 : _442;
                    frontier_phi_37_38_ladder_46_ladder_52_ladder_1 = _476;
                    frontier_phi_37_38_ladder_46_ladder_52_ladder_2 = _1098 ? _442 : _479;
                }
                frontier_phi_37_38_ladder_46_ladder = frontier_phi_37_38_ladder_46_ladder_52_ladder;
                frontier_phi_37_38_ladder_46_ladder_1 = frontier_phi_37_38_ladder_46_ladder_52_ladder_1;
                frontier_phi_37_38_ladder_46_ladder_2 = frontier_phi_37_38_ladder_46_ladder_52_ladder_2;
            }
            frontier_phi_37_38_ladder = frontier_phi_37_38_ladder_46_ladder;
            frontier_phi_37_38_ladder_1 = frontier_phi_37_38_ladder_46_ladder_1;
            frontier_phi_37_38_ladder_2 = frontier_phi_37_38_ladder_46_ladder_2;
        }
        _498 = frontier_phi_37_38_ladder;
        _500 = frontier_phi_37_38_ladder_1;
        _501 = frontier_phi_37_38_ladder_2;
    }
    vec4 _524 = texture(sampler2D(M_SCL_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _554 = texture(sampler2D(M_SCL_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[11u].w));
    vec4 _584 = texture(sampler2D(M_SCL_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[9u].w));
    vec4 _613 = texture(sampler2D(M_SCL_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _643 = texture(sampler2D(M_SCL_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _679 = texture(sampler2D(M_SCL_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[23u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _709 = texture(sampler2D(M_SCL_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[24u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[24u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _725 = (((((((((_276 * cbMtdParam._m0[20u].x) + (_198 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].x * cbMtdParam._m0[18u].x) * _306.x)) + (_406 * cbMtdParam._m0[18u].y)) + (_498 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].x * cbMtdParam._m0[21u].w) * _524.x)) + ((cbMtdParam._m0[10u].x * cbMtdParam._m0[19u].x) * _554.x)) + ((cbMtdParam._m0[13u].x * cbMtdParam._m0[18u].z) * _584.x)) + ((cbMtdParam._m0[14u].x * cbMtdParam._m0[18u].w) * _613.x)) + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[22u].x) * _643.x);
    float _736 = (((((((((_278 * cbMtdParam._m0[20u].x) + (_200 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].y * cbMtdParam._m0[18u].x) * _306.y)) + (_408 * cbMtdParam._m0[18u].y)) + (_500 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].y * cbMtdParam._m0[21u].w) * _524.y)) + ((cbMtdParam._m0[10u].y * cbMtdParam._m0[19u].x) * _554.y)) + ((cbMtdParam._m0[13u].y * cbMtdParam._m0[18u].z) * _584.y)) + ((cbMtdParam._m0[14u].y * cbMtdParam._m0[18u].w) * _613.y)) + ((cbMtdParam._m0[12u].y * cbMtdParam._m0[22u].x) * _643.y);
    float _747 = (((((((((_279 * cbMtdParam._m0[20u].x) + (_201 * cbMtdParam._m0[17u].x)) + ((cbMtdParam._m0[15u].z * cbMtdParam._m0[18u].x) * _306.z)) + (_409 * cbMtdParam._m0[18u].y)) + (_501 * cbMtdParam._m0[19u].y)) + ((cbMtdParam._m0[16u].z * cbMtdParam._m0[21u].w) * _524.z)) + ((cbMtdParam._m0[10u].z * cbMtdParam._m0[19u].x) * _554.z)) + ((cbMtdParam._m0[13u].z * cbMtdParam._m0[18u].z) * _584.z)) + ((cbMtdParam._m0[14u].z * cbMtdParam._m0[18u].w) * _613.z)) + ((cbMtdParam._m0[12u].z * cbMtdParam._m0[22u].x) * _643.z);
    float _1306 = isnan(0.0) ? _128 : (isnan(_128) ? 0.0 : max(_128, 0.0));
    float _766 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _782 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _797 = uint(roundEven(NORMAL.w)) * 13u;
    uint _799 = (_797 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _805 = cbInstanceData._m0[_799].x * ((_725 + (_679.x * cbMtdParam._m0[9u].x)) + (_709.x * cbMtdParam._m0[11u].x));
    float _806 = cbInstanceData._m0[_799].y * ((_736 + (_679.y * cbMtdParam._m0[9u].y)) + (_709.y * cbMtdParam._m0[11u].y));
    float _807 = cbInstanceData._m0[_799].z * ((_747 + (_679.z * cbMtdParam._m0[9u].z)) + (_709.z * cbMtdParam._m0[11u].z));
    float _815 = cbInstanceData._m0[_797 + 6u].w * (isnan(1.0) ? _1306 : (isnan(_1306) ? 1.0 : min(_1306, 1.0)));
    float _821 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _822 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _837 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_821, _822, (log2((isnan(cbSceneParam._m0[77u].w) ? _766 : (isnan(_766) ? cbSceneParam._m0[77u].w : min(_766, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _840 = _837.x;
    float _841 = _837.y;
    float _842 = _837.z;
    float _843 = _837.w;
    float _946;
    float _948;
    float _950;
    float _952;
    if (_766 > cbSceneParam._m0[78u].w)
    {
        float _907 = isnan(_766) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _766 : min(cbSceneParam._m0[80u].w, _766));
        float _908 = _907 / _766;
        float _919 = _908 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _782));
        float _920 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _782)) * _908;
        float _921 = (-0.0) - _920;
        float _923 = _908 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _782));
        float _925 = (cbSceneParam._m0[77u].w * _921) / _907;
        float _926 = _925 + cbSceneParam._m0[79u].w;
        float _927 = cbSceneParam._m0[79u].w - _920;
        float _933 = sqrt(((_919 * _919) + (_920 * _920)) + (_923 * _923));
        float _936 = (1.0 - (cbSceneParam._m0[77u].w / _907)) * _933;
        float _942 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _944 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1060;
        if (abs((_921 - _925) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1060 = ((((_926 > 0.0) ? exp2(_942 * _926) : (2.0 - exp2(_944 * _926))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _936;
        }
        else
        {
            float _1017 = 1.0 / cbSceneParam._m0[80u].x;
            float _1018 = isnan(_927) ? _926 : (isnan(_926) ? _927 : max(_926, _927));
            float _1019 = isnan(_927) ? _926 : (isnan(_926) ? _927 : min(_926, _927));
            float _1028 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : min(_1018, 0.0));
            float _1029 = isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : min(_1019, 0.0));
            _1060 = ((abs(_933 / _921) * cbSceneParam._m0[80u].y) * ((((_1028 - _1029) * 2.0) - ((exp2(_942 * (isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0)))) - exp2(_942 * (isnan(0.0) ? _1019 : (isnan(_1019) ? 0.0 : max(_1019, 0.0))))) * _1017)) - ((exp2(_944 * _1028) - exp2(_944 * _1029)) * _1017))) + (_936 * cbSceneParam._m0[80u].z);
        }
        vec4 _1062 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_821, _822, 1.0), 0.0);
        float _1071 = exp2((_1060 * (-1.44269502162933349609375)) * (1.0 - _1062.w));
        float _1072 = log2(_1071);
        float _1088 = log2(_843);
        _946 = (exp2(_1088 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1072 * cbSceneParam._m0[78u].x)) * _1062.x) / cbSceneParam._m0[78u].x)) + _840;
        _948 = (exp2(_1088 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1072 * cbSceneParam._m0[78u].y)) * _1062.y) / cbSceneParam._m0[78u].y)) + _841;
        _950 = (exp2(_1088 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1072 * cbSceneParam._m0[78u].z)) * _1062.z) / cbSceneParam._m0[78u].z)) + _842;
        _952 = _1071 * _843;
    }
    else
    {
        _946 = _840;
        _948 = _841;
        _950 = _842;
        _952 = _843;
    }
    float _964 = roundEven(cbMatDynParam._m0[0u].y);
    bool _965 = _964 == 3.0;
    float _967 = log2(_952);
    float _974 = exp2(_967 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _805 : (isnan(_805) ? 0.0 : max(_805, 0.0)));
    float _975 = exp2(_967 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0)));
    float _976 = exp2(_967 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0)));
    float _986 = (_964 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _986 * (_965 ? _974 : (_974 + (cbSceneParam._m0[72u].w * _946)));
    SV_Target.y = _986 * (_965 ? _975 : (_975 + (cbSceneParam._m0[72u].w * _948)));
    SV_Target.z = _986 * (_965 ? _976 : (_976 + (cbSceneParam._m0[72u].w * _950)));
    SV_Target.w = _815;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _815;
}


