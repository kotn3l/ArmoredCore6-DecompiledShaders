#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 7, component = 3) out float TEXCOORD_11;
layout(location = 8) out float TEXCOORD_12;
layout(location = 8, component = 1) out float TEXCOORD_13;
layout(location = 8, component = 2) out float TEXCOORD_14;
layout(location = 8, component = 3) out float TEXCOORD_15;
layout(location = 9) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _239 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _263 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _275 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _277 = texelFetch(g_InstanceIndexBuffer, int(_275));
    uint _278 = _277.x;
    precise float _279 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _284 = isnan(_279) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _279 : max(0.001000000047497451305389404296875, _279));
    precise float _286 = BLENDWEIGHT.x / _284;
    precise float _287 = BLENDWEIGHT.y / _284;
    precise float _288 = BLENDWEIGHT.z / _284;
    precise float _289 = BLENDWEIGHT.w / _284;
    uint _291 = _278 * 13u;
    uvec4 _296 = floatBitsToUint(cbInstanceData._m0[_291 + 4u]);
    uint _297 = _296.x;
    uint _299 = (_297 + uint(float(BLENDINDICES.x))) * 3u;
    uint _306 = _299 + 1u;
    uint _313 = _299 + 2u;
    precise float _320 = _286 * cbObjMatrix._m0[_299].x;
    precise float _321 = _286 * cbObjMatrix._m0[_306].x;
    precise float _322 = _286 * cbObjMatrix._m0[_313].x;
    precise float _323 = _286 * cbObjMatrix._m0[_299].y;
    precise float _324 = _286 * cbObjMatrix._m0[_306].y;
    precise float _325 = _286 * cbObjMatrix._m0[_313].y;
    precise float _326 = _286 * cbObjMatrix._m0[_299].z;
    precise float _327 = _286 * cbObjMatrix._m0[_306].z;
    precise float _328 = _286 * cbObjMatrix._m0[_313].z;
    precise float _329 = _286 * cbObjMatrix._m0[_299].w;
    precise float _330 = _286 * cbObjMatrix._m0[_306].w;
    precise float _331 = _286 * cbObjMatrix._m0[_313].w;
    uint _334 = (_297 + uint(float(BLENDINDICES.y))) * 3u;
    uint _341 = _334 + 1u;
    uint _348 = _334 + 2u;
    precise float _355 = _287 * cbObjMatrix._m0[_334].x;
    precise float _356 = _287 * cbObjMatrix._m0[_341].x;
    precise float _357 = _287 * cbObjMatrix._m0[_348].x;
    precise float _358 = _287 * cbObjMatrix._m0[_334].y;
    precise float _359 = _287 * cbObjMatrix._m0[_341].y;
    precise float _360 = _287 * cbObjMatrix._m0[_348].y;
    precise float _361 = _287 * cbObjMatrix._m0[_334].z;
    precise float _362 = _287 * cbObjMatrix._m0[_341].z;
    precise float _363 = _287 * cbObjMatrix._m0[_348].z;
    precise float _364 = _287 * cbObjMatrix._m0[_334].w;
    precise float _365 = _287 * cbObjMatrix._m0[_341].w;
    precise float _366 = _287 * cbObjMatrix._m0[_348].w;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    uint _381 = (_297 + uint(float(BLENDINDICES.z))) * 3u;
    uint _388 = _381 + 1u;
    uint _395 = _381 + 2u;
    precise float _402 = _288 * cbObjMatrix._m0[_381].x;
    precise float _403 = _288 * cbObjMatrix._m0[_388].x;
    precise float _404 = _288 * cbObjMatrix._m0[_395].x;
    precise float _405 = _288 * cbObjMatrix._m0[_381].y;
    precise float _406 = _288 * cbObjMatrix._m0[_388].y;
    precise float _407 = _288 * cbObjMatrix._m0[_395].y;
    precise float _408 = _288 * cbObjMatrix._m0[_381].z;
    precise float _409 = _288 * cbObjMatrix._m0[_388].z;
    precise float _410 = _288 * cbObjMatrix._m0[_395].z;
    precise float _411 = _288 * cbObjMatrix._m0[_381].w;
    precise float _412 = _288 * cbObjMatrix._m0[_388].w;
    precise float _413 = _288 * cbObjMatrix._m0[_395].w;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    uint _428 = (_297 + uint(float(BLENDINDICES.w))) * 3u;
    uint _435 = _428 + 1u;
    uint _442 = _428 + 2u;
    precise float _449 = _289 * cbObjMatrix._m0[_428].x;
    precise float _450 = _289 * cbObjMatrix._m0[_435].x;
    precise float _451 = _289 * cbObjMatrix._m0[_442].x;
    precise float _452 = _289 * cbObjMatrix._m0[_428].y;
    precise float _453 = _289 * cbObjMatrix._m0[_435].y;
    precise float _454 = _289 * cbObjMatrix._m0[_442].y;
    precise float _455 = _289 * cbObjMatrix._m0[_428].z;
    precise float _456 = _289 * cbObjMatrix._m0[_435].z;
    precise float _457 = _289 * cbObjMatrix._m0[_442].z;
    precise float _458 = _289 * cbObjMatrix._m0[_428].w;
    precise float _459 = _289 * cbObjMatrix._m0[_435].w;
    precise float _460 = _289 * cbObjMatrix._m0[_442].w;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = POSITION.x * _461;
    precise float _474 = POSITION.y * _464;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.z * _467;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * _470;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.x * _462;
    precise float _481 = POSITION.y * _465;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.z * _468;
    precise float _484 = _483 + _482;
    precise float _485 = 1.0 * _471;
    precise float _486 = _485 + _484;
    precise float _487 = POSITION.x * _463;
    precise float _488 = POSITION.y * _466;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.z * _469;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * _472;
    precise float _493 = _492 + _491;
    precise float _527 = _479 - cbSceneParam._m0[3u].x;
    precise float _528 = _486 - cbSceneParam._m0[3u].y;
    precise float _529 = _493 - cbSceneParam._m0[3u].z;
    precise float _557 = _527 * cbSceneParam._m0[24u].x;
    precise float _558 = _528 * cbSceneParam._m0[24u].y;
    precise float _559 = _558 + _557;
    precise float _560 = _529 * cbSceneParam._m0[24u].z;
    precise float _561 = _560 + _559;
    precise float _562 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _563 = _562 + _561;
    precise float _564 = _527 * cbSceneParam._m0[25u].x;
    precise float _565 = _528 * cbSceneParam._m0[25u].y;
    precise float _566 = _565 + _564;
    precise float _567 = _529 * cbSceneParam._m0[25u].z;
    precise float _568 = _567 + _566;
    precise float _569 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _570 = _569 + _568;
    precise float _571 = _527 * cbSceneParam._m0[26u].x;
    precise float _572 = _528 * cbSceneParam._m0[26u].y;
    precise float _573 = _572 + _571;
    precise float _574 = _529 * cbSceneParam._m0[26u].z;
    precise float _575 = _574 + _573;
    precise float _576 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _577 = _576 + _575;
    precise float _578 = _527 * cbSceneParam._m0[27u].x;
    precise float _579 = _528 * cbSceneParam._m0[27u].y;
    precise float _580 = _579 + _578;
    precise float _581 = _529 * cbSceneParam._m0[27u].z;
    precise float _582 = _581 + _580;
    precise float _583 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _584 = _583 + _582;
    gl_Position.x = _563;
    gl_Position.y = _570;
    gl_Position.z = _577;
    gl_Position.w = _584;
    POSITION_1.x = _563;
    POSITION_1.y = _570;
    POSITION_1.z = _577;
    POSITION_1.w = _584;
    NORMAL_1.x = fma(_242, _467, fma(_241, _464, _461 * _239));
    NORMAL_1.y = fma(_242, _468, fma(_241, _465, _462 * _239));
    NORMAL_1.z = fma(_242, _469, fma(_241, _466, _463 * _239));
    NORMAL_1.w = float(_278);
    TANGENT_1.x = fma(_253, _467, fma(_252, _464, _461 * _251));
    TANGENT_1.y = fma(_253, _468, fma(_252, _465, _462 * _251));
    TANGENT_1.z = fma(_253, _469, fma(_252, _466, _463 * _251));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_265, _467, fma(_264, _464, _461 * _263));
    TANGENT_2_1.y = fma(_265, _468, fma(_264, _465, _462 * _263));
    TANGENT_2_1.z = fma(_265, _469, fma(_264, _466, _463 * _263));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    gl_ClipDistance[0u] = dot(vec4(_563, _570, _577, _584), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_563, _570, _577, _584), vec4(cbInstanceData._m0[_291 + 3u]));
}


