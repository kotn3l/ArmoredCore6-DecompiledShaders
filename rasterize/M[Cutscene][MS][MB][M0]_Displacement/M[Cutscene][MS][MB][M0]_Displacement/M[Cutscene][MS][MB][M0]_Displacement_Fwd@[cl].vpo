#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_3;
layout(location = 7) in vec4 TEXCOORD_4;
layout(location = 8) in vec4 TEXCOORD_5;
layout(location = 9) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 7, component = 3) out float TEXCOORD_11;
layout(location = 8) out float TEXCOORD_12;
layout(location = 8, component = 1) out float TEXCOORD_13;
layout(location = 8, component = 2) out float TEXCOORD_14;
layout(location = 8, component = 3) out float TEXCOORD_15;
layout(location = 9) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    float _218 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _221 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _251 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _253 = texelFetch(g_InstanceIndexBuffer, int(_251));
    uint _254 = _253.x;
    uint _264 = (floatBitsToUint(cbInstanceData._m0[(_254 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _271 = _264 + 1u;
    uint _278 = _264 + 2u;
    precise float _285 = POSITION.x * cbObjMatrix._m0[_264].x;
    precise float _286 = POSITION.y * cbObjMatrix._m0[_264].y;
    precise float _287 = _286 + _285;
    precise float _288 = POSITION.z * cbObjMatrix._m0[_264].z;
    precise float _289 = _288 + _287;
    precise float _290 = 1.0 * cbObjMatrix._m0[_264].w;
    precise float _292 = _290 + _289;
    precise float _293 = POSITION.x * cbObjMatrix._m0[_271].x;
    precise float _294 = POSITION.y * cbObjMatrix._m0[_271].y;
    precise float _295 = _294 + _293;
    precise float _296 = POSITION.z * cbObjMatrix._m0[_271].z;
    precise float _297 = _296 + _295;
    precise float _298 = 1.0 * cbObjMatrix._m0[_271].w;
    precise float _299 = _298 + _297;
    precise float _300 = POSITION.x * cbObjMatrix._m0[_278].x;
    precise float _301 = POSITION.y * cbObjMatrix._m0[_278].y;
    precise float _302 = _301 + _300;
    precise float _303 = POSITION.z * cbObjMatrix._m0[_278].z;
    precise float _304 = _303 + _302;
    precise float _305 = 1.0 * cbObjMatrix._m0[_278].w;
    precise float _306 = _305 + _304;
    precise float _341 = _292 - cbSceneParam._m0[3u].x;
    precise float _342 = _299 - cbSceneParam._m0[3u].y;
    precise float _343 = _306 - cbSceneParam._m0[3u].z;
    precise float _371 = _341 * cbSceneParam._m0[24u].x;
    precise float _372 = _342 * cbSceneParam._m0[24u].y;
    precise float _373 = _372 + _371;
    precise float _374 = _343 * cbSceneParam._m0[24u].z;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _377 = _376 + _375;
    precise float _378 = _341 * cbSceneParam._m0[25u].x;
    precise float _379 = _342 * cbSceneParam._m0[25u].y;
    precise float _380 = _379 + _378;
    precise float _381 = _343 * cbSceneParam._m0[25u].z;
    precise float _382 = _381 + _380;
    precise float _383 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _384 = _383 + _382;
    precise float _385 = _341 * cbSceneParam._m0[26u].x;
    precise float _386 = _342 * cbSceneParam._m0[26u].y;
    precise float _387 = _386 + _385;
    precise float _388 = _343 * cbSceneParam._m0[26u].z;
    precise float _389 = _388 + _387;
    precise float _390 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _391 = _390 + _389;
    precise float _392 = _341 * cbSceneParam._m0[27u].x;
    precise float _393 = _342 * cbSceneParam._m0[27u].y;
    precise float _394 = _393 + _392;
    precise float _395 = _343 * cbSceneParam._m0[27u].z;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _398 = _397 + _396;
    gl_Position.x = _377;
    gl_Position.y = _384;
    gl_Position.z = _391;
    gl_Position.w = _398;
    POSITION_1.x = _377;
    POSITION_1.y = _384;
    POSITION_1.z = _391;
    POSITION_1.w = _398;
    NORMAL_1.x = fma(_221, cbObjMatrix._m0[_264].z, fma(_220, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _218));
    NORMAL_1.y = fma(_221, cbObjMatrix._m0[_271].z, fma(_220, cbObjMatrix._m0[_271].y, cbObjMatrix._m0[_271].x * _218));
    NORMAL_1.z = fma(_221, cbObjMatrix._m0[_278].z, fma(_220, cbObjMatrix._m0[_278].y, cbObjMatrix._m0[_278].x * _218));
    NORMAL_1.w = float(_254);
    TANGENT_1.x = fma(_233, cbObjMatrix._m0[_264].z, fma(_232, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _231));
    TANGENT_1.y = fma(_233, cbObjMatrix._m0[_271].z, fma(_232, cbObjMatrix._m0[_271].y, cbObjMatrix._m0[_271].x * _231));
    TANGENT_1.z = fma(_233, cbObjMatrix._m0[_278].z, fma(_232, cbObjMatrix._m0[_278].y, cbObjMatrix._m0[_278].x * _231));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_245, cbObjMatrix._m0[_264].z, fma(_244, cbObjMatrix._m0[_264].y, cbObjMatrix._m0[_264].x * _243));
    TANGENT_2_1.y = fma(_245, cbObjMatrix._m0[_271].z, fma(_244, cbObjMatrix._m0[_271].y, cbObjMatrix._m0[_271].x * _243));
    TANGENT_2_1.z = fma(_245, cbObjMatrix._m0[_278].z, fma(_244, cbObjMatrix._m0[_278].y, cbObjMatrix._m0[_278].x * _243));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
}


