#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5_1;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 6, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;
layout(location = 7, component = 1) out float TEXCOORD_13;
layout(location = 7, component = 2) out float TEXCOORD_14;
layout(location = 7, component = 3) out float TEXCOORD_15;
layout(location = 8) out float TEXCOORD_16;
layout(location = 8, component = 1) out float TEXCOORD_25;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_25 = 0.0;
    float _230 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _266 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _268 = texelFetch(g_InstanceIndexBuffer, int(_266));
    uint _269 = _268.x;
    precise float _270 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _275 = isnan(_270) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _270 : max(0.001000000047497451305389404296875, _270));
    precise float _277 = BLENDWEIGHT.x / _275;
    precise float _278 = BLENDWEIGHT.y / _275;
    precise float _279 = BLENDWEIGHT.z / _275;
    precise float _280 = BLENDWEIGHT.w / _275;
    uvec4 _287 = floatBitsToUint(cbInstanceData._m0[(_269 * 13u) + 4u]);
    uint _288 = _287.x;
    uint _290 = (_288 + uint(float(BLENDINDICES.x))) * 3u;
    uint _297 = _290 + 1u;
    uint _304 = _290 + 2u;
    precise float _311 = _277 * cbObjMatrix._m0[_290].x;
    precise float _312 = _277 * cbObjMatrix._m0[_297].x;
    precise float _313 = _277 * cbObjMatrix._m0[_304].x;
    precise float _314 = _277 * cbObjMatrix._m0[_290].y;
    precise float _315 = _277 * cbObjMatrix._m0[_297].y;
    precise float _316 = _277 * cbObjMatrix._m0[_304].y;
    precise float _317 = _277 * cbObjMatrix._m0[_290].z;
    precise float _318 = _277 * cbObjMatrix._m0[_297].z;
    precise float _319 = _277 * cbObjMatrix._m0[_304].z;
    precise float _320 = _277 * cbObjMatrix._m0[_290].w;
    precise float _321 = _277 * cbObjMatrix._m0[_297].w;
    precise float _322 = _277 * cbObjMatrix._m0[_304].w;
    uint _325 = (_288 + uint(float(BLENDINDICES.y))) * 3u;
    uint _332 = _325 + 1u;
    uint _339 = _325 + 2u;
    precise float _346 = _278 * cbObjMatrix._m0[_325].x;
    precise float _347 = _278 * cbObjMatrix._m0[_332].x;
    precise float _348 = _278 * cbObjMatrix._m0[_339].x;
    precise float _349 = _278 * cbObjMatrix._m0[_325].y;
    precise float _350 = _278 * cbObjMatrix._m0[_332].y;
    precise float _351 = _278 * cbObjMatrix._m0[_339].y;
    precise float _352 = _278 * cbObjMatrix._m0[_325].z;
    precise float _353 = _278 * cbObjMatrix._m0[_332].z;
    precise float _354 = _278 * cbObjMatrix._m0[_339].z;
    precise float _355 = _278 * cbObjMatrix._m0[_325].w;
    precise float _356 = _278 * cbObjMatrix._m0[_332].w;
    precise float _357 = _278 * cbObjMatrix._m0[_339].w;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    uint _372 = (_288 + uint(float(BLENDINDICES.z))) * 3u;
    uint _379 = _372 + 1u;
    uint _386 = _372 + 2u;
    precise float _393 = _279 * cbObjMatrix._m0[_372].x;
    precise float _394 = _279 * cbObjMatrix._m0[_379].x;
    precise float _395 = _279 * cbObjMatrix._m0[_386].x;
    precise float _396 = _279 * cbObjMatrix._m0[_372].y;
    precise float _397 = _279 * cbObjMatrix._m0[_379].y;
    precise float _398 = _279 * cbObjMatrix._m0[_386].y;
    precise float _399 = _279 * cbObjMatrix._m0[_372].z;
    precise float _400 = _279 * cbObjMatrix._m0[_379].z;
    precise float _401 = _279 * cbObjMatrix._m0[_386].z;
    precise float _402 = _279 * cbObjMatrix._m0[_372].w;
    precise float _403 = _279 * cbObjMatrix._m0[_379].w;
    precise float _404 = _279 * cbObjMatrix._m0[_386].w;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    uint _419 = (_288 + uint(float(BLENDINDICES.w))) * 3u;
    uint _426 = _419 + 1u;
    uint _433 = _419 + 2u;
    precise float _440 = _280 * cbObjMatrix._m0[_419].x;
    precise float _441 = _280 * cbObjMatrix._m0[_426].x;
    precise float _442 = _280 * cbObjMatrix._m0[_433].x;
    precise float _443 = _280 * cbObjMatrix._m0[_419].y;
    precise float _444 = _280 * cbObjMatrix._m0[_426].y;
    precise float _445 = _280 * cbObjMatrix._m0[_433].y;
    precise float _446 = _280 * cbObjMatrix._m0[_419].z;
    precise float _447 = _280 * cbObjMatrix._m0[_426].z;
    precise float _448 = _280 * cbObjMatrix._m0[_433].z;
    precise float _449 = _280 * cbObjMatrix._m0[_419].w;
    precise float _450 = _280 * cbObjMatrix._m0[_426].w;
    precise float _451 = _280 * cbObjMatrix._m0[_433].w;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = POSITION.x * _452;
    precise float _465 = POSITION.y * _455;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.z * _458;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * _461;
    precise float _470 = _469 + _468;
    precise float _471 = POSITION.x * _453;
    precise float _472 = POSITION.y * _456;
    precise float _473 = _472 + _471;
    precise float _474 = POSITION.z * _459;
    precise float _475 = _474 + _473;
    precise float _476 = 1.0 * _462;
    precise float _477 = _476 + _475;
    precise float _478 = POSITION.x * _454;
    precise float _479 = POSITION.y * _457;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.z * _460;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * _463;
    precise float _484 = _483 + _482;
    float _490 = cbSceneParam._m0[3u].x - _470;
    float _491 = cbSceneParam._m0[3u].y - _477;
    float _492 = cbSceneParam._m0[3u].z - _484;
    precise float _527 = _470 - cbSceneParam._m0[3u].x;
    precise float _528 = _477 - cbSceneParam._m0[3u].y;
    precise float _529 = _484 - cbSceneParam._m0[3u].z;
    precise float _557 = _527 * cbSceneParam._m0[24u].x;
    precise float _558 = _528 * cbSceneParam._m0[24u].y;
    precise float _559 = _558 + _557;
    precise float _560 = _529 * cbSceneParam._m0[24u].z;
    precise float _561 = _560 + _559;
    precise float _562 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _563 = _562 + _561;
    precise float _564 = _527 * cbSceneParam._m0[25u].x;
    precise float _565 = _528 * cbSceneParam._m0[25u].y;
    precise float _566 = _565 + _564;
    precise float _567 = _529 * cbSceneParam._m0[25u].z;
    precise float _568 = _567 + _566;
    precise float _569 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _570 = _569 + _568;
    precise float _571 = _527 * cbSceneParam._m0[26u].x;
    precise float _572 = _528 * cbSceneParam._m0[26u].y;
    precise float _573 = _572 + _571;
    precise float _574 = _529 * cbSceneParam._m0[26u].z;
    precise float _575 = _574 + _573;
    precise float _576 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _577 = _576 + _575;
    precise float _578 = _527 * cbSceneParam._m0[27u].x;
    precise float _579 = _528 * cbSceneParam._m0[27u].y;
    precise float _580 = _579 + _578;
    precise float _581 = _529 * cbSceneParam._m0[27u].z;
    precise float _582 = _581 + _580;
    precise float _583 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _584 = _583 + _582;
    gl_Position.x = _563;
    gl_Position.y = _570;
    gl_Position.z = _577;
    gl_Position.w = _584;
    NORMAL_1.x = fma(_233, _458, fma(_232, _455, _452 * _230));
    NORMAL_1.y = fma(_233, _459, fma(_232, _456, _453 * _230));
    NORMAL_1.z = fma(_233, _460, fma(_232, _457, _454 * _230));
    NORMAL_1.w = float(_269);
    TANGENT_1.x = fma(_244, _458, fma(_243, _455, _452 * _242));
    TANGENT_1.y = fma(_244, _459, fma(_243, _456, _453 * _242));
    TANGENT_1.z = fma(_244, _460, fma(_243, _457, _454 * _242));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_256, _458, fma(_255, _455, _452 * _254));
    TANGENT_2_1.y = fma(_256, _459, fma(_255, _456, _453 * _254));
    TANGENT_2_1.z = fma(_256, _460, fma(_255, _457, _454 * _254));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    TEXCOORD_25 = sqrt(((_490 * _490) + (_491 * _491)) + (_492 * _492));
}


