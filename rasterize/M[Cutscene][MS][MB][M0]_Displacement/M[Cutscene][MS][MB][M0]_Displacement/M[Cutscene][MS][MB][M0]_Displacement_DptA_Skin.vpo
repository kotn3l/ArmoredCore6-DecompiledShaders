#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5_1;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 6, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;
layout(location = 7, component = 1) out float TEXCOORD_13;
layout(location = 7, component = 2) out float TEXCOORD_14;
layout(location = 7, component = 3) out float TEXCOORD_15;
layout(location = 8) out float TEXCOORD_16;
layout(location = 8, component = 1) out vec2 TEXCOORD_18;
layout(location = 8, component = 3) out float TEXCOORD_25;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_18.x = 0.0;
    TEXCOORD_18.y = 0.0;
    TEXCOORD_25 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _240 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _253 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _266 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _276 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _278 = texelFetch(g_InstanceIndexBuffer, int(_276));
    uint _279 = _278.x;
    precise float _280 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _285 = isnan(_280) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _280 : max(0.001000000047497451305389404296875, _280));
    precise float _287 = BLENDWEIGHT.x / _285;
    precise float _288 = BLENDWEIGHT.y / _285;
    precise float _289 = BLENDWEIGHT.z / _285;
    precise float _290 = BLENDWEIGHT.w / _285;
    uint _292 = _279 * 13u;
    uvec4 _297 = floatBitsToUint(cbInstanceData._m0[_292 + 4u]);
    uint _298 = _297.x;
    uint _300 = (_298 + uint(float(BLENDINDICES.x))) * 3u;
    uint _307 = _300 + 1u;
    uint _314 = _300 + 2u;
    precise float _321 = _287 * cbObjMatrix._m0[_300].x;
    precise float _322 = _287 * cbObjMatrix._m0[_307].x;
    precise float _323 = _287 * cbObjMatrix._m0[_314].x;
    precise float _324 = _287 * cbObjMatrix._m0[_300].y;
    precise float _325 = _287 * cbObjMatrix._m0[_307].y;
    precise float _326 = _287 * cbObjMatrix._m0[_314].y;
    precise float _327 = _287 * cbObjMatrix._m0[_300].z;
    precise float _328 = _287 * cbObjMatrix._m0[_307].z;
    precise float _329 = _287 * cbObjMatrix._m0[_314].z;
    precise float _330 = _287 * cbObjMatrix._m0[_300].w;
    precise float _331 = _287 * cbObjMatrix._m0[_307].w;
    precise float _332 = _287 * cbObjMatrix._m0[_314].w;
    uint _335 = (_298 + uint(float(BLENDINDICES.y))) * 3u;
    uint _342 = _335 + 1u;
    uint _349 = _335 + 2u;
    precise float _356 = _288 * cbObjMatrix._m0[_335].x;
    precise float _357 = _288 * cbObjMatrix._m0[_342].x;
    precise float _358 = _288 * cbObjMatrix._m0[_349].x;
    precise float _359 = _288 * cbObjMatrix._m0[_335].y;
    precise float _360 = _288 * cbObjMatrix._m0[_342].y;
    precise float _361 = _288 * cbObjMatrix._m0[_349].y;
    precise float _362 = _288 * cbObjMatrix._m0[_335].z;
    precise float _363 = _288 * cbObjMatrix._m0[_342].z;
    precise float _364 = _288 * cbObjMatrix._m0[_349].z;
    precise float _365 = _288 * cbObjMatrix._m0[_335].w;
    precise float _366 = _288 * cbObjMatrix._m0[_342].w;
    precise float _367 = _288 * cbObjMatrix._m0[_349].w;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    uint _382 = (_298 + uint(float(BLENDINDICES.z))) * 3u;
    uint _389 = _382 + 1u;
    uint _396 = _382 + 2u;
    precise float _403 = _289 * cbObjMatrix._m0[_382].x;
    precise float _404 = _289 * cbObjMatrix._m0[_389].x;
    precise float _405 = _289 * cbObjMatrix._m0[_396].x;
    precise float _406 = _289 * cbObjMatrix._m0[_382].y;
    precise float _407 = _289 * cbObjMatrix._m0[_389].y;
    precise float _408 = _289 * cbObjMatrix._m0[_396].y;
    precise float _409 = _289 * cbObjMatrix._m0[_382].z;
    precise float _410 = _289 * cbObjMatrix._m0[_389].z;
    precise float _411 = _289 * cbObjMatrix._m0[_396].z;
    precise float _412 = _289 * cbObjMatrix._m0[_382].w;
    precise float _413 = _289 * cbObjMatrix._m0[_389].w;
    precise float _414 = _289 * cbObjMatrix._m0[_396].w;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    uint _429 = (_298 + uint(float(BLENDINDICES.w))) * 3u;
    uint _436 = _429 + 1u;
    uint _443 = _429 + 2u;
    precise float _450 = _290 * cbObjMatrix._m0[_429].x;
    precise float _451 = _290 * cbObjMatrix._m0[_436].x;
    precise float _452 = _290 * cbObjMatrix._m0[_443].x;
    precise float _453 = _290 * cbObjMatrix._m0[_429].y;
    precise float _454 = _290 * cbObjMatrix._m0[_436].y;
    precise float _455 = _290 * cbObjMatrix._m0[_443].y;
    precise float _456 = _290 * cbObjMatrix._m0[_429].z;
    precise float _457 = _290 * cbObjMatrix._m0[_436].z;
    precise float _458 = _290 * cbObjMatrix._m0[_443].z;
    precise float _459 = _290 * cbObjMatrix._m0[_429].w;
    precise float _460 = _290 * cbObjMatrix._m0[_436].w;
    precise float _461 = _290 * cbObjMatrix._m0[_443].w;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = POSITION.x * _462;
    precise float _475 = POSITION.y * _465;
    precise float _476 = _475 + _474;
    precise float _477 = POSITION.z * _468;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * _471;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.x * _463;
    precise float _482 = POSITION.y * _466;
    precise float _483 = _482 + _481;
    precise float _484 = POSITION.z * _469;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * _472;
    precise float _487 = _486 + _485;
    precise float _488 = POSITION.x * _464;
    precise float _489 = POSITION.y * _467;
    precise float _490 = _489 + _488;
    precise float _491 = POSITION.z * _470;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * _473;
    precise float _494 = _493 + _492;
    float _500 = cbSceneParam._m0[3u].x - _480;
    float _501 = cbSceneParam._m0[3u].y - _487;
    float _502 = cbSceneParam._m0[3u].z - _494;
    precise float _537 = _480 - cbSceneParam._m0[3u].x;
    precise float _538 = _487 - cbSceneParam._m0[3u].y;
    precise float _539 = _494 - cbSceneParam._m0[3u].z;
    precise float _567 = _537 * cbSceneParam._m0[24u].x;
    precise float _568 = _538 * cbSceneParam._m0[24u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _539 * cbSceneParam._m0[24u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _537 * cbSceneParam._m0[25u].x;
    precise float _575 = _538 * cbSceneParam._m0[25u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _539 * cbSceneParam._m0[25u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _537 * cbSceneParam._m0[26u].x;
    precise float _582 = _538 * cbSceneParam._m0[26u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _539 * cbSceneParam._m0[26u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _587 = _586 + _585;
    precise float _588 = _537 * cbSceneParam._m0[27u].x;
    precise float _589 = _538 * cbSceneParam._m0[27u].y;
    precise float _590 = _589 + _588;
    precise float _591 = _539 * cbSceneParam._m0[27u].z;
    precise float _592 = _591 + _590;
    precise float _593 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _594 = _593 + _592;
    gl_Position.x = _573;
    gl_Position.y = _580;
    gl_Position.z = _587;
    gl_Position.w = _594;
    NORMAL_1.x = fma(_243, _468, fma(_242, _465, _462 * _240));
    NORMAL_1.y = fma(_243, _469, fma(_242, _466, _463 * _240));
    NORMAL_1.z = fma(_243, _470, fma(_242, _467, _464 * _240));
    NORMAL_1.w = float(_279);
    TANGENT_1.x = fma(_254, _468, fma(_253, _465, _462 * _252));
    TANGENT_1.y = fma(_254, _469, fma(_253, _466, _463 * _252));
    TANGENT_1.z = fma(_254, _470, fma(_253, _467, _464 * _252));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_266, _468, fma(_265, _465, _462 * _264));
    TANGENT_2_1.y = fma(_266, _469, fma(_265, _466, _463 * _264));
    TANGENT_2_1.z = fma(_266, _470, fma(_265, _467, _464 * _264));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    TEXCOORD_18.x = _587;
    TEXCOORD_18.y = _594;
    TEXCOORD_25 = sqrt(((_500 * _500) + (_501 * _501)) + (_502 * _502));
    gl_ClipDistance[0u] = dot(vec4(_573, _580, _587, _594), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_573, _580, _587, _594), vec4(cbInstanceData._m0[_292 + 3u]));
}


