#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 7, component = 3) out float TEXCOORD_11;
layout(location = 8) out float TEXCOORD_12;
layout(location = 8, component = 1) out float TEXCOORD_13;
layout(location = 8, component = 2) out float TEXCOORD_14;
layout(location = 8, component = 3) out float TEXCOORD_15;
layout(location = 9) out float TEXCOORD_16;
layout(location = 10) out vec4 TEXCOORD_22;
layout(location = 11) out vec4 TEXCOORD_23;
layout(location = 9, component = 1) out vec3 TEXCOORD_24;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_22.x = 0.0;
    TEXCOORD_22.y = 0.0;
    TEXCOORD_22.z = 0.0;
    TEXCOORD_22.w = 0.0;
    TEXCOORD_23.x = 0.0;
    TEXCOORD_23.y = 0.0;
    TEXCOORD_23.z = 0.0;
    TEXCOORD_23.w = 0.0;
    TEXCOORD_24.x = 0.0;
    TEXCOORD_24.y = 0.0;
    TEXCOORD_24.z = 0.0;
    float _253 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _265 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _266 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _267 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _277 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _278 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _279 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _289 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _291 = texelFetch(g_InstanceIndexBuffer, int(_289));
    uint _292 = _291.x;
    precise float _293 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _298 = isnan(_293) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _293 : max(0.001000000047497451305389404296875, _293));
    precise float _300 = BLENDWEIGHT.x / _298;
    precise float _301 = BLENDWEIGHT.y / _298;
    precise float _302 = BLENDWEIGHT.z / _298;
    precise float _303 = BLENDWEIGHT.w / _298;
    uvec4 _310 = floatBitsToUint(cbInstanceData._m0[(_292 * 13u) + 4u]);
    uint _311 = _310.x;
    uint _313 = (_311 + uint(float(BLENDINDICES.x))) * 3u;
    uint _320 = _313 + 1u;
    uint _327 = _313 + 2u;
    precise float _334 = _300 * cbObjMatrix._m0[_313].x;
    precise float _335 = _300 * cbObjMatrix._m0[_320].x;
    precise float _336 = _300 * cbObjMatrix._m0[_327].x;
    precise float _337 = _300 * cbObjMatrix._m0[_313].y;
    precise float _338 = _300 * cbObjMatrix._m0[_320].y;
    precise float _339 = _300 * cbObjMatrix._m0[_327].y;
    precise float _340 = _300 * cbObjMatrix._m0[_313].z;
    precise float _341 = _300 * cbObjMatrix._m0[_320].z;
    precise float _342 = _300 * cbObjMatrix._m0[_327].z;
    precise float _343 = _300 * cbObjMatrix._m0[_313].w;
    precise float _344 = _300 * cbObjMatrix._m0[_320].w;
    precise float _345 = _300 * cbObjMatrix._m0[_327].w;
    uint _348 = (_311 + uint(float(BLENDINDICES.y))) * 3u;
    uint _355 = _348 + 1u;
    uint _362 = _348 + 2u;
    precise float _369 = _301 * cbObjMatrix._m0[_348].x;
    precise float _370 = _301 * cbObjMatrix._m0[_355].x;
    precise float _371 = _301 * cbObjMatrix._m0[_362].x;
    precise float _372 = _301 * cbObjMatrix._m0[_348].y;
    precise float _373 = _301 * cbObjMatrix._m0[_355].y;
    precise float _374 = _301 * cbObjMatrix._m0[_362].y;
    precise float _375 = _301 * cbObjMatrix._m0[_348].z;
    precise float _376 = _301 * cbObjMatrix._m0[_355].z;
    precise float _377 = _301 * cbObjMatrix._m0[_362].z;
    precise float _378 = _301 * cbObjMatrix._m0[_348].w;
    precise float _379 = _301 * cbObjMatrix._m0[_355].w;
    precise float _380 = _301 * cbObjMatrix._m0[_362].w;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    uint _395 = (_311 + uint(float(BLENDINDICES.z))) * 3u;
    uint _402 = _395 + 1u;
    uint _409 = _395 + 2u;
    precise float _416 = _302 * cbObjMatrix._m0[_395].x;
    precise float _417 = _302 * cbObjMatrix._m0[_402].x;
    precise float _418 = _302 * cbObjMatrix._m0[_409].x;
    precise float _419 = _302 * cbObjMatrix._m0[_395].y;
    precise float _420 = _302 * cbObjMatrix._m0[_402].y;
    precise float _421 = _302 * cbObjMatrix._m0[_409].y;
    precise float _422 = _302 * cbObjMatrix._m0[_395].z;
    precise float _423 = _302 * cbObjMatrix._m0[_402].z;
    precise float _424 = _302 * cbObjMatrix._m0[_409].z;
    precise float _425 = _302 * cbObjMatrix._m0[_395].w;
    precise float _426 = _302 * cbObjMatrix._m0[_402].w;
    precise float _427 = _302 * cbObjMatrix._m0[_409].w;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    uint _442 = (_311 + uint(float(BLENDINDICES.w))) * 3u;
    uint _449 = _442 + 1u;
    uint _456 = _442 + 2u;
    precise float _463 = _303 * cbObjMatrix._m0[_442].x;
    precise float _464 = _303 * cbObjMatrix._m0[_449].x;
    precise float _465 = _303 * cbObjMatrix._m0[_456].x;
    precise float _466 = _303 * cbObjMatrix._m0[_442].y;
    precise float _467 = _303 * cbObjMatrix._m0[_449].y;
    precise float _468 = _303 * cbObjMatrix._m0[_456].y;
    precise float _469 = _303 * cbObjMatrix._m0[_442].z;
    precise float _470 = _303 * cbObjMatrix._m0[_449].z;
    precise float _471 = _303 * cbObjMatrix._m0[_456].z;
    precise float _472 = _303 * cbObjMatrix._m0[_442].w;
    precise float _473 = _303 * cbObjMatrix._m0[_449].w;
    precise float _474 = _303 * cbObjMatrix._m0[_456].w;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = POSITION.x * _475;
    precise float _488 = POSITION.y * _478;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.z * _481;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * _484;
    precise float _493 = _492 + _491;
    precise float _494 = POSITION.x * _476;
    precise float _495 = POSITION.y * _479;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.z * _482;
    precise float _498 = _497 + _496;
    precise float _499 = 1.0 * _485;
    precise float _500 = _499 + _498;
    precise float _501 = POSITION.x * _477;
    precise float _502 = POSITION.y * _480;
    precise float _503 = _502 + _501;
    precise float _504 = POSITION.z * _483;
    precise float _505 = _504 + _503;
    precise float _506 = 1.0 * _486;
    precise float _507 = _506 + _505;
    float _682 = (((((cbPrevObjMatrix._m0[_348].w * _301) + (cbPrevObjMatrix._m0[_313].w * _300)) + (cbPrevObjMatrix._m0[_395].w * _302)) + (cbPrevObjMatrix._m0[_442].w * _303)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_348].z * _301) + (cbPrevObjMatrix._m0[_313].z * _300)) + (cbPrevObjMatrix._m0[_395].z * _302)) + (cbPrevObjMatrix._m0[_442].z * _303), fma(POSITION.y, (((cbPrevObjMatrix._m0[_348].y * _301) + (cbPrevObjMatrix._m0[_313].y * _300)) + (cbPrevObjMatrix._m0[_395].y * _302)) + (cbPrevObjMatrix._m0[_442].y * _303), ((((cbPrevObjMatrix._m0[_348].x * _301) + (cbPrevObjMatrix._m0[_313].x * _300)) + (cbPrevObjMatrix._m0[_395].x * _302)) + (cbPrevObjMatrix._m0[_442].x * _303)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _683 = (((((cbPrevObjMatrix._m0[_355].w * _301) + (cbPrevObjMatrix._m0[_320].w * _300)) + (cbPrevObjMatrix._m0[_402].w * _302)) + (cbPrevObjMatrix._m0[_449].w * _303)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_355].z * _301) + (cbPrevObjMatrix._m0[_320].z * _300)) + (cbPrevObjMatrix._m0[_402].z * _302)) + (cbPrevObjMatrix._m0[_449].z * _303), fma(POSITION.y, (((cbPrevObjMatrix._m0[_355].y * _301) + (cbPrevObjMatrix._m0[_320].y * _300)) + (cbPrevObjMatrix._m0[_402].y * _302)) + (cbPrevObjMatrix._m0[_449].y * _303), ((((cbPrevObjMatrix._m0[_355].x * _301) + (cbPrevObjMatrix._m0[_320].x * _300)) + (cbPrevObjMatrix._m0[_402].x * _302)) + (cbPrevObjMatrix._m0[_449].x * _303)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _684 = (((((cbPrevObjMatrix._m0[_362].w * _301) + (cbPrevObjMatrix._m0[_327].w * _300)) + (cbPrevObjMatrix._m0[_409].w * _302)) + (cbPrevObjMatrix._m0[_456].w * _303)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_362].z * _301) + (cbPrevObjMatrix._m0[_327].z * _300)) + (cbPrevObjMatrix._m0[_409].z * _302)) + (cbPrevObjMatrix._m0[_456].z * _303), fma(POSITION.y, (((cbPrevObjMatrix._m0[_362].y * _301) + (cbPrevObjMatrix._m0[_327].y * _300)) + (cbPrevObjMatrix._m0[_409].y * _302)) + (cbPrevObjMatrix._m0[_456].y * _303), ((((cbPrevObjMatrix._m0[_362].x * _301) + (cbPrevObjMatrix._m0[_327].x * _300)) + (cbPrevObjMatrix._m0[_409].x * _302)) + (cbPrevObjMatrix._m0[_456].x * _303)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _731 = fma(_256, _481, fma(_255, _478, _475 * _253));
    float _734 = fma(_256, _482, fma(_255, _479, _476 * _253));
    float _737 = fma(_256, _483, fma(_255, _480, _477 * _253));
    precise float _762 = _493 - cbSceneParam._m0[3u].x;
    precise float _763 = _500 - cbSceneParam._m0[3u].y;
    precise float _764 = _507 - cbSceneParam._m0[3u].z;
    precise float _792 = _762 * cbSceneParam._m0[24u].x;
    precise float _793 = _763 * cbSceneParam._m0[24u].y;
    precise float _794 = _793 + _792;
    precise float _795 = _764 * cbSceneParam._m0[24u].z;
    precise float _796 = _795 + _794;
    precise float _797 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _798 = _797 + _796;
    precise float _799 = _762 * cbSceneParam._m0[25u].x;
    precise float _800 = _763 * cbSceneParam._m0[25u].y;
    precise float _801 = _800 + _799;
    precise float _802 = _764 * cbSceneParam._m0[25u].z;
    precise float _803 = _802 + _801;
    precise float _804 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _805 = _804 + _803;
    precise float _806 = _762 * cbSceneParam._m0[26u].x;
    precise float _807 = _763 * cbSceneParam._m0[26u].y;
    precise float _808 = _807 + _806;
    precise float _809 = _764 * cbSceneParam._m0[26u].z;
    precise float _810 = _809 + _808;
    precise float _811 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _812 = _811 + _810;
    precise float _813 = _762 * cbSceneParam._m0[27u].x;
    precise float _814 = _763 * cbSceneParam._m0[27u].y;
    precise float _815 = _814 + _813;
    precise float _816 = _764 * cbSceneParam._m0[27u].z;
    precise float _817 = _816 + _815;
    precise float _818 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _819 = _818 + _817;
    gl_Position.x = _798;
    gl_Position.y = _805;
    gl_Position.z = _812;
    gl_Position.w = _819;
    POSITION_1.x = _798;
    POSITION_1.y = _805;
    POSITION_1.z = _812;
    POSITION_1.w = _819;
    NORMAL_1.x = _731;
    NORMAL_1.y = _734;
    NORMAL_1.z = _737;
    NORMAL_1.w = float(_292);
    TANGENT_1.x = fma(_267, _481, fma(_266, _478, _475 * _265));
    TANGENT_1.y = fma(_267, _482, fma(_266, _479, _476 * _265));
    TANGENT_1.z = fma(_267, _483, fma(_266, _480, _477 * _265));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_279, _481, fma(_278, _478, _475 * _277));
    TANGENT_2_1.y = fma(_279, _482, fma(_278, _479, _476 * _277));
    TANGENT_2_1.z = fma(_279, _483, fma(_278, _480, _477 * _277));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    TEXCOORD_22.x = _798;
    TEXCOORD_22.y = _805;
    TEXCOORD_22.z = _812;
    TEXCOORD_22.w = _819;
    TEXCOORD_23.x = fma(_684, cbSceneParam._m0[29u].z, fma(_683, cbSceneParam._m0[29u].y, _682 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_23.y = fma(_684, cbSceneParam._m0[30u].z, fma(_683, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _682)) + cbSceneParam._m0[30u].w;
    TEXCOORD_23.z = fma(_684, cbSceneParam._m0[31u].z, fma(_683, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _682)) + cbSceneParam._m0[31u].w;
    TEXCOORD_23.w = fma(_684, cbSceneParam._m0[32u].z, fma(_683, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _682)) + cbSceneParam._m0[32u].w;
    TEXCOORD_24.x = _731;
    TEXCOORD_24.y = _734;
    TEXCOORD_24.z = _737;
}


