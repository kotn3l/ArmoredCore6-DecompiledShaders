#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 0) out vec4 POSITION_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_8;
layout(location = 6) out float TEXCOORD_11;
layout(location = 6, component = 1) out float TEXCOORD_12;
layout(location = 6, component = 2) out float TEXCOORD_13;
layout(location = 6, component = 3) out float TEXCOORD_14;
layout(location = 7) out float TEXCOORD_15;
layout(location = 7, component = 1) out float TEXCOORD_16;
layout(location = 7, component = 2) out float TEXCOORD_17;
layout(location = 7, component = 3) out float TEXCOORD_18;
layout(location = 8) out float TEXCOORD_19;
layout(location = 8, component = 1) out float TEXCOORD_21;

void main()
{
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_17 = 0.0;
    TEXCOORD_18 = 0.0;
    TEXCOORD_19 = 0.0;
    TEXCOORD_21 = 0.0;
    float _230 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _242 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _243 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _244 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _254 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _266 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _268 = texelFetch(g_InstanceIndexBuffer, int(_266));
    uint _269 = _268.x;
    float _270 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _275 = isnan(_270) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _270 : max(0.001000000047497451305389404296875, _270));
    float _277 = BLENDWEIGHT.x / _275;
    float _278 = BLENDWEIGHT.y / _275;
    float _279 = BLENDWEIGHT.z / _275;
    float _280 = BLENDWEIGHT.w / _275;
    uvec4 _287 = floatBitsToUint(cbInstanceData._m0[(_269 * 13u) + 4u]);
    uint _288 = _287.x;
    uint _290 = (_288 + uint(float(BLENDINDICES.x))) * 3u;
    uint _297 = _290 + 1u;
    uint _304 = _290 + 2u;
    uint _325 = (_288 + uint(float(BLENDINDICES.y))) * 3u;
    uint _332 = _325 + 1u;
    uint _339 = _325 + 2u;
    uint _372 = (_288 + uint(float(BLENDINDICES.z))) * 3u;
    uint _379 = _372 + 1u;
    uint _386 = _372 + 2u;
    uint _419 = (_288 + uint(float(BLENDINDICES.w))) * 3u;
    uint _426 = _419 + 1u;
    uint _433 = _419 + 2u;
    float _452 = (((cbObjMatrix._m0[_325].x * _278) + (cbObjMatrix._m0[_290].x * _277)) + (cbObjMatrix._m0[_372].x * _279)) + (cbObjMatrix._m0[_419].x * _280);
    float _453 = (((cbObjMatrix._m0[_332].x * _278) + (cbObjMatrix._m0[_297].x * _277)) + (cbObjMatrix._m0[_379].x * _279)) + (cbObjMatrix._m0[_426].x * _280);
    float _454 = (((cbObjMatrix._m0[_339].x * _278) + (cbObjMatrix._m0[_304].x * _277)) + (cbObjMatrix._m0[_386].x * _279)) + (cbObjMatrix._m0[_433].x * _280);
    float _455 = (((cbObjMatrix._m0[_325].y * _278) + (cbObjMatrix._m0[_290].y * _277)) + (cbObjMatrix._m0[_372].y * _279)) + (cbObjMatrix._m0[_419].y * _280);
    float _456 = (((cbObjMatrix._m0[_332].y * _278) + (cbObjMatrix._m0[_297].y * _277)) + (cbObjMatrix._m0[_379].y * _279)) + (cbObjMatrix._m0[_426].y * _280);
    float _457 = (((cbObjMatrix._m0[_339].y * _278) + (cbObjMatrix._m0[_304].y * _277)) + (cbObjMatrix._m0[_386].y * _279)) + (cbObjMatrix._m0[_433].y * _280);
    float _458 = (((cbObjMatrix._m0[_325].z * _278) + (cbObjMatrix._m0[_290].z * _277)) + (cbObjMatrix._m0[_372].z * _279)) + (cbObjMatrix._m0[_419].z * _280);
    float _459 = (((cbObjMatrix._m0[_332].z * _278) + (cbObjMatrix._m0[_297].z * _277)) + (cbObjMatrix._m0[_379].z * _279)) + (cbObjMatrix._m0[_426].z * _280);
    float _460 = (((cbObjMatrix._m0[_339].z * _278) + (cbObjMatrix._m0[_304].z * _277)) + (cbObjMatrix._m0[_386].z * _279)) + (cbObjMatrix._m0[_433].z * _280);
    POSITION_1.x = ((((cbObjMatrix._m0[_325].w * _278) + (cbObjMatrix._m0[_290].w * _277)) + (cbObjMatrix._m0[_372].w * _279)) + (cbObjMatrix._m0[_419].w * _280)) + fma(POSITION.z, _458, fma(POSITION.y, _455, _452 * POSITION.x));
    POSITION_1.y = ((((cbObjMatrix._m0[_332].w * _278) + (cbObjMatrix._m0[_297].w * _277)) + (cbObjMatrix._m0[_379].w * _279)) + (cbObjMatrix._m0[_426].w * _280)) + fma(POSITION.z, _459, fma(POSITION.y, _456, _453 * POSITION.x));
    POSITION_1.z = ((((cbObjMatrix._m0[_339].w * _278) + (cbObjMatrix._m0[_304].w * _277)) + (cbObjMatrix._m0[_386].w * _279)) + (cbObjMatrix._m0[_433].w * _280)) + fma(POSITION.z, _460, fma(POSITION.y, _457, _454 * POSITION.x));
    POSITION_1.w = 1.0;
    NORMAL_1.x = fma(_233, _458, fma(_232, _455, _452 * _230));
    NORMAL_1.y = fma(_233, _459, fma(_232, _456, _453 * _230));
    NORMAL_1.z = fma(_233, _460, fma(_232, _457, _454 * _230));
    NORMAL_1.w = float(_269);
    TANGENT_1.x = fma(_244, _458, fma(_243, _455, _452 * _242));
    TANGENT_1.y = fma(_244, _459, fma(_243, _456, _453 * _242));
    TANGENT_1.z = fma(_244, _460, fma(_243, _457, _454 * _242));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_256, _458, fma(_255, _455, _452 * _254));
    TANGENT_2_1.y = fma(_256, _459, fma(_255, _456, _453 * _254));
    TANGENT_2_1.z = fma(_256, _460, fma(_255, _457, _454 * _254));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = TEXCOORD_3.x;
    TEXCOORD_8.y = TEXCOORD_3.y;
    TEXCOORD_8.z = TEXCOORD_3.z;
    TEXCOORD_8.w = COLOR_1.x;
    TEXCOORD_11 = TEXCOORD_4.x;
    TEXCOORD_12 = TEXCOORD_4.y;
    TEXCOORD_13 = TEXCOORD_4.z;
    TEXCOORD_14 = TEXCOORD_5.x;
    TEXCOORD_15 = TEXCOORD_5.y;
    TEXCOORD_16 = TEXCOORD_5.z;
    TEXCOORD_17 = TEXCOORD_6.x;
    TEXCOORD_18 = TEXCOORD_6.y;
    TEXCOORD_19 = TEXCOORD_6.z;
    TEXCOORD_21 = cbMtdParam._m0[14u].x;
}


