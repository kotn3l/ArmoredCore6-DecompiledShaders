#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5_1;
layout(location = 6) out float TEXCOORD_8;
layout(location = 6, component = 1) out float TEXCOORD_9;
layout(location = 6, component = 2) out float TEXCOORD_10;
layout(location = 6, component = 3) out float TEXCOORD_11;
layout(location = 7) out float TEXCOORD_12;
layout(location = 7, component = 1) out float TEXCOORD_13;
layout(location = 7, component = 2) out float TEXCOORD_14;
layout(location = 7, component = 3) out float TEXCOORD_15;
layout(location = 8) out float TEXCOORD_16;
layout(location = 8, component = 1) out float TEXCOORD_25;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_25 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _235 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _261 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _271 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _273 = texelFetch(g_InstanceIndexBuffer, int(_271));
    uint _274 = _273.x;
    precise float _275 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _280 = isnan(_275) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _275 : max(0.001000000047497451305389404296875, _275));
    precise float _282 = BLENDWEIGHT.x / _280;
    precise float _283 = BLENDWEIGHT.y / _280;
    precise float _284 = BLENDWEIGHT.z / _280;
    precise float _285 = BLENDWEIGHT.w / _280;
    uint _287 = _274 * 13u;
    uvec4 _292 = floatBitsToUint(cbInstanceData._m0[_287 + 4u]);
    uint _293 = _292.x;
    uint _295 = (_293 + uint(float(BLENDINDICES.x))) * 3u;
    uint _302 = _295 + 1u;
    uint _309 = _295 + 2u;
    precise float _316 = _282 * cbObjMatrix._m0[_295].x;
    precise float _317 = _282 * cbObjMatrix._m0[_302].x;
    precise float _318 = _282 * cbObjMatrix._m0[_309].x;
    precise float _319 = _282 * cbObjMatrix._m0[_295].y;
    precise float _320 = _282 * cbObjMatrix._m0[_302].y;
    precise float _321 = _282 * cbObjMatrix._m0[_309].y;
    precise float _322 = _282 * cbObjMatrix._m0[_295].z;
    precise float _323 = _282 * cbObjMatrix._m0[_302].z;
    precise float _324 = _282 * cbObjMatrix._m0[_309].z;
    precise float _325 = _282 * cbObjMatrix._m0[_295].w;
    precise float _326 = _282 * cbObjMatrix._m0[_302].w;
    precise float _327 = _282 * cbObjMatrix._m0[_309].w;
    uint _330 = (_293 + uint(float(BLENDINDICES.y))) * 3u;
    uint _337 = _330 + 1u;
    uint _344 = _330 + 2u;
    precise float _351 = _283 * cbObjMatrix._m0[_330].x;
    precise float _352 = _283 * cbObjMatrix._m0[_337].x;
    precise float _353 = _283 * cbObjMatrix._m0[_344].x;
    precise float _354 = _283 * cbObjMatrix._m0[_330].y;
    precise float _355 = _283 * cbObjMatrix._m0[_337].y;
    precise float _356 = _283 * cbObjMatrix._m0[_344].y;
    precise float _357 = _283 * cbObjMatrix._m0[_330].z;
    precise float _358 = _283 * cbObjMatrix._m0[_337].z;
    precise float _359 = _283 * cbObjMatrix._m0[_344].z;
    precise float _360 = _283 * cbObjMatrix._m0[_330].w;
    precise float _361 = _283 * cbObjMatrix._m0[_337].w;
    precise float _362 = _283 * cbObjMatrix._m0[_344].w;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    uint _377 = (_293 + uint(float(BLENDINDICES.z))) * 3u;
    uint _384 = _377 + 1u;
    uint _391 = _377 + 2u;
    precise float _398 = _284 * cbObjMatrix._m0[_377].x;
    precise float _399 = _284 * cbObjMatrix._m0[_384].x;
    precise float _400 = _284 * cbObjMatrix._m0[_391].x;
    precise float _401 = _284 * cbObjMatrix._m0[_377].y;
    precise float _402 = _284 * cbObjMatrix._m0[_384].y;
    precise float _403 = _284 * cbObjMatrix._m0[_391].y;
    precise float _404 = _284 * cbObjMatrix._m0[_377].z;
    precise float _405 = _284 * cbObjMatrix._m0[_384].z;
    precise float _406 = _284 * cbObjMatrix._m0[_391].z;
    precise float _407 = _284 * cbObjMatrix._m0[_377].w;
    precise float _408 = _284 * cbObjMatrix._m0[_384].w;
    precise float _409 = _284 * cbObjMatrix._m0[_391].w;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    uint _424 = (_293 + uint(float(BLENDINDICES.w))) * 3u;
    uint _431 = _424 + 1u;
    uint _438 = _424 + 2u;
    precise float _445 = _285 * cbObjMatrix._m0[_424].x;
    precise float _446 = _285 * cbObjMatrix._m0[_431].x;
    precise float _447 = _285 * cbObjMatrix._m0[_438].x;
    precise float _448 = _285 * cbObjMatrix._m0[_424].y;
    precise float _449 = _285 * cbObjMatrix._m0[_431].y;
    precise float _450 = _285 * cbObjMatrix._m0[_438].y;
    precise float _451 = _285 * cbObjMatrix._m0[_424].z;
    precise float _452 = _285 * cbObjMatrix._m0[_431].z;
    precise float _453 = _285 * cbObjMatrix._m0[_438].z;
    precise float _454 = _285 * cbObjMatrix._m0[_424].w;
    precise float _455 = _285 * cbObjMatrix._m0[_431].w;
    precise float _456 = _285 * cbObjMatrix._m0[_438].w;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = POSITION.x * _457;
    precise float _470 = POSITION.y * _460;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.z * _463;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * _466;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.x * _458;
    precise float _477 = POSITION.y * _461;
    precise float _478 = _477 + _476;
    precise float _479 = POSITION.z * _464;
    precise float _480 = _479 + _478;
    precise float _481 = 1.0 * _467;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.x * _459;
    precise float _484 = POSITION.y * _462;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.z * _465;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * _468;
    precise float _489 = _488 + _487;
    float _495 = cbSceneParam._m0[3u].x - _475;
    float _496 = cbSceneParam._m0[3u].y - _482;
    float _497 = cbSceneParam._m0[3u].z - _489;
    precise float _532 = _475 - cbSceneParam._m0[3u].x;
    precise float _533 = _482 - cbSceneParam._m0[3u].y;
    precise float _534 = _489 - cbSceneParam._m0[3u].z;
    precise float _562 = _532 * cbSceneParam._m0[24u].x;
    precise float _563 = _533 * cbSceneParam._m0[24u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _534 * cbSceneParam._m0[24u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _568 = _567 + _566;
    precise float _569 = _532 * cbSceneParam._m0[25u].x;
    precise float _570 = _533 * cbSceneParam._m0[25u].y;
    precise float _571 = _570 + _569;
    precise float _572 = _534 * cbSceneParam._m0[25u].z;
    precise float _573 = _572 + _571;
    precise float _574 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _575 = _574 + _573;
    precise float _576 = _532 * cbSceneParam._m0[26u].x;
    precise float _577 = _533 * cbSceneParam._m0[26u].y;
    precise float _578 = _577 + _576;
    precise float _579 = _534 * cbSceneParam._m0[26u].z;
    precise float _580 = _579 + _578;
    precise float _581 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _582 = _581 + _580;
    precise float _583 = _532 * cbSceneParam._m0[27u].x;
    precise float _584 = _533 * cbSceneParam._m0[27u].y;
    precise float _585 = _584 + _583;
    precise float _586 = _534 * cbSceneParam._m0[27u].z;
    precise float _587 = _586 + _585;
    precise float _588 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _589 = _588 + _587;
    gl_Position.x = _568;
    gl_Position.y = _575;
    gl_Position.z = _582;
    gl_Position.w = _589;
    NORMAL_1.x = fma(_238, _463, fma(_237, _460, _457 * _235));
    NORMAL_1.y = fma(_238, _464, fma(_237, _461, _458 * _235));
    NORMAL_1.z = fma(_238, _465, fma(_237, _462, _459 * _235));
    NORMAL_1.w = float(_274);
    TANGENT_1.x = fma(_249, _463, fma(_248, _460, _457 * _247));
    TANGENT_1.y = fma(_249, _464, fma(_248, _461, _458 * _247));
    TANGENT_1.z = fma(_249, _465, fma(_248, _462, _459 * _247));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_261, _463, fma(_260, _460, _457 * _259));
    TANGENT_2_1.y = fma(_261, _464, fma(_260, _461, _458 * _259));
    TANGENT_2_1.z = fma(_261, _465, fma(_260, _462, _459 * _259));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    TEXCOORD_25 = sqrt(((_495 * _495) + (_496 * _496)) + (_497 * _497));
    gl_ClipDistance[0u] = dot(vec4(_568, _575, _582, _589), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_568, _575, _582, _589), vec4(cbInstanceData._m0[_287 + 3u]));
}


