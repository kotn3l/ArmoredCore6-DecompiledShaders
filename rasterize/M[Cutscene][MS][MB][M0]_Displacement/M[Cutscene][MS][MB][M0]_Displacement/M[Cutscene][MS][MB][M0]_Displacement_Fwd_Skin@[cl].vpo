#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 7, component = 3) out float TEXCOORD_11;
layout(location = 8) out float TEXCOORD_12;
layout(location = 8, component = 1) out float TEXCOORD_13;
layout(location = 8, component = 2) out float TEXCOORD_14;
layout(location = 8, component = 3) out float TEXCOORD_15;
layout(location = 9) out float TEXCOORD_16;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    float _234 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _248 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _270 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _272 = texelFetch(g_InstanceIndexBuffer, int(_270));
    uint _273 = _272.x;
    precise float _274 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _279 = isnan(_274) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _274 : max(0.001000000047497451305389404296875, _274));
    precise float _281 = BLENDWEIGHT.x / _279;
    precise float _282 = BLENDWEIGHT.y / _279;
    precise float _283 = BLENDWEIGHT.z / _279;
    precise float _284 = BLENDWEIGHT.w / _279;
    uvec4 _291 = floatBitsToUint(cbInstanceData._m0[(_273 * 13u) + 4u]);
    uint _292 = _291.x;
    uint _294 = (_292 + uint(float(BLENDINDICES.x))) * 3u;
    uint _301 = _294 + 1u;
    uint _308 = _294 + 2u;
    precise float _315 = _281 * cbObjMatrix._m0[_294].x;
    precise float _316 = _281 * cbObjMatrix._m0[_301].x;
    precise float _317 = _281 * cbObjMatrix._m0[_308].x;
    precise float _318 = _281 * cbObjMatrix._m0[_294].y;
    precise float _319 = _281 * cbObjMatrix._m0[_301].y;
    precise float _320 = _281 * cbObjMatrix._m0[_308].y;
    precise float _321 = _281 * cbObjMatrix._m0[_294].z;
    precise float _322 = _281 * cbObjMatrix._m0[_301].z;
    precise float _323 = _281 * cbObjMatrix._m0[_308].z;
    precise float _324 = _281 * cbObjMatrix._m0[_294].w;
    precise float _325 = _281 * cbObjMatrix._m0[_301].w;
    precise float _326 = _281 * cbObjMatrix._m0[_308].w;
    uint _329 = (_292 + uint(float(BLENDINDICES.y))) * 3u;
    uint _336 = _329 + 1u;
    uint _343 = _329 + 2u;
    precise float _350 = _282 * cbObjMatrix._m0[_329].x;
    precise float _351 = _282 * cbObjMatrix._m0[_336].x;
    precise float _352 = _282 * cbObjMatrix._m0[_343].x;
    precise float _353 = _282 * cbObjMatrix._m0[_329].y;
    precise float _354 = _282 * cbObjMatrix._m0[_336].y;
    precise float _355 = _282 * cbObjMatrix._m0[_343].y;
    precise float _356 = _282 * cbObjMatrix._m0[_329].z;
    precise float _357 = _282 * cbObjMatrix._m0[_336].z;
    precise float _358 = _282 * cbObjMatrix._m0[_343].z;
    precise float _359 = _282 * cbObjMatrix._m0[_329].w;
    precise float _360 = _282 * cbObjMatrix._m0[_336].w;
    precise float _361 = _282 * cbObjMatrix._m0[_343].w;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    uint _376 = (_292 + uint(float(BLENDINDICES.z))) * 3u;
    uint _383 = _376 + 1u;
    uint _390 = _376 + 2u;
    precise float _397 = _283 * cbObjMatrix._m0[_376].x;
    precise float _398 = _283 * cbObjMatrix._m0[_383].x;
    precise float _399 = _283 * cbObjMatrix._m0[_390].x;
    precise float _400 = _283 * cbObjMatrix._m0[_376].y;
    precise float _401 = _283 * cbObjMatrix._m0[_383].y;
    precise float _402 = _283 * cbObjMatrix._m0[_390].y;
    precise float _403 = _283 * cbObjMatrix._m0[_376].z;
    precise float _404 = _283 * cbObjMatrix._m0[_383].z;
    precise float _405 = _283 * cbObjMatrix._m0[_390].z;
    precise float _406 = _283 * cbObjMatrix._m0[_376].w;
    precise float _407 = _283 * cbObjMatrix._m0[_383].w;
    precise float _408 = _283 * cbObjMatrix._m0[_390].w;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    uint _423 = (_292 + uint(float(BLENDINDICES.w))) * 3u;
    uint _430 = _423 + 1u;
    uint _437 = _423 + 2u;
    precise float _444 = _284 * cbObjMatrix._m0[_423].x;
    precise float _445 = _284 * cbObjMatrix._m0[_430].x;
    precise float _446 = _284 * cbObjMatrix._m0[_437].x;
    precise float _447 = _284 * cbObjMatrix._m0[_423].y;
    precise float _448 = _284 * cbObjMatrix._m0[_430].y;
    precise float _449 = _284 * cbObjMatrix._m0[_437].y;
    precise float _450 = _284 * cbObjMatrix._m0[_423].z;
    precise float _451 = _284 * cbObjMatrix._m0[_430].z;
    precise float _452 = _284 * cbObjMatrix._m0[_437].z;
    precise float _453 = _284 * cbObjMatrix._m0[_423].w;
    precise float _454 = _284 * cbObjMatrix._m0[_430].w;
    precise float _455 = _284 * cbObjMatrix._m0[_437].w;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = _418 + _453;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = POSITION.x * _456;
    precise float _469 = POSITION.y * _459;
    precise float _470 = _469 + _468;
    precise float _471 = POSITION.z * _462;
    precise float _472 = _471 + _470;
    precise float _473 = 1.0 * _465;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.x * _457;
    precise float _476 = POSITION.y * _460;
    precise float _477 = _476 + _475;
    precise float _478 = POSITION.z * _463;
    precise float _479 = _478 + _477;
    precise float _480 = 1.0 * _466;
    precise float _481 = _480 + _479;
    precise float _482 = POSITION.x * _458;
    precise float _483 = POSITION.y * _461;
    precise float _484 = _483 + _482;
    precise float _485 = POSITION.z * _464;
    precise float _486 = _485 + _484;
    precise float _487 = 1.0 * _467;
    precise float _488 = _487 + _486;
    precise float _522 = _474 - cbSceneParam._m0[3u].x;
    precise float _523 = _481 - cbSceneParam._m0[3u].y;
    precise float _524 = _488 - cbSceneParam._m0[3u].z;
    precise float _552 = _522 * cbSceneParam._m0[24u].x;
    precise float _553 = _523 * cbSceneParam._m0[24u].y;
    precise float _554 = _553 + _552;
    precise float _555 = _524 * cbSceneParam._m0[24u].z;
    precise float _556 = _555 + _554;
    precise float _557 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _558 = _557 + _556;
    precise float _559 = _522 * cbSceneParam._m0[25u].x;
    precise float _560 = _523 * cbSceneParam._m0[25u].y;
    precise float _561 = _560 + _559;
    precise float _562 = _524 * cbSceneParam._m0[25u].z;
    precise float _563 = _562 + _561;
    precise float _564 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _565 = _564 + _563;
    precise float _566 = _522 * cbSceneParam._m0[26u].x;
    precise float _567 = _523 * cbSceneParam._m0[26u].y;
    precise float _568 = _567 + _566;
    precise float _569 = _524 * cbSceneParam._m0[26u].z;
    precise float _570 = _569 + _568;
    precise float _571 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _572 = _571 + _570;
    precise float _573 = _522 * cbSceneParam._m0[27u].x;
    precise float _574 = _523 * cbSceneParam._m0[27u].y;
    precise float _575 = _574 + _573;
    precise float _576 = _524 * cbSceneParam._m0[27u].z;
    precise float _577 = _576 + _575;
    precise float _578 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _579 = _578 + _577;
    gl_Position.x = _558;
    gl_Position.y = _565;
    gl_Position.z = _572;
    gl_Position.w = _579;
    POSITION_1.x = _558;
    POSITION_1.y = _565;
    POSITION_1.z = _572;
    POSITION_1.w = _579;
    NORMAL_1.x = fma(_237, _462, fma(_236, _459, _456 * _234));
    NORMAL_1.y = fma(_237, _463, fma(_236, _460, _457 * _234));
    NORMAL_1.z = fma(_237, _464, fma(_236, _461, _458 * _234));
    NORMAL_1.w = float(_273);
    TANGENT_1.x = fma(_248, _462, fma(_247, _459, _456 * _246));
    TANGENT_1.y = fma(_248, _463, fma(_247, _460, _457 * _246));
    TANGENT_1.z = fma(_248, _464, fma(_247, _461, _458 * _246));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_260, _462, fma(_259, _459, _456 * _258));
    TANGENT_2_1.y = fma(_260, _463, fma(_259, _460, _457 * _258));
    TANGENT_2_1.z = fma(_260, _464, fma(_259, _461, _458 * _258));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
}


