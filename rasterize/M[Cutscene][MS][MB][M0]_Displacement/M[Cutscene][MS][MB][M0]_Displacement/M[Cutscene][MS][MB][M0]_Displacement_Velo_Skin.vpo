#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in vec4 TEXCOORD_3;
layout(location = 9) in vec4 TEXCOORD_4;
layout(location = 10) in vec4 TEXCOORD_5;
layout(location = 11) in vec4 TEXCOORD_6;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TANGENT_2_1;
layout(location = 5) out vec4 TEXCOORD_1;
layout(location = 6) out vec4 TEXCOORD_5_1;
layout(location = 7) out float TEXCOORD_8;
layout(location = 7, component = 1) out float TEXCOORD_9;
layout(location = 7, component = 2) out float TEXCOORD_10;
layout(location = 7, component = 3) out float TEXCOORD_11;
layout(location = 8) out float TEXCOORD_12;
layout(location = 8, component = 1) out float TEXCOORD_13;
layout(location = 8, component = 2) out float TEXCOORD_14;
layout(location = 8, component = 3) out float TEXCOORD_15;
layout(location = 9) out float TEXCOORD_16;
layout(location = 10) out vec4 TEXCOORD_22;
layout(location = 11) out vec4 TEXCOORD_23;
layout(location = 9, component = 1) out vec3 TEXCOORD_24;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5_1.x = 0.0;
    TEXCOORD_5_1.y = 0.0;
    TEXCOORD_5_1.z = 0.0;
    TEXCOORD_5_1.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_9 = 0.0;
    TEXCOORD_10 = 0.0;
    TEXCOORD_11 = 0.0;
    TEXCOORD_12 = 0.0;
    TEXCOORD_13 = 0.0;
    TEXCOORD_14 = 0.0;
    TEXCOORD_15 = 0.0;
    TEXCOORD_16 = 0.0;
    TEXCOORD_22.x = 0.0;
    TEXCOORD_22.y = 0.0;
    TEXCOORD_22.z = 0.0;
    TEXCOORD_22.w = 0.0;
    TEXCOORD_23.x = 0.0;
    TEXCOORD_23.y = 0.0;
    TEXCOORD_23.z = 0.0;
    TEXCOORD_23.w = 0.0;
    TEXCOORD_24.x = 0.0;
    TEXCOORD_24.y = 0.0;
    TEXCOORD_24.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _258 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _260 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _261 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _271 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _272 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _282 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _283 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _284 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _294 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _296 = texelFetch(g_InstanceIndexBuffer, int(_294));
    uint _297 = _296.x;
    precise float _298 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _303 = isnan(_298) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _298 : max(0.001000000047497451305389404296875, _298));
    precise float _305 = BLENDWEIGHT.x / _303;
    precise float _306 = BLENDWEIGHT.y / _303;
    precise float _307 = BLENDWEIGHT.z / _303;
    precise float _308 = BLENDWEIGHT.w / _303;
    uint _310 = _297 * 13u;
    uvec4 _315 = floatBitsToUint(cbInstanceData._m0[_310 + 4u]);
    uint _316 = _315.x;
    uint _318 = (_316 + uint(float(BLENDINDICES.x))) * 3u;
    uint _325 = _318 + 1u;
    uint _332 = _318 + 2u;
    precise float _339 = _305 * cbObjMatrix._m0[_318].x;
    precise float _340 = _305 * cbObjMatrix._m0[_325].x;
    precise float _341 = _305 * cbObjMatrix._m0[_332].x;
    precise float _342 = _305 * cbObjMatrix._m0[_318].y;
    precise float _343 = _305 * cbObjMatrix._m0[_325].y;
    precise float _344 = _305 * cbObjMatrix._m0[_332].y;
    precise float _345 = _305 * cbObjMatrix._m0[_318].z;
    precise float _346 = _305 * cbObjMatrix._m0[_325].z;
    precise float _347 = _305 * cbObjMatrix._m0[_332].z;
    precise float _348 = _305 * cbObjMatrix._m0[_318].w;
    precise float _349 = _305 * cbObjMatrix._m0[_325].w;
    precise float _350 = _305 * cbObjMatrix._m0[_332].w;
    uint _353 = (_316 + uint(float(BLENDINDICES.y))) * 3u;
    uint _360 = _353 + 1u;
    uint _367 = _353 + 2u;
    precise float _374 = _306 * cbObjMatrix._m0[_353].x;
    precise float _375 = _306 * cbObjMatrix._m0[_360].x;
    precise float _376 = _306 * cbObjMatrix._m0[_367].x;
    precise float _377 = _306 * cbObjMatrix._m0[_353].y;
    precise float _378 = _306 * cbObjMatrix._m0[_360].y;
    precise float _379 = _306 * cbObjMatrix._m0[_367].y;
    precise float _380 = _306 * cbObjMatrix._m0[_353].z;
    precise float _381 = _306 * cbObjMatrix._m0[_360].z;
    precise float _382 = _306 * cbObjMatrix._m0[_367].z;
    precise float _383 = _306 * cbObjMatrix._m0[_353].w;
    precise float _384 = _306 * cbObjMatrix._m0[_360].w;
    precise float _385 = _306 * cbObjMatrix._m0[_367].w;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    uint _400 = (_316 + uint(float(BLENDINDICES.z))) * 3u;
    uint _407 = _400 + 1u;
    uint _414 = _400 + 2u;
    precise float _421 = _307 * cbObjMatrix._m0[_400].x;
    precise float _422 = _307 * cbObjMatrix._m0[_407].x;
    precise float _423 = _307 * cbObjMatrix._m0[_414].x;
    precise float _424 = _307 * cbObjMatrix._m0[_400].y;
    precise float _425 = _307 * cbObjMatrix._m0[_407].y;
    precise float _426 = _307 * cbObjMatrix._m0[_414].y;
    precise float _427 = _307 * cbObjMatrix._m0[_400].z;
    precise float _428 = _307 * cbObjMatrix._m0[_407].z;
    precise float _429 = _307 * cbObjMatrix._m0[_414].z;
    precise float _430 = _307 * cbObjMatrix._m0[_400].w;
    precise float _431 = _307 * cbObjMatrix._m0[_407].w;
    precise float _432 = _307 * cbObjMatrix._m0[_414].w;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    precise float _437 = _390 + _425;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    uint _447 = (_316 + uint(float(BLENDINDICES.w))) * 3u;
    uint _454 = _447 + 1u;
    uint _461 = _447 + 2u;
    precise float _468 = _308 * cbObjMatrix._m0[_447].x;
    precise float _469 = _308 * cbObjMatrix._m0[_454].x;
    precise float _470 = _308 * cbObjMatrix._m0[_461].x;
    precise float _471 = _308 * cbObjMatrix._m0[_447].y;
    precise float _472 = _308 * cbObjMatrix._m0[_454].y;
    precise float _473 = _308 * cbObjMatrix._m0[_461].y;
    precise float _474 = _308 * cbObjMatrix._m0[_447].z;
    precise float _475 = _308 * cbObjMatrix._m0[_454].z;
    precise float _476 = _308 * cbObjMatrix._m0[_461].z;
    precise float _477 = _308 * cbObjMatrix._m0[_447].w;
    precise float _478 = _308 * cbObjMatrix._m0[_454].w;
    precise float _479 = _308 * cbObjMatrix._m0[_461].w;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _437 + _472;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = POSITION.x * _480;
    precise float _493 = POSITION.y * _483;
    precise float _494 = _493 + _492;
    precise float _495 = POSITION.z * _486;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * _489;
    precise float _498 = _497 + _496;
    precise float _499 = POSITION.x * _481;
    precise float _500 = POSITION.y * _484;
    precise float _501 = _500 + _499;
    precise float _502 = POSITION.z * _487;
    precise float _503 = _502 + _501;
    precise float _504 = 1.0 * _490;
    precise float _505 = _504 + _503;
    precise float _506 = POSITION.x * _482;
    precise float _507 = POSITION.y * _485;
    precise float _508 = _507 + _506;
    precise float _509 = POSITION.z * _488;
    precise float _510 = _509 + _508;
    precise float _511 = 1.0 * _491;
    precise float _512 = _511 + _510;
    float _687 = (((((cbPrevObjMatrix._m0[_353].w * _306) + (cbPrevObjMatrix._m0[_318].w * _305)) + (cbPrevObjMatrix._m0[_400].w * _307)) + (cbPrevObjMatrix._m0[_447].w * _308)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_353].z * _306) + (cbPrevObjMatrix._m0[_318].z * _305)) + (cbPrevObjMatrix._m0[_400].z * _307)) + (cbPrevObjMatrix._m0[_447].z * _308), fma(POSITION.y, (((cbPrevObjMatrix._m0[_353].y * _306) + (cbPrevObjMatrix._m0[_318].y * _305)) + (cbPrevObjMatrix._m0[_400].y * _307)) + (cbPrevObjMatrix._m0[_447].y * _308), ((((cbPrevObjMatrix._m0[_353].x * _306) + (cbPrevObjMatrix._m0[_318].x * _305)) + (cbPrevObjMatrix._m0[_400].x * _307)) + (cbPrevObjMatrix._m0[_447].x * _308)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _688 = (((((cbPrevObjMatrix._m0[_360].w * _306) + (cbPrevObjMatrix._m0[_325].w * _305)) + (cbPrevObjMatrix._m0[_407].w * _307)) + (cbPrevObjMatrix._m0[_454].w * _308)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_360].z * _306) + (cbPrevObjMatrix._m0[_325].z * _305)) + (cbPrevObjMatrix._m0[_407].z * _307)) + (cbPrevObjMatrix._m0[_454].z * _308), fma(POSITION.y, (((cbPrevObjMatrix._m0[_360].y * _306) + (cbPrevObjMatrix._m0[_325].y * _305)) + (cbPrevObjMatrix._m0[_407].y * _307)) + (cbPrevObjMatrix._m0[_454].y * _308), ((((cbPrevObjMatrix._m0[_360].x * _306) + (cbPrevObjMatrix._m0[_325].x * _305)) + (cbPrevObjMatrix._m0[_407].x * _307)) + (cbPrevObjMatrix._m0[_454].x * _308)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _689 = (((((cbPrevObjMatrix._m0[_367].w * _306) + (cbPrevObjMatrix._m0[_332].w * _305)) + (cbPrevObjMatrix._m0[_414].w * _307)) + (cbPrevObjMatrix._m0[_461].w * _308)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_367].z * _306) + (cbPrevObjMatrix._m0[_332].z * _305)) + (cbPrevObjMatrix._m0[_414].z * _307)) + (cbPrevObjMatrix._m0[_461].z * _308), fma(POSITION.y, (((cbPrevObjMatrix._m0[_367].y * _306) + (cbPrevObjMatrix._m0[_332].y * _305)) + (cbPrevObjMatrix._m0[_414].y * _307)) + (cbPrevObjMatrix._m0[_461].y * _308), ((((cbPrevObjMatrix._m0[_367].x * _306) + (cbPrevObjMatrix._m0[_332].x * _305)) + (cbPrevObjMatrix._m0[_414].x * _307)) + (cbPrevObjMatrix._m0[_461].x * _308)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _736 = fma(_261, _486, fma(_260, _483, _480 * _258));
    float _739 = fma(_261, _487, fma(_260, _484, _481 * _258));
    float _742 = fma(_261, _488, fma(_260, _485, _482 * _258));
    precise float _767 = _498 - cbSceneParam._m0[3u].x;
    precise float _768 = _505 - cbSceneParam._m0[3u].y;
    precise float _769 = _512 - cbSceneParam._m0[3u].z;
    precise float _797 = _767 * cbSceneParam._m0[24u].x;
    precise float _798 = _768 * cbSceneParam._m0[24u].y;
    precise float _799 = _798 + _797;
    precise float _800 = _769 * cbSceneParam._m0[24u].z;
    precise float _801 = _800 + _799;
    precise float _802 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _803 = _802 + _801;
    precise float _804 = _767 * cbSceneParam._m0[25u].x;
    precise float _805 = _768 * cbSceneParam._m0[25u].y;
    precise float _806 = _805 + _804;
    precise float _807 = _769 * cbSceneParam._m0[25u].z;
    precise float _808 = _807 + _806;
    precise float _809 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _810 = _809 + _808;
    precise float _811 = _767 * cbSceneParam._m0[26u].x;
    precise float _812 = _768 * cbSceneParam._m0[26u].y;
    precise float _813 = _812 + _811;
    precise float _814 = _769 * cbSceneParam._m0[26u].z;
    precise float _815 = _814 + _813;
    precise float _816 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _817 = _816 + _815;
    precise float _818 = _767 * cbSceneParam._m0[27u].x;
    precise float _819 = _768 * cbSceneParam._m0[27u].y;
    precise float _820 = _819 + _818;
    precise float _821 = _769 * cbSceneParam._m0[27u].z;
    precise float _822 = _821 + _820;
    precise float _823 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _824 = _823 + _822;
    gl_Position.x = _803;
    gl_Position.y = _810;
    gl_Position.z = _817;
    gl_Position.w = _824;
    POSITION_1.x = _803;
    POSITION_1.y = _810;
    POSITION_1.z = _817;
    POSITION_1.w = _824;
    NORMAL_1.x = _736;
    NORMAL_1.y = _739;
    NORMAL_1.z = _742;
    NORMAL_1.w = float(_297);
    TANGENT_1.x = fma(_272, _486, fma(_271, _483, _480 * _270));
    TANGENT_1.y = fma(_272, _487, fma(_271, _484, _481 * _270));
    TANGENT_1.z = fma(_272, _488, fma(_271, _485, _482 * _270));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_284, _486, fma(_283, _483, _480 * _282));
    TANGENT_2_1.y = fma(_284, _487, fma(_283, _484, _481 * _282));
    TANGENT_2_1.z = fma(_284, _488, fma(_283, _485, _482 * _282));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5_1.x = TEXCOORD_3.x;
    TEXCOORD_5_1.y = TEXCOORD_3.y;
    TEXCOORD_5_1.z = TEXCOORD_3.z;
    TEXCOORD_5_1.w = COLOR_1.x;
    TEXCOORD_8 = TEXCOORD_4.x;
    TEXCOORD_9 = TEXCOORD_4.y;
    TEXCOORD_10 = TEXCOORD_4.z;
    TEXCOORD_11 = TEXCOORD_5.x;
    TEXCOORD_12 = TEXCOORD_5.y;
    TEXCOORD_13 = TEXCOORD_5.z;
    TEXCOORD_14 = TEXCOORD_6.x;
    TEXCOORD_15 = TEXCOORD_6.y;
    TEXCOORD_16 = TEXCOORD_6.z;
    TEXCOORD_22.x = _803;
    TEXCOORD_22.y = _810;
    TEXCOORD_22.z = _817;
    TEXCOORD_22.w = _824;
    TEXCOORD_23.x = fma(_689, cbSceneParam._m0[29u].z, fma(_688, cbSceneParam._m0[29u].y, _687 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_23.y = fma(_689, cbSceneParam._m0[30u].z, fma(_688, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _687)) + cbSceneParam._m0[30u].w;
    TEXCOORD_23.z = fma(_689, cbSceneParam._m0[31u].z, fma(_688, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _687)) + cbSceneParam._m0[31u].w;
    TEXCOORD_23.w = fma(_689, cbSceneParam._m0[32u].z, fma(_688, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _687)) + cbSceneParam._m0[32u].w;
    TEXCOORD_24.x = _736;
    TEXCOORD_24.y = _739;
    TEXCOORD_24.z = _742;
    gl_ClipDistance[0u] = dot(vec4(_803, _810, _817, _824), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_803, _810, _817, _824), vec4(cbInstanceData._m0[_310 + 3u]));
}


