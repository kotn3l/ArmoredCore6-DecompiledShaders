#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_002_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _753;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _162 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _163 = _162 * NORMAL.x;
    float _164 = _162 * NORMAL.y;
    float _165 = _162 * NORMAL.z;
    float _170;
    float _171;
    float _172;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _170 = (-0.0) - _163;
        _171 = (-0.0) - _164;
        _172 = (-0.0) - _165;
    }
    else
    {
        _170 = _163;
        _171 = _164;
        _172 = _165;
    }
    float _182 = TEXCOORD.x + (-0.5);
    float _184 = TEXCOORD.y + (-0.5);
    float _189 = 1.0 - sqrt((_184 * _184) + (_182 * _182));
    float _195 = exp2(log2(cbMtdParam._m0[13u].z * _189) * cbMtdParam._m0[13u].w);
    float _199 = exp2(log2(_195 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1798 = isnan(0.0) ? _199 : (isnan(_199) ? 0.0 : max(_199, 0.0));
    float _200 = isnan(1.0) ? _1798 : (isnan(_1798) ? 1.0 : min(_1798, 1.0));
    float _215 = exp2(log2(cbMtdParam._m0[14u].w * _195) * cbMtdParam._m0[14u].z);
    float _1809 = isnan(0.0) ? _215 : (isnan(_215) ? 0.0 : max(_215, 0.0));
    float _216 = isnan(1.0) ? _1809 : (isnan(_1809) ? 1.0 : min(_1809, 1.0));
    float _1820 = isnan(0.0) ? _216 : (isnan(_216) ? 0.0 : max(_216, 0.0));
    float _223 = exp2(log2(cbMtdParam._m0[14u].y * _189) * cbMtdParam._m0[14u].x);
    float _1831 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _225 = (isnan(1.0) ? _1831 : (isnan(_1831) ? 1.0 : min(_1831, 1.0))) - (isnan(1.0) ? _1820 : (isnan(_1820) ? 1.0 : min(_1820, 1.0)));
    float _226 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _227 = _226 * cbMtdParam._m0[10u].x;
    float _228 = _226 * cbMtdParam._m0[10u].y;
    float _229 = _226 * cbMtdParam._m0[10u].z;
    float _239 = exp2(log2(cbMtdParam._m0[13u].x * _195) * cbMtdParam._m0[13u].y);
    float _1862 = isnan(0.0) ? _239 : (isnan(_239) ? 0.0 : max(_239, 0.0));
    float _240 = isnan(1.0) ? _1862 : (isnan(_1862) ? 1.0 : min(_1862, 1.0));
    float _249 = exp2(log2(cbMtdParam._m0[15u].y * _189) * cbMtdParam._m0[15u].x);
    float _1873 = isnan(0.0) ? _249 : (isnan(_249) ? 0.0 : max(_249, 0.0));
    float _250 = isnan(1.0) ? _1873 : (isnan(_1873) ? 1.0 : min(_1873, 1.0));
    float _256 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _257 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _266 = cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x;
    float _271 = _266 * cbMtdParam._m0[11u].w;
    float _272 = sin(_271);
    float _273 = cos(_271);
    vec4 _294 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_184, (-0.0) - _272, _273 * _182) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_184, _273, _272 * _182) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _309 = exp2(log2(cbMtdParam._m0[12u].y * _195) * cbMtdParam._m0[12u].x);
    float _1884 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _310 = isnan(1.0) ? _1884 : (isnan(_1884) ? 1.0 : min(_1884, 1.0));
    float _311 = ((_294.x + (-0.5)) * cbMtdParam._m0[15u].w) * _310;
    float _312 = ((_294.y + (-0.5)) * cbMtdParam._m0[15u].w) * _310;
    float _315 = cbSceneParam._m0[86u].x * (_311 + (_256 / cbSceneParam._m0[86u].x));
    float _316 = (_312 + (_257 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _324 = isnan(cbInstanceData._m0[8u].x) ? _315 : (isnan(_315) ? cbInstanceData._m0[8u].x : max(_315, cbInstanceData._m0[8u].x));
    float _325 = isnan(cbInstanceData._m0[8u].y) ? _316 : (isnan(_316) ? cbInstanceData._m0[8u].y : max(_316, cbInstanceData._m0[8u].y));
    vec4 _329 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _324 : (isnan(_324) ? cbInstanceData._m0[8u].z : min(_324, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _325 : (isnan(_325) ? cbInstanceData._m0[8u].w : min(_325, cbInstanceData._m0[8u].w))));
    float _338 = cbSceneParam._m0[72u].w * _329.x;
    float _339 = cbSceneParam._m0[72u].w * _329.y;
    float _340 = cbSceneParam._m0[72u].w * _329.z;
    float _357 = cbMtdParam._m0[11u].z * _266;
    float _358 = sin(_357);
    float _359 = cos(_357);
    float _360 = _182 + (cbMtdParam._m0[16u].w * _266);
    float _361 = _184 + (cbMtdParam._m0[17u].x * _266);
    float _367 = _311 + 0.5;
    float _369 = _312 + 0.5;
    vec4 _382 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_367 + fma(_361, (-0.0) - _358, _360 * _359))) + cbTextureTilingScale._m0[0u].z, ((_369 + fma(_361, _359, _360 * _358)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _384 = _382.x;
    float _385 = _382.y;
    float _386 = _382.z;
    float _392 = cbMtdParam._m0[16u].x * _266;
    float _393 = sin(_392);
    float _394 = cos(_392);
    float _395 = _182 + (cbMtdParam._m0[16u].y * _266);
    float _396 = _184 + (cbMtdParam._m0[16u].z * _266);
    vec4 _408 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_367 + fma(_396, (-0.0) - _393, _395 * _394))) + cbTextureTilingScale._m0[0u].z, ((_369 + fma(_396, _394, _395 * _393)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _430 = exp2(log2(cbMtdParam._m0[11u].x * _195) * cbMtdParam._m0[11u].y);
    float _1915 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
    float _431 = isnan(1.0) ? _1915 : (isnan(_1915) ? 1.0 : min(_1915, 1.0));
    float _438 = ((((((_408.x - _384) * _250) + _384) * cbMtdParam._m0[9u].x) - _338) * _431) + _338;
    float _439 = ((((((_408.y - _385) * _250) + _385) * cbMtdParam._m0[9u].y) - _339) * _431) + _339;
    float _440 = ((((((_408.z - _386) * _250) + _386) * cbMtdParam._m0[9u].z) - _340) * _431) + _340;
    float _450 = inversesqrt(dot(vec3(_170, _171, _172), vec3(_170, _171, _172)));
    float _451 = _450 * _170;
    float _452 = _450 * _171;
    float _453 = _450 * _172;
    float _1926 = isnan(0.0) ? _200 : (isnan(_200) ? 0.0 : max(_200, 0.0));
    float _454 = isnan(1.0) ? _1926 : (isnan(_1926) ? 1.0 : min(_1926, 1.0));
    float _470 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _510 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _520 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _510);
    float _521 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _510);
    float _522 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _510);
    float _526 = inversesqrt(dot(vec3(_520, _521, _522), vec3(_520, _521, _522)));
    float _527 = _520 * _526;
    float _528 = _521 * _526;
    float _529 = _522 * _526;
    vec4 _533 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_256 * cbSceneParam._m0[86u].x, _257 * cbSceneParam._m0[86u].y));
    float _536 = _533.x * TEXCOORD.z;
    float _537 = dot(vec3(_451, _452, _453), vec3(_527, _528, _529));
    float _540 = _537 * 2.0;
    float _545 = (_540 * _451) - _527;
    float _546 = (_540 * _452) - _528;
    float _547 = (_540 * _453) - _529;
    float _551 = abs(dot(vec3(_527, _528, _529), vec3(_451, _452, _453)));
    float _1937 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _579 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _583 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _587 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _752;
    float _754;
    float _755;
    float _756;
    float _757;
    float _758;
    float _759;
    float _760;
    float _761;
    float _762;
    float _763;
    float _764;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _614 = fma(_587, cbModelParam._m0[26u].z, fma(_583, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _579));
        float _618 = fma(_587, cbModelParam._m0[27u].z, fma(_583, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _579));
        float _622 = fma(_587, cbModelParam._m0[28u].z, fma(_583, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _579));
        float _645 = _579 + _451;
        float _646 = _583 + _452;
        float _647 = _587 + _453;
        float _657 = fma(_647, cbModelParam._m0[26u].z, fma(_646, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _645)) - _614;
        float _658 = fma(_647, cbModelParam._m0[27u].z, fma(_646, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _645)) - _618;
        float _659 = fma(_647, cbModelParam._m0[28u].z, fma(_646, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _645)) - _622;
        float _663 = inversesqrt(dot(vec3(_657, _658, _659), vec3(_657, _658, _659)));
        float _676 = ((_663 * _657) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_614 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _677 = ((_663 * _658) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_618 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _678 = ((_663 * _659) / cbModelParam._m0[34u].z) + ((((((_622 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _681 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_676, _677, _678), 0.0);
        vec4 _688 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_676, _677, _678), 0.0);
        vec4 _695 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_676, _677, _678), 0.0);
        vec4 _702 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_676, _677, _678), 0.0);
        float _715 = exp2((_681.w + (-0.5)) * 20.0) * 2.0;
        float _725 = exp2((_688.w + (-0.5)) * 20.0) * 2.0;
        float _735 = exp2((_695.w + (-0.5)) * 20.0) * 2.0;
        float _745 = exp2((_702.w + (-0.5)) * 20.0) * 2.0;
        float _746 = _745 * (_702.x + (-0.5));
        float _747 = _745 * (_702.y + (-0.5));
        float _748 = _745 * (_702.z + (-0.5));
        _752 = _715 * (_681.z + (-0.5));
        _754 = _715 * (_681.y + (-0.5));
        _755 = _715 * (_681.x + (-0.5));
        _756 = _725 * (_688.z + (-0.5));
        _757 = _725 * (_688.y + (-0.5));
        _758 = _725 * (_688.x + (-0.5));
        _759 = _735 * (_695.z + (-0.5));
        _760 = _735 * (_695.y + (-0.5));
        _761 = _735 * (_695.x + (-0.5));
        _762 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
        _763 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
        _764 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    }
    else
    {
        _752 = _753;
        _754 = _753;
        _755 = _753;
        _756 = _753;
        _757 = _753;
        _758 = _753;
        _759 = _753;
        _760 = _753;
        _761 = _753;
        _762 = _753;
        _763 = _753;
        _764 = _753;
    }
    float _926;
    float _927;
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    float _933;
    float _934;
    float _935;
    float _936;
    float _937;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _790 = fma(_587, cbModelParam._m0[30u].z, fma(_583, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _579));
        float _794 = fma(_587, cbModelParam._m0[31u].z, fma(_583, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _579));
        float _798 = fma(_587, cbModelParam._m0[32u].z, fma(_583, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _579));
        float _821 = _579 + _451;
        float _822 = _583 + _452;
        float _823 = _587 + _453;
        float _833 = fma(_823, cbModelParam._m0[30u].z, fma(_822, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _821)) - _790;
        float _834 = fma(_823, cbModelParam._m0[31u].z, fma(_822, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _821)) - _794;
        float _835 = fma(_823, cbModelParam._m0[32u].z, fma(_822, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _821)) - _798;
        float _839 = inversesqrt(dot(vec3(_833, _834, _835), vec3(_833, _834, _835)));
        float _852 = ((_839 * _833) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_790 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _853 = ((_839 * _834) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_794 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _854 = ((_839 * _835) / cbModelParam._m0[35u].z) + ((((((_798 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _856 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _863 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _870 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _877 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        float _889 = exp2((_856.w + (-0.5)) * 20.0) * 2.0;
        float _899 = exp2((_863.w + (-0.5)) * 20.0) * 2.0;
        float _909 = exp2((_870.w + (-0.5)) * 20.0) * 2.0;
        float _919 = exp2((_877.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_877.x + (-0.5));
        float _921 = _919 * (_877.y + (-0.5));
        float _922 = _919 * (_877.z + (-0.5));
        _926 = _889 * (_856.z + (-0.5));
        _927 = _889 * (_856.y + (-0.5));
        _928 = _889 * (_856.x + (-0.5));
        _929 = _899 * (_863.z + (-0.5));
        _930 = _899 * (_863.y + (-0.5));
        _931 = _899 * (_863.x + (-0.5));
        _932 = _909 * (_870.z + (-0.5));
        _933 = _909 * (_870.y + (-0.5));
        _934 = _909 * (_870.x + (-0.5));
        _935 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        _936 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        _937 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    }
    else
    {
        _926 = _753;
        _927 = _753;
        _928 = _753;
        _929 = _753;
        _930 = _753;
        _931 = _753;
        _932 = _753;
        _933 = _753;
        _934 = _753;
        _935 = _753;
        _936 = _753;
        _937 = _753;
    }
    float _952 = _545 * 0.5;
    float _953 = _546 * 0.5;
    float _954 = _547 * 0.5;
    float _955 = dot(vec4(_952, _953, _954, 1.0), vec4(_928, _931, _934, _937));
    float _958 = dot(vec4(_952, _953, _954, 1.0), vec4(_927, _930, _933, _936));
    float _961 = dot(vec4(_952, _953, _954, 1.0), vec4(_926, _929, _932, _935));
    float _996;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _968 = dot(vec4(_952, _953, _954, 1.0), vec4(_752, _756, _759, _762));
        float _972 = dot(vec4(_952, _953, _954, 1.0), vec4(_754, _757, _760, _763));
        float _976 = dot(vec4(_952, _953, _954, 1.0), vec4(_755, _758, _761, _764));
        float _983 = dot(vec4(cbModelParam._m0[39u]), vec4(_952, _953, _954, 1.0));
        _996 = dot(vec3(isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0)), isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0)), isnan(0.0) ? _968 : (isnan(_968) ? 0.0 : max(_968, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_983) ? 0.0 : (isnan(0.0) ? _983 : max(0.0, _983))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _996 = 1.0;
    }
    float _1007;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _998 = dot(vec4(cbModelParam._m0[40u]), vec4(_952, _953, _954, 1.0));
        _1007 = dot(vec3(isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0)), isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0)), isnan(0.0) ? _961 : (isnan(_961) ? 0.0 : max(_961, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_998) ? 0.0 : (isnan(0.0) ? _998 : max(0.0, _998))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1007 = 1.0;
    }
    float _1011 = (_1007 * cbModelParam._m0[1u].x) + (_996 * (1.0 - cbModelParam._m0[1u].x));
    float _1017 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1098;
    float _1100;
    float _1102;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1065 = fma(_587, cbModelParam._m0[13u].z, fma(_583, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _579)) + cbModelParam._m0[13u].w;
        float _1069 = fma(_587, cbModelParam._m0[14u].z, fma(_583, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _579)) + cbModelParam._m0[14u].w;
        float _1073 = fma(_587, cbModelParam._m0[15u].z, fma(_583, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _579)) + cbModelParam._m0[15u].w;
        float _1076 = fma(_547, cbModelParam._m0[13u].z, fma(_546, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _545));
        float _1079 = fma(_547, cbModelParam._m0[14u].z, fma(_546, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _545));
        float _1082 = fma(_547, cbModelParam._m0[15u].z, fma(_546, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _545));
        float _1108;
        if (_1076 > 0.0)
        {
            _1108 = abs((1.0 - _1065) / _1076);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1076 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1065 + 1.0) / _1076);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1108 = frontier_phi_16_14_ladder;
        }
        float _1430;
        if (_1079 > 0.0)
        {
            _1430 = abs((1.0 - _1069) / _1079);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1079 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1069 + 1.0) / _1079);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1430 = frontier_phi_25_21_ladder;
        }
        float _1588;
        if (_1082 > 0.0)
        {
            _1588 = abs((1.0 - _1073) / _1082);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1082 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1073 + 1.0) / _1082);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1588 = frontier_phi_37_32_ladder;
        }
        float _1590 = isnan(_1430) ? _1108 : (isnan(_1108) ? _1430 : min(_1108, _1430));
        float _1591 = isnan(_1588) ? _1590 : (isnan(_1590) ? _1588 : min(_1590, _1588));
        float _1595 = (_1591 * _1076) + _1065;
        float _1596 = (_1591 * _1079) + _1069;
        float _1597 = (_1591 * _1082) + _1073;
        float _1598 = _1591 * 9.9999997473787516355514526367188e-05;
        float _1599 = (-1.0) - _1598;
        float _1601 = _1598 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1597 > _1601) || ((_1597 < _1599) || ((_1596 > _1601) || ((_1596 < _1599) || ((_1595 < _1599) || (_1595 > _1601))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1673 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1597, cbModelParam._m0[9u].z, fma(_1596, cbModelParam._m0[9u].y, _1595 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1597, cbModelParam._m0[10u].z, fma(_1596, cbModelParam._m0[10u].y, _1595 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1597, cbModelParam._m0[11u].z, fma(_1596, cbModelParam._m0[11u].y, _1595 * cbModelParam._m0[11u].x))), _1017);
            frontier_phi_15_37_ladder = _1673.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1673.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1673.x * cbModelParam._m0[1u].y;
        }
        _1098 = frontier_phi_15_37_ladder_2;
        _1100 = frontier_phi_15_37_ladder_1;
        _1102 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1086 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_545, _546, _547), _1017);
        _1098 = _1086.x * cbModelParam._m0[1u].y;
        _1100 = _1086.y * cbModelParam._m0[1u].y;
        _1102 = _1086.z * cbModelParam._m0[1u].y;
    }
    float _1105 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1196;
    float _1198;
    float _1200;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1160 = fma(_587, cbModelParam._m0[21u].z, fma(_583, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _579)) + cbModelParam._m0[21u].w;
        float _1164 = fma(_587, cbModelParam._m0[22u].z, fma(_583, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _579)) + cbModelParam._m0[22u].w;
        float _1168 = fma(_587, cbModelParam._m0[23u].z, fma(_583, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _579)) + cbModelParam._m0[23u].w;
        float _1171 = fma(_547, cbModelParam._m0[21u].z, fma(_546, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _545));
        float _1174 = fma(_547, cbModelParam._m0[22u].z, fma(_546, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _545));
        float _1177 = fma(_547, cbModelParam._m0[23u].z, fma(_546, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _545));
        float _1435;
        if (_1171 > 0.0)
        {
            _1435 = abs((1.0 - _1160) / _1171);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1171 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1160 + 1.0) / _1171);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1435 = frontier_phi_27_23_ladder;
        }
        float _1614;
        if (_1174 > 0.0)
        {
            _1614 = abs((1.0 - _1164) / _1174);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1174 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1164 + 1.0) / _1174);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1614 = frontier_phi_39_34_ladder;
        }
        float _1682;
        if (_1177 > 0.0)
        {
            _1682 = abs((1.0 - _1168) / _1177);
        }
        else
        {
            float frontier_phi_45_44_ladder;
            if (_1177 < 0.0)
            {
                frontier_phi_45_44_ladder = abs((_1168 + 1.0) / _1177);
            }
            else
            {
                frontier_phi_45_44_ladder = 5000.0;
            }
            _1682 = frontier_phi_45_44_ladder;
        }
        float _1684 = isnan(_1614) ? _1435 : (isnan(_1435) ? _1614 : min(_1435, _1614));
        float _1685 = isnan(_1682) ? _1684 : (isnan(_1684) ? _1682 : min(_1684, _1682));
        float _1689 = (_1685 * _1171) + _1160;
        float _1690 = (_1685 * _1174) + _1164;
        float _1691 = (_1685 * _1177) + _1168;
        float _1692 = _1685 * 9.9999997473787516355514526367188e-05;
        float _1693 = (-1.0) - _1692;
        float _1695 = _1692 + 1.0;
        float frontier_phi_24_45_ladder;
        float frontier_phi_24_45_ladder_1;
        float frontier_phi_24_45_ladder_2;
        if ((_1691 > _1695) || ((_1691 < _1693) || ((_1690 > _1695) || ((_1690 < _1693) || ((_1689 < _1693) || (_1689 > _1695))))))
        {
            frontier_phi_24_45_ladder = 0.0;
            frontier_phi_24_45_ladder_1 = 0.0;
            frontier_phi_24_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1724 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1691, cbModelParam._m0[17u].z, fma(_1690, cbModelParam._m0[17u].y, _1689 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1691, cbModelParam._m0[18u].z, fma(_1690, cbModelParam._m0[18u].y, _1689 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1691, cbModelParam._m0[19u].z, fma(_1690, cbModelParam._m0[19u].y, _1689 * cbModelParam._m0[19u].x))), _1105);
            frontier_phi_24_45_ladder = _1724.x * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_1 = _1724.z * cbModelParam._m0[1u].z;
            frontier_phi_24_45_ladder_2 = _1724.y * cbModelParam._m0[1u].z;
        }
        _1196 = frontier_phi_24_45_ladder;
        _1198 = frontier_phi_24_45_ladder_2;
        _1200 = frontier_phi_24_45_ladder_1;
    }
    else
    {
        vec4 _1180 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_545, _546, _547), _1105);
        _1196 = _1180.x * cbModelParam._m0[1u].z;
        _1198 = _1180.y * cbModelParam._m0[1u].z;
        _1200 = _1180.z * cbModelParam._m0[1u].z;
    }
    float _1212 = _536 * 0.01200000010430812835693359375;
    float _1214 = _1212 * ((cbModelParam._m0[1u].w * (_1196 - _1098)) + _1098);
    float _1215 = _1212 * ((cbModelParam._m0[1u].w * (_1198 - _1100)) + _1100);
    float _1216 = _1212 * ((cbModelParam._m0[1u].w * (_1200 - _1102)) + _1102);
    float _1237 = fma(_1216, cbSceneParam._m0[89u].z, fma(_1215, cbSceneParam._m0[89u].y, _1214 * cbSceneParam._m0[89u].x));
    float _1240 = fma(_1216, cbSceneParam._m0[90u].z, fma(_1215, cbSceneParam._m0[90u].y, _1214 * cbSceneParam._m0[90u].x));
    float _1243 = fma(_1216, cbSceneParam._m0[91u].z, fma(_1215, cbSceneParam._m0[91u].y, _1214 * cbSceneParam._m0[91u].x));
    vec4 _1251 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_256, _257));
    float _1253 = _1251.w;
    uint _1268 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1275 = floatBitsToUint(cbInstanceData._m0[_1268 + 5u]).x * 14u;
    float _1283 = (cbLight._m0[_1275 + 13u].x * (_536 + (-1.0))) + 1.0;
    uint _1284 = _1275 + 8u;
    float _1295 = cbLight._m0[_1275].x + _527;
    float _1296 = cbLight._m0[_1275].y + _528;
    float _1297 = cbLight._m0[_1275].z + _529;
    float _1301 = inversesqrt(dot(vec3(_1295, _1296, _1297), vec3(_1295, _1296, _1297)));
    float _1305 = dot(vec3(_451, _452, _453), vec3(cbLight._m0[_1275].xyz));
    float _2063 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
    float _1308 = isnan(1.0) ? _2063 : (isnan(_2063) ? 1.0 : min(_2063, 1.0));
    float _2074 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _1310 = dot(vec3(cbLight._m0[_1275].xyz), vec3(_1295 * _1301, _1296 * _1301, _1297 * _1301));
    float _2085 = isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0));
    float _1320 = (exp2(log2(1.0 - (isnan(1.0) ? _2085 : (isnan(_2085) ? 1.0 : min(_2085, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1326 = (0.5 / ((_1308 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2074 : (isnan(_2074) ? 1.0 : min(_2074, 1.0))))) * _1308;
    float _2096 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
    float _1328 = (isnan(1.0) ? _2096 : (isnan(_2096) ? 1.0 : min(_2096, 1.0))) * 0.31831014156341552734375;
    float _1330 = isnan(1.0) ? _1283 : (isnan(_1283) ? 1.0 : min(_1283, 1.0));
    uint _1351 = (_1268 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1357 = cbInstanceData._m0[_1351].x * (isnan(4.0) ? _227 : (isnan(_227) ? 4.0 : min(_227, 4.0)));
    float _1358 = cbInstanceData._m0[_1351].y * (isnan(4.0) ? _228 : (isnan(_228) ? 4.0 : min(_228, 4.0)));
    float _1359 = cbInstanceData._m0[_1351].z * (isnan(4.0) ? _229 : (isnan(_229) ? 4.0 : min(_229, 4.0)));
    float _2112 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _1368 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _1937 : (isnan(_1937) ? 1.0 : min(_1937, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1375 = (((((((cbLight._m0[_1284].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1253))) * _1320) * _1328) * _1330) + ((isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0))) * _1011)) * cbPerFrame._m0[3u].x) + (_1368 * (_438 - (_438 * _240)))) + _1357;
    float _1376 = (((((((cbLight._m0[_1284].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1253))) * _1320) * _1328) * _1330) + ((isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0))) * _1011)) * cbPerFrame._m0[3u].x) + (_1368 * (_439 - (_439 * _240)))) + _1358;
    float _1377 = (((((((cbLight._m0[_1284].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1253))) * _1320) * _1328) * _1330) + ((isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0))) * _1011)) * cbPerFrame._m0[3u].x) + (_1368 * (_440 - (_440 * _240)))) + _1359;
    float _2138 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1390 = isnan(1.0) ? _2138 : (isnan(_2138) ? 1.0 : min(_2138, 1.0));
    float _1396 = cbInstanceData._m0[_1268 + 6u].w * (isnan(1.0) ? _2112 : (isnan(_2112) ? 1.0 : min(_2112, 1.0)));
    float _1401 = _256 / cbSceneParam._m0[86u].x;
    float _1402 = _257 / cbSceneParam._m0[86u].y;
    vec4 _1416 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1401, _1402, (log2((isnan(cbSceneParam._m0[77u].w) ? _470 : (isnan(_470) ? cbSceneParam._m0[77u].w : min(_470, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1418 = _1416.x;
    float _1419 = _1416.y;
    float _1420 = _1416.z;
    float _1421 = _1416.w;
    float _1482;
    float _1484;
    float _1486;
    float _1488;
    if (_470 > cbSceneParam._m0[78u].w)
    {
        float _1444 = isnan(_470) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _470 : min(cbSceneParam._m0[80u].w, _470));
        float _1445 = _1444 / _470;
        float _1456 = _1445 * _520;
        float _1457 = _521 * _1445;
        float _1458 = (-0.0) - _1457;
        float _1459 = _1445 * _522;
        float _1461 = (cbSceneParam._m0[77u].w * _1458) / _1444;
        float _1462 = _1461 + cbSceneParam._m0[79u].w;
        float _1463 = cbSceneParam._m0[79u].w - _1457;
        float _1469 = sqrt(((_1456 * _1456) + (_1457 * _1457)) + (_1459 * _1459));
        float _1472 = (1.0 - (cbSceneParam._m0[77u].w / _1444)) * _1469;
        float _1478 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1480 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1619;
        if (abs((_1458 - _1461) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1619 = ((((_1462 > 0.0) ? exp2(_1478 * _1462) : (2.0 - exp2(_1480 * _1462))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1472;
        }
        else
        {
            float _1561 = 1.0 / cbSceneParam._m0[80u].x;
            float _1562 = isnan(_1463) ? _1462 : (isnan(_1462) ? _1463 : max(_1462, _1463));
            float _1563 = isnan(_1463) ? _1462 : (isnan(_1462) ? _1463 : min(_1462, _1463));
            float _1572 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : min(_1562, 0.0));
            float _1573 = isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : min(_1563, 0.0));
            _1619 = ((abs(_1469 / _1458) * cbSceneParam._m0[80u].y) * ((((_1572 - _1573) * 2.0) - ((exp2(_1478 * (isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0)))) - exp2(_1478 * (isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))))) * _1561)) - ((exp2(_1480 * _1572) - exp2(_1480 * _1573)) * _1561))) + (_1472 * cbSceneParam._m0[80u].z);
        }
        vec4 _1621 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1401, _1402, 1.0), 0.0);
        float _1630 = exp2((_1619 * (-1.44269502162933349609375)) * (1.0 - _1621.w));
        float _1631 = log2(_1630);
        float _1647 = log2(_1421);
        _1482 = (exp2(_1647 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1631 * cbSceneParam._m0[78u].x)) * _1621.x) / cbSceneParam._m0[78u].x)) + _1418;
        _1484 = (exp2(_1647 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1631 * cbSceneParam._m0[78u].y)) * _1621.y) / cbSceneParam._m0[78u].y)) + _1419;
        _1486 = (exp2(_1647 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1631 * cbSceneParam._m0[78u].z)) * _1621.z) / cbSceneParam._m0[78u].z)) + _1420;
        _1488 = _1630 * _1421;
    }
    else
    {
        _1482 = _1418;
        _1484 = _1419;
        _1486 = _1420;
        _1488 = _1421;
    }
    float _1499 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1500 = _1499 == 3.0;
    float _1502 = log2(_1488);
    float _1506 = exp2(_1502 * cbSceneParam._m0[78u].x);
    float _1507 = exp2(_1502 * cbSceneParam._m0[78u].y);
    float _1508 = exp2(_1502 * cbSceneParam._m0[78u].z);
    float _1509 = _1506 * (isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0)));
    float _1510 = _1507 * (isnan(0.0) ? _1376 : (isnan(_1376) ? 0.0 : max(_1376, 0.0)));
    float _1511 = _1508 * (isnan(0.0) ? _1377 : (isnan(_1377) ? 0.0 : max(_1377, 0.0)));
    float _1520 = (_1499 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1520 * (_1500 ? _1509 : (_1509 + (cbSceneParam._m0[72u].w * _1482)));
    SV_Target.y = _1520 * (_1500 ? _1510 : (_1510 + (cbSceneParam._m0[72u].w * _1484)));
    SV_Target.z = _1520 * (_1500 ? _1511 : (_1511 + (cbSceneParam._m0[72u].w * _1486)));
    SV_Target.w = _1396;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1357) * _1390) * _1506) * _1520;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1358) * _1390) * _1507) * _1520;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1359) * _1390) * _1508) * _1520;
    SV_Target_1.w = _1396;
}


