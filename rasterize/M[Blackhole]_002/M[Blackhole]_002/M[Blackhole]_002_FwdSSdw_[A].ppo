#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_002_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _774;
float _1870;
float _1871;
float _1872;
float _1873;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _166 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _167 = _166 * NORMAL.x;
    float _168 = _166 * NORMAL.y;
    float _169 = _166 * NORMAL.z;
    float _174;
    float _175;
    float _176;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _174 = (-0.0) - _167;
        _175 = (-0.0) - _168;
        _176 = (-0.0) - _169;
    }
    else
    {
        _174 = _167;
        _175 = _168;
        _176 = _169;
    }
    float _186 = TEXCOORD.x + (-0.5);
    float _188 = TEXCOORD.y + (-0.5);
    float _193 = 1.0 - sqrt((_188 * _188) + (_186 * _186));
    float _199 = exp2(log2(cbMtdParam._m0[13u].z * _193) * cbMtdParam._m0[13u].w);
    float _203 = exp2(log2(_199 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1882 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _204 = isnan(1.0) ? _1882 : (isnan(_1882) ? 1.0 : min(_1882, 1.0));
    float _219 = exp2(log2(cbMtdParam._m0[14u].w * _199) * cbMtdParam._m0[14u].z);
    float _1893 = isnan(0.0) ? _219 : (isnan(_219) ? 0.0 : max(_219, 0.0));
    float _220 = isnan(1.0) ? _1893 : (isnan(_1893) ? 1.0 : min(_1893, 1.0));
    float _1904 = isnan(0.0) ? _220 : (isnan(_220) ? 0.0 : max(_220, 0.0));
    float _227 = exp2(log2(cbMtdParam._m0[14u].y * _193) * cbMtdParam._m0[14u].x);
    float _1915 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _229 = (isnan(1.0) ? _1915 : (isnan(_1915) ? 1.0 : min(_1915, 1.0))) - (isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0)));
    float _230 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _231 = _230 * cbMtdParam._m0[10u].x;
    float _232 = _230 * cbMtdParam._m0[10u].y;
    float _233 = _230 * cbMtdParam._m0[10u].z;
    float _243 = exp2(log2(cbMtdParam._m0[13u].x * _199) * cbMtdParam._m0[13u].y);
    float _1946 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _244 = isnan(1.0) ? _1946 : (isnan(_1946) ? 1.0 : min(_1946, 1.0));
    float _253 = exp2(log2(cbMtdParam._m0[15u].y * _193) * cbMtdParam._m0[15u].x);
    float _1957 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _254 = isnan(1.0) ? _1957 : (isnan(_1957) ? 1.0 : min(_1957, 1.0));
    float _270 = cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x;
    float _275 = _270 * cbMtdParam._m0[11u].w;
    float _276 = sin(_275);
    float _277 = cos(_275);
    vec4 _298 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_188, (-0.0) - _276, _277 * _186) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_188, _277, _276 * _186) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _313 = exp2(log2(cbMtdParam._m0[12u].y * _199) * cbMtdParam._m0[12u].x);
    float _1968 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _314 = isnan(1.0) ? _1968 : (isnan(_1968) ? 1.0 : min(_1968, 1.0));
    float _315 = ((_298.x + (-0.5)) * cbMtdParam._m0[15u].w) * _314;
    float _316 = ((_298.y + (-0.5)) * cbMtdParam._m0[15u].w) * _314;
    float _319 = cbSceneParam._m0[86u].x * (_315 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _320 = (_316 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _328 = isnan(cbInstanceData._m0[8u].x) ? _319 : (isnan(_319) ? cbInstanceData._m0[8u].x : max(_319, cbInstanceData._m0[8u].x));
    float _329 = isnan(cbInstanceData._m0[8u].y) ? _320 : (isnan(_320) ? cbInstanceData._m0[8u].y : max(_320, cbInstanceData._m0[8u].y));
    vec4 _333 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _328 : (isnan(_328) ? cbInstanceData._m0[8u].z : min(_328, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _329 : (isnan(_329) ? cbInstanceData._m0[8u].w : min(_329, cbInstanceData._m0[8u].w))));
    float _342 = cbSceneParam._m0[72u].w * _333.x;
    float _343 = cbSceneParam._m0[72u].w * _333.y;
    float _344 = cbSceneParam._m0[72u].w * _333.z;
    float _361 = cbMtdParam._m0[11u].z * _270;
    float _362 = sin(_361);
    float _363 = cos(_361);
    float _364 = _186 + (cbMtdParam._m0[16u].w * _270);
    float _365 = _188 + (cbMtdParam._m0[17u].x * _270);
    float _371 = _315 + 0.5;
    float _373 = _316 + 0.5;
    vec4 _386 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_371 + fma(_365, (-0.0) - _362, _364 * _363))) + cbTextureTilingScale._m0[0u].z, ((_373 + fma(_365, _363, _364 * _362)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _388 = _386.x;
    float _389 = _386.y;
    float _390 = _386.z;
    float _396 = cbMtdParam._m0[16u].x * _270;
    float _397 = sin(_396);
    float _398 = cos(_396);
    float _399 = _186 + (cbMtdParam._m0[16u].y * _270);
    float _400 = _188 + (cbMtdParam._m0[16u].z * _270);
    vec4 _412 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_371 + fma(_400, (-0.0) - _397, _399 * _398))) + cbTextureTilingScale._m0[0u].z, ((_373 + fma(_400, _398, _399 * _397)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _434 = exp2(log2(cbMtdParam._m0[11u].x * _199) * cbMtdParam._m0[11u].y);
    float _1999 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
    float _435 = isnan(1.0) ? _1999 : (isnan(_1999) ? 1.0 : min(_1999, 1.0));
    float _442 = ((((((_412.x - _388) * _254) + _388) * cbMtdParam._m0[9u].x) - _342) * _435) + _342;
    float _443 = ((((((_412.y - _389) * _254) + _389) * cbMtdParam._m0[9u].y) - _343) * _435) + _343;
    float _444 = ((((((_412.z - _390) * _254) + _390) * cbMtdParam._m0[9u].z) - _344) * _435) + _344;
    float _454 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _455 = _454 * _174;
    float _456 = _454 * _175;
    float _457 = _454 * _176;
    float _2010 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _458 = isnan(1.0) ? _2010 : (isnan(_2010) ? 1.0 : min(_2010, 1.0));
    float _474 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _514 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _524 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _514);
    float _525 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _514);
    float _526 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _514);
    float _530 = inversesqrt(dot(vec3(_524, _525, _526), vec3(_524, _525, _526)));
    float _531 = _524 * _530;
    float _532 = _525 * _530;
    float _533 = _526 * _530;
    vec4 _538 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _540 = _538.w;
    float _545 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _546 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _554 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_545 * cbSceneParam._m0[86u].x, _546 * cbSceneParam._m0[86u].y));
    float _557 = _554.x * TEXCOORD.z;
    float _558 = dot(vec3(_455, _456, _457), vec3(_531, _532, _533));
    float _561 = _558 * 2.0;
    float _566 = (_561 * _455) - _531;
    float _567 = (_561 * _456) - _532;
    float _568 = (_561 * _457) - _533;
    float _572 = abs(dot(vec3(_531, _532, _533), vec3(_455, _456, _457)));
    float _2021 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _600 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _604 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _608 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _773;
    float _775;
    float _776;
    float _777;
    float _778;
    float _779;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _635 = fma(_608, cbModelParam._m0[26u].z, fma(_604, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _600));
        float _639 = fma(_608, cbModelParam._m0[27u].z, fma(_604, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _600));
        float _643 = fma(_608, cbModelParam._m0[28u].z, fma(_604, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _600));
        float _666 = _600 + _455;
        float _667 = _604 + _456;
        float _668 = _608 + _457;
        float _678 = fma(_668, cbModelParam._m0[26u].z, fma(_667, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _666)) - _635;
        float _679 = fma(_668, cbModelParam._m0[27u].z, fma(_667, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _666)) - _639;
        float _680 = fma(_668, cbModelParam._m0[28u].z, fma(_667, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _666)) - _643;
        float _684 = inversesqrt(dot(vec3(_678, _679, _680), vec3(_678, _679, _680)));
        float _697 = ((_684 * _678) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_635 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _698 = ((_684 * _679) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_639 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _699 = ((_684 * _680) / cbModelParam._m0[34u].z) + ((((((_643 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _702 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_697, _698, _699), 0.0);
        vec4 _709 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_697, _698, _699), 0.0);
        vec4 _716 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_697, _698, _699), 0.0);
        vec4 _723 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_697, _698, _699), 0.0);
        float _736 = exp2((_702.w + (-0.5)) * 20.0) * 2.0;
        float _746 = exp2((_709.w + (-0.5)) * 20.0) * 2.0;
        float _756 = exp2((_716.w + (-0.5)) * 20.0) * 2.0;
        float _766 = exp2((_723.w + (-0.5)) * 20.0) * 2.0;
        float _767 = _766 * (_723.x + (-0.5));
        float _768 = _766 * (_723.y + (-0.5));
        float _769 = _766 * (_723.z + (-0.5));
        _773 = _736 * (_702.z + (-0.5));
        _775 = _736 * (_702.y + (-0.5));
        _776 = _736 * (_702.x + (-0.5));
        _777 = _746 * (_709.z + (-0.5));
        _778 = _746 * (_709.y + (-0.5));
        _779 = _746 * (_709.x + (-0.5));
        _780 = _756 * (_716.z + (-0.5));
        _781 = _756 * (_716.y + (-0.5));
        _782 = _756 * (_716.x + (-0.5));
        _783 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
        _784 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
        _785 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    }
    else
    {
        _773 = _774;
        _775 = _774;
        _776 = _774;
        _777 = _774;
        _778 = _774;
        _779 = _774;
        _780 = _774;
        _781 = _774;
        _782 = _774;
        _783 = _774;
        _784 = _774;
        _785 = _774;
    }
    float _947;
    float _948;
    float _949;
    float _950;
    float _951;
    float _952;
    float _953;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _811 = fma(_608, cbModelParam._m0[30u].z, fma(_604, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _600));
        float _815 = fma(_608, cbModelParam._m0[31u].z, fma(_604, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _600));
        float _819 = fma(_608, cbModelParam._m0[32u].z, fma(_604, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _600));
        float _842 = _600 + _455;
        float _843 = _604 + _456;
        float _844 = _608 + _457;
        float _854 = fma(_844, cbModelParam._m0[30u].z, fma(_843, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _842)) - _811;
        float _855 = fma(_844, cbModelParam._m0[31u].z, fma(_843, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _842)) - _815;
        float _856 = fma(_844, cbModelParam._m0[32u].z, fma(_843, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _842)) - _819;
        float _860 = inversesqrt(dot(vec3(_854, _855, _856), vec3(_854, _855, _856)));
        float _873 = ((_860 * _854) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_811 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _874 = ((_860 * _855) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_815 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _875 = ((_860 * _856) / cbModelParam._m0[35u].z) + ((((((_819 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _877 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_873, _874, _875), 0.0);
        vec4 _884 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_873, _874, _875), 0.0);
        vec4 _891 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_873, _874, _875), 0.0);
        vec4 _898 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_873, _874, _875), 0.0);
        float _910 = exp2((_877.w + (-0.5)) * 20.0) * 2.0;
        float _920 = exp2((_884.w + (-0.5)) * 20.0) * 2.0;
        float _930 = exp2((_891.w + (-0.5)) * 20.0) * 2.0;
        float _940 = exp2((_898.w + (-0.5)) * 20.0) * 2.0;
        float _941 = _940 * (_898.x + (-0.5));
        float _942 = _940 * (_898.y + (-0.5));
        float _943 = _940 * (_898.z + (-0.5));
        _947 = _910 * (_877.z + (-0.5));
        _948 = _910 * (_877.y + (-0.5));
        _949 = _910 * (_877.x + (-0.5));
        _950 = _920 * (_884.z + (-0.5));
        _951 = _920 * (_884.y + (-0.5));
        _952 = _920 * (_884.x + (-0.5));
        _953 = _930 * (_891.z + (-0.5));
        _954 = _930 * (_891.y + (-0.5));
        _955 = _930 * (_891.x + (-0.5));
        _956 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
        _957 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        _958 = isnan(0.0) ? _941 : (isnan(_941) ? 0.0 : max(_941, 0.0));
    }
    else
    {
        _947 = _774;
        _948 = _774;
        _949 = _774;
        _950 = _774;
        _951 = _774;
        _952 = _774;
        _953 = _774;
        _954 = _774;
        _955 = _774;
        _956 = _774;
        _957 = _774;
        _958 = _774;
    }
    float _973 = _566 * 0.5;
    float _974 = _567 * 0.5;
    float _975 = _568 * 0.5;
    float _976 = dot(vec4(_973, _974, _975, 1.0), vec4(_949, _952, _955, _958));
    float _979 = dot(vec4(_973, _974, _975, 1.0), vec4(_948, _951, _954, _957));
    float _982 = dot(vec4(_973, _974, _975, 1.0), vec4(_947, _950, _953, _956));
    float _1017;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _989 = dot(vec4(_973, _974, _975, 1.0), vec4(_773, _777, _780, _783));
        float _993 = dot(vec4(_973, _974, _975, 1.0), vec4(_775, _778, _781, _784));
        float _997 = dot(vec4(_973, _974, _975, 1.0), vec4(_776, _779, _782, _785));
        float _1004 = dot(vec4(cbModelParam._m0[39u]), vec4(_973, _974, _975, 1.0));
        _1017 = dot(vec3(isnan(0.0) ? _997 : (isnan(_997) ? 0.0 : max(_997, 0.0)), isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0)), isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1004) ? 0.0 : (isnan(0.0) ? _1004 : max(0.0, _1004))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1017 = 1.0;
    }
    float _1028;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1019 = dot(vec4(cbModelParam._m0[40u]), vec4(_973, _974, _975, 1.0));
        _1028 = dot(vec3(isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0)), isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0)), isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1019) ? 0.0 : (isnan(0.0) ? _1019 : max(0.0, _1019))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1028 = 1.0;
    }
    float _1032 = (_1028 * cbModelParam._m0[1u].x) + (_1017 * (1.0 - cbModelParam._m0[1u].x));
    float _1038 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1119;
    float _1121;
    float _1123;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1086 = fma(_608, cbModelParam._m0[13u].z, fma(_604, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _600)) + cbModelParam._m0[13u].w;
        float _1090 = fma(_608, cbModelParam._m0[14u].z, fma(_604, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _600)) + cbModelParam._m0[14u].w;
        float _1094 = fma(_608, cbModelParam._m0[15u].z, fma(_604, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _600)) + cbModelParam._m0[15u].w;
        float _1097 = fma(_568, cbModelParam._m0[13u].z, fma(_567, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _566));
        float _1100 = fma(_568, cbModelParam._m0[14u].z, fma(_567, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _566));
        float _1103 = fma(_568, cbModelParam._m0[15u].z, fma(_567, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _566));
        float _1129;
        if (_1097 > 0.0)
        {
            _1129 = abs((1.0 - _1086) / _1097);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1097 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1086 + 1.0) / _1097);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1129 = frontier_phi_16_14_ladder;
        }
        float _1451;
        if (_1100 > 0.0)
        {
            _1451 = abs((1.0 - _1090) / _1100);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1100 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1090 + 1.0) / _1100);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1451 = frontier_phi_25_21_ladder;
        }
        float _1634;
        if (_1103 > 0.0)
        {
            _1634 = abs((1.0 - _1094) / _1103);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1103 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1094 + 1.0) / _1103);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _1634 = frontier_phi_39_32_ladder;
        }
        float _1636 = isnan(_1451) ? _1129 : (isnan(_1129) ? _1451 : min(_1129, _1451));
        float _1637 = isnan(_1634) ? _1636 : (isnan(_1636) ? _1634 : min(_1636, _1634));
        float _1641 = (_1637 * _1097) + _1086;
        float _1642 = (_1637 * _1100) + _1090;
        float _1643 = (_1637 * _1103) + _1094;
        float _1644 = _1637 * 9.9999997473787516355514526367188e-05;
        float _1645 = (-1.0) - _1644;
        float _1647 = _1644 + 1.0;
        float frontier_phi_15_39_ladder;
        float frontier_phi_15_39_ladder_1;
        float frontier_phi_15_39_ladder_2;
        if ((_1643 > _1647) || ((_1643 < _1645) || ((_1642 > _1647) || ((_1642 < _1645) || ((_1641 < _1645) || (_1641 > _1647))))))
        {
            frontier_phi_15_39_ladder = 0.0;
            frontier_phi_15_39_ladder_1 = 0.0;
            frontier_phi_15_39_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1725 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1643, cbModelParam._m0[9u].z, fma(_1642, cbModelParam._m0[9u].y, _1641 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1643, cbModelParam._m0[10u].z, fma(_1642, cbModelParam._m0[10u].y, _1641 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1643, cbModelParam._m0[11u].z, fma(_1642, cbModelParam._m0[11u].y, _1641 * cbModelParam._m0[11u].x))), _1038);
            frontier_phi_15_39_ladder = _1725.z * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_1 = _1725.y * cbModelParam._m0[1u].y;
            frontier_phi_15_39_ladder_2 = _1725.x * cbModelParam._m0[1u].y;
        }
        _1119 = frontier_phi_15_39_ladder_2;
        _1121 = frontier_phi_15_39_ladder_1;
        _1123 = frontier_phi_15_39_ladder;
    }
    else
    {
        vec4 _1107 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_566, _567, _568), _1038);
        _1119 = _1107.x * cbModelParam._m0[1u].y;
        _1121 = _1107.y * cbModelParam._m0[1u].y;
        _1123 = _1107.z * cbModelParam._m0[1u].y;
    }
    float _1126 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1217;
    float _1219;
    float _1221;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1181 = fma(_608, cbModelParam._m0[21u].z, fma(_604, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _600)) + cbModelParam._m0[21u].w;
        float _1185 = fma(_608, cbModelParam._m0[22u].z, fma(_604, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _600)) + cbModelParam._m0[22u].w;
        float _1189 = fma(_608, cbModelParam._m0[23u].z, fma(_604, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _600)) + cbModelParam._m0[23u].w;
        float _1192 = fma(_568, cbModelParam._m0[21u].z, fma(_567, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _566));
        float _1195 = fma(_568, cbModelParam._m0[22u].z, fma(_567, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _566));
        float _1198 = fma(_568, cbModelParam._m0[23u].z, fma(_567, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _566));
        float _1456;
        if (_1192 > 0.0)
        {
            _1456 = abs((1.0 - _1181) / _1192);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1192 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1181 + 1.0) / _1192);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1456 = frontier_phi_27_23_ladder;
        }
        float _1660;
        if (_1195 > 0.0)
        {
            _1660 = abs((1.0 - _1185) / _1195);
        }
        else
        {
            float frontier_phi_41_34_ladder;
            if (_1195 < 0.0)
            {
                frontier_phi_41_34_ladder = abs((_1185 + 1.0) / _1195);
            }
            else
            {
                frontier_phi_41_34_ladder = 5000.0;
            }
            _1660 = frontier_phi_41_34_ladder;
        }
        float _1745;
        if (_1198 > 0.0)
        {
            _1745 = abs((1.0 - _1189) / _1198);
        }
        else
        {
            float frontier_phi_52_48_ladder;
            if (_1198 < 0.0)
            {
                frontier_phi_52_48_ladder = abs((_1189 + 1.0) / _1198);
            }
            else
            {
                frontier_phi_52_48_ladder = 5000.0;
            }
            _1745 = frontier_phi_52_48_ladder;
        }
        float _1747 = isnan(_1660) ? _1456 : (isnan(_1456) ? _1660 : min(_1456, _1660));
        float _1748 = isnan(_1745) ? _1747 : (isnan(_1747) ? _1745 : min(_1747, _1745));
        float _1752 = (_1748 * _1192) + _1181;
        float _1753 = (_1748 * _1195) + _1185;
        float _1754 = (_1748 * _1198) + _1189;
        float _1755 = _1748 * 9.9999997473787516355514526367188e-05;
        float _1756 = (-1.0) - _1755;
        float _1758 = _1755 + 1.0;
        float frontier_phi_24_52_ladder;
        float frontier_phi_24_52_ladder_1;
        float frontier_phi_24_52_ladder_2;
        if ((_1754 > _1758) || ((_1754 < _1756) || ((_1753 > _1758) || ((_1753 < _1756) || ((_1752 < _1756) || (_1752 > _1758))))))
        {
            frontier_phi_24_52_ladder = 0.0;
            frontier_phi_24_52_ladder_1 = 0.0;
            frontier_phi_24_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1787 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1754, cbModelParam._m0[17u].z, fma(_1753, cbModelParam._m0[17u].y, _1752 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1754, cbModelParam._m0[18u].z, fma(_1753, cbModelParam._m0[18u].y, _1752 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1754, cbModelParam._m0[19u].z, fma(_1753, cbModelParam._m0[19u].y, _1752 * cbModelParam._m0[19u].x))), _1126);
            frontier_phi_24_52_ladder = _1787.z * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_1 = _1787.y * cbModelParam._m0[1u].z;
            frontier_phi_24_52_ladder_2 = _1787.x * cbModelParam._m0[1u].z;
        }
        _1217 = frontier_phi_24_52_ladder_2;
        _1219 = frontier_phi_24_52_ladder_1;
        _1221 = frontier_phi_24_52_ladder;
    }
    else
    {
        vec4 _1201 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_566, _567, _568), _1126);
        _1217 = _1201.x * cbModelParam._m0[1u].z;
        _1219 = _1201.y * cbModelParam._m0[1u].z;
        _1221 = _1201.z * cbModelParam._m0[1u].z;
    }
    float _1233 = _557 * 0.01200000010430812835693359375;
    float _1235 = _1233 * ((cbModelParam._m0[1u].w * (_1217 - _1119)) + _1119);
    float _1236 = _1233 * ((cbModelParam._m0[1u].w * (_1219 - _1121)) + _1121);
    float _1237 = _1233 * ((cbModelParam._m0[1u].w * (_1221 - _1123)) + _1123);
    float _1258 = fma(_1237, cbSceneParam._m0[89u].z, fma(_1236, cbSceneParam._m0[89u].y, _1235 * cbSceneParam._m0[89u].x));
    float _1261 = fma(_1237, cbSceneParam._m0[90u].z, fma(_1236, cbSceneParam._m0[90u].y, _1235 * cbSceneParam._m0[90u].x));
    float _1264 = fma(_1237, cbSceneParam._m0[91u].z, fma(_1236, cbSceneParam._m0[91u].y, _1235 * cbSceneParam._m0[91u].x));
    vec4 _1272 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_545, _546));
    float _1274 = _1272.w;
    uint _1289 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1296 = floatBitsToUint(cbInstanceData._m0[_1289 + 5u]).x * 14u;
    float _1304 = (cbLight._m0[_1296 + 13u].x * (_557 + (-1.0))) + 1.0;
    uint _1305 = _1296 + 8u;
    float _1316 = cbLight._m0[_1296].x + _531;
    float _1317 = cbLight._m0[_1296].y + _532;
    float _1318 = cbLight._m0[_1296].z + _533;
    float _1322 = inversesqrt(dot(vec3(_1316, _1317, _1318), vec3(_1316, _1317, _1318)));
    float _1326 = dot(vec3(_455, _456, _457), vec3(cbLight._m0[_1296].xyz));
    float _2147 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
    float _1329 = isnan(1.0) ? _2147 : (isnan(_2147) ? 1.0 : min(_2147, 1.0));
    float _2158 = isnan(0.0) ? _558 : (isnan(_558) ? 0.0 : max(_558, 0.0));
    float _1331 = dot(vec3(cbLight._m0[_1296].xyz), vec3(_1316 * _1322, _1317 * _1322, _1318 * _1322));
    float _2169 = isnan(0.0) ? _1331 : (isnan(_1331) ? 0.0 : max(_1331, 0.0));
    float _1341 = (exp2(log2(1.0 - (isnan(1.0) ? _2169 : (isnan(_2169) ? 1.0 : min(_2169, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1347 = (0.5 / ((_1329 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2158 : (isnan(_2158) ? 1.0 : min(_2158, 1.0))))) * _1329;
    float _2180 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
    float _1349 = (isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0))) * 0.31831014156341552734375;
    float _1351 = isnan(1.0) ? _1304 : (isnan(_1304) ? 1.0 : min(_1304, 1.0));
    uint _1371 = _1289 + 9u;
    uint _1372 = _1371 + uint(cbMatDynParam._m0[0u].w);
    float _1378 = cbInstanceData._m0[_1372].x * (isnan(4.0) ? _231 : (isnan(_231) ? 4.0 : min(_231, 4.0)));
    float _1379 = cbInstanceData._m0[_1372].y * (isnan(4.0) ? _232 : (isnan(_232) ? 4.0 : min(_232, 4.0)));
    float _1380 = cbInstanceData._m0[_1372].z * (isnan(4.0) ? _233 : (isnan(_233) ? 4.0 : min(_233, 4.0)));
    float _2196 = isnan(0.0) ? _458 : (isnan(_458) ? 0.0 : max(_458, 0.0));
    float _1389 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2021 : (isnan(_2021) ? 1.0 : min(_2021, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1396 = (((((((cbLight._m0[_1305].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1274))) * _1341) * _1349) * _1351) + ((isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0))) * _1032)) * cbPerFrame._m0[3u].x) + (_1389 * (_442 - (_442 * _244)))) + _1378;
    float _1397 = (((((((cbLight._m0[_1305].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1274))) * _1341) * _1349) * _1351) + ((isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0))) * _1032)) * cbPerFrame._m0[3u].x) + (_1389 * (_443 - (_443 * _244)))) + _1379;
    float _1398 = (((((((cbLight._m0[_1305].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1274))) * _1341) * _1349) * _1351) + ((isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0))) * _1032)) * cbPerFrame._m0[3u].x) + (_1389 * (_444 - (_444 * _244)))) + _1380;
    float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
    float _1400 = isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0));
    float _1401 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
    float _1407 = cbMtdParam._m0[2u].x * _1378;
    float _1408 = cbMtdParam._m0[2u].y * _1379;
    float _1409 = cbMtdParam._m0[2u].z * _1380;
    float _2222 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1411 = isnan(1.0) ? _2222 : (isnan(_2222) ? 1.0 : min(_2222, 1.0));
    float _1417 = cbInstanceData._m0[_1289 + 6u].w * (isnan(1.0) ? _2196 : (isnan(_2196) ? 1.0 : min(_2196, 1.0)));
    float _1422 = _545 / cbSceneParam._m0[86u].x;
    float _1423 = _546 / cbSceneParam._m0[86u].y;
    vec4 _1437 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1422, _1423, (log2((isnan(cbSceneParam._m0[77u].w) ? _474 : (isnan(_474) ? cbSceneParam._m0[77u].w : min(_474, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1439 = _1437.x;
    float _1440 = _1437.y;
    float _1441 = _1437.z;
    float _1442 = _1437.w;
    float _1503;
    float _1505;
    float _1507;
    float _1509;
    if (_474 > cbSceneParam._m0[78u].w)
    {
        float _1465 = isnan(_474) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _474 : min(cbSceneParam._m0[80u].w, _474));
        float _1466 = _1465 / _474;
        float _1477 = _1466 * _524;
        float _1478 = _525 * _1466;
        float _1479 = (-0.0) - _1478;
        float _1480 = _1466 * _526;
        float _1482 = (cbSceneParam._m0[77u].w * _1479) / _1465;
        float _1483 = _1482 + cbSceneParam._m0[79u].w;
        float _1484 = cbSceneParam._m0[79u].w - _1478;
        float _1490 = sqrt(((_1477 * _1477) + (_1478 * _1478)) + (_1480 * _1480));
        float _1493 = (1.0 - (cbSceneParam._m0[77u].w / _1465)) * _1490;
        float _1499 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1501 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1665;
        if (abs((_1479 - _1482) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1665 = ((((_1483 > 0.0) ? exp2(_1499 * _1483) : (2.0 - exp2(_1501 * _1483))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1493;
        }
        else
        {
            float _1591 = 1.0 / cbSceneParam._m0[80u].x;
            float _1592 = isnan(_1484) ? _1483 : (isnan(_1483) ? _1484 : max(_1483, _1484));
            float _1593 = isnan(_1484) ? _1483 : (isnan(_1483) ? _1484 : min(_1483, _1484));
            float _1602 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : min(_1592, 0.0));
            float _1603 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : min(_1593, 0.0));
            _1665 = ((abs(_1490 / _1479) * cbSceneParam._m0[80u].y) * ((((_1602 - _1603) * 2.0) - ((exp2(_1499 * (isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0)))) - exp2(_1499 * (isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0))))) * _1591)) - ((exp2(_1501 * _1602) - exp2(_1501 * _1603)) * _1591))) + (_1493 * cbSceneParam._m0[80u].z);
        }
        vec4 _1667 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1422, _1423, 1.0), 0.0);
        float _1676 = exp2((_1665 * (-1.44269502162933349609375)) * (1.0 - _1667.w));
        float _1677 = log2(_1676);
        float _1693 = log2(_1442);
        _1503 = (exp2(_1693 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1677 * cbSceneParam._m0[78u].x)) * _1667.x) / cbSceneParam._m0[78u].x)) + _1439;
        _1505 = (exp2(_1693 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1677 * cbSceneParam._m0[78u].y)) * _1667.y) / cbSceneParam._m0[78u].y)) + _1440;
        _1507 = (exp2(_1693 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1677 * cbSceneParam._m0[78u].z)) * _1667.z) / cbSceneParam._m0[78u].z)) + _1441;
        _1509 = _1676 * _1442;
    }
    else
    {
        _1503 = _1439;
        _1505 = _1440;
        _1507 = _1441;
        _1509 = _1442;
    }
    bool _1703;
    vec4 _1518;
    vec4 _1541;
    float _1543;
    float _1547;
    float _1548;
    float _1549;
    float _1552;
    float _1555;
    float _1558;
    float _1559;
    bool _1570;
    for (;;)
    {
        _1518 = cbMatDynParam._m0[0u];
        float _1520 = roundEven(_1518.y);
        bool _1521 = _1520 == 3.0;
        float _1523 = log2(_1509);
        float _1527 = exp2(_1523 * cbSceneParam._m0[78u].x);
        float _1528 = exp2(_1523 * cbSceneParam._m0[78u].y);
        float _1529 = exp2(_1523 * cbSceneParam._m0[78u].z);
        float _1530 = _1527 * _1399;
        float _1531 = _1528 * _1400;
        float _1532 = _1529 * _1401;
        float _1539 = _540 + (-0.5);
        _1541 = cbMtdParam._m0[1u];
        _1543 = _1541.y * _1539;
        float _1546 = (_1520 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1547 = _1546 * (_1521 ? _1530 : (_1530 + (cbSceneParam._m0[72u].w * _1503)));
        _1548 = _1546 * (_1521 ? _1531 : (_1531 + (cbSceneParam._m0[72u].w * _1505)));
        _1549 = _1546 * (_1521 ? _1532 : (_1532 + (cbSceneParam._m0[72u].w * _1507)));
        _1552 = ((_1407 * _1411) * _1527) * _1546;
        _1555 = ((_1408 * _1411) * _1528) * _1546;
        _1558 = ((_1409 * _1411) * _1529) * _1546;
        _1559 = _1539 * 0.999000012874603271484375;
        _1570 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1570)
        {
            if ((cbInstanceData._m0[_1289 + 7u].x + _1559) < 0.5)
            {
                _1703 = true;
                break;
            }
        }
        uint _1626 = _1371 + uint(_1518.w);
        if ((cbInstanceData._m0[_1626].w < 1.0) && ((cbInstanceData._m0[_1626].w + _1559) < 0.5))
        {
            _1703 = true;
            break;
        }
        if ((_1543 + 1.0) < _1541.x)
        {
            _1703 = true;
            break;
        }
        _1703 = false;
        break;
    }
    float _1736;
    if (_1703)
    {
        discard_state = true;
        _1736 = 0.0;
    }
    else
    {
        _1736 = _1417;
    }
    SV_Target.x = _1547;
    SV_Target.y = _1548;
    SV_Target.z = _1549;
    SV_Target.w = _1736;
    SV_Target_1.x = _1552;
    SV_Target_1.y = _1555;
    SV_Target_1.z = _1558;
    SV_Target_1.w = _1417;
    discard_exit();
}


