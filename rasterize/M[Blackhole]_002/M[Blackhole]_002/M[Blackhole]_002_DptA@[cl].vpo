#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    float _142 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _144 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _145 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _155 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _156 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _157 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _163 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _165 = texelFetch(g_InstanceIndexBuffer, int(_163));
    uint _166 = _165.x;
    uint _176 = (floatBitsToUint(cbInstanceData._m0[(_166 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _183 = _176 + 1u;
    uint _190 = _176 + 2u;
    precise float _197 = POSITION.x * cbObjMatrix._m0[_176].x;
    precise float _198 = POSITION.y * cbObjMatrix._m0[_176].y;
    precise float _199 = _198 + _197;
    precise float _200 = POSITION.z * cbObjMatrix._m0[_176].z;
    precise float _201 = _200 + _199;
    precise float _202 = 1.0 * cbObjMatrix._m0[_176].w;
    precise float _204 = _202 + _201;
    precise float _205 = POSITION.x * cbObjMatrix._m0[_183].x;
    precise float _206 = POSITION.y * cbObjMatrix._m0[_183].y;
    precise float _207 = _206 + _205;
    precise float _208 = POSITION.z * cbObjMatrix._m0[_183].z;
    precise float _209 = _208 + _207;
    precise float _210 = 1.0 * cbObjMatrix._m0[_183].w;
    precise float _211 = _210 + _209;
    precise float _212 = POSITION.x * cbObjMatrix._m0[_190].x;
    precise float _213 = POSITION.y * cbObjMatrix._m0[_190].y;
    precise float _214 = _213 + _212;
    precise float _215 = POSITION.z * cbObjMatrix._m0[_190].z;
    precise float _216 = _215 + _214;
    precise float _217 = 1.0 * cbObjMatrix._m0[_190].w;
    precise float _218 = _217 + _216;
    precise float _244 = _204 - cbSceneParam._m0[3u].x;
    precise float _245 = _211 - cbSceneParam._m0[3u].y;
    precise float _246 = _218 - cbSceneParam._m0[3u].z;
    precise float _274 = _244 * cbSceneParam._m0[24u].x;
    precise float _275 = _245 * cbSceneParam._m0[24u].y;
    precise float _276 = _275 + _274;
    precise float _277 = _246 * cbSceneParam._m0[24u].z;
    precise float _278 = _277 + _276;
    precise float _279 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _280 = _279 + _278;
    precise float _281 = _244 * cbSceneParam._m0[25u].x;
    precise float _282 = _245 * cbSceneParam._m0[25u].y;
    precise float _283 = _282 + _281;
    precise float _284 = _246 * cbSceneParam._m0[25u].z;
    precise float _285 = _284 + _283;
    precise float _286 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _287 = _286 + _285;
    precise float _288 = _244 * cbSceneParam._m0[26u].x;
    precise float _289 = _245 * cbSceneParam._m0[26u].y;
    precise float _290 = _289 + _288;
    precise float _291 = _246 * cbSceneParam._m0[26u].z;
    precise float _292 = _291 + _290;
    precise float _293 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _294 = _293 + _292;
    precise float _295 = _244 * cbSceneParam._m0[27u].x;
    precise float _296 = _245 * cbSceneParam._m0[27u].y;
    precise float _297 = _296 + _295;
    precise float _298 = _246 * cbSceneParam._m0[27u].z;
    precise float _299 = _298 + _297;
    precise float _300 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _301 = _300 + _299;
    gl_Position.x = _280;
    gl_Position.y = _287;
    gl_Position.z = _294;
    gl_Position.w = _301;
    NORMAL_1.x = fma(_145, cbObjMatrix._m0[_176].z, fma(_144, cbObjMatrix._m0[_176].y, cbObjMatrix._m0[_176].x * _142));
    NORMAL_1.y = fma(_145, cbObjMatrix._m0[_183].z, fma(_144, cbObjMatrix._m0[_183].y, cbObjMatrix._m0[_183].x * _142));
    NORMAL_1.z = fma(_145, cbObjMatrix._m0[_190].z, fma(_144, cbObjMatrix._m0[_190].y, cbObjMatrix._m0[_190].x * _142));
    NORMAL_1.w = float(_166);
    TANGENT_1.x = fma(_157, cbObjMatrix._m0[_176].z, fma(_156, cbObjMatrix._m0[_176].y, cbObjMatrix._m0[_176].x * _155));
    TANGENT_1.y = fma(_157, cbObjMatrix._m0[_183].z, fma(_156, cbObjMatrix._m0[_183].y, cbObjMatrix._m0[_183].x * _155));
    TANGENT_1.z = fma(_157, cbObjMatrix._m0[_190].z, fma(_156, cbObjMatrix._m0[_190].y, cbObjMatrix._m0[_190].x * _155));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _294;
    TEXCOORD_4.y = _301;
}


