#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_002_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _776;
float _2175;
float _2176;
float _2177;
float _2178;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _168 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _169 = _168 * NORMAL.x;
    float _170 = _168 * NORMAL.y;
    float _171 = _168 * NORMAL.z;
    float _176;
    float _177;
    float _178;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _176 = (-0.0) - _169;
        _177 = (-0.0) - _170;
        _178 = (-0.0) - _171;
    }
    else
    {
        _176 = _169;
        _177 = _170;
        _178 = _171;
    }
    float _188 = TEXCOORD.x + (-0.5);
    float _190 = TEXCOORD.y + (-0.5);
    float _195 = 1.0 - sqrt((_190 * _190) + (_188 * _188));
    float _201 = exp2(log2(cbMtdParam._m0[13u].z * _195) * cbMtdParam._m0[13u].w);
    float _205 = exp2(log2(_201 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _2187 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _206 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
    float _221 = exp2(log2(cbMtdParam._m0[14u].w * _201) * cbMtdParam._m0[14u].z);
    float _2198 = isnan(0.0) ? _221 : (isnan(_221) ? 0.0 : max(_221, 0.0));
    float _222 = isnan(1.0) ? _2198 : (isnan(_2198) ? 1.0 : min(_2198, 1.0));
    float _2209 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _229 = exp2(log2(cbMtdParam._m0[14u].y * _195) * cbMtdParam._m0[14u].x);
    float _2220 = isnan(0.0) ? _229 : (isnan(_229) ? 0.0 : max(_229, 0.0));
    float _231 = (isnan(1.0) ? _2220 : (isnan(_2220) ? 1.0 : min(_2220, 1.0))) - (isnan(1.0) ? _2209 : (isnan(_2209) ? 1.0 : min(_2209, 1.0)));
    float _232 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _233 = _232 * cbMtdParam._m0[10u].x;
    float _234 = _232 * cbMtdParam._m0[10u].y;
    float _235 = _232 * cbMtdParam._m0[10u].z;
    float _245 = exp2(log2(cbMtdParam._m0[13u].x * _201) * cbMtdParam._m0[13u].y);
    float _2251 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _246 = isnan(1.0) ? _2251 : (isnan(_2251) ? 1.0 : min(_2251, 1.0));
    float _255 = exp2(log2(cbMtdParam._m0[15u].y * _195) * cbMtdParam._m0[15u].x);
    float _2262 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _256 = isnan(1.0) ? _2262 : (isnan(_2262) ? 1.0 : min(_2262, 1.0));
    float _272 = cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x;
    float _277 = _272 * cbMtdParam._m0[11u].w;
    float _278 = sin(_277);
    float _279 = cos(_277);
    vec4 _300 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_190, (-0.0) - _278, _279 * _188) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_190, _279, _278 * _188) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _315 = exp2(log2(cbMtdParam._m0[12u].y * _201) * cbMtdParam._m0[12u].x);
    float _2273 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _316 = isnan(1.0) ? _2273 : (isnan(_2273) ? 1.0 : min(_2273, 1.0));
    float _317 = ((_300.x + (-0.5)) * cbMtdParam._m0[15u].w) * _316;
    float _318 = ((_300.y + (-0.5)) * cbMtdParam._m0[15u].w) * _316;
    float _321 = cbSceneParam._m0[86u].x * (_317 + ((cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x));
    float _322 = (_318 + ((cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _330 = isnan(cbInstanceData._m0[8u].x) ? _321 : (isnan(_321) ? cbInstanceData._m0[8u].x : max(_321, cbInstanceData._m0[8u].x));
    float _331 = isnan(cbInstanceData._m0[8u].y) ? _322 : (isnan(_322) ? cbInstanceData._m0[8u].y : max(_322, cbInstanceData._m0[8u].y));
    vec4 _335 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _330 : (isnan(_330) ? cbInstanceData._m0[8u].z : min(_330, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _331 : (isnan(_331) ? cbInstanceData._m0[8u].w : min(_331, cbInstanceData._m0[8u].w))));
    float _344 = cbSceneParam._m0[72u].w * _335.x;
    float _345 = cbSceneParam._m0[72u].w * _335.y;
    float _346 = cbSceneParam._m0[72u].w * _335.z;
    float _363 = cbMtdParam._m0[11u].z * _272;
    float _364 = sin(_363);
    float _365 = cos(_363);
    float _366 = _188 + (cbMtdParam._m0[16u].w * _272);
    float _367 = _190 + (cbMtdParam._m0[17u].x * _272);
    float _373 = _317 + 0.5;
    float _375 = _318 + 0.5;
    vec4 _388 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_373 + fma(_367, (-0.0) - _364, _366 * _365))) + cbTextureTilingScale._m0[0u].z, ((_375 + fma(_367, _365, _366 * _364)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _390 = _388.x;
    float _391 = _388.y;
    float _392 = _388.z;
    float _398 = cbMtdParam._m0[16u].x * _272;
    float _399 = sin(_398);
    float _400 = cos(_398);
    float _401 = _188 + (cbMtdParam._m0[16u].y * _272);
    float _402 = _190 + (cbMtdParam._m0[16u].z * _272);
    vec4 _414 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_373 + fma(_402, (-0.0) - _399, _401 * _400))) + cbTextureTilingScale._m0[0u].z, ((_375 + fma(_402, _400, _401 * _399)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _436 = exp2(log2(cbMtdParam._m0[11u].x * _201) * cbMtdParam._m0[11u].y);
    float _2304 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _437 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
    float _444 = ((((((_414.x - _390) * _256) + _390) * cbMtdParam._m0[9u].x) - _344) * _437) + _344;
    float _445 = ((((((_414.y - _391) * _256) + _391) * cbMtdParam._m0[9u].y) - _345) * _437) + _345;
    float _446 = ((((((_414.z - _392) * _256) + _392) * cbMtdParam._m0[9u].z) - _346) * _437) + _346;
    float _456 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _457 = _456 * _176;
    float _458 = _456 * _177;
    float _459 = _456 * _178;
    float _2315 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _460 = isnan(1.0) ? _2315 : (isnan(_2315) ? 1.0 : min(_2315, 1.0));
    float _476 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _516 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _526 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _516);
    float _527 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _516);
    float _528 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _516);
    float _532 = inversesqrt(dot(vec3(_526, _527, _528), vec3(_526, _527, _528)));
    float _533 = _526 * _532;
    float _534 = _527 * _532;
    float _535 = _528 * _532;
    vec4 _540 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _542 = _540.w;
    float _547 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _548 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _556 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_547 * cbSceneParam._m0[86u].x, _548 * cbSceneParam._m0[86u].y));
    float _559 = _556.x * TEXCOORD.z;
    float _560 = dot(vec3(_457, _458, _459), vec3(_533, _534, _535));
    float _563 = _560 * 2.0;
    float _568 = (_563 * _457) - _533;
    float _569 = (_563 * _458) - _534;
    float _570 = (_563 * _459) - _535;
    float _574 = abs(dot(vec3(_533, _534, _535), vec3(_457, _458, _459)));
    float _2326 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _602 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _606 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _610 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _775;
    float _777;
    float _778;
    float _779;
    float _780;
    float _781;
    float _782;
    float _783;
    float _784;
    float _785;
    float _786;
    float _787;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _637 = fma(_610, cbModelParam._m0[26u].z, fma(_606, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _602));
        float _641 = fma(_610, cbModelParam._m0[27u].z, fma(_606, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _602));
        float _645 = fma(_610, cbModelParam._m0[28u].z, fma(_606, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _602));
        float _668 = _602 + _457;
        float _669 = _606 + _458;
        float _670 = _610 + _459;
        float _680 = fma(_670, cbModelParam._m0[26u].z, fma(_669, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _668)) - _637;
        float _681 = fma(_670, cbModelParam._m0[27u].z, fma(_669, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _668)) - _641;
        float _682 = fma(_670, cbModelParam._m0[28u].z, fma(_669, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _668)) - _645;
        float _686 = inversesqrt(dot(vec3(_680, _681, _682), vec3(_680, _681, _682)));
        float _699 = ((_686 * _680) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_637 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _700 = ((_686 * _681) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_641 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _701 = ((_686 * _682) / cbModelParam._m0[34u].z) + ((((((_645 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _704 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_699, _700, _701), 0.0);
        vec4 _711 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_699, _700, _701), 0.0);
        vec4 _718 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_699, _700, _701), 0.0);
        vec4 _725 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_699, _700, _701), 0.0);
        float _738 = exp2((_704.w + (-0.5)) * 20.0) * 2.0;
        float _748 = exp2((_711.w + (-0.5)) * 20.0) * 2.0;
        float _758 = exp2((_718.w + (-0.5)) * 20.0) * 2.0;
        float _768 = exp2((_725.w + (-0.5)) * 20.0) * 2.0;
        float _769 = _768 * (_725.x + (-0.5));
        float _770 = _768 * (_725.y + (-0.5));
        float _771 = _768 * (_725.z + (-0.5));
        _775 = _738 * (_704.z + (-0.5));
        _777 = _738 * (_704.y + (-0.5));
        _778 = _738 * (_704.x + (-0.5));
        _779 = _748 * (_711.z + (-0.5));
        _780 = _748 * (_711.y + (-0.5));
        _781 = _748 * (_711.x + (-0.5));
        _782 = _758 * (_718.z + (-0.5));
        _783 = _758 * (_718.y + (-0.5));
        _784 = _758 * (_718.x + (-0.5));
        _785 = isnan(0.0) ? _771 : (isnan(_771) ? 0.0 : max(_771, 0.0));
        _786 = isnan(0.0) ? _770 : (isnan(_770) ? 0.0 : max(_770, 0.0));
        _787 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    }
    else
    {
        _775 = _776;
        _777 = _776;
        _778 = _776;
        _779 = _776;
        _780 = _776;
        _781 = _776;
        _782 = _776;
        _783 = _776;
        _784 = _776;
        _785 = _776;
        _786 = _776;
        _787 = _776;
    }
    float _949;
    float _950;
    float _951;
    float _952;
    float _953;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _813 = fma(_610, cbModelParam._m0[30u].z, fma(_606, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _602));
        float _817 = fma(_610, cbModelParam._m0[31u].z, fma(_606, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _602));
        float _821 = fma(_610, cbModelParam._m0[32u].z, fma(_606, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _602));
        float _844 = _602 + _457;
        float _845 = _606 + _458;
        float _846 = _610 + _459;
        float _856 = fma(_846, cbModelParam._m0[30u].z, fma(_845, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _844)) - _813;
        float _857 = fma(_846, cbModelParam._m0[31u].z, fma(_845, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _844)) - _817;
        float _858 = fma(_846, cbModelParam._m0[32u].z, fma(_845, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _844)) - _821;
        float _862 = inversesqrt(dot(vec3(_856, _857, _858), vec3(_856, _857, _858)));
        float _875 = ((_862 * _856) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_813 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _876 = ((_862 * _857) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_817 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _877 = ((_862 * _858) / cbModelParam._m0[35u].z) + ((((((_821 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _879 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_875, _876, _877), 0.0);
        vec4 _886 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_875, _876, _877), 0.0);
        vec4 _893 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_875, _876, _877), 0.0);
        vec4 _900 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_875, _876, _877), 0.0);
        float _912 = exp2((_879.w + (-0.5)) * 20.0) * 2.0;
        float _922 = exp2((_886.w + (-0.5)) * 20.0) * 2.0;
        float _932 = exp2((_893.w + (-0.5)) * 20.0) * 2.0;
        float _942 = exp2((_900.w + (-0.5)) * 20.0) * 2.0;
        float _943 = _942 * (_900.x + (-0.5));
        float _944 = _942 * (_900.y + (-0.5));
        float _945 = _942 * (_900.z + (-0.5));
        _949 = _912 * (_879.z + (-0.5));
        _950 = _912 * (_879.y + (-0.5));
        _951 = _912 * (_879.x + (-0.5));
        _952 = _922 * (_886.z + (-0.5));
        _953 = _922 * (_886.y + (-0.5));
        _954 = _922 * (_886.x + (-0.5));
        _955 = _932 * (_893.z + (-0.5));
        _956 = _932 * (_893.y + (-0.5));
        _957 = _932 * (_893.x + (-0.5));
        _958 = isnan(0.0) ? _945 : (isnan(_945) ? 0.0 : max(_945, 0.0));
        _959 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        _960 = isnan(0.0) ? _943 : (isnan(_943) ? 0.0 : max(_943, 0.0));
    }
    else
    {
        _949 = _776;
        _950 = _776;
        _951 = _776;
        _952 = _776;
        _953 = _776;
        _954 = _776;
        _955 = _776;
        _956 = _776;
        _957 = _776;
        _958 = _776;
        _959 = _776;
        _960 = _776;
    }
    float _975 = _568 * 0.5;
    float _976 = _569 * 0.5;
    float _977 = _570 * 0.5;
    float _978 = dot(vec4(_975, _976, _977, 1.0), vec4(_951, _954, _957, _960));
    float _981 = dot(vec4(_975, _976, _977, 1.0), vec4(_950, _953, _956, _959));
    float _984 = dot(vec4(_975, _976, _977, 1.0), vec4(_949, _952, _955, _958));
    float _1019;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _991 = dot(vec4(_975, _976, _977, 1.0), vec4(_775, _779, _782, _785));
        float _995 = dot(vec4(_975, _976, _977, 1.0), vec4(_777, _780, _783, _786));
        float _999 = dot(vec4(_975, _976, _977, 1.0), vec4(_778, _781, _784, _787));
        float _1006 = dot(vec4(cbModelParam._m0[39u]), vec4(_975, _976, _977, 1.0));
        _1019 = dot(vec3(isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0)), isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0)), isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1006) ? 0.0 : (isnan(0.0) ? _1006 : max(0.0, _1006))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1019 = 1.0;
    }
    float _1030;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1021 = dot(vec4(cbModelParam._m0[40u]), vec4(_975, _976, _977, 1.0));
        _1030 = dot(vec3(isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0)), isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0)), isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1021) ? 0.0 : (isnan(0.0) ? _1021 : max(0.0, _1021))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1030 = 1.0;
    }
    float _1034 = (_1030 * cbModelParam._m0[1u].x) + (_1019 * (1.0 - cbModelParam._m0[1u].x));
    float _1040 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1121;
    float _1123;
    float _1125;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1088 = fma(_610, cbModelParam._m0[13u].z, fma(_606, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _602)) + cbModelParam._m0[13u].w;
        float _1092 = fma(_610, cbModelParam._m0[14u].z, fma(_606, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _602)) + cbModelParam._m0[14u].w;
        float _1096 = fma(_610, cbModelParam._m0[15u].z, fma(_606, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _602)) + cbModelParam._m0[15u].w;
        float _1099 = fma(_570, cbModelParam._m0[13u].z, fma(_569, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _568));
        float _1102 = fma(_570, cbModelParam._m0[14u].z, fma(_569, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _568));
        float _1105 = fma(_570, cbModelParam._m0[15u].z, fma(_569, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _568));
        float _1131;
        if (_1099 > 0.0)
        {
            _1131 = abs((1.0 - _1088) / _1099);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1099 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1088 + 1.0) / _1099);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1131 = frontier_phi_16_14_ladder;
        }
        float _1321;
        if (_1102 > 0.0)
        {
            _1321 = abs((1.0 - _1092) / _1102);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1102 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1092 + 1.0) / _1102);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1321 = frontier_phi_25_21_ladder;
        }
        float _1696;
        if (_1105 > 0.0)
        {
            _1696 = abs((1.0 - _1096) / _1105);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1105 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1096 + 1.0) / _1105);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1696 = frontier_phi_37_32_ladder;
        }
        float _1698 = isnan(_1321) ? _1131 : (isnan(_1131) ? _1321 : min(_1131, _1321));
        float _1699 = isnan(_1696) ? _1698 : (isnan(_1698) ? _1696 : min(_1698, _1696));
        float _1703 = (_1699 * _1099) + _1088;
        float _1704 = (_1699 * _1102) + _1092;
        float _1705 = (_1699 * _1105) + _1096;
        float _1706 = _1699 * 9.9999997473787516355514526367188e-05;
        float _1708 = (-1.0) - _1706;
        float _1710 = _1706 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1705 > _1710) || ((_1705 < _1708) || ((_1704 > _1710) || ((_1704 < _1708) || ((_1703 < _1708) || (_1703 > _1710))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1922 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1705, cbModelParam._m0[9u].z, fma(_1704, cbModelParam._m0[9u].y, _1703 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1705, cbModelParam._m0[10u].z, fma(_1704, cbModelParam._m0[10u].y, _1703 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1705, cbModelParam._m0[11u].z, fma(_1704, cbModelParam._m0[11u].y, _1703 * cbModelParam._m0[11u].x))), _1040);
            frontier_phi_15_37_ladder = _1922.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1922.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1922.x * cbModelParam._m0[1u].y;
        }
        _1121 = frontier_phi_15_37_ladder_2;
        _1123 = frontier_phi_15_37_ladder_1;
        _1125 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1109 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_568, _569, _570), _1040);
        _1121 = _1109.x * cbModelParam._m0[1u].y;
        _1123 = _1109.y * cbModelParam._m0[1u].y;
        _1125 = _1109.z * cbModelParam._m0[1u].y;
    }
    float _1128 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1219;
    float _1221;
    float _1223;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1183 = fma(_610, cbModelParam._m0[21u].z, fma(_606, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _602)) + cbModelParam._m0[21u].w;
        float _1187 = fma(_610, cbModelParam._m0[22u].z, fma(_606, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _602)) + cbModelParam._m0[22u].w;
        float _1191 = fma(_610, cbModelParam._m0[23u].z, fma(_606, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _602)) + cbModelParam._m0[23u].w;
        float _1194 = fma(_570, cbModelParam._m0[21u].z, fma(_569, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _568));
        float _1197 = fma(_570, cbModelParam._m0[22u].z, fma(_569, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _568));
        float _1200 = fma(_570, cbModelParam._m0[23u].z, fma(_569, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _568));
        float _1326;
        if (_1194 > 0.0)
        {
            _1326 = abs((1.0 - _1183) / _1194);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1194 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1183 + 1.0) / _1194);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1326 = frontier_phi_27_23_ladder;
        }
        float _1723;
        if (_1197 > 0.0)
        {
            _1723 = abs((1.0 - _1187) / _1197);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1197 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1187 + 1.0) / _1197);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1723 = frontier_phi_39_34_ladder;
        }
        float _1986;
        if (_1200 > 0.0)
        {
            _1986 = abs((1.0 - _1191) / _1200);
        }
        else
        {
            float frontier_phi_51_46_ladder;
            if (_1200 < 0.0)
            {
                frontier_phi_51_46_ladder = abs((_1191 + 1.0) / _1200);
            }
            else
            {
                frontier_phi_51_46_ladder = 5000.0;
            }
            _1986 = frontier_phi_51_46_ladder;
        }
        float _1988 = isnan(_1723) ? _1326 : (isnan(_1326) ? _1723 : min(_1326, _1723));
        float _1989 = isnan(_1986) ? _1988 : (isnan(_1988) ? _1986 : min(_1988, _1986));
        float _1993 = (_1989 * _1194) + _1183;
        float _1994 = (_1989 * _1197) + _1187;
        float _1995 = (_1989 * _1200) + _1191;
        float _1996 = _1989 * 9.9999997473787516355514526367188e-05;
        float _1997 = (-1.0) - _1996;
        float _1999 = _1996 + 1.0;
        float frontier_phi_24_51_ladder;
        float frontier_phi_24_51_ladder_1;
        float frontier_phi_24_51_ladder_2;
        if ((_1995 > _1999) || ((_1995 < _1997) || ((_1994 > _1999) || ((_1994 < _1997) || ((_1993 < _1997) || (_1993 > _1999))))))
        {
            frontier_phi_24_51_ladder = 0.0;
            frontier_phi_24_51_ladder_1 = 0.0;
            frontier_phi_24_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2072 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1995, cbModelParam._m0[17u].z, fma(_1994, cbModelParam._m0[17u].y, _1993 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1995, cbModelParam._m0[18u].z, fma(_1994, cbModelParam._m0[18u].y, _1993 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1995, cbModelParam._m0[19u].z, fma(_1994, cbModelParam._m0[19u].y, _1993 * cbModelParam._m0[19u].x))), _1128);
            frontier_phi_24_51_ladder = _2072.z * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_1 = _2072.y * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_2 = _2072.x * cbModelParam._m0[1u].z;
        }
        _1219 = frontier_phi_24_51_ladder_2;
        _1221 = frontier_phi_24_51_ladder_1;
        _1223 = frontier_phi_24_51_ladder;
    }
    else
    {
        vec4 _1203 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_568, _569, _570), _1128);
        _1219 = _1203.x * cbModelParam._m0[1u].z;
        _1221 = _1203.y * cbModelParam._m0[1u].z;
        _1223 = _1203.z * cbModelParam._m0[1u].z;
    }
    float _1235 = _559 * 0.01200000010430812835693359375;
    float _1237 = _1235 * ((cbModelParam._m0[1u].w * (_1219 - _1121)) + _1121);
    float _1238 = _1235 * ((cbModelParam._m0[1u].w * (_1221 - _1123)) + _1123);
    float _1239 = _1235 * ((cbModelParam._m0[1u].w * (_1223 - _1125)) + _1125);
    float _1260 = fma(_1239, cbSceneParam._m0[89u].z, fma(_1238, cbSceneParam._m0[89u].y, _1237 * cbSceneParam._m0[89u].x));
    float _1263 = fma(_1239, cbSceneParam._m0[90u].z, fma(_1238, cbSceneParam._m0[90u].y, _1237 * cbSceneParam._m0[90u].x));
    float _1266 = fma(_1239, cbSceneParam._m0[91u].z, fma(_1238, cbSceneParam._m0[91u].y, _1237 * cbSceneParam._m0[91u].x));
    float _1300 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1304 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1308 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1312 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1313 = _1300 / _1312;
    float _1314 = _1304 / _1312;
    float _1315 = _1308 / _1312;
    float _1462;
    float _1463;
    float _1464;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1342 = ((uint(_1315 > cbSceneParam._m0[59u].y) + uint(_1315 > cbSceneParam._m0[59u].x)) + uint(_1315 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1343 = _1342 + 43u;
        uint _1351 = _1342 + 44u;
        uint _1359 = _1342 + 45u;
        uint _1367 = _1342 + 46u;
        float _1378 = fma(_1312, cbSceneParam._m0[_1343].w, fma(_1308, cbSceneParam._m0[_1343].z, fma(_1304, cbSceneParam._m0[_1343].y, _1300 * cbSceneParam._m0[_1343].x)));
        float _1382 = fma(_1312, cbSceneParam._m0[_1351].w, fma(_1308, cbSceneParam._m0[_1351].z, fma(_1304, cbSceneParam._m0[_1351].y, _1300 * cbSceneParam._m0[_1351].x)));
        float _1390 = fma(_1312, cbSceneParam._m0[_1367].w, fma(_1308, cbSceneParam._m0[_1367].z, fma(_1304, cbSceneParam._m0[_1367].y, _1300 * cbSceneParam._m0[_1367].x)));
        float _1395 = cbSceneParam._m0[33u].z * _1390;
        float _1397 = cbSceneParam._m0[33u].w * _1390;
        float _1400 = fma(_1312, cbSceneParam._m0[_1359].w, fma(_1308, cbSceneParam._m0[_1359].z, fma(_1304, cbSceneParam._m0[_1359].y, _1300 * cbSceneParam._m0[_1359].x))) / _1390;
        float _1448 = (cbSceneParam._m0[33u].x - sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315))) * cbSceneParam._m0[33u].y;
        float _2452 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1455 = (isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1395 + _1378) / _1390, (_1397 + _1382) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1397 + _1378) / _1390, (_1382 - _1395) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1378 - _1395) / _1390, (_1382 - _1397) / _1390), _1400), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1378 - _1397) / _1390, (_1395 + _1382) / _1390), _1400), 0.0)).x), vec4(0.25)));
        _1462 = 1.0 - (_1455 * cbSceneParam._m0[34u].x);
        _1463 = 1.0 - (_1455 * cbSceneParam._m0[34u].y);
        _1464 = 1.0 - (_1455 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1462 = 1.0;
        _1463 = 1.0;
        _1464 = 1.0;
    }
    float _1528;
    float _1530;
    float _1532;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1516 = fma(_1312, cbSceneParam._m0[63u].w, fma(_1308, cbSceneParam._m0[63u].z, fma(_1304, cbSceneParam._m0[63u].y, _1300 * cbSceneParam._m0[63u].x)));
        float _1517 = fma(_1312, cbSceneParam._m0[60u].w, fma(_1308, cbSceneParam._m0[60u].z, fma(_1304, cbSceneParam._m0[60u].y, _1300 * cbSceneParam._m0[60u].x))) / _1516;
        float _1518 = fma(_1312, cbSceneParam._m0[61u].w, fma(_1308, cbSceneParam._m0[61u].z, fma(_1304, cbSceneParam._m0[61u].y, _1300 * cbSceneParam._m0[61u].x))) / _1516;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1517 >= cbSceneParam._m0[64u].x) && (_1518 >= cbSceneParam._m0[64u].y)) && (_1517 <= cbSceneParam._m0[64u].z)) && (_1518 <= cbSceneParam._m0[64u].w))
        {
            float _1736 = fma(_1312, cbSceneParam._m0[62u].w, fma(_1308, cbSceneParam._m0[62u].z, fma(_1304, cbSceneParam._m0[62u].y, _1300 * cbSceneParam._m0[62u].x))) / _1516;
            float _1740 = isnan(cbSceneParam._m0[41u].w) ? _1736 : (isnan(_1736) ? cbSceneParam._m0[41u].w : max(_1736, cbSceneParam._m0[41u].w));
            float _1783 = (cbSceneParam._m0[33u].x - sqrt(((_1314 * _1314) + (_1313 * _1313)) + (_1315 * _1315))) * cbSceneParam._m0[33u].y;
            float _2468 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
            float _1790 = (isnan(1.0) ? _2468 : (isnan(_2468) ? 1.0 : min(_2468, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1517, cbSceneParam._m0[33u].w + _1518), _1740), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1517, _1518 - cbSceneParam._m0[33u].z), _1740), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1517 - cbSceneParam._m0[33u].z, _1518 - cbSceneParam._m0[33u].w), _1740), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1517 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1518), _1740), 0.0)).x), vec4(0.25)));
            float _1794 = 1.0 - (_1790 * cbSceneParam._m0[34u].x);
            float _1795 = 1.0 - (_1790 * cbSceneParam._m0[34u].y);
            float _1796 = 1.0 - (_1790 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1794) ? _1462 : (isnan(_1462) ? _1794 : min(_1462, _1794));
            frontier_phi_36_35_ladder_1 = isnan(_1795) ? _1463 : (isnan(_1463) ? _1795 : min(_1463, _1795));
            frontier_phi_36_35_ladder_2 = isnan(_1796) ? _1464 : (isnan(_1464) ? _1796 : min(_1464, _1796));
        }
        else
        {
            frontier_phi_36_35_ladder = _1462;
            frontier_phi_36_35_ladder_1 = _1463;
            frontier_phi_36_35_ladder_2 = _1464;
        }
        _1528 = frontier_phi_36_35_ladder;
        _1530 = frontier_phi_36_35_ladder_1;
        _1532 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _1528 = _1462;
        _1530 = _1463;
        _1532 = _1464;
    }
    uint _1534 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1541 = floatBitsToUint(cbInstanceData._m0[_1534 + 5u]).x * 14u;
    float _1549 = (cbLight._m0[_1541 + 13u].x * (_559 + (-1.0))) + 1.0;
    uint _1550 = _1541 + 8u;
    float _1561 = cbLight._m0[_1541].x + _533;
    float _1562 = cbLight._m0[_1541].y + _534;
    float _1563 = cbLight._m0[_1541].z + _535;
    float _1567 = inversesqrt(dot(vec3(_1561, _1562, _1563), vec3(_1561, _1562, _1563)));
    float _1571 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_1541].xyz));
    float _2494 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1574 = isnan(1.0) ? _2494 : (isnan(_2494) ? 1.0 : min(_2494, 1.0));
    float _2505 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0));
    float _1576 = dot(vec3(cbLight._m0[_1541].xyz), vec3(_1561 * _1567, _1562 * _1567, _1563 * _1567));
    float _2516 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
    float _1586 = (exp2(log2(1.0 - (isnan(1.0) ? _2516 : (isnan(_2516) ? 1.0 : min(_2516, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1592 = (0.5 / ((_1574 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2505 : (isnan(_2505) ? 1.0 : min(_2505, 1.0))))) * _1574;
    float _2527 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
    float _1594 = (isnan(1.0) ? _2527 : (isnan(_2527) ? 1.0 : min(_2527, 1.0))) * 0.31831014156341552734375;
    float _1596 = isnan(1.0) ? _1549 : (isnan(_1549) ? 1.0 : min(_1549, 1.0));
    uint _1616 = _1534 + 9u;
    uint _1617 = _1616 + uint(cbMatDynParam._m0[0u].w);
    float _1623 = cbInstanceData._m0[_1617].x * (isnan(4.0) ? _233 : (isnan(_233) ? 4.0 : min(_233, 4.0)));
    float _1624 = cbInstanceData._m0[_1617].y * (isnan(4.0) ? _234 : (isnan(_234) ? 4.0 : min(_234, 4.0)));
    float _1625 = cbInstanceData._m0[_1617].z * (isnan(4.0) ? _235 : (isnan(_235) ? 4.0 : min(_235, 4.0)));
    float _2543 = isnan(0.0) ? _460 : (isnan(_460) ? 0.0 : max(_460, 0.0));
    float _1634 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2326 : (isnan(_2326) ? 1.0 : min(_2326, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1641 = (((((((cbLight._m0[_1550].x * _1528) * _1586) * _1594) * _1596) + ((isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0))) * _1034)) * cbPerFrame._m0[3u].x) + (_1634 * (_444 - (_444 * _246)))) + _1623;
    float _1642 = (((((((cbLight._m0[_1550].y * _1530) * _1586) * _1594) * _1596) + ((isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0))) * _1034)) * cbPerFrame._m0[3u].x) + (_1634 * (_445 - (_445 * _246)))) + _1624;
    float _1643 = (((((((cbLight._m0[_1550].z * _1532) * _1586) * _1594) * _1596) + ((isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0))) * _1034)) * cbPerFrame._m0[3u].x) + (_1634 * (_446 - (_446 * _246)))) + _1625;
    float _1644 = isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0));
    float _1645 = isnan(0.0) ? _1642 : (isnan(_1642) ? 0.0 : max(_1642, 0.0));
    float _1646 = isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0));
    float _1652 = cbMtdParam._m0[2u].x * _1623;
    float _1653 = cbMtdParam._m0[2u].y * _1624;
    float _1654 = cbMtdParam._m0[2u].z * _1625;
    float _2569 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1656 = isnan(1.0) ? _2569 : (isnan(_2569) ? 1.0 : min(_2569, 1.0));
    float _1662 = cbInstanceData._m0[_1534 + 6u].w * (isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0)));
    float _1667 = _547 / cbSceneParam._m0[86u].x;
    float _1668 = _548 / cbSceneParam._m0[86u].y;
    vec4 _1682 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1667, _1668, (log2((isnan(cbSceneParam._m0[77u].w) ? _476 : (isnan(_476) ? cbSceneParam._m0[77u].w : min(_476, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1684 = _1682.x;
    float _1685 = _1682.y;
    float _1686 = _1682.z;
    float _1687 = _1682.w;
    float _1838;
    float _1840;
    float _1842;
    float _1844;
    if (_476 > cbSceneParam._m0[78u].w)
    {
        float _1801 = isnan(_476) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _476 : min(cbSceneParam._m0[80u].w, _476));
        float _1802 = _1801 / _476;
        float _1813 = _1802 * _526;
        float _1814 = _527 * _1802;
        float _1815 = (-0.0) - _1814;
        float _1816 = _1802 * _528;
        float _1818 = (cbSceneParam._m0[77u].w * _1815) / _1801;
        float _1819 = _1818 + cbSceneParam._m0[79u].w;
        float _1820 = cbSceneParam._m0[79u].w - _1814;
        float _1826 = sqrt(((_1813 * _1813) + (_1814 * _1814)) + (_1816 * _1816));
        float _1829 = (1.0 - (cbSceneParam._m0[77u].w / _1801)) * _1826;
        float _1834 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1836 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2012;
        if (abs((_1815 - _1818) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2012 = ((((_1819 > 0.0) ? exp2(_1834 * _1819) : (2.0 - exp2(_1836 * _1819))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1829;
        }
        else
        {
            float _1943 = 1.0 / cbSceneParam._m0[80u].x;
            float _1944 = isnan(_1820) ? _1819 : (isnan(_1819) ? _1820 : max(_1819, _1820));
            float _1945 = isnan(_1820) ? _1819 : (isnan(_1819) ? _1820 : min(_1819, _1820));
            float _1954 = isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : min(_1944, 0.0));
            float _1955 = isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : min(_1945, 0.0));
            _2012 = ((abs(_1826 / _1815) * cbSceneParam._m0[80u].y) * ((((_1954 - _1955) * 2.0) - ((exp2(_1834 * (isnan(0.0) ? _1944 : (isnan(_1944) ? 0.0 : max(_1944, 0.0)))) - exp2(_1834 * (isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0))))) * _1943)) - ((exp2(_1836 * _1954) - exp2(_1836 * _1955)) * _1943))) + (_1829 * cbSceneParam._m0[80u].z);
        }
        vec4 _2014 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1667, _1668, 1.0), 0.0);
        float _2023 = exp2((_2012 * (-1.44269502162933349609375)) * (1.0 - _2014.w));
        float _2024 = log2(_2023);
        float _2040 = log2(_1687);
        _1838 = (exp2(_2040 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2024 * cbSceneParam._m0[78u].x)) * _2014.x) / cbSceneParam._m0[78u].x)) + _1684;
        _1840 = (exp2(_2040 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2024 * cbSceneParam._m0[78u].y)) * _2014.y) / cbSceneParam._m0[78u].y)) + _1685;
        _1842 = (exp2(_2040 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2024 * cbSceneParam._m0[78u].z)) * _2014.z) / cbSceneParam._m0[78u].z)) + _1686;
        _1844 = _2023 * _1687;
    }
    else
    {
        _1838 = _1684;
        _1840 = _1685;
        _1842 = _1686;
        _1844 = _1687;
    }
    bool _2050;
    vec4 _1853;
    vec4 _1876;
    float _1878;
    float _1882;
    float _1883;
    float _1884;
    float _1887;
    float _1890;
    float _1893;
    float _1894;
    bool _1905;
    for (;;)
    {
        _1853 = cbMatDynParam._m0[0u];
        float _1855 = roundEven(_1853.y);
        bool _1856 = _1855 == 3.0;
        float _1858 = log2(_1844);
        float _1862 = exp2(_1858 * cbSceneParam._m0[78u].x);
        float _1863 = exp2(_1858 * cbSceneParam._m0[78u].y);
        float _1864 = exp2(_1858 * cbSceneParam._m0[78u].z);
        float _1865 = _1862 * _1644;
        float _1866 = _1863 * _1645;
        float _1867 = _1864 * _1646;
        float _1874 = _542 + (-0.5);
        _1876 = cbMtdParam._m0[1u];
        _1878 = _1876.y * _1874;
        float _1881 = (_1855 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1882 = _1881 * (_1856 ? _1865 : (_1865 + (cbSceneParam._m0[72u].w * _1838)));
        _1883 = _1881 * (_1856 ? _1866 : (_1866 + (cbSceneParam._m0[72u].w * _1840)));
        _1884 = _1881 * (_1856 ? _1867 : (_1867 + (cbSceneParam._m0[72u].w * _1842)));
        _1887 = ((_1652 * _1656) * _1862) * _1881;
        _1890 = ((_1653 * _1656) * _1863) * _1881;
        _1893 = ((_1654 * _1656) * _1864) * _1881;
        _1894 = _1874 * 0.999000012874603271484375;
        _1905 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1905)
        {
            if ((cbInstanceData._m0[_1534 + 7u].x + _1894) < 0.5)
            {
                _2050 = true;
                break;
            }
        }
        uint _1978 = _1616 + uint(_1853.w);
        if ((cbInstanceData._m0[_1978].w < 1.0) && ((cbInstanceData._m0[_1978].w + _1894) < 0.5))
        {
            _2050 = true;
            break;
        }
        if ((_1878 + 1.0) < _1876.x)
        {
            _2050 = true;
            break;
        }
        _2050 = false;
        break;
    }
    float _2079;
    if (_2050)
    {
        discard_state = true;
        _2079 = 0.0;
    }
    else
    {
        _2079 = _1662;
    }
    SV_Target.x = _1882;
    SV_Target.y = _1883;
    SV_Target.z = _1884;
    SV_Target.w = _2079;
    SV_Target_1.x = _1887;
    SV_Target_1.y = _1890;
    SV_Target_1.z = _1893;
    SV_Target_1.w = _1662;
    discard_exit();
}


