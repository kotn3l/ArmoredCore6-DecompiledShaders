#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 45) uniform texture2D SceneColor_0_Screen_0;
layout(set = 0, binding = 0) uniform texture2D M_Blackhole_002_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Blackhole_002_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _755;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _164 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _165 = _164 * NORMAL.x;
    float _166 = _164 * NORMAL.y;
    float _167 = _164 * NORMAL.z;
    float _172;
    float _173;
    float _174;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _172 = (-0.0) - _165;
        _173 = (-0.0) - _166;
        _174 = (-0.0) - _167;
    }
    else
    {
        _172 = _165;
        _173 = _166;
        _174 = _167;
    }
    float _184 = TEXCOORD.x + (-0.5);
    float _186 = TEXCOORD.y + (-0.5);
    float _191 = 1.0 - sqrt((_186 * _186) + (_184 * _184));
    float _197 = exp2(log2(cbMtdParam._m0[13u].z * _191) * cbMtdParam._m0[13u].w);
    float _201 = exp2(log2(_197 * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _2103 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    float _202 = isnan(1.0) ? _2103 : (isnan(_2103) ? 1.0 : min(_2103, 1.0));
    float _217 = exp2(log2(cbMtdParam._m0[14u].w * _197) * cbMtdParam._m0[14u].z);
    float _2114 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _218 = isnan(1.0) ? _2114 : (isnan(_2114) ? 1.0 : min(_2114, 1.0));
    float _2125 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _225 = exp2(log2(cbMtdParam._m0[14u].y * _191) * cbMtdParam._m0[14u].x);
    float _2136 = isnan(0.0) ? _225 : (isnan(_225) ? 0.0 : max(_225, 0.0));
    float _227 = (isnan(1.0) ? _2136 : (isnan(_2136) ? 1.0 : min(_2136, 1.0))) - (isnan(1.0) ? _2125 : (isnan(_2125) ? 1.0 : min(_2125, 1.0)));
    float _228 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _229 = _228 * cbMtdParam._m0[10u].x;
    float _230 = _228 * cbMtdParam._m0[10u].y;
    float _231 = _228 * cbMtdParam._m0[10u].z;
    float _241 = exp2(log2(cbMtdParam._m0[13u].x * _197) * cbMtdParam._m0[13u].y);
    float _2167 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _242 = isnan(1.0) ? _2167 : (isnan(_2167) ? 1.0 : min(_2167, 1.0));
    float _251 = exp2(log2(cbMtdParam._m0[15u].y * _191) * cbMtdParam._m0[15u].x);
    float _2178 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _252 = isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0));
    float _258 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _259 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _268 = cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x;
    float _273 = _268 * cbMtdParam._m0[11u].w;
    float _274 = sin(_273);
    float _275 = cos(_273);
    vec4 _296 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * (fma(_186, (-0.0) - _274, _275 * _184) + 0.5)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * (fma(_186, _275, _274 * _184) + 0.5)) + cbTextureTilingScale._m0[1u].w));
    float _311 = exp2(log2(cbMtdParam._m0[12u].y * _197) * cbMtdParam._m0[12u].x);
    float _2189 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _312 = isnan(1.0) ? _2189 : (isnan(_2189) ? 1.0 : min(_2189, 1.0));
    float _313 = ((_296.x + (-0.5)) * cbMtdParam._m0[15u].w) * _312;
    float _314 = ((_296.y + (-0.5)) * cbMtdParam._m0[15u].w) * _312;
    float _317 = cbSceneParam._m0[86u].x * (_313 + (_258 / cbSceneParam._m0[86u].x));
    float _318 = (_314 + (_259 / cbSceneParam._m0[86u].y)) * cbSceneParam._m0[86u].y;
    float _326 = isnan(cbInstanceData._m0[8u].x) ? _317 : (isnan(_317) ? cbInstanceData._m0[8u].x : max(_317, cbInstanceData._m0[8u].x));
    float _327 = isnan(cbInstanceData._m0[8u].y) ? _318 : (isnan(_318) ? cbInstanceData._m0[8u].y : max(_318, cbInstanceData._m0[8u].y));
    vec4 _331 = texture(sampler2D(SceneColor_0_Screen_0, SS_ClampLinear), vec2(isnan(cbInstanceData._m0[8u].z) ? _326 : (isnan(_326) ? cbInstanceData._m0[8u].z : min(_326, cbInstanceData._m0[8u].z)), isnan(cbInstanceData._m0[8u].w) ? _327 : (isnan(_327) ? cbInstanceData._m0[8u].w : min(_327, cbInstanceData._m0[8u].w))));
    float _340 = cbSceneParam._m0[72u].w * _331.x;
    float _341 = cbSceneParam._m0[72u].w * _331.y;
    float _342 = cbSceneParam._m0[72u].w * _331.z;
    float _359 = cbMtdParam._m0[11u].z * _268;
    float _360 = sin(_359);
    float _361 = cos(_359);
    float _362 = _184 + (cbMtdParam._m0[16u].w * _268);
    float _363 = _186 + (cbMtdParam._m0[17u].x * _268);
    float _369 = _313 + 0.5;
    float _371 = _314 + 0.5;
    vec4 _384 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_369 + fma(_363, (-0.0) - _360, _362 * _361))) + cbTextureTilingScale._m0[0u].z, ((_371 + fma(_363, _361, _362 * _360)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _386 = _384.x;
    float _387 = _384.y;
    float _388 = _384.z;
    float _394 = cbMtdParam._m0[16u].x * _268;
    float _395 = sin(_394);
    float _396 = cos(_394);
    float _397 = _184 + (cbMtdParam._m0[16u].y * _268);
    float _398 = _186 + (cbMtdParam._m0[16u].z * _268);
    vec4 _410 = texture(sampler2D(M_Blackhole_002_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (_369 + fma(_398, (-0.0) - _395, _397 * _396))) + cbTextureTilingScale._m0[0u].z, ((_371 + fma(_398, _396, _397 * _395)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _432 = exp2(log2(cbMtdParam._m0[11u].x * _197) * cbMtdParam._m0[11u].y);
    float _2220 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _433 = isnan(1.0) ? _2220 : (isnan(_2220) ? 1.0 : min(_2220, 1.0));
    float _440 = ((((((_410.x - _386) * _252) + _386) * cbMtdParam._m0[9u].x) - _340) * _433) + _340;
    float _441 = ((((((_410.y - _387) * _252) + _387) * cbMtdParam._m0[9u].y) - _341) * _433) + _341;
    float _442 = ((((((_410.z - _388) * _252) + _388) * cbMtdParam._m0[9u].z) - _342) * _433) + _342;
    float _452 = inversesqrt(dot(vec3(_172, _173, _174), vec3(_172, _173, _174)));
    float _453 = _452 * _172;
    float _454 = _452 * _173;
    float _455 = _452 * _174;
    float _2231 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _456 = isnan(1.0) ? _2231 : (isnan(_2231) ? 1.0 : min(_2231, 1.0));
    float _472 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _512 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _522 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _512);
    float _523 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _512);
    float _524 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _512);
    float _528 = inversesqrt(dot(vec3(_522, _523, _524), vec3(_522, _523, _524)));
    float _529 = _522 * _528;
    float _530 = _523 * _528;
    float _531 = _524 * _528;
    vec4 _535 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_258 * cbSceneParam._m0[86u].x, _259 * cbSceneParam._m0[86u].y));
    float _538 = _535.x * TEXCOORD.z;
    float _539 = dot(vec3(_453, _454, _455), vec3(_529, _530, _531));
    float _542 = _539 * 2.0;
    float _547 = (_542 * _453) - _529;
    float _548 = (_542 * _454) - _530;
    float _549 = (_542 * _455) - _531;
    float _553 = abs(dot(vec3(_529, _530, _531), vec3(_453, _454, _455)));
    float _2242 = isnan(0.0) ? _553 : (isnan(_553) ? 0.0 : max(_553, 0.0));
    float _581 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _585 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _589 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _754;
    float _756;
    float _757;
    float _758;
    float _759;
    float _760;
    float _761;
    float _762;
    float _763;
    float _764;
    float _765;
    float _766;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _616 = fma(_589, cbModelParam._m0[26u].z, fma(_585, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _581));
        float _620 = fma(_589, cbModelParam._m0[27u].z, fma(_585, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _581));
        float _624 = fma(_589, cbModelParam._m0[28u].z, fma(_585, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _581));
        float _647 = _581 + _453;
        float _648 = _585 + _454;
        float _649 = _589 + _455;
        float _659 = fma(_649, cbModelParam._m0[26u].z, fma(_648, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _647)) - _616;
        float _660 = fma(_649, cbModelParam._m0[27u].z, fma(_648, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _647)) - _620;
        float _661 = fma(_649, cbModelParam._m0[28u].z, fma(_648, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _647)) - _624;
        float _665 = inversesqrt(dot(vec3(_659, _660, _661), vec3(_659, _660, _661)));
        float _678 = ((_665 * _659) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_616 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _679 = ((_665 * _660) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_620 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _680 = ((_665 * _661) / cbModelParam._m0[34u].z) + ((((((_624 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _683 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_678, _679, _680), 0.0);
        vec4 _690 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_678, _679, _680), 0.0);
        vec4 _697 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_678, _679, _680), 0.0);
        vec4 _704 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_678, _679, _680), 0.0);
        float _717 = exp2((_683.w + (-0.5)) * 20.0) * 2.0;
        float _727 = exp2((_690.w + (-0.5)) * 20.0) * 2.0;
        float _737 = exp2((_697.w + (-0.5)) * 20.0) * 2.0;
        float _747 = exp2((_704.w + (-0.5)) * 20.0) * 2.0;
        float _748 = _747 * (_704.x + (-0.5));
        float _749 = _747 * (_704.y + (-0.5));
        float _750 = _747 * (_704.z + (-0.5));
        _754 = _717 * (_683.z + (-0.5));
        _756 = _717 * (_683.y + (-0.5));
        _757 = _717 * (_683.x + (-0.5));
        _758 = _727 * (_690.z + (-0.5));
        _759 = _727 * (_690.y + (-0.5));
        _760 = _727 * (_690.x + (-0.5));
        _761 = _737 * (_697.z + (-0.5));
        _762 = _737 * (_697.y + (-0.5));
        _763 = _737 * (_697.x + (-0.5));
        _764 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        _765 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
        _766 = isnan(0.0) ? _748 : (isnan(_748) ? 0.0 : max(_748, 0.0));
    }
    else
    {
        _754 = _755;
        _756 = _755;
        _757 = _755;
        _758 = _755;
        _759 = _755;
        _760 = _755;
        _761 = _755;
        _762 = _755;
        _763 = _755;
        _764 = _755;
        _765 = _755;
        _766 = _755;
    }
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    float _933;
    float _934;
    float _935;
    float _936;
    float _937;
    float _938;
    float _939;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _792 = fma(_589, cbModelParam._m0[30u].z, fma(_585, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _581));
        float _796 = fma(_589, cbModelParam._m0[31u].z, fma(_585, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _581));
        float _800 = fma(_589, cbModelParam._m0[32u].z, fma(_585, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _581));
        float _823 = _581 + _453;
        float _824 = _585 + _454;
        float _825 = _589 + _455;
        float _835 = fma(_825, cbModelParam._m0[30u].z, fma(_824, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _823)) - _792;
        float _836 = fma(_825, cbModelParam._m0[31u].z, fma(_824, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _823)) - _796;
        float _837 = fma(_825, cbModelParam._m0[32u].z, fma(_824, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _823)) - _800;
        float _841 = inversesqrt(dot(vec3(_835, _836, _837), vec3(_835, _836, _837)));
        float _854 = ((_841 * _835) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_792 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _855 = ((_841 * _836) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_796 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _856 = ((_841 * _837) / cbModelParam._m0[35u].z) + ((((((_800 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _858 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _865 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _872 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _879 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        float _891 = exp2((_858.w + (-0.5)) * 20.0) * 2.0;
        float _901 = exp2((_865.w + (-0.5)) * 20.0) * 2.0;
        float _911 = exp2((_872.w + (-0.5)) * 20.0) * 2.0;
        float _921 = exp2((_879.w + (-0.5)) * 20.0) * 2.0;
        float _922 = _921 * (_879.x + (-0.5));
        float _923 = _921 * (_879.y + (-0.5));
        float _924 = _921 * (_879.z + (-0.5));
        _928 = _891 * (_858.z + (-0.5));
        _929 = _891 * (_858.y + (-0.5));
        _930 = _891 * (_858.x + (-0.5));
        _931 = _901 * (_865.z + (-0.5));
        _932 = _901 * (_865.y + (-0.5));
        _933 = _901 * (_865.x + (-0.5));
        _934 = _911 * (_872.z + (-0.5));
        _935 = _911 * (_872.y + (-0.5));
        _936 = _911 * (_872.x + (-0.5));
        _937 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        _938 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
        _939 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    }
    else
    {
        _928 = _755;
        _929 = _755;
        _930 = _755;
        _931 = _755;
        _932 = _755;
        _933 = _755;
        _934 = _755;
        _935 = _755;
        _936 = _755;
        _937 = _755;
        _938 = _755;
        _939 = _755;
    }
    float _954 = _547 * 0.5;
    float _955 = _548 * 0.5;
    float _956 = _549 * 0.5;
    float _957 = dot(vec4(_954, _955, _956, 1.0), vec4(_930, _933, _936, _939));
    float _960 = dot(vec4(_954, _955, _956, 1.0), vec4(_929, _932, _935, _938));
    float _963 = dot(vec4(_954, _955, _956, 1.0), vec4(_928, _931, _934, _937));
    float _998;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _970 = dot(vec4(_954, _955, _956, 1.0), vec4(_754, _758, _761, _764));
        float _974 = dot(vec4(_954, _955, _956, 1.0), vec4(_756, _759, _762, _765));
        float _978 = dot(vec4(_954, _955, _956, 1.0), vec4(_757, _760, _763, _766));
        float _985 = dot(vec4(cbModelParam._m0[39u]), vec4(_954, _955, _956, 1.0));
        _998 = dot(vec3(isnan(0.0) ? _978 : (isnan(_978) ? 0.0 : max(_978, 0.0)), isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0)), isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_985) ? 0.0 : (isnan(0.0) ? _985 : max(0.0, _985))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _998 = 1.0;
    }
    float _1009;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1000 = dot(vec4(cbModelParam._m0[40u]), vec4(_954, _955, _956, 1.0));
        _1009 = dot(vec3(isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0)), isnan(0.0) ? _960 : (isnan(_960) ? 0.0 : max(_960, 0.0)), isnan(0.0) ? _963 : (isnan(_963) ? 0.0 : max(_963, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1000) ? 0.0 : (isnan(0.0) ? _1000 : max(0.0, _1000))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1009 = 1.0;
    }
    float _1013 = (_1009 * cbModelParam._m0[1u].x) + (_998 * (1.0 - cbModelParam._m0[1u].x));
    float _1019 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1100;
    float _1102;
    float _1104;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1067 = fma(_589, cbModelParam._m0[13u].z, fma(_585, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _581)) + cbModelParam._m0[13u].w;
        float _1071 = fma(_589, cbModelParam._m0[14u].z, fma(_585, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _581)) + cbModelParam._m0[14u].w;
        float _1075 = fma(_589, cbModelParam._m0[15u].z, fma(_585, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _581)) + cbModelParam._m0[15u].w;
        float _1078 = fma(_549, cbModelParam._m0[13u].z, fma(_548, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _547));
        float _1081 = fma(_549, cbModelParam._m0[14u].z, fma(_548, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _547));
        float _1084 = fma(_549, cbModelParam._m0[15u].z, fma(_548, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _547));
        float _1110;
        if (_1078 > 0.0)
        {
            _1110 = abs((1.0 - _1067) / _1078);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1078 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1067 + 1.0) / _1078);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1110 = frontier_phi_16_14_ladder;
        }
        float _1300;
        if (_1081 > 0.0)
        {
            _1300 = abs((1.0 - _1071) / _1081);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1081 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1071 + 1.0) / _1081);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1300 = frontier_phi_25_21_ladder;
        }
        float _1675;
        if (_1084 > 0.0)
        {
            _1675 = abs((1.0 - _1075) / _1084);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1084 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1075 + 1.0) / _1084);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _1675 = frontier_phi_37_32_ladder;
        }
        float _1677 = isnan(_1300) ? _1110 : (isnan(_1110) ? _1300 : min(_1110, _1300));
        float _1678 = isnan(_1675) ? _1677 : (isnan(_1677) ? _1675 : min(_1677, _1675));
        float _1682 = (_1678 * _1078) + _1067;
        float _1683 = (_1678 * _1081) + _1071;
        float _1684 = (_1678 * _1084) + _1075;
        float _1685 = _1678 * 9.9999997473787516355514526367188e-05;
        float _1687 = (-1.0) - _1685;
        float _1689 = _1685 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_1684 > _1689) || ((_1684 < _1687) || ((_1683 > _1689) || ((_1683 < _1687) || ((_1682 < _1687) || (_1682 > _1689))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1892 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1684, cbModelParam._m0[9u].z, fma(_1683, cbModelParam._m0[9u].y, _1682 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1684, cbModelParam._m0[10u].z, fma(_1683, cbModelParam._m0[10u].y, _1682 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1684, cbModelParam._m0[11u].z, fma(_1683, cbModelParam._m0[11u].y, _1682 * cbModelParam._m0[11u].x))), _1019);
            frontier_phi_15_37_ladder = _1892.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _1892.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _1892.x * cbModelParam._m0[1u].y;
        }
        _1100 = frontier_phi_15_37_ladder_2;
        _1102 = frontier_phi_15_37_ladder_1;
        _1104 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1088 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_547, _548, _549), _1019);
        _1100 = _1088.x * cbModelParam._m0[1u].y;
        _1102 = _1088.y * cbModelParam._m0[1u].y;
        _1104 = _1088.z * cbModelParam._m0[1u].y;
    }
    float _1107 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1198;
    float _1200;
    float _1202;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1162 = fma(_589, cbModelParam._m0[21u].z, fma(_585, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _581)) + cbModelParam._m0[21u].w;
        float _1166 = fma(_589, cbModelParam._m0[22u].z, fma(_585, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _581)) + cbModelParam._m0[22u].w;
        float _1170 = fma(_589, cbModelParam._m0[23u].z, fma(_585, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _581)) + cbModelParam._m0[23u].w;
        float _1173 = fma(_549, cbModelParam._m0[21u].z, fma(_548, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _547));
        float _1176 = fma(_549, cbModelParam._m0[22u].z, fma(_548, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _547));
        float _1179 = fma(_549, cbModelParam._m0[23u].z, fma(_548, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _547));
        float _1305;
        if (_1173 > 0.0)
        {
            _1305 = abs((1.0 - _1162) / _1173);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1173 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1162 + 1.0) / _1173);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1305 = frontier_phi_27_23_ladder;
        }
        float _1702;
        if (_1176 > 0.0)
        {
            _1702 = abs((1.0 - _1166) / _1176);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1176 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1166 + 1.0) / _1176);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _1702 = frontier_phi_39_34_ladder;
        }
        float _1940;
        if (_1179 > 0.0)
        {
            _1940 = abs((1.0 - _1170) / _1179);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1179 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1170 + 1.0) / _1179);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _1940 = frontier_phi_49_46_ladder;
        }
        float _1942 = isnan(_1702) ? _1305 : (isnan(_1305) ? _1702 : min(_1305, _1702));
        float _1943 = isnan(_1940) ? _1942 : (isnan(_1942) ? _1940 : min(_1942, _1940));
        float _1947 = (_1943 * _1173) + _1162;
        float _1948 = (_1943 * _1176) + _1166;
        float _1949 = (_1943 * _1179) + _1170;
        float _1950 = _1943 * 9.9999997473787516355514526367188e-05;
        float _1951 = (-1.0) - _1950;
        float _1953 = _1950 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_1949 > _1953) || ((_1949 < _1951) || ((_1948 > _1953) || ((_1948 < _1951) || ((_1947 < _1951) || (_1947 > _1953))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2020 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1949, cbModelParam._m0[17u].z, fma(_1948, cbModelParam._m0[17u].y, _1947 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1949, cbModelParam._m0[18u].z, fma(_1948, cbModelParam._m0[18u].y, _1947 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1949, cbModelParam._m0[19u].z, fma(_1948, cbModelParam._m0[19u].y, _1947 * cbModelParam._m0[19u].x))), _1107);
            frontier_phi_24_49_ladder = _2020.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2020.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2020.x * cbModelParam._m0[1u].z;
        }
        _1198 = frontier_phi_24_49_ladder_2;
        _1200 = frontier_phi_24_49_ladder;
        _1202 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1182 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_547, _548, _549), _1107);
        _1198 = _1182.x * cbModelParam._m0[1u].z;
        _1200 = _1182.y * cbModelParam._m0[1u].z;
        _1202 = _1182.z * cbModelParam._m0[1u].z;
    }
    float _1214 = _538 * 0.01200000010430812835693359375;
    float _1216 = _1214 * ((cbModelParam._m0[1u].w * (_1198 - _1100)) + _1100);
    float _1217 = _1214 * ((cbModelParam._m0[1u].w * (_1200 - _1102)) + _1102);
    float _1218 = _1214 * ((cbModelParam._m0[1u].w * (_1202 - _1104)) + _1104);
    float _1239 = fma(_1218, cbSceneParam._m0[89u].z, fma(_1217, cbSceneParam._m0[89u].y, _1216 * cbSceneParam._m0[89u].x));
    float _1242 = fma(_1218, cbSceneParam._m0[90u].z, fma(_1217, cbSceneParam._m0[90u].y, _1216 * cbSceneParam._m0[90u].x));
    float _1245 = fma(_1218, cbSceneParam._m0[91u].z, fma(_1217, cbSceneParam._m0[91u].y, _1216 * cbSceneParam._m0[91u].x));
    float _1279 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1283 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1287 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1291 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1292 = _1279 / _1291;
    float _1293 = _1283 / _1291;
    float _1294 = _1287 / _1291;
    float _1441;
    float _1442;
    float _1443;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1321 = ((uint(_1294 > cbSceneParam._m0[59u].y) + uint(_1294 > cbSceneParam._m0[59u].x)) + uint(_1294 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1322 = _1321 + 43u;
        uint _1330 = _1321 + 44u;
        uint _1338 = _1321 + 45u;
        uint _1346 = _1321 + 46u;
        float _1357 = fma(_1291, cbSceneParam._m0[_1322].w, fma(_1287, cbSceneParam._m0[_1322].z, fma(_1283, cbSceneParam._m0[_1322].y, _1279 * cbSceneParam._m0[_1322].x)));
        float _1361 = fma(_1291, cbSceneParam._m0[_1330].w, fma(_1287, cbSceneParam._m0[_1330].z, fma(_1283, cbSceneParam._m0[_1330].y, _1279 * cbSceneParam._m0[_1330].x)));
        float _1369 = fma(_1291, cbSceneParam._m0[_1346].w, fma(_1287, cbSceneParam._m0[_1346].z, fma(_1283, cbSceneParam._m0[_1346].y, _1279 * cbSceneParam._m0[_1346].x)));
        float _1374 = cbSceneParam._m0[33u].z * _1369;
        float _1376 = cbSceneParam._m0[33u].w * _1369;
        float _1379 = fma(_1291, cbSceneParam._m0[_1338].w, fma(_1287, cbSceneParam._m0[_1338].z, fma(_1283, cbSceneParam._m0[_1338].y, _1279 * cbSceneParam._m0[_1338].x))) / _1369;
        float _1427 = (cbSceneParam._m0[33u].x - sqrt(((_1293 * _1293) + (_1292 * _1292)) + (_1294 * _1294))) * cbSceneParam._m0[33u].y;
        float _2368 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1434 = (isnan(1.0) ? _2368 : (isnan(_2368) ? 1.0 : min(_2368, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1374 + _1357) / _1369, (_1376 + _1361) / _1369), _1379), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1376 + _1357) / _1369, (_1361 - _1374) / _1369), _1379), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1357 - _1374) / _1369, (_1361 - _1376) / _1369), _1379), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1357 - _1376) / _1369, (_1374 + _1361) / _1369), _1379), 0.0)).x), vec4(0.25)));
        _1441 = 1.0 - (_1434 * cbSceneParam._m0[34u].x);
        _1442 = 1.0 - (_1434 * cbSceneParam._m0[34u].y);
        _1443 = 1.0 - (_1434 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1441 = 1.0;
        _1442 = 1.0;
        _1443 = 1.0;
    }
    float _1507;
    float _1509;
    float _1511;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1495 = fma(_1291, cbSceneParam._m0[63u].w, fma(_1287, cbSceneParam._m0[63u].z, fma(_1283, cbSceneParam._m0[63u].y, _1279 * cbSceneParam._m0[63u].x)));
        float _1496 = fma(_1291, cbSceneParam._m0[60u].w, fma(_1287, cbSceneParam._m0[60u].z, fma(_1283, cbSceneParam._m0[60u].y, _1279 * cbSceneParam._m0[60u].x))) / _1495;
        float _1497 = fma(_1291, cbSceneParam._m0[61u].w, fma(_1287, cbSceneParam._m0[61u].z, fma(_1283, cbSceneParam._m0[61u].y, _1279 * cbSceneParam._m0[61u].x))) / _1495;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1496 >= cbSceneParam._m0[64u].x) && (_1497 >= cbSceneParam._m0[64u].y)) && (_1496 <= cbSceneParam._m0[64u].z)) && (_1497 <= cbSceneParam._m0[64u].w))
        {
            float _1715 = fma(_1291, cbSceneParam._m0[62u].w, fma(_1287, cbSceneParam._m0[62u].z, fma(_1283, cbSceneParam._m0[62u].y, _1279 * cbSceneParam._m0[62u].x))) / _1495;
            float _1719 = isnan(cbSceneParam._m0[41u].w) ? _1715 : (isnan(_1715) ? cbSceneParam._m0[41u].w : max(_1715, cbSceneParam._m0[41u].w));
            float _1762 = (cbSceneParam._m0[33u].x - sqrt(((_1293 * _1293) + (_1292 * _1292)) + (_1294 * _1294))) * cbSceneParam._m0[33u].y;
            float _2384 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
            float _1769 = (isnan(1.0) ? _2384 : (isnan(_2384) ? 1.0 : min(_2384, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1496, cbSceneParam._m0[33u].w + _1497), _1719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1496, _1497 - cbSceneParam._m0[33u].z), _1719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1496 - cbSceneParam._m0[33u].z, _1497 - cbSceneParam._m0[33u].w), _1719), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1496 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1497), _1719), 0.0)).x), vec4(0.25)));
            float _1773 = 1.0 - (_1769 * cbSceneParam._m0[34u].x);
            float _1774 = 1.0 - (_1769 * cbSceneParam._m0[34u].y);
            float _1775 = 1.0 - (_1769 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_1773) ? _1441 : (isnan(_1441) ? _1773 : min(_1441, _1773));
            frontier_phi_36_35_ladder_1 = isnan(_1775) ? _1443 : (isnan(_1443) ? _1775 : min(_1443, _1775));
            frontier_phi_36_35_ladder_2 = isnan(_1774) ? _1442 : (isnan(_1442) ? _1774 : min(_1442, _1774));
        }
        else
        {
            frontier_phi_36_35_ladder = _1441;
            frontier_phi_36_35_ladder_1 = _1443;
            frontier_phi_36_35_ladder_2 = _1442;
        }
        _1507 = frontier_phi_36_35_ladder;
        _1509 = frontier_phi_36_35_ladder_2;
        _1511 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _1507 = _1441;
        _1509 = _1442;
        _1511 = _1443;
    }
    uint _1513 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1520 = floatBitsToUint(cbInstanceData._m0[_1513 + 5u]).x * 14u;
    float _1528 = (cbLight._m0[_1520 + 13u].x * (_538 + (-1.0))) + 1.0;
    uint _1529 = _1520 + 8u;
    float _1540 = cbLight._m0[_1520].x + _529;
    float _1541 = cbLight._m0[_1520].y + _530;
    float _1542 = cbLight._m0[_1520].z + _531;
    float _1546 = inversesqrt(dot(vec3(_1540, _1541, _1542), vec3(_1540, _1541, _1542)));
    float _1550 = dot(vec3(_453, _454, _455), vec3(cbLight._m0[_1520].xyz));
    float _2410 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
    float _1553 = isnan(1.0) ? _2410 : (isnan(_2410) ? 1.0 : min(_2410, 1.0));
    float _2421 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _1555 = dot(vec3(cbLight._m0[_1520].xyz), vec3(_1540 * _1546, _1541 * _1546, _1542 * _1546));
    float _2432 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
    float _1565 = (exp2(log2(1.0 - (isnan(1.0) ? _2432 : (isnan(_2432) ? 1.0 : min(_2432, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1571 = (0.5 / ((_1553 + 9.9999999392252902907785028219223e-09) + (isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0))))) * _1553;
    float _2443 = isnan(0.0) ? _1571 : (isnan(_1571) ? 0.0 : max(_1571, 0.0));
    float _1573 = (isnan(1.0) ? _2443 : (isnan(_2443) ? 1.0 : min(_2443, 1.0))) * 0.31831014156341552734375;
    float _1575 = isnan(1.0) ? _1528 : (isnan(_1528) ? 1.0 : min(_1528, 1.0));
    uint _1596 = (_1513 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1602 = cbInstanceData._m0[_1596].x * (isnan(4.0) ? _229 : (isnan(_229) ? 4.0 : min(_229, 4.0)));
    float _1603 = cbInstanceData._m0[_1596].y * (isnan(4.0) ? _230 : (isnan(_230) ? 4.0 : min(_230, 4.0)));
    float _1604 = cbInstanceData._m0[_1596].z * (isnan(4.0) ? _231 : (isnan(_231) ? 4.0 : min(_231, 4.0)));
    float _2459 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
    float _1613 = 0.959999978542327880859375 - (exp2(log2(1.0 - (isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0)))) * 5.0) * 0.959999978542327880859375);
    float _1620 = (((((((cbLight._m0[_1529].x * _1507) * _1565) * _1573) * _1575) + ((isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0))) * _1013)) * cbPerFrame._m0[3u].x) + (_1613 * (_440 - (_440 * _242)))) + _1602;
    float _1621 = (((((((cbLight._m0[_1529].y * _1509) * _1565) * _1573) * _1575) + ((isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0))) * _1013)) * cbPerFrame._m0[3u].x) + (_1613 * (_441 - (_441 * _242)))) + _1603;
    float _1622 = (((((((cbLight._m0[_1529].z * _1511) * _1565) * _1573) * _1575) + ((isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0))) * _1013)) * cbPerFrame._m0[3u].x) + (_1613 * (_442 - (_442 * _242)))) + _1604;
    float _2485 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1635 = isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0));
    float _1641 = cbInstanceData._m0[_1513 + 6u].w * (isnan(1.0) ? _2459 : (isnan(_2459) ? 1.0 : min(_2459, 1.0)));
    float _1646 = _258 / cbSceneParam._m0[86u].x;
    float _1647 = _259 / cbSceneParam._m0[86u].y;
    vec4 _1661 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1646, _1647, (log2((isnan(cbSceneParam._m0[77u].w) ? _472 : (isnan(_472) ? cbSceneParam._m0[77u].w : min(_472, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1663 = _1661.x;
    float _1664 = _1661.y;
    float _1665 = _1661.z;
    float _1666 = _1661.w;
    float _1817;
    float _1819;
    float _1821;
    float _1823;
    if (_472 > cbSceneParam._m0[78u].w)
    {
        float _1780 = isnan(_472) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _472 : min(cbSceneParam._m0[80u].w, _472));
        float _1781 = _1780 / _472;
        float _1792 = _1781 * _522;
        float _1793 = _523 * _1781;
        float _1794 = (-0.0) - _1793;
        float _1795 = _1781 * _524;
        float _1797 = (cbSceneParam._m0[77u].w * _1794) / _1780;
        float _1798 = _1797 + cbSceneParam._m0[79u].w;
        float _1799 = cbSceneParam._m0[79u].w - _1793;
        float _1805 = sqrt(((_1792 * _1792) + (_1793 * _1793)) + (_1795 * _1795));
        float _1808 = (1.0 - (cbSceneParam._m0[77u].w / _1780)) * _1805;
        float _1813 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1815 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1966;
        if (abs((_1794 - _1797) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1966 = ((((_1798 > 0.0) ? exp2(_1813 * _1798) : (2.0 - exp2(_1815 * _1798))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1808;
        }
        else
        {
            float _1913 = 1.0 / cbSceneParam._m0[80u].x;
            float _1914 = isnan(_1799) ? _1798 : (isnan(_1798) ? _1799 : max(_1798, _1799));
            float _1915 = isnan(_1799) ? _1798 : (isnan(_1798) ? _1799 : min(_1798, _1799));
            float _1924 = isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : min(_1914, 0.0));
            float _1925 = isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : min(_1915, 0.0));
            _1966 = ((abs(_1805 / _1794) * cbSceneParam._m0[80u].y) * ((((_1924 - _1925) * 2.0) - ((exp2(_1813 * (isnan(0.0) ? _1914 : (isnan(_1914) ? 0.0 : max(_1914, 0.0)))) - exp2(_1813 * (isnan(0.0) ? _1915 : (isnan(_1915) ? 0.0 : max(_1915, 0.0))))) * _1913)) - ((exp2(_1815 * _1924) - exp2(_1815 * _1925)) * _1913))) + (_1808 * cbSceneParam._m0[80u].z);
        }
        vec4 _1968 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1646, _1647, 1.0), 0.0);
        float _1977 = exp2((_1966 * (-1.44269502162933349609375)) * (1.0 - _1968.w));
        float _1978 = log2(_1977);
        float _1994 = log2(_1666);
        _1817 = (exp2(_1994 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1978 * cbSceneParam._m0[78u].x)) * _1968.x) / cbSceneParam._m0[78u].x)) + _1663;
        _1819 = (exp2(_1994 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1978 * cbSceneParam._m0[78u].y)) * _1968.y) / cbSceneParam._m0[78u].y)) + _1664;
        _1821 = (exp2(_1994 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1978 * cbSceneParam._m0[78u].z)) * _1968.z) / cbSceneParam._m0[78u].z)) + _1665;
        _1823 = _1977 * _1666;
    }
    else
    {
        _1817 = _1663;
        _1819 = _1664;
        _1821 = _1665;
        _1823 = _1666;
    }
    float _1834 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1835 = _1834 == 3.0;
    float _1837 = log2(_1823);
    float _1841 = exp2(_1837 * cbSceneParam._m0[78u].x);
    float _1842 = exp2(_1837 * cbSceneParam._m0[78u].y);
    float _1843 = exp2(_1837 * cbSceneParam._m0[78u].z);
    float _1844 = _1841 * (isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0)));
    float _1845 = _1842 * (isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0)));
    float _1846 = _1843 * (isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)));
    float _1855 = (_1834 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1855 * (_1835 ? _1844 : (_1844 + (cbSceneParam._m0[72u].w * _1817)));
    SV_Target.y = _1855 * (_1835 ? _1845 : (_1845 + (cbSceneParam._m0[72u].w * _1819)));
    SV_Target.z = _1855 * (_1835 ? _1846 : (_1846 + (cbSceneParam._m0[72u].w * _1821)));
    SV_Target.w = _1641;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _1602) * _1635) * _1841) * _1855;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _1603) * _1635) * _1842) * _1855;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _1604) * _1635) * _1843) * _1855;
    SV_Target_1.w = _1641;
}


