#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_4;
layout(set = 0, binding = 1) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_1;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_3;
layout(location = 5) in float TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _140 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _154 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _167 = floor(cbMtdParam._m0[9u].y * TEXCOORD.z) / cbMtdParam._m0[9u].y;
    float _168 = floor(cbMtdParam._m0[9u].y * TEXCOORD.w) / cbMtdParam._m0[9u].y;
    float _442 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    float _453 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    float _174 = (TEXCOORD.x / cbMtdParam._m0[9u].y) + (isnan(1.0) ? _442 : (isnan(_442) ? 1.0 : min(_442, 1.0)));
    float _175 = (TEXCOORD.y / cbMtdParam._m0[9u].y) + (isnan(1.0) ? _453 : (isnan(_453) ? 1.0 : min(_453, 1.0)));
    vec4 _188 = texture(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_4, SS_ClampLinear), vec2((cbTextureTilingScale._m0[0u].x * _174) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _175) + cbTextureTilingScale._m0[0u].w));
    float _194 = _188.w;
    float _195 = 1.0 / _194;
    float _196 = _188.x * _195;
    float _197 = _195 * _188.y;
    float _198 = _195 * _188.z;
    float _213 = texture(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_0, SS_ClampLinear), vec2((cbTextureTilingScale._m0[1u].x * _174) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _175) + cbTextureTilingScale._m0[1u].w)).x * _195;
    vec4 _225 = texture(sampler2D(SLOD_LookCam_Octahedral_PivotAnim_snp_0_Texture2D_1, SS_ClampLinear), vec2((cbTextureTilingScale._m0[2u].x * _174) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _175) + cbTextureTilingScale._m0[2u].w));
    float _233 = (_225.x * 2.0) + (-1.0);
    float _235 = (_225.y * 2.0) + (-1.0);
    float _236 = dot(vec2(_233, _235), vec2(_233, _235));
    float _464 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _241 = sqrt(1.0 - (isnan(1.0) ? _464 : (isnan(_464) ? 1.0 : min(_464, 1.0))));
    float _242 = _225.z * _195;
    float _245 = fma(_241, _147 * NORMAL.x, fma(_235, _154 * TANGENT.x, (_140 * _132) * _233));
    float _248 = fma(_241, _147 * NORMAL.y, fma(_235, _154 * TANGENT.y, (_140 * _133) * _233));
    float _251 = fma(_241, _147 * NORMAL.z, fma(_235, _154 * TANGENT.z, (_140 * _134) * _233));
    float _255 = inversesqrt(dot(vec3(_245, _248, _251), vec3(_245, _248, _251)));
    float _475 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _256 = isnan(1.0) ? _475 : (isnan(_475) ? 1.0 : min(_475, 1.0));
    float _486 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _497 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _258 = isnan(1.0) ? _497 : (isnan(_497) ? 1.0 : min(_497, 1.0));
    float _508 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _259 = isnan(1.0) ? _508 : (isnan(_508) ? 1.0 : min(_508, 1.0));
    float _519 = isnan(0.0) ? _198 : (isnan(_198) ? 0.0 : max(_198, 0.0));
    float _260 = isnan(1.0) ? _519 : (isnan(_519) ? 1.0 : min(_519, 1.0));
    float _530 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    uint _263 = uint(roundEven(NORMAL.w));
    vec4 _268 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _270 = _268.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _335 = (cbMatDynParam._m0[5u].x * TEXCOORD_13) + cbMatDynParam._m0[5u].y;
        float _541 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
        float _336 = isnan(1.0) ? _541 : (isnan(_541) ? 1.0 : min(_541, 1.0));
        float _340 = (cbMatDynParam._m0[5u].z * TEXCOORD_13) + cbMatDynParam._m0[5u].w;
        float _552 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _552 : (isnan(_552) ? 1.0 : min(_552, 1.0))) - _336)) + _336) < ((_270 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _369;
    uint _290;
    vec4 _295;
    float _302;
    float _303;
    float _304;
    float _310;
    vec4 _314;
    float _316;
    float _317;
    bool _328;
    for (;;)
    {
        _290 = _263 * 13u;
        _295 = cbInstanceData._m0[(_290 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _299 = (cbMtdParam._m0[0u].x * _258) * _295.x;
        float _300 = (cbMtdParam._m0[0u].y * _259) * _295.y;
        float _301 = (cbMtdParam._m0[0u].z * _260) * _295.z;
        float _563 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        _302 = isnan(1.0) ? _563 : (isnan(_563) ? 1.0 : min(_563, 1.0));
        float _574 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        _303 = isnan(1.0) ? _574 : (isnan(_574) ? 1.0 : min(_574, 1.0));
        float _585 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
        _304 = isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0));
        float _596 = isnan(0.0) ? _256 : (isnan(_256) ? 0.0 : max(_256, 0.0));
        _310 = cbInstanceData._m0[_290 + 6u].w * (isnan(1.0) ? _596 : (isnan(_596) ? 1.0 : min(_596, 1.0)));
        float _311 = _270 + (-0.5);
        _314 = cbMtdParam._m0[1u];
        _316 = _314.y * _311;
        _317 = _311 * 0.999000012874603271484375;
        _328 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_328)
        {
            if ((cbInstanceData._m0[_290 + 7u].x + _317) < 0.5)
            {
                _369 = true;
                break;
            }
        }
        if ((_295.w < 1.0) && ((_295.w + _317) < 0.5))
        {
            _369 = true;
            break;
        }
        if ((_316 + _194) < _314.x)
        {
            _369 = true;
            break;
        }
        _369 = false;
        break;
    }
    if (_369)
    {
        discard_state = true;
    }
    bool _395 = cbMtdParam._m0[1u].z != 0.0;
    float _396 = _395 ? _310 : 0.0;
    SV_Target.x = ((_245 * 0.5) * _255) + 0.500488758087158203125;
    SV_Target.y = ((_248 * 0.5) * _255) + 0.500488758087158203125;
    SV_Target.z = ((_251 * 0.5) * _255) + 0.500488758087158203125;
    SV_Target.w = _396;
    SV_Target_1.x = isnan(1.0) ? _530 : (isnan(_530) ? 1.0 : min(_530, 1.0));
    SV_Target_1.y = isnan(1.0) ? _486 : (isnan(_486) ? 1.0 : min(_486, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _395 ? _310 : TEXCOORD_3.w;
    SV_Target_2.x = _302;
    SV_Target_2.y = _303;
    SV_Target_2.z = _304;
    SV_Target_2.w = _395 ? _310 : (float(floatBitsToUint(cbInstanceData._m0[_290 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _396;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _396;
    discard_exit();
}


