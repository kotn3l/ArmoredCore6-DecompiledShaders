#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _144 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _152 = _151 * NORMAL.x;
    float _153 = _151 * NORMAL.y;
    float _154 = _151 * NORMAL.z;
    float _158 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
    }
    else
    {
        _166 = _152;
        _167 = _153;
        _168 = _154;
    }
    vec4 _188 = texture(sampler2D(M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _194 = _188.w;
    float _195 = _188.x * cbMtdParam._m0[9u].x;
    float _196 = _188.y * cbMtdParam._m0[9u].y;
    float _197 = _188.z * cbMtdParam._m0[9u].z;
    vec4 _209 = texture(sampler2D(M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _211 = _209.x;
    vec4 _223 = texture(sampler2D(M_AMSN_M0_M1_Edge_PK_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _227 = _223.z;
    float _231 = (_223.x * 2.0) + (-1.0);
    float _233 = (_223.y * 2.0) + (-1.0);
    float _234 = dot(vec2(_231, _233), vec2(_231, _233));
    float _452 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _240 = sqrt(1.0 - (isnan(1.0) ? _452 : (isnan(_452) ? 1.0 : min(_452, 1.0))));
    float _245 = gl_FragCoord.x * 0.125;
    float _247 = gl_FragCoord.y * 0.125;
    float _258 = fma(_240, _166, fma(_233, _158 * TANGENT.x, (_144 * _137) * _231));
    float _261 = fma(_240, _167, fma(_233, _158 * TANGENT.y, (_144 * _138) * _231));
    float _264 = fma(_240, _168, fma(_233, _158 * TANGENT.z, (_144 * _139) * _231));
    float _268 = inversesqrt(dot(vec3(_258, _261, _264), vec3(_258, _261, _264)));
    float _463 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _474 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _270 = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
    float _485 = isnan(0.0) ? _196 : (isnan(_196) ? 0.0 : max(_196, 0.0));
    float _271 = isnan(1.0) ? _485 : (isnan(_485) ? 1.0 : min(_485, 1.0));
    float _496 = isnan(0.0) ? _197 : (isnan(_197) ? 0.0 : max(_197, 0.0));
    float _272 = isnan(1.0) ? _496 : (isnan(_496) ? 1.0 : min(_496, 1.0));
    float _507 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    uint _275 = uint(roundEven(NORMAL.w));
    if (!(cbMtdParam._m0[10u].x >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_245, _247)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625)))
    {
        discard_state = true;
    }
    vec4 _281 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_245, _247));
    float _283 = _281.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _346 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _518 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
        float _347 = isnan(1.0) ? _518 : (isnan(_518) ? 1.0 : min(_518, 1.0));
        float _351 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _529 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _529 : (isnan(_529) ? 1.0 : min(_529, 1.0))) - _347)) + _347) < ((_283 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _375;
    uint _303;
    vec4 _308;
    float _315;
    float _316;
    float _317;
    float _321;
    vec4 _325;
    float _327;
    float _328;
    bool _339;
    for (;;)
    {
        _303 = _275 * 13u;
        _308 = cbInstanceData._m0[(_303 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _312 = (cbMtdParam._m0[0u].x * _270) * _308.x;
        float _313 = (cbMtdParam._m0[0u].y * _271) * _308.y;
        float _314 = (cbMtdParam._m0[0u].z * _272) * _308.z;
        float _540 = isnan(0.0) ? _312 : (isnan(_312) ? 0.0 : max(_312, 0.0));
        _315 = isnan(1.0) ? _540 : (isnan(_540) ? 1.0 : min(_540, 1.0));
        float _551 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
        _316 = isnan(1.0) ? _551 : (isnan(_551) ? 1.0 : min(_551, 1.0));
        float _562 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
        _317 = isnan(1.0) ? _562 : (isnan(_562) ? 1.0 : min(_562, 1.0));
        _321 = cbInstanceData._m0[_303 + 6u].w;
        float _322 = _283 + (-0.5);
        _325 = cbMtdParam._m0[1u];
        _327 = _325.y * _322;
        _328 = _322 * 0.999000012874603271484375;
        _339 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_339)
        {
            if ((cbInstanceData._m0[_303 + 7u].x + _328) < 0.5)
            {
                _375 = true;
                break;
            }
        }
        if ((_308.w < 1.0) && ((_308.w + _328) < 0.5))
        {
            _375 = true;
            break;
        }
        if ((_327 + _194) < _325.x)
        {
            _375 = true;
            break;
        }
        _375 = false;
        break;
    }
    if (_375)
    {
        discard_state = true;
    }
    bool _401 = cbMtdParam._m0[1u].z != 0.0;
    float _402 = _401 ? _321 : 0.0;
    SV_Target.x = ((_258 * 0.5) * _268) + 0.500488758087158203125;
    SV_Target.y = ((_261 * 0.5) * _268) + 0.500488758087158203125;
    SV_Target.z = ((_264 * 0.5) * _268) + 0.500488758087158203125;
    SV_Target.w = _402;
    SV_Target_1.x = isnan(1.0) ? _507 : (isnan(_507) ? 1.0 : min(_507, 1.0));
    SV_Target_1.y = isnan(1.0) ? _463 : (isnan(_463) ? 1.0 : min(_463, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _401 ? _321 : TEXCOORD.z;
    SV_Target_2.x = _315;
    SV_Target_2.y = _316;
    SV_Target_2.z = _317;
    SV_Target_2.w = _401 ? _321 : (float(floatBitsToUint(cbInstanceData._m0[_303 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _402;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _402;
    discard_exit();
}


