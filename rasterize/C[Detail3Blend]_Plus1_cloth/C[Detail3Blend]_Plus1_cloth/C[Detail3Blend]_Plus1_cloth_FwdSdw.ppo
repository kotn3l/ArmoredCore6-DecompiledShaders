#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1250;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _206 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _207 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _208 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _214 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _221 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _222 = _221 * NORMAL.x;
    float _223 = _221 * NORMAL.y;
    float _224 = _221 * NORMAL.z;
    float _228 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _236;
    float _237;
    float _238;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _236 = (-0.0) - _222;
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
    }
    else
    {
        _236 = _222;
        _237 = _223;
        _238 = _224;
    }
    vec4 _252 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _257 = _252.z;
    float _258 = _252.w;
    float _264 = exp2(log2(_257 * 22.0) * 260.0);
    float _265 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _266 = isnan(1.0) ? _265 : (isnan(_265) ? 1.0 : min(_265, 1.0));
    float _272 = exp2(log2(1.0 - _258) * 10.19999980926513671875);
    vec4 _285 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _310 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _321 = cbMtdParam._m0[9u].x * _310.x;
    float _322 = cbMtdParam._m0[9u].y * _310.y;
    float _323 = cbMtdParam._m0[9u].z * _310.z;
    float _330 = (((cbMtdParam._m0[10u].x * _285.x) - _321) * _272) + _321;
    float _331 = (((cbMtdParam._m0[10u].y * _285.y) - _322) * _272) + _322;
    float _332 = (((cbMtdParam._m0[10u].z * _285.z) - _323) * _272) + _323;
    float _336 = exp2(log2(_258) * 10.0);
    vec4 _348 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _382 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _387 = _382.w;
    vec4 _407 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _418 = cbMtdParam._m0[12u].x * _407.x;
    float _419 = cbMtdParam._m0[12u].y * _407.y;
    float _420 = cbMtdParam._m0[12u].z * _407.z;
    float _427 = ((((((((cbMtdParam._m0[11u].x * _348.x) - _330) * _336) + _330) * 4.55000019073486328125) * _382.x) - _418) * _266) + _418;
    float _428 = ((((((((cbMtdParam._m0[11u].y * _348.y) - _331) * _336) + _331) * 4.55000019073486328125) * _382.y) - _419) * _266) + _419;
    float _429 = ((((((((cbMtdParam._m0[11u].z * _348.z) - _332) * _336) + _332) * 4.55000019073486328125) * _382.z) - _420) * _266) + _420;
    vec4 _446 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    vec4 _468 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _470 = _468.x;
    float _471 = _468.y;
    float _474 = cbMtdParam._m0[13u].x + _468.z;
    float _477 = (((cbMtdParam._m0[13u].y + _446.z) - _474) * _272) + _474;
    vec4 _490 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _514 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _516 = _514.x;
    float _517 = _514.y;
    float _520 = cbMtdParam._m0[13u].z + _514.z;
    float _523 = ((((_257 * 2.0) * ((((_490.z - _477) + cbMtdParam._m0[14u].y) * _336) + _477)) - _520) * _266) + _520;
    float _534 = ((_446.x - _470) * _272) + _470;
    float _535 = ((_446.y - _471) * _272) + _471;
    float _550 = (((((((_490.x - _534) * _336) + _534) - _516) * _266) + _516) * 2.0) + (-1.0);
    float _551 = (((((((_490.y - _535) * _336) + _535) - _517) * _266) + _517) * 2.0) + (-1.0);
    float _552 = dot(vec2(_550, _551), vec2(_550, _551));
    float _3874 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _557 = sqrt(1.0 - (isnan(1.0) ? _3874 : (isnan(_3874) ? 1.0 : min(_3874, 1.0))));
    float _560 = _550 + (cbMtdParam._m0[13u].w * ((_252.x * 2.0) + (-1.0)));
    float _561 = _551 + (cbMtdParam._m0[13u].w * ((_252.y * 2.0) + (-1.0)));
    float _564 = fma(_557, _236, fma(_561, _228 * TANGENT.x, (_214 * _206) * _560));
    float _567 = fma(_557, _237, fma(_561, _228 * TANGENT.y, (_214 * _207) * _560));
    float _570 = fma(_557, _238, fma(_561, _228 * TANGENT.z, (_214 * _208) * _560));
    float _574 = inversesqrt(dot(vec3(_564, _567, _570), vec3(_564, _567, _570)));
    float _575 = _574 * _564;
    float _576 = _574 * _567;
    float _577 = _574 * _570;
    float _3885 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _578 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _3896 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _579 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _3907 = isnan(0.0) ? _427 : (isnan(_427) ? 0.0 : max(_427, 0.0));
    float _580 = isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0));
    float _3918 = isnan(0.0) ? _428 : (isnan(_428) ? 0.0 : max(_428, 0.0));
    float _581 = isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0));
    float _3929 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _582 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
    float _3940 = isnan(0.0) ? cbMtdParam._m0[14u].x : (isnan(cbMtdParam._m0[14u].x) ? 0.0 : max(cbMtdParam._m0[14u].x, 0.0));
    float _583 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
    float _599 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _639 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _649 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _639);
    float _650 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _639);
    float _651 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _639);
    float _655 = inversesqrt(dot(vec3(_649, _650, _651), vec3(_649, _650, _651)));
    float _656 = _649 * _655;
    float _657 = _650 * _655;
    float _658 = _651 * _655;
    float _664 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _665 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _667 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _669 = _667.w;
    float _687 = fma(_577, cbSceneParam._m0[5u].z, fma(_576, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _575));
    float _690 = fma(_577, cbSceneParam._m0[6u].z, fma(_576, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _575));
    float _693 = fma(_577, cbSceneParam._m0[7u].z, fma(_576, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _575));
    vec4 _695 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _697 = _695.x;
    float _709 = (((_695.y - _579) + (_695.w * _579)) * cbMtdParam._m0[3u].x) + _579;
    float _726 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_697 * _697)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _734 = (((cbMatDynParam._m0[15u].x - _583) * cbMatDynParam._m0[15u].w) * _726) + _583;
    float _743 = ((_726 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _709)) + _709;
    uint _767 = uint(roundEven(NORMAL.w)) * 13u;
    uint _769 = (_767 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _775 = (cbMtdParam._m0[0u].x * _580) * cbInstanceData._m0[_769].x;
    float _776 = (cbMtdParam._m0[0u].y * _581) * cbInstanceData._m0[_769].y;
    float _777 = (cbMtdParam._m0[0u].z * _582) * cbInstanceData._m0[_769].z;
    float _3951 = isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0));
    float _778 = isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0));
    float _3962 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _779 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
    float _3973 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _780 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
    vec4 _781 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _786 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _797 = (((_786.x - _734) + (_786.w * _734)) * cbMtdParam._m0[3u].x) + _734;
    float _810 = (cbMtdParam._m0[3u].x * (((_778 * _669) - _778) + _781.x)) + _778;
    float _811 = (cbMtdParam._m0[3u].x * (((_779 * _669) - _779) + _781.y)) + _779;
    float _812 = (cbMtdParam._m0[3u].x * (((_780 * _669) - _780) + _781.z)) + _780;
    vec4 _813 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _826 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_734 * (_580 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_734 * (_581 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_734 * (_582 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _813.z;
    float _830 = _826 * cbMatDynParam._m0[13u].w;
    float _840 = (_830 * (cbMatDynParam._m0[13u].x - _810)) + _810;
    float _841 = (_830 * (cbMatDynParam._m0[13u].y - _811)) + _811;
    float _842 = (_830 * (cbMatDynParam._m0[13u].z - _812)) + _812;
    float _850 = ((_826 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _797)) + _797;
    float _851 = 1.0 - _850;
    float _852 = _851 * _840;
    float _853 = _851 * _841;
    float _854 = _851 * _842;
    float _858 = (_840 + (-0.039999999105930328369140625)) * _850;
    float _859 = (_841 + (-0.039999999105930328369140625)) * _850;
    float _860 = (_842 + (-0.039999999105930328369140625)) * _850;
    float _861 = _858 + 0.039999999105930328369140625;
    float _862 = _859 + 0.039999999105930328369140625;
    float _863 = _860 + 0.039999999105930328369140625;
    vec4 _872 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _664, cbSceneParam._m0[86u].y * _665));
    float _875 = _872.x * TEXCOORD_4;
    float _876 = dot(vec3(_575, _576, _577), vec3(_656, _657, _658));
    float _879 = _876 * 2.0;
    float _883 = (_879 * _575) - _656;
    float _884 = (_879 * _576) - _657;
    float _885 = (_879 * _577) - _658;
    float _889 = abs(dot(vec3(_656, _657, _658), vec3(_575, _576, _577)));
    float _3984 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _891 = sqrt(_743);
    float _904 = exp2((_891 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_891 * 3.0));
    float _910 = (1.0 - _904) * ((_891 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _911 = _904 * _891;
    float _939 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _943 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _947 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1249;
    float _1251;
    float _1252;
    float _1253;
    float _1254;
    float _1255;
    float _1256;
    float _1257;
    float _1258;
    float _1259;
    float _1260;
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _974 = fma(_947, cbModelParam._m0[26u].z, fma(_943, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _939));
        float _978 = fma(_947, cbModelParam._m0[27u].z, fma(_943, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _939));
        float _982 = fma(_947, cbModelParam._m0[28u].z, fma(_943, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _939));
        float _1007 = _939 + _575;
        float _1008 = _943 + _576;
        float _1009 = _947 + _577;
        float _1019 = fma(_1009, cbModelParam._m0[26u].z, fma(_1008, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1007)) - _974;
        float _1020 = fma(_1009, cbModelParam._m0[27u].z, fma(_1008, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1007)) - _978;
        float _1021 = fma(_1009, cbModelParam._m0[28u].z, fma(_1008, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1007)) - _982;
        float _1025 = inversesqrt(dot(vec3(_1019, _1020, _1021), vec3(_1019, _1020, _1021)));
        float _1038 = ((_1025 * _1019) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_974 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1039 = ((_1025 * _1020) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_978 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1040 = ((_1025 * _1021) / cbModelParam._m0[34u].z) + ((((((_982 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1043 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1050 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1057 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        vec4 _1064 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1038, _1039, _1040), 0.0);
        float _1077 = exp2((_1043.w + (-0.5)) * 20.0) * 2.0;
        float _1078 = _1077 * (_1043.x + (-0.5));
        float _1079 = _1077 * (_1043.y + (-0.5));
        float _1080 = _1077 * (_1043.z + (-0.5));
        float _1087 = exp2((_1050.w + (-0.5)) * 20.0) * 2.0;
        float _1088 = _1087 * (_1050.x + (-0.5));
        float _1089 = _1087 * (_1050.y + (-0.5));
        float _1090 = _1087 * (_1050.z + (-0.5));
        float _1097 = exp2((_1057.w + (-0.5)) * 20.0) * 2.0;
        float _1098 = _1097 * (_1057.x + (-0.5));
        float _1099 = _1097 * (_1057.y + (-0.5));
        float _1100 = _1097 * (_1057.z + (-0.5));
        float _1107 = exp2((_1064.w + (-0.5)) * 20.0) * 2.0;
        float _1108 = _1107 * (_1064.x + (-0.5));
        float _1109 = _1107 * (_1064.y + (-0.5));
        float _1110 = _1107 * (_1064.z + (-0.5));
        float _1111 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1112 = isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0));
        float _1113 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1114 = _1078 * 0.5;
        float _1115 = _1088 * 0.5;
        float _1116 = _1098 * 0.5;
        float _1117 = dot(vec3(_1114, _1115, _1116), vec3(_1114, _1115, _1116));
        float _1122 = (_1117 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1117);
        float _1131 = (dot(vec3(_575, _576, _577), vec3(_1122 * _1114, _1122 * _1115, _1122 * _1116)) + 1.0) * 0.5;
        float _4010 = isnan(0.0) ? _1131 : (isnan(_1131) ? 0.0 : max(_1131, 0.0));
        float _1141 = sqrt(((_1115 * _1115) + (_1114 * _1114)) + (_1116 * _1116)) / (_1111 + 9.9999997473787516355514526367188e-06);
        float _4021 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1142 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
        float _1143 = _1142 * 2.0;
        float _1147 = (1.0 - _1142) / (_1142 + 1.0);
        float _4032 = isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0));
        float _1148 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
        float _1157 = ((((1.0 - _1148) * (_1143 + 2.0)) * exp2(log2(isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * (_1143 + 1.0))) + _1148) * _1111;
        float _1158 = _1079 * 0.5;
        float _1159 = _1089 * 0.5;
        float _1160 = _1099 * 0.5;
        float _1161 = dot(vec3(_1158, _1159, _1160), vec3(_1158, _1159, _1160));
        float _1166 = (_1161 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1161);
        float _1174 = (dot(vec3(_575, _576, _577), vec3(_1166 * _1158, _1166 * _1159, _1166 * _1160)) + 1.0) * 0.5;
        float _4043 = isnan(0.0) ? _1174 : (isnan(_1174) ? 0.0 : max(_1174, 0.0));
        float _1183 = sqrt(((_1159 * _1159) + (_1158 * _1158)) + (_1160 * _1160)) / (_1112 + 9.9999997473787516355514526367188e-06);
        float _4054 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1184 = isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0));
        float _1185 = _1184 * 2.0;
        float _1189 = (1.0 - _1184) / (_1184 + 1.0);
        float _4065 = isnan(0.0) ? _1189 : (isnan(_1189) ? 0.0 : max(_1189, 0.0));
        float _1190 = isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0));
        float _1199 = ((((1.0 - _1190) * (_1185 + 2.0)) * exp2(log2(isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0))) * (_1185 + 1.0))) + _1190) * _1112;
        float _1200 = _1080 * 0.5;
        float _1201 = _1090 * 0.5;
        float _1202 = _1100 * 0.5;
        float _1203 = dot(vec3(_1200, _1201, _1202), vec3(_1200, _1201, _1202));
        float _1208 = (_1203 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1203);
        float _1216 = (dot(vec3(_575, _576, _577), vec3(_1208 * _1200, _1208 * _1201, _1208 * _1202)) + 1.0) * 0.5;
        float _4076 = isnan(0.0) ? _1216 : (isnan(_1216) ? 0.0 : max(_1216, 0.0));
        float _1225 = sqrt(((_1201 * _1201) + (_1200 * _1200)) + (_1202 * _1202)) / (_1113 + 9.9999997473787516355514526367188e-06);
        float _4087 = isnan(0.0) ? _1225 : (isnan(_1225) ? 0.0 : max(_1225, 0.0));
        float _1226 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1227 = _1226 * 2.0;
        float _1231 = (1.0 - _1226) / (_1226 + 1.0);
        float _4098 = isnan(0.0) ? _1231 : (isnan(_1231) ? 0.0 : max(_1231, 0.0));
        float _1232 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1241 = ((((1.0 - _1232) * (_1227 + 2.0)) * exp2(log2(isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) * (_1227 + 1.0))) + _1232) * _1113;
        _1249 = _1080;
        _1251 = _1079;
        _1252 = _1078;
        _1253 = _1090;
        _1254 = _1089;
        _1255 = _1088;
        _1256 = _1100;
        _1257 = _1099;
        _1258 = _1098;
        _1259 = _1113;
        _1260 = _1112;
        _1261 = _1111;
        _1262 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0)));
        _1263 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0)));
        _1264 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0)));
    }
    else
    {
        _1249 = _1250;
        _1251 = _1250;
        _1252 = _1250;
        _1253 = _1250;
        _1254 = _1250;
        _1255 = _1250;
        _1256 = _1250;
        _1257 = _1250;
        _1258 = _1250;
        _1259 = _1250;
        _1260 = _1250;
        _1261 = _1250;
        _1262 = 0.0;
        _1263 = 0.0;
        _1264 = 0.0;
    }
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    float _1567;
    float _1568;
    float _1569;
    float _1570;
    float _1571;
    float _1572;
    float _1573;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1290 = fma(_947, cbModelParam._m0[30u].z, fma(_943, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _939));
        float _1294 = fma(_947, cbModelParam._m0[31u].z, fma(_943, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _939));
        float _1298 = fma(_947, cbModelParam._m0[32u].z, fma(_943, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _939));
        float _1321 = _939 + _575;
        float _1322 = _943 + _576;
        float _1323 = _947 + _577;
        float _1333 = fma(_1323, cbModelParam._m0[30u].z, fma(_1322, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1321)) - _1290;
        float _1334 = fma(_1323, cbModelParam._m0[31u].z, fma(_1322, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1321)) - _1294;
        float _1335 = fma(_1323, cbModelParam._m0[32u].z, fma(_1322, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1321)) - _1298;
        float _1339 = inversesqrt(dot(vec3(_1333, _1334, _1335), vec3(_1333, _1334, _1335)));
        float _1352 = ((_1339 * _1333) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1290 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1353 = ((_1339 * _1334) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1294 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1354 = ((_1339 * _1335) / cbModelParam._m0[35u].z) + ((((((_1298 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1356 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1363 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1370 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        vec4 _1377 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1352, _1353, _1354), 0.0);
        float _1389 = exp2((_1356.w + (-0.5)) * 20.0) * 2.0;
        float _1390 = _1389 * (_1356.x + (-0.5));
        float _1391 = _1389 * (_1356.y + (-0.5));
        float _1392 = _1389 * (_1356.z + (-0.5));
        float _1399 = exp2((_1363.w + (-0.5)) * 20.0) * 2.0;
        float _1400 = _1399 * (_1363.x + (-0.5));
        float _1401 = _1399 * (_1363.y + (-0.5));
        float _1402 = _1399 * (_1363.z + (-0.5));
        float _1409 = exp2((_1370.w + (-0.5)) * 20.0) * 2.0;
        float _1410 = _1409 * (_1370.x + (-0.5));
        float _1411 = _1409 * (_1370.y + (-0.5));
        float _1412 = _1409 * (_1370.z + (-0.5));
        float _1419 = exp2((_1377.w + (-0.5)) * 20.0) * 2.0;
        float _1420 = _1419 * (_1377.x + (-0.5));
        float _1421 = _1419 * (_1377.y + (-0.5));
        float _1422 = _1419 * (_1377.z + (-0.5));
        float _1423 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1424 = isnan(0.0) ? _1421 : (isnan(_1421) ? 0.0 : max(_1421, 0.0));
        float _1425 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1426 = _1390 * 0.5;
        float _1427 = _1400 * 0.5;
        float _1428 = _1410 * 0.5;
        float _1429 = dot(vec3(_1426, _1427, _1428), vec3(_1426, _1427, _1428));
        float _1434 = (_1429 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1429);
        float _1442 = (dot(vec3(_575, _576, _577), vec3(_1434 * _1426, _1434 * _1427, _1434 * _1428)) + 1.0) * 0.5;
        float _4139 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1451 = sqrt(((_1427 * _1427) + (_1426 * _1426)) + (_1428 * _1428)) / (_1423 + 9.9999997473787516355514526367188e-06);
        float _4150 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1452 = isnan(1.0) ? _4150 : (isnan(_4150) ? 1.0 : min(_4150, 1.0));
        float _1453 = _1452 * 2.0;
        float _1457 = (1.0 - _1452) / (_1452 + 1.0);
        float _4161 = isnan(0.0) ? _1457 : (isnan(_1457) ? 0.0 : max(_1457, 0.0));
        float _1458 = isnan(1.0) ? _4161 : (isnan(_4161) ? 1.0 : min(_4161, 1.0));
        float _1467 = ((((1.0 - _1458) * (_1453 + 2.0)) * exp2(log2(isnan(1.0) ? _4139 : (isnan(_4139) ? 1.0 : min(_4139, 1.0))) * (_1453 + 1.0))) + _1458) * _1423;
        float _1468 = _1391 * 0.5;
        float _1469 = _1401 * 0.5;
        float _1470 = _1411 * 0.5;
        float _1471 = dot(vec3(_1468, _1469, _1470), vec3(_1468, _1469, _1470));
        float _1476 = (_1471 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1471);
        float _1484 = (dot(vec3(_575, _576, _577), vec3(_1476 * _1468, _1476 * _1469, _1476 * _1470)) + 1.0) * 0.5;
        float _4172 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1493 = sqrt(((_1469 * _1469) + (_1468 * _1468)) + (_1470 * _1470)) / (_1424 + 9.9999997473787516355514526367188e-06);
        float _4183 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1494 = isnan(1.0) ? _4183 : (isnan(_4183) ? 1.0 : min(_4183, 1.0));
        float _1495 = _1494 * 2.0;
        float _1499 = (1.0 - _1494) / (_1494 + 1.0);
        float _4194 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4194 : (isnan(_4194) ? 1.0 : min(_4194, 1.0));
        float _1509 = ((((1.0 - _1500) * (_1495 + 2.0)) * exp2(log2(isnan(1.0) ? _4172 : (isnan(_4172) ? 1.0 : min(_4172, 1.0))) * (_1495 + 1.0))) + _1500) * _1424;
        float _1510 = _1392 * 0.5;
        float _1511 = _1402 * 0.5;
        float _1512 = _1412 * 0.5;
        float _1513 = dot(vec3(_1510, _1511, _1512), vec3(_1510, _1511, _1512));
        float _1518 = (_1513 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1513);
        float _1526 = (dot(vec3(_575, _576, _577), vec3(_1518 * _1510, _1518 * _1511, _1518 * _1512)) + 1.0) * 0.5;
        float _4205 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1535 = sqrt(((_1511 * _1511) + (_1510 * _1510)) + (_1512 * _1512)) / (_1425 + 9.9999997473787516355514526367188e-06);
        float _4216 = isnan(0.0) ? _1535 : (isnan(_1535) ? 0.0 : max(_1535, 0.0));
        float _1536 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1537 = _1536 * 2.0;
        float _1541 = (1.0 - _1536) / (_1536 + 1.0);
        float _4227 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1551 = ((((1.0 - _1542) * (_1537 + 2.0)) * exp2(log2(isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0))) * (_1537 + 1.0))) + _1542) * _1425;
        _1559 = _1392;
        _1560 = _1391;
        _1561 = _1390;
        _1562 = _1402;
        _1563 = _1401;
        _1564 = _1400;
        _1565 = _1412;
        _1566 = _1411;
        _1567 = _1410;
        _1568 = _1425;
        _1569 = _1424;
        _1570 = _1423;
        _1571 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0)));
        _1572 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0)));
        _1573 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0)));
    }
    else
    {
        _1559 = _1250;
        _1560 = _1250;
        _1561 = _1250;
        _1562 = _1250;
        _1563 = _1250;
        _1564 = _1250;
        _1565 = _1250;
        _1566 = _1250;
        _1567 = _1250;
        _1568 = _1250;
        _1569 = _1250;
        _1570 = _1250;
        _1571 = 0.0;
        _1572 = 0.0;
        _1573 = 0.0;
    }
    float _1583 = (cbModelParam._m0[1u].x * (_1571 - _1262)) + _1262;
    float _1584 = (cbModelParam._m0[1u].x * (_1572 - _1263)) + _1263;
    float _1585 = (cbModelParam._m0[1u].x * (_1573 - _1264)) + _1264;
    float _1606 = fma(_1585, cbSceneParam._m0[89u].z, fma(_1584, cbSceneParam._m0[89u].y, _1583 * cbSceneParam._m0[89u].x));
    float _1609 = fma(_1585, cbSceneParam._m0[90u].z, fma(_1584, cbSceneParam._m0[90u].y, _1583 * cbSceneParam._m0[90u].x));
    float _1612 = fma(_1585, cbSceneParam._m0[91u].z, fma(_1584, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1583));
    float _1627 = _883 * 0.5;
    float _1628 = _884 * 0.5;
    float _1629 = _885 * 0.5;
    float _1630 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1561, _1564, _1567, _1570));
    float _1633 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1560, _1563, _1566, _1569));
    float _1636 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1559, _1562, _1565, _1568));
    float _1667;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1643 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1249, _1253, _1256, _1259));
        float _1647 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1251, _1254, _1257, _1260));
        float _1651 = dot(vec4(_1627, _1628, _1629, 1.0), vec4(_1252, _1255, _1258, _1261));
        float _1658 = dot(vec4(cbModelParam._m0[39u]), vec4(_1627, _1628, _1629, 1.0));
        _1667 = dot(vec3(isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0)), isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0)), isnan(0.0) ? _1643 : (isnan(_1643) ? 0.0 : max(_1643, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1658) ? 0.0 : (isnan(0.0) ? _1658 : max(0.0, _1658))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1667 = 1.0;
    }
    float _1678;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1669 = dot(vec4(cbModelParam._m0[40u]), vec4(_1627, _1628, _1629, 1.0));
        _1678 = dot(vec3(isnan(0.0) ? _1630 : (isnan(_1630) ? 0.0 : max(_1630, 0.0)), isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0)), isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1669) ? 0.0 : (isnan(0.0) ? _1669 : max(0.0, _1669))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1678 = 1.0;
    }
    float _1682 = (_1678 * cbModelParam._m0[1u].x) + (_1667 * (1.0 - cbModelParam._m0[1u].x));
    float _1692 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _743);
    float _1693 = isnan(_1692) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1692 : min(cbModelParam._m0[25u].z, _1692));
    float _1773;
    float _1775;
    float _1777;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1740 = fma(_947, cbModelParam._m0[13u].z, fma(_943, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _939)) + cbModelParam._m0[13u].w;
        float _1744 = fma(_947, cbModelParam._m0[14u].z, fma(_943, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _939)) + cbModelParam._m0[14u].w;
        float _1748 = fma(_947, cbModelParam._m0[15u].z, fma(_943, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _939)) + cbModelParam._m0[15u].w;
        float _1751 = fma(_885, cbModelParam._m0[13u].z, fma(_884, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _883));
        float _1754 = fma(_885, cbModelParam._m0[14u].z, fma(_884, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _883));
        float _1757 = fma(_885, cbModelParam._m0[15u].z, fma(_884, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _883));
        float _1785;
        if (_1751 > 0.0)
        {
            _1785 = abs((1.0 - _1740) / _1751);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1751 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1740 + 1.0) / _1751);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1785 = frontier_phi_16_14_ladder;
        }
        float _1960;
        if (_1754 > 0.0)
        {
            _1960 = abs((1.0 - _1744) / _1754);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1754 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1744 + 1.0) / _1754);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1960 = frontier_phi_25_21_ladder;
        }
        float _2255;
        if (_1757 > 0.0)
        {
            _2255 = abs((1.0 - _1748) / _1757);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1757 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1748 + 1.0) / _1757);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2255 = frontier_phi_37_32_ladder;
        }
        float _2257 = isnan(_1960) ? _1785 : (isnan(_1785) ? _1960 : min(_1785, _1960));
        float _2258 = isnan(_2255) ? _2257 : (isnan(_2257) ? _2255 : min(_2257, _2255));
        float _2262 = (_2258 * _1751) + _1740;
        float _2263 = (_2258 * _1754) + _1744;
        float _2264 = (_2258 * _1757) + _1748;
        float _2265 = _2258 * 9.9999997473787516355514526367188e-05;
        float _2267 = (-1.0) - _2265;
        float _2269 = _2265 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2264 > _2269) || ((_2264 < _2267) || ((_2263 > _2269) || ((_2263 < _2267) || ((_2262 < _2267) || (_2262 > _2269))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2409 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2264, cbModelParam._m0[9u].z, fma(_2263, cbModelParam._m0[9u].y, _2262 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2264, cbModelParam._m0[10u].z, fma(_2263, cbModelParam._m0[10u].y, _2262 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2264, cbModelParam._m0[11u].z, fma(_2263, cbModelParam._m0[11u].y, _2262 * cbModelParam._m0[11u].x))), _1693);
            frontier_phi_15_37_ladder = _2409.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2409.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2409.z * cbModelParam._m0[1u].y;
        }
        _1773 = frontier_phi_15_37_ladder_1;
        _1775 = frontier_phi_15_37_ladder;
        _1777 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1761 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_883, _884, _885), _1693);
        _1773 = _1761.x * cbModelParam._m0[1u].y;
        _1775 = _1761.y * cbModelParam._m0[1u].y;
        _1777 = _1761.z * cbModelParam._m0[1u].y;
    }
    float _1781 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _743);
    float _1782 = isnan(_1781) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1781 : min(cbModelParam._m0[25u].w, _1781));
    float _1875;
    float _1877;
    float _1879;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1839 = fma(_947, cbModelParam._m0[21u].z, fma(_943, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _939)) + cbModelParam._m0[21u].w;
        float _1843 = fma(_947, cbModelParam._m0[22u].z, fma(_943, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _939)) + cbModelParam._m0[22u].w;
        float _1847 = fma(_947, cbModelParam._m0[23u].z, fma(_943, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _939)) + cbModelParam._m0[23u].w;
        float _1850 = fma(_885, cbModelParam._m0[21u].z, fma(_884, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _883));
        float _1853 = fma(_885, cbModelParam._m0[22u].z, fma(_884, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _883));
        float _1856 = fma(_885, cbModelParam._m0[23u].z, fma(_884, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _883));
        float _1965;
        if (_1850 > 0.0)
        {
            _1965 = abs((1.0 - _1839) / _1850);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1850 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1839 + 1.0) / _1850);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1965 = frontier_phi_27_23_ladder;
        }
        float _2282;
        if (_1853 > 0.0)
        {
            _2282 = abs((1.0 - _1843) / _1853);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1853 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1843 + 1.0) / _1853);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2282 = frontier_phi_39_34_ladder;
        }
        float _2620;
        if (_1856 > 0.0)
        {
            _2620 = abs((1.0 - _1847) / _1856);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1856 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1847 + 1.0) / _1856);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2620 = frontier_phi_49_46_ladder;
        }
        float _2622 = isnan(_2282) ? _1965 : (isnan(_1965) ? _2282 : min(_1965, _2282));
        float _2623 = isnan(_2620) ? _2622 : (isnan(_2622) ? _2620 : min(_2622, _2620));
        float _2627 = (_2623 * _1850) + _1839;
        float _2628 = (_2623 * _1853) + _1843;
        float _2629 = (_2623 * _1856) + _1847;
        float _2630 = _2623 * 9.9999997473787516355514526367188e-05;
        float _2631 = (-1.0) - _2630;
        float _2633 = _2630 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2629 > _2633) || ((_2629 < _2631) || ((_2628 > _2633) || ((_2628 < _2631) || ((_2627 < _2631) || (_2627 > _2633))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2751 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2629, cbModelParam._m0[17u].z, fma(_2628, cbModelParam._m0[17u].y, _2627 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2629, cbModelParam._m0[18u].z, fma(_2628, cbModelParam._m0[18u].y, _2627 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2629, cbModelParam._m0[19u].z, fma(_2628, cbModelParam._m0[19u].y, _2627 * cbModelParam._m0[19u].x))), _1782);
            frontier_phi_24_49_ladder = _2751.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2751.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2751.x * cbModelParam._m0[1u].z;
        }
        _1875 = frontier_phi_24_49_ladder_2;
        _1877 = frontier_phi_24_49_ladder_1;
        _1879 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1859 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_883, _884, _885), _1782);
        _1875 = _1859.x * cbModelParam._m0[1u].z;
        _1877 = _1859.y * cbModelParam._m0[1u].z;
        _1879 = _1859.z * cbModelParam._m0[1u].z;
    }
    float _1892 = (((_910 * _861) + _911) * _875) * ((cbModelParam._m0[1u].w * (_1875 - _1773)) + _1773);
    float _1894 = (((_910 * _862) + _911) * _875) * ((cbModelParam._m0[1u].w * (_1877 - _1775)) + _1775);
    float _1896 = (((_910 * _863) + _911) * _875) * ((cbModelParam._m0[1u].w * (_1879 - _1777)) + _1777);
    float _1899 = fma(_1896, cbSceneParam._m0[89u].z, fma(_1894, cbSceneParam._m0[89u].y, _1892 * cbSceneParam._m0[89u].x));
    float _1902 = fma(_1896, cbSceneParam._m0[90u].z, fma(_1894, cbSceneParam._m0[90u].y, _1892 * cbSceneParam._m0[90u].x));
    float _1905 = fma(_1896, cbSceneParam._m0[91u].z, fma(_1894, cbSceneParam._m0[91u].y, _1892 * cbSceneParam._m0[91u].x));
    float _1939 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1943 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1947 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1951 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1952 = _1939 / _1951;
    float _1953 = _1943 / _1951;
    float _1954 = _1947 / _1951;
    float _2101;
    float _2102;
    float _2103;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1981 = ((uint(_1954 > cbSceneParam._m0[59u].y) + uint(_1954 > cbSceneParam._m0[59u].x)) + uint(_1954 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1982 = _1981 + 43u;
        uint _1990 = _1981 + 44u;
        uint _1998 = _1981 + 45u;
        uint _2006 = _1981 + 46u;
        float _2017 = fma(_1951, cbSceneParam._m0[_1982].w, fma(_1947, cbSceneParam._m0[_1982].z, fma(_1943, cbSceneParam._m0[_1982].y, _1939 * cbSceneParam._m0[_1982].x)));
        float _2021 = fma(_1951, cbSceneParam._m0[_1990].w, fma(_1947, cbSceneParam._m0[_1990].z, fma(_1943, cbSceneParam._m0[_1990].y, _1939 * cbSceneParam._m0[_1990].x)));
        float _2029 = fma(_1951, cbSceneParam._m0[_2006].w, fma(_1947, cbSceneParam._m0[_2006].z, fma(_1943, cbSceneParam._m0[_2006].y, _1939 * cbSceneParam._m0[_2006].x)));
        float _2034 = cbSceneParam._m0[33u].z * _2029;
        float _2036 = cbSceneParam._m0[33u].w * _2029;
        float _2039 = fma(_1951, cbSceneParam._m0[_1998].w, fma(_1947, cbSceneParam._m0[_1998].z, fma(_1943, cbSceneParam._m0[_1998].y, _1939 * cbSceneParam._m0[_1998].x))) / _2029;
        float _2087 = (cbSceneParam._m0[33u].x - sqrt(((_1953 * _1953) + (_1952 * _1952)) + (_1954 * _1954))) * cbSceneParam._m0[33u].y;
        float _4353 = isnan(0.0) ? _2087 : (isnan(_2087) ? 0.0 : max(_2087, 0.0));
        float _2094 = (isnan(1.0) ? _4353 : (isnan(_4353) ? 1.0 : min(_4353, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2034 + _2017) / _2029, (_2036 + _2021) / _2029), _2039), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2036 + _2017) / _2029, (_2021 - _2034) / _2029), _2039), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2017 - _2034) / _2029, (_2021 - _2036) / _2029), _2039), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2017 - _2036) / _2029, (_2034 + _2021) / _2029), _2039), 0.0)).x), vec4(0.25)));
        _2101 = 1.0 - (_2094 * cbSceneParam._m0[34u].x);
        _2102 = 1.0 - (_2094 * cbSceneParam._m0[34u].y);
        _2103 = 1.0 - (_2094 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2101 = 1.0;
        _2102 = 1.0;
        _2103 = 1.0;
    }
    float _2167;
    float _2169;
    float _2171;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2155 = fma(_1951, cbSceneParam._m0[63u].w, fma(_1947, cbSceneParam._m0[63u].z, fma(_1943, cbSceneParam._m0[63u].y, _1939 * cbSceneParam._m0[63u].x)));
        float _2156 = fma(_1951, cbSceneParam._m0[60u].w, fma(_1947, cbSceneParam._m0[60u].z, fma(_1943, cbSceneParam._m0[60u].y, _1939 * cbSceneParam._m0[60u].x))) / _2155;
        float _2157 = fma(_1951, cbSceneParam._m0[61u].w, fma(_1947, cbSceneParam._m0[61u].z, fma(_1943, cbSceneParam._m0[61u].y, _1939 * cbSceneParam._m0[61u].x))) / _2155;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2156 >= cbSceneParam._m0[64u].x) && (_2157 >= cbSceneParam._m0[64u].y)) && (_2156 <= cbSceneParam._m0[64u].z)) && (_2157 <= cbSceneParam._m0[64u].w))
        {
            float _2295 = fma(_1951, cbSceneParam._m0[62u].w, fma(_1947, cbSceneParam._m0[62u].z, fma(_1943, cbSceneParam._m0[62u].y, _1939 * cbSceneParam._m0[62u].x))) / _2155;
            float _2299 = isnan(cbSceneParam._m0[41u].w) ? _2295 : (isnan(_2295) ? cbSceneParam._m0[41u].w : max(_2295, cbSceneParam._m0[41u].w));
            float _2342 = (cbSceneParam._m0[33u].x - sqrt(((_1953 * _1953) + (_1952 * _1952)) + (_1954 * _1954))) * cbSceneParam._m0[33u].y;
            float _4369 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
            float _2349 = (isnan(1.0) ? _4369 : (isnan(_4369) ? 1.0 : min(_4369, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2156, cbSceneParam._m0[33u].w + _2157), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2156, _2157 - cbSceneParam._m0[33u].z), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2156 - cbSceneParam._m0[33u].z, _2157 - cbSceneParam._m0[33u].w), _2299), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2156 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2157), _2299), 0.0)).x), vec4(0.25)));
            float _2353 = 1.0 - (_2349 * cbSceneParam._m0[34u].x);
            float _2354 = 1.0 - (_2349 * cbSceneParam._m0[34u].y);
            float _2355 = 1.0 - (_2349 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2354) ? _2102 : (isnan(_2102) ? _2354 : min(_2102, _2354));
            frontier_phi_36_35_ladder_1 = isnan(_2355) ? _2103 : (isnan(_2103) ? _2355 : min(_2103, _2355));
            frontier_phi_36_35_ladder_2 = isnan(_2353) ? _2101 : (isnan(_2101) ? _2353 : min(_2101, _2353));
        }
        else
        {
            frontier_phi_36_35_ladder = _2102;
            frontier_phi_36_35_ladder_1 = _2103;
            frontier_phi_36_35_ladder_2 = _2101;
        }
        _2167 = frontier_phi_36_35_ladder_2;
        _2169 = frontier_phi_36_35_ladder;
        _2171 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2167 = _2101;
        _2169 = _2102;
        _2171 = _2103;
    }
    uvec4 _2176 = floatBitsToUint(cbInstanceData._m0[_767 + 5u]);
    uint _2178 = _2176.x * 14u;
    uint _2179 = _2178 + 13u;
    float _2186 = _875 + (-1.0);
    float _2191 = (cbLight._m0[_2179].x * _2186) + 1.0;
    float _2192 = (cbLight._m0[_2179].y * _2186) + 1.0;
    float _2193 = (cbLight._m0[_2179].z * _2186) + 1.0;
    float _2194 = (cbLight._m0[_2179].w * _2186) + 1.0;
    uint _2195 = _2178 + 5u;
    float _2201 = isnan(1.0) ? _2192 : (isnan(_2192) ? 1.0 : min(_2192, 1.0));
    uint _2205 = _2178 + 4u;
    float _2214 = isnan(1.0) ? _2191 : (isnan(_2191) ? 1.0 : min(_2191, 1.0));
    uint _2218 = _2178 | 1u;
    float _2229 = dot(vec3(cbLight._m0[_2178].xyz), vec3(_575, _576, _577));
    float _2232 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_575, _576, _577));
    float _4405 = isnan(0.0) ? _2229 : (isnan(_2229) ? 0.0 : max(_2229, 0.0));
    float _4416 = isnan(0.0) ? _2232 : (isnan(_2232) ? 0.0 : max(_2232, 0.0));
    float _2237 = (isnan(1.0) ? _4405 : (isnan(_4405) ? 1.0 : min(_4405, 1.0))) * 0.3183098733425140380859375;
    float _2239 = (isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0))) * 0.3183098733425140380859375;
    float _2246 = ((cbLight._m0[_2195].x * _2201) * _2239) + (((cbLight._m0[_2205].x * _2167) * _2214) * _2237);
    float _2247 = ((_2201 * cbLight._m0[_2195].y) * _2239) + (((cbLight._m0[_2205].y * _2169) * _2214) * _2237);
    float _2248 = ((_2201 * cbLight._m0[_2195].z) * _2239) + (((cbLight._m0[_2205].z * _2171) * _2214) * _2237);
    uvec4 _2252 = floatBitsToUint(cbLight._m0[_2178 + 12u]);
    bool _2254 = _2252.x == 0u;
    float _2356;
    float _2358;
    float _2360;
    if (_2254)
    {
        _2356 = _2246;
        _2358 = _2247;
        _2360 = _2248;
    }
    else
    {
        uint _2364 = _2178 + 6u;
        float _2380 = (dot(vec3(cbLight._m0[_2178 + 2u].xyz), vec3(_575, _576, _577)) * 0.5) + 0.5;
        float _2381 = _2380 * _2380;
        float _4427 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
        float _2382 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
        float _2383 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2356 = (((cbLight._m0[_2364].x * 0.3183098733425140380859375) * _2382) * _2383) + _2246;
        _2358 = (((cbLight._m0[_2364].y * 0.3183098733425140380859375) * _2382) * _2383) + _2247;
        _2360 = (((cbLight._m0[_2364].z * 0.3183098733425140380859375) * _2382) * _2383) + _2248;
    }
    bool _2363 = _2252.y == 0u;
    float _2418;
    float _2420;
    float _2422;
    if (_2363)
    {
        _2418 = _2356;
        _2420 = _2358;
        _2422 = _2360;
    }
    else
    {
        uint _2591 = _2178 + 7u;
        float _2607 = (dot(vec3(cbLight._m0[_2178 + 3u].xyz), vec3(_575, _576, _577)) * 0.5) + 0.5;
        float _2608 = _2607 * _2607;
        float _4443 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
        float _2609 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _2610 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
        _2418 = (((cbLight._m0[_2591].x * 0.3183098733425140380859375) * _2609) * _2610) + _2356;
        _2420 = (((cbLight._m0[_2591].y * 0.3183098733425140380859375) * _2609) * _2610) + _2358;
        _2422 = (((cbLight._m0[_2591].z * 0.3183098733425140380859375) * _2609) * _2610) + _2360;
    }
    uint _2425 = _2178 + 8u;
    float _2438 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2178].w)) * _743) * 0.949999988079071044921875);
    float _2439 = _2438 * _2438;
    float _2440 = cbLight._m0[_2178].x + _656;
    float _2441 = cbLight._m0[_2178].y + _657;
    float _2442 = cbLight._m0[_2178].z + _658;
    float _2446 = inversesqrt(dot(vec3(_2440, _2441, _2442), vec3(_2440, _2441, _2442)));
    float _2447 = _2446 * _2440;
    float _2448 = _2446 * _2441;
    float _2449 = _2446 * _2442;
    float _2450 = dot(vec3(_575, _576, _577), vec3(cbLight._m0[_2178].xyz));
    float _4459 = isnan(0.0) ? _2450 : (isnan(_2450) ? 0.0 : max(_2450, 0.0));
    float _2453 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
    float _4470 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _2454 = isnan(1.0) ? _4470 : (isnan(_4470) ? 1.0 : min(_4470, 1.0));
    float _2455 = dot(vec3(_575, _576, _577), vec3(_2447, _2448, _2449));
    float _4481 = isnan(0.0) ? _2455 : (isnan(_2455) ? 0.0 : max(_2455, 0.0));
    float _2458 = isnan(1.0) ? _4481 : (isnan(_4481) ? 1.0 : min(_4481, 1.0));
    float _2459 = dot(vec3(cbLight._m0[_2178].xyz), vec3(_2447, _2448, _2449));
    float _4492 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _2463 = _2439 * _2439;
    float _2467 = ((_2458 * _2458) * (_2463 + (-1.0))) + 1.0;
    float _2475 = exp2(log2(1.0 - (isnan(1.0) ? _4492 : (isnan(_4492) ? 1.0 : min(_4492, 1.0)))) * 5.0);
    float _2476 = 0.959999978542327880859375 - _858;
    float _2478 = 0.959999978542327880859375 - _859;
    float _2479 = 0.959999978542327880859375 - _860;
    float _2486 = 1.0 - _2439;
    float _2497 = (0.5 / (((_2454 * ((_2453 * _2486) + _2439)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2486) + _2439) * _2453))) * _2453;
    float _4503 = isnan(0.0) ? _2497 : (isnan(_2497) ? 0.0 : max(_2497, 0.0));
    float _2499 = (isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0))) * (_2463 / ((_2467 * _2467) * 3.141590118408203125));
    uint _2513 = _2178 + 9u;
    float _2524 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2218].w)) * _743) * 0.949999988079071044921875);
    float _2525 = _2524 * _2524;
    float _2526 = cbLight._m0[_2218].x + _656;
    float _2527 = cbLight._m0[_2218].y + _657;
    float _2528 = cbLight._m0[_2218].z + _658;
    float _2532 = inversesqrt(dot(vec3(_2526, _2527, _2528), vec3(_2526, _2527, _2528)));
    float _2533 = _2532 * _2526;
    float _2534 = _2532 * _2527;
    float _2535 = _2532 * _2528;
    float _2536 = dot(vec3(_575, _576, _577), vec3(cbLight._m0[_2218].xyz));
    float _4514 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
    float _2539 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
    float _2540 = dot(vec3(_575, _576, _577), vec3(_2533, _2534, _2535));
    float _4525 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
    float _2543 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
    float _2544 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_2533, _2534, _2535));
    float _4536 = isnan(0.0) ? _2544 : (isnan(_2544) ? 0.0 : max(_2544, 0.0));
    float _2548 = _2525 * _2525;
    float _2552 = ((_2543 * _2543) * (_2548 + (-1.0))) + 1.0;
    float _2559 = exp2(log2(1.0 - (isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0)))) * 5.0);
    float _2566 = 1.0 - _2525;
    float _2576 = (0.5 / (((_2454 * ((_2539 * _2566) + _2525)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2566) + _2525) * _2539))) * _2539;
    float _4547 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
    float _2578 = (isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0))) * (_2548 / ((_2552 * _2552) * 3.141590118408203125));
    float _2588 = (((((_2559 * _2476) + _861) * cbLight._m0[_2513].x) * _2578) * _2201) + ((((cbLight._m0[_2425].x * _2167) * ((_2475 * _2476) + _861)) * _2499) * _2214);
    float _2589 = (((((_2559 * _2478) + _862) * cbLight._m0[_2513].y) * _2578) * _2201) + ((((cbLight._m0[_2425].y * _2169) * ((_2475 * _2478) + _862)) * _2499) * _2214);
    float _2590 = (((((_2559 * _2479) + _863) * cbLight._m0[_2513].z) * _2578) * _2201) + ((((cbLight._m0[_2425].z * _2171) * ((_2475 * _2479) + _863)) * _2499) * _2214);
    float _2646;
    float _2648;
    float _2650;
    if (_2254)
    {
        _2646 = _2588;
        _2648 = _2589;
        _2650 = _2590;
    }
    else
    {
        uint _2652 = _2178 + 2u;
        uint _2656 = _2178 + 10u;
        float _2670 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2652].w)) * _743) * 0.949999988079071044921875);
        float _2671 = _2670 * _2670;
        float _2672 = cbLight._m0[_2652].x + _656;
        float _2673 = cbLight._m0[_2652].y + _657;
        float _2674 = cbLight._m0[_2652].z + _658;
        float _2678 = inversesqrt(dot(vec3(_2672, _2673, _2674), vec3(_2672, _2673, _2674)));
        float _2679 = _2678 * _2672;
        float _2680 = _2678 * _2673;
        float _2681 = _2678 * _2674;
        float _2682 = dot(vec3(_575, _576, _577), vec3(cbLight._m0[_2652].xyz));
        float _4558 = isnan(0.0) ? _2682 : (isnan(_2682) ? 0.0 : max(_2682, 0.0));
        float _2685 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
        float _2686 = dot(vec3(_575, _576, _577), vec3(_2679, _2680, _2681));
        float _4569 = isnan(0.0) ? _2686 : (isnan(_2686) ? 0.0 : max(_2686, 0.0));
        float _2689 = isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0));
        float _2690 = dot(vec3(cbLight._m0[_2652].xyz), vec3(_2679, _2680, _2681));
        float _4580 = isnan(0.0) ? _2690 : (isnan(_2690) ? 0.0 : max(_2690, 0.0));
        float _2694 = _2671 * _2671;
        float _2698 = ((_2689 * _2689) * (_2694 + (-1.0))) + 1.0;
        float _2705 = exp2(log2(1.0 - (isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0)))) * 5.0);
        float _2712 = 1.0 - _2671;
        float _2722 = (0.5 / (((_2454 * ((_2685 * _2712) + _2671)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2712) + _2671) * _2685))) * _2685;
        float _4591 = isnan(0.0) ? _2722 : (isnan(_2722) ? 0.0 : max(_2722, 0.0));
        float _2724 = (isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0))) * (_2694 / ((_2698 * _2698) * 3.141590118408203125));
        float _2725 = isnan(1.0) ? _2193 : (isnan(_2193) ? 1.0 : min(_2193, 1.0));
        _2646 = (((((_2705 * _2476) + _861) * cbLight._m0[_2656].x) * _2724) * _2725) + _2588;
        _2648 = (((((_2705 * _2478) + _862) * cbLight._m0[_2656].y) * _2724) * _2725) + _2589;
        _2650 = (((((_2705 * _2479) + _863) * cbLight._m0[_2656].z) * _2724) * _2725) + _2590;
    }
    float _2756;
    float _2758;
    float _2760;
    if (_2363)
    {
        _2756 = _2646;
        _2758 = _2648;
        _2760 = _2650;
    }
    else
    {
        uint _2767 = _2178 + 3u;
        uint _2771 = _2178 + 11u;
        float _2785 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2767].w)) * _743) * 0.949999988079071044921875);
        float _2786 = _2785 * _2785;
        float _2787 = cbLight._m0[_2767].x + _656;
        float _2788 = cbLight._m0[_2767].y + _657;
        float _2789 = cbLight._m0[_2767].z + _658;
        float _2793 = inversesqrt(dot(vec3(_2787, _2788, _2789), vec3(_2787, _2788, _2789)));
        float _2794 = _2793 * _2787;
        float _2795 = _2793 * _2788;
        float _2796 = _2793 * _2789;
        float _2797 = dot(vec3(_575, _576, _577), vec3(cbLight._m0[_2767].xyz));
        float _4607 = isnan(0.0) ? _2797 : (isnan(_2797) ? 0.0 : max(_2797, 0.0));
        float _2800 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
        float _2801 = dot(vec3(_575, _576, _577), vec3(_2794, _2795, _2796));
        float _4618 = isnan(0.0) ? _2801 : (isnan(_2801) ? 0.0 : max(_2801, 0.0));
        float _2804 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
        float _2805 = dot(vec3(cbLight._m0[_2767].xyz), vec3(_2794, _2795, _2796));
        float _4629 = isnan(0.0) ? _2805 : (isnan(_2805) ? 0.0 : max(_2805, 0.0));
        float _2809 = _2786 * _2786;
        float _2813 = ((_2804 * _2804) * (_2809 + (-1.0))) + 1.0;
        float _2820 = exp2(log2(1.0 - (isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0)))) * 5.0);
        float _2827 = 1.0 - _2786;
        float _2837 = (0.5 / (((_2454 * ((_2800 * _2827) + _2786)) + 9.9999999392252902907785028219223e-09) + (((_2454 * _2827) + _2786) * _2800))) * _2800;
        float _4640 = isnan(0.0) ? _2837 : (isnan(_2837) ? 0.0 : max(_2837, 0.0));
        float _2839 = (isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0))) * (_2809 / ((_2813 * _2813) * 3.141590118408203125));
        float _2840 = isnan(1.0) ? _2194 : (isnan(_2194) ? 1.0 : min(_2194, 1.0));
        _2756 = (((((_2820 * _2476) + _861) * cbLight._m0[_2771].x) * _2839) * _2840) + _2646;
        _2758 = (((((_2820 * _2478) + _862) * cbLight._m0[_2771].y) * _2839) * _2840) + _2648;
        _2760 = (((((_2820 * _2479) + _863) * cbLight._m0[_2771].z) * _2839) * _2840) + _2650;
    }
    float _2905;
    float _2907;
    float _2909;
    float _2911;
    float _2913;
    float _2915;
    if (_2176.y == 0u)
    {
        uvec4 _2861 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2862 = _2861.x;
        uint _2873 = uint((float(_2861.y) * floor(float(uint(cbSceneParam._m0[85u].y * _665) / _2862))) + floor(float(uint(cbSceneParam._m0[85u].x * _664) / _2862)));
        float _2883 = (log2(_1954 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2884 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
        uint _2887 = uint(isnan(14.0) ? _2884 : (isnan(_2884) ? 14.0 : min(_2884, 14.0)));
        uvec4 _2892 = texelFetch(g_lightClusterGridBuffer, int(((_2887 << 2u) + (_2873 << 6u)) >> 2u));
        uint _2893 = _2892.x;
        uint _2894 = _2861.z;
        float _2974;
        float _2976;
        float _2978;
        float _2980;
        float _2982;
        float _2984;
        if (((((1u << ((_2894 >> 4u) & 15u)) + 4294967295u) & _2893) == 0u) || ((_2894 & 240u) == 0u))
        {
            _2974 = 0.0;
            _2976 = 0.0;
            _2978 = 0.0;
            _2980 = 0.0;
            _2982 = 0.0;
            _2984 = 0.0;
        }
        else
        {
            float _2975;
            float _2977;
            float _2979;
            float _2981;
            float _2983;
            float _2985;
            float _3118 = 0.0;
            float _3119 = 0.0;
            float _3120 = 0.0;
            float _3121 = 0.0;
            float _3122 = 0.0;
            float _3123 = 0.0;
            uint _3124 = 0u;
            uint _3133;
            bool _3134;
            for (;;)
            {
                _3133 = texelFetch(g_lightClassification, int((((_2887 << 5u) + (_2873 << 9u)) + (_3124 << 2u)) >> 2u)).x;
                _3134 = _3133 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3134)
                {
                    frontier_phi_68_pred = _3123;
                    frontier_phi_68_pred_1 = _3122;
                    frontier_phi_68_pred_2 = _3121;
                    frontier_phi_68_pred_3 = _3119;
                    frontier_phi_68_pred_4 = _3118;
                    frontier_phi_68_pred_5 = _3120;
                }
                else
                {
                    float _3242;
                    float _3243;
                    float _3244;
                    float _3245;
                    float _3246;
                    float _3247;
                    uint _3248;
                    _3242 = _3118;
                    _3243 = _3119;
                    _3244 = _3120;
                    _3245 = _3121;
                    _3246 = _3122;
                    _3247 = _3123;
                    _3248 = _3133;
                    float _3174;
                    float _3175;
                    float _3176;
                    float _3177;
                    float _3178;
                    float _3179;
                    for (;;)
                    {
                        uint _3252 = uint(findLSB(_3248)) + (_3124 << 5u);
                        uint _3249 = (_3248 + 4294967295u) & _3248;
                        uint _3254 = _3252 * 48u;
                        vec4 _3268 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3254)).x, texelFetch(g_PointLightRenderingBuffer, int(_3254 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3254 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3254 + 3u)).x));
                        uint _3274 = (_3252 * 48u) + 4u;
                        vec4 _3287 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3274)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3274 + 3u)).x));
                        uint _3293 = (_3252 * 48u) + 8u;
                        vec3 _3304 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3293)).x, texelFetch(g_PointLightRenderingBuffer, int(_3293 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3293 + 2u)).x));
                        float _3308 = _3268.x - _1952;
                        float _3309 = _3268.y - _1953;
                        float _3310 = _3268.z - _1954;
                        float _3311 = dot(vec3(_3308, _3309, _3310), vec3(_3308, _3309, _3310));
                        float _3314 = inversesqrt(_3311);
                        float _3315 = _3314 * _3308;
                        float _3316 = _3314 * _3309;
                        float _3317 = _3314 * _3310;
                        float _3318 = dot(vec3(_687, _690, _693), vec3(_3315, _3316, _3317));
                        float _3323 = 1.0 - (_3311 * _3268.w);
                        float _4666 = isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : max(_3323, 0.0));
                        float _3324 = isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0));
                        float _3325 = sqrt(_3311) * _3287.w;
                        float _3328 = 1.39999997615814208984375 / (_3325 + 1.39999997615814208984375);
                        float _3329 = _3328 * _3328;
                        float _3332 = ((1.0 - _3329) * _3318) + _3329;
                        float _3335 = _3325 * _3325;
                        float _3339 = ((isnan(0.0) ? _3332 : (isnan(_3332) ? 0.0 : max(_3332, 0.0))) * _3324) / ((_3335 * 0.699999988079071044921875) + 1.0);
                        float _3343 = (-0.0) - _1952;
                        float _3344 = (-0.0) - _1953;
                        float _3345 = (-0.0) - _1954;
                        float _3349 = inversesqrt(dot(vec3(_3343, _3344, _3345), vec3(_3343, _3344, _3345)));
                        float _3350 = _3349 * _3343;
                        float _3351 = _3349 * _3344;
                        float _3352 = _3349 * _3345;
                        float _3359 = exp2(log2(1.0 / ((_3335 * 3.5) + 5.0)) * 0.25);
                        float _3360 = 1.0 - _891;
                        float _3367 = sqrt(1.0 - ((1.0 - (_3360 * _3360)) * (1.0 - (_3359 * _3359))));
                        float _3368 = _3367 * _3367;
                        float _3369 = _3368 * _3368;
                        float _3370 = _3350 + _3315;
                        float _3371 = _3351 + _3316;
                        float _3372 = _3352 + _3317;
                        float _3376 = inversesqrt(dot(vec3(_3370, _3371, _3372), vec3(_3370, _3371, _3372)));
                        float _3380 = dot(vec3(_687, _690, _693), vec3(_3350, _3351, _3352));
                        float _4682 = isnan(0.0) ? _3380 : (isnan(_3380) ? 0.0 : max(_3380, 0.0));
                        float _3383 = isnan(1.0) ? _4682 : (isnan(_4682) ? 1.0 : min(_4682, 1.0));
                        float _3384 = dot(vec3(_687, _690, _693), vec3(_3376 * _3370, _3376 * _3371, _3376 * _3372));
                        float _4693 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3387 = isnan(1.0) ? _4693 : (isnan(_4693) ? 1.0 : min(_4693, 1.0));
                        float _3391 = ((_3387 * _3387) * (_3369 + (-1.0))) + 1.0;
                        float _3392 = _3328 * _3368;
                        float _3393 = _3392 * _3392;
                        float _3396 = ((1.0 - _3393) * _3318) + _3393;
                        float _4704 = isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0));
                        float _3397 = isnan(1.0) ? _4704 : (isnan(_4704) ? 1.0 : min(_4704, 1.0));
                        float _3398 = 1.0 - _3368;
                        float _3408 = (0.5 / (((_3397 * ((_3383 * _3398) + _3368)) + 9.9999999392252902907785028219223e-09) + (((_3397 * _3398) + _3368) * _3383))) * _3397;
                        float _4715 = isnan(0.0) ? _3408 : (isnan(_3408) ? 0.0 : max(_3408, 0.0));
                        float _3419 = (((_3369 * 3.1415927410125732421875) * (isnan(1.0) ? _4715 : (isnan(_4715) ? 1.0 : min(_4715, 1.0)))) / ((_3391 * _3391) * ((_3335 * 2.1991131305694580078125) + 3.141590118408203125))) * _3324;
                        _3177 = (_3339 * _3287.x) + _3245;
                        _3178 = (_3339 * _3287.y) + _3246;
                        _3179 = (_3339 * _3287.z) + _3247;
                        _3174 = (_3419 * _3304.x) + _3242;
                        _3175 = (_3419 * _3304.y) + _3243;
                        _3176 = (_3419 * _3304.z) + _3244;
                        if (_3249 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3242 = _3174;
                            _3243 = _3175;
                            _3244 = _3176;
                            _3245 = _3177;
                            _3246 = _3178;
                            _3247 = _3179;
                            _3248 = _3249;
                        }
                    }
                    frontier_phi_68_pred = _3179;
                    frontier_phi_68_pred_1 = _3178;
                    frontier_phi_68_pred_2 = _3177;
                    frontier_phi_68_pred_3 = _3175;
                    frontier_phi_68_pred_4 = _3174;
                    frontier_phi_68_pred_5 = _3176;
                }
                _2985 = frontier_phi_68_pred;
                _2983 = frontier_phi_68_pred_1;
                _2981 = frontier_phi_68_pred_2;
                _2977 = frontier_phi_68_pred_3;
                _2975 = frontier_phi_68_pred_4;
                _2979 = frontier_phi_68_pred_5;
                uint _3125 = _3124 + 1u;
                if (_3125 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3118 = _2975;
                    _3119 = _2977;
                    _3120 = _2979;
                    _3121 = _2981;
                    _3122 = _2983;
                    _3123 = _2985;
                    _3124 = _3125;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2974 = _2975;
            _2976 = _2977;
            _2978 = _2979;
            _2980 = _2981;
            _2982 = _2983;
            _2984 = _2985;
        }
        uvec4 _2988 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2989 = _2988.z;
        uint _2991 = (_2989 >> 8u) & 15u;
        float _3086;
        float _3088;
        float _3090;
        float _3092;
        float _3094;
        float _3096;
        if (((4294967295u << _2991) & _2893) == 0u)
        {
            _3086 = _2974;
            _3088 = _2976;
            _3090 = _2978;
            _3092 = _2980;
            _3094 = _2982;
            _3096 = _2984;
        }
        else
        {
            float _3111 = inversesqrt(dot(vec3(_1952, _1953, _1954), vec3(_1952, _1953, _1954)));
            float _3112 = _3111 * _1952;
            float _3113 = _3111 * _1953;
            float _3114 = _3111 * _1954;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2991 < ((_2989 >> 12u) & 15u))
            {
                float _3087;
                float _3089;
                float _3091;
                float _3093;
                float _3095;
                float _3097;
                float _3225 = _2974;
                float _3226 = _2976;
                float _3227 = _2978;
                float _3228 = _2980;
                float _3229 = _2982;
                float _3230 = _2984;
                uint _3231 = _2991;
                uint _3240;
                bool _3241;
                for (;;)
                {
                    _3240 = texelFetch(g_lightClassification, int((((_2887 << 5u) + (_2873 << 9u)) + (_3231 << 2u)) >> 2u)).x;
                    _3241 = _3240 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3241)
                    {
                        frontier_phi_74_pred = _3227;
                        frontier_phi_74_pred_1 = _3226;
                        frontier_phi_74_pred_2 = _3225;
                        frontier_phi_74_pred_3 = _3230;
                        frontier_phi_74_pred_4 = _3229;
                        frontier_phi_74_pred_5 = _3228;
                    }
                    else
                    {
                        float _3424;
                        float _3425;
                        float _3426;
                        float _3427;
                        float _3428;
                        float _3429;
                        float _3719;
                        float _3720;
                        float _3721;
                        float _3722;
                        float _3723;
                        float _3724;
                        float _3437 = _3225;
                        float _3438 = _3226;
                        float _3439 = _3227;
                        float _3440 = _3228;
                        float _3441 = _3229;
                        float _3442 = _3230;
                        uint _3443 = _3240;
                        uint _3444;
                        vec4 _3469;
                        float _3470;
                        vec4 _3485;
                        vec3 _3497;
                        vec4 _3512;
                        vec4 _3528;
                        float _3575;
                        bool _3576;
                        for (;;)
                        {
                            uint _3454 = ((_3231 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3443));
                            _3444 = (_3443 + 4294967295u) & _3443;
                            uint _3456 = _3454 * 40u;
                            _3469 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3456)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3456 + 3u)).x));
                            _3470 = _3469.w;
                            uint _3472 = (_3454 * 40u) + 4u;
                            _3485 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3472)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3472 + 3u)).x));
                            uint _3487 = (_3454 * 40u) + 8u;
                            _3497 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3487)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3487 + 2u)).x));
                            uint _3499 = (_3454 * 40u) + 16u;
                            _3512 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3499)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3499 + 3u)).x));
                            uint _3515 = (_3454 * 40u) + 20u;
                            _3528 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3515)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3515 + 3u)).x));
                            uint _3531 = (_3454 * 40u) + 24u;
                            vec4 _3544 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3531)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3531 + 3u)).x));
                            uint _3550 = (_3454 * 40u) + 28u;
                            vec4 _3563 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3550)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3550 + 3u)).x));
                            _3575 = fma(_1954, _3563.z, fma(_1953, _3563.y, _3563.x * _1952)) + _3563.w;
                            _3576 = !((fma(_1954, _3544.z, fma(_1953, _3544.y, _3544.x * _1952)) + _3544.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3576)
                            {
                                float _3603 = _3469.x - _1952;
                                float _3604 = _3469.y - _1953;
                                float _3605 = _3469.z - _1954;
                                float _3606 = dot(vec3(_3603, _3604, _3605), vec3(_3603, _3604, _3605));
                                float _3609 = inversesqrt(_3606);
                                float _3610 = _3609 * _3603;
                                float _3611 = _3609 * _3604;
                                float _3612 = _3609 * _3605;
                                float _3616 = 1.0 - (_3606 / (_3470 * _3470));
                                float _4726 = isnan(0.0) ? _3616 : (isnan(_3616) ? 0.0 : max(_3616, 0.0));
                                float _3617 = isnan(1.0) ? _4726 : (isnan(_4726) ? 1.0 : min(_4726, 1.0));
                                float _3621 = sqrt(_3606) * _3485.w;
                                float _3623 = 1.39999997615814208984375 / (_3621 + 1.39999997615814208984375);
                                float _3624 = _3623 * _3623;
                                float _3627 = ((1.0 - _3624) * dot(vec3(_3610, _3611, _3612), vec3(_687, _690, _693))) + _3624;
                                float _3630 = _3621 * _3621;
                                float _3634 = (fma(_1954, _3512.z, fma(_1953, _3512.y, _3512.x * _1952)) + _3512.w) / _3575;
                                float _3635 = (fma(_1954, _3528.z, fma(_1953, _3528.y, _3528.x * _1952)) + _3528.w) / _3575;
                                float _3639 = 1.0 - dot(vec2(_3634, _3635), vec2(_3634, _3635));
                                float _4742 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                                float _3640 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
                                float _3641 = _3640 * (((isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0))) * _3617) / ((_3630 * 0.699999988079071044921875) + 1.0));
                                float _3653 = exp2(log2(1.0 / ((_3630 * 3.5) + 5.0)) * 0.25);
                                float _3654 = 1.0 - _891;
                                float _3661 = sqrt(1.0 - ((1.0 - (_3654 * _3654)) * (1.0 - (_3653 * _3653))));
                                float _3662 = _3661 * _3661;
                                float _3663 = _3662 * _3662;
                                float _3664 = _3610 - _3112;
                                float _3665 = _3611 - _3113;
                                float _3666 = _3612 - _3114;
                                float _3670 = inversesqrt(dot(vec3(_3664, _3665, _3666), vec3(_3664, _3665, _3666)));
                                float _3674 = dot(vec3(_687, _690, _693), vec3((-0.0) - _3112, (-0.0) - _3113, (-0.0) - _3114));
                                float _4753 = isnan(0.0) ? _3674 : (isnan(_3674) ? 0.0 : max(_3674, 0.0));
                                float _3677 = isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0));
                                float _3678 = dot(vec3(_687, _690, _693), vec3(_3670 * _3664, _3670 * _3665, _3670 * _3666));
                                float _4764 = isnan(0.0) ? _3678 : (isnan(_3678) ? 0.0 : max(_3678, 0.0));
                                float _3681 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
                                float _3685 = ((_3681 * _3681) * (_3663 + (-1.0))) + 1.0;
                                float _3686 = _3623 * _3662;
                                float _3687 = _3686 * _3686;
                                float _3693 = ((1.0 - _3687) * dot(vec3(_687, _690, _693), vec3(_3610, _3611, _3612))) + _3687;
                                float _4775 = isnan(0.0) ? _3693 : (isnan(_3693) ? 0.0 : max(_3693, 0.0));
                                float _3694 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
                                float _3695 = 1.0 - _3662;
                                float _3705 = (0.5 / (((_3694 * ((_3677 * _3695) + _3662)) + 9.9999999392252902907785028219223e-09) + (((_3694 * _3695) + _3662) * _3677))) * _3694;
                                float _4786 = isnan(0.0) ? _3705 : (isnan(_3705) ? 0.0 : max(_3705, 0.0));
                                float _3715 = (_3640 * _3617) * (((_3663 * 3.1415927410125732421875) * (isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0)))) / ((_3685 * _3685) * ((_3630 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3715 * _3497.z;
                                frontier_phi_80_pred_1 = _3715 * _3497.y;
                                frontier_phi_80_pred_2 = _3715 * _3497.x;
                                frontier_phi_80_pred_3 = _3641 * _3485.z;
                                frontier_phi_80_pred_4 = _3641 * _3485.y;
                                frontier_phi_80_pred_5 = _3641 * _3485.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3721 = frontier_phi_80_pred;
                            _3720 = frontier_phi_80_pred_1;
                            _3719 = frontier_phi_80_pred_2;
                            _3724 = frontier_phi_80_pred_3;
                            _3723 = frontier_phi_80_pred_4;
                            _3722 = frontier_phi_80_pred_5;
                            _3427 = _3722 + _3440;
                            _3428 = _3723 + _3441;
                            _3429 = _3724 + _3442;
                            _3424 = _3719 + _3437;
                            _3425 = _3720 + _3438;
                            _3426 = _3721 + _3439;
                            if (_3444 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3437 = _3424;
                                _3438 = _3425;
                                _3439 = _3426;
                                _3440 = _3427;
                                _3441 = _3428;
                                _3442 = _3429;
                                _3443 = _3444;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3426;
                        frontier_phi_74_pred_1 = _3425;
                        frontier_phi_74_pred_2 = _3424;
                        frontier_phi_74_pred_3 = _3429;
                        frontier_phi_74_pred_4 = _3428;
                        frontier_phi_74_pred_5 = _3427;
                    }
                    _3091 = frontier_phi_74_pred;
                    _3089 = frontier_phi_74_pred_1;
                    _3087 = frontier_phi_74_pred_2;
                    _3097 = frontier_phi_74_pred_3;
                    _3095 = frontier_phi_74_pred_4;
                    _3093 = frontier_phi_74_pred_5;
                    uint _3232 = _3231 + 1u;
                    if (_3232 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3225 = _3087;
                        _3226 = _3089;
                        _3227 = _3091;
                        _3228 = _3093;
                        _3229 = _3095;
                        _3230 = _3097;
                        _3231 = _3232;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3095;
                frontier_phi_62_63_ladder_1 = _3093;
                frontier_phi_62_63_ladder_2 = _3091;
                frontier_phi_62_63_ladder_3 = _3097;
                frontier_phi_62_63_ladder_4 = _3089;
                frontier_phi_62_63_ladder_5 = _3087;
            }
            else
            {
                frontier_phi_62_63_ladder = _2982;
                frontier_phi_62_63_ladder_1 = _2980;
                frontier_phi_62_63_ladder_2 = _2978;
                frontier_phi_62_63_ladder_3 = _2984;
                frontier_phi_62_63_ladder_4 = _2976;
                frontier_phi_62_63_ladder_5 = _2974;
            }
            _3086 = frontier_phi_62_63_ladder_5;
            _3088 = frontier_phi_62_63_ladder_4;
            _3090 = frontier_phi_62_63_ladder_2;
            _3092 = frontier_phi_62_63_ladder_1;
            _3094 = frontier_phi_62_63_ladder;
            _3096 = frontier_phi_62_63_ladder_3;
        }
        float _3101 = isnan(1.0) ? _875 : (isnan(_875) ? 1.0 : min(_875, 1.0));
        _2905 = (_3101 * _3092) + _2418;
        _2907 = (_3101 * _3094) + _2420;
        _2909 = (_3101 * _3096) + _2422;
        _2911 = ((_3086 * _861) * _3101) + _2756;
        _2913 = ((_3088 * _862) * _3101) + _2758;
        _2915 = ((_3090 * _863) * _3101) + _2760;
    }
    else
    {
        _2905 = _2418;
        _2907 = _2420;
        _2909 = _2422;
        _2911 = _2756;
        _2913 = _2758;
        _2915 = _2760;
    }
    float _4802 = isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0));
    float _4813 = isnan(0.0) ? _853 : (isnan(_853) ? 0.0 : max(_853, 0.0));
    float _4824 = isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0));
    float _4835 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _2940 = cbInstanceData._m0[_767 + 6u].w * (isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0)));
    float _2945 = _664 / cbSceneParam._m0[86u].x;
    float _2946 = _665 / cbSceneParam._m0[86u].y;
    vec4 _2960 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2945, _2946, (log2((isnan(cbSceneParam._m0[77u].w) ? _599 : (isnan(_599) ? cbSceneParam._m0[77u].w : min(_599, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2962 = _2960.x;
    float _2963 = _2960.y;
    float _2964 = _2960.z;
    float _2965 = _2960.w;
    float _3036;
    float _3038;
    float _3040;
    float _3042;
    if (_599 > cbSceneParam._m0[78u].w)
    {
        float _2999 = isnan(_599) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _599 : min(cbSceneParam._m0[80u].w, _599));
        float _3000 = _2999 / _599;
        float _3011 = _3000 * _649;
        float _3012 = _650 * _3000;
        float _3013 = (-0.0) - _3012;
        float _3014 = _3000 * _651;
        float _3016 = (cbSceneParam._m0[77u].w * _3013) / _2999;
        float _3017 = _3016 + cbSceneParam._m0[79u].w;
        float _3018 = cbSceneParam._m0[79u].w - _3012;
        float _3024 = sqrt(((_3011 * _3011) + (_3012 * _3012)) + (_3014 * _3014));
        float _3027 = (1.0 - (cbSceneParam._m0[77u].w / _2999)) * _3024;
        float _3032 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3034 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3187;
        if (abs((_3013 - _3016) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3187 = ((((_3017 > 0.0) ? exp2(_3032 * _3017) : (2.0 - exp2(_3034 * _3017))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3027;
        }
        else
        {
            float _3147 = 1.0 / cbSceneParam._m0[80u].x;
            float _3148 = isnan(_3018) ? _3017 : (isnan(_3017) ? _3018 : max(_3017, _3018));
            float _3149 = isnan(_3018) ? _3017 : (isnan(_3017) ? _3018 : min(_3017, _3018));
            float _3158 = isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : min(_3148, 0.0));
            float _3159 = isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : min(_3149, 0.0));
            _3187 = ((abs(_3024 / _3013) * cbSceneParam._m0[80u].y) * ((((_3158 - _3159) * 2.0) - ((exp2(_3032 * (isnan(0.0) ? _3148 : (isnan(_3148) ? 0.0 : max(_3148, 0.0)))) - exp2(_3032 * (isnan(0.0) ? _3149 : (isnan(_3149) ? 0.0 : max(_3149, 0.0))))) * _3147)) - ((exp2(_3034 * _3158) - exp2(_3034 * _3159)) * _3147))) + (_3027 * cbSceneParam._m0[80u].z);
        }
        vec4 _3189 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2945, _2946, 1.0), 0.0);
        float _3198 = exp2((_3187 * (-1.44269502162933349609375)) * (1.0 - _3189.w));
        float _3199 = log2(_3198);
        float _3215 = log2(_2965);
        _3036 = (exp2(_3215 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3199 * cbSceneParam._m0[78u].x)) * _3189.x) / cbSceneParam._m0[78u].x)) + _2962;
        _3038 = (exp2(_3215 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3199 * cbSceneParam._m0[78u].y)) * _3189.y) / cbSceneParam._m0[78u].y)) + _2963;
        _3040 = (exp2(_3215 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3199 * cbSceneParam._m0[78u].z)) * _3189.z) / cbSceneParam._m0[78u].z)) + _2964;
        _3042 = _3198 * _2965;
    }
    else
    {
        _3036 = _2962;
        _3038 = _2963;
        _3040 = _2964;
        _3042 = _2965;
    }
    float _3054 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3055 = _3054 == 3.0;
    float _3056 = log2(_3042);
    float _3063 = exp2(_3056 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4802 : (isnan(_4802) ? 1.0 : min(_4802, 1.0))) * (_2905 + ((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _875))) + ((_2911 + ((isnan(0.0) ? _1899 : (isnan(_1899) ? 0.0 : max(_1899, 0.0))) * _1682)) * cbPerFrame._m0[3u].x));
    float _3064 = exp2(_3056 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4813 : (isnan(_4813) ? 1.0 : min(_4813, 1.0))) * (_2907 + ((isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))) * _875))) + ((_2913 + ((isnan(0.0) ? _1902 : (isnan(_1902) ? 0.0 : max(_1902, 0.0))) * _1682)) * cbPerFrame._m0[3u].x));
    float _3065 = exp2(_3056 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0))) * (_2909 + ((isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))) * _875))) + ((_2915 + ((isnan(0.0) ? _1905 : (isnan(_1905) ? 0.0 : max(_1905, 0.0))) * _1682)) * cbPerFrame._m0[3u].x));
    float _3074 = (_3054 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3074 * (_3055 ? _3063 : (_3063 + (cbSceneParam._m0[72u].w * _3036)));
    SV_Target.y = _3074 * (_3055 ? _3064 : (_3064 + (cbSceneParam._m0[72u].w * _3038)));
    SV_Target.z = _3074 * (_3055 ? _3065 : (_3065 + (cbSceneParam._m0[72u].w * _3040)));
    SV_Target.w = _2940;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2940;
}


