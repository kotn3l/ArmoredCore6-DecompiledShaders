#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_7;
layout(set = 0, binding = 1) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_0;
layout(set = 0, binding = 2) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_1;
layout(set = 0, binding = 3) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_3;
layout(set = 0, binding = 5) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_5;
layout(set = 0, binding = 7) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_6;
layout(set = 0, binding = 8) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_8;
layout(set = 0, binding = 9) uniform texture2D C_Detail3Blend_Plus1_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1295;
float _4046;
float _4047;
float _4048;
float _4049;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _210 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _211 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _212 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _218 = inversesqrt(dot(vec3(_210, _211, _212), vec3(_210, _211, _212)));
    float _225 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _226 = _225 * NORMAL.x;
    float _227 = _225 * NORMAL.y;
    float _228 = _225 * NORMAL.z;
    float _232 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240;
    float _241;
    float _242;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _240 = (-0.0) - _226;
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
    }
    else
    {
        _240 = _226;
        _241 = _227;
        _242 = _228;
    }
    vec4 _256 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _261 = _256.z;
    float _262 = _256.w;
    float _268 = exp2(log2(_261 * 22.0) * 260.0);
    float _269 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _270 = isnan(1.0) ? _269 : (isnan(_269) ? 1.0 : min(_269, 1.0));
    float _276 = exp2(log2(1.0 - _262) * 10.19999980926513671875);
    vec4 _289 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    vec4 _314 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _325 = cbMtdParam._m0[9u].x * _314.x;
    float _326 = cbMtdParam._m0[9u].y * _314.y;
    float _327 = cbMtdParam._m0[9u].z * _314.z;
    float _334 = (((cbMtdParam._m0[10u].x * _289.x) - _325) * _276) + _325;
    float _335 = (((cbMtdParam._m0[10u].y * _289.y) - _326) * _276) + _326;
    float _336 = (((cbMtdParam._m0[10u].z * _289.z) - _327) * _276) + _327;
    float _340 = exp2(log2(_262) * 10.0);
    vec4 _352 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _386 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _391 = _386.w;
    vec4 _411 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _422 = cbMtdParam._m0[12u].x * _411.x;
    float _423 = cbMtdParam._m0[12u].y * _411.y;
    float _424 = cbMtdParam._m0[12u].z * _411.z;
    float _431 = ((((((((cbMtdParam._m0[11u].x * _352.x) - _334) * _340) + _334) * 4.55000019073486328125) * _386.x) - _422) * _270) + _422;
    float _432 = ((((((((cbMtdParam._m0[11u].y * _352.y) - _335) * _340) + _335) * 4.55000019073486328125) * _386.y) - _423) * _270) + _423;
    float _433 = ((((((((cbMtdParam._m0[11u].z * _352.z) - _336) * _340) + _336) * 4.55000019073486328125) * _386.z) - _424) * _270) + _424;
    vec4 _450 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    vec4 _472 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _474 = _472.x;
    float _475 = _472.y;
    float _478 = cbMtdParam._m0[13u].x + _472.z;
    float _481 = (((cbMtdParam._m0[13u].y + _450.z) - _478) * _276) + _478;
    vec4 _494 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _518 = texture(sampler2D(C_Detail3Blend_Plus1_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _520 = _518.x;
    float _521 = _518.y;
    float _524 = cbMtdParam._m0[13u].z + _518.z;
    float _527 = ((((_261 * 2.0) * ((((_494.z - _481) + cbMtdParam._m0[14u].y) * _340) + _481)) - _524) * _270) + _524;
    float _538 = ((_450.x - _474) * _276) + _474;
    float _539 = ((_450.y - _475) * _276) + _475;
    float _554 = (((((((_494.x - _538) * _340) + _538) - _520) * _270) + _520) * 2.0) + (-1.0);
    float _555 = (((((((_494.y - _539) * _340) + _539) - _521) * _270) + _521) * 2.0) + (-1.0);
    float _556 = dot(vec2(_554, _555), vec2(_554, _555));
    float _4068 = isnan(0.0) ? _556 : (isnan(_556) ? 0.0 : max(_556, 0.0));
    float _561 = sqrt(1.0 - (isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))));
    float _564 = _554 + (cbMtdParam._m0[13u].w * ((_256.x * 2.0) + (-1.0)));
    float _565 = _555 + (cbMtdParam._m0[13u].w * ((_256.y * 2.0) + (-1.0)));
    float _568 = fma(_561, _240, fma(_565, _232 * TANGENT.x, (_218 * _210) * _564));
    float _571 = fma(_561, _241, fma(_565, _232 * TANGENT.y, (_218 * _211) * _564));
    float _574 = fma(_561, _242, fma(_565, _232 * TANGENT.z, (_218 * _212) * _564));
    float _578 = inversesqrt(dot(vec3(_568, _571, _574), vec3(_568, _571, _574)));
    float _579 = _578 * _568;
    float _580 = _578 * _571;
    float _581 = _578 * _574;
    float _4079 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _582 = isnan(1.0) ? _4079 : (isnan(_4079) ? 1.0 : min(_4079, 1.0));
    float _4090 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _583 = isnan(1.0) ? _4090 : (isnan(_4090) ? 1.0 : min(_4090, 1.0));
    float _4101 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _584 = isnan(1.0) ? _4101 : (isnan(_4101) ? 1.0 : min(_4101, 1.0));
    float _4112 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
    float _585 = isnan(1.0) ? _4112 : (isnan(_4112) ? 1.0 : min(_4112, 1.0));
    float _4123 = isnan(0.0) ? _433 : (isnan(_433) ? 0.0 : max(_433, 0.0));
    float _586 = isnan(1.0) ? _4123 : (isnan(_4123) ? 1.0 : min(_4123, 1.0));
    float _4134 = isnan(0.0) ? cbMtdParam._m0[14u].x : (isnan(cbMtdParam._m0[14u].x) ? 0.0 : max(cbMtdParam._m0[14u].x, 0.0));
    float _587 = isnan(1.0) ? _4134 : (isnan(_4134) ? 1.0 : min(_4134, 1.0));
    float _603 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _643 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _653 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _643);
    float _654 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _643);
    float _655 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _643);
    float _659 = inversesqrt(dot(vec3(_653, _654, _655), vec3(_653, _654, _655)));
    float _660 = _653 * _659;
    float _661 = _654 * _659;
    float _662 = _655 * _659;
    vec4 _667 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _669 = _667.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _974 = sqrt(((_653 * _653) + (_654 * _654)) + (_655 * _655));
        float _980 = (cbMatDynParam._m0[5u].x * _974) + cbMatDynParam._m0[5u].y;
        float _4145 = isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0));
        float _981 = isnan(1.0) ? _4145 : (isnan(_4145) ? 1.0 : min(_4145, 1.0));
        float _985 = (cbMatDynParam._m0[5u].z * _974) + cbMatDynParam._m0[5u].w;
        float _4156 = isnan(0.0) ? _985 : (isnan(_985) ? 0.0 : max(_985, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4156 : (isnan(_4156) ? 1.0 : min(_4156, 1.0))) - _981)) + _981) < ((_669 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _680 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _681 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _683 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _685 = _683.w;
    float _703 = fma(_581, cbSceneParam._m0[5u].z, fma(_580, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _579));
    float _706 = fma(_581, cbSceneParam._m0[6u].z, fma(_580, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _579));
    float _709 = fma(_581, cbSceneParam._m0[7u].z, fma(_580, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _579));
    vec4 _711 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _713 = _711.x;
    float _725 = (((_711.y - _583) + (_711.w * _583)) * cbMtdParam._m0[3u].x) + _583;
    float _742 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_713 * _713)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _750 = (((cbMatDynParam._m0[15u].x - _587) * cbMatDynParam._m0[15u].w) * _742) + _587;
    float _759 = ((_742 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _725)) + _725;
    uint _783 = uint(roundEven(NORMAL.w)) * 13u;
    uint _784 = _783 + 9u;
    uint _785 = _784 + uint(cbMatDynParam._m0[0u].w);
    float _791 = (cbMtdParam._m0[0u].x * _584) * cbInstanceData._m0[_785].x;
    float _792 = (cbMtdParam._m0[0u].y * _585) * cbInstanceData._m0[_785].y;
    float _793 = (cbMtdParam._m0[0u].z * _586) * cbInstanceData._m0[_785].z;
    float _4167 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
    float _794 = isnan(1.0) ? _4167 : (isnan(_4167) ? 1.0 : min(_4167, 1.0));
    float _4178 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
    float _795 = isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0));
    float _4189 = isnan(0.0) ? _793 : (isnan(_793) ? 0.0 : max(_793, 0.0));
    float _796 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
    vec4 _797 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _802 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _813 = (((_802.x - _750) + (_802.w * _750)) * cbMtdParam._m0[3u].x) + _750;
    float _826 = (cbMtdParam._m0[3u].x * (((_794 * _685) - _794) + _797.x)) + _794;
    float _827 = (cbMtdParam._m0[3u].x * (((_795 * _685) - _795) + _797.y)) + _795;
    float _828 = (cbMtdParam._m0[3u].x * (((_796 * _685) - _796) + _797.z)) + _796;
    vec4 _829 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _842 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_750 * (_584 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_750 * (_585 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_750 * (_586 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _829.z;
    float _846 = _842 * cbMatDynParam._m0[13u].w;
    float _856 = (_846 * (cbMatDynParam._m0[13u].x - _826)) + _826;
    float _857 = (_846 * (cbMatDynParam._m0[13u].y - _827)) + _827;
    float _858 = (_846 * (cbMatDynParam._m0[13u].z - _828)) + _828;
    float _866 = ((_842 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _813)) + _813;
    float _867 = 1.0 - _866;
    float _874 = (_856 + (-0.039999999105930328369140625)) * _866;
    float _875 = (_857 + (-0.039999999105930328369140625)) * _866;
    float _876 = (_858 + (-0.039999999105930328369140625)) * _866;
    float _877 = _874 + 0.039999999105930328369140625;
    float _878 = _875 + 0.039999999105930328369140625;
    float _879 = _876 + 0.039999999105930328369140625;
    vec4 _888 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _680, cbSceneParam._m0[86u].y * _681));
    float _891 = _888.x * TEXCOORD_4;
    float _892 = dot(vec3(_579, _580, _581), vec3(_660, _661, _662));
    float _895 = _892 * 2.0;
    float _899 = (_895 * _579) - _660;
    float _900 = (_895 * _580) - _661;
    float _901 = (_895 * _581) - _662;
    float _905 = abs(dot(vec3(_660, _661, _662), vec3(_579, _580, _581)));
    float _4200 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _907 = sqrt(_759);
    float _920 = exp2((_907 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_907 * 3.0));
    float _926 = (1.0 - _920) * ((_907 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _927 = _920 * _907;
    float _955 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _959 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _963 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1294;
    float _1296;
    float _1297;
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1019 = fma(_963, cbModelParam._m0[26u].z, fma(_959, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _955));
        float _1023 = fma(_963, cbModelParam._m0[27u].z, fma(_959, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _955));
        float _1027 = fma(_963, cbModelParam._m0[28u].z, fma(_959, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _955));
        float _1052 = _955 + _579;
        float _1053 = _959 + _580;
        float _1054 = _963 + _581;
        float _1064 = fma(_1054, cbModelParam._m0[26u].z, fma(_1053, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1052)) - _1019;
        float _1065 = fma(_1054, cbModelParam._m0[27u].z, fma(_1053, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1052)) - _1023;
        float _1066 = fma(_1054, cbModelParam._m0[28u].z, fma(_1053, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1052)) - _1027;
        float _1070 = inversesqrt(dot(vec3(_1064, _1065, _1066), vec3(_1064, _1065, _1066)));
        float _1083 = ((_1070 * _1064) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1019 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1084 = ((_1070 * _1065) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1023 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1085 = ((_1070 * _1066) / cbModelParam._m0[34u].z) + ((((((_1027 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1088 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        vec4 _1109 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1083, _1084, _1085), 0.0);
        float _1122 = exp2((_1088.w + (-0.5)) * 20.0) * 2.0;
        float _1123 = _1122 * (_1088.x + (-0.5));
        float _1124 = _1122 * (_1088.y + (-0.5));
        float _1125 = _1122 * (_1088.z + (-0.5));
        float _1132 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1133 = _1132 * (_1095.x + (-0.5));
        float _1134 = _1132 * (_1095.y + (-0.5));
        float _1135 = _1132 * (_1095.z + (-0.5));
        float _1142 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1143 = _1142 * (_1102.x + (-0.5));
        float _1144 = _1142 * (_1102.y + (-0.5));
        float _1145 = _1142 * (_1102.z + (-0.5));
        float _1152 = exp2((_1109.w + (-0.5)) * 20.0) * 2.0;
        float _1153 = _1152 * (_1109.x + (-0.5));
        float _1154 = _1152 * (_1109.y + (-0.5));
        float _1155 = _1152 * (_1109.z + (-0.5));
        float _1156 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1157 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1158 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1159 = _1123 * 0.5;
        float _1160 = _1133 * 0.5;
        float _1161 = _1143 * 0.5;
        float _1162 = dot(vec3(_1159, _1160, _1161), vec3(_1159, _1160, _1161));
        float _1167 = (_1162 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1162);
        float _1176 = (dot(vec3(_579, _580, _581), vec3(_1167 * _1159, _1167 * _1160, _1167 * _1161)) + 1.0) * 0.5;
        float _4226 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1186 = sqrt(((_1160 * _1160) + (_1159 * _1159)) + (_1161 * _1161)) / (_1156 + 9.9999997473787516355514526367188e-06);
        float _4237 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1187 = isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0));
        float _1188 = _1187 * 2.0;
        float _1192 = (1.0 - _1187) / (_1187 + 1.0);
        float _4248 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0));
        float _1202 = ((((1.0 - _1193) * (_1188 + 2.0)) * exp2(log2(isnan(1.0) ? _4226 : (isnan(_4226) ? 1.0 : min(_4226, 1.0))) * (_1188 + 1.0))) + _1193) * _1156;
        float _1203 = _1124 * 0.5;
        float _1204 = _1134 * 0.5;
        float _1205 = _1144 * 0.5;
        float _1206 = dot(vec3(_1203, _1204, _1205), vec3(_1203, _1204, _1205));
        float _1211 = (_1206 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1206);
        float _1219 = (dot(vec3(_579, _580, _581), vec3(_1211 * _1203, _1211 * _1204, _1211 * _1205)) + 1.0) * 0.5;
        float _4259 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1228 = sqrt(((_1204 * _1204) + (_1203 * _1203)) + (_1205 * _1205)) / (_1157 + 9.9999997473787516355514526367188e-06);
        float _4270 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1229 = isnan(1.0) ? _4270 : (isnan(_4270) ? 1.0 : min(_4270, 1.0));
        float _1230 = _1229 * 2.0;
        float _1234 = (1.0 - _1229) / (_1229 + 1.0);
        float _4281 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _4281 : (isnan(_4281) ? 1.0 : min(_4281, 1.0));
        float _1244 = ((((1.0 - _1235) * (_1230 + 2.0)) * exp2(log2(isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0))) * (_1230 + 1.0))) + _1235) * _1157;
        float _1245 = _1125 * 0.5;
        float _1246 = _1135 * 0.5;
        float _1247 = _1145 * 0.5;
        float _1248 = dot(vec3(_1245, _1246, _1247), vec3(_1245, _1246, _1247));
        float _1253 = (_1248 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1248);
        float _1261 = (dot(vec3(_579, _580, _581), vec3(_1253 * _1245, _1253 * _1246, _1253 * _1247)) + 1.0) * 0.5;
        float _4292 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0));
        float _1270 = sqrt(((_1246 * _1246) + (_1245 * _1245)) + (_1247 * _1247)) / (_1158 + 9.9999997473787516355514526367188e-06);
        float _4303 = isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0));
        float _1271 = isnan(1.0) ? _4303 : (isnan(_4303) ? 1.0 : min(_4303, 1.0));
        float _1272 = _1271 * 2.0;
        float _1276 = (1.0 - _1271) / (_1271 + 1.0);
        float _4314 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4314 : (isnan(_4314) ? 1.0 : min(_4314, 1.0));
        float _1286 = ((((1.0 - _1277) * (_1272 + 2.0)) * exp2(log2(isnan(1.0) ? _4292 : (isnan(_4292) ? 1.0 : min(_4292, 1.0))) * (_1272 + 1.0))) + _1277) * _1158;
        _1294 = _1125;
        _1296 = _1124;
        _1297 = _1123;
        _1298 = _1135;
        _1299 = _1134;
        _1300 = _1133;
        _1301 = _1145;
        _1302 = _1144;
        _1303 = _1143;
        _1304 = _1158;
        _1305 = _1157;
        _1306 = _1156;
        _1307 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0)));
        _1308 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0)));
        _1309 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0)));
    }
    else
    {
        _1294 = _1295;
        _1296 = _1295;
        _1297 = _1295;
        _1298 = _1295;
        _1299 = _1295;
        _1300 = _1295;
        _1301 = _1295;
        _1302 = _1295;
        _1303 = _1295;
        _1304 = _1295;
        _1305 = _1295;
        _1306 = _1295;
        _1307 = 0.0;
        _1308 = 0.0;
        _1309 = 0.0;
    }
    float _1607;
    float _1608;
    float _1609;
    float _1610;
    float _1611;
    float _1612;
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1338 = fma(_963, cbModelParam._m0[30u].z, fma(_959, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _955));
        float _1342 = fma(_963, cbModelParam._m0[31u].z, fma(_959, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _955));
        float _1346 = fma(_963, cbModelParam._m0[32u].z, fma(_959, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _955));
        float _1369 = _955 + _579;
        float _1370 = _959 + _580;
        float _1371 = _963 + _581;
        float _1381 = fma(_1371, cbModelParam._m0[30u].z, fma(_1370, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1369)) - _1338;
        float _1382 = fma(_1371, cbModelParam._m0[31u].z, fma(_1370, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1369)) - _1342;
        float _1383 = fma(_1371, cbModelParam._m0[32u].z, fma(_1370, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1369)) - _1346;
        float _1387 = inversesqrt(dot(vec3(_1381, _1382, _1383), vec3(_1381, _1382, _1383)));
        float _1400 = ((_1387 * _1381) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1338 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1401 = ((_1387 * _1382) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1342 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1402 = ((_1387 * _1383) / cbModelParam._m0[35u].z) + ((((((_1346 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1411 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1418 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        vec4 _1425 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1400, _1401, _1402), 0.0);
        float _1437 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1438 = _1437 * (_1404.x + (-0.5));
        float _1439 = _1437 * (_1404.y + (-0.5));
        float _1440 = _1437 * (_1404.z + (-0.5));
        float _1447 = exp2((_1411.w + (-0.5)) * 20.0) * 2.0;
        float _1448 = _1447 * (_1411.x + (-0.5));
        float _1449 = _1447 * (_1411.y + (-0.5));
        float _1450 = _1447 * (_1411.z + (-0.5));
        float _1457 = exp2((_1418.w + (-0.5)) * 20.0) * 2.0;
        float _1458 = _1457 * (_1418.x + (-0.5));
        float _1459 = _1457 * (_1418.y + (-0.5));
        float _1460 = _1457 * (_1418.z + (-0.5));
        float _1467 = exp2((_1425.w + (-0.5)) * 20.0) * 2.0;
        float _1468 = _1467 * (_1425.x + (-0.5));
        float _1469 = _1467 * (_1425.y + (-0.5));
        float _1470 = _1467 * (_1425.z + (-0.5));
        float _1471 = isnan(0.0) ? _1468 : (isnan(_1468) ? 0.0 : max(_1468, 0.0));
        float _1472 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1473 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1474 = _1438 * 0.5;
        float _1475 = _1448 * 0.5;
        float _1476 = _1458 * 0.5;
        float _1477 = dot(vec3(_1474, _1475, _1476), vec3(_1474, _1475, _1476));
        float _1482 = (_1477 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1477);
        float _1490 = (dot(vec3(_579, _580, _581), vec3(_1482 * _1474, _1482 * _1475, _1482 * _1476)) + 1.0) * 0.5;
        float _4355 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
        float _1499 = sqrt(((_1475 * _1475) + (_1474 * _1474)) + (_1476 * _1476)) / (_1471 + 9.9999997473787516355514526367188e-06);
        float _4366 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
        float _1500 = isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0));
        float _1501 = _1500 * 2.0;
        float _1505 = (1.0 - _1500) / (_1500 + 1.0);
        float _4377 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
        float _1515 = ((((1.0 - _1506) * (_1501 + 2.0)) * exp2(log2(isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0))) * (_1501 + 1.0))) + _1506) * _1471;
        float _1516 = _1439 * 0.5;
        float _1517 = _1449 * 0.5;
        float _1518 = _1459 * 0.5;
        float _1519 = dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518));
        float _1524 = (_1519 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1519);
        float _1532 = (dot(vec3(_579, _580, _581), vec3(_1524 * _1516, _1524 * _1517, _1524 * _1518)) + 1.0) * 0.5;
        float _4388 = isnan(0.0) ? _1532 : (isnan(_1532) ? 0.0 : max(_1532, 0.0));
        float _1541 = sqrt(((_1517 * _1517) + (_1516 * _1516)) + (_1518 * _1518)) / (_1472 + 9.9999997473787516355514526367188e-06);
        float _4399 = isnan(0.0) ? _1541 : (isnan(_1541) ? 0.0 : max(_1541, 0.0));
        float _1542 = isnan(1.0) ? _4399 : (isnan(_4399) ? 1.0 : min(_4399, 1.0));
        float _1543 = _1542 * 2.0;
        float _1547 = (1.0 - _1542) / (_1542 + 1.0);
        float _4410 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4410 : (isnan(_4410) ? 1.0 : min(_4410, 1.0));
        float _1557 = ((((1.0 - _1548) * (_1543 + 2.0)) * exp2(log2(isnan(1.0) ? _4388 : (isnan(_4388) ? 1.0 : min(_4388, 1.0))) * (_1543 + 1.0))) + _1548) * _1472;
        float _1558 = _1440 * 0.5;
        float _1559 = _1450 * 0.5;
        float _1560 = _1460 * 0.5;
        float _1561 = dot(vec3(_1558, _1559, _1560), vec3(_1558, _1559, _1560));
        float _1566 = (_1561 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1561);
        float _1574 = (dot(vec3(_579, _580, _581), vec3(_1566 * _1558, _1566 * _1559, _1566 * _1560)) + 1.0) * 0.5;
        float _4421 = isnan(0.0) ? _1574 : (isnan(_1574) ? 0.0 : max(_1574, 0.0));
        float _1583 = sqrt(((_1559 * _1559) + (_1558 * _1558)) + (_1560 * _1560)) / (_1473 + 9.9999997473787516355514526367188e-06);
        float _4432 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
        float _1584 = isnan(1.0) ? _4432 : (isnan(_4432) ? 1.0 : min(_4432, 1.0));
        float _1585 = _1584 * 2.0;
        float _1589 = (1.0 - _1584) / (_1584 + 1.0);
        float _4443 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4443 : (isnan(_4443) ? 1.0 : min(_4443, 1.0));
        float _1599 = ((((1.0 - _1590) * (_1585 + 2.0)) * exp2(log2(isnan(1.0) ? _4421 : (isnan(_4421) ? 1.0 : min(_4421, 1.0))) * (_1585 + 1.0))) + _1590) * _1473;
        _1607 = _1440;
        _1608 = _1439;
        _1609 = _1438;
        _1610 = _1450;
        _1611 = _1449;
        _1612 = _1448;
        _1613 = _1460;
        _1614 = _1459;
        _1615 = _1458;
        _1616 = _1473;
        _1617 = _1472;
        _1618 = _1471;
        _1619 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0)));
        _1620 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0)));
        _1621 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1599 : (isnan(_1599) ? 0.0 : max(_1599, 0.0)));
    }
    else
    {
        _1607 = _1295;
        _1608 = _1295;
        _1609 = _1295;
        _1610 = _1295;
        _1611 = _1295;
        _1612 = _1295;
        _1613 = _1295;
        _1614 = _1295;
        _1615 = _1295;
        _1616 = _1295;
        _1617 = _1295;
        _1618 = _1295;
        _1619 = 0.0;
        _1620 = 0.0;
        _1621 = 0.0;
    }
    float _1631 = (cbModelParam._m0[1u].x * (_1619 - _1307)) + _1307;
    float _1632 = (cbModelParam._m0[1u].x * (_1620 - _1308)) + _1308;
    float _1633 = (cbModelParam._m0[1u].x * (_1621 - _1309)) + _1309;
    float _1654 = fma(_1633, cbSceneParam._m0[89u].z, fma(_1632, cbSceneParam._m0[89u].y, _1631 * cbSceneParam._m0[89u].x));
    float _1657 = fma(_1633, cbSceneParam._m0[90u].z, fma(_1632, cbSceneParam._m0[90u].y, _1631 * cbSceneParam._m0[90u].x));
    float _1660 = fma(_1633, cbSceneParam._m0[91u].z, fma(_1632, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1631));
    float _1675 = _899 * 0.5;
    float _1676 = _900 * 0.5;
    float _1677 = _901 * 0.5;
    float _1678 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1609, _1612, _1615, _1618));
    float _1681 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1608, _1611, _1614, _1617));
    float _1684 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1607, _1610, _1613, _1616));
    float _1715;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1691 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1294, _1298, _1301, _1304));
        float _1695 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1296, _1299, _1302, _1305));
        float _1699 = dot(vec4(_1675, _1676, _1677, 1.0), vec4(_1297, _1300, _1303, _1306));
        float _1706 = dot(vec4(cbModelParam._m0[39u]), vec4(_1675, _1676, _1677, 1.0));
        _1715 = dot(vec3(isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0)), isnan(0.0) ? _1695 : (isnan(_1695) ? 0.0 : max(_1695, 0.0)), isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1706) ? 0.0 : (isnan(0.0) ? _1706 : max(0.0, _1706))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1715 = 1.0;
    }
    float _1726;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1717 = dot(vec4(cbModelParam._m0[40u]), vec4(_1675, _1676, _1677, 1.0));
        _1726 = dot(vec3(isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0)), isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)), isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1717) ? 0.0 : (isnan(0.0) ? _1717 : max(0.0, _1717))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1726 = 1.0;
    }
    float _1730 = (_1726 * cbModelParam._m0[1u].x) + (_1715 * (1.0 - cbModelParam._m0[1u].x));
    float _1740 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _759);
    float _1741 = isnan(_1740) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1740 : min(cbModelParam._m0[25u].z, _1740));
    float _1821;
    float _1823;
    float _1825;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1788 = fma(_963, cbModelParam._m0[13u].z, fma(_959, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _955)) + cbModelParam._m0[13u].w;
        float _1792 = fma(_963, cbModelParam._m0[14u].z, fma(_959, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _955)) + cbModelParam._m0[14u].w;
        float _1796 = fma(_963, cbModelParam._m0[15u].z, fma(_959, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _955)) + cbModelParam._m0[15u].w;
        float _1799 = fma(_901, cbModelParam._m0[13u].z, fma(_900, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _899));
        float _1802 = fma(_901, cbModelParam._m0[14u].z, fma(_900, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _899));
        float _1805 = fma(_901, cbModelParam._m0[15u].z, fma(_900, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _899));
        float _1833;
        if (_1799 > 0.0)
        {
            _1833 = abs((1.0 - _1788) / _1799);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1799 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1788 + 1.0) / _1799);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1833 = frontier_phi_19_17_ladder;
        }
        float _2008;
        if (_1802 > 0.0)
        {
            _2008 = abs((1.0 - _1792) / _1802);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1802 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1792 + 1.0) / _1802);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2008 = frontier_phi_28_24_ladder;
        }
        float _2303;
        if (_1805 > 0.0)
        {
            _2303 = abs((1.0 - _1796) / _1805);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1805 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1796 + 1.0) / _1805);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2303 = frontier_phi_40_35_ladder;
        }
        float _2305 = isnan(_2008) ? _1833 : (isnan(_1833) ? _2008 : min(_1833, _2008));
        float _2306 = isnan(_2303) ? _2305 : (isnan(_2305) ? _2303 : min(_2305, _2303));
        float _2310 = (_2306 * _1799) + _1788;
        float _2311 = (_2306 * _1802) + _1792;
        float _2312 = (_2306 * _1805) + _1796;
        float _2313 = _2306 * 9.9999997473787516355514526367188e-05;
        float _2315 = (-1.0) - _2313;
        float _2317 = _2313 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2312 > _2317) || ((_2312 < _2315) || ((_2311 > _2317) || ((_2311 < _2315) || ((_2310 < _2315) || (_2310 > _2317))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2457 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2312, cbModelParam._m0[9u].z, fma(_2311, cbModelParam._m0[9u].y, _2310 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2312, cbModelParam._m0[10u].z, fma(_2311, cbModelParam._m0[10u].y, _2310 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2312, cbModelParam._m0[11u].z, fma(_2311, cbModelParam._m0[11u].y, _2310 * cbModelParam._m0[11u].x))), _1741);
            frontier_phi_18_40_ladder = _2457.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2457.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2457.x * cbModelParam._m0[1u].y;
        }
        _1821 = frontier_phi_18_40_ladder_2;
        _1823 = frontier_phi_18_40_ladder_1;
        _1825 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1809 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_899, _900, _901), _1741);
        _1821 = _1809.x * cbModelParam._m0[1u].y;
        _1823 = _1809.y * cbModelParam._m0[1u].y;
        _1825 = _1809.z * cbModelParam._m0[1u].y;
    }
    float _1829 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _759);
    float _1830 = isnan(_1829) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1829 : min(cbModelParam._m0[25u].w, _1829));
    float _1923;
    float _1925;
    float _1927;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1887 = fma(_963, cbModelParam._m0[21u].z, fma(_959, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _955)) + cbModelParam._m0[21u].w;
        float _1891 = fma(_963, cbModelParam._m0[22u].z, fma(_959, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _955)) + cbModelParam._m0[22u].w;
        float _1895 = fma(_963, cbModelParam._m0[23u].z, fma(_959, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _955)) + cbModelParam._m0[23u].w;
        float _1898 = fma(_901, cbModelParam._m0[21u].z, fma(_900, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _899));
        float _1901 = fma(_901, cbModelParam._m0[22u].z, fma(_900, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _899));
        float _1904 = fma(_901, cbModelParam._m0[23u].z, fma(_900, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _899));
        float _2013;
        if (_1898 > 0.0)
        {
            _2013 = abs((1.0 - _1887) / _1898);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1898 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1887 + 1.0) / _1898);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2013 = frontier_phi_30_26_ladder;
        }
        float _2330;
        if (_1901 > 0.0)
        {
            _2330 = abs((1.0 - _1891) / _1901);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1901 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1891 + 1.0) / _1901);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2330 = frontier_phi_42_37_ladder;
        }
        float _2668;
        if (_1904 > 0.0)
        {
            _2668 = abs((1.0 - _1895) / _1904);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1904 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1895 + 1.0) / _1904);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2668 = frontier_phi_52_49_ladder;
        }
        float _2670 = isnan(_2330) ? _2013 : (isnan(_2013) ? _2330 : min(_2013, _2330));
        float _2671 = isnan(_2668) ? _2670 : (isnan(_2670) ? _2668 : min(_2670, _2668));
        float _2675 = (_2671 * _1898) + _1887;
        float _2676 = (_2671 * _1901) + _1891;
        float _2677 = (_2671 * _1904) + _1895;
        float _2678 = _2671 * 9.9999997473787516355514526367188e-05;
        float _2679 = (-1.0) - _2678;
        float _2681 = _2678 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2677 > _2681) || ((_2677 < _2679) || ((_2676 > _2681) || ((_2676 < _2679) || ((_2675 < _2679) || (_2675 > _2681))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2799 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2677, cbModelParam._m0[17u].z, fma(_2676, cbModelParam._m0[17u].y, _2675 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2677, cbModelParam._m0[18u].z, fma(_2676, cbModelParam._m0[18u].y, _2675 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2677, cbModelParam._m0[19u].z, fma(_2676, cbModelParam._m0[19u].y, _2675 * cbModelParam._m0[19u].x))), _1830);
            frontier_phi_27_52_ladder = _2799.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2799.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2799.x * cbModelParam._m0[1u].z;
        }
        _1923 = frontier_phi_27_52_ladder_2;
        _1925 = frontier_phi_27_52_ladder_1;
        _1927 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1907 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_899, _900, _901), _1830);
        _1923 = _1907.x * cbModelParam._m0[1u].z;
        _1925 = _1907.y * cbModelParam._m0[1u].z;
        _1927 = _1907.z * cbModelParam._m0[1u].z;
    }
    float _1940 = (((_926 * _877) + _927) * _891) * ((cbModelParam._m0[1u].w * (_1923 - _1821)) + _1821);
    float _1942 = (((_926 * _878) + _927) * _891) * ((cbModelParam._m0[1u].w * (_1925 - _1823)) + _1823);
    float _1944 = (((_926 * _879) + _927) * _891) * ((cbModelParam._m0[1u].w * (_1927 - _1825)) + _1825);
    float _1947 = fma(_1944, cbSceneParam._m0[89u].z, fma(_1942, cbSceneParam._m0[89u].y, _1940 * cbSceneParam._m0[89u].x));
    float _1950 = fma(_1944, cbSceneParam._m0[90u].z, fma(_1942, cbSceneParam._m0[90u].y, _1940 * cbSceneParam._m0[90u].x));
    float _1953 = fma(_1944, cbSceneParam._m0[91u].z, fma(_1942, cbSceneParam._m0[91u].y, _1940 * cbSceneParam._m0[91u].x));
    float _1987 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1991 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1995 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1999 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2000 = _1987 / _1999;
    float _2001 = _1991 / _1999;
    float _2002 = _1995 / _1999;
    float _2149;
    float _2150;
    float _2151;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2029 = ((uint(_2002 > cbSceneParam._m0[59u].y) + uint(_2002 > cbSceneParam._m0[59u].x)) + uint(_2002 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2030 = _2029 + 43u;
        uint _2038 = _2029 + 44u;
        uint _2046 = _2029 + 45u;
        uint _2054 = _2029 + 46u;
        float _2065 = fma(_1999, cbSceneParam._m0[_2030].w, fma(_1995, cbSceneParam._m0[_2030].z, fma(_1991, cbSceneParam._m0[_2030].y, _1987 * cbSceneParam._m0[_2030].x)));
        float _2069 = fma(_1999, cbSceneParam._m0[_2038].w, fma(_1995, cbSceneParam._m0[_2038].z, fma(_1991, cbSceneParam._m0[_2038].y, _1987 * cbSceneParam._m0[_2038].x)));
        float _2077 = fma(_1999, cbSceneParam._m0[_2054].w, fma(_1995, cbSceneParam._m0[_2054].z, fma(_1991, cbSceneParam._m0[_2054].y, _1987 * cbSceneParam._m0[_2054].x)));
        float _2082 = cbSceneParam._m0[33u].z * _2077;
        float _2084 = cbSceneParam._m0[33u].w * _2077;
        float _2087 = fma(_1999, cbSceneParam._m0[_2046].w, fma(_1995, cbSceneParam._m0[_2046].z, fma(_1991, cbSceneParam._m0[_2046].y, _1987 * cbSceneParam._m0[_2046].x))) / _2077;
        float _2135 = (cbSceneParam._m0[33u].x - sqrt(((_2001 * _2001) + (_2000 * _2000)) + (_2002 * _2002))) * cbSceneParam._m0[33u].y;
        float _4569 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
        float _2142 = (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2082 + _2065) / _2077, (_2084 + _2069) / _2077), _2087), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2084 + _2065) / _2077, (_2069 - _2082) / _2077), _2087), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2065 - _2082) / _2077, (_2069 - _2084) / _2077), _2087), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2065 - _2084) / _2077, (_2082 + _2069) / _2077), _2087), 0.0)).x), vec4(0.25)));
        _2149 = 1.0 - (_2142 * cbSceneParam._m0[34u].x);
        _2150 = 1.0 - (_2142 * cbSceneParam._m0[34u].y);
        _2151 = 1.0 - (_2142 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2149 = 1.0;
        _2150 = 1.0;
        _2151 = 1.0;
    }
    float _2215;
    float _2217;
    float _2219;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2203 = fma(_1999, cbSceneParam._m0[63u].w, fma(_1995, cbSceneParam._m0[63u].z, fma(_1991, cbSceneParam._m0[63u].y, _1987 * cbSceneParam._m0[63u].x)));
        float _2204 = fma(_1999, cbSceneParam._m0[60u].w, fma(_1995, cbSceneParam._m0[60u].z, fma(_1991, cbSceneParam._m0[60u].y, _1987 * cbSceneParam._m0[60u].x))) / _2203;
        float _2205 = fma(_1999, cbSceneParam._m0[61u].w, fma(_1995, cbSceneParam._m0[61u].z, fma(_1991, cbSceneParam._m0[61u].y, _1987 * cbSceneParam._m0[61u].x))) / _2203;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2204 >= cbSceneParam._m0[64u].x) && (_2205 >= cbSceneParam._m0[64u].y)) && (_2204 <= cbSceneParam._m0[64u].z)) && (_2205 <= cbSceneParam._m0[64u].w))
        {
            float _2343 = fma(_1999, cbSceneParam._m0[62u].w, fma(_1995, cbSceneParam._m0[62u].z, fma(_1991, cbSceneParam._m0[62u].y, _1987 * cbSceneParam._m0[62u].x))) / _2203;
            float _2347 = isnan(cbSceneParam._m0[41u].w) ? _2343 : (isnan(_2343) ? cbSceneParam._m0[41u].w : max(_2343, cbSceneParam._m0[41u].w));
            float _2390 = (cbSceneParam._m0[33u].x - sqrt(((_2001 * _2001) + (_2000 * _2000)) + (_2002 * _2002))) * cbSceneParam._m0[33u].y;
            float _4585 = isnan(0.0) ? _2390 : (isnan(_2390) ? 0.0 : max(_2390, 0.0));
            float _2397 = (isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2204, cbSceneParam._m0[33u].w + _2205), _2347), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2204, _2205 - cbSceneParam._m0[33u].z), _2347), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2204 - cbSceneParam._m0[33u].z, _2205 - cbSceneParam._m0[33u].w), _2347), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2204 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2205), _2347), 0.0)).x), vec4(0.25)));
            float _2401 = 1.0 - (_2397 * cbSceneParam._m0[34u].x);
            float _2402 = 1.0 - (_2397 * cbSceneParam._m0[34u].y);
            float _2403 = 1.0 - (_2397 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2402) ? _2150 : (isnan(_2150) ? _2402 : min(_2150, _2402));
            frontier_phi_39_38_ladder_1 = isnan(_2401) ? _2149 : (isnan(_2149) ? _2401 : min(_2149, _2401));
            frontier_phi_39_38_ladder_2 = isnan(_2403) ? _2151 : (isnan(_2151) ? _2403 : min(_2151, _2403));
        }
        else
        {
            frontier_phi_39_38_ladder = _2150;
            frontier_phi_39_38_ladder_1 = _2149;
            frontier_phi_39_38_ladder_2 = _2151;
        }
        _2215 = frontier_phi_39_38_ladder_1;
        _2217 = frontier_phi_39_38_ladder;
        _2219 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2215 = _2149;
        _2217 = _2150;
        _2219 = _2151;
    }
    uvec4 _2224 = floatBitsToUint(cbInstanceData._m0[_783 + 5u]);
    uint _2226 = _2224.x * 14u;
    uint _2227 = _2226 + 13u;
    float _2234 = _891 + (-1.0);
    float _2239 = (cbLight._m0[_2227].x * _2234) + 1.0;
    float _2240 = (cbLight._m0[_2227].y * _2234) + 1.0;
    float _2241 = (cbLight._m0[_2227].z * _2234) + 1.0;
    float _2242 = (cbLight._m0[_2227].w * _2234) + 1.0;
    uint _2243 = _2226 + 5u;
    float _2249 = isnan(1.0) ? _2240 : (isnan(_2240) ? 1.0 : min(_2240, 1.0));
    uint _2253 = _2226 + 4u;
    float _2262 = isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0));
    uint _2266 = _2226 | 1u;
    float _2277 = dot(vec3(cbLight._m0[_2226].xyz), vec3(_579, _580, _581));
    float _2280 = dot(vec3(cbLight._m0[_2266].xyz), vec3(_579, _580, _581));
    float _4621 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
    float _4632 = isnan(0.0) ? _2280 : (isnan(_2280) ? 0.0 : max(_2280, 0.0));
    float _2285 = (isnan(1.0) ? _4621 : (isnan(_4621) ? 1.0 : min(_4621, 1.0))) * 0.3183098733425140380859375;
    float _2287 = (isnan(1.0) ? _4632 : (isnan(_4632) ? 1.0 : min(_4632, 1.0))) * 0.3183098733425140380859375;
    float _2294 = ((cbLight._m0[_2243].x * _2249) * _2287) + (((cbLight._m0[_2253].x * _2215) * _2262) * _2285);
    float _2295 = ((_2249 * cbLight._m0[_2243].y) * _2287) + (((cbLight._m0[_2253].y * _2217) * _2262) * _2285);
    float _2296 = ((_2249 * cbLight._m0[_2243].z) * _2287) + (((cbLight._m0[_2253].z * _2219) * _2262) * _2285);
    uvec4 _2300 = floatBitsToUint(cbLight._m0[_2226 + 12u]);
    bool _2302 = _2300.x == 0u;
    float _2404;
    float _2406;
    float _2408;
    if (_2302)
    {
        _2404 = _2294;
        _2406 = _2295;
        _2408 = _2296;
    }
    else
    {
        uint _2412 = _2226 + 6u;
        float _2428 = (dot(vec3(cbLight._m0[_2226 + 2u].xyz), vec3(_579, _580, _581)) * 0.5) + 0.5;
        float _2429 = _2428 * _2428;
        float _4643 = isnan(0.0) ? _2429 : (isnan(_2429) ? 0.0 : max(_2429, 0.0));
        float _2430 = isnan(1.0) ? _4643 : (isnan(_4643) ? 1.0 : min(_4643, 1.0));
        float _2431 = isnan(1.0) ? _2241 : (isnan(_2241) ? 1.0 : min(_2241, 1.0));
        _2404 = (((cbLight._m0[_2412].x * 0.3183098733425140380859375) * _2430) * _2431) + _2294;
        _2406 = (((cbLight._m0[_2412].y * 0.3183098733425140380859375) * _2430) * _2431) + _2295;
        _2408 = (((cbLight._m0[_2412].z * 0.3183098733425140380859375) * _2430) * _2431) + _2296;
    }
    bool _2411 = _2300.y == 0u;
    float _2466;
    float _2468;
    float _2470;
    if (_2411)
    {
        _2466 = _2404;
        _2468 = _2406;
        _2470 = _2408;
    }
    else
    {
        uint _2639 = _2226 + 7u;
        float _2655 = (dot(vec3(cbLight._m0[_2226 + 3u].xyz), vec3(_579, _580, _581)) * 0.5) + 0.5;
        float _2656 = _2655 * _2655;
        float _4659 = isnan(0.0) ? _2656 : (isnan(_2656) ? 0.0 : max(_2656, 0.0));
        float _2657 = isnan(1.0) ? _4659 : (isnan(_4659) ? 1.0 : min(_4659, 1.0));
        float _2658 = isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0));
        _2466 = (((cbLight._m0[_2639].x * 0.3183098733425140380859375) * _2657) * _2658) + _2404;
        _2468 = (((cbLight._m0[_2639].y * 0.3183098733425140380859375) * _2657) * _2658) + _2406;
        _2470 = (((cbLight._m0[_2639].z * 0.3183098733425140380859375) * _2657) * _2658) + _2408;
    }
    uint _2473 = _2226 + 8u;
    float _2486 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2226].w)) * _759) * 0.949999988079071044921875);
    float _2487 = _2486 * _2486;
    float _2488 = cbLight._m0[_2226].x + _660;
    float _2489 = cbLight._m0[_2226].y + _661;
    float _2490 = cbLight._m0[_2226].z + _662;
    float _2494 = inversesqrt(dot(vec3(_2488, _2489, _2490), vec3(_2488, _2489, _2490)));
    float _2495 = _2494 * _2488;
    float _2496 = _2494 * _2489;
    float _2497 = _2494 * _2490;
    float _2498 = dot(vec3(_579, _580, _581), vec3(cbLight._m0[_2226].xyz));
    float _4675 = isnan(0.0) ? _2498 : (isnan(_2498) ? 0.0 : max(_2498, 0.0));
    float _2501 = isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0));
    float _4686 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _2502 = isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0));
    float _2503 = dot(vec3(_579, _580, _581), vec3(_2495, _2496, _2497));
    float _4697 = isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0));
    float _2506 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
    float _2507 = dot(vec3(cbLight._m0[_2226].xyz), vec3(_2495, _2496, _2497));
    float _4708 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
    float _2511 = _2487 * _2487;
    float _2515 = ((_2506 * _2506) * (_2511 + (-1.0))) + 1.0;
    float _2523 = exp2(log2(1.0 - (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0)))) * 5.0);
    float _2524 = 0.959999978542327880859375 - _874;
    float _2526 = 0.959999978542327880859375 - _875;
    float _2527 = 0.959999978542327880859375 - _876;
    float _2534 = 1.0 - _2487;
    float _2545 = (0.5 / (((_2502 * ((_2501 * _2534) + _2487)) + 9.9999999392252902907785028219223e-09) + (((_2502 * _2534) + _2487) * _2501))) * _2501;
    float _4719 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
    float _2547 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * (_2511 / ((_2515 * _2515) * 3.141590118408203125));
    uint _2561 = _2226 + 9u;
    float _2572 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2266].w)) * _759) * 0.949999988079071044921875);
    float _2573 = _2572 * _2572;
    float _2574 = cbLight._m0[_2266].x + _660;
    float _2575 = cbLight._m0[_2266].y + _661;
    float _2576 = cbLight._m0[_2266].z + _662;
    float _2580 = inversesqrt(dot(vec3(_2574, _2575, _2576), vec3(_2574, _2575, _2576)));
    float _2581 = _2580 * _2574;
    float _2582 = _2580 * _2575;
    float _2583 = _2580 * _2576;
    float _2584 = dot(vec3(_579, _580, _581), vec3(cbLight._m0[_2266].xyz));
    float _4730 = isnan(0.0) ? _2584 : (isnan(_2584) ? 0.0 : max(_2584, 0.0));
    float _2587 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
    float _2588 = dot(vec3(_579, _580, _581), vec3(_2581, _2582, _2583));
    float _4741 = isnan(0.0) ? _2588 : (isnan(_2588) ? 0.0 : max(_2588, 0.0));
    float _2591 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
    float _2592 = dot(vec3(cbLight._m0[_2266].xyz), vec3(_2581, _2582, _2583));
    float _4752 = isnan(0.0) ? _2592 : (isnan(_2592) ? 0.0 : max(_2592, 0.0));
    float _2596 = _2573 * _2573;
    float _2600 = ((_2591 * _2591) * (_2596 + (-1.0))) + 1.0;
    float _2607 = exp2(log2(1.0 - (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0)))) * 5.0);
    float _2614 = 1.0 - _2573;
    float _2624 = (0.5 / (((_2502 * ((_2587 * _2614) + _2573)) + 9.9999999392252902907785028219223e-09) + (((_2502 * _2614) + _2573) * _2587))) * _2587;
    float _4763 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
    float _2626 = (isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0))) * (_2596 / ((_2600 * _2600) * 3.141590118408203125));
    float _2636 = (((((_2607 * _2524) + _877) * cbLight._m0[_2561].x) * _2626) * _2249) + ((((cbLight._m0[_2473].x * _2215) * ((_2523 * _2524) + _877)) * _2547) * _2262);
    float _2637 = (((((_2607 * _2526) + _878) * cbLight._m0[_2561].y) * _2626) * _2249) + ((((cbLight._m0[_2473].y * _2217) * ((_2523 * _2526) + _878)) * _2547) * _2262);
    float _2638 = (((((_2607 * _2527) + _879) * cbLight._m0[_2561].z) * _2626) * _2249) + ((((cbLight._m0[_2473].z * _2219) * ((_2523 * _2527) + _879)) * _2547) * _2262);
    float _2694;
    float _2696;
    float _2698;
    if (_2302)
    {
        _2694 = _2636;
        _2696 = _2637;
        _2698 = _2638;
    }
    else
    {
        uint _2700 = _2226 + 2u;
        uint _2704 = _2226 + 10u;
        float _2718 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2700].w)) * _759) * 0.949999988079071044921875);
        float _2719 = _2718 * _2718;
        float _2720 = cbLight._m0[_2700].x + _660;
        float _2721 = cbLight._m0[_2700].y + _661;
        float _2722 = cbLight._m0[_2700].z + _662;
        float _2726 = inversesqrt(dot(vec3(_2720, _2721, _2722), vec3(_2720, _2721, _2722)));
        float _2727 = _2726 * _2720;
        float _2728 = _2726 * _2721;
        float _2729 = _2726 * _2722;
        float _2730 = dot(vec3(_579, _580, _581), vec3(cbLight._m0[_2700].xyz));
        float _4774 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
        float _2733 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
        float _2734 = dot(vec3(_579, _580, _581), vec3(_2727, _2728, _2729));
        float _4785 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
        float _2737 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
        float _2738 = dot(vec3(cbLight._m0[_2700].xyz), vec3(_2727, _2728, _2729));
        float _4796 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
        float _2742 = _2719 * _2719;
        float _2746 = ((_2737 * _2737) * (_2742 + (-1.0))) + 1.0;
        float _2753 = exp2(log2(1.0 - (isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0)))) * 5.0);
        float _2760 = 1.0 - _2719;
        float _2770 = (0.5 / (((_2502 * ((_2733 * _2760) + _2719)) + 9.9999999392252902907785028219223e-09) + (((_2502 * _2760) + _2719) * _2733))) * _2733;
        float _4807 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0));
        float _2772 = (isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0))) * (_2742 / ((_2746 * _2746) * 3.141590118408203125));
        float _2773 = isnan(1.0) ? _2241 : (isnan(_2241) ? 1.0 : min(_2241, 1.0));
        _2694 = (((((_2753 * _2524) + _877) * cbLight._m0[_2704].x) * _2772) * _2773) + _2636;
        _2696 = (((((_2753 * _2526) + _878) * cbLight._m0[_2704].y) * _2772) * _2773) + _2637;
        _2698 = (((((_2753 * _2527) + _879) * cbLight._m0[_2704].z) * _2772) * _2773) + _2638;
    }
    float _2804;
    float _2806;
    float _2808;
    if (_2411)
    {
        _2804 = _2694;
        _2806 = _2696;
        _2808 = _2698;
    }
    else
    {
        uint _2815 = _2226 + 3u;
        uint _2819 = _2226 + 11u;
        float _2833 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2815].w)) * _759) * 0.949999988079071044921875);
        float _2834 = _2833 * _2833;
        float _2835 = cbLight._m0[_2815].x + _660;
        float _2836 = cbLight._m0[_2815].y + _661;
        float _2837 = cbLight._m0[_2815].z + _662;
        float _2841 = inversesqrt(dot(vec3(_2835, _2836, _2837), vec3(_2835, _2836, _2837)));
        float _2842 = _2841 * _2835;
        float _2843 = _2841 * _2836;
        float _2844 = _2841 * _2837;
        float _2845 = dot(vec3(_579, _580, _581), vec3(cbLight._m0[_2815].xyz));
        float _4823 = isnan(0.0) ? _2845 : (isnan(_2845) ? 0.0 : max(_2845, 0.0));
        float _2848 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
        float _2849 = dot(vec3(_579, _580, _581), vec3(_2842, _2843, _2844));
        float _4834 = isnan(0.0) ? _2849 : (isnan(_2849) ? 0.0 : max(_2849, 0.0));
        float _2852 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
        float _2853 = dot(vec3(cbLight._m0[_2815].xyz), vec3(_2842, _2843, _2844));
        float _4845 = isnan(0.0) ? _2853 : (isnan(_2853) ? 0.0 : max(_2853, 0.0));
        float _2857 = _2834 * _2834;
        float _2861 = ((_2852 * _2852) * (_2857 + (-1.0))) + 1.0;
        float _2868 = exp2(log2(1.0 - (isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0)))) * 5.0);
        float _2875 = 1.0 - _2834;
        float _2885 = (0.5 / (((_2502 * ((_2848 * _2875) + _2834)) + 9.9999999392252902907785028219223e-09) + (((_2502 * _2875) + _2834) * _2848))) * _2848;
        float _4856 = isnan(0.0) ? _2885 : (isnan(_2885) ? 0.0 : max(_2885, 0.0));
        float _2887 = (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0))) * (_2857 / ((_2861 * _2861) * 3.141590118408203125));
        float _2888 = isnan(1.0) ? _2242 : (isnan(_2242) ? 1.0 : min(_2242, 1.0));
        _2804 = (((((_2868 * _2524) + _877) * cbLight._m0[_2819].x) * _2887) * _2888) + _2694;
        _2806 = (((((_2868 * _2526) + _878) * cbLight._m0[_2819].y) * _2887) * _2888) + _2696;
        _2808 = (((((_2868 * _2527) + _879) * cbLight._m0[_2819].z) * _2887) * _2888) + _2698;
    }
    float _2953;
    float _2955;
    float _2957;
    float _2959;
    float _2961;
    float _2963;
    if (_2224.y == 0u)
    {
        uvec4 _2909 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2910 = _2909.x;
        uint _2921 = uint((float(_2909.y) * floor(float(uint(cbSceneParam._m0[85u].y * _681) / _2910))) + floor(float(uint(cbSceneParam._m0[85u].x * _680) / _2910)));
        float _2931 = (log2(_2002 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2932 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0));
        uint _2935 = uint(isnan(14.0) ? _2932 : (isnan(_2932) ? 14.0 : min(_2932, 14.0)));
        uvec4 _2940 = texelFetch(g_lightClusterGridBuffer, int(((_2935 << 2u) + (_2921 << 6u)) >> 2u));
        uint _2941 = _2940.x;
        uint _2942 = _2909.z;
        float _3106;
        float _3108;
        float _3110;
        float _3112;
        float _3114;
        float _3116;
        if (((((1u << ((_2942 >> 4u) & 15u)) + 4294967295u) & _2941) == 0u) || ((_2942 & 240u) == 0u))
        {
            _3106 = 0.0;
            _3108 = 0.0;
            _3110 = 0.0;
            _3112 = 0.0;
            _3114 = 0.0;
            _3116 = 0.0;
        }
        else
        {
            float _3107;
            float _3109;
            float _3111;
            float _3113;
            float _3115;
            float _3117;
            float _3258 = 0.0;
            float _3259 = 0.0;
            float _3260 = 0.0;
            float _3261 = 0.0;
            float _3262 = 0.0;
            float _3263 = 0.0;
            uint _3264 = 0u;
            uint _3273;
            bool _3274;
            for (;;)
            {
                _3273 = texelFetch(g_lightClassification, int((((_2935 << 5u) + (_2921 << 9u)) + (_3264 << 2u)) >> 2u)).x;
                _3274 = _3273 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3274)
                {
                    frontier_phi_73_pred = _3263;
                    frontier_phi_73_pred_1 = _3262;
                    frontier_phi_73_pred_2 = _3261;
                    frontier_phi_73_pred_3 = _3260;
                    frontier_phi_73_pred_4 = _3259;
                    frontier_phi_73_pred_5 = _3258;
                }
                else
                {
                    float _3403;
                    float _3404;
                    float _3405;
                    float _3406;
                    float _3407;
                    float _3408;
                    uint _3409;
                    _3403 = _3258;
                    _3404 = _3259;
                    _3405 = _3260;
                    _3406 = _3261;
                    _3407 = _3262;
                    _3408 = _3263;
                    _3409 = _3273;
                    float _3330;
                    float _3331;
                    float _3332;
                    float _3333;
                    float _3334;
                    float _3335;
                    for (;;)
                    {
                        uint _3413 = uint(findLSB(_3409)) + (_3264 << 5u);
                        uint _3410 = (_3409 + 4294967295u) & _3409;
                        uint _3415 = _3413 * 48u;
                        vec4 _3429 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3415)).x, texelFetch(g_PointLightRenderingBuffer, int(_3415 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3415 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3415 + 3u)).x));
                        uint _3435 = (_3413 * 48u) + 4u;
                        vec4 _3448 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3435)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3435 + 3u)).x));
                        uint _3454 = (_3413 * 48u) + 8u;
                        vec3 _3465 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3454)).x, texelFetch(g_PointLightRenderingBuffer, int(_3454 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3454 + 2u)).x));
                        float _3469 = _3429.x - _2000;
                        float _3470 = _3429.y - _2001;
                        float _3471 = _3429.z - _2002;
                        float _3472 = dot(vec3(_3469, _3470, _3471), vec3(_3469, _3470, _3471));
                        float _3475 = inversesqrt(_3472);
                        float _3476 = _3475 * _3469;
                        float _3477 = _3475 * _3470;
                        float _3478 = _3475 * _3471;
                        float _3479 = dot(vec3(_703, _706, _709), vec3(_3476, _3477, _3478));
                        float _3484 = 1.0 - (_3472 * _3429.w);
                        float _4882 = isnan(0.0) ? _3484 : (isnan(_3484) ? 0.0 : max(_3484, 0.0));
                        float _3485 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
                        float _3486 = sqrt(_3472) * _3448.w;
                        float _3489 = 1.39999997615814208984375 / (_3486 + 1.39999997615814208984375);
                        float _3490 = _3489 * _3489;
                        float _3493 = ((1.0 - _3490) * _3479) + _3490;
                        float _3496 = _3486 * _3486;
                        float _3499 = ((isnan(0.0) ? _3493 : (isnan(_3493) ? 0.0 : max(_3493, 0.0))) * _3485) / ((_3496 * 0.699999988079071044921875) + 1.0);
                        float _3503 = (-0.0) - _2000;
                        float _3504 = (-0.0) - _2001;
                        float _3505 = (-0.0) - _2002;
                        float _3509 = inversesqrt(dot(vec3(_3503, _3504, _3505), vec3(_3503, _3504, _3505)));
                        float _3510 = _3509 * _3503;
                        float _3511 = _3509 * _3504;
                        float _3512 = _3509 * _3505;
                        float _3519 = exp2(log2(1.0 / ((_3496 * 3.5) + 5.0)) * 0.25);
                        float _3520 = 1.0 - _907;
                        float _3527 = sqrt(1.0 - ((1.0 - (_3520 * _3520)) * (1.0 - (_3519 * _3519))));
                        float _3528 = _3527 * _3527;
                        float _3529 = _3528 * _3528;
                        float _3530 = _3510 + _3476;
                        float _3531 = _3511 + _3477;
                        float _3532 = _3512 + _3478;
                        float _3536 = inversesqrt(dot(vec3(_3530, _3531, _3532), vec3(_3530, _3531, _3532)));
                        float _3540 = dot(vec3(_703, _706, _709), vec3(_3510, _3511, _3512));
                        float _4898 = isnan(0.0) ? _3540 : (isnan(_3540) ? 0.0 : max(_3540, 0.0));
                        float _3543 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
                        float _3544 = dot(vec3(_703, _706, _709), vec3(_3536 * _3530, _3536 * _3531, _3536 * _3532));
                        float _4909 = isnan(0.0) ? _3544 : (isnan(_3544) ? 0.0 : max(_3544, 0.0));
                        float _3547 = isnan(1.0) ? _4909 : (isnan(_4909) ? 1.0 : min(_4909, 1.0));
                        float _3551 = ((_3547 * _3547) * (_3529 + (-1.0))) + 1.0;
                        float _3552 = _3489 * _3528;
                        float _3553 = _3552 * _3552;
                        float _3556 = ((1.0 - _3553) * _3479) + _3553;
                        float _4920 = isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0));
                        float _3557 = isnan(1.0) ? _4920 : (isnan(_4920) ? 1.0 : min(_4920, 1.0));
                        float _3558 = 1.0 - _3528;
                        float _3568 = (0.5 / (((_3557 * ((_3543 * _3558) + _3528)) + 9.9999999392252902907785028219223e-09) + (((_3557 * _3558) + _3528) * _3543))) * _3557;
                        float _4931 = isnan(0.0) ? _3568 : (isnan(_3568) ? 0.0 : max(_3568, 0.0));
                        float _3579 = (((_3529 * 3.1415927410125732421875) * (isnan(1.0) ? _4931 : (isnan(_4931) ? 1.0 : min(_4931, 1.0)))) / ((_3551 * _3551) * ((_3496 * 2.1991131305694580078125) + 3.141590118408203125))) * _3485;
                        _3333 = (_3499 * _3448.x) + _3406;
                        _3334 = (_3499 * _3448.y) + _3407;
                        _3335 = (_3499 * _3448.z) + _3408;
                        _3330 = (_3579 * _3465.x) + _3403;
                        _3331 = (_3579 * _3465.y) + _3404;
                        _3332 = (_3579 * _3465.z) + _3405;
                        if (_3410 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3403 = _3330;
                            _3404 = _3331;
                            _3405 = _3332;
                            _3406 = _3333;
                            _3407 = _3334;
                            _3408 = _3335;
                            _3409 = _3410;
                        }
                    }
                    frontier_phi_73_pred = _3335;
                    frontier_phi_73_pred_1 = _3334;
                    frontier_phi_73_pred_2 = _3333;
                    frontier_phi_73_pred_3 = _3332;
                    frontier_phi_73_pred_4 = _3331;
                    frontier_phi_73_pred_5 = _3330;
                }
                _3117 = frontier_phi_73_pred;
                _3115 = frontier_phi_73_pred_1;
                _3113 = frontier_phi_73_pred_2;
                _3111 = frontier_phi_73_pred_3;
                _3109 = frontier_phi_73_pred_4;
                _3107 = frontier_phi_73_pred_5;
                uint _3265 = _3264 + 1u;
                if (_3265 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3258 = _3107;
                    _3259 = _3109;
                    _3260 = _3111;
                    _3261 = _3113;
                    _3262 = _3115;
                    _3263 = _3117;
                    _3264 = _3265;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3106 = _3107;
            _3108 = _3109;
            _3110 = _3111;
            _3112 = _3113;
            _3114 = _3115;
            _3116 = _3117;
        }
        uvec4 _3120 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3121 = _3120.z;
        uint _3123 = (_3121 >> 8u) & 15u;
        float _3226;
        float _3228;
        float _3230;
        float _3232;
        float _3234;
        float _3236;
        if (((4294967295u << _3123) & _2941) == 0u)
        {
            _3226 = _3106;
            _3228 = _3108;
            _3230 = _3110;
            _3232 = _3112;
            _3234 = _3114;
            _3236 = _3116;
        }
        else
        {
            float _3251 = inversesqrt(dot(vec3(_2000, _2001, _2002), vec3(_2000, _2001, _2002)));
            float _3252 = _3251 * _2000;
            float _3253 = _3251 * _2001;
            float _3254 = _3251 * _2002;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3123 < ((_3121 >> 12u) & 15u))
            {
                float _3227;
                float _3229;
                float _3231;
                float _3233;
                float _3235;
                float _3237;
                float _3386 = _3106;
                float _3387 = _3108;
                float _3388 = _3110;
                float _3389 = _3112;
                float _3390 = _3114;
                float _3391 = _3116;
                uint _3392 = _3123;
                uint _3401;
                bool _3402;
                for (;;)
                {
                    _3401 = texelFetch(g_lightClassification, int((((_2935 << 5u) + (_2921 << 9u)) + (_3392 << 2u)) >> 2u)).x;
                    _3402 = _3401 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3402)
                    {
                        frontier_phi_84_pred = _3390;
                        frontier_phi_84_pred_1 = _3389;
                        frontier_phi_84_pred_2 = _3388;
                        frontier_phi_84_pred_3 = _3387;
                        frontier_phi_84_pred_4 = _3386;
                        frontier_phi_84_pred_5 = _3391;
                    }
                    else
                    {
                        float _3593;
                        float _3594;
                        float _3595;
                        float _3596;
                        float _3597;
                        float _3598;
                        float _3888;
                        float _3889;
                        float _3890;
                        float _3891;
                        float _3892;
                        float _3893;
                        float _3606 = _3386;
                        float _3607 = _3387;
                        float _3608 = _3388;
                        float _3609 = _3389;
                        float _3610 = _3390;
                        float _3611 = _3391;
                        uint _3612 = _3401;
                        uint _3613;
                        vec4 _3638;
                        float _3639;
                        vec4 _3654;
                        vec3 _3666;
                        vec4 _3681;
                        vec4 _3697;
                        float _3744;
                        bool _3745;
                        for (;;)
                        {
                            uint _3623 = ((_3392 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3612));
                            _3613 = (_3612 + 4294967295u) & _3612;
                            uint _3625 = _3623 * 40u;
                            _3638 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3625)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3625 + 3u)).x));
                            _3639 = _3638.w;
                            uint _3641 = (_3623 * 40u) + 4u;
                            _3654 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3641)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3641 + 3u)).x));
                            uint _3656 = (_3623 * 40u) + 8u;
                            _3666 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3656)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3656 + 2u)).x));
                            uint _3668 = (_3623 * 40u) + 16u;
                            _3681 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3668)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 3u)).x));
                            uint _3684 = (_3623 * 40u) + 20u;
                            _3697 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3684)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3684 + 3u)).x));
                            uint _3700 = (_3623 * 40u) + 24u;
                            vec4 _3713 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3700)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3700 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3700 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3700 + 3u)).x));
                            uint _3719 = (_3623 * 40u) + 28u;
                            vec4 _3732 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3719)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3719 + 3u)).x));
                            _3744 = fma(_2002, _3732.z, fma(_2001, _3732.y, _3732.x * _2000)) + _3732.w;
                            _3745 = !((fma(_2002, _3713.z, fma(_2001, _3713.y, _3713.x * _2000)) + _3713.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3745)
                            {
                                float _3772 = _3638.x - _2000;
                                float _3773 = _3638.y - _2001;
                                float _3774 = _3638.z - _2002;
                                float _3775 = dot(vec3(_3772, _3773, _3774), vec3(_3772, _3773, _3774));
                                float _3778 = inversesqrt(_3775);
                                float _3779 = _3778 * _3772;
                                float _3780 = _3778 * _3773;
                                float _3781 = _3778 * _3774;
                                float _3785 = 1.0 - (_3775 / (_3639 * _3639));
                                float _4942 = isnan(0.0) ? _3785 : (isnan(_3785) ? 0.0 : max(_3785, 0.0));
                                float _3786 = isnan(1.0) ? _4942 : (isnan(_4942) ? 1.0 : min(_4942, 1.0));
                                float _3790 = sqrt(_3775) * _3654.w;
                                float _3792 = 1.39999997615814208984375 / (_3790 + 1.39999997615814208984375);
                                float _3793 = _3792 * _3792;
                                float _3796 = ((1.0 - _3793) * dot(vec3(_3779, _3780, _3781), vec3(_703, _706, _709))) + _3793;
                                float _3799 = _3790 * _3790;
                                float _3803 = (fma(_2002, _3681.z, fma(_2001, _3681.y, _3681.x * _2000)) + _3681.w) / _3744;
                                float _3804 = (fma(_2002, _3697.z, fma(_2001, _3697.y, _3697.x * _2000)) + _3697.w) / _3744;
                                float _3808 = 1.0 - dot(vec2(_3803, _3804), vec2(_3803, _3804));
                                float _4958 = isnan(0.0) ? _3808 : (isnan(_3808) ? 0.0 : max(_3808, 0.0));
                                float _3809 = isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0));
                                float _3810 = _3809 * (((isnan(0.0) ? _3796 : (isnan(_3796) ? 0.0 : max(_3796, 0.0))) * _3786) / ((_3799 * 0.699999988079071044921875) + 1.0));
                                float _3822 = exp2(log2(1.0 / ((_3799 * 3.5) + 5.0)) * 0.25);
                                float _3823 = 1.0 - _907;
                                float _3830 = sqrt(1.0 - ((1.0 - (_3823 * _3823)) * (1.0 - (_3822 * _3822))));
                                float _3831 = _3830 * _3830;
                                float _3832 = _3831 * _3831;
                                float _3833 = _3779 - _3252;
                                float _3834 = _3780 - _3253;
                                float _3835 = _3781 - _3254;
                                float _3839 = inversesqrt(dot(vec3(_3833, _3834, _3835), vec3(_3833, _3834, _3835)));
                                float _3843 = dot(vec3(_703, _706, _709), vec3((-0.0) - _3252, (-0.0) - _3253, (-0.0) - _3254));
                                float _4969 = isnan(0.0) ? _3843 : (isnan(_3843) ? 0.0 : max(_3843, 0.0));
                                float _3846 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
                                float _3847 = dot(vec3(_703, _706, _709), vec3(_3839 * _3833, _3839 * _3834, _3839 * _3835));
                                float _4980 = isnan(0.0) ? _3847 : (isnan(_3847) ? 0.0 : max(_3847, 0.0));
                                float _3850 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                                float _3854 = ((_3850 * _3850) * (_3832 + (-1.0))) + 1.0;
                                float _3855 = _3792 * _3831;
                                float _3856 = _3855 * _3855;
                                float _3862 = ((1.0 - _3856) * dot(vec3(_703, _706, _709), vec3(_3779, _3780, _3781))) + _3856;
                                float _4991 = isnan(0.0) ? _3862 : (isnan(_3862) ? 0.0 : max(_3862, 0.0));
                                float _3863 = isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0));
                                float _3864 = 1.0 - _3831;
                                float _3874 = (0.5 / (((_3863 * ((_3846 * _3864) + _3831)) + 9.9999999392252902907785028219223e-09) + (((_3863 * _3864) + _3831) * _3846))) * _3863;
                                float _5002 = isnan(0.0) ? _3874 : (isnan(_3874) ? 0.0 : max(_3874, 0.0));
                                float _3884 = (_3809 * _3786) * (((_3832 * 3.1415927410125732421875) * (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0)))) / ((_3854 * _3854) * ((_3799 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3810 * _3654.y;
                                frontier_phi_90_pred_1 = _3810 * _3654.x;
                                frontier_phi_90_pred_2 = _3884 * _3666.z;
                                frontier_phi_90_pred_3 = _3884 * _3666.y;
                                frontier_phi_90_pred_4 = _3884 * _3666.x;
                                frontier_phi_90_pred_5 = _3810 * _3654.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3892 = frontier_phi_90_pred;
                            _3891 = frontier_phi_90_pred_1;
                            _3890 = frontier_phi_90_pred_2;
                            _3889 = frontier_phi_90_pred_3;
                            _3888 = frontier_phi_90_pred_4;
                            _3893 = frontier_phi_90_pred_5;
                            _3596 = _3891 + _3609;
                            _3597 = _3892 + _3610;
                            _3598 = _3893 + _3611;
                            _3593 = _3888 + _3606;
                            _3594 = _3889 + _3607;
                            _3595 = _3890 + _3608;
                            if (_3613 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3606 = _3593;
                                _3607 = _3594;
                                _3608 = _3595;
                                _3609 = _3596;
                                _3610 = _3597;
                                _3611 = _3598;
                                _3612 = _3613;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3597;
                        frontier_phi_84_pred_1 = _3596;
                        frontier_phi_84_pred_2 = _3595;
                        frontier_phi_84_pred_3 = _3594;
                        frontier_phi_84_pred_4 = _3593;
                        frontier_phi_84_pred_5 = _3598;
                    }
                    _3235 = frontier_phi_84_pred;
                    _3233 = frontier_phi_84_pred_1;
                    _3231 = frontier_phi_84_pred_2;
                    _3229 = frontier_phi_84_pred_3;
                    _3227 = frontier_phi_84_pred_4;
                    _3237 = frontier_phi_84_pred_5;
                    uint _3393 = _3392 + 1u;
                    if (_3393 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3386 = _3227;
                        _3387 = _3229;
                        _3388 = _3231;
                        _3389 = _3233;
                        _3390 = _3235;
                        _3391 = _3237;
                        _3392 = _3393;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3237;
                frontier_phi_65_66_ladder_1 = _3233;
                frontier_phi_65_66_ladder_2 = _3235;
                frontier_phi_65_66_ladder_3 = _3229;
                frontier_phi_65_66_ladder_4 = _3227;
                frontier_phi_65_66_ladder_5 = _3231;
            }
            else
            {
                frontier_phi_65_66_ladder = _3116;
                frontier_phi_65_66_ladder_1 = _3112;
                frontier_phi_65_66_ladder_2 = _3114;
                frontier_phi_65_66_ladder_3 = _3108;
                frontier_phi_65_66_ladder_4 = _3106;
                frontier_phi_65_66_ladder_5 = _3110;
            }
            _3226 = frontier_phi_65_66_ladder_4;
            _3228 = frontier_phi_65_66_ladder_3;
            _3230 = frontier_phi_65_66_ladder_5;
            _3232 = frontier_phi_65_66_ladder_1;
            _3234 = frontier_phi_65_66_ladder_2;
            _3236 = frontier_phi_65_66_ladder;
        }
        float _3241 = isnan(1.0) ? _891 : (isnan(_891) ? 1.0 : min(_891, 1.0));
        _2953 = (_3241 * _3232) + _2466;
        _2955 = (_3241 * _3234) + _2468;
        _2957 = (_3241 * _3236) + _2470;
        _2959 = ((_3226 * _877) * _3241) + _2804;
        _2961 = ((_3228 * _878) * _3241) + _2806;
        _2963 = ((_3230 * _879) * _3241) + _2808;
    }
    else
    {
        _2953 = _2466;
        _2955 = _2468;
        _2957 = _2470;
        _2959 = _2804;
        _2961 = _2806;
        _2963 = _2808;
    }
    float _2970 = (_867 * _856) * cbMatDynParam._m0[9u].x;
    float _2971 = (_867 * _857) * cbMatDynParam._m0[9u].y;
    float _2972 = (_867 * _858) * cbMatDynParam._m0[9u].z;
    float _2983 = dot(vec3(_579, _580, _581), vec3(0.0, -1.0, 0.0));
    float _5018 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
    float _2986 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
    float _2990 = dot(vec3(_899, _900, _901), vec3(0.0, -1.0, 0.0));
    float _5029 = isnan(0.0) ? _2990 : (isnan(_2990) ? 0.0 : max(_2990, 0.0));
    float _2996 = exp2(log2(isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0))) * 4.0);
    float _5040 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
    float _5051 = isnan(0.0) ? _2971 : (isnan(_2971) ? 0.0 : max(_2971, 0.0));
    float _5062 = isnan(0.0) ? _2972 : (isnan(_2972) ? 0.0 : max(_2972, 0.0));
    float _5073 = isnan(0.0) ? _582 : (isnan(_582) ? 0.0 : max(_582, 0.0));
    float _3041 = abs(exp2(log2(_892) * cbMatDynParam._m0[12u].x));
    float _3042 = isnan(0.100000001490116119384765625) ? _3041 : (isnan(_3041) ? 0.100000001490116119384765625 : max(_3041, 0.100000001490116119384765625));
    float _3048 = ((isnan(0.699999988079071044921875) ? _3042 : (isnan(_3042) ? 0.699999988079071044921875 : min(_3042, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _3058 = ((((cbMatDynParam._m0[10u].x * cbPerFrame._m0[3u].x) * ((_2959 + ((isnan(0.0) ? _1947 : (isnan(_1947) ? 0.0 : max(_1947, 0.0))) * _1730)) + (_2996 * cbMatDynParam._m0[11u].x))) + ((isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0))) * ((_2953 + ((isnan(0.0) ? _1654 : (isnan(_1654) ? 0.0 : max(_1654, 0.0))) * _891)) + (_2986 * cbMatDynParam._m0[11u].x)))) + cbMatDynParam._m0[7u].x) + (_3048 * (cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x));
    float _3061 = ((((cbMatDynParam._m0[10u].y * cbPerFrame._m0[3u].x) * ((_2961 + ((isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) * _1730)) + (_2996 * cbMatDynParam._m0[11u].y))) + ((isnan(1.0) ? _5051 : (isnan(_5051) ? 1.0 : min(_5051, 1.0))) * ((_2955 + ((isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0))) * _891)) + (_2986 * cbMatDynParam._m0[11u].y)))) + cbMatDynParam._m0[7u].y) + (_3048 * (cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y));
    float _3064 = ((((cbMatDynParam._m0[10u].z * cbPerFrame._m0[3u].x) * ((_2963 + ((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1730)) + (_2996 * cbMatDynParam._m0[11u].z))) + ((isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0))) * ((_2957 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _891)) + (_2986 * cbMatDynParam._m0[11u].z)))) + cbMatDynParam._m0[7u].z) + (_3048 * (cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z));
    float _3065 = isnan(0.0) ? _3058 : (isnan(_3058) ? 0.0 : max(_3058, 0.0));
    float _3066 = isnan(0.0) ? _3061 : (isnan(_3061) ? 0.0 : max(_3061, 0.0));
    float _3067 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
    float _3072 = cbInstanceData._m0[_783 + 6u].w * (isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0)));
    float _3077 = _680 / cbSceneParam._m0[86u].x;
    float _3078 = _681 / cbSceneParam._m0[86u].y;
    vec4 _3092 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3077, _3078, (log2((isnan(cbSceneParam._m0[77u].w) ? _603 : (isnan(_603) ? cbSceneParam._m0[77u].w : min(_603, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3094 = _3092.x;
    float _3095 = _3092.y;
    float _3096 = _3092.z;
    float _3097 = _3092.w;
    float _3168;
    float _3170;
    float _3172;
    float _3174;
    if (_603 > cbSceneParam._m0[78u].w)
    {
        float _3131 = isnan(_603) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _603 : min(cbSceneParam._m0[80u].w, _603));
        float _3132 = _3131 / _603;
        float _3143 = _3132 * _653;
        float _3144 = _654 * _3132;
        float _3145 = (-0.0) - _3144;
        float _3146 = _3132 * _655;
        float _3148 = (cbSceneParam._m0[77u].w * _3145) / _3131;
        float _3149 = _3148 + cbSceneParam._m0[79u].w;
        float _3150 = cbSceneParam._m0[79u].w - _3144;
        float _3156 = sqrt(((_3143 * _3143) + (_3144 * _3144)) + (_3146 * _3146));
        float _3159 = (1.0 - (cbSceneParam._m0[77u].w / _3131)) * _3156;
        float _3164 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3166 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3343;
        if (abs((_3145 - _3148) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3343 = ((((_3149 > 0.0) ? exp2(_3164 * _3149) : (2.0 - exp2(_3166 * _3149))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3159;
        }
        else
        {
            float _3287 = 1.0 / cbSceneParam._m0[80u].x;
            float _3288 = isnan(_3150) ? _3149 : (isnan(_3149) ? _3150 : max(_3149, _3150));
            float _3289 = isnan(_3150) ? _3149 : (isnan(_3149) ? _3150 : min(_3149, _3150));
            float _3298 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : min(_3288, 0.0));
            float _3299 = isnan(0.0) ? _3289 : (isnan(_3289) ? 0.0 : min(_3289, 0.0));
            _3343 = ((abs(_3156 / _3145) * cbSceneParam._m0[80u].y) * ((((_3298 - _3299) * 2.0) - ((exp2(_3164 * (isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0)))) - exp2(_3164 * (isnan(0.0) ? _3289 : (isnan(_3289) ? 0.0 : max(_3289, 0.0))))) * _3287)) - ((exp2(_3166 * _3298) - exp2(_3166 * _3299)) * _3287))) + (_3159 * cbSceneParam._m0[80u].z);
        }
        vec4 _3345 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3077, _3078, 1.0), 0.0);
        float _3354 = exp2((_3343 * (-1.44269502162933349609375)) * (1.0 - _3345.w));
        float _3355 = log2(_3354);
        float _3371 = log2(_3097);
        _3168 = (exp2(_3371 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3355 * cbSceneParam._m0[78u].x)) * _3345.x) / cbSceneParam._m0[78u].x)) + _3094;
        _3170 = (exp2(_3371 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3355 * cbSceneParam._m0[78u].y)) * _3345.y) / cbSceneParam._m0[78u].y)) + _3095;
        _3172 = (exp2(_3371 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3355 * cbSceneParam._m0[78u].z)) * _3345.z) / cbSceneParam._m0[78u].z)) + _3096;
        _3174 = _3354 * _3097;
    }
    else
    {
        _3168 = _3094;
        _3170 = _3095;
        _3172 = _3096;
        _3174 = _3097;
    }
    bool _3381;
    vec4 _3184;
    vec4 _3206;
    float _3208;
    float _3212;
    float _3213;
    float _3214;
    float _3215;
    bool _3225;
    for (;;)
    {
        _3184 = cbMatDynParam._m0[0u];
        float _3186 = roundEven(_3184.y);
        bool _3187 = _3186 == 3.0;
        float _3188 = log2(_3174);
        float _3195 = exp2(_3188 * cbSceneParam._m0[78u].x) * _3065;
        float _3196 = exp2(_3188 * cbSceneParam._m0[78u].y) * _3066;
        float _3197 = exp2(_3188 * cbSceneParam._m0[78u].z) * _3067;
        float _3204 = _669 + (-0.5);
        _3206 = cbMtdParam._m0[1u];
        _3208 = _3206.y * _3204;
        float _3211 = (_3186 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3212 = _3211 * (_3187 ? _3195 : (_3195 + (cbSceneParam._m0[72u].w * _3168)));
        _3213 = _3211 * (_3187 ? _3196 : (_3196 + (cbSceneParam._m0[72u].w * _3170)));
        _3214 = _3211 * (_3187 ? _3197 : (_3197 + (cbSceneParam._m0[72u].w * _3172)));
        _3215 = _3204 * 0.999000012874603271484375;
        _3225 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3225)
        {
            if ((cbInstanceData._m0[_783 + 7u].x + _3215) < 0.5)
            {
                _3381 = true;
                break;
            }
        }
        uint _3322 = _784 + uint(_3184.w);
        if ((cbInstanceData._m0[_3322].w < 1.0) && ((cbInstanceData._m0[_3322].w + _3215) < 0.5))
        {
            _3381 = true;
            break;
        }
        if ((_3208 + _391) < _3206.x)
        {
            _3381 = true;
            break;
        }
        _3381 = false;
        break;
    }
    float _3584;
    if (_3381)
    {
        discard_state = true;
        _3584 = 0.0;
    }
    else
    {
        _3584 = _3072;
    }
    SV_Target.x = _3212;
    SV_Target.y = _3213;
    SV_Target.z = _3214;
    SV_Target.w = _3584;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3072;
    discard_exit();
}


