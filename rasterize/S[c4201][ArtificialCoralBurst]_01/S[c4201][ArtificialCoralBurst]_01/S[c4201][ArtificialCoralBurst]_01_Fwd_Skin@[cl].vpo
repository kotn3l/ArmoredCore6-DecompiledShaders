#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    precise float _179 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _181 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _186 = _179 * cbTexScroll._m0[0u].x;
    precise float _187 = _181 * cbTexScroll._m0[0u].y;
    precise float _190 = _186 + cbTexScroll._m0[0u].z;
    precise float _191 = _187 + cbTexScroll._m0[0u].w;
    precise float _195 = float(NORMAL.x) + (-127.0);
    precise float _197 = float(NORMAL.y) + (-127.0);
    precise float _198 = float(NORMAL.z) + (-127.0);
    precise float _199 = _195 * 0.0078740157186985015869140625;
    precise float _201 = _197 * 0.0078740157186985015869140625;
    precise float _202 = _198 * 0.0078740157186985015869140625;
    float _211 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _212 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _213 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _223 = cbPerFrame._m0[22u].x * cbMtdParam._m0[18u].w;
    precise float _229 = _223 * cbMtdParam._m0[19u].z;
    precise float _230 = _223 * cbMtdParam._m0[19u].w;
    precise float _231 = _190 + _229;
    precise float _232 = _191 + _230;
    precise float _239 = _231 * cbTextureTilingScale._m0[0u].x;
    precise float _240 = cbTextureTilingScale._m0[0u].y * _232;
    precise float _241 = cbTextureTilingScale._m0[0u].z + _239;
    precise float _242 = cbTextureTilingScale._m0[0u].w + _240;
    precise float _253 = textureLod(sampler2D(S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2(_241, _242), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _259 = _199 * cbMtdParam._m0[23u].x;
    precise float _260 = _201 * cbMtdParam._m0[23u].y;
    precise float _261 = _202 * cbMtdParam._m0[23u].z;
    precise float _262 = _253 * _259;
    precise float _263 = _253 * _260;
    precise float _264 = _253 * _261;
    precise float _265 = _259 + _262;
    precise float _266 = _260 + _263;
    precise float _267 = _261 + _264;
    precise float _268 = _259 * 0.0;
    precise float _269 = _260 * 0.0;
    precise float _270 = _261 * 0.0;
    precise float _271 = _268 + _265;
    precise float _272 = _269 + _266;
    precise float _273 = _270 + _267;
    precise float _274 = POSITION.x + _271;
    precise float _275 = POSITION.y + _272;
    precise float _276 = POSITION.z + _273;
    uint _281 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _283 = texelFetch(g_InstanceIndexBuffer, int(_281));
    uint _284 = _283.x;
    precise float _285 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _290 = isnan(_285) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _285 : max(0.001000000047497451305389404296875, _285));
    precise float _292 = BLENDWEIGHT.x / _290;
    precise float _293 = BLENDWEIGHT.y / _290;
    precise float _294 = BLENDWEIGHT.z / _290;
    precise float _295 = BLENDWEIGHT.w / _290;
    uvec4 _302 = floatBitsToUint(cbInstanceData._m0[(_284 * 13u) + 4u]);
    uint _303 = _302.x;
    uint _305 = (_303 + uint(float(BLENDINDICES.x))) * 3u;
    uint _312 = _305 + 1u;
    uint _319 = _305 + 2u;
    precise float _326 = _292 * cbObjMatrix._m0[_305].x;
    precise float _327 = _292 * cbObjMatrix._m0[_312].x;
    precise float _328 = _292 * cbObjMatrix._m0[_319].x;
    precise float _329 = _292 * cbObjMatrix._m0[_305].y;
    precise float _330 = _292 * cbObjMatrix._m0[_312].y;
    precise float _331 = _292 * cbObjMatrix._m0[_319].y;
    precise float _332 = _292 * cbObjMatrix._m0[_305].z;
    precise float _333 = _292 * cbObjMatrix._m0[_312].z;
    precise float _334 = _292 * cbObjMatrix._m0[_319].z;
    precise float _335 = _292 * cbObjMatrix._m0[_305].w;
    precise float _336 = _292 * cbObjMatrix._m0[_312].w;
    precise float _337 = _292 * cbObjMatrix._m0[_319].w;
    uint _340 = (_303 + uint(float(BLENDINDICES.y))) * 3u;
    uint _347 = _340 + 1u;
    uint _354 = _340 + 2u;
    precise float _361 = _293 * cbObjMatrix._m0[_340].x;
    precise float _362 = _293 * cbObjMatrix._m0[_347].x;
    precise float _363 = _293 * cbObjMatrix._m0[_354].x;
    precise float _364 = _293 * cbObjMatrix._m0[_340].y;
    precise float _365 = _293 * cbObjMatrix._m0[_347].y;
    precise float _366 = _293 * cbObjMatrix._m0[_354].y;
    precise float _367 = _293 * cbObjMatrix._m0[_340].z;
    precise float _368 = _293 * cbObjMatrix._m0[_347].z;
    precise float _369 = _293 * cbObjMatrix._m0[_354].z;
    precise float _370 = _293 * cbObjMatrix._m0[_340].w;
    precise float _371 = _293 * cbObjMatrix._m0[_347].w;
    precise float _372 = _293 * cbObjMatrix._m0[_354].w;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    uint _387 = (_303 + uint(float(BLENDINDICES.z))) * 3u;
    uint _394 = _387 + 1u;
    uint _401 = _387 + 2u;
    precise float _408 = _294 * cbObjMatrix._m0[_387].x;
    precise float _409 = _294 * cbObjMatrix._m0[_394].x;
    precise float _410 = _294 * cbObjMatrix._m0[_401].x;
    precise float _411 = _294 * cbObjMatrix._m0[_387].y;
    precise float _412 = _294 * cbObjMatrix._m0[_394].y;
    precise float _413 = _294 * cbObjMatrix._m0[_401].y;
    precise float _414 = _294 * cbObjMatrix._m0[_387].z;
    precise float _415 = _294 * cbObjMatrix._m0[_394].z;
    precise float _416 = _294 * cbObjMatrix._m0[_401].z;
    precise float _417 = _294 * cbObjMatrix._m0[_387].w;
    precise float _418 = _294 * cbObjMatrix._m0[_394].w;
    precise float _419 = _294 * cbObjMatrix._m0[_401].w;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    uint _434 = (_303 + uint(float(BLENDINDICES.w))) * 3u;
    uint _441 = _434 + 1u;
    uint _448 = _434 + 2u;
    precise float _455 = _295 * cbObjMatrix._m0[_434].x;
    precise float _456 = _295 * cbObjMatrix._m0[_441].x;
    precise float _457 = _295 * cbObjMatrix._m0[_448].x;
    precise float _458 = _295 * cbObjMatrix._m0[_434].y;
    precise float _459 = _295 * cbObjMatrix._m0[_441].y;
    precise float _460 = _295 * cbObjMatrix._m0[_448].y;
    precise float _461 = _295 * cbObjMatrix._m0[_434].z;
    precise float _462 = _295 * cbObjMatrix._m0[_441].z;
    precise float _463 = _295 * cbObjMatrix._m0[_448].z;
    precise float _464 = _295 * cbObjMatrix._m0[_434].w;
    precise float _465 = _295 * cbObjMatrix._m0[_441].w;
    precise float _466 = _295 * cbObjMatrix._m0[_448].w;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _274 * _467;
    precise float _480 = _275 * _470;
    precise float _481 = _480 + _479;
    precise float _482 = _276 * _473;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * _476;
    precise float _485 = _484 + _483;
    precise float _486 = _274 * _468;
    precise float _487 = _275 * _471;
    precise float _488 = _487 + _486;
    precise float _489 = _276 * _474;
    precise float _490 = _489 + _488;
    precise float _491 = 1.0 * _477;
    precise float _492 = _491 + _490;
    precise float _493 = _274 * _469;
    precise float _494 = _275 * _472;
    precise float _495 = _494 + _493;
    precise float _496 = _276 * _475;
    precise float _497 = _496 + _495;
    precise float _498 = 1.0 * _478;
    precise float _499 = _498 + _497;
    precise float _519 = _485 + 0.0;
    precise float _520 = _492 + 0.0;
    precise float _521 = _499 + 0.0;
    precise float _527 = _519 - cbSceneParam._m0[3u].x;
    precise float _528 = _520 - cbSceneParam._m0[3u].y;
    precise float _529 = _521 - cbSceneParam._m0[3u].z;
    precise float _555 = _527 * cbSceneParam._m0[24u].x;
    precise float _556 = _528 * cbSceneParam._m0[24u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _529 * cbSceneParam._m0[24u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _561 = _560 + _559;
    precise float _562 = _527 * cbSceneParam._m0[25u].x;
    precise float _563 = _528 * cbSceneParam._m0[25u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _529 * cbSceneParam._m0[25u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _568 = _567 + _566;
    precise float _569 = _527 * cbSceneParam._m0[26u].x;
    precise float _570 = _528 * cbSceneParam._m0[26u].y;
    precise float _571 = _570 + _569;
    precise float _572 = _529 * cbSceneParam._m0[26u].z;
    precise float _573 = _572 + _571;
    precise float _574 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _575 = _574 + _573;
    precise float _576 = _527 * cbSceneParam._m0[27u].x;
    precise float _577 = _528 * cbSceneParam._m0[27u].y;
    precise float _578 = _577 + _576;
    precise float _579 = _529 * cbSceneParam._m0[27u].z;
    precise float _580 = _579 + _578;
    precise float _581 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _582 = _581 + _580;
    gl_Position.x = _561;
    gl_Position.y = _568;
    gl_Position.z = _575;
    gl_Position.w = _582;
    POSITION_1.x = _561;
    POSITION_1.y = _568;
    POSITION_1.z = _575;
    POSITION_1.w = _582;
    NORMAL_1.x = fma(_202, _473, fma(_201, _470, _467 * _199));
    NORMAL_1.y = fma(_202, _474, fma(_201, _471, _468 * _199));
    NORMAL_1.z = fma(_202, _475, fma(_201, _472, _469 * _199));
    NORMAL_1.w = float(_284);
    TANGENT_1.x = fma(_213, _473, fma(_212, _470, _467 * _211));
    TANGENT_1.y = fma(_213, _474, fma(_212, _471, _468 * _211));
    TANGENT_1.z = fma(_213, _475, fma(_212, _472, _469 * _211));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _190;
    TEXCOORD_1_1.y = _191;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
}


