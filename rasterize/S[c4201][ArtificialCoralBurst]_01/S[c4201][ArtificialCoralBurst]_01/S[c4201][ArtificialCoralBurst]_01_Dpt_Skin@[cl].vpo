#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    precise float _136 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _138 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _143 = _136 * cbTexScroll._m0[0u].x;
    precise float _144 = _138 * cbTexScroll._m0[0u].y;
    precise float _147 = _143 + cbTexScroll._m0[0u].z;
    precise float _148 = _144 + cbTexScroll._m0[0u].w;
    precise float _152 = float(NORMAL.x) + (-127.0);
    precise float _154 = float(NORMAL.y) + (-127.0);
    precise float _155 = float(NORMAL.z) + (-127.0);
    precise float _156 = _152 * 0.0078740157186985015869140625;
    precise float _158 = _154 * 0.0078740157186985015869140625;
    precise float _159 = _155 * 0.0078740157186985015869140625;
    precise float _168 = cbPerFrame._m0[22u].x * cbMtdParam._m0[18u].w;
    precise float _174 = _168 * cbMtdParam._m0[19u].z;
    precise float _175 = _168 * cbMtdParam._m0[19u].w;
    precise float _176 = _147 + _174;
    precise float _177 = _148 + _175;
    precise float _184 = _176 * cbTextureTilingScale._m0[0u].x;
    precise float _185 = cbTextureTilingScale._m0[0u].y * _177;
    precise float _186 = cbTextureTilingScale._m0[0u].z + _184;
    precise float _187 = cbTextureTilingScale._m0[0u].w + _185;
    precise float _198 = textureLod(sampler2D(S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2(_186, _187), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _204 = _156 * cbMtdParam._m0[23u].x;
    precise float _205 = _158 * cbMtdParam._m0[23u].y;
    precise float _206 = _159 * cbMtdParam._m0[23u].z;
    precise float _207 = _198 * _204;
    precise float _208 = _198 * _205;
    precise float _209 = _198 * _206;
    precise float _210 = _204 + _207;
    precise float _211 = _205 + _208;
    precise float _212 = _206 + _209;
    precise float _213 = _204 * 0.0;
    precise float _214 = _205 * 0.0;
    precise float _215 = _206 * 0.0;
    precise float _216 = _213 + _210;
    precise float _217 = _214 + _211;
    precise float _218 = _215 + _212;
    precise float _219 = POSITION.x + _216;
    precise float _220 = POSITION.y + _217;
    precise float _221 = POSITION.z + _218;
    uint _226 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _230 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _235 = isnan(_230) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _230 : max(0.001000000047497451305389404296875, _230));
    precise float _237 = BLENDWEIGHT.x / _235;
    precise float _238 = BLENDWEIGHT.y / _235;
    precise float _239 = BLENDWEIGHT.z / _235;
    precise float _240 = BLENDWEIGHT.w / _235;
    uvec4 _247 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_226)).x * 13u) + 4u]);
    uint _248 = _247.x;
    uint _250 = (_248 + uint(float(BLENDINDICES.x))) * 3u;
    uint _257 = _250 + 1u;
    uint _264 = _250 + 2u;
    precise float _271 = _237 * cbObjMatrix._m0[_250].x;
    precise float _272 = _237 * cbObjMatrix._m0[_257].x;
    precise float _273 = _237 * cbObjMatrix._m0[_264].x;
    precise float _274 = _237 * cbObjMatrix._m0[_250].y;
    precise float _275 = _237 * cbObjMatrix._m0[_257].y;
    precise float _276 = _237 * cbObjMatrix._m0[_264].y;
    precise float _277 = _237 * cbObjMatrix._m0[_250].z;
    precise float _278 = _237 * cbObjMatrix._m0[_257].z;
    precise float _279 = _237 * cbObjMatrix._m0[_264].z;
    precise float _280 = _237 * cbObjMatrix._m0[_250].w;
    precise float _281 = _237 * cbObjMatrix._m0[_257].w;
    precise float _282 = _237 * cbObjMatrix._m0[_264].w;
    uint _285 = (_248 + uint(float(BLENDINDICES.y))) * 3u;
    uint _292 = _285 + 1u;
    uint _299 = _285 + 2u;
    precise float _306 = _238 * cbObjMatrix._m0[_285].x;
    precise float _307 = _238 * cbObjMatrix._m0[_292].x;
    precise float _308 = _238 * cbObjMatrix._m0[_299].x;
    precise float _309 = _238 * cbObjMatrix._m0[_285].y;
    precise float _310 = _238 * cbObjMatrix._m0[_292].y;
    precise float _311 = _238 * cbObjMatrix._m0[_299].y;
    precise float _312 = _238 * cbObjMatrix._m0[_285].z;
    precise float _313 = _238 * cbObjMatrix._m0[_292].z;
    precise float _314 = _238 * cbObjMatrix._m0[_299].z;
    precise float _315 = _238 * cbObjMatrix._m0[_285].w;
    precise float _316 = _238 * cbObjMatrix._m0[_292].w;
    precise float _317 = _238 * cbObjMatrix._m0[_299].w;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    uint _332 = (_248 + uint(float(BLENDINDICES.z))) * 3u;
    uint _339 = _332 + 1u;
    uint _346 = _332 + 2u;
    precise float _353 = _239 * cbObjMatrix._m0[_332].x;
    precise float _354 = _239 * cbObjMatrix._m0[_339].x;
    precise float _355 = _239 * cbObjMatrix._m0[_346].x;
    precise float _356 = _239 * cbObjMatrix._m0[_332].y;
    precise float _357 = _239 * cbObjMatrix._m0[_339].y;
    precise float _358 = _239 * cbObjMatrix._m0[_346].y;
    precise float _359 = _239 * cbObjMatrix._m0[_332].z;
    precise float _360 = _239 * cbObjMatrix._m0[_339].z;
    precise float _361 = _239 * cbObjMatrix._m0[_346].z;
    precise float _362 = _239 * cbObjMatrix._m0[_332].w;
    precise float _363 = _239 * cbObjMatrix._m0[_339].w;
    precise float _364 = _239 * cbObjMatrix._m0[_346].w;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    uint _379 = (_248 + uint(float(BLENDINDICES.w))) * 3u;
    uint _386 = _379 + 1u;
    uint _393 = _379 + 2u;
    precise float _400 = _240 * cbObjMatrix._m0[_379].x;
    precise float _401 = _240 * cbObjMatrix._m0[_386].x;
    precise float _402 = _240 * cbObjMatrix._m0[_393].x;
    precise float _403 = _240 * cbObjMatrix._m0[_379].y;
    precise float _404 = _240 * cbObjMatrix._m0[_386].y;
    precise float _405 = _240 * cbObjMatrix._m0[_393].y;
    precise float _406 = _240 * cbObjMatrix._m0[_379].z;
    precise float _407 = _240 * cbObjMatrix._m0[_386].z;
    precise float _408 = _240 * cbObjMatrix._m0[_393].z;
    precise float _409 = _240 * cbObjMatrix._m0[_379].w;
    precise float _410 = _240 * cbObjMatrix._m0[_386].w;
    precise float _411 = _240 * cbObjMatrix._m0[_393].w;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    precise float _418 = _371 + _406;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _219 * _412;
    precise float _425 = _220 * _415;
    precise float _426 = _425 + _424;
    precise float _427 = _221 * _418;
    precise float _428 = _427 + _426;
    precise float _429 = 1.0 * _421;
    precise float _430 = _429 + _428;
    precise float _431 = _219 * _413;
    precise float _432 = _220 * _416;
    precise float _433 = _432 + _431;
    precise float _434 = _221 * _419;
    precise float _435 = _434 + _433;
    precise float _436 = 1.0 * _422;
    precise float _437 = _436 + _435;
    precise float _438 = _219 * _414;
    precise float _439 = _220 * _417;
    precise float _440 = _439 + _438;
    precise float _441 = _221 * _420;
    precise float _442 = _441 + _440;
    precise float _443 = 1.0 * _423;
    precise float _444 = _443 + _442;
    precise float _445 = _430 + 0.0;
    precise float _446 = _437 + 0.0;
    precise float _447 = _444 + 0.0;
    precise float _453 = _445 - cbSceneParam._m0[3u].x;
    precise float _454 = _446 - cbSceneParam._m0[3u].y;
    precise float _455 = _447 - cbSceneParam._m0[3u].z;
    precise float _481 = _453 * cbSceneParam._m0[24u].x;
    precise float _482 = _454 * cbSceneParam._m0[24u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _455 * cbSceneParam._m0[24u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _453 * cbSceneParam._m0[25u].x;
    precise float _489 = _454 * cbSceneParam._m0[25u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _455 * cbSceneParam._m0[25u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _494 = _493 + _492;
    precise float _495 = _453 * cbSceneParam._m0[26u].x;
    precise float _496 = _454 * cbSceneParam._m0[26u].y;
    precise float _497 = _496 + _495;
    precise float _498 = _455 * cbSceneParam._m0[26u].z;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _501 = _500 + _499;
    precise float _502 = _453 * cbSceneParam._m0[27u].x;
    precise float _503 = _454 * cbSceneParam._m0[27u].y;
    precise float _504 = _503 + _502;
    precise float _505 = _455 * cbSceneParam._m0[27u].z;
    precise float _506 = _505 + _504;
    precise float _507 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _508 = _507 + _506;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_Position.x = _487;
    gl_Position.y = _494;
    gl_Position.z = _501;
    gl_Position.w = _508;
}


