#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_9;
layout(location = 7) out vec4 TEXCOORD_10;
layout(location = 8) out vec3 TEXCOORD_11;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    TEXCOORD_9.w = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_10.z = 0.0;
    TEXCOORD_10.w = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    precise float _197 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _199 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _204 = _197 * cbTexScroll._m0[0u].x;
    precise float _205 = _199 * cbTexScroll._m0[0u].y;
    precise float _208 = _204 + cbTexScroll._m0[0u].z;
    precise float _209 = _205 + cbTexScroll._m0[0u].w;
    precise float _213 = float(NORMAL.x) + (-127.0);
    precise float _215 = float(NORMAL.y) + (-127.0);
    precise float _216 = float(NORMAL.z) + (-127.0);
    precise float _217 = _213 * 0.0078740157186985015869140625;
    precise float _219 = _215 * 0.0078740157186985015869140625;
    precise float _220 = _216 * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _241 = cbPerFrame._m0[22u].x * cbMtdParam._m0[18u].w;
    precise float _247 = _241 * cbMtdParam._m0[19u].z;
    precise float _248 = _241 * cbMtdParam._m0[19u].w;
    precise float _249 = _208 + _247;
    precise float _250 = _209 + _248;
    precise float _257 = _249 * cbTextureTilingScale._m0[0u].x;
    precise float _258 = cbTextureTilingScale._m0[0u].y * _250;
    precise float _259 = cbTextureTilingScale._m0[0u].z + _257;
    precise float _260 = cbTextureTilingScale._m0[0u].w + _258;
    precise float _271 = textureLod(sampler2D(S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2(_259, _260), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _277 = _217 * cbMtdParam._m0[23u].x;
    precise float _278 = _219 * cbMtdParam._m0[23u].y;
    precise float _279 = _220 * cbMtdParam._m0[23u].z;
    precise float _280 = _271 * _277;
    precise float _281 = _271 * _278;
    precise float _282 = _271 * _279;
    precise float _283 = _277 + _280;
    precise float _284 = _278 + _281;
    precise float _285 = _279 + _282;
    precise float _286 = _277 * 0.0;
    precise float _287 = _278 * 0.0;
    precise float _288 = _279 * 0.0;
    precise float _289 = _286 + _283;
    precise float _290 = _287 + _284;
    precise float _291 = _288 + _285;
    precise float _292 = POSITION.x + _289;
    precise float _293 = POSITION.y + _290;
    precise float _294 = POSITION.z + _291;
    uint _299 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _301 = texelFetch(g_InstanceIndexBuffer, int(_299));
    uint _302 = _301.x;
    precise float _303 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _308 = isnan(_303) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _303 : max(0.001000000047497451305389404296875, _303));
    precise float _310 = BLENDWEIGHT.x / _308;
    precise float _311 = BLENDWEIGHT.y / _308;
    precise float _312 = BLENDWEIGHT.z / _308;
    precise float _313 = BLENDWEIGHT.w / _308;
    uvec4 _320 = floatBitsToUint(cbInstanceData._m0[(_302 * 13u) + 4u]);
    uint _321 = _320.x;
    uint _323 = (_321 + uint(float(BLENDINDICES.x))) * 3u;
    uint _330 = _323 + 1u;
    uint _337 = _323 + 2u;
    precise float _344 = _310 * cbObjMatrix._m0[_323].x;
    precise float _345 = _310 * cbObjMatrix._m0[_330].x;
    precise float _346 = _310 * cbObjMatrix._m0[_337].x;
    precise float _347 = _310 * cbObjMatrix._m0[_323].y;
    precise float _348 = _310 * cbObjMatrix._m0[_330].y;
    precise float _349 = _310 * cbObjMatrix._m0[_337].y;
    precise float _350 = _310 * cbObjMatrix._m0[_323].z;
    precise float _351 = _310 * cbObjMatrix._m0[_330].z;
    precise float _352 = _310 * cbObjMatrix._m0[_337].z;
    precise float _353 = _310 * cbObjMatrix._m0[_323].w;
    precise float _354 = _310 * cbObjMatrix._m0[_330].w;
    precise float _355 = _310 * cbObjMatrix._m0[_337].w;
    uint _358 = (_321 + uint(float(BLENDINDICES.y))) * 3u;
    uint _365 = _358 + 1u;
    uint _372 = _358 + 2u;
    precise float _379 = _311 * cbObjMatrix._m0[_358].x;
    precise float _380 = _311 * cbObjMatrix._m0[_365].x;
    precise float _381 = _311 * cbObjMatrix._m0[_372].x;
    precise float _382 = _311 * cbObjMatrix._m0[_358].y;
    precise float _383 = _311 * cbObjMatrix._m0[_365].y;
    precise float _384 = _311 * cbObjMatrix._m0[_372].y;
    precise float _385 = _311 * cbObjMatrix._m0[_358].z;
    precise float _386 = _311 * cbObjMatrix._m0[_365].z;
    precise float _387 = _311 * cbObjMatrix._m0[_372].z;
    precise float _388 = _311 * cbObjMatrix._m0[_358].w;
    precise float _389 = _311 * cbObjMatrix._m0[_365].w;
    precise float _390 = _311 * cbObjMatrix._m0[_372].w;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    uint _405 = (_321 + uint(float(BLENDINDICES.z))) * 3u;
    uint _412 = _405 + 1u;
    uint _419 = _405 + 2u;
    precise float _426 = _312 * cbObjMatrix._m0[_405].x;
    precise float _427 = _312 * cbObjMatrix._m0[_412].x;
    precise float _428 = _312 * cbObjMatrix._m0[_419].x;
    precise float _429 = _312 * cbObjMatrix._m0[_405].y;
    precise float _430 = _312 * cbObjMatrix._m0[_412].y;
    precise float _431 = _312 * cbObjMatrix._m0[_419].y;
    precise float _432 = _312 * cbObjMatrix._m0[_405].z;
    precise float _433 = _312 * cbObjMatrix._m0[_412].z;
    precise float _434 = _312 * cbObjMatrix._m0[_419].z;
    precise float _435 = _312 * cbObjMatrix._m0[_405].w;
    precise float _436 = _312 * cbObjMatrix._m0[_412].w;
    precise float _437 = _312 * cbObjMatrix._m0[_419].w;
    precise float _438 = _391 + _426;
    precise float _439 = _392 + _427;
    precise float _440 = _393 + _428;
    precise float _441 = _394 + _429;
    precise float _442 = _395 + _430;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    uint _452 = (_321 + uint(float(BLENDINDICES.w))) * 3u;
    uint _459 = _452 + 1u;
    uint _466 = _452 + 2u;
    precise float _473 = _313 * cbObjMatrix._m0[_452].x;
    precise float _474 = _313 * cbObjMatrix._m0[_459].x;
    precise float _475 = _313 * cbObjMatrix._m0[_466].x;
    precise float _476 = _313 * cbObjMatrix._m0[_452].y;
    precise float _477 = _313 * cbObjMatrix._m0[_459].y;
    precise float _478 = _313 * cbObjMatrix._m0[_466].y;
    precise float _479 = _313 * cbObjMatrix._m0[_452].z;
    precise float _480 = _313 * cbObjMatrix._m0[_459].z;
    precise float _481 = _313 * cbObjMatrix._m0[_466].z;
    precise float _482 = _313 * cbObjMatrix._m0[_452].w;
    precise float _483 = _313 * cbObjMatrix._m0[_459].w;
    precise float _484 = _313 * cbObjMatrix._m0[_466].w;
    precise float _485 = _438 + _473;
    precise float _486 = _439 + _474;
    precise float _487 = _440 + _475;
    precise float _488 = _441 + _476;
    precise float _489 = _442 + _477;
    precise float _490 = _443 + _478;
    precise float _491 = _444 + _479;
    precise float _492 = _445 + _480;
    precise float _493 = _446 + _481;
    precise float _494 = _447 + _482;
    precise float _495 = _448 + _483;
    precise float _496 = _449 + _484;
    precise float _497 = _292 * _485;
    precise float _498 = _293 * _488;
    precise float _499 = _498 + _497;
    precise float _500 = _294 * _491;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _494;
    precise float _503 = _502 + _501;
    precise float _504 = _292 * _486;
    precise float _505 = _293 * _489;
    precise float _506 = _505 + _504;
    precise float _507 = _294 * _492;
    precise float _508 = _507 + _506;
    precise float _509 = 1.0 * _495;
    precise float _510 = _509 + _508;
    precise float _511 = _292 * _487;
    precise float _512 = _293 * _490;
    precise float _513 = _512 + _511;
    precise float _514 = _294 * _493;
    precise float _515 = _514 + _513;
    precise float _516 = 1.0 * _496;
    precise float _517 = _516 + _515;
    float _688 = fma(_220, _491, fma(_219, _488, _485 * _217));
    float _691 = fma(_220, _492, fma(_219, _489, _486 * _217));
    float _694 = fma(_220, _493, fma(_219, _490, _487 * _217));
    precise float _705 = _503 + 0.0;
    precise float _706 = _510 + 0.0;
    precise float _707 = _517 + 0.0;
    float _714 = (((((cbPrevObjMatrix._m0[_358].w * _311) + (cbPrevObjMatrix._m0[_323].w * _310)) + (cbPrevObjMatrix._m0[_405].w * _312)) + (cbPrevObjMatrix._m0[_452].w * _313)) + fma(_294, (((cbPrevObjMatrix._m0[_358].z * _311) + (cbPrevObjMatrix._m0[_323].z * _310)) + (cbPrevObjMatrix._m0[_405].z * _312)) + (cbPrevObjMatrix._m0[_452].z * _313), fma(_293, (((cbPrevObjMatrix._m0[_358].y * _311) + (cbPrevObjMatrix._m0[_323].y * _310)) + (cbPrevObjMatrix._m0[_405].y * _312)) + (cbPrevObjMatrix._m0[_452].y * _313), ((((cbPrevObjMatrix._m0[_358].x * _311) + (cbPrevObjMatrix._m0[_323].x * _310)) + (cbPrevObjMatrix._m0[_405].x * _312)) + (cbPrevObjMatrix._m0[_452].x * _313)) * _292))) - cbSceneParam._m0[28u].x;
    float _715 = (((((cbPrevObjMatrix._m0[_365].w * _311) + (cbPrevObjMatrix._m0[_330].w * _310)) + (cbPrevObjMatrix._m0[_412].w * _312)) + (cbPrevObjMatrix._m0[_459].w * _313)) + fma(_294, (((cbPrevObjMatrix._m0[_365].z * _311) + (cbPrevObjMatrix._m0[_330].z * _310)) + (cbPrevObjMatrix._m0[_412].z * _312)) + (cbPrevObjMatrix._m0[_459].z * _313), fma(_293, (((cbPrevObjMatrix._m0[_365].y * _311) + (cbPrevObjMatrix._m0[_330].y * _310)) + (cbPrevObjMatrix._m0[_412].y * _312)) + (cbPrevObjMatrix._m0[_459].y * _313), ((((cbPrevObjMatrix._m0[_365].x * _311) + (cbPrevObjMatrix._m0[_330].x * _310)) + (cbPrevObjMatrix._m0[_412].x * _312)) + (cbPrevObjMatrix._m0[_459].x * _313)) * _292))) - cbSceneParam._m0[28u].y;
    float _716 = (((((cbPrevObjMatrix._m0[_372].w * _311) + (cbPrevObjMatrix._m0[_337].w * _310)) + (cbPrevObjMatrix._m0[_419].w * _312)) + (cbPrevObjMatrix._m0[_466].w * _313)) + fma(_294, (((cbPrevObjMatrix._m0[_372].z * _311) + (cbPrevObjMatrix._m0[_337].z * _310)) + (cbPrevObjMatrix._m0[_419].z * _312)) + (cbPrevObjMatrix._m0[_466].z * _313), fma(_293, (((cbPrevObjMatrix._m0[_372].y * _311) + (cbPrevObjMatrix._m0[_337].y * _310)) + (cbPrevObjMatrix._m0[_419].y * _312)) + (cbPrevObjMatrix._m0[_466].y * _313), ((((cbPrevObjMatrix._m0[_372].x * _311) + (cbPrevObjMatrix._m0[_337].x * _310)) + (cbPrevObjMatrix._m0[_419].x * _312)) + (cbPrevObjMatrix._m0[_466].x * _313)) * _292))) - cbSceneParam._m0[28u].z;
    precise float _766 = _705 - cbSceneParam._m0[3u].x;
    precise float _767 = _706 - cbSceneParam._m0[3u].y;
    precise float _768 = _707 - cbSceneParam._m0[3u].z;
    precise float _794 = _766 * cbSceneParam._m0[24u].x;
    precise float _795 = _767 * cbSceneParam._m0[24u].y;
    precise float _796 = _795 + _794;
    precise float _797 = _768 * cbSceneParam._m0[24u].z;
    precise float _798 = _797 + _796;
    precise float _799 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _800 = _799 + _798;
    precise float _801 = _766 * cbSceneParam._m0[25u].x;
    precise float _802 = _767 * cbSceneParam._m0[25u].y;
    precise float _803 = _802 + _801;
    precise float _804 = _768 * cbSceneParam._m0[25u].z;
    precise float _805 = _804 + _803;
    precise float _806 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _807 = _806 + _805;
    precise float _808 = _766 * cbSceneParam._m0[26u].x;
    precise float _809 = _767 * cbSceneParam._m0[26u].y;
    precise float _810 = _809 + _808;
    precise float _811 = _768 * cbSceneParam._m0[26u].z;
    precise float _812 = _811 + _810;
    precise float _813 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _814 = _813 + _812;
    precise float _815 = _766 * cbSceneParam._m0[27u].x;
    precise float _816 = _767 * cbSceneParam._m0[27u].y;
    precise float _817 = _816 + _815;
    precise float _818 = _768 * cbSceneParam._m0[27u].z;
    precise float _819 = _818 + _817;
    precise float _820 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _821 = _820 + _819;
    gl_Position.x = _800;
    gl_Position.y = _807;
    gl_Position.z = _814;
    gl_Position.w = _821;
    POSITION_1.x = _800;
    POSITION_1.y = _807;
    POSITION_1.z = _814;
    POSITION_1.w = _821;
    NORMAL_1.x = _688;
    NORMAL_1.y = _691;
    NORMAL_1.z = _694;
    NORMAL_1.w = float(_302);
    TANGENT_1.x = fma(_231, _491, fma(_230, _488, _485 * _229));
    TANGENT_1.y = fma(_231, _492, fma(_230, _489, _486 * _229));
    TANGENT_1.z = fma(_231, _493, fma(_230, _490, _487 * _229));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _208;
    TEXCOORD_1_1.y = _209;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_9.x = _800;
    TEXCOORD_9.y = _807;
    TEXCOORD_9.z = _814;
    TEXCOORD_9.w = _821;
    TEXCOORD_10.x = fma(_716, cbSceneParam._m0[29u].z, fma(_715, cbSceneParam._m0[29u].y, _714 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_10.y = fma(_716, cbSceneParam._m0[30u].z, fma(_715, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _714)) + cbSceneParam._m0[30u].w;
    TEXCOORD_10.z = fma(_716, cbSceneParam._m0[31u].z, fma(_715, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _714)) + cbSceneParam._m0[31u].w;
    TEXCOORD_10.w = fma(_716, cbSceneParam._m0[32u].z, fma(_715, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _714)) + cbSceneParam._m0[32u].w;
    TEXCOORD_11.x = _688;
    TEXCOORD_11.y = _691;
    TEXCOORD_11.z = _694;
}


