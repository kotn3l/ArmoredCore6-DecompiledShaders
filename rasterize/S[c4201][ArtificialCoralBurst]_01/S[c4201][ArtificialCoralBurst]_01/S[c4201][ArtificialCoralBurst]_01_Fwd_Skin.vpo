#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;
layout(set = 0, binding = 0) uniform texture2D S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1_1;
layout(location = 5) out vec4 TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    precise float _184 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _186 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _191 = _184 * cbTexScroll._m0[0u].x;
    precise float _192 = _186 * cbTexScroll._m0[0u].y;
    precise float _195 = _191 + cbTexScroll._m0[0u].z;
    precise float _196 = _192 + cbTexScroll._m0[0u].w;
    precise float _200 = float(NORMAL.x) + (-127.0);
    precise float _202 = float(NORMAL.y) + (-127.0);
    precise float _203 = float(NORMAL.z) + (-127.0);
    precise float _204 = _200 * 0.0078740157186985015869140625;
    precise float _206 = _202 * 0.0078740157186985015869140625;
    precise float _207 = _203 * 0.0078740157186985015869140625;
    float _216 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _217 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _218 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    precise float _228 = cbPerFrame._m0[22u].x * cbMtdParam._m0[18u].w;
    precise float _234 = _228 * cbMtdParam._m0[19u].z;
    precise float _235 = _228 * cbMtdParam._m0[19u].w;
    precise float _236 = _195 + _234;
    precise float _237 = _196 + _235;
    precise float _244 = _236 * cbTextureTilingScale._m0[0u].x;
    precise float _245 = cbTextureTilingScale._m0[0u].y * _237;
    precise float _246 = cbTextureTilingScale._m0[0u].z + _244;
    precise float _247 = cbTextureTilingScale._m0[0u].w + _245;
    precise float _258 = textureLod(sampler2D(S_c4201_ArtificialCoralBurst_01_snp_0_Texture2D_0, SS_DiffuseMap), vec2(_246, _247), 0.0).x * cbMtdParam._m0[17u].x;
    precise float _264 = _204 * cbMtdParam._m0[23u].x;
    precise float _265 = _206 * cbMtdParam._m0[23u].y;
    precise float _266 = _207 * cbMtdParam._m0[23u].z;
    precise float _267 = _258 * _264;
    precise float _268 = _258 * _265;
    precise float _269 = _258 * _266;
    precise float _270 = _264 + _267;
    precise float _271 = _265 + _268;
    precise float _272 = _266 + _269;
    precise float _273 = _264 * 0.0;
    precise float _274 = _265 * 0.0;
    precise float _275 = _266 * 0.0;
    precise float _276 = _273 + _270;
    precise float _277 = _274 + _271;
    precise float _278 = _275 + _272;
    precise float _279 = POSITION.x + _276;
    precise float _280 = POSITION.y + _277;
    precise float _281 = POSITION.z + _278;
    uint _286 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _288 = texelFetch(g_InstanceIndexBuffer, int(_286));
    uint _289 = _288.x;
    precise float _290 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _295 = isnan(_290) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _290 : max(0.001000000047497451305389404296875, _290));
    precise float _297 = BLENDWEIGHT.x / _295;
    precise float _298 = BLENDWEIGHT.y / _295;
    precise float _299 = BLENDWEIGHT.z / _295;
    precise float _300 = BLENDWEIGHT.w / _295;
    uint _302 = _289 * 13u;
    uvec4 _307 = floatBitsToUint(cbInstanceData._m0[_302 + 4u]);
    uint _308 = _307.x;
    uint _310 = (_308 + uint(float(BLENDINDICES.x))) * 3u;
    uint _317 = _310 + 1u;
    uint _324 = _310 + 2u;
    precise float _331 = _297 * cbObjMatrix._m0[_310].x;
    precise float _332 = _297 * cbObjMatrix._m0[_317].x;
    precise float _333 = _297 * cbObjMatrix._m0[_324].x;
    precise float _334 = _297 * cbObjMatrix._m0[_310].y;
    precise float _335 = _297 * cbObjMatrix._m0[_317].y;
    precise float _336 = _297 * cbObjMatrix._m0[_324].y;
    precise float _337 = _297 * cbObjMatrix._m0[_310].z;
    precise float _338 = _297 * cbObjMatrix._m0[_317].z;
    precise float _339 = _297 * cbObjMatrix._m0[_324].z;
    precise float _340 = _297 * cbObjMatrix._m0[_310].w;
    precise float _341 = _297 * cbObjMatrix._m0[_317].w;
    precise float _342 = _297 * cbObjMatrix._m0[_324].w;
    uint _345 = (_308 + uint(float(BLENDINDICES.y))) * 3u;
    uint _352 = _345 + 1u;
    uint _359 = _345 + 2u;
    precise float _366 = _298 * cbObjMatrix._m0[_345].x;
    precise float _367 = _298 * cbObjMatrix._m0[_352].x;
    precise float _368 = _298 * cbObjMatrix._m0[_359].x;
    precise float _369 = _298 * cbObjMatrix._m0[_345].y;
    precise float _370 = _298 * cbObjMatrix._m0[_352].y;
    precise float _371 = _298 * cbObjMatrix._m0[_359].y;
    precise float _372 = _298 * cbObjMatrix._m0[_345].z;
    precise float _373 = _298 * cbObjMatrix._m0[_352].z;
    precise float _374 = _298 * cbObjMatrix._m0[_359].z;
    precise float _375 = _298 * cbObjMatrix._m0[_345].w;
    precise float _376 = _298 * cbObjMatrix._m0[_352].w;
    precise float _377 = _298 * cbObjMatrix._m0[_359].w;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    uint _392 = (_308 + uint(float(BLENDINDICES.z))) * 3u;
    uint _399 = _392 + 1u;
    uint _406 = _392 + 2u;
    precise float _413 = _299 * cbObjMatrix._m0[_392].x;
    precise float _414 = _299 * cbObjMatrix._m0[_399].x;
    precise float _415 = _299 * cbObjMatrix._m0[_406].x;
    precise float _416 = _299 * cbObjMatrix._m0[_392].y;
    precise float _417 = _299 * cbObjMatrix._m0[_399].y;
    precise float _418 = _299 * cbObjMatrix._m0[_406].y;
    precise float _419 = _299 * cbObjMatrix._m0[_392].z;
    precise float _420 = _299 * cbObjMatrix._m0[_399].z;
    precise float _421 = _299 * cbObjMatrix._m0[_406].z;
    precise float _422 = _299 * cbObjMatrix._m0[_392].w;
    precise float _423 = _299 * cbObjMatrix._m0[_399].w;
    precise float _424 = _299 * cbObjMatrix._m0[_406].w;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    precise float _436 = _389 + _424;
    uint _439 = (_308 + uint(float(BLENDINDICES.w))) * 3u;
    uint _446 = _439 + 1u;
    uint _453 = _439 + 2u;
    precise float _460 = _300 * cbObjMatrix._m0[_439].x;
    precise float _461 = _300 * cbObjMatrix._m0[_446].x;
    precise float _462 = _300 * cbObjMatrix._m0[_453].x;
    precise float _463 = _300 * cbObjMatrix._m0[_439].y;
    precise float _464 = _300 * cbObjMatrix._m0[_446].y;
    precise float _465 = _300 * cbObjMatrix._m0[_453].y;
    precise float _466 = _300 * cbObjMatrix._m0[_439].z;
    precise float _467 = _300 * cbObjMatrix._m0[_446].z;
    precise float _468 = _300 * cbObjMatrix._m0[_453].z;
    precise float _469 = _300 * cbObjMatrix._m0[_439].w;
    precise float _470 = _300 * cbObjMatrix._m0[_446].w;
    precise float _471 = _300 * cbObjMatrix._m0[_453].w;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = _436 + _471;
    precise float _484 = _279 * _472;
    precise float _485 = _280 * _475;
    precise float _486 = _485 + _484;
    precise float _487 = _281 * _478;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * _481;
    precise float _490 = _489 + _488;
    precise float _491 = _279 * _473;
    precise float _492 = _280 * _476;
    precise float _493 = _492 + _491;
    precise float _494 = _281 * _479;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * _482;
    precise float _497 = _496 + _495;
    precise float _498 = _279 * _474;
    precise float _499 = _280 * _477;
    precise float _500 = _499 + _498;
    precise float _501 = _281 * _480;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * _483;
    precise float _504 = _503 + _502;
    precise float _524 = _490 + 0.0;
    precise float _525 = _497 + 0.0;
    precise float _526 = _504 + 0.0;
    precise float _532 = _524 - cbSceneParam._m0[3u].x;
    precise float _533 = _525 - cbSceneParam._m0[3u].y;
    precise float _534 = _526 - cbSceneParam._m0[3u].z;
    precise float _560 = _532 * cbSceneParam._m0[24u].x;
    precise float _561 = _533 * cbSceneParam._m0[24u].y;
    precise float _562 = _561 + _560;
    precise float _563 = _534 * cbSceneParam._m0[24u].z;
    precise float _564 = _563 + _562;
    precise float _565 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _566 = _565 + _564;
    precise float _567 = _532 * cbSceneParam._m0[25u].x;
    precise float _568 = _533 * cbSceneParam._m0[25u].y;
    precise float _569 = _568 + _567;
    precise float _570 = _534 * cbSceneParam._m0[25u].z;
    precise float _571 = _570 + _569;
    precise float _572 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _573 = _572 + _571;
    precise float _574 = _532 * cbSceneParam._m0[26u].x;
    precise float _575 = _533 * cbSceneParam._m0[26u].y;
    precise float _576 = _575 + _574;
    precise float _577 = _534 * cbSceneParam._m0[26u].z;
    precise float _578 = _577 + _576;
    precise float _579 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _580 = _579 + _578;
    precise float _581 = _532 * cbSceneParam._m0[27u].x;
    precise float _582 = _533 * cbSceneParam._m0[27u].y;
    precise float _583 = _582 + _581;
    precise float _584 = _534 * cbSceneParam._m0[27u].z;
    precise float _585 = _584 + _583;
    precise float _586 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _587 = _586 + _585;
    gl_Position.x = _566;
    gl_Position.y = _573;
    gl_Position.z = _580;
    gl_Position.w = _587;
    POSITION_1.x = _566;
    POSITION_1.y = _573;
    POSITION_1.z = _580;
    POSITION_1.w = _587;
    NORMAL_1.x = fma(_207, _478, fma(_206, _475, _472 * _204));
    NORMAL_1.y = fma(_207, _479, fma(_206, _476, _473 * _204));
    NORMAL_1.z = fma(_207, _480, fma(_206, _477, _474 * _204));
    NORMAL_1.w = float(_289);
    TANGENT_1.x = fma(_218, _478, fma(_217, _475, _472 * _216));
    TANGENT_1.y = fma(_218, _479, fma(_217, _476, _473 * _216));
    TANGENT_1.z = fma(_218, _480, fma(_217, _477, _474 * _216));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = _195;
    TEXCOORD_1_1.y = _196;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    gl_ClipDistance[0u] = dot(vec4(_566, _573, _580, _587), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_566, _573, _580, _587), vec4(cbInstanceData._m0[_302 + 3u]));
}


