#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_snp_0_Texture2D_14;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _121 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _122 = _121 * NORMAL.x;
    float _123 = _121 * NORMAL.y;
    float _124 = _121 * NORMAL.z;
    float _129;
    float _130;
    float _131;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _129 = (-0.0) - _122;
        _130 = (-0.0) - _123;
        _131 = (-0.0) - _124;
    }
    else
    {
        _129 = _122;
        _130 = _123;
        _131 = _124;
    }
    float _137 = cbMtdParam._m0[21u].z + TEXCOORD.y;
    vec4 _140 = texture(sampler2D(P_ACParts_snp_0_Texture2D_3, SS_DiffuseMap), vec2(TEXCOORD.x, _137));
    vec4 _149 = texture(sampler2D(P_ACParts_snp_0_Texture2D_14, SS_WrapLinear), vec2(TEXCOORD.x, TEXCOORD.y));
    float _151 = _149.x;
    vec4 _170 = texture(sampler2D(P_ACParts_snp_0_Texture2D_7, SS_DiffuseMap), vec2(TEXCOORD.x, _137));
    float _173 = _170.w * _140.w;
    float _410 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _190 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _191 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _196 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_190, _191));
    vec4 _201 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_190, _191));
    vec4 _205 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_190, _191));
    vec4 _212 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_190, _191));
    uint _219 = uint(roundEven(NORMAL.w)) * 13u;
    uint _223 = (_219 + 9u) + uint(cbMatDynParam._m0[0u].w);
    uvec4 _237 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _241 = (_237.y != 0u) ? (1.0 - _190) : _190;
    vec4 _245 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_241, _191), 0.0, ivec2(1));
    float _249 = _245.x;
    vec4 _251 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_241, _191), 0.0, ivec2(-1, 1));
    float _254 = _251.x;
    vec4 _255 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_241, _191), 0.0, ivec2(1, -1));
    float _258 = _255.x;
    vec4 _259 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_241, _191), 0.0, ivec2(-1));
    float _262 = _259.x;
    float _263 = isnan(_262) ? _258 : (isnan(_258) ? _262 : min(_258, _262));
    float _264 = isnan(_254) ? _249 : (isnan(_249) ? _254 : min(_249, _254));
    if (((1u << (uint(floor(float(uint(roundEven(((_151 + (-0.02500000037252902984619140625)) + ((_149.z * cbMtdParam._m0[19u].w) * (texture(sampler2D(P_ACParts_snp_0_Texture2D_15, SS_WrapLinear), vec2(cbMtdParam._m0[19u].z * TEXCOORD.x, cbMtdParam._m0[19u].z * TEXCOORD.y)).x - _151))) * 6.0))))) & 31u)) & _237.z) == 0u)
    {
        discard_state = true;
    }
    float _299 = (dot(vec3(_129, _130, _131), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _436 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _340 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _346 = fma(_340, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _340;
    float _353 = (_346 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _447 = isnan(0.0) ? _353 : (isnan(_353) ? 0.0 : max(_353, 0.0));
    float _358 = (_346 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _458 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _366 = (((((_205.w * (isnan(1.0) ? _410 : (isnan(_410) ? 1.0 : min(_410, 1.0)))) * _212.x) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_263) ? _264 : (isnan(_264) ? _263 : min(_264, _263))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0)))) * (isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0)))) * (1.0 - (isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0))));
    float _375;
    if (_366 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _375 = 0.0;
    }
    else
    {
        _375 = _366 * cbInstanceData._m0[_219 + 6u].w;
    }
    SV_Target.x = (cbInstanceData._m0[_223].x * cbInstanceData._m0[_223].x) * _205.x;
    SV_Target.y = (cbInstanceData._m0[_223].y * cbInstanceData._m0[_223].y) * _205.y;
    SV_Target.z = (cbInstanceData._m0[_223].z * cbInstanceData._m0[_223].z) * _205.z;
    SV_Target.w = _375;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _196.x;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _201.z;
    SV_Target_1.z = _196.z;
    SV_Target_1.w = _375;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _375;
    discard_exit();
}


