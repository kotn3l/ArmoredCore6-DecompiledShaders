#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[23];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 10, std140) uniform cbPaintParamUBO
{
    vec4 _m0[24];
} cbPaintParam;

layout(set = 0, binding = 25) uniform texture2D g_PaintBaseColorTexture;
layout(set = 0, binding = 26) uniform texture2D g_PaintMetallicTexture;
layout(set = 0, binding = 27) uniform texture2D g_PaintNormalTexture;
layout(set = 0, binding = 28) uniform texture2D g_PaintMaskTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D P_ACParts_snp_0_Texture2D_14;
layout(set = 0, binding = 9) uniform texture2D P_ACParts_snp_0_Texture2D_15;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 3) uniform sampler SS_MaskMap;
layout(set = 0, binding = 5) uniform sampler SS_PaintDecal;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    float _121 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _122 = _121 * NORMAL.x;
    float _123 = _121 * NORMAL.y;
    float _124 = _121 * NORMAL.z;
    float _129;
    float _130;
    float _131;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _129 = (-0.0) - _122;
        _130 = (-0.0) - _123;
        _131 = (-0.0) - _124;
    }
    else
    {
        _129 = _122;
        _130 = _123;
        _131 = _124;
    }
    vec4 _134 = texture(sampler2D(P_ACParts_snp_0_Texture2D_3, SS_DiffuseMap), vec2(TEXCOORD.x, TEXCOORD.y));
    vec4 _144 = texture(sampler2D(P_ACParts_snp_0_Texture2D_14, SS_WrapLinear), vec2(TEXCOORD.x, TEXCOORD.y));
    float _146 = _144.x;
    vec4 _165 = texture(sampler2D(P_ACParts_snp_0_Texture2D_7, SS_DiffuseMap), vec2(TEXCOORD.x, TEXCOORD.y));
    float _168 = _165.w * _134.w;
    float _406 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    float _186 = (((floatBitsToUint(cbPaintParam._m0[21u]).y != 0u) ? (-0.5) : 0.5) * (POSITION_1.x / POSITION_1.w)) + 0.5;
    float _187 = 0.5 - ((POSITION_1.y / POSITION_1.w) * 0.5);
    vec4 _192 = texture(sampler2D(g_PaintMetallicTexture, SS_PaintDecal), vec2(_186, _187));
    vec4 _197 = texture(sampler2D(g_PaintNormalTexture, SS_PaintDecal), vec2(_186, _187));
    vec4 _201 = texture(sampler2D(g_PaintBaseColorTexture, SS_PaintDecal), vec2(_186, _187));
    vec4 _208 = texture(sampler2D(g_PaintMaskTexture, SS_MaskMap), vec2(_186, _187));
    uint _215 = uint(roundEven(NORMAL.w)) * 13u;
    uint _219 = (_215 + 9u) + uint(cbMatDynParam._m0[0u].w);
    uvec4 _233 = floatBitsToUint(cbPaintParam._m0[21u]);
    float _237 = (_233.y != 0u) ? (1.0 - _186) : _186;
    vec4 _241 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_237, _187), 0.0, ivec2(1));
    float _245 = _241.x;
    vec4 _247 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_237, _187), 0.0, ivec2(-1, 1));
    float _250 = _247.x;
    vec4 _251 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_237, _187), 0.0, ivec2(1, -1));
    float _254 = _251.x;
    vec4 _255 = textureLodOffset(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_237, _187), 0.0, ivec2(-1));
    float _258 = _255.x;
    float _259 = isnan(_258) ? _254 : (isnan(_254) ? _258 : min(_254, _258));
    float _260 = isnan(_250) ? _245 : (isnan(_245) ? _250 : min(_245, _250));
    if (((1u << (uint(floor(float(uint(roundEven(((_146 + (-0.02500000037252902984619140625)) + ((_144.z * cbMtdParam._m0[19u].w) * (texture(sampler2D(P_ACParts_snp_0_Texture2D_15, SS_WrapLinear), vec2(cbMtdParam._m0[19u].z * TEXCOORD.x, cbMtdParam._m0[19u].z * TEXCOORD.y)).x - _146))) * 6.0))))) & 31u)) & _233.z) == 0u)
    {
        discard_state = true;
    }
    float _295 = (dot(vec3(_129, _130, _131), vec3((-0.0) - cbPaintParam._m0[12u].x, (-0.0) - cbPaintParam._m0[12u].y, (-0.0) - cbPaintParam._m0[12u].z)) - cbPaintParam._m0[23u].x) * cbPaintParam._m0[23u].y;
    float _432 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _336 = fma(POSITION_1.w, cbPaintParam._m0[3u].w, fma(POSITION_1.z, cbPaintParam._m0[3u].z, fma(POSITION_1.y, cbPaintParam._m0[3u].y, cbPaintParam._m0[3u].x * POSITION_1.x)));
    float _342 = fma(_336, cbPaintParam._m0[12u].w, fma(fma(POSITION_1.w, cbPaintParam._m0[2u].w, fma(POSITION_1.z, cbPaintParam._m0[2u].z, fma(POSITION_1.y, cbPaintParam._m0[2u].y, cbPaintParam._m0[2u].x * POSITION_1.x))), cbPaintParam._m0[12u].z, fma(fma(POSITION_1.w, cbPaintParam._m0[1u].w, fma(POSITION_1.z, cbPaintParam._m0[1u].z, fma(POSITION_1.y, cbPaintParam._m0[1u].y, cbPaintParam._m0[1u].x * POSITION_1.x))), cbPaintParam._m0[12u].y, cbPaintParam._m0[12u].x * fma(POSITION_1.w, cbPaintParam._m0[0u].w, fma(POSITION_1.z, cbPaintParam._m0[0u].z, fma(POSITION_1.y, cbPaintParam._m0[0u].y, cbPaintParam._m0[0u].x * POSITION_1.x)))))) / _336;
    float _349 = (_342 - cbPaintParam._m0[22u].x) * cbPaintParam._m0[22u].y;
    float _443 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _354 = (_342 - cbPaintParam._m0[22u].z) * cbPaintParam._m0[22u].w;
    float _454 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _362 = (((((_201.w * (isnan(1.0) ? _406 : (isnan(_406) ? 1.0 : min(_406, 1.0)))) * _208.x) * (((POSITION_1.z / POSITION_1.w) < ((isnan(_259) ? _260 : (isnan(_260) ? _259 : min(_260, _259))) + (-0.001000000047497451305389404296875))) ? 0.0 : 1.0)) * (isnan(1.0) ? _432 : (isnan(_432) ? 1.0 : min(_432, 1.0)))) * (isnan(1.0) ? _443 : (isnan(_443) ? 1.0 : min(_443, 1.0)))) * (1.0 - (isnan(1.0) ? _454 : (isnan(_454) ? 1.0 : min(_454, 1.0))));
    float _371;
    if (_362 < 0.0039215688593685626983642578125)
    {
        discard_state = true;
        _371 = 0.0;
    }
    else
    {
        _371 = _362 * cbInstanceData._m0[_215 + 6u].w;
    }
    SV_Target.x = (cbInstanceData._m0[_219].x * cbInstanceData._m0[_219].x) * _201.x;
    SV_Target.y = (cbInstanceData._m0[_219].y * cbInstanceData._m0[_219].y) * _201.y;
    SV_Target.z = (cbInstanceData._m0[_219].z * cbInstanceData._m0[_219].z) * _201.z;
    SV_Target.w = _371;
    SV_Target_1.x = cbPaintParam._m0[17u].x * _192.x;
    SV_Target_1.y = cbPaintParam._m0[17u].y * _197.z;
    SV_Target_1.z = _192.z;
    SV_Target_1.w = _371;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _371;
    discard_exit();
}


