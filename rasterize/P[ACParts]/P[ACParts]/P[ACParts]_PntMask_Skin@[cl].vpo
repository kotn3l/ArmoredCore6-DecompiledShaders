#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TEXCOORD_1;
layout(location = 4) out float TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    precise float _128 = float(int(uint(TEXCOORD.x))) * 0.00048828125;
    precise float _130 = float(int(uint(TEXCOORD.y))) * 0.00048828125;
    precise float _131 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _132 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _133 = _131 + 0.0;
    precise float _134 = _132 + 0.0;
    float _142 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _144 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _145 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _155 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _157 = texelFetch(g_InstanceIndexBuffer, int(_155));
    uint _158 = _157.x;
    precise float _159 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _164 = isnan(_159) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _159 : max(0.001000000047497451305389404296875, _159));
    precise float _166 = BLENDWEIGHT.x / _164;
    precise float _167 = BLENDWEIGHT.y / _164;
    precise float _168 = BLENDWEIGHT.z / _164;
    precise float _169 = BLENDWEIGHT.w / _164;
    uvec4 _177 = floatBitsToUint(cbInstanceData._m0[(_158 * 13u) + 4u]);
    uint _178 = _177.x;
    uint _180 = (_178 + uint(float(BLENDINDICES.x))) * 3u;
    uint _187 = _180 + 1u;
    uint _194 = _180 + 2u;
    precise float _201 = _166 * cbObjMatrix._m0[_180].x;
    precise float _202 = _166 * cbObjMatrix._m0[_187].x;
    precise float _203 = _166 * cbObjMatrix._m0[_194].x;
    precise float _204 = _166 * cbObjMatrix._m0[_180].y;
    precise float _205 = _166 * cbObjMatrix._m0[_187].y;
    precise float _206 = _166 * cbObjMatrix._m0[_194].y;
    precise float _207 = _166 * cbObjMatrix._m0[_180].z;
    precise float _208 = _166 * cbObjMatrix._m0[_187].z;
    precise float _209 = _166 * cbObjMatrix._m0[_194].z;
    precise float _210 = _166 * cbObjMatrix._m0[_180].w;
    precise float _211 = _166 * cbObjMatrix._m0[_187].w;
    precise float _212 = _166 * cbObjMatrix._m0[_194].w;
    uint _215 = (_178 + uint(float(BLENDINDICES.y))) * 3u;
    uint _222 = _215 + 1u;
    uint _229 = _215 + 2u;
    precise float _236 = _167 * cbObjMatrix._m0[_215].x;
    precise float _237 = _167 * cbObjMatrix._m0[_222].x;
    precise float _238 = _167 * cbObjMatrix._m0[_229].x;
    precise float _239 = _167 * cbObjMatrix._m0[_215].y;
    precise float _240 = _167 * cbObjMatrix._m0[_222].y;
    precise float _241 = _167 * cbObjMatrix._m0[_229].y;
    precise float _242 = _167 * cbObjMatrix._m0[_215].z;
    precise float _243 = _167 * cbObjMatrix._m0[_222].z;
    precise float _244 = _167 * cbObjMatrix._m0[_229].z;
    precise float _245 = _167 * cbObjMatrix._m0[_215].w;
    precise float _246 = _167 * cbObjMatrix._m0[_222].w;
    precise float _247 = _167 * cbObjMatrix._m0[_229].w;
    precise float _248 = _201 + _236;
    precise float _249 = _202 + _237;
    precise float _250 = _203 + _238;
    precise float _251 = _204 + _239;
    precise float _252 = _205 + _240;
    precise float _253 = _206 + _241;
    precise float _254 = _207 + _242;
    precise float _255 = _208 + _243;
    precise float _256 = _209 + _244;
    precise float _257 = _210 + _245;
    precise float _258 = _211 + _246;
    precise float _259 = _212 + _247;
    uint _262 = (_178 + uint(float(BLENDINDICES.z))) * 3u;
    uint _269 = _262 + 1u;
    uint _276 = _262 + 2u;
    precise float _283 = _168 * cbObjMatrix._m0[_262].x;
    precise float _284 = _168 * cbObjMatrix._m0[_269].x;
    precise float _285 = _168 * cbObjMatrix._m0[_276].x;
    precise float _286 = _168 * cbObjMatrix._m0[_262].y;
    precise float _287 = _168 * cbObjMatrix._m0[_269].y;
    precise float _288 = _168 * cbObjMatrix._m0[_276].y;
    precise float _289 = _168 * cbObjMatrix._m0[_262].z;
    precise float _290 = _168 * cbObjMatrix._m0[_269].z;
    precise float _291 = _168 * cbObjMatrix._m0[_276].z;
    precise float _292 = _168 * cbObjMatrix._m0[_262].w;
    precise float _293 = _168 * cbObjMatrix._m0[_269].w;
    precise float _294 = _168 * cbObjMatrix._m0[_276].w;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = _259 + _294;
    uint _309 = (_178 + uint(float(BLENDINDICES.w))) * 3u;
    uint _316 = _309 + 1u;
    uint _323 = _309 + 2u;
    precise float _330 = _169 * cbObjMatrix._m0[_309].x;
    precise float _331 = _169 * cbObjMatrix._m0[_316].x;
    precise float _332 = _169 * cbObjMatrix._m0[_323].x;
    precise float _333 = _169 * cbObjMatrix._m0[_309].y;
    precise float _334 = _169 * cbObjMatrix._m0[_316].y;
    precise float _335 = _169 * cbObjMatrix._m0[_323].y;
    precise float _336 = _169 * cbObjMatrix._m0[_309].z;
    precise float _337 = _169 * cbObjMatrix._m0[_316].z;
    precise float _338 = _169 * cbObjMatrix._m0[_323].z;
    precise float _339 = _169 * cbObjMatrix._m0[_309].w;
    precise float _340 = _169 * cbObjMatrix._m0[_316].w;
    precise float _341 = _169 * cbObjMatrix._m0[_323].w;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = POSITION.x * _342;
    precise float _355 = POSITION.y * _345;
    precise float _356 = _355 + _354;
    precise float _357 = POSITION.z * _348;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * _351;
    precise float _360 = _359 + _358;
    precise float _361 = POSITION.x * _343;
    precise float _362 = POSITION.y * _346;
    precise float _363 = _362 + _361;
    precise float _364 = POSITION.z * _349;
    precise float _365 = _364 + _363;
    precise float _366 = 1.0 * _352;
    precise float _367 = _366 + _365;
    precise float _368 = POSITION.x * _344;
    precise float _369 = POSITION.y * _347;
    precise float _370 = _369 + _368;
    precise float _371 = POSITION.z * _350;
    precise float _372 = _371 + _370;
    precise float _373 = 1.0 * _353;
    precise float _374 = _373 + _372;
    precise float _390 = _360 - cbSceneParam._m0[3u].x;
    precise float _391 = _367 - cbSceneParam._m0[3u].y;
    precise float _392 = _374 - cbSceneParam._m0[3u].z;
    precise float _428 = _390 * cbSceneParam._m0[26u].x;
    precise float _429 = _391 * cbSceneParam._m0[26u].y;
    precise float _430 = _429 + _428;
    precise float _431 = _392 * cbSceneParam._m0[26u].z;
    precise float _432 = _431 + _430;
    precise float _433 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _434 = _433 + _432;
    precise float _435 = _390 * cbSceneParam._m0[27u].x;
    precise float _436 = _391 * cbSceneParam._m0[27u].y;
    precise float _437 = _436 + _435;
    precise float _438 = _392 * cbSceneParam._m0[27u].z;
    precise float _439 = _438 + _437;
    precise float _440 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _441 = _440 + _439;
    precise float _442 = _133 * 2.0;
    precise float _444 = _134 * 2.0;
    precise float _445 = _442 + (-1.0);
    precise float _447 = 1.0 - _444;
    precise float _448 = _445 * _441;
    precise float _449 = _447 * _441;
    gl_Position.x = _448;
    gl_Position.y = _449;
    gl_Position.z = _434;
    gl_Position.w = _441;
    POSITION_1.x = fma(_392, cbSceneParam._m0[24u].z, fma(_391, cbSceneParam._m0[24u].y, _390 * cbSceneParam._m0[24u].x)) + cbSceneParam._m0[24u].w;
    POSITION_1.y = fma(_392, cbSceneParam._m0[25u].z, fma(_391, cbSceneParam._m0[25u].y, cbSceneParam._m0[25u].x * _390)) + cbSceneParam._m0[25u].w;
    POSITION_1.z = _434;
    POSITION_1.w = _441;
    NORMAL_1.x = fma(_145, _348, fma(_144, _345, _342 * _142));
    NORMAL_1.y = fma(_145, _349, fma(_144, _346, _343 * _142));
    NORMAL_1.z = fma(_145, _350, fma(_144, _347, _344 * _142));
    NORMAL_1.w = float(_158);
    TEXCOORD_1.x = _128;
    TEXCOORD_1.y = _130;
    TEXCOORD_1.z = _133;
    TEXCOORD_1.w = _134;
    TEXCOORD_4 = COLOR_1.x;
}


