#version 460

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec4 TEXCOORD;
layout(location = 1) out vec4 COLOR;
layout(location = 2) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    precise float _85 = float(int(uint(TEXCOORD.z))) * 0.00048828125;
    precise float _87 = float(int(uint(TEXCOORD.w))) * 0.00048828125;
    precise float _88 = _85 + 0.0;
    precise float _89 = _87 + 0.0;
    uint _96 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _110 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_96)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _117 = _110 + 1u;
    uint _124 = _110 + 2u;
    precise float _131 = POSITION.x * cbObjMatrix._m0[_110].x;
    precise float _132 = POSITION.y * cbObjMatrix._m0[_110].y;
    precise float _133 = _132 + _131;
    precise float _134 = POSITION.z * cbObjMatrix._m0[_110].z;
    precise float _135 = _134 + _133;
    precise float _136 = 1.0 * cbObjMatrix._m0[_110].w;
    precise float _138 = _136 + _135;
    precise float _139 = POSITION.x * cbObjMatrix._m0[_117].x;
    precise float _140 = POSITION.y * cbObjMatrix._m0[_117].y;
    precise float _141 = _140 + _139;
    precise float _142 = POSITION.z * cbObjMatrix._m0[_117].z;
    precise float _143 = _142 + _141;
    precise float _144 = 1.0 * cbObjMatrix._m0[_117].w;
    precise float _145 = _144 + _143;
    precise float _146 = POSITION.x * cbObjMatrix._m0[_124].x;
    precise float _147 = POSITION.y * cbObjMatrix._m0[_124].y;
    precise float _148 = _147 + _146;
    precise float _149 = POSITION.z * cbObjMatrix._m0[_124].z;
    precise float _150 = _149 + _148;
    precise float _151 = 1.0 * cbObjMatrix._m0[_124].w;
    precise float _152 = _151 + _150;
    precise float _153 = _88 * 2.0;
    precise float _155 = _89 * 2.0;
    precise float _156 = _153 + (-1.0);
    precise float _158 = 1.0 - _155;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_Position.x = _156;
    gl_Position.y = _158;
    gl_Position.z = 0.0;
    gl_Position.w = 1.0;
    COLOR.x = 0.0;
    COLOR.y = 0.0;
    COLOR.z = 0.0;
    COLOR.w = 0.0;
    TEXCOORD_1.x = _138;
    TEXCOORD_1.y = _145;
    TEXCOORD_1.z = _152;
}


