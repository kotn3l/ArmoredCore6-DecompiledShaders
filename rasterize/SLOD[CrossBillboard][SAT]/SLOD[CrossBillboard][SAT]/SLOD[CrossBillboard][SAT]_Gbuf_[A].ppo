#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_17;
layout(set = 0, binding = 1) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_18;
layout(set = 0, binding = 2) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_19;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _137 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _138 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _139 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _144 = inversesqrt(dot(vec3(_137, _138, _139), vec3(_137, _138, _139)));
    float _151 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _152 = _151 * NORMAL.x;
    float _153 = _151 * NORMAL.y;
    float _154 = _151 * NORMAL.z;
    float _158 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _166;
    float _167;
    float _168;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _166 = (-0.0) - _152;
        _167 = (-0.0) - _153;
        _168 = (-0.0) - _154;
    }
    else
    {
        _166 = _152;
        _167 = _153;
        _168 = _154;
    }
    vec4 _182 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _188 = _182.w;
    float _189 = 1.0 / _188;
    float _191 = _182.x * _189;
    float _192 = _189 * _182.y;
    float _193 = _189 * _182.z;
    vec4 _205 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _208 = _205.x * _189;
    vec4 _220 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_19, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _228 = (_220.x * 2.0) + (-1.0);
    float _230 = (_220.y * 2.0) + (-1.0);
    float _231 = dot(vec2(_228, _230), vec2(_228, _230));
    float _414 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _236 = sqrt(1.0 - (isnan(1.0) ? _414 : (isnan(_414) ? 1.0 : min(_414, 1.0))));
    float _237 = _220.z * _189;
    float _240 = fma(_236, _166, fma(_230, _158 * TANGENT.x, (_144 * _137) * _228));
    float _243 = fma(_236, _167, fma(_230, _158 * TANGENT.y, (_144 * _138) * _228));
    float _246 = fma(_236, _168, fma(_230, _158 * TANGENT.z, (_144 * _139) * _228));
    float _250 = inversesqrt(dot(vec3(_240, _243, _246), vec3(_240, _243, _246)));
    float _425 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _251 = isnan(1.0) ? _425 : (isnan(_425) ? 1.0 : min(_425, 1.0));
    float _436 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _447 = isnan(0.0) ? _191 : (isnan(_191) ? 0.0 : max(_191, 0.0));
    float _253 = isnan(1.0) ? _447 : (isnan(_447) ? 1.0 : min(_447, 1.0));
    float _458 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _254 = isnan(1.0) ? _458 : (isnan(_458) ? 1.0 : min(_458, 1.0));
    float _469 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _255 = isnan(1.0) ? _469 : (isnan(_469) ? 1.0 : min(_469, 1.0));
    float _480 = isnan(0.0) ? _208 : (isnan(_208) ? 0.0 : max(_208, 0.0));
    uint _258 = uint(roundEven(NORMAL.w));
    float _259 = gl_FragCoord.x * 0.125;
    float _261 = gl_FragCoord.y * 0.125;
    if (!(!(texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_259, _261)).w > TEXCOORD_9)))
    {
        discard_state = true;
    }
    bool _340;
    uint _283;
    vec4 _288;
    float _295;
    float _296;
    float _297;
    float _304;
    vec4 _308;
    float _310;
    float _311;
    bool _323;
    for (;;)
    {
        _283 = _258 * 13u;
        _288 = cbInstanceData._m0[(_283 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _292 = (cbMtdParam._m0[0u].x * _253) * _288.x;
        float _293 = (cbMtdParam._m0[0u].y * _254) * _288.y;
        float _294 = (cbMtdParam._m0[0u].z * _255) * _288.z;
        float _491 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
        _295 = isnan(1.0) ? _491 : (isnan(_491) ? 1.0 : min(_491, 1.0));
        float _502 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
        _296 = isnan(1.0) ? _502 : (isnan(_502) ? 1.0 : min(_502, 1.0));
        float _513 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
        _297 = isnan(1.0) ? _513 : (isnan(_513) ? 1.0 : min(_513, 1.0));
        float _524 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
        _304 = cbInstanceData._m0[_283 + 6u].w * (isnan(1.0) ? _524 : (isnan(_524) ? 1.0 : min(_524, 1.0)));
        float _305 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_259, _261)).w + (-0.5);
        _308 = cbMtdParam._m0[1u];
        _310 = _308.y * _305;
        _311 = _305 * 0.999000012874603271484375;
        _323 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_323)
        {
            if ((cbInstanceData._m0[_283 + 7u].x + _311) < 0.5)
            {
                _340 = true;
                break;
            }
        }
        if ((_288.w < 1.0) && ((_288.w + _311) < 0.5))
        {
            _340 = true;
            break;
        }
        if ((_310 + _188) < _308.x)
        {
            _340 = true;
            break;
        }
        _340 = false;
        break;
    }
    if (_340)
    {
        discard_state = true;
    }
    bool _367 = cbMtdParam._m0[1u].z != 0.0;
    float _368 = _367 ? _304 : 0.0;
    SV_Target.x = ((_240 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.y = ((_243 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.z = ((_246 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.w = _368;
    SV_Target_1.x = isnan(1.0) ? _480 : (isnan(_480) ? 1.0 : min(_480, 1.0));
    SV_Target_1.y = isnan(1.0) ? _436 : (isnan(_436) ? 1.0 : min(_436, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _367 ? _304 : TEXCOORD.z;
    SV_Target_2.x = _295;
    SV_Target_2.y = _296;
    SV_Target_2.z = _297;
    SV_Target_2.w = _367 ? _304 : (float(floatBitsToUint(cbInstanceData._m0[_283 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _368;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _368;
    discard_exit();
}


