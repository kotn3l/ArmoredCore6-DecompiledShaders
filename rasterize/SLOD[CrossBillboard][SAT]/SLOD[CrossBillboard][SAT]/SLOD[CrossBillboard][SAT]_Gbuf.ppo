#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_17;
layout(set = 0, binding = 1) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_18;
layout(set = 0, binding = 2) uniform texture2D SLOD_CrossBillboard_SAT_snp_0_Texture2D_19;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _132 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _133 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _134 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _139 = inversesqrt(dot(vec3(_132, _133, _134), vec3(_132, _133, _134)));
    float _146 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = _146 * NORMAL.x;
    float _148 = _146 * NORMAL.y;
    float _149 = _146 * NORMAL.z;
    float _153 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _161;
    float _162;
    float _163;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _161 = (-0.0) - _147;
        _162 = (-0.0) - _148;
        _163 = (-0.0) - _149;
    }
    else
    {
        _161 = _147;
        _162 = _148;
        _163 = _149;
    }
    vec4 _177 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_17, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _183 = _177.w;
    float _184 = 1.0 / _183;
    float _186 = _177.x * _184;
    float _187 = _184 * _177.y;
    float _188 = _184 * _177.z;
    vec4 _200 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _203 = _200.x * _184;
    vec4 _215 = texture(sampler2D(SLOD_CrossBillboard_SAT_snp_0_Texture2D_19, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _223 = (_215.x * 2.0) + (-1.0);
    float _225 = (_215.y * 2.0) + (-1.0);
    float _226 = dot(vec2(_223, _225), vec2(_223, _225));
    float _361 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _231 = sqrt(1.0 - (isnan(1.0) ? _361 : (isnan(_361) ? 1.0 : min(_361, 1.0))));
    float _232 = _215.z * _184;
    float _235 = fma(_231, _161, fma(_225, _153 * TANGENT.x, (_139 * _132) * _223));
    float _238 = fma(_231, _162, fma(_225, _153 * TANGENT.y, (_139 * _133) * _223));
    float _241 = fma(_231, _163, fma(_225, _153 * TANGENT.z, (_139 * _134) * _223));
    float _245 = inversesqrt(dot(vec3(_235, _238, _241), vec3(_235, _238, _241)));
    float _372 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _246 = isnan(1.0) ? _372 : (isnan(_372) ? 1.0 : min(_372, 1.0));
    float _383 = isnan(0.0) ? _232 : (isnan(_232) ? 0.0 : max(_232, 0.0));
    float _394 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _405 = isnan(0.0) ? _187 : (isnan(_187) ? 0.0 : max(_187, 0.0));
    float _416 = isnan(0.0) ? _188 : (isnan(_188) ? 0.0 : max(_188, 0.0));
    float _427 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    if (!(!(texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w > TEXCOORD_9)))
    {
        discard_state = true;
    }
    uint _274 = uint(roundEven(NORMAL.w)) * 13u;
    uint _277 = (_274 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _283 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _394 : (isnan(_394) ? 1.0 : min(_394, 1.0)))) * cbInstanceData._m0[_277].x;
    float _284 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0)))) * cbInstanceData._m0[_277].y;
    float _285 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _416 : (isnan(_416) ? 1.0 : min(_416, 1.0)))) * cbInstanceData._m0[_277].z;
    float _438 = isnan(0.0) ? _283 : (isnan(_283) ? 0.0 : max(_283, 0.0));
    float _449 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _460 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _471 = isnan(0.0) ? _246 : (isnan(_246) ? 0.0 : max(_246, 0.0));
    float _295 = cbInstanceData._m0[_274 + 6u].w * (isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0)));
    bool _320 = cbMtdParam._m0[1u].z != 0.0;
    float _321 = _320 ? _295 : 0.0;
    SV_Target.x = ((_235 * 0.5) * _245) + 0.500488758087158203125;
    SV_Target.y = ((_238 * 0.5) * _245) + 0.500488758087158203125;
    SV_Target.z = ((_241 * 0.5) * _245) + 0.500488758087158203125;
    SV_Target.w = _321;
    SV_Target_1.x = isnan(1.0) ? _427 : (isnan(_427) ? 1.0 : min(_427, 1.0));
    SV_Target_1.y = isnan(1.0) ? _383 : (isnan(_383) ? 1.0 : min(_383, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _320 ? _295 : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0));
    SV_Target_2.y = isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0));
    SV_Target_2.z = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    SV_Target_2.w = _320 ? _295 : (float(floatBitsToUint(cbInstanceData._m0[_274 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _321;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _321;
    discard_exit();
}


