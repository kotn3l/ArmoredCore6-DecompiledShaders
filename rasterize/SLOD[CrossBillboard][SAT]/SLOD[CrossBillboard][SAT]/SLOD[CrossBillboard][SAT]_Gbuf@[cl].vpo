#version 460

out float gl_CullDistance[1];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 12, std140) uniform cbInstanceSlodDataUBO
{
    vec4 _m0[52];
} cbInstanceSlodData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_9;

void main()
{
    uint _71 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_9 = 0.0;
    gl_CullDistance[0u] = 0.0;
    float _147 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _149 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _150 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _168 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _71;
    uvec4 _170 = texelFetch(g_InstanceIndexBuffer, int(_168));
    uint _171 = _170.x;
    uint _181 = (floatBitsToUint(cbInstanceData._m0[(_171 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _188 = _181 + 1u;
    uint _195 = _181 + 2u;
    precise float _202 = POSITION.x * cbObjMatrix._m0[_181].x;
    precise float _203 = POSITION.y * cbObjMatrix._m0[_181].y;
    precise float _204 = _203 + _202;
    precise float _205 = POSITION.z * cbObjMatrix._m0[_181].z;
    precise float _206 = _205 + _204;
    precise float _207 = 1.0 * cbObjMatrix._m0[_181].w;
    precise float _209 = _207 + _206;
    precise float _210 = POSITION.x * cbObjMatrix._m0[_188].x;
    precise float _211 = POSITION.y * cbObjMatrix._m0[_188].y;
    precise float _212 = _211 + _210;
    precise float _213 = POSITION.z * cbObjMatrix._m0[_188].z;
    precise float _214 = _213 + _212;
    precise float _215 = 1.0 * cbObjMatrix._m0[_188].w;
    precise float _216 = _215 + _214;
    precise float _217 = POSITION.x * cbObjMatrix._m0[_195].x;
    precise float _218 = POSITION.y * cbObjMatrix._m0[_195].y;
    precise float _219 = _218 + _217;
    precise float _220 = POSITION.z * cbObjMatrix._m0[_195].z;
    precise float _221 = _220 + _219;
    precise float _222 = 1.0 * cbObjMatrix._m0[_195].w;
    precise float _223 = _222 + _221;
    float _227 = fma(_150, cbObjMatrix._m0[_181].z, fma(_149, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _147));
    float _230 = fma(_150, cbObjMatrix._m0[_188].z, fma(_149, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_188].x * _147));
    float _233 = fma(_150, cbObjMatrix._m0[_195].z, fma(_149, cbObjMatrix._m0[_195].y, cbObjMatrix._m0[_195].x * _147));
    float _239 = cbSceneParam._m0[3u].x - cbObjMatrix._m0[_181].w;
    float _240 = cbSceneParam._m0[3u].y - cbObjMatrix._m0[_188].w;
    float _241 = cbSceneParam._m0[3u].z - cbObjMatrix._m0[_195].w;
    float _245 = inversesqrt(dot(vec3(_239, _240, _241), vec3(_239, _240, _241)));
    float _246 = _239 * _245;
    float _247 = _240 * _245;
    float _248 = _241 * _245;
    uint _249 = _71 * 26u;
    uint _250 = _249 + 24u;
    uint _258 = _249 + 25u;
    float _265 = dot(vec3(cbObjMatrix._m0[_181].x, cbObjMatrix._m0[_188].x, cbObjMatrix._m0[_195].x), vec3(_246, _247, _248));
    float _271 = dot(vec3(cbObjMatrix._m0[_181].z, cbObjMatrix._m0[_188].z, cbObjMatrix._m0[_195].z), vec3(_246, _247, _248));
    float _277 = (_271 * cbObjMatrix._m0[_181].z) + (_265 * cbObjMatrix._m0[_181].x);
    float _278 = (_271 * cbObjMatrix._m0[_188].z) + (_265 * cbObjMatrix._m0[_188].x);
    float _279 = (_271 * cbObjMatrix._m0[_195].z) + (_265 * cbObjMatrix._m0[_195].x);
    float _283 = inversesqrt(dot(vec3(_277, _278, _279), vec3(_277, _278, _279)));
    float _287 = dot(vec3(_277 * _283, _278 * _283, _279 * _283), vec3(_227, _230, _233));
    bool _292 = abs(_149) > 0.999000012874603271484375;
    bool _294 = !_292;
    float _297;
    if ((_287 <= cbInstanceSlodData._m0[_250].x) && _294)
    {
        _297 = -1.0;
    }
    else
    {
        float _387 = inversesqrt(dot(vec3(cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_195].y), vec3(cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_195].y)));
        float _394 = abs(dot(vec3(_246, _247, _248), vec3(_387 * cbObjMatrix._m0[_181].y, _387 * cbObjMatrix._m0[_188].y, _387 * cbObjMatrix._m0[_195].y)));
        bool _395 = _394 > 0.707106769084930419921875;
        float _410;
        if (_292 && _395)
        {
            float _398 = cbInstanceSlodData._m0[_250].w - cbInstanceSlodData._m0[_250].z;
            float _404 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _398 : (isnan(_398) ? 9.9999997473787516355514526367188e-05 : max(_398, 9.9999997473787516355514526367188e-05)))) * (_394 - cbInstanceSlodData._m0[_250].w)) + 1.0;
            float _405 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
            _410 = isnan(1.0) ? _405 : (isnan(_405) ? 1.0 : min(_405, 1.0));
        }
        else
        {
            float frontier_phi_5_4_ladder;
            if ((_394 <= cbInstanceSlodData._m0[_258].z) && (_395 && _294))
            {
                float _416 = cbInstanceSlodData._m0[_258].y - cbInstanceSlodData._m0[_258].x;
                float _421 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _416 : (isnan(_416) ? 9.9999997473787516355514526367188e-05 : max(_416, 9.9999997473787516355514526367188e-05)))) * (_394 - cbInstanceSlodData._m0[_258].y)) + 1.0;
                float _422 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
                float _424 = 1.0 - (isnan(1.0) ? _422 : (isnan(_422) ? 1.0 : min(_422, 1.0)));
                float _425 = cbInstanceSlodData._m0[_250].y - cbInstanceSlodData._m0[_250].x;
                float _430 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _425 : (isnan(_425) ? 9.9999997473787516355514526367188e-05 : max(_425, 9.9999997473787516355514526367188e-05)))) * (_287 - cbInstanceSlodData._m0[_250].y)) + 1.0;
                float _431 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
                float _432 = isnan(1.0) ? _431 : (isnan(_431) ? 1.0 : min(_431, 1.0));
                frontier_phi_5_4_ladder = isnan(_424) ? _432 : (isnan(_432) ? _424 : min(_432, _424));
            }
            else
            {
                float frontier_phi_5_4_ladder_7_ladder;
                if (_292 || _395)
                {
                    frontier_phi_5_4_ladder_7_ladder = -1.0;
                }
                else
                {
                    float _434 = cbInstanceSlodData._m0[_250].y - cbInstanceSlodData._m0[_250].x;
                    float _439 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _434 : (isnan(_434) ? 9.9999997473787516355514526367188e-05 : max(_434, 9.9999997473787516355514526367188e-05)))) * (_287 - cbInstanceSlodData._m0[_250].y)) + 1.0;
                    float _440 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
                    frontier_phi_5_4_ladder_7_ladder = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
                }
                frontier_phi_5_4_ladder = frontier_phi_5_4_ladder_7_ladder;
            }
            _410 = frontier_phi_5_4_ladder;
        }
        float _413 = isnan(-1.0) ? _410 : (isnan(_410) ? (-1.0) : max(_410, -1.0));
        _297 = (isnan(1.0) ? _413 : (isnan(_413) ? 1.0 : min(_413, 1.0))) + 0.0625;
    }
    precise float _312 = _209 - cbSceneParam._m0[3u].x;
    precise float _313 = _216 - cbSceneParam._m0[3u].y;
    precise float _314 = _223 - cbSceneParam._m0[3u].z;
    precise float _340 = _312 * cbSceneParam._m0[24u].x;
    precise float _341 = _313 * cbSceneParam._m0[24u].y;
    precise float _342 = _341 + _340;
    precise float _343 = _314 * cbSceneParam._m0[24u].z;
    precise float _344 = _343 + _342;
    precise float _345 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _346 = _345 + _344;
    precise float _347 = _312 * cbSceneParam._m0[25u].x;
    precise float _348 = _313 * cbSceneParam._m0[25u].y;
    precise float _349 = _348 + _347;
    precise float _350 = _314 * cbSceneParam._m0[25u].z;
    precise float _351 = _350 + _349;
    precise float _352 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _353 = _352 + _351;
    precise float _354 = _312 * cbSceneParam._m0[26u].x;
    precise float _355 = _313 * cbSceneParam._m0[26u].y;
    precise float _356 = _355 + _354;
    precise float _357 = _314 * cbSceneParam._m0[26u].z;
    precise float _358 = _357 + _356;
    precise float _359 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _360 = _359 + _358;
    precise float _361 = _312 * cbSceneParam._m0[27u].x;
    precise float _362 = _313 * cbSceneParam._m0[27u].y;
    precise float _363 = _362 + _361;
    precise float _364 = _314 * cbSceneParam._m0[27u].z;
    precise float _365 = _364 + _363;
    precise float _366 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _367 = _366 + _365;
    gl_Position.x = _346;
    gl_Position.y = _353;
    gl_Position.z = _360;
    gl_Position.w = _367;
    NORMAL_1.x = _227;
    NORMAL_1.y = _230;
    NORMAL_1.z = _233;
    NORMAL_1.w = float(_171);
    TANGENT_1.x = fma(_162, cbObjMatrix._m0[_181].z, fma(_161, cbObjMatrix._m0[_181].y, cbObjMatrix._m0[_181].x * _160));
    TANGENT_1.y = fma(_162, cbObjMatrix._m0[_188].z, fma(_161, cbObjMatrix._m0[_188].y, cbObjMatrix._m0[_188].x * _160));
    TANGENT_1.z = fma(_162, cbObjMatrix._m0[_195].z, fma(_161, cbObjMatrix._m0[_195].y, cbObjMatrix._m0[_195].x * _160));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_9 = _297;
    gl_CullDistance[0u] = (_297 < 0.0) ? (-1.0) : 0.0;
}


