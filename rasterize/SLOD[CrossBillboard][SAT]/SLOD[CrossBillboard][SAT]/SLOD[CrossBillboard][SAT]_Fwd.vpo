#version 460

out float gl_ClipDistance[2];
out float gl_CullDistance[1];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 12, std140) uniform cbInstanceSlodDataUBO
{
    vec4 _m0[52];
} cbInstanceSlodData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;
layout(location = 4, component = 3) out float TEXCOORD_9;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_9 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_CullDistance[0u] = 0.0;
    float _157 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _170 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _178 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    uvec4 _180 = texelFetch(g_InstanceIndexBuffer, int(_178));
    uint _181 = _180.x;
    uint _183 = _181 * 13u;
    uint _191 = (floatBitsToUint(cbInstanceData._m0[_183 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _198 = _191 + 1u;
    uint _205 = _191 + 2u;
    precise float _212 = POSITION.x * cbObjMatrix._m0[_191].x;
    precise float _213 = POSITION.y * cbObjMatrix._m0[_191].y;
    precise float _214 = _213 + _212;
    precise float _215 = POSITION.z * cbObjMatrix._m0[_191].z;
    precise float _216 = _215 + _214;
    precise float _217 = 1.0 * cbObjMatrix._m0[_191].w;
    precise float _219 = _217 + _216;
    precise float _220 = POSITION.x * cbObjMatrix._m0[_198].x;
    precise float _221 = POSITION.y * cbObjMatrix._m0[_198].y;
    precise float _222 = _221 + _220;
    precise float _223 = POSITION.z * cbObjMatrix._m0[_198].z;
    precise float _224 = _223 + _222;
    precise float _225 = 1.0 * cbObjMatrix._m0[_198].w;
    precise float _226 = _225 + _224;
    precise float _227 = POSITION.x * cbObjMatrix._m0[_205].x;
    precise float _228 = POSITION.y * cbObjMatrix._m0[_205].y;
    precise float _229 = _228 + _227;
    precise float _230 = POSITION.z * cbObjMatrix._m0[_205].z;
    precise float _231 = _230 + _229;
    precise float _232 = 1.0 * cbObjMatrix._m0[_205].w;
    precise float _233 = _232 + _231;
    float _237 = fma(_160, cbObjMatrix._m0[_191].z, fma(_159, cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_191].x * _157));
    float _240 = fma(_160, cbObjMatrix._m0[_198].z, fma(_159, cbObjMatrix._m0[_198].y, cbObjMatrix._m0[_198].x * _157));
    float _243 = fma(_160, cbObjMatrix._m0[_205].z, fma(_159, cbObjMatrix._m0[_205].y, cbObjMatrix._m0[_205].x * _157));
    float _249 = cbSceneParam._m0[3u].x - cbObjMatrix._m0[_191].w;
    float _250 = cbSceneParam._m0[3u].y - cbObjMatrix._m0[_198].w;
    float _251 = cbSceneParam._m0[3u].z - cbObjMatrix._m0[_205].w;
    float _255 = inversesqrt(dot(vec3(_249, _250, _251), vec3(_249, _250, _251)));
    float _256 = _249 * _255;
    float _257 = _250 * _255;
    float _258 = _251 * _255;
    uint _259 = _76 * 26u;
    uint _260 = _259 + 24u;
    uint _268 = _259 + 25u;
    float _275 = dot(vec3(cbObjMatrix._m0[_191].x, cbObjMatrix._m0[_198].x, cbObjMatrix._m0[_205].x), vec3(_256, _257, _258));
    float _281 = dot(vec3(cbObjMatrix._m0[_191].z, cbObjMatrix._m0[_198].z, cbObjMatrix._m0[_205].z), vec3(_256, _257, _258));
    float _287 = (_281 * cbObjMatrix._m0[_191].z) + (_275 * cbObjMatrix._m0[_191].x);
    float _288 = (_281 * cbObjMatrix._m0[_198].z) + (_275 * cbObjMatrix._m0[_198].x);
    float _289 = (_281 * cbObjMatrix._m0[_205].z) + (_275 * cbObjMatrix._m0[_205].x);
    float _293 = inversesqrt(dot(vec3(_287, _288, _289), vec3(_287, _288, _289)));
    float _297 = dot(vec3(_287 * _293, _288 * _293, _289 * _293), vec3(_237, _240, _243));
    bool _302 = abs(_159) > 0.999000012874603271484375;
    bool _304 = !_302;
    float _307;
    if ((_297 <= cbInstanceSlodData._m0[_260].x) && _304)
    {
        _307 = -1.0;
    }
    else
    {
        float _422 = inversesqrt(dot(vec3(cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_198].y, cbObjMatrix._m0[_205].y), vec3(cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_198].y, cbObjMatrix._m0[_205].y)));
        float _429 = abs(dot(vec3(_256, _257, _258), vec3(_422 * cbObjMatrix._m0[_191].y, _422 * cbObjMatrix._m0[_198].y, _422 * cbObjMatrix._m0[_205].y)));
        bool _430 = _429 > 0.707106769084930419921875;
        float _445;
        if (_302 && _430)
        {
            float _433 = cbInstanceSlodData._m0[_260].w - cbInstanceSlodData._m0[_260].z;
            float _439 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _433 : (isnan(_433) ? 9.9999997473787516355514526367188e-05 : max(_433, 9.9999997473787516355514526367188e-05)))) * (_429 - cbInstanceSlodData._m0[_260].w)) + 1.0;
            float _440 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
            _445 = isnan(1.0) ? _440 : (isnan(_440) ? 1.0 : min(_440, 1.0));
        }
        else
        {
            float frontier_phi_5_4_ladder;
            if ((_429 <= cbInstanceSlodData._m0[_268].z) && (_430 && _304))
            {
                float _451 = cbInstanceSlodData._m0[_268].y - cbInstanceSlodData._m0[_268].x;
                float _456 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _451 : (isnan(_451) ? 9.9999997473787516355514526367188e-05 : max(_451, 9.9999997473787516355514526367188e-05)))) * (_429 - cbInstanceSlodData._m0[_268].y)) + 1.0;
                float _457 = isnan(0.0) ? _456 : (isnan(_456) ? 0.0 : max(_456, 0.0));
                float _459 = 1.0 - (isnan(1.0) ? _457 : (isnan(_457) ? 1.0 : min(_457, 1.0)));
                float _460 = cbInstanceSlodData._m0[_260].y - cbInstanceSlodData._m0[_260].x;
                float _465 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _460 : (isnan(_460) ? 9.9999997473787516355514526367188e-05 : max(_460, 9.9999997473787516355514526367188e-05)))) * (_297 - cbInstanceSlodData._m0[_260].y)) + 1.0;
                float _466 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
                float _467 = isnan(1.0) ? _466 : (isnan(_466) ? 1.0 : min(_466, 1.0));
                frontier_phi_5_4_ladder = isnan(_459) ? _467 : (isnan(_467) ? _459 : min(_467, _459));
            }
            else
            {
                float frontier_phi_5_4_ladder_7_ladder;
                if (_302 || _430)
                {
                    frontier_phi_5_4_ladder_7_ladder = -1.0;
                }
                else
                {
                    float _469 = cbInstanceSlodData._m0[_260].y - cbInstanceSlodData._m0[_260].x;
                    float _474 = ((1.0 / (isnan(9.9999997473787516355514526367188e-05) ? _469 : (isnan(_469) ? 9.9999997473787516355514526367188e-05 : max(_469, 9.9999997473787516355514526367188e-05)))) * (_297 - cbInstanceSlodData._m0[_260].y)) + 1.0;
                    float _475 = isnan(0.0) ? _474 : (isnan(_474) ? 0.0 : max(_474, 0.0));
                    frontier_phi_5_4_ladder_7_ladder = isnan(1.0) ? _475 : (isnan(_475) ? 1.0 : min(_475, 1.0));
                }
                frontier_phi_5_4_ladder = frontier_phi_5_4_ladder_7_ladder;
            }
            _445 = frontier_phi_5_4_ladder;
        }
        float _448 = isnan(-1.0) ? _445 : (isnan(_445) ? (-1.0) : max(_445, -1.0));
        _307 = (isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0))) + 0.0625;
    }
    precise float _322 = _219 - cbSceneParam._m0[3u].x;
    precise float _323 = _226 - cbSceneParam._m0[3u].y;
    precise float _324 = _233 - cbSceneParam._m0[3u].z;
    precise float _350 = _322 * cbSceneParam._m0[24u].x;
    precise float _351 = _323 * cbSceneParam._m0[24u].y;
    precise float _352 = _351 + _350;
    precise float _353 = _324 * cbSceneParam._m0[24u].z;
    precise float _354 = _353 + _352;
    precise float _355 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _356 = _355 + _354;
    precise float _357 = _322 * cbSceneParam._m0[25u].x;
    precise float _358 = _323 * cbSceneParam._m0[25u].y;
    precise float _359 = _358 + _357;
    precise float _360 = _324 * cbSceneParam._m0[25u].z;
    precise float _361 = _360 + _359;
    precise float _362 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _363 = _362 + _361;
    precise float _364 = _322 * cbSceneParam._m0[26u].x;
    precise float _365 = _323 * cbSceneParam._m0[26u].y;
    precise float _366 = _365 + _364;
    precise float _367 = _324 * cbSceneParam._m0[26u].z;
    precise float _368 = _367 + _366;
    precise float _369 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _370 = _369 + _368;
    precise float _371 = _322 * cbSceneParam._m0[27u].x;
    precise float _372 = _323 * cbSceneParam._m0[27u].y;
    precise float _373 = _372 + _371;
    precise float _374 = _324 * cbSceneParam._m0[27u].z;
    precise float _375 = _374 + _373;
    precise float _376 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _377 = _376 + _375;
    gl_Position.x = _356;
    gl_Position.y = _363;
    gl_Position.z = _370;
    gl_Position.w = _377;
    POSITION_1.x = _356;
    POSITION_1.y = _363;
    POSITION_1.z = _370;
    POSITION_1.w = _377;
    NORMAL_1.x = _237;
    NORMAL_1.y = _240;
    NORMAL_1.z = _243;
    NORMAL_1.w = float(_181);
    TANGENT_1.x = fma(_172, cbObjMatrix._m0[_191].z, fma(_171, cbObjMatrix._m0[_191].y, cbObjMatrix._m0[_191].x * _170));
    TANGENT_1.y = fma(_172, cbObjMatrix._m0[_198].z, fma(_171, cbObjMatrix._m0[_198].y, cbObjMatrix._m0[_198].x * _170));
    TANGENT_1.z = fma(_172, cbObjMatrix._m0[_205].z, fma(_171, cbObjMatrix._m0[_205].y, cbObjMatrix._m0[_205].x * _170));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_9 = _307;
    gl_ClipDistance[0u] = dot(vec4(_356, _363, _370, _377), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_356, _363, _370, _377), vec4(cbInstanceData._m0[_183 + 3u]));
    gl_CullDistance[0u] = (_307 < 0.0) ? (-1.0) : 0.0;
}


