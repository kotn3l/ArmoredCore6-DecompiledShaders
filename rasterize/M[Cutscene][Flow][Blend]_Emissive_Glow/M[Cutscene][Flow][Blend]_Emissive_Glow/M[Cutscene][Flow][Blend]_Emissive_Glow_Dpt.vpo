#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 6) in ivec2 TEXCOORD_1;
layout(location = 7) in vec4 TEXCOORD_2;
layout(location = 8) in vec4 TEXCOORD_3;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    uint _88 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uint _93 = texelFetch(g_InstanceIndexBuffer, int(_88)).x * 13u;
    uint _102 = (floatBitsToUint(cbInstanceData._m0[_93 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _109 = _102 + 1u;
    uint _116 = _102 + 2u;
    precise float _123 = POSITION.x * cbObjMatrix._m0[_102].x;
    precise float _124 = POSITION.y * cbObjMatrix._m0[_102].y;
    precise float _125 = _124 + _123;
    precise float _126 = POSITION.z * cbObjMatrix._m0[_102].z;
    precise float _127 = _126 + _125;
    precise float _128 = 1.0 * cbObjMatrix._m0[_102].w;
    precise float _130 = _128 + _127;
    precise float _131 = POSITION.x * cbObjMatrix._m0[_109].x;
    precise float _132 = POSITION.y * cbObjMatrix._m0[_109].y;
    precise float _133 = _132 + _131;
    precise float _134 = POSITION.z * cbObjMatrix._m0[_109].z;
    precise float _135 = _134 + _133;
    precise float _136 = 1.0 * cbObjMatrix._m0[_109].w;
    precise float _137 = _136 + _135;
    precise float _138 = POSITION.x * cbObjMatrix._m0[_116].x;
    precise float _139 = POSITION.y * cbObjMatrix._m0[_116].y;
    precise float _140 = _139 + _138;
    precise float _141 = POSITION.z * cbObjMatrix._m0[_116].z;
    precise float _142 = _141 + _140;
    precise float _143 = 1.0 * cbObjMatrix._m0[_116].w;
    precise float _144 = _143 + _142;
    precise float _150 = _130 - cbSceneParam._m0[3u].x;
    precise float _151 = _137 - cbSceneParam._m0[3u].y;
    precise float _152 = _144 - cbSceneParam._m0[3u].z;
    precise float _180 = _150 * cbSceneParam._m0[24u].x;
    precise float _181 = _151 * cbSceneParam._m0[24u].y;
    precise float _182 = _181 + _180;
    precise float _183 = _152 * cbSceneParam._m0[24u].z;
    precise float _184 = _183 + _182;
    precise float _185 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _186 = _185 + _184;
    precise float _187 = _150 * cbSceneParam._m0[25u].x;
    precise float _188 = _151 * cbSceneParam._m0[25u].y;
    precise float _189 = _188 + _187;
    precise float _190 = _152 * cbSceneParam._m0[25u].z;
    precise float _191 = _190 + _189;
    precise float _192 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _193 = _192 + _191;
    precise float _194 = _150 * cbSceneParam._m0[26u].x;
    precise float _195 = _151 * cbSceneParam._m0[26u].y;
    precise float _196 = _195 + _194;
    precise float _197 = _152 * cbSceneParam._m0[26u].z;
    precise float _198 = _197 + _196;
    precise float _199 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _200 = _199 + _198;
    precise float _201 = _150 * cbSceneParam._m0[27u].x;
    precise float _202 = _151 * cbSceneParam._m0[27u].y;
    precise float _203 = _202 + _201;
    precise float _204 = _152 * cbSceneParam._m0[27u].z;
    precise float _205 = _204 + _203;
    precise float _206 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _207 = _206 + _205;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _186;
    gl_Position.y = _193;
    gl_Position.z = _200;
    gl_Position.w = _207;
    gl_ClipDistance[0u] = dot(vec4(_186, _193, _200, _207), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_186, _193, _200, _207), vec4(cbInstanceData._m0[_93 + 3u]));
}


