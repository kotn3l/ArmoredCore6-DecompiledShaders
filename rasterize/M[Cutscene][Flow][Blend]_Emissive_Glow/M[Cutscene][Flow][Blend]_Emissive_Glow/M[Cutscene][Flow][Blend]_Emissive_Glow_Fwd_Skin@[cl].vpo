#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_13;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    float _237 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _249 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _261 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _263 = texelFetch(g_InstanceIndexBuffer, int(_261));
    uint _264 = _263.x;
    precise float _265 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _270 = isnan(_265) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _265 : max(0.001000000047497451305389404296875, _265));
    precise float _272 = BLENDWEIGHT.x / _270;
    precise float _273 = BLENDWEIGHT.y / _270;
    precise float _274 = BLENDWEIGHT.z / _270;
    precise float _275 = BLENDWEIGHT.w / _270;
    uvec4 _282 = floatBitsToUint(cbInstanceData._m0[(_264 * 13u) + 4u]);
    uint _283 = _282.x;
    uint _285 = (_283 + uint(float(BLENDINDICES.x))) * 3u;
    uint _292 = _285 + 1u;
    uint _299 = _285 + 2u;
    precise float _306 = _272 * cbObjMatrix._m0[_285].x;
    precise float _307 = _272 * cbObjMatrix._m0[_292].x;
    precise float _308 = _272 * cbObjMatrix._m0[_299].x;
    precise float _309 = _272 * cbObjMatrix._m0[_285].y;
    precise float _310 = _272 * cbObjMatrix._m0[_292].y;
    precise float _311 = _272 * cbObjMatrix._m0[_299].y;
    precise float _312 = _272 * cbObjMatrix._m0[_285].z;
    precise float _313 = _272 * cbObjMatrix._m0[_292].z;
    precise float _314 = _272 * cbObjMatrix._m0[_299].z;
    precise float _315 = _272 * cbObjMatrix._m0[_285].w;
    precise float _316 = _272 * cbObjMatrix._m0[_292].w;
    precise float _317 = _272 * cbObjMatrix._m0[_299].w;
    uint _320 = (_283 + uint(float(BLENDINDICES.y))) * 3u;
    uint _327 = _320 + 1u;
    uint _334 = _320 + 2u;
    precise float _341 = _273 * cbObjMatrix._m0[_320].x;
    precise float _342 = _273 * cbObjMatrix._m0[_327].x;
    precise float _343 = _273 * cbObjMatrix._m0[_334].x;
    precise float _344 = _273 * cbObjMatrix._m0[_320].y;
    precise float _345 = _273 * cbObjMatrix._m0[_327].y;
    precise float _346 = _273 * cbObjMatrix._m0[_334].y;
    precise float _347 = _273 * cbObjMatrix._m0[_320].z;
    precise float _348 = _273 * cbObjMatrix._m0[_327].z;
    precise float _349 = _273 * cbObjMatrix._m0[_334].z;
    precise float _350 = _273 * cbObjMatrix._m0[_320].w;
    precise float _351 = _273 * cbObjMatrix._m0[_327].w;
    precise float _352 = _273 * cbObjMatrix._m0[_334].w;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    uint _367 = (_283 + uint(float(BLENDINDICES.z))) * 3u;
    uint _374 = _367 + 1u;
    uint _381 = _367 + 2u;
    precise float _388 = _274 * cbObjMatrix._m0[_367].x;
    precise float _389 = _274 * cbObjMatrix._m0[_374].x;
    precise float _390 = _274 * cbObjMatrix._m0[_381].x;
    precise float _391 = _274 * cbObjMatrix._m0[_367].y;
    precise float _392 = _274 * cbObjMatrix._m0[_374].y;
    precise float _393 = _274 * cbObjMatrix._m0[_381].y;
    precise float _394 = _274 * cbObjMatrix._m0[_367].z;
    precise float _395 = _274 * cbObjMatrix._m0[_374].z;
    precise float _396 = _274 * cbObjMatrix._m0[_381].z;
    precise float _397 = _274 * cbObjMatrix._m0[_367].w;
    precise float _398 = _274 * cbObjMatrix._m0[_374].w;
    precise float _399 = _274 * cbObjMatrix._m0[_381].w;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    uint _414 = (_283 + uint(float(BLENDINDICES.w))) * 3u;
    uint _421 = _414 + 1u;
    uint _428 = _414 + 2u;
    precise float _435 = _275 * cbObjMatrix._m0[_414].x;
    precise float _436 = _275 * cbObjMatrix._m0[_421].x;
    precise float _437 = _275 * cbObjMatrix._m0[_428].x;
    precise float _438 = _275 * cbObjMatrix._m0[_414].y;
    precise float _439 = _275 * cbObjMatrix._m0[_421].y;
    precise float _440 = _275 * cbObjMatrix._m0[_428].y;
    precise float _441 = _275 * cbObjMatrix._m0[_414].z;
    precise float _442 = _275 * cbObjMatrix._m0[_421].z;
    precise float _443 = _275 * cbObjMatrix._m0[_428].z;
    precise float _444 = _275 * cbObjMatrix._m0[_414].w;
    precise float _445 = _275 * cbObjMatrix._m0[_421].w;
    precise float _446 = _275 * cbObjMatrix._m0[_428].w;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = POSITION.x * _447;
    precise float _460 = POSITION.y * _450;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.z * _453;
    precise float _463 = _462 + _461;
    precise float _464 = 1.0 * _456;
    precise float _465 = _464 + _463;
    precise float _466 = POSITION.x * _448;
    precise float _467 = POSITION.y * _451;
    precise float _468 = _467 + _466;
    precise float _469 = POSITION.z * _454;
    precise float _470 = _469 + _468;
    precise float _471 = 1.0 * _457;
    precise float _472 = _471 + _470;
    precise float _473 = POSITION.x * _449;
    precise float _474 = POSITION.y * _452;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.z * _455;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * _458;
    precise float _479 = _478 + _477;
    precise float _504 = _465 - cbSceneParam._m0[3u].x;
    precise float _505 = _472 - cbSceneParam._m0[3u].y;
    precise float _506 = _479 - cbSceneParam._m0[3u].z;
    precise float _534 = _504 * cbSceneParam._m0[24u].x;
    precise float _535 = _505 * cbSceneParam._m0[24u].y;
    precise float _536 = _535 + _534;
    precise float _537 = _506 * cbSceneParam._m0[24u].z;
    precise float _538 = _537 + _536;
    precise float _539 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _540 = _539 + _538;
    precise float _541 = _504 * cbSceneParam._m0[25u].x;
    precise float _542 = _505 * cbSceneParam._m0[25u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _506 * cbSceneParam._m0[25u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _547 = _546 + _545;
    precise float _548 = _504 * cbSceneParam._m0[26u].x;
    precise float _549 = _505 * cbSceneParam._m0[26u].y;
    precise float _550 = _549 + _548;
    precise float _551 = _506 * cbSceneParam._m0[26u].z;
    precise float _552 = _551 + _550;
    precise float _553 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _554 = _553 + _552;
    precise float _555 = _504 * cbSceneParam._m0[27u].x;
    precise float _556 = _505 * cbSceneParam._m0[27u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _506 * cbSceneParam._m0[27u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _561 = _560 + _559;
    gl_Position.x = _540;
    gl_Position.y = _547;
    gl_Position.z = _554;
    gl_Position.w = _561;
    POSITION_1.x = _540;
    POSITION_1.y = _547;
    POSITION_1.z = _554;
    POSITION_1.w = _561;
    NORMAL_1.x = fma(_240, _453, fma(_239, _450, _447 * _237));
    NORMAL_1.y = fma(_240, _454, fma(_239, _451, _448 * _237));
    NORMAL_1.z = fma(_240, _455, fma(_239, _452, _449 * _237));
    NORMAL_1.w = float(_264);
    TANGENT_1.x = fma(_251, _453, fma(_250, _450, _447 * _249));
    TANGENT_1.y = fma(_251, _454, fma(_250, _451, _448 * _249));
    TANGENT_1.z = fma(_251, _455, fma(_250, _452, _449 * _249));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
}


