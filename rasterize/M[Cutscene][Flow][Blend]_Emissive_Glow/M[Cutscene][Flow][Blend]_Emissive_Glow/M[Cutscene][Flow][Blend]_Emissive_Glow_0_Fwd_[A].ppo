#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 12) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 9) uniform texture2D M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in vec4 TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1375;
float _1376;
float _1377;
float _1378;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _187 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _188 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _189 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _195 = inversesqrt(dot(vec3(_187, _188, _189), vec3(_187, _188, _189)));
    float _196 = _195 * _187;
    float _197 = _195 * _188;
    float _198 = _195 * _189;
    float _202 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = _202 * NORMAL.x;
    float _204 = _202 * NORMAL.y;
    float _205 = _202 * NORMAL.z;
    float _209 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _210 = _209 * TANGENT.x;
    float _211 = _209 * TANGENT.y;
    float _212 = _209 * TANGENT.z;
    float _1387 = isnan(0.0) ? cbMtdParam._m0[19u].x : (isnan(cbMtdParam._m0[19u].x) ? 0.0 : max(cbMtdParam._m0[19u].x, 0.0));
    float _220 = isnan(1.0) ? _1387 : (isnan(_1387) ? 1.0 : min(_1387, 1.0));
    float _1398 = isnan(0.0) ? cbMtdParam._m0[18u].z : (isnan(cbMtdParam._m0[18u].z) ? 0.0 : max(cbMtdParam._m0[18u].z, 0.0));
    float _268 = ((_220 - ((1.0 - (isnan(1.0) ? _1398 : (isnan(_1398) ? 1.0 : min(_1398, 1.0)))) * (_220 + 1.0))) + (((cbMtdParam._m0[19u].y * texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_4.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_4.w) + cbTextureTilingScale._m0[2u].w)).x) + (cbMtdParam._m0[19u].w * texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_11, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD_8.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD_8.y) + cbTextureTilingScale._m0[3u].w)).x)) / cbMtdParam._m0[19u].z)) / _220;
    float _1409 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _269 = isnan(1.0) ? _1409 : (isnan(_1409) ? 1.0 : min(_1409, 1.0));
    float _275 = (_269 * _269) * (3.0 - (_269 * 2.0));
    float _1420 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    float _293 = cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x;
    uint _298 = uint(roundEven(NORMAL.w)) * 13u;
    uint _304 = _298 + 1u;
    uint _309 = _298 + 2u;
    float _319 = sqrt(((cbInstanceData._m0[_304].x * cbInstanceData._m0[_304].x) + (cbInstanceData._m0[_298].x * cbInstanceData._m0[_298].x)) + (cbInstanceData._m0[_309].x * cbInstanceData._m0[_309].x));
    float _325 = sqrt(((cbInstanceData._m0[_304].y * cbInstanceData._m0[_304].y) + (cbInstanceData._m0[_298].y * cbInstanceData._m0[_298].y)) + (cbInstanceData._m0[_309].y * cbInstanceData._m0[_309].y));
    float _326 = _319 * ((_293 * cbMtdParam._m0[25u].x) + TEXCOORD_4.x);
    float _327 = _325 * ((_293 * cbMtdParam._m0[25u].y) + TEXCOORD_4.y);
    vec4 _353 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * (_319 * ((_293 * cbMtdParam._m0[25u].z) + TEXCOORD_4.x))) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * (_325 * ((_293 * cbMtdParam._m0[25u].w) + TEXCOORD_4.y))) + cbTextureTilingScale._m0[10u].w));
    float _359 = (_353.x * 2.0) + (-1.0);
    float _361 = (_353.y * 2.0) + (-1.0);
    float _365 = 1.0 - dot(vec2(_359, _361), vec2(_359, _361));
    float _1431 = isnan(0.0) ? _365 : (isnan(_365) ? 0.0 : max(_365, 0.0));
    float _367 = sqrt(isnan(1.0) ? _1431 : (isnan(_1431) ? 1.0 : min(_1431, 1.0)));
    float _370 = fma(_367, _203, fma(_361, _210, _359 * _196));
    float _373 = fma(_367, _204, fma(_361, _211, _359 * _197));
    float _376 = fma(_367, _205, fma(_361, _212, _359 * _198));
    float _380 = inversesqrt(dot(vec3(_370, _373, _376), vec3(_370, _373, _376)));
    float _382 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[17u].y;
    float _383 = _382 * cbMtdParam._m0[17u].x;
    float _387 = ((_370 * 0.5) * _380) + (-0.25);
    float _391 = ((_373 * 0.5) * _380) + (-0.25);
    float _392 = _391 * cbMtdParam._m0[16u].w;
    float _394 = (-0.0) - (cbMtdParam._m0[16u].w * _387);
    float _396 = fract(_383);
    float _398 = fract(_383 + 0.5);
    float _409 = abs((_396 * 2.0) + (-1.0));
    vec4 _425 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_396 * _394) + _326) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_392 * _396) + _327) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    vec4 _430 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((((_398 * _394) + _326) * cbTextureTilingScale._m0[13u].x) + cbTextureTilingScale._m0[13u].z, (((_392 * _398) + _327) * cbTextureTilingScale._m0[13u].y) + cbTextureTilingScale._m0[13u].w));
    float _448 = cbMtdParam._m0[22u].w * TEXCOORD_8.w;
    float _462 = _319 * ((_293 * cbMtdParam._m0[26u].z) + TEXCOORD_4.x);
    float _463 = _325 * ((_293 * cbMtdParam._m0[26u].w) + TEXCOORD_4.y);
    float _469 = _382 * cbMtdParam._m0[16u].y;
    float _470 = _391 * cbMtdParam._m0[21u].w;
    float _472 = (-0.0) - (cbMtdParam._m0[21u].w * _387);
    float _473 = fract(_469);
    float _475 = fract(_469 + 0.5);
    float _486 = abs((_473 * 2.0) + (-1.0));
    vec4 _503 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_473 * _472) + _462) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_470 * _473) + _463) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _505 = _503.x;
    float _506 = _503.y;
    float _507 = _503.z;
    vec4 _508 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((_475 * _472) + _462) * cbTextureTilingScale._m0[8u].x) + cbTextureTilingScale._m0[8u].z, (((_470 * _475) + _463) * cbTextureTilingScale._m0[8u].y) + cbTextureTilingScale._m0[8u].w));
    float _539 = _319 * ((_293 * cbMtdParam._m0[23u].x) + TEXCOORD_4.x);
    float _540 = _325 * ((_293 * cbMtdParam._m0[23u].y) + TEXCOORD_4.y);
    float _543 = _382 * cbMtdParam._m0[18u].w;
    float _544 = _391 * cbMtdParam._m0[21u].x;
    float _546 = (-0.0) - (cbMtdParam._m0[21u].x * _387);
    float _547 = fract(_543);
    float _549 = fract(_543 + 0.5);
    float _560 = abs((_547 * 2.0) + (-1.0));
    vec4 _576 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_547 * _546) + _539) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_544 * _547) + _540) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _578 = _576.x;
    float _579 = _576.y;
    float _580 = _576.z;
    vec4 _581 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_549 * _546) + _539) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((_544 * _549) + _540) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _615 = _319 * ((_293 * cbMtdParam._m0[24u].z) + TEXCOORD_4.x);
    float _616 = _325 * ((_293 * cbMtdParam._m0[24u].w) + TEXCOORD_4.y);
    float _619 = _382 * cbMtdParam._m0[17u].z;
    float _620 = _391 * cbMtdParam._m0[17u].w;
    float _622 = (-0.0) - (cbMtdParam._m0[17u].w * _387);
    float _623 = fract(_619);
    float _625 = fract(_619 + 0.5);
    float _636 = abs((_623 * 2.0) + (-1.0));
    vec4 _653 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_623 * _622) + _615) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_620 * _623) + _616) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _655 = _653.x;
    float _656 = _653.y;
    float _657 = _653.z;
    vec4 _658 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2((((_625 * _622) + _615) * cbTextureTilingScale._m0[12u].x) + cbTextureTilingScale._m0[12u].z, (((_620 * _625) + _616) * cbTextureTilingScale._m0[12u].y) + cbTextureTilingScale._m0[12u].w));
    float _675 = (((((_581.x - _578) * _560) + _578) * cbMtdParam._m0[11u].x) + ((((_508.x - _505) * _486) + _505) * cbMtdParam._m0[10u].x)) + ((((_658.x - _655) * _636) + _655) * cbMtdParam._m0[13u].x);
    float _676 = (((((_581.y - _579) * _560) + _579) * cbMtdParam._m0[11u].y) + ((((_508.y - _506) * _486) + _506) * cbMtdParam._m0[10u].y)) + ((((_658.y - _656) * _636) + _656) * cbMtdParam._m0[13u].y);
    float _677 = (((((_581.z - _580) * _560) + _580) * cbMtdParam._m0[11u].z) + ((((_508.z - _507) * _486) + _507) * cbMtdParam._m0[10u].z)) + ((((_658.z - _657) * _636) + _657) * cbMtdParam._m0[13u].z);
    float _689 = _319 * ((_293 * cbMtdParam._m0[26u].x) + TEXCOORD_4.x);
    float _690 = _325 * ((_293 * cbMtdParam._m0[26u].y) + TEXCOORD_4.y);
    vec4 _715 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_5, SS_BumpMap), vec2(((_319 * ((_293 * cbMtdParam._m0[27u].x) + TEXCOORD_4.x)) * cbTextureTilingScale._m0[11u].x) + cbTextureTilingScale._m0[11u].z, ((_325 * ((_293 * cbMtdParam._m0[27u].y) + TEXCOORD_4.y)) * cbTextureTilingScale._m0[11u].y) + cbTextureTilingScale._m0[11u].w));
    float _721 = (_715.x * 2.0) + (-1.0);
    float _722 = (_715.y * 2.0) + (-1.0);
    float _726 = 1.0 - dot(vec2(_721, _722), vec2(_721, _722));
    float _1442 = isnan(0.0) ? _726 : (isnan(_726) ? 0.0 : max(_726, 0.0));
    float _728 = sqrt(isnan(1.0) ? _1442 : (isnan(_1442) ? 1.0 : min(_1442, 1.0)));
    float _731 = fma(_728, _203, fma(_722, _210, _721 * _196));
    float _734 = fma(_728, _204, fma(_722, _211, _721 * _197));
    float _737 = fma(_728, _205, fma(_722, _212, _721 * _198));
    float _741 = inversesqrt(dot(vec3(_731, _734, _737), vec3(_731, _734, _737)));
    float _742 = _382 * cbMtdParam._m0[22u].y;
    float _749 = (((_734 * 0.5) * _741) + (-0.25)) * cbMtdParam._m0[22u].x;
    float _751 = (-0.0) - (cbMtdParam._m0[22u].x * (((_731 * 0.5) * _741) + (-0.25)));
    float _752 = fract(_742);
    float _754 = fract(_742 + 0.5);
    float _765 = abs((_752 * 2.0) + (-1.0));
    vec4 _782 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_752 * _751) + _689) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_749 * _752) + _690) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w));
    float _784 = _782.x;
    float _785 = _782.y;
    float _786 = _782.z;
    vec4 _787 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((_754 * _751) + _689) * cbTextureTilingScale._m0[9u].x) + cbTextureTilingScale._m0[9u].z, (((_749 * _754) + _690) * cbTextureTilingScale._m0[9u].y) + cbTextureTilingScale._m0[9u].w));
    float _805 = cbMtdParam._m0[16u].z * TEXCOORD_8.z;
    float _812 = (_805 * (((((_787.x - _784) * _765) + _784) * cbMtdParam._m0[12u].x) - _675)) + _675;
    float _813 = (_805 * (((((_787.y - _785) * _765) + _785) * cbMtdParam._m0[12u].y) - _676)) + _676;
    float _814 = (_805 * (((((_787.z - _786) * _765) + _786) * cbMtdParam._m0[12u].z) - _677)) + _677;
    float _821 = (_448 * (((((_430.x - _427) * _409) + _427) * cbMtdParam._m0[14u].x) - _812)) + _812;
    vec4 _857 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[4u].w));
    float _866 = ((cbMtdParam._m0[20u].z * (-1.2000000476837158203125)) * (1.0 - _857.z)) + 1.0;
    float _1453 = isnan(0.0) ? _866 : (isnan(_866) ? 0.0 : max(_866, 0.0));
    float _888 = (((1.0 - _857.y) * (-1.2000000476837158203125)) * cbMtdParam._m0[20u].y) + 1.0;
    float _1464 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _910 = (((1.0 - _857.x) * (-1.2000000476837158203125)) * cbMtdParam._m0[20u].x) + 1.0;
    float _1475 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _914 = (((cbMtdParam._m0[20u].w * texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_13, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[5u].w)).x) + (-1.0)) * (isnan(1.0) ? _1475 : (isnan(_1475) ? 1.0 : min(_1475, 1.0)))) + 1.0;
    float _917 = (((cbMtdParam._m0[21u].y * texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[7u].w)).x) - _914) * (isnan(1.0) ? _1464 : (isnan(_1464) ? 1.0 : min(_1464, 1.0)))) + _914;
    float _920 = (((cbMtdParam._m0[21u].z * texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[6u].w)).x) - _917) * (isnan(1.0) ? _1453 : (isnan(_1453) ? 1.0 : min(_1453, 1.0)))) + _917;
    float _1486 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
    vec4 _933 = texture(sampler2D(M_Cutscene_Flow_Blend_Emissive_Glow_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD_4.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD_4.y) + cbTextureTilingScale._m0[14u].w));
    float _940 = (((((isnan(1.0) ? _1420 : (isnan(_1420) ? 1.0 : min(_1420, 1.0))) * TEXCOORD.w) * cbMtdParam._m0[22u].z) * _821) * (isnan(1.0) ? _1486 : (isnan(_1486) ? 1.0 : min(_1486, 1.0)))) * _933.x;
    float _1497 = isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0));
    float _966 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1006 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1016 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1006);
    float _1017 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1006);
    float _1018 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1006);
    vec4 _1023 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _1025 = _1023.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1110 = sqrt(((_1016 * _1016) + (_1017 * _1017)) + (_1018 * _1018));
        float _1116 = (cbMatDynParam._m0[5u].x * _1110) + cbMatDynParam._m0[5u].y;
        float _1508 = isnan(0.0) ? _1116 : (isnan(_1116) ? 0.0 : max(_1116, 0.0));
        float _1117 = isnan(1.0) ? _1508 : (isnan(_1508) ? 1.0 : min(_1508, 1.0));
        float _1121 = (cbMatDynParam._m0[5u].z * _1110) + cbMatDynParam._m0[5u].w;
        float _1519 = isnan(0.0) ? _1121 : (isnan(_1121) ? 0.0 : max(_1121, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1519 : (isnan(_1519) ? 1.0 : min(_1519, 1.0))) - _1117)) + _1117) < ((_1025 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _1042 = _298 + 9u;
    uint _1043 = _1042 + uint(cbMatDynParam._m0[0u].w);
    float _1049 = (cbMtdParam._m0[16u].x * (_821 + TEXCOORD.x)) * cbInstanceData._m0[_1043].x;
    float _1050 = (cbMtdParam._m0[16u].x * ((_813 + TEXCOORD.y) + (_448 * (((((_430.y - _428) * _409) + _428) * cbMtdParam._m0[14u].y) - _813)))) * cbInstanceData._m0[_1043].y;
    float _1051 = (cbMtdParam._m0[16u].x * ((_814 + TEXCOORD.z) + (_448 * (((((_430.z - _429) * _409) + _429) * cbMtdParam._m0[14u].z) - _814)))) * cbInstanceData._m0[_1043].z;
    float _1052 = isnan(0.0) ? _1049 : (isnan(_1049) ? 0.0 : max(_1049, 0.0));
    float _1053 = isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0));
    float _1054 = isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0));
    float _1060 = cbMtdParam._m0[2u].x * _1049;
    float _1061 = cbMtdParam._m0[2u].y * _1050;
    float _1062 = cbMtdParam._m0[2u].z * _1051;
    float _1545 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _1064 = isnan(1.0) ? _1545 : (isnan(_1545) ? 1.0 : min(_1545, 1.0));
    float _1069 = cbInstanceData._m0[_298 + 6u].w * (isnan(1.0) ? _1497 : (isnan(_1497) ? 1.0 : min(_1497, 1.0)));
    float _1075 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _1076 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _1091 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1075, _1076, (log2((isnan(cbSceneParam._m0[77u].w) ? _966 : (isnan(_966) ? cbSceneParam._m0[77u].w : min(_966, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1093 = _1091.x;
    float _1094 = _1091.y;
    float _1095 = _1091.z;
    float _1096 = _1091.w;
    float _1176;
    float _1178;
    float _1180;
    float _1182;
    if (_966 > cbSceneParam._m0[78u].w)
    {
        float _1138 = isnan(_966) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _966 : min(cbSceneParam._m0[80u].w, _966));
        float _1139 = _1138 / _966;
        float _1150 = _1139 * _1016;
        float _1151 = _1017 * _1139;
        float _1152 = (-0.0) - _1151;
        float _1153 = _1139 * _1018;
        float _1155 = (cbSceneParam._m0[77u].w * _1152) / _1138;
        float _1156 = _1155 + cbSceneParam._m0[79u].w;
        float _1157 = cbSceneParam._m0[79u].w - _1151;
        float _1163 = sqrt(((_1150 * _1150) + (_1151 * _1151)) + (_1153 * _1153));
        float _1166 = (1.0 - (cbSceneParam._m0[77u].w / _1138)) * _1163;
        float _1172 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1174 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1303;
        if (abs((_1152 - _1155) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1303 = ((((_1156 > 0.0) ? exp2(_1172 * _1156) : (2.0 - exp2(_1174 * _1156))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1166;
        }
        else
        {
            float _1260 = 1.0 / cbSceneParam._m0[80u].x;
            float _1261 = isnan(_1157) ? _1156 : (isnan(_1156) ? _1157 : max(_1156, _1157));
            float _1262 = isnan(_1157) ? _1156 : (isnan(_1156) ? _1157 : min(_1156, _1157));
            float _1271 = isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : min(_1261, 0.0));
            float _1272 = isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : min(_1262, 0.0));
            _1303 = ((abs(_1163 / _1152) * cbSceneParam._m0[80u].y) * ((((_1271 - _1272) * 2.0) - ((exp2(_1172 * (isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0)))) - exp2(_1172 * (isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0))))) * _1260)) - ((exp2(_1174 * _1271) - exp2(_1174 * _1272)) * _1260))) + (_1166 * cbSceneParam._m0[80u].z);
        }
        vec4 _1305 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1075, _1076, 1.0), 0.0);
        float _1314 = exp2((_1303 * (-1.44269502162933349609375)) * (1.0 - _1305.w));
        float _1315 = log2(_1314);
        float _1331 = log2(_1096);
        _1176 = (exp2(_1331 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1315 * cbSceneParam._m0[78u].x)) * _1305.x) / cbSceneParam._m0[78u].x)) + _1093;
        _1178 = (exp2(_1331 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1315 * cbSceneParam._m0[78u].y)) * _1305.y) / cbSceneParam._m0[78u].y)) + _1094;
        _1180 = (exp2(_1331 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1315 * cbSceneParam._m0[78u].z)) * _1305.z) / cbSceneParam._m0[78u].z)) + _1095;
        _1182 = _1314 * _1096;
    }
    else
    {
        _1176 = _1093;
        _1178 = _1094;
        _1180 = _1095;
        _1182 = _1096;
    }
    bool _1341;
    vec4 _1192;
    vec4 _1215;
    float _1217;
    float _1221;
    float _1222;
    float _1223;
    float _1226;
    float _1229;
    float _1232;
    float _1233;
    bool _1244;
    for (;;)
    {
        _1192 = cbMatDynParam._m0[0u];
        float _1194 = roundEven(_1192.y);
        bool _1195 = _1194 == 3.0;
        float _1196 = log2(_1182);
        float _1200 = exp2(_1196 * cbSceneParam._m0[78u].x);
        float _1201 = exp2(_1196 * cbSceneParam._m0[78u].y);
        float _1202 = exp2(_1196 * cbSceneParam._m0[78u].z);
        float _1203 = _1200 * _1052;
        float _1204 = _1201 * _1053;
        float _1205 = _1202 * _1054;
        float _1212 = _1025 + (-0.5);
        _1215 = cbMtdParam._m0[1u];
        _1217 = _1215.y * _1212;
        float _1220 = (_1194 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1221 = _1220 * (_1195 ? _1203 : (_1203 + (cbSceneParam._m0[72u].w * _1176)));
        _1222 = _1220 * (_1195 ? _1204 : (_1204 + (cbSceneParam._m0[72u].w * _1178)));
        _1223 = _1220 * (_1195 ? _1205 : (_1205 + (cbSceneParam._m0[72u].w * _1180)));
        _1226 = ((_1060 * _1064) * _1200) * _1220;
        _1229 = ((_1061 * _1064) * _1201) * _1220;
        _1232 = ((_1062 * _1064) * _1202) * _1220;
        _1233 = _1212 * 0.999000012874603271484375;
        _1244 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1244)
        {
            if ((cbInstanceData._m0[_298 + 7u].x + _1233) < 0.5)
            {
                _1341 = true;
                break;
            }
        }
        uint _1295 = _1042 + uint(_1192.w);
        if ((cbInstanceData._m0[_1295].w < 1.0) && ((cbInstanceData._m0[_1295].w + _1233) < 0.5))
        {
            _1341 = true;
            break;
        }
        if ((_1217 + 1.0) < _1215.x)
        {
            _1341 = true;
            break;
        }
        _1341 = false;
        break;
    }
    float _1346;
    if (_1341)
    {
        discard_state = true;
        _1346 = 0.0;
    }
    else
    {
        _1346 = _1069;
    }
    SV_Target.x = _1221;
    SV_Target.y = _1222;
    SV_Target.z = _1223;
    SV_Target.w = _1346;
    SV_Target_1.x = _1226;
    SV_Target_1.y = _1229;
    SV_Target_1.z = _1232;
    SV_Target_1.w = _1069;
    discard_exit();
}


