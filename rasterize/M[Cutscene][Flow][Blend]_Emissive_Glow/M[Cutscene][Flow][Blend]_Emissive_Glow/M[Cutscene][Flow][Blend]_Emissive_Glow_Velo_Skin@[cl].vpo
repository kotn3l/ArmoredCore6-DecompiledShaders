#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_18;
layout(location = 9) out vec4 TEXCOORD_19;
layout(location = 10) out vec3 TEXCOORD_20;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_18.x = 0.0;
    TEXCOORD_18.y = 0.0;
    TEXCOORD_18.z = 0.0;
    TEXCOORD_18.w = 0.0;
    TEXCOORD_19.x = 0.0;
    TEXCOORD_19.y = 0.0;
    TEXCOORD_19.z = 0.0;
    TEXCOORD_19.w = 0.0;
    TEXCOORD_20.x = 0.0;
    TEXCOORD_20.y = 0.0;
    TEXCOORD_20.z = 0.0;
    float _256 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _258 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _259 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _268 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _269 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _270 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _280 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _282 = texelFetch(g_InstanceIndexBuffer, int(_280));
    uint _283 = _282.x;
    precise float _284 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _289 = isnan(_284) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _284 : max(0.001000000047497451305389404296875, _284));
    precise float _291 = BLENDWEIGHT.x / _289;
    precise float _292 = BLENDWEIGHT.y / _289;
    precise float _293 = BLENDWEIGHT.z / _289;
    precise float _294 = BLENDWEIGHT.w / _289;
    uvec4 _301 = floatBitsToUint(cbInstanceData._m0[(_283 * 13u) + 4u]);
    uint _302 = _301.x;
    uint _304 = (_302 + uint(float(BLENDINDICES.x))) * 3u;
    uint _311 = _304 + 1u;
    uint _318 = _304 + 2u;
    precise float _325 = _291 * cbObjMatrix._m0[_304].x;
    precise float _326 = _291 * cbObjMatrix._m0[_311].x;
    precise float _327 = _291 * cbObjMatrix._m0[_318].x;
    precise float _328 = _291 * cbObjMatrix._m0[_304].y;
    precise float _329 = _291 * cbObjMatrix._m0[_311].y;
    precise float _330 = _291 * cbObjMatrix._m0[_318].y;
    precise float _331 = _291 * cbObjMatrix._m0[_304].z;
    precise float _332 = _291 * cbObjMatrix._m0[_311].z;
    precise float _333 = _291 * cbObjMatrix._m0[_318].z;
    precise float _334 = _291 * cbObjMatrix._m0[_304].w;
    precise float _335 = _291 * cbObjMatrix._m0[_311].w;
    precise float _336 = _291 * cbObjMatrix._m0[_318].w;
    uint _339 = (_302 + uint(float(BLENDINDICES.y))) * 3u;
    uint _346 = _339 + 1u;
    uint _353 = _339 + 2u;
    precise float _360 = _292 * cbObjMatrix._m0[_339].x;
    precise float _361 = _292 * cbObjMatrix._m0[_346].x;
    precise float _362 = _292 * cbObjMatrix._m0[_353].x;
    precise float _363 = _292 * cbObjMatrix._m0[_339].y;
    precise float _364 = _292 * cbObjMatrix._m0[_346].y;
    precise float _365 = _292 * cbObjMatrix._m0[_353].y;
    precise float _366 = _292 * cbObjMatrix._m0[_339].z;
    precise float _367 = _292 * cbObjMatrix._m0[_346].z;
    precise float _368 = _292 * cbObjMatrix._m0[_353].z;
    precise float _369 = _292 * cbObjMatrix._m0[_339].w;
    precise float _370 = _292 * cbObjMatrix._m0[_346].w;
    precise float _371 = _292 * cbObjMatrix._m0[_353].w;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    uint _386 = (_302 + uint(float(BLENDINDICES.z))) * 3u;
    uint _393 = _386 + 1u;
    uint _400 = _386 + 2u;
    precise float _407 = _293 * cbObjMatrix._m0[_386].x;
    precise float _408 = _293 * cbObjMatrix._m0[_393].x;
    precise float _409 = _293 * cbObjMatrix._m0[_400].x;
    precise float _410 = _293 * cbObjMatrix._m0[_386].y;
    precise float _411 = _293 * cbObjMatrix._m0[_393].y;
    precise float _412 = _293 * cbObjMatrix._m0[_400].y;
    precise float _413 = _293 * cbObjMatrix._m0[_386].z;
    precise float _414 = _293 * cbObjMatrix._m0[_393].z;
    precise float _415 = _293 * cbObjMatrix._m0[_400].z;
    precise float _416 = _293 * cbObjMatrix._m0[_386].w;
    precise float _417 = _293 * cbObjMatrix._m0[_393].w;
    precise float _418 = _293 * cbObjMatrix._m0[_400].w;
    precise float _419 = _372 + _407;
    precise float _420 = _373 + _408;
    precise float _421 = _374 + _409;
    precise float _422 = _375 + _410;
    precise float _423 = _376 + _411;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    uint _433 = (_302 + uint(float(BLENDINDICES.w))) * 3u;
    uint _440 = _433 + 1u;
    uint _447 = _433 + 2u;
    precise float _454 = _294 * cbObjMatrix._m0[_433].x;
    precise float _455 = _294 * cbObjMatrix._m0[_440].x;
    precise float _456 = _294 * cbObjMatrix._m0[_447].x;
    precise float _457 = _294 * cbObjMatrix._m0[_433].y;
    precise float _458 = _294 * cbObjMatrix._m0[_440].y;
    precise float _459 = _294 * cbObjMatrix._m0[_447].y;
    precise float _460 = _294 * cbObjMatrix._m0[_433].z;
    precise float _461 = _294 * cbObjMatrix._m0[_440].z;
    precise float _462 = _294 * cbObjMatrix._m0[_447].z;
    precise float _463 = _294 * cbObjMatrix._m0[_433].w;
    precise float _464 = _294 * cbObjMatrix._m0[_440].w;
    precise float _465 = _294 * cbObjMatrix._m0[_447].w;
    precise float _466 = _419 + _454;
    precise float _467 = _420 + _455;
    precise float _468 = _421 + _456;
    precise float _469 = _422 + _457;
    precise float _470 = _423 + _458;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = POSITION.x * _466;
    precise float _479 = POSITION.y * _469;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.z * _472;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * _475;
    precise float _484 = _483 + _482;
    precise float _485 = POSITION.x * _467;
    precise float _486 = POSITION.y * _470;
    precise float _487 = _486 + _485;
    precise float _488 = POSITION.z * _473;
    precise float _489 = _488 + _487;
    precise float _490 = 1.0 * _476;
    precise float _491 = _490 + _489;
    precise float _492 = POSITION.x * _468;
    precise float _493 = POSITION.y * _471;
    precise float _494 = _493 + _492;
    precise float _495 = POSITION.z * _474;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * _477;
    precise float _498 = _497 + _496;
    float _673 = (((((cbPrevObjMatrix._m0[_339].w * _292) + (cbPrevObjMatrix._m0[_304].w * _291)) + (cbPrevObjMatrix._m0[_386].w * _293)) + (cbPrevObjMatrix._m0[_433].w * _294)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_339].z * _292) + (cbPrevObjMatrix._m0[_304].z * _291)) + (cbPrevObjMatrix._m0[_386].z * _293)) + (cbPrevObjMatrix._m0[_433].z * _294), fma(POSITION.y, (((cbPrevObjMatrix._m0[_339].y * _292) + (cbPrevObjMatrix._m0[_304].y * _291)) + (cbPrevObjMatrix._m0[_386].y * _293)) + (cbPrevObjMatrix._m0[_433].y * _294), ((((cbPrevObjMatrix._m0[_339].x * _292) + (cbPrevObjMatrix._m0[_304].x * _291)) + (cbPrevObjMatrix._m0[_386].x * _293)) + (cbPrevObjMatrix._m0[_433].x * _294)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _674 = (((((cbPrevObjMatrix._m0[_346].w * _292) + (cbPrevObjMatrix._m0[_311].w * _291)) + (cbPrevObjMatrix._m0[_393].w * _293)) + (cbPrevObjMatrix._m0[_440].w * _294)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_346].z * _292) + (cbPrevObjMatrix._m0[_311].z * _291)) + (cbPrevObjMatrix._m0[_393].z * _293)) + (cbPrevObjMatrix._m0[_440].z * _294), fma(POSITION.y, (((cbPrevObjMatrix._m0[_346].y * _292) + (cbPrevObjMatrix._m0[_311].y * _291)) + (cbPrevObjMatrix._m0[_393].y * _293)) + (cbPrevObjMatrix._m0[_440].y * _294), ((((cbPrevObjMatrix._m0[_346].x * _292) + (cbPrevObjMatrix._m0[_311].x * _291)) + (cbPrevObjMatrix._m0[_393].x * _293)) + (cbPrevObjMatrix._m0[_440].x * _294)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _675 = (((((cbPrevObjMatrix._m0[_353].w * _292) + (cbPrevObjMatrix._m0[_318].w * _291)) + (cbPrevObjMatrix._m0[_400].w * _293)) + (cbPrevObjMatrix._m0[_447].w * _294)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_353].z * _292) + (cbPrevObjMatrix._m0[_318].z * _291)) + (cbPrevObjMatrix._m0[_400].z * _293)) + (cbPrevObjMatrix._m0[_447].z * _294), fma(POSITION.y, (((cbPrevObjMatrix._m0[_353].y * _292) + (cbPrevObjMatrix._m0[_318].y * _291)) + (cbPrevObjMatrix._m0[_400].y * _293)) + (cbPrevObjMatrix._m0[_447].y * _294), ((((cbPrevObjMatrix._m0[_353].x * _292) + (cbPrevObjMatrix._m0[_318].x * _291)) + (cbPrevObjMatrix._m0[_400].x * _293)) + (cbPrevObjMatrix._m0[_447].x * _294)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _722 = fma(_259, _472, fma(_258, _469, _466 * _256));
    float _725 = fma(_259, _473, fma(_258, _470, _467 * _256));
    float _728 = fma(_259, _474, fma(_258, _471, _468 * _256));
    precise float _744 = _484 - cbSceneParam._m0[3u].x;
    precise float _745 = _491 - cbSceneParam._m0[3u].y;
    precise float _746 = _498 - cbSceneParam._m0[3u].z;
    precise float _774 = _744 * cbSceneParam._m0[24u].x;
    precise float _775 = _745 * cbSceneParam._m0[24u].y;
    precise float _776 = _775 + _774;
    precise float _777 = _746 * cbSceneParam._m0[24u].z;
    precise float _778 = _777 + _776;
    precise float _779 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _780 = _779 + _778;
    precise float _781 = _744 * cbSceneParam._m0[25u].x;
    precise float _782 = _745 * cbSceneParam._m0[25u].y;
    precise float _783 = _782 + _781;
    precise float _784 = _746 * cbSceneParam._m0[25u].z;
    precise float _785 = _784 + _783;
    precise float _786 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _787 = _786 + _785;
    precise float _788 = _744 * cbSceneParam._m0[26u].x;
    precise float _789 = _745 * cbSceneParam._m0[26u].y;
    precise float _790 = _789 + _788;
    precise float _791 = _746 * cbSceneParam._m0[26u].z;
    precise float _792 = _791 + _790;
    precise float _793 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _794 = _793 + _792;
    precise float _795 = _744 * cbSceneParam._m0[27u].x;
    precise float _796 = _745 * cbSceneParam._m0[27u].y;
    precise float _797 = _796 + _795;
    precise float _798 = _746 * cbSceneParam._m0[27u].z;
    precise float _799 = _798 + _797;
    precise float _800 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _801 = _800 + _799;
    gl_Position.x = _780;
    gl_Position.y = _787;
    gl_Position.z = _794;
    gl_Position.w = _801;
    POSITION_1.x = _780;
    POSITION_1.y = _787;
    POSITION_1.z = _794;
    POSITION_1.w = _801;
    NORMAL_1.x = _722;
    NORMAL_1.y = _725;
    NORMAL_1.z = _728;
    NORMAL_1.w = float(_283);
    TANGENT_1.x = fma(_270, _472, fma(_269, _469, _466 * _268));
    TANGENT_1.y = fma(_270, _473, fma(_269, _470, _467 * _268));
    TANGENT_1.z = fma(_270, _474, fma(_269, _471, _468 * _268));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
    TEXCOORD_18.x = _780;
    TEXCOORD_18.y = _787;
    TEXCOORD_18.z = _794;
    TEXCOORD_18.w = _801;
    TEXCOORD_19.x = fma(_675, cbSceneParam._m0[29u].z, fma(_674, cbSceneParam._m0[29u].y, _673 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_19.y = fma(_675, cbSceneParam._m0[30u].z, fma(_674, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _673)) + cbSceneParam._m0[30u].w;
    TEXCOORD_19.z = fma(_675, cbSceneParam._m0[31u].z, fma(_674, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _673)) + cbSceneParam._m0[31u].w;
    TEXCOORD_19.w = fma(_675, cbSceneParam._m0[32u].z, fma(_674, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _673)) + cbSceneParam._m0[32u].w;
    TEXCOORD_20.x = _722;
    TEXCOORD_20.y = _725;
    TEXCOORD_20.z = _728;
}


