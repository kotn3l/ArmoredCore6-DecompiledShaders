#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_4;
layout(location = 4) out vec4 TEXCOORD_4_1;
layout(location = 5) out vec4 TEXCOORD_8;
layout(location = 6) out vec4 TEXCOORD_13;
layout(location = 7) out vec2 TEXCOORD_17;
layout(location = 7, component = 2) out float TEXCOORD_21;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_21 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _243 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _255 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _256 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _257 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _267 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _269 = texelFetch(g_InstanceIndexBuffer, int(_267));
    uint _270 = _269.x;
    precise float _271 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _276 = isnan(_271) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _271 : max(0.001000000047497451305389404296875, _271));
    precise float _278 = BLENDWEIGHT.x / _276;
    precise float _279 = BLENDWEIGHT.y / _276;
    precise float _280 = BLENDWEIGHT.z / _276;
    precise float _281 = BLENDWEIGHT.w / _276;
    uint _283 = _270 * 13u;
    uvec4 _288 = floatBitsToUint(cbInstanceData._m0[_283 + 4u]);
    uint _289 = _288.x;
    uint _291 = (_289 + uint(float(BLENDINDICES.x))) * 3u;
    uint _298 = _291 + 1u;
    uint _305 = _291 + 2u;
    precise float _312 = _278 * cbObjMatrix._m0[_291].x;
    precise float _313 = _278 * cbObjMatrix._m0[_298].x;
    precise float _314 = _278 * cbObjMatrix._m0[_305].x;
    precise float _315 = _278 * cbObjMatrix._m0[_291].y;
    precise float _316 = _278 * cbObjMatrix._m0[_298].y;
    precise float _317 = _278 * cbObjMatrix._m0[_305].y;
    precise float _318 = _278 * cbObjMatrix._m0[_291].z;
    precise float _319 = _278 * cbObjMatrix._m0[_298].z;
    precise float _320 = _278 * cbObjMatrix._m0[_305].z;
    precise float _321 = _278 * cbObjMatrix._m0[_291].w;
    precise float _322 = _278 * cbObjMatrix._m0[_298].w;
    precise float _323 = _278 * cbObjMatrix._m0[_305].w;
    uint _326 = (_289 + uint(float(BLENDINDICES.y))) * 3u;
    uint _333 = _326 + 1u;
    uint _340 = _326 + 2u;
    precise float _347 = _279 * cbObjMatrix._m0[_326].x;
    precise float _348 = _279 * cbObjMatrix._m0[_333].x;
    precise float _349 = _279 * cbObjMatrix._m0[_340].x;
    precise float _350 = _279 * cbObjMatrix._m0[_326].y;
    precise float _351 = _279 * cbObjMatrix._m0[_333].y;
    precise float _352 = _279 * cbObjMatrix._m0[_340].y;
    precise float _353 = _279 * cbObjMatrix._m0[_326].z;
    precise float _354 = _279 * cbObjMatrix._m0[_333].z;
    precise float _355 = _279 * cbObjMatrix._m0[_340].z;
    precise float _356 = _279 * cbObjMatrix._m0[_326].w;
    precise float _357 = _279 * cbObjMatrix._m0[_333].w;
    precise float _358 = _279 * cbObjMatrix._m0[_340].w;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    precise float _370 = _323 + _358;
    uint _373 = (_289 + uint(float(BLENDINDICES.z))) * 3u;
    uint _380 = _373 + 1u;
    uint _387 = _373 + 2u;
    precise float _394 = _280 * cbObjMatrix._m0[_373].x;
    precise float _395 = _280 * cbObjMatrix._m0[_380].x;
    precise float _396 = _280 * cbObjMatrix._m0[_387].x;
    precise float _397 = _280 * cbObjMatrix._m0[_373].y;
    precise float _398 = _280 * cbObjMatrix._m0[_380].y;
    precise float _399 = _280 * cbObjMatrix._m0[_387].y;
    precise float _400 = _280 * cbObjMatrix._m0[_373].z;
    precise float _401 = _280 * cbObjMatrix._m0[_380].z;
    precise float _402 = _280 * cbObjMatrix._m0[_387].z;
    precise float _403 = _280 * cbObjMatrix._m0[_373].w;
    precise float _404 = _280 * cbObjMatrix._m0[_380].w;
    precise float _405 = _280 * cbObjMatrix._m0[_387].w;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = _370 + _405;
    uint _420 = (_289 + uint(float(BLENDINDICES.w))) * 3u;
    uint _427 = _420 + 1u;
    uint _434 = _420 + 2u;
    precise float _441 = _281 * cbObjMatrix._m0[_420].x;
    precise float _442 = _281 * cbObjMatrix._m0[_427].x;
    precise float _443 = _281 * cbObjMatrix._m0[_434].x;
    precise float _444 = _281 * cbObjMatrix._m0[_420].y;
    precise float _445 = _281 * cbObjMatrix._m0[_427].y;
    precise float _446 = _281 * cbObjMatrix._m0[_434].y;
    precise float _447 = _281 * cbObjMatrix._m0[_420].z;
    precise float _448 = _281 * cbObjMatrix._m0[_427].z;
    precise float _449 = _281 * cbObjMatrix._m0[_434].z;
    precise float _450 = _281 * cbObjMatrix._m0[_420].w;
    precise float _451 = _281 * cbObjMatrix._m0[_427].w;
    precise float _452 = _281 * cbObjMatrix._m0[_434].w;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = _413 + _448;
    precise float _461 = _414 + _449;
    precise float _462 = _415 + _450;
    precise float _463 = _416 + _451;
    precise float _464 = _417 + _452;
    precise float _465 = POSITION.x * _453;
    precise float _466 = POSITION.y * _456;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.z * _459;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * _462;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.x * _454;
    precise float _473 = POSITION.y * _457;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.z * _460;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * _463;
    precise float _478 = _477 + _476;
    precise float _479 = POSITION.x * _455;
    precise float _480 = POSITION.y * _458;
    precise float _481 = _480 + _479;
    precise float _482 = POSITION.z * _461;
    precise float _483 = _482 + _481;
    precise float _484 = 1.0 * _464;
    precise float _485 = _484 + _483;
    float _491 = cbSceneParam._m0[3u].x - _471;
    float _492 = cbSceneParam._m0[3u].y - _478;
    float _493 = cbSceneParam._m0[3u].z - _485;
    precise float _519 = _471 - cbSceneParam._m0[3u].x;
    precise float _520 = _478 - cbSceneParam._m0[3u].y;
    precise float _521 = _485 - cbSceneParam._m0[3u].z;
    precise float _549 = _519 * cbSceneParam._m0[24u].x;
    precise float _550 = _520 * cbSceneParam._m0[24u].y;
    precise float _551 = _550 + _549;
    precise float _552 = _521 * cbSceneParam._m0[24u].z;
    precise float _553 = _552 + _551;
    precise float _554 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _555 = _554 + _553;
    precise float _556 = _519 * cbSceneParam._m0[25u].x;
    precise float _557 = _520 * cbSceneParam._m0[25u].y;
    precise float _558 = _557 + _556;
    precise float _559 = _521 * cbSceneParam._m0[25u].z;
    precise float _560 = _559 + _558;
    precise float _561 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _562 = _561 + _560;
    precise float _563 = _519 * cbSceneParam._m0[26u].x;
    precise float _564 = _520 * cbSceneParam._m0[26u].y;
    precise float _565 = _564 + _563;
    precise float _566 = _521 * cbSceneParam._m0[26u].z;
    precise float _567 = _566 + _565;
    precise float _568 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _569 = _568 + _567;
    precise float _570 = _519 * cbSceneParam._m0[27u].x;
    precise float _571 = _520 * cbSceneParam._m0[27u].y;
    precise float _572 = _571 + _570;
    precise float _573 = _521 * cbSceneParam._m0[27u].z;
    precise float _574 = _573 + _572;
    precise float _575 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _576 = _575 + _574;
    gl_Position.x = _555;
    gl_Position.y = _562;
    gl_Position.z = _569;
    gl_Position.w = _576;
    NORMAL_1.x = fma(_246, _459, fma(_245, _456, _453 * _243));
    NORMAL_1.y = fma(_246, _460, fma(_245, _457, _454 * _243));
    NORMAL_1.z = fma(_246, _461, fma(_245, _458, _455 * _243));
    NORMAL_1.w = float(_270);
    TANGENT_1.x = fma(_257, _459, fma(_256, _456, _453 * _255));
    TANGENT_1.y = fma(_257, _460, fma(_256, _457, _454 * _255));
    TANGENT_1.z = fma(_257, _461, fma(_256, _458, _455 * _255));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
    TEXCOORD_17.x = _569;
    TEXCOORD_17.y = _576;
    TEXCOORD_21 = sqrt(((_491 * _491) + (_492 * _492)) + (_493 * _493));
    gl_ClipDistance[0u] = dot(vec4(_555, _562, _569, _576), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_555, _562, _569, _576), vec4(cbInstanceData._m0[_283 + 3u]));
}


