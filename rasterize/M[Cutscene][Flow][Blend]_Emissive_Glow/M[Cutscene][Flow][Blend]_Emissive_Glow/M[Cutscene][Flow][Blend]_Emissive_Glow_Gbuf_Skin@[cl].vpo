#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_4;
layout(location = 4) out vec4 TEXCOORD_4_1;
layout(location = 5) out vec4 TEXCOORD_8;
layout(location = 6) out vec4 TEXCOORD_13;
layout(location = 7) out float TEXCOORD_21;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_21 = 0.0;
    float _233 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _235 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _245 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _246 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _247 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _257 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _259 = texelFetch(g_InstanceIndexBuffer, int(_257));
    uint _260 = _259.x;
    precise float _261 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _266 = isnan(_261) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _261 : max(0.001000000047497451305389404296875, _261));
    precise float _268 = BLENDWEIGHT.x / _266;
    precise float _269 = BLENDWEIGHT.y / _266;
    precise float _270 = BLENDWEIGHT.z / _266;
    precise float _271 = BLENDWEIGHT.w / _266;
    uvec4 _278 = floatBitsToUint(cbInstanceData._m0[(_260 * 13u) + 4u]);
    uint _279 = _278.x;
    uint _281 = (_279 + uint(float(BLENDINDICES.x))) * 3u;
    uint _288 = _281 + 1u;
    uint _295 = _281 + 2u;
    precise float _302 = _268 * cbObjMatrix._m0[_281].x;
    precise float _303 = _268 * cbObjMatrix._m0[_288].x;
    precise float _304 = _268 * cbObjMatrix._m0[_295].x;
    precise float _305 = _268 * cbObjMatrix._m0[_281].y;
    precise float _306 = _268 * cbObjMatrix._m0[_288].y;
    precise float _307 = _268 * cbObjMatrix._m0[_295].y;
    precise float _308 = _268 * cbObjMatrix._m0[_281].z;
    precise float _309 = _268 * cbObjMatrix._m0[_288].z;
    precise float _310 = _268 * cbObjMatrix._m0[_295].z;
    precise float _311 = _268 * cbObjMatrix._m0[_281].w;
    precise float _312 = _268 * cbObjMatrix._m0[_288].w;
    precise float _313 = _268 * cbObjMatrix._m0[_295].w;
    uint _316 = (_279 + uint(float(BLENDINDICES.y))) * 3u;
    uint _323 = _316 + 1u;
    uint _330 = _316 + 2u;
    precise float _337 = _269 * cbObjMatrix._m0[_316].x;
    precise float _338 = _269 * cbObjMatrix._m0[_323].x;
    precise float _339 = _269 * cbObjMatrix._m0[_330].x;
    precise float _340 = _269 * cbObjMatrix._m0[_316].y;
    precise float _341 = _269 * cbObjMatrix._m0[_323].y;
    precise float _342 = _269 * cbObjMatrix._m0[_330].y;
    precise float _343 = _269 * cbObjMatrix._m0[_316].z;
    precise float _344 = _269 * cbObjMatrix._m0[_323].z;
    precise float _345 = _269 * cbObjMatrix._m0[_330].z;
    precise float _346 = _269 * cbObjMatrix._m0[_316].w;
    precise float _347 = _269 * cbObjMatrix._m0[_323].w;
    precise float _348 = _269 * cbObjMatrix._m0[_330].w;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    precise float _353 = _306 + _341;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    uint _363 = (_279 + uint(float(BLENDINDICES.z))) * 3u;
    uint _370 = _363 + 1u;
    uint _377 = _363 + 2u;
    precise float _384 = _270 * cbObjMatrix._m0[_363].x;
    precise float _385 = _270 * cbObjMatrix._m0[_370].x;
    precise float _386 = _270 * cbObjMatrix._m0[_377].x;
    precise float _387 = _270 * cbObjMatrix._m0[_363].y;
    precise float _388 = _270 * cbObjMatrix._m0[_370].y;
    precise float _389 = _270 * cbObjMatrix._m0[_377].y;
    precise float _390 = _270 * cbObjMatrix._m0[_363].z;
    precise float _391 = _270 * cbObjMatrix._m0[_370].z;
    precise float _392 = _270 * cbObjMatrix._m0[_377].z;
    precise float _393 = _270 * cbObjMatrix._m0[_363].w;
    precise float _394 = _270 * cbObjMatrix._m0[_370].w;
    precise float _395 = _270 * cbObjMatrix._m0[_377].w;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = _353 + _388;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    uint _410 = (_279 + uint(float(BLENDINDICES.w))) * 3u;
    uint _417 = _410 + 1u;
    uint _424 = _410 + 2u;
    precise float _431 = _271 * cbObjMatrix._m0[_410].x;
    precise float _432 = _271 * cbObjMatrix._m0[_417].x;
    precise float _433 = _271 * cbObjMatrix._m0[_424].x;
    precise float _434 = _271 * cbObjMatrix._m0[_410].y;
    precise float _435 = _271 * cbObjMatrix._m0[_417].y;
    precise float _436 = _271 * cbObjMatrix._m0[_424].y;
    precise float _437 = _271 * cbObjMatrix._m0[_410].z;
    precise float _438 = _271 * cbObjMatrix._m0[_417].z;
    precise float _439 = _271 * cbObjMatrix._m0[_424].z;
    precise float _440 = _271 * cbObjMatrix._m0[_410].w;
    precise float _441 = _271 * cbObjMatrix._m0[_417].w;
    precise float _442 = _271 * cbObjMatrix._m0[_424].w;
    precise float _443 = _396 + _431;
    precise float _444 = _397 + _432;
    precise float _445 = _398 + _433;
    precise float _446 = _399 + _434;
    precise float _447 = _400 + _435;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = POSITION.x * _443;
    precise float _456 = POSITION.y * _446;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.z * _449;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * _452;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.x * _444;
    precise float _463 = POSITION.y * _447;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.z * _450;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * _453;
    precise float _468 = _467 + _466;
    precise float _469 = POSITION.x * _445;
    precise float _470 = POSITION.y * _448;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.z * _451;
    precise float _473 = _472 + _471;
    precise float _474 = 1.0 * _454;
    precise float _475 = _474 + _473;
    float _481 = cbSceneParam._m0[3u].x - _461;
    float _482 = cbSceneParam._m0[3u].y - _468;
    float _483 = cbSceneParam._m0[3u].z - _475;
    precise float _509 = _461 - cbSceneParam._m0[3u].x;
    precise float _510 = _468 - cbSceneParam._m0[3u].y;
    precise float _511 = _475 - cbSceneParam._m0[3u].z;
    precise float _539 = _509 * cbSceneParam._m0[24u].x;
    precise float _540 = _510 * cbSceneParam._m0[24u].y;
    precise float _541 = _540 + _539;
    precise float _542 = _511 * cbSceneParam._m0[24u].z;
    precise float _543 = _542 + _541;
    precise float _544 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _545 = _544 + _543;
    precise float _546 = _509 * cbSceneParam._m0[25u].x;
    precise float _547 = _510 * cbSceneParam._m0[25u].y;
    precise float _548 = _547 + _546;
    precise float _549 = _511 * cbSceneParam._m0[25u].z;
    precise float _550 = _549 + _548;
    precise float _551 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _552 = _551 + _550;
    precise float _553 = _509 * cbSceneParam._m0[26u].x;
    precise float _554 = _510 * cbSceneParam._m0[26u].y;
    precise float _555 = _554 + _553;
    precise float _556 = _511 * cbSceneParam._m0[26u].z;
    precise float _557 = _556 + _555;
    precise float _558 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _559 = _558 + _557;
    precise float _560 = _509 * cbSceneParam._m0[27u].x;
    precise float _561 = _510 * cbSceneParam._m0[27u].y;
    precise float _562 = _561 + _560;
    precise float _563 = _511 * cbSceneParam._m0[27u].z;
    precise float _564 = _563 + _562;
    precise float _565 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _566 = _565 + _564;
    gl_Position.x = _545;
    gl_Position.y = _552;
    gl_Position.z = _559;
    gl_Position.w = _566;
    NORMAL_1.x = fma(_236, _449, fma(_235, _446, _443 * _233));
    NORMAL_1.y = fma(_236, _450, fma(_235, _447, _444 * _233));
    NORMAL_1.z = fma(_236, _451, fma(_235, _448, _445 * _233));
    NORMAL_1.w = float(_260);
    TANGENT_1.x = fma(_247, _449, fma(_246, _446, _443 * _245));
    TANGENT_1.y = fma(_247, _450, fma(_246, _447, _444 * _245));
    TANGENT_1.z = fma(_247, _451, fma(_246, _448, _445 * _245));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
    TEXCOORD_21 = sqrt(((_481 * _481) + (_482 * _482)) + (_483 * _483));
}


