#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_4;
layout(location = 4) out vec4 TEXCOORD_4_1;
layout(location = 5) out vec4 TEXCOORD_8;
layout(location = 6) out vec4 TEXCOORD_13;
layout(location = 7) out vec2 TEXCOORD_17;
layout(location = 7, component = 2) out float TEXCOORD_21;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_17.x = 0.0;
    TEXCOORD_17.y = 0.0;
    TEXCOORD_21 = 0.0;
    float _238 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _240 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _250 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _251 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _252 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _262 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _264 = texelFetch(g_InstanceIndexBuffer, int(_262));
    uint _265 = _264.x;
    precise float _266 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _271 = isnan(_266) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _266 : max(0.001000000047497451305389404296875, _266));
    precise float _273 = BLENDWEIGHT.x / _271;
    precise float _274 = BLENDWEIGHT.y / _271;
    precise float _275 = BLENDWEIGHT.z / _271;
    precise float _276 = BLENDWEIGHT.w / _271;
    uvec4 _283 = floatBitsToUint(cbInstanceData._m0[(_265 * 13u) + 4u]);
    uint _284 = _283.x;
    uint _286 = (_284 + uint(float(BLENDINDICES.x))) * 3u;
    uint _293 = _286 + 1u;
    uint _300 = _286 + 2u;
    precise float _307 = _273 * cbObjMatrix._m0[_286].x;
    precise float _308 = _273 * cbObjMatrix._m0[_293].x;
    precise float _309 = _273 * cbObjMatrix._m0[_300].x;
    precise float _310 = _273 * cbObjMatrix._m0[_286].y;
    precise float _311 = _273 * cbObjMatrix._m0[_293].y;
    precise float _312 = _273 * cbObjMatrix._m0[_300].y;
    precise float _313 = _273 * cbObjMatrix._m0[_286].z;
    precise float _314 = _273 * cbObjMatrix._m0[_293].z;
    precise float _315 = _273 * cbObjMatrix._m0[_300].z;
    precise float _316 = _273 * cbObjMatrix._m0[_286].w;
    precise float _317 = _273 * cbObjMatrix._m0[_293].w;
    precise float _318 = _273 * cbObjMatrix._m0[_300].w;
    uint _321 = (_284 + uint(float(BLENDINDICES.y))) * 3u;
    uint _328 = _321 + 1u;
    uint _335 = _321 + 2u;
    precise float _342 = _274 * cbObjMatrix._m0[_321].x;
    precise float _343 = _274 * cbObjMatrix._m0[_328].x;
    precise float _344 = _274 * cbObjMatrix._m0[_335].x;
    precise float _345 = _274 * cbObjMatrix._m0[_321].y;
    precise float _346 = _274 * cbObjMatrix._m0[_328].y;
    precise float _347 = _274 * cbObjMatrix._m0[_335].y;
    precise float _348 = _274 * cbObjMatrix._m0[_321].z;
    precise float _349 = _274 * cbObjMatrix._m0[_328].z;
    precise float _350 = _274 * cbObjMatrix._m0[_335].z;
    precise float _351 = _274 * cbObjMatrix._m0[_321].w;
    precise float _352 = _274 * cbObjMatrix._m0[_328].w;
    precise float _353 = _274 * cbObjMatrix._m0[_335].w;
    precise float _354 = _307 + _342;
    precise float _355 = _308 + _343;
    precise float _356 = _309 + _344;
    precise float _357 = _310 + _345;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    uint _368 = (_284 + uint(float(BLENDINDICES.z))) * 3u;
    uint _375 = _368 + 1u;
    uint _382 = _368 + 2u;
    precise float _389 = _275 * cbObjMatrix._m0[_368].x;
    precise float _390 = _275 * cbObjMatrix._m0[_375].x;
    precise float _391 = _275 * cbObjMatrix._m0[_382].x;
    precise float _392 = _275 * cbObjMatrix._m0[_368].y;
    precise float _393 = _275 * cbObjMatrix._m0[_375].y;
    precise float _394 = _275 * cbObjMatrix._m0[_382].y;
    precise float _395 = _275 * cbObjMatrix._m0[_368].z;
    precise float _396 = _275 * cbObjMatrix._m0[_375].z;
    precise float _397 = _275 * cbObjMatrix._m0[_382].z;
    precise float _398 = _275 * cbObjMatrix._m0[_368].w;
    precise float _399 = _275 * cbObjMatrix._m0[_375].w;
    precise float _400 = _275 * cbObjMatrix._m0[_382].w;
    precise float _401 = _354 + _389;
    precise float _402 = _355 + _390;
    precise float _403 = _356 + _391;
    precise float _404 = _357 + _392;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    uint _415 = (_284 + uint(float(BLENDINDICES.w))) * 3u;
    uint _422 = _415 + 1u;
    uint _429 = _415 + 2u;
    precise float _436 = _276 * cbObjMatrix._m0[_415].x;
    precise float _437 = _276 * cbObjMatrix._m0[_422].x;
    precise float _438 = _276 * cbObjMatrix._m0[_429].x;
    precise float _439 = _276 * cbObjMatrix._m0[_415].y;
    precise float _440 = _276 * cbObjMatrix._m0[_422].y;
    precise float _441 = _276 * cbObjMatrix._m0[_429].y;
    precise float _442 = _276 * cbObjMatrix._m0[_415].z;
    precise float _443 = _276 * cbObjMatrix._m0[_422].z;
    precise float _444 = _276 * cbObjMatrix._m0[_429].z;
    precise float _445 = _276 * cbObjMatrix._m0[_415].w;
    precise float _446 = _276 * cbObjMatrix._m0[_422].w;
    precise float _447 = _276 * cbObjMatrix._m0[_429].w;
    precise float _448 = _401 + _436;
    precise float _449 = _402 + _437;
    precise float _450 = _403 + _438;
    precise float _451 = _404 + _439;
    precise float _452 = _405 + _440;
    precise float _453 = _406 + _441;
    precise float _454 = _407 + _442;
    precise float _455 = _408 + _443;
    precise float _456 = _409 + _444;
    precise float _457 = _410 + _445;
    precise float _458 = _411 + _446;
    precise float _459 = _412 + _447;
    precise float _460 = POSITION.x * _448;
    precise float _461 = POSITION.y * _451;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _454;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _457;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.x * _449;
    precise float _468 = POSITION.y * _452;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.z * _455;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * _458;
    precise float _473 = _472 + _471;
    precise float _474 = POSITION.x * _450;
    precise float _475 = POSITION.y * _453;
    precise float _476 = _475 + _474;
    precise float _477 = POSITION.z * _456;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * _459;
    precise float _480 = _479 + _478;
    float _486 = cbSceneParam._m0[3u].x - _466;
    float _487 = cbSceneParam._m0[3u].y - _473;
    float _488 = cbSceneParam._m0[3u].z - _480;
    precise float _514 = _466 - cbSceneParam._m0[3u].x;
    precise float _515 = _473 - cbSceneParam._m0[3u].y;
    precise float _516 = _480 - cbSceneParam._m0[3u].z;
    precise float _544 = _514 * cbSceneParam._m0[24u].x;
    precise float _545 = _515 * cbSceneParam._m0[24u].y;
    precise float _546 = _545 + _544;
    precise float _547 = _516 * cbSceneParam._m0[24u].z;
    precise float _548 = _547 + _546;
    precise float _549 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _550 = _549 + _548;
    precise float _551 = _514 * cbSceneParam._m0[25u].x;
    precise float _552 = _515 * cbSceneParam._m0[25u].y;
    precise float _553 = _552 + _551;
    precise float _554 = _516 * cbSceneParam._m0[25u].z;
    precise float _555 = _554 + _553;
    precise float _556 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _557 = _556 + _555;
    precise float _558 = _514 * cbSceneParam._m0[26u].x;
    precise float _559 = _515 * cbSceneParam._m0[26u].y;
    precise float _560 = _559 + _558;
    precise float _561 = _516 * cbSceneParam._m0[26u].z;
    precise float _562 = _561 + _560;
    precise float _563 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _564 = _563 + _562;
    precise float _565 = _514 * cbSceneParam._m0[27u].x;
    precise float _566 = _515 * cbSceneParam._m0[27u].y;
    precise float _567 = _566 + _565;
    precise float _568 = _516 * cbSceneParam._m0[27u].z;
    precise float _569 = _568 + _567;
    precise float _570 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _571 = _570 + _569;
    gl_Position.x = _550;
    gl_Position.y = _557;
    gl_Position.z = _564;
    gl_Position.w = _571;
    NORMAL_1.x = fma(_241, _454, fma(_240, _451, _448 * _238));
    NORMAL_1.y = fma(_241, _455, fma(_240, _452, _449 * _238));
    NORMAL_1.z = fma(_241, _456, fma(_240, _453, _450 * _238));
    NORMAL_1.w = float(_265);
    TANGENT_1.x = fma(_252, _454, fma(_251, _451, _448 * _250));
    TANGENT_1.y = fma(_252, _455, fma(_251, _452, _449 * _250));
    TANGENT_1.z = fma(_252, _456, fma(_251, _453, _450 * _250));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
    TEXCOORD_17.x = _564;
    TEXCOORD_17.y = _571;
    TEXCOORD_21 = sqrt(((_486 * _486) + (_487 * _487)) + (_488 * _488));
}


