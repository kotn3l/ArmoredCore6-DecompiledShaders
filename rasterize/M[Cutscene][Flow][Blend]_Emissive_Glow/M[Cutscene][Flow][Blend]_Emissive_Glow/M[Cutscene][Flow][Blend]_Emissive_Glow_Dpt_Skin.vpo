#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    uint _107 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    precise float _111 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _116 = isnan(_111) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _111 : max(0.001000000047497451305389404296875, _111));
    precise float _118 = BLENDWEIGHT.x / _116;
    precise float _119 = BLENDWEIGHT.y / _116;
    precise float _120 = BLENDWEIGHT.z / _116;
    precise float _121 = BLENDWEIGHT.w / _116;
    uint _123 = texelFetch(g_InstanceIndexBuffer, int(_107)).x * 13u;
    uvec4 _129 = floatBitsToUint(cbInstanceData._m0[_123 + 4u]);
    uint _130 = _129.x;
    uint _132 = (_130 + uint(float(BLENDINDICES.x))) * 3u;
    uint _139 = _132 + 1u;
    uint _146 = _132 + 2u;
    precise float _153 = _118 * cbObjMatrix._m0[_132].x;
    precise float _154 = _118 * cbObjMatrix._m0[_139].x;
    precise float _155 = _118 * cbObjMatrix._m0[_146].x;
    precise float _156 = _118 * cbObjMatrix._m0[_132].y;
    precise float _157 = _118 * cbObjMatrix._m0[_139].y;
    precise float _158 = _118 * cbObjMatrix._m0[_146].y;
    precise float _159 = _118 * cbObjMatrix._m0[_132].z;
    precise float _160 = _118 * cbObjMatrix._m0[_139].z;
    precise float _161 = _118 * cbObjMatrix._m0[_146].z;
    precise float _162 = _118 * cbObjMatrix._m0[_132].w;
    precise float _163 = _118 * cbObjMatrix._m0[_139].w;
    precise float _164 = _118 * cbObjMatrix._m0[_146].w;
    uint _167 = (_130 + uint(float(BLENDINDICES.y))) * 3u;
    uint _174 = _167 + 1u;
    uint _181 = _167 + 2u;
    precise float _188 = _119 * cbObjMatrix._m0[_167].x;
    precise float _189 = _119 * cbObjMatrix._m0[_174].x;
    precise float _190 = _119 * cbObjMatrix._m0[_181].x;
    precise float _191 = _119 * cbObjMatrix._m0[_167].y;
    precise float _192 = _119 * cbObjMatrix._m0[_174].y;
    precise float _193 = _119 * cbObjMatrix._m0[_181].y;
    precise float _194 = _119 * cbObjMatrix._m0[_167].z;
    precise float _195 = _119 * cbObjMatrix._m0[_174].z;
    precise float _196 = _119 * cbObjMatrix._m0[_181].z;
    precise float _197 = _119 * cbObjMatrix._m0[_167].w;
    precise float _198 = _119 * cbObjMatrix._m0[_174].w;
    precise float _199 = _119 * cbObjMatrix._m0[_181].w;
    precise float _200 = _153 + _188;
    precise float _201 = _154 + _189;
    precise float _202 = _155 + _190;
    precise float _203 = _156 + _191;
    precise float _204 = _157 + _192;
    precise float _205 = _158 + _193;
    precise float _206 = _159 + _194;
    precise float _207 = _160 + _195;
    precise float _208 = _161 + _196;
    precise float _209 = _162 + _197;
    precise float _210 = _163 + _198;
    precise float _211 = _164 + _199;
    uint _214 = (_130 + uint(float(BLENDINDICES.z))) * 3u;
    uint _221 = _214 + 1u;
    uint _228 = _214 + 2u;
    precise float _235 = _120 * cbObjMatrix._m0[_214].x;
    precise float _236 = _120 * cbObjMatrix._m0[_221].x;
    precise float _237 = _120 * cbObjMatrix._m0[_228].x;
    precise float _238 = _120 * cbObjMatrix._m0[_214].y;
    precise float _239 = _120 * cbObjMatrix._m0[_221].y;
    precise float _240 = _120 * cbObjMatrix._m0[_228].y;
    precise float _241 = _120 * cbObjMatrix._m0[_214].z;
    precise float _242 = _120 * cbObjMatrix._m0[_221].z;
    precise float _243 = _120 * cbObjMatrix._m0[_228].z;
    precise float _244 = _120 * cbObjMatrix._m0[_214].w;
    precise float _245 = _120 * cbObjMatrix._m0[_221].w;
    precise float _246 = _120 * cbObjMatrix._m0[_228].w;
    precise float _247 = _200 + _235;
    precise float _248 = _201 + _236;
    precise float _249 = _202 + _237;
    precise float _250 = _203 + _238;
    precise float _251 = _204 + _239;
    precise float _252 = _205 + _240;
    precise float _253 = _206 + _241;
    precise float _254 = _207 + _242;
    precise float _255 = _208 + _243;
    precise float _256 = _209 + _244;
    precise float _257 = _210 + _245;
    precise float _258 = _211 + _246;
    uint _261 = (_130 + uint(float(BLENDINDICES.w))) * 3u;
    uint _268 = _261 + 1u;
    uint _275 = _261 + 2u;
    precise float _282 = _121 * cbObjMatrix._m0[_261].x;
    precise float _283 = _121 * cbObjMatrix._m0[_268].x;
    precise float _284 = _121 * cbObjMatrix._m0[_275].x;
    precise float _285 = _121 * cbObjMatrix._m0[_261].y;
    precise float _286 = _121 * cbObjMatrix._m0[_268].y;
    precise float _287 = _121 * cbObjMatrix._m0[_275].y;
    precise float _288 = _121 * cbObjMatrix._m0[_261].z;
    precise float _289 = _121 * cbObjMatrix._m0[_268].z;
    precise float _290 = _121 * cbObjMatrix._m0[_275].z;
    precise float _291 = _121 * cbObjMatrix._m0[_261].w;
    precise float _292 = _121 * cbObjMatrix._m0[_268].w;
    precise float _293 = _121 * cbObjMatrix._m0[_275].w;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    precise float _306 = POSITION.x * _294;
    precise float _307 = POSITION.y * _297;
    precise float _308 = _307 + _306;
    precise float _309 = POSITION.z * _300;
    precise float _310 = _309 + _308;
    precise float _311 = 1.0 * _303;
    precise float _312 = _311 + _310;
    precise float _313 = POSITION.x * _295;
    precise float _314 = POSITION.y * _298;
    precise float _315 = _314 + _313;
    precise float _316 = POSITION.z * _301;
    precise float _317 = _316 + _315;
    precise float _318 = 1.0 * _304;
    precise float _319 = _318 + _317;
    precise float _320 = POSITION.x * _296;
    precise float _321 = POSITION.y * _299;
    precise float _322 = _321 + _320;
    precise float _323 = POSITION.z * _302;
    precise float _324 = _323 + _322;
    precise float _325 = 1.0 * _305;
    precise float _326 = _325 + _324;
    precise float _332 = _312 - cbSceneParam._m0[3u].x;
    precise float _333 = _319 - cbSceneParam._m0[3u].y;
    precise float _334 = _326 - cbSceneParam._m0[3u].z;
    precise float _362 = _332 * cbSceneParam._m0[24u].x;
    precise float _363 = _333 * cbSceneParam._m0[24u].y;
    precise float _364 = _363 + _362;
    precise float _365 = _334 * cbSceneParam._m0[24u].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _368 = _367 + _366;
    precise float _369 = _332 * cbSceneParam._m0[25u].x;
    precise float _370 = _333 * cbSceneParam._m0[25u].y;
    precise float _371 = _370 + _369;
    precise float _372 = _334 * cbSceneParam._m0[25u].z;
    precise float _373 = _372 + _371;
    precise float _374 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _375 = _374 + _373;
    precise float _376 = _332 * cbSceneParam._m0[26u].x;
    precise float _377 = _333 * cbSceneParam._m0[26u].y;
    precise float _378 = _377 + _376;
    precise float _379 = _334 * cbSceneParam._m0[26u].z;
    precise float _380 = _379 + _378;
    precise float _381 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _382 = _381 + _380;
    precise float _383 = _332 * cbSceneParam._m0[27u].x;
    precise float _384 = _333 * cbSceneParam._m0[27u].y;
    precise float _385 = _384 + _383;
    precise float _386 = _334 * cbSceneParam._m0[27u].z;
    precise float _387 = _386 + _385;
    precise float _388 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _389 = _388 + _387;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _368;
    gl_Position.y = _375;
    gl_Position.z = _382;
    gl_Position.w = _389;
    gl_ClipDistance[0u] = dot(vec4(_368, _375, _382, _389), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_368, _375, _382, _389), vec4(cbInstanceData._m0[_123 + 3u]));
}


