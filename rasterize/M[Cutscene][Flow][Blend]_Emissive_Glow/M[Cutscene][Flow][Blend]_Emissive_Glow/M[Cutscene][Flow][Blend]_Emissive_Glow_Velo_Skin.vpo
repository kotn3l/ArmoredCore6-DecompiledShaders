#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec4 TEXCOORD;
layout(location = 8) in ivec2 TEXCOORD_1;
layout(location = 9) in vec4 TEXCOORD_2;
layout(location = 10) in vec4 TEXCOORD_3;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec4 TEXCOORD_4_1;
layout(location = 6) out vec4 TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_13;
layout(location = 8) out vec4 TEXCOORD_18;
layout(location = 9) out vec4 TEXCOORD_19;
layout(location = 10) out vec3 TEXCOORD_20;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_4_1.x = 0.0;
    TEXCOORD_4_1.y = 0.0;
    TEXCOORD_4_1.z = 0.0;
    TEXCOORD_4_1.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    TEXCOORD_13.w = 0.0;
    TEXCOORD_18.x = 0.0;
    TEXCOORD_18.y = 0.0;
    TEXCOORD_18.z = 0.0;
    TEXCOORD_18.w = 0.0;
    TEXCOORD_19.x = 0.0;
    TEXCOORD_19.y = 0.0;
    TEXCOORD_19.z = 0.0;
    TEXCOORD_19.w = 0.0;
    TEXCOORD_20.x = 0.0;
    TEXCOORD_20.y = 0.0;
    TEXCOORD_20.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _261 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _263 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _264 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _273 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _274 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _275 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _285 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _287 = texelFetch(g_InstanceIndexBuffer, int(_285));
    uint _288 = _287.x;
    precise float _289 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _294 = isnan(_289) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _289 : max(0.001000000047497451305389404296875, _289));
    precise float _296 = BLENDWEIGHT.x / _294;
    precise float _297 = BLENDWEIGHT.y / _294;
    precise float _298 = BLENDWEIGHT.z / _294;
    precise float _299 = BLENDWEIGHT.w / _294;
    uint _301 = _288 * 13u;
    uvec4 _306 = floatBitsToUint(cbInstanceData._m0[_301 + 4u]);
    uint _307 = _306.x;
    uint _309 = (_307 + uint(float(BLENDINDICES.x))) * 3u;
    uint _316 = _309 + 1u;
    uint _323 = _309 + 2u;
    precise float _330 = _296 * cbObjMatrix._m0[_309].x;
    precise float _331 = _296 * cbObjMatrix._m0[_316].x;
    precise float _332 = _296 * cbObjMatrix._m0[_323].x;
    precise float _333 = _296 * cbObjMatrix._m0[_309].y;
    precise float _334 = _296 * cbObjMatrix._m0[_316].y;
    precise float _335 = _296 * cbObjMatrix._m0[_323].y;
    precise float _336 = _296 * cbObjMatrix._m0[_309].z;
    precise float _337 = _296 * cbObjMatrix._m0[_316].z;
    precise float _338 = _296 * cbObjMatrix._m0[_323].z;
    precise float _339 = _296 * cbObjMatrix._m0[_309].w;
    precise float _340 = _296 * cbObjMatrix._m0[_316].w;
    precise float _341 = _296 * cbObjMatrix._m0[_323].w;
    uint _344 = (_307 + uint(float(BLENDINDICES.y))) * 3u;
    uint _351 = _344 + 1u;
    uint _358 = _344 + 2u;
    precise float _365 = _297 * cbObjMatrix._m0[_344].x;
    precise float _366 = _297 * cbObjMatrix._m0[_351].x;
    precise float _367 = _297 * cbObjMatrix._m0[_358].x;
    precise float _368 = _297 * cbObjMatrix._m0[_344].y;
    precise float _369 = _297 * cbObjMatrix._m0[_351].y;
    precise float _370 = _297 * cbObjMatrix._m0[_358].y;
    precise float _371 = _297 * cbObjMatrix._m0[_344].z;
    precise float _372 = _297 * cbObjMatrix._m0[_351].z;
    precise float _373 = _297 * cbObjMatrix._m0[_358].z;
    precise float _374 = _297 * cbObjMatrix._m0[_344].w;
    precise float _375 = _297 * cbObjMatrix._m0[_351].w;
    precise float _376 = _297 * cbObjMatrix._m0[_358].w;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    uint _391 = (_307 + uint(float(BLENDINDICES.z))) * 3u;
    uint _398 = _391 + 1u;
    uint _405 = _391 + 2u;
    precise float _412 = _298 * cbObjMatrix._m0[_391].x;
    precise float _413 = _298 * cbObjMatrix._m0[_398].x;
    precise float _414 = _298 * cbObjMatrix._m0[_405].x;
    precise float _415 = _298 * cbObjMatrix._m0[_391].y;
    precise float _416 = _298 * cbObjMatrix._m0[_398].y;
    precise float _417 = _298 * cbObjMatrix._m0[_405].y;
    precise float _418 = _298 * cbObjMatrix._m0[_391].z;
    precise float _419 = _298 * cbObjMatrix._m0[_398].z;
    precise float _420 = _298 * cbObjMatrix._m0[_405].z;
    precise float _421 = _298 * cbObjMatrix._m0[_391].w;
    precise float _422 = _298 * cbObjMatrix._m0[_398].w;
    precise float _423 = _298 * cbObjMatrix._m0[_405].w;
    precise float _424 = _377 + _412;
    precise float _425 = _378 + _413;
    precise float _426 = _379 + _414;
    precise float _427 = _380 + _415;
    precise float _428 = _381 + _416;
    precise float _429 = _382 + _417;
    precise float _430 = _383 + _418;
    precise float _431 = _384 + _419;
    precise float _432 = _385 + _420;
    precise float _433 = _386 + _421;
    precise float _434 = _387 + _422;
    precise float _435 = _388 + _423;
    uint _438 = (_307 + uint(float(BLENDINDICES.w))) * 3u;
    uint _445 = _438 + 1u;
    uint _452 = _438 + 2u;
    precise float _459 = _299 * cbObjMatrix._m0[_438].x;
    precise float _460 = _299 * cbObjMatrix._m0[_445].x;
    precise float _461 = _299 * cbObjMatrix._m0[_452].x;
    precise float _462 = _299 * cbObjMatrix._m0[_438].y;
    precise float _463 = _299 * cbObjMatrix._m0[_445].y;
    precise float _464 = _299 * cbObjMatrix._m0[_452].y;
    precise float _465 = _299 * cbObjMatrix._m0[_438].z;
    precise float _466 = _299 * cbObjMatrix._m0[_445].z;
    precise float _467 = _299 * cbObjMatrix._m0[_452].z;
    precise float _468 = _299 * cbObjMatrix._m0[_438].w;
    precise float _469 = _299 * cbObjMatrix._m0[_445].w;
    precise float _470 = _299 * cbObjMatrix._m0[_452].w;
    precise float _471 = _424 + _459;
    precise float _472 = _425 + _460;
    precise float _473 = _426 + _461;
    precise float _474 = _427 + _462;
    precise float _475 = _428 + _463;
    precise float _476 = _429 + _464;
    precise float _477 = _430 + _465;
    precise float _478 = _431 + _466;
    precise float _479 = _432 + _467;
    precise float _480 = _433 + _468;
    precise float _481 = _434 + _469;
    precise float _482 = _435 + _470;
    precise float _483 = POSITION.x * _471;
    precise float _484 = POSITION.y * _474;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.z * _477;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * _480;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.x * _472;
    precise float _491 = POSITION.y * _475;
    precise float _492 = _491 + _490;
    precise float _493 = POSITION.z * _478;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * _481;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.x * _473;
    precise float _498 = POSITION.y * _476;
    precise float _499 = _498 + _497;
    precise float _500 = POSITION.z * _479;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _482;
    precise float _503 = _502 + _501;
    float _678 = (((((cbPrevObjMatrix._m0[_344].w * _297) + (cbPrevObjMatrix._m0[_309].w * _296)) + (cbPrevObjMatrix._m0[_391].w * _298)) + (cbPrevObjMatrix._m0[_438].w * _299)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_344].z * _297) + (cbPrevObjMatrix._m0[_309].z * _296)) + (cbPrevObjMatrix._m0[_391].z * _298)) + (cbPrevObjMatrix._m0[_438].z * _299), fma(POSITION.y, (((cbPrevObjMatrix._m0[_344].y * _297) + (cbPrevObjMatrix._m0[_309].y * _296)) + (cbPrevObjMatrix._m0[_391].y * _298)) + (cbPrevObjMatrix._m0[_438].y * _299), ((((cbPrevObjMatrix._m0[_344].x * _297) + (cbPrevObjMatrix._m0[_309].x * _296)) + (cbPrevObjMatrix._m0[_391].x * _298)) + (cbPrevObjMatrix._m0[_438].x * _299)) * POSITION.x))) - cbSceneParam._m0[28u].x;
    float _679 = (((((cbPrevObjMatrix._m0[_351].w * _297) + (cbPrevObjMatrix._m0[_316].w * _296)) + (cbPrevObjMatrix._m0[_398].w * _298)) + (cbPrevObjMatrix._m0[_445].w * _299)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_351].z * _297) + (cbPrevObjMatrix._m0[_316].z * _296)) + (cbPrevObjMatrix._m0[_398].z * _298)) + (cbPrevObjMatrix._m0[_445].z * _299), fma(POSITION.y, (((cbPrevObjMatrix._m0[_351].y * _297) + (cbPrevObjMatrix._m0[_316].y * _296)) + (cbPrevObjMatrix._m0[_398].y * _298)) + (cbPrevObjMatrix._m0[_445].y * _299), ((((cbPrevObjMatrix._m0[_351].x * _297) + (cbPrevObjMatrix._m0[_316].x * _296)) + (cbPrevObjMatrix._m0[_398].x * _298)) + (cbPrevObjMatrix._m0[_445].x * _299)) * POSITION.x))) - cbSceneParam._m0[28u].y;
    float _680 = (((((cbPrevObjMatrix._m0[_358].w * _297) + (cbPrevObjMatrix._m0[_323].w * _296)) + (cbPrevObjMatrix._m0[_405].w * _298)) + (cbPrevObjMatrix._m0[_452].w * _299)) + fma(POSITION.z, (((cbPrevObjMatrix._m0[_358].z * _297) + (cbPrevObjMatrix._m0[_323].z * _296)) + (cbPrevObjMatrix._m0[_405].z * _298)) + (cbPrevObjMatrix._m0[_452].z * _299), fma(POSITION.y, (((cbPrevObjMatrix._m0[_358].y * _297) + (cbPrevObjMatrix._m0[_323].y * _296)) + (cbPrevObjMatrix._m0[_405].y * _298)) + (cbPrevObjMatrix._m0[_452].y * _299), ((((cbPrevObjMatrix._m0[_358].x * _297) + (cbPrevObjMatrix._m0[_323].x * _296)) + (cbPrevObjMatrix._m0[_405].x * _298)) + (cbPrevObjMatrix._m0[_452].x * _299)) * POSITION.x))) - cbSceneParam._m0[28u].z;
    float _727 = fma(_264, _477, fma(_263, _474, _471 * _261));
    float _730 = fma(_264, _478, fma(_263, _475, _472 * _261));
    float _733 = fma(_264, _479, fma(_263, _476, _473 * _261));
    precise float _749 = _489 - cbSceneParam._m0[3u].x;
    precise float _750 = _496 - cbSceneParam._m0[3u].y;
    precise float _751 = _503 - cbSceneParam._m0[3u].z;
    precise float _779 = _749 * cbSceneParam._m0[24u].x;
    precise float _780 = _750 * cbSceneParam._m0[24u].y;
    precise float _781 = _780 + _779;
    precise float _782 = _751 * cbSceneParam._m0[24u].z;
    precise float _783 = _782 + _781;
    precise float _784 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _785 = _784 + _783;
    precise float _786 = _749 * cbSceneParam._m0[25u].x;
    precise float _787 = _750 * cbSceneParam._m0[25u].y;
    precise float _788 = _787 + _786;
    precise float _789 = _751 * cbSceneParam._m0[25u].z;
    precise float _790 = _789 + _788;
    precise float _791 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _792 = _791 + _790;
    precise float _793 = _749 * cbSceneParam._m0[26u].x;
    precise float _794 = _750 * cbSceneParam._m0[26u].y;
    precise float _795 = _794 + _793;
    precise float _796 = _751 * cbSceneParam._m0[26u].z;
    precise float _797 = _796 + _795;
    precise float _798 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _799 = _798 + _797;
    precise float _800 = _749 * cbSceneParam._m0[27u].x;
    precise float _801 = _750 * cbSceneParam._m0[27u].y;
    precise float _802 = _801 + _800;
    precise float _803 = _751 * cbSceneParam._m0[27u].z;
    precise float _804 = _803 + _802;
    precise float _805 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _806 = _805 + _804;
    gl_Position.x = _785;
    gl_Position.y = _792;
    gl_Position.z = _799;
    gl_Position.w = _806;
    POSITION_1.x = _785;
    POSITION_1.y = _792;
    POSITION_1.z = _799;
    POSITION_1.w = _806;
    NORMAL_1.x = _727;
    NORMAL_1.y = _730;
    NORMAL_1.z = _733;
    NORMAL_1.w = float(_288);
    TANGENT_1.x = fma(_275, _477, fma(_274, _474, _471 * _273));
    TANGENT_1.y = fma(_275, _478, fma(_274, _475, _472 * _273));
    TANGENT_1.z = fma(_275, _479, fma(_274, _476, _473 * _273));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_4.x = COLOR.x;
    TEXCOORD_4.y = COLOR.y;
    TEXCOORD_4.z = COLOR.z;
    TEXCOORD_4.w = COLOR.w;
    TEXCOORD_4_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_4_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_8.x = ((float(int(uint(TEXCOORD_1.x))) * 0.00048828125) * cbTexScroll._m0[3u].x) + cbTexScroll._m0[3u].z;
    TEXCOORD_8.y = ((float(int(uint(TEXCOORD_1.y))) * 0.00048828125) * cbTexScroll._m0[3u].y) + cbTexScroll._m0[3u].w;
    TEXCOORD_8.z = TEXCOORD_2.x;
    TEXCOORD_8.w = TEXCOORD_2.y;
    TEXCOORD_13.x = TEXCOORD_3.x;
    TEXCOORD_13.y = TEXCOORD_3.y;
    TEXCOORD_13.z = TEXCOORD_3.z;
    TEXCOORD_13.w = COLOR_1.x;
    TEXCOORD_18.x = _785;
    TEXCOORD_18.y = _792;
    TEXCOORD_18.z = _799;
    TEXCOORD_18.w = _806;
    TEXCOORD_19.x = fma(_680, cbSceneParam._m0[29u].z, fma(_679, cbSceneParam._m0[29u].y, _678 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_19.y = fma(_680, cbSceneParam._m0[30u].z, fma(_679, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _678)) + cbSceneParam._m0[30u].w;
    TEXCOORD_19.z = fma(_680, cbSceneParam._m0[31u].z, fma(_679, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _678)) + cbSceneParam._m0[31u].w;
    TEXCOORD_19.w = fma(_680, cbSceneParam._m0[32u].z, fma(_679, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _678)) + cbSceneParam._m0[32u].w;
    TEXCOORD_20.x = _727;
    TEXCOORD_20.y = _730;
    TEXCOORD_20.z = _733;
    gl_ClipDistance[0u] = dot(vec4(_785, _792, _799, _806), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_785, _792, _799, _806), vec4(cbInstanceData._m0[_301 + 3u]));
}


