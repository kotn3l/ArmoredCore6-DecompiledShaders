#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_A_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _103 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _104 = _103 * NORMAL.x;
    float _105 = _103 * NORMAL.y;
    float _106 = _103 * NORMAL.z;
    float _111;
    float _112;
    float _113;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _111 = (-0.0) - _104;
        _112 = (-0.0) - _105;
        _113 = (-0.0) - _106;
    }
    else
    {
        _111 = _104;
        _112 = _105;
        _113 = _106;
    }
    vec4 _127 = texture(sampler2D(M_A_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _130 = _127.x;
    float _131 = _127.y;
    float _132 = _127.z;
    float _134 = _127.w * TEXCOORD_1.z;
    float _138 = inversesqrt(dot(vec3(_111, _112, _113), vec3(_111, _112, _113)));
    float _232 = isnan(0.0) ? _134 : (isnan(_134) ? 0.0 : max(_134, 0.0));
    float _140 = isnan(1.0) ? _232 : (isnan(_232) ? 1.0 : min(_232, 1.0));
    float _243 = isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0));
    float _254 = isnan(0.0) ? _131 : (isnan(_131) ? 0.0 : max(_131, 0.0));
    float _265 = isnan(0.0) ? _132 : (isnan(_132) ? 0.0 : max(_132, 0.0));
    uint _158 = uint(roundEven(NORMAL.w)) * 13u;
    uint _161 = (_158 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _167 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _243 : (isnan(_243) ? 1.0 : min(_243, 1.0)))) * cbInstanceData._m0[_161].x;
    float _168 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _254 : (isnan(_254) ? 1.0 : min(_254, 1.0)))) * cbInstanceData._m0[_161].y;
    float _169 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _265 : (isnan(_265) ? 1.0 : min(_265, 1.0)))) * cbInstanceData._m0[_161].z;
    float _276 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    float _287 = isnan(0.0) ? _168 : (isnan(_168) ? 0.0 : max(_168, 0.0));
    float _298 = isnan(0.0) ? _169 : (isnan(_169) ? 0.0 : max(_169, 0.0));
    float _309 = isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0));
    float _179 = cbInstanceData._m0[_158 + 6u].w * (isnan(1.0) ? _309 : (isnan(_309) ? 1.0 : min(_309, 1.0)));
    bool _204 = cbMtdParam._m0[1u].z != 0.0;
    float _205 = _204 ? _179 : 0.0;
    SV_Target.x = ((_111 * 0.5) * _138) + 0.500488758087158203125;
    SV_Target.y = ((_112 * 0.5) * _138) + 0.500488758087158203125;
    SV_Target.z = ((_113 * 0.5) * _138) + 0.500488758087158203125;
    SV_Target.w = _205;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _204 ? _179 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _276 : (isnan(_276) ? 1.0 : min(_276, 1.0));
    SV_Target_2.y = isnan(1.0) ? _287 : (isnan(_287) ? 1.0 : min(_287, 1.0));
    SV_Target_2.z = isnan(1.0) ? _298 : (isnan(_298) ? 1.0 : min(_298, 1.0));
    SV_Target_2.w = _204 ? _179 : (float(floatBitsToUint(cbInstanceData._m0[_158 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _205;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _205;
}


