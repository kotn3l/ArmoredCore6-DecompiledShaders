#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    uint _81 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_8 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _156 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _158 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _235;
    float _236;
    float _237;
    float _238;
    float _239;
    float _240;
    float _241;
    float _242;
    float _243;
    float _244;
    float _245;
    float _246;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _183 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
        uint _196 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_183)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _203 = _196 + 1u;
        uint _210 = _196 + 2u;
        _235 = cbObjMatrix._m0[_196].x;
        _236 = cbObjMatrix._m0[_196].y;
        _237 = cbObjMatrix._m0[_196].z;
        _238 = cbObjMatrix._m0[_196].w;
        _239 = cbObjMatrix._m0[_203].x;
        _240 = cbObjMatrix._m0[_203].y;
        _241 = cbObjMatrix._m0[_203].z;
        _242 = cbObjMatrix._m0[_203].w;
        _243 = cbObjMatrix._m0[_210].x;
        _244 = cbObjMatrix._m0[_210].y;
        _245 = cbObjMatrix._m0[_210].z;
        _246 = cbObjMatrix._m0[_210].w;
    }
    else
    {
        _235 = cbvModelParam._m0[0u].x;
        _236 = cbvModelParam._m0[0u].y;
        _237 = cbvModelParam._m0[0u].z;
        _238 = cbvModelParam._m0[0u].w;
        _239 = cbvModelParam._m0[1u].x;
        _240 = cbvModelParam._m0[1u].y;
        _241 = cbvModelParam._m0[1u].z;
        _242 = cbvModelParam._m0[1u].w;
        _243 = cbvModelParam._m0[2u].x;
        _244 = cbvModelParam._m0[2u].y;
        _245 = cbvModelParam._m0[2u].z;
        _246 = cbvModelParam._m0[2u].w;
    }
    precise float _247 = POSITION.x * _235;
    precise float _248 = POSITION.y * _236;
    precise float _249 = _248 + _247;
    precise float _250 = POSITION.z * _237;
    precise float _251 = _250 + _249;
    precise float _252 = 1.0 * _238;
    precise float _254 = _252 + _251;
    precise float _255 = POSITION.x * _239;
    precise float _256 = POSITION.y * _240;
    precise float _257 = _256 + _255;
    precise float _258 = POSITION.z * _241;
    precise float _259 = _258 + _257;
    precise float _260 = 1.0 * _242;
    precise float _261 = _260 + _259;
    precise float _262 = POSITION.x * _243;
    precise float _263 = POSITION.y * _244;
    precise float _264 = _263 + _262;
    precise float _265 = POSITION.z * _245;
    precise float _266 = _265 + _264;
    precise float _267 = 1.0 * _246;
    precise float _268 = _267 + _266;
    float _274 = cbSceneParam._m0[3u].x - _254;
    float _275 = cbSceneParam._m0[3u].y - _261;
    float _276 = cbSceneParam._m0[3u].z - _268;
    uint _297 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
    uvec4 _299 = texelFetch(g_InstanceIndexBuffer, int(_297));
    uint _300 = _299.x;
    precise float _311 = _254 - cbSceneParam._m0[3u].x;
    precise float _312 = _261 - cbSceneParam._m0[3u].y;
    precise float _313 = _268 - cbSceneParam._m0[3u].z;
    precise float _341 = _311 * cbSceneParam._m0[24u].x;
    precise float _342 = _312 * cbSceneParam._m0[24u].y;
    precise float _343 = _342 + _341;
    precise float _344 = _313 * cbSceneParam._m0[24u].z;
    precise float _345 = _344 + _343;
    precise float _346 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _347 = _346 + _345;
    precise float _348 = _311 * cbSceneParam._m0[25u].x;
    precise float _349 = _312 * cbSceneParam._m0[25u].y;
    precise float _350 = _349 + _348;
    precise float _351 = _313 * cbSceneParam._m0[25u].z;
    precise float _352 = _351 + _350;
    precise float _353 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _354 = _353 + _352;
    precise float _355 = _311 * cbSceneParam._m0[26u].x;
    precise float _356 = _312 * cbSceneParam._m0[26u].y;
    precise float _357 = _356 + _355;
    precise float _358 = _313 * cbSceneParam._m0[26u].z;
    precise float _359 = _358 + _357;
    precise float _360 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _361 = _360 + _359;
    precise float _362 = _311 * cbSceneParam._m0[27u].x;
    precise float _363 = _312 * cbSceneParam._m0[27u].y;
    precise float _364 = _363 + _362;
    precise float _365 = _313 * cbSceneParam._m0[27u].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _368 = _367 + _366;
    gl_Position.x = _347;
    gl_Position.y = _354;
    gl_Position.z = _361;
    gl_Position.w = _368;
    NORMAL_1.x = fma(_159, _237, fma(_158, _236, _235 * _156));
    NORMAL_1.y = fma(_159, _241, fma(_158, _240, _239 * _156));
    NORMAL_1.z = fma(_159, _245, fma(_158, _244, _243 * _156));
    NORMAL_1.w = float(_300);
    TANGENT_1.x = fma(_168, _237, fma(_167, _236, _235 * _166));
    TANGENT_1.y = fma(_168, _241, fma(_167, _240, _239 * _166));
    TANGENT_1.z = fma(_168, _245, fma(_167, _244, _243 * _166));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _361;
    TEXCOORD_4.y = _368;
    TEXCOORD_8 = sqrt(((_274 * _274) + (_275 * _275)) + (_276 * _276));
    gl_ClipDistance[0u] = dot(vec4(_347, _354, _361, _368), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_347, _354, _361, _368), vec4(cbInstanceData._m0[(_300 * 13u) + 3u]));
}


