#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    uint _73 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    float _150 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _152 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _153 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _229;
    float _230;
    float _231;
    float _232;
    float _233;
    float _234;
    float _235;
    float _236;
    float _237;
    float _238;
    float _239;
    float _240;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _177 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _73;
        uint _190 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_177)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _197 = _190 + 1u;
        uint _204 = _190 + 2u;
        _229 = cbObjMatrix._m0[_190].x;
        _230 = cbObjMatrix._m0[_190].y;
        _231 = cbObjMatrix._m0[_190].z;
        _232 = cbObjMatrix._m0[_190].w;
        _233 = cbObjMatrix._m0[_197].x;
        _234 = cbObjMatrix._m0[_197].y;
        _235 = cbObjMatrix._m0[_197].z;
        _236 = cbObjMatrix._m0[_197].w;
        _237 = cbObjMatrix._m0[_204].x;
        _238 = cbObjMatrix._m0[_204].y;
        _239 = cbObjMatrix._m0[_204].z;
        _240 = cbObjMatrix._m0[_204].w;
    }
    else
    {
        _229 = cbvModelParam._m0[0u].x;
        _230 = cbvModelParam._m0[0u].y;
        _231 = cbvModelParam._m0[0u].z;
        _232 = cbvModelParam._m0[0u].w;
        _233 = cbvModelParam._m0[1u].x;
        _234 = cbvModelParam._m0[1u].y;
        _235 = cbvModelParam._m0[1u].z;
        _236 = cbvModelParam._m0[1u].w;
        _237 = cbvModelParam._m0[2u].x;
        _238 = cbvModelParam._m0[2u].y;
        _239 = cbvModelParam._m0[2u].z;
        _240 = cbvModelParam._m0[2u].w;
    }
    precise float _241 = POSITION.x * _229;
    precise float _242 = POSITION.y * _230;
    precise float _243 = _242 + _241;
    precise float _244 = POSITION.z * _231;
    precise float _245 = _244 + _243;
    precise float _246 = 1.0 * _232;
    precise float _248 = _246 + _245;
    precise float _249 = POSITION.x * _233;
    precise float _250 = POSITION.y * _234;
    precise float _251 = _250 + _249;
    precise float _252 = POSITION.z * _235;
    precise float _253 = _252 + _251;
    precise float _254 = 1.0 * _236;
    precise float _255 = _254 + _253;
    precise float _256 = POSITION.x * _237;
    precise float _257 = POSITION.y * _238;
    precise float _258 = _257 + _256;
    precise float _259 = POSITION.z * _239;
    precise float _260 = _259 + _258;
    precise float _261 = 1.0 * _240;
    precise float _262 = _261 + _260;
    uint _277 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _73;
    precise float _296 = _248 - cbSceneParam._m0[3u].x;
    precise float _297 = _255 - cbSceneParam._m0[3u].y;
    precise float _298 = _262 - cbSceneParam._m0[3u].z;
    precise float _326 = _296 * cbSceneParam._m0[24u].x;
    precise float _327 = _297 * cbSceneParam._m0[24u].y;
    precise float _328 = _327 + _326;
    precise float _329 = _298 * cbSceneParam._m0[24u].z;
    precise float _330 = _329 + _328;
    precise float _331 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _332 = _331 + _330;
    precise float _333 = _296 * cbSceneParam._m0[25u].x;
    precise float _334 = _297 * cbSceneParam._m0[25u].y;
    precise float _335 = _334 + _333;
    precise float _336 = _298 * cbSceneParam._m0[25u].z;
    precise float _337 = _336 + _335;
    precise float _338 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _339 = _338 + _337;
    precise float _340 = _296 * cbSceneParam._m0[26u].x;
    precise float _341 = _297 * cbSceneParam._m0[26u].y;
    precise float _342 = _341 + _340;
    precise float _343 = _298 * cbSceneParam._m0[26u].z;
    precise float _344 = _343 + _342;
    precise float _345 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _346 = _345 + _344;
    precise float _347 = _296 * cbSceneParam._m0[27u].x;
    precise float _348 = _297 * cbSceneParam._m0[27u].y;
    precise float _349 = _348 + _347;
    precise float _350 = _298 * cbSceneParam._m0[27u].z;
    precise float _351 = _350 + _349;
    precise float _352 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _353 = _352 + _351;
    gl_Position.x = _332;
    gl_Position.y = _339;
    gl_Position.z = _346;
    gl_Position.w = _353;
    POSITION_1.x = _332;
    POSITION_1.y = _339;
    POSITION_1.z = _346;
    POSITION_1.w = _353;
    NORMAL_1.x = fma(_153, _231, fma(_152, _230, _229 * _150));
    NORMAL_1.y = fma(_153, _235, fma(_152, _234, _233 * _150));
    NORMAL_1.z = fma(_153, _239, fma(_152, _238, _237 * _150));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_277)).x);
    TANGENT_1.x = fma(_162, _231, fma(_161, _230, _229 * _160));
    TANGENT_1.y = fma(_162, _235, fma(_161, _234, _233 * _160));
    TANGENT_1.z = fma(_162, _239, fma(_161, _238, _237 * _160));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
}


