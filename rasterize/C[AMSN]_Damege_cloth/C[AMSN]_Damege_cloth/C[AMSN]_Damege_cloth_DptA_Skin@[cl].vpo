#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 4) out vec2 TEXCOORD_4;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_8 = 0.0;
    float _161 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _163 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _164 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _413;
    float _414;
    float _415;
    float _416;
    float _417;
    float _418;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _197 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        precise float _201 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _206 = isnan(_201) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _201 : max(0.001000000047497451305389404296875, _201));
        precise float _208 = BLENDWEIGHT.x / _206;
        precise float _209 = BLENDWEIGHT.y / _206;
        precise float _210 = BLENDWEIGHT.z / _206;
        precise float _211 = BLENDWEIGHT.w / _206;
        uvec4 _218 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_197)).x * 13u) + 4u]);
        uint _219 = _218.x;
        uint _221 = (_219 + uint(float(BLENDINDICES.x))) * 3u;
        uint _228 = _221 + 1u;
        uint _235 = _221 + 2u;
        precise float _242 = _208 * cbObjMatrix._m0[_221].x;
        precise float _243 = _208 * cbObjMatrix._m0[_228].x;
        precise float _244 = _208 * cbObjMatrix._m0[_235].x;
        precise float _245 = _208 * cbObjMatrix._m0[_221].y;
        precise float _246 = _208 * cbObjMatrix._m0[_228].y;
        precise float _247 = _208 * cbObjMatrix._m0[_235].y;
        precise float _248 = _208 * cbObjMatrix._m0[_221].z;
        precise float _249 = _208 * cbObjMatrix._m0[_228].z;
        precise float _250 = _208 * cbObjMatrix._m0[_235].z;
        precise float _251 = _208 * cbObjMatrix._m0[_221].w;
        precise float _252 = _208 * cbObjMatrix._m0[_228].w;
        precise float _253 = _208 * cbObjMatrix._m0[_235].w;
        uint _256 = (_219 + uint(float(BLENDINDICES.y))) * 3u;
        uint _263 = _256 + 1u;
        uint _270 = _256 + 2u;
        precise float _277 = _209 * cbObjMatrix._m0[_256].x;
        precise float _278 = _209 * cbObjMatrix._m0[_263].x;
        precise float _279 = _209 * cbObjMatrix._m0[_270].x;
        precise float _280 = _209 * cbObjMatrix._m0[_256].y;
        precise float _281 = _209 * cbObjMatrix._m0[_263].y;
        precise float _282 = _209 * cbObjMatrix._m0[_270].y;
        precise float _283 = _209 * cbObjMatrix._m0[_256].z;
        precise float _284 = _209 * cbObjMatrix._m0[_263].z;
        precise float _285 = _209 * cbObjMatrix._m0[_270].z;
        precise float _286 = _209 * cbObjMatrix._m0[_256].w;
        precise float _287 = _209 * cbObjMatrix._m0[_263].w;
        precise float _288 = _209 * cbObjMatrix._m0[_270].w;
        precise float _289 = _242 + _277;
        precise float _290 = _243 + _278;
        precise float _291 = _244 + _279;
        precise float _292 = _245 + _280;
        precise float _293 = _246 + _281;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        uint _303 = (_219 + uint(float(BLENDINDICES.z))) * 3u;
        uint _310 = _303 + 1u;
        uint _317 = _303 + 2u;
        precise float _324 = _210 * cbObjMatrix._m0[_303].x;
        precise float _325 = _210 * cbObjMatrix._m0[_310].x;
        precise float _326 = _210 * cbObjMatrix._m0[_317].x;
        precise float _327 = _210 * cbObjMatrix._m0[_303].y;
        precise float _328 = _210 * cbObjMatrix._m0[_310].y;
        precise float _329 = _210 * cbObjMatrix._m0[_317].y;
        precise float _330 = _210 * cbObjMatrix._m0[_303].z;
        precise float _331 = _210 * cbObjMatrix._m0[_310].z;
        precise float _332 = _210 * cbObjMatrix._m0[_317].z;
        precise float _333 = _210 * cbObjMatrix._m0[_303].w;
        precise float _334 = _210 * cbObjMatrix._m0[_310].w;
        precise float _335 = _210 * cbObjMatrix._m0[_317].w;
        precise float _336 = _289 + _324;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        uint _350 = (_219 + uint(float(BLENDINDICES.w))) * 3u;
        uint _357 = _350 + 1u;
        uint _364 = _350 + 2u;
        precise float _371 = _211 * cbObjMatrix._m0[_350].x;
        precise float _372 = _211 * cbObjMatrix._m0[_357].x;
        precise float _373 = _211 * cbObjMatrix._m0[_364].x;
        precise float _374 = _211 * cbObjMatrix._m0[_350].y;
        precise float _375 = _211 * cbObjMatrix._m0[_357].y;
        precise float _376 = _211 * cbObjMatrix._m0[_364].y;
        precise float _377 = _211 * cbObjMatrix._m0[_350].z;
        precise float _378 = _211 * cbObjMatrix._m0[_357].z;
        precise float _379 = _211 * cbObjMatrix._m0[_364].z;
        precise float _380 = _211 * cbObjMatrix._m0[_350].w;
        precise float _381 = _211 * cbObjMatrix._m0[_357].w;
        precise float _382 = _211 * cbObjMatrix._m0[_364].w;
        precise float _383 = _336 + _371;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        _413 = _383;
        _414 = _386;
        _415 = _389;
        _416 = _392;
        _417 = _384;
        _418 = _387;
        _419 = _390;
        _420 = _393;
        _421 = _385;
        _422 = _388;
        _423 = _391;
        _424 = _394;
    }
    else
    {
        _413 = cbvModelParam._m0[0u].x;
        _414 = cbvModelParam._m0[0u].y;
        _415 = cbvModelParam._m0[0u].z;
        _416 = cbvModelParam._m0[0u].w;
        _417 = cbvModelParam._m0[1u].x;
        _418 = cbvModelParam._m0[1u].y;
        _419 = cbvModelParam._m0[1u].z;
        _420 = cbvModelParam._m0[1u].w;
        _421 = cbvModelParam._m0[2u].x;
        _422 = cbvModelParam._m0[2u].y;
        _423 = cbvModelParam._m0[2u].z;
        _424 = cbvModelParam._m0[2u].w;
    }
    precise float _425 = POSITION.x * _413;
    precise float _426 = POSITION.y * _414;
    precise float _427 = _426 + _425;
    precise float _428 = POSITION.z * _415;
    precise float _429 = _428 + _427;
    precise float _430 = 1.0 * _416;
    precise float _431 = _430 + _429;
    precise float _432 = POSITION.x * _417;
    precise float _433 = POSITION.y * _418;
    precise float _434 = _433 + _432;
    precise float _435 = POSITION.z * _419;
    precise float _436 = _435 + _434;
    precise float _437 = 1.0 * _420;
    precise float _438 = _437 + _436;
    precise float _439 = POSITION.x * _421;
    precise float _440 = POSITION.y * _422;
    precise float _441 = _440 + _439;
    precise float _442 = POSITION.z * _423;
    precise float _443 = _442 + _441;
    precise float _444 = 1.0 * _424;
    precise float _445 = _444 + _443;
    float _451 = cbSceneParam._m0[3u].x - _431;
    float _452 = cbSceneParam._m0[3u].y - _438;
    float _453 = cbSceneParam._m0[3u].z - _445;
    uint _473 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    precise float _487 = _431 - cbSceneParam._m0[3u].x;
    precise float _488 = _438 - cbSceneParam._m0[3u].y;
    precise float _489 = _445 - cbSceneParam._m0[3u].z;
    precise float _517 = _487 * cbSceneParam._m0[24u].x;
    precise float _518 = _488 * cbSceneParam._m0[24u].y;
    precise float _519 = _518 + _517;
    precise float _520 = _489 * cbSceneParam._m0[24u].z;
    precise float _521 = _520 + _519;
    precise float _522 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _523 = _522 + _521;
    precise float _524 = _487 * cbSceneParam._m0[25u].x;
    precise float _525 = _488 * cbSceneParam._m0[25u].y;
    precise float _526 = _525 + _524;
    precise float _527 = _489 * cbSceneParam._m0[25u].z;
    precise float _528 = _527 + _526;
    precise float _529 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _530 = _529 + _528;
    precise float _531 = _487 * cbSceneParam._m0[26u].x;
    precise float _532 = _488 * cbSceneParam._m0[26u].y;
    precise float _533 = _532 + _531;
    precise float _534 = _489 * cbSceneParam._m0[26u].z;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _537 = _536 + _535;
    precise float _538 = _487 * cbSceneParam._m0[27u].x;
    precise float _539 = _488 * cbSceneParam._m0[27u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _489 * cbSceneParam._m0[27u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _544 = _543 + _542;
    gl_Position.x = _523;
    gl_Position.y = _530;
    gl_Position.z = _537;
    gl_Position.w = _544;
    NORMAL_1.x = fma(_164, _415, fma(_163, _414, _413 * _161));
    NORMAL_1.y = fma(_164, _419, fma(_163, _418, _417 * _161));
    NORMAL_1.z = fma(_164, _423, fma(_163, _422, _421 * _161));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_473)).x);
    TANGENT_1.x = fma(_173, _415, fma(_172, _414, _413 * _171));
    TANGENT_1.y = fma(_173, _419, fma(_172, _418, _417 * _171));
    TANGENT_1.z = fma(_173, _423, fma(_172, _422, _421 * _171));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_4.x = _537;
    TEXCOORD_4.y = _544;
    TEXCOORD_8 = sqrt(((_451 * _451) + (_452 * _452)) + (_453 * _453));
}


