#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1;
layout(location = 3, component = 3) out float TEXCOORD_8;

void main()
{
    uint _74 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_8 = 0.0;
    float _146 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _148 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _149 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _156 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _157 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _158 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _225;
    float _226;
    float _227;
    float _228;
    float _229;
    float _230;
    float _231;
    float _232;
    float _233;
    float _234;
    float _235;
    float _236;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _173 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
        uint _186 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_173)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _193 = _186 + 1u;
        uint _200 = _186 + 2u;
        _225 = cbObjMatrix._m0[_186].x;
        _226 = cbObjMatrix._m0[_186].y;
        _227 = cbObjMatrix._m0[_186].z;
        _228 = cbObjMatrix._m0[_186].w;
        _229 = cbObjMatrix._m0[_193].x;
        _230 = cbObjMatrix._m0[_193].y;
        _231 = cbObjMatrix._m0[_193].z;
        _232 = cbObjMatrix._m0[_193].w;
        _233 = cbObjMatrix._m0[_200].x;
        _234 = cbObjMatrix._m0[_200].y;
        _235 = cbObjMatrix._m0[_200].z;
        _236 = cbObjMatrix._m0[_200].w;
    }
    else
    {
        _225 = cbvModelParam._m0[0u].x;
        _226 = cbvModelParam._m0[0u].y;
        _227 = cbvModelParam._m0[0u].z;
        _228 = cbvModelParam._m0[0u].w;
        _229 = cbvModelParam._m0[1u].x;
        _230 = cbvModelParam._m0[1u].y;
        _231 = cbvModelParam._m0[1u].z;
        _232 = cbvModelParam._m0[1u].w;
        _233 = cbvModelParam._m0[2u].x;
        _234 = cbvModelParam._m0[2u].y;
        _235 = cbvModelParam._m0[2u].z;
        _236 = cbvModelParam._m0[2u].w;
    }
    precise float _237 = POSITION.x * _225;
    precise float _238 = POSITION.y * _226;
    precise float _239 = _238 + _237;
    precise float _240 = POSITION.z * _227;
    precise float _241 = _240 + _239;
    precise float _242 = 1.0 * _228;
    precise float _244 = _242 + _241;
    precise float _245 = POSITION.x * _229;
    precise float _246 = POSITION.y * _230;
    precise float _247 = _246 + _245;
    precise float _248 = POSITION.z * _231;
    precise float _249 = _248 + _247;
    precise float _250 = 1.0 * _232;
    precise float _251 = _250 + _249;
    precise float _252 = POSITION.x * _233;
    precise float _253 = POSITION.y * _234;
    precise float _254 = _253 + _252;
    precise float _255 = POSITION.z * _235;
    precise float _256 = _255 + _254;
    precise float _257 = 1.0 * _236;
    precise float _258 = _257 + _256;
    float _264 = cbSceneParam._m0[3u].x - _244;
    float _265 = cbSceneParam._m0[3u].y - _251;
    float _266 = cbSceneParam._m0[3u].z - _258;
    uint _287 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _74;
    precise float _301 = _244 - cbSceneParam._m0[3u].x;
    precise float _302 = _251 - cbSceneParam._m0[3u].y;
    precise float _303 = _258 - cbSceneParam._m0[3u].z;
    precise float _331 = _301 * cbSceneParam._m0[24u].x;
    precise float _332 = _302 * cbSceneParam._m0[24u].y;
    precise float _333 = _332 + _331;
    precise float _334 = _303 * cbSceneParam._m0[24u].z;
    precise float _335 = _334 + _333;
    precise float _336 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _337 = _336 + _335;
    precise float _338 = _301 * cbSceneParam._m0[25u].x;
    precise float _339 = _302 * cbSceneParam._m0[25u].y;
    precise float _340 = _339 + _338;
    precise float _341 = _303 * cbSceneParam._m0[25u].z;
    precise float _342 = _341 + _340;
    precise float _343 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _344 = _343 + _342;
    precise float _345 = _301 * cbSceneParam._m0[26u].x;
    precise float _346 = _302 * cbSceneParam._m0[26u].y;
    precise float _347 = _346 + _345;
    precise float _348 = _303 * cbSceneParam._m0[26u].z;
    precise float _349 = _348 + _347;
    precise float _350 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _351 = _350 + _349;
    precise float _352 = _301 * cbSceneParam._m0[27u].x;
    precise float _353 = _302 * cbSceneParam._m0[27u].y;
    precise float _354 = _353 + _352;
    precise float _355 = _303 * cbSceneParam._m0[27u].z;
    precise float _356 = _355 + _354;
    precise float _357 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _358 = _357 + _356;
    gl_Position.x = _337;
    gl_Position.y = _344;
    gl_Position.z = _351;
    gl_Position.w = _358;
    NORMAL_1.x = fma(_149, _227, fma(_148, _226, _225 * _146));
    NORMAL_1.y = fma(_149, _231, fma(_148, _230, _229 * _146));
    NORMAL_1.z = fma(_149, _235, fma(_148, _234, _233 * _146));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_287)).x);
    TANGENT_1.x = fma(_158, _227, fma(_157, _226, _225 * _156));
    TANGENT_1.y = fma(_158, _231, fma(_157, _230, _229 * _156));
    TANGENT_1.z = fma(_158, _235, fma(_157, _234, _233 * _156));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_8 = sqrt(((_264 * _264) + (_265 * _265)) + (_266 * _266));
}


