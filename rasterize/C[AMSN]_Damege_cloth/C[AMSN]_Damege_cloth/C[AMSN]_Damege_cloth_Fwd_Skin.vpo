#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _165 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _168 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _175 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _417;
    float _418;
    float _419;
    float _420;
    float _421;
    float _422;
    float _423;
    float _424;
    float _425;
    float _426;
    float _427;
    float _428;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _201 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        precise float _205 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _210 = isnan(_205) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _205 : max(0.001000000047497451305389404296875, _205));
        precise float _212 = BLENDWEIGHT.x / _210;
        precise float _213 = BLENDWEIGHT.y / _210;
        precise float _214 = BLENDWEIGHT.z / _210;
        precise float _215 = BLENDWEIGHT.w / _210;
        uvec4 _222 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_201)).x * 13u) + 4u]);
        uint _223 = _222.x;
        uint _225 = (_223 + uint(float(BLENDINDICES.x))) * 3u;
        uint _232 = _225 + 1u;
        uint _239 = _225 + 2u;
        precise float _246 = _212 * cbObjMatrix._m0[_225].x;
        precise float _247 = _212 * cbObjMatrix._m0[_232].x;
        precise float _248 = _212 * cbObjMatrix._m0[_239].x;
        precise float _249 = _212 * cbObjMatrix._m0[_225].y;
        precise float _250 = _212 * cbObjMatrix._m0[_232].y;
        precise float _251 = _212 * cbObjMatrix._m0[_239].y;
        precise float _252 = _212 * cbObjMatrix._m0[_225].z;
        precise float _253 = _212 * cbObjMatrix._m0[_232].z;
        precise float _254 = _212 * cbObjMatrix._m0[_239].z;
        precise float _255 = _212 * cbObjMatrix._m0[_225].w;
        precise float _256 = _212 * cbObjMatrix._m0[_232].w;
        precise float _257 = _212 * cbObjMatrix._m0[_239].w;
        uint _260 = (_223 + uint(float(BLENDINDICES.y))) * 3u;
        uint _267 = _260 + 1u;
        uint _274 = _260 + 2u;
        precise float _281 = _213 * cbObjMatrix._m0[_260].x;
        precise float _282 = _213 * cbObjMatrix._m0[_267].x;
        precise float _283 = _213 * cbObjMatrix._m0[_274].x;
        precise float _284 = _213 * cbObjMatrix._m0[_260].y;
        precise float _285 = _213 * cbObjMatrix._m0[_267].y;
        precise float _286 = _213 * cbObjMatrix._m0[_274].y;
        precise float _287 = _213 * cbObjMatrix._m0[_260].z;
        precise float _288 = _213 * cbObjMatrix._m0[_267].z;
        precise float _289 = _213 * cbObjMatrix._m0[_274].z;
        precise float _290 = _213 * cbObjMatrix._m0[_260].w;
        precise float _291 = _213 * cbObjMatrix._m0[_267].w;
        precise float _292 = _213 * cbObjMatrix._m0[_274].w;
        precise float _293 = _246 + _281;
        precise float _294 = _247 + _282;
        precise float _295 = _248 + _283;
        precise float _296 = _249 + _284;
        precise float _297 = _250 + _285;
        precise float _298 = _251 + _286;
        precise float _299 = _252 + _287;
        precise float _300 = _253 + _288;
        precise float _301 = _254 + _289;
        precise float _302 = _255 + _290;
        precise float _303 = _256 + _291;
        precise float _304 = _257 + _292;
        uint _307 = (_223 + uint(float(BLENDINDICES.z))) * 3u;
        uint _314 = _307 + 1u;
        uint _321 = _307 + 2u;
        precise float _328 = _214 * cbObjMatrix._m0[_307].x;
        precise float _329 = _214 * cbObjMatrix._m0[_314].x;
        precise float _330 = _214 * cbObjMatrix._m0[_321].x;
        precise float _331 = _214 * cbObjMatrix._m0[_307].y;
        precise float _332 = _214 * cbObjMatrix._m0[_314].y;
        precise float _333 = _214 * cbObjMatrix._m0[_321].y;
        precise float _334 = _214 * cbObjMatrix._m0[_307].z;
        precise float _335 = _214 * cbObjMatrix._m0[_314].z;
        precise float _336 = _214 * cbObjMatrix._m0[_321].z;
        precise float _337 = _214 * cbObjMatrix._m0[_307].w;
        precise float _338 = _214 * cbObjMatrix._m0[_314].w;
        precise float _339 = _214 * cbObjMatrix._m0[_321].w;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        uint _354 = (_223 + uint(float(BLENDINDICES.w))) * 3u;
        uint _361 = _354 + 1u;
        uint _368 = _354 + 2u;
        precise float _375 = _215 * cbObjMatrix._m0[_354].x;
        precise float _376 = _215 * cbObjMatrix._m0[_361].x;
        precise float _377 = _215 * cbObjMatrix._m0[_368].x;
        precise float _378 = _215 * cbObjMatrix._m0[_354].y;
        precise float _379 = _215 * cbObjMatrix._m0[_361].y;
        precise float _380 = _215 * cbObjMatrix._m0[_368].y;
        precise float _381 = _215 * cbObjMatrix._m0[_354].z;
        precise float _382 = _215 * cbObjMatrix._m0[_361].z;
        precise float _383 = _215 * cbObjMatrix._m0[_368].z;
        precise float _384 = _215 * cbObjMatrix._m0[_354].w;
        precise float _385 = _215 * cbObjMatrix._m0[_361].w;
        precise float _386 = _215 * cbObjMatrix._m0[_368].w;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        _417 = _387;
        _418 = _390;
        _419 = _393;
        _420 = _396;
        _421 = _388;
        _422 = _391;
        _423 = _394;
        _424 = _397;
        _425 = _389;
        _426 = _392;
        _427 = _395;
        _428 = _398;
    }
    else
    {
        _417 = cbvModelParam._m0[0u].x;
        _418 = cbvModelParam._m0[0u].y;
        _419 = cbvModelParam._m0[0u].z;
        _420 = cbvModelParam._m0[0u].w;
        _421 = cbvModelParam._m0[1u].x;
        _422 = cbvModelParam._m0[1u].y;
        _423 = cbvModelParam._m0[1u].z;
        _424 = cbvModelParam._m0[1u].w;
        _425 = cbvModelParam._m0[2u].x;
        _426 = cbvModelParam._m0[2u].y;
        _427 = cbvModelParam._m0[2u].z;
        _428 = cbvModelParam._m0[2u].w;
    }
    precise float _429 = POSITION.x * _417;
    precise float _430 = POSITION.y * _418;
    precise float _431 = _430 + _429;
    precise float _432 = POSITION.z * _419;
    precise float _433 = _432 + _431;
    precise float _434 = 1.0 * _420;
    precise float _435 = _434 + _433;
    precise float _436 = POSITION.x * _421;
    precise float _437 = POSITION.y * _422;
    precise float _438 = _437 + _436;
    precise float _439 = POSITION.z * _423;
    precise float _440 = _439 + _438;
    precise float _441 = 1.0 * _424;
    precise float _442 = _441 + _440;
    precise float _443 = POSITION.x * _425;
    precise float _444 = POSITION.y * _426;
    precise float _445 = _444 + _443;
    precise float _446 = POSITION.z * _427;
    precise float _447 = _446 + _445;
    precise float _448 = 1.0 * _428;
    precise float _449 = _448 + _447;
    uint _463 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    uvec4 _465 = texelFetch(g_InstanceIndexBuffer, int(_463));
    uint _466 = _465.x;
    precise float _482 = _435 - cbSceneParam._m0[3u].x;
    precise float _483 = _442 - cbSceneParam._m0[3u].y;
    precise float _484 = _449 - cbSceneParam._m0[3u].z;
    precise float _512 = _482 * cbSceneParam._m0[24u].x;
    precise float _513 = _483 * cbSceneParam._m0[24u].y;
    precise float _514 = _513 + _512;
    precise float _515 = _484 * cbSceneParam._m0[24u].z;
    precise float _516 = _515 + _514;
    precise float _517 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _518 = _517 + _516;
    precise float _519 = _482 * cbSceneParam._m0[25u].x;
    precise float _520 = _483 * cbSceneParam._m0[25u].y;
    precise float _521 = _520 + _519;
    precise float _522 = _484 * cbSceneParam._m0[25u].z;
    precise float _523 = _522 + _521;
    precise float _524 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _525 = _524 + _523;
    precise float _526 = _482 * cbSceneParam._m0[26u].x;
    precise float _527 = _483 * cbSceneParam._m0[26u].y;
    precise float _528 = _527 + _526;
    precise float _529 = _484 * cbSceneParam._m0[26u].z;
    precise float _530 = _529 + _528;
    precise float _531 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _532 = _531 + _530;
    precise float _533 = _482 * cbSceneParam._m0[27u].x;
    precise float _534 = _483 * cbSceneParam._m0[27u].y;
    precise float _535 = _534 + _533;
    precise float _536 = _484 * cbSceneParam._m0[27u].z;
    precise float _537 = _536 + _535;
    precise float _538 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _539 = _538 + _537;
    gl_Position.x = _518;
    gl_Position.y = _525;
    gl_Position.z = _532;
    gl_Position.w = _539;
    POSITION_1.x = _518;
    POSITION_1.y = _525;
    POSITION_1.z = _532;
    POSITION_1.w = _539;
    NORMAL_1.x = fma(_168, _419, fma(_167, _418, _417 * _165));
    NORMAL_1.y = fma(_168, _423, fma(_167, _422, _421 * _165));
    NORMAL_1.z = fma(_168, _427, fma(_167, _426, _425 * _165));
    NORMAL_1.w = float(_466);
    TANGENT_1.x = fma(_177, _419, fma(_176, _418, _417 * _175));
    TANGENT_1.y = fma(_177, _423, fma(_176, _422, _421 * _175));
    TANGENT_1.z = fma(_177, _427, fma(_176, _426, _425 * _175));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_518, _525, _532, _539), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_518, _525, _532, _539), vec4(cbInstanceData._m0[(_466 * 13u) + 3u]));
}


