#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR_1;
layout(location = 7) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec4 TEXCOORD_6;
layout(location = 7) out vec3 TEXCOORD_7;

void main()
{
    uint _82 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_6.z = 0.0;
    TEXCOORD_6.w = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    float _186 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = float(BLENDINDICES.x);
    float _201 = float(BLENDINDICES.y);
    float _202 = float(BLENDINDICES.z);
    float _203 = float(BLENDINDICES.w);
    bool _209 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _430;
    float _431;
    float _432;
    float _433;
    float _434;
    float _435;
    float _436;
    float _437;
    float _438;
    float _439;
    float _440;
    float _441;
    if (_209)
    {
        uint _214 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        precise float _218 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _223 = isnan(_218) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _218 : max(0.001000000047497451305389404296875, _218));
        precise float _225 = BLENDWEIGHT.x / _223;
        precise float _226 = BLENDWEIGHT.y / _223;
        precise float _227 = BLENDWEIGHT.z / _223;
        precise float _228 = BLENDWEIGHT.w / _223;
        uvec4 _235 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_214)).x * 13u) + 4u]);
        uint _236 = _235.x;
        uint _238 = (_236 + uint(_200)) * 3u;
        uint _245 = _238 + 1u;
        uint _252 = _238 + 2u;
        precise float _259 = _225 * cbObjMatrix._m0[_238].x;
        precise float _260 = _225 * cbObjMatrix._m0[_245].x;
        precise float _261 = _225 * cbObjMatrix._m0[_252].x;
        precise float _262 = _225 * cbObjMatrix._m0[_238].y;
        precise float _263 = _225 * cbObjMatrix._m0[_245].y;
        precise float _264 = _225 * cbObjMatrix._m0[_252].y;
        precise float _265 = _225 * cbObjMatrix._m0[_238].z;
        precise float _266 = _225 * cbObjMatrix._m0[_245].z;
        precise float _267 = _225 * cbObjMatrix._m0[_252].z;
        precise float _268 = _225 * cbObjMatrix._m0[_238].w;
        precise float _269 = _225 * cbObjMatrix._m0[_245].w;
        precise float _270 = _225 * cbObjMatrix._m0[_252].w;
        uint _273 = (_236 + uint(_201)) * 3u;
        uint _280 = _273 + 1u;
        uint _287 = _273 + 2u;
        precise float _294 = _226 * cbObjMatrix._m0[_273].x;
        precise float _295 = _226 * cbObjMatrix._m0[_280].x;
        precise float _296 = _226 * cbObjMatrix._m0[_287].x;
        precise float _297 = _226 * cbObjMatrix._m0[_273].y;
        precise float _298 = _226 * cbObjMatrix._m0[_280].y;
        precise float _299 = _226 * cbObjMatrix._m0[_287].y;
        precise float _300 = _226 * cbObjMatrix._m0[_273].z;
        precise float _301 = _226 * cbObjMatrix._m0[_280].z;
        precise float _302 = _226 * cbObjMatrix._m0[_287].z;
        precise float _303 = _226 * cbObjMatrix._m0[_273].w;
        precise float _304 = _226 * cbObjMatrix._m0[_280].w;
        precise float _305 = _226 * cbObjMatrix._m0[_287].w;
        precise float _306 = _259 + _294;
        precise float _307 = _260 + _295;
        precise float _308 = _261 + _296;
        precise float _309 = _262 + _297;
        precise float _310 = _263 + _298;
        precise float _311 = _264 + _299;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        uint _320 = (_236 + uint(_202)) * 3u;
        uint _327 = _320 + 1u;
        uint _334 = _320 + 2u;
        precise float _341 = _227 * cbObjMatrix._m0[_320].x;
        precise float _342 = _227 * cbObjMatrix._m0[_327].x;
        precise float _343 = _227 * cbObjMatrix._m0[_334].x;
        precise float _344 = _227 * cbObjMatrix._m0[_320].y;
        precise float _345 = _227 * cbObjMatrix._m0[_327].y;
        precise float _346 = _227 * cbObjMatrix._m0[_334].y;
        precise float _347 = _227 * cbObjMatrix._m0[_320].z;
        precise float _348 = _227 * cbObjMatrix._m0[_327].z;
        precise float _349 = _227 * cbObjMatrix._m0[_334].z;
        precise float _350 = _227 * cbObjMatrix._m0[_320].w;
        precise float _351 = _227 * cbObjMatrix._m0[_327].w;
        precise float _352 = _227 * cbObjMatrix._m0[_334].w;
        precise float _353 = _306 + _341;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        uint _367 = (_236 + uint(_203)) * 3u;
        uint _374 = _367 + 1u;
        uint _381 = _367 + 2u;
        precise float _388 = _228 * cbObjMatrix._m0[_367].x;
        precise float _389 = _228 * cbObjMatrix._m0[_374].x;
        precise float _390 = _228 * cbObjMatrix._m0[_381].x;
        precise float _391 = _228 * cbObjMatrix._m0[_367].y;
        precise float _392 = _228 * cbObjMatrix._m0[_374].y;
        precise float _393 = _228 * cbObjMatrix._m0[_381].y;
        precise float _394 = _228 * cbObjMatrix._m0[_367].z;
        precise float _395 = _228 * cbObjMatrix._m0[_374].z;
        precise float _396 = _228 * cbObjMatrix._m0[_381].z;
        precise float _397 = _228 * cbObjMatrix._m0[_367].w;
        precise float _398 = _228 * cbObjMatrix._m0[_374].w;
        precise float _399 = _228 * cbObjMatrix._m0[_381].w;
        precise float _400 = _353 + _388;
        precise float _401 = _354 + _389;
        precise float _402 = _355 + _390;
        precise float _403 = _356 + _391;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        _430 = _400;
        _431 = _403;
        _432 = _406;
        _433 = _409;
        _434 = _401;
        _435 = _404;
        _436 = _407;
        _437 = _410;
        _438 = _402;
        _439 = _405;
        _440 = _408;
        _441 = _411;
    }
    else
    {
        _430 = cbvModelParam._m0[0u].x;
        _431 = cbvModelParam._m0[0u].y;
        _432 = cbvModelParam._m0[0u].z;
        _433 = cbvModelParam._m0[0u].w;
        _434 = cbvModelParam._m0[1u].x;
        _435 = cbvModelParam._m0[1u].y;
        _436 = cbvModelParam._m0[1u].z;
        _437 = cbvModelParam._m0[1u].w;
        _438 = cbvModelParam._m0[2u].x;
        _439 = cbvModelParam._m0[2u].y;
        _440 = cbvModelParam._m0[2u].z;
        _441 = cbvModelParam._m0[2u].w;
    }
    precise float _442 = POSITION.x * _430;
    precise float _443 = POSITION.y * _431;
    precise float _444 = _443 + _442;
    precise float _445 = POSITION.z * _432;
    precise float _446 = _445 + _444;
    precise float _447 = 1.0 * _433;
    precise float _448 = _447 + _446;
    precise float _449 = POSITION.x * _434;
    precise float _450 = POSITION.y * _435;
    precise float _451 = _450 + _449;
    precise float _452 = POSITION.z * _436;
    precise float _453 = _452 + _451;
    precise float _454 = 1.0 * _437;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.x * _438;
    precise float _457 = POSITION.y * _439;
    precise float _458 = _457 + _456;
    precise float _459 = POSITION.z * _440;
    precise float _460 = _459 + _458;
    precise float _461 = 1.0 * _441;
    precise float _462 = _461 + _460;
    float _680;
    float _681;
    float _682;
    float _683;
    float _684;
    float _685;
    float _686;
    float _687;
    float _688;
    float _689;
    float _690;
    float _691;
    if (_209)
    {
        float _463 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _466 = isnan(_463) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _463 : max(0.001000000047497451305389404296875, _463));
        float _467 = BLENDWEIGHT.x / _466;
        float _468 = BLENDWEIGHT.y / _466;
        float _469 = BLENDWEIGHT.z / _466;
        float _470 = BLENDWEIGHT.w / _466;
        uint _476 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        uvec4 _484 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_476)).x * 13u) + 4u]);
        uint _485 = _484.x;
        uint _487 = (_485 + uint(_200)) * 3u;
        uint _494 = _487 + 1u;
        uint _501 = _487 + 2u;
        uint _522 = (_485 + uint(_201)) * 3u;
        uint _529 = _522 + 1u;
        uint _536 = _522 + 2u;
        uint _569 = (_485 + uint(_202)) * 3u;
        uint _576 = _569 + 1u;
        uint _583 = _569 + 2u;
        uint _616 = (_485 + uint(_203)) * 3u;
        uint _623 = _616 + 1u;
        uint _630 = _616 + 2u;
        _680 = (((cbPrevObjMatrix._m0[_522].x * _468) + (cbPrevObjMatrix._m0[_487].x * _467)) + (cbPrevObjMatrix._m0[_569].x * _469)) + (cbPrevObjMatrix._m0[_616].x * _470);
        _681 = (((cbPrevObjMatrix._m0[_522].y * _468) + (cbPrevObjMatrix._m0[_487].y * _467)) + (cbPrevObjMatrix._m0[_569].y * _469)) + (cbPrevObjMatrix._m0[_616].y * _470);
        _682 = (((cbPrevObjMatrix._m0[_522].z * _468) + (cbPrevObjMatrix._m0[_487].z * _467)) + (cbPrevObjMatrix._m0[_569].z * _469)) + (cbPrevObjMatrix._m0[_616].z * _470);
        _683 = (((cbPrevObjMatrix._m0[_522].w * _468) + (cbPrevObjMatrix._m0[_487].w * _467)) + (cbPrevObjMatrix._m0[_569].w * _469)) + (cbPrevObjMatrix._m0[_616].w * _470);
        _684 = (((cbPrevObjMatrix._m0[_529].x * _468) + (cbPrevObjMatrix._m0[_494].x * _467)) + (cbPrevObjMatrix._m0[_576].x * _469)) + (cbPrevObjMatrix._m0[_623].x * _470);
        _685 = (((cbPrevObjMatrix._m0[_529].y * _468) + (cbPrevObjMatrix._m0[_494].y * _467)) + (cbPrevObjMatrix._m0[_576].y * _469)) + (cbPrevObjMatrix._m0[_623].y * _470);
        _686 = (((cbPrevObjMatrix._m0[_529].z * _468) + (cbPrevObjMatrix._m0[_494].z * _467)) + (cbPrevObjMatrix._m0[_576].z * _469)) + (cbPrevObjMatrix._m0[_623].z * _470);
        _687 = (((cbPrevObjMatrix._m0[_529].w * _468) + (cbPrevObjMatrix._m0[_494].w * _467)) + (cbPrevObjMatrix._m0[_576].w * _469)) + (cbPrevObjMatrix._m0[_623].w * _470);
        _688 = (((cbPrevObjMatrix._m0[_536].x * _468) + (cbPrevObjMatrix._m0[_501].x * _467)) + (cbPrevObjMatrix._m0[_583].x * _469)) + (cbPrevObjMatrix._m0[_630].x * _470);
        _689 = (((cbPrevObjMatrix._m0[_536].y * _468) + (cbPrevObjMatrix._m0[_501].y * _467)) + (cbPrevObjMatrix._m0[_583].y * _469)) + (cbPrevObjMatrix._m0[_630].y * _470);
        _690 = (((cbPrevObjMatrix._m0[_536].z * _468) + (cbPrevObjMatrix._m0[_501].z * _467)) + (cbPrevObjMatrix._m0[_583].z * _469)) + (cbPrevObjMatrix._m0[_630].z * _470);
        _691 = (((cbPrevObjMatrix._m0[_536].w * _468) + (cbPrevObjMatrix._m0[_501].w * _467)) + (cbPrevObjMatrix._m0[_583].w * _469)) + (cbPrevObjMatrix._m0[_630].w * _470);
    }
    else
    {
        _680 = cbvModelParam._m0[3u].x;
        _681 = cbvModelParam._m0[3u].y;
        _682 = cbvModelParam._m0[3u].z;
        _683 = cbvModelParam._m0[3u].w;
        _684 = cbvModelParam._m0[4u].x;
        _685 = cbvModelParam._m0[4u].y;
        _686 = cbvModelParam._m0[4u].z;
        _687 = cbvModelParam._m0[4u].w;
        _688 = cbvModelParam._m0[5u].x;
        _689 = cbvModelParam._m0[5u].y;
        _690 = cbvModelParam._m0[5u].z;
        _691 = cbvModelParam._m0[5u].w;
    }
    float _710 = (fma(POSITION.z, _682, fma(POSITION.y, _681, _680 * POSITION.x)) + _683) - cbSceneParam._m0[28u].x;
    float _711 = (fma(POSITION.z, _686, fma(POSITION.y, _685, _684 * POSITION.x)) + _687) - cbSceneParam._m0[28u].y;
    float _712 = (fma(POSITION.z, _690, fma(POSITION.y, _689, _688 * POSITION.x)) + _691) - cbSceneParam._m0[28u].z;
    float _759 = fma(_189, _432, fma(_188, _431, _430 * _186));
    float _762 = fma(_189, _436, fma(_188, _435, _434 * _186));
    float _765 = fma(_189, _440, fma(_188, _439, _438 * _186));
    uint _770 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
    precise float _789 = _448 - cbSceneParam._m0[3u].x;
    precise float _790 = _455 - cbSceneParam._m0[3u].y;
    precise float _791 = _462 - cbSceneParam._m0[3u].z;
    precise float _819 = _789 * cbSceneParam._m0[24u].x;
    precise float _820 = _790 * cbSceneParam._m0[24u].y;
    precise float _821 = _820 + _819;
    precise float _822 = _791 * cbSceneParam._m0[24u].z;
    precise float _823 = _822 + _821;
    precise float _824 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _825 = _824 + _823;
    precise float _826 = _789 * cbSceneParam._m0[25u].x;
    precise float _827 = _790 * cbSceneParam._m0[25u].y;
    precise float _828 = _827 + _826;
    precise float _829 = _791 * cbSceneParam._m0[25u].z;
    precise float _830 = _829 + _828;
    precise float _831 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _832 = _831 + _830;
    precise float _833 = _789 * cbSceneParam._m0[26u].x;
    precise float _834 = _790 * cbSceneParam._m0[26u].y;
    precise float _835 = _834 + _833;
    precise float _836 = _791 * cbSceneParam._m0[26u].z;
    precise float _837 = _836 + _835;
    precise float _838 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _839 = _838 + _837;
    precise float _840 = _789 * cbSceneParam._m0[27u].x;
    precise float _841 = _790 * cbSceneParam._m0[27u].y;
    precise float _842 = _841 + _840;
    precise float _843 = _791 * cbSceneParam._m0[27u].z;
    precise float _844 = _843 + _842;
    precise float _845 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _846 = _845 + _844;
    gl_Position.x = _825;
    gl_Position.y = _832;
    gl_Position.z = _839;
    gl_Position.w = _846;
    POSITION_1.x = _825;
    POSITION_1.y = _832;
    POSITION_1.z = _839;
    POSITION_1.w = _846;
    NORMAL_1.x = _759;
    NORMAL_1.y = _762;
    NORMAL_1.z = _765;
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_770)).x);
    TANGENT_1.x = fma(_198, _432, fma(_197, _431, _430 * _196));
    TANGENT_1.y = fma(_198, _436, fma(_197, _435, _434 * _196));
    TANGENT_1.z = fma(_198, _440, fma(_197, _439, _438 * _196));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    TEXCOORD_5.x = _825;
    TEXCOORD_5.y = _832;
    TEXCOORD_5.z = _839;
    TEXCOORD_5.w = _846;
    TEXCOORD_6.x = fma(_712, cbSceneParam._m0[29u].z, fma(_711, cbSceneParam._m0[29u].y, _710 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_6.y = fma(_712, cbSceneParam._m0[30u].z, fma(_711, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _710)) + cbSceneParam._m0[30u].w;
    TEXCOORD_6.z = fma(_712, cbSceneParam._m0[31u].z, fma(_711, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _710)) + cbSceneParam._m0[31u].w;
    TEXCOORD_6.w = fma(_712, cbSceneParam._m0[32u].z, fma(_711, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _710)) + cbSceneParam._m0[32u].w;
    TEXCOORD_7.x = _759;
    TEXCOORD_7.y = _762;
    TEXCOORD_7.z = _765;
}


