#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[18];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec2 TEXCOORD;

void main()
{
    uint _67 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _152;
    float _153;
    float _154;
    float _155;
    float _156;
    float _157;
    float _158;
    float _159;
    float _160;
    float _161;
    float _162;
    float _163;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _99 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _67;
        uint _113 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_99)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _120 = _113 + 1u;
        uint _127 = _113 + 2u;
        _152 = cbObjMatrix._m0[_113].x;
        _153 = cbObjMatrix._m0[_113].y;
        _154 = cbObjMatrix._m0[_113].z;
        _155 = cbObjMatrix._m0[_113].w;
        _156 = cbObjMatrix._m0[_120].x;
        _157 = cbObjMatrix._m0[_120].y;
        _158 = cbObjMatrix._m0[_120].z;
        _159 = cbObjMatrix._m0[_120].w;
        _160 = cbObjMatrix._m0[_127].x;
        _161 = cbObjMatrix._m0[_127].y;
        _162 = cbObjMatrix._m0[_127].z;
        _163 = cbObjMatrix._m0[_127].w;
    }
    else
    {
        _152 = cbvModelParam._m0[0u].x;
        _153 = cbvModelParam._m0[0u].y;
        _154 = cbvModelParam._m0[0u].z;
        _155 = cbvModelParam._m0[0u].w;
        _156 = cbvModelParam._m0[1u].x;
        _157 = cbvModelParam._m0[1u].y;
        _158 = cbvModelParam._m0[1u].z;
        _159 = cbvModelParam._m0[1u].w;
        _160 = cbvModelParam._m0[2u].x;
        _161 = cbvModelParam._m0[2u].y;
        _162 = cbvModelParam._m0[2u].z;
        _163 = cbvModelParam._m0[2u].w;
    }
    precise float _164 = POSITION.x * _152;
    precise float _165 = POSITION.y * _153;
    precise float _166 = _165 + _164;
    precise float _167 = POSITION.z * _154;
    precise float _168 = _167 + _166;
    precise float _169 = 1.0 * _155;
    precise float _171 = _169 + _168;
    precise float _172 = POSITION.x * _156;
    precise float _173 = POSITION.y * _157;
    precise float _174 = _173 + _172;
    precise float _175 = POSITION.z * _158;
    precise float _176 = _175 + _174;
    precise float _177 = 1.0 * _159;
    precise float _178 = _177 + _176;
    precise float _179 = POSITION.x * _160;
    precise float _180 = POSITION.y * _161;
    precise float _181 = _180 + _179;
    precise float _182 = POSITION.z * _162;
    precise float _183 = _182 + _181;
    precise float _184 = 1.0 * _163;
    precise float _185 = _184 + _183;
    precise float _191 = _171 - cbSceneParam._m0[3u].x;
    precise float _192 = _178 - cbSceneParam._m0[3u].y;
    precise float _193 = _185 - cbSceneParam._m0[3u].z;
    precise float _221 = _191 * cbSceneParam._m0[24u].x;
    precise float _222 = _192 * cbSceneParam._m0[24u].y;
    precise float _223 = _222 + _221;
    precise float _224 = _193 * cbSceneParam._m0[24u].z;
    precise float _225 = _224 + _223;
    precise float _226 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _227 = _226 + _225;
    precise float _228 = _191 * cbSceneParam._m0[25u].x;
    precise float _229 = _192 * cbSceneParam._m0[25u].y;
    precise float _230 = _229 + _228;
    precise float _231 = _193 * cbSceneParam._m0[25u].z;
    precise float _232 = _231 + _230;
    precise float _233 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _234 = _233 + _232;
    precise float _235 = _191 * cbSceneParam._m0[26u].x;
    precise float _236 = _192 * cbSceneParam._m0[26u].y;
    precise float _237 = _236 + _235;
    precise float _238 = _193 * cbSceneParam._m0[26u].z;
    precise float _239 = _238 + _237;
    precise float _240 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _241 = _240 + _239;
    precise float _242 = _191 * cbSceneParam._m0[27u].x;
    precise float _243 = _192 * cbSceneParam._m0[27u].y;
    precise float _244 = _243 + _242;
    precise float _245 = _193 * cbSceneParam._m0[27u].z;
    precise float _246 = _245 + _244;
    precise float _247 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _248 = _247 + _246;
    uint _253 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _67;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _227;
    gl_Position.y = _234;
    gl_Position.z = _241;
    gl_Position.w = _248;
    gl_ClipDistance[0u] = dot(vec4(_227, _234, _241, _248), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_227, _234, _241, _248), vec4(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_253)).x * 13u) + 3u]));
}


