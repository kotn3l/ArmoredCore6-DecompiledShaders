#version 460
layout(vertices = 3) out;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(location = 0) in vec4 POSITION[];
layout(location = 1) in vec4 NORMAL[];
layout(location = 2) in vec4 TANGENT[];
layout(location = 3) in vec4 TEXCOORD[];
layout(location = 4) in vec4 TEXCOORD_8[];
layout(location = 5) in float TEXCOORD_11[];
layout(location = 5, component = 1) in float TEXCOORD_12[];
layout(location = 5, component = 2) in float TEXCOORD_13[];
layout(location = 5, component = 3) in float TEXCOORD_15[];
layout(location = 0) out vec4 POSITION_1[3];
layout(location = 1) out vec4 NORMAL_1[3];
layout(location = 2) out vec4 TANGENT_1[3];
layout(location = 3) out vec4 TEXCOORD_1[3];
layout(location = 4) out vec4 TEXCOORD_7[3];
layout(location = 5) out float TEXCOORD_10[3];
layout(location = 5, component = 1) out float TEXCOORD_11_1[3];
layout(location = 5, component = 2) out float TEXCOORD_12_1[3];

void hull_main()
{
    POSITION_1[gl_InvocationID].x = POSITION[gl_InvocationID].x;
    POSITION_1[gl_InvocationID].y = POSITION[gl_InvocationID].y;
    POSITION_1[gl_InvocationID].z = POSITION[gl_InvocationID].z;
    POSITION_1[gl_InvocationID].w = POSITION[gl_InvocationID].w;
    NORMAL_1[gl_InvocationID].x = NORMAL[gl_InvocationID].x;
    NORMAL_1[gl_InvocationID].y = NORMAL[gl_InvocationID].y;
    NORMAL_1[gl_InvocationID].z = NORMAL[gl_InvocationID].z;
    NORMAL_1[gl_InvocationID].w = NORMAL[gl_InvocationID].w;
    TANGENT_1[gl_InvocationID].x = TANGENT[gl_InvocationID].x;
    TANGENT_1[gl_InvocationID].y = TANGENT[gl_InvocationID].y;
    TANGENT_1[gl_InvocationID].z = TANGENT[gl_InvocationID].z;
    TANGENT_1[gl_InvocationID].w = TANGENT[gl_InvocationID].w;
    TEXCOORD_1[gl_InvocationID].x = TEXCOORD[gl_InvocationID].x;
    TEXCOORD_1[gl_InvocationID].y = TEXCOORD[gl_InvocationID].y;
    TEXCOORD_1[gl_InvocationID].z = TEXCOORD[gl_InvocationID].z;
    TEXCOORD_1[gl_InvocationID].w = TEXCOORD[gl_InvocationID].w;
    TEXCOORD_7[gl_InvocationID].x = TEXCOORD_8[gl_InvocationID].x;
    TEXCOORD_7[gl_InvocationID].y = TEXCOORD_8[gl_InvocationID].y;
    TEXCOORD_7[gl_InvocationID].z = TEXCOORD_8[gl_InvocationID].z;
    TEXCOORD_7[gl_InvocationID].w = TEXCOORD_8[gl_InvocationID].w;
    TEXCOORD_10[gl_InvocationID] = TEXCOORD_11[gl_InvocationID];
    TEXCOORD_11_1[gl_InvocationID] = TEXCOORD_12[gl_InvocationID];
    TEXCOORD_12_1[gl_InvocationID] = TEXCOORD_13[gl_InvocationID];
}

void patch_main()
{
    float _186 = (-0.0) - cbMtdParam._m0[4u].y;
    bool _281 = ((((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _186) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _186)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[73u])) > _186)) != 0.0) && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _186) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _186)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[74u])) > _186)) != 0.0)) && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _186) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _186)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[75u])) > _186)) != 0.0);
    float _308 = cbSceneParam._m0[3u].x - (((POSITION[1u].x + POSITION[0u].x) + POSITION[2u].x) * 0.333000004291534423828125);
    float _309 = cbSceneParam._m0[3u].y - (((POSITION[1u].y + POSITION[0u].y) + POSITION[2u].y) * 0.333000004291534423828125);
    float _310 = cbSceneParam._m0[3u].z - (((POSITION[1u].z + POSITION[0u].z) + POSITION[2u].z) * 0.333000004291534423828125);
    float _311 = cbSceneParam._m0[3u].w - (((POSITION[1u].w + POSITION[0u].w) + POSITION[2u].w) * 0.333000004291534423828125);
    float _316 = inversesqrt(dot(vec4(_308, _309, _310, _311), vec4(_308, _309, _310, _311)));
    float _320 = POSITION[2u].x - POSITION[0u].x;
    float _321 = POSITION[2u].y - POSITION[0u].y;
    float _322 = POSITION[2u].z - POSITION[0u].z;
    float _323 = POSITION[1u].x - POSITION[0u].x;
    float _324 = POSITION[1u].y - POSITION[0u].y;
    float _325 = POSITION[1u].z - POSITION[0u].z;
    float _335 = (-0.0) - ((_324 * _322) - (_325 * _321));
    float _336 = (-0.0) - ((_325 * _320) - (_323 * _322));
    float _337 = (-0.0) - ((_323 * _321) - (_324 * _320));
    float _342 = inversesqrt(dot(vec3(_335, _336, _337), vec3(_335, _336, _337)));
    float _373;
    float _374;
    float _375;
    if ((_281 && (((float(dot(vec4(POSITION[1u].x, POSITION[1u].y, POSITION[1u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _186) + float(dot(vec4(POSITION[0u].x, POSITION[0u].y, POSITION[0u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _186)) + float(dot(vec4(POSITION[2u].x, POSITION[2u].y, POSITION[2u].z, 1.0), vec4(cbSceneParam._m0[76u])) > _186)) != 0.0)) && ((dot(vec3(_342 * _335, _342 * _336, _342 * _337), vec3(_316 * _308, _316 * _309, _310 * _316)) + 1.0) > cbMtdParam._m0[4u].x))
    {
        float _360 = (TEXCOORD_15[2u] + TEXCOORD_15[1u]) * 0.5;
        float _363 = (TEXCOORD_15[1u] + TEXCOORD_15[0u]) * 0.5;
        float _365 = (TEXCOORD_15[2u] + TEXCOORD_15[0u]) * 0.5;
        float _366 = isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : max(_365, 1.0));
        float _367 = isnan(1.0) ? _363 : (isnan(_363) ? 1.0 : max(_363, 1.0));
        float _368 = isnan(1.0) ? _360 : (isnan(_360) ? 1.0 : max(_360, 1.0));
        _373 = isnan(64.0) ? _368 : (isnan(_368) ? 64.0 : min(_368, 64.0));
        _374 = isnan(64.0) ? _367 : (isnan(_367) ? 64.0 : min(_367, 64.0));
        _375 = isnan(64.0) ? _366 : (isnan(_366) ? 64.0 : min(_366, 64.0));
    }
    else
    {
        _373 = 0.0;
        _374 = 0.0;
        _375 = 0.0;
    }
    gl_TessLevelOuter[0u] = _375;
    gl_TessLevelOuter[1u] = _374;
    gl_TessLevelOuter[2u] = _373;
    gl_TessLevelInner[0u] = ((_374 + _373) + _375) * 0.333000004291534423828125;
}

void main()
{
    hull_main();
    barrier();
    if (gl_InvocationID == 0u)
    {
        patch_main();
    }
}


