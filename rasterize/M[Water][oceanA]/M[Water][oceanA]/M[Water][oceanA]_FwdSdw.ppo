#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanA_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanA_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanA_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_oceanA_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_oceanA_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_oceanA_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1861;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _232 = _231 * _223;
    float _233 = _231 * _224;
    float _234 = _231 * _225;
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _239 = _238 * NORMAL.x;
    float _240 = _238 * NORMAL.y;
    float _241 = _238 * NORMAL.z;
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _253;
    float _254;
    float _255;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _253 = (-0.0) - _239;
        _254 = (-0.0) - _240;
        _255 = (-0.0) - _241;
    }
    else
    {
        _253 = _239;
        _254 = _240;
        _255 = _241;
    }
    float _301 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _311 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _301);
    float _312 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _301);
    float _313 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _301);
    float _328 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _345 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_2, SS_BumpMap), vec2((((_328 * cbMtdParam._m0[27u].x) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_328 * cbMtdParam._m0[27u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _348 = _345.x;
    float _349 = _345.y;
    float _350 = _345.z;
    float _351 = _345.w;
    float _364 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _367 = (sqrt(((_311 * _311) + (_312 * _312)) + (_313 * _313)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _364 : (isnan(_364) ? 0.001000000047497451305389404296875 : max(_364, 0.001000000047497451305389404296875)));
    float _368 = _367 + 0.180000007152557373046875;
    float _370 = _368 * 12.0;
    float _4350 = isnan(0.0) ? _370 : (isnan(_370) ? 0.0 : max(_370, 0.0));
    float _373 = isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0));
    vec4 _385 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _387 = _385.x;
    float _409 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _387)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _387))) - POSITION_1.w;
    float _410 = _409 / ((_373 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _4361 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _411 = isnan(1.0) ? _4361 : (isnan(_4361) ? 1.0 : min(_4361, 1.0));
    float _412 = isnan(0.5) ? _411 : (isnan(_411) ? 0.5 : max(_411, 0.5));
    float _414 = 1.0 - _412;
    float _415 = _368 * 7.0;
    float _4377 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
    float _417 = isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0));
    float _428 = (_350 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _429 = (_350 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _443 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].z * _328) + _428) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].w * _328) + _429) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _445 = _443.x;
    float _467 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].z * _428) + (cbMtdParam._m0[26u].z * _328)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].w * _429) + (cbMtdParam._m0[26u].w * _328)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _470 = (isnan(_467) ? _445 : (isnan(_445) ? _467 : max(_445, _467))) - _417;
    float _4393 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
    float _472 = _417 + 0.5;
    float _4404 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _483 = cbMtdParam._m0[16u].w * _328;
    float _484 = cos(_483);
    float _485 = sin(_483);
    vec4 _509 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_485 * cbMtdParam._m0[31u].x) + TEXCOORD.x) + (cbMtdParam._m0[22u].x * _328)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_484 * cbMtdParam._m0[31u].y) + TEXCOORD.y) + (cbMtdParam._m0[22u].y * _328)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _513 = _509.z;
    vec4 _528 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].z * _328) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].w * _328) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _532 = _528.z;
    float _535 = (isnan(_532) ? _513 : (isnan(_513) ? _532 : max(_513, _532))) * (isnan(1.0) ? _4404 : (isnan(_4404) ? 1.0 : min(_4404, 1.0)));
    float _4420 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _536 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
    float _539 = (_414 - _351) + (isnan(_536) ? _471 : (isnan(_471) ? _536 : max(_471, _536)));
    float _4436 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    float _540 = isnan(1.0) ? _4436 : (isnan(_4436) ? 1.0 : min(_4436, 1.0));
    float _541 = _540 * _412;
    float _4447 = isnan(0.0) ? _367 : (isnan(_367) ? 0.0 : max(_367, 0.0));
    float _550 = isnan(1.0) ? _4447 : (isnan(_4447) ? 1.0 : min(_4447, 1.0));
    float _551 = _350 - _550;
    float _4458 = isnan(0.0) ? _551 : (isnan(_551) ? 0.0 : max(_551, 0.0));
    float _552 = isnan(1.0) ? _4458 : (isnan(_4458) ? 1.0 : min(_4458, 1.0));
    vec4 _605 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].x * _328) + (cbMtdParam._m0[30u].z * _485)) + (cbMtdParam._m0[34u].z * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].y * _328) + (cbMtdParam._m0[30u].w * _484)) + (cbMtdParam._m0[34u].w * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _629 = cbMtdParam._m0[37u].w * TEXCOORD_5.x;
    float _685 = ((((((_605.w + (-0.5)) * cbMtdParam._m0[43u].w) + (cbMtdParam._m0[39u].y * (_509.w + (-0.5)))) + (cbMtdParam._m0[40u].x * (_528.w + (-0.5)))) + (((_629 + cbMtdParam._m0[41u].z) * cos(cbMtdParam._m0[13u].y * _328)) * (texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].z * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].w * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _328) * (cbMtdParam._m0[40u].w + _629)) * (texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].z * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].w * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _715 = 1.0 - _351;
    float _720 = ((isnan(0.550000011920928955078125) ? _715 : (isnan(_715) ? 0.550000011920928955078125 : max(_715, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _723 = ((TEXCOORD_5.y * (-0.5)) * _720) + _720;
    float _727 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _723) + _723;
    float _740 = (((_685 + ((cbMtdParam._m0[37u].x - (cbMtdParam._m0[37u].x * TEXCOORD_5.y)) * _350)) + ((texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].z * TEXCOORD.x) + (cbMtdParam._m0[22u].z * _328)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].w * TEXCOORD.y) + (cbMtdParam._m0[22u].w * _328)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].z)) + ((sin(cbMtdParam._m0[21u].y * _328) * cbMtdParam._m0[38u].z) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _727;
    float _743 = (_740 + cbMtdParam._m0[20u].z) * cbMtdParam._m0[20u].w;
    float _4479 = isnan(0.0) ? _743 : (isnan(_743) ? 0.0 : max(_743, 0.0));
    float _744 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
    float _756 = inversesqrt(dot(vec3(_311, _312, _313), vec3(_311, _312, _313)));
    float _760 = dot(vec4(_756 * _311, _756 * _312, _756 * _313, 0.0), vec4(_253, _254, _255, 0.0));
    float _4490 = isnan(0.0) ? _760 : (isnan(_760) ? 0.0 : max(_760, 0.0));
    float _768 = exp2(log2((1.0 - (isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _4501 = isnan(0.0) ? _768 : (isnan(_768) ? 0.0 : max(_768, 0.0));
    float _769 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
    float _773 = ((_541 + cbMtdParam._m0[9u].x) + (_552 * cbMtdParam._m0[10u].x)) + ((_744 * cbMtdParam._m0[11u].x) * _769);
    float _774 = ((_541 + cbMtdParam._m0[9u].y) + (_552 * cbMtdParam._m0[10u].y)) + ((_744 * cbMtdParam._m0[11u].y) * _769);
    float _775 = ((_541 + cbMtdParam._m0[9u].z) + (_552 * cbMtdParam._m0[10u].z)) + ((_744 * cbMtdParam._m0[11u].z) * _769);
    float _4512 = isnan(0.0) ? _412 : (isnan(_412) ? 0.0 : max(_412, 0.0));
    float _776 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
    float _4523 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _786 = isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0));
    float _789 = (_373 * (-0.87999999523162841796875)) * _786;
    float _792 = (((((1.0 - _773) - _776) * _550) + _773) + _786) + _789;
    float _795 = (((((1.0 - _774) - _776) * _550) + _774) + _786) + _789;
    float _798 = (((((1.0 - _775) - _776) * _550) + _775) + _786) + _789;
    float _799 = _350 * 0.01200000010430812835693359375;
    float _824 = (_350 * 0.300000011920928955078125) * texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].x * _328) + _799) + (cbMtdParam._m0[24u].x * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].y * _328) + _799) + (cbMtdParam._m0[24u].y * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _4534 = isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0));
    float _825 = isnan(1.0) ? _4534 : (isnan(_4534) ? 1.0 : min(_4534, 1.0));
    float _835 = (((1.0 - _792) * TEXCOORD_5.x) * _825) + _792;
    float _836 = (((1.0 - _795) * TEXCOORD_5.x) * _825) + _795;
    float _837 = (((1.0 - _798) * TEXCOORD_5.x) * _825) + _798;
    vec4 _871 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].z * _328) + (cbMtdParam._m0[30u].x * _485)) + (cbMtdParam._m0[29u].x * _428)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].w * _328) + (cbMtdParam._m0[30u].y * _484)) + (cbMtdParam._m0[29u].y * _429)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _874 = _871.y;
    float _881 = 1.0 - (_409 / cbMtdParam._m0[18u].w);
    float _885 = ((_871.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0)));
    float _891 = _874 * TEXCOORD_8.y;
    float _894 = ((isnan(cbMtdParam._m0[19u].x) ? _891 : (isnan(_891) ? cbMtdParam._m0[19u].x : max(_891, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _895 = isnan(_894) ? _885 : (isnan(_885) ? _894 : max(_885, _894));
    float _4560 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0));
    float _896 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
    float _903 = (_896 * (1.0 - _835)) + _835;
    float _904 = (_896 * (1.0 - _836)) + _836;
    float _905 = (_896 * (1.0 - _837)) + _837;
    float _942 = exp2(log2(cbMtdParam._m0[15u].w * _715) * cbMtdParam._m0[17u].x);
    float _4571 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _943 = isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0));
    float _944 = _943 * texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].x * _328) + (cbMtdParam._m0[28u].z * _715)) + (cbMtdParam._m0[29u].z * _428)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].y * _328) + (cbMtdParam._m0[28u].w * _715)) + (cbMtdParam._m0[29u].w * _429)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _947 = ((_943 - _944) * cbMtdParam._m0[17u].w) + _944;
    float _951 = _417 * TEXCOORD_8.z;
    float _958 = ((_951 * (1.0 - _903)) * _947) + _903;
    float _959 = ((_951 * (1.0 - _904)) * _947) + _904;
    float _960 = ((_951 * (1.0 - _905)) * _947) + _905;
    float _964 = 1.0 - (_409 / cbMtdParam._m0[18u].x);
    float _970 = (cbMtdParam._m0[18u].y * _874) * (isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0)));
    float _974 = (_970 * (1.0 - _958)) + _958;
    float _975 = (_970 * (1.0 - _959)) + _959;
    float _976 = (_970 * (1.0 - _960)) + _960;
    float _979 = _367 / cbMtdParam._m0[15u].y;
    float _4587 = isnan(0.0) ? _979 : (isnan(_979) ? 0.0 : max(_979, 0.0));
    float _982 = (1.0 - (isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0)))) * cbMtdParam._m0[15u].x;
    float _988 = _367 + 0.20000000298023223876953125;
    float _990 = _988 * 9.0;
    float _4598 = isnan(0.0) ? _990 : (isnan(_990) ? 0.0 : max(_990, 0.0));
    float _995 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0)))) + cbMtdParam._m0[12u].x;
    float _998 = (_367 + 0.099999986588954925537109375) * 2.5;
    float _4609 = isnan(0.0) ? _998 : (isnan(_998) ? 0.0 : max(_998, 0.0));
    float _1003 = ((cbMtdParam._m0[14u].z - _995) * (isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0)))) + _995;
    float _1004 = _974 + _540;
    float _4620 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1009 = ((0.3499999940395355224609375 - _1003) * (isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0)))) + _1003;
    float _1010 = TEXCOORD_5.z * 0.5;
    float _1022 = (_367 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _4631 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _1027 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0)))) + cbMtdParam._m0[20u].x;
    float _1032 = (_1027 * (_348 + (-0.5))) + 0.5;
    float _1033 = (_1027 * (_349 + (-0.5))) + 0.5;
    float _4642 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _1034 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
    vec4 _1064 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].x * TEXCOORD.z) + (cbMtdParam._m0[32u].x * _328)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].y * TEXCOORD.w) + (cbMtdParam._m0[32u].y * _328)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1072 = ((_528.x + (-0.5)) * 0.5) + _509.x;
    float _1073 = ((_528.y + (-0.5)) * 0.5) + _509.y;
    vec4 _1097 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].z * TEXCOORD.x) + (cbMtdParam._m0[25u].x * _328)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].w * TEXCOORD.y) + (cbMtdParam._m0[25u].y * _328)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _1106 = _988 * 12.0;
    float _4653 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
    float _1108 = 1.0 - (isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0)));
    float _1122 = cbMtdParam._m0[33u].z * TEXCOORD.x;
    float _1123 = cbMtdParam._m0[33u].w * TEXCOORD.y;
    vec4 _1136 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((_1122 + (cbMtdParam._m0[33u].x * _328)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_1123 + (cbMtdParam._m0[33u].y * _328)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1157 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1122 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _552)) + (cbMtdParam._m0[34u].x * _328)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1123 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _552)) + (cbMtdParam._m0[34u].y * _328)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1171 = (((0.5 - _1072) * 0.10999999940395355224609375) + _1072) + (((((((_1097.z + (-0.5)) * cbMtdParam._m0[16u].x) * _1108) + (-1.0)) + _1136.x) + _1157.x) * cbMtdParam._m0[15u].z);
    float _1172 = (((0.5 - _1073) * 0.10999999940395355224609375) + _1073) + (((((((_1097.w + (-0.5)) * cbMtdParam._m0[16u].x) * _1108) + (-1.0)) + _1136.y) + _1157.y) * cbMtdParam._m0[15u].z);
    float _1177 = ((_1064.x - _1171) * _367) + _1171;
    float _1178 = ((_1064.y - _1172) * _367) + _1172;
    float _1179 = _367 * 0.5;
    float _4664 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
    float _1180 = isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0));
    float _1191 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _727);
    float _1198 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1200 = _1198 - (_1198 * _1180);
    float _1204 = (((((((0.5 - _348) * 0.60000002384185791015625) + _348) - _1032) * _1034) + _1032) + (_1200 * (_605.x + (-0.5)))) + (((_1177 + (-0.5)) + ((0.5 - _1177) * _1180)) * _1191);
    float _1206 = (((((((0.5 - _349) * 0.60000002384185791015625) + _349) - _1033) * _1034) + _1033) + (_1200 * (_605.y + (-0.5)))) + (((_1178 + (-0.5)) + ((0.5 - _1178) * _1180)) * _1191);
    float _1216 = (((_1010 * (0.5 - _1204)) + _1204) * 2.0) + (-1.0);
    float _1217 = (((_1010 * (0.5 - _1206)) + _1206) * 2.0) + (-1.0);
    float _1218 = dot(vec2(_1216, _1217), vec2(_1216, _1217));
    float _4675 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
    float _1223 = sqrt(1.0 - (isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0))));
    float _1226 = _988 * 6.0;
    float _4686 = isnan(0.0) ? _1226 : (isnan(_1226) ? 0.0 : max(_1226, 0.0));
    float _1229 = cbMtdParam._m0[16u].y * (isnan(1.0) ? _4686 : (isnan(_4686) ? 1.0 : min(_4686, 1.0)));
    float _4697 = isnan(0.0) ? _1229 : (isnan(_1229) ? 0.0 : max(_1229, 0.0));
    float _1230 = isnan(1.0) ? _4697 : (isnan(_4697) ? 1.0 : min(_4697, 1.0));
    float _1233 = ((1.0 - _1230) * _1004) + _1230;
    uint _1247 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1248 = _1247 + 5u;
    float _1259 = (-0.0) - _311;
    float _1260 = (-0.0) - _312;
    float _1261 = (-0.0) - _313;
    float _1265 = inversesqrt(dot(vec3(_1259, _1260, _1261), vec3(_1259, _1260, _1261)));
    float _1269 = dot(vec3(_1265 * _1259, _1265 * _1260, _1265 * _1261), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_1248]).x * 14u].xyz));
    float _1279 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_1269 * 0.60000002384185791015625)) * 1.5);
    float _1292 = ((((0.959999978542327880859375 / exp2(log2((_1269 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _1279) * 0.5) + _1279) * 0.079577468335628509521484375;
    float _1296 = fma(_1223, _253, fma(_1217, _245 * TANGENT.x, _1216 * _232));
    float _1299 = fma(_1223, _254, fma(_1217, _245 * TANGENT.y, _1216 * _233));
    float _1302 = fma(_1223, _255, fma(_1217, _245 * TANGENT.z, _1216 * _234));
    float _1306 = inversesqrt(dot(vec3(_1296, _1299, _1302), vec3(_1296, _1299, _1302)));
    float _1307 = _1306 * _1296;
    float _1308 = _1306 * _1299;
    float _1309 = _1306 * _1302;
    float _4708 = isnan(0.0) ? _982 : (isnan(_982) ? 0.0 : max(_982, 0.0));
    float _4719 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1311 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
    float _4730 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _4741 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
    float _4752 = isnan(0.0) ? _976 : (isnan(_976) ? 0.0 : max(_976, 0.0));
    float _1326 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1366 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1375 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _1366);
    float _1376 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1366);
    float _1377 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _1366);
    float _1381 = inversesqrt(dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377)));
    float _1382 = _1375 * _1381;
    float _1383 = _1376 * _1381;
    float _1384 = _1377 * _1381;
    float _1389 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1390 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1392 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1401 = (_1392.x * 2.0) + (-1.0);
    float _1402 = (_1392.y * 2.0) + (-1.0);
    float _1403 = (_1392.z * 2.0) + (-1.0);
    float _1407 = inversesqrt(dot(vec3(_1401, _1402, _1403), vec3(_1401, _1402, _1403)));
    float _1418 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1392.w;
    float _1425 = (((_1401 * _1407) - _1307) * _1418) + _1307;
    float _1426 = (((_1402 * _1407) - _1308) * _1418) + _1308;
    float _1427 = (((_1403 * _1407) - _1309) * _1418) + _1309;
    float _1447 = fma(_1427, cbSceneParam._m0[5u].z, fma(_1426, cbSceneParam._m0[5u].y, _1425 * cbSceneParam._m0[5u].x));
    float _1450 = fma(_1427, cbSceneParam._m0[6u].z, fma(_1426, cbSceneParam._m0[6u].y, _1425 * cbSceneParam._m0[6u].x));
    float _1453 = fma(_1427, cbSceneParam._m0[7u].z, fma(_1426, cbSceneParam._m0[7u].y, _1425 * cbSceneParam._m0[7u].x));
    uint _1467 = (_1247 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1473 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0)))) * cbInstanceData._m0[_1467].x;
    float _1474 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0)))) * cbInstanceData._m0[_1467].y;
    float _1475 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0)))) * cbInstanceData._m0[_1467].z;
    float _4763 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
    float _1476 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
    float _4774 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
    float _1477 = isnan(1.0) ? _4774 : (isnan(_4774) ? 1.0 : min(_4774, 1.0));
    float _4785 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
    float _1478 = isnan(1.0) ? _4785 : (isnan(_4785) ? 1.0 : min(_4785, 1.0));
    vec4 _1487 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1389, cbSceneParam._m0[86u].y * _1390));
    float _1490 = _1487.x * TEXCOORD_5.w;
    float _1491 = dot(vec3(_1425, _1426, _1427), vec3(_1382, _1383, _1384));
    float _1494 = _1491 * 2.0;
    float _1498 = (_1494 * _1425) - _1382;
    float _1499 = (_1494 * _1426) - _1383;
    float _1500 = (_1494 * _1427) - _1384;
    float _1504 = abs(dot(vec3(_1382, _1383, _1384), vec3(_1425, _1426, _1427)));
    float _4796 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    float _1505 = isnan(1.0) ? _4796 : (isnan(_4796) ? 1.0 : min(_4796, 1.0));
    float _1514 = sqrt(_1311);
    float _1526 = exp2((_1514 * 5.0) * log2(1.0 - (_1505 * 0.999000012874603271484375))) / (4.0 - (_1514 * 3.0));
    float _1556 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1560 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1564 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1860;
    float _1862;
    float _1863;
    float _1864;
    float _1865;
    float _1866;
    float _1867;
    float _1868;
    float _1869;
    float _1870;
    float _1871;
    float _1872;
    float _1873;
    float _1874;
    float _1875;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1589 = fma(_1564, cbModelParam._m0[26u].z, fma(_1560, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1556));
        float _1593 = fma(_1564, cbModelParam._m0[27u].z, fma(_1560, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1556));
        float _1597 = fma(_1564, cbModelParam._m0[28u].z, fma(_1560, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1556));
        float _1619 = _1556 + _1425;
        float _1620 = _1560 + _1426;
        float _1621 = _1564 + _1427;
        float _1631 = fma(_1621, cbModelParam._m0[26u].z, fma(_1620, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1619)) - _1589;
        float _1632 = fma(_1621, cbModelParam._m0[27u].z, fma(_1620, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1619)) - _1593;
        float _1633 = fma(_1621, cbModelParam._m0[28u].z, fma(_1620, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1619)) - _1597;
        float _1637 = inversesqrt(dot(vec3(_1631, _1632, _1633), vec3(_1631, _1632, _1633)));
        float _1649 = ((_1637 * _1631) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1589 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1650 = ((_1637 * _1632) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1593 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1651 = ((_1637 * _1633) / cbModelParam._m0[34u].z) + ((((((_1597 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1654 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1649, _1650, _1651), 0.0);
        vec4 _1661 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1649, _1650, _1651), 0.0);
        vec4 _1668 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1649, _1650, _1651), 0.0);
        vec4 _1675 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1649, _1650, _1651), 0.0);
        float _1688 = exp2((_1654.w + (-0.5)) * 20.0) * 2.0;
        float _1689 = _1688 * (_1654.x + (-0.5));
        float _1690 = _1688 * (_1654.y + (-0.5));
        float _1691 = _1688 * (_1654.z + (-0.5));
        float _1698 = exp2((_1661.w + (-0.5)) * 20.0) * 2.0;
        float _1699 = _1698 * (_1661.x + (-0.5));
        float _1700 = _1698 * (_1661.y + (-0.5));
        float _1701 = _1698 * (_1661.z + (-0.5));
        float _1708 = exp2((_1668.w + (-0.5)) * 20.0) * 2.0;
        float _1709 = _1708 * (_1668.x + (-0.5));
        float _1710 = _1708 * (_1668.y + (-0.5));
        float _1711 = _1708 * (_1668.z + (-0.5));
        float _1718 = exp2((_1675.w + (-0.5)) * 20.0) * 2.0;
        float _1719 = _1718 * (_1675.x + (-0.5));
        float _1720 = _1718 * (_1675.y + (-0.5));
        float _1721 = _1718 * (_1675.z + (-0.5));
        float _1722 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        float _1723 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        float _1724 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
        float _1725 = _1689 * 0.5;
        float _1726 = _1699 * 0.5;
        float _1727 = _1709 * 0.5;
        float _1728 = dot(vec3(_1725, _1726, _1727), vec3(_1725, _1726, _1727));
        float _1733 = (_1728 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1728);
        float _1742 = (dot(vec3(_1425, _1426, _1427), vec3(_1733 * _1725, _1733 * _1726, _1733 * _1727)) + 1.0) * 0.5;
        float _4822 = isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0));
        float _1752 = sqrt(((_1726 * _1726) + (_1725 * _1725)) + (_1727 * _1727)) / (_1722 + 9.9999997473787516355514526367188e-06);
        float _4833 = isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0));
        float _1753 = isnan(1.0) ? _4833 : (isnan(_4833) ? 1.0 : min(_4833, 1.0));
        float _1754 = _1753 * 2.0;
        float _1758 = (1.0 - _1753) / (_1753 + 1.0);
        float _4844 = isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0));
        float _1759 = isnan(1.0) ? _4844 : (isnan(_4844) ? 1.0 : min(_4844, 1.0));
        float _1768 = ((((1.0 - _1759) * (_1754 + 2.0)) * exp2(log2(isnan(1.0) ? _4822 : (isnan(_4822) ? 1.0 : min(_4822, 1.0))) * (_1754 + 1.0))) + _1759) * _1722;
        float _1769 = _1690 * 0.5;
        float _1770 = _1700 * 0.5;
        float _1771 = _1710 * 0.5;
        float _1772 = dot(vec3(_1769, _1770, _1771), vec3(_1769, _1770, _1771));
        float _1777 = (_1772 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1772);
        float _1785 = (dot(vec3(_1425, _1426, _1427), vec3(_1777 * _1769, _1777 * _1770, _1777 * _1771)) + 1.0) * 0.5;
        float _4855 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1794 = sqrt(((_1770 * _1770) + (_1769 * _1769)) + (_1771 * _1771)) / (_1723 + 9.9999997473787516355514526367188e-06);
        float _4866 = isnan(0.0) ? _1794 : (isnan(_1794) ? 0.0 : max(_1794, 0.0));
        float _1795 = isnan(1.0) ? _4866 : (isnan(_4866) ? 1.0 : min(_4866, 1.0));
        float _1796 = _1795 * 2.0;
        float _1800 = (1.0 - _1795) / (_1795 + 1.0);
        float _4877 = isnan(0.0) ? _1800 : (isnan(_1800) ? 0.0 : max(_1800, 0.0));
        float _1801 = isnan(1.0) ? _4877 : (isnan(_4877) ? 1.0 : min(_4877, 1.0));
        float _1810 = ((((1.0 - _1801) * (_1796 + 2.0)) * exp2(log2(isnan(1.0) ? _4855 : (isnan(_4855) ? 1.0 : min(_4855, 1.0))) * (_1796 + 1.0))) + _1801) * _1723;
        float _1811 = _1691 * 0.5;
        float _1812 = _1701 * 0.5;
        float _1813 = _1711 * 0.5;
        float _1814 = dot(vec3(_1811, _1812, _1813), vec3(_1811, _1812, _1813));
        float _1819 = (_1814 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1814);
        float _1827 = (dot(vec3(_1425, _1426, _1427), vec3(_1819 * _1811, _1819 * _1812, _1819 * _1813)) + 1.0) * 0.5;
        float _4888 = isnan(0.0) ? _1827 : (isnan(_1827) ? 0.0 : max(_1827, 0.0));
        float _1836 = sqrt(((_1812 * _1812) + (_1811 * _1811)) + (_1813 * _1813)) / (_1724 + 9.9999997473787516355514526367188e-06);
        float _4899 = isnan(0.0) ? _1836 : (isnan(_1836) ? 0.0 : max(_1836, 0.0));
        float _1837 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
        float _1838 = _1837 * 2.0;
        float _1842 = (1.0 - _1837) / (_1837 + 1.0);
        float _4910 = isnan(0.0) ? _1842 : (isnan(_1842) ? 0.0 : max(_1842, 0.0));
        float _1843 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
        float _1852 = ((((1.0 - _1843) * (_1838 + 2.0)) * exp2(log2(isnan(1.0) ? _4888 : (isnan(_4888) ? 1.0 : min(_4888, 1.0))) * (_1838 + 1.0))) + _1843) * _1724;
        _1860 = _1691;
        _1862 = _1690;
        _1863 = _1689;
        _1864 = _1701;
        _1865 = _1700;
        _1866 = _1699;
        _1867 = _1711;
        _1868 = _1710;
        _1869 = _1709;
        _1870 = _1724;
        _1871 = _1723;
        _1872 = _1722;
        _1873 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0)));
        _1874 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0)));
        _1875 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0)));
    }
    else
    {
        _1860 = _1861;
        _1862 = _1861;
        _1863 = _1861;
        _1864 = _1861;
        _1865 = _1861;
        _1866 = _1861;
        _1867 = _1861;
        _1868 = _1861;
        _1869 = _1861;
        _1870 = _1861;
        _1871 = _1861;
        _1872 = _1861;
        _1873 = 0.0;
        _1874 = 0.0;
        _1875 = 0.0;
    }
    float _2165;
    float _2166;
    float _2167;
    float _2168;
    float _2169;
    float _2170;
    float _2171;
    float _2172;
    float _2173;
    float _2174;
    float _2175;
    float _2176;
    float _2177;
    float _2178;
    float _2179;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1898 = fma(_1564, cbModelParam._m0[30u].z, fma(_1560, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1556));
        float _1902 = fma(_1564, cbModelParam._m0[31u].z, fma(_1560, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1556));
        float _1906 = fma(_1564, cbModelParam._m0[32u].z, fma(_1560, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1556));
        float _1928 = _1556 + _1425;
        float _1929 = _1560 + _1426;
        float _1930 = _1564 + _1427;
        float _1940 = fma(_1930, cbModelParam._m0[30u].z, fma(_1929, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1928)) - _1898;
        float _1941 = fma(_1930, cbModelParam._m0[31u].z, fma(_1929, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1928)) - _1902;
        float _1942 = fma(_1930, cbModelParam._m0[32u].z, fma(_1929, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1928)) - _1906;
        float _1946 = inversesqrt(dot(vec3(_1940, _1941, _1942), vec3(_1940, _1941, _1942)));
        float _1958 = ((_1946 * _1940) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1898 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1959 = ((_1946 * _1941) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1902 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1960 = ((_1946 * _1942) / cbModelParam._m0[35u].z) + ((((((_1906 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1962 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1958, _1959, _1960), 0.0);
        vec4 _1969 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1958, _1959, _1960), 0.0);
        vec4 _1976 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1958, _1959, _1960), 0.0);
        vec4 _1983 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1958, _1959, _1960), 0.0);
        float _1995 = exp2((_1962.w + (-0.5)) * 20.0) * 2.0;
        float _1996 = _1995 * (_1962.x + (-0.5));
        float _1997 = _1995 * (_1962.y + (-0.5));
        float _1998 = _1995 * (_1962.z + (-0.5));
        float _2005 = exp2((_1969.w + (-0.5)) * 20.0) * 2.0;
        float _2006 = _2005 * (_1969.x + (-0.5));
        float _2007 = _2005 * (_1969.y + (-0.5));
        float _2008 = _2005 * (_1969.z + (-0.5));
        float _2015 = exp2((_1976.w + (-0.5)) * 20.0) * 2.0;
        float _2016 = _2015 * (_1976.x + (-0.5));
        float _2017 = _2015 * (_1976.y + (-0.5));
        float _2018 = _2015 * (_1976.z + (-0.5));
        float _2025 = exp2((_1983.w + (-0.5)) * 20.0) * 2.0;
        float _2026 = _2025 * (_1983.x + (-0.5));
        float _2027 = _2025 * (_1983.y + (-0.5));
        float _2028 = _2025 * (_1983.z + (-0.5));
        float _2029 = isnan(0.0) ? _2026 : (isnan(_2026) ? 0.0 : max(_2026, 0.0));
        float _2030 = isnan(0.0) ? _2027 : (isnan(_2027) ? 0.0 : max(_2027, 0.0));
        float _2031 = isnan(0.0) ? _2028 : (isnan(_2028) ? 0.0 : max(_2028, 0.0));
        float _2032 = _1996 * 0.5;
        float _2033 = _2006 * 0.5;
        float _2034 = _2016 * 0.5;
        float _2035 = dot(vec3(_2032, _2033, _2034), vec3(_2032, _2033, _2034));
        float _2040 = (_2035 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2035);
        float _2048 = (dot(vec3(_1425, _1426, _1427), vec3(_2040 * _2032, _2040 * _2033, _2040 * _2034)) + 1.0) * 0.5;
        float _4951 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
        float _2057 = sqrt(((_2033 * _2033) + (_2032 * _2032)) + (_2034 * _2034)) / (_2029 + 9.9999997473787516355514526367188e-06);
        float _4962 = isnan(0.0) ? _2057 : (isnan(_2057) ? 0.0 : max(_2057, 0.0));
        float _2058 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
        float _2059 = _2058 * 2.0;
        float _2063 = (1.0 - _2058) / (_2058 + 1.0);
        float _4973 = isnan(0.0) ? _2063 : (isnan(_2063) ? 0.0 : max(_2063, 0.0));
        float _2064 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
        float _2073 = ((((1.0 - _2064) * (_2059 + 2.0)) * exp2(log2(isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0))) * (_2059 + 1.0))) + _2064) * _2029;
        float _2074 = _1997 * 0.5;
        float _2075 = _2007 * 0.5;
        float _2076 = _2017 * 0.5;
        float _2077 = dot(vec3(_2074, _2075, _2076), vec3(_2074, _2075, _2076));
        float _2082 = (_2077 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2077);
        float _2090 = (dot(vec3(_1425, _1426, _1427), vec3(_2082 * _2074, _2082 * _2075, _2082 * _2076)) + 1.0) * 0.5;
        float _4984 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
        float _2099 = sqrt(((_2075 * _2075) + (_2074 * _2074)) + (_2076 * _2076)) / (_2030 + 9.9999997473787516355514526367188e-06);
        float _4995 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
        float _2100 = isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0));
        float _2101 = _2100 * 2.0;
        float _2105 = (1.0 - _2100) / (_2100 + 1.0);
        float _5006 = isnan(0.0) ? _2105 : (isnan(_2105) ? 0.0 : max(_2105, 0.0));
        float _2106 = isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0));
        float _2115 = ((((1.0 - _2106) * (_2101 + 2.0)) * exp2(log2(isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0))) * (_2101 + 1.0))) + _2106) * _2030;
        float _2116 = _1998 * 0.5;
        float _2117 = _2008 * 0.5;
        float _2118 = _2018 * 0.5;
        float _2119 = dot(vec3(_2116, _2117, _2118), vec3(_2116, _2117, _2118));
        float _2124 = (_2119 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_2119);
        float _2132 = (dot(vec3(_1425, _1426, _1427), vec3(_2124 * _2116, _2124 * _2117, _2124 * _2118)) + 1.0) * 0.5;
        float _5017 = isnan(0.0) ? _2132 : (isnan(_2132) ? 0.0 : max(_2132, 0.0));
        float _2141 = sqrt(((_2117 * _2117) + (_2116 * _2116)) + (_2118 * _2118)) / (_2031 + 9.9999997473787516355514526367188e-06);
        float _5028 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
        float _2142 = isnan(1.0) ? _5028 : (isnan(_5028) ? 1.0 : min(_5028, 1.0));
        float _2143 = _2142 * 2.0;
        float _2147 = (1.0 - _2142) / (_2142 + 1.0);
        float _5039 = isnan(0.0) ? _2147 : (isnan(_2147) ? 0.0 : max(_2147, 0.0));
        float _2148 = isnan(1.0) ? _5039 : (isnan(_5039) ? 1.0 : min(_5039, 1.0));
        float _2157 = ((((1.0 - _2148) * (_2143 + 2.0)) * exp2(log2(isnan(1.0) ? _5017 : (isnan(_5017) ? 1.0 : min(_5017, 1.0))) * (_2143 + 1.0))) + _2148) * _2031;
        _2165 = _1998;
        _2166 = _1997;
        _2167 = _1996;
        _2168 = _2008;
        _2169 = _2007;
        _2170 = _2006;
        _2171 = _2018;
        _2172 = _2017;
        _2173 = _2016;
        _2174 = _2031;
        _2175 = _2030;
        _2176 = _2029;
        _2177 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2073 : (isnan(_2073) ? 0.0 : max(_2073, 0.0)));
        _2178 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2115 : (isnan(_2115) ? 0.0 : max(_2115, 0.0)));
        _2179 = cbModelParam._m0[36u].w * (isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0)));
    }
    else
    {
        _2165 = _1861;
        _2166 = _1861;
        _2167 = _1861;
        _2168 = _1861;
        _2169 = _1861;
        _2170 = _1861;
        _2171 = _1861;
        _2172 = _1861;
        _2173 = _1861;
        _2174 = _1861;
        _2175 = _1861;
        _2176 = _1861;
        _2177 = 0.0;
        _2178 = 0.0;
        _2179 = 0.0;
    }
    float _2189 = (cbModelParam._m0[1u].x * (_2177 - _1873)) + _1873;
    float _2190 = (cbModelParam._m0[1u].x * (_2178 - _1874)) + _1874;
    float _2191 = (cbModelParam._m0[1u].x * (_2179 - _1875)) + _1875;
    float _2212 = fma(_2191, cbSceneParam._m0[89u].z, fma(_2190, cbSceneParam._m0[89u].y, _2189 * cbSceneParam._m0[89u].x));
    float _2215 = fma(_2191, cbSceneParam._m0[90u].z, fma(_2190, cbSceneParam._m0[90u].y, _2189 * cbSceneParam._m0[90u].x));
    float _2218 = fma(_2191, cbSceneParam._m0[91u].z, fma(_2190, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _2189));
    float _2231 = _1498 * 0.5;
    float _2232 = _1499 * 0.5;
    float _2233 = _1500 * 0.5;
    float _2234 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_2167, _2170, _2173, _2176));
    float _2237 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_2166, _2169, _2172, _2175));
    float _2240 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_2165, _2168, _2171, _2174));
    float _2274;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _2247 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_1860, _1864, _1867, _1870));
        float _2251 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_1862, _1865, _1868, _1871));
        float _2255 = dot(vec4(_2231, _2232, _2233, 1.0), vec4(_1863, _1866, _1869, _1872));
        float _2262 = dot(vec4(cbModelParam._m0[39u]), vec4(_2231, _2232, _2233, 1.0));
        _2274 = dot(vec3(isnan(0.0) ? _2255 : (isnan(_2255) ? 0.0 : max(_2255, 0.0)), isnan(0.0) ? _2251 : (isnan(_2251) ? 0.0 : max(_2251, 0.0)), isnan(0.0) ? _2247 : (isnan(_2247) ? 0.0 : max(_2247, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2262) ? 0.0 : (isnan(0.0) ? _2262 : max(0.0, _2262))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2274 = 1.0;
    }
    float _2285;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _2276 = dot(vec4(cbModelParam._m0[40u]), vec4(_2231, _2232, _2233, 1.0));
        _2285 = dot(vec3(isnan(0.0) ? _2234 : (isnan(_2234) ? 0.0 : max(_2234, 0.0)), isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0)), isnan(0.0) ? _2240 : (isnan(_2240) ? 0.0 : max(_2240, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_2276) ? 0.0 : (isnan(0.0) ? _2276 : max(0.0, _2276))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _2285 = 1.0;
    }
    float _2289 = (_2285 * cbModelParam._m0[1u].x) + (_2274 * (1.0 - cbModelParam._m0[1u].x));
    float _2299 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1311);
    float _2300 = isnan(_2299) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _2299 : min(cbModelParam._m0[25u].z, _2299));
    float _2380;
    float _2382;
    float _2384;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2347 = fma(_1564, cbModelParam._m0[13u].z, fma(_1560, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1556)) + cbModelParam._m0[13u].w;
        float _2351 = fma(_1564, cbModelParam._m0[14u].z, fma(_1560, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1556)) + cbModelParam._m0[14u].w;
        float _2355 = fma(_1564, cbModelParam._m0[15u].z, fma(_1560, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1556)) + cbModelParam._m0[15u].w;
        float _2358 = fma(_1500, cbModelParam._m0[13u].z, fma(_1499, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1498));
        float _2361 = fma(_1500, cbModelParam._m0[14u].z, fma(_1499, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1498));
        float _2364 = fma(_1500, cbModelParam._m0[15u].z, fma(_1499, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1498));
        float _2392;
        if (_2358 > 0.0)
        {
            _2392 = abs((1.0 - _2347) / _2358);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2358 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2347 + 1.0) / _2358);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2392 = frontier_phi_16_14_ladder;
        }
        float _2600;
        if (_2361 > 0.0)
        {
            _2600 = abs((1.0 - _2351) / _2361);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2361 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2351 + 1.0) / _2361);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2600 = frontier_phi_25_21_ladder;
        }
        float _2933;
        if (_2364 > 0.0)
        {
            _2933 = abs((1.0 - _2355) / _2364);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2364 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2355 + 1.0) / _2364);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2933 = frontier_phi_37_32_ladder;
        }
        float _2935 = isnan(_2600) ? _2392 : (isnan(_2392) ? _2600 : min(_2392, _2600));
        float _2936 = isnan(_2933) ? _2935 : (isnan(_2935) ? _2933 : min(_2935, _2933));
        float _2940 = (_2936 * _2358) + _2347;
        float _2941 = (_2936 * _2361) + _2351;
        float _2942 = (_2936 * _2364) + _2355;
        float _2943 = _2936 * 9.9999997473787516355514526367188e-05;
        float _2945 = (-1.0) - _2943;
        float _2947 = _2943 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2942 > _2947) || ((_2942 < _2945) || ((_2941 > _2947) || ((_2941 < _2945) || ((_2940 < _2945) || (_2940 > _2947))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3224 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2942, cbModelParam._m0[9u].z, fma(_2941, cbModelParam._m0[9u].y, _2940 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2942, cbModelParam._m0[10u].z, fma(_2941, cbModelParam._m0[10u].y, _2940 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2942, cbModelParam._m0[11u].z, fma(_2941, cbModelParam._m0[11u].y, _2940 * cbModelParam._m0[11u].x))), _2300);
            frontier_phi_15_37_ladder = _3224.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _3224.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _3224.x * cbModelParam._m0[1u].y;
        }
        _2380 = frontier_phi_15_37_ladder_2;
        _2382 = frontier_phi_15_37_ladder_1;
        _2384 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2368 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1498, _1499, _1500), _2300);
        _2380 = _2368.x * cbModelParam._m0[1u].y;
        _2382 = _2368.y * cbModelParam._m0[1u].y;
        _2384 = _2368.z * cbModelParam._m0[1u].y;
    }
    float _2388 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1311);
    float _2389 = isnan(_2388) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2388 : min(cbModelParam._m0[25u].w, _2388));
    float _2478;
    float _2480;
    float _2482;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2442 = fma(_1564, cbModelParam._m0[21u].z, fma(_1560, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1556)) + cbModelParam._m0[21u].w;
        float _2446 = fma(_1564, cbModelParam._m0[22u].z, fma(_1560, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1556)) + cbModelParam._m0[22u].w;
        float _2450 = fma(_1564, cbModelParam._m0[23u].z, fma(_1560, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1556)) + cbModelParam._m0[23u].w;
        float _2453 = fma(_1500, cbModelParam._m0[21u].z, fma(_1499, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1498));
        float _2456 = fma(_1500, cbModelParam._m0[22u].z, fma(_1499, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1498));
        float _2459 = fma(_1500, cbModelParam._m0[23u].z, fma(_1499, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1498));
        float _2605;
        if (_2453 > 0.0)
        {
            _2605 = abs((1.0 - _2442) / _2453);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2453 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2442 + 1.0) / _2453);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2605 = frontier_phi_27_23_ladder;
        }
        float _2960;
        if (_2456 > 0.0)
        {
            _2960 = abs((1.0 - _2446) / _2456);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2456 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2446 + 1.0) / _2456);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2960 = frontier_phi_39_34_ladder;
        }
        float _3407;
        if (_2459 > 0.0)
        {
            _3407 = abs((1.0 - _2450) / _2459);
        }
        else
        {
            float frontier_phi_51_46_ladder;
            if (_2459 < 0.0)
            {
                frontier_phi_51_46_ladder = abs((_2450 + 1.0) / _2459);
            }
            else
            {
                frontier_phi_51_46_ladder = 5000.0;
            }
            _3407 = frontier_phi_51_46_ladder;
        }
        float _3409 = isnan(_2960) ? _2605 : (isnan(_2605) ? _2960 : min(_2605, _2960));
        float _3410 = isnan(_3407) ? _3409 : (isnan(_3409) ? _3407 : min(_3409, _3407));
        float _3414 = (_3410 * _2453) + _2442;
        float _3415 = (_3410 * _2456) + _2446;
        float _3416 = (_3410 * _2459) + _2450;
        float _3417 = _3410 * 9.9999997473787516355514526367188e-05;
        float _3418 = (-1.0) - _3417;
        float _3420 = _3417 + 1.0;
        float frontier_phi_24_51_ladder;
        float frontier_phi_24_51_ladder_1;
        float frontier_phi_24_51_ladder_2;
        if ((_3416 > _3420) || ((_3416 < _3418) || ((_3415 > _3420) || ((_3415 < _3418) || ((_3414 < _3418) || (_3414 > _3420))))))
        {
            frontier_phi_24_51_ladder = 0.0;
            frontier_phi_24_51_ladder_1 = 0.0;
            frontier_phi_24_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3619 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_3416, cbModelParam._m0[17u].z, fma(_3415, cbModelParam._m0[17u].y, _3414 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_3416, cbModelParam._m0[18u].z, fma(_3415, cbModelParam._m0[18u].y, _3414 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_3416, cbModelParam._m0[19u].z, fma(_3415, cbModelParam._m0[19u].y, _3414 * cbModelParam._m0[19u].x))), _2389);
            frontier_phi_24_51_ladder = _3619.z * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_1 = _3619.y * cbModelParam._m0[1u].z;
            frontier_phi_24_51_ladder_2 = _3619.x * cbModelParam._m0[1u].z;
        }
        _2478 = frontier_phi_24_51_ladder_2;
        _2480 = frontier_phi_24_51_ladder_1;
        _2482 = frontier_phi_24_51_ladder;
    }
    else
    {
        vec4 _2462 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1498, _1499, _1500), _2389);
        _2478 = _2462.x * cbModelParam._m0[1u].z;
        _2480 = _2462.y * cbModelParam._m0[1u].z;
        _2482 = _2462.z * cbModelParam._m0[1u].z;
    }
    float _2494 = ((((1.0 - _1526) * ((_1514 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1526 * _1514)) * _1490;
    float _2495 = _2494 * ((cbModelParam._m0[1u].w * (_2478 - _2380)) + _2380);
    float _2496 = _2494 * ((cbModelParam._m0[1u].w * (_2480 - _2382)) + _2382);
    float _2497 = _2494 * ((cbModelParam._m0[1u].w * (_2482 - _2384)) + _2384);
    float _2500 = fma(_2497, cbSceneParam._m0[89u].z, fma(_2496, cbSceneParam._m0[89u].y, _2495 * cbSceneParam._m0[89u].x));
    float _2503 = fma(_2497, cbSceneParam._m0[90u].z, fma(_2496, cbSceneParam._m0[90u].y, _2495 * cbSceneParam._m0[90u].x));
    float _2506 = fma(_2497, cbSceneParam._m0[91u].z, fma(_2496, cbSceneParam._m0[91u].y, _2495 * cbSceneParam._m0[91u].x));
    float _2525 = (cbSceneParam._m0[88u].y * (1.0 - _1311)) + cbSceneParam._m0[88u].z;
    float _5165 = isnan(0.0) ? _2525 : (isnan(_2525) ? 0.0 : max(_2525, 0.0));
    vec4 _2529 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_1389, _1390), (isnan(1.0) ? _5165 : (isnan(_5165) ? 1.0 : min(_5165, 1.0))) * 5.0);
    float _2545 = 1.0 - _2529.w;
    float _2579 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2583 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2587 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2591 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2592 = _2579 / _2591;
    float _2593 = _2583 / _2591;
    float _2594 = _2587 / _2591;
    float _2737;
    float _2738;
    float _2739;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2621 = ((uint(_2594 > cbSceneParam._m0[59u].y) + uint(_2594 > cbSceneParam._m0[59u].x)) + uint(_2594 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2622 = _2621 + 43u;
        uint _2629 = _2621 + 44u;
        uint _2636 = _2621 + 45u;
        uint _2643 = _2621 + 46u;
        float _2654 = fma(_2591, cbSceneParam._m0[_2622].w, fma(_2587, cbSceneParam._m0[_2622].z, fma(_2583, cbSceneParam._m0[_2622].y, _2579 * cbSceneParam._m0[_2622].x)));
        float _2658 = fma(_2591, cbSceneParam._m0[_2629].w, fma(_2587, cbSceneParam._m0[_2629].z, fma(_2583, cbSceneParam._m0[_2629].y, _2579 * cbSceneParam._m0[_2629].x)));
        float _2666 = fma(_2591, cbSceneParam._m0[_2643].w, fma(_2587, cbSceneParam._m0[_2643].z, fma(_2583, cbSceneParam._m0[_2643].y, _2579 * cbSceneParam._m0[_2643].x)));
        float _2670 = cbSceneParam._m0[33u].z * _2666;
        float _2672 = cbSceneParam._m0[33u].w * _2666;
        float _2675 = fma(_2591, cbSceneParam._m0[_2636].w, fma(_2587, cbSceneParam._m0[_2636].z, fma(_2583, cbSceneParam._m0[_2636].y, _2579 * cbSceneParam._m0[_2636].x))) / _2666;
        float _2723 = (cbSceneParam._m0[33u].x - sqrt(((_2593 * _2593) + (_2592 * _2592)) + (_2594 * _2594))) * cbSceneParam._m0[33u].y;
        float _5176 = isnan(0.0) ? _2723 : (isnan(_2723) ? 0.0 : max(_2723, 0.0));
        float _2730 = (isnan(1.0) ? _5176 : (isnan(_5176) ? 1.0 : min(_5176, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2670 + _2654) / _2666, (_2672 + _2658) / _2666), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2672 + _2654) / _2666, (_2658 - _2670) / _2666), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2654 - _2670) / _2666, (_2658 - _2672) / _2666), _2675), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2654 - _2672) / _2666, (_2670 + _2658) / _2666), _2675), 0.0)).x), vec4(0.25)));
        _2737 = 1.0 - (_2730 * cbSceneParam._m0[34u].x);
        _2738 = 1.0 - (_2730 * cbSceneParam._m0[34u].y);
        _2739 = 1.0 - (_2730 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2737 = 1.0;
        _2738 = 1.0;
        _2739 = 1.0;
    }
    float _2803;
    float _2805;
    float _2807;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2791 = fma(_2591, cbSceneParam._m0[63u].w, fma(_2587, cbSceneParam._m0[63u].z, fma(_2583, cbSceneParam._m0[63u].y, _2579 * cbSceneParam._m0[63u].x)));
        float _2792 = fma(_2591, cbSceneParam._m0[60u].w, fma(_2587, cbSceneParam._m0[60u].z, fma(_2583, cbSceneParam._m0[60u].y, _2579 * cbSceneParam._m0[60u].x))) / _2791;
        float _2793 = fma(_2591, cbSceneParam._m0[61u].w, fma(_2587, cbSceneParam._m0[61u].z, fma(_2583, cbSceneParam._m0[61u].y, _2579 * cbSceneParam._m0[61u].x))) / _2791;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2792 >= cbSceneParam._m0[64u].x) && (_2793 >= cbSceneParam._m0[64u].y)) && (_2792 <= cbSceneParam._m0[64u].z)) && (_2793 <= cbSceneParam._m0[64u].w))
        {
            float _2973 = fma(_2591, cbSceneParam._m0[62u].w, fma(_2587, cbSceneParam._m0[62u].z, fma(_2583, cbSceneParam._m0[62u].y, _2579 * cbSceneParam._m0[62u].x))) / _2791;
            float _2977 = isnan(cbSceneParam._m0[41u].w) ? _2973 : (isnan(_2973) ? cbSceneParam._m0[41u].w : max(_2973, cbSceneParam._m0[41u].w));
            float _3020 = (cbSceneParam._m0[33u].x - sqrt(((_2593 * _2593) + (_2592 * _2592)) + (_2594 * _2594))) * cbSceneParam._m0[33u].y;
            float _5192 = isnan(0.0) ? _3020 : (isnan(_3020) ? 0.0 : max(_3020, 0.0));
            float _3027 = (isnan(1.0) ? _5192 : (isnan(_5192) ? 1.0 : min(_5192, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2792, cbSceneParam._m0[33u].w + _2793), _2977), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2792, _2793 - cbSceneParam._m0[33u].z), _2977), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2792 - cbSceneParam._m0[33u].z, _2793 - cbSceneParam._m0[33u].w), _2977), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2792 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2793), _2977), 0.0)).x), vec4(0.25)));
            float _3031 = 1.0 - (_3027 * cbSceneParam._m0[34u].x);
            float _3032 = 1.0 - (_3027 * cbSceneParam._m0[34u].y);
            float _3033 = 1.0 - (_3027 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_3033) ? _2739 : (isnan(_2739) ? _3033 : min(_2739, _3033));
            frontier_phi_36_35_ladder_1 = isnan(_3032) ? _2738 : (isnan(_2738) ? _3032 : min(_2738, _3032));
            frontier_phi_36_35_ladder_2 = isnan(_3031) ? _2737 : (isnan(_2737) ? _3031 : min(_2737, _3031));
        }
        else
        {
            frontier_phi_36_35_ladder = _2739;
            frontier_phi_36_35_ladder_1 = _2738;
            frontier_phi_36_35_ladder_2 = _2737;
        }
        _2803 = frontier_phi_36_35_ladder_2;
        _2805 = frontier_phi_36_35_ladder_1;
        _2807 = frontier_phi_36_35_ladder;
    }
    else
    {
        _2803 = _2737;
        _2805 = _2738;
        _2807 = _2739;
    }
    uvec4 _2811 = floatBitsToUint(cbInstanceData._m0[_1248]);
    uint _2813 = _2811.x * 14u;
    float _2820 = (cbLight._m0[_2813 + 13u].x * (_1490 + (-1.0))) + 1.0;
    uint _2821 = _2813 + 4u;
    float _2830 = isnan(1.0) ? _2820 : (isnan(_2820) ? 1.0 : min(_2820, 1.0));
    float _2839 = dot(vec3(cbLight._m0[_2813].xyz), vec3(_1425, _1426, _1427));
    float _5223 = isnan(0.0) ? _2839 : (isnan(_2839) ? 0.0 : max(_2839, 0.0));
    float _2843 = (isnan(1.0) ? _5223 : (isnan(_5223) ? 1.0 : min(_5223, 1.0))) * 0.3183098733425140380859375;
    float _2845 = ((cbLight._m0[_2821].x * _2803) * _2830) * _2843;
    float _2846 = ((cbLight._m0[_2821].y * _2805) * _2830) * _2843;
    float _2847 = ((cbLight._m0[_2821].z * _2807) * _2830) * _2843;
    uint _2849 = _2813 + 8u;
    float _2862 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2813].w)) * _1311) * 0.949999988079071044921875);
    float _2863 = _2862 * _2862;
    float _2864 = cbLight._m0[_2813].x + _1382;
    float _2865 = cbLight._m0[_2813].y + _1383;
    float _2866 = cbLight._m0[_2813].z + _1384;
    float _2870 = inversesqrt(dot(vec3(_2864, _2865, _2866), vec3(_2864, _2865, _2866)));
    float _2871 = _2870 * _2864;
    float _2872 = _2870 * _2865;
    float _2873 = _2870 * _2866;
    float _2874 = dot(vec3(_1425, _1426, _1427), vec3(cbLight._m0[_2813].xyz));
    float _5234 = isnan(0.0) ? _2874 : (isnan(_2874) ? 0.0 : max(_2874, 0.0));
    float _2877 = isnan(1.0) ? _5234 : (isnan(_5234) ? 1.0 : min(_5234, 1.0));
    float _5245 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
    float _2878 = isnan(1.0) ? _5245 : (isnan(_5245) ? 1.0 : min(_5245, 1.0));
    float _2879 = dot(vec3(_1425, _1426, _1427), vec3(_2871, _2872, _2873));
    float _5256 = isnan(0.0) ? _2879 : (isnan(_2879) ? 0.0 : max(_2879, 0.0));
    float _2882 = isnan(1.0) ? _5256 : (isnan(_5256) ? 1.0 : min(_5256, 1.0));
    float _2883 = dot(vec3(cbLight._m0[_2813].xyz), vec3(_2871, _2872, _2873));
    float _5267 = isnan(0.0) ? _2883 : (isnan(_2883) ? 0.0 : max(_2883, 0.0));
    float _2887 = _2863 * _2863;
    float _2891 = ((_2882 * _2882) * (_2887 + (-1.0))) + 1.0;
    float _2901 = (exp2(log2(1.0 - (isnan(1.0) ? _5267 : (isnan(_5267) ? 1.0 : min(_5267, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2902 = 1.0 - _2863;
    float _2913 = (0.5 / (((_2878 * ((_2877 * _2902) + _2863)) + 9.9999999392252902907785028219223e-09) + (((_2878 * _2902) + _2863) * _2877))) * _2877;
    float _5278 = isnan(0.0) ? _2913 : (isnan(_2913) ? 0.0 : max(_2913, 0.0));
    float _2915 = (isnan(1.0) ? _5278 : (isnan(_5278) ? 1.0 : min(_5278, 1.0))) * (_2887 / ((_2891 * _2891) * 3.141590118408203125));
    float _2919 = (((cbLight._m0[_2849].x * _2803) * _2901) * _2915) * _2830;
    float _2923 = (((cbLight._m0[_2849].y * _2805) * _2901) * _2915) * _2830;
    float _2927 = (((cbLight._m0[_2849].z * _2807) * _2901) * _2915) * _2830;
    float _3089;
    float _3091;
    float _3093;
    float _3095;
    float _3097;
    float _3099;
    if (_2811.y == 0u)
    {
        uvec4 _3045 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3046 = _3045.x;
        uint _3057 = uint((float(_3045.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1390) / _3046))) + floor(float(uint(cbSceneParam._m0[85u].x * _1389) / _3046)));
        float _3067 = (log2(_2594 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3068 = isnan(0.0) ? _3067 : (isnan(_3067) ? 0.0 : max(_3067, 0.0));
        uint _3071 = uint(isnan(14.0) ? _3068 : (isnan(_3068) ? 14.0 : min(_3068, 14.0)));
        uvec4 _3076 = texelFetch(g_lightClusterGridBuffer, int(((_3071 << 2u) + (_3057 << 6u)) >> 2u));
        uint _3077 = _3076.x;
        uint _3078 = _3045.z;
        float _3233;
        float _3235;
        float _3237;
        float _3239;
        float _3241;
        float _3243;
        if (((((1u << ((_3078 >> 4u) & 15u)) + 4294967295u) & _3077) == 0u) || ((_3078 & 240u) == 0u))
        {
            _3233 = 0.0;
            _3235 = 0.0;
            _3237 = 0.0;
            _3239 = 0.0;
            _3241 = 0.0;
            _3243 = 0.0;
        }
        else
        {
            float _3234;
            float _3236;
            float _3238;
            float _3240;
            float _3242;
            float _3244;
            float _3465 = 0.0;
            float _3466 = 0.0;
            float _3467 = 0.0;
            float _3468 = 0.0;
            float _3469 = 0.0;
            float _3470 = 0.0;
            uint _3471 = 0u;
            uint _3480;
            bool _3481;
            for (;;)
            {
                _3480 = texelFetch(g_lightClassification, int((((_3071 << 5u) + (_3057 << 9u)) + (_3471 << 2u)) >> 2u)).x;
                _3481 = _3480 == 0u;
                float frontier_phi_60_pred;
                float frontier_phi_60_pred_1;
                float frontier_phi_60_pred_2;
                float frontier_phi_60_pred_3;
                float frontier_phi_60_pred_4;
                float frontier_phi_60_pred_5;
                if (_3481)
                {
                    frontier_phi_60_pred = _3468;
                    frontier_phi_60_pred_1 = _3467;
                    frontier_phi_60_pred_2 = _3466;
                    frontier_phi_60_pred_3 = _3465;
                    frontier_phi_60_pred_4 = _3469;
                    frontier_phi_60_pred_5 = _3470;
                }
                else
                {
                    float _3693;
                    float _3694;
                    float _3695;
                    float _3696;
                    float _3697;
                    float _3698;
                    uint _3699;
                    _3693 = _3465;
                    _3694 = _3466;
                    _3695 = _3467;
                    _3696 = _3468;
                    _3697 = _3469;
                    _3698 = _3470;
                    _3699 = _3480;
                    float _3624;
                    float _3625;
                    float _3626;
                    float _3627;
                    float _3628;
                    float _3629;
                    for (;;)
                    {
                        uint _3703 = uint(findLSB(_3699)) + (_3471 << 5u);
                        uint _3700 = (_3699 + 4294967295u) & _3699;
                        uint _3705 = _3703 * 48u;
                        vec4 _3719 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3705)).x, texelFetch(g_PointLightRenderingBuffer, int(_3705 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3705 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3705 + 3u)).x));
                        uint _3725 = (_3703 * 48u) + 4u;
                        vec4 _3738 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3725)).x, texelFetch(g_PointLightRenderingBuffer, int(_3725 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3725 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3725 + 3u)).x));
                        uint _3744 = (_3703 * 48u) + 8u;
                        vec3 _3755 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3744)).x, texelFetch(g_PointLightRenderingBuffer, int(_3744 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3744 + 2u)).x));
                        float _3759 = _3719.x - _2592;
                        float _3760 = _3719.y - _2593;
                        float _3761 = _3719.z - _2594;
                        float _3762 = dot(vec3(_3759, _3760, _3761), vec3(_3759, _3760, _3761));
                        float _3765 = inversesqrt(_3762);
                        float _3766 = _3765 * _3759;
                        float _3767 = _3765 * _3760;
                        float _3768 = _3765 * _3761;
                        float _3769 = dot(vec3(_1447, _1450, _1453), vec3(_3766, _3767, _3768));
                        float _3774 = 1.0 - (_3762 * _3719.w);
                        float _5299 = isnan(0.0) ? _3774 : (isnan(_3774) ? 0.0 : max(_3774, 0.0));
                        float _3775 = isnan(1.0) ? _5299 : (isnan(_5299) ? 1.0 : min(_5299, 1.0));
                        float _3776 = sqrt(_3762) * _3738.w;
                        float _3779 = 1.39999997615814208984375 / (_3776 + 1.39999997615814208984375);
                        float _3780 = _3779 * _3779;
                        float _3783 = ((1.0 - _3780) * _3769) + _3780;
                        float _3786 = _3776 * _3776;
                        float _3790 = ((isnan(0.0) ? _3783 : (isnan(_3783) ? 0.0 : max(_3783, 0.0))) * _3775) / ((_3786 * 0.699999988079071044921875) + 1.0);
                        float _3794 = (-0.0) - _2592;
                        float _3795 = (-0.0) - _2593;
                        float _3796 = (-0.0) - _2594;
                        float _3800 = inversesqrt(dot(vec3(_3794, _3795, _3796), vec3(_3794, _3795, _3796)));
                        float _3801 = _3800 * _3794;
                        float _3802 = _3800 * _3795;
                        float _3803 = _3800 * _3796;
                        float _3810 = exp2(log2(1.0 / ((_3786 * 3.5) + 5.0)) * 0.25);
                        float _3811 = 1.0 - _1514;
                        float _3818 = sqrt(1.0 - ((1.0 - (_3811 * _3811)) * (1.0 - (_3810 * _3810))));
                        float _3819 = _3818 * _3818;
                        float _3820 = _3819 * _3819;
                        float _3821 = _3801 + _3766;
                        float _3822 = _3802 + _3767;
                        float _3823 = _3803 + _3768;
                        float _3827 = inversesqrt(dot(vec3(_3821, _3822, _3823), vec3(_3821, _3822, _3823)));
                        float _3831 = dot(vec3(_1447, _1450, _1453), vec3(_3801, _3802, _3803));
                        float _5315 = isnan(0.0) ? _3831 : (isnan(_3831) ? 0.0 : max(_3831, 0.0));
                        float _3834 = isnan(1.0) ? _5315 : (isnan(_5315) ? 1.0 : min(_5315, 1.0));
                        float _3835 = dot(vec3(_1447, _1450, _1453), vec3(_3827 * _3821, _3827 * _3822, _3827 * _3823));
                        float _5326 = isnan(0.0) ? _3835 : (isnan(_3835) ? 0.0 : max(_3835, 0.0));
                        float _3838 = isnan(1.0) ? _5326 : (isnan(_5326) ? 1.0 : min(_5326, 1.0));
                        float _3842 = ((_3838 * _3838) * (_3820 + (-1.0))) + 1.0;
                        float _3843 = _3779 * _3819;
                        float _3844 = _3843 * _3843;
                        float _3847 = ((1.0 - _3844) * _3769) + _3844;
                        float _5337 = isnan(0.0) ? _3847 : (isnan(_3847) ? 0.0 : max(_3847, 0.0));
                        float _3848 = isnan(1.0) ? _5337 : (isnan(_5337) ? 1.0 : min(_5337, 1.0));
                        float _3849 = 1.0 - _3819;
                        float _3859 = (0.5 / (((_3848 * ((_3834 * _3849) + _3819)) + 9.9999999392252902907785028219223e-09) + (((_3848 * _3849) + _3819) * _3834))) * _3848;
                        float _5348 = isnan(0.0) ? _3859 : (isnan(_3859) ? 0.0 : max(_3859, 0.0));
                        float _3870 = (((_3820 * 3.1415927410125732421875) * (isnan(1.0) ? _5348 : (isnan(_5348) ? 1.0 : min(_5348, 1.0)))) / ((_3842 * _3842) * ((_3786 * 2.1991131305694580078125) + 3.141590118408203125))) * _3775;
                        _3627 = (_3790 * _3738.x) + _3696;
                        _3628 = (_3790 * _3738.y) + _3697;
                        _3629 = (_3790 * _3738.z) + _3698;
                        _3624 = (_3870 * _3755.x) + _3693;
                        _3625 = (_3870 * _3755.y) + _3694;
                        _3626 = (_3870 * _3755.z) + _3695;
                        if (_3700 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3693 = _3624;
                            _3694 = _3625;
                            _3695 = _3626;
                            _3696 = _3627;
                            _3697 = _3628;
                            _3698 = _3629;
                            _3699 = _3700;
                        }
                    }
                    frontier_phi_60_pred = _3627;
                    frontier_phi_60_pred_1 = _3626;
                    frontier_phi_60_pred_2 = _3625;
                    frontier_phi_60_pred_3 = _3624;
                    frontier_phi_60_pred_4 = _3628;
                    frontier_phi_60_pred_5 = _3629;
                }
                _3240 = frontier_phi_60_pred;
                _3238 = frontier_phi_60_pred_1;
                _3236 = frontier_phi_60_pred_2;
                _3234 = frontier_phi_60_pred_3;
                _3242 = frontier_phi_60_pred_4;
                _3244 = frontier_phi_60_pred_5;
                uint _3472 = _3471 + 1u;
                if (_3472 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3465 = _3234;
                    _3466 = _3236;
                    _3467 = _3238;
                    _3468 = _3240;
                    _3469 = _3242;
                    _3470 = _3244;
                    _3471 = _3472;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3233 = _3234;
            _3235 = _3236;
            _3237 = _3238;
            _3239 = _3240;
            _3241 = _3242;
            _3243 = _3244;
        }
        uvec4 _3247 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3248 = _3247.z;
        uint _3250 = (_3248 >> 8u) & 15u;
        float _3433;
        float _3435;
        float _3437;
        float _3439;
        float _3441;
        float _3443;
        if (((4294967295u << _3250) & _3077) == 0u)
        {
            _3433 = _3233;
            _3435 = _3235;
            _3437 = _3237;
            _3439 = _3239;
            _3441 = _3241;
            _3443 = _3243;
        }
        else
        {
            float _3458 = inversesqrt(dot(vec3(_2592, _2593, _2594), vec3(_2592, _2593, _2594)));
            float _3459 = _3458 * _2592;
            float _3460 = _3458 * _2593;
            float _3461 = _3458 * _2594;
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_3250 < ((_3248 >> 12u) & 15u))
            {
                float _3434;
                float _3436;
                float _3438;
                float _3440;
                float _3442;
                float _3444;
                float _3676 = _3233;
                float _3677 = _3235;
                float _3678 = _3237;
                float _3679 = _3239;
                float _3680 = _3241;
                float _3681 = _3243;
                uint _3682 = _3250;
                uint _3691;
                bool _3692;
                for (;;)
                {
                    _3691 = texelFetch(g_lightClassification, int((((_3071 << 5u) + (_3057 << 9u)) + (_3682 << 2u)) >> 2u)).x;
                    _3692 = _3691 == 0u;
                    float frontier_phi_68_pred;
                    float frontier_phi_68_pred_1;
                    float frontier_phi_68_pred_2;
                    float frontier_phi_68_pred_3;
                    float frontier_phi_68_pred_4;
                    float frontier_phi_68_pred_5;
                    if (_3692)
                    {
                        frontier_phi_68_pred = _3679;
                        frontier_phi_68_pred_1 = _3678;
                        frontier_phi_68_pred_2 = _3677;
                        frontier_phi_68_pred_3 = _3676;
                        frontier_phi_68_pred_4 = _3681;
                        frontier_phi_68_pred_5 = _3680;
                    }
                    else
                    {
                        float _3913;
                        float _3914;
                        float _3915;
                        float _3916;
                        float _3917;
                        float _3918;
                        float _4206;
                        float _4207;
                        float _4208;
                        float _4209;
                        float _4210;
                        float _4211;
                        float _3926 = _3676;
                        float _3927 = _3677;
                        float _3928 = _3678;
                        float _3929 = _3679;
                        float _3930 = _3680;
                        float _3931 = _3681;
                        uint _3932 = _3691;
                        uint _3933;
                        vec4 _3958;
                        float _3959;
                        vec4 _3974;
                        vec3 _3986;
                        vec4 _4001;
                        vec4 _4016;
                        float _4062;
                        bool _4063;
                        for (;;)
                        {
                            uint _3943 = ((_3682 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3932));
                            _3933 = (_3932 + 4294967295u) & _3932;
                            uint _3945 = _3943 * 40u;
                            _3958 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3945)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3945 + 3u)).x));
                            _3959 = _3958.w;
                            uint _3961 = (_3943 * 40u) + 4u;
                            _3974 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3961)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3961 + 3u)).x));
                            uint _3976 = (_3943 * 40u) + 8u;
                            _3986 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3976)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3976 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3976 + 2u)).x));
                            uint _3988 = (_3943 * 40u) + 16u;
                            _4001 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3988)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3988 + 3u)).x));
                            uint _4003 = (_3943 * 40u) + 20u;
                            _4016 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4003)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4003 + 3u)).x));
                            uint _4018 = (_3943 * 40u) + 24u;
                            vec4 _4031 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4018)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4018 + 3u)).x));
                            uint _4037 = (_3943 * 40u) + 28u;
                            vec4 _4050 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_4037)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_4037 + 3u)).x));
                            _4062 = fma(_2594, _4050.z, fma(_2593, _4050.y, _4050.x * _2592)) + _4050.w;
                            _4063 = !((fma(_2594, _4031.z, fma(_2593, _4031.y, _4031.x * _2592)) + _4031.w) <= 0.0);
                            float frontier_phi_74_pred;
                            float frontier_phi_74_pred_1;
                            float frontier_phi_74_pred_2;
                            float frontier_phi_74_pred_3;
                            float frontier_phi_74_pred_4;
                            float frontier_phi_74_pred_5;
                            if (_4063)
                            {
                                float _4090 = _3958.x - _2592;
                                float _4091 = _3958.y - _2593;
                                float _4092 = _3958.z - _2594;
                                float _4093 = dot(vec3(_4090, _4091, _4092), vec3(_4090, _4091, _4092));
                                float _4096 = inversesqrt(_4093);
                                float _4097 = _4096 * _4090;
                                float _4098 = _4096 * _4091;
                                float _4099 = _4096 * _4092;
                                float _4103 = 1.0 - (_4093 / (_3959 * _3959));
                                float _5359 = isnan(0.0) ? _4103 : (isnan(_4103) ? 0.0 : max(_4103, 0.0));
                                float _4104 = isnan(1.0) ? _5359 : (isnan(_5359) ? 1.0 : min(_5359, 1.0));
                                float _4108 = sqrt(_4093) * _3974.w;
                                float _4110 = 1.39999997615814208984375 / (_4108 + 1.39999997615814208984375);
                                float _4111 = _4110 * _4110;
                                float _4114 = ((1.0 - _4111) * dot(vec3(_4097, _4098, _4099), vec3(_1447, _1450, _1453))) + _4111;
                                float _4117 = _4108 * _4108;
                                float _4121 = (fma(_2594, _4001.z, fma(_2593, _4001.y, _4001.x * _2592)) + _4001.w) / _4062;
                                float _4122 = (fma(_2594, _4016.z, fma(_2593, _4016.y, _4016.x * _2592)) + _4016.w) / _4062;
                                float _4126 = 1.0 - dot(vec2(_4121, _4122), vec2(_4121, _4122));
                                float _5375 = isnan(0.0) ? _4126 : (isnan(_4126) ? 0.0 : max(_4126, 0.0));
                                float _4127 = isnan(1.0) ? _5375 : (isnan(_5375) ? 1.0 : min(_5375, 1.0));
                                float _4128 = _4127 * (((isnan(0.0) ? _4114 : (isnan(_4114) ? 0.0 : max(_4114, 0.0))) * _4104) / ((_4117 * 0.699999988079071044921875) + 1.0));
                                float _4140 = exp2(log2(1.0 / ((_4117 * 3.5) + 5.0)) * 0.25);
                                float _4141 = 1.0 - _1514;
                                float _4148 = sqrt(1.0 - ((1.0 - (_4141 * _4141)) * (1.0 - (_4140 * _4140))));
                                float _4149 = _4148 * _4148;
                                float _4150 = _4149 * _4149;
                                float _4151 = _4097 - _3459;
                                float _4152 = _4098 - _3460;
                                float _4153 = _4099 - _3461;
                                float _4157 = inversesqrt(dot(vec3(_4151, _4152, _4153), vec3(_4151, _4152, _4153)));
                                float _4161 = dot(vec3(_1447, _1450, _1453), vec3((-0.0) - _3459, (-0.0) - _3460, (-0.0) - _3461));
                                float _5386 = isnan(0.0) ? _4161 : (isnan(_4161) ? 0.0 : max(_4161, 0.0));
                                float _4164 = isnan(1.0) ? _5386 : (isnan(_5386) ? 1.0 : min(_5386, 1.0));
                                float _4165 = dot(vec3(_1447, _1450, _1453), vec3(_4157 * _4151, _4157 * _4152, _4157 * _4153));
                                float _5397 = isnan(0.0) ? _4165 : (isnan(_4165) ? 0.0 : max(_4165, 0.0));
                                float _4168 = isnan(1.0) ? _5397 : (isnan(_5397) ? 1.0 : min(_5397, 1.0));
                                float _4172 = ((_4168 * _4168) * (_4150 + (-1.0))) + 1.0;
                                float _4173 = _4110 * _4149;
                                float _4174 = _4173 * _4173;
                                float _4180 = ((1.0 - _4174) * dot(vec3(_1447, _1450, _1453), vec3(_4097, _4098, _4099))) + _4174;
                                float _5408 = isnan(0.0) ? _4180 : (isnan(_4180) ? 0.0 : max(_4180, 0.0));
                                float _4181 = isnan(1.0) ? _5408 : (isnan(_5408) ? 1.0 : min(_5408, 1.0));
                                float _4182 = 1.0 - _4149;
                                float _4192 = (0.5 / (((_4181 * ((_4164 * _4182) + _4149)) + 9.9999999392252902907785028219223e-09) + (((_4181 * _4182) + _4149) * _4164))) * _4181;
                                float _5419 = isnan(0.0) ? _4192 : (isnan(_4192) ? 0.0 : max(_4192, 0.0));
                                float _4202 = (_4127 * _4104) * (((_4150 * 3.1415927410125732421875) * (isnan(1.0) ? _5419 : (isnan(_5419) ? 1.0 : min(_5419, 1.0)))) / ((_4172 * _4172) * ((_4117 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_74_pred = _4128 * _3974.x;
                                frontier_phi_74_pred_1 = _4202 * _3986.z;
                                frontier_phi_74_pred_2 = _4202 * _3986.y;
                                frontier_phi_74_pred_3 = _4202 * _3986.x;
                                frontier_phi_74_pred_4 = _4128 * _3974.y;
                                frontier_phi_74_pred_5 = _4128 * _3974.z;
                            }
                            else
                            {
                                frontier_phi_74_pred = 0.0;
                                frontier_phi_74_pred_1 = 0.0;
                                frontier_phi_74_pred_2 = 0.0;
                                frontier_phi_74_pred_3 = 0.0;
                                frontier_phi_74_pred_4 = 0.0;
                                frontier_phi_74_pred_5 = 0.0;
                            }
                            _4209 = frontier_phi_74_pred;
                            _4208 = frontier_phi_74_pred_1;
                            _4207 = frontier_phi_74_pred_2;
                            _4206 = frontier_phi_74_pred_3;
                            _4210 = frontier_phi_74_pred_4;
                            _4211 = frontier_phi_74_pred_5;
                            _3916 = _4209 + _3929;
                            _3917 = _4210 + _3930;
                            _3918 = _4211 + _3931;
                            _3913 = _4206 + _3926;
                            _3914 = _4207 + _3927;
                            _3915 = _4208 + _3928;
                            if (_3933 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3926 = _3913;
                                _3927 = _3914;
                                _3928 = _3915;
                                _3929 = _3916;
                                _3930 = _3917;
                                _3931 = _3918;
                                _3932 = _3933;
                                continue;
                            }
                        }
                        frontier_phi_68_pred = _3916;
                        frontier_phi_68_pred_1 = _3915;
                        frontier_phi_68_pred_2 = _3914;
                        frontier_phi_68_pred_3 = _3913;
                        frontier_phi_68_pred_4 = _3918;
                        frontier_phi_68_pred_5 = _3917;
                    }
                    _3440 = frontier_phi_68_pred;
                    _3438 = frontier_phi_68_pred_1;
                    _3436 = frontier_phi_68_pred_2;
                    _3434 = frontier_phi_68_pred_3;
                    _3444 = frontier_phi_68_pred_4;
                    _3442 = frontier_phi_68_pred_5;
                    uint _3683 = _3682 + 1u;
                    if (_3683 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3676 = _3434;
                        _3677 = _3436;
                        _3678 = _3438;
                        _3679 = _3440;
                        _3680 = _3442;
                        _3681 = _3444;
                        _3682 = _3683;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _3444;
                frontier_phi_53_54_ladder_1 = _3442;
                frontier_phi_53_54_ladder_2 = _3440;
                frontier_phi_53_54_ladder_3 = _3438;
                frontier_phi_53_54_ladder_4 = _3434;
                frontier_phi_53_54_ladder_5 = _3436;
            }
            else
            {
                frontier_phi_53_54_ladder = _3243;
                frontier_phi_53_54_ladder_1 = _3241;
                frontier_phi_53_54_ladder_2 = _3239;
                frontier_phi_53_54_ladder_3 = _3237;
                frontier_phi_53_54_ladder_4 = _3233;
                frontier_phi_53_54_ladder_5 = _3235;
            }
            _3433 = frontier_phi_53_54_ladder_4;
            _3435 = frontier_phi_53_54_ladder_5;
            _3437 = frontier_phi_53_54_ladder_3;
            _3439 = frontier_phi_53_54_ladder_2;
            _3441 = frontier_phi_53_54_ladder_1;
            _3443 = frontier_phi_53_54_ladder;
        }
        float _3448 = isnan(1.0) ? _1490 : (isnan(_1490) ? 1.0 : min(_1490, 1.0));
        _3089 = (_3448 * _3439) + _2845;
        _3091 = (_3448 * _3441) + _2846;
        _3093 = (_3448 * _3443) + _2847;
        _3095 = ((_3433 * 0.039999999105930328369140625) * _3448) + _2919;
        _3097 = ((_3435 * 0.039999999105930328369140625) * _3448) + _2923;
        _3099 = ((_3437 * 0.039999999105930328369140625) * _3448) + _2927;
    }
    else
    {
        _3089 = _2845;
        _3091 = _2846;
        _3093 = _2847;
        _3095 = _2919;
        _3097 = _2923;
        _3099 = _2927;
    }
    float _3113 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _3114 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _3115 = cbSceneParam._m0[86u].x * ((_1389 / cbSceneParam._m0[86u].x) + (((10.0 / (_1326 + 10.0)) * cbMtdParam._m0[12u].y) * dot(vec3(_1425, _1426, _1427), vec3(_232, _233, _234))));
    float _3116 = isnan(_3113) ? _3115 : (isnan(_3115) ? _3113 : min(_3115, _3113));
    float _3117 = isnan(_3114) ? _1390 : (isnan(_1390) ? _3114 : min(_1390, _3114));
    vec4 _3119 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3116, _3117), 0.0);
    float _3121 = _3119.x;
    bool _3141 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3121)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3121))) > _1326;
    float _3142 = _3141 ? _3116 : _1389;
    float _3143 = _3141 ? _3117 : _1390;
    vec4 _3145 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_3142, _3143));
    vec4 _3150 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3142, _3143));
    float _3152 = _3150.x;
    bool _3157 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _3166 = (-0.0) - cbSceneParam._m0[2u].z;
    float _3172 = (_3157 ? (_3166 / (cbSceneParam._m0[2u].x - _3152)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3152))) - _1326;
    float _3174 = cbMtdParam._m0[42u].x + cbMtdParam._m0[36u].x;
    float _3175 = cbMtdParam._m0[42u].y + cbMtdParam._m0[36u].y;
    float _3176 = cbMtdParam._m0[42u].z + cbMtdParam._m0[36u].z;
    bool _3182 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _3186 = (isnan(_3172) ? 0.0 : (isnan(0.0) ? _3172 : max(0.0, _3172))) * (-1.44269502162933349609375);
    float _5450 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
    float _5461 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
    float _5472 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
    float _3334;
    float _3335;
    float _3336;
    if ((1.0 - _1233) > 0.00999999977648258209228515625)
    {
        vec4 _3255 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_3142, _3143), 0.0);
        float _3257 = _3255.x;
        float _3263 = (_3157 ? (_3166 / (cbSceneParam._m0[2u].x - _3257)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3257))) - _1326;
        uint _3269 = floatBitsToUint(cbInstanceData._m0[_1248]).x * 14u;
        uint _3275 = _3269 + 4u;
        float _3284 = dot(vec3(cbLight._m0[_3269].xyz), vec3(_253, _254, _255));
        float _3291 = dot(vec3((-0.0) - _1382, (-0.0) - _1383, (-0.0) - _1384), vec3((-0.0) - _253, (-0.0) - _254, (-0.0) - _255));
        float _3296 = ((isnan(0.0) ? _3291 : (isnan(_3291) ? 0.0 : max(_3291, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _3284 : (isnan(_3284) ? 0.001000000047497451305389404296875 : max(_3284, 0.001000000047497451305389404296875)))) + 1.0;
        float _3298 = (-0.0) - ((isnan(_3263) ? 0.0 : (isnan(0.0) ? _3263 : max(0.0, _3263))) * _3296);
        _3334 = _3182 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].x) * cbLight._m0[_3275].x) / ((_3296 * _3174) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3174 * 1.44269502162933349609375) * _3298)));
        _3335 = _3182 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].y) * cbLight._m0[_3275].y) / ((_3296 * _3175) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3175 * 1.44269502162933349609375) * _3298)));
        _3336 = _3182 ? 0.0 : ((((_1292 * cbMtdParam._m0[36u].z) * cbLight._m0[_3275].z) / ((_3296 * _3176) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_3176 * 1.44269502162933349609375) * _3298)));
    }
    else
    {
        _3334 = 0.0;
        _3335 = 0.0;
        _3336 = 0.0;
    }
    float _3353 = 0.959999978542327880859375 - (exp2(log2(1.0 - _1505) * 5.0) * 0.959999978542327880859375);
    float _3354 = (_3334 + ((exp2(_3186 * (_3182 ? 0.0 : _3174)) * _3145.x) * cbSceneParam._m0[72u].w)) * _3353;
    float _3355 = (_3335 + ((exp2(_3186 * (_3182 ? 0.0 : _3175)) * _3145.y) * cbSceneParam._m0[72u].w)) * _3353;
    float _3356 = (_3336 + ((exp2(_3186 * (_3182 ? 0.0 : _3176)) * _3145.z) * cbSceneParam._m0[72u].w)) * _3353;
    float _3378 = _1389 / cbSceneParam._m0[86u].x;
    float _3379 = _1390 / cbSceneParam._m0[86u].y;
    vec4 _3393 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3378, _3379, (log2((isnan(cbSceneParam._m0[77u].w) ? _1326 : (isnan(_1326) ? cbSceneParam._m0[77u].w : min(_1326, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3395 = _3393.x;
    float _3396 = _3393.y;
    float _3397 = _3393.z;
    float _3398 = _3393.w;
    float _3521;
    float _3523;
    float _3525;
    float _3527;
    if (_1326 > cbSceneParam._m0[78u].w)
    {
        float _3486 = isnan(_1326) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1326 : min(cbSceneParam._m0[80u].w, _1326));
        float _3487 = _3486 / _1326;
        float _3498 = _3487 * _1375;
        float _3499 = _1376 * _3487;
        float _3500 = (-0.0) - _3499;
        float _3501 = _3487 * _1377;
        float _3503 = (cbSceneParam._m0[77u].w * _3500) / _3486;
        float _3504 = _3503 + cbSceneParam._m0[79u].w;
        float _3505 = cbSceneParam._m0[79u].w - _3499;
        float _3511 = sqrt(((_3498 * _3498) + (_3499 * _3499)) + (_3501 * _3501));
        float _3514 = (1.0 - (cbSceneParam._m0[77u].w / _3486)) * _3511;
        float _3519 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3520 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3875;
        if (abs((_3500 - _3503) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3875 = ((((_3504 > 0.0) ? exp2(_3519 * _3504) : (2.0 - exp2(_3520 * _3504))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3514;
        }
        else
        {
            float _3649 = 1.0 / cbSceneParam._m0[80u].x;
            float _3650 = isnan(_3505) ? _3504 : (isnan(_3504) ? _3505 : max(_3504, _3505));
            float _3651 = isnan(_3505) ? _3504 : (isnan(_3504) ? _3505 : min(_3504, _3505));
            float _3660 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : min(_3650, 0.0));
            float _3661 = isnan(0.0) ? _3651 : (isnan(_3651) ? 0.0 : min(_3651, 0.0));
            _3875 = ((abs(_3511 / _3500) * cbSceneParam._m0[80u].y) * ((((_3660 - _3661) * 2.0) - ((exp2(_3519 * (isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0)))) - exp2(_3519 * (isnan(0.0) ? _3651 : (isnan(_3651) ? 0.0 : max(_3651, 0.0))))) * _3649)) - ((exp2(_3520 * _3660) - exp2(_3520 * _3661)) * _3649))) + (_3514 * cbSceneParam._m0[80u].z);
        }
        vec4 _3877 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3378, _3379, 1.0), 0.0);
        float _3886 = exp2((_3875 * (-1.44269502162933349609375)) * (1.0 - _3877.w));
        float _3887 = log2(_3886);
        float _3903 = log2(_3398);
        _3521 = (exp2(_3903 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3887 * cbSceneParam._m0[78u].x)) * _3877.x) / cbSceneParam._m0[78u].x)) + _3395;
        _3523 = (exp2(_3903 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3887 * cbSceneParam._m0[78u].y)) * _3877.y) / cbSceneParam._m0[78u].y)) + _3396;
        _3525 = (exp2(_3903 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3887 * cbSceneParam._m0[78u].z)) * _3877.z) / cbSceneParam._m0[78u].z)) + _3397;
        _3527 = _3886 * _3398;
    }
    else
    {
        _3521 = _3395;
        _3523 = _3396;
        _3525 = _3397;
        _3527 = _3398;
    }
    bool _3539 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _3540 = log2(_3527);
    float _3547 = exp2(_3540 * cbSceneParam._m0[78u].x) * ((_3354 + (((((_2494 * _2529.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0))) * _2289) * _2545)) + _3095) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5450 : (isnan(_5450) ? 1.0 : min(_5450, 1.0))) * (_3089 + ((isnan(0.0) ? _2212 : (isnan(_2212) ? 0.0 : max(_2212, 0.0))) * _1490))) - _3354) * _1233));
    float _3548 = exp2(_3540 * cbSceneParam._m0[78u].y) * ((_3355 + (((((_2494 * _2529.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2503 : (isnan(_2503) ? 0.0 : max(_2503, 0.0))) * _2289) * _2545)) + _3097) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5461 : (isnan(_5461) ? 1.0 : min(_5461, 1.0))) * (_3091 + ((isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0))) * _1490))) - _3355) * _1233));
    float _3549 = exp2(_3540 * cbSceneParam._m0[78u].z) * ((_3356 + (((((_2494 * _2529.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2506 : (isnan(_2506) ? 0.0 : max(_2506, 0.0))) * _2289) * _2545)) + _3099) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _5472 : (isnan(_5472) ? 1.0 : min(_5472, 1.0))) * (_3093 + ((isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0))) * _1490))) - _3356) * _1233));
    vec4 _3557 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1389, _1390));
    float _3559 = _3557.x;
    float _3580 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _3559)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _3559))) - _1326) * cbMtdParam._m0[14u].w;
    float _5538 = isnan(0.0) ? _3580 : (isnan(_3580) ? 0.0 : max(_3580, 0.0));
    float _3582 = (cbInstanceData._m0[_1247 + 6u].w * (isnan(1.0) ? _4708 : (isnan(_4708) ? 1.0 : min(_4708, 1.0)))) * (isnan(1.0) ? _5538 : (isnan(_5538) ? 1.0 : min(_5538, 1.0)));
    float _3591 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3591 * (_3539 ? _3547 : (_3547 + (cbSceneParam._m0[72u].w * _3521)));
    SV_Target.y = _3591 * (_3539 ? _3548 : (_3548 + (cbSceneParam._m0[72u].w * _3523)));
    SV_Target.z = _3591 * (_3539 ? _3549 : (_3549 + (cbSceneParam._m0[72u].w * _3525)));
    SV_Target.w = _3582;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _3582;
}


