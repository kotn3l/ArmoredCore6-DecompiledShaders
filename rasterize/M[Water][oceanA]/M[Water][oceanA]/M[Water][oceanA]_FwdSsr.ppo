#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[45];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 0, std140) uniform cbPerSceneUBO
{
    vec4 _m0[39];
} cbPerScene;

layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture2D g_PrevFrameTexture;
layout(set = 0, binding = 27) uniform texture2D g_ConvertedDepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_oceanA_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Water_oceanA_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Water_oceanA_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Water_oceanA_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Water_oceanA_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Water_oceanA_snp_0_Texture2D_5;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_8;
layout(location = 7) in float TEXCOORD_11;
layout(location = 7, component = 1) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _157 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _158 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _159 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _165 = inversesqrt(dot(vec3(_157, _158, _159), vec3(_157, _158, _159)));
    float _172 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _173 = _172 * NORMAL.x;
    float _174 = _172 * NORMAL.y;
    float _175 = _172 * NORMAL.z;
    float _179 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _187;
    float _188;
    float _189;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _187 = (-0.0) - _173;
        _188 = (-0.0) - _174;
        _189 = (-0.0) - _175;
    }
    else
    {
        _187 = _173;
        _188 = _174;
        _189 = _175;
    }
    float _233 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _243 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _233);
    float _244 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _233);
    float _245 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _233);
    float _258 = cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x;
    vec4 _275 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_2, SS_BumpMap), vec2((((_258 * cbMtdParam._m0[27u].x) + TEXCOORD.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((_258 * cbMtdParam._m0[27u].y) + TEXCOORD.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _278 = _275.x;
    float _279 = _275.y;
    float _280 = _275.z;
    float _281 = _275.w;
    float _294 = cbMtdParam._m0[14u].y - cbMtdParam._m0[14u].x;
    float _297 = (sqrt(((_243 * _243) + (_244 * _244)) + (_245 * _245)) - cbMtdParam._m0[14u].x) / (isnan(0.001000000047497451305389404296875) ? _294 : (isnan(_294) ? 0.001000000047497451305389404296875 : max(_294, 0.001000000047497451305389404296875)));
    float _298 = _297 + 0.180000007152557373046875;
    float _300 = _298 * 12.0;
    float _1680 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
    float _303 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
    vec4 _315 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(gl_FragCoord.x / cbPerScene._m0[18u].x, gl_FragCoord.y / cbPerScene._m0[18u].y));
    float _317 = _315.x;
    float _339 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _317)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _317))) - POSITION_1.w;
    float _340 = _339 / ((_303 * 0.0599999986588954925537109375) + 0.0599999986588954925537109375);
    float _1691 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _341 = isnan(1.0) ? _1691 : (isnan(_1691) ? 1.0 : min(_1691, 1.0));
    float _342 = isnan(0.5) ? _341 : (isnan(_341) ? 0.5 : max(_341, 0.5));
    float _344 = 1.0 - _342;
    float _345 = _298 * 7.0;
    float _1707 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _347 = isnan(1.0) ? _1707 : (isnan(_1707) ? 1.0 : min(_1707, 1.0));
    float _358 = (_280 * 0.00200000009499490261077880859375) + TEXCOORD.x;
    float _359 = (_280 * 0.00999999977648258209228515625) + TEXCOORD.y;
    vec4 _373 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[25u].z * _258) + _358) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[25u].w * _258) + _359) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _375 = _373.x;
    float _398 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_3, SS_WrapLinear), vec2((((cbMtdParam._m0[23u].z * _358) + (cbMtdParam._m0[26u].z * _258)) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, (((cbMtdParam._m0[23u].w * _359) + (cbMtdParam._m0[26u].w * _258)) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x + (-0.0500000007450580596923828125);
    float _401 = (isnan(_398) ? _375 : (isnan(_375) ? _398 : max(_375, _398))) - _347;
    float _1723 = isnan(0.0) ? _401 : (isnan(_401) ? 0.0 : max(_401, 0.0));
    float _402 = isnan(1.0) ? _1723 : (isnan(_1723) ? 1.0 : min(_1723, 1.0));
    float _403 = _347 + 0.5;
    float _1734 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _414 = cbMtdParam._m0[16u].w * _258;
    float _415 = cos(_414);
    float _416 = sin(_414);
    vec4 _440 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((_416 * cbMtdParam._m0[31u].x) + TEXCOORD.x) + (cbMtdParam._m0[22u].x * _258)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_415 * cbMtdParam._m0[31u].y) + TEXCOORD.y) + (cbMtdParam._m0[22u].y * _258)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _444 = _440.z;
    vec4 _459 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[21u].z * _258) + TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[21u].w * _258) + TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _463 = _459.z;
    float _466 = (isnan(_463) ? _444 : (isnan(_444) ? _463 : max(_444, _463))) * (isnan(1.0) ? _1734 : (isnan(_1734) ? 1.0 : min(_1734, 1.0)));
    float _1750 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _467 = isnan(1.0) ? _1750 : (isnan(_1750) ? 1.0 : min(_1750, 1.0));
    float _470 = (_344 - _281) + (isnan(_467) ? _402 : (isnan(_402) ? _467 : max(_402, _467)));
    float _1766 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _1766 : (isnan(_1766) ? 1.0 : min(_1766, 1.0));
    float _1777 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _477 = isnan(1.0) ? _1777 : (isnan(_1777) ? 1.0 : min(_1777, 1.0));
    float _478 = _280 - _477;
    float _1788 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
    float _479 = isnan(1.0) ? _1788 : (isnan(_1788) ? 1.0 : min(_1788, 1.0));
    vec4 _526 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[23u].x * _258) + (cbMtdParam._m0[30u].z * _416)) + (cbMtdParam._m0[34u].z * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[23u].y * _258) + (cbMtdParam._m0[30u].w * _415)) + (cbMtdParam._m0[34u].w * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _550 = cbMtdParam._m0[37u].w * TEXCOORD_5.x;
    float _606 = ((((((_526.w + (-0.5)) * cbMtdParam._m0[43u].w) + (cbMtdParam._m0[39u].y * (_440.w + (-0.5)))) + (cbMtdParam._m0[40u].x * (_459.w + (-0.5)))) + (((_550 + cbMtdParam._m0[41u].z) * cos(cbMtdParam._m0[13u].y * _258)) * (texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[32u].z * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[32u].w * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) + ((sin(cbMtdParam._m0[13u].x * _258) * (cbMtdParam._m0[40u].w + _550)) * (texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_5, SS_WrapLinear), vec2(((cbMtdParam._m0[31u].z * TEXCOORD.x) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((cbMtdParam._m0[31u].w * TEXCOORD.y) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w)).y + (-0.5)))) * (1.0 - TEXCOORD_5.y);
    float _634 = 1.0 - _281;
    float _639 = ((isnan(0.550000011920928955078125) ? _634 : (isnan(_634) ? 0.550000011920928955078125 : max(_634, 0.550000011920928955078125))) + (-0.550000011920928955078125)) * cbMtdParam._m0[16u].z;
    float _642 = ((TEXCOORD_5.y * (-0.5)) * _639) + _639;
    float _646 = ((TEXCOORD_5.z * (-0.699999988079071044921875)) * _642) + _642;
    float _662 = ((((((cbMtdParam._m0[37u].x - (cbMtdParam._m0[37u].x * TEXCOORD_5.y)) * _280) + cbMtdParam._m0[20u].z) + _606) + ((texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((cbMtdParam._m0[35u].z * TEXCOORD.x) + (cbMtdParam._m0[22u].z * _258)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[35u].w * TEXCOORD.y) + (cbMtdParam._m0[22u].w * _258)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w + (-0.5)) * cbMtdParam._m0[44u].z)) + ((sin(cbMtdParam._m0[21u].y * _258) * cbMtdParam._m0[38u].z) * (isnan(0.300000011920928955078125) ? TEXCOORD_5.z : (isnan(TEXCOORD_5.z) ? 0.300000011920928955078125 : max(TEXCOORD_5.z, 0.300000011920928955078125))))) + _646;
    float _664 = _662 * cbMtdParam._m0[20u].w;
    float _1809 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _675 = inversesqrt(dot(vec3(_243, _244, _245), vec3(_243, _244, _245)));
    float _679 = dot(vec4(_675 * _243, _675 * _244, _675 * _245, 0.0), vec4(_187, _188, _189, 0.0));
    float _1820 = isnan(0.0) ? _679 : (isnan(_679) ? 0.0 : max(_679, 0.0));
    float _687 = exp2(log2((1.0 - (isnan(1.0) ? _1820 : (isnan(_1820) ? 1.0 : min(_1820, 1.0)))) * cbMtdParam._m0[12u].z) * cbMtdParam._m0[12u].w);
    float _1831 = isnan(0.0) ? _687 : (isnan(_687) ? 0.0 : max(_687, 0.0));
    float _690 = (((_471 * _342) + cbMtdParam._m0[9u].x) + (_479 * cbMtdParam._m0[10u].x)) + (((isnan(1.0) ? _1809 : (isnan(_1809) ? 1.0 : min(_1809, 1.0))) * cbMtdParam._m0[11u].x) * (isnan(1.0) ? _1831 : (isnan(_1831) ? 1.0 : min(_1831, 1.0))));
    float _1842 = isnan(0.0) ? _342 : (isnan(_342) ? 0.0 : max(_342, 0.0));
    float _1853 = isnan(0.0) ? _344 : (isnan(_344) ? 0.0 : max(_344, 0.0));
    float _695 = isnan(1.0) ? _1853 : (isnan(_1853) ? 1.0 : min(_1853, 1.0));
    float _701 = ((_695 + _690) + (((1.0 - (isnan(1.0) ? _1842 : (isnan(_1842) ? 1.0 : min(_1842, 1.0)))) - _690) * _477)) + ((_303 * (-0.87999999523162841796875)) * _695);
    float _702 = _280 * 0.01200000010430812835693359375;
    float _727 = (_280 * 0.300000011920928955078125) * texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[35u].x * _258) + _702) + (cbMtdParam._m0[24u].x * TEXCOORD.x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[35u].y * _258) + _702) + (cbMtdParam._m0[24u].y * TEXCOORD.y)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).z;
    float _1864 = isnan(0.0) ? _727 : (isnan(_727) ? 0.0 : max(_727, 0.0));
    float _732 = (((1.0 - _701) * TEXCOORD_5.x) * (isnan(1.0) ? _1864 : (isnan(_1864) ? 1.0 : min(_1864, 1.0)))) + _701;
    vec4 _766 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[27u].z * _258) + (cbMtdParam._m0[30u].x * _416)) + (cbMtdParam._m0[29u].x * _358)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[27u].w * _258) + (cbMtdParam._m0[30u].y * _415)) + (cbMtdParam._m0[29u].y * _359)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _769 = _766.y;
    float _775 = 1.0 - (_339 / cbMtdParam._m0[18u].w);
    float _779 = ((_766.x * TEXCOORD_8.x) * cbMtdParam._m0[18u].z) * (isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0)));
    float _785 = _769 * TEXCOORD_8.y;
    float _788 = ((isnan(cbMtdParam._m0[19u].x) ? _785 : (isnan(_785) ? cbMtdParam._m0[19u].x : max(_785, cbMtdParam._m0[19u].x))) - cbMtdParam._m0[19u].x) * cbMtdParam._m0[19u].y;
    float _789 = isnan(_788) ? _779 : (isnan(_779) ? _788 : max(_779, _788));
    float _1890 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    float _793 = ((isnan(1.0) ? _1890 : (isnan(_1890) ? 1.0 : min(_1890, 1.0))) * (1.0 - _732)) + _732;
    float _832 = exp2(log2(cbMtdParam._m0[15u].w * _634) * cbMtdParam._m0[17u].x);
    float _1901 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _833 = isnan(1.0) ? _1901 : (isnan(_1901) ? 1.0 : min(_1901, 1.0));
    float _834 = _833 * texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_4, SS_WrapLinear), vec2(((((cbMtdParam._m0[28u].x * _258) + (cbMtdParam._m0[28u].z * _634)) + (cbMtdParam._m0[29u].z * _358)) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((((cbMtdParam._m0[28u].y * _258) + (cbMtdParam._m0[28u].w * _634)) + (cbMtdParam._m0[29u].w * _359)) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w)).z;
    float _842 = (((_347 * TEXCOORD_8.z) * (1.0 - _793)) * (((_833 - _834) * cbMtdParam._m0[17u].w) + _834)) + _793;
    float _846 = 1.0 - (_339 / cbMtdParam._m0[18u].x);
    float _857 = _297 + 0.20000000298023223876953125;
    float _859 = _857 * 9.0;
    float _1917 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
    float _864 = ((cbMtdParam._m0[13u].w - cbMtdParam._m0[12u].x) * (isnan(1.0) ? _1917 : (isnan(_1917) ? 1.0 : min(_1917, 1.0)))) + cbMtdParam._m0[12u].x;
    float _867 = (_297 + 0.099999986588954925537109375) * 2.5;
    float _1928 = isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0));
    float _872 = ((cbMtdParam._m0[14u].z - _864) * (isnan(1.0) ? _1928 : (isnan(_1928) ? 1.0 : min(_1928, 1.0)))) + _864;
    float _874 = (_842 + _471) + (((cbMtdParam._m0[18u].y * _769) * (isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0)))) * (1.0 - _842));
    float _1939 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
    float _879 = ((0.3499999940395355224609375 - _872) * (isnan(1.0) ? _1939 : (isnan(_1939) ? 1.0 : min(_1939, 1.0)))) + _872;
    float _880 = TEXCOORD_5.z * 0.5;
    float _892 = (_297 + 0.100000001490116119384765625) * 0.89999997615814208984375;
    float _1950 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    float _897 = ((cbMtdParam._m0[17u].y - cbMtdParam._m0[20u].x) * (isnan(1.0) ? _1950 : (isnan(_1950) ? 1.0 : min(_1950, 1.0)))) + cbMtdParam._m0[20u].x;
    float _902 = (_897 * (_278 + (-0.5))) + 0.5;
    float _903 = (_897 * (_279 + (-0.5))) + 0.5;
    float _1961 = isnan(0.0) ? TEXCOORD_5.y : (isnan(TEXCOORD_5.y) ? 0.0 : max(TEXCOORD_5.y, 0.0));
    float _904 = isnan(1.0) ? _1961 : (isnan(_1961) ? 1.0 : min(_1961, 1.0));
    vec4 _932 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[26u].x * TEXCOORD.z) + (cbMtdParam._m0[32u].x * _258)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[26u].y * TEXCOORD.w) + (cbMtdParam._m0[32u].y * _258)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _940 = ((_459.x + (-0.5)) * 0.5) + _440.x;
    float _941 = ((_459.y + (-0.5)) * 0.5) + _440.y;
    vec4 _965 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_1, SS_BumpMap), vec2((((cbMtdParam._m0[24u].z * TEXCOORD.x) + (cbMtdParam._m0[25u].x * _258)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[24u].w * TEXCOORD.y) + (cbMtdParam._m0[25u].y * _258)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _972 = _857 * 12.0;
    float _1972 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _974 = 1.0 - (isnan(1.0) ? _1972 : (isnan(_1972) ? 1.0 : min(_1972, 1.0)));
    float _988 = cbMtdParam._m0[33u].z * TEXCOORD.x;
    float _989 = cbMtdParam._m0[33u].w * TEXCOORD.y;
    vec4 _996 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2(((_988 + (cbMtdParam._m0[33u].x * _258)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_989 + (cbMtdParam._m0[33u].y * _258)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1023 = texture(sampler2D(M_Water_oceanA_snp_0_Texture2D_0, SS_BumpMap), vec2((((_988 + ((cbMtdParam._m0[27u].x * 0.4000000059604644775390625) * _479)) + (cbMtdParam._m0[34u].x * _258)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_989 + ((cbMtdParam._m0[27u].y * 0.4000000059604644775390625) * _479)) + (cbMtdParam._m0[34u].y * _258)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1037 = (((0.5 - _940) * 0.10999999940395355224609375) + _940) + (((((((_965.z + (-0.5)) * cbMtdParam._m0[16u].x) * _974) + (-1.0)) + _996.x) + _1023.x) * cbMtdParam._m0[15u].z);
    float _1038 = (((0.5 - _941) * 0.10999999940395355224609375) + _941) + (((((((_965.w + (-0.5)) * cbMtdParam._m0[16u].x) * _974) + (-1.0)) + _996.y) + _1023.y) * cbMtdParam._m0[15u].z);
    float _1043 = ((_932.x - _1037) * _297) + _1037;
    float _1044 = ((_932.y - _1038) * _297) + _1038;
    float _1045 = _297 * 0.5;
    float _1983 = isnan(0.0) ? _1045 : (isnan(_1045) ? 0.0 : max(_1045, 0.0));
    float _1046 = isnan(1.0) ? _1983 : (isnan(_1983) ? 1.0 : min(_1983, 1.0));
    float _1057 = cbMtdParam._m0[17u].z - (cbMtdParam._m0[17u].z * _646);
    float _1064 = cbMtdParam._m0[19u].z - (cbMtdParam._m0[19u].z * TEXCOORD_5.y);
    float _1066 = _1064 - (_1064 * _1046);
    float _1070 = (((((((0.5 - _278) * 0.60000002384185791015625) + _278) - _902) * _904) + _902) + (_1066 * (_526.x + (-0.5)))) + (((_1043 + (-0.5)) + ((0.5 - _1043) * _1046)) * _1057);
    float _1072 = (((((((0.5 - _279) * 0.60000002384185791015625) + _279) - _903) * _904) + _903) + (_1066 * (_526.y + (-0.5)))) + (((_1044 + (-0.5)) + ((0.5 - _1044) * _1046)) * _1057);
    float _1082 = (((_880 * (0.5 - _1070)) + _1070) * 2.0) + (-1.0);
    float _1083 = (((_880 * (0.5 - _1072)) + _1072) * 2.0) + (-1.0);
    float _1084 = dot(vec2(_1082, _1083), vec2(_1082, _1083));
    float _1994 = isnan(0.0) ? _1084 : (isnan(_1084) ? 0.0 : max(_1084, 0.0));
    float _1089 = sqrt(1.0 - (isnan(1.0) ? _1994 : (isnan(_1994) ? 1.0 : min(_1994, 1.0))));
    float _1092 = fma(_1089, _187, fma(_1083, _179 * TANGENT.x, (_165 * _157) * _1082));
    float _1095 = fma(_1089, _188, fma(_1083, _179 * TANGENT.y, (_165 * _158) * _1082));
    float _1098 = fma(_1089, _189, fma(_1083, _179 * TANGENT.z, (_165 * _159) * _1082));
    float _1102 = inversesqrt(dot(vec3(_1092, _1095, _1098), vec3(_1092, _1095, _1098)));
    float _1103 = _1102 * _1092;
    float _1104 = _1102 * _1095;
    float _1105 = _1102 * _1098;
    float _2005 = isnan(0.0) ? _879 : (isnan(_879) ? 0.0 : max(_879, 0.0));
    float _1106 = isnan(1.0) ? _2005 : (isnan(_2005) ? 1.0 : min(_2005, 1.0));
    float _1118 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _1120 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD_11, TEXCOORD_12));
    float _1129 = (_1120.x * 2.0) + (-1.0);
    float _1130 = (_1120.y * 2.0) + (-1.0);
    float _1131 = (_1120.z * 2.0) + (-1.0);
    float _1135 = inversesqrt(dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131)));
    float _1146 = ((TEXCOORD_12 >= 1.0) || ((TEXCOORD_12 <= 0.0) || ((TEXCOORD_11 <= 0.0) || (TEXCOORD_11 >= 1.0)))) ? 0.0 : _1120.w;
    float _1153 = (((_1129 * _1135) - _1103) * _1146) + _1103;
    float _1154 = (((_1130 * _1135) - _1104) * _1146) + _1104;
    float _1155 = (((_1131 * _1135) - _1105) * _1146) + _1105;
    float _1156 = POSITION_1.x / POSITION_1.w;
    float _1157 = POSITION_1.y / POSITION_1.w;
    float _1160 = (_1156 * 0.5) + 0.5;
    float _1161 = 0.5 - (_1157 * 0.5);
    float _1166;
    float _1168;
    float _1170;
    float _1172;
    if (_1106 < cbPerScene._m0[22u].z)
    {
        _1166 = 0.0;
        _1168 = 0.0;
        _1170 = 0.0;
        _1172 = 0.0;
    }
    else
    {
        float _1178 = 1.0 / _1118;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        float frontier_phi_3_4_ladder_2;
        float frontier_phi_3_4_ladder_3;
        if (!(cbPerScene._m0[21u].y >= _1178))
        {
            float _1200 = fma(_1155, cbPerScene._m0[8u].z, fma(_1154, cbPerScene._m0[8u].y, cbPerScene._m0[8u].x * _1153));
            float _1203 = fma(_1155, cbPerScene._m0[9u].z, fma(_1154, cbPerScene._m0[9u].y, cbPerScene._m0[9u].x * _1153));
            float _1206 = fma(_1155, cbPerScene._m0[10u].z, fma(_1154, cbPerScene._m0[10u].y, cbPerScene._m0[10u].x * _1153));
            float _1212 = (_1156 * _1118) * cbPerScene._m0[28u].x;
            float _1214 = (_1157 * _1118) * cbPerScene._m0[28u].y;
            float _1218 = inversesqrt(dot(vec3(_1212, _1214, _1118), vec3(_1212, _1214, _1118)));
            float _1219 = _1212 * _1218;
            float _1220 = _1214 * _1218;
            float _1221 = _1218 * _1118;
            float _1225 = dot(vec3(_1219, _1220, _1221), vec3(_1200, _1203, _1206)) * 2.0;
            float _1229 = _1219 - (_1225 * _1200);
            float _1230 = _1220 - (_1225 * _1203);
            float _1231 = _1221 - (_1225 * _1206);
            float _1235 = inversesqrt(dot(vec3(_1229, _1230, _1231), vec3(_1229, _1230, _1231)));
            float _1238 = _1231 * _1235;
            float frontier_phi_3_4_ladder_5_ladder;
            float frontier_phi_3_4_ladder_5_ladder_1;
            float frontier_phi_3_4_ladder_5_ladder_2;
            float frontier_phi_3_4_ladder_5_ladder_3;
            if (_1238 < cbPerScene._m0[16u].x)
            {
                frontier_phi_3_4_ladder_5_ladder = 0.0;
                frontier_phi_3_4_ladder_5_ladder_1 = 0.0;
                frontier_phi_3_4_ladder_5_ladder_2 = 0.0;
                frontier_phi_3_4_ladder_5_ladder_3 = 0.0;
            }
            else
            {
                float _1249 = abs(dot(vec3((-0.0) - _1219, (-0.0) - _1220, (-0.0) - _1221), vec3(_1200, _1203, _1206)));
                float _2016 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
                float _1260 = (((_1106 * _1106) * 0.959999978542327880859375) * exp2(log2(1.0 - (isnan(1.0) ? _2016 : (isnan(_2016) ? 1.0 : min(_2016, 1.0)))) * 5.0)) + 0.039999999105930328369140625;
                float _1268 = (cbPerScene._m0[29u].x * (1.0 - _1106)) + cbPerScene._m0[29u].y;
                float _2027 = isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0));
                float _1276 = ((cbPerScene._m0[23u].w - cbPerScene._m0[23u].z) * (isnan(1.0) ? _2027 : (isnan(_2027) ? 1.0 : min(_2027, 1.0)))) + cbPerScene._m0[23u].z;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_1;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_2;
                float frontier_phi_3_4_ladder_5_ladder_6_ladder_3;
                if (_1260 < cbPerScene._m0[22u].x)
                {
                    frontier_phi_3_4_ladder_5_ladder_6_ladder = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_1 = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_2 = 0.0;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_3 = 0.0;
                }
                else
                {
                    float _1279 = _1238 - cbPerScene._m0[16u].x;
                    float _2038 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
                    float _1280 = isnan(1.0) ? _2038 : (isnan(_2038) ? 1.0 : min(_2038, 1.0));
                    float _1281 = _1280 * _1280;
                    float _1283 = (_1260 - cbPerScene._m0[22u].x) * 10.0;
                    float _2049 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
                    float _1285 = isnan(1.0) ? _2049 : (isnan(_2049) ? 1.0 : min(_2049, 1.0));
                    float _1286 = isnan(_1285) ? _1281 : (isnan(_1281) ? _1285 : min(_1281, _1285));
                    float _1290 = (cbPerScene._m0[21u].x - _1118) * cbPerScene._m0[21u].z;
                    float _2065 = isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0));
                    float _1291 = isnan(1.0) ? _2065 : (isnan(_2065) ? 1.0 : min(_2065, 1.0));
                    float _1292 = isnan(_1291) ? _1286 : (isnan(_1286) ? _1291 : min(_1286, _1291));
                    float _1293 = (_1229 * _1235) + _1212;
                    float _1294 = (_1230 * _1235) + _1214;
                    float _1295 = _1238 + _1118;
                    float _1326 = fma(_1295, cbPerScene._m0[7u].z, fma(_1294, cbPerScene._m0[7u].y, cbPerScene._m0[7u].x * _1293)) + cbPerScene._m0[7u].w;
                    float _1330 = ((fma(_1295, cbPerScene._m0[4u].z, fma(_1294, cbPerScene._m0[4u].y, cbPerScene._m0[4u].x * _1293)) + cbPerScene._m0[4u].w) / _1326) - _1160;
                    float _1331 = ((fma(_1295, cbPerScene._m0[5u].z, fma(_1294, cbPerScene._m0[5u].y, cbPerScene._m0[5u].x * _1293)) + cbPerScene._m0[5u].w) / _1326) - _1161;
                    float _1337 = cbPerScene._m0[18u].x * _1330;
                    float _1338 = cbPerScene._m0[18u].y * _1331;
                    float _1343 = sqrt((_1337 * _1337) + (_1338 * _1338)) + 9.9999997473787516355514526367188e-06;
                    float _1348 = (_1330 / _1343) * _1276;
                    float _1349 = (_1331 / _1343) * _1276;
                    float _1350 = (((1.0 / _1295) - _1178) / _1343) * _1276;
                    float _1377 = abs(float(_1348 > 0.0) - _1160) / (abs(_1348) + 1.0000000116860974230803549289703e-07);
                    float _1378 = abs(float(_1349 > 0.0) - _1161) / (abs(_1349) + 1.0000000116860974230803549289703e-07);
                    float _1380 = (abs(((_1350 > 0.0) ? cbPerScene._m0[20u].x : cbPerScene._m0[20u].y) - _1178) / (abs(_1350) + 1.0000000116860974230803549289703e-07)) + 2.0;
                    float _1381 = isnan(_1378) ? _1377 : (isnan(_1377) ? _1378 : min(_1377, _1378));
                    float _1382 = isnan(_1380) ? _1381 : (isnan(_1381) ? _1380 : min(_1381, _1380));
                    uint _1385 = uint(int(isnan(cbPerScene._m0[23u].y) ? _1382 : (isnan(_1382) ? cbPerScene._m0[23u].y : min(_1382, cbPerScene._m0[23u].y))));
                    float _1173;
                    float _1390;
                    float _1392;
                    float _1394;
                    if (int(_1385) > int(0u))
                    {
                        float _1387 = _1350 + _1178;
                        float _1388 = _1349 + _1161;
                        float _1389 = _1348 + _1160;
                        float _1391;
                        float _1393;
                        float _1395;
                        float _1396;
                        uint _1407;
                        float _1409;
                        float _1411;
                        float _1413;
                        float _1415;
                        float _1417;
                        float _1419;
                        float _1421;
                        uint _1423;
                        float _1425;
                        float _1427;
                        float _1429;
                        float _1402 = 0.0;
                        float _1403 = 0.0;
                        float _1404 = 0.0;
                        float _1405 = 0.0;
                        uint _1406 = 0u;
                        float _1408 = _1178;
                        float _1410 = _1389;
                        float _1412 = _1388;
                        float _1414 = _1387;
                        float _1416 = _1160;
                        float _1418 = _1161;
                        float _1420 = _1178;
                        uint _1422 = 1u;
                        float _1424 = 0.0;
                        float _1426 = 0.0;
                        float _1428 = 0.0;
                        float _1440;
                        float _1446;
                        float _1447;
                        float _1448;
                        float _1449;
                        float _1450;
                        float _1451;
                        uint _1452;
                        float _1453;
                        bool _1459;
                        for (;;)
                        {
                            _1440 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _1410, cbSceneParam._m0[86u].y * _1412), 0.0).x;
                            bool _1445 = _1406 == (_1385 + 4294967295u);
                            _1446 = _1445 ? _1424 : _1410;
                            _1447 = _1445 ? _1426 : _1412;
                            _1448 = _1445 ? _1428 : _1414;
                            _1449 = _1445 ? _1424 : _1416;
                            _1450 = _1445 ? _1426 : _1418;
                            _1451 = _1445 ? _1428 : _1420;
                            _1452 = _1445 ? 1u : _1422;
                            _1453 = _1445 ? (-1.0) : (_1414 - _1440);
                            _1459 = (_1452 != 0u) && ((_1453 <= 0.0) && ((_1445 ? (-1.0) : (_1440 - (_1408 * cbPerScene._m0[19u].y))) < 0.0));
                            float frontier_phi_16_pred;
                            float frontier_phi_16_pred_1;
                            float frontier_phi_16_pred_2;
                            float frontier_phi_16_pred_3;
                            float frontier_phi_16_pred_4;
                            float frontier_phi_16_pred_5;
                            float frontier_phi_16_pred_6;
                            uint frontier_phi_16_pred_7;
                            float frontier_phi_16_pred_8;
                            float frontier_phi_16_pred_9;
                            float frontier_phi_16_pred_10;
                            float frontier_phi_16_pred_11;
                            float frontier_phi_16_pred_12;
                            float frontier_phi_16_pred_13;
                            float frontier_phi_16_pred_14;
                            uint frontier_phi_16_pred_15;
                            if (_1459)
                            {
                                uint _1469 = uint(int(log2(_1276) + 0.999000012874603271484375));
                                float _1480;
                                float _1482;
                                float _1484;
                                float _1486;
                                float _1488;
                                float _1490;
                                float _1492;
                                if (int(_1469) > int(0u))
                                {
                                    uint _1588;
                                    float _1590;
                                    float _1591;
                                    float _1592;
                                    float _1593;
                                    float _1594;
                                    float _1595;
                                    float _1596;
                                    _1588 = 0u;
                                    _1590 = _1446;
                                    _1591 = _1447;
                                    _1592 = _1448;
                                    _1593 = _1449;
                                    _1594 = _1450;
                                    _1595 = _1451;
                                    _1596 = _1440;
                                    float _1481;
                                    float _1483;
                                    float _1485;
                                    float _1487;
                                    float _1489;
                                    float _1491;
                                    float _1493;
                                    for (;;)
                                    {
                                        float _1600 = (_1593 + _1590) * 0.5;
                                        float _1601 = (_1594 + _1591) * 0.5;
                                        float _1602 = (_1595 + _1592) * 0.5;
                                        vec4 _1610 = textureLod(sampler2D(g_ConvertedDepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[86u].x * _1600, cbSceneParam._m0[86u].y * _1601), 0.0);
                                        float _1612 = _1610.x;
                                        bool _1614 = (_1602 - _1612) < 0.0;
                                        _1481 = _1614 ? _1600 : _1590;
                                        _1483 = _1614 ? _1601 : _1591;
                                        _1485 = _1614 ? _1602 : _1592;
                                        _1487 = _1614 ? _1593 : _1600;
                                        _1489 = _1614 ? _1594 : _1601;
                                        _1491 = _1614 ? _1595 : _1602;
                                        _1493 = _1614 ? _1612 : _1596;
                                        uint _1589 = _1588 + 1u;
                                        if (_1589 == _1469)
                                        {
                                            break;
                                        }
                                        else
                                        {
                                            _1588 = _1589;
                                            _1590 = _1481;
                                            _1591 = _1483;
                                            _1592 = _1485;
                                            _1593 = _1487;
                                            _1594 = _1489;
                                            _1595 = _1491;
                                            _1596 = _1493;
                                        }
                                    }
                                    _1480 = _1481;
                                    _1482 = _1483;
                                    _1484 = _1485;
                                    _1486 = _1487;
                                    _1488 = _1489;
                                    _1490 = _1491;
                                    _1492 = _1493;
                                }
                                else
                                {
                                    _1480 = _1446;
                                    _1482 = _1447;
                                    _1484 = _1448;
                                    _1486 = _1449;
                                    _1488 = _1450;
                                    _1490 = _1451;
                                    _1492 = _1440;
                                }
                                float _1502 = cbPerScene._m0[28u].x * ((_1480 * 2.0) + (-1.0));
                                float _1503 = cbPerScene._m0[28u].y * (1.0 - (_1482 * 2.0));
                                float _1533 = fma(_1492, cbPerScene._m0[27u].w, fma(_1503, cbPerScene._m0[27u].y, cbPerScene._m0[27u].x * _1502) + cbPerScene._m0[27u].z);
                                float _1534 = fma(_1492, cbPerScene._m0[24u].w, fma(_1503, cbPerScene._m0[24u].y, _1502 * cbPerScene._m0[24u].x) + cbPerScene._m0[24u].z) / _1533;
                                float _1535 = fma(_1492, cbPerScene._m0[25u].w, fma(_1503, cbPerScene._m0[25u].y, cbPerScene._m0[25u].x * _1502) + cbPerScene._m0[25u].z) / _1533;
                                vec4 _1544 = textureLod(sampler2D(g_PrevFrameTexture, SS_ClampLinear), vec2(cbSceneParam._m0[87u].z * _1534, cbSceneParam._m0[87u].w * _1535), 0.0);
                                float _1549 = isnan(_1292) ? 1.0 : (isnan(1.0) ? _1292 : min(1.0, _1292));
                                float _1550 = 0.5 - _1534;
                                float _1551 = 0.5 - _1535;
                                float _1552 = _1550 * 2.0;
                                float _1553 = _1551 * 2.0;
                                float _1554 = _1552 * _1552;
                                float _1555 = _1553 * _1553;
                                float _2101 = isnan(0.0) ? _1554 : (isnan(_1554) ? 0.0 : max(_1554, 0.0));
                                float _2112 = isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0));
                                float _1564 = inversesqrt(dot(vec2(_1348, _1349), vec2(_1348, _1349)));
                                float _1570 = inversesqrt(dot(vec2(_1552, _1553), vec2(_1552, _1553)));
                                float _1576 = dot(vec2((_1550 * (-2.0)) * _1570, (_1551 * (-2.0)) * _1570), vec2(_1564 * _1348, _1564 * _1349));
                                float _2123 = isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0));
                                float _1583 = ((1.0 - (isnan(1.0) ? _2112 : (isnan(_2112) ? 1.0 : min(_2112, 1.0)))) * (1.0 - (isnan(1.0) ? _2101 : (isnan(_2101) ? 1.0 : min(_2101, 1.0))))) * (4.0 - ((isnan(1.0) ? _2123 : (isnan(_2123) ? 1.0 : min(_2123, 1.0))) * 2.0));
                                float _2134 = isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0));
                                float _1584 = isnan(1.0) ? _2134 : (isnan(_2134) ? 1.0 : min(_2134, 1.0));
                                float _1585 = _1584 * _1584;
                                frontier_phi_16_pred = _1490;
                                frontier_phi_16_pred_1 = _1488;
                                frontier_phi_16_pred_2 = _1426;
                                frontier_phi_16_pred_3 = _1486;
                                frontier_phi_16_pred_4 = _1484;
                                frontier_phi_16_pred_5 = _1482;
                                frontier_phi_16_pred_6 = _1408;
                                frontier_phi_16_pred_7 = _1385;
                                frontier_phi_16_pred_8 = isnan(_1585) ? _1549 : (isnan(_1549) ? _1585 : min(_1549, _1585));
                                frontier_phi_16_pred_9 = _1544.z;
                                frontier_phi_16_pred_10 = _1544.y;
                                frontier_phi_16_pred_11 = _1544.x;
                                frontier_phi_16_pred_12 = _1480;
                                frontier_phi_16_pred_13 = _1428;
                                frontier_phi_16_pred_14 = _1424;
                                frontier_phi_16_pred_15 = _1452;
                            }
                            else
                            {
                                bool _1471 = _1453 > 0.0;
                                frontier_phi_16_pred = _1448;
                                frontier_phi_16_pred_1 = _1447;
                                frontier_phi_16_pred_2 = _1471 ? _1447 : _1426;
                                frontier_phi_16_pred_3 = _1446;
                                frontier_phi_16_pred_4 = _1448 + _1350;
                                frontier_phi_16_pred_5 = _1447 + _1349;
                                frontier_phi_16_pred_6 = _1440;
                                frontier_phi_16_pred_7 = _1406 + 1u;
                                frontier_phi_16_pred_8 = _1405;
                                frontier_phi_16_pred_9 = _1404;
                                frontier_phi_16_pred_10 = _1403;
                                frontier_phi_16_pred_11 = _1402;
                                frontier_phi_16_pred_12 = _1446 + _1348;
                                frontier_phi_16_pred_13 = _1471 ? _1448 : _1428;
                                frontier_phi_16_pred_14 = _1471 ? _1446 : _1424;
                                frontier_phi_16_pred_15 = uint(_1471);
                            }
                            _1421 = frontier_phi_16_pred;
                            _1419 = frontier_phi_16_pred_1;
                            _1427 = frontier_phi_16_pred_2;
                            _1417 = frontier_phi_16_pred_3;
                            _1415 = frontier_phi_16_pred_4;
                            _1413 = frontier_phi_16_pred_5;
                            _1409 = frontier_phi_16_pred_6;
                            _1407 = frontier_phi_16_pred_7;
                            _1396 = frontier_phi_16_pred_8;
                            _1395 = frontier_phi_16_pred_9;
                            _1393 = frontier_phi_16_pred_10;
                            _1391 = frontier_phi_16_pred_11;
                            _1411 = frontier_phi_16_pred_12;
                            _1429 = frontier_phi_16_pred_13;
                            _1425 = frontier_phi_16_pred_14;
                            _1423 = frontier_phi_16_pred_15;
                            if (int(_1407) < int(_1385))
                            {
                                _1402 = _1391;
                                _1403 = _1393;
                                _1404 = _1395;
                                _1405 = _1396;
                                _1406 = _1407;
                                _1408 = _1409;
                                _1410 = _1411;
                                _1412 = _1413;
                                _1414 = _1415;
                                _1416 = _1417;
                                _1418 = _1419;
                                _1420 = _1421;
                                _1422 = _1423;
                                _1424 = _1425;
                                _1426 = _1427;
                                _1428 = _1429;
                                continue;
                            }
                            else
                            {
                                break;
                            }
                        }
                        _1390 = _1391;
                        _1392 = _1393;
                        _1394 = _1395;
                        _1173 = _1396;
                    }
                    else
                    {
                        _1390 = 0.0;
                        _1392 = 0.0;
                        _1394 = 0.0;
                        _1173 = 0.0;
                    }
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2;
                    float frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3;
                    if ((isnan(_1390) || isnan(_1392)) || isnan(_1394))
                    {
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1 = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2 = 0.0;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3 = 0.0;
                    }
                    else
                    {
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder = (_1173 * _1390) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1 = _1173;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2 = (_1173 * _1394) * cbPerScene._m0[28u].w;
                        frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3 = (_1173 * _1392) * cbPerScene._m0[28u].w;
                    }
                    frontier_phi_3_4_ladder_5_ladder_6_ladder = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_1 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_1;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_2 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_2;
                    frontier_phi_3_4_ladder_5_ladder_6_ladder_3 = frontier_phi_3_4_ladder_5_ladder_6_ladder_9_ladder_3;
                }
                frontier_phi_3_4_ladder_5_ladder = frontier_phi_3_4_ladder_5_ladder_6_ladder;
                frontier_phi_3_4_ladder_5_ladder_1 = frontier_phi_3_4_ladder_5_ladder_6_ladder_1;
                frontier_phi_3_4_ladder_5_ladder_2 = frontier_phi_3_4_ladder_5_ladder_6_ladder_2;
                frontier_phi_3_4_ladder_5_ladder_3 = frontier_phi_3_4_ladder_5_ladder_6_ladder_3;
            }
            frontier_phi_3_4_ladder = frontier_phi_3_4_ladder_5_ladder;
            frontier_phi_3_4_ladder_1 = frontier_phi_3_4_ladder_5_ladder_1;
            frontier_phi_3_4_ladder_2 = frontier_phi_3_4_ladder_5_ladder_2;
            frontier_phi_3_4_ladder_3 = frontier_phi_3_4_ladder_5_ladder_3;
        }
        else
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = 0.0;
            frontier_phi_3_4_ladder_2 = 0.0;
            frontier_phi_3_4_ladder_3 = 0.0;
        }
        _1166 = frontier_phi_3_4_ladder;
        _1168 = frontier_phi_3_4_ladder_3;
        _1170 = frontier_phi_3_4_ladder_2;
        _1172 = frontier_phi_3_4_ladder_1;
    }
    SV_Target.x = _1166;
    SV_Target.y = _1168;
    SV_Target.z = _1170;
    SV_Target.w = _1172;
}


