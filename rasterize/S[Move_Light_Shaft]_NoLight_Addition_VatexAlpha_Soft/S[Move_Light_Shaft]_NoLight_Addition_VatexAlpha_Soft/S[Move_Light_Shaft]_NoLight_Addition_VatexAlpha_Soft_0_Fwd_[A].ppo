#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[15];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _957;
float _958;
float _959;
float _960;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _132 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _133 = _132 * NORMAL.x;
    float _134 = _132 * NORMAL.y;
    float _135 = _132 * NORMAL.z;
    float _140;
    float _141;
    float _142;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _140 = (-0.0) - _133;
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
    }
    else
    {
        _140 = _133;
        _141 = _134;
        _142 = _135;
    }
    float _186 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _196 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _186);
    float _197 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _186);
    float _198 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _186);
    vec4 _211 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _214 = _211.x;
    bool _221 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _237 = ((_221 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _214)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _214))) - POSITION_1.w) / cbMtdParam._m0[11u].x;
    float _969 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
    float _280 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _284 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _288 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _301 = ((_280 - cbSceneParam._m0[92u].x) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x;
    float _302 = ((_284 - cbSceneParam._m0[92u].y) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x;
    float _305 = (((_288 - cbSceneParam._m0[92u].z) / cbMtdParam._m0[12u].z) + cbMtdParam._m0[12u].x) + cbMtdParam._m0[11u].w;
    float _316 = exp2(log2(abs(_140)) * cbMtdParam._m0[12u].y);
    float _317 = exp2(log2(abs(_141)) * cbMtdParam._m0[12u].y);
    float _318 = exp2(log2(abs(_142)) * cbMtdParam._m0[12u].y);
    float _322 = inversesqrt(dot(vec3(_316, _317, _318), vec3(_316, _317, _318)));
    float _328 = _322 * ((_317 + _316) + _318);
    float _329 = (_322 * _316) / _328;
    float _330 = (_322 * _317) / _328;
    float _331 = (_322 * _318) / _328;
    float _333 = (cbMtdParam._m0[11u].w + (cbMtdParam._m0[13u].w * cbPerFrame._m0[22u].x)) + _301;
    float _335 = ((cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) + cbMtdParam._m0[11u].w) + _302;
    float _340 = _305 + (cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x);
    float _341 = (_302 + cbMtdParam._m0[11u].w) + (cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x);
    float _346 = (_301 + cbMtdParam._m0[11u].w) + (cbMtdParam._m0[12u].w * cbPerFrame._m0[22u].x);
    float _347 = _305 + (cbMtdParam._m0[13u].x * cbPerFrame._m0[22u].x);
    float _386 = inversesqrt(dot(vec3(_196, _197, _198), vec3(_196, _197, _198)));
    float _390 = dot(vec4(_386 * _196, _386 * _197, _386 * _198, 0.0), vec4(_140, _141, _142, 0.0));
    float _393 = _390 * _390;
    float _395 = (_393 * _393) * cbMtdParam._m0[11u].y;
    float _980 = isnan(0.0) ? _395 : (isnan(_395) ? 0.0 : max(_395, 0.0));
    vec4 _408 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _333) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _335) + cbTextureTilingScale._m0[2u].w));
    vec4 _422 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _340) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _341) + cbTextureTilingScale._m0[2u].w));
    vec4 _440 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * _346) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * _347) + cbTextureTilingScale._m0[2u].w));
    float _468 = ((((((isnan(1.0) ? _969 : (isnan(_969) ? 1.0 : min(_969, 1.0))) * TEXCOORD_1.z) * cbMtdParam._m0[11u].z) * (((texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _340) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _341) + cbTextureTilingScale._m0[0u].w)).x * _329) + (texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _333) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _335) + cbTextureTilingScale._m0[0u].w)).x * _331)) + (texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * _346) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * _347) + cbTextureTilingScale._m0[0u].w)).x * _330))) * (isnan(1.0) ? _980 : (isnan(_980) ? 1.0 : min(_980, 1.0)))) * (((_422.w * _329) + (_408.w * _331)) + (_440.w * _330))) * cbMtdParam._m0[10u].w;
    vec4 _480 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _333) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _335) + cbTextureTilingScale._m0[1u].w));
    vec4 _492 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _340) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _341) + cbTextureTilingScale._m0[1u].w));
    vec4 _507 = texture(sampler2D(S_Move_Light_Shaft_NoLight_Addition_VatexAlpha_Soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * _346) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * _347) + cbTextureTilingScale._m0[1u].w));
    float _991 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _534 = _221 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _544 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _553 = cbSceneParam._m0[71u].x - (_280 / _544);
    float _554 = cbSceneParam._m0[71u].y - (_284 / _544);
    float _555 = cbSceneParam._m0[71u].z - (_288 / _544);
    vec4 _560 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _562 = _560.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _648 = sqrt(((_553 * _553) + (_554 * _554)) + (_555 * _555));
        float _655 = (cbMatDynParam._m0[5u].x * _648) + cbMatDynParam._m0[5u].y;
        float _1002 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
        float _656 = isnan(1.0) ? _1002 : (isnan(_1002) ? 1.0 : min(_1002, 1.0));
        float _660 = (cbMatDynParam._m0[5u].z * _648) + cbMatDynParam._m0[5u].w;
        float _1013 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1013 : (isnan(_1013) ? 1.0 : min(_1013, 1.0))) - _656)) + _656) < ((_562 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _573 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _574 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _579 = uint(roundEven(NORMAL.w)) * 13u;
    uint _580 = _579 + 9u;
    uint _581 = _580 + uint(cbMatDynParam._m0[0u].w);
    float _587 = cbInstanceData._m0[_581].x * (((((_492.x * _329) + (_480.x * _331)) + (_507.x * _330)) * cbMtdParam._m0[9u].x) + ((((_422.x * _329) + (_408.x * _331)) + (_440.x * _330)) * cbMtdParam._m0[10u].x));
    float _588 = cbInstanceData._m0[_581].y * (((((_492.y * _329) + (_480.y * _331)) + (_507.y * _330)) * cbMtdParam._m0[9u].y) + ((((_422.y * _329) + (_408.y * _331)) + (_440.y * _330)) * cbMtdParam._m0[10u].y));
    float _589 = cbInstanceData._m0[_581].z * ((cbMtdParam._m0[9u].z * (((_492.z * _329) + (_480.z * _331)) + (_507.z * _330))) + (cbMtdParam._m0[10u].z * (((_422.z * _329) + (_408.z * _331)) + (_440.z * _330))));
    float _590 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _591 = isnan(0.0) ? _588 : (isnan(_588) ? 0.0 : max(_588, 0.0));
    float _592 = isnan(0.0) ? _589 : (isnan(_589) ? 0.0 : max(_589, 0.0));
    float _598 = cbMtdParam._m0[2u].x * _587;
    float _599 = cbMtdParam._m0[2u].y * _588;
    float _600 = cbMtdParam._m0[2u].z * _589;
    float _1039 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _602 = isnan(1.0) ? _1039 : (isnan(_1039) ? 1.0 : min(_1039, 1.0));
    float _607 = cbInstanceData._m0[_579 + 6u].w * (isnan(1.0) ? _991 : (isnan(_991) ? 1.0 : min(_991, 1.0)));
    float _613 = _573 / cbSceneParam._m0[86u].x;
    float _614 = _574 / cbSceneParam._m0[86u].y;
    vec4 _629 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_613, _614, (log2((isnan(cbSceneParam._m0[77u].w) ? _534 : (isnan(_534) ? cbSceneParam._m0[77u].w : min(_534, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _631 = _629.x;
    float _632 = _629.y;
    float _633 = _629.z;
    float _634 = _629.w;
    float _715;
    float _717;
    float _719;
    float _721;
    if (_534 > cbSceneParam._m0[78u].w)
    {
        float _677 = isnan(_534) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _534 : min(cbSceneParam._m0[80u].w, _534));
        float _678 = _677 / _534;
        float _689 = _678 * _553;
        float _690 = _554 * _678;
        float _691 = (-0.0) - _690;
        float _692 = _678 * _555;
        float _694 = (cbSceneParam._m0[77u].w * _691) / _677;
        float _695 = _694 + cbSceneParam._m0[79u].w;
        float _696 = cbSceneParam._m0[79u].w - _690;
        float _702 = sqrt(((_689 * _689) + (_690 * _690)) + (_692 * _692));
        float _705 = (1.0 - (cbSceneParam._m0[77u].w / _677)) * _702;
        float _711 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _713 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _883;
        if (abs((_691 - _694) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _883 = ((((_695 > 0.0) ? exp2(_711 * _695) : (2.0 - exp2(_713 * _695))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _705;
        }
        else
        {
            float _838 = 1.0 / cbSceneParam._m0[80u].x;
            float _839 = isnan(_696) ? _695 : (isnan(_695) ? _696 : max(_695, _696));
            float _840 = isnan(_696) ? _695 : (isnan(_695) ? _696 : min(_695, _696));
            float _849 = isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : min(_839, 0.0));
            float _850 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : min(_840, 0.0));
            _883 = ((abs(_702 / _691) * cbSceneParam._m0[80u].y) * ((((_849 - _850) * 2.0) - ((exp2(_711 * (isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0)))) - exp2(_711 * (isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0))))) * _838)) - ((exp2(_713 * _849) - exp2(_713 * _850)) * _838))) + (_705 * cbSceneParam._m0[80u].z);
        }
        vec4 _885 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_613, _614, 1.0), 0.0);
        float _894 = exp2((_883 * (-1.44269502162933349609375)) * (1.0 - _885.w));
        float _895 = log2(_894);
        float _911 = log2(_634);
        _715 = (exp2(_911 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_895 * cbSceneParam._m0[78u].x)) * _885.x) / cbSceneParam._m0[78u].x)) + _631;
        _717 = (exp2(_911 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_895 * cbSceneParam._m0[78u].y)) * _885.y) / cbSceneParam._m0[78u].y)) + _632;
        _719 = (exp2(_911 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_895 * cbSceneParam._m0[78u].z)) * _885.z) / cbSceneParam._m0[78u].z)) + _633;
        _721 = _894 * _634;
    }
    else
    {
        _715 = _631;
        _717 = _632;
        _719 = _633;
        _721 = _634;
    }
    bool _921;
    float _779;
    vec4 _783;
    float _785;
    vec4 _787;
    float _796;
    float _797;
    float _798;
    float _802;
    float _806;
    float _810;
    float _811;
    bool _822;
    for (;;)
    {
        bool _734 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _736 = log2(_721);
        float _740 = exp2(_736 * cbSceneParam._m0[78u].x);
        float _741 = exp2(_736 * cbSceneParam._m0[78u].y);
        float _742 = exp2(_736 * cbSceneParam._m0[78u].z);
        float _743 = _740 * _590;
        float _744 = _741 * _591;
        float _745 = _742 * _592;
        vec4 _753 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_573, _574));
        float _755 = _753.x;
        float _776 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _755)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _755))) - _534) * 0.100000001490116119384765625;
        float _1090 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
        float _778 = isnan(1.0) ? _1090 : (isnan(_1090) ? 1.0 : min(_1090, 1.0));
        _779 = _607 * _778;
        float _780 = _562 + (-0.5);
        _783 = cbMtdParam._m0[1u];
        _785 = _783.y * _780;
        _787 = cbMatDynParam._m0[0u];
        float _795 = (roundEven(_787.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _796 = _795 * (_734 ? _743 : (_743 + (cbSceneParam._m0[72u].w * _715)));
        _797 = _795 * (_734 ? _744 : (_744 + (cbSceneParam._m0[72u].w * _717)));
        _798 = _795 * (_734 ? _745 : (_745 + (cbSceneParam._m0[72u].w * _719)));
        _802 = (((_598 * _602) * _740) * _778) * _795;
        _806 = (((_599 * _602) * _741) * _778) * _795;
        _810 = (((_600 * _602) * _742) * _778) * _795;
        _811 = _780 * 0.999000012874603271484375;
        _822 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_822)
        {
            if ((cbInstanceData._m0[_579 + 7u].x + _811) < 0.5)
            {
                _921 = true;
                break;
            }
        }
        uint _875 = _580 + uint(_787.w);
        if ((cbInstanceData._m0[_875].w < 1.0) && ((cbInstanceData._m0[_875].w + _811) < 0.5))
        {
            _921 = true;
            break;
        }
        if ((_785 + 1.0) < _783.x)
        {
            _921 = true;
            break;
        }
        _921 = false;
        break;
    }
    float _926;
    if (_921)
    {
        discard_state = true;
        _926 = 0.0;
    }
    else
    {
        _926 = _779;
    }
    SV_Target.x = _796;
    SV_Target.y = _797;
    SV_Target.z = _798;
    SV_Target.w = _926;
    SV_Target_1.x = _802;
    SV_Target_1.y = _806;
    SV_Target_1.z = _810;
    SV_Target_1.w = _779;
    discard_exit();
}


