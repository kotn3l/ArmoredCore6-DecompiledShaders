#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _160 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _162 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _163 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _174 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _184 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _186 = texelFetch(g_InstanceIndexBuffer, int(_184));
    uint _187 = _186.x;
    precise float _188 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _193 = isnan(_188) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _188 : max(0.001000000047497451305389404296875, _188));
    precise float _195 = BLENDWEIGHT.x / _193;
    precise float _196 = BLENDWEIGHT.y / _193;
    precise float _197 = BLENDWEIGHT.z / _193;
    precise float _198 = BLENDWEIGHT.w / _193;
    uint _200 = _187 * 13u;
    uvec4 _205 = floatBitsToUint(cbInstanceData._m0[_200 + 4u]);
    uint _206 = _205.x;
    uint _208 = (_206 + uint(float(BLENDINDICES.x))) * 3u;
    uint _215 = _208 + 1u;
    uint _222 = _208 + 2u;
    precise float _229 = _195 * cbObjMatrix._m0[_208].x;
    precise float _230 = _195 * cbObjMatrix._m0[_215].x;
    precise float _231 = _195 * cbObjMatrix._m0[_222].x;
    precise float _232 = _195 * cbObjMatrix._m0[_208].y;
    precise float _233 = _195 * cbObjMatrix._m0[_215].y;
    precise float _234 = _195 * cbObjMatrix._m0[_222].y;
    precise float _235 = _195 * cbObjMatrix._m0[_208].z;
    precise float _236 = _195 * cbObjMatrix._m0[_215].z;
    precise float _237 = _195 * cbObjMatrix._m0[_222].z;
    precise float _238 = _195 * cbObjMatrix._m0[_208].w;
    precise float _239 = _195 * cbObjMatrix._m0[_215].w;
    precise float _240 = _195 * cbObjMatrix._m0[_222].w;
    uint _243 = (_206 + uint(float(BLENDINDICES.y))) * 3u;
    uint _250 = _243 + 1u;
    uint _257 = _243 + 2u;
    precise float _264 = _196 * cbObjMatrix._m0[_243].x;
    precise float _265 = _196 * cbObjMatrix._m0[_250].x;
    precise float _266 = _196 * cbObjMatrix._m0[_257].x;
    precise float _267 = _196 * cbObjMatrix._m0[_243].y;
    precise float _268 = _196 * cbObjMatrix._m0[_250].y;
    precise float _269 = _196 * cbObjMatrix._m0[_257].y;
    precise float _270 = _196 * cbObjMatrix._m0[_243].z;
    precise float _271 = _196 * cbObjMatrix._m0[_250].z;
    precise float _272 = _196 * cbObjMatrix._m0[_257].z;
    precise float _273 = _196 * cbObjMatrix._m0[_243].w;
    precise float _274 = _196 * cbObjMatrix._m0[_250].w;
    precise float _275 = _196 * cbObjMatrix._m0[_257].w;
    precise float _276 = _229 + _264;
    precise float _277 = _230 + _265;
    precise float _278 = _231 + _266;
    precise float _279 = _232 + _267;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    uint _290 = (_206 + uint(float(BLENDINDICES.z))) * 3u;
    uint _297 = _290 + 1u;
    uint _304 = _290 + 2u;
    precise float _311 = _197 * cbObjMatrix._m0[_290].x;
    precise float _312 = _197 * cbObjMatrix._m0[_297].x;
    precise float _313 = _197 * cbObjMatrix._m0[_304].x;
    precise float _314 = _197 * cbObjMatrix._m0[_290].y;
    precise float _315 = _197 * cbObjMatrix._m0[_297].y;
    precise float _316 = _197 * cbObjMatrix._m0[_304].y;
    precise float _317 = _197 * cbObjMatrix._m0[_290].z;
    precise float _318 = _197 * cbObjMatrix._m0[_297].z;
    precise float _319 = _197 * cbObjMatrix._m0[_304].z;
    precise float _320 = _197 * cbObjMatrix._m0[_290].w;
    precise float _321 = _197 * cbObjMatrix._m0[_297].w;
    precise float _322 = _197 * cbObjMatrix._m0[_304].w;
    precise float _323 = _276 + _311;
    precise float _324 = _277 + _312;
    precise float _325 = _278 + _313;
    precise float _326 = _279 + _314;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    uint _337 = (_206 + uint(float(BLENDINDICES.w))) * 3u;
    uint _344 = _337 + 1u;
    uint _351 = _337 + 2u;
    precise float _358 = _198 * cbObjMatrix._m0[_337].x;
    precise float _359 = _198 * cbObjMatrix._m0[_344].x;
    precise float _360 = _198 * cbObjMatrix._m0[_351].x;
    precise float _361 = _198 * cbObjMatrix._m0[_337].y;
    precise float _362 = _198 * cbObjMatrix._m0[_344].y;
    precise float _363 = _198 * cbObjMatrix._m0[_351].y;
    precise float _364 = _198 * cbObjMatrix._m0[_337].z;
    precise float _365 = _198 * cbObjMatrix._m0[_344].z;
    precise float _366 = _198 * cbObjMatrix._m0[_351].z;
    precise float _367 = _198 * cbObjMatrix._m0[_337].w;
    precise float _368 = _198 * cbObjMatrix._m0[_344].w;
    precise float _369 = _198 * cbObjMatrix._m0[_351].w;
    precise float _370 = _323 + _358;
    precise float _371 = _324 + _359;
    precise float _372 = _325 + _360;
    precise float _373 = _326 + _361;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = POSITION.x * _370;
    precise float _383 = POSITION.y * _373;
    precise float _384 = _383 + _382;
    precise float _385 = POSITION.z * _376;
    precise float _386 = _385 + _384;
    precise float _387 = 1.0 * _379;
    precise float _388 = _387 + _386;
    precise float _389 = POSITION.x * _371;
    precise float _390 = POSITION.y * _374;
    precise float _391 = _390 + _389;
    precise float _392 = POSITION.z * _377;
    precise float _393 = _392 + _391;
    precise float _394 = 1.0 * _380;
    precise float _395 = _394 + _393;
    precise float _396 = POSITION.x * _372;
    precise float _397 = POSITION.y * _375;
    precise float _398 = _397 + _396;
    precise float _399 = POSITION.z * _378;
    precise float _400 = _399 + _398;
    precise float _401 = 1.0 * _381;
    precise float _402 = _401 + _400;
    precise float _427 = _388 - cbSceneParam._m0[3u].x;
    precise float _428 = _395 - cbSceneParam._m0[3u].y;
    precise float _429 = _402 - cbSceneParam._m0[3u].z;
    precise float _457 = _427 * cbSceneParam._m0[24u].x;
    precise float _458 = _428 * cbSceneParam._m0[24u].y;
    precise float _459 = _458 + _457;
    precise float _460 = _429 * cbSceneParam._m0[24u].z;
    precise float _461 = _460 + _459;
    precise float _462 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _463 = _462 + _461;
    precise float _464 = _427 * cbSceneParam._m0[25u].x;
    precise float _465 = _428 * cbSceneParam._m0[25u].y;
    precise float _466 = _465 + _464;
    precise float _467 = _429 * cbSceneParam._m0[25u].z;
    precise float _468 = _467 + _466;
    precise float _469 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _470 = _469 + _468;
    precise float _471 = _427 * cbSceneParam._m0[26u].x;
    precise float _472 = _428 * cbSceneParam._m0[26u].y;
    precise float _473 = _472 + _471;
    precise float _474 = _429 * cbSceneParam._m0[26u].z;
    precise float _475 = _474 + _473;
    precise float _476 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _477 = _476 + _475;
    precise float _478 = _427 * cbSceneParam._m0[27u].x;
    precise float _479 = _428 * cbSceneParam._m0[27u].y;
    precise float _480 = _479 + _478;
    precise float _481 = _429 * cbSceneParam._m0[27u].z;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _484 = _483 + _482;
    gl_Position.x = _463;
    gl_Position.y = _470;
    gl_Position.z = _477;
    gl_Position.w = _484;
    NORMAL_1.x = fma(_163, _376, fma(_162, _373, _370 * _160));
    NORMAL_1.y = fma(_163, _377, fma(_162, _374, _371 * _160));
    NORMAL_1.z = fma(_163, _378, fma(_162, _375, _372 * _160));
    NORMAL_1.w = float(_187);
    TANGENT_1.x = fma(_174, _376, fma(_173, _373, _370 * _172));
    TANGENT_1.y = fma(_174, _377, fma(_173, _374, _371 * _172));
    TANGENT_1.z = fma(_174, _378, fma(_173, _375, _372 * _172));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_463, _470, _477, _484), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_463, _470, _477, _484), vec4(cbInstanceData._m0[_200 + 3u]));
}


