#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_A1_M0_Emissive_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in vec2 TEXCOORD_5;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    bool _141;
    float _86;
    vec4 _100;
    float _102;
    float _103;
    bool _116;
    uint _117;
    for (;;)
    {
        _86 = texture(sampler2D(S_A1_M0_Emissive_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w)).w;
        float _97 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125)).w + (-0.5);
        _100 = cbMtdParam._m0[1u];
        _102 = _97 * _100.y;
        _103 = _97 * 0.999000012874603271484375;
        _116 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        _117 = uint(roundEven(NORMAL.w)) * 13u;
        if (_116)
        {
            if ((cbInstanceData._m0[_117 + 7u].x + _103) < 0.5)
            {
                _141 = true;
                break;
            }
        }
        uint _132 = (_117 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_132].w < 1.0) && ((cbInstanceData._m0[_132].w + _103) < 0.5))
        {
            _141 = true;
            break;
        }
        if ((_102 + _86) < _100.x)
        {
            _141 = true;
            break;
        }
        _141 = false;
        break;
    }
    if (_141)
    {
        discard_state = true;
    }
    discard_exit();
}


