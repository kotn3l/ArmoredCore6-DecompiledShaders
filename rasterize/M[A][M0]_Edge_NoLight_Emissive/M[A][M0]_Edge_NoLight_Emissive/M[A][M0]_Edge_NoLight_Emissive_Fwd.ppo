#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _114 = texture(sampler2D(M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((cbMtdParam._m0[10u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[10u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _143 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _160 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    uint _175 = uint(roundEven(NORMAL.w)) * 13u;
    uint _178 = (_175 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _186 = ((cbMtdParam._m0[10u].x * _114.x) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_178].x;
    float _189 = ((cbMtdParam._m0[10u].x * _114.y) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_178].y;
    float _192 = ((cbMtdParam._m0[10u].x * _114.z) * cbMtdParam._m0[9u].z) * cbInstanceData._m0[_178].z;
    float _483 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _206 = isnan(1.0) ? _483 : (isnan(_483) ? 1.0 : min(_483, 1.0));
    uint _207 = _175 + 6u;
    float _217 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _218 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _233 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_217, _218, (log2((isnan(cbSceneParam._m0[77u].w) ? _143 : (isnan(_143) ? cbSceneParam._m0[77u].w : min(_143, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _235 = _233.x;
    float _236 = _233.y;
    float _237 = _233.z;
    float _238 = _233.w;
    float _323;
    float _325;
    float _327;
    float _329;
    if (_143 > cbSceneParam._m0[78u].w)
    {
        float _284 = isnan(_143) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _143 : min(cbSceneParam._m0[80u].w, _143));
        float _285 = _284 / _143;
        float _296 = _285 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _160));
        float _297 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _160)) * _285;
        float _298 = (-0.0) - _297;
        float _300 = _285 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _160));
        float _302 = (cbSceneParam._m0[77u].w * _298) / _284;
        float _303 = _302 + cbSceneParam._m0[79u].w;
        float _304 = cbSceneParam._m0[79u].w - _297;
        float _310 = sqrt(((_296 * _296) + (_297 * _297)) + (_300 * _300));
        float _313 = (1.0 - (cbSceneParam._m0[77u].w / _284)) * _310;
        float _319 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _321 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _423;
        if (abs((_298 - _302) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _423 = ((((_303 > 0.0) ? exp2(_319 * _303) : (2.0 - exp2(_321 * _303))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _313;
        }
        else
        {
            float _396 = 1.0 / cbSceneParam._m0[80u].x;
            float _397 = isnan(_304) ? _303 : (isnan(_303) ? _304 : max(_303, _304));
            float _398 = isnan(_304) ? _303 : (isnan(_303) ? _304 : min(_303, _304));
            float _407 = isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : min(_397, 0.0));
            float _408 = isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : min(_398, 0.0));
            _423 = ((abs(_310 / _298) * cbSceneParam._m0[80u].y) * ((((_407 - _408) * 2.0) - ((exp2(_319 * (isnan(0.0) ? _397 : (isnan(_397) ? 0.0 : max(_397, 0.0)))) - exp2(_319 * (isnan(0.0) ? _398 : (isnan(_398) ? 0.0 : max(_398, 0.0))))) * _396)) - ((exp2(_321 * _407) - exp2(_321 * _408)) * _396))) + (_313 * cbSceneParam._m0[80u].z);
        }
        vec4 _425 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_217, _218, 1.0), 0.0);
        float _434 = exp2((_423 * (-1.44269502162933349609375)) * (1.0 - _425.w));
        float _435 = log2(_434);
        float _451 = log2(_238);
        _323 = (exp2(_451 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_435 * cbSceneParam._m0[78u].x)) * _425.x) / cbSceneParam._m0[78u].x)) + _235;
        _325 = (exp2(_451 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_435 * cbSceneParam._m0[78u].y)) * _425.y) / cbSceneParam._m0[78u].y)) + _236;
        _327 = (exp2(_451 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_435 * cbSceneParam._m0[78u].z)) * _425.z) / cbSceneParam._m0[78u].z)) + _237;
        _329 = _434 * _238;
    }
    else
    {
        _323 = _235;
        _325 = _236;
        _327 = _237;
        _329 = _238;
    }
    float _341 = roundEven(cbMatDynParam._m0[0u].y);
    bool _342 = _341 == 3.0;
    float _344 = log2(_329);
    float _348 = exp2(_344 * cbSceneParam._m0[78u].x);
    float _349 = exp2(_344 * cbSceneParam._m0[78u].y);
    float _350 = exp2(_344 * cbSceneParam._m0[78u].z);
    float _351 = _348 * (isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0)));
    float _352 = _349 * (isnan(0.0) ? _189 : (isnan(_189) ? 0.0 : max(_189, 0.0)));
    float _353 = _350 * (isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0)));
    float _363 = (_341 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _363 * (_342 ? _351 : (_351 + (cbSceneParam._m0[72u].w * _323)));
    SV_Target.y = _363 * (_342 ? _352 : (_352 + (cbSceneParam._m0[72u].w * _325)));
    SV_Target.z = _363 * (_342 ? _353 : (_353 + (cbSceneParam._m0[72u].w * _327)));
    SV_Target.w = cbInstanceData._m0[_207].w;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _186) * _206) * _348) * _363;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _189) * _206) * _349) * _363;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _192) * _206) * _350) * _363;
    SV_Target_1.w = cbInstanceData._m0[_207].w;
}


