#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _578;
float _579;
float _580;
float _581;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _123 = texture(sampler2D(M_A_M0_Edge_NoLight_Emissive_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((cbMtdParam._m0[10u].y * TEXCOORD.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[10u].z * TEXCOORD.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _129 = _123.w;
    float _153 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _194 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _204 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _194);
    float _205 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _194);
    float _206 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _194);
    vec4 _211 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _213 = _211.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _307 = sqrt(((_204 * _204) + (_205 * _205)) + (_206 * _206));
        float _314 = (cbMatDynParam._m0[5u].x * _307) + cbMatDynParam._m0[5u].y;
        float _590 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
        float _315 = isnan(1.0) ? _590 : (isnan(_590) ? 1.0 : min(_590, 1.0));
        float _319 = (cbMatDynParam._m0[5u].z * _307) + cbMatDynParam._m0[5u].w;
        float _601 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _601 : (isnan(_601) ? 1.0 : min(_601, 1.0))) - _315)) + _315) < ((_213 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _231 = uint(roundEven(NORMAL.w)) * 13u;
    uint _233 = _231 + 9u;
    uint _234 = _233 + uint(cbMatDynParam._m0[0u].w);
    float _242 = ((cbMtdParam._m0[10u].x * _123.x) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_234].x;
    float _245 = ((cbMtdParam._m0[10u].x * _123.y) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_234].y;
    float _248 = ((cbMtdParam._m0[10u].x * _123.z) * cbMtdParam._m0[9u].z) * cbInstanceData._m0[_234].z;
    float _249 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _250 = isnan(0.0) ? _245 : (isnan(_245) ? 0.0 : max(_245, 0.0));
    float _251 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _257 = cbMtdParam._m0[2u].x * _242;
    float _258 = cbMtdParam._m0[2u].y * _245;
    float _259 = cbMtdParam._m0[2u].z * _248;
    float _627 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _262 = isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0));
    uint _263 = _231 + 6u;
    float _272 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _273 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _288 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_272, _273, (log2((isnan(cbSceneParam._m0[77u].w) ? _153 : (isnan(_153) ? cbSceneParam._m0[77u].w : min(_153, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _290 = _288.x;
    float _291 = _288.y;
    float _292 = _288.z;
    float _293 = _288.w;
    float _375;
    float _377;
    float _379;
    float _381;
    if (_153 > cbSceneParam._m0[78u].w)
    {
        float _336 = isnan(_153) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _153 : min(cbSceneParam._m0[80u].w, _153));
        float _337 = _336 / _153;
        float _348 = _337 * _204;
        float _349 = _205 * _337;
        float _350 = (-0.0) - _349;
        float _352 = _337 * _206;
        float _354 = (cbSceneParam._m0[77u].w * _350) / _336;
        float _355 = _354 + cbSceneParam._m0[79u].w;
        float _356 = cbSceneParam._m0[79u].w - _349;
        float _362 = sqrt(((_348 * _348) + (_349 * _349)) + (_352 * _352));
        float _365 = (1.0 - (cbSceneParam._m0[77u].w / _336)) * _362;
        float _371 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _373 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _506;
        if (abs((_350 - _354) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _506 = ((((_355 > 0.0) ? exp2(_371 * _355) : (2.0 - exp2(_373 * _355))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _365;
        }
        else
        {
            float _461 = 1.0 / cbSceneParam._m0[80u].x;
            float _462 = isnan(_356) ? _355 : (isnan(_355) ? _356 : max(_355, _356));
            float _463 = isnan(_356) ? _355 : (isnan(_355) ? _356 : min(_355, _356));
            float _472 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : min(_462, 0.0));
            float _473 = isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : min(_463, 0.0));
            _506 = ((abs(_362 / _350) * cbSceneParam._m0[80u].y) * ((((_472 - _473) * 2.0) - ((exp2(_371 * (isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0)))) - exp2(_371 * (isnan(0.0) ? _463 : (isnan(_463) ? 0.0 : max(_463, 0.0))))) * _461)) - ((exp2(_373 * _472) - exp2(_373 * _473)) * _461))) + (_365 * cbSceneParam._m0[80u].z);
        }
        vec4 _508 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_272, _273, 1.0), 0.0);
        float _517 = exp2((_506 * (-1.44269502162933349609375)) * (1.0 - _508.w));
        float _518 = log2(_517);
        float _534 = log2(_293);
        _375 = (exp2(_534 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_518 * cbSceneParam._m0[78u].x)) * _508.x) / cbSceneParam._m0[78u].x)) + _290;
        _377 = (exp2(_534 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_518 * cbSceneParam._m0[78u].y)) * _508.y) / cbSceneParam._m0[78u].y)) + _291;
        _379 = (exp2(_534 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_518 * cbSceneParam._m0[78u].z)) * _508.z) / cbSceneParam._m0[78u].z)) + _292;
        _381 = _517 * _293;
    }
    else
    {
        _375 = _290;
        _377 = _291;
        _379 = _292;
        _381 = _293;
    }
    bool _544;
    vec4 _391;
    vec4 _415;
    float _417;
    float _422;
    float _423;
    float _424;
    float _427;
    float _430;
    float _433;
    float _434;
    bool _445;
    for (;;)
    {
        _391 = cbMatDynParam._m0[0u];
        float _393 = roundEven(_391.y);
        bool _394 = _393 == 3.0;
        float _396 = log2(_381);
        float _400 = exp2(_396 * cbSceneParam._m0[78u].x);
        float _401 = exp2(_396 * cbSceneParam._m0[78u].y);
        float _402 = exp2(_396 * cbSceneParam._m0[78u].z);
        float _403 = _400 * _249;
        float _404 = _401 * _250;
        float _405 = _402 * _251;
        float _412 = _213 + (-0.5);
        _415 = cbMtdParam._m0[1u];
        _417 = _415.y * _412;
        float _421 = (_393 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _422 = _421 * (_394 ? _403 : (_403 + (cbSceneParam._m0[72u].w * _375)));
        _423 = _421 * (_394 ? _404 : (_404 + (cbSceneParam._m0[72u].w * _377)));
        _424 = _421 * (_394 ? _405 : (_405 + (cbSceneParam._m0[72u].w * _379)));
        _427 = ((_257 * _262) * _400) * _421;
        _430 = ((_258 * _262) * _401) * _421;
        _433 = ((_259 * _262) * _402) * _421;
        _434 = _412 * 0.999000012874603271484375;
        _445 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_445)
        {
            if ((cbInstanceData._m0[_231 + 7u].x + _434) < 0.5)
            {
                _544 = true;
                break;
            }
        }
        uint _498 = _233 + uint(_391.w);
        if ((cbInstanceData._m0[_498].w < 1.0) && ((cbInstanceData._m0[_498].w + _434) < 0.5))
        {
            _544 = true;
            break;
        }
        if ((_417 + _129) < _415.x)
        {
            _544 = true;
            break;
        }
        _544 = false;
        break;
    }
    float _549;
    if (_544)
    {
        discard_state = true;
        _549 = 0.0;
    }
    else
    {
        _549 = cbInstanceData._m0[_263].w;
    }
    SV_Target.x = _422;
    SV_Target.y = _423;
    SV_Target.z = _424;
    SV_Target.w = _549;
    SV_Target_1.x = _427;
    SV_Target_1.y = _430;
    SV_Target_1.z = _433;
    SV_Target_1.w = cbInstanceData._m0[_263].w;
    discard_exit();
}


