#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D P_ACParts_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_ACParts_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _119 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _120 = _119 * NORMAL.x;
    float _121 = _119 * NORMAL.y;
    float _122 = _119 * NORMAL.z;
    vec4 _142 = texture(sampler2D(P_ACParts_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _148 = _142.x * cbMtdParam._m0[10u].x;
    float _149 = _142.y * cbMtdParam._m0[10u].y;
    float _150 = _142.z * cbMtdParam._m0[10u].z;
    vec4 _172 = texture(sampler2D(P_ACParts_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _189 = ((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].x) * _172.x) + cbMtdParam._m0[11u].x;
    float _190 = ((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].y) * _172.y) + cbMtdParam._m0[11u].y;
    float _191 = cbMtdParam._m0[11u].z + ((cbMtdParam._m0[12u].x * cbMtdParam._m0[9u].z) * _172.z);
    float _195 = inversesqrt(dot(vec3(_120, _121, _122), vec3(_120, _121, _122)));
    float _393 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    float _197 = isnan(1.0) ? _393 : (isnan(_393) ? 1.0 : min(_393, 1.0));
    float _404 = isnan(0.0) ? _149 : (isnan(_149) ? 0.0 : max(_149, 0.0));
    float _198 = isnan(1.0) ? _404 : (isnan(_404) ? 1.0 : min(_404, 1.0));
    float _415 = isnan(0.0) ? _150 : (isnan(_150) ? 0.0 : max(_150, 0.0));
    float _199 = isnan(1.0) ? _415 : (isnan(_415) ? 1.0 : min(_415, 1.0));
    uint _201 = uint(roundEven(NORMAL.w));
    vec4 _206 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _208 = _206.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _276 = (cbMatDynParam._m0[5u].x * TEXCOORD_8) + cbMatDynParam._m0[5u].y;
        float _426 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        float _277 = isnan(1.0) ? _426 : (isnan(_426) ? 1.0 : min(_426, 1.0));
        float _281 = (cbMatDynParam._m0[5u].z * TEXCOORD_8) + cbMatDynParam._m0[5u].w;
        float _437 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _437 : (isnan(_437) ? 1.0 : min(_437, 1.0))) - _277)) + _277) < ((_208 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _310;
    uint _228;
    vec4 _232;
    float _239;
    float _240;
    float _241;
    float _242;
    float _243;
    float _244;
    float _247;
    float _251;
    vec4 _255;
    float _257;
    float _258;
    bool _269;
    for (;;)
    {
        _228 = _201 * 13u;
        _232 = cbInstanceData._m0[(_228 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _236 = (cbMtdParam._m0[0u].x * _197) * _232.x;
        float _237 = (cbMtdParam._m0[0u].y * _198) * _232.y;
        float _238 = (cbMtdParam._m0[0u].z * _199) * _232.z;
        float _448 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
        _239 = isnan(1.0) ? _448 : (isnan(_448) ? 1.0 : min(_448, 1.0));
        float _459 = isnan(0.0) ? _237 : (isnan(_237) ? 0.0 : max(_237, 0.0));
        _240 = isnan(1.0) ? _459 : (isnan(_459) ? 1.0 : min(_459, 1.0));
        float _470 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
        _241 = isnan(1.0) ? _470 : (isnan(_470) ? 1.0 : min(_470, 1.0));
        _242 = _232.x * _189;
        _243 = _232.y * _190;
        _244 = _232.z * _191;
        _247 = cbMtdParam._m0[2u].w;
        _251 = cbInstanceData._m0[_228 + 6u].w;
        float _252 = _208 + (-0.5);
        _255 = cbMtdParam._m0[1u];
        _257 = _255.y * _252;
        _258 = _252 * 0.999000012874603271484375;
        _269 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_269)
        {
            if ((cbInstanceData._m0[_228 + 7u].x + _258) < 0.5)
            {
                _310 = true;
                break;
            }
        }
        if ((_232.w < 1.0) && ((_232.w + _258) < 0.5))
        {
            _310 = true;
            break;
        }
        if ((_257 + 1.0) < _255.x)
        {
            _310 = true;
            break;
        }
        _310 = false;
        break;
    }
    if (_310)
    {
        discard_state = true;
    }
    float _344;
    float _345;
    float _346;
    float _347;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _344 = _251;
        _345 = _251;
        _346 = _251;
        _347 = _251;
    }
    else
    {
        _344 = _247;
        _345 = 0.0;
        _346 = float(floatBitsToUint(cbInstanceData._m0[_228 + 5u]).x) * 0.0039215688593685626983642578125;
        _347 = TEXCOORD.z;
    }
    SV_Target.x = ((_120 * 0.5) * _195) + 0.500488758087158203125;
    SV_Target.y = ((_121 * 0.5) * _195) + 0.500488758087158203125;
    SV_Target.z = ((_122 * 0.5) * _195) + 0.500488758087158203125;
    SV_Target.w = _345;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _347;
    SV_Target_2.x = _239;
    SV_Target_2.y = _240;
    SV_Target_2.z = _241;
    SV_Target_2.w = _346;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _345;
    SV_Target_4.x = _242 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _243 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _244 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _344;
    discard_exit();
}


