#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_V_Glow_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_V_Glow_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _134 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _135 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _141 = inversesqrt(dot(vec3(_133, _134, _135), vec3(_133, _134, _135)));
    float _148 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _149 = _148 * NORMAL.x;
    float _150 = _148 * NORMAL.y;
    float _151 = _148 * NORMAL.z;
    float _155 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _163;
    float _164;
    float _165;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _163 = (-0.0) - _149;
        _164 = (-0.0) - _150;
        _165 = (-0.0) - _151;
    }
    else
    {
        _163 = _149;
        _164 = _150;
        _165 = _151;
    }
    vec4 _179 = texture(sampler2D(S_AMSN_V_Glow_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _182 = _179.x;
    float _183 = _179.y;
    float _184 = _179.z;
    float _185 = _179.w;
    float _186 = _185 * TEXCOORD_1.z;
    vec4 _202 = texture(sampler2D(S_AMSN_V_Glow_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _206 = _202.z;
    float _210 = (_202.x * 2.0) + (-1.0);
    float _212 = (_202.y * 2.0) + (-1.0);
    float _213 = dot(vec2(_210, _212), vec2(_210, _212));
    float _427 = isnan(0.0) ? _213 : (isnan(_213) ? 0.0 : max(_213, 0.0));
    float _219 = sqrt(1.0 - (isnan(1.0) ? _427 : (isnan(_427) ? 1.0 : min(_427, 1.0))));
    float _222 = fma(_219, _163, fma(_212, _155 * TANGENT.x, (_141 * _133) * _210));
    float _225 = fma(_219, _164, fma(_212, _155 * TANGENT.y, (_141 * _134) * _210));
    float _228 = fma(_219, _165, fma(_212, _155 * TANGENT.z, (_141 * _135) * _210));
    float _232 = inversesqrt(dot(vec3(_222, _225, _228), vec3(_222, _225, _228)));
    float _438 = isnan(0.0) ? _186 : (isnan(_186) ? 0.0 : max(_186, 0.0));
    float _233 = isnan(1.0) ? _438 : (isnan(_438) ? 1.0 : min(_438, 1.0));
    float _449 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _460 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _235 = isnan(1.0) ? _460 : (isnan(_460) ? 1.0 : min(_460, 1.0));
    float _471 = isnan(0.0) ? _183 : (isnan(_183) ? 0.0 : max(_183, 0.0));
    float _236 = isnan(1.0) ? _471 : (isnan(_471) ? 1.0 : min(_471, 1.0));
    float _482 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    float _237 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
    float _493 = isnan(0.0) ? cbMtdParam._m0[9u].x : (isnan(cbMtdParam._m0[9u].x) ? 0.0 : max(cbMtdParam._m0[9u].x, 0.0));
    uint _240 = uint(roundEven(NORMAL.w));
    vec4 _245 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _247 = _245.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _315 = (cbMatDynParam._m0[5u].x * TEXCOORD_9) + cbMatDynParam._m0[5u].y;
        float _504 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
        float _316 = isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0));
        float _320 = (cbMatDynParam._m0[5u].z * TEXCOORD_9) + cbMatDynParam._m0[5u].w;
        float _515 = isnan(0.0) ? _320 : (isnan(_320) ? 0.0 : max(_320, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0))) - _316)) + _316) < ((_247 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _349;
    uint _267;
    vec4 _272;
    float _279;
    float _280;
    float _281;
    float _285;
    float _290;
    vec4 _294;
    float _296;
    float _297;
    bool _308;
    for (;;)
    {
        _267 = _240 * 13u;
        _272 = cbInstanceData._m0[(_267 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _276 = (cbMtdParam._m0[0u].x * _235) * _272.x;
        float _277 = (cbMtdParam._m0[0u].y * _236) * _272.y;
        float _278 = (cbMtdParam._m0[0u].z * _237) * _272.z;
        float _526 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
        _279 = isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0));
        float _537 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
        _280 = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
        float _548 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
        _281 = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
        float _559 = isnan(0.0) ? _233 : (isnan(_233) ? 0.0 : max(_233, 0.0));
        _285 = cbMtdParam._m0[2u].w;
        _290 = cbInstanceData._m0[_267 + 6u].w * (isnan(1.0) ? _559 : (isnan(_559) ? 1.0 : min(_559, 1.0)));
        float _291 = _247 + (-0.5);
        _294 = cbMtdParam._m0[1u];
        _296 = _294.y * _291;
        _297 = _291 * 0.999000012874603271484375;
        _308 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_308)
        {
            if ((cbInstanceData._m0[_267 + 7u].x + _297) < 0.5)
            {
                _349 = true;
                break;
            }
        }
        if ((_272.w < 1.0) && ((_272.w + _297) < 0.5))
        {
            _349 = true;
            break;
        }
        if ((_296 + _185) < _294.x)
        {
            _349 = true;
            break;
        }
        _349 = false;
        break;
    }
    if (_349)
    {
        discard_state = true;
    }
    float _376;
    float _377;
    float _378;
    float _379;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _376 = _290;
        _377 = _290;
        _378 = _290;
        _379 = _290;
    }
    else
    {
        _376 = _285;
        _377 = 0.0;
        _378 = float(floatBitsToUint(cbInstanceData._m0[_267 + 5u]).x) * 0.0039215688593685626983642578125;
        _379 = TEXCOORD_1.w;
    }
    SV_Target.x = ((_222 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.y = ((_225 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.z = ((_228 * 0.5) * _232) + 0.500488758087158203125;
    SV_Target.w = _377;
    SV_Target_1.x = isnan(1.0) ? _493 : (isnan(_493) ? 1.0 : min(_493, 1.0));
    SV_Target_1.y = isnan(1.0) ? _449 : (isnan(_449) ? 1.0 : min(_449, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _379;
    SV_Target_2.x = _279;
    SV_Target_2.y = _280;
    SV_Target_2.z = _281;
    SV_Target_2.w = _378;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _377;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _376;
    discard_exit();
}


