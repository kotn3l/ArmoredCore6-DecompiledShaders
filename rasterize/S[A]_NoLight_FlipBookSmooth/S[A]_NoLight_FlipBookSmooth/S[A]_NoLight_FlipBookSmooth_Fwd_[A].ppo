#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _676;
float _677;
float _678;
float _679;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _121 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _124 = _121.x;
    float _148 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _124)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _124))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _688 = isnan(0.0) ? _148 : (isnan(_148) ? 0.0 : max(_148, 0.0));
    uint _166 = uint(int(floor(cbMtdParam._m0[10u].y)));
    float _167 = fract(cbMtdParam._m0[10u].y);
    uint _168 = _166 + 1u;
    uint _169 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _172 = float(int(_166 - _169 * (_166 / _169)));
    float _176 = float(int(_168 - _169 * (_168 / _169)));
    float _180 = 1.0 / cbMtdParam._m0[10u].z;
    float _181 = 1.0 / cbMtdParam._m0[10u].w;
    float _182 = fract(TEXCOORD_1.x);
    float _183 = fract(TEXCOORD_1.y);
    vec4 _203 = texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_182 + (_176 - cbMtdParam._m0[10u].z * trunc(_176 / cbMtdParam._m0[10u].z))) * _180) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_183 + floor(_176 / cbMtdParam._m0[10u].z)) * _181) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _213 = texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_182 + (_172 - cbMtdParam._m0[10u].z * trunc(_172 / cbMtdParam._m0[10u].z))) * _180) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_183 + floor(_172 / cbMtdParam._m0[10u].z)) * _181) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _215 = _213.x;
    float _216 = _213.y;
    float _217 = _213.z;
    float _218 = _213.w;
    float _235 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((_203.w - _218) * _167) + _218);
    float _236 = _235 * (isnan(1.0) ? _688 : (isnan(_688) ? 1.0 : min(_688, 1.0)));
    float _237 = gl_FragCoord.x * 0.125;
    float _239 = gl_FragCoord.y * 0.125;
    float _249 = float(_235 >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_237, _239)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _699 = isnan(0.0) ? _236 : (isnan(_236) ? 0.0 : max(_236, 0.0));
    float _264 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _305 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _315 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _305);
    float _316 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _305);
    float _317 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _305);
    vec4 _318 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_237, _239));
    float _320 = _318.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _408 = sqrt(((_315 * _315) + (_316 * _316)) + (_317 * _317));
        float _415 = (cbMatDynParam._m0[5u].x * _408) + cbMatDynParam._m0[5u].y;
        float _710 = isnan(0.0) ? _415 : (isnan(_415) ? 0.0 : max(_415, 0.0));
        float _416 = isnan(1.0) ? _710 : (isnan(_710) ? 1.0 : min(_710, 1.0));
        float _420 = (cbMatDynParam._m0[5u].z * _408) + cbMatDynParam._m0[5u].w;
        float _721 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _721 : (isnan(_721) ? 1.0 : min(_721, 1.0))) - _416)) + _416) < ((_320 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _337 = uint(roundEven(NORMAL.w)) * 13u;
    uint _339 = _337 + 9u;
    uint _340 = _339 + uint(cbMatDynParam._m0[0u].w);
    float _346 = ((((_203.x - _215) * _167) + _215) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_340].x;
    float _347 = ((((_203.y - _216) * _167) + _216) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_340].y;
    float _348 = ((((_203.z - _217) * _167) + _217) * cbMtdParam._m0[9u].z) * cbInstanceData._m0[_340].z;
    float _349 = isnan(0.0) ? _346 : (isnan(_346) ? 0.0 : max(_346, 0.0));
    float _350 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _351 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _357 = cbMtdParam._m0[2u].x * _346;
    float _358 = cbMtdParam._m0[2u].y * _347;
    float _359 = cbMtdParam._m0[2u].z * _348;
    float _747 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _361 = isnan(1.0) ? _747 : (isnan(_747) ? 1.0 : min(_747, 1.0));
    float _366 = cbInstanceData._m0[_337 + 6u].w * (isnan(1.0) ? _699 : (isnan(_699) ? 1.0 : min(_699, 1.0)));
    float _372 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _373 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _388 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_372, _373, (log2((isnan(cbSceneParam._m0[77u].w) ? _264 : (isnan(_264) ? cbSceneParam._m0[77u].w : min(_264, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _391 = _388.x;
    float _392 = _388.y;
    float _393 = _388.z;
    float _394 = _388.w;
    float _473;
    float _475;
    float _477;
    float _479;
    if (_264 > cbSceneParam._m0[78u].w)
    {
        float _435 = isnan(_264) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _264 : min(cbSceneParam._m0[80u].w, _264));
        float _436 = _435 / _264;
        float _447 = _436 * _315;
        float _448 = _316 * _436;
        float _449 = (-0.0) - _448;
        float _450 = _436 * _317;
        float _452 = (cbSceneParam._m0[77u].w * _449) / _435;
        float _453 = _452 + cbSceneParam._m0[79u].w;
        float _454 = cbSceneParam._m0[79u].w - _448;
        float _460 = sqrt(((_447 * _447) + (_448 * _448)) + (_450 * _450));
        float _463 = (1.0 - (cbSceneParam._m0[77u].w / _435)) * _460;
        float _469 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _471 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _604;
        if (abs((_449 - _452) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _604 = ((((_453 > 0.0) ? exp2(_469 * _453) : (2.0 - exp2(_471 * _453))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _463;
        }
        else
        {
            float _559 = 1.0 / cbSceneParam._m0[80u].x;
            float _560 = isnan(_454) ? _453 : (isnan(_453) ? _454 : max(_453, _454));
            float _561 = isnan(_454) ? _453 : (isnan(_453) ? _454 : min(_453, _454));
            float _570 = isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : min(_560, 0.0));
            float _571 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : min(_561, 0.0));
            _604 = ((abs(_460 / _449) * cbSceneParam._m0[80u].y) * ((((_570 - _571) * 2.0) - ((exp2(_469 * (isnan(0.0) ? _560 : (isnan(_560) ? 0.0 : max(_560, 0.0)))) - exp2(_469 * (isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0))))) * _559)) - ((exp2(_471 * _570) - exp2(_471 * _571)) * _559))) + (_463 * cbSceneParam._m0[80u].z);
        }
        vec4 _606 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_372, _373, 1.0), 0.0);
        float _615 = exp2((_604 * (-1.44269502162933349609375)) * (1.0 - _606.w));
        float _616 = log2(_615);
        float _632 = log2(_394);
        _473 = (exp2(_632 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_616 * cbSceneParam._m0[78u].x)) * _606.x) / cbSceneParam._m0[78u].x)) + _391;
        _475 = (exp2(_632 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_616 * cbSceneParam._m0[78u].y)) * _606.y) / cbSceneParam._m0[78u].y)) + _392;
        _477 = (exp2(_632 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_616 * cbSceneParam._m0[78u].z)) * _606.z) / cbSceneParam._m0[78u].z)) + _393;
        _479 = _615 * _394;
    }
    else
    {
        _473 = _391;
        _475 = _392;
        _477 = _393;
        _479 = _394;
    }
    bool _642;
    vec4 _489;
    vec4 _513;
    float _515;
    float _520;
    float _521;
    float _522;
    float _525;
    float _528;
    float _531;
    float _532;
    bool _543;
    for (;;)
    {
        _489 = cbMatDynParam._m0[0u];
        float _491 = roundEven(_489.y);
        bool _492 = _491 == 3.0;
        float _494 = log2(_479);
        float _498 = exp2(_494 * cbSceneParam._m0[78u].x);
        float _499 = exp2(_494 * cbSceneParam._m0[78u].y);
        float _500 = exp2(_494 * cbSceneParam._m0[78u].z);
        float _501 = _498 * _349;
        float _502 = _499 * _350;
        float _503 = _500 * _351;
        float _510 = _320 + (-0.5);
        _513 = cbMtdParam._m0[1u];
        _515 = _513.y * _510;
        float _519 = (_491 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _520 = _519 * (_492 ? _501 : (_501 + (cbSceneParam._m0[72u].w * _473)));
        _521 = _519 * (_492 ? _502 : (_502 + (cbSceneParam._m0[72u].w * _475)));
        _522 = _519 * (_492 ? _503 : (_503 + (cbSceneParam._m0[72u].w * _477)));
        _525 = ((_357 * _361) * _498) * _519;
        _528 = ((_358 * _361) * _499) * _519;
        _531 = ((_359 * _361) * _500) * _519;
        _532 = _510 * 0.999000012874603271484375;
        _543 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_543)
        {
            if ((cbInstanceData._m0[_337 + 7u].x + _532) < 0.5)
            {
                _642 = true;
                break;
            }
        }
        uint _596 = _339 + uint(_489.w);
        if ((cbInstanceData._m0[_596].w < 1.0) && ((cbInstanceData._m0[_596].w + _532) < 0.5))
        {
            _642 = true;
            break;
        }
        if ((_515 + _249) < _513.x)
        {
            _642 = true;
            break;
        }
        _642 = false;
        break;
    }
    float _647;
    if (_642)
    {
        discard_state = true;
        _647 = 0.0;
    }
    else
    {
        _647 = _366;
    }
    SV_Target.x = _520;
    SV_Target.y = _521;
    SV_Target.z = _522;
    SV_Target.w = _647;
    SV_Target_1.x = _525;
    SV_Target_1.y = _528;
    SV_Target_1.z = _531;
    SV_Target_1.w = _366;
    discard_exit();
}


