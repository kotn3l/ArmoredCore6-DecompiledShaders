#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_6;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in vec3 TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    uint _117 = uint(int(floor(cbMtdParam._m0[10u].y)));
    uint _119 = _117 + 1u;
    uint _120 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _123 = float(int(_117 - _120 * (_117 / _120)));
    float _127 = float(int(_119 - _120 * (_119 / _120)));
    float _131 = 1.0 / cbMtdParam._m0[10u].z;
    float _133 = 1.0 / cbMtdParam._m0[10u].w;
    float _134 = fract(TEXCOORD_1.x);
    float _135 = fract(TEXCOORD_1.y);
    vec4 _164 = texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_134 + (_123 - cbMtdParam._m0[10u].z * trunc(_123 / cbMtdParam._m0[10u].z))) * _131) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_135 + floor(_123 / cbMtdParam._m0[10u].z)) * _133) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _166 = _164.w;
    float _172 = gl_FragCoord.x * 0.125;
    float _174 = gl_FragCoord.y * 0.125;
    float _184 = float(((cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_134 + (_127 - cbMtdParam._m0[10u].z * trunc(_127 / cbMtdParam._m0[10u].z))) * _131) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_135 + floor(_127 / cbMtdParam._m0[10u].z)) * _133) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w - _166) * fract(cbMtdParam._m0[10u].y)) + _166)) >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_172, _174)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    uint _186 = uint(roundEven(NORMAL.w));
    float _200 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_6.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_6.z));
    float _241 = fma(TEXCOORD_6.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_6.x)));
    float _251 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_6.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_6.x))) / _241);
    float _252 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_6.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_6.x))) / _241);
    float _253 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_6.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_6.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_6.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_6.x))) / _241);
    vec4 _254 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_172, _174));
    float _256 = _254.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _292 = sqrt(((_251 * _251) + (_252 * _252)) + (_253 * _253));
        float _299 = (cbMatDynParam._m0[5u].x * _292) + cbMatDynParam._m0[5u].y;
        float _385 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
        float _300 = isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0));
        float _304 = (cbMatDynParam._m0[5u].z * _292) + cbMatDynParam._m0[5u].w;
        float _396 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0))) - _300)) + _300) < ((_256 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _335;
    float _267;
    float _268;
    vec4 _272;
    float _274;
    float _275;
    bool _286;
    for (;;)
    {
        _267 = (TEXCOORD_6.x / TEXCOORD_6.w) - (TEXCOORD_7.x / TEXCOORD_7.w);
        _268 = (TEXCOORD_6.y / TEXCOORD_6.w) - (TEXCOORD_7.y / TEXCOORD_7.w);
        float _269 = _256 + (-0.5);
        _272 = cbMtdParam._m0[1u];
        _274 = _272.y * _269;
        _275 = _269 * 0.999000012874603271484375;
        _286 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_286)
        {
            if ((cbInstanceData._m0[(_186 * 13u) + 7u].x + _275) < 0.5)
            {
                _335 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _275) < 0.5))
        {
            _335 = true;
            break;
        }
        if ((_274 + _184) < _272.x)
        {
            _335 = true;
            break;
        }
        _335 = false;
        break;
    }
    if (_335)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _267) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _268) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _200 / (_200 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


