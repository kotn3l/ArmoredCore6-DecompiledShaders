#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec2 TEXCOORD_5;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _170 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _173 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _184 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _194 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _196 = texelFetch(g_InstanceIndexBuffer, int(_194));
    uint _197 = _196.x;
    precise float _198 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _203 = isnan(_198) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _198 : max(0.001000000047497451305389404296875, _198));
    precise float _205 = BLENDWEIGHT.x / _203;
    precise float _206 = BLENDWEIGHT.y / _203;
    precise float _207 = BLENDWEIGHT.z / _203;
    precise float _208 = BLENDWEIGHT.w / _203;
    uint _210 = _197 * 13u;
    uvec4 _215 = floatBitsToUint(cbInstanceData._m0[_210 + 4u]);
    uint _216 = _215.x;
    uint _218 = (_216 + uint(float(BLENDINDICES.x))) * 3u;
    uint _225 = _218 + 1u;
    uint _232 = _218 + 2u;
    precise float _239 = _205 * cbObjMatrix._m0[_218].x;
    precise float _240 = _205 * cbObjMatrix._m0[_225].x;
    precise float _241 = _205 * cbObjMatrix._m0[_232].x;
    precise float _242 = _205 * cbObjMatrix._m0[_218].y;
    precise float _243 = _205 * cbObjMatrix._m0[_225].y;
    precise float _244 = _205 * cbObjMatrix._m0[_232].y;
    precise float _245 = _205 * cbObjMatrix._m0[_218].z;
    precise float _246 = _205 * cbObjMatrix._m0[_225].z;
    precise float _247 = _205 * cbObjMatrix._m0[_232].z;
    precise float _248 = _205 * cbObjMatrix._m0[_218].w;
    precise float _249 = _205 * cbObjMatrix._m0[_225].w;
    precise float _250 = _205 * cbObjMatrix._m0[_232].w;
    uint _253 = (_216 + uint(float(BLENDINDICES.y))) * 3u;
    uint _260 = _253 + 1u;
    uint _267 = _253 + 2u;
    precise float _274 = _206 * cbObjMatrix._m0[_253].x;
    precise float _275 = _206 * cbObjMatrix._m0[_260].x;
    precise float _276 = _206 * cbObjMatrix._m0[_267].x;
    precise float _277 = _206 * cbObjMatrix._m0[_253].y;
    precise float _278 = _206 * cbObjMatrix._m0[_260].y;
    precise float _279 = _206 * cbObjMatrix._m0[_267].y;
    precise float _280 = _206 * cbObjMatrix._m0[_253].z;
    precise float _281 = _206 * cbObjMatrix._m0[_260].z;
    precise float _282 = _206 * cbObjMatrix._m0[_267].z;
    precise float _283 = _206 * cbObjMatrix._m0[_253].w;
    precise float _284 = _206 * cbObjMatrix._m0[_260].w;
    precise float _285 = _206 * cbObjMatrix._m0[_267].w;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    uint _300 = (_216 + uint(float(BLENDINDICES.z))) * 3u;
    uint _307 = _300 + 1u;
    uint _314 = _300 + 2u;
    precise float _321 = _207 * cbObjMatrix._m0[_300].x;
    precise float _322 = _207 * cbObjMatrix._m0[_307].x;
    precise float _323 = _207 * cbObjMatrix._m0[_314].x;
    precise float _324 = _207 * cbObjMatrix._m0[_300].y;
    precise float _325 = _207 * cbObjMatrix._m0[_307].y;
    precise float _326 = _207 * cbObjMatrix._m0[_314].y;
    precise float _327 = _207 * cbObjMatrix._m0[_300].z;
    precise float _328 = _207 * cbObjMatrix._m0[_307].z;
    precise float _329 = _207 * cbObjMatrix._m0[_314].z;
    precise float _330 = _207 * cbObjMatrix._m0[_300].w;
    precise float _331 = _207 * cbObjMatrix._m0[_307].w;
    precise float _332 = _207 * cbObjMatrix._m0[_314].w;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    uint _347 = (_216 + uint(float(BLENDINDICES.w))) * 3u;
    uint _354 = _347 + 1u;
    uint _361 = _347 + 2u;
    precise float _368 = _208 * cbObjMatrix._m0[_347].x;
    precise float _369 = _208 * cbObjMatrix._m0[_354].x;
    precise float _370 = _208 * cbObjMatrix._m0[_361].x;
    precise float _371 = _208 * cbObjMatrix._m0[_347].y;
    precise float _372 = _208 * cbObjMatrix._m0[_354].y;
    precise float _373 = _208 * cbObjMatrix._m0[_361].y;
    precise float _374 = _208 * cbObjMatrix._m0[_347].z;
    precise float _375 = _208 * cbObjMatrix._m0[_354].z;
    precise float _376 = _208 * cbObjMatrix._m0[_361].z;
    precise float _377 = _208 * cbObjMatrix._m0[_347].w;
    precise float _378 = _208 * cbObjMatrix._m0[_354].w;
    precise float _379 = _208 * cbObjMatrix._m0[_361].w;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = POSITION.x * _380;
    precise float _393 = POSITION.y * _383;
    precise float _394 = _393 + _392;
    precise float _395 = POSITION.z * _386;
    precise float _396 = _395 + _394;
    precise float _397 = 1.0 * _389;
    precise float _398 = _397 + _396;
    precise float _399 = POSITION.x * _381;
    precise float _400 = POSITION.y * _384;
    precise float _401 = _400 + _399;
    precise float _402 = POSITION.z * _387;
    precise float _403 = _402 + _401;
    precise float _404 = 1.0 * _390;
    precise float _405 = _404 + _403;
    precise float _406 = POSITION.x * _382;
    precise float _407 = POSITION.y * _385;
    precise float _408 = _407 + _406;
    precise float _409 = POSITION.z * _388;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * _391;
    precise float _412 = _411 + _410;
    precise float _437 = _398 - cbSceneParam._m0[3u].x;
    precise float _438 = _405 - cbSceneParam._m0[3u].y;
    precise float _439 = _412 - cbSceneParam._m0[3u].z;
    precise float _467 = _437 * cbSceneParam._m0[24u].x;
    precise float _468 = _438 * cbSceneParam._m0[24u].y;
    precise float _469 = _468 + _467;
    precise float _470 = _439 * cbSceneParam._m0[24u].z;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _473 = _472 + _471;
    precise float _474 = _437 * cbSceneParam._m0[25u].x;
    precise float _475 = _438 * cbSceneParam._m0[25u].y;
    precise float _476 = _475 + _474;
    precise float _477 = _439 * cbSceneParam._m0[25u].z;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _480 = _479 + _478;
    precise float _481 = _437 * cbSceneParam._m0[26u].x;
    precise float _482 = _438 * cbSceneParam._m0[26u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _439 * cbSceneParam._m0[26u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _437 * cbSceneParam._m0[27u].x;
    precise float _489 = _438 * cbSceneParam._m0[27u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _439 * cbSceneParam._m0[27u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _494 = _493 + _492;
    gl_Position.x = _473;
    gl_Position.y = _480;
    gl_Position.z = _487;
    gl_Position.w = _494;
    POSITION_1.x = _473;
    POSITION_1.y = _480;
    POSITION_1.z = _487;
    POSITION_1.w = _494;
    NORMAL_1.x = fma(_173, _386, fma(_172, _383, _380 * _170));
    NORMAL_1.y = fma(_173, _387, fma(_172, _384, _381 * _170));
    NORMAL_1.z = fma(_173, _388, fma(_172, _385, _382 * _170));
    NORMAL_1.w = float(_197);
    TANGENT_1.x = fma(_184, _386, fma(_183, _383, _380 * _182));
    TANGENT_1.y = fma(_184, _387, fma(_183, _384, _381 * _182));
    TANGENT_1.z = fma(_184, _388, fma(_183, _385, _382 * _182));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.w;
    TEXCOORD_1.w = COLOR_1.x;
    TEXCOORD_5.x = _487;
    TEXCOORD_5.y = _494;
    gl_ClipDistance[0u] = dot(vec4(_473, _480, _487, _494), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_473, _480, _487, _494), vec4(cbInstanceData._m0[_210 + 3u]));
}


