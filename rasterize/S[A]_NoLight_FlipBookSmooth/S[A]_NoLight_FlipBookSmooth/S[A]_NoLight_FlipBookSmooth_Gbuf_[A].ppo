#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _133 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _134 = _133 * NORMAL.x;
    float _135 = _133 * NORMAL.y;
    float _136 = _133 * NORMAL.z;
    float _141;
    float _142;
    float _143;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _141 = (-0.0) - _134;
        _142 = (-0.0) - _135;
        _143 = (-0.0) - _136;
    }
    else
    {
        _141 = _134;
        _142 = _135;
        _143 = _136;
    }
    vec4 _158 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _161 = _158.x;
    float _184 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _161)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _161))) - POSITION_1.w) / cbMtdParam._m0[10u].x;
    float _476 = isnan(0.0) ? _184 : (isnan(_184) ? 0.0 : max(_184, 0.0));
    uint _198 = uint(int(floor(cbMtdParam._m0[10u].y)));
    uint _200 = _198 + 1u;
    uint _201 = uint(int(cbMtdParam._m0[10u].w * cbMtdParam._m0[10u].z));
    float _204 = float(int(_198 - _201 * (_198 / _201)));
    float _208 = float(int(_200 - _201 * (_200 / _201)));
    float _212 = 1.0 / cbMtdParam._m0[10u].z;
    float _213 = 1.0 / cbMtdParam._m0[10u].w;
    float _214 = fract(TEXCOORD_1.x);
    float _215 = fract(TEXCOORD_1.y);
    vec4 _242 = texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_214 + (_204 - cbMtdParam._m0[10u].z * trunc(_204 / cbMtdParam._m0[10u].z))) * _212) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_215 + floor(_204 / cbMtdParam._m0[10u].z)) * _213) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _244 = _242.w;
    float _249 = (cbMtdParam._m0[9u].w * TEXCOORD_1.z) * (((texture(sampler2D(S_A_NoLight_FlipBookSmooth_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((_214 + (_208 - cbMtdParam._m0[10u].z * trunc(_208 / cbMtdParam._m0[10u].z))) * _212) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_215 + floor(_208 / cbMtdParam._m0[10u].z)) * _213) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).w - _244) * fract(cbMtdParam._m0[10u].y)) + _244);
    float _250 = _249 * (isnan(1.0) ? _476 : (isnan(_476) ? 1.0 : min(_476, 1.0)));
    float _251 = gl_FragCoord.x * 0.125;
    float _253 = gl_FragCoord.y * 0.125;
    float _263 = float(_249 >= ((texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_251, _253)).w * 0.9900000095367431640625) + 0.00999999977648258209228515625));
    float _267 = inversesqrt(dot(vec3(_141, _142, _143), vec3(_141, _142, _143)));
    float _487 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    float _268 = isnan(1.0) ? _487 : (isnan(_487) ? 1.0 : min(_487, 1.0));
    uint _270 = uint(roundEven(NORMAL.w));
    float _311 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _321 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _311);
    float _322 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _311);
    float _323 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _311);
    vec4 _324 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(_251, _253));
    float _326 = _324.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _363 = sqrt(((_321 * _321) + (_322 * _322)) + (_323 * _323));
        float _370 = (cbMatDynParam._m0[5u].x * _363) + cbMatDynParam._m0[5u].y;
        float _498 = isnan(0.0) ? _370 : (isnan(_370) ? 0.0 : max(_370, 0.0));
        float _371 = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
        float _375 = (cbMatDynParam._m0[5u].z * _363) + cbMatDynParam._m0[5u].w;
        float _509 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0))) - _371)) + _371) < ((_326 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _410;
    uint _333;
    float _339;
    vec4 _343;
    float _345;
    float _346;
    bool _357;
    for (;;)
    {
        _333 = _270 * 13u;
        _339 = cbInstanceData._m0[_333 + 6u].w * _268;
        float _340 = _326 + (-0.5);
        _343 = cbMtdParam._m0[1u];
        _345 = _343.y * _340;
        _346 = _340 * 0.999000012874603271484375;
        _357 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_357)
        {
            if ((cbInstanceData._m0[_333 + 7u].x + _346) < 0.5)
            {
                _410 = true;
                break;
            }
        }
        uint _399 = (_333 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_399].w < 1.0) && ((cbInstanceData._m0[_399].w + _346) < 0.5))
        {
            _410 = true;
            break;
        }
        if ((_345 + _263) < _343.x)
        {
            _410 = true;
            break;
        }
        _410 = false;
        break;
    }
    if (_410)
    {
        discard_state = true;
    }
    bool _428 = cbMtdParam._m0[1u].z != 0.0;
    float _429 = _428 ? _339 : 0.0;
    SV_Target.x = ((_141 * 0.5) * _267) + 0.500488758087158203125;
    SV_Target.y = ((_142 * 0.5) * _267) + 0.500488758087158203125;
    SV_Target.z = ((_143 * 0.5) * _267) + 0.500488758087158203125;
    SV_Target.w = _429;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _428 ? _339 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _339;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _429;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _429;
    discard_exit();
}


