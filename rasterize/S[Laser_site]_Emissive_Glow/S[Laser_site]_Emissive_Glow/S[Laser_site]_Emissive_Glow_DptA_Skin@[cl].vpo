#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out vec2 TEXCOORD_6;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    float _169 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _171 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _172 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _183 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _193 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _195 = texelFetch(g_InstanceIndexBuffer, int(_193));
    uint _196 = _195.x;
    precise float _197 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _202 = isnan(_197) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _197 : max(0.001000000047497451305389404296875, _197));
    precise float _204 = BLENDWEIGHT.x / _202;
    precise float _205 = BLENDWEIGHT.y / _202;
    precise float _206 = BLENDWEIGHT.z / _202;
    precise float _207 = BLENDWEIGHT.w / _202;
    uvec4 _214 = floatBitsToUint(cbInstanceData._m0[(_196 * 13u) + 4u]);
    uint _215 = _214.x;
    uint _217 = (_215 + uint(float(BLENDINDICES.x))) * 3u;
    uint _224 = _217 + 1u;
    uint _231 = _217 + 2u;
    precise float _238 = _204 * cbObjMatrix._m0[_217].x;
    precise float _239 = _204 * cbObjMatrix._m0[_224].x;
    precise float _240 = _204 * cbObjMatrix._m0[_231].x;
    precise float _241 = _204 * cbObjMatrix._m0[_217].y;
    precise float _242 = _204 * cbObjMatrix._m0[_224].y;
    precise float _243 = _204 * cbObjMatrix._m0[_231].y;
    precise float _244 = _204 * cbObjMatrix._m0[_217].z;
    precise float _245 = _204 * cbObjMatrix._m0[_224].z;
    precise float _246 = _204 * cbObjMatrix._m0[_231].z;
    precise float _247 = _204 * cbObjMatrix._m0[_217].w;
    precise float _248 = _204 * cbObjMatrix._m0[_224].w;
    precise float _249 = _204 * cbObjMatrix._m0[_231].w;
    uint _252 = (_215 + uint(float(BLENDINDICES.y))) * 3u;
    uint _259 = _252 + 1u;
    uint _266 = _252 + 2u;
    precise float _273 = _205 * cbObjMatrix._m0[_252].x;
    precise float _274 = _205 * cbObjMatrix._m0[_259].x;
    precise float _275 = _205 * cbObjMatrix._m0[_266].x;
    precise float _276 = _205 * cbObjMatrix._m0[_252].y;
    precise float _277 = _205 * cbObjMatrix._m0[_259].y;
    precise float _278 = _205 * cbObjMatrix._m0[_266].y;
    precise float _279 = _205 * cbObjMatrix._m0[_252].z;
    precise float _280 = _205 * cbObjMatrix._m0[_259].z;
    precise float _281 = _205 * cbObjMatrix._m0[_266].z;
    precise float _282 = _205 * cbObjMatrix._m0[_252].w;
    precise float _283 = _205 * cbObjMatrix._m0[_259].w;
    precise float _284 = _205 * cbObjMatrix._m0[_266].w;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    precise float _292 = _245 + _280;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    uint _299 = (_215 + uint(float(BLENDINDICES.z))) * 3u;
    uint _306 = _299 + 1u;
    uint _313 = _299 + 2u;
    precise float _320 = _206 * cbObjMatrix._m0[_299].x;
    precise float _321 = _206 * cbObjMatrix._m0[_306].x;
    precise float _322 = _206 * cbObjMatrix._m0[_313].x;
    precise float _323 = _206 * cbObjMatrix._m0[_299].y;
    precise float _324 = _206 * cbObjMatrix._m0[_306].y;
    precise float _325 = _206 * cbObjMatrix._m0[_313].y;
    precise float _326 = _206 * cbObjMatrix._m0[_299].z;
    precise float _327 = _206 * cbObjMatrix._m0[_306].z;
    precise float _328 = _206 * cbObjMatrix._m0[_313].z;
    precise float _329 = _206 * cbObjMatrix._m0[_299].w;
    precise float _330 = _206 * cbObjMatrix._m0[_306].w;
    precise float _331 = _206 * cbObjMatrix._m0[_313].w;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    precise float _339 = _292 + _327;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    uint _346 = (_215 + uint(float(BLENDINDICES.w))) * 3u;
    uint _353 = _346 + 1u;
    uint _360 = _346 + 2u;
    precise float _367 = _207 * cbObjMatrix._m0[_346].x;
    precise float _368 = _207 * cbObjMatrix._m0[_353].x;
    precise float _369 = _207 * cbObjMatrix._m0[_360].x;
    precise float _370 = _207 * cbObjMatrix._m0[_346].y;
    precise float _371 = _207 * cbObjMatrix._m0[_353].y;
    precise float _372 = _207 * cbObjMatrix._m0[_360].y;
    precise float _373 = _207 * cbObjMatrix._m0[_346].z;
    precise float _374 = _207 * cbObjMatrix._m0[_353].z;
    precise float _375 = _207 * cbObjMatrix._m0[_360].z;
    precise float _376 = _207 * cbObjMatrix._m0[_346].w;
    precise float _377 = _207 * cbObjMatrix._m0[_353].w;
    precise float _378 = _207 * cbObjMatrix._m0[_360].w;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = _339 + _374;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = POSITION.x * _379;
    precise float _392 = POSITION.y * _382;
    precise float _393 = _392 + _391;
    precise float _394 = POSITION.z * _385;
    precise float _395 = _394 + _393;
    precise float _396 = 1.0 * _388;
    precise float _397 = _396 + _395;
    precise float _398 = POSITION.x * _380;
    precise float _399 = POSITION.y * _383;
    precise float _400 = _399 + _398;
    precise float _401 = POSITION.z * _386;
    precise float _402 = _401 + _400;
    precise float _403 = 1.0 * _389;
    precise float _404 = _403 + _402;
    precise float _405 = POSITION.x * _381;
    precise float _406 = POSITION.y * _384;
    precise float _407 = _406 + _405;
    precise float _408 = POSITION.z * _387;
    precise float _409 = _408 + _407;
    precise float _410 = 1.0 * _390;
    precise float _411 = _410 + _409;
    precise float _436 = _397 - cbSceneParam._m0[3u].x;
    precise float _437 = _404 - cbSceneParam._m0[3u].y;
    precise float _438 = _411 - cbSceneParam._m0[3u].z;
    precise float _466 = _436 * cbSceneParam._m0[24u].x;
    precise float _467 = _437 * cbSceneParam._m0[24u].y;
    precise float _468 = _467 + _466;
    precise float _469 = _438 * cbSceneParam._m0[24u].z;
    precise float _470 = _469 + _468;
    precise float _471 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _472 = _471 + _470;
    precise float _473 = _436 * cbSceneParam._m0[25u].x;
    precise float _474 = _437 * cbSceneParam._m0[25u].y;
    precise float _475 = _474 + _473;
    precise float _476 = _438 * cbSceneParam._m0[25u].z;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _479 = _478 + _477;
    precise float _480 = _436 * cbSceneParam._m0[26u].x;
    precise float _481 = _437 * cbSceneParam._m0[26u].y;
    precise float _482 = _481 + _480;
    precise float _483 = _438 * cbSceneParam._m0[26u].z;
    precise float _484 = _483 + _482;
    precise float _485 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _486 = _485 + _484;
    precise float _487 = _436 * cbSceneParam._m0[27u].x;
    precise float _488 = _437 * cbSceneParam._m0[27u].y;
    precise float _489 = _488 + _487;
    precise float _490 = _438 * cbSceneParam._m0[27u].z;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _493 = _492 + _491;
    gl_Position.x = _472;
    gl_Position.y = _479;
    gl_Position.z = _486;
    gl_Position.w = _493;
    POSITION_1.x = _472;
    POSITION_1.y = _479;
    POSITION_1.z = _486;
    POSITION_1.w = _493;
    NORMAL_1.x = fma(_172, _385, fma(_171, _382, _379 * _169));
    NORMAL_1.y = fma(_172, _386, fma(_171, _383, _380 * _169));
    NORMAL_1.z = fma(_172, _387, fma(_171, _384, _381 * _169));
    NORMAL_1.w = float(_196);
    TANGENT_1.x = fma(_183, _385, fma(_182, _382, _379 * _181));
    TANGENT_1.y = fma(_183, _386, fma(_182, _383, _380 * _181));
    TANGENT_1.z = fma(_183, _387, fma(_182, _384, _381 * _181));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = COLOR_1.w;
    TEXCOORD_1_1.w = COLOR_1.x;
    TEXCOORD_4 = TEXCOORD_1.x;
    TEXCOORD_6.x = _486;
    TEXCOORD_6.y = _493;
}


