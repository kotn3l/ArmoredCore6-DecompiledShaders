#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_1_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _164 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _166 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _167 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _176 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _177 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _178 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _188 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _190 = texelFetch(g_InstanceIndexBuffer, int(_188));
    uint _191 = _190.x;
    precise float _192 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _197 = isnan(_192) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _192 : max(0.001000000047497451305389404296875, _192));
    precise float _199 = BLENDWEIGHT.x / _197;
    precise float _200 = BLENDWEIGHT.y / _197;
    precise float _201 = BLENDWEIGHT.z / _197;
    precise float _202 = BLENDWEIGHT.w / _197;
    uvec4 _209 = floatBitsToUint(cbInstanceData._m0[(_191 * 13u) + 4u]);
    uint _210 = _209.x;
    uint _212 = (_210 + uint(float(BLENDINDICES.x))) * 3u;
    uint _219 = _212 + 1u;
    uint _226 = _212 + 2u;
    precise float _233 = _199 * cbObjMatrix._m0[_212].x;
    precise float _234 = _199 * cbObjMatrix._m0[_219].x;
    precise float _235 = _199 * cbObjMatrix._m0[_226].x;
    precise float _236 = _199 * cbObjMatrix._m0[_212].y;
    precise float _237 = _199 * cbObjMatrix._m0[_219].y;
    precise float _238 = _199 * cbObjMatrix._m0[_226].y;
    precise float _239 = _199 * cbObjMatrix._m0[_212].z;
    precise float _240 = _199 * cbObjMatrix._m0[_219].z;
    precise float _241 = _199 * cbObjMatrix._m0[_226].z;
    precise float _242 = _199 * cbObjMatrix._m0[_212].w;
    precise float _243 = _199 * cbObjMatrix._m0[_219].w;
    precise float _244 = _199 * cbObjMatrix._m0[_226].w;
    uint _247 = (_210 + uint(float(BLENDINDICES.y))) * 3u;
    uint _254 = _247 + 1u;
    uint _261 = _247 + 2u;
    precise float _268 = _200 * cbObjMatrix._m0[_247].x;
    precise float _269 = _200 * cbObjMatrix._m0[_254].x;
    precise float _270 = _200 * cbObjMatrix._m0[_261].x;
    precise float _271 = _200 * cbObjMatrix._m0[_247].y;
    precise float _272 = _200 * cbObjMatrix._m0[_254].y;
    precise float _273 = _200 * cbObjMatrix._m0[_261].y;
    precise float _274 = _200 * cbObjMatrix._m0[_247].z;
    precise float _275 = _200 * cbObjMatrix._m0[_254].z;
    precise float _276 = _200 * cbObjMatrix._m0[_261].z;
    precise float _277 = _200 * cbObjMatrix._m0[_247].w;
    precise float _278 = _200 * cbObjMatrix._m0[_254].w;
    precise float _279 = _200 * cbObjMatrix._m0[_261].w;
    precise float _280 = _233 + _268;
    precise float _281 = _234 + _269;
    precise float _282 = _235 + _270;
    precise float _283 = _236 + _271;
    precise float _284 = _237 + _272;
    precise float _285 = _238 + _273;
    precise float _286 = _239 + _274;
    precise float _287 = _240 + _275;
    precise float _288 = _241 + _276;
    precise float _289 = _242 + _277;
    precise float _290 = _243 + _278;
    precise float _291 = _244 + _279;
    uint _294 = (_210 + uint(float(BLENDINDICES.z))) * 3u;
    uint _301 = _294 + 1u;
    uint _308 = _294 + 2u;
    precise float _315 = _201 * cbObjMatrix._m0[_294].x;
    precise float _316 = _201 * cbObjMatrix._m0[_301].x;
    precise float _317 = _201 * cbObjMatrix._m0[_308].x;
    precise float _318 = _201 * cbObjMatrix._m0[_294].y;
    precise float _319 = _201 * cbObjMatrix._m0[_301].y;
    precise float _320 = _201 * cbObjMatrix._m0[_308].y;
    precise float _321 = _201 * cbObjMatrix._m0[_294].z;
    precise float _322 = _201 * cbObjMatrix._m0[_301].z;
    precise float _323 = _201 * cbObjMatrix._m0[_308].z;
    precise float _324 = _201 * cbObjMatrix._m0[_294].w;
    precise float _325 = _201 * cbObjMatrix._m0[_301].w;
    precise float _326 = _201 * cbObjMatrix._m0[_308].w;
    precise float _327 = _280 + _315;
    precise float _328 = _281 + _316;
    precise float _329 = _282 + _317;
    precise float _330 = _283 + _318;
    precise float _331 = _284 + _319;
    precise float _332 = _285 + _320;
    precise float _333 = _286 + _321;
    precise float _334 = _287 + _322;
    precise float _335 = _288 + _323;
    precise float _336 = _289 + _324;
    precise float _337 = _290 + _325;
    precise float _338 = _291 + _326;
    uint _341 = (_210 + uint(float(BLENDINDICES.w))) * 3u;
    uint _348 = _341 + 1u;
    uint _355 = _341 + 2u;
    precise float _362 = _202 * cbObjMatrix._m0[_341].x;
    precise float _363 = _202 * cbObjMatrix._m0[_348].x;
    precise float _364 = _202 * cbObjMatrix._m0[_355].x;
    precise float _365 = _202 * cbObjMatrix._m0[_341].y;
    precise float _366 = _202 * cbObjMatrix._m0[_348].y;
    precise float _367 = _202 * cbObjMatrix._m0[_355].y;
    precise float _368 = _202 * cbObjMatrix._m0[_341].z;
    precise float _369 = _202 * cbObjMatrix._m0[_348].z;
    precise float _370 = _202 * cbObjMatrix._m0[_355].z;
    precise float _371 = _202 * cbObjMatrix._m0[_341].w;
    precise float _372 = _202 * cbObjMatrix._m0[_348].w;
    precise float _373 = _202 * cbObjMatrix._m0[_355].w;
    precise float _374 = _327 + _362;
    precise float _375 = _328 + _363;
    precise float _376 = _329 + _364;
    precise float _377 = _330 + _365;
    precise float _378 = _331 + _366;
    precise float _379 = _332 + _367;
    precise float _380 = _333 + _368;
    precise float _381 = _334 + _369;
    precise float _382 = _335 + _370;
    precise float _383 = _336 + _371;
    precise float _384 = _337 + _372;
    precise float _385 = _338 + _373;
    precise float _386 = POSITION.x * _374;
    precise float _387 = POSITION.y * _377;
    precise float _388 = _387 + _386;
    precise float _389 = POSITION.z * _380;
    precise float _390 = _389 + _388;
    precise float _391 = 1.0 * _383;
    precise float _392 = _391 + _390;
    precise float _393 = POSITION.x * _375;
    precise float _394 = POSITION.y * _378;
    precise float _395 = _394 + _393;
    precise float _396 = POSITION.z * _381;
    precise float _397 = _396 + _395;
    precise float _398 = 1.0 * _384;
    precise float _399 = _398 + _397;
    precise float _400 = POSITION.x * _376;
    precise float _401 = POSITION.y * _379;
    precise float _402 = _401 + _400;
    precise float _403 = POSITION.z * _382;
    precise float _404 = _403 + _402;
    precise float _405 = 1.0 * _385;
    precise float _406 = _405 + _404;
    precise float _431 = _392 - cbSceneParam._m0[3u].x;
    precise float _432 = _399 - cbSceneParam._m0[3u].y;
    precise float _433 = _406 - cbSceneParam._m0[3u].z;
    precise float _461 = _431 * cbSceneParam._m0[24u].x;
    precise float _462 = _432 * cbSceneParam._m0[24u].y;
    precise float _463 = _462 + _461;
    precise float _464 = _433 * cbSceneParam._m0[24u].z;
    precise float _465 = _464 + _463;
    precise float _466 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _467 = _466 + _465;
    precise float _468 = _431 * cbSceneParam._m0[25u].x;
    precise float _469 = _432 * cbSceneParam._m0[25u].y;
    precise float _470 = _469 + _468;
    precise float _471 = _433 * cbSceneParam._m0[25u].z;
    precise float _472 = _471 + _470;
    precise float _473 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _474 = _473 + _472;
    precise float _475 = _431 * cbSceneParam._m0[26u].x;
    precise float _476 = _432 * cbSceneParam._m0[26u].y;
    precise float _477 = _476 + _475;
    precise float _478 = _433 * cbSceneParam._m0[26u].z;
    precise float _479 = _478 + _477;
    precise float _480 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _481 = _480 + _479;
    precise float _482 = _431 * cbSceneParam._m0[27u].x;
    precise float _483 = _432 * cbSceneParam._m0[27u].y;
    precise float _484 = _483 + _482;
    precise float _485 = _433 * cbSceneParam._m0[27u].z;
    precise float _486 = _485 + _484;
    precise float _487 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _488 = _487 + _486;
    gl_Position.x = _467;
    gl_Position.y = _474;
    gl_Position.z = _481;
    gl_Position.w = _488;
    POSITION_1.x = _467;
    POSITION_1.y = _474;
    POSITION_1.z = _481;
    POSITION_1.w = _488;
    NORMAL_1.x = fma(_167, _380, fma(_166, _377, _374 * _164));
    NORMAL_1.y = fma(_167, _381, fma(_166, _378, _375 * _164));
    NORMAL_1.z = fma(_167, _382, fma(_166, _379, _376 * _164));
    NORMAL_1.w = float(_191);
    TANGENT_1.x = fma(_178, _380, fma(_177, _377, _374 * _176));
    TANGENT_1.y = fma(_178, _381, fma(_177, _378, _375 * _176));
    TANGENT_1.z = fma(_178, _382, fma(_177, _379, _376 * _176));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = COLOR_1.w;
    TEXCOORD_1_1.w = COLOR_1.x;
    TEXCOORD_4 = TEXCOORD_1.x;
}


