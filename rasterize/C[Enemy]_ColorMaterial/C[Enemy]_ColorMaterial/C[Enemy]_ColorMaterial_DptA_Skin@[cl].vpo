#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 8) in vec4 TEXCOORD_2;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out float TEXCOORD_3;
layout(location = 3, component = 1) out float TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_3_1;
layout(location = 3, component = 2) out float TEXCOORD_6;
layout(location = 3, component = 3) out float TEXCOORD_7;
layout(location = 5) out float TEXCOORD_8;
layout(location = 5, component = 1) out vec2 TEXCOORD_10;
layout(location = 5, component = 3) out float TEXCOORD_14;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_3 = 0.0;
    TEXCOORD_1_1 = 0.0;
    TEXCOORD_3_1.x = 0.0;
    TEXCOORD_3_1.y = 0.0;
    TEXCOORD_3_1.z = 0.0;
    TEXCOORD_3_1.w = 0.0;
    TEXCOORD_6 = 0.0;
    TEXCOORD_7 = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_10.x = 0.0;
    TEXCOORD_10.y = 0.0;
    TEXCOORD_14 = 0.0;
    float _178 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _202 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _204 = texelFetch(g_InstanceIndexBuffer, int(_202));
    uint _205 = _204.x;
    precise float _206 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _211 = isnan(_206) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _206 : max(0.001000000047497451305389404296875, _206));
    precise float _213 = BLENDWEIGHT.x / _211;
    precise float _214 = BLENDWEIGHT.y / _211;
    precise float _215 = BLENDWEIGHT.z / _211;
    precise float _216 = BLENDWEIGHT.w / _211;
    uvec4 _223 = floatBitsToUint(cbInstanceData._m0[(_205 * 13u) + 4u]);
    uint _224 = _223.x;
    uint _226 = (_224 + uint(float(BLENDINDICES.x))) * 3u;
    uint _233 = _226 + 1u;
    uint _240 = _226 + 2u;
    precise float _247 = _213 * cbObjMatrix._m0[_226].x;
    precise float _248 = _213 * cbObjMatrix._m0[_233].x;
    precise float _249 = _213 * cbObjMatrix._m0[_240].x;
    precise float _250 = _213 * cbObjMatrix._m0[_226].y;
    precise float _251 = _213 * cbObjMatrix._m0[_233].y;
    precise float _252 = _213 * cbObjMatrix._m0[_240].y;
    precise float _253 = _213 * cbObjMatrix._m0[_226].z;
    precise float _254 = _213 * cbObjMatrix._m0[_233].z;
    precise float _255 = _213 * cbObjMatrix._m0[_240].z;
    precise float _256 = _213 * cbObjMatrix._m0[_226].w;
    precise float _257 = _213 * cbObjMatrix._m0[_233].w;
    precise float _258 = _213 * cbObjMatrix._m0[_240].w;
    uint _261 = (_224 + uint(float(BLENDINDICES.y))) * 3u;
    uint _268 = _261 + 1u;
    uint _275 = _261 + 2u;
    precise float _282 = _214 * cbObjMatrix._m0[_261].x;
    precise float _283 = _214 * cbObjMatrix._m0[_268].x;
    precise float _284 = _214 * cbObjMatrix._m0[_275].x;
    precise float _285 = _214 * cbObjMatrix._m0[_261].y;
    precise float _286 = _214 * cbObjMatrix._m0[_268].y;
    precise float _287 = _214 * cbObjMatrix._m0[_275].y;
    precise float _288 = _214 * cbObjMatrix._m0[_261].z;
    precise float _289 = _214 * cbObjMatrix._m0[_268].z;
    precise float _290 = _214 * cbObjMatrix._m0[_275].z;
    precise float _291 = _214 * cbObjMatrix._m0[_261].w;
    precise float _292 = _214 * cbObjMatrix._m0[_268].w;
    precise float _293 = _214 * cbObjMatrix._m0[_275].w;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    precise float _305 = _258 + _293;
    uint _308 = (_224 + uint(float(BLENDINDICES.z))) * 3u;
    uint _315 = _308 + 1u;
    uint _322 = _308 + 2u;
    precise float _329 = _215 * cbObjMatrix._m0[_308].x;
    precise float _330 = _215 * cbObjMatrix._m0[_315].x;
    precise float _331 = _215 * cbObjMatrix._m0[_322].x;
    precise float _332 = _215 * cbObjMatrix._m0[_308].y;
    precise float _333 = _215 * cbObjMatrix._m0[_315].y;
    precise float _334 = _215 * cbObjMatrix._m0[_322].y;
    precise float _335 = _215 * cbObjMatrix._m0[_308].z;
    precise float _336 = _215 * cbObjMatrix._m0[_315].z;
    precise float _337 = _215 * cbObjMatrix._m0[_322].z;
    precise float _338 = _215 * cbObjMatrix._m0[_308].w;
    precise float _339 = _215 * cbObjMatrix._m0[_315].w;
    precise float _340 = _215 * cbObjMatrix._m0[_322].w;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    precise float _352 = _305 + _340;
    uint _355 = (_224 + uint(float(BLENDINDICES.w))) * 3u;
    uint _362 = _355 + 1u;
    uint _369 = _355 + 2u;
    precise float _376 = _216 * cbObjMatrix._m0[_355].x;
    precise float _377 = _216 * cbObjMatrix._m0[_362].x;
    precise float _378 = _216 * cbObjMatrix._m0[_369].x;
    precise float _379 = _216 * cbObjMatrix._m0[_355].y;
    precise float _380 = _216 * cbObjMatrix._m0[_362].y;
    precise float _381 = _216 * cbObjMatrix._m0[_369].y;
    precise float _382 = _216 * cbObjMatrix._m0[_355].z;
    precise float _383 = _216 * cbObjMatrix._m0[_362].z;
    precise float _384 = _216 * cbObjMatrix._m0[_369].z;
    precise float _385 = _216 * cbObjMatrix._m0[_355].w;
    precise float _386 = _216 * cbObjMatrix._m0[_362].w;
    precise float _387 = _216 * cbObjMatrix._m0[_369].w;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = _352 + _387;
    precise float _400 = POSITION.x * _388;
    precise float _401 = POSITION.y * _391;
    precise float _402 = _401 + _400;
    precise float _403 = POSITION.z * _394;
    precise float _404 = _403 + _402;
    precise float _405 = 1.0 * _397;
    precise float _406 = _405 + _404;
    precise float _407 = POSITION.x * _389;
    precise float _408 = POSITION.y * _392;
    precise float _409 = _408 + _407;
    precise float _410 = POSITION.z * _395;
    precise float _411 = _410 + _409;
    precise float _412 = 1.0 * _398;
    precise float _413 = _412 + _411;
    precise float _414 = POSITION.x * _390;
    precise float _415 = POSITION.y * _393;
    precise float _416 = _415 + _414;
    precise float _417 = POSITION.z * _396;
    precise float _418 = _417 + _416;
    precise float _419 = 1.0 * _399;
    precise float _420 = _419 + _418;
    float _426 = cbSceneParam._m0[3u].x - _406;
    float _427 = cbSceneParam._m0[3u].y - _413;
    float _428 = cbSceneParam._m0[3u].z - _420;
    precise float _454 = _406 - cbSceneParam._m0[3u].x;
    precise float _455 = _413 - cbSceneParam._m0[3u].y;
    precise float _456 = _420 - cbSceneParam._m0[3u].z;
    precise float _484 = _454 * cbSceneParam._m0[24u].x;
    precise float _485 = _455 * cbSceneParam._m0[24u].y;
    precise float _486 = _485 + _484;
    precise float _487 = _456 * cbSceneParam._m0[24u].z;
    precise float _488 = _487 + _486;
    precise float _489 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _490 = _489 + _488;
    precise float _491 = _454 * cbSceneParam._m0[25u].x;
    precise float _492 = _455 * cbSceneParam._m0[25u].y;
    precise float _493 = _492 + _491;
    precise float _494 = _456 * cbSceneParam._m0[25u].z;
    precise float _495 = _494 + _493;
    precise float _496 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _497 = _496 + _495;
    precise float _498 = _454 * cbSceneParam._m0[26u].x;
    precise float _499 = _455 * cbSceneParam._m0[26u].y;
    precise float _500 = _499 + _498;
    precise float _501 = _456 * cbSceneParam._m0[26u].z;
    precise float _502 = _501 + _500;
    precise float _503 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _504 = _503 + _502;
    precise float _505 = _454 * cbSceneParam._m0[27u].x;
    precise float _506 = _455 * cbSceneParam._m0[27u].y;
    precise float _507 = _506 + _505;
    precise float _508 = _456 * cbSceneParam._m0[27u].z;
    precise float _509 = _508 + _507;
    precise float _510 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _511 = _510 + _509;
    gl_Position.x = _490;
    gl_Position.y = _497;
    gl_Position.z = _504;
    gl_Position.w = _511;
    NORMAL_1.x = fma(_181, _394, fma(_180, _391, _388 * _178));
    NORMAL_1.y = fma(_181, _395, fma(_180, _392, _389 * _178));
    NORMAL_1.z = fma(_181, _396, fma(_180, _393, _390 * _178));
    NORMAL_1.w = float(_205);
    TANGENT_1.x = fma(_192, _394, fma(_191, _391, _388 * _190));
    TANGENT_1.y = fma(_192, _395, fma(_191, _392, _389 * _190));
    TANGENT_1.z = fma(_192, _396, fma(_191, _393, _390 * _190));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_3 = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1 = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_3_1.x = TEXCOORD_1.x;
    TEXCOORD_3_1.y = TEXCOORD_1.y;
    TEXCOORD_3_1.z = TEXCOORD_1.z;
    TEXCOORD_3_1.w = COLOR_1.x;
    TEXCOORD_6 = TEXCOORD_2.x;
    TEXCOORD_7 = TEXCOORD_2.y;
    TEXCOORD_8 = TEXCOORD_2.z;
    TEXCOORD_10.x = _504;
    TEXCOORD_10.y = _511;
    TEXCOORD_14 = sqrt(((_426 * _426) + (_427 * _427)) + (_428 * _428));
}


