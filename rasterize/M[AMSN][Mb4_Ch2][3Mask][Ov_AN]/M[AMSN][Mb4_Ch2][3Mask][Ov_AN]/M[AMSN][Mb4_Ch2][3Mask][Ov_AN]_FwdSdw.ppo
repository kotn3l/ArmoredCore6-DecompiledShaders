#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_4;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_10;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1310;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _232 = _231 * _223;
    float _233 = _231 * _224;
    float _234 = _231 * _225;
    float _244 = ((NORMAL.y * TANGENT_2.z) - (NORMAL.z * TANGENT_2.y)) * TANGENT_2.w;
    float _245 = ((NORMAL.z * TANGENT_2.x) - (NORMAL.x * TANGENT_2.z)) * TANGENT_2.w;
    float _246 = ((NORMAL.x * TANGENT_2.y) - (NORMAL.y * TANGENT_2.x)) * TANGENT_2.w;
    float _250 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _257 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _258 = _257 * NORMAL.x;
    float _259 = _257 * NORMAL.y;
    float _260 = _257 * NORMAL.z;
    float _264 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _265 = _264 * TANGENT.x;
    float _266 = _264 * TANGENT.y;
    float _267 = _264 * TANGENT.z;
    float _271 = inversesqrt(dot(vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z), vec3(TANGENT_2.x, TANGENT_2.y, TANGENT_2.z)));
    float _279;
    float _280;
    float _281;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _279 = (-0.0) - _258;
        _280 = (-0.0) - _259;
        _281 = (-0.0) - _260;
    }
    else
    {
        _279 = _258;
        _280 = _259;
        _281 = _260;
    }
    vec4 _302 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w));
    vec4 _328 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.w) + cbTextureTilingScale._m0[1u].w));
    float _333 = _328.x * cbMtdParam._m0[13u].x;
    float _334 = _328.y * cbMtdParam._m0[13u].y;
    float _335 = _328.z * cbMtdParam._m0[13u].z;
    vec4 _347 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_0, SS_WrapLinear), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _375 = cbMtdParam._m0[15u].y * texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w)).x;
    float _386 = ((cbMtdParam._m0[14u].x * (-1.39999997615814208984375)) * (((1.0 - _347.x) * 2.0) - _375)) + 1.0;
    float _3925 = isnan(0.0) ? _386 : (isnan(_386) ? 0.0 : max(_386, 0.0));
    float _387 = isnan(1.0) ? _3925 : (isnan(_3925) ? 1.0 : min(_3925, 1.0));
    float _394 = (_387 * ((_302.x * cbMtdParam._m0[11u].x) - _333)) + _333;
    float _395 = (_387 * ((_302.y * cbMtdParam._m0[11u].y) - _334)) + _334;
    float _396 = (_387 * ((_302.z * cbMtdParam._m0[11u].z) - _335)) + _335;
    vec4 _413 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_8, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.z) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.w) + cbTextureTilingScale._m0[15u].w));
    float _426 = (((((1.0 - _347.y) * 2.0) - _375) * (-1.39999997615814208984375)) * cbMtdParam._m0[14u].w) + 1.0;
    float _3936 = isnan(0.0) ? _426 : (isnan(_426) ? 0.0 : max(_426, 0.0));
    float _427 = isnan(1.0) ? _3936 : (isnan(_3936) ? 1.0 : min(_3936, 1.0));
    float _434 = (((_413.x * cbMtdParam._m0[9u].x) - _394) * _427) + _394;
    float _435 = (_427 * ((_413.y * cbMtdParam._m0[9u].y) - _395)) + _395;
    float _436 = (_427 * ((_413.z * cbMtdParam._m0[9u].z) - _396)) + _396;
    vec4 _453 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _466 = (((((1.0 - _347.z) * 2.0) - _375) * (-1.39999997615814208984375)) * cbMtdParam._m0[15u].x) + 1.0;
    float _3947 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _467 = isnan(1.0) ? _3947 : (isnan(_3947) ? 1.0 : min(_3947, 1.0));
    vec4 _495 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _503 = ((((((_453.x * cbMtdParam._m0[10u].x) - _434) * _467) + _434) * 4.55000019073486328125) * cbMtdParam._m0[12u].x) * _495.x;
    float _506 = ((((_467 * ((_453.y * cbMtdParam._m0[10u].y) - _435)) + _435) * 4.55000019073486328125) * cbMtdParam._m0[12u].y) * _495.y;
    float _509 = ((((_467 * ((_453.z * cbMtdParam._m0[10u].z) - _436)) + _436) * 4.55000019073486328125) * cbMtdParam._m0[12u].z) * _495.z;
    vec4 _522 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.z) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.w) + cbTextureTilingScale._m0[12u].w));
    float _524 = _522.x;
    float _525 = _522.y;
    float _526 = _522.z;
    vec4 _538 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w));
    float _549 = ((_538.x - _524) * _387) + _524;
    float _550 = ((_538.y - _525) * _387) + _525;
    float _551 = ((_538.z - _526) * _387) + _526;
    vec4 _564 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_15, SS_BumpMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _575 = ((_564.x - _549) * _427) + _549;
    float _576 = ((_564.y - _550) * _427) + _550;
    float _577 = ((_564.z - _551) * _427) + _551;
    vec4 _590 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.z) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.w) + cbTextureTilingScale._m0[8u].w));
    float _603 = ((_590.z - _577) * _467) + _577;
    vec4 _629 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.z) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.w) + cbTextureTilingScale._m0[16u].w));
    float _631 = _629.x;
    float _634 = ((texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_10, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w)).x - _631) * _387) + _631;
    float _652 = ((texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_12, SS_WrapLinear), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w)).x - _634) * _427) + _634;
    vec4 _682 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w));
    float _684 = _682.x;
    float _3958 = isnan(0.0) ? cbMtdParam._m0[14u].y : (isnan(cbMtdParam._m0[14u].y) ? 0.0 : max(cbMtdParam._m0[14u].y, 0.0));
    float _688 = (((((texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_14, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w)).x - _652) * _467) + _652) - _684) * (isnan(1.0) ? _3958 : (isnan(_3958) ? 1.0 : min(_3958, 1.0)))) + _684;
    float _691 = ((((_590.x - _575) * _467) + _575) * 2.0) + (-1.0);
    float _693 = ((((_590.y - _576) * _467) + _576) * 2.0) + (-1.0);
    float _694 = dot(vec2(_691, _693), vec2(_691, _693));
    float _3969 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _699 = sqrt(1.0 - (isnan(1.0) ? _3969 : (isnan(_3969) ? 1.0 : min(_3969, 1.0))));
    float _702 = fma(_699, _279, fma(_693, _271 * TANGENT_2.x, (_250 * _244) * _691));
    float _705 = fma(_699, _280, fma(_693, _271 * TANGENT_2.y, (_250 * _245) * _691));
    float _708 = fma(_699, _281, fma(_693, _271 * TANGENT_2.z, (_250 * _246) * _691));
    float _712 = inversesqrt(dot(vec3(_702, _705, _708), vec3(_702, _705, _708)));
    float _713 = _712 * _702;
    float _714 = _712 * _705;
    float _715 = _712 * _708;
    float _718 = fma(_715, _234, fma(_714, _233, _713 * _232));
    float _721 = fma(_715, _267, fma(_714, _266, _713 * _265));
    float _724 = fma(_715, _281, fma(_714, _280, _713 * _279));
    float _728 = inversesqrt(dot(vec3(_718, _721, _724), vec3(_718, _721, _724)));
    float _731 = _728 * _724;
    vec4 _744 = texture(sampler2D(M_AMSN_Mb4_Ch2_3Mask_Ov_AN_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.x) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.y) + cbTextureTilingScale._m0[14u].w));
    float _754 = (((_744.x * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z) + (_728 * _718);
    float _755 = (((_744.y * 2.0) + (-1.0)) * cbMtdParam._m0[14u].z) + (_728 * _721);
    float _758 = fma(_731, _279, fma(_755, _265, _754 * _232));
    float _761 = fma(_731, _280, fma(_755, _266, _754 * _233));
    float _764 = fma(_731, _281, fma(_755, _267, _754 * _234));
    float _768 = inversesqrt(dot(vec3(_758, _761, _764), vec3(_758, _761, _764)));
    float _769 = _768 * _758;
    float _770 = _768 * _761;
    float _771 = _768 * _764;
    float _3980 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _772 = isnan(1.0) ? _3980 : (isnan(_3980) ? 1.0 : min(_3980, 1.0));
    float _3991 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _4002 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _4013 = isnan(0.0) ? _509 : (isnan(_509) ? 0.0 : max(_509, 0.0));
    float _4024 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _776 = isnan(1.0) ? _4024 : (isnan(_4024) ? 1.0 : min(_4024, 1.0));
    float _792 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _832 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _842 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _832);
    float _843 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _832);
    float _844 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _832);
    float _848 = inversesqrt(dot(vec3(_842, _843, _844), vec3(_842, _843, _844)));
    float _849 = _842 * _848;
    float _850 = _843 * _848;
    float _851 = _844 * _848;
    float _857 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _858 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _876 = fma(_771, cbSceneParam._m0[5u].z, fma(_770, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _769));
    float _879 = fma(_771, cbSceneParam._m0[6u].z, fma(_770, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _769));
    float _882 = fma(_771, cbSceneParam._m0[7u].z, fma(_770, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _769));
    uint _895 = uint(roundEven(NORMAL.w)) * 13u;
    uint _897 = (_895 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _903 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3991 : (isnan(_3991) ? 1.0 : min(_3991, 1.0)))) * cbInstanceData._m0[_897].x;
    float _904 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4002 : (isnan(_4002) ? 1.0 : min(_4002, 1.0)))) * cbInstanceData._m0[_897].y;
    float _905 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4013 : (isnan(_4013) ? 1.0 : min(_4013, 1.0)))) * cbInstanceData._m0[_897].z;
    float _4035 = isnan(0.0) ? _903 : (isnan(_903) ? 0.0 : max(_903, 0.0));
    float _906 = isnan(1.0) ? _4035 : (isnan(_4035) ? 1.0 : min(_4035, 1.0));
    float _4046 = isnan(0.0) ? _904 : (isnan(_904) ? 0.0 : max(_904, 0.0));
    float _907 = isnan(1.0) ? _4046 : (isnan(_4046) ? 1.0 : min(_4046, 1.0));
    float _4057 = isnan(0.0) ? _905 : (isnan(_905) ? 0.0 : max(_905, 0.0));
    float _908 = isnan(1.0) ? _4057 : (isnan(_4057) ? 1.0 : min(_4057, 1.0));
    float _909 = 1.0 - _776;
    float _910 = _906 * _909;
    float _911 = _907 * _909;
    float _912 = _908 * _909;
    float _917 = (_906 + (-0.039999999105930328369140625)) * _776;
    float _918 = (_907 + (-0.039999999105930328369140625)) * _776;
    float _919 = (_908 + (-0.039999999105930328369140625)) * _776;
    float _920 = _917 + 0.039999999105930328369140625;
    float _922 = _918 + 0.039999999105930328369140625;
    float _923 = _919 + 0.039999999105930328369140625;
    vec4 _932 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _857, cbSceneParam._m0[86u].y * _858));
    float _935 = _932.x * TEXCOORD_4;
    float _936 = dot(vec3(_769, _770, _771), vec3(_849, _850, _851));
    float _939 = _936 * 2.0;
    float _943 = (_939 * _769) - _849;
    float _944 = (_939 * _770) - _850;
    float _945 = (_939 * _771) - _851;
    float _949 = abs(dot(vec3(_849, _850, _851), vec3(_769, _770, _771)));
    float _4068 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _951 = sqrt(_772);
    float _964 = exp2((_951 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4068 : (isnan(_4068) ? 1.0 : min(_4068, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_951 * 3.0));
    float _970 = (1.0 - _964) * ((_951 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _971 = _964 * _951;
    float _999 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1003 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1309;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    float _1324;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1034 = fma(_1007, cbModelParam._m0[26u].z, fma(_1003, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _999));
        float _1038 = fma(_1007, cbModelParam._m0[27u].z, fma(_1003, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _999));
        float _1042 = fma(_1007, cbModelParam._m0[28u].z, fma(_1003, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _999));
        float _1067 = _999 + _769;
        float _1068 = _1003 + _770;
        float _1069 = _1007 + _771;
        float _1079 = fma(_1069, cbModelParam._m0[26u].z, fma(_1068, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1067)) - _1034;
        float _1080 = fma(_1069, cbModelParam._m0[27u].z, fma(_1068, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1067)) - _1038;
        float _1081 = fma(_1069, cbModelParam._m0[28u].z, fma(_1068, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1067)) - _1042;
        float _1085 = inversesqrt(dot(vec3(_1079, _1080, _1081), vec3(_1079, _1080, _1081)));
        float _1098 = ((_1085 * _1079) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1034 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1099 = ((_1085 * _1080) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1038 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1100 = ((_1085 * _1081) / cbModelParam._m0[34u].z) + ((((((_1042 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1103 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1110 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1117 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        vec4 _1124 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1098, _1099, _1100), 0.0);
        float _1137 = exp2((_1103.w + (-0.5)) * 20.0) * 2.0;
        float _1138 = _1137 * (_1103.x + (-0.5));
        float _1139 = _1137 * (_1103.y + (-0.5));
        float _1140 = _1137 * (_1103.z + (-0.5));
        float _1147 = exp2((_1110.w + (-0.5)) * 20.0) * 2.0;
        float _1148 = _1147 * (_1110.x + (-0.5));
        float _1149 = _1147 * (_1110.y + (-0.5));
        float _1150 = _1147 * (_1110.z + (-0.5));
        float _1157 = exp2((_1117.w + (-0.5)) * 20.0) * 2.0;
        float _1158 = _1157 * (_1117.x + (-0.5));
        float _1159 = _1157 * (_1117.y + (-0.5));
        float _1160 = _1157 * (_1117.z + (-0.5));
        float _1167 = exp2((_1124.w + (-0.5)) * 20.0) * 2.0;
        float _1168 = _1167 * (_1124.x + (-0.5));
        float _1169 = _1167 * (_1124.y + (-0.5));
        float _1170 = _1167 * (_1124.z + (-0.5));
        float _1171 = isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0));
        float _1172 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1173 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1174 = _1138 * 0.5;
        float _1175 = _1148 * 0.5;
        float _1176 = _1158 * 0.5;
        float _1177 = dot(vec3(_1174, _1175, _1176), vec3(_1174, _1175, _1176));
        float _1182 = (_1177 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1177);
        float _1191 = (dot(vec3(_769, _770, _771), vec3(_1182 * _1174, _1182 * _1175, _1182 * _1176)) + 1.0) * 0.5;
        float _4094 = isnan(0.0) ? _1191 : (isnan(_1191) ? 0.0 : max(_1191, 0.0));
        float _1201 = sqrt(((_1175 * _1175) + (_1174 * _1174)) + (_1176 * _1176)) / (_1171 + 9.9999997473787516355514526367188e-06);
        float _4105 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _4105 : (isnan(_4105) ? 1.0 : min(_4105, 1.0));
        float _1203 = _1202 * 2.0;
        float _1207 = (1.0 - _1202) / (_1202 + 1.0);
        float _4116 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1208 = isnan(1.0) ? _4116 : (isnan(_4116) ? 1.0 : min(_4116, 1.0));
        float _1217 = ((((1.0 - _1208) * (_1203 + 2.0)) * exp2(log2(isnan(1.0) ? _4094 : (isnan(_4094) ? 1.0 : min(_4094, 1.0))) * (_1203 + 1.0))) + _1208) * _1171;
        float _1218 = _1139 * 0.5;
        float _1219 = _1149 * 0.5;
        float _1220 = _1159 * 0.5;
        float _1221 = dot(vec3(_1218, _1219, _1220), vec3(_1218, _1219, _1220));
        float _1226 = (_1221 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1221);
        float _1234 = (dot(vec3(_769, _770, _771), vec3(_1226 * _1218, _1226 * _1219, _1226 * _1220)) + 1.0) * 0.5;
        float _4127 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1243 = sqrt(((_1219 * _1219) + (_1218 * _1218)) + (_1220 * _1220)) / (_1172 + 9.9999997473787516355514526367188e-06);
        float _4138 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0));
        float _1245 = _1244 * 2.0;
        float _1249 = (1.0 - _1244) / (_1244 + 1.0);
        float _4149 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1250 = isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0));
        float _1259 = ((((1.0 - _1250) * (_1245 + 2.0)) * exp2(log2(isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0))) * (_1245 + 1.0))) + _1250) * _1172;
        float _1260 = _1140 * 0.5;
        float _1261 = _1150 * 0.5;
        float _1262 = _1160 * 0.5;
        float _1263 = dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262));
        float _1268 = (_1263 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1263);
        float _1276 = (dot(vec3(_769, _770, _771), vec3(_1268 * _1260, _1268 * _1261, _1268 * _1262)) + 1.0) * 0.5;
        float _4160 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1285 = sqrt(((_1261 * _1261) + (_1260 * _1260)) + (_1262 * _1262)) / (_1173 + 9.9999997473787516355514526367188e-06);
        float _4171 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1286 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
        float _1287 = _1286 * 2.0;
        float _1291 = (1.0 - _1286) / (_1286 + 1.0);
        float _4182 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1292 = isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0));
        float _1301 = ((((1.0 - _1292) * (_1287 + 2.0)) * exp2(log2(isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0))) * (_1287 + 1.0))) + _1292) * _1173;
        _1309 = _1140;
        _1311 = _1139;
        _1312 = _1138;
        _1313 = _1150;
        _1314 = _1149;
        _1315 = _1148;
        _1316 = _1160;
        _1317 = _1159;
        _1318 = _1158;
        _1319 = _1173;
        _1320 = _1172;
        _1321 = _1171;
        _1322 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0)));
        _1323 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0)));
        _1324 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0)));
    }
    else
    {
        _1309 = _1310;
        _1311 = _1310;
        _1312 = _1310;
        _1313 = _1310;
        _1314 = _1310;
        _1315 = _1310;
        _1316 = _1310;
        _1317 = _1310;
        _1318 = _1310;
        _1319 = _1310;
        _1320 = _1310;
        _1321 = _1310;
        _1322 = 0.0;
        _1323 = 0.0;
        _1324 = 0.0;
    }
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    float _1628;
    float _1629;
    float _1630;
    float _1631;
    float _1632;
    float _1633;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1350 = fma(_1007, cbModelParam._m0[30u].z, fma(_1003, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _999));
        float _1354 = fma(_1007, cbModelParam._m0[31u].z, fma(_1003, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _999));
        float _1358 = fma(_1007, cbModelParam._m0[32u].z, fma(_1003, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _999));
        float _1381 = _999 + _769;
        float _1382 = _1003 + _770;
        float _1383 = _1007 + _771;
        float _1393 = fma(_1383, cbModelParam._m0[30u].z, fma(_1382, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1381)) - _1350;
        float _1394 = fma(_1383, cbModelParam._m0[31u].z, fma(_1382, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1381)) - _1354;
        float _1395 = fma(_1383, cbModelParam._m0[32u].z, fma(_1382, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1381)) - _1358;
        float _1399 = inversesqrt(dot(vec3(_1393, _1394, _1395), vec3(_1393, _1394, _1395)));
        float _1412 = ((_1399 * _1393) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1350 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1413 = ((_1399 * _1394) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1354 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1414 = ((_1399 * _1395) / cbModelParam._m0[35u].z) + ((((((_1358 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1416 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1412, _1413, _1414), 0.0);
        vec4 _1423 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1412, _1413, _1414), 0.0);
        vec4 _1430 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1412, _1413, _1414), 0.0);
        vec4 _1437 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1412, _1413, _1414), 0.0);
        float _1449 = exp2((_1416.w + (-0.5)) * 20.0) * 2.0;
        float _1450 = _1449 * (_1416.x + (-0.5));
        float _1451 = _1449 * (_1416.y + (-0.5));
        float _1452 = _1449 * (_1416.z + (-0.5));
        float _1459 = exp2((_1423.w + (-0.5)) * 20.0) * 2.0;
        float _1460 = _1459 * (_1423.x + (-0.5));
        float _1461 = _1459 * (_1423.y + (-0.5));
        float _1462 = _1459 * (_1423.z + (-0.5));
        float _1469 = exp2((_1430.w + (-0.5)) * 20.0) * 2.0;
        float _1470 = _1469 * (_1430.x + (-0.5));
        float _1471 = _1469 * (_1430.y + (-0.5));
        float _1472 = _1469 * (_1430.z + (-0.5));
        float _1479 = exp2((_1437.w + (-0.5)) * 20.0) * 2.0;
        float _1480 = _1479 * (_1437.x + (-0.5));
        float _1481 = _1479 * (_1437.y + (-0.5));
        float _1482 = _1479 * (_1437.z + (-0.5));
        float _1483 = isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0));
        float _1484 = isnan(0.0) ? _1481 : (isnan(_1481) ? 0.0 : max(_1481, 0.0));
        float _1485 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1486 = _1450 * 0.5;
        float _1487 = _1460 * 0.5;
        float _1488 = _1470 * 0.5;
        float _1489 = dot(vec3(_1486, _1487, _1488), vec3(_1486, _1487, _1488));
        float _1494 = (_1489 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1489);
        float _1502 = (dot(vec3(_769, _770, _771), vec3(_1494 * _1486, _1494 * _1487, _1494 * _1488)) + 1.0) * 0.5;
        float _4223 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1511 = sqrt(((_1487 * _1487) + (_1486 * _1486)) + (_1488 * _1488)) / (_1483 + 9.9999997473787516355514526367188e-06);
        float _4234 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4234 : (isnan(_4234) ? 1.0 : min(_4234, 1.0));
        float _1513 = _1512 * 2.0;
        float _1517 = (1.0 - _1512) / (_1512 + 1.0);
        float _4245 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
        float _1518 = isnan(1.0) ? _4245 : (isnan(_4245) ? 1.0 : min(_4245, 1.0));
        float _1527 = ((((1.0 - _1518) * (_1513 + 2.0)) * exp2(log2(isnan(1.0) ? _4223 : (isnan(_4223) ? 1.0 : min(_4223, 1.0))) * (_1513 + 1.0))) + _1518) * _1483;
        float _1528 = _1451 * 0.5;
        float _1529 = _1461 * 0.5;
        float _1530 = _1471 * 0.5;
        float _1531 = dot(vec3(_1528, _1529, _1530), vec3(_1528, _1529, _1530));
        float _1536 = (_1531 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1531);
        float _1544 = (dot(vec3(_769, _770, _771), vec3(_1536 * _1528, _1536 * _1529, _1536 * _1530)) + 1.0) * 0.5;
        float _4256 = isnan(0.0) ? _1544 : (isnan(_1544) ? 0.0 : max(_1544, 0.0));
        float _1553 = sqrt(((_1529 * _1529) + (_1528 * _1528)) + (_1530 * _1530)) / (_1484 + 9.9999997473787516355514526367188e-06);
        float _4267 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _4267 : (isnan(_4267) ? 1.0 : min(_4267, 1.0));
        float _1555 = _1554 * 2.0;
        float _1559 = (1.0 - _1554) / (_1554 + 1.0);
        float _4278 = isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0));
        float _1560 = isnan(1.0) ? _4278 : (isnan(_4278) ? 1.0 : min(_4278, 1.0));
        float _1569 = ((((1.0 - _1560) * (_1555 + 2.0)) * exp2(log2(isnan(1.0) ? _4256 : (isnan(_4256) ? 1.0 : min(_4256, 1.0))) * (_1555 + 1.0))) + _1560) * _1484;
        float _1570 = _1452 * 0.5;
        float _1571 = _1462 * 0.5;
        float _1572 = _1472 * 0.5;
        float _1573 = dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572));
        float _1578 = (_1573 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1573);
        float _1586 = (dot(vec3(_769, _770, _771), vec3(_1578 * _1570, _1578 * _1571, _1578 * _1572)) + 1.0) * 0.5;
        float _4289 = isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0));
        float _1595 = sqrt(((_1571 * _1571) + (_1570 * _1570)) + (_1572 * _1572)) / (_1485 + 9.9999997473787516355514526367188e-06);
        float _4300 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4300 : (isnan(_4300) ? 1.0 : min(_4300, 1.0));
        float _1597 = _1596 * 2.0;
        float _1601 = (1.0 - _1596) / (_1596 + 1.0);
        float _4311 = isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0));
        float _1602 = isnan(1.0) ? _4311 : (isnan(_4311) ? 1.0 : min(_4311, 1.0));
        float _1611 = ((((1.0 - _1602) * (_1597 + 2.0)) * exp2(log2(isnan(1.0) ? _4289 : (isnan(_4289) ? 1.0 : min(_4289, 1.0))) * (_1597 + 1.0))) + _1602) * _1485;
        _1619 = _1452;
        _1620 = _1451;
        _1621 = _1450;
        _1622 = _1462;
        _1623 = _1461;
        _1624 = _1460;
        _1625 = _1472;
        _1626 = _1471;
        _1627 = _1470;
        _1628 = _1485;
        _1629 = _1484;
        _1630 = _1483;
        _1631 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1527 : (isnan(_1527) ? 0.0 : max(_1527, 0.0)));
        _1632 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1569 : (isnan(_1569) ? 0.0 : max(_1569, 0.0)));
        _1633 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0)));
    }
    else
    {
        _1619 = _1310;
        _1620 = _1310;
        _1621 = _1310;
        _1622 = _1310;
        _1623 = _1310;
        _1624 = _1310;
        _1625 = _1310;
        _1626 = _1310;
        _1627 = _1310;
        _1628 = _1310;
        _1629 = _1310;
        _1630 = _1310;
        _1631 = 0.0;
        _1632 = 0.0;
        _1633 = 0.0;
    }
    float _1643 = (cbModelParam._m0[1u].x * (_1631 - _1322)) + _1322;
    float _1644 = (cbModelParam._m0[1u].x * (_1632 - _1323)) + _1323;
    float _1645 = (cbModelParam._m0[1u].x * (_1633 - _1324)) + _1324;
    float _1666 = fma(_1645, cbSceneParam._m0[89u].z, fma(_1644, cbSceneParam._m0[89u].y, _1643 * cbSceneParam._m0[89u].x));
    float _1669 = fma(_1645, cbSceneParam._m0[90u].z, fma(_1644, cbSceneParam._m0[90u].y, _1643 * cbSceneParam._m0[90u].x));
    float _1672 = fma(_1645, cbSceneParam._m0[91u].z, fma(_1644, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1643));
    float _1687 = _943 * 0.5;
    float _1688 = _944 * 0.5;
    float _1689 = _945 * 0.5;
    float _1690 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1621, _1624, _1627, _1630));
    float _1693 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1620, _1623, _1626, _1629));
    float _1696 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1619, _1622, _1625, _1628));
    float _1730;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1703 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1309, _1313, _1316, _1319));
        float _1707 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1311, _1314, _1317, _1320));
        float _1711 = dot(vec4(_1687, _1688, _1689, 1.0), vec4(_1312, _1315, _1318, _1321));
        float _1718 = dot(vec4(cbModelParam._m0[39u]), vec4(_1687, _1688, _1689, 1.0));
        _1730 = dot(vec3(isnan(0.0) ? _1711 : (isnan(_1711) ? 0.0 : max(_1711, 0.0)), isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)), isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1718) ? 0.0 : (isnan(0.0) ? _1718 : max(0.0, _1718))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1730 = 1.0;
    }
    float _1741;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1732 = dot(vec4(cbModelParam._m0[40u]), vec4(_1687, _1688, _1689, 1.0));
        _1741 = dot(vec3(isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0)), isnan(0.0) ? _1693 : (isnan(_1693) ? 0.0 : max(_1693, 0.0)), isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1732) ? 0.0 : (isnan(0.0) ? _1732 : max(0.0, _1732))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1741 = 1.0;
    }
    float _1745 = (_1741 * cbModelParam._m0[1u].x) + (_1730 * (1.0 - cbModelParam._m0[1u].x));
    float _1755 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _772);
    float _1756 = isnan(_1755) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1755 : min(cbModelParam._m0[25u].z, _1755));
    float _1836;
    float _1838;
    float _1840;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1803 = fma(_1007, cbModelParam._m0[13u].z, fma(_1003, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _999)) + cbModelParam._m0[13u].w;
        float _1807 = fma(_1007, cbModelParam._m0[14u].z, fma(_1003, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _999)) + cbModelParam._m0[14u].w;
        float _1811 = fma(_1007, cbModelParam._m0[15u].z, fma(_1003, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _999)) + cbModelParam._m0[15u].w;
        float _1814 = fma(_945, cbModelParam._m0[13u].z, fma(_944, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _943));
        float _1817 = fma(_945, cbModelParam._m0[14u].z, fma(_944, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _943));
        float _1820 = fma(_945, cbModelParam._m0[15u].z, fma(_944, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _943));
        float _1848;
        if (_1814 > 0.0)
        {
            _1848 = abs((1.0 - _1803) / _1814);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1803 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1848 = frontier_phi_16_14_ladder;
        }
        float _2023;
        if (_1817 > 0.0)
        {
            _2023 = abs((1.0 - _1807) / _1817);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1817 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1807 + 1.0) / _1817);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2023 = frontier_phi_25_21_ladder;
        }
        float _2318;
        if (_1820 > 0.0)
        {
            _2318 = abs((1.0 - _1811) / _1820);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1820 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1811 + 1.0) / _1820);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2318 = frontier_phi_37_32_ladder;
        }
        float _2320 = isnan(_2023) ? _1848 : (isnan(_1848) ? _2023 : min(_1848, _2023));
        float _2321 = isnan(_2318) ? _2320 : (isnan(_2320) ? _2318 : min(_2320, _2318));
        float _2325 = (_2321 * _1814) + _1803;
        float _2326 = (_2321 * _1817) + _1807;
        float _2327 = (_2321 * _1820) + _1811;
        float _2328 = _2321 * 9.9999997473787516355514526367188e-05;
        float _2330 = (-1.0) - _2328;
        float _2332 = _2328 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2327 > _2332) || ((_2327 < _2330) || ((_2326 > _2332) || ((_2326 < _2330) || ((_2325 < _2330) || (_2325 > _2332))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2472 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2327, cbModelParam._m0[9u].z, fma(_2326, cbModelParam._m0[9u].y, _2325 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2327, cbModelParam._m0[10u].z, fma(_2326, cbModelParam._m0[10u].y, _2325 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2327, cbModelParam._m0[11u].z, fma(_2326, cbModelParam._m0[11u].y, _2325 * cbModelParam._m0[11u].x))), _1756);
            frontier_phi_15_37_ladder = _2472.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2472.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2472.z * cbModelParam._m0[1u].y;
        }
        _1836 = frontier_phi_15_37_ladder_1;
        _1838 = frontier_phi_15_37_ladder;
        _1840 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1824 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_943, _944, _945), _1756);
        _1836 = _1824.x * cbModelParam._m0[1u].y;
        _1838 = _1824.y * cbModelParam._m0[1u].y;
        _1840 = _1824.z * cbModelParam._m0[1u].y;
    }
    float _1844 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _772);
    float _1845 = isnan(_1844) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1844 : min(cbModelParam._m0[25u].w, _1844));
    float _1938;
    float _1940;
    float _1942;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1902 = fma(_1007, cbModelParam._m0[21u].z, fma(_1003, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _999)) + cbModelParam._m0[21u].w;
        float _1906 = fma(_1007, cbModelParam._m0[22u].z, fma(_1003, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _999)) + cbModelParam._m0[22u].w;
        float _1910 = fma(_1007, cbModelParam._m0[23u].z, fma(_1003, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _999)) + cbModelParam._m0[23u].w;
        float _1913 = fma(_945, cbModelParam._m0[21u].z, fma(_944, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _943));
        float _1916 = fma(_945, cbModelParam._m0[22u].z, fma(_944, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _943));
        float _1919 = fma(_945, cbModelParam._m0[23u].z, fma(_944, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _943));
        float _2028;
        if (_1913 > 0.0)
        {
            _2028 = abs((1.0 - _1902) / _1913);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1913 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1902 + 1.0) / _1913);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2028 = frontier_phi_27_23_ladder;
        }
        float _2345;
        if (_1916 > 0.0)
        {
            _2345 = abs((1.0 - _1906) / _1916);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1916 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1906 + 1.0) / _1916);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2345 = frontier_phi_39_34_ladder;
        }
        float _2683;
        if (_1919 > 0.0)
        {
            _2683 = abs((1.0 - _1910) / _1919);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1919 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1910 + 1.0) / _1919);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2683 = frontier_phi_49_46_ladder;
        }
        float _2685 = isnan(_2345) ? _2028 : (isnan(_2028) ? _2345 : min(_2028, _2345));
        float _2686 = isnan(_2683) ? _2685 : (isnan(_2685) ? _2683 : min(_2685, _2683));
        float _2690 = (_2686 * _1913) + _1902;
        float _2691 = (_2686 * _1916) + _1906;
        float _2692 = (_2686 * _1919) + _1910;
        float _2693 = _2686 * 9.9999997473787516355514526367188e-05;
        float _2694 = (-1.0) - _2693;
        float _2696 = _2693 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2692 > _2696) || ((_2692 < _2694) || ((_2691 > _2696) || ((_2691 < _2694) || ((_2690 < _2694) || (_2690 > _2696))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2814 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2692, cbModelParam._m0[17u].z, fma(_2691, cbModelParam._m0[17u].y, _2690 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2692, cbModelParam._m0[18u].z, fma(_2691, cbModelParam._m0[18u].y, _2690 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2692, cbModelParam._m0[19u].z, fma(_2691, cbModelParam._m0[19u].y, _2690 * cbModelParam._m0[19u].x))), _1845);
            frontier_phi_24_49_ladder = _2814.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2814.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2814.x * cbModelParam._m0[1u].z;
        }
        _1938 = frontier_phi_24_49_ladder_2;
        _1940 = frontier_phi_24_49_ladder_1;
        _1942 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1922 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_943, _944, _945), _1845);
        _1938 = _1922.x * cbModelParam._m0[1u].z;
        _1940 = _1922.y * cbModelParam._m0[1u].z;
        _1942 = _1922.z * cbModelParam._m0[1u].z;
    }
    float _1955 = (((_970 * _920) + _971) * _935) * ((cbModelParam._m0[1u].w * (_1938 - _1836)) + _1836);
    float _1957 = (((_970 * _922) + _971) * _935) * ((cbModelParam._m0[1u].w * (_1940 - _1838)) + _1838);
    float _1959 = (((_970 * _923) + _971) * _935) * ((cbModelParam._m0[1u].w * (_1942 - _1840)) + _1840);
    float _1962 = fma(_1959, cbSceneParam._m0[89u].z, fma(_1957, cbSceneParam._m0[89u].y, _1955 * cbSceneParam._m0[89u].x));
    float _1965 = fma(_1959, cbSceneParam._m0[90u].z, fma(_1957, cbSceneParam._m0[90u].y, _1955 * cbSceneParam._m0[90u].x));
    float _1968 = fma(_1959, cbSceneParam._m0[91u].z, fma(_1957, cbSceneParam._m0[91u].y, _1955 * cbSceneParam._m0[91u].x));
    float _2002 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2006 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2010 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2014 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2015 = _2002 / _2014;
    float _2016 = _2006 / _2014;
    float _2017 = _2010 / _2014;
    float _2164;
    float _2165;
    float _2166;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2044 = ((uint(_2017 > cbSceneParam._m0[59u].y) + uint(_2017 > cbSceneParam._m0[59u].x)) + uint(_2017 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2045 = _2044 + 43u;
        uint _2053 = _2044 + 44u;
        uint _2061 = _2044 + 45u;
        uint _2069 = _2044 + 46u;
        float _2080 = fma(_2014, cbSceneParam._m0[_2045].w, fma(_2010, cbSceneParam._m0[_2045].z, fma(_2006, cbSceneParam._m0[_2045].y, _2002 * cbSceneParam._m0[_2045].x)));
        float _2084 = fma(_2014, cbSceneParam._m0[_2053].w, fma(_2010, cbSceneParam._m0[_2053].z, fma(_2006, cbSceneParam._m0[_2053].y, _2002 * cbSceneParam._m0[_2053].x)));
        float _2092 = fma(_2014, cbSceneParam._m0[_2069].w, fma(_2010, cbSceneParam._m0[_2069].z, fma(_2006, cbSceneParam._m0[_2069].y, _2002 * cbSceneParam._m0[_2069].x)));
        float _2097 = cbSceneParam._m0[33u].z * _2092;
        float _2099 = cbSceneParam._m0[33u].w * _2092;
        float _2102 = fma(_2014, cbSceneParam._m0[_2061].w, fma(_2010, cbSceneParam._m0[_2061].z, fma(_2006, cbSceneParam._m0[_2061].y, _2002 * cbSceneParam._m0[_2061].x))) / _2092;
        float _2150 = (cbSceneParam._m0[33u].x - sqrt(((_2016 * _2016) + (_2015 * _2015)) + (_2017 * _2017))) * cbSceneParam._m0[33u].y;
        float _4437 = isnan(0.0) ? _2150 : (isnan(_2150) ? 0.0 : max(_2150, 0.0));
        float _2157 = (isnan(1.0) ? _4437 : (isnan(_4437) ? 1.0 : min(_4437, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2097 + _2080) / _2092, (_2099 + _2084) / _2092), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2099 + _2080) / _2092, (_2084 - _2097) / _2092), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2080 - _2097) / _2092, (_2084 - _2099) / _2092), _2102), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2080 - _2099) / _2092, (_2097 + _2084) / _2092), _2102), 0.0)).x), vec4(0.25)));
        _2164 = 1.0 - (_2157 * cbSceneParam._m0[34u].x);
        _2165 = 1.0 - (_2157 * cbSceneParam._m0[34u].y);
        _2166 = 1.0 - (_2157 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2164 = 1.0;
        _2165 = 1.0;
        _2166 = 1.0;
    }
    float _2230;
    float _2232;
    float _2234;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2218 = fma(_2014, cbSceneParam._m0[63u].w, fma(_2010, cbSceneParam._m0[63u].z, fma(_2006, cbSceneParam._m0[63u].y, _2002 * cbSceneParam._m0[63u].x)));
        float _2219 = fma(_2014, cbSceneParam._m0[60u].w, fma(_2010, cbSceneParam._m0[60u].z, fma(_2006, cbSceneParam._m0[60u].y, _2002 * cbSceneParam._m0[60u].x))) / _2218;
        float _2220 = fma(_2014, cbSceneParam._m0[61u].w, fma(_2010, cbSceneParam._m0[61u].z, fma(_2006, cbSceneParam._m0[61u].y, _2002 * cbSceneParam._m0[61u].x))) / _2218;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2219 >= cbSceneParam._m0[64u].x) && (_2220 >= cbSceneParam._m0[64u].y)) && (_2219 <= cbSceneParam._m0[64u].z)) && (_2220 <= cbSceneParam._m0[64u].w))
        {
            float _2358 = fma(_2014, cbSceneParam._m0[62u].w, fma(_2010, cbSceneParam._m0[62u].z, fma(_2006, cbSceneParam._m0[62u].y, _2002 * cbSceneParam._m0[62u].x))) / _2218;
            float _2362 = isnan(cbSceneParam._m0[41u].w) ? _2358 : (isnan(_2358) ? cbSceneParam._m0[41u].w : max(_2358, cbSceneParam._m0[41u].w));
            float _2405 = (cbSceneParam._m0[33u].x - sqrt(((_2016 * _2016) + (_2015 * _2015)) + (_2017 * _2017))) * cbSceneParam._m0[33u].y;
            float _4453 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
            float _2412 = (isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2219, cbSceneParam._m0[33u].w + _2220), _2362), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2219, _2220 - cbSceneParam._m0[33u].z), _2362), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2219 - cbSceneParam._m0[33u].z, _2220 - cbSceneParam._m0[33u].w), _2362), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2219 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2220), _2362), 0.0)).x), vec4(0.25)));
            float _2416 = 1.0 - (_2412 * cbSceneParam._m0[34u].x);
            float _2417 = 1.0 - (_2412 * cbSceneParam._m0[34u].y);
            float _2418 = 1.0 - (_2412 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2417) ? _2165 : (isnan(_2165) ? _2417 : min(_2165, _2417));
            frontier_phi_36_35_ladder_1 = isnan(_2418) ? _2166 : (isnan(_2166) ? _2418 : min(_2166, _2418));
            frontier_phi_36_35_ladder_2 = isnan(_2416) ? _2164 : (isnan(_2164) ? _2416 : min(_2164, _2416));
        }
        else
        {
            frontier_phi_36_35_ladder = _2165;
            frontier_phi_36_35_ladder_1 = _2166;
            frontier_phi_36_35_ladder_2 = _2164;
        }
        _2230 = frontier_phi_36_35_ladder_2;
        _2232 = frontier_phi_36_35_ladder;
        _2234 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2230 = _2164;
        _2232 = _2165;
        _2234 = _2166;
    }
    uvec4 _2239 = floatBitsToUint(cbInstanceData._m0[_895 + 5u]);
    uint _2241 = _2239.x * 14u;
    uint _2242 = _2241 + 13u;
    float _2249 = _935 + (-1.0);
    float _2254 = (cbLight._m0[_2242].x * _2249) + 1.0;
    float _2255 = (cbLight._m0[_2242].y * _2249) + 1.0;
    float _2256 = (cbLight._m0[_2242].z * _2249) + 1.0;
    float _2257 = (cbLight._m0[_2242].w * _2249) + 1.0;
    uint _2258 = _2241 + 5u;
    float _2264 = isnan(1.0) ? _2255 : (isnan(_2255) ? 1.0 : min(_2255, 1.0));
    uint _2268 = _2241 + 4u;
    float _2277 = isnan(1.0) ? _2254 : (isnan(_2254) ? 1.0 : min(_2254, 1.0));
    uint _2281 = _2241 | 1u;
    float _2292 = dot(vec3(cbLight._m0[_2241].xyz), vec3(_769, _770, _771));
    float _2295 = dot(vec3(cbLight._m0[_2281].xyz), vec3(_769, _770, _771));
    float _4489 = isnan(0.0) ? _2292 : (isnan(_2292) ? 0.0 : max(_2292, 0.0));
    float _4500 = isnan(0.0) ? _2295 : (isnan(_2295) ? 0.0 : max(_2295, 0.0));
    float _2300 = (isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0))) * 0.3183098733425140380859375;
    float _2302 = (isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0))) * 0.3183098733425140380859375;
    float _2309 = ((cbLight._m0[_2258].x * _2264) * _2302) + (((cbLight._m0[_2268].x * _2230) * _2277) * _2300);
    float _2310 = ((_2264 * cbLight._m0[_2258].y) * _2302) + (((cbLight._m0[_2268].y * _2232) * _2277) * _2300);
    float _2311 = ((_2264 * cbLight._m0[_2258].z) * _2302) + (((cbLight._m0[_2268].z * _2234) * _2277) * _2300);
    uvec4 _2315 = floatBitsToUint(cbLight._m0[_2241 + 12u]);
    bool _2317 = _2315.x == 0u;
    float _2419;
    float _2421;
    float _2423;
    if (_2317)
    {
        _2419 = _2309;
        _2421 = _2310;
        _2423 = _2311;
    }
    else
    {
        uint _2427 = _2241 + 6u;
        float _2443 = (dot(vec3(cbLight._m0[_2241 + 2u].xyz), vec3(_769, _770, _771)) * 0.5) + 0.5;
        float _2444 = _2443 * _2443;
        float _4511 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
        float _2445 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _2446 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
        _2419 = (((cbLight._m0[_2427].x * 0.3183098733425140380859375) * _2445) * _2446) + _2309;
        _2421 = (((cbLight._m0[_2427].y * 0.3183098733425140380859375) * _2445) * _2446) + _2310;
        _2423 = (((cbLight._m0[_2427].z * 0.3183098733425140380859375) * _2445) * _2446) + _2311;
    }
    bool _2426 = _2315.y == 0u;
    float _2481;
    float _2483;
    float _2485;
    if (_2426)
    {
        _2481 = _2419;
        _2483 = _2421;
        _2485 = _2423;
    }
    else
    {
        uint _2654 = _2241 + 7u;
        float _2670 = (dot(vec3(cbLight._m0[_2241 + 3u].xyz), vec3(_769, _770, _771)) * 0.5) + 0.5;
        float _2671 = _2670 * _2670;
        float _4527 = isnan(0.0) ? _2671 : (isnan(_2671) ? 0.0 : max(_2671, 0.0));
        float _2672 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _2673 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2481 = (((cbLight._m0[_2654].x * 0.3183098733425140380859375) * _2672) * _2673) + _2419;
        _2483 = (((cbLight._m0[_2654].y * 0.3183098733425140380859375) * _2672) * _2673) + _2421;
        _2485 = (((cbLight._m0[_2654].z * 0.3183098733425140380859375) * _2672) * _2673) + _2423;
    }
    uint _2488 = _2241 + 8u;
    float _2501 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2241].w)) * _772) * 0.949999988079071044921875);
    float _2502 = _2501 * _2501;
    float _2503 = cbLight._m0[_2241].x + _849;
    float _2504 = cbLight._m0[_2241].y + _850;
    float _2505 = cbLight._m0[_2241].z + _851;
    float _2509 = inversesqrt(dot(vec3(_2503, _2504, _2505), vec3(_2503, _2504, _2505)));
    float _2510 = _2509 * _2503;
    float _2511 = _2509 * _2504;
    float _2512 = _2509 * _2505;
    float _2513 = dot(vec3(_769, _770, _771), vec3(cbLight._m0[_2241].xyz));
    float _4543 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2516 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
    float _4554 = isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0));
    float _2517 = isnan(1.0) ? _4554 : (isnan(_4554) ? 1.0 : min(_4554, 1.0));
    float _2518 = dot(vec3(_769, _770, _771), vec3(_2510, _2511, _2512));
    float _4565 = isnan(0.0) ? _2518 : (isnan(_2518) ? 0.0 : max(_2518, 0.0));
    float _2521 = isnan(1.0) ? _4565 : (isnan(_4565) ? 1.0 : min(_4565, 1.0));
    float _2522 = dot(vec3(cbLight._m0[_2241].xyz), vec3(_2510, _2511, _2512));
    float _4576 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0));
    float _2526 = _2502 * _2502;
    float _2530 = ((_2521 * _2521) * (_2526 + (-1.0))) + 1.0;
    float _2538 = exp2(log2(1.0 - (isnan(1.0) ? _4576 : (isnan(_4576) ? 1.0 : min(_4576, 1.0)))) * 5.0);
    float _2539 = 0.959999978542327880859375 - _917;
    float _2541 = 0.959999978542327880859375 - _918;
    float _2542 = 0.959999978542327880859375 - _919;
    float _2549 = 1.0 - _2502;
    float _2560 = (0.5 / (((_2517 * ((_2516 * _2549) + _2502)) + 9.9999999392252902907785028219223e-09) + (((_2517 * _2549) + _2502) * _2516))) * _2516;
    float _4587 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _2562 = (isnan(1.0) ? _4587 : (isnan(_4587) ? 1.0 : min(_4587, 1.0))) * (_2526 / ((_2530 * _2530) * 3.141590118408203125));
    uint _2576 = _2241 + 9u;
    float _2587 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2281].w)) * _772) * 0.949999988079071044921875);
    float _2588 = _2587 * _2587;
    float _2589 = cbLight._m0[_2281].x + _849;
    float _2590 = cbLight._m0[_2281].y + _850;
    float _2591 = cbLight._m0[_2281].z + _851;
    float _2595 = inversesqrt(dot(vec3(_2589, _2590, _2591), vec3(_2589, _2590, _2591)));
    float _2596 = _2595 * _2589;
    float _2597 = _2595 * _2590;
    float _2598 = _2595 * _2591;
    float _2599 = dot(vec3(_769, _770, _771), vec3(cbLight._m0[_2281].xyz));
    float _4598 = isnan(0.0) ? _2599 : (isnan(_2599) ? 0.0 : max(_2599, 0.0));
    float _2602 = isnan(1.0) ? _4598 : (isnan(_4598) ? 1.0 : min(_4598, 1.0));
    float _2603 = dot(vec3(_769, _770, _771), vec3(_2596, _2597, _2598));
    float _4609 = isnan(0.0) ? _2603 : (isnan(_2603) ? 0.0 : max(_2603, 0.0));
    float _2606 = isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0));
    float _2607 = dot(vec3(cbLight._m0[_2281].xyz), vec3(_2596, _2597, _2598));
    float _4620 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2611 = _2588 * _2588;
    float _2615 = ((_2606 * _2606) * (_2611 + (-1.0))) + 1.0;
    float _2622 = exp2(log2(1.0 - (isnan(1.0) ? _4620 : (isnan(_4620) ? 1.0 : min(_4620, 1.0)))) * 5.0);
    float _2629 = 1.0 - _2588;
    float _2639 = (0.5 / (((_2517 * ((_2602 * _2629) + _2588)) + 9.9999999392252902907785028219223e-09) + (((_2517 * _2629) + _2588) * _2602))) * _2602;
    float _4631 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2641 = (isnan(1.0) ? _4631 : (isnan(_4631) ? 1.0 : min(_4631, 1.0))) * (_2611 / ((_2615 * _2615) * 3.141590118408203125));
    float _2651 = (((((_2622 * _2539) + _920) * cbLight._m0[_2576].x) * _2641) * _2264) + ((((cbLight._m0[_2488].x * _2230) * ((_2538 * _2539) + _920)) * _2562) * _2277);
    float _2652 = (((((_2622 * _2541) + _922) * cbLight._m0[_2576].y) * _2641) * _2264) + ((((cbLight._m0[_2488].y * _2232) * ((_2538 * _2541) + _922)) * _2562) * _2277);
    float _2653 = (((((_2622 * _2542) + _923) * cbLight._m0[_2576].z) * _2641) * _2264) + ((((cbLight._m0[_2488].z * _2234) * ((_2538 * _2542) + _923)) * _2562) * _2277);
    float _2709;
    float _2711;
    float _2713;
    if (_2317)
    {
        _2709 = _2651;
        _2711 = _2652;
        _2713 = _2653;
    }
    else
    {
        uint _2715 = _2241 + 2u;
        uint _2719 = _2241 + 10u;
        float _2733 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2715].w)) * _772) * 0.949999988079071044921875);
        float _2734 = _2733 * _2733;
        float _2735 = cbLight._m0[_2715].x + _849;
        float _2736 = cbLight._m0[_2715].y + _850;
        float _2737 = cbLight._m0[_2715].z + _851;
        float _2741 = inversesqrt(dot(vec3(_2735, _2736, _2737), vec3(_2735, _2736, _2737)));
        float _2742 = _2741 * _2735;
        float _2743 = _2741 * _2736;
        float _2744 = _2741 * _2737;
        float _2745 = dot(vec3(_769, _770, _771), vec3(cbLight._m0[_2715].xyz));
        float _4642 = isnan(0.0) ? _2745 : (isnan(_2745) ? 0.0 : max(_2745, 0.0));
        float _2748 = isnan(1.0) ? _4642 : (isnan(_4642) ? 1.0 : min(_4642, 1.0));
        float _2749 = dot(vec3(_769, _770, _771), vec3(_2742, _2743, _2744));
        float _4653 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
        float _2752 = isnan(1.0) ? _4653 : (isnan(_4653) ? 1.0 : min(_4653, 1.0));
        float _2753 = dot(vec3(cbLight._m0[_2715].xyz), vec3(_2742, _2743, _2744));
        float _4664 = isnan(0.0) ? _2753 : (isnan(_2753) ? 0.0 : max(_2753, 0.0));
        float _2757 = _2734 * _2734;
        float _2761 = ((_2752 * _2752) * (_2757 + (-1.0))) + 1.0;
        float _2768 = exp2(log2(1.0 - (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0)))) * 5.0);
        float _2775 = 1.0 - _2734;
        float _2785 = (0.5 / (((_2517 * ((_2748 * _2775) + _2734)) + 9.9999999392252902907785028219223e-09) + (((_2517 * _2775) + _2734) * _2748))) * _2748;
        float _4675 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
        float _2787 = (isnan(1.0) ? _4675 : (isnan(_4675) ? 1.0 : min(_4675, 1.0))) * (_2757 / ((_2761 * _2761) * 3.141590118408203125));
        float _2788 = isnan(1.0) ? _2256 : (isnan(_2256) ? 1.0 : min(_2256, 1.0));
        _2709 = (((((_2768 * _2539) + _920) * cbLight._m0[_2719].x) * _2787) * _2788) + _2651;
        _2711 = (((((_2768 * _2541) + _922) * cbLight._m0[_2719].y) * _2787) * _2788) + _2652;
        _2713 = (((((_2768 * _2542) + _923) * cbLight._m0[_2719].z) * _2787) * _2788) + _2653;
    }
    float _2819;
    float _2821;
    float _2823;
    if (_2426)
    {
        _2819 = _2709;
        _2821 = _2711;
        _2823 = _2713;
    }
    else
    {
        uint _2830 = _2241 + 3u;
        uint _2834 = _2241 + 11u;
        float _2848 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2830].w)) * _772) * 0.949999988079071044921875);
        float _2849 = _2848 * _2848;
        float _2850 = cbLight._m0[_2830].x + _849;
        float _2851 = cbLight._m0[_2830].y + _850;
        float _2852 = cbLight._m0[_2830].z + _851;
        float _2856 = inversesqrt(dot(vec3(_2850, _2851, _2852), vec3(_2850, _2851, _2852)));
        float _2857 = _2856 * _2850;
        float _2858 = _2856 * _2851;
        float _2859 = _2856 * _2852;
        float _2860 = dot(vec3(_769, _770, _771), vec3(cbLight._m0[_2830].xyz));
        float _4691 = isnan(0.0) ? _2860 : (isnan(_2860) ? 0.0 : max(_2860, 0.0));
        float _2863 = isnan(1.0) ? _4691 : (isnan(_4691) ? 1.0 : min(_4691, 1.0));
        float _2864 = dot(vec3(_769, _770, _771), vec3(_2857, _2858, _2859));
        float _4702 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
        float _2867 = isnan(1.0) ? _4702 : (isnan(_4702) ? 1.0 : min(_4702, 1.0));
        float _2868 = dot(vec3(cbLight._m0[_2830].xyz), vec3(_2857, _2858, _2859));
        float _4713 = isnan(0.0) ? _2868 : (isnan(_2868) ? 0.0 : max(_2868, 0.0));
        float _2872 = _2849 * _2849;
        float _2876 = ((_2867 * _2867) * (_2872 + (-1.0))) + 1.0;
        float _2883 = exp2(log2(1.0 - (isnan(1.0) ? _4713 : (isnan(_4713) ? 1.0 : min(_4713, 1.0)))) * 5.0);
        float _2890 = 1.0 - _2849;
        float _2900 = (0.5 / (((_2517 * ((_2863 * _2890) + _2849)) + 9.9999999392252902907785028219223e-09) + (((_2517 * _2890) + _2849) * _2863))) * _2863;
        float _4724 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2902 = (isnan(1.0) ? _4724 : (isnan(_4724) ? 1.0 : min(_4724, 1.0))) * (_2872 / ((_2876 * _2876) * 3.141590118408203125));
        float _2903 = isnan(1.0) ? _2257 : (isnan(_2257) ? 1.0 : min(_2257, 1.0));
        _2819 = (((((_2883 * _2539) + _920) * cbLight._m0[_2834].x) * _2902) * _2903) + _2709;
        _2821 = (((((_2883 * _2541) + _922) * cbLight._m0[_2834].y) * _2902) * _2903) + _2711;
        _2823 = (((((_2883 * _2542) + _923) * cbLight._m0[_2834].z) * _2902) * _2903) + _2713;
    }
    float _2968;
    float _2970;
    float _2972;
    float _2974;
    float _2976;
    float _2978;
    if (_2239.y == 0u)
    {
        uvec4 _2924 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2925 = _2924.x;
        uint _2936 = uint((float(_2924.y) * floor(float(uint(cbSceneParam._m0[85u].y * _858) / _2925))) + floor(float(uint(cbSceneParam._m0[85u].x * _857) / _2925)));
        float _2946 = (log2(_2017 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2947 = isnan(0.0) ? _2946 : (isnan(_2946) ? 0.0 : max(_2946, 0.0));
        uint _2950 = uint(isnan(14.0) ? _2947 : (isnan(_2947) ? 14.0 : min(_2947, 14.0)));
        uvec4 _2955 = texelFetch(g_lightClusterGridBuffer, int(((_2950 << 2u) + (_2936 << 6u)) >> 2u));
        uint _2956 = _2955.x;
        uint _2957 = _2924.z;
        float _3035;
        float _3037;
        float _3039;
        float _3041;
        float _3043;
        float _3045;
        if (((((1u << ((_2957 >> 4u) & 15u)) + 4294967295u) & _2956) == 0u) || ((_2957 & 240u) == 0u))
        {
            _3035 = 0.0;
            _3037 = 0.0;
            _3039 = 0.0;
            _3041 = 0.0;
            _3043 = 0.0;
            _3045 = 0.0;
        }
        else
        {
            float _3036;
            float _3038;
            float _3040;
            float _3042;
            float _3044;
            float _3046;
            float _3179 = 0.0;
            float _3180 = 0.0;
            float _3181 = 0.0;
            float _3182 = 0.0;
            float _3183 = 0.0;
            float _3184 = 0.0;
            uint _3185 = 0u;
            uint _3194;
            bool _3195;
            for (;;)
            {
                _3194 = texelFetch(g_lightClassification, int((((_2950 << 5u) + (_2936 << 9u)) + (_3185 << 2u)) >> 2u)).x;
                _3195 = _3194 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3195)
                {
                    frontier_phi_68_pred = _3184;
                    frontier_phi_68_pred_1 = _3183;
                    frontier_phi_68_pred_2 = _3182;
                    frontier_phi_68_pred_3 = _3180;
                    frontier_phi_68_pred_4 = _3179;
                    frontier_phi_68_pred_5 = _3181;
                }
                else
                {
                    float _3303;
                    float _3304;
                    float _3305;
                    float _3306;
                    float _3307;
                    float _3308;
                    uint _3309;
                    _3303 = _3179;
                    _3304 = _3180;
                    _3305 = _3181;
                    _3306 = _3182;
                    _3307 = _3183;
                    _3308 = _3184;
                    _3309 = _3194;
                    float _3235;
                    float _3236;
                    float _3237;
                    float _3238;
                    float _3239;
                    float _3240;
                    for (;;)
                    {
                        uint _3313 = uint(findLSB(_3309)) + (_3185 << 5u);
                        uint _3310 = (_3309 + 4294967295u) & _3309;
                        uint _3315 = _3313 * 48u;
                        vec4 _3329 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3315)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3315 + 3u)).x));
                        uint _3335 = (_3313 * 48u) + 4u;
                        vec4 _3348 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3335)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3335 + 3u)).x));
                        uint _3354 = (_3313 * 48u) + 8u;
                        vec3 _3365 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3354)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3354 + 2u)).x));
                        float _3369 = _3329.x - _2015;
                        float _3370 = _3329.y - _2016;
                        float _3371 = _3329.z - _2017;
                        float _3372 = dot(vec3(_3369, _3370, _3371), vec3(_3369, _3370, _3371));
                        float _3375 = inversesqrt(_3372);
                        float _3376 = _3375 * _3369;
                        float _3377 = _3375 * _3370;
                        float _3378 = _3375 * _3371;
                        float _3379 = dot(vec3(_876, _879, _882), vec3(_3376, _3377, _3378));
                        float _3384 = 1.0 - (_3372 * _3329.w);
                        float _4750 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3385 = isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0));
                        float _3386 = sqrt(_3372) * _3348.w;
                        float _3389 = 1.39999997615814208984375 / (_3386 + 1.39999997615814208984375);
                        float _3390 = _3389 * _3389;
                        float _3393 = ((1.0 - _3390) * _3379) + _3390;
                        float _3396 = _3386 * _3386;
                        float _3400 = ((isnan(0.0) ? _3393 : (isnan(_3393) ? 0.0 : max(_3393, 0.0))) * _3385) / ((_3396 * 0.699999988079071044921875) + 1.0);
                        float _3404 = (-0.0) - _2015;
                        float _3405 = (-0.0) - _2016;
                        float _3406 = (-0.0) - _2017;
                        float _3410 = inversesqrt(dot(vec3(_3404, _3405, _3406), vec3(_3404, _3405, _3406)));
                        float _3411 = _3410 * _3404;
                        float _3412 = _3410 * _3405;
                        float _3413 = _3410 * _3406;
                        float _3420 = exp2(log2(1.0 / ((_3396 * 3.5) + 5.0)) * 0.25);
                        float _3421 = 1.0 - _951;
                        float _3428 = sqrt(1.0 - ((1.0 - (_3421 * _3421)) * (1.0 - (_3420 * _3420))));
                        float _3429 = _3428 * _3428;
                        float _3430 = _3429 * _3429;
                        float _3431 = _3411 + _3376;
                        float _3432 = _3412 + _3377;
                        float _3433 = _3413 + _3378;
                        float _3437 = inversesqrt(dot(vec3(_3431, _3432, _3433), vec3(_3431, _3432, _3433)));
                        float _3441 = dot(vec3(_876, _879, _882), vec3(_3411, _3412, _3413));
                        float _4766 = isnan(0.0) ? _3441 : (isnan(_3441) ? 0.0 : max(_3441, 0.0));
                        float _3444 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
                        float _3445 = dot(vec3(_876, _879, _882), vec3(_3437 * _3431, _3437 * _3432, _3437 * _3433));
                        float _4777 = isnan(0.0) ? _3445 : (isnan(_3445) ? 0.0 : max(_3445, 0.0));
                        float _3448 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
                        float _3452 = ((_3448 * _3448) * (_3430 + (-1.0))) + 1.0;
                        float _3453 = _3389 * _3429;
                        float _3454 = _3453 * _3453;
                        float _3457 = ((1.0 - _3454) * _3379) + _3454;
                        float _4788 = isnan(0.0) ? _3457 : (isnan(_3457) ? 0.0 : max(_3457, 0.0));
                        float _3458 = isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0));
                        float _3459 = 1.0 - _3429;
                        float _3469 = (0.5 / (((_3458 * ((_3444 * _3459) + _3429)) + 9.9999999392252902907785028219223e-09) + (((_3458 * _3459) + _3429) * _3444))) * _3458;
                        float _4799 = isnan(0.0) ? _3469 : (isnan(_3469) ? 0.0 : max(_3469, 0.0));
                        float _3480 = (((_3430 * 3.1415927410125732421875) * (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0)))) / ((_3452 * _3452) * ((_3396 * 2.1991131305694580078125) + 3.141590118408203125))) * _3385;
                        _3238 = (_3400 * _3348.x) + _3306;
                        _3239 = (_3400 * _3348.y) + _3307;
                        _3240 = (_3400 * _3348.z) + _3308;
                        _3235 = (_3480 * _3365.x) + _3303;
                        _3236 = (_3480 * _3365.y) + _3304;
                        _3237 = (_3480 * _3365.z) + _3305;
                        if (_3310 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3303 = _3235;
                            _3304 = _3236;
                            _3305 = _3237;
                            _3306 = _3238;
                            _3307 = _3239;
                            _3308 = _3240;
                            _3309 = _3310;
                        }
                    }
                    frontier_phi_68_pred = _3240;
                    frontier_phi_68_pred_1 = _3239;
                    frontier_phi_68_pred_2 = _3238;
                    frontier_phi_68_pred_3 = _3236;
                    frontier_phi_68_pred_4 = _3235;
                    frontier_phi_68_pred_5 = _3237;
                }
                _3046 = frontier_phi_68_pred;
                _3044 = frontier_phi_68_pred_1;
                _3042 = frontier_phi_68_pred_2;
                _3038 = frontier_phi_68_pred_3;
                _3036 = frontier_phi_68_pred_4;
                _3040 = frontier_phi_68_pred_5;
                uint _3186 = _3185 + 1u;
                if (_3186 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3179 = _3036;
                    _3180 = _3038;
                    _3181 = _3040;
                    _3182 = _3042;
                    _3183 = _3044;
                    _3184 = _3046;
                    _3185 = _3186;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3035 = _3036;
            _3037 = _3038;
            _3039 = _3040;
            _3041 = _3042;
            _3043 = _3044;
            _3045 = _3046;
        }
        uvec4 _3049 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3050 = _3049.z;
        uint _3052 = (_3050 >> 8u) & 15u;
        float _3147;
        float _3149;
        float _3151;
        float _3153;
        float _3155;
        float _3157;
        if (((4294967295u << _3052) & _2956) == 0u)
        {
            _3147 = _3035;
            _3149 = _3037;
            _3151 = _3039;
            _3153 = _3041;
            _3155 = _3043;
            _3157 = _3045;
        }
        else
        {
            float _3172 = inversesqrt(dot(vec3(_2015, _2016, _2017), vec3(_2015, _2016, _2017)));
            float _3173 = _3172 * _2015;
            float _3174 = _3172 * _2016;
            float _3175 = _3172 * _2017;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3052 < ((_3050 >> 12u) & 15u))
            {
                float _3148;
                float _3150;
                float _3152;
                float _3154;
                float _3156;
                float _3158;
                float _3286 = _3035;
                float _3287 = _3037;
                float _3288 = _3039;
                float _3289 = _3041;
                float _3290 = _3043;
                float _3291 = _3045;
                uint _3292 = _3052;
                uint _3301;
                bool _3302;
                for (;;)
                {
                    _3301 = texelFetch(g_lightClassification, int((((_2950 << 5u) + (_2936 << 9u)) + (_3292 << 2u)) >> 2u)).x;
                    _3302 = _3301 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3302)
                    {
                        frontier_phi_74_pred = _3288;
                        frontier_phi_74_pred_1 = _3287;
                        frontier_phi_74_pred_2 = _3286;
                        frontier_phi_74_pred_3 = _3291;
                        frontier_phi_74_pred_4 = _3290;
                        frontier_phi_74_pred_5 = _3289;
                    }
                    else
                    {
                        float _3485;
                        float _3486;
                        float _3487;
                        float _3488;
                        float _3489;
                        float _3490;
                        float _3780;
                        float _3781;
                        float _3782;
                        float _3783;
                        float _3784;
                        float _3785;
                        float _3498 = _3286;
                        float _3499 = _3287;
                        float _3500 = _3288;
                        float _3501 = _3289;
                        float _3502 = _3290;
                        float _3503 = _3291;
                        uint _3504 = _3301;
                        uint _3505;
                        vec4 _3530;
                        float _3531;
                        vec4 _3546;
                        vec3 _3558;
                        vec4 _3573;
                        vec4 _3589;
                        float _3636;
                        bool _3637;
                        for (;;)
                        {
                            uint _3515 = ((_3292 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3504));
                            _3505 = (_3504 + 4294967295u) & _3504;
                            uint _3517 = _3515 * 40u;
                            _3530 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3517)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3517 + 3u)).x));
                            _3531 = _3530.w;
                            uint _3533 = (_3515 * 40u) + 4u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3548 = (_3515 * 40u) + 8u;
                            _3558 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3548)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 2u)).x));
                            uint _3560 = (_3515 * 40u) + 16u;
                            _3573 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3560)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3560 + 3u)).x));
                            uint _3576 = (_3515 * 40u) + 20u;
                            _3589 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3576)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3576 + 3u)).x));
                            uint _3592 = (_3515 * 40u) + 24u;
                            vec4 _3605 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3592)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3592 + 3u)).x));
                            uint _3611 = (_3515 * 40u) + 28u;
                            vec4 _3624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 3u)).x));
                            _3636 = fma(_2017, _3624.z, fma(_2016, _3624.y, _3624.x * _2015)) + _3624.w;
                            _3637 = !((fma(_2017, _3605.z, fma(_2016, _3605.y, _3605.x * _2015)) + _3605.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3637)
                            {
                                float _3664 = _3530.x - _2015;
                                float _3665 = _3530.y - _2016;
                                float _3666 = _3530.z - _2017;
                                float _3667 = dot(vec3(_3664, _3665, _3666), vec3(_3664, _3665, _3666));
                                float _3670 = inversesqrt(_3667);
                                float _3671 = _3670 * _3664;
                                float _3672 = _3670 * _3665;
                                float _3673 = _3670 * _3666;
                                float _3677 = 1.0 - (_3667 / (_3531 * _3531));
                                float _4810 = isnan(0.0) ? _3677 : (isnan(_3677) ? 0.0 : max(_3677, 0.0));
                                float _3678 = isnan(1.0) ? _4810 : (isnan(_4810) ? 1.0 : min(_4810, 1.0));
                                float _3682 = sqrt(_3667) * _3546.w;
                                float _3684 = 1.39999997615814208984375 / (_3682 + 1.39999997615814208984375);
                                float _3685 = _3684 * _3684;
                                float _3688 = ((1.0 - _3685) * dot(vec3(_3671, _3672, _3673), vec3(_876, _879, _882))) + _3685;
                                float _3691 = _3682 * _3682;
                                float _3695 = (fma(_2017, _3573.z, fma(_2016, _3573.y, _3573.x * _2015)) + _3573.w) / _3636;
                                float _3696 = (fma(_2017, _3589.z, fma(_2016, _3589.y, _3589.x * _2015)) + _3589.w) / _3636;
                                float _3700 = 1.0 - dot(vec2(_3695, _3696), vec2(_3695, _3696));
                                float _4826 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3701 = isnan(1.0) ? _4826 : (isnan(_4826) ? 1.0 : min(_4826, 1.0));
                                float _3702 = _3701 * (((isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0))) * _3678) / ((_3691 * 0.699999988079071044921875) + 1.0));
                                float _3714 = exp2(log2(1.0 / ((_3691 * 3.5) + 5.0)) * 0.25);
                                float _3715 = 1.0 - _951;
                                float _3722 = sqrt(1.0 - ((1.0 - (_3715 * _3715)) * (1.0 - (_3714 * _3714))));
                                float _3723 = _3722 * _3722;
                                float _3724 = _3723 * _3723;
                                float _3725 = _3671 - _3173;
                                float _3726 = _3672 - _3174;
                                float _3727 = _3673 - _3175;
                                float _3731 = inversesqrt(dot(vec3(_3725, _3726, _3727), vec3(_3725, _3726, _3727)));
                                float _3735 = dot(vec3(_876, _879, _882), vec3((-0.0) - _3173, (-0.0) - _3174, (-0.0) - _3175));
                                float _4837 = isnan(0.0) ? _3735 : (isnan(_3735) ? 0.0 : max(_3735, 0.0));
                                float _3738 = isnan(1.0) ? _4837 : (isnan(_4837) ? 1.0 : min(_4837, 1.0));
                                float _3739 = dot(vec3(_876, _879, _882), vec3(_3731 * _3725, _3731 * _3726, _3731 * _3727));
                                float _4848 = isnan(0.0) ? _3739 : (isnan(_3739) ? 0.0 : max(_3739, 0.0));
                                float _3742 = isnan(1.0) ? _4848 : (isnan(_4848) ? 1.0 : min(_4848, 1.0));
                                float _3746 = ((_3742 * _3742) * (_3724 + (-1.0))) + 1.0;
                                float _3747 = _3684 * _3723;
                                float _3748 = _3747 * _3747;
                                float _3754 = ((1.0 - _3748) * dot(vec3(_876, _879, _882), vec3(_3671, _3672, _3673))) + _3748;
                                float _4859 = isnan(0.0) ? _3754 : (isnan(_3754) ? 0.0 : max(_3754, 0.0));
                                float _3755 = isnan(1.0) ? _4859 : (isnan(_4859) ? 1.0 : min(_4859, 1.0));
                                float _3756 = 1.0 - _3723;
                                float _3766 = (0.5 / (((_3755 * ((_3738 * _3756) + _3723)) + 9.9999999392252902907785028219223e-09) + (((_3755 * _3756) + _3723) * _3738))) * _3755;
                                float _4870 = isnan(0.0) ? _3766 : (isnan(_3766) ? 0.0 : max(_3766, 0.0));
                                float _3776 = (_3701 * _3678) * (((_3724 * 3.1415927410125732421875) * (isnan(1.0) ? _4870 : (isnan(_4870) ? 1.0 : min(_4870, 1.0)))) / ((_3746 * _3746) * ((_3691 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3776 * _3558.z;
                                frontier_phi_80_pred_1 = _3776 * _3558.y;
                                frontier_phi_80_pred_2 = _3776 * _3558.x;
                                frontier_phi_80_pred_3 = _3702 * _3546.z;
                                frontier_phi_80_pred_4 = _3702 * _3546.y;
                                frontier_phi_80_pred_5 = _3702 * _3546.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3782 = frontier_phi_80_pred;
                            _3781 = frontier_phi_80_pred_1;
                            _3780 = frontier_phi_80_pred_2;
                            _3785 = frontier_phi_80_pred_3;
                            _3784 = frontier_phi_80_pred_4;
                            _3783 = frontier_phi_80_pred_5;
                            _3488 = _3783 + _3501;
                            _3489 = _3784 + _3502;
                            _3490 = _3785 + _3503;
                            _3485 = _3780 + _3498;
                            _3486 = _3781 + _3499;
                            _3487 = _3782 + _3500;
                            if (_3505 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3498 = _3485;
                                _3499 = _3486;
                                _3500 = _3487;
                                _3501 = _3488;
                                _3502 = _3489;
                                _3503 = _3490;
                                _3504 = _3505;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3487;
                        frontier_phi_74_pred_1 = _3486;
                        frontier_phi_74_pred_2 = _3485;
                        frontier_phi_74_pred_3 = _3490;
                        frontier_phi_74_pred_4 = _3489;
                        frontier_phi_74_pred_5 = _3488;
                    }
                    _3152 = frontier_phi_74_pred;
                    _3150 = frontier_phi_74_pred_1;
                    _3148 = frontier_phi_74_pred_2;
                    _3158 = frontier_phi_74_pred_3;
                    _3156 = frontier_phi_74_pred_4;
                    _3154 = frontier_phi_74_pred_5;
                    uint _3293 = _3292 + 1u;
                    if (_3293 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3286 = _3148;
                        _3287 = _3150;
                        _3288 = _3152;
                        _3289 = _3154;
                        _3290 = _3156;
                        _3291 = _3158;
                        _3292 = _3293;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3156;
                frontier_phi_62_63_ladder_1 = _3154;
                frontier_phi_62_63_ladder_2 = _3152;
                frontier_phi_62_63_ladder_3 = _3158;
                frontier_phi_62_63_ladder_4 = _3150;
                frontier_phi_62_63_ladder_5 = _3148;
            }
            else
            {
                frontier_phi_62_63_ladder = _3043;
                frontier_phi_62_63_ladder_1 = _3041;
                frontier_phi_62_63_ladder_2 = _3039;
                frontier_phi_62_63_ladder_3 = _3045;
                frontier_phi_62_63_ladder_4 = _3037;
                frontier_phi_62_63_ladder_5 = _3035;
            }
            _3147 = frontier_phi_62_63_ladder_5;
            _3149 = frontier_phi_62_63_ladder_4;
            _3151 = frontier_phi_62_63_ladder_2;
            _3153 = frontier_phi_62_63_ladder_1;
            _3155 = frontier_phi_62_63_ladder;
            _3157 = frontier_phi_62_63_ladder_3;
        }
        float _3162 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
        _2968 = (_3162 * _3153) + _2481;
        _2970 = (_3162 * _3155) + _2483;
        _2972 = (_3162 * _3157) + _2485;
        _2974 = ((_3147 * _920) * _3162) + _2819;
        _2976 = ((_3149 * _922) * _3162) + _2821;
        _2978 = ((_3151 * _923) * _3162) + _2823;
    }
    else
    {
        _2968 = _2481;
        _2970 = _2483;
        _2972 = _2485;
        _2974 = _2819;
        _2976 = _2821;
        _2978 = _2823;
    }
    float _4886 = isnan(0.0) ? _910 : (isnan(_910) ? 0.0 : max(_910, 0.0));
    float _4897 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
    float _4908 = isnan(0.0) ? _912 : (isnan(_912) ? 0.0 : max(_912, 0.0));
    uint _2998 = _895 + 6u;
    float _3006 = _857 / cbSceneParam._m0[86u].x;
    float _3007 = _858 / cbSceneParam._m0[86u].y;
    vec4 _3021 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3006, _3007, (log2((isnan(cbSceneParam._m0[77u].w) ? _792 : (isnan(_792) ? cbSceneParam._m0[77u].w : min(_792, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3023 = _3021.x;
    float _3024 = _3021.y;
    float _3025 = _3021.z;
    float _3026 = _3021.w;
    float _3097;
    float _3099;
    float _3101;
    float _3103;
    if (_792 > cbSceneParam._m0[78u].w)
    {
        float _3060 = isnan(_792) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _792 : min(cbSceneParam._m0[80u].w, _792));
        float _3061 = _3060 / _792;
        float _3072 = _3061 * _842;
        float _3073 = _843 * _3061;
        float _3074 = (-0.0) - _3073;
        float _3075 = _3061 * _844;
        float _3077 = (cbSceneParam._m0[77u].w * _3074) / _3060;
        float _3078 = _3077 + cbSceneParam._m0[79u].w;
        float _3079 = cbSceneParam._m0[79u].w - _3073;
        float _3085 = sqrt(((_3072 * _3072) + (_3073 * _3073)) + (_3075 * _3075));
        float _3088 = (1.0 - (cbSceneParam._m0[77u].w / _3060)) * _3085;
        float _3093 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3095 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3248;
        if (abs((_3074 - _3077) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3248 = ((((_3078 > 0.0) ? exp2(_3093 * _3078) : (2.0 - exp2(_3095 * _3078))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3088;
        }
        else
        {
            float _3208 = 1.0 / cbSceneParam._m0[80u].x;
            float _3209 = isnan(_3079) ? _3078 : (isnan(_3078) ? _3079 : max(_3078, _3079));
            float _3210 = isnan(_3079) ? _3078 : (isnan(_3078) ? _3079 : min(_3078, _3079));
            float _3219 = isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : min(_3209, 0.0));
            float _3220 = isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : min(_3210, 0.0));
            _3248 = ((abs(_3085 / _3074) * cbSceneParam._m0[80u].y) * ((((_3219 - _3220) * 2.0) - ((exp2(_3093 * (isnan(0.0) ? _3209 : (isnan(_3209) ? 0.0 : max(_3209, 0.0)))) - exp2(_3093 * (isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : max(_3210, 0.0))))) * _3208)) - ((exp2(_3095 * _3219) - exp2(_3095 * _3220)) * _3208))) + (_3088 * cbSceneParam._m0[80u].z);
        }
        vec4 _3250 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3006, _3007, 1.0), 0.0);
        float _3259 = exp2((_3248 * (-1.44269502162933349609375)) * (1.0 - _3250.w));
        float _3260 = log2(_3259);
        float _3276 = log2(_3026);
        _3097 = (exp2(_3276 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].x)) * _3250.x) / cbSceneParam._m0[78u].x)) + _3023;
        _3099 = (exp2(_3276 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].y)) * _3250.y) / cbSceneParam._m0[78u].y)) + _3024;
        _3101 = (exp2(_3276 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3260 * cbSceneParam._m0[78u].z)) * _3250.z) / cbSceneParam._m0[78u].z)) + _3025;
        _3103 = _3259 * _3026;
    }
    else
    {
        _3097 = _3023;
        _3099 = _3024;
        _3101 = _3025;
        _3103 = _3026;
    }
    float _3115 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3116 = _3115 == 3.0;
    float _3117 = log2(_3103);
    float _3124 = exp2(_3117 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4886 : (isnan(_4886) ? 1.0 : min(_4886, 1.0))) * (_2968 + ((isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))) * _935))) + ((_2974 + ((isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0))) * _1745)) * cbPerFrame._m0[3u].x));
    float _3125 = exp2(_3117 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4897 : (isnan(_4897) ? 1.0 : min(_4897, 1.0))) * (_2970 + ((isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0))) * _935))) + ((_2976 + ((isnan(0.0) ? _1965 : (isnan(_1965) ? 0.0 : max(_1965, 0.0))) * _1745)) * cbPerFrame._m0[3u].x));
    float _3126 = exp2(_3117 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4908 : (isnan(_4908) ? 1.0 : min(_4908, 1.0))) * (_2972 + ((isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0))) * _935))) + ((_2978 + ((isnan(0.0) ? _1968 : (isnan(_1968) ? 0.0 : max(_1968, 0.0))) * _1745)) * cbPerFrame._m0[3u].x));
    float _3135 = (_3115 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3135 * (_3116 ? _3124 : (_3124 + (cbSceneParam._m0[72u].w * _3097)));
    SV_Target.y = _3135 * (_3116 ? _3125 : (_3125 + (cbSceneParam._m0[72u].w * _3099)));
    SV_Target.z = _3135 * (_3116 ? _3126 : (_3126 + (cbSceneParam._m0[72u].w * _3101)));
    SV_Target.w = cbInstanceData._m0[_2998].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2998].w;
}


