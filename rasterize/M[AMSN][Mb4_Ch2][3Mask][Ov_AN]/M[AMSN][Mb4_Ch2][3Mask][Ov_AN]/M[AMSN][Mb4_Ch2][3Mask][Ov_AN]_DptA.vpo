#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 TANGENT_2;
layout(location = 4) in vec4 COLOR_1;
layout(location = 5) in ivec4 TEXCOORD;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec4 TANGENT_2_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out vec2 TEXCOORD_6;
layout(location = 5, component = 3) out float TEXCOORD_10;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TANGENT_2_1.x = 0.0;
    TANGENT_2_1.y = 0.0;
    TANGENT_2_1.z = 0.0;
    TANGENT_2_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    TEXCOORD_10 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _183 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _185 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _186 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT_2.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT_2.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _210 = (float(TANGENT_2.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _216 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _218 = texelFetch(g_InstanceIndexBuffer, int(_216));
    uint _219 = _218.x;
    uint _221 = _219 * 13u;
    uint _229 = (floatBitsToUint(cbInstanceData._m0[_221 + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _236 = _229 + 1u;
    uint _243 = _229 + 2u;
    precise float _250 = POSITION.x * cbObjMatrix._m0[_229].x;
    precise float _251 = POSITION.y * cbObjMatrix._m0[_229].y;
    precise float _252 = _251 + _250;
    precise float _253 = POSITION.z * cbObjMatrix._m0[_229].z;
    precise float _254 = _253 + _252;
    precise float _255 = 1.0 * cbObjMatrix._m0[_229].w;
    precise float _257 = _255 + _254;
    precise float _258 = POSITION.x * cbObjMatrix._m0[_236].x;
    precise float _259 = POSITION.y * cbObjMatrix._m0[_236].y;
    precise float _260 = _259 + _258;
    precise float _261 = POSITION.z * cbObjMatrix._m0[_236].z;
    precise float _262 = _261 + _260;
    precise float _263 = 1.0 * cbObjMatrix._m0[_236].w;
    precise float _264 = _263 + _262;
    precise float _265 = POSITION.x * cbObjMatrix._m0[_243].x;
    precise float _266 = POSITION.y * cbObjMatrix._m0[_243].y;
    precise float _267 = _266 + _265;
    precise float _268 = POSITION.z * cbObjMatrix._m0[_243].z;
    precise float _269 = _268 + _267;
    precise float _270 = 1.0 * cbObjMatrix._m0[_243].w;
    precise float _271 = _270 + _269;
    float _277 = cbSceneParam._m0[3u].x - _257;
    float _278 = cbSceneParam._m0[3u].y - _264;
    float _279 = cbSceneParam._m0[3u].z - _271;
    precise float _315 = _257 - cbSceneParam._m0[3u].x;
    precise float _316 = _264 - cbSceneParam._m0[3u].y;
    precise float _317 = _271 - cbSceneParam._m0[3u].z;
    precise float _345 = _315 * cbSceneParam._m0[24u].x;
    precise float _346 = _316 * cbSceneParam._m0[24u].y;
    precise float _347 = _346 + _345;
    precise float _348 = _317 * cbSceneParam._m0[24u].z;
    precise float _349 = _348 + _347;
    precise float _350 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _351 = _350 + _349;
    precise float _352 = _315 * cbSceneParam._m0[25u].x;
    precise float _353 = _316 * cbSceneParam._m0[25u].y;
    precise float _354 = _353 + _352;
    precise float _355 = _317 * cbSceneParam._m0[25u].z;
    precise float _356 = _355 + _354;
    precise float _357 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _358 = _357 + _356;
    precise float _359 = _315 * cbSceneParam._m0[26u].x;
    precise float _360 = _316 * cbSceneParam._m0[26u].y;
    precise float _361 = _360 + _359;
    precise float _362 = _317 * cbSceneParam._m0[26u].z;
    precise float _363 = _362 + _361;
    precise float _364 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _365 = _364 + _363;
    precise float _366 = _315 * cbSceneParam._m0[27u].x;
    precise float _367 = _316 * cbSceneParam._m0[27u].y;
    precise float _368 = _367 + _366;
    precise float _369 = _317 * cbSceneParam._m0[27u].z;
    precise float _370 = _369 + _368;
    precise float _371 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _372 = _371 + _370;
    gl_Position.x = _351;
    gl_Position.y = _358;
    gl_Position.z = _365;
    gl_Position.w = _372;
    NORMAL_1.x = fma(_186, cbObjMatrix._m0[_229].z, fma(_185, cbObjMatrix._m0[_229].y, cbObjMatrix._m0[_229].x * _183));
    NORMAL_1.y = fma(_186, cbObjMatrix._m0[_236].z, fma(_185, cbObjMatrix._m0[_236].y, cbObjMatrix._m0[_236].x * _183));
    NORMAL_1.z = fma(_186, cbObjMatrix._m0[_243].z, fma(_185, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _183));
    NORMAL_1.w = float(_219);
    TANGENT_1.x = fma(_198, cbObjMatrix._m0[_229].z, fma(_197, cbObjMatrix._m0[_229].y, cbObjMatrix._m0[_229].x * _196));
    TANGENT_1.y = fma(_198, cbObjMatrix._m0[_236].z, fma(_197, cbObjMatrix._m0[_236].y, cbObjMatrix._m0[_236].x * _196));
    TANGENT_1.z = fma(_198, cbObjMatrix._m0[_243].z, fma(_197, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _196));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TANGENT_2_1.x = fma(_210, cbObjMatrix._m0[_229].z, fma(_209, cbObjMatrix._m0[_229].y, cbObjMatrix._m0[_229].x * _208));
    TANGENT_2_1.y = fma(_210, cbObjMatrix._m0[_236].z, fma(_209, cbObjMatrix._m0[_236].y, cbObjMatrix._m0[_236].x * _208));
    TANGENT_2_1.z = fma(_210, cbObjMatrix._m0[_243].z, fma(_209, cbObjMatrix._m0[_243].y, cbObjMatrix._m0[_243].x * _208));
    TANGENT_2_1.w = (float(TANGENT_2.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _365;
    TEXCOORD_6.y = _372;
    TEXCOORD_10 = sqrt(((_277 * _277) + (_278 * _278)) + (_279 * _279));
    gl_ClipDistance[0u] = dot(vec4(_351, _358, _365, _372), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_351, _358, _365, _372), vec4(cbInstanceData._m0[_221 + 3u]));
}


