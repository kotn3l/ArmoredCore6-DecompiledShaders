#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_A_NoLight_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _556;
float _557;
float _558;
float _559;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _116 = texture(sampler2D(M_A_NoLight_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _128 = cbMtdParam._m0[9u].x * _116.x;
    float _129 = cbMtdParam._m0[9u].y * _116.y;
    float _130 = cbMtdParam._m0[9u].z * _116.z;
    float _150 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _192 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _202 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _192);
    float _203 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _192);
    float _204 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _192);
    vec4 _209 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _211 = _209.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _293 = sqrt(((_202 * _202) + (_203 * _203)) + (_204 * _204));
        float _300 = (cbMatDynParam._m0[5u].x * _293) + cbMatDynParam._m0[5u].y;
        float _583 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        float _302 = isnan(1.0) ? _583 : (isnan(_583) ? 1.0 : min(_583, 1.0));
        float _306 = (cbMatDynParam._m0[5u].z * _293) + cbMatDynParam._m0[5u].w;
        float _594 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _594 : (isnan(_594) ? 1.0 : min(_594, 1.0))) - _302)) + _302) < ((_211 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _237 = uint(roundEven(NORMAL.w)) * 13u;
    uint _239 = _237 + 9u;
    uint _240 = _239 + uint(cbMatDynParam._m0[0u].w);
    float _246 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _128 : (isnan(_128) ? 0.0 : max(_128, 0.0)))) * cbInstanceData._m0[_240].x;
    float _247 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _129 : (isnan(_129) ? 0.0 : max(_129, 0.0)))) * cbInstanceData._m0[_240].y;
    float _248 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _130 : (isnan(_130) ? 0.0 : max(_130, 0.0)))) * cbInstanceData._m0[_240].z;
    uint _249 = _237 + 6u;
    float _258 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _259 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _274 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_258, _259, (log2((isnan(cbSceneParam._m0[77u].w) ? _150 : (isnan(_150) ? cbSceneParam._m0[77u].w : min(_150, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _276 = _274.x;
    float _277 = _274.y;
    float _278 = _274.z;
    float _279 = _274.w;
    float _362;
    float _364;
    float _366;
    float _368;
    if (_150 > cbSceneParam._m0[78u].w)
    {
        float _323 = isnan(_150) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _150 : min(cbSceneParam._m0[80u].w, _150));
        float _324 = _323 / _150;
        float _335 = _324 * _202;
        float _336 = _203 * _324;
        float _337 = (-0.0) - _336;
        float _339 = _324 * _204;
        float _341 = (cbSceneParam._m0[77u].w * _337) / _323;
        float _342 = _341 + cbSceneParam._m0[79u].w;
        float _343 = cbSceneParam._m0[79u].w - _336;
        float _349 = sqrt(((_335 * _335) + (_336 * _336)) + (_339 * _339));
        float _352 = (1.0 - (cbSceneParam._m0[77u].w / _323)) * _349;
        float _358 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _360 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _484;
        if (abs((_337 - _341) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _484 = ((((_342 > 0.0) ? exp2(_358 * _342) : (2.0 - exp2(_360 * _342))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _352;
        }
        else
        {
            float _439 = 1.0 / cbSceneParam._m0[80u].x;
            float _440 = isnan(_343) ? _342 : (isnan(_342) ? _343 : max(_342, _343));
            float _441 = isnan(_343) ? _342 : (isnan(_342) ? _343 : min(_342, _343));
            float _450 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : min(_440, 0.0));
            float _451 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : min(_441, 0.0));
            _484 = ((abs(_349 / _337) * cbSceneParam._m0[80u].y) * ((((_450 - _451) * 2.0) - ((exp2(_358 * (isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0)))) - exp2(_358 * (isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0))))) * _439)) - ((exp2(_360 * _450) - exp2(_360 * _451)) * _439))) + (_352 * cbSceneParam._m0[80u].z);
        }
        vec4 _486 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_258, _259, 1.0), 0.0);
        float _495 = exp2((_484 * (-1.44269502162933349609375)) * (1.0 - _486.w));
        float _496 = log2(_495);
        float _512 = log2(_279);
        _362 = (exp2(_512 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_496 * cbSceneParam._m0[78u].x)) * _486.x) / cbSceneParam._m0[78u].x)) + _276;
        _364 = (exp2(_512 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_496 * cbSceneParam._m0[78u].y)) * _486.y) / cbSceneParam._m0[78u].y)) + _277;
        _366 = (exp2(_512 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_496 * cbSceneParam._m0[78u].z)) * _486.z) / cbSceneParam._m0[78u].z)) + _278;
        _368 = _495 * _279;
    }
    else
    {
        _362 = _276;
        _364 = _277;
        _366 = _278;
        _368 = _279;
    }
    bool _522;
    vec4 _378;
    vec4 _402;
    float _404;
    float _409;
    float _410;
    float _411;
    float _412;
    bool _423;
    for (;;)
    {
        _378 = cbMatDynParam._m0[0u];
        float _380 = roundEven(_378.y);
        bool _381 = _380 == 3.0;
        float _383 = log2(_368);
        float _390 = _246 * exp2(_383 * cbSceneParam._m0[78u].x);
        float _391 = _247 * exp2(_383 * cbSceneParam._m0[78u].y);
        float _392 = _248 * exp2(_383 * cbSceneParam._m0[78u].z);
        float _399 = _211 + (-0.5);
        _402 = cbMtdParam._m0[1u];
        _404 = _402.y * _399;
        float _408 = (_380 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _409 = _408 * (_381 ? _390 : (_390 + (cbSceneParam._m0[72u].w * _362)));
        _410 = _408 * (_381 ? _391 : (_391 + (cbSceneParam._m0[72u].w * _364)));
        _411 = _408 * (_381 ? _392 : (_392 + (cbSceneParam._m0[72u].w * _366)));
        _412 = _399 * 0.999000012874603271484375;
        _423 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_423)
        {
            if ((cbInstanceData._m0[_237 + 7u].x + _412) < 0.5)
            {
                _522 = true;
                break;
            }
        }
        uint _476 = _239 + uint(_378.w);
        if ((cbInstanceData._m0[_476].w < 1.0) && ((cbInstanceData._m0[_476].w + _412) < 0.5))
        {
            _522 = true;
            break;
        }
        if ((_404 + 1.0) < _402.x)
        {
            _522 = true;
            break;
        }
        _522 = false;
        break;
    }
    float _527;
    if (_522)
    {
        discard_state = true;
        _527 = 0.0;
    }
    else
    {
        _527 = cbInstanceData._m0[_249].w;
    }
    SV_Target.x = _409;
    SV_Target.y = _410;
    SV_Target.z = _411;
    SV_Target.w = _527;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_249].w;
    discard_exit();
}


