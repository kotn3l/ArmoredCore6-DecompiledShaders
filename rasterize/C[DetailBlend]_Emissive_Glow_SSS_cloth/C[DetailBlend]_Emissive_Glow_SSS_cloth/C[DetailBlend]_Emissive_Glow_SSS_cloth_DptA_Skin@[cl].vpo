#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out vec2 TEXCOORD_6;

void main()
{
    uint _82 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    float _189 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _192 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _199 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _200 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _201 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _441;
    float _442;
    float _443;
    float _444;
    float _445;
    float _446;
    float _447;
    float _448;
    float _449;
    float _450;
    float _451;
    float _452;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _225 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
        precise float _229 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _234 = isnan(_229) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _229 : max(0.001000000047497451305389404296875, _229));
        precise float _236 = BLENDWEIGHT.x / _234;
        precise float _237 = BLENDWEIGHT.y / _234;
        precise float _238 = BLENDWEIGHT.z / _234;
        precise float _239 = BLENDWEIGHT.w / _234;
        uvec4 _246 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_225)).x * 13u) + 4u]);
        uint _247 = _246.x;
        uint _249 = (_247 + uint(float(BLENDINDICES.x))) * 3u;
        uint _256 = _249 + 1u;
        uint _263 = _249 + 2u;
        precise float _270 = _236 * cbObjMatrix._m0[_249].x;
        precise float _271 = _236 * cbObjMatrix._m0[_256].x;
        precise float _272 = _236 * cbObjMatrix._m0[_263].x;
        precise float _273 = _236 * cbObjMatrix._m0[_249].y;
        precise float _274 = _236 * cbObjMatrix._m0[_256].y;
        precise float _275 = _236 * cbObjMatrix._m0[_263].y;
        precise float _276 = _236 * cbObjMatrix._m0[_249].z;
        precise float _277 = _236 * cbObjMatrix._m0[_256].z;
        precise float _278 = _236 * cbObjMatrix._m0[_263].z;
        precise float _279 = _236 * cbObjMatrix._m0[_249].w;
        precise float _280 = _236 * cbObjMatrix._m0[_256].w;
        precise float _281 = _236 * cbObjMatrix._m0[_263].w;
        uint _284 = (_247 + uint(float(BLENDINDICES.y))) * 3u;
        uint _291 = _284 + 1u;
        uint _298 = _284 + 2u;
        precise float _305 = _237 * cbObjMatrix._m0[_284].x;
        precise float _306 = _237 * cbObjMatrix._m0[_291].x;
        precise float _307 = _237 * cbObjMatrix._m0[_298].x;
        precise float _308 = _237 * cbObjMatrix._m0[_284].y;
        precise float _309 = _237 * cbObjMatrix._m0[_291].y;
        precise float _310 = _237 * cbObjMatrix._m0[_298].y;
        precise float _311 = _237 * cbObjMatrix._m0[_284].z;
        precise float _312 = _237 * cbObjMatrix._m0[_291].z;
        precise float _313 = _237 * cbObjMatrix._m0[_298].z;
        precise float _314 = _237 * cbObjMatrix._m0[_284].w;
        precise float _315 = _237 * cbObjMatrix._m0[_291].w;
        precise float _316 = _237 * cbObjMatrix._m0[_298].w;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        uint _331 = (_247 + uint(float(BLENDINDICES.z))) * 3u;
        uint _338 = _331 + 1u;
        uint _345 = _331 + 2u;
        precise float _352 = _238 * cbObjMatrix._m0[_331].x;
        precise float _353 = _238 * cbObjMatrix._m0[_338].x;
        precise float _354 = _238 * cbObjMatrix._m0[_345].x;
        precise float _355 = _238 * cbObjMatrix._m0[_331].y;
        precise float _356 = _238 * cbObjMatrix._m0[_338].y;
        precise float _357 = _238 * cbObjMatrix._m0[_345].y;
        precise float _358 = _238 * cbObjMatrix._m0[_331].z;
        precise float _359 = _238 * cbObjMatrix._m0[_338].z;
        precise float _360 = _238 * cbObjMatrix._m0[_345].z;
        precise float _361 = _238 * cbObjMatrix._m0[_331].w;
        precise float _362 = _238 * cbObjMatrix._m0[_338].w;
        precise float _363 = _238 * cbObjMatrix._m0[_345].w;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        uint _378 = (_247 + uint(float(BLENDINDICES.w))) * 3u;
        uint _385 = _378 + 1u;
        uint _392 = _378 + 2u;
        precise float _399 = _239 * cbObjMatrix._m0[_378].x;
        precise float _400 = _239 * cbObjMatrix._m0[_385].x;
        precise float _401 = _239 * cbObjMatrix._m0[_392].x;
        precise float _402 = _239 * cbObjMatrix._m0[_378].y;
        precise float _403 = _239 * cbObjMatrix._m0[_385].y;
        precise float _404 = _239 * cbObjMatrix._m0[_392].y;
        precise float _405 = _239 * cbObjMatrix._m0[_378].z;
        precise float _406 = _239 * cbObjMatrix._m0[_385].z;
        precise float _407 = _239 * cbObjMatrix._m0[_392].z;
        precise float _408 = _239 * cbObjMatrix._m0[_378].w;
        precise float _409 = _239 * cbObjMatrix._m0[_385].w;
        precise float _410 = _239 * cbObjMatrix._m0[_392].w;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        precise float _421 = _374 + _409;
        precise float _422 = _375 + _410;
        _441 = _411;
        _442 = _414;
        _443 = _417;
        _444 = _420;
        _445 = _412;
        _446 = _415;
        _447 = _418;
        _448 = _421;
        _449 = _413;
        _450 = _416;
        _451 = _419;
        _452 = _422;
    }
    else
    {
        _441 = cbvModelParam._m0[0u].x;
        _442 = cbvModelParam._m0[0u].y;
        _443 = cbvModelParam._m0[0u].z;
        _444 = cbvModelParam._m0[0u].w;
        _445 = cbvModelParam._m0[1u].x;
        _446 = cbvModelParam._m0[1u].y;
        _447 = cbvModelParam._m0[1u].z;
        _448 = cbvModelParam._m0[1u].w;
        _449 = cbvModelParam._m0[2u].x;
        _450 = cbvModelParam._m0[2u].y;
        _451 = cbvModelParam._m0[2u].z;
        _452 = cbvModelParam._m0[2u].w;
    }
    precise float _453 = POSITION.x * _441;
    precise float _454 = POSITION.y * _442;
    precise float _455 = _454 + _453;
    precise float _456 = POSITION.z * _443;
    precise float _457 = _456 + _455;
    precise float _458 = 1.0 * _444;
    precise float _459 = _458 + _457;
    precise float _460 = POSITION.x * _445;
    precise float _461 = POSITION.y * _446;
    precise float _462 = _461 + _460;
    precise float _463 = POSITION.z * _447;
    precise float _464 = _463 + _462;
    precise float _465 = 1.0 * _448;
    precise float _466 = _465 + _464;
    precise float _467 = POSITION.x * _449;
    precise float _468 = POSITION.y * _450;
    precise float _469 = _468 + _467;
    precise float _470 = POSITION.z * _451;
    precise float _471 = _470 + _469;
    precise float _472 = 1.0 * _452;
    precise float _473 = _472 + _471;
    uint _487 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _82;
    precise float _506 = _459 - cbSceneParam._m0[3u].x;
    precise float _507 = _466 - cbSceneParam._m0[3u].y;
    precise float _508 = _473 - cbSceneParam._m0[3u].z;
    precise float _536 = _506 * cbSceneParam._m0[24u].x;
    precise float _537 = _507 * cbSceneParam._m0[24u].y;
    precise float _538 = _537 + _536;
    precise float _539 = _508 * cbSceneParam._m0[24u].z;
    precise float _540 = _539 + _538;
    precise float _541 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _542 = _541 + _540;
    precise float _543 = _506 * cbSceneParam._m0[25u].x;
    precise float _544 = _507 * cbSceneParam._m0[25u].y;
    precise float _545 = _544 + _543;
    precise float _546 = _508 * cbSceneParam._m0[25u].z;
    precise float _547 = _546 + _545;
    precise float _548 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _549 = _548 + _547;
    precise float _550 = _506 * cbSceneParam._m0[26u].x;
    precise float _551 = _507 * cbSceneParam._m0[26u].y;
    precise float _552 = _551 + _550;
    precise float _553 = _508 * cbSceneParam._m0[26u].z;
    precise float _554 = _553 + _552;
    precise float _555 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _556 = _555 + _554;
    precise float _557 = _506 * cbSceneParam._m0[27u].x;
    precise float _558 = _507 * cbSceneParam._m0[27u].y;
    precise float _559 = _558 + _557;
    precise float _560 = _508 * cbSceneParam._m0[27u].z;
    precise float _561 = _560 + _559;
    precise float _562 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _563 = _562 + _561;
    gl_Position.x = _542;
    gl_Position.y = _549;
    gl_Position.z = _556;
    gl_Position.w = _563;
    POSITION_1_1.x = _542;
    POSITION_1_1.y = _549;
    POSITION_1_1.z = _556;
    POSITION_1_1.w = _563;
    NORMAL_2.x = fma(_192, _443, fma(_191, _442, _441 * _189));
    NORMAL_2.y = fma(_192, _447, fma(_191, _446, _445 * _189));
    NORMAL_2.z = fma(_192, _451, fma(_191, _450, _449 * _189));
    NORMAL_2.w = float(texelFetch(g_InstanceIndexBuffer, int(_487)).x);
    TANGENT_2.x = fma(_201, _443, fma(_200, _442, _441 * _199));
    TANGENT_2.y = fma(_201, _447, fma(_200, _446, _445 * _199));
    TANGENT_2.z = fma(_201, _451, fma(_200, _450, _449 * _199));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _556;
    TEXCOORD_6.y = _563;
}


