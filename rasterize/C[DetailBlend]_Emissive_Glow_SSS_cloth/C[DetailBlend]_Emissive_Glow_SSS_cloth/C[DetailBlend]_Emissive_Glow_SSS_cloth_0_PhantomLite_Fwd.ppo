#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1217;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _199 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _200 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _201 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _207 = inversesqrt(dot(vec3(_199, _200, _201), vec3(_199, _200, _201)));
    float _214 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _215 = _214 * NORMAL.x;
    float _216 = _214 * NORMAL.y;
    float _217 = _214 * NORMAL.z;
    float _221 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _229;
    float _230;
    float _231;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _229 = (-0.0) - _215;
        _230 = (-0.0) - _216;
        _231 = (-0.0) - _217;
    }
    else
    {
        _229 = _215;
        _230 = _216;
        _231 = _217;
    }
    float _275 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _285 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _275);
    float _286 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _275);
    float _287 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _275);
    vec4 _300 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _317 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _339 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _348 = ((_317.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _339.x;
    float _351 = ((_317.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _339.y;
    float _354 = ((_317.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _339.z;
    float _355 = _339.w * _317.w;
    vec4 _368 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _375 = cbMtdParam._m0[16u].x + _368.x;
    vec4 _387 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _399 = (_300.z * 2.0) * (cbMtdParam._m0[14u].x + _387.z);
    float _417 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3588 = isnan(0.0) ? _417 : (isnan(_417) ? 0.0 : max(_417, 0.0));
    float _419 = isnan(1.0) ? _3588 : (isnan(_3588) ? 1.0 : min(_3588, 1.0));
    float _424 = (_419 * _419) * (3.0 - (_419 * 2.0));
    vec4 _437 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _445 = (_300.x * 2.0) + (-1.0);
    float _446 = (_300.y * 2.0) + (-1.0);
    float _447 = dot(vec2(_445, _446), vec2(_445, _446));
    float _3599 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _452 = sqrt(1.0 - (isnan(1.0) ? _3599 : (isnan(_3599) ? 1.0 : min(_3599, 1.0))));
    float _459 = (cbMtdParam._m0[14u].z * ((_387.x * 2.0) + (-1.0))) + _445;
    float _460 = (cbMtdParam._m0[14u].z * ((_387.y * 2.0) + (-1.0))) + _446;
    float _463 = fma(_452, _229, fma(_460, _221 * TANGENT.x, (_207 * _199) * _459));
    float _466 = fma(_452, _230, fma(_460, _221 * TANGENT.y, (_207 * _200) * _459));
    float _469 = fma(_452, _231, fma(_460, _221 * TANGENT.z, (_207 * _201) * _459));
    float _473 = inversesqrt(dot(vec3(_463, _466, _469), vec3(_463, _466, _469)));
    float _474 = _473 * _463;
    float _475 = _473 * _466;
    float _476 = _473 * _469;
    float _3610 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _477 = isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0));
    float _3621 = isnan(0.0) ? _399 : (isnan(_399) ? 0.0 : max(_399, 0.0));
    float _478 = isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0));
    float _3632 = isnan(0.0) ? _348 : (isnan(_348) ? 0.0 : max(_348, 0.0));
    float _479 = isnan(1.0) ? _3632 : (isnan(_3632) ? 1.0 : min(_3632, 1.0));
    float _3643 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _480 = isnan(1.0) ? _3643 : (isnan(_3643) ? 1.0 : min(_3643, 1.0));
    float _3654 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _481 = isnan(1.0) ? _3654 : (isnan(_3654) ? 1.0 : min(_3654, 1.0));
    float _3665 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _482 = isnan(1.0) ? _3665 : (isnan(_3665) ? 1.0 : min(_3665, 1.0));
    float _490 = cbMatDynParam._m0[9u].x * _479;
    float _491 = cbMatDynParam._m0[9u].y * _480;
    float _492 = cbMatDynParam._m0[9u].z * _481;
    float _499 = inversesqrt(dot(vec3(_285, _286, _287), vec3(_285, _286, _287)));
    float _500 = _499 * _285;
    float _501 = _499 * _286;
    float _502 = _499 * _287;
    float _503 = dot(vec3(_474, _475, _476), vec3(_500, _501, _502));
    float _509 = abs(exp2(log2(_503) * cbMatDynParam._m0[12u].x));
    float _510 = isnan(0.100000001490116119384765625) ? _509 : (isnan(_509) ? 0.100000001490116119384765625 : max(_509, 0.100000001490116119384765625));
    float _516 = ((isnan(0.699999988079071044921875) ? _510 : (isnan(_510) ? 0.699999988079071044921875 : min(_510, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _538 = 1.0 - cbMatDynParam._m0[8u].w;
    float _3686 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
    float _541 = 1.0 - cbMatDynParam._m0[7u].w;
    float _3697 = isnan(0.0) ? _541 : (isnan(_541) ? 0.0 : max(_541, 0.0));
    float _542 = isnan(1.0) ? _3697 : (isnan(_3697) ? 1.0 : min(_3697, 1.0));
    float _545 = (((isnan(1.0) ? _3686 : (isnan(_3686) ? 1.0 : min(_3686, 1.0))) - _542) * _516) + _542;
    float _564 = dot(vec3(_474, _475, _476), vec3(0.0, -1.0, 0.0));
    float _3708 = isnan(0.0) ? _564 : (isnan(_564) ? 0.0 : max(_564, 0.0));
    float _567 = isnan(1.0) ? _3708 : (isnan(_3708) ? 1.0 : min(_3708, 1.0));
    float _574 = (_567 * _479) * cbMatDynParam._m0[11u].x;
    float _576 = (_567 * _480) * cbMatDynParam._m0[11u].y;
    float _578 = (_567 * _481) * cbMatDynParam._m0[11u].z;
    float _585 = dot(vec3(_500, _501, _502), vec3(_474, _475, _476));
    float _588 = _585 * 2.0;
    float _598 = dot(vec3((-0.0) - (_500 - (_588 * _474)), (-0.0) - (_501 - (_588 * _475)), (-0.0) - (_502 - (_588 * _476))), vec3(0.0, -1.0, 0.0));
    float _3719 = isnan(0.0) ? _598 : (isnan(_598) ? 0.0 : max(_598, 0.0));
    float _605 = exp2(log2(isnan(1.0) ? _3719 : (isnan(_3719) ? 1.0 : min(_3719, 1.0))) * 4.0);
    float _631 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _637 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _638 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _640 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _642 = _640.w;
    float _662 = fma(_476, cbSceneParam._m0[5u].z, fma(_475, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _474));
    float _665 = fma(_476, cbSceneParam._m0[6u].z, fma(_475, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _474));
    float _668 = fma(_476, cbSceneParam._m0[7u].z, fma(_475, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _474));
    vec4 _670 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _672 = _670.x;
    float _684 = (((_670.y - _478) + (_670.w * _478)) * cbMtdParam._m0[3u].x) + _478;
    float _701 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_672 * _672)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _709 = (((cbMatDynParam._m0[15u].x - _482) * cbMatDynParam._m0[15u].w) * _701) + _482;
    float _717 = ((_701 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _684)) + _684;
    uint _741 = uint(roundEven(NORMAL.w)) * 13u;
    uint _743 = _741 + 9u;
    uint _744 = _743 + uint(cbMatDynParam._m0[0u].w);
    float _750 = (cbMtdParam._m0[0u].x * _490) * cbInstanceData._m0[_744].x;
    float _751 = (cbMtdParam._m0[0u].y * _491) * cbInstanceData._m0[_744].y;
    float _752 = (cbMtdParam._m0[0u].z * _492) * cbInstanceData._m0[_744].z;
    float _3730 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
    float _753 = isnan(1.0) ? _3730 : (isnan(_3730) ? 1.0 : min(_3730, 1.0));
    float _3741 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _754 = isnan(1.0) ? _3741 : (isnan(_3741) ? 1.0 : min(_3741, 1.0));
    float _3752 = isnan(0.0) ? _752 : (isnan(_752) ? 0.0 : max(_752, 0.0));
    float _755 = isnan(1.0) ? _3752 : (isnan(_3752) ? 1.0 : min(_3752, 1.0));
    vec4 _756 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _761 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _772 = (((_761.x - _709) + (_761.w * _709)) * cbMtdParam._m0[3u].x) + _709;
    float _785 = (cbMtdParam._m0[3u].x * (((_753 * _642) - _753) + _756.x)) + _753;
    float _786 = (cbMtdParam._m0[3u].x * (((_754 * _642) - _754) + _756.y)) + _754;
    float _787 = (cbMtdParam._m0[3u].x * (((_755 * _642) - _755) + _756.z)) + _755;
    vec4 _788 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _801 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_709 * (_490 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_709 * (_491 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_709 * (_492 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _788.z;
    float _805 = _801 * cbMatDynParam._m0[13u].w;
    float _815 = (_805 * (cbMatDynParam._m0[13u].x - _785)) + _785;
    float _816 = (_805 * (cbMatDynParam._m0[13u].y - _786)) + _786;
    float _817 = (_805 * (cbMatDynParam._m0[13u].z - _787)) + _787;
    float _825 = ((_801 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _772)) + _772;
    float _826 = 1.0 - _825;
    float _827 = _826 * _815;
    float _828 = _826 * _816;
    float _829 = _826 * _817;
    float _833 = (_815 + (-0.039999999105930328369140625)) * _825;
    float _834 = (_816 + (-0.039999999105930328369140625)) * _825;
    float _835 = (_817 + (-0.039999999105930328369140625)) * _825;
    float _836 = _833 + 0.039999999105930328369140625;
    float _837 = _834 + 0.039999999105930328369140625;
    float _838 = _835 + 0.039999999105930328369140625;
    vec4 _847 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _637, cbSceneParam._m0[86u].y * _638));
    float _850 = _847.x * TEXCOORD_4;
    float _851 = _503 * 2.0;
    float _855 = (_851 * _474) - _500;
    float _856 = (_851 * _475) - _501;
    float _857 = (_851 * _476) - _502;
    float _858 = abs(_585);
    float _3763 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
    float _860 = sqrt(_717);
    float _871 = exp2((_860 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3763 : (isnan(_3763) ? 1.0 : min(_3763, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_860 * 3.0));
    float _877 = (1.0 - _871) * ((_860 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _878 = _871 * _860;
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _914 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1216;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _941 = fma(_914, cbModelParam._m0[26u].z, fma(_910, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _906));
        float _945 = fma(_914, cbModelParam._m0[27u].z, fma(_910, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _906));
        float _949 = fma(_914, cbModelParam._m0[28u].z, fma(_910, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _906));
        float _974 = _906 + _474;
        float _975 = _910 + _475;
        float _976 = _914 + _476;
        float _986 = fma(_976, cbModelParam._m0[26u].z, fma(_975, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _974)) - _941;
        float _987 = fma(_976, cbModelParam._m0[27u].z, fma(_975, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _974)) - _945;
        float _988 = fma(_976, cbModelParam._m0[28u].z, fma(_975, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _974)) - _949;
        float _992 = inversesqrt(dot(vec3(_986, _987, _988), vec3(_986, _987, _988)));
        float _1005 = ((_992 * _986) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_941 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1006 = ((_992 * _987) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_945 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1007 = ((_992 * _988) / cbModelParam._m0[34u].z) + ((((((_949 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1010 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1017 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1024 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1031 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        float _1044 = exp2((_1010.w + (-0.5)) * 20.0) * 2.0;
        float _1045 = _1044 * (_1010.x + (-0.5));
        float _1046 = _1044 * (_1010.y + (-0.5));
        float _1047 = _1044 * (_1010.z + (-0.5));
        float _1054 = exp2((_1017.w + (-0.5)) * 20.0) * 2.0;
        float _1055 = _1054 * (_1017.x + (-0.5));
        float _1056 = _1054 * (_1017.y + (-0.5));
        float _1057 = _1054 * (_1017.z + (-0.5));
        float _1064 = exp2((_1024.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1024.x + (-0.5));
        float _1066 = _1064 * (_1024.y + (-0.5));
        float _1067 = _1064 * (_1024.z + (-0.5));
        float _1074 = exp2((_1031.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1031.x + (-0.5));
        float _1076 = _1074 * (_1031.y + (-0.5));
        float _1077 = _1074 * (_1031.z + (-0.5));
        float _1078 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1079 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1080 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1081 = _1045 * 0.5;
        float _1082 = _1055 * 0.5;
        float _1083 = _1065 * 0.5;
        float _1084 = dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083));
        float _1089 = (_1084 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1084);
        float _1098 = (dot(vec3(_474, _475, _476), vec3(_1089 * _1081, _1089 * _1082, _1089 * _1083)) + 1.0) * 0.5;
        float _3789 = isnan(0.0) ? _1098 : (isnan(_1098) ? 0.0 : max(_1098, 0.0));
        float _1108 = sqrt(((_1082 * _1082) + (_1081 * _1081)) + (_1083 * _1083)) / (_1078 + 9.9999997473787516355514526367188e-06);
        float _3800 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _3800 : (isnan(_3800) ? 1.0 : min(_3800, 1.0));
        float _1110 = _1109 * 2.0;
        float _1114 = (1.0 - _1109) / (_1109 + 1.0);
        float _3811 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1115 = isnan(1.0) ? _3811 : (isnan(_3811) ? 1.0 : min(_3811, 1.0));
        float _1124 = ((((1.0 - _1115) * (_1110 + 2.0)) * exp2(log2(isnan(1.0) ? _3789 : (isnan(_3789) ? 1.0 : min(_3789, 1.0))) * (_1110 + 1.0))) + _1115) * _1078;
        float _1125 = _1046 * 0.5;
        float _1126 = _1056 * 0.5;
        float _1127 = _1066 * 0.5;
        float _1128 = dot(vec3(_1125, _1126, _1127), vec3(_1125, _1126, _1127));
        float _1133 = (_1128 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1128);
        float _1141 = (dot(vec3(_474, _475, _476), vec3(_1133 * _1125, _1133 * _1126, _1133 * _1127)) + 1.0) * 0.5;
        float _3822 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1150 = sqrt(((_1126 * _1126) + (_1125 * _1125)) + (_1127 * _1127)) / (_1079 + 9.9999997473787516355514526367188e-06);
        float _3833 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _3833 : (isnan(_3833) ? 1.0 : min(_3833, 1.0));
        float _1152 = _1151 * 2.0;
        float _1156 = (1.0 - _1151) / (_1151 + 1.0);
        float _3844 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _3844 : (isnan(_3844) ? 1.0 : min(_3844, 1.0));
        float _1166 = ((((1.0 - _1157) * (_1152 + 2.0)) * exp2(log2(isnan(1.0) ? _3822 : (isnan(_3822) ? 1.0 : min(_3822, 1.0))) * (_1152 + 1.0))) + _1157) * _1079;
        float _1167 = _1047 * 0.5;
        float _1168 = _1057 * 0.5;
        float _1169 = _1067 * 0.5;
        float _1170 = dot(vec3(_1167, _1168, _1169), vec3(_1167, _1168, _1169));
        float _1175 = (_1170 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1170);
        float _1183 = (dot(vec3(_474, _475, _476), vec3(_1175 * _1167, _1175 * _1168, _1175 * _1169)) + 1.0) * 0.5;
        float _3855 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1192 = sqrt(((_1168 * _1168) + (_1167 * _1167)) + (_1169 * _1169)) / (_1080 + 9.9999997473787516355514526367188e-06);
        float _3866 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _3866 : (isnan(_3866) ? 1.0 : min(_3866, 1.0));
        float _1194 = _1193 * 2.0;
        float _1198 = (1.0 - _1193) / (_1193 + 1.0);
        float _3877 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _3877 : (isnan(_3877) ? 1.0 : min(_3877, 1.0));
        float _1208 = ((((1.0 - _1199) * (_1194 + 2.0)) * exp2(log2(isnan(1.0) ? _3855 : (isnan(_3855) ? 1.0 : min(_3855, 1.0))) * (_1194 + 1.0))) + _1199) * _1080;
        _1216 = _1047;
        _1218 = _1046;
        _1219 = _1045;
        _1220 = _1057;
        _1221 = _1056;
        _1222 = _1055;
        _1223 = _1067;
        _1224 = _1066;
        _1225 = _1065;
        _1226 = _1080;
        _1227 = _1079;
        _1228 = _1078;
        _1229 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0)));
        _1230 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0)));
        _1231 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0)));
    }
    else
    {
        _1216 = _1217;
        _1218 = _1217;
        _1219 = _1217;
        _1220 = _1217;
        _1221 = _1217;
        _1222 = _1217;
        _1223 = _1217;
        _1224 = _1217;
        _1225 = _1217;
        _1226 = _1217;
        _1227 = _1217;
        _1228 = _1217;
        _1229 = 0.0;
        _1230 = 0.0;
        _1231 = 0.0;
    }
    float _1526;
    float _1527;
    float _1528;
    float _1529;
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1257 = fma(_914, cbModelParam._m0[30u].z, fma(_910, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _906));
        float _1261 = fma(_914, cbModelParam._m0[31u].z, fma(_910, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _906));
        float _1265 = fma(_914, cbModelParam._m0[32u].z, fma(_910, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _906));
        float _1288 = _906 + _474;
        float _1289 = _910 + _475;
        float _1290 = _914 + _476;
        float _1300 = fma(_1290, cbModelParam._m0[30u].z, fma(_1289, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1288)) - _1257;
        float _1301 = fma(_1290, cbModelParam._m0[31u].z, fma(_1289, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1288)) - _1261;
        float _1302 = fma(_1290, cbModelParam._m0[32u].z, fma(_1289, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1288)) - _1265;
        float _1306 = inversesqrt(dot(vec3(_1300, _1301, _1302), vec3(_1300, _1301, _1302)));
        float _1319 = ((_1306 * _1300) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1257 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1320 = ((_1306 * _1301) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1261 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1321 = ((_1306 * _1302) / cbModelParam._m0[35u].z) + ((((((_1265 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1323 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1319, _1320, _1321), 0.0);
        vec4 _1330 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1319, _1320, _1321), 0.0);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1319, _1320, _1321), 0.0);
        vec4 _1344 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1319, _1320, _1321), 0.0);
        float _1356 = exp2((_1323.w + (-0.5)) * 20.0) * 2.0;
        float _1357 = _1356 * (_1323.x + (-0.5));
        float _1358 = _1356 * (_1323.y + (-0.5));
        float _1359 = _1356 * (_1323.z + (-0.5));
        float _1366 = exp2((_1330.w + (-0.5)) * 20.0) * 2.0;
        float _1367 = _1366 * (_1330.x + (-0.5));
        float _1368 = _1366 * (_1330.y + (-0.5));
        float _1369 = _1366 * (_1330.z + (-0.5));
        float _1376 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1377 = _1376 * (_1337.x + (-0.5));
        float _1378 = _1376 * (_1337.y + (-0.5));
        float _1379 = _1376 * (_1337.z + (-0.5));
        float _1386 = exp2((_1344.w + (-0.5)) * 20.0) * 2.0;
        float _1387 = _1386 * (_1344.x + (-0.5));
        float _1388 = _1386 * (_1344.y + (-0.5));
        float _1389 = _1386 * (_1344.z + (-0.5));
        float _1390 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1391 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1392 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1393 = _1357 * 0.5;
        float _1394 = _1367 * 0.5;
        float _1395 = _1377 * 0.5;
        float _1396 = dot(vec3(_1393, _1394, _1395), vec3(_1393, _1394, _1395));
        float _1401 = (_1396 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1396);
        float _1409 = (dot(vec3(_474, _475, _476), vec3(_1401 * _1393, _1401 * _1394, _1401 * _1395)) + 1.0) * 0.5;
        float _3918 = isnan(0.0) ? _1409 : (isnan(_1409) ? 0.0 : max(_1409, 0.0));
        float _1418 = sqrt(((_1394 * _1394) + (_1393 * _1393)) + (_1395 * _1395)) / (_1390 + 9.9999997473787516355514526367188e-06);
        float _3929 = isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0));
        float _1419 = isnan(1.0) ? _3929 : (isnan(_3929) ? 1.0 : min(_3929, 1.0));
        float _1420 = _1419 * 2.0;
        float _1424 = (1.0 - _1419) / (_1419 + 1.0);
        float _3940 = isnan(0.0) ? _1424 : (isnan(_1424) ? 0.0 : max(_1424, 0.0));
        float _1425 = isnan(1.0) ? _3940 : (isnan(_3940) ? 1.0 : min(_3940, 1.0));
        float _1434 = ((((1.0 - _1425) * (_1420 + 2.0)) * exp2(log2(isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0))) * (_1420 + 1.0))) + _1425) * _1390;
        float _1435 = _1358 * 0.5;
        float _1436 = _1368 * 0.5;
        float _1437 = _1378 * 0.5;
        float _1438 = dot(vec3(_1435, _1436, _1437), vec3(_1435, _1436, _1437));
        float _1443 = (_1438 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1438);
        float _1451 = (dot(vec3(_474, _475, _476), vec3(_1443 * _1435, _1443 * _1436, _1443 * _1437)) + 1.0) * 0.5;
        float _3951 = isnan(0.0) ? _1451 : (isnan(_1451) ? 0.0 : max(_1451, 0.0));
        float _1460 = sqrt(((_1436 * _1436) + (_1435 * _1435)) + (_1437 * _1437)) / (_1391 + 9.9999997473787516355514526367188e-06);
        float _3962 = isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0));
        float _1461 = isnan(1.0) ? _3962 : (isnan(_3962) ? 1.0 : min(_3962, 1.0));
        float _1462 = _1461 * 2.0;
        float _1466 = (1.0 - _1461) / (_1461 + 1.0);
        float _3973 = isnan(0.0) ? _1466 : (isnan(_1466) ? 0.0 : max(_1466, 0.0));
        float _1467 = isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0));
        float _1476 = ((((1.0 - _1467) * (_1462 + 2.0)) * exp2(log2(isnan(1.0) ? _3951 : (isnan(_3951) ? 1.0 : min(_3951, 1.0))) * (_1462 + 1.0))) + _1467) * _1391;
        float _1477 = _1359 * 0.5;
        float _1478 = _1369 * 0.5;
        float _1479 = _1379 * 0.5;
        float _1480 = dot(vec3(_1477, _1478, _1479), vec3(_1477, _1478, _1479));
        float _1485 = (_1480 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1480);
        float _1493 = (dot(vec3(_474, _475, _476), vec3(_1485 * _1477, _1485 * _1478, _1485 * _1479)) + 1.0) * 0.5;
        float _3984 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
        float _1502 = sqrt(((_1478 * _1478) + (_1477 * _1477)) + (_1479 * _1479)) / (_1392 + 9.9999997473787516355514526367188e-06);
        float _3995 = isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0));
        float _1503 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
        float _1504 = _1503 * 2.0;
        float _1508 = (1.0 - _1503) / (_1503 + 1.0);
        float _4006 = isnan(0.0) ? _1508 : (isnan(_1508) ? 0.0 : max(_1508, 0.0));
        float _1509 = isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0));
        float _1518 = ((((1.0 - _1509) * (_1504 + 2.0)) * exp2(log2(isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0))) * (_1504 + 1.0))) + _1509) * _1392;
        _1526 = _1359;
        _1527 = _1358;
        _1528 = _1357;
        _1529 = _1369;
        _1530 = _1368;
        _1531 = _1367;
        _1532 = _1379;
        _1533 = _1378;
        _1534 = _1377;
        _1535 = _1392;
        _1536 = _1391;
        _1537 = _1390;
        _1538 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1434 : (isnan(_1434) ? 0.0 : max(_1434, 0.0)));
        _1539 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0)));
        _1540 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1518 : (isnan(_1518) ? 0.0 : max(_1518, 0.0)));
    }
    else
    {
        _1526 = _1217;
        _1527 = _1217;
        _1528 = _1217;
        _1529 = _1217;
        _1530 = _1217;
        _1531 = _1217;
        _1532 = _1217;
        _1533 = _1217;
        _1534 = _1217;
        _1535 = _1217;
        _1536 = _1217;
        _1537 = _1217;
        _1538 = 0.0;
        _1539 = 0.0;
        _1540 = 0.0;
    }
    float _1550 = (cbModelParam._m0[1u].x * (_1538 - _1229)) + _1229;
    float _1551 = (cbModelParam._m0[1u].x * (_1539 - _1230)) + _1230;
    float _1552 = (cbModelParam._m0[1u].x * (_1540 - _1231)) + _1231;
    float _1573 = fma(_1552, cbSceneParam._m0[89u].z, fma(_1551, cbSceneParam._m0[89u].y, _1550 * cbSceneParam._m0[89u].x));
    float _1576 = fma(_1552, cbSceneParam._m0[90u].z, fma(_1551, cbSceneParam._m0[90u].y, _1550 * cbSceneParam._m0[90u].x));
    float _1579 = fma(_1552, cbSceneParam._m0[91u].z, fma(_1551, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1550));
    float _1594 = _855 * 0.5;
    float _1595 = _856 * 0.5;
    float _1596 = _857 * 0.5;
    float _1597 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1528, _1531, _1534, _1537));
    float _1600 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1527, _1530, _1533, _1536));
    float _1603 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1526, _1529, _1532, _1535));
    float _1634;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1610 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1216, _1220, _1223, _1226));
        float _1614 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1218, _1221, _1224, _1227));
        float _1618 = dot(vec4(_1594, _1595, _1596, 1.0), vec4(_1219, _1222, _1225, _1228));
        float _1625 = dot(vec4(cbModelParam._m0[39u]), vec4(_1594, _1595, _1596, 1.0));
        _1634 = dot(vec3(isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)), isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1625) ? 0.0 : (isnan(0.0) ? _1625 : max(0.0, _1625))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1634 = 1.0;
    }
    float _1645;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1636 = dot(vec4(cbModelParam._m0[40u]), vec4(_1594, _1595, _1596, 1.0));
        _1645 = dot(vec3(isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0)), isnan(0.0) ? _1600 : (isnan(_1600) ? 0.0 : max(_1600, 0.0)), isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1636) ? 0.0 : (isnan(0.0) ? _1636 : max(0.0, _1636))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1645 = 1.0;
    }
    float _1649 = (_1645 * cbModelParam._m0[1u].x) + (_1634 * (1.0 - cbModelParam._m0[1u].x));
    float _1659 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _717);
    float _1660 = isnan(_1659) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1659 : min(cbModelParam._m0[25u].z, _1659));
    float _1740;
    float _1742;
    float _1744;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1707 = fma(_914, cbModelParam._m0[13u].z, fma(_910, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _906)) + cbModelParam._m0[13u].w;
        float _1711 = fma(_914, cbModelParam._m0[14u].z, fma(_910, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _906)) + cbModelParam._m0[14u].w;
        float _1715 = fma(_914, cbModelParam._m0[15u].z, fma(_910, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _906)) + cbModelParam._m0[15u].w;
        float _1718 = fma(_857, cbModelParam._m0[13u].z, fma(_856, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _855));
        float _1721 = fma(_857, cbModelParam._m0[14u].z, fma(_856, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _855));
        float _1724 = fma(_857, cbModelParam._m0[15u].z, fma(_856, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _855));
        float _1752;
        if (_1718 > 0.0)
        {
            _1752 = abs((1.0 - _1707) / _1718);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1718 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1707 + 1.0) / _1718);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1752 = frontier_phi_16_14_ladder;
        }
        float _1956;
        if (_1721 > 0.0)
        {
            _1956 = abs((1.0 - _1711) / _1721);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1721 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1711 + 1.0) / _1721);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1956 = frontier_phi_25_21_ladder;
        }
        float _2210;
        if (_1724 > 0.0)
        {
            _2210 = abs((1.0 - _1715) / _1724);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1724 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1715 + 1.0) / _1724);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2210 = frontier_phi_37_32_ladder;
        }
        float _2212 = isnan(_1956) ? _1752 : (isnan(_1752) ? _1956 : min(_1752, _1956));
        float _2213 = isnan(_2210) ? _2212 : (isnan(_2212) ? _2210 : min(_2212, _2210));
        float _2217 = (_2213 * _1718) + _1707;
        float _2218 = (_2213 * _1721) + _1711;
        float _2219 = (_2213 * _1724) + _1715;
        float _2220 = _2213 * 9.9999997473787516355514526367188e-05;
        float _2222 = (-1.0) - _2220;
        float _2224 = _2220 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2219 > _2224) || ((_2219 < _2222) || ((_2218 > _2224) || ((_2218 < _2222) || ((_2217 < _2222) || (_2217 > _2224))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2347 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2219, cbModelParam._m0[9u].z, fma(_2218, cbModelParam._m0[9u].y, _2217 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2219, cbModelParam._m0[10u].z, fma(_2218, cbModelParam._m0[10u].y, _2217 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2219, cbModelParam._m0[11u].z, fma(_2218, cbModelParam._m0[11u].y, _2217 * cbModelParam._m0[11u].x))), _1660);
            frontier_phi_15_37_ladder = _2347.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2347.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2347.x * cbModelParam._m0[1u].y;
        }
        _1740 = frontier_phi_15_37_ladder_2;
        _1742 = frontier_phi_15_37_ladder_1;
        _1744 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1728 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_855, _856, _857), _1660);
        _1740 = _1728.x * cbModelParam._m0[1u].y;
        _1742 = _1728.y * cbModelParam._m0[1u].y;
        _1744 = _1728.z * cbModelParam._m0[1u].y;
    }
    float _1748 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _717);
    float _1749 = isnan(_1748) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1748 : min(cbModelParam._m0[25u].w, _1748));
    float _1840;
    float _1842;
    float _1844;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1804 = fma(_914, cbModelParam._m0[21u].z, fma(_910, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _906)) + cbModelParam._m0[21u].w;
        float _1808 = fma(_914, cbModelParam._m0[22u].z, fma(_910, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _906)) + cbModelParam._m0[22u].w;
        float _1812 = fma(_914, cbModelParam._m0[23u].z, fma(_910, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _906)) + cbModelParam._m0[23u].w;
        float _1815 = fma(_857, cbModelParam._m0[21u].z, fma(_856, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _855));
        float _1818 = fma(_857, cbModelParam._m0[22u].z, fma(_856, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _855));
        float _1821 = fma(_857, cbModelParam._m0[23u].z, fma(_856, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _855));
        float _1961;
        if (_1815 > 0.0)
        {
            _1961 = abs((1.0 - _1804) / _1815);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1815 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1804 + 1.0) / _1815);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1961 = frontier_phi_27_23_ladder;
        }
        float _2237;
        if (_1818 > 0.0)
        {
            _2237 = abs((1.0 - _1808) / _1818);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1818 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1808 + 1.0) / _1818);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2237 = frontier_phi_39_34_ladder;
        }
        float _2450;
        if (_1821 > 0.0)
        {
            _2450 = abs((1.0 - _1812) / _1821);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_1821 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_1812 + 1.0) / _1821);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2450 = frontier_phi_48_45_ladder;
        }
        float _2452 = isnan(_2237) ? _1961 : (isnan(_1961) ? _2237 : min(_1961, _2237));
        float _2453 = isnan(_2450) ? _2452 : (isnan(_2452) ? _2450 : min(_2452, _2450));
        float _2457 = (_2453 * _1815) + _1804;
        float _2458 = (_2453 * _1818) + _1808;
        float _2459 = (_2453 * _1821) + _1812;
        float _2460 = _2453 * 9.9999997473787516355514526367188e-05;
        float _2461 = (-1.0) - _2460;
        float _2463 = _2460 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2459 > _2463) || ((_2459 < _2461) || ((_2458 > _2463) || ((_2458 < _2461) || ((_2457 < _2461) || (_2457 > _2463))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2693 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2459, cbModelParam._m0[17u].z, fma(_2458, cbModelParam._m0[17u].y, _2457 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2459, cbModelParam._m0[18u].z, fma(_2458, cbModelParam._m0[18u].y, _2457 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2459, cbModelParam._m0[19u].z, fma(_2458, cbModelParam._m0[19u].y, _2457 * cbModelParam._m0[19u].x))), _1749);
            frontier_phi_24_48_ladder = _2693.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2693.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2693.x * cbModelParam._m0[1u].z;
        }
        _1840 = frontier_phi_24_48_ladder_2;
        _1842 = frontier_phi_24_48_ladder_1;
        _1844 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _1824 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_855, _856, _857), _1749);
        _1840 = _1824.x * cbModelParam._m0[1u].z;
        _1842 = _1824.y * cbModelParam._m0[1u].z;
        _1844 = _1824.z * cbModelParam._m0[1u].z;
    }
    float _1857 = (((_877 * _836) + _878) * _850) * ((cbModelParam._m0[1u].w * (_1840 - _1740)) + _1740);
    float _1859 = (((_877 * _837) + _878) * _850) * ((cbModelParam._m0[1u].w * (_1842 - _1742)) + _1742);
    float _1861 = (((_877 * _838) + _878) * _850) * ((cbModelParam._m0[1u].w * (_1844 - _1744)) + _1744);
    float _1864 = fma(_1861, cbSceneParam._m0[89u].z, fma(_1859, cbSceneParam._m0[89u].y, _1857 * cbSceneParam._m0[89u].x));
    float _1867 = fma(_1861, cbSceneParam._m0[90u].z, fma(_1859, cbSceneParam._m0[90u].y, _1857 * cbSceneParam._m0[90u].x));
    float _1870 = fma(_1861, cbSceneParam._m0[91u].z, fma(_1859, cbSceneParam._m0[91u].y, _1857 * cbSceneParam._m0[91u].x));
    uvec4 _1880 = floatBitsToUint(cbInstanceData._m0[_741 + 5u]);
    uint _1882 = _1880.x * 14u;
    uint _1883 = _1882 + 13u;
    float _1890 = _850 + (-1.0);
    float _1895 = (cbLight._m0[_1883].x * _1890) + 1.0;
    float _1896 = (cbLight._m0[_1883].y * _1890) + 1.0;
    float _1897 = (cbLight._m0[_1883].z * _1890) + 1.0;
    float _1898 = (cbLight._m0[_1883].w * _1890) + 1.0;
    uint _1899 = _1882 + 5u;
    float _1905 = isnan(1.0) ? _1896 : (isnan(_1896) ? 1.0 : min(_1896, 1.0));
    uint _1909 = _1882 + 4u;
    float _1915 = isnan(1.0) ? _1895 : (isnan(_1895) ? 1.0 : min(_1895, 1.0));
    uint _1919 = _1882 | 1u;
    float _1930 = dot(vec3(cbLight._m0[_1882].xyz), vec3(_474, _475, _476));
    float _1933 = dot(vec3(cbLight._m0[_1919].xyz), vec3(_474, _475, _476));
    float _4142 = isnan(0.0) ? _1930 : (isnan(_1930) ? 0.0 : max(_1930, 0.0));
    float _4153 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
    float _1938 = (isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0))) * 0.3183098733425140380859375;
    float _1940 = (isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0))) * 0.3183098733425140380859375;
    float _1947 = ((cbLight._m0[_1899].x * _1905) * _1940) + ((cbLight._m0[_1909].x * _1915) * _1938);
    float _1948 = ((_1905 * cbLight._m0[_1899].y) * _1940) + ((_1915 * cbLight._m0[_1909].y) * _1938);
    float _1949 = ((_1905 * cbLight._m0[_1899].z) * _1940) + ((_1915 * cbLight._m0[_1909].z) * _1938);
    uvec4 _1953 = floatBitsToUint(cbLight._m0[_1882 + 12u]);
    bool _1955 = _1953.x == 0u;
    float _1966;
    float _1968;
    float _1970;
    if (_1955)
    {
        _1966 = _1947;
        _1968 = _1948;
        _1970 = _1949;
    }
    else
    {
        uint _1974 = _1882 + 6u;
        float _1990 = (dot(vec3(cbLight._m0[_1882 + 2u].xyz), vec3(_474, _475, _476)) * 0.5) + 0.5;
        float _1991 = _1990 * _1990;
        float _4164 = isnan(0.0) ? _1991 : (isnan(_1991) ? 0.0 : max(_1991, 0.0));
        float _1992 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
        float _1993 = isnan(1.0) ? _1897 : (isnan(_1897) ? 1.0 : min(_1897, 1.0));
        _1966 = (((cbLight._m0[_1974].x * 0.3183098733425140380859375) * _1992) * _1993) + _1947;
        _1968 = (((cbLight._m0[_1974].y * 0.3183098733425140380859375) * _1992) * _1993) + _1948;
        _1970 = (((cbLight._m0[_1974].z * 0.3183098733425140380859375) * _1992) * _1993) + _1949;
    }
    bool _1973 = _1953.y == 0u;
    float _2011;
    float _2013;
    float _2015;
    if (_1973)
    {
        _2011 = _1966;
        _2013 = _1968;
        _2015 = _1970;
    }
    else
    {
        uint _2181 = _1882 + 7u;
        float _2197 = (dot(vec3(cbLight._m0[_1882 + 3u].xyz), vec3(_474, _475, _476)) * 0.5) + 0.5;
        float _2198 = _2197 * _2197;
        float _4180 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
        float _2199 = isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0));
        float _2200 = isnan(1.0) ? _1898 : (isnan(_1898) ? 1.0 : min(_1898, 1.0));
        _2011 = (((cbLight._m0[_2181].x * 0.3183098733425140380859375) * _2199) * _2200) + _1966;
        _2013 = (((cbLight._m0[_2181].y * 0.3183098733425140380859375) * _2199) * _2200) + _1968;
        _2015 = (((cbLight._m0[_2181].z * 0.3183098733425140380859375) * _2199) * _2200) + _1970;
    }
    uint _2018 = _1882 + 8u;
    float _2031 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1882].w)) * _717) * 0.949999988079071044921875);
    float _2032 = _2031 * _2031;
    float _2033 = cbLight._m0[_1882].x + _500;
    float _2034 = cbLight._m0[_1882].y + _501;
    float _2035 = cbLight._m0[_1882].z + _502;
    float _2039 = inversesqrt(dot(vec3(_2033, _2034, _2035), vec3(_2033, _2034, _2035)));
    float _2040 = _2039 * _2033;
    float _2041 = _2039 * _2034;
    float _2042 = _2039 * _2035;
    float _2043 = dot(vec3(_474, _475, _476), vec3(cbLight._m0[_1882].xyz));
    float _4196 = isnan(0.0) ? _2043 : (isnan(_2043) ? 0.0 : max(_2043, 0.0));
    float _2046 = isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0));
    float _4207 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _2047 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
    float _2048 = dot(vec3(_474, _475, _476), vec3(_2040, _2041, _2042));
    float _4218 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _2051 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
    float _2052 = dot(vec3(cbLight._m0[_1882].xyz), vec3(_2040, _2041, _2042));
    float _4229 = isnan(0.0) ? _2052 : (isnan(_2052) ? 0.0 : max(_2052, 0.0));
    float _2056 = _2032 * _2032;
    float _2060 = ((_2051 * _2051) * (_2056 + (-1.0))) + 1.0;
    float _2068 = exp2(log2(1.0 - (isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0)))) * 5.0);
    float _2069 = 0.959999978542327880859375 - _833;
    float _2071 = 0.959999978542327880859375 - _834;
    float _2072 = 0.959999978542327880859375 - _835;
    float _2079 = 1.0 - _2032;
    float _2090 = (0.5 / (((_2047 * ((_2046 * _2079) + _2032)) + 9.9999999392252902907785028219223e-09) + (((_2047 * _2079) + _2032) * _2046))) * _2046;
    float _4240 = isnan(0.0) ? _2090 : (isnan(_2090) ? 0.0 : max(_2090, 0.0));
    float _2092 = (isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0))) * (_2056 / ((_2060 * _2060) * 3.141590118408203125));
    uint _2103 = _1882 + 9u;
    float _2114 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1919].w)) * _717) * 0.949999988079071044921875);
    float _2115 = _2114 * _2114;
    float _2116 = cbLight._m0[_1919].x + _500;
    float _2117 = cbLight._m0[_1919].y + _501;
    float _2118 = cbLight._m0[_1919].z + _502;
    float _2122 = inversesqrt(dot(vec3(_2116, _2117, _2118), vec3(_2116, _2117, _2118)));
    float _2123 = _2122 * _2116;
    float _2124 = _2122 * _2117;
    float _2125 = _2122 * _2118;
    float _2126 = dot(vec3(_474, _475, _476), vec3(cbLight._m0[_1919].xyz));
    float _4251 = isnan(0.0) ? _2126 : (isnan(_2126) ? 0.0 : max(_2126, 0.0));
    float _2129 = isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0));
    float _2130 = dot(vec3(_474, _475, _476), vec3(_2123, _2124, _2125));
    float _4262 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
    float _2133 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
    float _2134 = dot(vec3(cbLight._m0[_1919].xyz), vec3(_2123, _2124, _2125));
    float _4273 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
    float _2138 = _2115 * _2115;
    float _2142 = ((_2133 * _2133) * (_2138 + (-1.0))) + 1.0;
    float _2149 = exp2(log2(1.0 - (isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0)))) * 5.0);
    float _2156 = 1.0 - _2115;
    float _2166 = (0.5 / (((_2047 * ((_2129 * _2156) + _2115)) + 9.9999999392252902907785028219223e-09) + (((_2047 * _2156) + _2115) * _2129))) * _2129;
    float _4284 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    float _2168 = (isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0))) * (_2138 / ((_2142 * _2142) * 3.141590118408203125));
    float _2178 = (((((_2149 * _2069) + _836) * cbLight._m0[_2103].x) * _2168) * _1905) + (((((_2068 * _2069) + _836) * cbLight._m0[_2018].x) * _2092) * _1915);
    float _2179 = (((((_2149 * _2071) + _837) * cbLight._m0[_2103].y) * _2168) * _1905) + (((((_2068 * _2071) + _837) * cbLight._m0[_2018].y) * _2092) * _1915);
    float _2180 = (((((_2149 * _2072) + _838) * cbLight._m0[_2103].z) * _2168) * _1905) + (((((_2068 * _2072) + _838) * cbLight._m0[_2018].z) * _2092) * _1915);
    float _2242;
    float _2244;
    float _2246;
    if (_1955)
    {
        _2242 = _2178;
        _2244 = _2179;
        _2246 = _2180;
    }
    else
    {
        uint _2248 = _1882 + 2u;
        uint _2252 = _1882 + 10u;
        float _2266 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2248].w)) * _717) * 0.949999988079071044921875);
        float _2267 = _2266 * _2266;
        float _2268 = cbLight._m0[_2248].x + _500;
        float _2269 = cbLight._m0[_2248].y + _501;
        float _2270 = cbLight._m0[_2248].z + _502;
        float _2274 = inversesqrt(dot(vec3(_2268, _2269, _2270), vec3(_2268, _2269, _2270)));
        float _2275 = _2274 * _2268;
        float _2276 = _2274 * _2269;
        float _2277 = _2274 * _2270;
        float _2278 = dot(vec3(_474, _475, _476), vec3(cbLight._m0[_2248].xyz));
        float _4295 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
        float _2281 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
        float _2282 = dot(vec3(_474, _475, _476), vec3(_2275, _2276, _2277));
        float _4306 = isnan(0.0) ? _2282 : (isnan(_2282) ? 0.0 : max(_2282, 0.0));
        float _2285 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _2286 = dot(vec3(cbLight._m0[_2248].xyz), vec3(_2275, _2276, _2277));
        float _4317 = isnan(0.0) ? _2286 : (isnan(_2286) ? 0.0 : max(_2286, 0.0));
        float _2290 = _2267 * _2267;
        float _2294 = ((_2285 * _2285) * (_2290 + (-1.0))) + 1.0;
        float _2301 = exp2(log2(1.0 - (isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0)))) * 5.0);
        float _2308 = 1.0 - _2267;
        float _2318 = (0.5 / (((_2047 * ((_2281 * _2308) + _2267)) + 9.9999999392252902907785028219223e-09) + (((_2047 * _2308) + _2267) * _2281))) * _2281;
        float _4328 = isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0));
        float _2320 = (isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0))) * (_2290 / ((_2294 * _2294) * 3.141590118408203125));
        float _2321 = isnan(1.0) ? _1897 : (isnan(_1897) ? 1.0 : min(_1897, 1.0));
        _2242 = (((((_2301 * _2069) + _836) * cbLight._m0[_2252].x) * _2320) * _2321) + _2178;
        _2244 = (((((_2301 * _2071) + _837) * cbLight._m0[_2252].y) * _2320) * _2321) + _2179;
        _2246 = (((((_2301 * _2072) + _838) * cbLight._m0[_2252].z) * _2320) * _2321) + _2180;
    }
    float _2356;
    float _2358;
    float _2360;
    if (_1973)
    {
        _2356 = _2242;
        _2358 = _2244;
        _2360 = _2246;
    }
    else
    {
        uint _2367 = _1882 + 3u;
        uint _2371 = _1882 + 11u;
        float _2385 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2367].w)) * _717) * 0.949999988079071044921875);
        float _2386 = _2385 * _2385;
        float _2387 = cbLight._m0[_2367].x + _500;
        float _2388 = cbLight._m0[_2367].y + _501;
        float _2389 = cbLight._m0[_2367].z + _502;
        float _2393 = inversesqrt(dot(vec3(_2387, _2388, _2389), vec3(_2387, _2388, _2389)));
        float _2394 = _2393 * _2387;
        float _2395 = _2393 * _2388;
        float _2396 = _2393 * _2389;
        float _2397 = dot(vec3(_474, _475, _476), vec3(cbLight._m0[_2367].xyz));
        float _4344 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
        float _2400 = isnan(1.0) ? _4344 : (isnan(_4344) ? 1.0 : min(_4344, 1.0));
        float _2401 = dot(vec3(_474, _475, _476), vec3(_2394, _2395, _2396));
        float _4355 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
        float _2404 = isnan(1.0) ? _4355 : (isnan(_4355) ? 1.0 : min(_4355, 1.0));
        float _2405 = dot(vec3(cbLight._m0[_2367].xyz), vec3(_2394, _2395, _2396));
        float _4366 = isnan(0.0) ? _2405 : (isnan(_2405) ? 0.0 : max(_2405, 0.0));
        float _2409 = _2386 * _2386;
        float _2413 = ((_2404 * _2404) * (_2409 + (-1.0))) + 1.0;
        float _2420 = exp2(log2(1.0 - (isnan(1.0) ? _4366 : (isnan(_4366) ? 1.0 : min(_4366, 1.0)))) * 5.0);
        float _2427 = 1.0 - _2386;
        float _2437 = (0.5 / (((_2047 * ((_2400 * _2427) + _2386)) + 9.9999999392252902907785028219223e-09) + (((_2047 * _2427) + _2386) * _2400))) * _2400;
        float _4377 = isnan(0.0) ? _2437 : (isnan(_2437) ? 0.0 : max(_2437, 0.0));
        float _2439 = (isnan(1.0) ? _4377 : (isnan(_4377) ? 1.0 : min(_4377, 1.0))) * (_2409 / ((_2413 * _2413) * 3.141590118408203125));
        float _2440 = isnan(1.0) ? _1898 : (isnan(_1898) ? 1.0 : min(_1898, 1.0));
        _2356 = (((((_2420 * _2069) + _836) * cbLight._m0[_2371].x) * _2439) * _2440) + _2242;
        _2358 = (((((_2420 * _2071) + _837) * cbLight._m0[_2371].y) * _2439) * _2440) + _2244;
        _2360 = (((((_2420 * _2072) + _838) * cbLight._m0[_2371].z) * _2439) * _2440) + _2246;
    }
    float _2574;
    float _2576;
    float _2578;
    float _2580;
    float _2582;
    float _2584;
    if (_1880.y == 0u)
    {
        float _2515 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2516 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2515;
        float _2517 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2515;
        float _2518 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2515;
        uvec4 _2530 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2531 = _2530.x;
        uint _2542 = uint((float(_2530.y) * floor(float(uint(cbSceneParam._m0[85u].y * _638) / _2531))) + floor(float(uint(cbSceneParam._m0[85u].x * _637) / _2531)));
        float _2552 = (log2(_2518 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2553 = isnan(0.0) ? _2552 : (isnan(_2552) ? 0.0 : max(_2552, 0.0));
        uint _2556 = uint(isnan(14.0) ? _2553 : (isnan(_2553) ? 14.0 : min(_2553, 14.0)));
        uvec4 _2561 = texelFetch(g_lightClusterGridBuffer, int(((_2556 << 2u) + (_2542 << 6u)) >> 2u));
        uint _2562 = _2561.x;
        uint _2563 = _2530.z;
        float _2698;
        float _2700;
        float _2702;
        float _2704;
        float _2706;
        float _2708;
        if (((((1u << ((_2563 >> 4u) & 15u)) + 4294967295u) & _2562) == 0u) || ((_2563 & 240u) == 0u))
        {
            _2698 = 0.0;
            _2700 = 0.0;
            _2702 = 0.0;
            _2704 = 0.0;
            _2706 = 0.0;
            _2708 = 0.0;
        }
        else
        {
            float _2699;
            float _2701;
            float _2703;
            float _2705;
            float _2707;
            float _2709;
            float _2851 = 0.0;
            float _2852 = 0.0;
            float _2853 = 0.0;
            float _2854 = 0.0;
            float _2855 = 0.0;
            float _2856 = 0.0;
            uint _2857 = 0u;
            uint _2866;
            bool _2867;
            for (;;)
            {
                _2866 = texelFetch(g_lightClassification, int((((_2556 << 5u) + (_2542 << 9u)) + (_2857 << 2u)) >> 2u)).x;
                _2867 = _2866 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_2867)
                {
                    frontier_phi_63_pred = _2856;
                    frontier_phi_63_pred_1 = _2855;
                    frontier_phi_63_pred_2 = _2854;
                    frontier_phi_63_pred_3 = _2853;
                    frontier_phi_63_pred_4 = _2852;
                    frontier_phi_63_pred_5 = _2851;
                }
                else
                {
                    float _2975;
                    float _2976;
                    float _2977;
                    float _2978;
                    float _2979;
                    float _2980;
                    uint _2981;
                    _2975 = _2851;
                    _2976 = _2852;
                    _2977 = _2853;
                    _2978 = _2854;
                    _2979 = _2855;
                    _2980 = _2856;
                    _2981 = _2866;
                    float _2907;
                    float _2908;
                    float _2909;
                    float _2910;
                    float _2911;
                    float _2912;
                    for (;;)
                    {
                        uint _2985 = uint(findLSB(_2981)) + (_2857 << 5u);
                        uint _2982 = (_2981 + 4294967295u) & _2981;
                        uint _2987 = _2985 * 48u;
                        vec4 _3001 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2987)).x, texelFetch(g_PointLightRenderingBuffer, int(_2987 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2987 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2987 + 3u)).x));
                        uint _3007 = (_2985 * 48u) + 4u;
                        vec4 _3020 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3007)).x, texelFetch(g_PointLightRenderingBuffer, int(_3007 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3007 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3007 + 3u)).x));
                        uint _3026 = (_2985 * 48u) + 8u;
                        vec3 _3037 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3026)).x, texelFetch(g_PointLightRenderingBuffer, int(_3026 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3026 + 2u)).x));
                        float _3041 = _3001.x - _2516;
                        float _3042 = _3001.y - _2517;
                        float _3043 = _3001.z - _2518;
                        float _3044 = dot(vec3(_3041, _3042, _3043), vec3(_3041, _3042, _3043));
                        float _3047 = inversesqrt(_3044);
                        float _3048 = _3047 * _3041;
                        float _3049 = _3047 * _3042;
                        float _3050 = _3047 * _3043;
                        float _3051 = dot(vec3(_662, _665, _668), vec3(_3048, _3049, _3050));
                        float _3056 = 1.0 - (_3044 * _3001.w);
                        float _4403 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
                        float _3057 = isnan(1.0) ? _4403 : (isnan(_4403) ? 1.0 : min(_4403, 1.0));
                        float _3058 = sqrt(_3044) * _3020.w;
                        float _3061 = 1.39999997615814208984375 / (_3058 + 1.39999997615814208984375);
                        float _3062 = _3061 * _3061;
                        float _3065 = ((1.0 - _3062) * _3051) + _3062;
                        float _3068 = _3058 * _3058;
                        float _3071 = ((isnan(0.0) ? _3065 : (isnan(_3065) ? 0.0 : max(_3065, 0.0))) * _3057) / ((_3068 * 0.699999988079071044921875) + 1.0);
                        float _3075 = (-0.0) - _2516;
                        float _3076 = (-0.0) - _2517;
                        float _3077 = (-0.0) - _2518;
                        float _3081 = inversesqrt(dot(vec3(_3075, _3076, _3077), vec3(_3075, _3076, _3077)));
                        float _3082 = _3081 * _3075;
                        float _3083 = _3081 * _3076;
                        float _3084 = _3081 * _3077;
                        float _3092 = exp2(log2(1.0 / ((_3068 * 3.5) + 5.0)) * 0.25);
                        float _3093 = 1.0 - _860;
                        float _3100 = sqrt(1.0 - ((1.0 - (_3093 * _3093)) * (1.0 - (_3092 * _3092))));
                        float _3101 = _3100 * _3100;
                        float _3102 = _3101 * _3101;
                        float _3103 = _3082 + _3048;
                        float _3104 = _3083 + _3049;
                        float _3105 = _3084 + _3050;
                        float _3109 = inversesqrt(dot(vec3(_3103, _3104, _3105), vec3(_3103, _3104, _3105)));
                        float _3113 = dot(vec3(_662, _665, _668), vec3(_3082, _3083, _3084));
                        float _4419 = isnan(0.0) ? _3113 : (isnan(_3113) ? 0.0 : max(_3113, 0.0));
                        float _3116 = isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0));
                        float _3117 = dot(vec3(_662, _665, _668), vec3(_3109 * _3103, _3109 * _3104, _3109 * _3105));
                        float _4430 = isnan(0.0) ? _3117 : (isnan(_3117) ? 0.0 : max(_3117, 0.0));
                        float _3120 = isnan(1.0) ? _4430 : (isnan(_4430) ? 1.0 : min(_4430, 1.0));
                        float _3124 = ((_3120 * _3120) * (_3102 + (-1.0))) + 1.0;
                        float _3125 = _3061 * _3101;
                        float _3126 = _3125 * _3125;
                        float _3129 = ((1.0 - _3126) * _3051) + _3126;
                        float _4441 = isnan(0.0) ? _3129 : (isnan(_3129) ? 0.0 : max(_3129, 0.0));
                        float _3130 = isnan(1.0) ? _4441 : (isnan(_4441) ? 1.0 : min(_4441, 1.0));
                        float _3131 = 1.0 - _3101;
                        float _3141 = (0.5 / (((_3130 * ((_3116 * _3131) + _3101)) + 9.9999999392252902907785028219223e-09) + (((_3130 * _3131) + _3101) * _3116))) * _3130;
                        float _4452 = isnan(0.0) ? _3141 : (isnan(_3141) ? 0.0 : max(_3141, 0.0));
                        float _3152 = (((_3102 * 3.1415927410125732421875) * (isnan(1.0) ? _4452 : (isnan(_4452) ? 1.0 : min(_4452, 1.0)))) / ((_3124 * _3124) * ((_3068 * 2.1991131305694580078125) + 3.141590118408203125))) * _3057;
                        _2910 = (_3071 * _3020.x) + _2978;
                        _2911 = (_3071 * _3020.y) + _2979;
                        _2912 = (_3071 * _3020.z) + _2980;
                        _2907 = (_3152 * _3037.x) + _2975;
                        _2908 = (_3152 * _3037.y) + _2976;
                        _2909 = (_3152 * _3037.z) + _2977;
                        if (_2982 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2975 = _2907;
                            _2976 = _2908;
                            _2977 = _2909;
                            _2978 = _2910;
                            _2979 = _2911;
                            _2980 = _2912;
                            _2981 = _2982;
                        }
                    }
                    frontier_phi_63_pred = _2912;
                    frontier_phi_63_pred_1 = _2911;
                    frontier_phi_63_pred_2 = _2910;
                    frontier_phi_63_pred_3 = _2909;
                    frontier_phi_63_pred_4 = _2908;
                    frontier_phi_63_pred_5 = _2907;
                }
                _2709 = frontier_phi_63_pred;
                _2707 = frontier_phi_63_pred_1;
                _2705 = frontier_phi_63_pred_2;
                _2703 = frontier_phi_63_pred_3;
                _2701 = frontier_phi_63_pred_4;
                _2699 = frontier_phi_63_pred_5;
                uint _2858 = _2857 + 1u;
                if (_2858 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2851 = _2699;
                    _2852 = _2701;
                    _2853 = _2703;
                    _2854 = _2705;
                    _2855 = _2707;
                    _2856 = _2709;
                    _2857 = _2858;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2698 = _2699;
            _2700 = _2701;
            _2702 = _2703;
            _2704 = _2705;
            _2706 = _2707;
            _2708 = _2709;
        }
        uvec4 _2712 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2713 = _2712.z;
        uint _2715 = (_2713 >> 8u) & 15u;
        float _2819;
        float _2821;
        float _2823;
        float _2825;
        float _2827;
        float _2829;
        if (((4294967295u << _2715) & _2562) == 0u)
        {
            _2819 = _2698;
            _2821 = _2700;
            _2823 = _2702;
            _2825 = _2704;
            _2827 = _2706;
            _2829 = _2708;
        }
        else
        {
            float _2844 = inversesqrt(dot(vec3(_2516, _2517, _2518), vec3(_2516, _2517, _2518)));
            float _2845 = _2844 * _2516;
            float _2846 = _2844 * _2517;
            float _2847 = _2844 * _2518;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_2715 < ((_2713 >> 12u) & 15u))
            {
                float _2820;
                float _2822;
                float _2824;
                float _2826;
                float _2828;
                float _2830;
                float _2958 = _2698;
                float _2959 = _2700;
                float _2960 = _2702;
                float _2961 = _2704;
                float _2962 = _2706;
                float _2963 = _2708;
                uint _2964 = _2715;
                uint _2973;
                bool _2974;
                for (;;)
                {
                    _2973 = texelFetch(g_lightClassification, int((((_2556 << 5u) + (_2542 << 9u)) + (_2964 << 2u)) >> 2u)).x;
                    _2974 = _2973 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_2974)
                    {
                        frontier_phi_69_pred = _2963;
                        frontier_phi_69_pred_1 = _2962;
                        frontier_phi_69_pred_2 = _2961;
                        frontier_phi_69_pred_3 = _2960;
                        frontier_phi_69_pred_4 = _2959;
                        frontier_phi_69_pred_5 = _2958;
                    }
                    else
                    {
                        float _3157;
                        float _3158;
                        float _3159;
                        float _3160;
                        float _3161;
                        float _3162;
                        float _3452;
                        float _3453;
                        float _3454;
                        float _3455;
                        float _3456;
                        float _3457;
                        float _3170 = _2958;
                        float _3171 = _2959;
                        float _3172 = _2960;
                        float _3173 = _2961;
                        float _3174 = _2962;
                        float _3175 = _2963;
                        uint _3176 = _2973;
                        uint _3177;
                        vec4 _3202;
                        float _3203;
                        vec4 _3218;
                        vec3 _3230;
                        vec4 _3245;
                        vec4 _3261;
                        float _3308;
                        bool _3309;
                        for (;;)
                        {
                            uint _3187 = ((_2964 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3176));
                            _3177 = (_3176 + 4294967295u) & _3176;
                            uint _3189 = _3187 * 40u;
                            _3202 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3189)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3189 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3189 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3189 + 3u)).x));
                            _3203 = _3202.w;
                            uint _3205 = (_3187 * 40u) + 4u;
                            _3218 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3205)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3205 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3205 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3205 + 3u)).x));
                            uint _3220 = (_3187 * 40u) + 8u;
                            _3230 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3220)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3220 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3220 + 2u)).x));
                            uint _3232 = (_3187 * 40u) + 16u;
                            _3245 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3232)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3232 + 3u)).x));
                            uint _3248 = (_3187 * 40u) + 20u;
                            _3261 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3248)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3248 + 3u)).x));
                            uint _3264 = (_3187 * 40u) + 24u;
                            vec4 _3277 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3264)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3264 + 3u)).x));
                            uint _3283 = (_3187 * 40u) + 28u;
                            vec4 _3296 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3283)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3283 + 3u)).x));
                            _3308 = fma(_2518, _3296.z, fma(_2517, _3296.y, _3296.x * _2516)) + _3296.w;
                            _3309 = !((fma(_2518, _3277.z, fma(_2517, _3277.y, _3277.x * _2516)) + _3277.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3309)
                            {
                                float _3336 = _3202.x - _2516;
                                float _3337 = _3202.y - _2517;
                                float _3338 = _3202.z - _2518;
                                float _3339 = dot(vec3(_3336, _3337, _3338), vec3(_3336, _3337, _3338));
                                float _3342 = inversesqrt(_3339);
                                float _3343 = _3342 * _3336;
                                float _3344 = _3342 * _3337;
                                float _3345 = _3342 * _3338;
                                float _3349 = 1.0 - (_3339 / (_3203 * _3203));
                                float _4463 = isnan(0.0) ? _3349 : (isnan(_3349) ? 0.0 : max(_3349, 0.0));
                                float _3350 = isnan(1.0) ? _4463 : (isnan(_4463) ? 1.0 : min(_4463, 1.0));
                                float _3354 = sqrt(_3339) * _3218.w;
                                float _3356 = 1.39999997615814208984375 / (_3354 + 1.39999997615814208984375);
                                float _3357 = _3356 * _3356;
                                float _3360 = ((1.0 - _3357) * dot(vec3(_3343, _3344, _3345), vec3(_662, _665, _668))) + _3357;
                                float _3363 = _3354 * _3354;
                                float _3367 = (fma(_2518, _3245.z, fma(_2517, _3245.y, _3245.x * _2516)) + _3245.w) / _3308;
                                float _3368 = (fma(_2518, _3261.z, fma(_2517, _3261.y, _3261.x * _2516)) + _3261.w) / _3308;
                                float _3372 = 1.0 - dot(vec2(_3367, _3368), vec2(_3367, _3368));
                                float _4479 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                                float _3373 = isnan(1.0) ? _4479 : (isnan(_4479) ? 1.0 : min(_4479, 1.0));
                                float _3374 = _3373 * (((isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0))) * _3350) / ((_3363 * 0.699999988079071044921875) + 1.0));
                                float _3386 = exp2(log2(1.0 / ((_3363 * 3.5) + 5.0)) * 0.25);
                                float _3387 = 1.0 - _860;
                                float _3394 = sqrt(1.0 - ((1.0 - (_3387 * _3387)) * (1.0 - (_3386 * _3386))));
                                float _3395 = _3394 * _3394;
                                float _3396 = _3395 * _3395;
                                float _3397 = _3343 - _2845;
                                float _3398 = _3344 - _2846;
                                float _3399 = _3345 - _2847;
                                float _3403 = inversesqrt(dot(vec3(_3397, _3398, _3399), vec3(_3397, _3398, _3399)));
                                float _3407 = dot(vec3(_662, _665, _668), vec3((-0.0) - _2845, (-0.0) - _2846, (-0.0) - _2847));
                                float _4490 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                                float _3410 = isnan(1.0) ? _4490 : (isnan(_4490) ? 1.0 : min(_4490, 1.0));
                                float _3411 = dot(vec3(_662, _665, _668), vec3(_3403 * _3397, _3403 * _3398, _3403 * _3399));
                                float _4501 = isnan(0.0) ? _3411 : (isnan(_3411) ? 0.0 : max(_3411, 0.0));
                                float _3414 = isnan(1.0) ? _4501 : (isnan(_4501) ? 1.0 : min(_4501, 1.0));
                                float _3418 = ((_3414 * _3414) * (_3396 + (-1.0))) + 1.0;
                                float _3419 = _3356 * _3395;
                                float _3420 = _3419 * _3419;
                                float _3426 = ((1.0 - _3420) * dot(vec3(_662, _665, _668), vec3(_3343, _3344, _3345))) + _3420;
                                float _4512 = isnan(0.0) ? _3426 : (isnan(_3426) ? 0.0 : max(_3426, 0.0));
                                float _3427 = isnan(1.0) ? _4512 : (isnan(_4512) ? 1.0 : min(_4512, 1.0));
                                float _3428 = 1.0 - _3395;
                                float _3438 = (0.5 / (((_3427 * ((_3410 * _3428) + _3395)) + 9.9999999392252902907785028219223e-09) + (((_3427 * _3428) + _3395) * _3410))) * _3427;
                                float _4523 = isnan(0.0) ? _3438 : (isnan(_3438) ? 0.0 : max(_3438, 0.0));
                                float _3448 = (_3373 * _3350) * (((_3396 * 3.1415927410125732421875) * (isnan(1.0) ? _4523 : (isnan(_4523) ? 1.0 : min(_4523, 1.0)))) / ((_3418 * _3418) * ((_3363 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3374 * _3218.z;
                                frontier_phi_75_pred_1 = _3374 * _3218.y;
                                frontier_phi_75_pred_2 = _3374 * _3218.x;
                                frontier_phi_75_pred_3 = _3448 * _3230.z;
                                frontier_phi_75_pred_4 = _3448 * _3230.y;
                                frontier_phi_75_pred_5 = _3448 * _3230.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3457 = frontier_phi_75_pred;
                            _3456 = frontier_phi_75_pred_1;
                            _3455 = frontier_phi_75_pred_2;
                            _3454 = frontier_phi_75_pred_3;
                            _3453 = frontier_phi_75_pred_4;
                            _3452 = frontier_phi_75_pred_5;
                            _3160 = _3455 + _3173;
                            _3161 = _3456 + _3174;
                            _3162 = _3457 + _3175;
                            _3157 = _3452 + _3170;
                            _3158 = _3453 + _3171;
                            _3159 = _3454 + _3172;
                            if (_3177 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3170 = _3157;
                                _3171 = _3158;
                                _3172 = _3159;
                                _3173 = _3160;
                                _3174 = _3161;
                                _3175 = _3162;
                                _3176 = _3177;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3162;
                        frontier_phi_69_pred_1 = _3161;
                        frontier_phi_69_pred_2 = _3160;
                        frontier_phi_69_pred_3 = _3159;
                        frontier_phi_69_pred_4 = _3158;
                        frontier_phi_69_pred_5 = _3157;
                    }
                    _2830 = frontier_phi_69_pred;
                    _2828 = frontier_phi_69_pred_1;
                    _2826 = frontier_phi_69_pred_2;
                    _2824 = frontier_phi_69_pred_3;
                    _2822 = frontier_phi_69_pred_4;
                    _2820 = frontier_phi_69_pred_5;
                    uint _2965 = _2964 + 1u;
                    if (_2965 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2958 = _2820;
                        _2959 = _2822;
                        _2960 = _2824;
                        _2961 = _2826;
                        _2962 = _2828;
                        _2963 = _2830;
                        _2964 = _2965;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _2830;
                frontier_phi_57_58_ladder_1 = _2828;
                frontier_phi_57_58_ladder_2 = _2826;
                frontier_phi_57_58_ladder_3 = _2824;
                frontier_phi_57_58_ladder_4 = _2822;
                frontier_phi_57_58_ladder_5 = _2820;
            }
            else
            {
                frontier_phi_57_58_ladder = _2708;
                frontier_phi_57_58_ladder_1 = _2706;
                frontier_phi_57_58_ladder_2 = _2704;
                frontier_phi_57_58_ladder_3 = _2702;
                frontier_phi_57_58_ladder_4 = _2700;
                frontier_phi_57_58_ladder_5 = _2698;
            }
            _2819 = frontier_phi_57_58_ladder_5;
            _2821 = frontier_phi_57_58_ladder_4;
            _2823 = frontier_phi_57_58_ladder_3;
            _2825 = frontier_phi_57_58_ladder_2;
            _2827 = frontier_phi_57_58_ladder_1;
            _2829 = frontier_phi_57_58_ladder;
        }
        float _2834 = isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0));
        _2574 = (_2834 * _2825) + _2011;
        _2576 = (_2834 * _2827) + _2013;
        _2578 = (_2834 * _2829) + _2015;
        _2580 = ((_2819 * _836) * _2834) + _2356;
        _2582 = ((_2821 * _837) * _2834) + _2358;
        _2584 = ((_2823 * _838) * _2834) + _2360;
    }
    else
    {
        _2574 = _2011;
        _2576 = _2013;
        _2578 = _2015;
        _2580 = _2356;
        _2582 = _2358;
        _2584 = _2360;
    }
    uint _2590 = _743 + uint(cbMatDynParam._m0[0u].w);
    float _2596 = cbInstanceData._m0[_2590].x * (((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _516) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _424) * _437.x) * _545)) + (((_574 - (_574 * _482)) + (cbMatDynParam._m0[11u].x * _605)) * cbMatDynParam._m0[9u].x));
    float _2597 = cbInstanceData._m0[_2590].y * (((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _516) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _424) * _437.y) * _545)) + (((_576 - (_576 * _482)) + (cbMatDynParam._m0[11u].y * _605)) * cbMatDynParam._m0[9u].y));
    float _2598 = cbInstanceData._m0[_2590].z * (((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _516) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _424) * _437.z) * _545)) + (((_578 - (_578 * _482)) + (cbMatDynParam._m0[11u].z * _605)) * cbMatDynParam._m0[9u].z));
    float _4539 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
    float _4550 = isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0));
    float _4561 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _4572 = isnan(0.0) ? _477 : (isnan(_477) ? 0.0 : max(_477, 0.0));
    float _2616 = (((isnan(1.0) ? _4539 : (isnan(_4539) ? 1.0 : min(_4539, 1.0))) * (_2574 + ((isnan(0.0) ? _1573 : (isnan(_1573) ? 0.0 : max(_1573, 0.0))) * _850))) + ((_2580 + ((isnan(0.0) ? _1864 : (isnan(_1864) ? 0.0 : max(_1864, 0.0))) * _1649)) * cbPerFrame._m0[3u].x)) + _2596;
    float _2618 = (_2597 + ((_2582 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1649)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4550 : (isnan(_4550) ? 1.0 : min(_4550, 1.0))) * (_2576 + ((isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0))) * _850)));
    float _2620 = (_2598 + ((_2584 + ((isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0))) * _1649)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4561 : (isnan(_4561) ? 1.0 : min(_4561, 1.0))) * (_2578 + ((isnan(0.0) ? _1579 : (isnan(_1579) ? 0.0 : max(_1579, 0.0))) * _850)));
    float _2638 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _545) + cbMatDynParam._m0[12u].y;
    float _2643 = cbInstanceData._m0[_741 + 6u].w * (isnan(1.0) ? _4572 : (isnan(_4572) ? 1.0 : min(_4572, 1.0)));
    float _2648 = _637 / cbSceneParam._m0[86u].x;
    float _2649 = _638 / cbSceneParam._m0[86u].y;
    vec4 _2663 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2648, _2649, (log2((isnan(cbSceneParam._m0[77u].w) ? _631 : (isnan(_631) ? cbSceneParam._m0[77u].w : min(_631, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2665 = _2663.x;
    float _2666 = _2663.y;
    float _2667 = _2663.z;
    float _2668 = _2663.w;
    float _2760;
    float _2762;
    float _2764;
    float _2766;
    if (_631 > cbSceneParam._m0[78u].w)
    {
        float _2723 = isnan(_631) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _631 : min(cbSceneParam._m0[80u].w, _631));
        float _2724 = _2723 / _631;
        float _2735 = _2724 * _285;
        float _2736 = _286 * _2724;
        float _2737 = (-0.0) - _2736;
        float _2738 = _2724 * _287;
        float _2740 = (cbSceneParam._m0[77u].w * _2737) / _2723;
        float _2741 = _2740 + cbSceneParam._m0[79u].w;
        float _2742 = cbSceneParam._m0[79u].w - _2736;
        float _2748 = sqrt(((_2735 * _2735) + (_2736 * _2736)) + (_2738 * _2738));
        float _2751 = (1.0 - (cbSceneParam._m0[77u].w / _2723)) * _2748;
        float _2756 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2758 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2920;
        if (abs((_2737 - _2740) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2920 = ((((_2741 > 0.0) ? exp2(_2756 * _2741) : (2.0 - exp2(_2758 * _2741))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2751;
        }
        else
        {
            float _2880 = 1.0 / cbSceneParam._m0[80u].x;
            float _2881 = isnan(_2742) ? _2741 : (isnan(_2741) ? _2742 : max(_2741, _2742));
            float _2882 = isnan(_2742) ? _2741 : (isnan(_2741) ? _2742 : min(_2741, _2742));
            float _2891 = isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : min(_2881, 0.0));
            float _2892 = isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : min(_2882, 0.0));
            _2920 = ((abs(_2748 / _2737) * cbSceneParam._m0[80u].y) * ((((_2891 - _2892) * 2.0) - ((exp2(_2756 * (isnan(0.0) ? _2881 : (isnan(_2881) ? 0.0 : max(_2881, 0.0)))) - exp2(_2756 * (isnan(0.0) ? _2882 : (isnan(_2882) ? 0.0 : max(_2882, 0.0))))) * _2880)) - ((exp2(_2758 * _2891) - exp2(_2758 * _2892)) * _2880))) + (_2751 * cbSceneParam._m0[80u].z);
        }
        vec4 _2922 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2648, _2649, 1.0), 0.0);
        float _2931 = exp2((_2920 * (-1.44269502162933349609375)) * (1.0 - _2922.w));
        float _2932 = log2(_2931);
        float _2948 = log2(_2668);
        _2760 = (exp2(_2948 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2932 * cbSceneParam._m0[78u].x)) * _2922.x) / cbSceneParam._m0[78u].x)) + _2665;
        _2762 = (exp2(_2948 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2932 * cbSceneParam._m0[78u].y)) * _2922.y) / cbSceneParam._m0[78u].y)) + _2666;
        _2764 = (exp2(_2948 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2932 * cbSceneParam._m0[78u].z)) * _2922.z) / cbSceneParam._m0[78u].z)) + _2667;
        _2766 = _2931 * _2668;
    }
    else
    {
        _2760 = _2665;
        _2762 = _2666;
        _2764 = _2667;
        _2766 = _2668;
    }
    float _2778 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2779 = _2778 == 3.0;
    float _2780 = log2(_2766);
    float _2784 = exp2(_2780 * cbSceneParam._m0[78u].x);
    float _2785 = exp2(_2780 * cbSceneParam._m0[78u].y);
    float _2786 = exp2(_2780 * cbSceneParam._m0[78u].z);
    float _2787 = _2784 * (isnan(0.0) ? _2616 : (isnan(_2616) ? 0.0 : max(_2616, 0.0)));
    float _2788 = _2785 * (isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0)));
    float _2789 = _2786 * (isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0)));
    float _2798 = (_2778 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2798 * (_2779 ? _2787 : (_2787 + (cbSceneParam._m0[72u].w * _2760)));
    SV_Target.y = _2798 * (_2779 ? _2788 : (_2788 + (cbSceneParam._m0[72u].w * _2762)));
    SV_Target.z = _2798 * (_2779 ? _2789 : (_2789 + (cbSceneParam._m0[72u].w * _2764)));
    SV_Target.w = _2643;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2596) * _2638) * _2784) * _2798;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2597) * _2638) * _2785) * _2798;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2598) * _2638) * _2786) * _2798;
    SV_Target_1.w = _2643;
}


