#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1511;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    vec4 _316 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _321 = _316.z;
    float _322 = _316.w;
    float _328 = exp2(log2(_321 * 22.0) * 260.0);
    float _329 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _330 = isnan(1.0) ? _329 : (isnan(_329) ? 1.0 : min(_329, 1.0));
    vec4 _344 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _354 = cbMtdParam._m0[10u].x * _344.x;
    float _355 = cbMtdParam._m0[10u].y * _344.y;
    float _356 = cbMtdParam._m0[10u].z * _344.z;
    vec4 _368 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _388 = (((cbMtdParam._m0[9u].x * _368.x) - _354) * _330) + _354;
    float _389 = (((cbMtdParam._m0[9u].y * _368.y) - _355) * _330) + _355;
    float _390 = (((cbMtdParam._m0[9u].z * _368.z) - _356) * _330) + _356;
    float _395 = exp2(log2(1.0 - _322) * 8.0);
    vec4 _407 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _432 = exp2(log2(_322) * 8.0);
    vec4 _444 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _468 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _476 = (((((cbMtdParam._m0[13u].x * _407.x) - _388) * _395) + _388) * 4.55000019073486328125) * _468.x;
    float _478 = (((((cbMtdParam._m0[13u].y * _407.y) - _389) * _395) + _389) * 4.55000019073486328125) * _468.y;
    float _480 = (((((cbMtdParam._m0[13u].z * _407.z) - _390) * _395) + _390) * 4.55000019073486328125) * _468.z;
    float _487 = (((cbMtdParam._m0[11u].x * _444.x) - _476) * _432) + _476;
    float _488 = (((cbMtdParam._m0[11u].y * _444.y) - _478) * _432) + _478;
    float _489 = (((cbMtdParam._m0[11u].z * _444.z) - _480) * _432) + _480;
    float _490 = _468.w * _368.w;
    float _520 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _330) + cbMtdParam._m0[17u].x;
    float _523 = ((cbMtdParam._m0[15u].z - _520) * _395) + _520;
    float _527 = ((cbMtdParam._m0[16u].w - _523) * _432) + _523;
    vec4 _539 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _541 = _539.x;
    float _542 = _539.y;
    float _548 = cbMtdParam._m0[14u].y + _539.z;
    vec4 _560 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _569 = (((_560.z - _548) + cbMtdParam._m0[14u].x) * _330) + _548;
    vec4 _582 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _604 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _617 = (((_330 * (_321 + (-0.5))) + 0.5) * 2.0) * ((((_582.z - _569) + cbMtdParam._m0[15u].y) * _395) + _569);
    float _621 = (((_604.z - _617) + cbMtdParam._m0[14u].w) * _432) + _617;
    float _635 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4175 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
    float _636 = isnan(1.0) ? _4175 : (isnan(_4175) ? 1.0 : min(_4175, 1.0));
    float _641 = (_636 * _636) * (3.0 - (_636 * 2.0));
    vec4 _654 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _662 = (_316.x * 2.0) + (-1.0);
    float _663 = (_316.y * 2.0) + (-1.0);
    float _664 = dot(vec2(_662, _663), vec2(_662, _663));
    float _4186 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _669 = sqrt(1.0 - (isnan(1.0) ? _4186 : (isnan(_4186) ? 1.0 : min(_4186, 1.0))));
    float _674 = ((_560.x - _541) * _330) + _541;
    float _675 = ((_560.y - _542) * _330) + _542;
    float _680 = ((_582.x - _674) * _395) + _674;
    float _681 = ((_582.y - _675) * _395) + _675;
    float _694 = (cbMtdParam._m0[14u].z * (((((_604.x - _680) * _432) + _680) * 2.0) + (-1.0))) + _662;
    float _695 = (cbMtdParam._m0[14u].z * (((((_604.y - _681) * _432) + _681) * 2.0) + (-1.0))) + _663;
    float _698 = fma(_669, _245, fma(_695, _237 * TANGENT.x, (_223 * _215) * _694));
    float _701 = fma(_669, _246, fma(_695, _237 * TANGENT.y, (_223 * _216) * _694));
    float _704 = fma(_669, _247, fma(_695, _237 * TANGENT.z, (_223 * _217) * _694));
    float _708 = inversesqrt(dot(vec3(_698, _701, _704), vec3(_698, _701, _704)));
    float _709 = _708 * _698;
    float _710 = _708 * _701;
    float _711 = _708 * _704;
    float _4197 = isnan(0.0) ? _490 : (isnan(_490) ? 0.0 : max(_490, 0.0));
    float _712 = isnan(1.0) ? _4197 : (isnan(_4197) ? 1.0 : min(_4197, 1.0));
    float _4208 = isnan(0.0) ? _621 : (isnan(_621) ? 0.0 : max(_621, 0.0));
    float _713 = isnan(1.0) ? _4208 : (isnan(_4208) ? 1.0 : min(_4208, 1.0));
    float _4219 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _714 = isnan(1.0) ? _4219 : (isnan(_4219) ? 1.0 : min(_4219, 1.0));
    float _4230 = isnan(0.0) ? _488 : (isnan(_488) ? 0.0 : max(_488, 0.0));
    float _715 = isnan(1.0) ? _4230 : (isnan(_4230) ? 1.0 : min(_4230, 1.0));
    float _4241 = isnan(0.0) ? _489 : (isnan(_489) ? 0.0 : max(_489, 0.0));
    float _716 = isnan(1.0) ? _4241 : (isnan(_4241) ? 1.0 : min(_4241, 1.0));
    float _4252 = isnan(0.0) ? _527 : (isnan(_527) ? 0.0 : max(_527, 0.0));
    float _717 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
    float _725 = cbMatDynParam._m0[9u].x * _714;
    float _726 = cbMatDynParam._m0[9u].y * _715;
    float _727 = cbMatDynParam._m0[9u].z * _716;
    float _734 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _735 = _734 * _301;
    float _736 = _734 * _302;
    float _737 = _734 * _303;
    float _744 = abs(exp2(log2(dot(vec3(_709, _710, _711), vec3(_735, _736, _737))) * cbMatDynParam._m0[12u].x));
    float _745 = isnan(0.100000001490116119384765625) ? _744 : (isnan(_744) ? 0.100000001490116119384765625 : max(_744, 0.100000001490116119384765625));
    float _751 = ((isnan(0.699999988079071044921875) ? _745 : (isnan(_745) ? 0.699999988079071044921875 : min(_745, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _773 = 1.0 - cbMatDynParam._m0[8u].w;
    float _4273 = isnan(0.0) ? _773 : (isnan(_773) ? 0.0 : max(_773, 0.0));
    float _776 = 1.0 - cbMatDynParam._m0[7u].w;
    float _4284 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
    float _777 = isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0));
    float _780 = (((isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0))) - _777) * _751) + _777;
    float _799 = dot(vec3(_709, _710, _711), vec3(0.0, -1.0, 0.0));
    float _4295 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
    float _802 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
    float _809 = (_802 * _714) * cbMatDynParam._m0[11u].x;
    float _811 = (_802 * _715) * cbMatDynParam._m0[11u].y;
    float _813 = (_802 * _716) * cbMatDynParam._m0[11u].z;
    float _823 = dot(vec3(_735, _736, _737), vec3(_709, _710, _711)) * 2.0;
    float _833 = dot(vec3((-0.0) - (_735 - (_823 * _709)), (-0.0) - (_736 - (_823 * _710)), (-0.0) - (_737 - (_823 * _711))), vec3(0.0, -1.0, 0.0));
    float _4306 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _840 = exp2(log2(isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0))) * 4.0);
    float _866 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _906 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _915 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _906);
    float _916 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _906);
    float _917 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _906);
    float _921 = inversesqrt(dot(vec3(_915, _916, _917), vec3(_915, _916, _917)));
    float _922 = _915 * _921;
    float _923 = _916 * _921;
    float _924 = _917 * _921;
    float _930 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _931 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _933 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _935 = _933.w;
    float _953 = fma(_711, cbSceneParam._m0[5u].z, fma(_710, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _709));
    float _956 = fma(_711, cbSceneParam._m0[6u].z, fma(_710, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _709));
    float _959 = fma(_711, cbSceneParam._m0[7u].z, fma(_710, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _709));
    vec4 _961 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _963 = _961.x;
    float _975 = (((_961.y - _713) + (_961.w * _713)) * cbMtdParam._m0[3u].x) + _713;
    vec4 _976 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _992 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_963 * _963)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _976.z;
    float _1000 = (((cbMatDynParam._m0[15u].x - _717) * cbMatDynParam._m0[15u].w) * _992) + _717;
    float _1008 = ((_992 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _975)) + _975;
    uint _1032 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1033 = _1032 + 9u;
    uint _1034 = _1033 + uint(cbMatDynParam._m0[0u].w);
    float _1040 = (cbMtdParam._m0[0u].x * _725) * cbInstanceData._m0[_1034].x;
    float _1041 = (cbMtdParam._m0[0u].y * _726) * cbInstanceData._m0[_1034].y;
    float _1042 = (cbMtdParam._m0[0u].z * _727) * cbInstanceData._m0[_1034].z;
    float _4317 = isnan(0.0) ? _1040 : (isnan(_1040) ? 0.0 : max(_1040, 0.0));
    float _1043 = isnan(1.0) ? _4317 : (isnan(_4317) ? 1.0 : min(_4317, 1.0));
    float _4328 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
    float _1044 = isnan(1.0) ? _4328 : (isnan(_4328) ? 1.0 : min(_4328, 1.0));
    float _4339 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _1045 = isnan(1.0) ? _4339 : (isnan(_4339) ? 1.0 : min(_4339, 1.0));
    vec4 _1046 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1051 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1062 = (((_1051.x - _1000) + (_1051.w * _1000)) * cbMtdParam._m0[3u].x) + _1000;
    float _1075 = (cbMtdParam._m0[3u].x * (((_1043 * _935) - _1043) + _1046.x)) + _1043;
    float _1076 = (cbMtdParam._m0[3u].x * (((_1044 * _935) - _1044) + _1046.y)) + _1044;
    float _1077 = (cbMtdParam._m0[3u].x * (((_1045 * _935) - _1045) + _1046.z)) + _1045;
    vec4 _1078 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1091 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_1000 * (_725 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_1000 * (_726 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_1000 * (_727 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _1078.z;
    float _1095 = _1091 * cbMatDynParam._m0[13u].w;
    float _1105 = (_1095 * (cbMatDynParam._m0[13u].x - _1075)) + _1075;
    float _1106 = (_1095 * (cbMatDynParam._m0[13u].y - _1076)) + _1076;
    float _1107 = (_1095 * (cbMatDynParam._m0[13u].z - _1077)) + _1077;
    float _1115 = ((_1091 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _1062)) + _1062;
    float _1116 = 1.0 - _1115;
    float _1117 = _1116 * _1105;
    float _1118 = _1116 * _1106;
    float _1119 = _1116 * _1107;
    float _1123 = (_1105 + (-0.039999999105930328369140625)) * _1115;
    float _1124 = (_1106 + (-0.039999999105930328369140625)) * _1115;
    float _1125 = (_1107 + (-0.039999999105930328369140625)) * _1115;
    float _1126 = _1123 + 0.039999999105930328369140625;
    float _1127 = _1124 + 0.039999999105930328369140625;
    float _1128 = _1125 + 0.039999999105930328369140625;
    vec4 _1137 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _930, cbSceneParam._m0[86u].y * _931));
    float _1140 = _1137.x * TEXCOORD_4;
    float _1141 = dot(vec3(_709, _710, _711), vec3(_922, _923, _924));
    float _1144 = _1141 * 2.0;
    float _1148 = (_1144 * _709) - _922;
    float _1149 = (_1144 * _710) - _923;
    float _1150 = (_1144 * _711) - _924;
    float _1154 = abs(dot(vec3(_922, _923, _924), vec3(_709, _710, _711)));
    float _4350 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
    float _1156 = sqrt(_1008);
    float _1167 = exp2((_1156 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4350 : (isnan(_4350) ? 1.0 : min(_4350, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1156 * 3.0));
    float _1173 = (1.0 - _1167) * ((_1156 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1174 = _1167 * _1156;
    float _1202 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1206 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1210 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1510;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    float _1522;
    float _1523;
    float _1524;
    float _1525;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1237 = fma(_1210, cbModelParam._m0[26u].z, fma(_1206, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1202));
        float _1241 = fma(_1210, cbModelParam._m0[27u].z, fma(_1206, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1202));
        float _1245 = fma(_1210, cbModelParam._m0[28u].z, fma(_1206, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1202));
        float _1268 = _1202 + _709;
        float _1269 = _1206 + _710;
        float _1270 = _1210 + _711;
        float _1280 = fma(_1270, cbModelParam._m0[26u].z, fma(_1269, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1268)) - _1237;
        float _1281 = fma(_1270, cbModelParam._m0[27u].z, fma(_1269, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1268)) - _1241;
        float _1282 = fma(_1270, cbModelParam._m0[28u].z, fma(_1269, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1268)) - _1245;
        float _1286 = inversesqrt(dot(vec3(_1280, _1281, _1282), vec3(_1280, _1281, _1282)));
        float _1299 = ((_1286 * _1280) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1237 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1300 = ((_1286 * _1281) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1241 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1301 = ((_1286 * _1282) / cbModelParam._m0[34u].z) + ((((((_1245 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1304 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1311 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1318 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        vec4 _1325 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1299, _1300, _1301), 0.0);
        float _1338 = exp2((_1304.w + (-0.5)) * 20.0) * 2.0;
        float _1339 = _1338 * (_1304.x + (-0.5));
        float _1340 = _1338 * (_1304.y + (-0.5));
        float _1341 = _1338 * (_1304.z + (-0.5));
        float _1348 = exp2((_1311.w + (-0.5)) * 20.0) * 2.0;
        float _1349 = _1348 * (_1311.x + (-0.5));
        float _1350 = _1348 * (_1311.y + (-0.5));
        float _1351 = _1348 * (_1311.z + (-0.5));
        float _1358 = exp2((_1318.w + (-0.5)) * 20.0) * 2.0;
        float _1359 = _1358 * (_1318.x + (-0.5));
        float _1360 = _1358 * (_1318.y + (-0.5));
        float _1361 = _1358 * (_1318.z + (-0.5));
        float _1368 = exp2((_1325.w + (-0.5)) * 20.0) * 2.0;
        float _1369 = _1368 * (_1325.x + (-0.5));
        float _1370 = _1368 * (_1325.y + (-0.5));
        float _1371 = _1368 * (_1325.z + (-0.5));
        float _1372 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1373 = isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0));
        float _1374 = isnan(0.0) ? _1371 : (isnan(_1371) ? 0.0 : max(_1371, 0.0));
        float _1375 = _1339 * 0.5;
        float _1376 = _1349 * 0.5;
        float _1377 = _1359 * 0.5;
        float _1378 = dot(vec3(_1375, _1376, _1377), vec3(_1375, _1376, _1377));
        float _1383 = (_1378 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1378);
        float _1392 = (dot(vec3(_709, _710, _711), vec3(_1383 * _1375, _1383 * _1376, _1383 * _1377)) + 1.0) * 0.5;
        float _4376 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1402 = sqrt(((_1376 * _1376) + (_1375 * _1375)) + (_1377 * _1377)) / (_1372 + 9.9999997473787516355514526367188e-06);
        float _4387 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4387 : (isnan(_4387) ? 1.0 : min(_4387, 1.0));
        float _1404 = _1403 * 2.0;
        float _1408 = (1.0 - _1403) / (_1403 + 1.0);
        float _4398 = isnan(0.0) ? _1408 : (isnan(_1408) ? 0.0 : max(_1408, 0.0));
        float _1409 = isnan(1.0) ? _4398 : (isnan(_4398) ? 1.0 : min(_4398, 1.0));
        float _1418 = ((((1.0 - _1409) * (_1404 + 2.0)) * exp2(log2(isnan(1.0) ? _4376 : (isnan(_4376) ? 1.0 : min(_4376, 1.0))) * (_1404 + 1.0))) + _1409) * _1372;
        float _1419 = _1340 * 0.5;
        float _1420 = _1350 * 0.5;
        float _1421 = _1360 * 0.5;
        float _1422 = dot(vec3(_1419, _1420, _1421), vec3(_1419, _1420, _1421));
        float _1427 = (_1422 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1422);
        float _1435 = (dot(vec3(_709, _710, _711), vec3(_1427 * _1419, _1427 * _1420, _1427 * _1421)) + 1.0) * 0.5;
        float _4409 = isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0));
        float _1444 = sqrt(((_1420 * _1420) + (_1419 * _1419)) + (_1421 * _1421)) / (_1373 + 9.9999997473787516355514526367188e-06);
        float _4420 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
        float _1445 = isnan(1.0) ? _4420 : (isnan(_4420) ? 1.0 : min(_4420, 1.0));
        float _1446 = _1445 * 2.0;
        float _1450 = (1.0 - _1445) / (_1445 + 1.0);
        float _4431 = isnan(0.0) ? _1450 : (isnan(_1450) ? 0.0 : max(_1450, 0.0));
        float _1451 = isnan(1.0) ? _4431 : (isnan(_4431) ? 1.0 : min(_4431, 1.0));
        float _1460 = ((((1.0 - _1451) * (_1446 + 2.0)) * exp2(log2(isnan(1.0) ? _4409 : (isnan(_4409) ? 1.0 : min(_4409, 1.0))) * (_1446 + 1.0))) + _1451) * _1373;
        float _1461 = _1341 * 0.5;
        float _1462 = _1351 * 0.5;
        float _1463 = _1361 * 0.5;
        float _1464 = dot(vec3(_1461, _1462, _1463), vec3(_1461, _1462, _1463));
        float _1469 = (_1464 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1464);
        float _1477 = (dot(vec3(_709, _710, _711), vec3(_1469 * _1461, _1469 * _1462, _1469 * _1463)) + 1.0) * 0.5;
        float _4442 = isnan(0.0) ? _1477 : (isnan(_1477) ? 0.0 : max(_1477, 0.0));
        float _1486 = sqrt(((_1462 * _1462) + (_1461 * _1461)) + (_1463 * _1463)) / (_1374 + 9.9999997473787516355514526367188e-06);
        float _4453 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
        float _1487 = isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0));
        float _1488 = _1487 * 2.0;
        float _1492 = (1.0 - _1487) / (_1487 + 1.0);
        float _4464 = isnan(0.0) ? _1492 : (isnan(_1492) ? 0.0 : max(_1492, 0.0));
        float _1493 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1502 = ((((1.0 - _1493) * (_1488 + 2.0)) * exp2(log2(isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0))) * (_1488 + 1.0))) + _1493) * _1374;
        _1510 = _1341;
        _1512 = _1340;
        _1513 = _1339;
        _1514 = _1351;
        _1515 = _1350;
        _1516 = _1349;
        _1517 = _1361;
        _1518 = _1360;
        _1519 = _1359;
        _1520 = _1374;
        _1521 = _1373;
        _1522 = _1372;
        _1523 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1418 : (isnan(_1418) ? 0.0 : max(_1418, 0.0)));
        _1524 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1460 : (isnan(_1460) ? 0.0 : max(_1460, 0.0)));
        _1525 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1502 : (isnan(_1502) ? 0.0 : max(_1502, 0.0)));
    }
    else
    {
        _1510 = _1511;
        _1512 = _1511;
        _1513 = _1511;
        _1514 = _1511;
        _1515 = _1511;
        _1516 = _1511;
        _1517 = _1511;
        _1518 = _1511;
        _1519 = _1511;
        _1520 = _1511;
        _1521 = _1511;
        _1522 = _1511;
        _1523 = 0.0;
        _1524 = 0.0;
        _1525 = 0.0;
    }
    float _1820;
    float _1821;
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    float _1831;
    float _1832;
    float _1833;
    float _1834;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1551 = fma(_1210, cbModelParam._m0[30u].z, fma(_1206, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1202));
        float _1555 = fma(_1210, cbModelParam._m0[31u].z, fma(_1206, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1202));
        float _1559 = fma(_1210, cbModelParam._m0[32u].z, fma(_1206, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1202));
        float _1582 = _1202 + _709;
        float _1583 = _1206 + _710;
        float _1584 = _1210 + _711;
        float _1594 = fma(_1584, cbModelParam._m0[30u].z, fma(_1583, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1582)) - _1551;
        float _1595 = fma(_1584, cbModelParam._m0[31u].z, fma(_1583, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1582)) - _1555;
        float _1596 = fma(_1584, cbModelParam._m0[32u].z, fma(_1583, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1582)) - _1559;
        float _1600 = inversesqrt(dot(vec3(_1594, _1595, _1596), vec3(_1594, _1595, _1596)));
        float _1613 = ((_1600 * _1594) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1551 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1614 = ((_1600 * _1595) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1555 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1615 = ((_1600 * _1596) / cbModelParam._m0[35u].z) + ((((((_1559 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1617 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1624 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1631 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        vec4 _1638 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1613, _1614, _1615), 0.0);
        float _1650 = exp2((_1617.w + (-0.5)) * 20.0) * 2.0;
        float _1651 = _1650 * (_1617.x + (-0.5));
        float _1652 = _1650 * (_1617.y + (-0.5));
        float _1653 = _1650 * (_1617.z + (-0.5));
        float _1660 = exp2((_1624.w + (-0.5)) * 20.0) * 2.0;
        float _1661 = _1660 * (_1624.x + (-0.5));
        float _1662 = _1660 * (_1624.y + (-0.5));
        float _1663 = _1660 * (_1624.z + (-0.5));
        float _1670 = exp2((_1631.w + (-0.5)) * 20.0) * 2.0;
        float _1671 = _1670 * (_1631.x + (-0.5));
        float _1672 = _1670 * (_1631.y + (-0.5));
        float _1673 = _1670 * (_1631.z + (-0.5));
        float _1680 = exp2((_1638.w + (-0.5)) * 20.0) * 2.0;
        float _1681 = _1680 * (_1638.x + (-0.5));
        float _1682 = _1680 * (_1638.y + (-0.5));
        float _1683 = _1680 * (_1638.z + (-0.5));
        float _1684 = isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0));
        float _1685 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1686 = isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0));
        float _1687 = _1651 * 0.5;
        float _1688 = _1661 * 0.5;
        float _1689 = _1671 * 0.5;
        float _1690 = dot(vec3(_1687, _1688, _1689), vec3(_1687, _1688, _1689));
        float _1695 = (_1690 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1690);
        float _1703 = (dot(vec3(_709, _710, _711), vec3(_1695 * _1687, _1695 * _1688, _1695 * _1689)) + 1.0) * 0.5;
        float _4505 = isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0));
        float _1712 = sqrt(((_1688 * _1688) + (_1687 * _1687)) + (_1689 * _1689)) / (_1684 + 9.9999997473787516355514526367188e-06);
        float _4516 = isnan(0.0) ? _1712 : (isnan(_1712) ? 0.0 : max(_1712, 0.0));
        float _1713 = isnan(1.0) ? _4516 : (isnan(_4516) ? 1.0 : min(_4516, 1.0));
        float _1714 = _1713 * 2.0;
        float _1718 = (1.0 - _1713) / (_1713 + 1.0);
        float _4527 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
        float _1719 = isnan(1.0) ? _4527 : (isnan(_4527) ? 1.0 : min(_4527, 1.0));
        float _1728 = ((((1.0 - _1719) * (_1714 + 2.0)) * exp2(log2(isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * (_1714 + 1.0))) + _1719) * _1684;
        float _1729 = _1652 * 0.5;
        float _1730 = _1662 * 0.5;
        float _1731 = _1672 * 0.5;
        float _1732 = dot(vec3(_1729, _1730, _1731), vec3(_1729, _1730, _1731));
        float _1737 = (_1732 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1732);
        float _1745 = (dot(vec3(_709, _710, _711), vec3(_1737 * _1729, _1737 * _1730, _1737 * _1731)) + 1.0) * 0.5;
        float _4538 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
        float _1754 = sqrt(((_1730 * _1730) + (_1729 * _1729)) + (_1731 * _1731)) / (_1685 + 9.9999997473787516355514526367188e-06);
        float _4549 = isnan(0.0) ? _1754 : (isnan(_1754) ? 0.0 : max(_1754, 0.0));
        float _1755 = isnan(1.0) ? _4549 : (isnan(_4549) ? 1.0 : min(_4549, 1.0));
        float _1756 = _1755 * 2.0;
        float _1760 = (1.0 - _1755) / (_1755 + 1.0);
        float _4560 = isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0));
        float _1761 = isnan(1.0) ? _4560 : (isnan(_4560) ? 1.0 : min(_4560, 1.0));
        float _1770 = ((((1.0 - _1761) * (_1756 + 2.0)) * exp2(log2(isnan(1.0) ? _4538 : (isnan(_4538) ? 1.0 : min(_4538, 1.0))) * (_1756 + 1.0))) + _1761) * _1685;
        float _1771 = _1653 * 0.5;
        float _1772 = _1663 * 0.5;
        float _1773 = _1673 * 0.5;
        float _1774 = dot(vec3(_1771, _1772, _1773), vec3(_1771, _1772, _1773));
        float _1779 = (_1774 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1774);
        float _1787 = (dot(vec3(_709, _710, _711), vec3(_1779 * _1771, _1779 * _1772, _1779 * _1773)) + 1.0) * 0.5;
        float _4571 = isnan(0.0) ? _1787 : (isnan(_1787) ? 0.0 : max(_1787, 0.0));
        float _1796 = sqrt(((_1772 * _1772) + (_1771 * _1771)) + (_1773 * _1773)) / (_1686 + 9.9999997473787516355514526367188e-06);
        float _4582 = isnan(0.0) ? _1796 : (isnan(_1796) ? 0.0 : max(_1796, 0.0));
        float _1797 = isnan(1.0) ? _4582 : (isnan(_4582) ? 1.0 : min(_4582, 1.0));
        float _1798 = _1797 * 2.0;
        float _1802 = (1.0 - _1797) / (_1797 + 1.0);
        float _4593 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
        float _1803 = isnan(1.0) ? _4593 : (isnan(_4593) ? 1.0 : min(_4593, 1.0));
        float _1812 = ((((1.0 - _1803) * (_1798 + 2.0)) * exp2(log2(isnan(1.0) ? _4571 : (isnan(_4571) ? 1.0 : min(_4571, 1.0))) * (_1798 + 1.0))) + _1803) * _1686;
        _1820 = _1653;
        _1821 = _1652;
        _1822 = _1651;
        _1823 = _1663;
        _1824 = _1662;
        _1825 = _1661;
        _1826 = _1673;
        _1827 = _1672;
        _1828 = _1671;
        _1829 = _1686;
        _1830 = _1685;
        _1831 = _1684;
        _1832 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1728 : (isnan(_1728) ? 0.0 : max(_1728, 0.0)));
        _1833 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1770 : (isnan(_1770) ? 0.0 : max(_1770, 0.0)));
        _1834 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1812 : (isnan(_1812) ? 0.0 : max(_1812, 0.0)));
    }
    else
    {
        _1820 = _1511;
        _1821 = _1511;
        _1822 = _1511;
        _1823 = _1511;
        _1824 = _1511;
        _1825 = _1511;
        _1826 = _1511;
        _1827 = _1511;
        _1828 = _1511;
        _1829 = _1511;
        _1830 = _1511;
        _1831 = _1511;
        _1832 = 0.0;
        _1833 = 0.0;
        _1834 = 0.0;
    }
    float _1844 = (cbModelParam._m0[1u].x * (_1832 - _1523)) + _1523;
    float _1845 = (cbModelParam._m0[1u].x * (_1833 - _1524)) + _1524;
    float _1846 = (cbModelParam._m0[1u].x * (_1834 - _1525)) + _1525;
    float _1867 = fma(_1846, cbSceneParam._m0[89u].z, fma(_1845, cbSceneParam._m0[89u].y, _1844 * cbSceneParam._m0[89u].x));
    float _1870 = fma(_1846, cbSceneParam._m0[90u].z, fma(_1845, cbSceneParam._m0[90u].y, _1844 * cbSceneParam._m0[90u].x));
    float _1873 = fma(_1846, cbSceneParam._m0[91u].z, fma(_1845, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1844));
    float _1888 = _1148 * 0.5;
    float _1889 = _1149 * 0.5;
    float _1890 = _1150 * 0.5;
    float _1891 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1822, _1825, _1828, _1831));
    float _1894 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1821, _1824, _1827, _1830));
    float _1897 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1820, _1823, _1826, _1829));
    float _1928;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1904 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1510, _1514, _1517, _1520));
        float _1908 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1512, _1515, _1518, _1521));
        float _1912 = dot(vec4(_1888, _1889, _1890, 1.0), vec4(_1513, _1516, _1519, _1522));
        float _1919 = dot(vec4(cbModelParam._m0[39u]), vec4(_1888, _1889, _1890, 1.0));
        _1928 = dot(vec3(isnan(0.0) ? _1912 : (isnan(_1912) ? 0.0 : max(_1912, 0.0)), isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0)), isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1919) ? 0.0 : (isnan(0.0) ? _1919 : max(0.0, _1919))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1928 = 1.0;
    }
    float _1939;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1930 = dot(vec4(cbModelParam._m0[40u]), vec4(_1888, _1889, _1890, 1.0));
        _1939 = dot(vec3(isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0)), isnan(0.0) ? _1894 : (isnan(_1894) ? 0.0 : max(_1894, 0.0)), isnan(0.0) ? _1897 : (isnan(_1897) ? 0.0 : max(_1897, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1930) ? 0.0 : (isnan(0.0) ? _1930 : max(0.0, _1930))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1939 = 1.0;
    }
    float _1943 = (_1939 * cbModelParam._m0[1u].x) + (_1928 * (1.0 - cbModelParam._m0[1u].x));
    float _1953 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1008);
    float _1954 = isnan(_1953) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1953 : min(cbModelParam._m0[25u].z, _1953));
    float _2034;
    float _2036;
    float _2038;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _2001 = fma(_1210, cbModelParam._m0[13u].z, fma(_1206, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1202)) + cbModelParam._m0[13u].w;
        float _2005 = fma(_1210, cbModelParam._m0[14u].z, fma(_1206, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1202)) + cbModelParam._m0[14u].w;
        float _2009 = fma(_1210, cbModelParam._m0[15u].z, fma(_1206, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1202)) + cbModelParam._m0[15u].w;
        float _2012 = fma(_1150, cbModelParam._m0[13u].z, fma(_1149, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1148));
        float _2015 = fma(_1150, cbModelParam._m0[14u].z, fma(_1149, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1148));
        float _2018 = fma(_1150, cbModelParam._m0[15u].z, fma(_1149, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1148));
        float _2046;
        if (_2012 > 0.0)
        {
            _2046 = abs((1.0 - _2001) / _2012);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2012 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_2001 + 1.0) / _2012);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2046 = frontier_phi_16_14_ladder;
        }
        float _2219;
        if (_2015 > 0.0)
        {
            _2219 = abs((1.0 - _2005) / _2015);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2015 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2005 + 1.0) / _2015);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2219 = frontier_phi_25_21_ladder;
        }
        float _2514;
        if (_2018 > 0.0)
        {
            _2514 = abs((1.0 - _2009) / _2018);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2018 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2009 + 1.0) / _2018);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2514 = frontier_phi_37_32_ladder;
        }
        float _2516 = isnan(_2219) ? _2046 : (isnan(_2046) ? _2219 : min(_2046, _2219));
        float _2517 = isnan(_2514) ? _2516 : (isnan(_2516) ? _2514 : min(_2516, _2514));
        float _2521 = (_2517 * _2012) + _2001;
        float _2522 = (_2517 * _2015) + _2005;
        float _2523 = (_2517 * _2018) + _2009;
        float _2524 = _2517 * 9.9999997473787516355514526367188e-05;
        float _2526 = (-1.0) - _2524;
        float _2528 = _2524 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2523 > _2528) || ((_2523 < _2526) || ((_2522 > _2528) || ((_2522 < _2526) || ((_2521 < _2526) || (_2521 > _2528))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2668 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2523, cbModelParam._m0[9u].z, fma(_2522, cbModelParam._m0[9u].y, _2521 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2523, cbModelParam._m0[10u].z, fma(_2522, cbModelParam._m0[10u].y, _2521 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2523, cbModelParam._m0[11u].z, fma(_2522, cbModelParam._m0[11u].y, _2521 * cbModelParam._m0[11u].x))), _1954);
            frontier_phi_15_37_ladder = _2668.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2668.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2668.z * cbModelParam._m0[1u].y;
        }
        _2034 = frontier_phi_15_37_ladder_1;
        _2036 = frontier_phi_15_37_ladder;
        _2038 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _2022 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1148, _1149, _1150), _1954);
        _2034 = _2022.x * cbModelParam._m0[1u].y;
        _2036 = _2022.y * cbModelParam._m0[1u].y;
        _2038 = _2022.z * cbModelParam._m0[1u].y;
    }
    float _2042 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1008);
    float _2043 = isnan(_2042) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2042 : min(cbModelParam._m0[25u].w, _2042));
    float _2134;
    float _2136;
    float _2138;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2098 = fma(_1210, cbModelParam._m0[21u].z, fma(_1206, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1202)) + cbModelParam._m0[21u].w;
        float _2102 = fma(_1210, cbModelParam._m0[22u].z, fma(_1206, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1202)) + cbModelParam._m0[22u].w;
        float _2106 = fma(_1210, cbModelParam._m0[23u].z, fma(_1206, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1202)) + cbModelParam._m0[23u].w;
        float _2109 = fma(_1150, cbModelParam._m0[21u].z, fma(_1149, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1148));
        float _2112 = fma(_1150, cbModelParam._m0[22u].z, fma(_1149, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1148));
        float _2115 = fma(_1150, cbModelParam._m0[23u].z, fma(_1149, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1148));
        float _2224;
        if (_2109 > 0.0)
        {
            _2224 = abs((1.0 - _2098) / _2109);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2109 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2098 + 1.0) / _2109);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2224 = frontier_phi_27_23_ladder;
        }
        float _2541;
        if (_2112 > 0.0)
        {
            _2541 = abs((1.0 - _2102) / _2112);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2112 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2102 + 1.0) / _2112);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2541 = frontier_phi_39_34_ladder;
        }
        float _2879;
        if (_2115 > 0.0)
        {
            _2879 = abs((1.0 - _2106) / _2115);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2115 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2106 + 1.0) / _2115);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2879 = frontier_phi_49_46_ladder;
        }
        float _2881 = isnan(_2541) ? _2224 : (isnan(_2224) ? _2541 : min(_2224, _2541));
        float _2882 = isnan(_2879) ? _2881 : (isnan(_2881) ? _2879 : min(_2881, _2879));
        float _2886 = (_2882 * _2109) + _2098;
        float _2887 = (_2882 * _2112) + _2102;
        float _2888 = (_2882 * _2115) + _2106;
        float _2889 = _2882 * 9.9999997473787516355514526367188e-05;
        float _2890 = (-1.0) - _2889;
        float _2892 = _2889 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2888 > _2892) || ((_2888 < _2890) || ((_2887 > _2892) || ((_2887 < _2890) || ((_2886 < _2890) || (_2886 > _2892))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3010 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2888, cbModelParam._m0[17u].z, fma(_2887, cbModelParam._m0[17u].y, _2886 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2888, cbModelParam._m0[18u].z, fma(_2887, cbModelParam._m0[18u].y, _2886 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2888, cbModelParam._m0[19u].z, fma(_2887, cbModelParam._m0[19u].y, _2886 * cbModelParam._m0[19u].x))), _2043);
            frontier_phi_24_49_ladder = _3010.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _3010.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _3010.x * cbModelParam._m0[1u].z;
        }
        _2134 = frontier_phi_24_49_ladder_2;
        _2136 = frontier_phi_24_49_ladder_1;
        _2138 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _2118 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1148, _1149, _1150), _2043);
        _2134 = _2118.x * cbModelParam._m0[1u].z;
        _2136 = _2118.y * cbModelParam._m0[1u].z;
        _2138 = _2118.z * cbModelParam._m0[1u].z;
    }
    float _2151 = (((_1173 * _1126) + _1174) * _1140) * ((cbModelParam._m0[1u].w * (_2134 - _2034)) + _2034);
    float _2153 = (((_1173 * _1127) + _1174) * _1140) * ((cbModelParam._m0[1u].w * (_2136 - _2036)) + _2036);
    float _2155 = (((_1173 * _1128) + _1174) * _1140) * ((cbModelParam._m0[1u].w * (_2138 - _2038)) + _2038);
    float _2158 = fma(_2155, cbSceneParam._m0[89u].z, fma(_2153, cbSceneParam._m0[89u].y, _2151 * cbSceneParam._m0[89u].x));
    float _2161 = fma(_2155, cbSceneParam._m0[90u].z, fma(_2153, cbSceneParam._m0[90u].y, _2151 * cbSceneParam._m0[90u].x));
    float _2164 = fma(_2155, cbSceneParam._m0[91u].z, fma(_2153, cbSceneParam._m0[91u].y, _2151 * cbSceneParam._m0[91u].x));
    float _2198 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2202 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2206 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2210 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2211 = _2198 / _2210;
    float _2212 = _2202 / _2210;
    float _2213 = _2206 / _2210;
    float _2360;
    float _2361;
    float _2362;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2240 = ((uint(_2213 > cbSceneParam._m0[59u].y) + uint(_2213 > cbSceneParam._m0[59u].x)) + uint(_2213 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2241 = _2240 + 43u;
        uint _2249 = _2240 + 44u;
        uint _2257 = _2240 + 45u;
        uint _2265 = _2240 + 46u;
        float _2276 = fma(_2210, cbSceneParam._m0[_2241].w, fma(_2206, cbSceneParam._m0[_2241].z, fma(_2202, cbSceneParam._m0[_2241].y, _2198 * cbSceneParam._m0[_2241].x)));
        float _2280 = fma(_2210, cbSceneParam._m0[_2249].w, fma(_2206, cbSceneParam._m0[_2249].z, fma(_2202, cbSceneParam._m0[_2249].y, _2198 * cbSceneParam._m0[_2249].x)));
        float _2288 = fma(_2210, cbSceneParam._m0[_2265].w, fma(_2206, cbSceneParam._m0[_2265].z, fma(_2202, cbSceneParam._m0[_2265].y, _2198 * cbSceneParam._m0[_2265].x)));
        float _2293 = cbSceneParam._m0[33u].z * _2288;
        float _2295 = cbSceneParam._m0[33u].w * _2288;
        float _2298 = fma(_2210, cbSceneParam._m0[_2257].w, fma(_2206, cbSceneParam._m0[_2257].z, fma(_2202, cbSceneParam._m0[_2257].y, _2198 * cbSceneParam._m0[_2257].x))) / _2288;
        float _2346 = (cbSceneParam._m0[33u].x - sqrt(((_2212 * _2212) + (_2211 * _2211)) + (_2213 * _2213))) * cbSceneParam._m0[33u].y;
        float _4719 = isnan(0.0) ? _2346 : (isnan(_2346) ? 0.0 : max(_2346, 0.0));
        float _2353 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2293 + _2276) / _2288, (_2295 + _2280) / _2288), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2295 + _2276) / _2288, (_2280 - _2293) / _2288), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2276 - _2293) / _2288, (_2280 - _2295) / _2288), _2298), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2276 - _2295) / _2288, (_2293 + _2280) / _2288), _2298), 0.0)).x), vec4(0.25)));
        _2360 = 1.0 - (_2353 * cbSceneParam._m0[34u].x);
        _2361 = 1.0 - (_2353 * cbSceneParam._m0[34u].y);
        _2362 = 1.0 - (_2353 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2360 = 1.0;
        _2361 = 1.0;
        _2362 = 1.0;
    }
    float _2426;
    float _2428;
    float _2430;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2414 = fma(_2210, cbSceneParam._m0[63u].w, fma(_2206, cbSceneParam._m0[63u].z, fma(_2202, cbSceneParam._m0[63u].y, _2198 * cbSceneParam._m0[63u].x)));
        float _2415 = fma(_2210, cbSceneParam._m0[60u].w, fma(_2206, cbSceneParam._m0[60u].z, fma(_2202, cbSceneParam._m0[60u].y, _2198 * cbSceneParam._m0[60u].x))) / _2414;
        float _2416 = fma(_2210, cbSceneParam._m0[61u].w, fma(_2206, cbSceneParam._m0[61u].z, fma(_2202, cbSceneParam._m0[61u].y, _2198 * cbSceneParam._m0[61u].x))) / _2414;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2415 >= cbSceneParam._m0[64u].x) && (_2416 >= cbSceneParam._m0[64u].y)) && (_2415 <= cbSceneParam._m0[64u].z)) && (_2416 <= cbSceneParam._m0[64u].w))
        {
            float _2554 = fma(_2210, cbSceneParam._m0[62u].w, fma(_2206, cbSceneParam._m0[62u].z, fma(_2202, cbSceneParam._m0[62u].y, _2198 * cbSceneParam._m0[62u].x))) / _2414;
            float _2558 = isnan(cbSceneParam._m0[41u].w) ? _2554 : (isnan(_2554) ? cbSceneParam._m0[41u].w : max(_2554, cbSceneParam._m0[41u].w));
            float _2601 = (cbSceneParam._m0[33u].x - sqrt(((_2212 * _2212) + (_2211 * _2211)) + (_2213 * _2213))) * cbSceneParam._m0[33u].y;
            float _4735 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
            float _2608 = (isnan(1.0) ? _4735 : (isnan(_4735) ? 1.0 : min(_4735, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2415, cbSceneParam._m0[33u].w + _2416), _2558), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2415, _2416 - cbSceneParam._m0[33u].z), _2558), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2415 - cbSceneParam._m0[33u].z, _2416 - cbSceneParam._m0[33u].w), _2558), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2415 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2416), _2558), 0.0)).x), vec4(0.25)));
            float _2612 = 1.0 - (_2608 * cbSceneParam._m0[34u].x);
            float _2613 = 1.0 - (_2608 * cbSceneParam._m0[34u].y);
            float _2614 = 1.0 - (_2608 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2613) ? _2361 : (isnan(_2361) ? _2613 : min(_2361, _2613));
            frontier_phi_36_35_ladder_1 = isnan(_2614) ? _2362 : (isnan(_2362) ? _2614 : min(_2362, _2614));
            frontier_phi_36_35_ladder_2 = isnan(_2612) ? _2360 : (isnan(_2360) ? _2612 : min(_2360, _2612));
        }
        else
        {
            frontier_phi_36_35_ladder = _2361;
            frontier_phi_36_35_ladder_1 = _2362;
            frontier_phi_36_35_ladder_2 = _2360;
        }
        _2426 = frontier_phi_36_35_ladder_2;
        _2428 = frontier_phi_36_35_ladder;
        _2430 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2426 = _2360;
        _2428 = _2361;
        _2430 = _2362;
    }
    uvec4 _2435 = floatBitsToUint(cbInstanceData._m0[_1032 + 5u]);
    uint _2437 = _2435.x * 14u;
    uint _2438 = _2437 + 13u;
    float _2445 = _1140 + (-1.0);
    float _2450 = (cbLight._m0[_2438].x * _2445) + 1.0;
    float _2451 = (cbLight._m0[_2438].y * _2445) + 1.0;
    float _2452 = (cbLight._m0[_2438].z * _2445) + 1.0;
    float _2453 = (cbLight._m0[_2438].w * _2445) + 1.0;
    uint _2454 = _2437 + 5u;
    float _2460 = isnan(1.0) ? _2451 : (isnan(_2451) ? 1.0 : min(_2451, 1.0));
    uint _2464 = _2437 + 4u;
    float _2473 = isnan(1.0) ? _2450 : (isnan(_2450) ? 1.0 : min(_2450, 1.0));
    uint _2477 = _2437 | 1u;
    float _2488 = dot(vec3(cbLight._m0[_2437].xyz), vec3(_709, _710, _711));
    float _2491 = dot(vec3(cbLight._m0[_2477].xyz), vec3(_709, _710, _711));
    float _4771 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
    float _4782 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
    float _2496 = (isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0))) * 0.3183098733425140380859375;
    float _2498 = (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0))) * 0.3183098733425140380859375;
    float _2505 = ((cbLight._m0[_2454].x * _2460) * _2498) + (((cbLight._m0[_2464].x * _2426) * _2473) * _2496);
    float _2506 = ((_2460 * cbLight._m0[_2454].y) * _2498) + (((cbLight._m0[_2464].y * _2428) * _2473) * _2496);
    float _2507 = ((_2460 * cbLight._m0[_2454].z) * _2498) + (((cbLight._m0[_2464].z * _2430) * _2473) * _2496);
    uvec4 _2511 = floatBitsToUint(cbLight._m0[_2437 + 12u]);
    bool _2513 = _2511.x == 0u;
    float _2615;
    float _2617;
    float _2619;
    if (_2513)
    {
        _2615 = _2505;
        _2617 = _2506;
        _2619 = _2507;
    }
    else
    {
        uint _2623 = _2437 + 6u;
        float _2639 = (dot(vec3(cbLight._m0[_2437 + 2u].xyz), vec3(_709, _710, _711)) * 0.5) + 0.5;
        float _2640 = _2639 * _2639;
        float _4793 = isnan(0.0) ? _2640 : (isnan(_2640) ? 0.0 : max(_2640, 0.0));
        float _2641 = isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0));
        float _2642 = isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0));
        _2615 = (((cbLight._m0[_2623].x * 0.3183098733425140380859375) * _2641) * _2642) + _2505;
        _2617 = (((cbLight._m0[_2623].y * 0.3183098733425140380859375) * _2641) * _2642) + _2506;
        _2619 = (((cbLight._m0[_2623].z * 0.3183098733425140380859375) * _2641) * _2642) + _2507;
    }
    bool _2622 = _2511.y == 0u;
    float _2677;
    float _2679;
    float _2681;
    if (_2622)
    {
        _2677 = _2615;
        _2679 = _2617;
        _2681 = _2619;
    }
    else
    {
        uint _2850 = _2437 + 7u;
        float _2866 = (dot(vec3(cbLight._m0[_2437 + 3u].xyz), vec3(_709, _710, _711)) * 0.5) + 0.5;
        float _2867 = _2866 * _2866;
        float _4809 = isnan(0.0) ? _2867 : (isnan(_2867) ? 0.0 : max(_2867, 0.0));
        float _2868 = isnan(1.0) ? _4809 : (isnan(_4809) ? 1.0 : min(_4809, 1.0));
        float _2869 = isnan(1.0) ? _2453 : (isnan(_2453) ? 1.0 : min(_2453, 1.0));
        _2677 = (((cbLight._m0[_2850].x * 0.3183098733425140380859375) * _2868) * _2869) + _2615;
        _2679 = (((cbLight._m0[_2850].y * 0.3183098733425140380859375) * _2868) * _2869) + _2617;
        _2681 = (((cbLight._m0[_2850].z * 0.3183098733425140380859375) * _2868) * _2869) + _2619;
    }
    uint _2684 = _2437 + 8u;
    float _2697 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2437].w)) * _1008) * 0.949999988079071044921875);
    float _2698 = _2697 * _2697;
    float _2699 = cbLight._m0[_2437].x + _922;
    float _2700 = cbLight._m0[_2437].y + _923;
    float _2701 = cbLight._m0[_2437].z + _924;
    float _2705 = inversesqrt(dot(vec3(_2699, _2700, _2701), vec3(_2699, _2700, _2701)));
    float _2706 = _2705 * _2699;
    float _2707 = _2705 * _2700;
    float _2708 = _2705 * _2701;
    float _2709 = dot(vec3(_709, _710, _711), vec3(cbLight._m0[_2437].xyz));
    float _4825 = isnan(0.0) ? _2709 : (isnan(_2709) ? 0.0 : max(_2709, 0.0));
    float _2712 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
    float _4836 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
    float _2713 = isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0));
    float _2714 = dot(vec3(_709, _710, _711), vec3(_2706, _2707, _2708));
    float _4847 = isnan(0.0) ? _2714 : (isnan(_2714) ? 0.0 : max(_2714, 0.0));
    float _2717 = isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0));
    float _2718 = dot(vec3(cbLight._m0[_2437].xyz), vec3(_2706, _2707, _2708));
    float _4858 = isnan(0.0) ? _2718 : (isnan(_2718) ? 0.0 : max(_2718, 0.0));
    float _2722 = _2698 * _2698;
    float _2726 = ((_2717 * _2717) * (_2722 + (-1.0))) + 1.0;
    float _2734 = exp2(log2(1.0 - (isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0)))) * 5.0);
    float _2735 = 0.959999978542327880859375 - _1123;
    float _2737 = 0.959999978542327880859375 - _1124;
    float _2738 = 0.959999978542327880859375 - _1125;
    float _2745 = 1.0 - _2698;
    float _2756 = (0.5 / (((_2713 * ((_2712 * _2745) + _2698)) + 9.9999999392252902907785028219223e-09) + (((_2713 * _2745) + _2698) * _2712))) * _2712;
    float _4869 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
    float _2758 = (isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0))) * (_2722 / ((_2726 * _2726) * 3.141590118408203125));
    uint _2772 = _2437 + 9u;
    float _2783 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2477].w)) * _1008) * 0.949999988079071044921875);
    float _2784 = _2783 * _2783;
    float _2785 = cbLight._m0[_2477].x + _922;
    float _2786 = cbLight._m0[_2477].y + _923;
    float _2787 = cbLight._m0[_2477].z + _924;
    float _2791 = inversesqrt(dot(vec3(_2785, _2786, _2787), vec3(_2785, _2786, _2787)));
    float _2792 = _2791 * _2785;
    float _2793 = _2791 * _2786;
    float _2794 = _2791 * _2787;
    float _2795 = dot(vec3(_709, _710, _711), vec3(cbLight._m0[_2477].xyz));
    float _4880 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
    float _2798 = isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0));
    float _2799 = dot(vec3(_709, _710, _711), vec3(_2792, _2793, _2794));
    float _4891 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
    float _2802 = isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0));
    float _2803 = dot(vec3(cbLight._m0[_2477].xyz), vec3(_2792, _2793, _2794));
    float _4902 = isnan(0.0) ? _2803 : (isnan(_2803) ? 0.0 : max(_2803, 0.0));
    float _2807 = _2784 * _2784;
    float _2811 = ((_2802 * _2802) * (_2807 + (-1.0))) + 1.0;
    float _2818 = exp2(log2(1.0 - (isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0)))) * 5.0);
    float _2825 = 1.0 - _2784;
    float _2835 = (0.5 / (((_2713 * ((_2798 * _2825) + _2784)) + 9.9999999392252902907785028219223e-09) + (((_2713 * _2825) + _2784) * _2798))) * _2798;
    float _4913 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
    float _2837 = (isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0))) * (_2807 / ((_2811 * _2811) * 3.141590118408203125));
    float _2847 = (((((_2818 * _2735) + _1126) * cbLight._m0[_2772].x) * _2837) * _2460) + ((((cbLight._m0[_2684].x * _2426) * ((_2734 * _2735) + _1126)) * _2758) * _2473);
    float _2848 = (((((_2818 * _2737) + _1127) * cbLight._m0[_2772].y) * _2837) * _2460) + ((((cbLight._m0[_2684].y * _2428) * ((_2734 * _2737) + _1127)) * _2758) * _2473);
    float _2849 = (((((_2818 * _2738) + _1128) * cbLight._m0[_2772].z) * _2837) * _2460) + ((((cbLight._m0[_2684].z * _2430) * ((_2734 * _2738) + _1128)) * _2758) * _2473);
    float _2905;
    float _2907;
    float _2909;
    if (_2513)
    {
        _2905 = _2847;
        _2907 = _2848;
        _2909 = _2849;
    }
    else
    {
        uint _2911 = _2437 + 2u;
        uint _2915 = _2437 + 10u;
        float _2929 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2911].w)) * _1008) * 0.949999988079071044921875);
        float _2930 = _2929 * _2929;
        float _2931 = cbLight._m0[_2911].x + _922;
        float _2932 = cbLight._m0[_2911].y + _923;
        float _2933 = cbLight._m0[_2911].z + _924;
        float _2937 = inversesqrt(dot(vec3(_2931, _2932, _2933), vec3(_2931, _2932, _2933)));
        float _2938 = _2937 * _2931;
        float _2939 = _2937 * _2932;
        float _2940 = _2937 * _2933;
        float _2941 = dot(vec3(_709, _710, _711), vec3(cbLight._m0[_2911].xyz));
        float _4924 = isnan(0.0) ? _2941 : (isnan(_2941) ? 0.0 : max(_2941, 0.0));
        float _2944 = isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0));
        float _2945 = dot(vec3(_709, _710, _711), vec3(_2938, _2939, _2940));
        float _4935 = isnan(0.0) ? _2945 : (isnan(_2945) ? 0.0 : max(_2945, 0.0));
        float _2948 = isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0));
        float _2949 = dot(vec3(cbLight._m0[_2911].xyz), vec3(_2938, _2939, _2940));
        float _4946 = isnan(0.0) ? _2949 : (isnan(_2949) ? 0.0 : max(_2949, 0.0));
        float _2953 = _2930 * _2930;
        float _2957 = ((_2948 * _2948) * (_2953 + (-1.0))) + 1.0;
        float _2964 = exp2(log2(1.0 - (isnan(1.0) ? _4946 : (isnan(_4946) ? 1.0 : min(_4946, 1.0)))) * 5.0);
        float _2971 = 1.0 - _2930;
        float _2981 = (0.5 / (((_2713 * ((_2944 * _2971) + _2930)) + 9.9999999392252902907785028219223e-09) + (((_2713 * _2971) + _2930) * _2944))) * _2944;
        float _4957 = isnan(0.0) ? _2981 : (isnan(_2981) ? 0.0 : max(_2981, 0.0));
        float _2983 = (isnan(1.0) ? _4957 : (isnan(_4957) ? 1.0 : min(_4957, 1.0))) * (_2953 / ((_2957 * _2957) * 3.141590118408203125));
        float _2984 = isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0));
        _2905 = (((((_2964 * _2735) + _1126) * cbLight._m0[_2915].x) * _2983) * _2984) + _2847;
        _2907 = (((((_2964 * _2737) + _1127) * cbLight._m0[_2915].y) * _2983) * _2984) + _2848;
        _2909 = (((((_2964 * _2738) + _1128) * cbLight._m0[_2915].z) * _2983) * _2984) + _2849;
    }
    float _3015;
    float _3017;
    float _3019;
    if (_2622)
    {
        _3015 = _2905;
        _3017 = _2907;
        _3019 = _2909;
    }
    else
    {
        uint _3026 = _2437 + 3u;
        uint _3030 = _2437 + 11u;
        float _3044 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_3026].w)) * _1008) * 0.949999988079071044921875);
        float _3045 = _3044 * _3044;
        float _3046 = cbLight._m0[_3026].x + _922;
        float _3047 = cbLight._m0[_3026].y + _923;
        float _3048 = cbLight._m0[_3026].z + _924;
        float _3052 = inversesqrt(dot(vec3(_3046, _3047, _3048), vec3(_3046, _3047, _3048)));
        float _3053 = _3052 * _3046;
        float _3054 = _3052 * _3047;
        float _3055 = _3052 * _3048;
        float _3056 = dot(vec3(_709, _710, _711), vec3(cbLight._m0[_3026].xyz));
        float _4973 = isnan(0.0) ? _3056 : (isnan(_3056) ? 0.0 : max(_3056, 0.0));
        float _3059 = isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0));
        float _3060 = dot(vec3(_709, _710, _711), vec3(_3053, _3054, _3055));
        float _4984 = isnan(0.0) ? _3060 : (isnan(_3060) ? 0.0 : max(_3060, 0.0));
        float _3063 = isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0));
        float _3064 = dot(vec3(cbLight._m0[_3026].xyz), vec3(_3053, _3054, _3055));
        float _4995 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
        float _3068 = _3045 * _3045;
        float _3072 = ((_3063 * _3063) * (_3068 + (-1.0))) + 1.0;
        float _3079 = exp2(log2(1.0 - (isnan(1.0) ? _4995 : (isnan(_4995) ? 1.0 : min(_4995, 1.0)))) * 5.0);
        float _3086 = 1.0 - _3045;
        float _3096 = (0.5 / (((_2713 * ((_3059 * _3086) + _3045)) + 9.9999999392252902907785028219223e-09) + (((_2713 * _3086) + _3045) * _3059))) * _3059;
        float _5006 = isnan(0.0) ? _3096 : (isnan(_3096) ? 0.0 : max(_3096, 0.0));
        float _3098 = (isnan(1.0) ? _5006 : (isnan(_5006) ? 1.0 : min(_5006, 1.0))) * (_3068 / ((_3072 * _3072) * 3.141590118408203125));
        float _3099 = isnan(1.0) ? _2453 : (isnan(_2453) ? 1.0 : min(_2453, 1.0));
        _3015 = (((((_3079 * _2735) + _1126) * cbLight._m0[_3030].x) * _3098) * _3099) + _2905;
        _3017 = (((((_3079 * _2737) + _1127) * cbLight._m0[_3030].y) * _3098) * _3099) + _2907;
        _3019 = (((((_3079 * _2738) + _1128) * cbLight._m0[_3030].z) * _3098) * _3099) + _2909;
    }
    float _3164;
    float _3166;
    float _3168;
    float _3170;
    float _3172;
    float _3174;
    if (_2435.y == 0u)
    {
        uvec4 _3120 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3121 = _3120.x;
        uint _3132 = uint((float(_3120.y) * floor(float(uint(cbSceneParam._m0[85u].y * _931) / _3121))) + floor(float(uint(cbSceneParam._m0[85u].x * _930) / _3121)));
        float _3142 = (log2(_2213 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3143 = isnan(0.0) ? _3142 : (isnan(_3142) ? 0.0 : max(_3142, 0.0));
        uint _3146 = uint(isnan(14.0) ? _3143 : (isnan(_3143) ? 14.0 : min(_3143, 14.0)));
        uvec4 _3151 = texelFetch(g_lightClusterGridBuffer, int(((_3146 << 2u) + (_3132 << 6u)) >> 2u));
        uint _3152 = _3151.x;
        uint _3153 = _3120.z;
        float _3267;
        float _3269;
        float _3271;
        float _3273;
        float _3275;
        float _3277;
        if (((((1u << ((_3153 >> 4u) & 15u)) + 4294967295u) & _3152) == 0u) || ((_3153 & 240u) == 0u))
        {
            _3267 = 0.0;
            _3269 = 0.0;
            _3271 = 0.0;
            _3273 = 0.0;
            _3275 = 0.0;
            _3277 = 0.0;
        }
        else
        {
            float _3268;
            float _3270;
            float _3272;
            float _3274;
            float _3276;
            float _3278;
            float _3420 = 0.0;
            float _3421 = 0.0;
            float _3422 = 0.0;
            float _3423 = 0.0;
            float _3424 = 0.0;
            float _3425 = 0.0;
            uint _3426 = 0u;
            uint _3435;
            bool _3436;
            for (;;)
            {
                _3435 = texelFetch(g_lightClassification, int((((_3146 << 5u) + (_3132 << 9u)) + (_3426 << 2u)) >> 2u)).x;
                _3436 = _3435 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3436)
                {
                    frontier_phi_68_pred = _3425;
                    frontier_phi_68_pred_1 = _3424;
                    frontier_phi_68_pred_2 = _3423;
                    frontier_phi_68_pred_3 = _3421;
                    frontier_phi_68_pred_4 = _3420;
                    frontier_phi_68_pred_5 = _3422;
                }
                else
                {
                    float _3544;
                    float _3545;
                    float _3546;
                    float _3547;
                    float _3548;
                    float _3549;
                    uint _3550;
                    _3544 = _3420;
                    _3545 = _3421;
                    _3546 = _3422;
                    _3547 = _3423;
                    _3548 = _3424;
                    _3549 = _3425;
                    _3550 = _3435;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    float _3481;
                    for (;;)
                    {
                        uint _3554 = uint(findLSB(_3550)) + (_3426 << 5u);
                        uint _3551 = (_3550 + 4294967295u) & _3550;
                        uint _3556 = _3554 * 48u;
                        vec4 _3570 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3556)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3556 + 3u)).x));
                        uint _3576 = (_3554 * 48u) + 4u;
                        vec4 _3589 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3576)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3576 + 3u)).x));
                        uint _3595 = (_3554 * 48u) + 8u;
                        vec3 _3606 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3595)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3595 + 2u)).x));
                        float _3610 = _3570.x - _2211;
                        float _3611 = _3570.y - _2212;
                        float _3612 = _3570.z - _2213;
                        float _3613 = dot(vec3(_3610, _3611, _3612), vec3(_3610, _3611, _3612));
                        float _3616 = inversesqrt(_3613);
                        float _3617 = _3616 * _3610;
                        float _3618 = _3616 * _3611;
                        float _3619 = _3616 * _3612;
                        float _3620 = dot(vec3(_953, _956, _959), vec3(_3617, _3618, _3619));
                        float _3625 = 1.0 - (_3613 * _3570.w);
                        float _5032 = isnan(0.0) ? _3625 : (isnan(_3625) ? 0.0 : max(_3625, 0.0));
                        float _3626 = isnan(1.0) ? _5032 : (isnan(_5032) ? 1.0 : min(_5032, 1.0));
                        float _3627 = sqrt(_3613) * _3589.w;
                        float _3630 = 1.39999997615814208984375 / (_3627 + 1.39999997615814208984375);
                        float _3631 = _3630 * _3630;
                        float _3634 = ((1.0 - _3631) * _3620) + _3631;
                        float _3637 = _3627 * _3627;
                        float _3640 = ((isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0))) * _3626) / ((_3637 * 0.699999988079071044921875) + 1.0);
                        float _3644 = (-0.0) - _2211;
                        float _3645 = (-0.0) - _2212;
                        float _3646 = (-0.0) - _2213;
                        float _3650 = inversesqrt(dot(vec3(_3644, _3645, _3646), vec3(_3644, _3645, _3646)));
                        float _3651 = _3650 * _3644;
                        float _3652 = _3650 * _3645;
                        float _3653 = _3650 * _3646;
                        float _3660 = exp2(log2(1.0 / ((_3637 * 3.5) + 5.0)) * 0.25);
                        float _3661 = 1.0 - _1156;
                        float _3668 = sqrt(1.0 - ((1.0 - (_3661 * _3661)) * (1.0 - (_3660 * _3660))));
                        float _3669 = _3668 * _3668;
                        float _3670 = _3669 * _3669;
                        float _3671 = _3651 + _3617;
                        float _3672 = _3652 + _3618;
                        float _3673 = _3653 + _3619;
                        float _3677 = inversesqrt(dot(vec3(_3671, _3672, _3673), vec3(_3671, _3672, _3673)));
                        float _3681 = dot(vec3(_953, _956, _959), vec3(_3651, _3652, _3653));
                        float _5048 = isnan(0.0) ? _3681 : (isnan(_3681) ? 0.0 : max(_3681, 0.0));
                        float _3684 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
                        float _3685 = dot(vec3(_953, _956, _959), vec3(_3677 * _3671, _3677 * _3672, _3677 * _3673));
                        float _5059 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                        float _3688 = isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0));
                        float _3692 = ((_3688 * _3688) * (_3670 + (-1.0))) + 1.0;
                        float _3693 = _3630 * _3669;
                        float _3694 = _3693 * _3693;
                        float _3697 = ((1.0 - _3694) * _3620) + _3694;
                        float _5070 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                        float _3698 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
                        float _3699 = 1.0 - _3669;
                        float _3709 = (0.5 / (((_3698 * ((_3684 * _3699) + _3669)) + 9.9999999392252902907785028219223e-09) + (((_3698 * _3699) + _3669) * _3684))) * _3698;
                        float _5081 = isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0));
                        float _3720 = (((_3670 * 3.1415927410125732421875) * (isnan(1.0) ? _5081 : (isnan(_5081) ? 1.0 : min(_5081, 1.0)))) / ((_3692 * _3692) * ((_3637 * 2.1991131305694580078125) + 3.141590118408203125))) * _3626;
                        _3479 = (_3640 * _3589.x) + _3547;
                        _3480 = (_3640 * _3589.y) + _3548;
                        _3481 = (_3640 * _3589.z) + _3549;
                        _3476 = (_3720 * _3606.x) + _3544;
                        _3477 = (_3720 * _3606.y) + _3545;
                        _3478 = (_3720 * _3606.z) + _3546;
                        if (_3551 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3544 = _3476;
                            _3545 = _3477;
                            _3546 = _3478;
                            _3547 = _3479;
                            _3548 = _3480;
                            _3549 = _3481;
                            _3550 = _3551;
                        }
                    }
                    frontier_phi_68_pred = _3481;
                    frontier_phi_68_pred_1 = _3480;
                    frontier_phi_68_pred_2 = _3479;
                    frontier_phi_68_pred_3 = _3477;
                    frontier_phi_68_pred_4 = _3476;
                    frontier_phi_68_pred_5 = _3478;
                }
                _3278 = frontier_phi_68_pred;
                _3276 = frontier_phi_68_pred_1;
                _3274 = frontier_phi_68_pred_2;
                _3270 = frontier_phi_68_pred_3;
                _3268 = frontier_phi_68_pred_4;
                _3272 = frontier_phi_68_pred_5;
                uint _3427 = _3426 + 1u;
                if (_3427 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3420 = _3268;
                    _3421 = _3270;
                    _3422 = _3272;
                    _3423 = _3274;
                    _3424 = _3276;
                    _3425 = _3278;
                    _3426 = _3427;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3267 = _3268;
            _3269 = _3270;
            _3271 = _3272;
            _3273 = _3274;
            _3275 = _3276;
            _3277 = _3278;
        }
        uvec4 _3281 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3282 = _3281.z;
        uint _3284 = (_3282 >> 8u) & 15u;
        float _3388;
        float _3390;
        float _3392;
        float _3394;
        float _3396;
        float _3398;
        if (((4294967295u << _3284) & _3152) == 0u)
        {
            _3388 = _3267;
            _3390 = _3269;
            _3392 = _3271;
            _3394 = _3273;
            _3396 = _3275;
            _3398 = _3277;
        }
        else
        {
            float _3413 = inversesqrt(dot(vec3(_2211, _2212, _2213), vec3(_2211, _2212, _2213)));
            float _3414 = _3413 * _2211;
            float _3415 = _3413 * _2212;
            float _3416 = _3413 * _2213;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_3284 < ((_3282 >> 12u) & 15u))
            {
                float _3389;
                float _3391;
                float _3393;
                float _3395;
                float _3397;
                float _3399;
                float _3527 = _3267;
                float _3528 = _3269;
                float _3529 = _3271;
                float _3530 = _3273;
                float _3531 = _3275;
                float _3532 = _3277;
                uint _3533 = _3284;
                uint _3542;
                bool _3543;
                for (;;)
                {
                    _3542 = texelFetch(g_lightClassification, int((((_3146 << 5u) + (_3132 << 9u)) + (_3533 << 2u)) >> 2u)).x;
                    _3543 = _3542 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3543)
                    {
                        frontier_phi_74_pred = _3529;
                        frontier_phi_74_pred_1 = _3528;
                        frontier_phi_74_pred_2 = _3527;
                        frontier_phi_74_pred_3 = _3532;
                        frontier_phi_74_pred_4 = _3531;
                        frontier_phi_74_pred_5 = _3530;
                    }
                    else
                    {
                        float _3725;
                        float _3726;
                        float _3727;
                        float _3728;
                        float _3729;
                        float _3730;
                        float _4020;
                        float _4021;
                        float _4022;
                        float _4023;
                        float _4024;
                        float _4025;
                        float _3738 = _3527;
                        float _3739 = _3528;
                        float _3740 = _3529;
                        float _3741 = _3530;
                        float _3742 = _3531;
                        float _3743 = _3532;
                        uint _3744 = _3542;
                        uint _3745;
                        vec4 _3770;
                        float _3771;
                        vec4 _3786;
                        vec3 _3798;
                        vec4 _3813;
                        vec4 _3829;
                        float _3876;
                        bool _3877;
                        for (;;)
                        {
                            uint _3755 = ((_3533 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3744));
                            _3745 = (_3744 + 4294967295u) & _3744;
                            uint _3757 = _3755 * 40u;
                            _3770 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3757)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3757 + 3u)).x));
                            _3771 = _3770.w;
                            uint _3773 = (_3755 * 40u) + 4u;
                            _3786 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3773)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3773 + 3u)).x));
                            uint _3788 = (_3755 * 40u) + 8u;
                            _3798 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3788)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3788 + 2u)).x));
                            uint _3800 = (_3755 * 40u) + 16u;
                            _3813 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3800)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3800 + 3u)).x));
                            uint _3816 = (_3755 * 40u) + 20u;
                            _3829 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3816)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3816 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3816 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3816 + 3u)).x));
                            uint _3832 = (_3755 * 40u) + 24u;
                            vec4 _3845 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3832)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3832 + 3u)).x));
                            uint _3851 = (_3755 * 40u) + 28u;
                            vec4 _3864 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3851)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3851 + 3u)).x));
                            _3876 = fma(_2213, _3864.z, fma(_2212, _3864.y, _3864.x * _2211)) + _3864.w;
                            _3877 = !((fma(_2213, _3845.z, fma(_2212, _3845.y, _3845.x * _2211)) + _3845.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3877)
                            {
                                float _3904 = _3770.x - _2211;
                                float _3905 = _3770.y - _2212;
                                float _3906 = _3770.z - _2213;
                                float _3907 = dot(vec3(_3904, _3905, _3906), vec3(_3904, _3905, _3906));
                                float _3910 = inversesqrt(_3907);
                                float _3911 = _3910 * _3904;
                                float _3912 = _3910 * _3905;
                                float _3913 = _3910 * _3906;
                                float _3917 = 1.0 - (_3907 / (_3771 * _3771));
                                float _5092 = isnan(0.0) ? _3917 : (isnan(_3917) ? 0.0 : max(_3917, 0.0));
                                float _3918 = isnan(1.0) ? _5092 : (isnan(_5092) ? 1.0 : min(_5092, 1.0));
                                float _3922 = sqrt(_3907) * _3786.w;
                                float _3924 = 1.39999997615814208984375 / (_3922 + 1.39999997615814208984375);
                                float _3925 = _3924 * _3924;
                                float _3928 = ((1.0 - _3925) * dot(vec3(_3911, _3912, _3913), vec3(_953, _956, _959))) + _3925;
                                float _3931 = _3922 * _3922;
                                float _3935 = (fma(_2213, _3813.z, fma(_2212, _3813.y, _3813.x * _2211)) + _3813.w) / _3876;
                                float _3936 = (fma(_2213, _3829.z, fma(_2212, _3829.y, _3829.x * _2211)) + _3829.w) / _3876;
                                float _3940 = 1.0 - dot(vec2(_3935, _3936), vec2(_3935, _3936));
                                float _5108 = isnan(0.0) ? _3940 : (isnan(_3940) ? 0.0 : max(_3940, 0.0));
                                float _3941 = isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0));
                                float _3942 = _3941 * (((isnan(0.0) ? _3928 : (isnan(_3928) ? 0.0 : max(_3928, 0.0))) * _3918) / ((_3931 * 0.699999988079071044921875) + 1.0));
                                float _3954 = exp2(log2(1.0 / ((_3931 * 3.5) + 5.0)) * 0.25);
                                float _3955 = 1.0 - _1156;
                                float _3962 = sqrt(1.0 - ((1.0 - (_3955 * _3955)) * (1.0 - (_3954 * _3954))));
                                float _3963 = _3962 * _3962;
                                float _3964 = _3963 * _3963;
                                float _3965 = _3911 - _3414;
                                float _3966 = _3912 - _3415;
                                float _3967 = _3913 - _3416;
                                float _3971 = inversesqrt(dot(vec3(_3965, _3966, _3967), vec3(_3965, _3966, _3967)));
                                float _3975 = dot(vec3(_953, _956, _959), vec3((-0.0) - _3414, (-0.0) - _3415, (-0.0) - _3416));
                                float _5119 = isnan(0.0) ? _3975 : (isnan(_3975) ? 0.0 : max(_3975, 0.0));
                                float _3978 = isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0));
                                float _3979 = dot(vec3(_953, _956, _959), vec3(_3971 * _3965, _3971 * _3966, _3971 * _3967));
                                float _5130 = isnan(0.0) ? _3979 : (isnan(_3979) ? 0.0 : max(_3979, 0.0));
                                float _3982 = isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0));
                                float _3986 = ((_3982 * _3982) * (_3964 + (-1.0))) + 1.0;
                                float _3987 = _3924 * _3963;
                                float _3988 = _3987 * _3987;
                                float _3994 = ((1.0 - _3988) * dot(vec3(_953, _956, _959), vec3(_3911, _3912, _3913))) + _3988;
                                float _5141 = isnan(0.0) ? _3994 : (isnan(_3994) ? 0.0 : max(_3994, 0.0));
                                float _3995 = isnan(1.0) ? _5141 : (isnan(_5141) ? 1.0 : min(_5141, 1.0));
                                float _3996 = 1.0 - _3963;
                                float _4006 = (0.5 / (((_3995 * ((_3978 * _3996) + _3963)) + 9.9999999392252902907785028219223e-09) + (((_3995 * _3996) + _3963) * _3978))) * _3995;
                                float _5152 = isnan(0.0) ? _4006 : (isnan(_4006) ? 0.0 : max(_4006, 0.0));
                                float _4016 = (_3941 * _3918) * (((_3964 * 3.1415927410125732421875) * (isnan(1.0) ? _5152 : (isnan(_5152) ? 1.0 : min(_5152, 1.0)))) / ((_3986 * _3986) * ((_3931 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _4016 * _3798.z;
                                frontier_phi_80_pred_1 = _4016 * _3798.y;
                                frontier_phi_80_pred_2 = _4016 * _3798.x;
                                frontier_phi_80_pred_3 = _3942 * _3786.z;
                                frontier_phi_80_pred_4 = _3942 * _3786.y;
                                frontier_phi_80_pred_5 = _3942 * _3786.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _4022 = frontier_phi_80_pred;
                            _4021 = frontier_phi_80_pred_1;
                            _4020 = frontier_phi_80_pred_2;
                            _4025 = frontier_phi_80_pred_3;
                            _4024 = frontier_phi_80_pred_4;
                            _4023 = frontier_phi_80_pred_5;
                            _3728 = _4023 + _3741;
                            _3729 = _4024 + _3742;
                            _3730 = _4025 + _3743;
                            _3725 = _4020 + _3738;
                            _3726 = _4021 + _3739;
                            _3727 = _4022 + _3740;
                            if (_3745 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3738 = _3725;
                                _3739 = _3726;
                                _3740 = _3727;
                                _3741 = _3728;
                                _3742 = _3729;
                                _3743 = _3730;
                                _3744 = _3745;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3727;
                        frontier_phi_74_pred_1 = _3726;
                        frontier_phi_74_pred_2 = _3725;
                        frontier_phi_74_pred_3 = _3730;
                        frontier_phi_74_pred_4 = _3729;
                        frontier_phi_74_pred_5 = _3728;
                    }
                    _3393 = frontier_phi_74_pred;
                    _3391 = frontier_phi_74_pred_1;
                    _3389 = frontier_phi_74_pred_2;
                    _3399 = frontier_phi_74_pred_3;
                    _3397 = frontier_phi_74_pred_4;
                    _3395 = frontier_phi_74_pred_5;
                    uint _3534 = _3533 + 1u;
                    if (_3534 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3527 = _3389;
                        _3528 = _3391;
                        _3529 = _3393;
                        _3530 = _3395;
                        _3531 = _3397;
                        _3532 = _3399;
                        _3533 = _3534;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3397;
                frontier_phi_62_63_ladder_1 = _3395;
                frontier_phi_62_63_ladder_2 = _3393;
                frontier_phi_62_63_ladder_3 = _3399;
                frontier_phi_62_63_ladder_4 = _3391;
                frontier_phi_62_63_ladder_5 = _3389;
            }
            else
            {
                frontier_phi_62_63_ladder = _3275;
                frontier_phi_62_63_ladder_1 = _3273;
                frontier_phi_62_63_ladder_2 = _3271;
                frontier_phi_62_63_ladder_3 = _3277;
                frontier_phi_62_63_ladder_4 = _3269;
                frontier_phi_62_63_ladder_5 = _3267;
            }
            _3388 = frontier_phi_62_63_ladder_5;
            _3390 = frontier_phi_62_63_ladder_4;
            _3392 = frontier_phi_62_63_ladder_2;
            _3394 = frontier_phi_62_63_ladder_1;
            _3396 = frontier_phi_62_63_ladder;
            _3398 = frontier_phi_62_63_ladder_3;
        }
        float _3403 = isnan(1.0) ? _1140 : (isnan(_1140) ? 1.0 : min(_1140, 1.0));
        _3164 = (_3403 * _3394) + _2677;
        _3166 = (_3403 * _3396) + _2679;
        _3168 = (_3403 * _3398) + _2681;
        _3170 = ((_3388 * _1126) * _3403) + _3015;
        _3172 = ((_3390 * _1127) * _3403) + _3017;
        _3174 = ((_3392 * _1128) * _3403) + _3019;
    }
    else
    {
        _3164 = _2677;
        _3166 = _2679;
        _3168 = _2681;
        _3170 = _3015;
        _3172 = _3017;
        _3174 = _3019;
    }
    uint _3180 = _1033 + uint(cbMatDynParam._m0[0u].w);
    float _3186 = cbInstanceData._m0[_3180].x * (((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _751) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _641) * _654.x) * _780)) + (((_809 - (_809 * _717)) + (cbMatDynParam._m0[11u].x * _840)) * cbMatDynParam._m0[9u].x));
    float _3187 = cbInstanceData._m0[_3180].y * (((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _751) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _641) * _654.y) * _780)) + (((_811 - (_811 * _717)) + (cbMatDynParam._m0[11u].y * _840)) * cbMatDynParam._m0[9u].y));
    float _3188 = cbInstanceData._m0[_3180].z * (((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _751) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _641) * _654.z) * _780)) + (((_813 - (_813 * _717)) + (cbMatDynParam._m0[11u].z * _840)) * cbMatDynParam._m0[9u].z));
    float _5168 = isnan(0.0) ? _1117 : (isnan(_1117) ? 0.0 : max(_1117, 0.0));
    float _5179 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
    float _5190 = isnan(0.0) ? _1119 : (isnan(_1119) ? 0.0 : max(_1119, 0.0));
    float _5201 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
    float _3206 = (((isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0))) * (_3164 + ((isnan(0.0) ? _1867 : (isnan(_1867) ? 0.0 : max(_1867, 0.0))) * _1140))) + ((_3170 + ((isnan(0.0) ? _2158 : (isnan(_2158) ? 0.0 : max(_2158, 0.0))) * _1943)) * cbPerFrame._m0[3u].x)) + _3186;
    float _3208 = (_3187 + ((_3172 + ((isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0))) * _1943)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5179 : (isnan(_5179) ? 1.0 : min(_5179, 1.0))) * (_3166 + ((isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0))) * _1140)));
    float _3210 = (_3188 + ((_3174 + ((isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0))) * _1943)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5190 : (isnan(_5190) ? 1.0 : min(_5190, 1.0))) * (_3168 + ((isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0))) * _1140)));
    float _3228 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _780) + cbMatDynParam._m0[12u].y;
    float _3233 = cbInstanceData._m0[_1032 + 6u].w * (isnan(1.0) ? _5201 : (isnan(_5201) ? 1.0 : min(_5201, 1.0)));
    float _3238 = _930 / cbSceneParam._m0[86u].x;
    float _3239 = _931 / cbSceneParam._m0[86u].y;
    vec4 _3253 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3238, _3239, (log2((isnan(cbSceneParam._m0[77u].w) ? _866 : (isnan(_866) ? cbSceneParam._m0[77u].w : min(_866, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3255 = _3253.x;
    float _3256 = _3253.y;
    float _3257 = _3253.z;
    float _3258 = _3253.w;
    float _3329;
    float _3331;
    float _3333;
    float _3335;
    if (_866 > cbSceneParam._m0[78u].w)
    {
        float _3292 = isnan(_866) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _866 : min(cbSceneParam._m0[80u].w, _866));
        float _3293 = _3292 / _866;
        float _3304 = _3293 * _915;
        float _3305 = _916 * _3293;
        float _3306 = (-0.0) - _3305;
        float _3307 = _3293 * _917;
        float _3309 = (cbSceneParam._m0[77u].w * _3306) / _3292;
        float _3310 = _3309 + cbSceneParam._m0[79u].w;
        float _3311 = cbSceneParam._m0[79u].w - _3305;
        float _3317 = sqrt(((_3304 * _3304) + (_3305 * _3305)) + (_3307 * _3307));
        float _3320 = (1.0 - (cbSceneParam._m0[77u].w / _3292)) * _3317;
        float _3325 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3327 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3489;
        if (abs((_3306 - _3309) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3489 = ((((_3310 > 0.0) ? exp2(_3325 * _3310) : (2.0 - exp2(_3327 * _3310))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3320;
        }
        else
        {
            float _3449 = 1.0 / cbSceneParam._m0[80u].x;
            float _3450 = isnan(_3311) ? _3310 : (isnan(_3310) ? _3311 : max(_3310, _3311));
            float _3451 = isnan(_3311) ? _3310 : (isnan(_3310) ? _3311 : min(_3310, _3311));
            float _3460 = isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : min(_3450, 0.0));
            float _3461 = isnan(0.0) ? _3451 : (isnan(_3451) ? 0.0 : min(_3451, 0.0));
            _3489 = ((abs(_3317 / _3306) * cbSceneParam._m0[80u].y) * ((((_3460 - _3461) * 2.0) - ((exp2(_3325 * (isnan(0.0) ? _3450 : (isnan(_3450) ? 0.0 : max(_3450, 0.0)))) - exp2(_3325 * (isnan(0.0) ? _3451 : (isnan(_3451) ? 0.0 : max(_3451, 0.0))))) * _3449)) - ((exp2(_3327 * _3460) - exp2(_3327 * _3461)) * _3449))) + (_3320 * cbSceneParam._m0[80u].z);
        }
        vec4 _3491 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3238, _3239, 1.0), 0.0);
        float _3500 = exp2((_3489 * (-1.44269502162933349609375)) * (1.0 - _3491.w));
        float _3501 = log2(_3500);
        float _3517 = log2(_3258);
        _3329 = (exp2(_3517 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3501 * cbSceneParam._m0[78u].x)) * _3491.x) / cbSceneParam._m0[78u].x)) + _3255;
        _3331 = (exp2(_3517 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3501 * cbSceneParam._m0[78u].y)) * _3491.y) / cbSceneParam._m0[78u].y)) + _3256;
        _3333 = (exp2(_3517 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3501 * cbSceneParam._m0[78u].z)) * _3491.z) / cbSceneParam._m0[78u].z)) + _3257;
        _3335 = _3500 * _3258;
    }
    else
    {
        _3329 = _3255;
        _3331 = _3256;
        _3333 = _3257;
        _3335 = _3258;
    }
    float _3347 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3348 = _3347 == 3.0;
    float _3349 = log2(_3335);
    float _3353 = exp2(_3349 * cbSceneParam._m0[78u].x);
    float _3354 = exp2(_3349 * cbSceneParam._m0[78u].y);
    float _3355 = exp2(_3349 * cbSceneParam._m0[78u].z);
    float _3356 = _3353 * (isnan(0.0) ? _3206 : (isnan(_3206) ? 0.0 : max(_3206, 0.0)));
    float _3357 = _3354 * (isnan(0.0) ? _3208 : (isnan(_3208) ? 0.0 : max(_3208, 0.0)));
    float _3358 = _3355 * (isnan(0.0) ? _3210 : (isnan(_3210) ? 0.0 : max(_3210, 0.0)));
    float _3367 = (_3347 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3367 * (_3348 ? _3356 : (_3356 + (cbSceneParam._m0[72u].w * _3329)));
    SV_Target.y = _3367 * (_3348 ? _3357 : (_3357 + (cbSceneParam._m0[72u].w * _3331)));
    SV_Target.z = _3367 * (_3348 ? _3358 : (_3358 + (cbSceneParam._m0[72u].w * _3333)));
    SV_Target.w = _3233;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _3186) * _3228) * _3353) * _3367;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _3187) * _3228) * _3354) * _3367;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _3188) * _3228) * _3355) * _3367;
    SV_Target_1.w = _3233;
}


