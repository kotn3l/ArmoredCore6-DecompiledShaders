#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;

void main()
{
    uint _70 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _155;
    float _156;
    float _157;
    float _158;
    float _159;
    float _160;
    float _161;
    float _162;
    float _163;
    float _164;
    float _165;
    float _166;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _102 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _70;
        uint _116 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_102)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _123 = _116 + 1u;
        uint _130 = _116 + 2u;
        _155 = cbObjMatrix._m0[_116].x;
        _156 = cbObjMatrix._m0[_116].y;
        _157 = cbObjMatrix._m0[_116].z;
        _158 = cbObjMatrix._m0[_116].w;
        _159 = cbObjMatrix._m0[_123].x;
        _160 = cbObjMatrix._m0[_123].y;
        _161 = cbObjMatrix._m0[_123].z;
        _162 = cbObjMatrix._m0[_123].w;
        _163 = cbObjMatrix._m0[_130].x;
        _164 = cbObjMatrix._m0[_130].y;
        _165 = cbObjMatrix._m0[_130].z;
        _166 = cbObjMatrix._m0[_130].w;
    }
    else
    {
        _155 = cbvModelParam._m0[0u].x;
        _156 = cbvModelParam._m0[0u].y;
        _157 = cbvModelParam._m0[0u].z;
        _158 = cbvModelParam._m0[0u].w;
        _159 = cbvModelParam._m0[1u].x;
        _160 = cbvModelParam._m0[1u].y;
        _161 = cbvModelParam._m0[1u].z;
        _162 = cbvModelParam._m0[1u].w;
        _163 = cbvModelParam._m0[2u].x;
        _164 = cbvModelParam._m0[2u].y;
        _165 = cbvModelParam._m0[2u].z;
        _166 = cbvModelParam._m0[2u].w;
    }
    precise float _167 = POSITION.x * _155;
    precise float _168 = POSITION.y * _156;
    precise float _169 = _168 + _167;
    precise float _170 = POSITION.z * _157;
    precise float _171 = _170 + _169;
    precise float _172 = 1.0 * _158;
    precise float _174 = _172 + _171;
    precise float _175 = POSITION.x * _159;
    precise float _176 = POSITION.y * _160;
    precise float _177 = _176 + _175;
    precise float _178 = POSITION.z * _161;
    precise float _179 = _178 + _177;
    precise float _180 = 1.0 * _162;
    precise float _181 = _180 + _179;
    precise float _182 = POSITION.x * _163;
    precise float _183 = POSITION.y * _164;
    precise float _184 = _183 + _182;
    precise float _185 = POSITION.z * _165;
    precise float _186 = _185 + _184;
    precise float _187 = 1.0 * _166;
    precise float _188 = _187 + _186;
    precise float _194 = _174 - cbSceneParam._m0[3u].x;
    precise float _195 = _181 - cbSceneParam._m0[3u].y;
    precise float _196 = _188 - cbSceneParam._m0[3u].z;
    precise float _224 = _194 * cbSceneParam._m0[24u].x;
    precise float _225 = _195 * cbSceneParam._m0[24u].y;
    precise float _226 = _225 + _224;
    precise float _227 = _196 * cbSceneParam._m0[24u].z;
    precise float _228 = _227 + _226;
    precise float _229 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _230 = _229 + _228;
    precise float _231 = _194 * cbSceneParam._m0[25u].x;
    precise float _232 = _195 * cbSceneParam._m0[25u].y;
    precise float _233 = _232 + _231;
    precise float _234 = _196 * cbSceneParam._m0[25u].z;
    precise float _235 = _234 + _233;
    precise float _236 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _237 = _236 + _235;
    precise float _238 = _194 * cbSceneParam._m0[26u].x;
    precise float _239 = _195 * cbSceneParam._m0[26u].y;
    precise float _240 = _239 + _238;
    precise float _241 = _196 * cbSceneParam._m0[26u].z;
    precise float _242 = _241 + _240;
    precise float _243 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _244 = _243 + _242;
    precise float _245 = _194 * cbSceneParam._m0[27u].x;
    precise float _246 = _195 * cbSceneParam._m0[27u].y;
    precise float _247 = _246 + _245;
    precise float _248 = _196 * cbSceneParam._m0[27u].z;
    precise float _249 = _248 + _247;
    precise float _250 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _251 = _250 + _249;
    uint _256 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _70;
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    gl_Position.x = _230;
    gl_Position.y = _237;
    gl_Position.z = _244;
    gl_Position.w = _251;
    gl_ClipDistance[0u] = dot(vec4(_230, _237, _244, _251), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_230, _237, _244, _251), vec4(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_256)).x * 13u) + 3u]));
}


