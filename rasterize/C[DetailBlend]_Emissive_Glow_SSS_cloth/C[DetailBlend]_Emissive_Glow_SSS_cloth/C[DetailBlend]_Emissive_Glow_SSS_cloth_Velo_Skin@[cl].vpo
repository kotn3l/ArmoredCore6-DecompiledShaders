#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 6) out vec4 TEXCOORD_7;
layout(location = 7) out vec4 TEXCOORD_8;
layout(location = 5, component = 1) out vec3 TEXCOORD_9;

void main()
{
    uint _87 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_7.x = 0.0;
    TEXCOORD_7.y = 0.0;
    TEXCOORD_7.z = 0.0;
    TEXCOORD_7.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    TEXCOORD_8.z = 0.0;
    TEXCOORD_8.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    TEXCOORD_9.z = 0.0;
    float _217 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _219 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _220 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _227 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _228 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _231 = float(BLENDINDICES.x);
    float _232 = float(BLENDINDICES.y);
    float _233 = float(BLENDINDICES.z);
    float _234 = float(BLENDINDICES.w);
    bool _240 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _461;
    float _462;
    float _463;
    float _464;
    float _465;
    float _466;
    float _467;
    float _468;
    float _469;
    float _470;
    float _471;
    float _472;
    if (_240)
    {
        uint _245 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _87;
        precise float _249 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _254 = isnan(_249) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _249 : max(0.001000000047497451305389404296875, _249));
        precise float _256 = BLENDWEIGHT.x / _254;
        precise float _257 = BLENDWEIGHT.y / _254;
        precise float _258 = BLENDWEIGHT.z / _254;
        precise float _259 = BLENDWEIGHT.w / _254;
        uvec4 _266 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_245)).x * 13u) + 4u]);
        uint _267 = _266.x;
        uint _269 = (_267 + uint(_231)) * 3u;
        uint _276 = _269 + 1u;
        uint _283 = _269 + 2u;
        precise float _290 = _256 * cbObjMatrix._m0[_269].x;
        precise float _291 = _256 * cbObjMatrix._m0[_276].x;
        precise float _292 = _256 * cbObjMatrix._m0[_283].x;
        precise float _293 = _256 * cbObjMatrix._m0[_269].y;
        precise float _294 = _256 * cbObjMatrix._m0[_276].y;
        precise float _295 = _256 * cbObjMatrix._m0[_283].y;
        precise float _296 = _256 * cbObjMatrix._m0[_269].z;
        precise float _297 = _256 * cbObjMatrix._m0[_276].z;
        precise float _298 = _256 * cbObjMatrix._m0[_283].z;
        precise float _299 = _256 * cbObjMatrix._m0[_269].w;
        precise float _300 = _256 * cbObjMatrix._m0[_276].w;
        precise float _301 = _256 * cbObjMatrix._m0[_283].w;
        uint _304 = (_267 + uint(_232)) * 3u;
        uint _311 = _304 + 1u;
        uint _318 = _304 + 2u;
        precise float _325 = _257 * cbObjMatrix._m0[_304].x;
        precise float _326 = _257 * cbObjMatrix._m0[_311].x;
        precise float _327 = _257 * cbObjMatrix._m0[_318].x;
        precise float _328 = _257 * cbObjMatrix._m0[_304].y;
        precise float _329 = _257 * cbObjMatrix._m0[_311].y;
        precise float _330 = _257 * cbObjMatrix._m0[_318].y;
        precise float _331 = _257 * cbObjMatrix._m0[_304].z;
        precise float _332 = _257 * cbObjMatrix._m0[_311].z;
        precise float _333 = _257 * cbObjMatrix._m0[_318].z;
        precise float _334 = _257 * cbObjMatrix._m0[_304].w;
        precise float _335 = _257 * cbObjMatrix._m0[_311].w;
        precise float _336 = _257 * cbObjMatrix._m0[_318].w;
        precise float _337 = _290 + _325;
        precise float _338 = _291 + _326;
        precise float _339 = _292 + _327;
        precise float _340 = _293 + _328;
        precise float _341 = _294 + _329;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        uint _351 = (_267 + uint(_233)) * 3u;
        uint _358 = _351 + 1u;
        uint _365 = _351 + 2u;
        precise float _372 = _258 * cbObjMatrix._m0[_351].x;
        precise float _373 = _258 * cbObjMatrix._m0[_358].x;
        precise float _374 = _258 * cbObjMatrix._m0[_365].x;
        precise float _375 = _258 * cbObjMatrix._m0[_351].y;
        precise float _376 = _258 * cbObjMatrix._m0[_358].y;
        precise float _377 = _258 * cbObjMatrix._m0[_365].y;
        precise float _378 = _258 * cbObjMatrix._m0[_351].z;
        precise float _379 = _258 * cbObjMatrix._m0[_358].z;
        precise float _380 = _258 * cbObjMatrix._m0[_365].z;
        precise float _381 = _258 * cbObjMatrix._m0[_351].w;
        precise float _382 = _258 * cbObjMatrix._m0[_358].w;
        precise float _383 = _258 * cbObjMatrix._m0[_365].w;
        precise float _384 = _337 + _372;
        precise float _385 = _338 + _373;
        precise float _386 = _339 + _374;
        precise float _387 = _340 + _375;
        precise float _388 = _341 + _376;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        uint _398 = (_267 + uint(_234)) * 3u;
        uint _405 = _398 + 1u;
        uint _412 = _398 + 2u;
        precise float _419 = _259 * cbObjMatrix._m0[_398].x;
        precise float _420 = _259 * cbObjMatrix._m0[_405].x;
        precise float _421 = _259 * cbObjMatrix._m0[_412].x;
        precise float _422 = _259 * cbObjMatrix._m0[_398].y;
        precise float _423 = _259 * cbObjMatrix._m0[_405].y;
        precise float _424 = _259 * cbObjMatrix._m0[_412].y;
        precise float _425 = _259 * cbObjMatrix._m0[_398].z;
        precise float _426 = _259 * cbObjMatrix._m0[_405].z;
        precise float _427 = _259 * cbObjMatrix._m0[_412].z;
        precise float _428 = _259 * cbObjMatrix._m0[_398].w;
        precise float _429 = _259 * cbObjMatrix._m0[_405].w;
        precise float _430 = _259 * cbObjMatrix._m0[_412].w;
        precise float _431 = _384 + _419;
        precise float _432 = _385 + _420;
        precise float _433 = _386 + _421;
        precise float _434 = _387 + _422;
        precise float _435 = _388 + _423;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        precise float _439 = _392 + _427;
        precise float _440 = _393 + _428;
        precise float _441 = _394 + _429;
        precise float _442 = _395 + _430;
        _461 = _431;
        _462 = _434;
        _463 = _437;
        _464 = _440;
        _465 = _432;
        _466 = _435;
        _467 = _438;
        _468 = _441;
        _469 = _433;
        _470 = _436;
        _471 = _439;
        _472 = _442;
    }
    else
    {
        _461 = cbvModelParam._m0[0u].x;
        _462 = cbvModelParam._m0[0u].y;
        _463 = cbvModelParam._m0[0u].z;
        _464 = cbvModelParam._m0[0u].w;
        _465 = cbvModelParam._m0[1u].x;
        _466 = cbvModelParam._m0[1u].y;
        _467 = cbvModelParam._m0[1u].z;
        _468 = cbvModelParam._m0[1u].w;
        _469 = cbvModelParam._m0[2u].x;
        _470 = cbvModelParam._m0[2u].y;
        _471 = cbvModelParam._m0[2u].z;
        _472 = cbvModelParam._m0[2u].w;
    }
    precise float _473 = POSITION.x * _461;
    precise float _474 = POSITION.y * _462;
    precise float _475 = _474 + _473;
    precise float _476 = POSITION.z * _463;
    precise float _477 = _476 + _475;
    precise float _478 = 1.0 * _464;
    precise float _479 = _478 + _477;
    precise float _480 = POSITION.x * _465;
    precise float _481 = POSITION.y * _466;
    precise float _482 = _481 + _480;
    precise float _483 = POSITION.z * _467;
    precise float _484 = _483 + _482;
    precise float _485 = 1.0 * _468;
    precise float _486 = _485 + _484;
    precise float _487 = POSITION.x * _469;
    precise float _488 = POSITION.y * _470;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.z * _471;
    precise float _491 = _490 + _489;
    precise float _492 = 1.0 * _472;
    precise float _493 = _492 + _491;
    float _711;
    float _712;
    float _713;
    float _714;
    float _715;
    float _716;
    float _717;
    float _718;
    float _719;
    float _720;
    float _721;
    float _722;
    if (_240)
    {
        float _494 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _497 = isnan(_494) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _494 : max(0.001000000047497451305389404296875, _494));
        float _498 = BLENDWEIGHT.x / _497;
        float _499 = BLENDWEIGHT.y / _497;
        float _500 = BLENDWEIGHT.z / _497;
        float _501 = BLENDWEIGHT.w / _497;
        uint _507 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _87;
        uvec4 _515 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_507)).x * 13u) + 4u]);
        uint _516 = _515.x;
        uint _518 = (_516 + uint(_231)) * 3u;
        uint _525 = _518 + 1u;
        uint _532 = _518 + 2u;
        uint _553 = (_516 + uint(_232)) * 3u;
        uint _560 = _553 + 1u;
        uint _567 = _553 + 2u;
        uint _600 = (_516 + uint(_233)) * 3u;
        uint _607 = _600 + 1u;
        uint _614 = _600 + 2u;
        uint _647 = (_516 + uint(_234)) * 3u;
        uint _654 = _647 + 1u;
        uint _661 = _647 + 2u;
        _711 = (((cbPrevObjMatrix._m0[_553].x * _499) + (cbPrevObjMatrix._m0[_518].x * _498)) + (cbPrevObjMatrix._m0[_600].x * _500)) + (cbPrevObjMatrix._m0[_647].x * _501);
        _712 = (((cbPrevObjMatrix._m0[_553].y * _499) + (cbPrevObjMatrix._m0[_518].y * _498)) + (cbPrevObjMatrix._m0[_600].y * _500)) + (cbPrevObjMatrix._m0[_647].y * _501);
        _713 = (((cbPrevObjMatrix._m0[_553].z * _499) + (cbPrevObjMatrix._m0[_518].z * _498)) + (cbPrevObjMatrix._m0[_600].z * _500)) + (cbPrevObjMatrix._m0[_647].z * _501);
        _714 = (((cbPrevObjMatrix._m0[_553].w * _499) + (cbPrevObjMatrix._m0[_518].w * _498)) + (cbPrevObjMatrix._m0[_600].w * _500)) + (cbPrevObjMatrix._m0[_647].w * _501);
        _715 = (((cbPrevObjMatrix._m0[_560].x * _499) + (cbPrevObjMatrix._m0[_525].x * _498)) + (cbPrevObjMatrix._m0[_607].x * _500)) + (cbPrevObjMatrix._m0[_654].x * _501);
        _716 = (((cbPrevObjMatrix._m0[_560].y * _499) + (cbPrevObjMatrix._m0[_525].y * _498)) + (cbPrevObjMatrix._m0[_607].y * _500)) + (cbPrevObjMatrix._m0[_654].y * _501);
        _717 = (((cbPrevObjMatrix._m0[_560].z * _499) + (cbPrevObjMatrix._m0[_525].z * _498)) + (cbPrevObjMatrix._m0[_607].z * _500)) + (cbPrevObjMatrix._m0[_654].z * _501);
        _718 = (((cbPrevObjMatrix._m0[_560].w * _499) + (cbPrevObjMatrix._m0[_525].w * _498)) + (cbPrevObjMatrix._m0[_607].w * _500)) + (cbPrevObjMatrix._m0[_654].w * _501);
        _719 = (((cbPrevObjMatrix._m0[_567].x * _499) + (cbPrevObjMatrix._m0[_532].x * _498)) + (cbPrevObjMatrix._m0[_614].x * _500)) + (cbPrevObjMatrix._m0[_661].x * _501);
        _720 = (((cbPrevObjMatrix._m0[_567].y * _499) + (cbPrevObjMatrix._m0[_532].y * _498)) + (cbPrevObjMatrix._m0[_614].y * _500)) + (cbPrevObjMatrix._m0[_661].y * _501);
        _721 = (((cbPrevObjMatrix._m0[_567].z * _499) + (cbPrevObjMatrix._m0[_532].z * _498)) + (cbPrevObjMatrix._m0[_614].z * _500)) + (cbPrevObjMatrix._m0[_661].z * _501);
        _722 = (((cbPrevObjMatrix._m0[_567].w * _499) + (cbPrevObjMatrix._m0[_532].w * _498)) + (cbPrevObjMatrix._m0[_614].w * _500)) + (cbPrevObjMatrix._m0[_661].w * _501);
    }
    else
    {
        _711 = cbvModelParam._m0[3u].x;
        _712 = cbvModelParam._m0[3u].y;
        _713 = cbvModelParam._m0[3u].z;
        _714 = cbvModelParam._m0[3u].w;
        _715 = cbvModelParam._m0[4u].x;
        _716 = cbvModelParam._m0[4u].y;
        _717 = cbvModelParam._m0[4u].z;
        _718 = cbvModelParam._m0[4u].w;
        _719 = cbvModelParam._m0[5u].x;
        _720 = cbvModelParam._m0[5u].y;
        _721 = cbvModelParam._m0[5u].z;
        _722 = cbvModelParam._m0[5u].w;
    }
    float _741 = (fma(POSITION_1.z, _713, fma(POSITION_1.y, _712, _711 * POSITION_1.x)) + _714) - cbSceneParam._m0[28u].x;
    float _742 = (fma(POSITION_1.z, _717, fma(POSITION_1.y, _716, _715 * POSITION_1.x)) + _718) - cbSceneParam._m0[28u].y;
    float _743 = (fma(POSITION_1.z, _721, fma(POSITION_1.y, _720, _719 * POSITION_1.x)) + _722) - cbSceneParam._m0[28u].z;
    float _790 = fma(_220, _463, fma(_219, _462, _461 * _217));
    float _793 = fma(_220, _467, fma(_219, _466, _465 * _217));
    float _796 = fma(_220, _471, fma(_219, _470, _469 * _217));
    uint _801 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _87;
    precise float _820 = _479 - cbSceneParam._m0[3u].x;
    precise float _821 = _486 - cbSceneParam._m0[3u].y;
    precise float _822 = _493 - cbSceneParam._m0[3u].z;
    precise float _850 = _820 * cbSceneParam._m0[24u].x;
    precise float _851 = _821 * cbSceneParam._m0[24u].y;
    precise float _852 = _851 + _850;
    precise float _853 = _822 * cbSceneParam._m0[24u].z;
    precise float _854 = _853 + _852;
    precise float _855 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _856 = _855 + _854;
    precise float _857 = _820 * cbSceneParam._m0[25u].x;
    precise float _858 = _821 * cbSceneParam._m0[25u].y;
    precise float _859 = _858 + _857;
    precise float _860 = _822 * cbSceneParam._m0[25u].z;
    precise float _861 = _860 + _859;
    precise float _862 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _863 = _862 + _861;
    precise float _864 = _820 * cbSceneParam._m0[26u].x;
    precise float _865 = _821 * cbSceneParam._m0[26u].y;
    precise float _866 = _865 + _864;
    precise float _867 = _822 * cbSceneParam._m0[26u].z;
    precise float _868 = _867 + _866;
    precise float _869 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _870 = _869 + _868;
    precise float _871 = _820 * cbSceneParam._m0[27u].x;
    precise float _872 = _821 * cbSceneParam._m0[27u].y;
    precise float _873 = _872 + _871;
    precise float _874 = _822 * cbSceneParam._m0[27u].z;
    precise float _875 = _874 + _873;
    precise float _876 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _877 = _876 + _875;
    gl_Position.x = _856;
    gl_Position.y = _863;
    gl_Position.z = _870;
    gl_Position.w = _877;
    POSITION_1_1.x = _856;
    POSITION_1_1.y = _863;
    POSITION_1_1.z = _870;
    POSITION_1_1.w = _877;
    NORMAL_2.x = _790;
    NORMAL_2.y = _793;
    NORMAL_2.z = _796;
    NORMAL_2.w = float(texelFetch(g_InstanceIndexBuffer, int(_801)).x);
    TANGENT_2.x = fma(_229, _463, fma(_228, _462, _461 * _227));
    TANGENT_2.y = fma(_229, _467, fma(_228, _466, _465 * _227));
    TANGENT_2.z = fma(_229, _471, fma(_228, _470, _469 * _227));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_7.x = _856;
    TEXCOORD_7.y = _863;
    TEXCOORD_7.z = _870;
    TEXCOORD_7.w = _877;
    TEXCOORD_8.x = fma(_743, cbSceneParam._m0[29u].z, fma(_742, cbSceneParam._m0[29u].y, _741 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_8.y = fma(_743, cbSceneParam._m0[30u].z, fma(_742, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _741)) + cbSceneParam._m0[30u].w;
    TEXCOORD_8.z = fma(_743, cbSceneParam._m0[31u].z, fma(_742, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _741)) + cbSceneParam._m0[31u].w;
    TEXCOORD_8.w = fma(_743, cbSceneParam._m0[32u].z, fma(_742, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _741)) + cbSceneParam._m0[32u].w;
    TEXCOORD_9.x = _790;
    TEXCOORD_9.y = _793;
    TEXCOORD_9.z = _796;
}


