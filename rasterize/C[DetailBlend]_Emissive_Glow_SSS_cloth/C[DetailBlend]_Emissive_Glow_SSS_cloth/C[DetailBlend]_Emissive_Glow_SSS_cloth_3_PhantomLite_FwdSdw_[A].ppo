#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1421;
float _4129;
float _4130;
float _4131;
float _4132;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _215 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _216 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _217 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _223 = inversesqrt(dot(vec3(_215, _216, _217), vec3(_215, _216, _217)));
    float _230 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _231 = _230 * NORMAL.x;
    float _232 = _230 * NORMAL.y;
    float _233 = _230 * NORMAL.z;
    float _237 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _245;
    float _246;
    float _247;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _245 = (-0.0) - _231;
        _246 = (-0.0) - _232;
        _247 = (-0.0) - _233;
    }
    else
    {
        _245 = _231;
        _246 = _232;
        _247 = _233;
    }
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _301 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291);
    float _302 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291);
    float _303 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291);
    vec4 _316 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _321 = _316.z;
    float _328 = exp2(log2(_321 * 22.0) * 260.0);
    float _329 = isnan(0.0) ? _328 : (isnan(_328) ? 0.0 : max(_328, 0.0));
    float _330 = isnan(1.0) ? _329 : (isnan(_329) ? 1.0 : min(_329, 1.0));
    vec4 _344 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _354 = cbMtdParam._m0[10u].x * _344.x;
    float _355 = cbMtdParam._m0[10u].y * _344.y;
    float _356 = cbMtdParam._m0[10u].z * _344.z;
    vec4 _368 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _388 = (((cbMtdParam._m0[9u].x * _368.x) - _354) * _330) + _354;
    float _389 = (((cbMtdParam._m0[9u].y * _368.y) - _355) * _330) + _355;
    float _390 = (((cbMtdParam._m0[9u].z * _368.z) - _356) * _330) + _356;
    float _395 = exp2(log2(1.0 - _316.w) * 8.0);
    vec4 _407 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    vec4 _441 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _449 = (((((cbMtdParam._m0[13u].x * _407.x) - _388) * _395) + _388) * 4.55000019073486328125) * _441.x;
    float _451 = (((((cbMtdParam._m0[13u].y * _407.y) - _389) * _395) + _389) * 4.55000019073486328125) * _441.y;
    float _453 = (((((cbMtdParam._m0[13u].z * _407.z) - _390) * _395) + _390) * 4.55000019073486328125) * _441.z;
    float _454 = _441.w * _368.w;
    float _484 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _330) + cbMtdParam._m0[17u].x;
    float _487 = ((cbMtdParam._m0[15u].z - _484) * _395) + _484;
    vec4 _499 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _501 = _499.x;
    float _502 = _499.y;
    float _508 = cbMtdParam._m0[14u].y + _499.z;
    vec4 _520 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _529 = (((_520.z - _508) + cbMtdParam._m0[14u].x) * _330) + _508;
    vec4 _542 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    float _559 = (((_330 * (_321 + (-0.5))) + 0.5) * 2.0) * ((((_542.z - _529) + cbMtdParam._m0[15u].y) * _395) + _529);
    float _574 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _4151 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
    float _575 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
    float _580 = (_575 * _575) * (3.0 - (_575 * 2.0));
    vec4 _593 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _601 = (_316.x * 2.0) + (-1.0);
    float _602 = (_316.y * 2.0) + (-1.0);
    float _603 = dot(vec2(_601, _602), vec2(_601, _602));
    float _4162 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _608 = sqrt(1.0 - (isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))));
    float _613 = ((_520.x - _501) * _330) + _501;
    float _614 = ((_520.y - _502) * _330) + _502;
    float _627 = (cbMtdParam._m0[14u].z * (((((_542.x - _613) * _395) + _613) * 2.0) + (-1.0))) + _601;
    float _628 = (cbMtdParam._m0[14u].z * (((((_542.y - _614) * _395) + _614) * 2.0) + (-1.0))) + _602;
    float _631 = fma(_608, _245, fma(_628, _237 * TANGENT.x, (_223 * _215) * _627));
    float _634 = fma(_608, _246, fma(_628, _237 * TANGENT.y, (_223 * _216) * _627));
    float _637 = fma(_608, _247, fma(_628, _237 * TANGENT.z, (_223 * _217) * _627));
    float _641 = inversesqrt(dot(vec3(_631, _634, _637), vec3(_631, _634, _637)));
    float _642 = _641 * _631;
    float _643 = _641 * _634;
    float _644 = _641 * _637;
    float _4173 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _645 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
    float _4184 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _646 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
    float _4195 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _647 = isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0));
    float _4206 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _648 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
    float _4217 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _649 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
    float _4228 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _650 = isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0));
    float _658 = cbMatDynParam._m0[9u].x * _647;
    float _659 = cbMatDynParam._m0[9u].y * _648;
    float _660 = cbMatDynParam._m0[9u].z * _649;
    float _667 = inversesqrt(dot(vec3(_301, _302, _303), vec3(_301, _302, _303)));
    float _668 = _667 * _301;
    float _669 = _667 * _302;
    float _670 = _667 * _303;
    float _671 = dot(vec3(_642, _643, _644), vec3(_668, _669, _670));
    float _677 = abs(exp2(log2(_671) * cbMatDynParam._m0[12u].x));
    float _678 = isnan(0.100000001490116119384765625) ? _677 : (isnan(_677) ? 0.100000001490116119384765625 : max(_677, 0.100000001490116119384765625));
    float _684 = ((isnan(0.699999988079071044921875) ? _678 : (isnan(_678) ? 0.699999988079071044921875 : min(_678, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _706 = 1.0 - cbMatDynParam._m0[8u].w;
    float _4249 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _709 = 1.0 - cbMatDynParam._m0[7u].w;
    float _4260 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
    float _710 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
    float _713 = (((isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0))) - _710) * _684) + _710;
    float _732 = dot(vec3(_642, _643, _644), vec3(0.0, -1.0, 0.0));
    float _4271 = isnan(0.0) ? _732 : (isnan(_732) ? 0.0 : max(_732, 0.0));
    float _735 = isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0));
    float _742 = (_735 * _647) * cbMatDynParam._m0[11u].x;
    float _744 = (_735 * _648) * cbMatDynParam._m0[11u].y;
    float _746 = (_735 * _649) * cbMatDynParam._m0[11u].z;
    float _753 = dot(vec3(_668, _669, _670), vec3(_642, _643, _644));
    float _756 = _753 * 2.0;
    float _766 = dot(vec3((-0.0) - (_668 - (_756 * _642)), (-0.0) - (_669 - (_756 * _643)), (-0.0) - (_670 - (_756 * _644))), vec3(0.0, -1.0, 0.0));
    float _4282 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _773 = exp2(log2(isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0))) * 4.0);
    float _799 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _804 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _806 = _804.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1102 = sqrt(((_301 * _301) + (_302 * _302)) + (_303 * _303));
        float _1108 = (cbMatDynParam._m0[5u].x * _1102) + cbMatDynParam._m0[5u].y;
        float _4293 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1113 = (cbMatDynParam._m0[5u].z * _1102) + cbMatDynParam._m0[5u].w;
        float _4304 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4304 : (isnan(_4304) ? 1.0 : min(_4304, 1.0))) - _1109)) + _1109) < ((_806 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _817 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _818 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _820 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _822 = _820.w;
    float _840 = fma(_644, cbSceneParam._m0[5u].z, fma(_643, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _642));
    float _843 = fma(_644, cbSceneParam._m0[6u].z, fma(_643, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _642));
    float _846 = fma(_644, cbSceneParam._m0[7u].z, fma(_643, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _642));
    vec4 _848 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _850 = _848.x;
    float _862 = (((_848.y - _646) + (_848.w * _646)) * cbMtdParam._m0[3u].x) + _646;
    vec4 _863 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _879 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_850 * _850)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _863.z;
    float _887 = (((cbMatDynParam._m0[15u].x - _650) * cbMatDynParam._m0[15u].w) * _879) + _650;
    float _895 = ((_879 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _862)) + _862;
    uint _919 = uint(roundEven(NORMAL.w)) * 13u;
    uint _920 = _919 + 9u;
    uint _921 = _920 + uint(cbMatDynParam._m0[0u].w);
    float _927 = (cbMtdParam._m0[0u].x * _658) * cbInstanceData._m0[_921].x;
    float _928 = (cbMtdParam._m0[0u].y * _659) * cbInstanceData._m0[_921].y;
    float _929 = (cbMtdParam._m0[0u].z * _660) * cbInstanceData._m0[_921].z;
    float _4315 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _930 = isnan(1.0) ? _4315 : (isnan(_4315) ? 1.0 : min(_4315, 1.0));
    float _4326 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _931 = isnan(1.0) ? _4326 : (isnan(_4326) ? 1.0 : min(_4326, 1.0));
    float _4337 = isnan(0.0) ? _929 : (isnan(_929) ? 0.0 : max(_929, 0.0));
    float _932 = isnan(1.0) ? _4337 : (isnan(_4337) ? 1.0 : min(_4337, 1.0));
    vec4 _933 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _938 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _949 = (((_938.x - _887) + (_938.w * _887)) * cbMtdParam._m0[3u].x) + _887;
    float _962 = (cbMtdParam._m0[3u].x * (((_930 * _822) - _930) + _933.x)) + _930;
    float _963 = (cbMtdParam._m0[3u].x * (((_931 * _822) - _931) + _933.y)) + _931;
    float _964 = (cbMtdParam._m0[3u].x * (((_932 * _822) - _932) + _933.z)) + _932;
    float _978 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_887 * (_658 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_887 * (_659 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_887 * (_660 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _982 = _978 * cbMatDynParam._m0[13u].w;
    float _992 = (_982 * (cbMatDynParam._m0[13u].x - _962)) + _962;
    float _993 = (_982 * (cbMatDynParam._m0[13u].y - _963)) + _963;
    float _994 = (_982 * (cbMatDynParam._m0[13u].z - _964)) + _964;
    float _1002 = ((_978 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _949)) + _949;
    float _1003 = 1.0 - _1002;
    float _1004 = _1003 * _992;
    float _1005 = _1003 * _993;
    float _1006 = _1003 * _994;
    float _1010 = (_992 + (-0.039999999105930328369140625)) * _1002;
    float _1011 = (_993 + (-0.039999999105930328369140625)) * _1002;
    float _1012 = (_994 + (-0.039999999105930328369140625)) * _1002;
    float _1013 = _1010 + 0.039999999105930328369140625;
    float _1014 = _1011 + 0.039999999105930328369140625;
    float _1015 = _1012 + 0.039999999105930328369140625;
    vec4 _1024 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _817, cbSceneParam._m0[86u].y * _818));
    float _1027 = _1024.x * TEXCOORD_4;
    float _1028 = _671 * 2.0;
    float _1032 = (_1028 * _642) - _668;
    float _1033 = (_1028 * _643) - _669;
    float _1034 = (_1028 * _644) - _670;
    float _1035 = abs(_753);
    float _4348 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
    float _1037 = sqrt(_895);
    float _1048 = exp2((_1037 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4348 : (isnan(_4348) ? 1.0 : min(_4348, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1037 * 3.0));
    float _1054 = (1.0 - _1048) * ((_1037 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1055 = _1048 * _1037;
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1087 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1091 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1420;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1147 = fma(_1091, cbModelParam._m0[26u].z, fma(_1087, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1083));
        float _1151 = fma(_1091, cbModelParam._m0[27u].z, fma(_1087, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1083));
        float _1155 = fma(_1091, cbModelParam._m0[28u].z, fma(_1087, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1083));
        float _1178 = _1083 + _642;
        float _1179 = _1087 + _643;
        float _1180 = _1091 + _644;
        float _1190 = fma(_1180, cbModelParam._m0[26u].z, fma(_1179, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1178)) - _1147;
        float _1191 = fma(_1180, cbModelParam._m0[27u].z, fma(_1179, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1178)) - _1151;
        float _1192 = fma(_1180, cbModelParam._m0[28u].z, fma(_1179, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1178)) - _1155;
        float _1196 = inversesqrt(dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192)));
        float _1209 = ((_1196 * _1190) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1147 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1210 = ((_1196 * _1191) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1151 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1211 = ((_1196 * _1192) / cbModelParam._m0[34u].z) + ((((((_1155 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1228 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        float _1248 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1249 = _1248 * (_1214.x + (-0.5));
        float _1250 = _1248 * (_1214.y + (-0.5));
        float _1251 = _1248 * (_1214.z + (-0.5));
        float _1258 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1259 = _1258 * (_1221.x + (-0.5));
        float _1260 = _1258 * (_1221.y + (-0.5));
        float _1261 = _1258 * (_1221.z + (-0.5));
        float _1268 = exp2((_1228.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1228.x + (-0.5));
        float _1270 = _1268 * (_1228.y + (-0.5));
        float _1271 = _1268 * (_1228.z + (-0.5));
        float _1278 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1235.x + (-0.5));
        float _1280 = _1278 * (_1235.y + (-0.5));
        float _1281 = _1278 * (_1235.z + (-0.5));
        float _1282 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1283 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1284 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1285 = _1249 * 0.5;
        float _1286 = _1259 * 0.5;
        float _1287 = _1269 * 0.5;
        float _1288 = dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287));
        float _1293 = (_1288 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1288);
        float _1302 = (dot(vec3(_642, _643, _644), vec3(_1293 * _1285, _1293 * _1286, _1293 * _1287)) + 1.0) * 0.5;
        float _4374 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1312 = sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287)) / (_1282 + 9.9999997473787516355514526367188e-06);
        float _4385 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4385 : (isnan(_4385) ? 1.0 : min(_4385, 1.0));
        float _1314 = _1313 * 2.0;
        float _1318 = (1.0 - _1313) / (_1313 + 1.0);
        float _4396 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4396 : (isnan(_4396) ? 1.0 : min(_4396, 1.0));
        float _1328 = ((((1.0 - _1319) * (_1314 + 2.0)) * exp2(log2(isnan(1.0) ? _4374 : (isnan(_4374) ? 1.0 : min(_4374, 1.0))) * (_1314 + 1.0))) + _1319) * _1282;
        float _1329 = _1250 * 0.5;
        float _1330 = _1260 * 0.5;
        float _1331 = _1270 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1345 = (dot(vec3(_642, _643, _644), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4407 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1354 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1283 + 9.9999997473787516355514526367188e-06);
        float _4418 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4418 : (isnan(_4418) ? 1.0 : min(_4418, 1.0));
        float _1356 = _1355 * 2.0;
        float _1360 = (1.0 - _1355) / (_1355 + 1.0);
        float _4429 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4429 : (isnan(_4429) ? 1.0 : min(_4429, 1.0));
        float _1370 = ((((1.0 - _1361) * (_1356 + 2.0)) * exp2(log2(isnan(1.0) ? _4407 : (isnan(_4407) ? 1.0 : min(_4407, 1.0))) * (_1356 + 1.0))) + _1361) * _1283;
        float _1371 = _1251 * 0.5;
        float _1372 = _1261 * 0.5;
        float _1373 = _1271 * 0.5;
        float _1374 = dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373));
        float _1379 = (_1374 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1374);
        float _1387 = (dot(vec3(_642, _643, _644), vec3(_1379 * _1371, _1379 * _1372, _1379 * _1373)) + 1.0) * 0.5;
        float _4440 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1396 = sqrt(((_1372 * _1372) + (_1371 * _1371)) + (_1373 * _1373)) / (_1284 + 9.9999997473787516355514526367188e-06);
        float _4451 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4451 : (isnan(_4451) ? 1.0 : min(_4451, 1.0));
        float _1398 = _1397 * 2.0;
        float _1402 = (1.0 - _1397) / (_1397 + 1.0);
        float _4462 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4462 : (isnan(_4462) ? 1.0 : min(_4462, 1.0));
        float _1412 = ((((1.0 - _1403) * (_1398 + 2.0)) * exp2(log2(isnan(1.0) ? _4440 : (isnan(_4440) ? 1.0 : min(_4440, 1.0))) * (_1398 + 1.0))) + _1403) * _1284;
        _1420 = _1251;
        _1422 = _1250;
        _1423 = _1249;
        _1424 = _1261;
        _1425 = _1260;
        _1426 = _1259;
        _1427 = _1271;
        _1428 = _1270;
        _1429 = _1269;
        _1430 = _1284;
        _1431 = _1283;
        _1432 = _1282;
        _1433 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)));
        _1434 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0)));
        _1435 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0)));
    }
    else
    {
        _1420 = _1421;
        _1422 = _1421;
        _1423 = _1421;
        _1424 = _1421;
        _1425 = _1421;
        _1426 = _1421;
        _1427 = _1421;
        _1428 = _1421;
        _1429 = _1421;
        _1430 = _1421;
        _1431 = _1421;
        _1432 = _1421;
        _1433 = 0.0;
        _1434 = 0.0;
        _1435 = 0.0;
    }
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    float _1746;
    float _1747;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1464 = fma(_1091, cbModelParam._m0[30u].z, fma(_1087, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1083));
        float _1468 = fma(_1091, cbModelParam._m0[31u].z, fma(_1087, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1083));
        float _1472 = fma(_1091, cbModelParam._m0[32u].z, fma(_1087, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1083));
        float _1495 = _1083 + _642;
        float _1496 = _1087 + _643;
        float _1497 = _1091 + _644;
        float _1507 = fma(_1497, cbModelParam._m0[30u].z, fma(_1496, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1495)) - _1464;
        float _1508 = fma(_1497, cbModelParam._m0[31u].z, fma(_1496, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1495)) - _1468;
        float _1509 = fma(_1497, cbModelParam._m0[32u].z, fma(_1496, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1495)) - _1472;
        float _1513 = inversesqrt(dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509)));
        float _1526 = ((_1513 * _1507) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1464 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1527 = ((_1513 * _1508) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1468 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1528 = ((_1513 * _1509) / cbModelParam._m0[35u].z) + ((((((_1472 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1530 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1537 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1544 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1551 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        float _1563 = exp2((_1530.w + (-0.5)) * 20.0) * 2.0;
        float _1564 = _1563 * (_1530.x + (-0.5));
        float _1565 = _1563 * (_1530.y + (-0.5));
        float _1566 = _1563 * (_1530.z + (-0.5));
        float _1573 = exp2((_1537.w + (-0.5)) * 20.0) * 2.0;
        float _1574 = _1573 * (_1537.x + (-0.5));
        float _1575 = _1573 * (_1537.y + (-0.5));
        float _1576 = _1573 * (_1537.z + (-0.5));
        float _1583 = exp2((_1544.w + (-0.5)) * 20.0) * 2.0;
        float _1584 = _1583 * (_1544.x + (-0.5));
        float _1585 = _1583 * (_1544.y + (-0.5));
        float _1586 = _1583 * (_1544.z + (-0.5));
        float _1593 = exp2((_1551.w + (-0.5)) * 20.0) * 2.0;
        float _1594 = _1593 * (_1551.x + (-0.5));
        float _1595 = _1593 * (_1551.y + (-0.5));
        float _1596 = _1593 * (_1551.z + (-0.5));
        float _1597 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1598 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1599 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1600 = _1564 * 0.5;
        float _1601 = _1574 * 0.5;
        float _1602 = _1584 * 0.5;
        float _1603 = dot(vec3(_1600, _1601, _1602), vec3(_1600, _1601, _1602));
        float _1608 = (_1603 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1603);
        float _1616 = (dot(vec3(_642, _643, _644), vec3(_1608 * _1600, _1608 * _1601, _1608 * _1602)) + 1.0) * 0.5;
        float _4503 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1625 = sqrt(((_1601 * _1601) + (_1600 * _1600)) + (_1602 * _1602)) / (_1597 + 9.9999997473787516355514526367188e-06);
        float _4514 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1626 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
        float _1627 = _1626 * 2.0;
        float _1631 = (1.0 - _1626) / (_1626 + 1.0);
        float _4525 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
        float _1641 = ((((1.0 - _1632) * (_1627 + 2.0)) * exp2(log2(isnan(1.0) ? _4503 : (isnan(_4503) ? 1.0 : min(_4503, 1.0))) * (_1627 + 1.0))) + _1632) * _1597;
        float _1642 = _1565 * 0.5;
        float _1643 = _1575 * 0.5;
        float _1644 = _1585 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_642, _643, _644), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4536 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1598 + 9.9999997473787516355514526367188e-06);
        float _4547 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4558 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0))) * (_1669 + 1.0))) + _1674) * _1598;
        float _1684 = _1566 * 0.5;
        float _1685 = _1576 * 0.5;
        float _1686 = _1586 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_642, _643, _644), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4569 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1599 + 9.9999997473787516355514526367188e-06);
        float _4580 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4591 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (_1711 + 1.0))) + _1716) * _1599;
        _1733 = _1566;
        _1734 = _1565;
        _1735 = _1564;
        _1736 = _1576;
        _1737 = _1575;
        _1738 = _1574;
        _1739 = _1586;
        _1740 = _1585;
        _1741 = _1584;
        _1742 = _1599;
        _1743 = _1598;
        _1744 = _1597;
        _1745 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)));
        _1746 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1747 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
    }
    else
    {
        _1733 = _1421;
        _1734 = _1421;
        _1735 = _1421;
        _1736 = _1421;
        _1737 = _1421;
        _1738 = _1421;
        _1739 = _1421;
        _1740 = _1421;
        _1741 = _1421;
        _1742 = _1421;
        _1743 = _1421;
        _1744 = _1421;
        _1745 = 0.0;
        _1746 = 0.0;
        _1747 = 0.0;
    }
    float _1757 = (cbModelParam._m0[1u].x * (_1745 - _1433)) + _1433;
    float _1758 = (cbModelParam._m0[1u].x * (_1746 - _1434)) + _1434;
    float _1759 = (cbModelParam._m0[1u].x * (_1747 - _1435)) + _1435;
    float _1780 = fma(_1759, cbSceneParam._m0[89u].z, fma(_1758, cbSceneParam._m0[89u].y, _1757 * cbSceneParam._m0[89u].x));
    float _1783 = fma(_1759, cbSceneParam._m0[90u].z, fma(_1758, cbSceneParam._m0[90u].y, _1757 * cbSceneParam._m0[90u].x));
    float _1786 = fma(_1759, cbSceneParam._m0[91u].z, fma(_1758, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1757));
    float _1801 = _1032 * 0.5;
    float _1802 = _1033 * 0.5;
    float _1803 = _1034 * 0.5;
    float _1804 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1735, _1738, _1741, _1744));
    float _1807 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1734, _1737, _1740, _1743));
    float _1810 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1733, _1736, _1739, _1742));
    float _1841;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1817 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1420, _1424, _1427, _1430));
        float _1821 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1422, _1425, _1428, _1431));
        float _1825 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1423, _1426, _1429, _1432));
        float _1832 = dot(vec4(cbModelParam._m0[39u]), vec4(_1801, _1802, _1803, 1.0));
        _1841 = dot(vec3(isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)), isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)), isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1832) ? 0.0 : (isnan(0.0) ? _1832 : max(0.0, _1832))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1841 = 1.0;
    }
    float _1852;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1843 = dot(vec4(cbModelParam._m0[40u]), vec4(_1801, _1802, _1803, 1.0));
        _1852 = dot(vec3(isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)), isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0)), isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1843) ? 0.0 : (isnan(0.0) ? _1843 : max(0.0, _1843))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1852 = 1.0;
    }
    float _1856 = (_1852 * cbModelParam._m0[1u].x) + (_1841 * (1.0 - cbModelParam._m0[1u].x));
    float _1866 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _895);
    float _1867 = isnan(_1866) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1866 : min(cbModelParam._m0[25u].z, _1866));
    float _1947;
    float _1949;
    float _1951;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1914 = fma(_1091, cbModelParam._m0[13u].z, fma(_1087, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1083)) + cbModelParam._m0[13u].w;
        float _1918 = fma(_1091, cbModelParam._m0[14u].z, fma(_1087, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1083)) + cbModelParam._m0[14u].w;
        float _1922 = fma(_1091, cbModelParam._m0[15u].z, fma(_1087, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1083)) + cbModelParam._m0[15u].w;
        float _1925 = fma(_1034, cbModelParam._m0[13u].z, fma(_1033, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1032));
        float _1928 = fma(_1034, cbModelParam._m0[14u].z, fma(_1033, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1032));
        float _1931 = fma(_1034, cbModelParam._m0[15u].z, fma(_1033, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1032));
        float _1959;
        if (_1925 > 0.0)
        {
            _1959 = abs((1.0 - _1914) / _1925);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1925 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1914 + 1.0) / _1925);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1959 = frontier_phi_19_17_ladder;
        }
        float _2132;
        if (_1928 > 0.0)
        {
            _2132 = abs((1.0 - _1918) / _1928);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1918 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2132 = frontier_phi_28_24_ladder;
        }
        float _2427;
        if (_1931 > 0.0)
        {
            _2427 = abs((1.0 - _1922) / _1931);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1931 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1922 + 1.0) / _1931);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2427 = frontier_phi_40_35_ladder;
        }
        float _2429 = isnan(_2132) ? _1959 : (isnan(_1959) ? _2132 : min(_1959, _2132));
        float _2430 = isnan(_2427) ? _2429 : (isnan(_2429) ? _2427 : min(_2429, _2427));
        float _2434 = (_2430 * _1925) + _1914;
        float _2435 = (_2430 * _1928) + _1918;
        float _2436 = (_2430 * _1931) + _1922;
        float _2437 = _2430 * 9.9999997473787516355514526367188e-05;
        float _2439 = (-1.0) - _2437;
        float _2441 = _2437 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2436 > _2441) || ((_2436 < _2439) || ((_2435 > _2441) || ((_2435 < _2439) || ((_2434 < _2439) || (_2434 > _2441))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2581 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2436, cbModelParam._m0[9u].z, fma(_2435, cbModelParam._m0[9u].y, _2434 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2436, cbModelParam._m0[10u].z, fma(_2435, cbModelParam._m0[10u].y, _2434 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2436, cbModelParam._m0[11u].z, fma(_2435, cbModelParam._m0[11u].y, _2434 * cbModelParam._m0[11u].x))), _1867);
            frontier_phi_18_40_ladder = _2581.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2581.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2581.x * cbModelParam._m0[1u].y;
        }
        _1947 = frontier_phi_18_40_ladder_2;
        _1949 = frontier_phi_18_40_ladder_1;
        _1951 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1935 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1032, _1033, _1034), _1867);
        _1947 = _1935.x * cbModelParam._m0[1u].y;
        _1949 = _1935.y * cbModelParam._m0[1u].y;
        _1951 = _1935.z * cbModelParam._m0[1u].y;
    }
    float _1955 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _895);
    float _1956 = isnan(_1955) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1955 : min(cbModelParam._m0[25u].w, _1955));
    float _2047;
    float _2049;
    float _2051;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2011 = fma(_1091, cbModelParam._m0[21u].z, fma(_1087, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1083)) + cbModelParam._m0[21u].w;
        float _2015 = fma(_1091, cbModelParam._m0[22u].z, fma(_1087, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1083)) + cbModelParam._m0[22u].w;
        float _2019 = fma(_1091, cbModelParam._m0[23u].z, fma(_1087, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1083)) + cbModelParam._m0[23u].w;
        float _2022 = fma(_1034, cbModelParam._m0[21u].z, fma(_1033, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1032));
        float _2025 = fma(_1034, cbModelParam._m0[22u].z, fma(_1033, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1032));
        float _2028 = fma(_1034, cbModelParam._m0[23u].z, fma(_1033, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1032));
        float _2137;
        if (_2022 > 0.0)
        {
            _2137 = abs((1.0 - _2011) / _2022);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2022 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2011 + 1.0) / _2022);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2137 = frontier_phi_30_26_ladder;
        }
        float _2454;
        if (_2025 > 0.0)
        {
            _2454 = abs((1.0 - _2015) / _2025);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2025 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2015 + 1.0) / _2025);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2454 = frontier_phi_42_37_ladder;
        }
        float _2792;
        if (_2028 > 0.0)
        {
            _2792 = abs((1.0 - _2019) / _2028);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2028 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2019 + 1.0) / _2028);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2792 = frontier_phi_52_49_ladder;
        }
        float _2794 = isnan(_2454) ? _2137 : (isnan(_2137) ? _2454 : min(_2137, _2454));
        float _2795 = isnan(_2792) ? _2794 : (isnan(_2794) ? _2792 : min(_2794, _2792));
        float _2799 = (_2795 * _2022) + _2011;
        float _2800 = (_2795 * _2025) + _2015;
        float _2801 = (_2795 * _2028) + _2019;
        float _2802 = _2795 * 9.9999997473787516355514526367188e-05;
        float _2803 = (-1.0) - _2802;
        float _2805 = _2802 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2801 > _2805) || ((_2801 < _2803) || ((_2800 > _2805) || ((_2800 < _2803) || ((_2799 < _2803) || (_2799 > _2805))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2923 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2801, cbModelParam._m0[17u].z, fma(_2800, cbModelParam._m0[17u].y, _2799 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2801, cbModelParam._m0[18u].z, fma(_2800, cbModelParam._m0[18u].y, _2799 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2801, cbModelParam._m0[19u].z, fma(_2800, cbModelParam._m0[19u].y, _2799 * cbModelParam._m0[19u].x))), _1956);
            frontier_phi_27_52_ladder = _2923.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2923.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2923.x * cbModelParam._m0[1u].z;
        }
        _2047 = frontier_phi_27_52_ladder_2;
        _2049 = frontier_phi_27_52_ladder_1;
        _2051 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2031 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1032, _1033, _1034), _1956);
        _2047 = _2031.x * cbModelParam._m0[1u].z;
        _2049 = _2031.y * cbModelParam._m0[1u].z;
        _2051 = _2031.z * cbModelParam._m0[1u].z;
    }
    float _2064 = (((_1054 * _1013) + _1055) * _1027) * ((cbModelParam._m0[1u].w * (_2047 - _1947)) + _1947);
    float _2066 = (((_1054 * _1014) + _1055) * _1027) * ((cbModelParam._m0[1u].w * (_2049 - _1949)) + _1949);
    float _2068 = (((_1054 * _1015) + _1055) * _1027) * ((cbModelParam._m0[1u].w * (_2051 - _1951)) + _1951);
    float _2071 = fma(_2068, cbSceneParam._m0[89u].z, fma(_2066, cbSceneParam._m0[89u].y, _2064 * cbSceneParam._m0[89u].x));
    float _2074 = fma(_2068, cbSceneParam._m0[90u].z, fma(_2066, cbSceneParam._m0[90u].y, _2064 * cbSceneParam._m0[90u].x));
    float _2077 = fma(_2068, cbSceneParam._m0[91u].z, fma(_2066, cbSceneParam._m0[91u].y, _2064 * cbSceneParam._m0[91u].x));
    float _2111 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2115 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2119 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2123 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2124 = _2111 / _2123;
    float _2125 = _2115 / _2123;
    float _2126 = _2119 / _2123;
    float _2273;
    float _2274;
    float _2275;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2153 = ((uint(_2126 > cbSceneParam._m0[59u].y) + uint(_2126 > cbSceneParam._m0[59u].x)) + uint(_2126 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2154 = _2153 + 43u;
        uint _2162 = _2153 + 44u;
        uint _2170 = _2153 + 45u;
        uint _2178 = _2153 + 46u;
        float _2189 = fma(_2123, cbSceneParam._m0[_2154].w, fma(_2119, cbSceneParam._m0[_2154].z, fma(_2115, cbSceneParam._m0[_2154].y, _2111 * cbSceneParam._m0[_2154].x)));
        float _2193 = fma(_2123, cbSceneParam._m0[_2162].w, fma(_2119, cbSceneParam._m0[_2162].z, fma(_2115, cbSceneParam._m0[_2162].y, _2111 * cbSceneParam._m0[_2162].x)));
        float _2201 = fma(_2123, cbSceneParam._m0[_2178].w, fma(_2119, cbSceneParam._m0[_2178].z, fma(_2115, cbSceneParam._m0[_2178].y, _2111 * cbSceneParam._m0[_2178].x)));
        float _2206 = cbSceneParam._m0[33u].z * _2201;
        float _2208 = cbSceneParam._m0[33u].w * _2201;
        float _2211 = fma(_2123, cbSceneParam._m0[_2170].w, fma(_2119, cbSceneParam._m0[_2170].z, fma(_2115, cbSceneParam._m0[_2170].y, _2111 * cbSceneParam._m0[_2170].x))) / _2201;
        float _2259 = (cbSceneParam._m0[33u].x - sqrt(((_2125 * _2125) + (_2124 * _2124)) + (_2126 * _2126))) * cbSceneParam._m0[33u].y;
        float _4717 = isnan(0.0) ? _2259 : (isnan(_2259) ? 0.0 : max(_2259, 0.0));
        float _2266 = (isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2206 + _2189) / _2201, (_2208 + _2193) / _2201), _2211), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2208 + _2189) / _2201, (_2193 - _2206) / _2201), _2211), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2189 - _2206) / _2201, (_2193 - _2208) / _2201), _2211), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2189 - _2208) / _2201, (_2206 + _2193) / _2201), _2211), 0.0)).x), vec4(0.25)));
        _2273 = 1.0 - (_2266 * cbSceneParam._m0[34u].x);
        _2274 = 1.0 - (_2266 * cbSceneParam._m0[34u].y);
        _2275 = 1.0 - (_2266 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2273 = 1.0;
        _2274 = 1.0;
        _2275 = 1.0;
    }
    float _2339;
    float _2341;
    float _2343;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2327 = fma(_2123, cbSceneParam._m0[63u].w, fma(_2119, cbSceneParam._m0[63u].z, fma(_2115, cbSceneParam._m0[63u].y, _2111 * cbSceneParam._m0[63u].x)));
        float _2328 = fma(_2123, cbSceneParam._m0[60u].w, fma(_2119, cbSceneParam._m0[60u].z, fma(_2115, cbSceneParam._m0[60u].y, _2111 * cbSceneParam._m0[60u].x))) / _2327;
        float _2329 = fma(_2123, cbSceneParam._m0[61u].w, fma(_2119, cbSceneParam._m0[61u].z, fma(_2115, cbSceneParam._m0[61u].y, _2111 * cbSceneParam._m0[61u].x))) / _2327;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2328 >= cbSceneParam._m0[64u].x) && (_2329 >= cbSceneParam._m0[64u].y)) && (_2328 <= cbSceneParam._m0[64u].z)) && (_2329 <= cbSceneParam._m0[64u].w))
        {
            float _2467 = fma(_2123, cbSceneParam._m0[62u].w, fma(_2119, cbSceneParam._m0[62u].z, fma(_2115, cbSceneParam._m0[62u].y, _2111 * cbSceneParam._m0[62u].x))) / _2327;
            float _2471 = isnan(cbSceneParam._m0[41u].w) ? _2467 : (isnan(_2467) ? cbSceneParam._m0[41u].w : max(_2467, cbSceneParam._m0[41u].w));
            float _2514 = (cbSceneParam._m0[33u].x - sqrt(((_2125 * _2125) + (_2124 * _2124)) + (_2126 * _2126))) * cbSceneParam._m0[33u].y;
            float _4733 = isnan(0.0) ? _2514 : (isnan(_2514) ? 0.0 : max(_2514, 0.0));
            float _2521 = (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2328, cbSceneParam._m0[33u].w + _2329), _2471), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2328, _2329 - cbSceneParam._m0[33u].z), _2471), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2328 - cbSceneParam._m0[33u].z, _2329 - cbSceneParam._m0[33u].w), _2471), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2328 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2329), _2471), 0.0)).x), vec4(0.25)));
            float _2525 = 1.0 - (_2521 * cbSceneParam._m0[34u].x);
            float _2526 = 1.0 - (_2521 * cbSceneParam._m0[34u].y);
            float _2527 = 1.0 - (_2521 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2526) ? _2274 : (isnan(_2274) ? _2526 : min(_2274, _2526));
            frontier_phi_39_38_ladder_1 = isnan(_2525) ? _2273 : (isnan(_2273) ? _2525 : min(_2273, _2525));
            frontier_phi_39_38_ladder_2 = isnan(_2527) ? _2275 : (isnan(_2275) ? _2527 : min(_2275, _2527));
        }
        else
        {
            frontier_phi_39_38_ladder = _2274;
            frontier_phi_39_38_ladder_1 = _2273;
            frontier_phi_39_38_ladder_2 = _2275;
        }
        _2339 = frontier_phi_39_38_ladder_1;
        _2341 = frontier_phi_39_38_ladder;
        _2343 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2339 = _2273;
        _2341 = _2274;
        _2343 = _2275;
    }
    uvec4 _2348 = floatBitsToUint(cbInstanceData._m0[_919 + 5u]);
    uint _2350 = _2348.x * 14u;
    uint _2351 = _2350 + 13u;
    float _2358 = _1027 + (-1.0);
    float _2363 = (cbLight._m0[_2351].x * _2358) + 1.0;
    float _2364 = (cbLight._m0[_2351].y * _2358) + 1.0;
    float _2365 = (cbLight._m0[_2351].z * _2358) + 1.0;
    float _2366 = (cbLight._m0[_2351].w * _2358) + 1.0;
    uint _2367 = _2350 + 5u;
    float _2373 = isnan(1.0) ? _2364 : (isnan(_2364) ? 1.0 : min(_2364, 1.0));
    uint _2377 = _2350 + 4u;
    float _2386 = isnan(1.0) ? _2363 : (isnan(_2363) ? 1.0 : min(_2363, 1.0));
    uint _2390 = _2350 | 1u;
    float _2401 = dot(vec3(cbLight._m0[_2350].xyz), vec3(_642, _643, _644));
    float _2404 = dot(vec3(cbLight._m0[_2390].xyz), vec3(_642, _643, _644));
    float _4769 = isnan(0.0) ? _2401 : (isnan(_2401) ? 0.0 : max(_2401, 0.0));
    float _4780 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
    float _2409 = (isnan(1.0) ? _4769 : (isnan(_4769) ? 1.0 : min(_4769, 1.0))) * 0.3183098733425140380859375;
    float _2411 = (isnan(1.0) ? _4780 : (isnan(_4780) ? 1.0 : min(_4780, 1.0))) * 0.3183098733425140380859375;
    float _2418 = ((cbLight._m0[_2367].x * _2373) * _2411) + (((cbLight._m0[_2377].x * _2339) * _2386) * _2409);
    float _2419 = ((_2373 * cbLight._m0[_2367].y) * _2411) + (((cbLight._m0[_2377].y * _2341) * _2386) * _2409);
    float _2420 = ((_2373 * cbLight._m0[_2367].z) * _2411) + (((cbLight._m0[_2377].z * _2343) * _2386) * _2409);
    uvec4 _2424 = floatBitsToUint(cbLight._m0[_2350 + 12u]);
    bool _2426 = _2424.x == 0u;
    float _2528;
    float _2530;
    float _2532;
    if (_2426)
    {
        _2528 = _2418;
        _2530 = _2419;
        _2532 = _2420;
    }
    else
    {
        uint _2536 = _2350 + 6u;
        float _2552 = (dot(vec3(cbLight._m0[_2350 + 2u].xyz), vec3(_642, _643, _644)) * 0.5) + 0.5;
        float _2553 = _2552 * _2552;
        float _4791 = isnan(0.0) ? _2553 : (isnan(_2553) ? 0.0 : max(_2553, 0.0));
        float _2554 = isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0));
        float _2555 = isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0));
        _2528 = (((cbLight._m0[_2536].x * 0.3183098733425140380859375) * _2554) * _2555) + _2418;
        _2530 = (((cbLight._m0[_2536].y * 0.3183098733425140380859375) * _2554) * _2555) + _2419;
        _2532 = (((cbLight._m0[_2536].z * 0.3183098733425140380859375) * _2554) * _2555) + _2420;
    }
    bool _2535 = _2424.y == 0u;
    float _2590;
    float _2592;
    float _2594;
    if (_2535)
    {
        _2590 = _2528;
        _2592 = _2530;
        _2594 = _2532;
    }
    else
    {
        uint _2763 = _2350 + 7u;
        float _2779 = (dot(vec3(cbLight._m0[_2350 + 3u].xyz), vec3(_642, _643, _644)) * 0.5) + 0.5;
        float _2780 = _2779 * _2779;
        float _4807 = isnan(0.0) ? _2780 : (isnan(_2780) ? 0.0 : max(_2780, 0.0));
        float _2781 = isnan(1.0) ? _4807 : (isnan(_4807) ? 1.0 : min(_4807, 1.0));
        float _2782 = isnan(1.0) ? _2366 : (isnan(_2366) ? 1.0 : min(_2366, 1.0));
        _2590 = (((cbLight._m0[_2763].x * 0.3183098733425140380859375) * _2781) * _2782) + _2528;
        _2592 = (((cbLight._m0[_2763].y * 0.3183098733425140380859375) * _2781) * _2782) + _2530;
        _2594 = (((cbLight._m0[_2763].z * 0.3183098733425140380859375) * _2781) * _2782) + _2532;
    }
    uint _2597 = _2350 + 8u;
    float _2610 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2350].w)) * _895) * 0.949999988079071044921875);
    float _2611 = _2610 * _2610;
    float _2612 = cbLight._m0[_2350].x + _668;
    float _2613 = cbLight._m0[_2350].y + _669;
    float _2614 = cbLight._m0[_2350].z + _670;
    float _2618 = inversesqrt(dot(vec3(_2612, _2613, _2614), vec3(_2612, _2613, _2614)));
    float _2619 = _2618 * _2612;
    float _2620 = _2618 * _2613;
    float _2621 = _2618 * _2614;
    float _2622 = dot(vec3(_642, _643, _644), vec3(cbLight._m0[_2350].xyz));
    float _4823 = isnan(0.0) ? _2622 : (isnan(_2622) ? 0.0 : max(_2622, 0.0));
    float _2625 = isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0));
    float _4834 = isnan(0.0) ? _671 : (isnan(_671) ? 0.0 : max(_671, 0.0));
    float _2626 = isnan(1.0) ? _4834 : (isnan(_4834) ? 1.0 : min(_4834, 1.0));
    float _2627 = dot(vec3(_642, _643, _644), vec3(_2619, _2620, _2621));
    float _4845 = isnan(0.0) ? _2627 : (isnan(_2627) ? 0.0 : max(_2627, 0.0));
    float _2630 = isnan(1.0) ? _4845 : (isnan(_4845) ? 1.0 : min(_4845, 1.0));
    float _2631 = dot(vec3(cbLight._m0[_2350].xyz), vec3(_2619, _2620, _2621));
    float _4856 = isnan(0.0) ? _2631 : (isnan(_2631) ? 0.0 : max(_2631, 0.0));
    float _2635 = _2611 * _2611;
    float _2639 = ((_2630 * _2630) * (_2635 + (-1.0))) + 1.0;
    float _2647 = exp2(log2(1.0 - (isnan(1.0) ? _4856 : (isnan(_4856) ? 1.0 : min(_4856, 1.0)))) * 5.0);
    float _2648 = 0.959999978542327880859375 - _1010;
    float _2650 = 0.959999978542327880859375 - _1011;
    float _2651 = 0.959999978542327880859375 - _1012;
    float _2658 = 1.0 - _2611;
    float _2669 = (0.5 / (((_2626 * ((_2625 * _2658) + _2611)) + 9.9999999392252902907785028219223e-09) + (((_2626 * _2658) + _2611) * _2625))) * _2625;
    float _4867 = isnan(0.0) ? _2669 : (isnan(_2669) ? 0.0 : max(_2669, 0.0));
    float _2671 = (isnan(1.0) ? _4867 : (isnan(_4867) ? 1.0 : min(_4867, 1.0))) * (_2635 / ((_2639 * _2639) * 3.141590118408203125));
    uint _2685 = _2350 + 9u;
    float _2696 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2390].w)) * _895) * 0.949999988079071044921875);
    float _2697 = _2696 * _2696;
    float _2698 = cbLight._m0[_2390].x + _668;
    float _2699 = cbLight._m0[_2390].y + _669;
    float _2700 = cbLight._m0[_2390].z + _670;
    float _2704 = inversesqrt(dot(vec3(_2698, _2699, _2700), vec3(_2698, _2699, _2700)));
    float _2705 = _2704 * _2698;
    float _2706 = _2704 * _2699;
    float _2707 = _2704 * _2700;
    float _2708 = dot(vec3(_642, _643, _644), vec3(cbLight._m0[_2390].xyz));
    float _4878 = isnan(0.0) ? _2708 : (isnan(_2708) ? 0.0 : max(_2708, 0.0));
    float _2711 = isnan(1.0) ? _4878 : (isnan(_4878) ? 1.0 : min(_4878, 1.0));
    float _2712 = dot(vec3(_642, _643, _644), vec3(_2705, _2706, _2707));
    float _4889 = isnan(0.0) ? _2712 : (isnan(_2712) ? 0.0 : max(_2712, 0.0));
    float _2715 = isnan(1.0) ? _4889 : (isnan(_4889) ? 1.0 : min(_4889, 1.0));
    float _2716 = dot(vec3(cbLight._m0[_2390].xyz), vec3(_2705, _2706, _2707));
    float _4900 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
    float _2720 = _2697 * _2697;
    float _2724 = ((_2715 * _2715) * (_2720 + (-1.0))) + 1.0;
    float _2731 = exp2(log2(1.0 - (isnan(1.0) ? _4900 : (isnan(_4900) ? 1.0 : min(_4900, 1.0)))) * 5.0);
    float _2738 = 1.0 - _2697;
    float _2748 = (0.5 / (((_2626 * ((_2711 * _2738) + _2697)) + 9.9999999392252902907785028219223e-09) + (((_2626 * _2738) + _2697) * _2711))) * _2711;
    float _4911 = isnan(0.0) ? _2748 : (isnan(_2748) ? 0.0 : max(_2748, 0.0));
    float _2750 = (isnan(1.0) ? _4911 : (isnan(_4911) ? 1.0 : min(_4911, 1.0))) * (_2720 / ((_2724 * _2724) * 3.141590118408203125));
    float _2760 = (((((_2731 * _2648) + _1013) * cbLight._m0[_2685].x) * _2750) * _2373) + ((((cbLight._m0[_2597].x * _2339) * ((_2647 * _2648) + _1013)) * _2671) * _2386);
    float _2761 = (((((_2731 * _2650) + _1014) * cbLight._m0[_2685].y) * _2750) * _2373) + ((((cbLight._m0[_2597].y * _2341) * ((_2647 * _2650) + _1014)) * _2671) * _2386);
    float _2762 = (((((_2731 * _2651) + _1015) * cbLight._m0[_2685].z) * _2750) * _2373) + ((((cbLight._m0[_2597].z * _2343) * ((_2647 * _2651) + _1015)) * _2671) * _2386);
    float _2818;
    float _2820;
    float _2822;
    if (_2426)
    {
        _2818 = _2760;
        _2820 = _2761;
        _2822 = _2762;
    }
    else
    {
        uint _2824 = _2350 + 2u;
        uint _2828 = _2350 + 10u;
        float _2842 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2824].w)) * _895) * 0.949999988079071044921875);
        float _2843 = _2842 * _2842;
        float _2844 = cbLight._m0[_2824].x + _668;
        float _2845 = cbLight._m0[_2824].y + _669;
        float _2846 = cbLight._m0[_2824].z + _670;
        float _2850 = inversesqrt(dot(vec3(_2844, _2845, _2846), vec3(_2844, _2845, _2846)));
        float _2851 = _2850 * _2844;
        float _2852 = _2850 * _2845;
        float _2853 = _2850 * _2846;
        float _2854 = dot(vec3(_642, _643, _644), vec3(cbLight._m0[_2824].xyz));
        float _4922 = isnan(0.0) ? _2854 : (isnan(_2854) ? 0.0 : max(_2854, 0.0));
        float _2857 = isnan(1.0) ? _4922 : (isnan(_4922) ? 1.0 : min(_4922, 1.0));
        float _2858 = dot(vec3(_642, _643, _644), vec3(_2851, _2852, _2853));
        float _4933 = isnan(0.0) ? _2858 : (isnan(_2858) ? 0.0 : max(_2858, 0.0));
        float _2861 = isnan(1.0) ? _4933 : (isnan(_4933) ? 1.0 : min(_4933, 1.0));
        float _2862 = dot(vec3(cbLight._m0[_2824].xyz), vec3(_2851, _2852, _2853));
        float _4944 = isnan(0.0) ? _2862 : (isnan(_2862) ? 0.0 : max(_2862, 0.0));
        float _2866 = _2843 * _2843;
        float _2870 = ((_2861 * _2861) * (_2866 + (-1.0))) + 1.0;
        float _2877 = exp2(log2(1.0 - (isnan(1.0) ? _4944 : (isnan(_4944) ? 1.0 : min(_4944, 1.0)))) * 5.0);
        float _2884 = 1.0 - _2843;
        float _2894 = (0.5 / (((_2626 * ((_2857 * _2884) + _2843)) + 9.9999999392252902907785028219223e-09) + (((_2626 * _2884) + _2843) * _2857))) * _2857;
        float _4955 = isnan(0.0) ? _2894 : (isnan(_2894) ? 0.0 : max(_2894, 0.0));
        float _2896 = (isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0))) * (_2866 / ((_2870 * _2870) * 3.141590118408203125));
        float _2897 = isnan(1.0) ? _2365 : (isnan(_2365) ? 1.0 : min(_2365, 1.0));
        _2818 = (((((_2877 * _2648) + _1013) * cbLight._m0[_2828].x) * _2896) * _2897) + _2760;
        _2820 = (((((_2877 * _2650) + _1014) * cbLight._m0[_2828].y) * _2896) * _2897) + _2761;
        _2822 = (((((_2877 * _2651) + _1015) * cbLight._m0[_2828].z) * _2896) * _2897) + _2762;
    }
    float _2928;
    float _2930;
    float _2932;
    if (_2535)
    {
        _2928 = _2818;
        _2930 = _2820;
        _2932 = _2822;
    }
    else
    {
        uint _2939 = _2350 + 3u;
        uint _2943 = _2350 + 11u;
        float _2957 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2939].w)) * _895) * 0.949999988079071044921875);
        float _2958 = _2957 * _2957;
        float _2959 = cbLight._m0[_2939].x + _668;
        float _2960 = cbLight._m0[_2939].y + _669;
        float _2961 = cbLight._m0[_2939].z + _670;
        float _2965 = inversesqrt(dot(vec3(_2959, _2960, _2961), vec3(_2959, _2960, _2961)));
        float _2966 = _2965 * _2959;
        float _2967 = _2965 * _2960;
        float _2968 = _2965 * _2961;
        float _2969 = dot(vec3(_642, _643, _644), vec3(cbLight._m0[_2939].xyz));
        float _4971 = isnan(0.0) ? _2969 : (isnan(_2969) ? 0.0 : max(_2969, 0.0));
        float _2972 = isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0));
        float _2973 = dot(vec3(_642, _643, _644), vec3(_2966, _2967, _2968));
        float _4982 = isnan(0.0) ? _2973 : (isnan(_2973) ? 0.0 : max(_2973, 0.0));
        float _2976 = isnan(1.0) ? _4982 : (isnan(_4982) ? 1.0 : min(_4982, 1.0));
        float _2977 = dot(vec3(cbLight._m0[_2939].xyz), vec3(_2966, _2967, _2968));
        float _4993 = isnan(0.0) ? _2977 : (isnan(_2977) ? 0.0 : max(_2977, 0.0));
        float _2981 = _2958 * _2958;
        float _2985 = ((_2976 * _2976) * (_2981 + (-1.0))) + 1.0;
        float _2992 = exp2(log2(1.0 - (isnan(1.0) ? _4993 : (isnan(_4993) ? 1.0 : min(_4993, 1.0)))) * 5.0);
        float _2999 = 1.0 - _2958;
        float _3009 = (0.5 / (((_2626 * ((_2972 * _2999) + _2958)) + 9.9999999392252902907785028219223e-09) + (((_2626 * _2999) + _2958) * _2972))) * _2972;
        float _5004 = isnan(0.0) ? _3009 : (isnan(_3009) ? 0.0 : max(_3009, 0.0));
        float _3011 = (isnan(1.0) ? _5004 : (isnan(_5004) ? 1.0 : min(_5004, 1.0))) * (_2981 / ((_2985 * _2985) * 3.141590118408203125));
        float _3012 = isnan(1.0) ? _2366 : (isnan(_2366) ? 1.0 : min(_2366, 1.0));
        _2928 = (((((_2992 * _2648) + _1013) * cbLight._m0[_2943].x) * _3011) * _3012) + _2818;
        _2930 = (((((_2992 * _2650) + _1014) * cbLight._m0[_2943].y) * _3011) * _3012) + _2820;
        _2932 = (((((_2992 * _2651) + _1015) * cbLight._m0[_2943].z) * _3011) * _3012) + _2822;
    }
    float _3077;
    float _3079;
    float _3081;
    float _3083;
    float _3085;
    float _3087;
    if (_2348.y == 0u)
    {
        uvec4 _3033 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3034 = _3033.x;
        uint _3045 = uint((float(_3033.y) * floor(float(uint(cbSceneParam._m0[85u].y * _818) / _3034))) + floor(float(uint(cbSceneParam._m0[85u].x * _817) / _3034)));
        float _3055 = (log2(_2126 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3056 = isnan(0.0) ? _3055 : (isnan(_3055) ? 0.0 : max(_3055, 0.0));
        uint _3059 = uint(isnan(14.0) ? _3056 : (isnan(_3056) ? 14.0 : min(_3056, 14.0)));
        uvec4 _3064 = texelFetch(g_lightClusterGridBuffer, int(((_3059 << 2u) + (_3045 << 6u)) >> 2u));
        uint _3065 = _3064.x;
        uint _3066 = _3033.z;
        float _3180;
        float _3182;
        float _3184;
        float _3186;
        float _3188;
        float _3190;
        if (((((1u << ((_3066 >> 4u) & 15u)) + 4294967295u) & _3065) == 0u) || ((_3066 & 240u) == 0u))
        {
            _3180 = 0.0;
            _3182 = 0.0;
            _3184 = 0.0;
            _3186 = 0.0;
            _3188 = 0.0;
            _3190 = 0.0;
        }
        else
        {
            float _3181;
            float _3183;
            float _3185;
            float _3187;
            float _3189;
            float _3191;
            float _3341 = 0.0;
            float _3342 = 0.0;
            float _3343 = 0.0;
            float _3344 = 0.0;
            float _3345 = 0.0;
            float _3346 = 0.0;
            uint _3347 = 0u;
            uint _3356;
            bool _3357;
            for (;;)
            {
                _3356 = texelFetch(g_lightClassification, int((((_3059 << 5u) + (_3045 << 9u)) + (_3347 << 2u)) >> 2u)).x;
                _3357 = _3356 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3357)
                {
                    frontier_phi_73_pred = _3346;
                    frontier_phi_73_pred_1 = _3345;
                    frontier_phi_73_pred_2 = _3344;
                    frontier_phi_73_pred_3 = _3343;
                    frontier_phi_73_pred_4 = _3342;
                    frontier_phi_73_pred_5 = _3341;
                }
                else
                {
                    float _3486;
                    float _3487;
                    float _3488;
                    float _3489;
                    float _3490;
                    float _3491;
                    uint _3492;
                    _3486 = _3341;
                    _3487 = _3342;
                    _3488 = _3343;
                    _3489 = _3344;
                    _3490 = _3345;
                    _3491 = _3346;
                    _3492 = _3356;
                    float _3413;
                    float _3414;
                    float _3415;
                    float _3416;
                    float _3417;
                    float _3418;
                    for (;;)
                    {
                        uint _3496 = uint(findLSB(_3492)) + (_3347 << 5u);
                        uint _3493 = (_3492 + 4294967295u) & _3492;
                        uint _3498 = _3496 * 48u;
                        vec4 _3512 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3498)).x, texelFetch(g_PointLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3498 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3498 + 3u)).x));
                        uint _3518 = (_3496 * 48u) + 4u;
                        vec4 _3531 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3518)).x, texelFetch(g_PointLightRenderingBuffer, int(_3518 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3518 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3518 + 3u)).x));
                        uint _3537 = (_3496 * 48u) + 8u;
                        vec3 _3548 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3537)).x, texelFetch(g_PointLightRenderingBuffer, int(_3537 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3537 + 2u)).x));
                        float _3552 = _3512.x - _2124;
                        float _3553 = _3512.y - _2125;
                        float _3554 = _3512.z - _2126;
                        float _3555 = dot(vec3(_3552, _3553, _3554), vec3(_3552, _3553, _3554));
                        float _3558 = inversesqrt(_3555);
                        float _3559 = _3558 * _3552;
                        float _3560 = _3558 * _3553;
                        float _3561 = _3558 * _3554;
                        float _3562 = dot(vec3(_840, _843, _846), vec3(_3559, _3560, _3561));
                        float _3567 = 1.0 - (_3555 * _3512.w);
                        float _5030 = isnan(0.0) ? _3567 : (isnan(_3567) ? 0.0 : max(_3567, 0.0));
                        float _3568 = isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0));
                        float _3569 = sqrt(_3555) * _3531.w;
                        float _3572 = 1.39999997615814208984375 / (_3569 + 1.39999997615814208984375);
                        float _3573 = _3572 * _3572;
                        float _3576 = ((1.0 - _3573) * _3562) + _3573;
                        float _3579 = _3569 * _3569;
                        float _3582 = ((isnan(0.0) ? _3576 : (isnan(_3576) ? 0.0 : max(_3576, 0.0))) * _3568) / ((_3579 * 0.699999988079071044921875) + 1.0);
                        float _3586 = (-0.0) - _2124;
                        float _3587 = (-0.0) - _2125;
                        float _3588 = (-0.0) - _2126;
                        float _3592 = inversesqrt(dot(vec3(_3586, _3587, _3588), vec3(_3586, _3587, _3588)));
                        float _3593 = _3592 * _3586;
                        float _3594 = _3592 * _3587;
                        float _3595 = _3592 * _3588;
                        float _3602 = exp2(log2(1.0 / ((_3579 * 3.5) + 5.0)) * 0.25);
                        float _3603 = 1.0 - _1037;
                        float _3610 = sqrt(1.0 - ((1.0 - (_3603 * _3603)) * (1.0 - (_3602 * _3602))));
                        float _3611 = _3610 * _3610;
                        float _3612 = _3611 * _3611;
                        float _3613 = _3593 + _3559;
                        float _3614 = _3594 + _3560;
                        float _3615 = _3595 + _3561;
                        float _3619 = inversesqrt(dot(vec3(_3613, _3614, _3615), vec3(_3613, _3614, _3615)));
                        float _3623 = dot(vec3(_840, _843, _846), vec3(_3593, _3594, _3595));
                        float _5046 = isnan(0.0) ? _3623 : (isnan(_3623) ? 0.0 : max(_3623, 0.0));
                        float _3626 = isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0));
                        float _3627 = dot(vec3(_840, _843, _846), vec3(_3619 * _3613, _3619 * _3614, _3619 * _3615));
                        float _5057 = isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0));
                        float _3630 = isnan(1.0) ? _5057 : (isnan(_5057) ? 1.0 : min(_5057, 1.0));
                        float _3634 = ((_3630 * _3630) * (_3612 + (-1.0))) + 1.0;
                        float _3635 = _3572 * _3611;
                        float _3636 = _3635 * _3635;
                        float _3639 = ((1.0 - _3636) * _3562) + _3636;
                        float _5068 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                        float _3640 = isnan(1.0) ? _5068 : (isnan(_5068) ? 1.0 : min(_5068, 1.0));
                        float _3641 = 1.0 - _3611;
                        float _3651 = (0.5 / (((_3640 * ((_3626 * _3641) + _3611)) + 9.9999999392252902907785028219223e-09) + (((_3640 * _3641) + _3611) * _3626))) * _3640;
                        float _5079 = isnan(0.0) ? _3651 : (isnan(_3651) ? 0.0 : max(_3651, 0.0));
                        float _3662 = (((_3612 * 3.1415927410125732421875) * (isnan(1.0) ? _5079 : (isnan(_5079) ? 1.0 : min(_5079, 1.0)))) / ((_3634 * _3634) * ((_3579 * 2.1991131305694580078125) + 3.141590118408203125))) * _3568;
                        _3416 = (_3582 * _3531.x) + _3489;
                        _3417 = (_3582 * _3531.y) + _3490;
                        _3418 = (_3582 * _3531.z) + _3491;
                        _3413 = (_3662 * _3548.x) + _3486;
                        _3414 = (_3662 * _3548.y) + _3487;
                        _3415 = (_3662 * _3548.z) + _3488;
                        if (_3493 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3486 = _3413;
                            _3487 = _3414;
                            _3488 = _3415;
                            _3489 = _3416;
                            _3490 = _3417;
                            _3491 = _3418;
                            _3492 = _3493;
                        }
                    }
                    frontier_phi_73_pred = _3418;
                    frontier_phi_73_pred_1 = _3417;
                    frontier_phi_73_pred_2 = _3416;
                    frontier_phi_73_pred_3 = _3415;
                    frontier_phi_73_pred_4 = _3414;
                    frontier_phi_73_pred_5 = _3413;
                }
                _3191 = frontier_phi_73_pred;
                _3189 = frontier_phi_73_pred_1;
                _3187 = frontier_phi_73_pred_2;
                _3185 = frontier_phi_73_pred_3;
                _3183 = frontier_phi_73_pred_4;
                _3181 = frontier_phi_73_pred_5;
                uint _3348 = _3347 + 1u;
                if (_3348 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3341 = _3181;
                    _3342 = _3183;
                    _3343 = _3185;
                    _3344 = _3187;
                    _3345 = _3189;
                    _3346 = _3191;
                    _3347 = _3348;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3180 = _3181;
            _3182 = _3183;
            _3184 = _3185;
            _3186 = _3187;
            _3188 = _3189;
            _3190 = _3191;
        }
        uvec4 _3194 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3195 = _3194.z;
        uint _3197 = (_3195 >> 8u) & 15u;
        float _3309;
        float _3311;
        float _3313;
        float _3315;
        float _3317;
        float _3319;
        if (((4294967295u << _3197) & _3065) == 0u)
        {
            _3309 = _3180;
            _3311 = _3182;
            _3313 = _3184;
            _3315 = _3186;
            _3317 = _3188;
            _3319 = _3190;
        }
        else
        {
            float _3334 = inversesqrt(dot(vec3(_2124, _2125, _2126), vec3(_2124, _2125, _2126)));
            float _3335 = _3334 * _2124;
            float _3336 = _3334 * _2125;
            float _3337 = _3334 * _2126;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3197 < ((_3195 >> 12u) & 15u))
            {
                float _3310;
                float _3312;
                float _3314;
                float _3316;
                float _3318;
                float _3320;
                float _3469 = _3180;
                float _3470 = _3182;
                float _3471 = _3184;
                float _3472 = _3186;
                float _3473 = _3188;
                float _3474 = _3190;
                uint _3475 = _3197;
                uint _3484;
                bool _3485;
                for (;;)
                {
                    _3484 = texelFetch(g_lightClassification, int((((_3059 << 5u) + (_3045 << 9u)) + (_3475 << 2u)) >> 2u)).x;
                    _3485 = _3484 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3485)
                    {
                        frontier_phi_84_pred = _3473;
                        frontier_phi_84_pred_1 = _3472;
                        frontier_phi_84_pred_2 = _3471;
                        frontier_phi_84_pred_3 = _3470;
                        frontier_phi_84_pred_4 = _3469;
                        frontier_phi_84_pred_5 = _3474;
                    }
                    else
                    {
                        float _3676;
                        float _3677;
                        float _3678;
                        float _3679;
                        float _3680;
                        float _3681;
                        float _3971;
                        float _3972;
                        float _3973;
                        float _3974;
                        float _3975;
                        float _3976;
                        float _3689 = _3469;
                        float _3690 = _3470;
                        float _3691 = _3471;
                        float _3692 = _3472;
                        float _3693 = _3473;
                        float _3694 = _3474;
                        uint _3695 = _3484;
                        uint _3696;
                        vec4 _3721;
                        float _3722;
                        vec4 _3737;
                        vec3 _3749;
                        vec4 _3764;
                        vec4 _3780;
                        float _3827;
                        bool _3828;
                        for (;;)
                        {
                            uint _3706 = ((_3475 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3695));
                            _3696 = (_3695 + 4294967295u) & _3695;
                            uint _3708 = _3706 * 40u;
                            _3721 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3708)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3708 + 3u)).x));
                            _3722 = _3721.w;
                            uint _3724 = (_3706 * 40u) + 4u;
                            _3737 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3724)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3724 + 3u)).x));
                            uint _3739 = (_3706 * 40u) + 8u;
                            _3749 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3739)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3739 + 2u)).x));
                            uint _3751 = (_3706 * 40u) + 16u;
                            _3764 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3751)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3751 + 3u)).x));
                            uint _3767 = (_3706 * 40u) + 20u;
                            _3780 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3767)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3767 + 3u)).x));
                            uint _3783 = (_3706 * 40u) + 24u;
                            vec4 _3796 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3783)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 3u)).x));
                            uint _3802 = (_3706 * 40u) + 28u;
                            vec4 _3815 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3802)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3802 + 3u)).x));
                            _3827 = fma(_2126, _3815.z, fma(_2125, _3815.y, _3815.x * _2124)) + _3815.w;
                            _3828 = !((fma(_2126, _3796.z, fma(_2125, _3796.y, _3796.x * _2124)) + _3796.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3828)
                            {
                                float _3855 = _3721.x - _2124;
                                float _3856 = _3721.y - _2125;
                                float _3857 = _3721.z - _2126;
                                float _3858 = dot(vec3(_3855, _3856, _3857), vec3(_3855, _3856, _3857));
                                float _3861 = inversesqrt(_3858);
                                float _3862 = _3861 * _3855;
                                float _3863 = _3861 * _3856;
                                float _3864 = _3861 * _3857;
                                float _3868 = 1.0 - (_3858 / (_3722 * _3722));
                                float _5090 = isnan(0.0) ? _3868 : (isnan(_3868) ? 0.0 : max(_3868, 0.0));
                                float _3869 = isnan(1.0) ? _5090 : (isnan(_5090) ? 1.0 : min(_5090, 1.0));
                                float _3873 = sqrt(_3858) * _3737.w;
                                float _3875 = 1.39999997615814208984375 / (_3873 + 1.39999997615814208984375);
                                float _3876 = _3875 * _3875;
                                float _3879 = ((1.0 - _3876) * dot(vec3(_3862, _3863, _3864), vec3(_840, _843, _846))) + _3876;
                                float _3882 = _3873 * _3873;
                                float _3886 = (fma(_2126, _3764.z, fma(_2125, _3764.y, _3764.x * _2124)) + _3764.w) / _3827;
                                float _3887 = (fma(_2126, _3780.z, fma(_2125, _3780.y, _3780.x * _2124)) + _3780.w) / _3827;
                                float _3891 = 1.0 - dot(vec2(_3886, _3887), vec2(_3886, _3887));
                                float _5106 = isnan(0.0) ? _3891 : (isnan(_3891) ? 0.0 : max(_3891, 0.0));
                                float _3892 = isnan(1.0) ? _5106 : (isnan(_5106) ? 1.0 : min(_5106, 1.0));
                                float _3893 = _3892 * (((isnan(0.0) ? _3879 : (isnan(_3879) ? 0.0 : max(_3879, 0.0))) * _3869) / ((_3882 * 0.699999988079071044921875) + 1.0));
                                float _3905 = exp2(log2(1.0 / ((_3882 * 3.5) + 5.0)) * 0.25);
                                float _3906 = 1.0 - _1037;
                                float _3913 = sqrt(1.0 - ((1.0 - (_3906 * _3906)) * (1.0 - (_3905 * _3905))));
                                float _3914 = _3913 * _3913;
                                float _3915 = _3914 * _3914;
                                float _3916 = _3862 - _3335;
                                float _3917 = _3863 - _3336;
                                float _3918 = _3864 - _3337;
                                float _3922 = inversesqrt(dot(vec3(_3916, _3917, _3918), vec3(_3916, _3917, _3918)));
                                float _3926 = dot(vec3(_840, _843, _846), vec3((-0.0) - _3335, (-0.0) - _3336, (-0.0) - _3337));
                                float _5117 = isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0));
                                float _3929 = isnan(1.0) ? _5117 : (isnan(_5117) ? 1.0 : min(_5117, 1.0));
                                float _3930 = dot(vec3(_840, _843, _846), vec3(_3922 * _3916, _3922 * _3917, _3922 * _3918));
                                float _5128 = isnan(0.0) ? _3930 : (isnan(_3930) ? 0.0 : max(_3930, 0.0));
                                float _3933 = isnan(1.0) ? _5128 : (isnan(_5128) ? 1.0 : min(_5128, 1.0));
                                float _3937 = ((_3933 * _3933) * (_3915 + (-1.0))) + 1.0;
                                float _3938 = _3875 * _3914;
                                float _3939 = _3938 * _3938;
                                float _3945 = ((1.0 - _3939) * dot(vec3(_840, _843, _846), vec3(_3862, _3863, _3864))) + _3939;
                                float _5139 = isnan(0.0) ? _3945 : (isnan(_3945) ? 0.0 : max(_3945, 0.0));
                                float _3946 = isnan(1.0) ? _5139 : (isnan(_5139) ? 1.0 : min(_5139, 1.0));
                                float _3947 = 1.0 - _3914;
                                float _3957 = (0.5 / (((_3946 * ((_3929 * _3947) + _3914)) + 9.9999999392252902907785028219223e-09) + (((_3946 * _3947) + _3914) * _3929))) * _3946;
                                float _5150 = isnan(0.0) ? _3957 : (isnan(_3957) ? 0.0 : max(_3957, 0.0));
                                float _3967 = (_3892 * _3869) * (((_3915 * 3.1415927410125732421875) * (isnan(1.0) ? _5150 : (isnan(_5150) ? 1.0 : min(_5150, 1.0)))) / ((_3937 * _3937) * ((_3882 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3893 * _3737.y;
                                frontier_phi_90_pred_1 = _3893 * _3737.x;
                                frontier_phi_90_pred_2 = _3967 * _3749.z;
                                frontier_phi_90_pred_3 = _3967 * _3749.y;
                                frontier_phi_90_pred_4 = _3967 * _3749.x;
                                frontier_phi_90_pred_5 = _3893 * _3737.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3975 = frontier_phi_90_pred;
                            _3974 = frontier_phi_90_pred_1;
                            _3973 = frontier_phi_90_pred_2;
                            _3972 = frontier_phi_90_pred_3;
                            _3971 = frontier_phi_90_pred_4;
                            _3976 = frontier_phi_90_pred_5;
                            _3679 = _3974 + _3692;
                            _3680 = _3975 + _3693;
                            _3681 = _3976 + _3694;
                            _3676 = _3971 + _3689;
                            _3677 = _3972 + _3690;
                            _3678 = _3973 + _3691;
                            if (_3696 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3689 = _3676;
                                _3690 = _3677;
                                _3691 = _3678;
                                _3692 = _3679;
                                _3693 = _3680;
                                _3694 = _3681;
                                _3695 = _3696;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3680;
                        frontier_phi_84_pred_1 = _3679;
                        frontier_phi_84_pred_2 = _3678;
                        frontier_phi_84_pred_3 = _3677;
                        frontier_phi_84_pred_4 = _3676;
                        frontier_phi_84_pred_5 = _3681;
                    }
                    _3318 = frontier_phi_84_pred;
                    _3316 = frontier_phi_84_pred_1;
                    _3314 = frontier_phi_84_pred_2;
                    _3312 = frontier_phi_84_pred_3;
                    _3310 = frontier_phi_84_pred_4;
                    _3320 = frontier_phi_84_pred_5;
                    uint _3476 = _3475 + 1u;
                    if (_3476 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3469 = _3310;
                        _3470 = _3312;
                        _3471 = _3314;
                        _3472 = _3316;
                        _3473 = _3318;
                        _3474 = _3320;
                        _3475 = _3476;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3320;
                frontier_phi_65_66_ladder_1 = _3316;
                frontier_phi_65_66_ladder_2 = _3318;
                frontier_phi_65_66_ladder_3 = _3312;
                frontier_phi_65_66_ladder_4 = _3310;
                frontier_phi_65_66_ladder_5 = _3314;
            }
            else
            {
                frontier_phi_65_66_ladder = _3190;
                frontier_phi_65_66_ladder_1 = _3186;
                frontier_phi_65_66_ladder_2 = _3188;
                frontier_phi_65_66_ladder_3 = _3182;
                frontier_phi_65_66_ladder_4 = _3180;
                frontier_phi_65_66_ladder_5 = _3184;
            }
            _3309 = frontier_phi_65_66_ladder_4;
            _3311 = frontier_phi_65_66_ladder_3;
            _3313 = frontier_phi_65_66_ladder_5;
            _3315 = frontier_phi_65_66_ladder_1;
            _3317 = frontier_phi_65_66_ladder_2;
            _3319 = frontier_phi_65_66_ladder;
        }
        float _3324 = isnan(1.0) ? _1027 : (isnan(_1027) ? 1.0 : min(_1027, 1.0));
        _3077 = (_3324 * _3315) + _2590;
        _3079 = (_3324 * _3317) + _2592;
        _3081 = (_3324 * _3319) + _2594;
        _3083 = ((_3309 * _1013) * _3324) + _2928;
        _3085 = ((_3311 * _1014) * _3324) + _2930;
        _3087 = ((_3313 * _1015) * _3324) + _2932;
    }
    else
    {
        _3077 = _2590;
        _3079 = _2592;
        _3081 = _2594;
        _3083 = _2928;
        _3085 = _2930;
        _3087 = _2932;
    }
    uint _3093 = _920 + uint(cbMatDynParam._m0[0u].w);
    float _3099 = cbInstanceData._m0[_3093].x * (((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _684) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _580) * _593.x) * _713)) + (((_742 - (_742 * _650)) + (cbMatDynParam._m0[11u].x * _773)) * cbMatDynParam._m0[9u].x));
    float _3100 = cbInstanceData._m0[_3093].y * (((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _684) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _580) * _593.y) * _713)) + (((_744 - (_744 * _650)) + (cbMatDynParam._m0[11u].y * _773)) * cbMatDynParam._m0[9u].y));
    float _3101 = cbInstanceData._m0[_3093].z * (((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _684) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _580) * _593.z) * _713)) + (((_746 - (_746 * _650)) + (cbMatDynParam._m0[11u].z * _773)) * cbMatDynParam._m0[9u].z));
    float _5166 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _5177 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _5188 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _5199 = isnan(0.0) ? _645 : (isnan(_645) ? 0.0 : max(_645, 0.0));
    float _3119 = (((isnan(1.0) ? _5166 : (isnan(_5166) ? 1.0 : min(_5166, 1.0))) * (_3077 + ((isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0))) * _1027))) + ((_3083 + ((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + _3099;
    float _3121 = (_3100 + ((_3085 + ((isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5177 : (isnan(_5177) ? 1.0 : min(_5177, 1.0))) * (_3079 + ((isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0))) * _1027)));
    float _3123 = (_3101 + ((_3087 + ((isnan(0.0) ? _2077 : (isnan(_2077) ? 0.0 : max(_2077, 0.0))) * _1856)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _5188 : (isnan(_5188) ? 1.0 : min(_5188, 1.0))) * (_3081 + ((isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0))) * _1027)));
    float _3124 = isnan(0.0) ? _3119 : (isnan(_3119) ? 0.0 : max(_3119, 0.0));
    float _3125 = isnan(0.0) ? _3121 : (isnan(_3121) ? 0.0 : max(_3121, 0.0));
    float _3126 = isnan(0.0) ? _3123 : (isnan(_3123) ? 0.0 : max(_3123, 0.0));
    float _3132 = cbMtdParam._m0[2u].x * _3099;
    float _3133 = cbMtdParam._m0[2u].y * _3100;
    float _3134 = cbMtdParam._m0[2u].z * _3101;
    float _3141 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _713) + cbMatDynParam._m0[12u].y;
    float _3146 = cbInstanceData._m0[_919 + 6u].w * (isnan(1.0) ? _5199 : (isnan(_5199) ? 1.0 : min(_5199, 1.0)));
    float _3151 = _817 / cbSceneParam._m0[86u].x;
    float _3152 = _818 / cbSceneParam._m0[86u].y;
    vec4 _3166 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3151, _3152, (log2((isnan(cbSceneParam._m0[77u].w) ? _799 : (isnan(_799) ? cbSceneParam._m0[77u].w : min(_799, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3168 = _3166.x;
    float _3169 = _3166.y;
    float _3170 = _3166.z;
    float _3171 = _3166.w;
    float _3242;
    float _3244;
    float _3246;
    float _3248;
    if (_799 > cbSceneParam._m0[78u].w)
    {
        float _3205 = isnan(_799) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _799 : min(cbSceneParam._m0[80u].w, _799));
        float _3206 = _3205 / _799;
        float _3217 = _3206 * _301;
        float _3218 = _302 * _3206;
        float _3219 = (-0.0) - _3218;
        float _3220 = _3206 * _303;
        float _3222 = (cbSceneParam._m0[77u].w * _3219) / _3205;
        float _3223 = _3222 + cbSceneParam._m0[79u].w;
        float _3224 = cbSceneParam._m0[79u].w - _3218;
        float _3230 = sqrt(((_3217 * _3217) + (_3218 * _3218)) + (_3220 * _3220));
        float _3233 = (1.0 - (cbSceneParam._m0[77u].w / _3205)) * _3230;
        float _3238 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3240 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3426;
        if (abs((_3219 - _3222) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3426 = ((((_3223 > 0.0) ? exp2(_3238 * _3223) : (2.0 - exp2(_3240 * _3223))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3233;
        }
        else
        {
            float _3370 = 1.0 / cbSceneParam._m0[80u].x;
            float _3371 = isnan(_3224) ? _3223 : (isnan(_3223) ? _3224 : max(_3223, _3224));
            float _3372 = isnan(_3224) ? _3223 : (isnan(_3223) ? _3224 : min(_3223, _3224));
            float _3381 = isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : min(_3371, 0.0));
            float _3382 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : min(_3372, 0.0));
            _3426 = ((abs(_3230 / _3219) * cbSceneParam._m0[80u].y) * ((((_3381 - _3382) * 2.0) - ((exp2(_3238 * (isnan(0.0) ? _3371 : (isnan(_3371) ? 0.0 : max(_3371, 0.0)))) - exp2(_3238 * (isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0))))) * _3370)) - ((exp2(_3240 * _3381) - exp2(_3240 * _3382)) * _3370))) + (_3233 * cbSceneParam._m0[80u].z);
        }
        vec4 _3428 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3151, _3152, 1.0), 0.0);
        float _3437 = exp2((_3426 * (-1.44269502162933349609375)) * (1.0 - _3428.w));
        float _3438 = log2(_3437);
        float _3454 = log2(_3171);
        _3242 = (exp2(_3454 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].x)) * _3428.x) / cbSceneParam._m0[78u].x)) + _3168;
        _3244 = (exp2(_3454 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].y)) * _3428.y) / cbSceneParam._m0[78u].y)) + _3169;
        _3246 = (exp2(_3454 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3438 * cbSceneParam._m0[78u].z)) * _3428.z) / cbSceneParam._m0[78u].z)) + _3170;
        _3248 = _3437 * _3171;
    }
    else
    {
        _3242 = _3168;
        _3244 = _3169;
        _3246 = _3170;
        _3248 = _3171;
    }
    bool _3464;
    vec4 _3258;
    vec4 _3280;
    float _3282;
    float _3286;
    float _3287;
    float _3288;
    float _3291;
    float _3294;
    float _3297;
    float _3298;
    bool _3308;
    for (;;)
    {
        _3258 = cbMatDynParam._m0[0u];
        float _3260 = roundEven(_3258.y);
        bool _3261 = _3260 == 3.0;
        float _3262 = log2(_3248);
        float _3266 = exp2(_3262 * cbSceneParam._m0[78u].x);
        float _3267 = exp2(_3262 * cbSceneParam._m0[78u].y);
        float _3268 = exp2(_3262 * cbSceneParam._m0[78u].z);
        float _3269 = _3266 * _3124;
        float _3270 = _3267 * _3125;
        float _3271 = _3268 * _3126;
        float _3278 = _806 + (-0.5);
        _3280 = cbMtdParam._m0[1u];
        _3282 = _3280.y * _3278;
        float _3285 = (_3260 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3286 = _3285 * (_3261 ? _3269 : (_3269 + (cbSceneParam._m0[72u].w * _3242)));
        _3287 = _3285 * (_3261 ? _3270 : (_3270 + (cbSceneParam._m0[72u].w * _3244)));
        _3288 = _3285 * (_3261 ? _3271 : (_3271 + (cbSceneParam._m0[72u].w * _3246)));
        _3291 = ((_3132 * _3141) * _3266) * _3285;
        _3294 = ((_3133 * _3141) * _3267) * _3285;
        _3297 = ((_3134 * _3141) * _3268) * _3285;
        _3298 = _3278 * 0.999000012874603271484375;
        _3308 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3308)
        {
            if ((cbInstanceData._m0[_919 + 7u].x + _3298) < 0.5)
            {
                _3464 = true;
                break;
            }
        }
        uint _3405 = _920 + uint(_3258.w);
        if ((cbInstanceData._m0[_3405].w < 1.0) && ((cbInstanceData._m0[_3405].w + _3298) < 0.5))
        {
            _3464 = true;
            break;
        }
        if ((_3282 + _454) < _3280.x)
        {
            _3464 = true;
            break;
        }
        _3464 = false;
        break;
    }
    float _3667;
    if (_3464)
    {
        discard_state = true;
        _3667 = 0.0;
    }
    else
    {
        _3667 = _3146;
    }
    SV_Target.x = _3286;
    SV_Target.y = _3287;
    SV_Target.z = _3288;
    SV_Target.w = _3667;
    SV_Target_1.x = _3291;
    SV_Target_1.y = _3294;
    SV_Target_1.z = _3297;
    SV_Target_1.w = _3146;
    discard_exit();
}


