#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1221;
float _3654;
float _3655;
float _3656;
float _3657;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _207 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _208 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _209 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _215 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _222 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _223 = _222 * NORMAL.x;
    float _224 = _222 * NORMAL.y;
    float _225 = _222 * NORMAL.z;
    float _229 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _237;
    float _238;
    float _239;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _237 = (-0.0) - _223;
        _238 = (-0.0) - _224;
        _239 = (-0.0) - _225;
    }
    else
    {
        _237 = _223;
        _238 = _224;
        _239 = _225;
    }
    vec4 _252 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _257 = _252.z;
    float _263 = exp2(log2(_257 * 22.0) * 260.0);
    float _264 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _265 = isnan(1.0) ? _264 : (isnan(_264) ? 1.0 : min(_264, 1.0));
    vec4 _279 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _290 = cbMtdParam._m0[10u].x * _279.x;
    float _291 = cbMtdParam._m0[10u].y * _279.y;
    float _292 = cbMtdParam._m0[10u].z * _279.z;
    vec4 _304 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _327 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _349 = (((((_304.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _327.x) - _290) * _265) + _290;
    float _350 = (((((_304.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _327.y) - _291) * _265) + _291;
    float _351 = (((((_304.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _327.z) - _292) * _265) + _292;
    float _352 = _327.w * _304.w;
    vec4 _368 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _378 = (((_368.x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _265) + cbMtdParam._m0[17u].x;
    vec4 _390 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _392 = _390.x;
    float _393 = _390.y;
    float _399 = cbMtdParam._m0[14u].y + _390.z;
    vec4 _411 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _423 = ((((_257 * 2.0) * (cbMtdParam._m0[14u].x + _411.z)) - _399) * _265) + _399;
    float _441 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3676 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _442 = isnan(1.0) ? _3676 : (isnan(_3676) ? 1.0 : min(_3676, 1.0));
    float _447 = (_442 * _442) * (3.0 - (_442 * 2.0));
    vec4 _460 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _468 = (_252.x * 2.0) + (-1.0);
    float _469 = (_252.y * 2.0) + (-1.0);
    float _470 = dot(vec2(_468, _469), vec2(_468, _469));
    float _3687 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _475 = sqrt(1.0 - (isnan(1.0) ? _3687 : (isnan(_3687) ? 1.0 : min(_3687, 1.0))));
    float _488 = (cbMtdParam._m0[14u].z * (((((_411.x - _392) * _265) + _392) * 2.0) + (-1.0))) + _468;
    float _489 = (cbMtdParam._m0[14u].z * (((((_411.y - _393) * _265) + _393) * 2.0) + (-1.0))) + _469;
    float _492 = fma(_475, _237, fma(_489, _229 * TANGENT.x, (_215 * _207) * _488));
    float _495 = fma(_475, _238, fma(_489, _229 * TANGENT.y, (_215 * _208) * _488));
    float _498 = fma(_475, _239, fma(_489, _229 * TANGENT.z, (_215 * _209) * _488));
    float _502 = inversesqrt(dot(vec3(_492, _495, _498), vec3(_492, _495, _498)));
    float _503 = _502 * _492;
    float _504 = _502 * _495;
    float _505 = _502 * _498;
    float _3698 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _506 = isnan(1.0) ? _3698 : (isnan(_3698) ? 1.0 : min(_3698, 1.0));
    float _3709 = isnan(0.0) ? _423 : (isnan(_423) ? 0.0 : max(_423, 0.0));
    float _507 = isnan(1.0) ? _3709 : (isnan(_3709) ? 1.0 : min(_3709, 1.0));
    float _3720 = isnan(0.0) ? _349 : (isnan(_349) ? 0.0 : max(_349, 0.0));
    float _508 = isnan(1.0) ? _3720 : (isnan(_3720) ? 1.0 : min(_3720, 1.0));
    float _3731 = isnan(0.0) ? _350 : (isnan(_350) ? 0.0 : max(_350, 0.0));
    float _509 = isnan(1.0) ? _3731 : (isnan(_3731) ? 1.0 : min(_3731, 1.0));
    float _3742 = isnan(0.0) ? _351 : (isnan(_351) ? 0.0 : max(_351, 0.0));
    float _510 = isnan(1.0) ? _3742 : (isnan(_3742) ? 1.0 : min(_3742, 1.0));
    float _3753 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _511 = isnan(1.0) ? _3753 : (isnan(_3753) ? 1.0 : min(_3753, 1.0));
    float _527 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _569 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _579 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _569);
    float _580 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _569);
    float _581 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _569);
    float _585 = inversesqrt(dot(vec3(_579, _580, _581), vec3(_579, _580, _581)));
    float _586 = _579 * _585;
    float _587 = _580 * _585;
    float _588 = _581 * _585;
    vec4 _593 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _595 = _593.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _900 = sqrt(((_579 * _579) + (_580 * _580)) + (_581 * _581));
        float _906 = (cbMatDynParam._m0[5u].x * _900) + cbMatDynParam._m0[5u].y;
        float _3764 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
        float _907 = isnan(1.0) ? _3764 : (isnan(_3764) ? 1.0 : min(_3764, 1.0));
        float _911 = (cbMatDynParam._m0[5u].z * _900) + cbMatDynParam._m0[5u].w;
        float _3775 = isnan(0.0) ? _911 : (isnan(_911) ? 0.0 : max(_911, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3775 : (isnan(_3775) ? 1.0 : min(_3775, 1.0))) - _907)) + _907) < ((_595 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _606 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _607 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _609 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _611 = _609.w;
    float _630 = fma(_505, cbSceneParam._m0[5u].z, fma(_504, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _503));
    float _633 = fma(_505, cbSceneParam._m0[6u].z, fma(_504, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _503));
    float _636 = fma(_505, cbSceneParam._m0[7u].z, fma(_504, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _503));
    vec4 _638 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _640 = _638.x;
    float _652 = (((_638.y - _507) + (_638.w * _507)) * cbMtdParam._m0[3u].x) + _507;
    vec4 _653 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _669 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_640 * _640)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _653.z;
    float _677 = (((cbMatDynParam._m0[15u].x - _511) * cbMatDynParam._m0[15u].w) * _669) + _511;
    float _685 = ((_669 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _652)) + _652;
    uint _709 = uint(roundEven(NORMAL.w)) * 13u;
    uint _711 = _709 + 9u;
    uint _712 = _711 + uint(cbMatDynParam._m0[0u].w);
    float _718 = (cbMtdParam._m0[0u].x * _508) * cbInstanceData._m0[_712].x;
    float _719 = (cbMtdParam._m0[0u].y * _509) * cbInstanceData._m0[_712].y;
    float _720 = (cbMtdParam._m0[0u].z * _510) * cbInstanceData._m0[_712].z;
    float _3786 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _721 = isnan(1.0) ? _3786 : (isnan(_3786) ? 1.0 : min(_3786, 1.0));
    float _3797 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _722 = isnan(1.0) ? _3797 : (isnan(_3797) ? 1.0 : min(_3797, 1.0));
    float _3808 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0));
    float _723 = isnan(1.0) ? _3808 : (isnan(_3808) ? 1.0 : min(_3808, 1.0));
    vec4 _724 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _729 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _740 = (((_729.x - _677) + (_729.w * _677)) * cbMtdParam._m0[3u].x) + _677;
    float _753 = (cbMtdParam._m0[3u].x * (((_721 * _611) - _721) + _724.x)) + _721;
    float _754 = (cbMtdParam._m0[3u].x * (((_722 * _611) - _722) + _724.y)) + _722;
    float _755 = (cbMtdParam._m0[3u].x * (((_723 * _611) - _723) + _724.z)) + _723;
    vec4 _756 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _769 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_677 * (_508 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_677 * (_509 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_677 * (_510 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _756.z;
    float _773 = _769 * cbMatDynParam._m0[13u].w;
    float _783 = (_773 * (cbMatDynParam._m0[13u].x - _753)) + _753;
    float _784 = (_773 * (cbMatDynParam._m0[13u].y - _754)) + _754;
    float _785 = (_773 * (cbMatDynParam._m0[13u].z - _755)) + _755;
    float _793 = ((_769 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _740)) + _740;
    float _794 = 1.0 - _793;
    float _795 = _794 * _783;
    float _796 = _794 * _784;
    float _797 = _794 * _785;
    float _801 = (_783 + (-0.039999999105930328369140625)) * _793;
    float _802 = (_784 + (-0.039999999105930328369140625)) * _793;
    float _803 = (_785 + (-0.039999999105930328369140625)) * _793;
    float _804 = _801 + 0.039999999105930328369140625;
    float _805 = _802 + 0.039999999105930328369140625;
    float _806 = _803 + 0.039999999105930328369140625;
    vec4 _815 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _606, cbSceneParam._m0[86u].y * _607));
    float _818 = _815.x * TEXCOORD_4;
    float _819 = dot(vec3(_503, _504, _505), vec3(_586, _587, _588));
    float _822 = _819 * 2.0;
    float _826 = (_822 * _503) - _586;
    float _827 = (_822 * _504) - _587;
    float _828 = (_822 * _505) - _588;
    float _832 = abs(dot(vec3(_586, _587, _588), vec3(_503, _504, _505)));
    float _3819 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _834 = sqrt(_685);
    float _846 = exp2((_834 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3819 : (isnan(_3819) ? 1.0 : min(_3819, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_834 * 3.0));
    float _852 = (1.0 - _846) * ((_834 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _853 = _846 * _834;
    float _881 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _885 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _889 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1220;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _945 = fma(_889, cbModelParam._m0[26u].z, fma(_885, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _881));
        float _949 = fma(_889, cbModelParam._m0[27u].z, fma(_885, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _881));
        float _953 = fma(_889, cbModelParam._m0[28u].z, fma(_885, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _881));
        float _978 = _881 + _503;
        float _979 = _885 + _504;
        float _980 = _889 + _505;
        float _990 = fma(_980, cbModelParam._m0[26u].z, fma(_979, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _978)) - _945;
        float _991 = fma(_980, cbModelParam._m0[27u].z, fma(_979, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _978)) - _949;
        float _992 = fma(_980, cbModelParam._m0[28u].z, fma(_979, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _978)) - _953;
        float _996 = inversesqrt(dot(vec3(_990, _991, _992), vec3(_990, _991, _992)));
        float _1009 = ((_996 * _990) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_945 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1010 = ((_996 * _991) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_949 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_996 * _992) / cbModelParam._m0[34u].z) + ((((((_953 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1014 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1021 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1028 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1035 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        float _1048 = exp2((_1014.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1014.x + (-0.5));
        float _1050 = _1048 * (_1014.y + (-0.5));
        float _1051 = _1048 * (_1014.z + (-0.5));
        float _1058 = exp2((_1021.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1021.x + (-0.5));
        float _1060 = _1058 * (_1021.y + (-0.5));
        float _1061 = _1058 * (_1021.z + (-0.5));
        float _1068 = exp2((_1028.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1028.x + (-0.5));
        float _1070 = _1068 * (_1028.y + (-0.5));
        float _1071 = _1068 * (_1028.z + (-0.5));
        float _1078 = exp2((_1035.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1035.x + (-0.5));
        float _1080 = _1078 * (_1035.y + (-0.5));
        float _1081 = _1078 * (_1035.z + (-0.5));
        float _1082 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = _1049 * 0.5;
        float _1086 = _1059 * 0.5;
        float _1087 = _1069 * 0.5;
        float _1088 = dot(vec3(_1085, _1086, _1087), vec3(_1085, _1086, _1087));
        float _1093 = (_1088 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1088);
        float _1102 = (dot(vec3(_503, _504, _505), vec3(_1093 * _1085, _1093 * _1086, _1093 * _1087)) + 1.0) * 0.5;
        float _3845 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1112 = sqrt(((_1086 * _1086) + (_1085 * _1085)) + (_1087 * _1087)) / (_1082 + 9.9999997473787516355514526367188e-06);
        float _3856 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _3856 : (isnan(_3856) ? 1.0 : min(_3856, 1.0));
        float _1114 = _1113 * 2.0;
        float _1118 = (1.0 - _1113) / (_1113 + 1.0);
        float _3867 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _3867 : (isnan(_3867) ? 1.0 : min(_3867, 1.0));
        float _1128 = ((((1.0 - _1119) * (_1114 + 2.0)) * exp2(log2(isnan(1.0) ? _3845 : (isnan(_3845) ? 1.0 : min(_3845, 1.0))) * (_1114 + 1.0))) + _1119) * _1082;
        float _1129 = _1050 * 0.5;
        float _1130 = _1060 * 0.5;
        float _1131 = _1070 * 0.5;
        float _1132 = dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131));
        float _1137 = (_1132 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1132);
        float _1145 = (dot(vec3(_503, _504, _505), vec3(_1137 * _1129, _1137 * _1130, _1137 * _1131)) + 1.0) * 0.5;
        float _3878 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1154 = sqrt(((_1130 * _1130) + (_1129 * _1129)) + (_1131 * _1131)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _3889 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _3889 : (isnan(_3889) ? 1.0 : min(_3889, 1.0));
        float _1156 = _1155 * 2.0;
        float _1160 = (1.0 - _1155) / (_1155 + 1.0);
        float _3900 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _3900 : (isnan(_3900) ? 1.0 : min(_3900, 1.0));
        float _1170 = ((((1.0 - _1161) * (_1156 + 2.0)) * exp2(log2(isnan(1.0) ? _3878 : (isnan(_3878) ? 1.0 : min(_3878, 1.0))) * (_1156 + 1.0))) + _1161) * _1083;
        float _1171 = _1051 * 0.5;
        float _1172 = _1061 * 0.5;
        float _1173 = _1071 * 0.5;
        float _1174 = dot(vec3(_1171, _1172, _1173), vec3(_1171, _1172, _1173));
        float _1179 = (_1174 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1174);
        float _1187 = (dot(vec3(_503, _504, _505), vec3(_1179 * _1171, _1179 * _1172, _1179 * _1173)) + 1.0) * 0.5;
        float _3911 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1196 = sqrt(((_1172 * _1172) + (_1171 * _1171)) + (_1173 * _1173)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _3922 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _3922 : (isnan(_3922) ? 1.0 : min(_3922, 1.0));
        float _1198 = _1197 * 2.0;
        float _1202 = (1.0 - _1197) / (_1197 + 1.0);
        float _3933 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _3933 : (isnan(_3933) ? 1.0 : min(_3933, 1.0));
        float _1212 = ((((1.0 - _1203) * (_1198 + 2.0)) * exp2(log2(isnan(1.0) ? _3911 : (isnan(_3911) ? 1.0 : min(_3911, 1.0))) * (_1198 + 1.0))) + _1203) * _1084;
        _1220 = _1051;
        _1222 = _1050;
        _1223 = _1049;
        _1224 = _1061;
        _1225 = _1060;
        _1226 = _1059;
        _1227 = _1071;
        _1228 = _1070;
        _1229 = _1069;
        _1230 = _1084;
        _1231 = _1083;
        _1232 = _1082;
        _1233 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0)));
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0)));
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)));
    }
    else
    {
        _1220 = _1221;
        _1222 = _1221;
        _1223 = _1221;
        _1224 = _1221;
        _1225 = _1221;
        _1226 = _1221;
        _1227 = _1221;
        _1228 = _1221;
        _1229 = _1221;
        _1230 = _1221;
        _1231 = _1221;
        _1232 = _1221;
        _1233 = 0.0;
        _1234 = 0.0;
        _1235 = 0.0;
    }
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1264 = fma(_889, cbModelParam._m0[30u].z, fma(_885, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _881));
        float _1268 = fma(_889, cbModelParam._m0[31u].z, fma(_885, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _881));
        float _1272 = fma(_889, cbModelParam._m0[32u].z, fma(_885, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _881));
        float _1295 = _881 + _503;
        float _1296 = _885 + _504;
        float _1297 = _889 + _505;
        float _1307 = fma(_1297, cbModelParam._m0[30u].z, fma(_1296, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1295)) - _1264;
        float _1308 = fma(_1297, cbModelParam._m0[31u].z, fma(_1296, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1295)) - _1268;
        float _1309 = fma(_1297, cbModelParam._m0[32u].z, fma(_1296, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1295)) - _1272;
        float _1313 = inversesqrt(dot(vec3(_1307, _1308, _1309), vec3(_1307, _1308, _1309)));
        float _1326 = ((_1313 * _1307) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1264 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1327 = ((_1313 * _1308) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1268 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1328 = ((_1313 * _1309) / cbModelParam._m0[35u].z) + ((((((_1272 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1330 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1326, _1327, _1328), 0.0);
        vec4 _1337 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1326, _1327, _1328), 0.0);
        vec4 _1344 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1326, _1327, _1328), 0.0);
        vec4 _1351 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1326, _1327, _1328), 0.0);
        float _1363 = exp2((_1330.w + (-0.5)) * 20.0) * 2.0;
        float _1364 = _1363 * (_1330.x + (-0.5));
        float _1365 = _1363 * (_1330.y + (-0.5));
        float _1366 = _1363 * (_1330.z + (-0.5));
        float _1373 = exp2((_1337.w + (-0.5)) * 20.0) * 2.0;
        float _1374 = _1373 * (_1337.x + (-0.5));
        float _1375 = _1373 * (_1337.y + (-0.5));
        float _1376 = _1373 * (_1337.z + (-0.5));
        float _1383 = exp2((_1344.w + (-0.5)) * 20.0) * 2.0;
        float _1384 = _1383 * (_1344.x + (-0.5));
        float _1385 = _1383 * (_1344.y + (-0.5));
        float _1386 = _1383 * (_1344.z + (-0.5));
        float _1393 = exp2((_1351.w + (-0.5)) * 20.0) * 2.0;
        float _1394 = _1393 * (_1351.x + (-0.5));
        float _1395 = _1393 * (_1351.y + (-0.5));
        float _1396 = _1393 * (_1351.z + (-0.5));
        float _1397 = isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0));
        float _1398 = isnan(0.0) ? _1395 : (isnan(_1395) ? 0.0 : max(_1395, 0.0));
        float _1399 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1400 = _1364 * 0.5;
        float _1401 = _1374 * 0.5;
        float _1402 = _1384 * 0.5;
        float _1403 = dot(vec3(_1400, _1401, _1402), vec3(_1400, _1401, _1402));
        float _1408 = (_1403 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1403);
        float _1416 = (dot(vec3(_503, _504, _505), vec3(_1408 * _1400, _1408 * _1401, _1408 * _1402)) + 1.0) * 0.5;
        float _3974 = isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0));
        float _1425 = sqrt(((_1401 * _1401) + (_1400 * _1400)) + (_1402 * _1402)) / (_1397 + 9.9999997473787516355514526367188e-06);
        float _3985 = isnan(0.0) ? _1425 : (isnan(_1425) ? 0.0 : max(_1425, 0.0));
        float _1426 = isnan(1.0) ? _3985 : (isnan(_3985) ? 1.0 : min(_3985, 1.0));
        float _1427 = _1426 * 2.0;
        float _1431 = (1.0 - _1426) / (_1426 + 1.0);
        float _3996 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1432 = isnan(1.0) ? _3996 : (isnan(_3996) ? 1.0 : min(_3996, 1.0));
        float _1441 = ((((1.0 - _1432) * (_1427 + 2.0)) * exp2(log2(isnan(1.0) ? _3974 : (isnan(_3974) ? 1.0 : min(_3974, 1.0))) * (_1427 + 1.0))) + _1432) * _1397;
        float _1442 = _1365 * 0.5;
        float _1443 = _1375 * 0.5;
        float _1444 = _1385 * 0.5;
        float _1445 = dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444));
        float _1450 = (_1445 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1445);
        float _1458 = (dot(vec3(_503, _504, _505), vec3(_1450 * _1442, _1450 * _1443, _1450 * _1444)) + 1.0) * 0.5;
        float _4007 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
        float _1467 = sqrt(((_1443 * _1443) + (_1442 * _1442)) + (_1444 * _1444)) / (_1398 + 9.9999997473787516355514526367188e-06);
        float _4018 = isnan(0.0) ? _1467 : (isnan(_1467) ? 0.0 : max(_1467, 0.0));
        float _1468 = isnan(1.0) ? _4018 : (isnan(_4018) ? 1.0 : min(_4018, 1.0));
        float _1469 = _1468 * 2.0;
        float _1473 = (1.0 - _1468) / (_1468 + 1.0);
        float _4029 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1474 = isnan(1.0) ? _4029 : (isnan(_4029) ? 1.0 : min(_4029, 1.0));
        float _1483 = ((((1.0 - _1474) * (_1469 + 2.0)) * exp2(log2(isnan(1.0) ? _4007 : (isnan(_4007) ? 1.0 : min(_4007, 1.0))) * (_1469 + 1.0))) + _1474) * _1398;
        float _1484 = _1366 * 0.5;
        float _1485 = _1376 * 0.5;
        float _1486 = _1386 * 0.5;
        float _1487 = dot(vec3(_1484, _1485, _1486), vec3(_1484, _1485, _1486));
        float _1492 = (_1487 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1487);
        float _1500 = (dot(vec3(_503, _504, _505), vec3(_1492 * _1484, _1492 * _1485, _1492 * _1486)) + 1.0) * 0.5;
        float _4040 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
        float _1509 = sqrt(((_1485 * _1485) + (_1484 * _1484)) + (_1486 * _1486)) / (_1399 + 9.9999997473787516355514526367188e-06);
        float _4051 = isnan(0.0) ? _1509 : (isnan(_1509) ? 0.0 : max(_1509, 0.0));
        float _1510 = isnan(1.0) ? _4051 : (isnan(_4051) ? 1.0 : min(_4051, 1.0));
        float _1511 = _1510 * 2.0;
        float _1515 = (1.0 - _1510) / (_1510 + 1.0);
        float _4062 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1516 = isnan(1.0) ? _4062 : (isnan(_4062) ? 1.0 : min(_4062, 1.0));
        float _1525 = ((((1.0 - _1516) * (_1511 + 2.0)) * exp2(log2(isnan(1.0) ? _4040 : (isnan(_4040) ? 1.0 : min(_4040, 1.0))) * (_1511 + 1.0))) + _1516) * _1399;
        _1533 = _1366;
        _1534 = _1365;
        _1535 = _1364;
        _1536 = _1376;
        _1537 = _1375;
        _1538 = _1374;
        _1539 = _1386;
        _1540 = _1385;
        _1541 = _1384;
        _1542 = _1399;
        _1543 = _1398;
        _1544 = _1397;
        _1545 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1441 : (isnan(_1441) ? 0.0 : max(_1441, 0.0)));
        _1546 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1483 : (isnan(_1483) ? 0.0 : max(_1483, 0.0)));
        _1547 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1525 : (isnan(_1525) ? 0.0 : max(_1525, 0.0)));
    }
    else
    {
        _1533 = _1221;
        _1534 = _1221;
        _1535 = _1221;
        _1536 = _1221;
        _1537 = _1221;
        _1538 = _1221;
        _1539 = _1221;
        _1540 = _1221;
        _1541 = _1221;
        _1542 = _1221;
        _1543 = _1221;
        _1544 = _1221;
        _1545 = 0.0;
        _1546 = 0.0;
        _1547 = 0.0;
    }
    float _1557 = (cbModelParam._m0[1u].x * (_1545 - _1233)) + _1233;
    float _1558 = (cbModelParam._m0[1u].x * (_1546 - _1234)) + _1234;
    float _1559 = (cbModelParam._m0[1u].x * (_1547 - _1235)) + _1235;
    float _1580 = fma(_1559, cbSceneParam._m0[89u].z, fma(_1558, cbSceneParam._m0[89u].y, _1557 * cbSceneParam._m0[89u].x));
    float _1583 = fma(_1559, cbSceneParam._m0[90u].z, fma(_1558, cbSceneParam._m0[90u].y, _1557 * cbSceneParam._m0[90u].x));
    float _1586 = fma(_1559, cbSceneParam._m0[91u].z, fma(_1558, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1557));
    float _1601 = _826 * 0.5;
    float _1602 = _827 * 0.5;
    float _1603 = _828 * 0.5;
    float _1604 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1535, _1538, _1541, _1544));
    float _1607 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1534, _1537, _1540, _1543));
    float _1610 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1533, _1536, _1539, _1542));
    float _1641;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1617 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1220, _1224, _1227, _1230));
        float _1621 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1222, _1225, _1228, _1231));
        float _1625 = dot(vec4(_1601, _1602, _1603, 1.0), vec4(_1223, _1226, _1229, _1232));
        float _1632 = dot(vec4(cbModelParam._m0[39u]), vec4(_1601, _1602, _1603, 1.0));
        _1641 = dot(vec3(isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0)), isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0)), isnan(0.0) ? _1617 : (isnan(_1617) ? 0.0 : max(_1617, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1632) ? 0.0 : (isnan(0.0) ? _1632 : max(0.0, _1632))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1641 = 1.0;
    }
    float _1652;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1643 = dot(vec4(cbModelParam._m0[40u]), vec4(_1601, _1602, _1603, 1.0));
        _1652 = dot(vec3(isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0)), isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1643) ? 0.0 : (isnan(0.0) ? _1643 : max(0.0, _1643))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1652 = 1.0;
    }
    float _1656 = (_1652 * cbModelParam._m0[1u].x) + (_1641 * (1.0 - cbModelParam._m0[1u].x));
    float _1666 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _685);
    float _1667 = isnan(_1666) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1666 : min(cbModelParam._m0[25u].z, _1666));
    float _1747;
    float _1749;
    float _1751;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1714 = fma(_889, cbModelParam._m0[13u].z, fma(_885, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _881)) + cbModelParam._m0[13u].w;
        float _1718 = fma(_889, cbModelParam._m0[14u].z, fma(_885, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _881)) + cbModelParam._m0[14u].w;
        float _1722 = fma(_889, cbModelParam._m0[15u].z, fma(_885, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _881)) + cbModelParam._m0[15u].w;
        float _1725 = fma(_828, cbModelParam._m0[13u].z, fma(_827, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _826));
        float _1728 = fma(_828, cbModelParam._m0[14u].z, fma(_827, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _826));
        float _1731 = fma(_828, cbModelParam._m0[15u].z, fma(_827, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _826));
        float _1759;
        if (_1725 > 0.0)
        {
            _1759 = abs((1.0 - _1714) / _1725);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1725 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1714 + 1.0) / _1725);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1759 = frontier_phi_19_17_ladder;
        }
        float _1963;
        if (_1728 > 0.0)
        {
            _1963 = abs((1.0 - _1718) / _1728);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1728 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1718 + 1.0) / _1728);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1963 = frontier_phi_28_24_ladder;
        }
        float _2217;
        if (_1731 > 0.0)
        {
            _2217 = abs((1.0 - _1722) / _1731);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1731 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1722 + 1.0) / _1731);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2217 = frontier_phi_40_35_ladder;
        }
        float _2219 = isnan(_1963) ? _1759 : (isnan(_1759) ? _1963 : min(_1759, _1963));
        float _2220 = isnan(_2217) ? _2219 : (isnan(_2219) ? _2217 : min(_2219, _2217));
        float _2224 = (_2220 * _1725) + _1714;
        float _2225 = (_2220 * _1728) + _1718;
        float _2226 = (_2220 * _1731) + _1722;
        float _2227 = _2220 * 9.9999997473787516355514526367188e-05;
        float _2229 = (-1.0) - _2227;
        float _2231 = _2227 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2226 > _2231) || ((_2226 < _2229) || ((_2225 > _2231) || ((_2225 < _2229) || ((_2224 < _2229) || (_2224 > _2231))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2354 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2226, cbModelParam._m0[9u].z, fma(_2225, cbModelParam._m0[9u].y, _2224 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2226, cbModelParam._m0[10u].z, fma(_2225, cbModelParam._m0[10u].y, _2224 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2226, cbModelParam._m0[11u].z, fma(_2225, cbModelParam._m0[11u].y, _2224 * cbModelParam._m0[11u].x))), _1667);
            frontier_phi_18_40_ladder = _2354.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2354.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2354.x * cbModelParam._m0[1u].y;
        }
        _1747 = frontier_phi_18_40_ladder_2;
        _1749 = frontier_phi_18_40_ladder_1;
        _1751 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1735 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_826, _827, _828), _1667);
        _1747 = _1735.x * cbModelParam._m0[1u].y;
        _1749 = _1735.y * cbModelParam._m0[1u].y;
        _1751 = _1735.z * cbModelParam._m0[1u].y;
    }
    float _1755 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _685);
    float _1756 = isnan(_1755) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1755 : min(cbModelParam._m0[25u].w, _1755));
    float _1847;
    float _1849;
    float _1851;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1811 = fma(_889, cbModelParam._m0[21u].z, fma(_885, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _881)) + cbModelParam._m0[21u].w;
        float _1815 = fma(_889, cbModelParam._m0[22u].z, fma(_885, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _881)) + cbModelParam._m0[22u].w;
        float _1819 = fma(_889, cbModelParam._m0[23u].z, fma(_885, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _881)) + cbModelParam._m0[23u].w;
        float _1822 = fma(_828, cbModelParam._m0[21u].z, fma(_827, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _826));
        float _1825 = fma(_828, cbModelParam._m0[22u].z, fma(_827, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _826));
        float _1828 = fma(_828, cbModelParam._m0[23u].z, fma(_827, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _826));
        float _1968;
        if (_1822 > 0.0)
        {
            _1968 = abs((1.0 - _1811) / _1822);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1822 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1811 + 1.0) / _1822);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1968 = frontier_phi_30_26_ladder;
        }
        float _2244;
        if (_1825 > 0.0)
        {
            _2244 = abs((1.0 - _1815) / _1825);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1815 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2244 = frontier_phi_42_37_ladder;
        }
        float _2457;
        if (_1828 > 0.0)
        {
            _2457 = abs((1.0 - _1819) / _1828);
        }
        else
        {
            float frontier_phi_51_48_ladder;
            if (_1828 < 0.0)
            {
                frontier_phi_51_48_ladder = abs((_1819 + 1.0) / _1828);
            }
            else
            {
                frontier_phi_51_48_ladder = 5000.0;
            }
            _2457 = frontier_phi_51_48_ladder;
        }
        float _2459 = isnan(_2244) ? _1968 : (isnan(_1968) ? _2244 : min(_1968, _2244));
        float _2460 = isnan(_2457) ? _2459 : (isnan(_2459) ? _2457 : min(_2459, _2457));
        float _2464 = (_2460 * _1822) + _1811;
        float _2465 = (_2460 * _1825) + _1815;
        float _2466 = (_2460 * _1828) + _1819;
        float _2467 = _2460 * 9.9999997473787516355514526367188e-05;
        float _2468 = (-1.0) - _2467;
        float _2470 = _2467 + 1.0;
        float frontier_phi_27_51_ladder;
        float frontier_phi_27_51_ladder_1;
        float frontier_phi_27_51_ladder_2;
        if ((_2466 > _2470) || ((_2466 < _2468) || ((_2465 > _2470) || ((_2465 < _2468) || ((_2464 < _2468) || (_2464 > _2470))))))
        {
            frontier_phi_27_51_ladder = 0.0;
            frontier_phi_27_51_ladder_1 = 0.0;
            frontier_phi_27_51_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2707 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2466, cbModelParam._m0[17u].z, fma(_2465, cbModelParam._m0[17u].y, _2464 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2466, cbModelParam._m0[18u].z, fma(_2465, cbModelParam._m0[18u].y, _2464 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2466, cbModelParam._m0[19u].z, fma(_2465, cbModelParam._m0[19u].y, _2464 * cbModelParam._m0[19u].x))), _1756);
            frontier_phi_27_51_ladder = _2707.z * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_1 = _2707.y * cbModelParam._m0[1u].z;
            frontier_phi_27_51_ladder_2 = _2707.x * cbModelParam._m0[1u].z;
        }
        _1847 = frontier_phi_27_51_ladder_2;
        _1849 = frontier_phi_27_51_ladder_1;
        _1851 = frontier_phi_27_51_ladder;
    }
    else
    {
        vec4 _1831 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_826, _827, _828), _1756);
        _1847 = _1831.x * cbModelParam._m0[1u].z;
        _1849 = _1831.y * cbModelParam._m0[1u].z;
        _1851 = _1831.z * cbModelParam._m0[1u].z;
    }
    float _1864 = (((_852 * _804) + _853) * _818) * ((cbModelParam._m0[1u].w * (_1847 - _1747)) + _1747);
    float _1866 = (((_852 * _805) + _853) * _818) * ((cbModelParam._m0[1u].w * (_1849 - _1749)) + _1749);
    float _1868 = (((_852 * _806) + _853) * _818) * ((cbModelParam._m0[1u].w * (_1851 - _1751)) + _1751);
    float _1871 = fma(_1868, cbSceneParam._m0[89u].z, fma(_1866, cbSceneParam._m0[89u].y, _1864 * cbSceneParam._m0[89u].x));
    float _1874 = fma(_1868, cbSceneParam._m0[90u].z, fma(_1866, cbSceneParam._m0[90u].y, _1864 * cbSceneParam._m0[90u].x));
    float _1877 = fma(_1868, cbSceneParam._m0[91u].z, fma(_1866, cbSceneParam._m0[91u].y, _1864 * cbSceneParam._m0[91u].x));
    uvec4 _1887 = floatBitsToUint(cbInstanceData._m0[_709 + 5u]);
    uint _1889 = _1887.x * 14u;
    uint _1890 = _1889 + 13u;
    float _1897 = _818 + (-1.0);
    float _1902 = (cbLight._m0[_1890].x * _1897) + 1.0;
    float _1903 = (cbLight._m0[_1890].y * _1897) + 1.0;
    float _1904 = (cbLight._m0[_1890].z * _1897) + 1.0;
    float _1905 = (cbLight._m0[_1890].w * _1897) + 1.0;
    uint _1906 = _1889 + 5u;
    float _1912 = isnan(1.0) ? _1903 : (isnan(_1903) ? 1.0 : min(_1903, 1.0));
    uint _1916 = _1889 + 4u;
    float _1922 = isnan(1.0) ? _1902 : (isnan(_1902) ? 1.0 : min(_1902, 1.0));
    uint _1926 = _1889 | 1u;
    float _1937 = dot(vec3(cbLight._m0[_1889].xyz), vec3(_503, _504, _505));
    float _1940 = dot(vec3(cbLight._m0[_1926].xyz), vec3(_503, _504, _505));
    float _4198 = isnan(0.0) ? _1937 : (isnan(_1937) ? 0.0 : max(_1937, 0.0));
    float _4209 = isnan(0.0) ? _1940 : (isnan(_1940) ? 0.0 : max(_1940, 0.0));
    float _1945 = (isnan(1.0) ? _4198 : (isnan(_4198) ? 1.0 : min(_4198, 1.0))) * 0.3183098733425140380859375;
    float _1947 = (isnan(1.0) ? _4209 : (isnan(_4209) ? 1.0 : min(_4209, 1.0))) * 0.3183098733425140380859375;
    float _1954 = ((cbLight._m0[_1906].x * _1912) * _1947) + ((cbLight._m0[_1916].x * _1922) * _1945);
    float _1955 = ((_1912 * cbLight._m0[_1906].y) * _1947) + ((_1922 * cbLight._m0[_1916].y) * _1945);
    float _1956 = ((_1912 * cbLight._m0[_1906].z) * _1947) + ((_1922 * cbLight._m0[_1916].z) * _1945);
    uvec4 _1960 = floatBitsToUint(cbLight._m0[_1889 + 12u]);
    bool _1962 = _1960.x == 0u;
    float _1973;
    float _1975;
    float _1977;
    if (_1962)
    {
        _1973 = _1954;
        _1975 = _1955;
        _1977 = _1956;
    }
    else
    {
        uint _1981 = _1889 + 6u;
        float _1997 = (dot(vec3(cbLight._m0[_1889 + 2u].xyz), vec3(_503, _504, _505)) * 0.5) + 0.5;
        float _1998 = _1997 * _1997;
        float _4220 = isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0));
        float _1999 = isnan(1.0) ? _4220 : (isnan(_4220) ? 1.0 : min(_4220, 1.0));
        float _2000 = isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0));
        _1973 = (((cbLight._m0[_1981].x * 0.3183098733425140380859375) * _1999) * _2000) + _1954;
        _1975 = (((cbLight._m0[_1981].y * 0.3183098733425140380859375) * _1999) * _2000) + _1955;
        _1977 = (((cbLight._m0[_1981].z * 0.3183098733425140380859375) * _1999) * _2000) + _1956;
    }
    bool _1980 = _1960.y == 0u;
    float _2018;
    float _2020;
    float _2022;
    if (_1980)
    {
        _2018 = _1973;
        _2020 = _1975;
        _2022 = _1977;
    }
    else
    {
        uint _2188 = _1889 + 7u;
        float _2204 = (dot(vec3(cbLight._m0[_1889 + 3u].xyz), vec3(_503, _504, _505)) * 0.5) + 0.5;
        float _2205 = _2204 * _2204;
        float _4236 = isnan(0.0) ? _2205 : (isnan(_2205) ? 0.0 : max(_2205, 0.0));
        float _2206 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
        float _2207 = isnan(1.0) ? _1905 : (isnan(_1905) ? 1.0 : min(_1905, 1.0));
        _2018 = (((cbLight._m0[_2188].x * 0.3183098733425140380859375) * _2206) * _2207) + _1973;
        _2020 = (((cbLight._m0[_2188].y * 0.3183098733425140380859375) * _2206) * _2207) + _1975;
        _2022 = (((cbLight._m0[_2188].z * 0.3183098733425140380859375) * _2206) * _2207) + _1977;
    }
    uint _2025 = _1889 + 8u;
    float _2038 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1889].w)) * _685) * 0.949999988079071044921875);
    float _2039 = _2038 * _2038;
    float _2040 = cbLight._m0[_1889].x + _586;
    float _2041 = cbLight._m0[_1889].y + _587;
    float _2042 = cbLight._m0[_1889].z + _588;
    float _2046 = inversesqrt(dot(vec3(_2040, _2041, _2042), vec3(_2040, _2041, _2042)));
    float _2047 = _2046 * _2040;
    float _2048 = _2046 * _2041;
    float _2049 = _2046 * _2042;
    float _2050 = dot(vec3(_503, _504, _505), vec3(cbLight._m0[_1889].xyz));
    float _4252 = isnan(0.0) ? _2050 : (isnan(_2050) ? 0.0 : max(_2050, 0.0));
    float _2053 = isnan(1.0) ? _4252 : (isnan(_4252) ? 1.0 : min(_4252, 1.0));
    float _4263 = isnan(0.0) ? _819 : (isnan(_819) ? 0.0 : max(_819, 0.0));
    float _2054 = isnan(1.0) ? _4263 : (isnan(_4263) ? 1.0 : min(_4263, 1.0));
    float _2055 = dot(vec3(_503, _504, _505), vec3(_2047, _2048, _2049));
    float _4274 = isnan(0.0) ? _2055 : (isnan(_2055) ? 0.0 : max(_2055, 0.0));
    float _2058 = isnan(1.0) ? _4274 : (isnan(_4274) ? 1.0 : min(_4274, 1.0));
    float _2059 = dot(vec3(cbLight._m0[_1889].xyz), vec3(_2047, _2048, _2049));
    float _4285 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
    float _2063 = _2039 * _2039;
    float _2067 = ((_2058 * _2058) * (_2063 + (-1.0))) + 1.0;
    float _2075 = exp2(log2(1.0 - (isnan(1.0) ? _4285 : (isnan(_4285) ? 1.0 : min(_4285, 1.0)))) * 5.0);
    float _2076 = 0.959999978542327880859375 - _801;
    float _2078 = 0.959999978542327880859375 - _802;
    float _2079 = 0.959999978542327880859375 - _803;
    float _2086 = 1.0 - _2039;
    float _2097 = (0.5 / (((_2054 * ((_2053 * _2086) + _2039)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2086) + _2039) * _2053))) * _2053;
    float _4296 = isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0));
    float _2099 = (isnan(1.0) ? _4296 : (isnan(_4296) ? 1.0 : min(_4296, 1.0))) * (_2063 / ((_2067 * _2067) * 3.141590118408203125));
    uint _2110 = _1889 + 9u;
    float _2121 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1926].w)) * _685) * 0.949999988079071044921875);
    float _2122 = _2121 * _2121;
    float _2123 = cbLight._m0[_1926].x + _586;
    float _2124 = cbLight._m0[_1926].y + _587;
    float _2125 = cbLight._m0[_1926].z + _588;
    float _2129 = inversesqrt(dot(vec3(_2123, _2124, _2125), vec3(_2123, _2124, _2125)));
    float _2130 = _2129 * _2123;
    float _2131 = _2129 * _2124;
    float _2132 = _2129 * _2125;
    float _2133 = dot(vec3(_503, _504, _505), vec3(cbLight._m0[_1926].xyz));
    float _4307 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0));
    float _2136 = isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0));
    float _2137 = dot(vec3(_503, _504, _505), vec3(_2130, _2131, _2132));
    float _4318 = isnan(0.0) ? _2137 : (isnan(_2137) ? 0.0 : max(_2137, 0.0));
    float _2140 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
    float _2141 = dot(vec3(cbLight._m0[_1926].xyz), vec3(_2130, _2131, _2132));
    float _4329 = isnan(0.0) ? _2141 : (isnan(_2141) ? 0.0 : max(_2141, 0.0));
    float _2145 = _2122 * _2122;
    float _2149 = ((_2140 * _2140) * (_2145 + (-1.0))) + 1.0;
    float _2156 = exp2(log2(1.0 - (isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0)))) * 5.0);
    float _2163 = 1.0 - _2122;
    float _2173 = (0.5 / (((_2054 * ((_2136 * _2163) + _2122)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2163) + _2122) * _2136))) * _2136;
    float _4340 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
    float _2175 = (isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * (_2145 / ((_2149 * _2149) * 3.141590118408203125));
    float _2185 = (((((_2156 * _2076) + _804) * cbLight._m0[_2110].x) * _2175) * _1912) + (((((_2075 * _2076) + _804) * cbLight._m0[_2025].x) * _2099) * _1922);
    float _2186 = (((((_2156 * _2078) + _805) * cbLight._m0[_2110].y) * _2175) * _1912) + (((((_2075 * _2078) + _805) * cbLight._m0[_2025].y) * _2099) * _1922);
    float _2187 = (((((_2156 * _2079) + _806) * cbLight._m0[_2110].z) * _2175) * _1912) + (((((_2075 * _2079) + _806) * cbLight._m0[_2025].z) * _2099) * _1922);
    float _2249;
    float _2251;
    float _2253;
    if (_1962)
    {
        _2249 = _2185;
        _2251 = _2186;
        _2253 = _2187;
    }
    else
    {
        uint _2255 = _1889 + 2u;
        uint _2259 = _1889 + 10u;
        float _2273 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2255].w)) * _685) * 0.949999988079071044921875);
        float _2274 = _2273 * _2273;
        float _2275 = cbLight._m0[_2255].x + _586;
        float _2276 = cbLight._m0[_2255].y + _587;
        float _2277 = cbLight._m0[_2255].z + _588;
        float _2281 = inversesqrt(dot(vec3(_2275, _2276, _2277), vec3(_2275, _2276, _2277)));
        float _2282 = _2281 * _2275;
        float _2283 = _2281 * _2276;
        float _2284 = _2281 * _2277;
        float _2285 = dot(vec3(_503, _504, _505), vec3(cbLight._m0[_2255].xyz));
        float _4351 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
        float _2288 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _2289 = dot(vec3(_503, _504, _505), vec3(_2282, _2283, _2284));
        float _4362 = isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0));
        float _2292 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _2293 = dot(vec3(cbLight._m0[_2255].xyz), vec3(_2282, _2283, _2284));
        float _4373 = isnan(0.0) ? _2293 : (isnan(_2293) ? 0.0 : max(_2293, 0.0));
        float _2297 = _2274 * _2274;
        float _2301 = ((_2292 * _2292) * (_2297 + (-1.0))) + 1.0;
        float _2308 = exp2(log2(1.0 - (isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0)))) * 5.0);
        float _2315 = 1.0 - _2274;
        float _2325 = (0.5 / (((_2054 * ((_2288 * _2315) + _2274)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2315) + _2274) * _2288))) * _2288;
        float _4384 = isnan(0.0) ? _2325 : (isnan(_2325) ? 0.0 : max(_2325, 0.0));
        float _2327 = (isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0))) * (_2297 / ((_2301 * _2301) * 3.141590118408203125));
        float _2328 = isnan(1.0) ? _1904 : (isnan(_1904) ? 1.0 : min(_1904, 1.0));
        _2249 = (((((_2308 * _2076) + _804) * cbLight._m0[_2259].x) * _2327) * _2328) + _2185;
        _2251 = (((((_2308 * _2078) + _805) * cbLight._m0[_2259].y) * _2327) * _2328) + _2186;
        _2253 = (((((_2308 * _2079) + _806) * cbLight._m0[_2259].z) * _2327) * _2328) + _2187;
    }
    float _2363;
    float _2365;
    float _2367;
    if (_1980)
    {
        _2363 = _2249;
        _2365 = _2251;
        _2367 = _2253;
    }
    else
    {
        uint _2374 = _1889 + 3u;
        uint _2378 = _1889 + 11u;
        float _2392 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2374].w)) * _685) * 0.949999988079071044921875);
        float _2393 = _2392 * _2392;
        float _2394 = cbLight._m0[_2374].x + _586;
        float _2395 = cbLight._m0[_2374].y + _587;
        float _2396 = cbLight._m0[_2374].z + _588;
        float _2400 = inversesqrt(dot(vec3(_2394, _2395, _2396), vec3(_2394, _2395, _2396)));
        float _2401 = _2400 * _2394;
        float _2402 = _2400 * _2395;
        float _2403 = _2400 * _2396;
        float _2404 = dot(vec3(_503, _504, _505), vec3(cbLight._m0[_2374].xyz));
        float _4400 = isnan(0.0) ? _2404 : (isnan(_2404) ? 0.0 : max(_2404, 0.0));
        float _2407 = isnan(1.0) ? _4400 : (isnan(_4400) ? 1.0 : min(_4400, 1.0));
        float _2408 = dot(vec3(_503, _504, _505), vec3(_2401, _2402, _2403));
        float _4411 = isnan(0.0) ? _2408 : (isnan(_2408) ? 0.0 : max(_2408, 0.0));
        float _2411 = isnan(1.0) ? _4411 : (isnan(_4411) ? 1.0 : min(_4411, 1.0));
        float _2412 = dot(vec3(cbLight._m0[_2374].xyz), vec3(_2401, _2402, _2403));
        float _4422 = isnan(0.0) ? _2412 : (isnan(_2412) ? 0.0 : max(_2412, 0.0));
        float _2416 = _2393 * _2393;
        float _2420 = ((_2411 * _2411) * (_2416 + (-1.0))) + 1.0;
        float _2427 = exp2(log2(1.0 - (isnan(1.0) ? _4422 : (isnan(_4422) ? 1.0 : min(_4422, 1.0)))) * 5.0);
        float _2434 = 1.0 - _2393;
        float _2444 = (0.5 / (((_2054 * ((_2407 * _2434) + _2393)) + 9.9999999392252902907785028219223e-09) + (((_2054 * _2434) + _2393) * _2407))) * _2407;
        float _4433 = isnan(0.0) ? _2444 : (isnan(_2444) ? 0.0 : max(_2444, 0.0));
        float _2446 = (isnan(1.0) ? _4433 : (isnan(_4433) ? 1.0 : min(_4433, 1.0))) * (_2416 / ((_2420 * _2420) * 3.141590118408203125));
        float _2447 = isnan(1.0) ? _1905 : (isnan(_1905) ? 1.0 : min(_1905, 1.0));
        _2363 = (((((_2427 * _2076) + _804) * cbLight._m0[_2378].x) * _2446) * _2447) + _2249;
        _2365 = (((((_2427 * _2078) + _805) * cbLight._m0[_2378].y) * _2446) * _2447) + _2251;
        _2367 = (((((_2427 * _2079) + _806) * cbLight._m0[_2378].z) * _2446) * _2447) + _2253;
    }
    float _2581;
    float _2583;
    float _2585;
    float _2587;
    float _2589;
    float _2591;
    if (_1887.y == 0u)
    {
        float _2522 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2523 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2522;
        float _2524 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2522;
        float _2525 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2522;
        uvec4 _2537 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2538 = _2537.x;
        uint _2549 = uint((float(_2537.y) * floor(float(uint(cbSceneParam._m0[85u].y * _607) / _2538))) + floor(float(uint(cbSceneParam._m0[85u].x * _606) / _2538)));
        float _2559 = (log2(_2525 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2560 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        uint _2563 = uint(isnan(14.0) ? _2560 : (isnan(_2560) ? 14.0 : min(_2560, 14.0)));
        uvec4 _2568 = texelFetch(g_lightClusterGridBuffer, int(((_2563 << 2u) + (_2549 << 6u)) >> 2u));
        uint _2569 = _2568.x;
        uint _2570 = _2537.z;
        float _2712;
        float _2714;
        float _2716;
        float _2718;
        float _2720;
        float _2722;
        if (((((1u << ((_2570 >> 4u) & 15u)) + 4294967295u) & _2569) == 0u) || ((_2570 & 240u) == 0u))
        {
            _2712 = 0.0;
            _2714 = 0.0;
            _2716 = 0.0;
            _2718 = 0.0;
            _2720 = 0.0;
            _2722 = 0.0;
        }
        else
        {
            float _2713;
            float _2715;
            float _2717;
            float _2719;
            float _2721;
            float _2723;
            float _2873 = 0.0;
            float _2874 = 0.0;
            float _2875 = 0.0;
            float _2876 = 0.0;
            float _2877 = 0.0;
            float _2878 = 0.0;
            uint _2879 = 0u;
            uint _2888;
            bool _2889;
            for (;;)
            {
                _2888 = texelFetch(g_lightClassification, int((((_2563 << 5u) + (_2549 << 9u)) + (_2879 << 2u)) >> 2u)).x;
                _2889 = _2888 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_2889)
                {
                    frontier_phi_68_pred = _2875;
                    frontier_phi_68_pred_1 = _2878;
                    frontier_phi_68_pred_2 = _2877;
                    frontier_phi_68_pred_3 = _2876;
                    frontier_phi_68_pred_4 = _2874;
                    frontier_phi_68_pred_5 = _2873;
                }
                else
                {
                    float _3018;
                    float _3019;
                    float _3020;
                    float _3021;
                    float _3022;
                    float _3023;
                    uint _3024;
                    _3018 = _2873;
                    _3019 = _2874;
                    _3020 = _2875;
                    _3021 = _2876;
                    _3022 = _2877;
                    _3023 = _2878;
                    _3024 = _2888;
                    float _2945;
                    float _2946;
                    float _2947;
                    float _2948;
                    float _2949;
                    float _2950;
                    for (;;)
                    {
                        uint _3028 = uint(findLSB(_3024)) + (_2879 << 5u);
                        uint _3025 = (_3024 + 4294967295u) & _3024;
                        uint _3030 = _3028 * 48u;
                        vec4 _3044 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3030)).x, texelFetch(g_PointLightRenderingBuffer, int(_3030 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3030 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3030 + 3u)).x));
                        uint _3050 = (_3028 * 48u) + 4u;
                        vec4 _3063 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3050)).x, texelFetch(g_PointLightRenderingBuffer, int(_3050 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3050 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3050 + 3u)).x));
                        uint _3069 = (_3028 * 48u) + 8u;
                        vec3 _3080 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3069)).x, texelFetch(g_PointLightRenderingBuffer, int(_3069 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3069 + 2u)).x));
                        float _3084 = _3044.x - _2523;
                        float _3085 = _3044.y - _2524;
                        float _3086 = _3044.z - _2525;
                        float _3087 = dot(vec3(_3084, _3085, _3086), vec3(_3084, _3085, _3086));
                        float _3090 = inversesqrt(_3087);
                        float _3091 = _3090 * _3084;
                        float _3092 = _3090 * _3085;
                        float _3093 = _3090 * _3086;
                        float _3094 = dot(vec3(_630, _633, _636), vec3(_3091, _3092, _3093));
                        float _3099 = 1.0 - (_3087 * _3044.w);
                        float _4459 = isnan(0.0) ? _3099 : (isnan(_3099) ? 0.0 : max(_3099, 0.0));
                        float _3100 = isnan(1.0) ? _4459 : (isnan(_4459) ? 1.0 : min(_4459, 1.0));
                        float _3101 = sqrt(_3087) * _3063.w;
                        float _3104 = 1.39999997615814208984375 / (_3101 + 1.39999997615814208984375);
                        float _3105 = _3104 * _3104;
                        float _3108 = ((1.0 - _3105) * _3094) + _3105;
                        float _3111 = _3101 * _3101;
                        float _3115 = ((isnan(0.0) ? _3108 : (isnan(_3108) ? 0.0 : max(_3108, 0.0))) * _3100) / ((_3111 * 0.699999988079071044921875) + 1.0);
                        float _3119 = (-0.0) - _2523;
                        float _3120 = (-0.0) - _2524;
                        float _3121 = (-0.0) - _2525;
                        float _3125 = inversesqrt(dot(vec3(_3119, _3120, _3121), vec3(_3119, _3120, _3121)));
                        float _3126 = _3125 * _3119;
                        float _3127 = _3125 * _3120;
                        float _3128 = _3125 * _3121;
                        float _3136 = exp2(log2(1.0 / ((_3111 * 3.5) + 5.0)) * 0.25);
                        float _3137 = 1.0 - _834;
                        float _3144 = sqrt(1.0 - ((1.0 - (_3137 * _3137)) * (1.0 - (_3136 * _3136))));
                        float _3145 = _3144 * _3144;
                        float _3146 = _3145 * _3145;
                        float _3147 = _3126 + _3091;
                        float _3148 = _3127 + _3092;
                        float _3149 = _3128 + _3093;
                        float _3153 = inversesqrt(dot(vec3(_3147, _3148, _3149), vec3(_3147, _3148, _3149)));
                        float _3157 = dot(vec3(_630, _633, _636), vec3(_3126, _3127, _3128));
                        float _4475 = isnan(0.0) ? _3157 : (isnan(_3157) ? 0.0 : max(_3157, 0.0));
                        float _3160 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
                        float _3161 = dot(vec3(_630, _633, _636), vec3(_3153 * _3147, _3153 * _3148, _3153 * _3149));
                        float _4486 = isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : max(_3161, 0.0));
                        float _3164 = isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0));
                        float _3168 = ((_3164 * _3164) * (_3146 + (-1.0))) + 1.0;
                        float _3169 = _3104 * _3145;
                        float _3170 = _3169 * _3169;
                        float _3173 = ((1.0 - _3170) * _3094) + _3170;
                        float _4497 = isnan(0.0) ? _3173 : (isnan(_3173) ? 0.0 : max(_3173, 0.0));
                        float _3174 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
                        float _3175 = 1.0 - _3145;
                        float _3185 = (0.5 / (((_3174 * ((_3160 * _3175) + _3145)) + 9.9999999392252902907785028219223e-09) + (((_3174 * _3175) + _3145) * _3160))) * _3174;
                        float _4508 = isnan(0.0) ? _3185 : (isnan(_3185) ? 0.0 : max(_3185, 0.0));
                        float _3196 = (((_3146 * 3.1415927410125732421875) * (isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0)))) / ((_3168 * _3168) * ((_3111 * 2.1991131305694580078125) + 3.141590118408203125))) * _3100;
                        _2948 = (_3115 * _3063.x) + _3021;
                        _2949 = (_3115 * _3063.y) + _3022;
                        _2950 = (_3115 * _3063.z) + _3023;
                        _2945 = (_3196 * _3080.x) + _3018;
                        _2946 = (_3196 * _3080.y) + _3019;
                        _2947 = (_3196 * _3080.z) + _3020;
                        if (_3025 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3018 = _2945;
                            _3019 = _2946;
                            _3020 = _2947;
                            _3021 = _2948;
                            _3022 = _2949;
                            _3023 = _2950;
                            _3024 = _3025;
                        }
                    }
                    frontier_phi_68_pred = _2947;
                    frontier_phi_68_pred_1 = _2950;
                    frontier_phi_68_pred_2 = _2949;
                    frontier_phi_68_pred_3 = _2948;
                    frontier_phi_68_pred_4 = _2946;
                    frontier_phi_68_pred_5 = _2945;
                }
                _2717 = frontier_phi_68_pred;
                _2723 = frontier_phi_68_pred_1;
                _2721 = frontier_phi_68_pred_2;
                _2719 = frontier_phi_68_pred_3;
                _2715 = frontier_phi_68_pred_4;
                _2713 = frontier_phi_68_pred_5;
                uint _2880 = _2879 + 1u;
                if (_2880 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2873 = _2713;
                    _2874 = _2715;
                    _2875 = _2717;
                    _2876 = _2719;
                    _2877 = _2721;
                    _2878 = _2723;
                    _2879 = _2880;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2712 = _2713;
            _2714 = _2715;
            _2716 = _2717;
            _2718 = _2719;
            _2720 = _2721;
            _2722 = _2723;
        }
        uvec4 _2726 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2727 = _2726.z;
        uint _2729 = (_2727 >> 8u) & 15u;
        float _2841;
        float _2843;
        float _2845;
        float _2847;
        float _2849;
        float _2851;
        if (((4294967295u << _2729) & _2569) == 0u)
        {
            _2841 = _2712;
            _2843 = _2714;
            _2845 = _2716;
            _2847 = _2718;
            _2849 = _2720;
            _2851 = _2722;
        }
        else
        {
            float _2866 = inversesqrt(dot(vec3(_2523, _2524, _2525), vec3(_2523, _2524, _2525)));
            float _2867 = _2866 * _2523;
            float _2868 = _2866 * _2524;
            float _2869 = _2866 * _2525;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_2729 < ((_2727 >> 12u) & 15u))
            {
                float _2842;
                float _2844;
                float _2846;
                float _2848;
                float _2850;
                float _2852;
                float _3001 = _2712;
                float _3002 = _2714;
                float _3003 = _2716;
                float _3004 = _2718;
                float _3005 = _2720;
                float _3006 = _2722;
                uint _3007 = _2729;
                uint _3016;
                bool _3017;
                for (;;)
                {
                    _3016 = texelFetch(g_lightClassification, int((((_2563 << 5u) + (_2549 << 9u)) + (_3007 << 2u)) >> 2u)).x;
                    _3017 = _3016 == 0u;
                    float frontier_phi_79_pred;
                    float frontier_phi_79_pred_1;
                    float frontier_phi_79_pred_2;
                    float frontier_phi_79_pred_3;
                    float frontier_phi_79_pred_4;
                    float frontier_phi_79_pred_5;
                    if (_3017)
                    {
                        frontier_phi_79_pred = _3006;
                        frontier_phi_79_pred_1 = _3005;
                        frontier_phi_79_pred_2 = _3004;
                        frontier_phi_79_pred_3 = _3003;
                        frontier_phi_79_pred_4 = _3002;
                        frontier_phi_79_pred_5 = _3001;
                    }
                    else
                    {
                        float _3210;
                        float _3211;
                        float _3212;
                        float _3213;
                        float _3214;
                        float _3215;
                        float _3505;
                        float _3506;
                        float _3507;
                        float _3508;
                        float _3509;
                        float _3510;
                        float _3223 = _3001;
                        float _3224 = _3002;
                        float _3225 = _3003;
                        float _3226 = _3004;
                        float _3227 = _3005;
                        float _3228 = _3006;
                        uint _3229 = _3016;
                        uint _3230;
                        vec4 _3255;
                        float _3256;
                        vec4 _3271;
                        vec3 _3283;
                        vec4 _3298;
                        vec4 _3314;
                        float _3361;
                        bool _3362;
                        for (;;)
                        {
                            uint _3240 = ((_3007 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3229));
                            _3230 = (_3229 + 4294967295u) & _3229;
                            uint _3242 = _3240 * 40u;
                            _3255 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3242)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3242 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3242 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3242 + 3u)).x));
                            _3256 = _3255.w;
                            uint _3258 = (_3240 * 40u) + 4u;
                            _3271 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3258)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3258 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3258 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3258 + 3u)).x));
                            uint _3273 = (_3240 * 40u) + 8u;
                            _3283 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3273)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3273 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3273 + 2u)).x));
                            uint _3285 = (_3240 * 40u) + 16u;
                            _3298 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3285)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3285 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3285 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3285 + 3u)).x));
                            uint _3301 = (_3240 * 40u) + 20u;
                            _3314 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3301)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3301 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3301 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3301 + 3u)).x));
                            uint _3317 = (_3240 * 40u) + 24u;
                            vec4 _3330 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3317)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3317 + 3u)).x));
                            uint _3336 = (_3240 * 40u) + 28u;
                            vec4 _3349 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3336)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3336 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3336 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3336 + 3u)).x));
                            _3361 = fma(_2525, _3349.z, fma(_2524, _3349.y, _3349.x * _2523)) + _3349.w;
                            _3362 = !((fma(_2525, _3330.z, fma(_2524, _3330.y, _3330.x * _2523)) + _3330.w) <= 0.0);
                            float frontier_phi_85_pred;
                            float frontier_phi_85_pred_1;
                            float frontier_phi_85_pred_2;
                            float frontier_phi_85_pred_3;
                            float frontier_phi_85_pred_4;
                            float frontier_phi_85_pred_5;
                            if (_3362)
                            {
                                float _3389 = _3255.x - _2523;
                                float _3390 = _3255.y - _2524;
                                float _3391 = _3255.z - _2525;
                                float _3392 = dot(vec3(_3389, _3390, _3391), vec3(_3389, _3390, _3391));
                                float _3395 = inversesqrt(_3392);
                                float _3396 = _3395 * _3389;
                                float _3397 = _3395 * _3390;
                                float _3398 = _3395 * _3391;
                                float _3402 = 1.0 - (_3392 / (_3256 * _3256));
                                float _4519 = isnan(0.0) ? _3402 : (isnan(_3402) ? 0.0 : max(_3402, 0.0));
                                float _3403 = isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0));
                                float _3407 = sqrt(_3392) * _3271.w;
                                float _3409 = 1.39999997615814208984375 / (_3407 + 1.39999997615814208984375);
                                float _3410 = _3409 * _3409;
                                float _3413 = ((1.0 - _3410) * dot(vec3(_3396, _3397, _3398), vec3(_630, _633, _636))) + _3410;
                                float _3416 = _3407 * _3407;
                                float _3420 = (fma(_2525, _3298.z, fma(_2524, _3298.y, _3298.x * _2523)) + _3298.w) / _3361;
                                float _3421 = (fma(_2525, _3314.z, fma(_2524, _3314.y, _3314.x * _2523)) + _3314.w) / _3361;
                                float _3425 = 1.0 - dot(vec2(_3420, _3421), vec2(_3420, _3421));
                                float _4535 = isnan(0.0) ? _3425 : (isnan(_3425) ? 0.0 : max(_3425, 0.0));
                                float _3426 = isnan(1.0) ? _4535 : (isnan(_4535) ? 1.0 : min(_4535, 1.0));
                                float _3427 = _3426 * (((isnan(0.0) ? _3413 : (isnan(_3413) ? 0.0 : max(_3413, 0.0))) * _3403) / ((_3416 * 0.699999988079071044921875) + 1.0));
                                float _3439 = exp2(log2(1.0 / ((_3416 * 3.5) + 5.0)) * 0.25);
                                float _3440 = 1.0 - _834;
                                float _3447 = sqrt(1.0 - ((1.0 - (_3440 * _3440)) * (1.0 - (_3439 * _3439))));
                                float _3448 = _3447 * _3447;
                                float _3449 = _3448 * _3448;
                                float _3450 = _3396 - _2867;
                                float _3451 = _3397 - _2868;
                                float _3452 = _3398 - _2869;
                                float _3456 = inversesqrt(dot(vec3(_3450, _3451, _3452), vec3(_3450, _3451, _3452)));
                                float _3460 = dot(vec3(_630, _633, _636), vec3((-0.0) - _2867, (-0.0) - _2868, (-0.0) - _2869));
                                float _4546 = isnan(0.0) ? _3460 : (isnan(_3460) ? 0.0 : max(_3460, 0.0));
                                float _3463 = isnan(1.0) ? _4546 : (isnan(_4546) ? 1.0 : min(_4546, 1.0));
                                float _3464 = dot(vec3(_630, _633, _636), vec3(_3456 * _3450, _3456 * _3451, _3456 * _3452));
                                float _4557 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                                float _3467 = isnan(1.0) ? _4557 : (isnan(_4557) ? 1.0 : min(_4557, 1.0));
                                float _3471 = ((_3467 * _3467) * (_3449 + (-1.0))) + 1.0;
                                float _3472 = _3409 * _3448;
                                float _3473 = _3472 * _3472;
                                float _3479 = ((1.0 - _3473) * dot(vec3(_630, _633, _636), vec3(_3396, _3397, _3398))) + _3473;
                                float _4568 = isnan(0.0) ? _3479 : (isnan(_3479) ? 0.0 : max(_3479, 0.0));
                                float _3480 = isnan(1.0) ? _4568 : (isnan(_4568) ? 1.0 : min(_4568, 1.0));
                                float _3481 = 1.0 - _3448;
                                float _3491 = (0.5 / (((_3480 * ((_3463 * _3481) + _3448)) + 9.9999999392252902907785028219223e-09) + (((_3480 * _3481) + _3448) * _3463))) * _3480;
                                float _4579 = isnan(0.0) ? _3491 : (isnan(_3491) ? 0.0 : max(_3491, 0.0));
                                float _3501 = (_3426 * _3403) * (((_3449 * 3.1415927410125732421875) * (isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0)))) / ((_3471 * _3471) * ((_3416 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_85_pred = _3427 * _3271.z;
                                frontier_phi_85_pred_1 = _3427 * _3271.y;
                                frontier_phi_85_pred_2 = _3427 * _3271.x;
                                frontier_phi_85_pred_3 = _3501 * _3283.z;
                                frontier_phi_85_pred_4 = _3501 * _3283.y;
                                frontier_phi_85_pred_5 = _3501 * _3283.x;
                            }
                            else
                            {
                                frontier_phi_85_pred = 0.0;
                                frontier_phi_85_pred_1 = 0.0;
                                frontier_phi_85_pred_2 = 0.0;
                                frontier_phi_85_pred_3 = 0.0;
                                frontier_phi_85_pred_4 = 0.0;
                                frontier_phi_85_pred_5 = 0.0;
                            }
                            _3510 = frontier_phi_85_pred;
                            _3509 = frontier_phi_85_pred_1;
                            _3508 = frontier_phi_85_pred_2;
                            _3507 = frontier_phi_85_pred_3;
                            _3506 = frontier_phi_85_pred_4;
                            _3505 = frontier_phi_85_pred_5;
                            _3213 = _3508 + _3226;
                            _3214 = _3509 + _3227;
                            _3215 = _3510 + _3228;
                            _3210 = _3505 + _3223;
                            _3211 = _3506 + _3224;
                            _3212 = _3507 + _3225;
                            if (_3230 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3223 = _3210;
                                _3224 = _3211;
                                _3225 = _3212;
                                _3226 = _3213;
                                _3227 = _3214;
                                _3228 = _3215;
                                _3229 = _3230;
                                continue;
                            }
                        }
                        frontier_phi_79_pred = _3215;
                        frontier_phi_79_pred_1 = _3214;
                        frontier_phi_79_pred_2 = _3213;
                        frontier_phi_79_pred_3 = _3212;
                        frontier_phi_79_pred_4 = _3211;
                        frontier_phi_79_pred_5 = _3210;
                    }
                    _2852 = frontier_phi_79_pred;
                    _2850 = frontier_phi_79_pred_1;
                    _2848 = frontier_phi_79_pred_2;
                    _2846 = frontier_phi_79_pred_3;
                    _2844 = frontier_phi_79_pred_4;
                    _2842 = frontier_phi_79_pred_5;
                    uint _3008 = _3007 + 1u;
                    if (_3008 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3001 = _2842;
                        _3002 = _2844;
                        _3003 = _2846;
                        _3004 = _2848;
                        _3005 = _2850;
                        _3006 = _2852;
                        _3007 = _3008;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _2848;
                frontier_phi_60_61_ladder_1 = _2852;
                frontier_phi_60_61_ladder_2 = _2850;
                frontier_phi_60_61_ladder_3 = _2846;
                frontier_phi_60_61_ladder_4 = _2844;
                frontier_phi_60_61_ladder_5 = _2842;
            }
            else
            {
                frontier_phi_60_61_ladder = _2718;
                frontier_phi_60_61_ladder_1 = _2722;
                frontier_phi_60_61_ladder_2 = _2720;
                frontier_phi_60_61_ladder_3 = _2716;
                frontier_phi_60_61_ladder_4 = _2714;
                frontier_phi_60_61_ladder_5 = _2712;
            }
            _2841 = frontier_phi_60_61_ladder_5;
            _2843 = frontier_phi_60_61_ladder_4;
            _2845 = frontier_phi_60_61_ladder_3;
            _2847 = frontier_phi_60_61_ladder;
            _2849 = frontier_phi_60_61_ladder_2;
            _2851 = frontier_phi_60_61_ladder_1;
        }
        float _2856 = isnan(1.0) ? _818 : (isnan(_818) ? 1.0 : min(_818, 1.0));
        _2581 = (_2856 * _2847) + _2018;
        _2583 = (_2856 * _2849) + _2020;
        _2585 = (_2856 * _2851) + _2022;
        _2587 = ((_2841 * _804) * _2856) + _2363;
        _2589 = ((_2843 * _805) * _2856) + _2365;
        _2591 = ((_2845 * _806) * _2856) + _2367;
    }
    else
    {
        _2581 = _2018;
        _2583 = _2020;
        _2585 = _2022;
        _2587 = _2363;
        _2589 = _2365;
        _2591 = _2367;
    }
    uint _2597 = _711 + uint(cbMatDynParam._m0[0u].w);
    float _2607 = ((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _447) * _460.x) * cbInstanceData._m0[_2597].x;
    float _2612 = ((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _447) * _460.y) * cbInstanceData._m0[_2597].y;
    float _2617 = ((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _447) * _460.z) * cbInstanceData._m0[_2597].z;
    float _4595 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _4606 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
    float _4617 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _4628 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _2635 = (((isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0))) * (_2581 + ((isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0))) * _818))) + ((_2587 + ((isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0))) * _1656)) * cbPerFrame._m0[3u].x)) + _2607;
    float _2637 = (_2612 + ((_2589 + ((isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))) * _1656)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0))) * (_2583 + ((isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0))) * _818)));
    float _2639 = (_2617 + ((_2591 + ((isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0))) * _1656)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0))) * (_2585 + ((isnan(0.0) ? _1586 : (isnan(_1586) ? 0.0 : max(_1586, 0.0))) * _818)));
    float _2640 = isnan(0.0) ? _2635 : (isnan(_2635) ? 0.0 : max(_2635, 0.0));
    float _2641 = isnan(0.0) ? _2637 : (isnan(_2637) ? 0.0 : max(_2637, 0.0));
    float _2642 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2648 = cbMtdParam._m0[2u].x * _2607;
    float _2649 = cbMtdParam._m0[2u].y * _2612;
    float _2650 = cbMtdParam._m0[2u].z * _2617;
    float _4654 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2652 = isnan(1.0) ? _4654 : (isnan(_4654) ? 1.0 : min(_4654, 1.0));
    float _2657 = cbInstanceData._m0[_709 + 6u].w * (isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0)));
    float _2662 = _606 / cbSceneParam._m0[86u].x;
    float _2663 = _607 / cbSceneParam._m0[86u].y;
    vec4 _2677 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2662, _2663, (log2((isnan(cbSceneParam._m0[77u].w) ? _527 : (isnan(_527) ? cbSceneParam._m0[77u].w : min(_527, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2679 = _2677.x;
    float _2680 = _2677.y;
    float _2681 = _2677.z;
    float _2682 = _2677.w;
    float _2774;
    float _2776;
    float _2778;
    float _2780;
    if (_527 > cbSceneParam._m0[78u].w)
    {
        float _2737 = isnan(_527) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _527 : min(cbSceneParam._m0[80u].w, _527));
        float _2738 = _2737 / _527;
        float _2749 = _2738 * _579;
        float _2750 = _580 * _2738;
        float _2751 = (-0.0) - _2750;
        float _2752 = _2738 * _581;
        float _2754 = (cbSceneParam._m0[77u].w * _2751) / _2737;
        float _2755 = _2754 + cbSceneParam._m0[79u].w;
        float _2756 = cbSceneParam._m0[79u].w - _2750;
        float _2762 = sqrt(((_2749 * _2749) + (_2750 * _2750)) + (_2752 * _2752));
        float _2765 = (1.0 - (cbSceneParam._m0[77u].w / _2737)) * _2762;
        float _2770 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2772 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2958;
        if (abs((_2751 - _2754) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2958 = ((((_2755 > 0.0) ? exp2(_2770 * _2755) : (2.0 - exp2(_2772 * _2755))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2765;
        }
        else
        {
            float _2902 = 1.0 / cbSceneParam._m0[80u].x;
            float _2903 = isnan(_2756) ? _2755 : (isnan(_2755) ? _2756 : max(_2755, _2756));
            float _2904 = isnan(_2756) ? _2755 : (isnan(_2755) ? _2756 : min(_2755, _2756));
            float _2913 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : min(_2903, 0.0));
            float _2914 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : min(_2904, 0.0));
            _2958 = ((abs(_2762 / _2751) * cbSceneParam._m0[80u].y) * ((((_2913 - _2914) * 2.0) - ((exp2(_2770 * (isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0)))) - exp2(_2770 * (isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0))))) * _2902)) - ((exp2(_2772 * _2913) - exp2(_2772 * _2914)) * _2902))) + (_2765 * cbSceneParam._m0[80u].z);
        }
        vec4 _2960 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2662, _2663, 1.0), 0.0);
        float _2969 = exp2((_2958 * (-1.44269502162933349609375)) * (1.0 - _2960.w));
        float _2970 = log2(_2969);
        float _2986 = log2(_2682);
        _2774 = (exp2(_2986 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].x)) * _2960.x) / cbSceneParam._m0[78u].x)) + _2679;
        _2776 = (exp2(_2986 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].y)) * _2960.y) / cbSceneParam._m0[78u].y)) + _2680;
        _2778 = (exp2(_2986 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2970 * cbSceneParam._m0[78u].z)) * _2960.z) / cbSceneParam._m0[78u].z)) + _2681;
        _2780 = _2969 * _2682;
    }
    else
    {
        _2774 = _2679;
        _2776 = _2680;
        _2778 = _2681;
        _2780 = _2682;
    }
    bool _2996;
    vec4 _2790;
    vec4 _2812;
    float _2814;
    float _2818;
    float _2819;
    float _2820;
    float _2823;
    float _2826;
    float _2829;
    float _2830;
    bool _2840;
    for (;;)
    {
        _2790 = cbMatDynParam._m0[0u];
        float _2792 = roundEven(_2790.y);
        bool _2793 = _2792 == 3.0;
        float _2794 = log2(_2780);
        float _2798 = exp2(_2794 * cbSceneParam._m0[78u].x);
        float _2799 = exp2(_2794 * cbSceneParam._m0[78u].y);
        float _2800 = exp2(_2794 * cbSceneParam._m0[78u].z);
        float _2801 = _2798 * _2640;
        float _2802 = _2799 * _2641;
        float _2803 = _2800 * _2642;
        float _2810 = _595 + (-0.5);
        _2812 = cbMtdParam._m0[1u];
        _2814 = _2812.y * _2810;
        float _2817 = (_2792 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2818 = _2817 * (_2793 ? _2801 : (_2801 + (cbSceneParam._m0[72u].w * _2774)));
        _2819 = _2817 * (_2793 ? _2802 : (_2802 + (cbSceneParam._m0[72u].w * _2776)));
        _2820 = _2817 * (_2793 ? _2803 : (_2803 + (cbSceneParam._m0[72u].w * _2778)));
        _2823 = ((_2648 * _2652) * _2798) * _2817;
        _2826 = ((_2649 * _2652) * _2799) * _2817;
        _2829 = ((_2650 * _2652) * _2800) * _2817;
        _2830 = _2810 * 0.999000012874603271484375;
        _2840 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2840)
        {
            if ((cbInstanceData._m0[_709 + 7u].x + _2830) < 0.5)
            {
                _2996 = true;
                break;
            }
        }
        uint _2937 = _711 + uint(_2790.w);
        if ((cbInstanceData._m0[_2937].w < 1.0) && ((cbInstanceData._m0[_2937].w + _2830) < 0.5))
        {
            _2996 = true;
            break;
        }
        if ((_2814 + _352) < _2812.x)
        {
            _2996 = true;
            break;
        }
        _2996 = false;
        break;
    }
    float _3201;
    if (_2996)
    {
        discard_state = true;
        _3201 = 0.0;
    }
    else
    {
        _3201 = _2657;
    }
    SV_Target.x = _2818;
    SV_Target.y = _2819;
    SV_Target.z = _2820;
    SV_Target.w = _3201;
    SV_Target_1.x = _2823;
    SV_Target_1.y = _2826;
    SV_Target_1.z = _2829;
    SV_Target_1.w = _2657;
    discard_exit();
}


