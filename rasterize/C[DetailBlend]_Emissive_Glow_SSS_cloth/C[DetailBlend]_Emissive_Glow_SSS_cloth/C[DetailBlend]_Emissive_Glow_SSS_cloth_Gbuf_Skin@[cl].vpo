#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    uint _79 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    float _184 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _186 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _194 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _436;
    float _437;
    float _438;
    float _439;
    float _440;
    float _441;
    float _442;
    float _443;
    float _444;
    float _445;
    float _446;
    float _447;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _220 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
        precise float _224 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _229 = isnan(_224) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _224 : max(0.001000000047497451305389404296875, _224));
        precise float _231 = BLENDWEIGHT.x / _229;
        precise float _232 = BLENDWEIGHT.y / _229;
        precise float _233 = BLENDWEIGHT.z / _229;
        precise float _234 = BLENDWEIGHT.w / _229;
        uvec4 _241 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_220)).x * 13u) + 4u]);
        uint _242 = _241.x;
        uint _244 = (_242 + uint(float(BLENDINDICES.x))) * 3u;
        uint _251 = _244 + 1u;
        uint _258 = _244 + 2u;
        precise float _265 = _231 * cbObjMatrix._m0[_244].x;
        precise float _266 = _231 * cbObjMatrix._m0[_251].x;
        precise float _267 = _231 * cbObjMatrix._m0[_258].x;
        precise float _268 = _231 * cbObjMatrix._m0[_244].y;
        precise float _269 = _231 * cbObjMatrix._m0[_251].y;
        precise float _270 = _231 * cbObjMatrix._m0[_258].y;
        precise float _271 = _231 * cbObjMatrix._m0[_244].z;
        precise float _272 = _231 * cbObjMatrix._m0[_251].z;
        precise float _273 = _231 * cbObjMatrix._m0[_258].z;
        precise float _274 = _231 * cbObjMatrix._m0[_244].w;
        precise float _275 = _231 * cbObjMatrix._m0[_251].w;
        precise float _276 = _231 * cbObjMatrix._m0[_258].w;
        uint _279 = (_242 + uint(float(BLENDINDICES.y))) * 3u;
        uint _286 = _279 + 1u;
        uint _293 = _279 + 2u;
        precise float _300 = _232 * cbObjMatrix._m0[_279].x;
        precise float _301 = _232 * cbObjMatrix._m0[_286].x;
        precise float _302 = _232 * cbObjMatrix._m0[_293].x;
        precise float _303 = _232 * cbObjMatrix._m0[_279].y;
        precise float _304 = _232 * cbObjMatrix._m0[_286].y;
        precise float _305 = _232 * cbObjMatrix._m0[_293].y;
        precise float _306 = _232 * cbObjMatrix._m0[_279].z;
        precise float _307 = _232 * cbObjMatrix._m0[_286].z;
        precise float _308 = _232 * cbObjMatrix._m0[_293].z;
        precise float _309 = _232 * cbObjMatrix._m0[_279].w;
        precise float _310 = _232 * cbObjMatrix._m0[_286].w;
        precise float _311 = _232 * cbObjMatrix._m0[_293].w;
        precise float _312 = _265 + _300;
        precise float _313 = _266 + _301;
        precise float _314 = _267 + _302;
        precise float _315 = _268 + _303;
        precise float _316 = _269 + _304;
        precise float _317 = _270 + _305;
        precise float _318 = _271 + _306;
        precise float _319 = _272 + _307;
        precise float _320 = _273 + _308;
        precise float _321 = _274 + _309;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        uint _326 = (_242 + uint(float(BLENDINDICES.z))) * 3u;
        uint _333 = _326 + 1u;
        uint _340 = _326 + 2u;
        precise float _347 = _233 * cbObjMatrix._m0[_326].x;
        precise float _348 = _233 * cbObjMatrix._m0[_333].x;
        precise float _349 = _233 * cbObjMatrix._m0[_340].x;
        precise float _350 = _233 * cbObjMatrix._m0[_326].y;
        precise float _351 = _233 * cbObjMatrix._m0[_333].y;
        precise float _352 = _233 * cbObjMatrix._m0[_340].y;
        precise float _353 = _233 * cbObjMatrix._m0[_326].z;
        precise float _354 = _233 * cbObjMatrix._m0[_333].z;
        precise float _355 = _233 * cbObjMatrix._m0[_340].z;
        precise float _356 = _233 * cbObjMatrix._m0[_326].w;
        precise float _357 = _233 * cbObjMatrix._m0[_333].w;
        precise float _358 = _233 * cbObjMatrix._m0[_340].w;
        precise float _359 = _312 + _347;
        precise float _360 = _313 + _348;
        precise float _361 = _314 + _349;
        precise float _362 = _315 + _350;
        precise float _363 = _316 + _351;
        precise float _364 = _317 + _352;
        precise float _365 = _318 + _353;
        precise float _366 = _319 + _354;
        precise float _367 = _320 + _355;
        precise float _368 = _321 + _356;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        uint _373 = (_242 + uint(float(BLENDINDICES.w))) * 3u;
        uint _380 = _373 + 1u;
        uint _387 = _373 + 2u;
        precise float _394 = _234 * cbObjMatrix._m0[_373].x;
        precise float _395 = _234 * cbObjMatrix._m0[_380].x;
        precise float _396 = _234 * cbObjMatrix._m0[_387].x;
        precise float _397 = _234 * cbObjMatrix._m0[_373].y;
        precise float _398 = _234 * cbObjMatrix._m0[_380].y;
        precise float _399 = _234 * cbObjMatrix._m0[_387].y;
        precise float _400 = _234 * cbObjMatrix._m0[_373].z;
        precise float _401 = _234 * cbObjMatrix._m0[_380].z;
        precise float _402 = _234 * cbObjMatrix._m0[_387].z;
        precise float _403 = _234 * cbObjMatrix._m0[_373].w;
        precise float _404 = _234 * cbObjMatrix._m0[_380].w;
        precise float _405 = _234 * cbObjMatrix._m0[_387].w;
        precise float _406 = _359 + _394;
        precise float _407 = _360 + _395;
        precise float _408 = _361 + _396;
        precise float _409 = _362 + _397;
        precise float _410 = _363 + _398;
        precise float _411 = _364 + _399;
        precise float _412 = _365 + _400;
        precise float _413 = _366 + _401;
        precise float _414 = _367 + _402;
        precise float _415 = _368 + _403;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        _436 = _406;
        _437 = _409;
        _438 = _412;
        _439 = _415;
        _440 = _407;
        _441 = _410;
        _442 = _413;
        _443 = _416;
        _444 = _408;
        _445 = _411;
        _446 = _414;
        _447 = _417;
    }
    else
    {
        _436 = cbvModelParam._m0[0u].x;
        _437 = cbvModelParam._m0[0u].y;
        _438 = cbvModelParam._m0[0u].z;
        _439 = cbvModelParam._m0[0u].w;
        _440 = cbvModelParam._m0[1u].x;
        _441 = cbvModelParam._m0[1u].y;
        _442 = cbvModelParam._m0[1u].z;
        _443 = cbvModelParam._m0[1u].w;
        _444 = cbvModelParam._m0[2u].x;
        _445 = cbvModelParam._m0[2u].y;
        _446 = cbvModelParam._m0[2u].z;
        _447 = cbvModelParam._m0[2u].w;
    }
    precise float _448 = POSITION.x * _436;
    precise float _449 = POSITION.y * _437;
    precise float _450 = _449 + _448;
    precise float _451 = POSITION.z * _438;
    precise float _452 = _451 + _450;
    precise float _453 = 1.0 * _439;
    precise float _454 = _453 + _452;
    precise float _455 = POSITION.x * _440;
    precise float _456 = POSITION.y * _441;
    precise float _457 = _456 + _455;
    precise float _458 = POSITION.z * _442;
    precise float _459 = _458 + _457;
    precise float _460 = 1.0 * _443;
    precise float _461 = _460 + _459;
    precise float _462 = POSITION.x * _444;
    precise float _463 = POSITION.y * _445;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.z * _446;
    precise float _466 = _465 + _464;
    precise float _467 = 1.0 * _447;
    precise float _468 = _467 + _466;
    uint _482 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _79;
    precise float _501 = _454 - cbSceneParam._m0[3u].x;
    precise float _502 = _461 - cbSceneParam._m0[3u].y;
    precise float _503 = _468 - cbSceneParam._m0[3u].z;
    precise float _531 = _501 * cbSceneParam._m0[24u].x;
    precise float _532 = _502 * cbSceneParam._m0[24u].y;
    precise float _533 = _532 + _531;
    precise float _534 = _503 * cbSceneParam._m0[24u].z;
    precise float _535 = _534 + _533;
    precise float _536 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _537 = _536 + _535;
    precise float _538 = _501 * cbSceneParam._m0[25u].x;
    precise float _539 = _502 * cbSceneParam._m0[25u].y;
    precise float _540 = _539 + _538;
    precise float _541 = _503 * cbSceneParam._m0[25u].z;
    precise float _542 = _541 + _540;
    precise float _543 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _544 = _543 + _542;
    precise float _545 = _501 * cbSceneParam._m0[26u].x;
    precise float _546 = _502 * cbSceneParam._m0[26u].y;
    precise float _547 = _546 + _545;
    precise float _548 = _503 * cbSceneParam._m0[26u].z;
    precise float _549 = _548 + _547;
    precise float _550 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _551 = _550 + _549;
    precise float _552 = _501 * cbSceneParam._m0[27u].x;
    precise float _553 = _502 * cbSceneParam._m0[27u].y;
    precise float _554 = _553 + _552;
    precise float _555 = _503 * cbSceneParam._m0[27u].z;
    precise float _556 = _555 + _554;
    precise float _557 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _558 = _557 + _556;
    gl_Position.x = _537;
    gl_Position.y = _544;
    gl_Position.z = _551;
    gl_Position.w = _558;
    POSITION_1_1.x = _537;
    POSITION_1_1.y = _544;
    POSITION_1_1.z = _551;
    POSITION_1_1.w = _558;
    NORMAL_2.x = fma(_187, _438, fma(_186, _437, _436 * _184));
    NORMAL_2.y = fma(_187, _442, fma(_186, _441, _440 * _184));
    NORMAL_2.z = fma(_187, _446, fma(_186, _445, _444 * _184));
    NORMAL_2.w = float(texelFetch(g_InstanceIndexBuffer, int(_482)).x);
    TANGENT_2.x = fma(_196, _438, fma(_195, _437, _436 * _194));
    TANGENT_2.y = fma(_196, _442, fma(_195, _441, _440 * _194));
    TANGENT_2.z = fma(_196, _446, fma(_195, _445, _444 * _194));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
}


