#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 12) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 5) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12;
layout(set = 0, binding = 6) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 8) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1507;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _211 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _212 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _213 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _219 = inversesqrt(dot(vec3(_211, _212, _213), vec3(_211, _212, _213)));
    float _226 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _227 = _226 * NORMAL.x;
    float _228 = _226 * NORMAL.y;
    float _229 = _226 * NORMAL.z;
    float _233 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _241;
    float _242;
    float _243;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _241 = (-0.0) - _227;
        _242 = (-0.0) - _228;
        _243 = (-0.0) - _229;
    }
    else
    {
        _241 = _227;
        _242 = _228;
        _243 = _229;
    }
    float _287 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _297 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _287);
    float _298 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _287);
    float _299 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _287);
    vec4 _312 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _317 = _312.z;
    float _318 = _312.w;
    float _324 = exp2(log2(_317 * 22.0) * 260.0);
    float _325 = isnan(0.0) ? _324 : (isnan(_324) ? 0.0 : max(_324, 0.0));
    float _326 = isnan(1.0) ? _325 : (isnan(_325) ? 1.0 : min(_325, 1.0));
    vec4 _340 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_2, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _350 = cbMtdParam._m0[10u].x * _340.x;
    float _351 = cbMtdParam._m0[10u].y * _340.y;
    float _352 = cbMtdParam._m0[10u].z * _340.z;
    vec4 _364 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _391 = exp2(log2(1.0 - _318) * 8.0);
    vec4 _403 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_10, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _419 = exp2(log2(_318) * 8.0);
    vec4 _431 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_4, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    vec4 _455 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _463 = (((((cbMtdParam._m0[9u].x * _364.x) - _350) * _326) + _350) * 4.55000019073486328125) * _455.x;
    float _465 = (((((cbMtdParam._m0[9u].y * _364.y) - _351) * _326) + _351) * 4.55000019073486328125) * _455.y;
    float _467 = (((((cbMtdParam._m0[9u].z * _364.z) - _352) * _326) + _352) * 4.55000019073486328125) * _455.z;
    float _474 = (((cbMtdParam._m0[13u].x * _403.x) - _463) * _391) + _463;
    float _475 = (((cbMtdParam._m0[13u].y * _403.y) - _465) * _391) + _465;
    float _476 = (((cbMtdParam._m0[13u].z * _403.z) - _467) * _391) + _467;
    float _483 = (((cbMtdParam._m0[11u].x * _431.x) - _474) * _419) + _474;
    float _484 = (((cbMtdParam._m0[11u].y * _431.y) - _475) * _419) + _475;
    float _485 = (((cbMtdParam._m0[11u].z * _431.z) - _476) * _419) + _476;
    float _486 = _455.w * _364.w;
    float _516 = (((texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w)).x - cbMtdParam._m0[17u].x) + cbMtdParam._m0[16u].x) * _326) + cbMtdParam._m0[17u].x;
    float _520 = ((cbMtdParam._m0[15u].z - _516) * _391) + _516;
    float _523 = ((cbMtdParam._m0[16u].w - _520) * _419) + _520;
    vec4 _535 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_5, SS_BumpMap), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _537 = _535.x;
    float _538 = _535.y;
    float _544 = cbMtdParam._m0[14u].y + _535.z;
    vec4 _556 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    vec4 _578 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.x) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.y) + cbTextureTilingScale._m0[5u].w));
    vec4 _596 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_9, SS_BumpMap), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _609 = (((_326 * (_317 + (-0.5))) + 0.5) * 2.0) * ((((_556.z - _544) + cbMtdParam._m0[14u].x) * _326) + _544);
    float _613 = (((_578.z - _609) + cbMtdParam._m0[15u].y) * _391) + _609;
    float _617 = (((_596.z - _613) + cbMtdParam._m0[14u].w) * _419) + _613;
    float _631 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3888 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0));
    float _632 = isnan(1.0) ? _3888 : (isnan(_3888) ? 1.0 : min(_3888, 1.0));
    float _637 = (_632 * _632) * (3.0 - (_632 * 2.0));
    vec4 _650 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _658 = (_312.x * 2.0) + (-1.0);
    float _659 = (_312.y * 2.0) + (-1.0);
    float _660 = dot(vec2(_658, _659), vec2(_658, _659));
    float _3899 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _665 = sqrt(1.0 - (isnan(1.0) ? _3899 : (isnan(_3899) ? 1.0 : min(_3899, 1.0))));
    float _670 = ((_556.x - _537) * _326) + _537;
    float _671 = ((_556.y - _538) * _326) + _538;
    float _676 = ((_578.x - _670) * _391) + _670;
    float _677 = ((_578.y - _671) * _391) + _671;
    float _690 = (cbMtdParam._m0[14u].z * (((((_596.x - _676) * _419) + _676) * 2.0) + (-1.0))) + _658;
    float _691 = (cbMtdParam._m0[14u].z * (((((_596.y - _677) * _419) + _677) * 2.0) + (-1.0))) + _659;
    float _694 = fma(_665, _241, fma(_691, _233 * TANGENT.x, (_219 * _211) * _690));
    float _697 = fma(_665, _242, fma(_691, _233 * TANGENT.y, (_219 * _212) * _690));
    float _700 = fma(_665, _243, fma(_691, _233 * TANGENT.z, (_219 * _213) * _690));
    float _704 = inversesqrt(dot(vec3(_694, _697, _700), vec3(_694, _697, _700)));
    float _705 = _704 * _694;
    float _706 = _704 * _697;
    float _707 = _704 * _700;
    float _3910 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0));
    float _708 = isnan(1.0) ? _3910 : (isnan(_3910) ? 1.0 : min(_3910, 1.0));
    float _3921 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _709 = isnan(1.0) ? _3921 : (isnan(_3921) ? 1.0 : min(_3921, 1.0));
    float _3932 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _710 = isnan(1.0) ? _3932 : (isnan(_3932) ? 1.0 : min(_3932, 1.0));
    float _3943 = isnan(0.0) ? _484 : (isnan(_484) ? 0.0 : max(_484, 0.0));
    float _711 = isnan(1.0) ? _3943 : (isnan(_3943) ? 1.0 : min(_3943, 1.0));
    float _3954 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _712 = isnan(1.0) ? _3954 : (isnan(_3954) ? 1.0 : min(_3954, 1.0));
    float _3965 = isnan(0.0) ? _523 : (isnan(_523) ? 0.0 : max(_523, 0.0));
    float _713 = isnan(1.0) ? _3965 : (isnan(_3965) ? 1.0 : min(_3965, 1.0));
    float _721 = cbMatDynParam._m0[9u].x * _710;
    float _722 = cbMatDynParam._m0[9u].y * _711;
    float _723 = cbMatDynParam._m0[9u].z * _712;
    float _730 = inversesqrt(dot(vec3(_297, _298, _299), vec3(_297, _298, _299)));
    float _731 = _730 * _297;
    float _732 = _730 * _298;
    float _733 = _730 * _299;
    float _740 = abs(exp2(log2(dot(vec3(_705, _706, _707), vec3(_731, _732, _733))) * cbMatDynParam._m0[12u].x));
    float _741 = isnan(0.100000001490116119384765625) ? _740 : (isnan(_740) ? 0.100000001490116119384765625 : max(_740, 0.100000001490116119384765625));
    float _747 = ((isnan(0.699999988079071044921875) ? _741 : (isnan(_741) ? 0.699999988079071044921875 : min(_741, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _769 = 1.0 - cbMatDynParam._m0[8u].w;
    float _3986 = isnan(0.0) ? _769 : (isnan(_769) ? 0.0 : max(_769, 0.0));
    float _772 = 1.0 - cbMatDynParam._m0[7u].w;
    float _3997 = isnan(0.0) ? _772 : (isnan(_772) ? 0.0 : max(_772, 0.0));
    float _773 = isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0));
    float _776 = (((isnan(1.0) ? _3986 : (isnan(_3986) ? 1.0 : min(_3986, 1.0))) - _773) * _747) + _773;
    float _795 = dot(vec3(_705, _706, _707), vec3(0.0, -1.0, 0.0));
    float _4008 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _798 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
    float _805 = (_798 * _710) * cbMatDynParam._m0[11u].x;
    float _807 = (_798 * _711) * cbMatDynParam._m0[11u].y;
    float _809 = (_798 * _712) * cbMatDynParam._m0[11u].z;
    float _819 = dot(vec3(_731, _732, _733), vec3(_705, _706, _707)) * 2.0;
    float _829 = dot(vec3((-0.0) - (_731 - (_819 * _705)), (-0.0) - (_732 - (_819 * _706)), (-0.0) - (_733 - (_819 * _707))), vec3(0.0, -1.0, 0.0));
    float _4019 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
    float _836 = exp2(log2(isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0))) * 4.0);
    float _862 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _902 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _911 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _902);
    float _912 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _902);
    float _913 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _902);
    float _917 = inversesqrt(dot(vec3(_911, _912, _913), vec3(_911, _912, _913)));
    float _918 = _911 * _917;
    float _919 = _912 * _917;
    float _920 = _913 * _917;
    float _926 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _927 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _929 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _931 = _929.w;
    float _949 = fma(_707, cbSceneParam._m0[5u].z, fma(_706, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _705));
    float _952 = fma(_707, cbSceneParam._m0[6u].z, fma(_706, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _705));
    float _955 = fma(_707, cbSceneParam._m0[7u].z, fma(_706, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _705));
    vec4 _957 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _959 = _957.x;
    float _971 = (((_957.y - _709) + (_957.w * _709)) * cbMtdParam._m0[3u].x) + _709;
    vec4 _972 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _988 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_959 * _959)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _972.z;
    float _996 = (((cbMatDynParam._m0[15u].x - _713) * cbMatDynParam._m0[15u].w) * _988) + _713;
    float _1004 = ((_988 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _971)) + _971;
    uint _1028 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1029 = _1028 + 9u;
    uint _1030 = _1029 + uint(cbMatDynParam._m0[0u].w);
    float _1036 = (cbMtdParam._m0[0u].x * _721) * cbInstanceData._m0[_1030].x;
    float _1037 = (cbMtdParam._m0[0u].y * _722) * cbInstanceData._m0[_1030].y;
    float _1038 = (cbMtdParam._m0[0u].z * _723) * cbInstanceData._m0[_1030].z;
    float _4030 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1039 = isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0));
    float _4041 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
    float _1040 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
    float _4052 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1041 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
    vec4 _1042 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _1047 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1058 = (((_1047.x - _996) + (_1047.w * _996)) * cbMtdParam._m0[3u].x) + _996;
    float _1071 = (cbMtdParam._m0[3u].x * (((_1039 * _931) - _1039) + _1042.x)) + _1039;
    float _1072 = (cbMtdParam._m0[3u].x * (((_1040 * _931) - _1040) + _1042.y)) + _1040;
    float _1073 = (cbMtdParam._m0[3u].x * (((_1041 * _931) - _1041) + _1042.z)) + _1041;
    vec4 _1074 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1087 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_996 * (_721 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_996 * (_722 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_996 * (_723 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _1074.z;
    float _1091 = _1087 * cbMatDynParam._m0[13u].w;
    float _1101 = (_1091 * (cbMatDynParam._m0[13u].x - _1071)) + _1071;
    float _1102 = (_1091 * (cbMatDynParam._m0[13u].y - _1072)) + _1072;
    float _1103 = (_1091 * (cbMatDynParam._m0[13u].z - _1073)) + _1073;
    float _1111 = ((_1087 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _1058)) + _1058;
    float _1112 = 1.0 - _1111;
    float _1113 = _1112 * _1101;
    float _1114 = _1112 * _1102;
    float _1115 = _1112 * _1103;
    float _1119 = (_1101 + (-0.039999999105930328369140625)) * _1111;
    float _1120 = (_1102 + (-0.039999999105930328369140625)) * _1111;
    float _1121 = (_1103 + (-0.039999999105930328369140625)) * _1111;
    float _1122 = _1119 + 0.039999999105930328369140625;
    float _1123 = _1120 + 0.039999999105930328369140625;
    float _1124 = _1121 + 0.039999999105930328369140625;
    vec4 _1133 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _926, cbSceneParam._m0[86u].y * _927));
    float _1136 = _1133.x * TEXCOORD_4;
    float _1137 = dot(vec3(_705, _706, _707), vec3(_918, _919, _920));
    float _1140 = _1137 * 2.0;
    float _1144 = (_1140 * _705) - _918;
    float _1145 = (_1140 * _706) - _919;
    float _1146 = (_1140 * _707) - _920;
    float _1150 = abs(dot(vec3(_918, _919, _920), vec3(_705, _706, _707)));
    float _4063 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
    float _1152 = sqrt(_1004);
    float _1163 = exp2((_1152 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1152 * 3.0));
    float _1169 = (1.0 - _1163) * ((_1152 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1170 = _1163 * _1152;
    float _1198 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1202 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1206 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1506;
    float _1508;
    float _1509;
    float _1510;
    float _1511;
    float _1512;
    float _1513;
    float _1514;
    float _1515;
    float _1516;
    float _1517;
    float _1518;
    float _1519;
    float _1520;
    float _1521;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1233 = fma(_1206, cbModelParam._m0[26u].z, fma(_1202, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1198));
        float _1237 = fma(_1206, cbModelParam._m0[27u].z, fma(_1202, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1198));
        float _1241 = fma(_1206, cbModelParam._m0[28u].z, fma(_1202, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1198));
        float _1264 = _1198 + _705;
        float _1265 = _1202 + _706;
        float _1266 = _1206 + _707;
        float _1276 = fma(_1266, cbModelParam._m0[26u].z, fma(_1265, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1264)) - _1233;
        float _1277 = fma(_1266, cbModelParam._m0[27u].z, fma(_1265, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1264)) - _1237;
        float _1278 = fma(_1266, cbModelParam._m0[28u].z, fma(_1265, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1264)) - _1241;
        float _1282 = inversesqrt(dot(vec3(_1276, _1277, _1278), vec3(_1276, _1277, _1278)));
        float _1295 = ((_1282 * _1276) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1233 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1296 = ((_1282 * _1277) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1237 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1297 = ((_1282 * _1278) / cbModelParam._m0[34u].z) + ((((((_1241 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1300 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1307 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1314 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        vec4 _1321 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1295, _1296, _1297), 0.0);
        float _1334 = exp2((_1300.w + (-0.5)) * 20.0) * 2.0;
        float _1335 = _1334 * (_1300.x + (-0.5));
        float _1336 = _1334 * (_1300.y + (-0.5));
        float _1337 = _1334 * (_1300.z + (-0.5));
        float _1344 = exp2((_1307.w + (-0.5)) * 20.0) * 2.0;
        float _1345 = _1344 * (_1307.x + (-0.5));
        float _1346 = _1344 * (_1307.y + (-0.5));
        float _1347 = _1344 * (_1307.z + (-0.5));
        float _1354 = exp2((_1314.w + (-0.5)) * 20.0) * 2.0;
        float _1355 = _1354 * (_1314.x + (-0.5));
        float _1356 = _1354 * (_1314.y + (-0.5));
        float _1357 = _1354 * (_1314.z + (-0.5));
        float _1364 = exp2((_1321.w + (-0.5)) * 20.0) * 2.0;
        float _1365 = _1364 * (_1321.x + (-0.5));
        float _1366 = _1364 * (_1321.y + (-0.5));
        float _1367 = _1364 * (_1321.z + (-0.5));
        float _1368 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        float _1369 = isnan(0.0) ? _1366 : (isnan(_1366) ? 0.0 : max(_1366, 0.0));
        float _1370 = isnan(0.0) ? _1367 : (isnan(_1367) ? 0.0 : max(_1367, 0.0));
        float _1371 = _1335 * 0.5;
        float _1372 = _1345 * 0.5;
        float _1373 = _1355 * 0.5;
        float _1374 = dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373));
        float _1379 = (_1374 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1374);
        float _1388 = (dot(vec3(_705, _706, _707), vec3(_1379 * _1371, _1379 * _1372, _1379 * _1373)) + 1.0) * 0.5;
        float _4089 = isnan(0.0) ? _1388 : (isnan(_1388) ? 0.0 : max(_1388, 0.0));
        float _1398 = sqrt(((_1372 * _1372) + (_1371 * _1371)) + (_1373 * _1373)) / (_1368 + 9.9999997473787516355514526367188e-06);
        float _4100 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4111 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4111 : (isnan(_4111) ? 1.0 : min(_4111, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4089 : (isnan(_4089) ? 1.0 : min(_4089, 1.0))) * (_1400 + 1.0))) + _1405) * _1368;
        float _1415 = _1336 * 0.5;
        float _1416 = _1346 * 0.5;
        float _1417 = _1356 * 0.5;
        float _1418 = dot(vec3(_1415, _1416, _1417), vec3(_1415, _1416, _1417));
        float _1423 = (_1418 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1418);
        float _1431 = (dot(vec3(_705, _706, _707), vec3(_1423 * _1415, _1423 * _1416, _1423 * _1417)) + 1.0) * 0.5;
        float _4122 = isnan(0.0) ? _1431 : (isnan(_1431) ? 0.0 : max(_1431, 0.0));
        float _1440 = sqrt(((_1416 * _1416) + (_1415 * _1415)) + (_1417 * _1417)) / (_1369 + 9.9999997473787516355514526367188e-06);
        float _4133 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
        float _1441 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
        float _1442 = _1441 * 2.0;
        float _1446 = (1.0 - _1441) / (_1441 + 1.0);
        float _4144 = isnan(0.0) ? _1446 : (isnan(_1446) ? 0.0 : max(_1446, 0.0));
        float _1447 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
        float _1456 = ((((1.0 - _1447) * (_1442 + 2.0)) * exp2(log2(isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0))) * (_1442 + 1.0))) + _1447) * _1369;
        float _1457 = _1337 * 0.5;
        float _1458 = _1347 * 0.5;
        float _1459 = _1357 * 0.5;
        float _1460 = dot(vec3(_1457, _1458, _1459), vec3(_1457, _1458, _1459));
        float _1465 = (_1460 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1460);
        float _1473 = (dot(vec3(_705, _706, _707), vec3(_1465 * _1457, _1465 * _1458, _1465 * _1459)) + 1.0) * 0.5;
        float _4155 = isnan(0.0) ? _1473 : (isnan(_1473) ? 0.0 : max(_1473, 0.0));
        float _1482 = sqrt(((_1458 * _1458) + (_1457 * _1457)) + (_1459 * _1459)) / (_1370 + 9.9999997473787516355514526367188e-06);
        float _4166 = isnan(0.0) ? _1482 : (isnan(_1482) ? 0.0 : max(_1482, 0.0));
        float _1483 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
        float _1484 = _1483 * 2.0;
        float _1488 = (1.0 - _1483) / (_1483 + 1.0);
        float _4177 = isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0));
        float _1489 = isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0));
        float _1498 = ((((1.0 - _1489) * (_1484 + 2.0)) * exp2(log2(isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0))) * (_1484 + 1.0))) + _1489) * _1370;
        _1506 = _1337;
        _1508 = _1336;
        _1509 = _1335;
        _1510 = _1347;
        _1511 = _1346;
        _1512 = _1345;
        _1513 = _1357;
        _1514 = _1356;
        _1515 = _1355;
        _1516 = _1370;
        _1517 = _1369;
        _1518 = _1368;
        _1519 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
        _1520 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0)));
        _1521 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1498 : (isnan(_1498) ? 0.0 : max(_1498, 0.0)));
    }
    else
    {
        _1506 = _1507;
        _1508 = _1507;
        _1509 = _1507;
        _1510 = _1507;
        _1511 = _1507;
        _1512 = _1507;
        _1513 = _1507;
        _1514 = _1507;
        _1515 = _1507;
        _1516 = _1507;
        _1517 = _1507;
        _1518 = _1507;
        _1519 = 0.0;
        _1520 = 0.0;
        _1521 = 0.0;
    }
    float _1816;
    float _1817;
    float _1818;
    float _1819;
    float _1820;
    float _1821;
    float _1822;
    float _1823;
    float _1824;
    float _1825;
    float _1826;
    float _1827;
    float _1828;
    float _1829;
    float _1830;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1547 = fma(_1206, cbModelParam._m0[30u].z, fma(_1202, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1198));
        float _1551 = fma(_1206, cbModelParam._m0[31u].z, fma(_1202, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1198));
        float _1555 = fma(_1206, cbModelParam._m0[32u].z, fma(_1202, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1198));
        float _1578 = _1198 + _705;
        float _1579 = _1202 + _706;
        float _1580 = _1206 + _707;
        float _1590 = fma(_1580, cbModelParam._m0[30u].z, fma(_1579, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1578)) - _1547;
        float _1591 = fma(_1580, cbModelParam._m0[31u].z, fma(_1579, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1578)) - _1551;
        float _1592 = fma(_1580, cbModelParam._m0[32u].z, fma(_1579, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1578)) - _1555;
        float _1596 = inversesqrt(dot(vec3(_1590, _1591, _1592), vec3(_1590, _1591, _1592)));
        float _1609 = ((_1596 * _1590) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1547 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1610 = ((_1596 * _1591) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1551 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1611 = ((_1596 * _1592) / cbModelParam._m0[35u].z) + ((((((_1555 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1613 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1609, _1610, _1611), 0.0);
        vec4 _1620 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1609, _1610, _1611), 0.0);
        vec4 _1627 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1609, _1610, _1611), 0.0);
        vec4 _1634 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1609, _1610, _1611), 0.0);
        float _1646 = exp2((_1613.w + (-0.5)) * 20.0) * 2.0;
        float _1647 = _1646 * (_1613.x + (-0.5));
        float _1648 = _1646 * (_1613.y + (-0.5));
        float _1649 = _1646 * (_1613.z + (-0.5));
        float _1656 = exp2((_1620.w + (-0.5)) * 20.0) * 2.0;
        float _1657 = _1656 * (_1620.x + (-0.5));
        float _1658 = _1656 * (_1620.y + (-0.5));
        float _1659 = _1656 * (_1620.z + (-0.5));
        float _1666 = exp2((_1627.w + (-0.5)) * 20.0) * 2.0;
        float _1667 = _1666 * (_1627.x + (-0.5));
        float _1668 = _1666 * (_1627.y + (-0.5));
        float _1669 = _1666 * (_1627.z + (-0.5));
        float _1676 = exp2((_1634.w + (-0.5)) * 20.0) * 2.0;
        float _1677 = _1676 * (_1634.x + (-0.5));
        float _1678 = _1676 * (_1634.y + (-0.5));
        float _1679 = _1676 * (_1634.z + (-0.5));
        float _1680 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
        float _1681 = isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0));
        float _1682 = isnan(0.0) ? _1679 : (isnan(_1679) ? 0.0 : max(_1679, 0.0));
        float _1683 = _1647 * 0.5;
        float _1684 = _1657 * 0.5;
        float _1685 = _1667 * 0.5;
        float _1686 = dot(vec3(_1683, _1684, _1685), vec3(_1683, _1684, _1685));
        float _1691 = (_1686 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1686);
        float _1699 = (dot(vec3(_705, _706, _707), vec3(_1691 * _1683, _1691 * _1684, _1691 * _1685)) + 1.0) * 0.5;
        float _4218 = isnan(0.0) ? _1699 : (isnan(_1699) ? 0.0 : max(_1699, 0.0));
        float _1708 = sqrt(((_1684 * _1684) + (_1683 * _1683)) + (_1685 * _1685)) / (_1680 + 9.9999997473787516355514526367188e-06);
        float _4229 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
        float _1709 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
        float _1710 = _1709 * 2.0;
        float _1714 = (1.0 - _1709) / (_1709 + 1.0);
        float _4240 = isnan(0.0) ? _1714 : (isnan(_1714) ? 0.0 : max(_1714, 0.0));
        float _1715 = isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0));
        float _1724 = ((((1.0 - _1715) * (_1710 + 2.0)) * exp2(log2(isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0))) * (_1710 + 1.0))) + _1715) * _1680;
        float _1725 = _1648 * 0.5;
        float _1726 = _1658 * 0.5;
        float _1727 = _1668 * 0.5;
        float _1728 = dot(vec3(_1725, _1726, _1727), vec3(_1725, _1726, _1727));
        float _1733 = (_1728 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1728);
        float _1741 = (dot(vec3(_705, _706, _707), vec3(_1733 * _1725, _1733 * _1726, _1733 * _1727)) + 1.0) * 0.5;
        float _4251 = isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0));
        float _1750 = sqrt(((_1726 * _1726) + (_1725 * _1725)) + (_1727 * _1727)) / (_1681 + 9.9999997473787516355514526367188e-06);
        float _4262 = isnan(0.0) ? _1750 : (isnan(_1750) ? 0.0 : max(_1750, 0.0));
        float _1751 = isnan(1.0) ? _4262 : (isnan(_4262) ? 1.0 : min(_4262, 1.0));
        float _1752 = _1751 * 2.0;
        float _1756 = (1.0 - _1751) / (_1751 + 1.0);
        float _4273 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
        float _1757 = isnan(1.0) ? _4273 : (isnan(_4273) ? 1.0 : min(_4273, 1.0));
        float _1766 = ((((1.0 - _1757) * (_1752 + 2.0)) * exp2(log2(isnan(1.0) ? _4251 : (isnan(_4251) ? 1.0 : min(_4251, 1.0))) * (_1752 + 1.0))) + _1757) * _1681;
        float _1767 = _1649 * 0.5;
        float _1768 = _1659 * 0.5;
        float _1769 = _1669 * 0.5;
        float _1770 = dot(vec3(_1767, _1768, _1769), vec3(_1767, _1768, _1769));
        float _1775 = (_1770 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1770);
        float _1783 = (dot(vec3(_705, _706, _707), vec3(_1775 * _1767, _1775 * _1768, _1775 * _1769)) + 1.0) * 0.5;
        float _4284 = isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0));
        float _1792 = sqrt(((_1768 * _1768) + (_1767 * _1767)) + (_1769 * _1769)) / (_1682 + 9.9999997473787516355514526367188e-06);
        float _4295 = isnan(0.0) ? _1792 : (isnan(_1792) ? 0.0 : max(_1792, 0.0));
        float _1793 = isnan(1.0) ? _4295 : (isnan(_4295) ? 1.0 : min(_4295, 1.0));
        float _1794 = _1793 * 2.0;
        float _1798 = (1.0 - _1793) / (_1793 + 1.0);
        float _4306 = isnan(0.0) ? _1798 : (isnan(_1798) ? 0.0 : max(_1798, 0.0));
        float _1799 = isnan(1.0) ? _4306 : (isnan(_4306) ? 1.0 : min(_4306, 1.0));
        float _1808 = ((((1.0 - _1799) * (_1794 + 2.0)) * exp2(log2(isnan(1.0) ? _4284 : (isnan(_4284) ? 1.0 : min(_4284, 1.0))) * (_1794 + 1.0))) + _1799) * _1682;
        _1816 = _1649;
        _1817 = _1648;
        _1818 = _1647;
        _1819 = _1659;
        _1820 = _1658;
        _1821 = _1657;
        _1822 = _1669;
        _1823 = _1668;
        _1824 = _1667;
        _1825 = _1682;
        _1826 = _1681;
        _1827 = _1680;
        _1828 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)));
        _1829 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1766 : (isnan(_1766) ? 0.0 : max(_1766, 0.0)));
        _1830 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0)));
    }
    else
    {
        _1816 = _1507;
        _1817 = _1507;
        _1818 = _1507;
        _1819 = _1507;
        _1820 = _1507;
        _1821 = _1507;
        _1822 = _1507;
        _1823 = _1507;
        _1824 = _1507;
        _1825 = _1507;
        _1826 = _1507;
        _1827 = _1507;
        _1828 = 0.0;
        _1829 = 0.0;
        _1830 = 0.0;
    }
    float _1840 = (cbModelParam._m0[1u].x * (_1828 - _1519)) + _1519;
    float _1841 = (cbModelParam._m0[1u].x * (_1829 - _1520)) + _1520;
    float _1842 = (cbModelParam._m0[1u].x * (_1830 - _1521)) + _1521;
    float _1863 = fma(_1842, cbSceneParam._m0[89u].z, fma(_1841, cbSceneParam._m0[89u].y, _1840 * cbSceneParam._m0[89u].x));
    float _1866 = fma(_1842, cbSceneParam._m0[90u].z, fma(_1841, cbSceneParam._m0[90u].y, _1840 * cbSceneParam._m0[90u].x));
    float _1869 = fma(_1842, cbSceneParam._m0[91u].z, fma(_1841, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1840));
    float _1884 = _1144 * 0.5;
    float _1885 = _1145 * 0.5;
    float _1886 = _1146 * 0.5;
    float _1887 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1818, _1821, _1824, _1827));
    float _1890 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1817, _1820, _1823, _1826));
    float _1893 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1816, _1819, _1822, _1825));
    float _1924;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1900 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1506, _1510, _1513, _1516));
        float _1904 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1508, _1511, _1514, _1517));
        float _1908 = dot(vec4(_1884, _1885, _1886, 1.0), vec4(_1509, _1512, _1515, _1518));
        float _1915 = dot(vec4(cbModelParam._m0[39u]), vec4(_1884, _1885, _1886, 1.0));
        _1924 = dot(vec3(isnan(0.0) ? _1908 : (isnan(_1908) ? 0.0 : max(_1908, 0.0)), isnan(0.0) ? _1904 : (isnan(_1904) ? 0.0 : max(_1904, 0.0)), isnan(0.0) ? _1900 : (isnan(_1900) ? 0.0 : max(_1900, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1915) ? 0.0 : (isnan(0.0) ? _1915 : max(0.0, _1915))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1924 = 1.0;
    }
    float _1935;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1926 = dot(vec4(cbModelParam._m0[40u]), vec4(_1884, _1885, _1886, 1.0));
        _1935 = dot(vec3(isnan(0.0) ? _1887 : (isnan(_1887) ? 0.0 : max(_1887, 0.0)), isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0)), isnan(0.0) ? _1893 : (isnan(_1893) ? 0.0 : max(_1893, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1926) ? 0.0 : (isnan(0.0) ? _1926 : max(0.0, _1926))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1935 = 1.0;
    }
    float _1939 = (_1935 * cbModelParam._m0[1u].x) + (_1924 * (1.0 - cbModelParam._m0[1u].x));
    float _1949 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1004);
    float _1950 = isnan(_1949) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1949 : min(cbModelParam._m0[25u].z, _1949));
    float _2030;
    float _2032;
    float _2034;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1997 = fma(_1206, cbModelParam._m0[13u].z, fma(_1202, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1198)) + cbModelParam._m0[13u].w;
        float _2001 = fma(_1206, cbModelParam._m0[14u].z, fma(_1202, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1198)) + cbModelParam._m0[14u].w;
        float _2005 = fma(_1206, cbModelParam._m0[15u].z, fma(_1202, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1198)) + cbModelParam._m0[15u].w;
        float _2008 = fma(_1146, cbModelParam._m0[13u].z, fma(_1145, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1144));
        float _2011 = fma(_1146, cbModelParam._m0[14u].z, fma(_1145, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1144));
        float _2014 = fma(_1146, cbModelParam._m0[15u].z, fma(_1145, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1144));
        float _2042;
        if (_2008 > 0.0)
        {
            _2042 = abs((1.0 - _1997) / _2008);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_2008 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1997 + 1.0) / _2008);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _2042 = frontier_phi_16_14_ladder;
        }
        float _2246;
        if (_2011 > 0.0)
        {
            _2246 = abs((1.0 - _2001) / _2011);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_2011 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_2001 + 1.0) / _2011);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2246 = frontier_phi_25_21_ladder;
        }
        float _2500;
        if (_2014 > 0.0)
        {
            _2500 = abs((1.0 - _2005) / _2014);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_2014 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_2005 + 1.0) / _2014);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2500 = frontier_phi_37_32_ladder;
        }
        float _2502 = isnan(_2246) ? _2042 : (isnan(_2042) ? _2246 : min(_2042, _2246));
        float _2503 = isnan(_2500) ? _2502 : (isnan(_2502) ? _2500 : min(_2502, _2500));
        float _2507 = (_2503 * _2008) + _1997;
        float _2508 = (_2503 * _2011) + _2001;
        float _2509 = (_2503 * _2014) + _2005;
        float _2510 = _2503 * 9.9999997473787516355514526367188e-05;
        float _2512 = (-1.0) - _2510;
        float _2514 = _2510 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2509 > _2514) || ((_2509 < _2512) || ((_2508 > _2514) || ((_2508 < _2512) || ((_2507 < _2512) || (_2507 > _2514))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2637 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2509, cbModelParam._m0[9u].z, fma(_2508, cbModelParam._m0[9u].y, _2507 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2509, cbModelParam._m0[10u].z, fma(_2508, cbModelParam._m0[10u].y, _2507 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2509, cbModelParam._m0[11u].z, fma(_2508, cbModelParam._m0[11u].y, _2507 * cbModelParam._m0[11u].x))), _1950);
            frontier_phi_15_37_ladder = _2637.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2637.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2637.x * cbModelParam._m0[1u].y;
        }
        _2030 = frontier_phi_15_37_ladder_2;
        _2032 = frontier_phi_15_37_ladder_1;
        _2034 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _2018 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1144, _1145, _1146), _1950);
        _2030 = _2018.x * cbModelParam._m0[1u].y;
        _2032 = _2018.y * cbModelParam._m0[1u].y;
        _2034 = _2018.z * cbModelParam._m0[1u].y;
    }
    float _2038 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1004);
    float _2039 = isnan(_2038) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _2038 : min(cbModelParam._m0[25u].w, _2038));
    float _2130;
    float _2132;
    float _2134;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2094 = fma(_1206, cbModelParam._m0[21u].z, fma(_1202, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1198)) + cbModelParam._m0[21u].w;
        float _2098 = fma(_1206, cbModelParam._m0[22u].z, fma(_1202, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1198)) + cbModelParam._m0[22u].w;
        float _2102 = fma(_1206, cbModelParam._m0[23u].z, fma(_1202, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1198)) + cbModelParam._m0[23u].w;
        float _2105 = fma(_1146, cbModelParam._m0[21u].z, fma(_1145, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1144));
        float _2108 = fma(_1146, cbModelParam._m0[22u].z, fma(_1145, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1144));
        float _2111 = fma(_1146, cbModelParam._m0[23u].z, fma(_1145, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1144));
        float _2251;
        if (_2105 > 0.0)
        {
            _2251 = abs((1.0 - _2094) / _2105);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_2105 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_2094 + 1.0) / _2105);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _2251 = frontier_phi_27_23_ladder;
        }
        float _2527;
        if (_2108 > 0.0)
        {
            _2527 = abs((1.0 - _2098) / _2108);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_2108 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_2098 + 1.0) / _2108);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2527 = frontier_phi_39_34_ladder;
        }
        float _2740;
        if (_2111 > 0.0)
        {
            _2740 = abs((1.0 - _2102) / _2111);
        }
        else
        {
            float frontier_phi_48_45_ladder;
            if (_2111 < 0.0)
            {
                frontier_phi_48_45_ladder = abs((_2102 + 1.0) / _2111);
            }
            else
            {
                frontier_phi_48_45_ladder = 5000.0;
            }
            _2740 = frontier_phi_48_45_ladder;
        }
        float _2742 = isnan(_2527) ? _2251 : (isnan(_2251) ? _2527 : min(_2251, _2527));
        float _2743 = isnan(_2740) ? _2742 : (isnan(_2742) ? _2740 : min(_2742, _2740));
        float _2747 = (_2743 * _2105) + _2094;
        float _2748 = (_2743 * _2108) + _2098;
        float _2749 = (_2743 * _2111) + _2102;
        float _2750 = _2743 * 9.9999997473787516355514526367188e-05;
        float _2751 = (-1.0) - _2750;
        float _2753 = _2750 + 1.0;
        float frontier_phi_24_48_ladder;
        float frontier_phi_24_48_ladder_1;
        float frontier_phi_24_48_ladder_2;
        if ((_2749 > _2753) || ((_2749 < _2751) || ((_2748 > _2753) || ((_2748 < _2751) || ((_2747 < _2751) || (_2747 > _2753))))))
        {
            frontier_phi_24_48_ladder = 0.0;
            frontier_phi_24_48_ladder_1 = 0.0;
            frontier_phi_24_48_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2983 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2749, cbModelParam._m0[17u].z, fma(_2748, cbModelParam._m0[17u].y, _2747 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2749, cbModelParam._m0[18u].z, fma(_2748, cbModelParam._m0[18u].y, _2747 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2749, cbModelParam._m0[19u].z, fma(_2748, cbModelParam._m0[19u].y, _2747 * cbModelParam._m0[19u].x))), _2039);
            frontier_phi_24_48_ladder = _2983.z * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_1 = _2983.y * cbModelParam._m0[1u].z;
            frontier_phi_24_48_ladder_2 = _2983.x * cbModelParam._m0[1u].z;
        }
        _2130 = frontier_phi_24_48_ladder_2;
        _2132 = frontier_phi_24_48_ladder_1;
        _2134 = frontier_phi_24_48_ladder;
    }
    else
    {
        vec4 _2114 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1144, _1145, _1146), _2039);
        _2130 = _2114.x * cbModelParam._m0[1u].z;
        _2132 = _2114.y * cbModelParam._m0[1u].z;
        _2134 = _2114.z * cbModelParam._m0[1u].z;
    }
    float _2147 = (((_1169 * _1122) + _1170) * _1136) * ((cbModelParam._m0[1u].w * (_2130 - _2030)) + _2030);
    float _2149 = (((_1169 * _1123) + _1170) * _1136) * ((cbModelParam._m0[1u].w * (_2132 - _2032)) + _2032);
    float _2151 = (((_1169 * _1124) + _1170) * _1136) * ((cbModelParam._m0[1u].w * (_2134 - _2034)) + _2034);
    float _2154 = fma(_2151, cbSceneParam._m0[89u].z, fma(_2149, cbSceneParam._m0[89u].y, _2147 * cbSceneParam._m0[89u].x));
    float _2157 = fma(_2151, cbSceneParam._m0[90u].z, fma(_2149, cbSceneParam._m0[90u].y, _2147 * cbSceneParam._m0[90u].x));
    float _2160 = fma(_2151, cbSceneParam._m0[91u].z, fma(_2149, cbSceneParam._m0[91u].y, _2147 * cbSceneParam._m0[91u].x));
    uvec4 _2170 = floatBitsToUint(cbInstanceData._m0[_1028 + 5u]);
    uint _2172 = _2170.x * 14u;
    uint _2173 = _2172 + 13u;
    float _2180 = _1136 + (-1.0);
    float _2185 = (cbLight._m0[_2173].x * _2180) + 1.0;
    float _2186 = (cbLight._m0[_2173].y * _2180) + 1.0;
    float _2187 = (cbLight._m0[_2173].z * _2180) + 1.0;
    float _2188 = (cbLight._m0[_2173].w * _2180) + 1.0;
    uint _2189 = _2172 + 5u;
    float _2195 = isnan(1.0) ? _2186 : (isnan(_2186) ? 1.0 : min(_2186, 1.0));
    uint _2199 = _2172 + 4u;
    float _2205 = isnan(1.0) ? _2185 : (isnan(_2185) ? 1.0 : min(_2185, 1.0));
    uint _2209 = _2172 | 1u;
    float _2220 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_705, _706, _707));
    float _2223 = dot(vec3(cbLight._m0[_2209].xyz), vec3(_705, _706, _707));
    float _4442 = isnan(0.0) ? _2220 : (isnan(_2220) ? 0.0 : max(_2220, 0.0));
    float _4453 = isnan(0.0) ? _2223 : (isnan(_2223) ? 0.0 : max(_2223, 0.0));
    float _2228 = (isnan(1.0) ? _4442 : (isnan(_4442) ? 1.0 : min(_4442, 1.0))) * 0.3183098733425140380859375;
    float _2230 = (isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * 0.3183098733425140380859375;
    float _2237 = ((cbLight._m0[_2189].x * _2195) * _2230) + ((cbLight._m0[_2199].x * _2205) * _2228);
    float _2238 = ((_2195 * cbLight._m0[_2189].y) * _2230) + ((_2205 * cbLight._m0[_2199].y) * _2228);
    float _2239 = ((_2195 * cbLight._m0[_2189].z) * _2230) + ((_2205 * cbLight._m0[_2199].z) * _2228);
    uvec4 _2243 = floatBitsToUint(cbLight._m0[_2172 + 12u]);
    bool _2245 = _2243.x == 0u;
    float _2256;
    float _2258;
    float _2260;
    if (_2245)
    {
        _2256 = _2237;
        _2258 = _2238;
        _2260 = _2239;
    }
    else
    {
        uint _2264 = _2172 + 6u;
        float _2280 = (dot(vec3(cbLight._m0[_2172 + 2u].xyz), vec3(_705, _706, _707)) * 0.5) + 0.5;
        float _2281 = _2280 * _2280;
        float _4464 = isnan(0.0) ? _2281 : (isnan(_2281) ? 0.0 : max(_2281, 0.0));
        float _2282 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _2283 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2256 = (((cbLight._m0[_2264].x * 0.3183098733425140380859375) * _2282) * _2283) + _2237;
        _2258 = (((cbLight._m0[_2264].y * 0.3183098733425140380859375) * _2282) * _2283) + _2238;
        _2260 = (((cbLight._m0[_2264].z * 0.3183098733425140380859375) * _2282) * _2283) + _2239;
    }
    bool _2263 = _2243.y == 0u;
    float _2301;
    float _2303;
    float _2305;
    if (_2263)
    {
        _2301 = _2256;
        _2303 = _2258;
        _2305 = _2260;
    }
    else
    {
        uint _2471 = _2172 + 7u;
        float _2487 = (dot(vec3(cbLight._m0[_2172 + 3u].xyz), vec3(_705, _706, _707)) * 0.5) + 0.5;
        float _2488 = _2487 * _2487;
        float _4480 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
        float _2489 = isnan(1.0) ? _4480 : (isnan(_4480) ? 1.0 : min(_4480, 1.0));
        float _2490 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2301 = (((cbLight._m0[_2471].x * 0.3183098733425140380859375) * _2489) * _2490) + _2256;
        _2303 = (((cbLight._m0[_2471].y * 0.3183098733425140380859375) * _2489) * _2490) + _2258;
        _2305 = (((cbLight._m0[_2471].z * 0.3183098733425140380859375) * _2489) * _2490) + _2260;
    }
    uint _2308 = _2172 + 8u;
    float _2321 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2172].w)) * _1004) * 0.949999988079071044921875);
    float _2322 = _2321 * _2321;
    float _2323 = cbLight._m0[_2172].x + _918;
    float _2324 = cbLight._m0[_2172].y + _919;
    float _2325 = cbLight._m0[_2172].z + _920;
    float _2329 = inversesqrt(dot(vec3(_2323, _2324, _2325), vec3(_2323, _2324, _2325)));
    float _2330 = _2329 * _2323;
    float _2331 = _2329 * _2324;
    float _2332 = _2329 * _2325;
    float _2333 = dot(vec3(_705, _706, _707), vec3(cbLight._m0[_2172].xyz));
    float _4496 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
    float _2336 = isnan(1.0) ? _4496 : (isnan(_4496) ? 1.0 : min(_4496, 1.0));
    float _4507 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
    float _2337 = isnan(1.0) ? _4507 : (isnan(_4507) ? 1.0 : min(_4507, 1.0));
    float _2338 = dot(vec3(_705, _706, _707), vec3(_2330, _2331, _2332));
    float _4518 = isnan(0.0) ? _2338 : (isnan(_2338) ? 0.0 : max(_2338, 0.0));
    float _2341 = isnan(1.0) ? _4518 : (isnan(_4518) ? 1.0 : min(_4518, 1.0));
    float _2342 = dot(vec3(cbLight._m0[_2172].xyz), vec3(_2330, _2331, _2332));
    float _4529 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
    float _2346 = _2322 * _2322;
    float _2350 = ((_2341 * _2341) * (_2346 + (-1.0))) + 1.0;
    float _2358 = exp2(log2(1.0 - (isnan(1.0) ? _4529 : (isnan(_4529) ? 1.0 : min(_4529, 1.0)))) * 5.0);
    float _2359 = 0.959999978542327880859375 - _1119;
    float _2361 = 0.959999978542327880859375 - _1120;
    float _2362 = 0.959999978542327880859375 - _1121;
    float _2369 = 1.0 - _2322;
    float _2380 = (0.5 / (((_2337 * ((_2336 * _2369) + _2322)) + 9.9999999392252902907785028219223e-09) + (((_2337 * _2369) + _2322) * _2336))) * _2336;
    float _4540 = isnan(0.0) ? _2380 : (isnan(_2380) ? 0.0 : max(_2380, 0.0));
    float _2382 = (isnan(1.0) ? _4540 : (isnan(_4540) ? 1.0 : min(_4540, 1.0))) * (_2346 / ((_2350 * _2350) * 3.141590118408203125));
    uint _2393 = _2172 + 9u;
    float _2404 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2209].w)) * _1004) * 0.949999988079071044921875);
    float _2405 = _2404 * _2404;
    float _2406 = cbLight._m0[_2209].x + _918;
    float _2407 = cbLight._m0[_2209].y + _919;
    float _2408 = cbLight._m0[_2209].z + _920;
    float _2412 = inversesqrt(dot(vec3(_2406, _2407, _2408), vec3(_2406, _2407, _2408)));
    float _2413 = _2412 * _2406;
    float _2414 = _2412 * _2407;
    float _2415 = _2412 * _2408;
    float _2416 = dot(vec3(_705, _706, _707), vec3(cbLight._m0[_2209].xyz));
    float _4551 = isnan(0.0) ? _2416 : (isnan(_2416) ? 0.0 : max(_2416, 0.0));
    float _2419 = isnan(1.0) ? _4551 : (isnan(_4551) ? 1.0 : min(_4551, 1.0));
    float _2420 = dot(vec3(_705, _706, _707), vec3(_2413, _2414, _2415));
    float _4562 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
    float _2423 = isnan(1.0) ? _4562 : (isnan(_4562) ? 1.0 : min(_4562, 1.0));
    float _2424 = dot(vec3(cbLight._m0[_2209].xyz), vec3(_2413, _2414, _2415));
    float _4573 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
    float _2428 = _2405 * _2405;
    float _2432 = ((_2423 * _2423) * (_2428 + (-1.0))) + 1.0;
    float _2439 = exp2(log2(1.0 - (isnan(1.0) ? _4573 : (isnan(_4573) ? 1.0 : min(_4573, 1.0)))) * 5.0);
    float _2446 = 1.0 - _2405;
    float _2456 = (0.5 / (((_2337 * ((_2419 * _2446) + _2405)) + 9.9999999392252902907785028219223e-09) + (((_2337 * _2446) + _2405) * _2419))) * _2419;
    float _4584 = isnan(0.0) ? _2456 : (isnan(_2456) ? 0.0 : max(_2456, 0.0));
    float _2458 = (isnan(1.0) ? _4584 : (isnan(_4584) ? 1.0 : min(_4584, 1.0))) * (_2428 / ((_2432 * _2432) * 3.141590118408203125));
    float _2468 = (((((_2439 * _2359) + _1122) * cbLight._m0[_2393].x) * _2458) * _2195) + (((((_2358 * _2359) + _1122) * cbLight._m0[_2308].x) * _2382) * _2205);
    float _2469 = (((((_2439 * _2361) + _1123) * cbLight._m0[_2393].y) * _2458) * _2195) + (((((_2358 * _2361) + _1123) * cbLight._m0[_2308].y) * _2382) * _2205);
    float _2470 = (((((_2439 * _2362) + _1124) * cbLight._m0[_2393].z) * _2458) * _2195) + (((((_2358 * _2362) + _1124) * cbLight._m0[_2308].z) * _2382) * _2205);
    float _2532;
    float _2534;
    float _2536;
    if (_2245)
    {
        _2532 = _2468;
        _2534 = _2469;
        _2536 = _2470;
    }
    else
    {
        uint _2538 = _2172 + 2u;
        uint _2542 = _2172 + 10u;
        float _2556 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2538].w)) * _1004) * 0.949999988079071044921875);
        float _2557 = _2556 * _2556;
        float _2558 = cbLight._m0[_2538].x + _918;
        float _2559 = cbLight._m0[_2538].y + _919;
        float _2560 = cbLight._m0[_2538].z + _920;
        float _2564 = inversesqrt(dot(vec3(_2558, _2559, _2560), vec3(_2558, _2559, _2560)));
        float _2565 = _2564 * _2558;
        float _2566 = _2564 * _2559;
        float _2567 = _2564 * _2560;
        float _2568 = dot(vec3(_705, _706, _707), vec3(cbLight._m0[_2538].xyz));
        float _4595 = isnan(0.0) ? _2568 : (isnan(_2568) ? 0.0 : max(_2568, 0.0));
        float _2571 = isnan(1.0) ? _4595 : (isnan(_4595) ? 1.0 : min(_4595, 1.0));
        float _2572 = dot(vec3(_705, _706, _707), vec3(_2565, _2566, _2567));
        float _4606 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
        float _2575 = isnan(1.0) ? _4606 : (isnan(_4606) ? 1.0 : min(_4606, 1.0));
        float _2576 = dot(vec3(cbLight._m0[_2538].xyz), vec3(_2565, _2566, _2567));
        float _4617 = isnan(0.0) ? _2576 : (isnan(_2576) ? 0.0 : max(_2576, 0.0));
        float _2580 = _2557 * _2557;
        float _2584 = ((_2575 * _2575) * (_2580 + (-1.0))) + 1.0;
        float _2591 = exp2(log2(1.0 - (isnan(1.0) ? _4617 : (isnan(_4617) ? 1.0 : min(_4617, 1.0)))) * 5.0);
        float _2598 = 1.0 - _2557;
        float _2608 = (0.5 / (((_2337 * ((_2571 * _2598) + _2557)) + 9.9999999392252902907785028219223e-09) + (((_2337 * _2598) + _2557) * _2571))) * _2571;
        float _4628 = isnan(0.0) ? _2608 : (isnan(_2608) ? 0.0 : max(_2608, 0.0));
        float _2610 = (isnan(1.0) ? _4628 : (isnan(_4628) ? 1.0 : min(_4628, 1.0))) * (_2580 / ((_2584 * _2584) * 3.141590118408203125));
        float _2611 = isnan(1.0) ? _2187 : (isnan(_2187) ? 1.0 : min(_2187, 1.0));
        _2532 = (((((_2591 * _2359) + _1122) * cbLight._m0[_2542].x) * _2610) * _2611) + _2468;
        _2534 = (((((_2591 * _2361) + _1123) * cbLight._m0[_2542].y) * _2610) * _2611) + _2469;
        _2536 = (((((_2591 * _2362) + _1124) * cbLight._m0[_2542].z) * _2610) * _2611) + _2470;
    }
    float _2646;
    float _2648;
    float _2650;
    if (_2263)
    {
        _2646 = _2532;
        _2648 = _2534;
        _2650 = _2536;
    }
    else
    {
        uint _2657 = _2172 + 3u;
        uint _2661 = _2172 + 11u;
        float _2675 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2657].w)) * _1004) * 0.949999988079071044921875);
        float _2676 = _2675 * _2675;
        float _2677 = cbLight._m0[_2657].x + _918;
        float _2678 = cbLight._m0[_2657].y + _919;
        float _2679 = cbLight._m0[_2657].z + _920;
        float _2683 = inversesqrt(dot(vec3(_2677, _2678, _2679), vec3(_2677, _2678, _2679)));
        float _2684 = _2683 * _2677;
        float _2685 = _2683 * _2678;
        float _2686 = _2683 * _2679;
        float _2687 = dot(vec3(_705, _706, _707), vec3(cbLight._m0[_2657].xyz));
        float _4644 = isnan(0.0) ? _2687 : (isnan(_2687) ? 0.0 : max(_2687, 0.0));
        float _2690 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
        float _2691 = dot(vec3(_705, _706, _707), vec3(_2684, _2685, _2686));
        float _4655 = isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0));
        float _2694 = isnan(1.0) ? _4655 : (isnan(_4655) ? 1.0 : min(_4655, 1.0));
        float _2695 = dot(vec3(cbLight._m0[_2657].xyz), vec3(_2684, _2685, _2686));
        float _4666 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
        float _2699 = _2676 * _2676;
        float _2703 = ((_2694 * _2694) * (_2699 + (-1.0))) + 1.0;
        float _2710 = exp2(log2(1.0 - (isnan(1.0) ? _4666 : (isnan(_4666) ? 1.0 : min(_4666, 1.0)))) * 5.0);
        float _2717 = 1.0 - _2676;
        float _2727 = (0.5 / (((_2337 * ((_2690 * _2717) + _2676)) + 9.9999999392252902907785028219223e-09) + (((_2337 * _2717) + _2676) * _2690))) * _2690;
        float _4677 = isnan(0.0) ? _2727 : (isnan(_2727) ? 0.0 : max(_2727, 0.0));
        float _2729 = (isnan(1.0) ? _4677 : (isnan(_4677) ? 1.0 : min(_4677, 1.0))) * (_2699 / ((_2703 * _2703) * 3.141590118408203125));
        float _2730 = isnan(1.0) ? _2188 : (isnan(_2188) ? 1.0 : min(_2188, 1.0));
        _2646 = (((((_2710 * _2359) + _1122) * cbLight._m0[_2661].x) * _2729) * _2730) + _2532;
        _2648 = (((((_2710 * _2361) + _1123) * cbLight._m0[_2661].y) * _2729) * _2730) + _2534;
        _2650 = (((((_2710 * _2362) + _1124) * cbLight._m0[_2661].z) * _2729) * _2730) + _2536;
    }
    float _2864;
    float _2866;
    float _2868;
    float _2870;
    float _2872;
    float _2874;
    if (_2170.y == 0u)
    {
        float _2805 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2806 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2805;
        float _2807 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2805;
        float _2808 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2805;
        uvec4 _2820 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2821 = _2820.x;
        uint _2832 = uint((float(_2820.y) * floor(float(uint(cbSceneParam._m0[85u].y * _927) / _2821))) + floor(float(uint(cbSceneParam._m0[85u].x * _926) / _2821)));
        float _2842 = (log2(_2808 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2843 = isnan(0.0) ? _2842 : (isnan(_2842) ? 0.0 : max(_2842, 0.0));
        uint _2846 = uint(isnan(14.0) ? _2843 : (isnan(_2843) ? 14.0 : min(_2843, 14.0)));
        uvec4 _2851 = texelFetch(g_lightClusterGridBuffer, int(((_2846 << 2u) + (_2832 << 6u)) >> 2u));
        uint _2852 = _2851.x;
        uint _2853 = _2820.z;
        float _2988;
        float _2990;
        float _2992;
        float _2994;
        float _2996;
        float _2998;
        if (((((1u << ((_2853 >> 4u) & 15u)) + 4294967295u) & _2852) == 0u) || ((_2853 & 240u) == 0u))
        {
            _2988 = 0.0;
            _2990 = 0.0;
            _2992 = 0.0;
            _2994 = 0.0;
            _2996 = 0.0;
            _2998 = 0.0;
        }
        else
        {
            float _2989;
            float _2991;
            float _2993;
            float _2995;
            float _2997;
            float _2999;
            float _3141 = 0.0;
            float _3142 = 0.0;
            float _3143 = 0.0;
            float _3144 = 0.0;
            float _3145 = 0.0;
            float _3146 = 0.0;
            uint _3147 = 0u;
            uint _3156;
            bool _3157;
            for (;;)
            {
                _3156 = texelFetch(g_lightClassification, int((((_2846 << 5u) + (_2832 << 9u)) + (_3147 << 2u)) >> 2u)).x;
                _3157 = _3156 == 0u;
                float frontier_phi_63_pred;
                float frontier_phi_63_pred_1;
                float frontier_phi_63_pred_2;
                float frontier_phi_63_pred_3;
                float frontier_phi_63_pred_4;
                float frontier_phi_63_pred_5;
                if (_3157)
                {
                    frontier_phi_63_pred = _3146;
                    frontier_phi_63_pred_1 = _3145;
                    frontier_phi_63_pred_2 = _3144;
                    frontier_phi_63_pred_3 = _3143;
                    frontier_phi_63_pred_4 = _3142;
                    frontier_phi_63_pred_5 = _3141;
                }
                else
                {
                    float _3265;
                    float _3266;
                    float _3267;
                    float _3268;
                    float _3269;
                    float _3270;
                    uint _3271;
                    _3265 = _3141;
                    _3266 = _3142;
                    _3267 = _3143;
                    _3268 = _3144;
                    _3269 = _3145;
                    _3270 = _3146;
                    _3271 = _3156;
                    float _3197;
                    float _3198;
                    float _3199;
                    float _3200;
                    float _3201;
                    float _3202;
                    for (;;)
                    {
                        uint _3275 = uint(findLSB(_3271)) + (_3147 << 5u);
                        uint _3272 = (_3271 + 4294967295u) & _3271;
                        uint _3277 = _3275 * 48u;
                        vec4 _3291 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3277)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3277 + 3u)).x));
                        uint _3297 = (_3275 * 48u) + 4u;
                        vec4 _3310 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3297)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3297 + 3u)).x));
                        uint _3316 = (_3275 * 48u) + 8u;
                        vec3 _3327 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3316)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3316 + 2u)).x));
                        float _3331 = _3291.x - _2806;
                        float _3332 = _3291.y - _2807;
                        float _3333 = _3291.z - _2808;
                        float _3334 = dot(vec3(_3331, _3332, _3333), vec3(_3331, _3332, _3333));
                        float _3337 = inversesqrt(_3334);
                        float _3338 = _3337 * _3331;
                        float _3339 = _3337 * _3332;
                        float _3340 = _3337 * _3333;
                        float _3341 = dot(vec3(_949, _952, _955), vec3(_3338, _3339, _3340));
                        float _3346 = 1.0 - (_3334 * _3291.w);
                        float _4703 = isnan(0.0) ? _3346 : (isnan(_3346) ? 0.0 : max(_3346, 0.0));
                        float _3347 = isnan(1.0) ? _4703 : (isnan(_4703) ? 1.0 : min(_4703, 1.0));
                        float _3348 = sqrt(_3334) * _3310.w;
                        float _3351 = 1.39999997615814208984375 / (_3348 + 1.39999997615814208984375);
                        float _3352 = _3351 * _3351;
                        float _3355 = ((1.0 - _3352) * _3341) + _3352;
                        float _3358 = _3348 * _3348;
                        float _3361 = ((isnan(0.0) ? _3355 : (isnan(_3355) ? 0.0 : max(_3355, 0.0))) * _3347) / ((_3358 * 0.699999988079071044921875) + 1.0);
                        float _3365 = (-0.0) - _2806;
                        float _3366 = (-0.0) - _2807;
                        float _3367 = (-0.0) - _2808;
                        float _3371 = inversesqrt(dot(vec3(_3365, _3366, _3367), vec3(_3365, _3366, _3367)));
                        float _3372 = _3371 * _3365;
                        float _3373 = _3371 * _3366;
                        float _3374 = _3371 * _3367;
                        float _3382 = exp2(log2(1.0 / ((_3358 * 3.5) + 5.0)) * 0.25);
                        float _3383 = 1.0 - _1152;
                        float _3390 = sqrt(1.0 - ((1.0 - (_3383 * _3383)) * (1.0 - (_3382 * _3382))));
                        float _3391 = _3390 * _3390;
                        float _3392 = _3391 * _3391;
                        float _3393 = _3372 + _3338;
                        float _3394 = _3373 + _3339;
                        float _3395 = _3374 + _3340;
                        float _3399 = inversesqrt(dot(vec3(_3393, _3394, _3395), vec3(_3393, _3394, _3395)));
                        float _3403 = dot(vec3(_949, _952, _955), vec3(_3372, _3373, _3374));
                        float _4719 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3406 = isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0));
                        float _3407 = dot(vec3(_949, _952, _955), vec3(_3399 * _3393, _3399 * _3394, _3399 * _3395));
                        float _4730 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3410 = isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0));
                        float _3414 = ((_3410 * _3410) * (_3392 + (-1.0))) + 1.0;
                        float _3415 = _3351 * _3391;
                        float _3416 = _3415 * _3415;
                        float _3419 = ((1.0 - _3416) * _3341) + _3416;
                        float _4741 = isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : max(_3419, 0.0));
                        float _3420 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
                        float _3421 = 1.0 - _3391;
                        float _3431 = (0.5 / (((_3420 * ((_3406 * _3421) + _3391)) + 9.9999999392252902907785028219223e-09) + (((_3420 * _3421) + _3391) * _3406))) * _3420;
                        float _4752 = isnan(0.0) ? _3431 : (isnan(_3431) ? 0.0 : max(_3431, 0.0));
                        float _3442 = (((_3392 * 3.1415927410125732421875) * (isnan(1.0) ? _4752 : (isnan(_4752) ? 1.0 : min(_4752, 1.0)))) / ((_3414 * _3414) * ((_3358 * 2.1991131305694580078125) + 3.141590118408203125))) * _3347;
                        _3200 = (_3361 * _3310.x) + _3268;
                        _3201 = (_3361 * _3310.y) + _3269;
                        _3202 = (_3361 * _3310.z) + _3270;
                        _3197 = (_3442 * _3327.x) + _3265;
                        _3198 = (_3442 * _3327.y) + _3266;
                        _3199 = (_3442 * _3327.z) + _3267;
                        if (_3272 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3265 = _3197;
                            _3266 = _3198;
                            _3267 = _3199;
                            _3268 = _3200;
                            _3269 = _3201;
                            _3270 = _3202;
                            _3271 = _3272;
                        }
                    }
                    frontier_phi_63_pred = _3202;
                    frontier_phi_63_pred_1 = _3201;
                    frontier_phi_63_pred_2 = _3200;
                    frontier_phi_63_pred_3 = _3199;
                    frontier_phi_63_pred_4 = _3198;
                    frontier_phi_63_pred_5 = _3197;
                }
                _2999 = frontier_phi_63_pred;
                _2997 = frontier_phi_63_pred_1;
                _2995 = frontier_phi_63_pred_2;
                _2993 = frontier_phi_63_pred_3;
                _2991 = frontier_phi_63_pred_4;
                _2989 = frontier_phi_63_pred_5;
                uint _3148 = _3147 + 1u;
                if (_3148 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3141 = _2989;
                    _3142 = _2991;
                    _3143 = _2993;
                    _3144 = _2995;
                    _3145 = _2997;
                    _3146 = _2999;
                    _3147 = _3148;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2988 = _2989;
            _2990 = _2991;
            _2992 = _2993;
            _2994 = _2995;
            _2996 = _2997;
            _2998 = _2999;
        }
        uvec4 _3002 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3003 = _3002.z;
        uint _3005 = (_3003 >> 8u) & 15u;
        float _3109;
        float _3111;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        if (((4294967295u << _3005) & _2852) == 0u)
        {
            _3109 = _2988;
            _3111 = _2990;
            _3113 = _2992;
            _3115 = _2994;
            _3117 = _2996;
            _3119 = _2998;
        }
        else
        {
            float _3134 = inversesqrt(dot(vec3(_2806, _2807, _2808), vec3(_2806, _2807, _2808)));
            float _3135 = _3134 * _2806;
            float _3136 = _3134 * _2807;
            float _3137 = _3134 * _2808;
            float frontier_phi_57_58_ladder;
            float frontier_phi_57_58_ladder_1;
            float frontier_phi_57_58_ladder_2;
            float frontier_phi_57_58_ladder_3;
            float frontier_phi_57_58_ladder_4;
            float frontier_phi_57_58_ladder_5;
            if (_3005 < ((_3003 >> 12u) & 15u))
            {
                float _3110;
                float _3112;
                float _3114;
                float _3116;
                float _3118;
                float _3120;
                float _3248 = _2988;
                float _3249 = _2990;
                float _3250 = _2992;
                float _3251 = _2994;
                float _3252 = _2996;
                float _3253 = _2998;
                uint _3254 = _3005;
                uint _3263;
                bool _3264;
                for (;;)
                {
                    _3263 = texelFetch(g_lightClassification, int((((_2846 << 5u) + (_2832 << 9u)) + (_3254 << 2u)) >> 2u)).x;
                    _3264 = _3263 == 0u;
                    float frontier_phi_69_pred;
                    float frontier_phi_69_pred_1;
                    float frontier_phi_69_pred_2;
                    float frontier_phi_69_pred_3;
                    float frontier_phi_69_pred_4;
                    float frontier_phi_69_pred_5;
                    if (_3264)
                    {
                        frontier_phi_69_pred = _3253;
                        frontier_phi_69_pred_1 = _3252;
                        frontier_phi_69_pred_2 = _3251;
                        frontier_phi_69_pred_3 = _3250;
                        frontier_phi_69_pred_4 = _3249;
                        frontier_phi_69_pred_5 = _3248;
                    }
                    else
                    {
                        float _3447;
                        float _3448;
                        float _3449;
                        float _3450;
                        float _3451;
                        float _3452;
                        float _3742;
                        float _3743;
                        float _3744;
                        float _3745;
                        float _3746;
                        float _3747;
                        float _3460 = _3248;
                        float _3461 = _3249;
                        float _3462 = _3250;
                        float _3463 = _3251;
                        float _3464 = _3252;
                        float _3465 = _3253;
                        uint _3466 = _3263;
                        uint _3467;
                        vec4 _3492;
                        float _3493;
                        vec4 _3508;
                        vec3 _3520;
                        vec4 _3535;
                        vec4 _3551;
                        float _3598;
                        bool _3599;
                        for (;;)
                        {
                            uint _3477 = ((_3254 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3466));
                            _3467 = (_3466 + 4294967295u) & _3466;
                            uint _3479 = _3477 * 40u;
                            _3492 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3479)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3479 + 3u)).x));
                            _3493 = _3492.w;
                            uint _3495 = (_3477 * 40u) + 4u;
                            _3508 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3495 + 3u)).x));
                            uint _3510 = (_3477 * 40u) + 8u;
                            _3520 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x));
                            uint _3522 = (_3477 * 40u) + 16u;
                            _3535 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3522)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3522 + 3u)).x));
                            uint _3538 = (_3477 * 40u) + 20u;
                            _3551 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3538)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3538 + 3u)).x));
                            uint _3554 = (_3477 * 40u) + 24u;
                            vec4 _3567 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3554)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3554 + 3u)).x));
                            uint _3573 = (_3477 * 40u) + 28u;
                            vec4 _3586 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3573)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3573 + 3u)).x));
                            _3598 = fma(_2808, _3586.z, fma(_2807, _3586.y, _3586.x * _2806)) + _3586.w;
                            _3599 = !((fma(_2808, _3567.z, fma(_2807, _3567.y, _3567.x * _2806)) + _3567.w) <= 0.0);
                            float frontier_phi_75_pred;
                            float frontier_phi_75_pred_1;
                            float frontier_phi_75_pred_2;
                            float frontier_phi_75_pred_3;
                            float frontier_phi_75_pred_4;
                            float frontier_phi_75_pred_5;
                            if (_3599)
                            {
                                float _3626 = _3492.x - _2806;
                                float _3627 = _3492.y - _2807;
                                float _3628 = _3492.z - _2808;
                                float _3629 = dot(vec3(_3626, _3627, _3628), vec3(_3626, _3627, _3628));
                                float _3632 = inversesqrt(_3629);
                                float _3633 = _3632 * _3626;
                                float _3634 = _3632 * _3627;
                                float _3635 = _3632 * _3628;
                                float _3639 = 1.0 - (_3629 / (_3493 * _3493));
                                float _4763 = isnan(0.0) ? _3639 : (isnan(_3639) ? 0.0 : max(_3639, 0.0));
                                float _3640 = isnan(1.0) ? _4763 : (isnan(_4763) ? 1.0 : min(_4763, 1.0));
                                float _3644 = sqrt(_3629) * _3508.w;
                                float _3646 = 1.39999997615814208984375 / (_3644 + 1.39999997615814208984375);
                                float _3647 = _3646 * _3646;
                                float _3650 = ((1.0 - _3647) * dot(vec3(_3633, _3634, _3635), vec3(_949, _952, _955))) + _3647;
                                float _3653 = _3644 * _3644;
                                float _3657 = (fma(_2808, _3535.z, fma(_2807, _3535.y, _3535.x * _2806)) + _3535.w) / _3598;
                                float _3658 = (fma(_2808, _3551.z, fma(_2807, _3551.y, _3551.x * _2806)) + _3551.w) / _3598;
                                float _3662 = 1.0 - dot(vec2(_3657, _3658), vec2(_3657, _3658));
                                float _4779 = isnan(0.0) ? _3662 : (isnan(_3662) ? 0.0 : max(_3662, 0.0));
                                float _3663 = isnan(1.0) ? _4779 : (isnan(_4779) ? 1.0 : min(_4779, 1.0));
                                float _3664 = _3663 * (((isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0))) * _3640) / ((_3653 * 0.699999988079071044921875) + 1.0));
                                float _3676 = exp2(log2(1.0 / ((_3653 * 3.5) + 5.0)) * 0.25);
                                float _3677 = 1.0 - _1152;
                                float _3684 = sqrt(1.0 - ((1.0 - (_3677 * _3677)) * (1.0 - (_3676 * _3676))));
                                float _3685 = _3684 * _3684;
                                float _3686 = _3685 * _3685;
                                float _3687 = _3633 - _3135;
                                float _3688 = _3634 - _3136;
                                float _3689 = _3635 - _3137;
                                float _3693 = inversesqrt(dot(vec3(_3687, _3688, _3689), vec3(_3687, _3688, _3689)));
                                float _3697 = dot(vec3(_949, _952, _955), vec3((-0.0) - _3135, (-0.0) - _3136, (-0.0) - _3137));
                                float _4790 = isnan(0.0) ? _3697 : (isnan(_3697) ? 0.0 : max(_3697, 0.0));
                                float _3700 = isnan(1.0) ? _4790 : (isnan(_4790) ? 1.0 : min(_4790, 1.0));
                                float _3701 = dot(vec3(_949, _952, _955), vec3(_3693 * _3687, _3693 * _3688, _3693 * _3689));
                                float _4801 = isnan(0.0) ? _3701 : (isnan(_3701) ? 0.0 : max(_3701, 0.0));
                                float _3704 = isnan(1.0) ? _4801 : (isnan(_4801) ? 1.0 : min(_4801, 1.0));
                                float _3708 = ((_3704 * _3704) * (_3686 + (-1.0))) + 1.0;
                                float _3709 = _3646 * _3685;
                                float _3710 = _3709 * _3709;
                                float _3716 = ((1.0 - _3710) * dot(vec3(_949, _952, _955), vec3(_3633, _3634, _3635))) + _3710;
                                float _4812 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3717 = isnan(1.0) ? _4812 : (isnan(_4812) ? 1.0 : min(_4812, 1.0));
                                float _3718 = 1.0 - _3685;
                                float _3728 = (0.5 / (((_3717 * ((_3700 * _3718) + _3685)) + 9.9999999392252902907785028219223e-09) + (((_3717 * _3718) + _3685) * _3700))) * _3717;
                                float _4823 = isnan(0.0) ? _3728 : (isnan(_3728) ? 0.0 : max(_3728, 0.0));
                                float _3738 = (_3663 * _3640) * (((_3686 * 3.1415927410125732421875) * (isnan(1.0) ? _4823 : (isnan(_4823) ? 1.0 : min(_4823, 1.0)))) / ((_3708 * _3708) * ((_3653 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_75_pred = _3664 * _3508.z;
                                frontier_phi_75_pred_1 = _3664 * _3508.y;
                                frontier_phi_75_pred_2 = _3664 * _3508.x;
                                frontier_phi_75_pred_3 = _3738 * _3520.z;
                                frontier_phi_75_pred_4 = _3738 * _3520.y;
                                frontier_phi_75_pred_5 = _3738 * _3520.x;
                            }
                            else
                            {
                                frontier_phi_75_pred = 0.0;
                                frontier_phi_75_pred_1 = 0.0;
                                frontier_phi_75_pred_2 = 0.0;
                                frontier_phi_75_pred_3 = 0.0;
                                frontier_phi_75_pred_4 = 0.0;
                                frontier_phi_75_pred_5 = 0.0;
                            }
                            _3747 = frontier_phi_75_pred;
                            _3746 = frontier_phi_75_pred_1;
                            _3745 = frontier_phi_75_pred_2;
                            _3744 = frontier_phi_75_pred_3;
                            _3743 = frontier_phi_75_pred_4;
                            _3742 = frontier_phi_75_pred_5;
                            _3450 = _3745 + _3463;
                            _3451 = _3746 + _3464;
                            _3452 = _3747 + _3465;
                            _3447 = _3742 + _3460;
                            _3448 = _3743 + _3461;
                            _3449 = _3744 + _3462;
                            if (_3467 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3460 = _3447;
                                _3461 = _3448;
                                _3462 = _3449;
                                _3463 = _3450;
                                _3464 = _3451;
                                _3465 = _3452;
                                _3466 = _3467;
                                continue;
                            }
                        }
                        frontier_phi_69_pred = _3452;
                        frontier_phi_69_pred_1 = _3451;
                        frontier_phi_69_pred_2 = _3450;
                        frontier_phi_69_pred_3 = _3449;
                        frontier_phi_69_pred_4 = _3448;
                        frontier_phi_69_pred_5 = _3447;
                    }
                    _3120 = frontier_phi_69_pred;
                    _3118 = frontier_phi_69_pred_1;
                    _3116 = frontier_phi_69_pred_2;
                    _3114 = frontier_phi_69_pred_3;
                    _3112 = frontier_phi_69_pred_4;
                    _3110 = frontier_phi_69_pred_5;
                    uint _3255 = _3254 + 1u;
                    if (_3255 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3248 = _3110;
                        _3249 = _3112;
                        _3250 = _3114;
                        _3251 = _3116;
                        _3252 = _3118;
                        _3253 = _3120;
                        _3254 = _3255;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_57_58_ladder = _3120;
                frontier_phi_57_58_ladder_1 = _3118;
                frontier_phi_57_58_ladder_2 = _3116;
                frontier_phi_57_58_ladder_3 = _3114;
                frontier_phi_57_58_ladder_4 = _3112;
                frontier_phi_57_58_ladder_5 = _3110;
            }
            else
            {
                frontier_phi_57_58_ladder = _2998;
                frontier_phi_57_58_ladder_1 = _2996;
                frontier_phi_57_58_ladder_2 = _2994;
                frontier_phi_57_58_ladder_3 = _2992;
                frontier_phi_57_58_ladder_4 = _2990;
                frontier_phi_57_58_ladder_5 = _2988;
            }
            _3109 = frontier_phi_57_58_ladder_5;
            _3111 = frontier_phi_57_58_ladder_4;
            _3113 = frontier_phi_57_58_ladder_3;
            _3115 = frontier_phi_57_58_ladder_2;
            _3117 = frontier_phi_57_58_ladder_1;
            _3119 = frontier_phi_57_58_ladder;
        }
        float _3124 = isnan(1.0) ? _1136 : (isnan(_1136) ? 1.0 : min(_1136, 1.0));
        _2864 = (_3124 * _3115) + _2301;
        _2866 = (_3124 * _3117) + _2303;
        _2868 = (_3124 * _3119) + _2305;
        _2870 = ((_3109 * _1122) * _3124) + _2646;
        _2872 = ((_3111 * _1123) * _3124) + _2648;
        _2874 = ((_3113 * _1124) * _3124) + _2650;
    }
    else
    {
        _2864 = _2301;
        _2866 = _2303;
        _2868 = _2305;
        _2870 = _2646;
        _2872 = _2648;
        _2874 = _2650;
    }
    uint _2880 = _1029 + uint(cbMatDynParam._m0[0u].w);
    float _2886 = cbInstanceData._m0[_2880].x * (((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _747) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _637) * _650.x) * _776)) + (((_805 - (_805 * _713)) + (cbMatDynParam._m0[11u].x * _836)) * cbMatDynParam._m0[9u].x));
    float _2887 = cbInstanceData._m0[_2880].y * (((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _747) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _637) * _650.y) * _776)) + (((_807 - (_807 * _713)) + (cbMatDynParam._m0[11u].y * _836)) * cbMatDynParam._m0[9u].y));
    float _2888 = cbInstanceData._m0[_2880].z * (((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _747) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _637) * _650.z) * _776)) + (((_809 - (_809 * _713)) + (cbMatDynParam._m0[11u].z * _836)) * cbMatDynParam._m0[9u].z));
    float _4839 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
    float _4850 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
    float _4861 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
    float _4872 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _2906 = (((isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0))) * (_2864 + ((isnan(0.0) ? _1863 : (isnan(_1863) ? 0.0 : max(_1863, 0.0))) * _1136))) + ((_2870 + ((isnan(0.0) ? _2154 : (isnan(_2154) ? 0.0 : max(_2154, 0.0))) * _1939)) * cbPerFrame._m0[3u].x)) + _2886;
    float _2908 = (_2887 + ((_2872 + ((isnan(0.0) ? _2157 : (isnan(_2157) ? 0.0 : max(_2157, 0.0))) * _1939)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0))) * (_2866 + ((isnan(0.0) ? _1866 : (isnan(_1866) ? 0.0 : max(_1866, 0.0))) * _1136)));
    float _2910 = (_2888 + ((_2874 + ((isnan(0.0) ? _2160 : (isnan(_2160) ? 0.0 : max(_2160, 0.0))) * _1939)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (_2868 + ((isnan(0.0) ? _1869 : (isnan(_1869) ? 0.0 : max(_1869, 0.0))) * _1136)));
    float _2928 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _776) + cbMatDynParam._m0[12u].y;
    float _2933 = cbInstanceData._m0[_1028 + 6u].w * (isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0)));
    float _2938 = _926 / cbSceneParam._m0[86u].x;
    float _2939 = _927 / cbSceneParam._m0[86u].y;
    vec4 _2953 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, (log2((isnan(cbSceneParam._m0[77u].w) ? _862 : (isnan(_862) ? cbSceneParam._m0[77u].w : min(_862, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2955 = _2953.x;
    float _2956 = _2953.y;
    float _2957 = _2953.z;
    float _2958 = _2953.w;
    float _3050;
    float _3052;
    float _3054;
    float _3056;
    if (_862 > cbSceneParam._m0[78u].w)
    {
        float _3013 = isnan(_862) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _862 : min(cbSceneParam._m0[80u].w, _862));
        float _3014 = _3013 / _862;
        float _3025 = _3014 * _911;
        float _3026 = _912 * _3014;
        float _3027 = (-0.0) - _3026;
        float _3028 = _3014 * _913;
        float _3030 = (cbSceneParam._m0[77u].w * _3027) / _3013;
        float _3031 = _3030 + cbSceneParam._m0[79u].w;
        float _3032 = cbSceneParam._m0[79u].w - _3026;
        float _3038 = sqrt(((_3025 * _3025) + (_3026 * _3026)) + (_3028 * _3028));
        float _3041 = (1.0 - (cbSceneParam._m0[77u].w / _3013)) * _3038;
        float _3046 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3048 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3210;
        if (abs((_3027 - _3030) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3210 = ((((_3031 > 0.0) ? exp2(_3046 * _3031) : (2.0 - exp2(_3048 * _3031))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3041;
        }
        else
        {
            float _3170 = 1.0 / cbSceneParam._m0[80u].x;
            float _3171 = isnan(_3032) ? _3031 : (isnan(_3031) ? _3032 : max(_3031, _3032));
            float _3172 = isnan(_3032) ? _3031 : (isnan(_3031) ? _3032 : min(_3031, _3032));
            float _3181 = isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : min(_3171, 0.0));
            float _3182 = isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : min(_3172, 0.0));
            _3210 = ((abs(_3038 / _3027) * cbSceneParam._m0[80u].y) * ((((_3181 - _3182) * 2.0) - ((exp2(_3046 * (isnan(0.0) ? _3171 : (isnan(_3171) ? 0.0 : max(_3171, 0.0)))) - exp2(_3046 * (isnan(0.0) ? _3172 : (isnan(_3172) ? 0.0 : max(_3172, 0.0))))) * _3170)) - ((exp2(_3048 * _3181) - exp2(_3048 * _3182)) * _3170))) + (_3041 * cbSceneParam._m0[80u].z);
        }
        vec4 _3212 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2938, _2939, 1.0), 0.0);
        float _3221 = exp2((_3210 * (-1.44269502162933349609375)) * (1.0 - _3212.w));
        float _3222 = log2(_3221);
        float _3238 = log2(_2958);
        _3050 = (exp2(_3238 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].x)) * _3212.x) / cbSceneParam._m0[78u].x)) + _2955;
        _3052 = (exp2(_3238 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].y)) * _3212.y) / cbSceneParam._m0[78u].y)) + _2956;
        _3054 = (exp2(_3238 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3222 * cbSceneParam._m0[78u].z)) * _3212.z) / cbSceneParam._m0[78u].z)) + _2957;
        _3056 = _3221 * _2958;
    }
    else
    {
        _3050 = _2955;
        _3052 = _2956;
        _3054 = _2957;
        _3056 = _2958;
    }
    float _3068 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3069 = _3068 == 3.0;
    float _3070 = log2(_3056);
    float _3074 = exp2(_3070 * cbSceneParam._m0[78u].x);
    float _3075 = exp2(_3070 * cbSceneParam._m0[78u].y);
    float _3076 = exp2(_3070 * cbSceneParam._m0[78u].z);
    float _3077 = _3074 * (isnan(0.0) ? _2906 : (isnan(_2906) ? 0.0 : max(_2906, 0.0)));
    float _3078 = _3075 * (isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0)));
    float _3079 = _3076 * (isnan(0.0) ? _2910 : (isnan(_2910) ? 0.0 : max(_2910, 0.0)));
    float _3088 = (_3068 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3088 * (_3069 ? _3077 : (_3077 + (cbSceneParam._m0[72u].w * _3050)));
    SV_Target.y = _3088 * (_3069 ? _3078 : (_3078 + (cbSceneParam._m0[72u].w * _3052)));
    SV_Target.z = _3088 * (_3069 ? _3079 : (_3079 + (cbSceneParam._m0[72u].w * _3054)));
    SV_Target.w = _2933;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2886) * _2928) * _3074) * _3088;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2887) * _2928) * _3075) * _3088;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2888) * _2928) * _3076) * _3088;
    SV_Target_1.w = _2933;
}


