#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in uvec4 BLENDINDICES;
layout(location = 8) in vec4 BLENDWEIGHT;
layout(location = 9) in vec4 COLOR_1;
layout(location = 10) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;
layout(location = 5, component = 1) out vec2 TEXCOORD_6;

void main()
{
    uint _86 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    TEXCOORD_6.x = 0.0;
    TEXCOORD_6.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _194 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _204 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _205 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _206 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _446;
    float _447;
    float _448;
    float _449;
    float _450;
    float _451;
    float _452;
    float _453;
    float _454;
    float _455;
    float _456;
    float _457;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _230 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        precise float _234 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _239 = isnan(_234) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _234 : max(0.001000000047497451305389404296875, _234));
        precise float _241 = BLENDWEIGHT.x / _239;
        precise float _242 = BLENDWEIGHT.y / _239;
        precise float _243 = BLENDWEIGHT.z / _239;
        precise float _244 = BLENDWEIGHT.w / _239;
        uvec4 _251 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_230)).x * 13u) + 4u]);
        uint _252 = _251.x;
        uint _254 = (_252 + uint(float(BLENDINDICES.x))) * 3u;
        uint _261 = _254 + 1u;
        uint _268 = _254 + 2u;
        precise float _275 = _241 * cbObjMatrix._m0[_254].x;
        precise float _276 = _241 * cbObjMatrix._m0[_261].x;
        precise float _277 = _241 * cbObjMatrix._m0[_268].x;
        precise float _278 = _241 * cbObjMatrix._m0[_254].y;
        precise float _279 = _241 * cbObjMatrix._m0[_261].y;
        precise float _280 = _241 * cbObjMatrix._m0[_268].y;
        precise float _281 = _241 * cbObjMatrix._m0[_254].z;
        precise float _282 = _241 * cbObjMatrix._m0[_261].z;
        precise float _283 = _241 * cbObjMatrix._m0[_268].z;
        precise float _284 = _241 * cbObjMatrix._m0[_254].w;
        precise float _285 = _241 * cbObjMatrix._m0[_261].w;
        precise float _286 = _241 * cbObjMatrix._m0[_268].w;
        uint _289 = (_252 + uint(float(BLENDINDICES.y))) * 3u;
        uint _296 = _289 + 1u;
        uint _303 = _289 + 2u;
        precise float _310 = _242 * cbObjMatrix._m0[_289].x;
        precise float _311 = _242 * cbObjMatrix._m0[_296].x;
        precise float _312 = _242 * cbObjMatrix._m0[_303].x;
        precise float _313 = _242 * cbObjMatrix._m0[_289].y;
        precise float _314 = _242 * cbObjMatrix._m0[_296].y;
        precise float _315 = _242 * cbObjMatrix._m0[_303].y;
        precise float _316 = _242 * cbObjMatrix._m0[_289].z;
        precise float _317 = _242 * cbObjMatrix._m0[_296].z;
        precise float _318 = _242 * cbObjMatrix._m0[_303].z;
        precise float _319 = _242 * cbObjMatrix._m0[_289].w;
        precise float _320 = _242 * cbObjMatrix._m0[_296].w;
        precise float _321 = _242 * cbObjMatrix._m0[_303].w;
        precise float _322 = _275 + _310;
        precise float _323 = _276 + _311;
        precise float _324 = _277 + _312;
        precise float _325 = _278 + _313;
        precise float _326 = _279 + _314;
        precise float _327 = _280 + _315;
        precise float _328 = _281 + _316;
        precise float _329 = _282 + _317;
        precise float _330 = _283 + _318;
        precise float _331 = _284 + _319;
        precise float _332 = _285 + _320;
        precise float _333 = _286 + _321;
        uint _336 = (_252 + uint(float(BLENDINDICES.z))) * 3u;
        uint _343 = _336 + 1u;
        uint _350 = _336 + 2u;
        precise float _357 = _243 * cbObjMatrix._m0[_336].x;
        precise float _358 = _243 * cbObjMatrix._m0[_343].x;
        precise float _359 = _243 * cbObjMatrix._m0[_350].x;
        precise float _360 = _243 * cbObjMatrix._m0[_336].y;
        precise float _361 = _243 * cbObjMatrix._m0[_343].y;
        precise float _362 = _243 * cbObjMatrix._m0[_350].y;
        precise float _363 = _243 * cbObjMatrix._m0[_336].z;
        precise float _364 = _243 * cbObjMatrix._m0[_343].z;
        precise float _365 = _243 * cbObjMatrix._m0[_350].z;
        precise float _366 = _243 * cbObjMatrix._m0[_336].w;
        precise float _367 = _243 * cbObjMatrix._m0[_343].w;
        precise float _368 = _243 * cbObjMatrix._m0[_350].w;
        precise float _369 = _322 + _357;
        precise float _370 = _323 + _358;
        precise float _371 = _324 + _359;
        precise float _372 = _325 + _360;
        precise float _373 = _326 + _361;
        precise float _374 = _327 + _362;
        precise float _375 = _328 + _363;
        precise float _376 = _329 + _364;
        precise float _377 = _330 + _365;
        precise float _378 = _331 + _366;
        precise float _379 = _332 + _367;
        precise float _380 = _333 + _368;
        uint _383 = (_252 + uint(float(BLENDINDICES.w))) * 3u;
        uint _390 = _383 + 1u;
        uint _397 = _383 + 2u;
        precise float _404 = _244 * cbObjMatrix._m0[_383].x;
        precise float _405 = _244 * cbObjMatrix._m0[_390].x;
        precise float _406 = _244 * cbObjMatrix._m0[_397].x;
        precise float _407 = _244 * cbObjMatrix._m0[_383].y;
        precise float _408 = _244 * cbObjMatrix._m0[_390].y;
        precise float _409 = _244 * cbObjMatrix._m0[_397].y;
        precise float _410 = _244 * cbObjMatrix._m0[_383].z;
        precise float _411 = _244 * cbObjMatrix._m0[_390].z;
        precise float _412 = _244 * cbObjMatrix._m0[_397].z;
        precise float _413 = _244 * cbObjMatrix._m0[_383].w;
        precise float _414 = _244 * cbObjMatrix._m0[_390].w;
        precise float _415 = _244 * cbObjMatrix._m0[_397].w;
        precise float _416 = _369 + _404;
        precise float _417 = _370 + _405;
        precise float _418 = _371 + _406;
        precise float _419 = _372 + _407;
        precise float _420 = _373 + _408;
        precise float _421 = _374 + _409;
        precise float _422 = _375 + _410;
        precise float _423 = _376 + _411;
        precise float _424 = _377 + _412;
        precise float _425 = _378 + _413;
        precise float _426 = _379 + _414;
        precise float _427 = _380 + _415;
        _446 = _416;
        _447 = _419;
        _448 = _422;
        _449 = _425;
        _450 = _417;
        _451 = _420;
        _452 = _423;
        _453 = _426;
        _454 = _418;
        _455 = _421;
        _456 = _424;
        _457 = _427;
    }
    else
    {
        _446 = cbvModelParam._m0[0u].x;
        _447 = cbvModelParam._m0[0u].y;
        _448 = cbvModelParam._m0[0u].z;
        _449 = cbvModelParam._m0[0u].w;
        _450 = cbvModelParam._m0[1u].x;
        _451 = cbvModelParam._m0[1u].y;
        _452 = cbvModelParam._m0[1u].z;
        _453 = cbvModelParam._m0[1u].w;
        _454 = cbvModelParam._m0[2u].x;
        _455 = cbvModelParam._m0[2u].y;
        _456 = cbvModelParam._m0[2u].z;
        _457 = cbvModelParam._m0[2u].w;
    }
    precise float _458 = POSITION.x * _446;
    precise float _459 = POSITION.y * _447;
    precise float _460 = _459 + _458;
    precise float _461 = POSITION.z * _448;
    precise float _462 = _461 + _460;
    precise float _463 = 1.0 * _449;
    precise float _464 = _463 + _462;
    precise float _465 = POSITION.x * _450;
    precise float _466 = POSITION.y * _451;
    precise float _467 = _466 + _465;
    precise float _468 = POSITION.z * _452;
    precise float _469 = _468 + _467;
    precise float _470 = 1.0 * _453;
    precise float _471 = _470 + _469;
    precise float _472 = POSITION.x * _454;
    precise float _473 = POSITION.y * _455;
    precise float _474 = _473 + _472;
    precise float _475 = POSITION.z * _456;
    precise float _476 = _475 + _474;
    precise float _477 = 1.0 * _457;
    precise float _478 = _477 + _476;
    uint _492 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
    uvec4 _494 = texelFetch(g_InstanceIndexBuffer, int(_492));
    uint _495 = _494.x;
    precise float _511 = _464 - cbSceneParam._m0[3u].x;
    precise float _512 = _471 - cbSceneParam._m0[3u].y;
    precise float _513 = _478 - cbSceneParam._m0[3u].z;
    precise float _541 = _511 * cbSceneParam._m0[24u].x;
    precise float _542 = _512 * cbSceneParam._m0[24u].y;
    precise float _543 = _542 + _541;
    precise float _544 = _513 * cbSceneParam._m0[24u].z;
    precise float _545 = _544 + _543;
    precise float _546 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _547 = _546 + _545;
    precise float _548 = _511 * cbSceneParam._m0[25u].x;
    precise float _549 = _512 * cbSceneParam._m0[25u].y;
    precise float _550 = _549 + _548;
    precise float _551 = _513 * cbSceneParam._m0[25u].z;
    precise float _552 = _551 + _550;
    precise float _553 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _554 = _553 + _552;
    precise float _555 = _511 * cbSceneParam._m0[26u].x;
    precise float _556 = _512 * cbSceneParam._m0[26u].y;
    precise float _557 = _556 + _555;
    precise float _558 = _513 * cbSceneParam._m0[26u].z;
    precise float _559 = _558 + _557;
    precise float _560 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _561 = _560 + _559;
    precise float _562 = _511 * cbSceneParam._m0[27u].x;
    precise float _563 = _512 * cbSceneParam._m0[27u].y;
    precise float _564 = _563 + _562;
    precise float _565 = _513 * cbSceneParam._m0[27u].z;
    precise float _566 = _565 + _564;
    precise float _567 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _568 = _567 + _566;
    gl_Position.x = _547;
    gl_Position.y = _554;
    gl_Position.z = _561;
    gl_Position.w = _568;
    POSITION_1_1.x = _547;
    POSITION_1_1.y = _554;
    POSITION_1_1.z = _561;
    POSITION_1_1.w = _568;
    NORMAL_2.x = fma(_197, _448, fma(_196, _447, _446 * _194));
    NORMAL_2.y = fma(_197, _452, fma(_196, _451, _450 * _194));
    NORMAL_2.z = fma(_197, _456, fma(_196, _455, _454 * _194));
    NORMAL_2.w = float(_495);
    TANGENT_2.x = fma(_206, _448, fma(_205, _447, _446 * _204));
    TANGENT_2.y = fma(_206, _452, fma(_205, _451, _450 * _204));
    TANGENT_2.z = fma(_206, _456, fma(_205, _455, _454 * _204));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    TEXCOORD_6.x = _561;
    TEXCOORD_6.y = _568;
    gl_ClipDistance[0u] = dot(vec4(_547, _554, _561, _568), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_547, _554, _561, _568), vec4(cbInstanceData._m0[(_495 * 13u) + 3u]));
}


