#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in vec3 POSITION_1;
layout(location = 2) in uvec4 NORMAL;
layout(location = 3) in uvec4 NORMAL_1;
layout(location = 4) in uvec4 TANGENT;
layout(location = 5) in uvec4 TANGENT_1;
layout(location = 6) in uint BINORMAL;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1_1;
layout(location = 2) out vec4 NORMAL_2;
layout(location = 3) out vec4 TANGENT_2;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out float TEXCOORD_4;

void main()
{
    uint _81 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1_1.x = 0.0;
    POSITION_1_1.y = 0.0;
    POSITION_1_1.z = 0.0;
    POSITION_1_1.w = 0.0;
    NORMAL_2.x = 0.0;
    NORMAL_2.y = 0.0;
    NORMAL_2.z = 0.0;
    NORMAL_2.w = 0.0;
    TANGENT_2.x = 0.0;
    TANGENT_2.y = 0.0;
    TANGENT_2.z = 0.0;
    TANGENT_2.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4 = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _179 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _181 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _182 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _258;
    float _259;
    float _260;
    float _261;
    float _262;
    float _263;
    float _264;
    float _265;
    float _266;
    float _267;
    float _268;
    float _269;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _206 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
        uint _219 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_206)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _226 = _219 + 1u;
        uint _233 = _219 + 2u;
        _258 = cbObjMatrix._m0[_219].x;
        _259 = cbObjMatrix._m0[_219].y;
        _260 = cbObjMatrix._m0[_219].z;
        _261 = cbObjMatrix._m0[_219].w;
        _262 = cbObjMatrix._m0[_226].x;
        _263 = cbObjMatrix._m0[_226].y;
        _264 = cbObjMatrix._m0[_226].z;
        _265 = cbObjMatrix._m0[_226].w;
        _266 = cbObjMatrix._m0[_233].x;
        _267 = cbObjMatrix._m0[_233].y;
        _268 = cbObjMatrix._m0[_233].z;
        _269 = cbObjMatrix._m0[_233].w;
    }
    else
    {
        _258 = cbvModelParam._m0[0u].x;
        _259 = cbvModelParam._m0[0u].y;
        _260 = cbvModelParam._m0[0u].z;
        _261 = cbvModelParam._m0[0u].w;
        _262 = cbvModelParam._m0[1u].x;
        _263 = cbvModelParam._m0[1u].y;
        _264 = cbvModelParam._m0[1u].z;
        _265 = cbvModelParam._m0[1u].w;
        _266 = cbvModelParam._m0[2u].x;
        _267 = cbvModelParam._m0[2u].y;
        _268 = cbvModelParam._m0[2u].z;
        _269 = cbvModelParam._m0[2u].w;
    }
    precise float _270 = POSITION.x * _258;
    precise float _271 = POSITION.y * _259;
    precise float _272 = _271 + _270;
    precise float _273 = POSITION.z * _260;
    precise float _274 = _273 + _272;
    precise float _275 = 1.0 * _261;
    precise float _277 = _275 + _274;
    precise float _278 = POSITION.x * _262;
    precise float _279 = POSITION.y * _263;
    precise float _280 = _279 + _278;
    precise float _281 = POSITION.z * _264;
    precise float _282 = _281 + _280;
    precise float _283 = 1.0 * _265;
    precise float _284 = _283 + _282;
    precise float _285 = POSITION.x * _266;
    precise float _286 = POSITION.y * _267;
    precise float _287 = _286 + _285;
    precise float _288 = POSITION.z * _268;
    precise float _289 = _288 + _287;
    precise float _290 = 1.0 * _269;
    precise float _291 = _290 + _289;
    uint _306 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _81;
    uvec4 _308 = texelFetch(g_InstanceIndexBuffer, int(_306));
    uint _309 = _308.x;
    precise float _325 = _277 - cbSceneParam._m0[3u].x;
    precise float _326 = _284 - cbSceneParam._m0[3u].y;
    precise float _327 = _291 - cbSceneParam._m0[3u].z;
    precise float _355 = _325 * cbSceneParam._m0[24u].x;
    precise float _356 = _326 * cbSceneParam._m0[24u].y;
    precise float _357 = _356 + _355;
    precise float _358 = _327 * cbSceneParam._m0[24u].z;
    precise float _359 = _358 + _357;
    precise float _360 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _361 = _360 + _359;
    precise float _362 = _325 * cbSceneParam._m0[25u].x;
    precise float _363 = _326 * cbSceneParam._m0[25u].y;
    precise float _364 = _363 + _362;
    precise float _365 = _327 * cbSceneParam._m0[25u].z;
    precise float _366 = _365 + _364;
    precise float _367 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _368 = _367 + _366;
    precise float _369 = _325 * cbSceneParam._m0[26u].x;
    precise float _370 = _326 * cbSceneParam._m0[26u].y;
    precise float _371 = _370 + _369;
    precise float _372 = _327 * cbSceneParam._m0[26u].z;
    precise float _373 = _372 + _371;
    precise float _374 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _375 = _374 + _373;
    precise float _376 = _325 * cbSceneParam._m0[27u].x;
    precise float _377 = _326 * cbSceneParam._m0[27u].y;
    precise float _378 = _377 + _376;
    precise float _379 = _327 * cbSceneParam._m0[27u].z;
    precise float _380 = _379 + _378;
    precise float _381 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _382 = _381 + _380;
    gl_Position.x = _361;
    gl_Position.y = _368;
    gl_Position.z = _375;
    gl_Position.w = _382;
    POSITION_1_1.x = _361;
    POSITION_1_1.y = _368;
    POSITION_1_1.z = _375;
    POSITION_1_1.w = _382;
    NORMAL_2.x = fma(_182, _260, fma(_181, _259, _258 * _179));
    NORMAL_2.y = fma(_182, _264, fma(_181, _263, _262 * _179));
    NORMAL_2.z = fma(_182, _268, fma(_181, _267, _266 * _179));
    NORMAL_2.w = float(_309);
    TANGENT_2.x = fma(_191, _260, fma(_190, _259, _258 * _189));
    TANGENT_2.y = fma(_191, _264, fma(_190, _263, _262 * _189));
    TANGENT_2.z = fma(_191, _268, fma(_190, _267, _266 * _189));
    TANGENT_2.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_1.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_4 = COLOR_1.x;
    gl_ClipDistance[0u] = dot(vec4(_361, _368, _375, _382), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_361, _368, _375, _382), vec4(cbInstanceData._m0[(_309 * 13u) + 3u]));
}


