#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 40) uniform texture2D g_DecalDiffuseTexture;
layout(set = 0, binding = 41) uniform texture2D g_DecalSpecularTexture;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7;
layout(set = 0, binding = 10) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6;
layout(set = 0, binding = 2) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0;
layout(set = 0, binding = 4) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11;
layout(set = 0, binding = 7) uniform texture2D C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 1) uniform sampler SS_SpecularMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1221;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _203 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _204 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _205 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _211 = inversesqrt(dot(vec3(_203, _204, _205), vec3(_203, _204, _205)));
    float _218 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _219 = _218 * NORMAL.x;
    float _220 = _218 * NORMAL.y;
    float _221 = _218 * NORMAL.z;
    float _225 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _233;
    float _234;
    float _235;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _233 = (-0.0) - _219;
        _234 = (-0.0) - _220;
        _235 = (-0.0) - _221;
    }
    else
    {
        _233 = _219;
        _234 = _220;
        _235 = _221;
    }
    float _279 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _289 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _279);
    float _290 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _279);
    float _291 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _279);
    vec4 _304 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_0, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    vec4 _321 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    vec4 _343 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _352 = ((_321.x * 4.55000019073486328125) * cbMtdParam._m0[9u].x) * _343.x;
    float _355 = ((_321.y * 4.55000019073486328125) * cbMtdParam._m0[9u].y) * _343.y;
    float _358 = ((_321.z * 4.55000019073486328125) * cbMtdParam._m0[9u].z) * _343.z;
    float _359 = _343.w * _321.w;
    vec4 _372 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_3, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _379 = cbMtdParam._m0[16u].x + _372.x;
    vec4 _391 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_6, SS_BumpMap), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.x) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.y) + cbTextureTilingScale._m0[10u].w));
    float _403 = (_304.z * 2.0) * (cbMtdParam._m0[14u].x + _391.z);
    float _421 = abs((fract(cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _3875 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _423 = isnan(1.0) ? _3875 : (isnan(_3875) ? 1.0 : min(_3875, 1.0));
    float _428 = (_423 * _423) * (3.0 - (_423 * 2.0));
    vec4 _441 = texture(sampler2D(C_DetailBlend_Emissive_Glow_SSS_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _449 = (_304.x * 2.0) + (-1.0);
    float _450 = (_304.y * 2.0) + (-1.0);
    float _451 = dot(vec2(_449, _450), vec2(_449, _450));
    float _3886 = isnan(0.0) ? _451 : (isnan(_451) ? 0.0 : max(_451, 0.0));
    float _456 = sqrt(1.0 - (isnan(1.0) ? _3886 : (isnan(_3886) ? 1.0 : min(_3886, 1.0))));
    float _463 = (cbMtdParam._m0[14u].z * ((_391.x * 2.0) + (-1.0))) + _449;
    float _464 = (cbMtdParam._m0[14u].z * ((_391.y * 2.0) + (-1.0))) + _450;
    float _467 = fma(_456, _233, fma(_464, _225 * TANGENT.x, (_211 * _203) * _463));
    float _470 = fma(_456, _234, fma(_464, _225 * TANGENT.y, (_211 * _204) * _463));
    float _473 = fma(_456, _235, fma(_464, _225 * TANGENT.z, (_211 * _205) * _463));
    float _477 = inversesqrt(dot(vec3(_467, _470, _473), vec3(_467, _470, _473)));
    float _478 = _477 * _467;
    float _479 = _477 * _470;
    float _480 = _477 * _473;
    float _3897 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _481 = isnan(1.0) ? _3897 : (isnan(_3897) ? 1.0 : min(_3897, 1.0));
    float _3908 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
    float _482 = isnan(1.0) ? _3908 : (isnan(_3908) ? 1.0 : min(_3908, 1.0));
    float _3919 = isnan(0.0) ? _352 : (isnan(_352) ? 0.0 : max(_352, 0.0));
    float _483 = isnan(1.0) ? _3919 : (isnan(_3919) ? 1.0 : min(_3919, 1.0));
    float _3930 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    float _484 = isnan(1.0) ? _3930 : (isnan(_3930) ? 1.0 : min(_3930, 1.0));
    float _3941 = isnan(0.0) ? _358 : (isnan(_358) ? 0.0 : max(_358, 0.0));
    float _485 = isnan(1.0) ? _3941 : (isnan(_3941) ? 1.0 : min(_3941, 1.0));
    float _3952 = isnan(0.0) ? _379 : (isnan(_379) ? 0.0 : max(_379, 0.0));
    float _486 = isnan(1.0) ? _3952 : (isnan(_3952) ? 1.0 : min(_3952, 1.0));
    float _494 = cbMatDynParam._m0[9u].x * _483;
    float _495 = cbMatDynParam._m0[9u].y * _484;
    float _496 = cbMatDynParam._m0[9u].z * _485;
    float _503 = inversesqrt(dot(vec3(_289, _290, _291), vec3(_289, _290, _291)));
    float _504 = _503 * _289;
    float _505 = _503 * _290;
    float _506 = _503 * _291;
    float _507 = dot(vec3(_478, _479, _480), vec3(_504, _505, _506));
    float _513 = abs(exp2(log2(_507) * cbMatDynParam._m0[12u].x));
    float _514 = isnan(0.100000001490116119384765625) ? _513 : (isnan(_513) ? 0.100000001490116119384765625 : max(_513, 0.100000001490116119384765625));
    float _520 = ((isnan(0.699999988079071044921875) ? _514 : (isnan(_514) ? 0.699999988079071044921875 : min(_514, 0.699999988079071044921875))) + (-0.100000001490116119384765625)) * 1.66666662693023681640625;
    float _542 = 1.0 - cbMatDynParam._m0[8u].w;
    float _3973 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _545 = 1.0 - cbMatDynParam._m0[7u].w;
    float _3984 = isnan(0.0) ? _545 : (isnan(_545) ? 0.0 : max(_545, 0.0));
    float _546 = isnan(1.0) ? _3984 : (isnan(_3984) ? 1.0 : min(_3984, 1.0));
    float _549 = (((isnan(1.0) ? _3973 : (isnan(_3973) ? 1.0 : min(_3973, 1.0))) - _546) * _520) + _546;
    float _568 = dot(vec3(_478, _479, _480), vec3(0.0, -1.0, 0.0));
    float _3995 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _571 = isnan(1.0) ? _3995 : (isnan(_3995) ? 1.0 : min(_3995, 1.0));
    float _578 = (_571 * _483) * cbMatDynParam._m0[11u].x;
    float _580 = (_571 * _484) * cbMatDynParam._m0[11u].y;
    float _582 = (_571 * _485) * cbMatDynParam._m0[11u].z;
    float _589 = dot(vec3(_504, _505, _506), vec3(_478, _479, _480));
    float _592 = _589 * 2.0;
    float _602 = dot(vec3((-0.0) - (_504 - (_592 * _478)), (-0.0) - (_505 - (_592 * _479)), (-0.0) - (_506 - (_592 * _480))), vec3(0.0, -1.0, 0.0));
    float _4006 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _609 = exp2(log2(isnan(1.0) ? _4006 : (isnan(_4006) ? 1.0 : min(_4006, 1.0))) * 4.0);
    float _635 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _641 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _642 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _644 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _646 = _644.w;
    float _666 = fma(_480, cbSceneParam._m0[5u].z, fma(_479, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _478));
    float _669 = fma(_480, cbSceneParam._m0[6u].z, fma(_479, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _478));
    float _672 = fma(_480, cbSceneParam._m0[7u].z, fma(_479, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _478));
    vec4 _674 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _676 = _674.x;
    float _688 = (((_674.y - _482) + (_674.w * _482)) * cbMtdParam._m0[3u].x) + _482;
    float _705 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3(cbMtdParam._m0[3u].x * (_676 * _676)), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w)).z;
    float _713 = (((cbMatDynParam._m0[15u].x - _486) * cbMatDynParam._m0[15u].w) * _705) + _486;
    float _721 = ((_705 * cbMatDynParam._m0[16u].z) * (cbMatDynParam._m0[16u].x - _688)) + _688;
    uint _745 = uint(roundEven(NORMAL.w)) * 13u;
    uint _747 = _745 + 9u;
    uint _748 = _747 + uint(cbMatDynParam._m0[0u].w);
    float _754 = (cbMtdParam._m0[0u].x * _494) * cbInstanceData._m0[_748].x;
    float _755 = (cbMtdParam._m0[0u].y * _495) * cbInstanceData._m0[_748].y;
    float _756 = (cbMtdParam._m0[0u].z * _496) * cbInstanceData._m0[_748].z;
    float _4017 = isnan(0.0) ? _754 : (isnan(_754) ? 0.0 : max(_754, 0.0));
    float _757 = isnan(1.0) ? _4017 : (isnan(_4017) ? 1.0 : min(_4017, 1.0));
    float _4028 = isnan(0.0) ? _755 : (isnan(_755) ? 0.0 : max(_755, 0.0));
    float _758 = isnan(1.0) ? _4028 : (isnan(_4028) ? 1.0 : min(_4028, 1.0));
    float _4039 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
    float _759 = isnan(1.0) ? _4039 : (isnan(_4039) ? 1.0 : min(_4039, 1.0));
    vec4 _760 = texture(sampler2D(g_DecalDiffuseTexture, SS_DiffuseMap), vec2(TEXCOORD.z, TEXCOORD.w));
    vec4 _765 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _776 = (((_765.x - _713) + (_765.w * _713)) * cbMtdParam._m0[3u].x) + _713;
    float _789 = (cbMtdParam._m0[3u].x * (((_757 * _646) - _757) + _760.x)) + _757;
    float _790 = (cbMtdParam._m0[3u].x * (((_758 * _646) - _758) + _760.y)) + _758;
    float _791 = (cbMtdParam._m0[3u].x * (((_759 * _646) - _759) + _760.z)) + _759;
    vec4 _792 = texture(sampler2D(g_DecalSpecularTexture, SS_SpecularMap), vec2(TEXCOORD.z, TEXCOORD.w));
    float _805 = (((cbMatDynParam._m0[14u].y - cbMatDynParam._m0[14u].x) * dot(vec3((_713 * (_494 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_713 * (_495 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625, (_713 * (_496 + (-0.039999999105930328369140625))) + 0.039999999105930328369140625), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375))) + cbMatDynParam._m0[14u].x) * _792.z;
    float _809 = _805 * cbMatDynParam._m0[13u].w;
    float _819 = (_809 * (cbMatDynParam._m0[13u].x - _789)) + _789;
    float _820 = (_809 * (cbMatDynParam._m0[13u].y - _790)) + _790;
    float _821 = (_809 * (cbMatDynParam._m0[13u].z - _791)) + _791;
    float _829 = ((_805 * cbMatDynParam._m0[15u].w) * (cbMatDynParam._m0[15u].x - _776)) + _776;
    float _830 = 1.0 - _829;
    float _831 = _830 * _819;
    float _832 = _830 * _820;
    float _833 = _830 * _821;
    float _837 = (_819 + (-0.039999999105930328369140625)) * _829;
    float _838 = (_820 + (-0.039999999105930328369140625)) * _829;
    float _839 = (_821 + (-0.039999999105930328369140625)) * _829;
    float _840 = _837 + 0.039999999105930328369140625;
    float _841 = _838 + 0.039999999105930328369140625;
    float _842 = _839 + 0.039999999105930328369140625;
    vec4 _851 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _641, cbSceneParam._m0[86u].y * _642));
    float _854 = _851.x * TEXCOORD_4;
    float _855 = _507 * 2.0;
    float _859 = (_855 * _478) - _504;
    float _860 = (_855 * _479) - _505;
    float _861 = (_855 * _480) - _506;
    float _862 = abs(_589);
    float _4050 = isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0));
    float _864 = sqrt(_721);
    float _875 = exp2((_864 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4050 : (isnan(_4050) ? 1.0 : min(_4050, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_864 * 3.0));
    float _881 = (1.0 - _875) * ((_864 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _882 = _875 * _864;
    float _910 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _914 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _918 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1220;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    float _1231;
    float _1232;
    float _1233;
    float _1234;
    float _1235;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _945 = fma(_918, cbModelParam._m0[26u].z, fma(_914, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _910));
        float _949 = fma(_918, cbModelParam._m0[27u].z, fma(_914, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _910));
        float _953 = fma(_918, cbModelParam._m0[28u].z, fma(_914, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _910));
        float _978 = _910 + _478;
        float _979 = _914 + _479;
        float _980 = _918 + _480;
        float _990 = fma(_980, cbModelParam._m0[26u].z, fma(_979, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _978)) - _945;
        float _991 = fma(_980, cbModelParam._m0[27u].z, fma(_979, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _978)) - _949;
        float _992 = fma(_980, cbModelParam._m0[28u].z, fma(_979, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _978)) - _953;
        float _996 = inversesqrt(dot(vec3(_990, _991, _992), vec3(_990, _991, _992)));
        float _1009 = ((_996 * _990) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_945 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1010 = ((_996 * _991) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_949 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_996 * _992) / cbModelParam._m0[34u].z) + ((((((_953 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1014 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1021 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1028 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1035 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        float _1048 = exp2((_1014.w + (-0.5)) * 20.0) * 2.0;
        float _1049 = _1048 * (_1014.x + (-0.5));
        float _1050 = _1048 * (_1014.y + (-0.5));
        float _1051 = _1048 * (_1014.z + (-0.5));
        float _1058 = exp2((_1021.w + (-0.5)) * 20.0) * 2.0;
        float _1059 = _1058 * (_1021.x + (-0.5));
        float _1060 = _1058 * (_1021.y + (-0.5));
        float _1061 = _1058 * (_1021.z + (-0.5));
        float _1068 = exp2((_1028.w + (-0.5)) * 20.0) * 2.0;
        float _1069 = _1068 * (_1028.x + (-0.5));
        float _1070 = _1068 * (_1028.y + (-0.5));
        float _1071 = _1068 * (_1028.z + (-0.5));
        float _1078 = exp2((_1035.w + (-0.5)) * 20.0) * 2.0;
        float _1079 = _1078 * (_1035.x + (-0.5));
        float _1080 = _1078 * (_1035.y + (-0.5));
        float _1081 = _1078 * (_1035.z + (-0.5));
        float _1082 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1083 = isnan(0.0) ? _1080 : (isnan(_1080) ? 0.0 : max(_1080, 0.0));
        float _1084 = isnan(0.0) ? _1081 : (isnan(_1081) ? 0.0 : max(_1081, 0.0));
        float _1085 = _1049 * 0.5;
        float _1086 = _1059 * 0.5;
        float _1087 = _1069 * 0.5;
        float _1088 = dot(vec3(_1085, _1086, _1087), vec3(_1085, _1086, _1087));
        float _1093 = (_1088 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1088);
        float _1102 = (dot(vec3(_478, _479, _480), vec3(_1093 * _1085, _1093 * _1086, _1093 * _1087)) + 1.0) * 0.5;
        float _4076 = isnan(0.0) ? _1102 : (isnan(_1102) ? 0.0 : max(_1102, 0.0));
        float _1112 = sqrt(((_1086 * _1086) + (_1085 * _1085)) + (_1087 * _1087)) / (_1082 + 9.9999997473787516355514526367188e-06);
        float _4087 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _4087 : (isnan(_4087) ? 1.0 : min(_4087, 1.0));
        float _1114 = _1113 * 2.0;
        float _1118 = (1.0 - _1113) / (_1113 + 1.0);
        float _4098 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1119 = isnan(1.0) ? _4098 : (isnan(_4098) ? 1.0 : min(_4098, 1.0));
        float _1128 = ((((1.0 - _1119) * (_1114 + 2.0)) * exp2(log2(isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) * (_1114 + 1.0))) + _1119) * _1082;
        float _1129 = _1050 * 0.5;
        float _1130 = _1060 * 0.5;
        float _1131 = _1070 * 0.5;
        float _1132 = dot(vec3(_1129, _1130, _1131), vec3(_1129, _1130, _1131));
        float _1137 = (_1132 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1132);
        float _1145 = (dot(vec3(_478, _479, _480), vec3(_1137 * _1129, _1137 * _1130, _1137 * _1131)) + 1.0) * 0.5;
        float _4109 = isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0));
        float _1154 = sqrt(((_1130 * _1130) + (_1129 * _1129)) + (_1131 * _1131)) / (_1083 + 9.9999997473787516355514526367188e-06);
        float _4120 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _4120 : (isnan(_4120) ? 1.0 : min(_4120, 1.0));
        float _1156 = _1155 * 2.0;
        float _1160 = (1.0 - _1155) / (_1155 + 1.0);
        float _4131 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1161 = isnan(1.0) ? _4131 : (isnan(_4131) ? 1.0 : min(_4131, 1.0));
        float _1170 = ((((1.0 - _1161) * (_1156 + 2.0)) * exp2(log2(isnan(1.0) ? _4109 : (isnan(_4109) ? 1.0 : min(_4109, 1.0))) * (_1156 + 1.0))) + _1161) * _1083;
        float _1171 = _1051 * 0.5;
        float _1172 = _1061 * 0.5;
        float _1173 = _1071 * 0.5;
        float _1174 = dot(vec3(_1171, _1172, _1173), vec3(_1171, _1172, _1173));
        float _1179 = (_1174 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1174);
        float _1187 = (dot(vec3(_478, _479, _480), vec3(_1179 * _1171, _1179 * _1172, _1179 * _1173)) + 1.0) * 0.5;
        float _4142 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1196 = sqrt(((_1172 * _1172) + (_1171 * _1171)) + (_1173 * _1173)) / (_1084 + 9.9999997473787516355514526367188e-06);
        float _4153 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _4153 : (isnan(_4153) ? 1.0 : min(_4153, 1.0));
        float _1198 = _1197 * 2.0;
        float _1202 = (1.0 - _1197) / (_1197 + 1.0);
        float _4164 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1203 = isnan(1.0) ? _4164 : (isnan(_4164) ? 1.0 : min(_4164, 1.0));
        float _1212 = ((((1.0 - _1203) * (_1198 + 2.0)) * exp2(log2(isnan(1.0) ? _4142 : (isnan(_4142) ? 1.0 : min(_4142, 1.0))) * (_1198 + 1.0))) + _1203) * _1084;
        _1220 = _1051;
        _1222 = _1050;
        _1223 = _1049;
        _1224 = _1061;
        _1225 = _1060;
        _1226 = _1059;
        _1227 = _1071;
        _1228 = _1070;
        _1229 = _1069;
        _1230 = _1084;
        _1231 = _1083;
        _1232 = _1082;
        _1233 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0)));
        _1234 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0)));
        _1235 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0)));
    }
    else
    {
        _1220 = _1221;
        _1222 = _1221;
        _1223 = _1221;
        _1224 = _1221;
        _1225 = _1221;
        _1226 = _1221;
        _1227 = _1221;
        _1228 = _1221;
        _1229 = _1221;
        _1230 = _1221;
        _1231 = _1221;
        _1232 = _1221;
        _1233 = 0.0;
        _1234 = 0.0;
        _1235 = 0.0;
    }
    float _1530;
    float _1531;
    float _1532;
    float _1533;
    float _1534;
    float _1535;
    float _1536;
    float _1537;
    float _1538;
    float _1539;
    float _1540;
    float _1541;
    float _1542;
    float _1543;
    float _1544;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1261 = fma(_918, cbModelParam._m0[30u].z, fma(_914, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _910));
        float _1265 = fma(_918, cbModelParam._m0[31u].z, fma(_914, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _910));
        float _1269 = fma(_918, cbModelParam._m0[32u].z, fma(_914, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _910));
        float _1292 = _910 + _478;
        float _1293 = _914 + _479;
        float _1294 = _918 + _480;
        float _1304 = fma(_1294, cbModelParam._m0[30u].z, fma(_1293, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1292)) - _1261;
        float _1305 = fma(_1294, cbModelParam._m0[31u].z, fma(_1293, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1292)) - _1265;
        float _1306 = fma(_1294, cbModelParam._m0[32u].z, fma(_1293, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1292)) - _1269;
        float _1310 = inversesqrt(dot(vec3(_1304, _1305, _1306), vec3(_1304, _1305, _1306)));
        float _1323 = ((_1310 * _1304) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1261 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1324 = ((_1310 * _1305) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1265 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1325 = ((_1310 * _1306) / cbModelParam._m0[35u].z) + ((((((_1269 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1327 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1334 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1323, _1324, _1325), 0.0);
        float _1360 = exp2((_1327.w + (-0.5)) * 20.0) * 2.0;
        float _1361 = _1360 * (_1327.x + (-0.5));
        float _1362 = _1360 * (_1327.y + (-0.5));
        float _1363 = _1360 * (_1327.z + (-0.5));
        float _1370 = exp2((_1334.w + (-0.5)) * 20.0) * 2.0;
        float _1371 = _1370 * (_1334.x + (-0.5));
        float _1372 = _1370 * (_1334.y + (-0.5));
        float _1373 = _1370 * (_1334.z + (-0.5));
        float _1380 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1381 = _1380 * (_1341.x + (-0.5));
        float _1382 = _1380 * (_1341.y + (-0.5));
        float _1383 = _1380 * (_1341.z + (-0.5));
        float _1390 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1391 = _1390 * (_1348.x + (-0.5));
        float _1392 = _1390 * (_1348.y + (-0.5));
        float _1393 = _1390 * (_1348.z + (-0.5));
        float _1394 = isnan(0.0) ? _1391 : (isnan(_1391) ? 0.0 : max(_1391, 0.0));
        float _1395 = isnan(0.0) ? _1392 : (isnan(_1392) ? 0.0 : max(_1392, 0.0));
        float _1396 = isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0));
        float _1397 = _1361 * 0.5;
        float _1398 = _1371 * 0.5;
        float _1399 = _1381 * 0.5;
        float _1400 = dot(vec3(_1397, _1398, _1399), vec3(_1397, _1398, _1399));
        float _1405 = (_1400 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1400);
        float _1413 = (dot(vec3(_478, _479, _480), vec3(_1405 * _1397, _1405 * _1398, _1405 * _1399)) + 1.0) * 0.5;
        float _4205 = isnan(0.0) ? _1413 : (isnan(_1413) ? 0.0 : max(_1413, 0.0));
        float _1422 = sqrt(((_1398 * _1398) + (_1397 * _1397)) + (_1399 * _1399)) / (_1394 + 9.9999997473787516355514526367188e-06);
        float _4216 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
        float _1423 = isnan(1.0) ? _4216 : (isnan(_4216) ? 1.0 : min(_4216, 1.0));
        float _1424 = _1423 * 2.0;
        float _1428 = (1.0 - _1423) / (_1423 + 1.0);
        float _4227 = isnan(0.0) ? _1428 : (isnan(_1428) ? 0.0 : max(_1428, 0.0));
        float _1429 = isnan(1.0) ? _4227 : (isnan(_4227) ? 1.0 : min(_4227, 1.0));
        float _1438 = ((((1.0 - _1429) * (_1424 + 2.0)) * exp2(log2(isnan(1.0) ? _4205 : (isnan(_4205) ? 1.0 : min(_4205, 1.0))) * (_1424 + 1.0))) + _1429) * _1394;
        float _1439 = _1362 * 0.5;
        float _1440 = _1372 * 0.5;
        float _1441 = _1382 * 0.5;
        float _1442 = dot(vec3(_1439, _1440, _1441), vec3(_1439, _1440, _1441));
        float _1447 = (_1442 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1442);
        float _1455 = (dot(vec3(_478, _479, _480), vec3(_1447 * _1439, _1447 * _1440, _1447 * _1441)) + 1.0) * 0.5;
        float _4238 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
        float _1464 = sqrt(((_1440 * _1440) + (_1439 * _1439)) + (_1441 * _1441)) / (_1395 + 9.9999997473787516355514526367188e-06);
        float _4249 = isnan(0.0) ? _1464 : (isnan(_1464) ? 0.0 : max(_1464, 0.0));
        float _1465 = isnan(1.0) ? _4249 : (isnan(_4249) ? 1.0 : min(_4249, 1.0));
        float _1466 = _1465 * 2.0;
        float _1470 = (1.0 - _1465) / (_1465 + 1.0);
        float _4260 = isnan(0.0) ? _1470 : (isnan(_1470) ? 0.0 : max(_1470, 0.0));
        float _1471 = isnan(1.0) ? _4260 : (isnan(_4260) ? 1.0 : min(_4260, 1.0));
        float _1480 = ((((1.0 - _1471) * (_1466 + 2.0)) * exp2(log2(isnan(1.0) ? _4238 : (isnan(_4238) ? 1.0 : min(_4238, 1.0))) * (_1466 + 1.0))) + _1471) * _1395;
        float _1481 = _1363 * 0.5;
        float _1482 = _1373 * 0.5;
        float _1483 = _1383 * 0.5;
        float _1484 = dot(vec3(_1481, _1482, _1483), vec3(_1481, _1482, _1483));
        float _1489 = (_1484 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1484);
        float _1497 = (dot(vec3(_478, _479, _480), vec3(_1489 * _1481, _1489 * _1482, _1489 * _1483)) + 1.0) * 0.5;
        float _4271 = isnan(0.0) ? _1497 : (isnan(_1497) ? 0.0 : max(_1497, 0.0));
        float _1506 = sqrt(((_1482 * _1482) + (_1481 * _1481)) + (_1483 * _1483)) / (_1396 + 9.9999997473787516355514526367188e-06);
        float _4282 = isnan(0.0) ? _1506 : (isnan(_1506) ? 0.0 : max(_1506, 0.0));
        float _1507 = isnan(1.0) ? _4282 : (isnan(_4282) ? 1.0 : min(_4282, 1.0));
        float _1508 = _1507 * 2.0;
        float _1512 = (1.0 - _1507) / (_1507 + 1.0);
        float _4293 = isnan(0.0) ? _1512 : (isnan(_1512) ? 0.0 : max(_1512, 0.0));
        float _1513 = isnan(1.0) ? _4293 : (isnan(_4293) ? 1.0 : min(_4293, 1.0));
        float _1522 = ((((1.0 - _1513) * (_1508 + 2.0)) * exp2(log2(isnan(1.0) ? _4271 : (isnan(_4271) ? 1.0 : min(_4271, 1.0))) * (_1508 + 1.0))) + _1513) * _1396;
        _1530 = _1363;
        _1531 = _1362;
        _1532 = _1361;
        _1533 = _1373;
        _1534 = _1372;
        _1535 = _1371;
        _1536 = _1383;
        _1537 = _1382;
        _1538 = _1381;
        _1539 = _1396;
        _1540 = _1395;
        _1541 = _1394;
        _1542 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0)));
        _1543 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1480 : (isnan(_1480) ? 0.0 : max(_1480, 0.0)));
        _1544 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1522 : (isnan(_1522) ? 0.0 : max(_1522, 0.0)));
    }
    else
    {
        _1530 = _1221;
        _1531 = _1221;
        _1532 = _1221;
        _1533 = _1221;
        _1534 = _1221;
        _1535 = _1221;
        _1536 = _1221;
        _1537 = _1221;
        _1538 = _1221;
        _1539 = _1221;
        _1540 = _1221;
        _1541 = _1221;
        _1542 = 0.0;
        _1543 = 0.0;
        _1544 = 0.0;
    }
    float _1554 = (cbModelParam._m0[1u].x * (_1542 - _1233)) + _1233;
    float _1555 = (cbModelParam._m0[1u].x * (_1543 - _1234)) + _1234;
    float _1556 = (cbModelParam._m0[1u].x * (_1544 - _1235)) + _1235;
    float _1577 = fma(_1556, cbSceneParam._m0[89u].z, fma(_1555, cbSceneParam._m0[89u].y, _1554 * cbSceneParam._m0[89u].x));
    float _1580 = fma(_1556, cbSceneParam._m0[90u].z, fma(_1555, cbSceneParam._m0[90u].y, _1554 * cbSceneParam._m0[90u].x));
    float _1583 = fma(_1556, cbSceneParam._m0[91u].z, fma(_1555, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1554));
    float _1598 = _859 * 0.5;
    float _1599 = _860 * 0.5;
    float _1600 = _861 * 0.5;
    float _1601 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1532, _1535, _1538, _1541));
    float _1604 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1531, _1534, _1537, _1540));
    float _1607 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1530, _1533, _1536, _1539));
    float _1638;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1614 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1220, _1224, _1227, _1230));
        float _1618 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1222, _1225, _1228, _1231));
        float _1622 = dot(vec4(_1598, _1599, _1600, 1.0), vec4(_1223, _1226, _1229, _1232));
        float _1629 = dot(vec4(cbModelParam._m0[39u]), vec4(_1598, _1599, _1600, 1.0));
        _1638 = dot(vec3(isnan(0.0) ? _1622 : (isnan(_1622) ? 0.0 : max(_1622, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0)), isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1629) ? 0.0 : (isnan(0.0) ? _1629 : max(0.0, _1629))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1638 = 1.0;
    }
    float _1649;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1640 = dot(vec4(cbModelParam._m0[40u]), vec4(_1598, _1599, _1600, 1.0));
        _1649 = dot(vec3(isnan(0.0) ? _1601 : (isnan(_1601) ? 0.0 : max(_1601, 0.0)), isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0)), isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1640) ? 0.0 : (isnan(0.0) ? _1640 : max(0.0, _1640))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1649 = 1.0;
    }
    float _1653 = (_1649 * cbModelParam._m0[1u].x) + (_1638 * (1.0 - cbModelParam._m0[1u].x));
    float _1663 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _721);
    float _1664 = isnan(_1663) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1663 : min(cbModelParam._m0[25u].z, _1663));
    float _1744;
    float _1746;
    float _1748;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1711 = fma(_918, cbModelParam._m0[13u].z, fma(_914, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _910)) + cbModelParam._m0[13u].w;
        float _1715 = fma(_918, cbModelParam._m0[14u].z, fma(_914, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _910)) + cbModelParam._m0[14u].w;
        float _1719 = fma(_918, cbModelParam._m0[15u].z, fma(_914, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _910)) + cbModelParam._m0[15u].w;
        float _1722 = fma(_861, cbModelParam._m0[13u].z, fma(_860, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _859));
        float _1725 = fma(_861, cbModelParam._m0[14u].z, fma(_860, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _859));
        float _1728 = fma(_861, cbModelParam._m0[15u].z, fma(_860, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _859));
        float _1756;
        if (_1722 > 0.0)
        {
            _1756 = abs((1.0 - _1711) / _1722);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1722 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1711 + 1.0) / _1722);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1756 = frontier_phi_16_14_ladder;
        }
        float _1929;
        if (_1725 > 0.0)
        {
            _1929 = abs((1.0 - _1715) / _1725);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1725 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1715 + 1.0) / _1725);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1929 = frontier_phi_25_21_ladder;
        }
        float _2224;
        if (_1728 > 0.0)
        {
            _2224 = abs((1.0 - _1719) / _1728);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1728 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1719 + 1.0) / _1728);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2224 = frontier_phi_37_32_ladder;
        }
        float _2226 = isnan(_1929) ? _1756 : (isnan(_1756) ? _1929 : min(_1756, _1929));
        float _2227 = isnan(_2224) ? _2226 : (isnan(_2226) ? _2224 : min(_2226, _2224));
        float _2231 = (_2227 * _1722) + _1711;
        float _2232 = (_2227 * _1725) + _1715;
        float _2233 = (_2227 * _1728) + _1719;
        float _2234 = _2227 * 9.9999997473787516355514526367188e-05;
        float _2236 = (-1.0) - _2234;
        float _2238 = _2234 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2233 > _2238) || ((_2233 < _2236) || ((_2232 > _2238) || ((_2232 < _2236) || ((_2231 < _2236) || (_2231 > _2238))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2378 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2233, cbModelParam._m0[9u].z, fma(_2232, cbModelParam._m0[9u].y, _2231 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2233, cbModelParam._m0[10u].z, fma(_2232, cbModelParam._m0[10u].y, _2231 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2233, cbModelParam._m0[11u].z, fma(_2232, cbModelParam._m0[11u].y, _2231 * cbModelParam._m0[11u].x))), _1664);
            frontier_phi_15_37_ladder = _2378.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2378.x * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2378.z * cbModelParam._m0[1u].y;
        }
        _1744 = frontier_phi_15_37_ladder_1;
        _1746 = frontier_phi_15_37_ladder;
        _1748 = frontier_phi_15_37_ladder_2;
    }
    else
    {
        vec4 _1732 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_859, _860, _861), _1664);
        _1744 = _1732.x * cbModelParam._m0[1u].y;
        _1746 = _1732.y * cbModelParam._m0[1u].y;
        _1748 = _1732.z * cbModelParam._m0[1u].y;
    }
    float _1752 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _721);
    float _1753 = isnan(_1752) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1752 : min(cbModelParam._m0[25u].w, _1752));
    float _1844;
    float _1846;
    float _1848;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1808 = fma(_918, cbModelParam._m0[21u].z, fma(_914, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _910)) + cbModelParam._m0[21u].w;
        float _1812 = fma(_918, cbModelParam._m0[22u].z, fma(_914, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _910)) + cbModelParam._m0[22u].w;
        float _1816 = fma(_918, cbModelParam._m0[23u].z, fma(_914, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _910)) + cbModelParam._m0[23u].w;
        float _1819 = fma(_861, cbModelParam._m0[21u].z, fma(_860, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _859));
        float _1822 = fma(_861, cbModelParam._m0[22u].z, fma(_860, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _859));
        float _1825 = fma(_861, cbModelParam._m0[23u].z, fma(_860, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _859));
        float _1934;
        if (_1819 > 0.0)
        {
            _1934 = abs((1.0 - _1808) / _1819);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1819 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1808 + 1.0) / _1819);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1934 = frontier_phi_27_23_ladder;
        }
        float _2251;
        if (_1822 > 0.0)
        {
            _2251 = abs((1.0 - _1812) / _1822);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1822 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1812 + 1.0) / _1822);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2251 = frontier_phi_39_34_ladder;
        }
        float _2589;
        if (_1825 > 0.0)
        {
            _2589 = abs((1.0 - _1816) / _1825);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1825 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1816 + 1.0) / _1825);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2589 = frontier_phi_49_46_ladder;
        }
        float _2591 = isnan(_2251) ? _1934 : (isnan(_1934) ? _2251 : min(_1934, _2251));
        float _2592 = isnan(_2589) ? _2591 : (isnan(_2591) ? _2589 : min(_2591, _2589));
        float _2596 = (_2592 * _1819) + _1808;
        float _2597 = (_2592 * _1822) + _1812;
        float _2598 = (_2592 * _1825) + _1816;
        float _2599 = _2592 * 9.9999997473787516355514526367188e-05;
        float _2600 = (-1.0) - _2599;
        float _2602 = _2599 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2598 > _2602) || ((_2598 < _2600) || ((_2597 > _2602) || ((_2597 < _2600) || ((_2596 < _2600) || (_2596 > _2602))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2720 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2598, cbModelParam._m0[17u].z, fma(_2597, cbModelParam._m0[17u].y, _2596 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2598, cbModelParam._m0[18u].z, fma(_2597, cbModelParam._m0[18u].y, _2596 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2598, cbModelParam._m0[19u].z, fma(_2597, cbModelParam._m0[19u].y, _2596 * cbModelParam._m0[19u].x))), _1753);
            frontier_phi_24_49_ladder = _2720.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2720.y * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2720.x * cbModelParam._m0[1u].z;
        }
        _1844 = frontier_phi_24_49_ladder_2;
        _1846 = frontier_phi_24_49_ladder_1;
        _1848 = frontier_phi_24_49_ladder;
    }
    else
    {
        vec4 _1828 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_859, _860, _861), _1753);
        _1844 = _1828.x * cbModelParam._m0[1u].z;
        _1846 = _1828.y * cbModelParam._m0[1u].z;
        _1848 = _1828.z * cbModelParam._m0[1u].z;
    }
    float _1861 = (((_881 * _840) + _882) * _854) * ((cbModelParam._m0[1u].w * (_1844 - _1744)) + _1744);
    float _1863 = (((_881 * _841) + _882) * _854) * ((cbModelParam._m0[1u].w * (_1846 - _1746)) + _1746);
    float _1865 = (((_881 * _842) + _882) * _854) * ((cbModelParam._m0[1u].w * (_1848 - _1748)) + _1748);
    float _1868 = fma(_1865, cbSceneParam._m0[89u].z, fma(_1863, cbSceneParam._m0[89u].y, _1861 * cbSceneParam._m0[89u].x));
    float _1871 = fma(_1865, cbSceneParam._m0[90u].z, fma(_1863, cbSceneParam._m0[90u].y, _1861 * cbSceneParam._m0[90u].x));
    float _1874 = fma(_1865, cbSceneParam._m0[91u].z, fma(_1863, cbSceneParam._m0[91u].y, _1861 * cbSceneParam._m0[91u].x));
    float _1908 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1912 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1916 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1920 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1921 = _1908 / _1920;
    float _1922 = _1912 / _1920;
    float _1923 = _1916 / _1920;
    float _2070;
    float _2071;
    float _2072;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1950 = ((uint(_1923 > cbSceneParam._m0[59u].y) + uint(_1923 > cbSceneParam._m0[59u].x)) + uint(_1923 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1951 = _1950 + 43u;
        uint _1959 = _1950 + 44u;
        uint _1967 = _1950 + 45u;
        uint _1975 = _1950 + 46u;
        float _1986 = fma(_1920, cbSceneParam._m0[_1951].w, fma(_1916, cbSceneParam._m0[_1951].z, fma(_1912, cbSceneParam._m0[_1951].y, _1908 * cbSceneParam._m0[_1951].x)));
        float _1990 = fma(_1920, cbSceneParam._m0[_1959].w, fma(_1916, cbSceneParam._m0[_1959].z, fma(_1912, cbSceneParam._m0[_1959].y, _1908 * cbSceneParam._m0[_1959].x)));
        float _1998 = fma(_1920, cbSceneParam._m0[_1975].w, fma(_1916, cbSceneParam._m0[_1975].z, fma(_1912, cbSceneParam._m0[_1975].y, _1908 * cbSceneParam._m0[_1975].x)));
        float _2003 = cbSceneParam._m0[33u].z * _1998;
        float _2005 = cbSceneParam._m0[33u].w * _1998;
        float _2008 = fma(_1920, cbSceneParam._m0[_1967].w, fma(_1916, cbSceneParam._m0[_1967].z, fma(_1912, cbSceneParam._m0[_1967].y, _1908 * cbSceneParam._m0[_1967].x))) / _1998;
        float _2056 = (cbSceneParam._m0[33u].x - sqrt(((_1922 * _1922) + (_1921 * _1921)) + (_1923 * _1923))) * cbSceneParam._m0[33u].y;
        float _4419 = isnan(0.0) ? _2056 : (isnan(_2056) ? 0.0 : max(_2056, 0.0));
        float _2063 = (isnan(1.0) ? _4419 : (isnan(_4419) ? 1.0 : min(_4419, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2003 + _1986) / _1998, (_2005 + _1990) / _1998), _2008), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2005 + _1986) / _1998, (_1990 - _2003) / _1998), _2008), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1986 - _2003) / _1998, (_1990 - _2005) / _1998), _2008), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1986 - _2005) / _1998, (_2003 + _1990) / _1998), _2008), 0.0)).x), vec4(0.25)));
        _2070 = 1.0 - (_2063 * cbSceneParam._m0[34u].x);
        _2071 = 1.0 - (_2063 * cbSceneParam._m0[34u].y);
        _2072 = 1.0 - (_2063 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2070 = 1.0;
        _2071 = 1.0;
        _2072 = 1.0;
    }
    float _2136;
    float _2138;
    float _2140;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2124 = fma(_1920, cbSceneParam._m0[63u].w, fma(_1916, cbSceneParam._m0[63u].z, fma(_1912, cbSceneParam._m0[63u].y, _1908 * cbSceneParam._m0[63u].x)));
        float _2125 = fma(_1920, cbSceneParam._m0[60u].w, fma(_1916, cbSceneParam._m0[60u].z, fma(_1912, cbSceneParam._m0[60u].y, _1908 * cbSceneParam._m0[60u].x))) / _2124;
        float _2126 = fma(_1920, cbSceneParam._m0[61u].w, fma(_1916, cbSceneParam._m0[61u].z, fma(_1912, cbSceneParam._m0[61u].y, _1908 * cbSceneParam._m0[61u].x))) / _2124;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_2125 >= cbSceneParam._m0[64u].x) && (_2126 >= cbSceneParam._m0[64u].y)) && (_2125 <= cbSceneParam._m0[64u].z)) && (_2126 <= cbSceneParam._m0[64u].w))
        {
            float _2264 = fma(_1920, cbSceneParam._m0[62u].w, fma(_1916, cbSceneParam._m0[62u].z, fma(_1912, cbSceneParam._m0[62u].y, _1908 * cbSceneParam._m0[62u].x))) / _2124;
            float _2268 = isnan(cbSceneParam._m0[41u].w) ? _2264 : (isnan(_2264) ? cbSceneParam._m0[41u].w : max(_2264, cbSceneParam._m0[41u].w));
            float _2311 = (cbSceneParam._m0[33u].x - sqrt(((_1922 * _1922) + (_1921 * _1921)) + (_1923 * _1923))) * cbSceneParam._m0[33u].y;
            float _4435 = isnan(0.0) ? _2311 : (isnan(_2311) ? 0.0 : max(_2311, 0.0));
            float _2318 = (isnan(1.0) ? _4435 : (isnan(_4435) ? 1.0 : min(_4435, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2125, cbSceneParam._m0[33u].w + _2126), _2268), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2125, _2126 - cbSceneParam._m0[33u].z), _2268), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2125 - cbSceneParam._m0[33u].z, _2126 - cbSceneParam._m0[33u].w), _2268), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2125 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2126), _2268), 0.0)).x), vec4(0.25)));
            float _2322 = 1.0 - (_2318 * cbSceneParam._m0[34u].x);
            float _2323 = 1.0 - (_2318 * cbSceneParam._m0[34u].y);
            float _2324 = 1.0 - (_2318 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2323) ? _2071 : (isnan(_2071) ? _2323 : min(_2071, _2323));
            frontier_phi_36_35_ladder_1 = isnan(_2324) ? _2072 : (isnan(_2072) ? _2324 : min(_2072, _2324));
            frontier_phi_36_35_ladder_2 = isnan(_2322) ? _2070 : (isnan(_2070) ? _2322 : min(_2070, _2322));
        }
        else
        {
            frontier_phi_36_35_ladder = _2071;
            frontier_phi_36_35_ladder_1 = _2072;
            frontier_phi_36_35_ladder_2 = _2070;
        }
        _2136 = frontier_phi_36_35_ladder_2;
        _2138 = frontier_phi_36_35_ladder;
        _2140 = frontier_phi_36_35_ladder_1;
    }
    else
    {
        _2136 = _2070;
        _2138 = _2071;
        _2140 = _2072;
    }
    uvec4 _2145 = floatBitsToUint(cbInstanceData._m0[_745 + 5u]);
    uint _2147 = _2145.x * 14u;
    uint _2148 = _2147 + 13u;
    float _2155 = _854 + (-1.0);
    float _2160 = (cbLight._m0[_2148].x * _2155) + 1.0;
    float _2161 = (cbLight._m0[_2148].y * _2155) + 1.0;
    float _2162 = (cbLight._m0[_2148].z * _2155) + 1.0;
    float _2163 = (cbLight._m0[_2148].w * _2155) + 1.0;
    uint _2164 = _2147 + 5u;
    float _2170 = isnan(1.0) ? _2161 : (isnan(_2161) ? 1.0 : min(_2161, 1.0));
    uint _2174 = _2147 + 4u;
    float _2183 = isnan(1.0) ? _2160 : (isnan(_2160) ? 1.0 : min(_2160, 1.0));
    uint _2187 = _2147 | 1u;
    float _2198 = dot(vec3(cbLight._m0[_2147].xyz), vec3(_478, _479, _480));
    float _2201 = dot(vec3(cbLight._m0[_2187].xyz), vec3(_478, _479, _480));
    float _4471 = isnan(0.0) ? _2198 : (isnan(_2198) ? 0.0 : max(_2198, 0.0));
    float _4482 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
    float _2206 = (isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0))) * 0.3183098733425140380859375;
    float _2208 = (isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0))) * 0.3183098733425140380859375;
    float _2215 = ((cbLight._m0[_2164].x * _2170) * _2208) + (((cbLight._m0[_2174].x * _2136) * _2183) * _2206);
    float _2216 = ((_2170 * cbLight._m0[_2164].y) * _2208) + (((cbLight._m0[_2174].y * _2138) * _2183) * _2206);
    float _2217 = ((_2170 * cbLight._m0[_2164].z) * _2208) + (((cbLight._m0[_2174].z * _2140) * _2183) * _2206);
    uvec4 _2221 = floatBitsToUint(cbLight._m0[_2147 + 12u]);
    bool _2223 = _2221.x == 0u;
    float _2325;
    float _2327;
    float _2329;
    if (_2223)
    {
        _2325 = _2215;
        _2327 = _2216;
        _2329 = _2217;
    }
    else
    {
        uint _2333 = _2147 + 6u;
        float _2349 = (dot(vec3(cbLight._m0[_2147 + 2u].xyz), vec3(_478, _479, _480)) * 0.5) + 0.5;
        float _2350 = _2349 * _2349;
        float _4493 = isnan(0.0) ? _2350 : (isnan(_2350) ? 0.0 : max(_2350, 0.0));
        float _2351 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
        float _2352 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
        _2325 = (((cbLight._m0[_2333].x * 0.3183098733425140380859375) * _2351) * _2352) + _2215;
        _2327 = (((cbLight._m0[_2333].y * 0.3183098733425140380859375) * _2351) * _2352) + _2216;
        _2329 = (((cbLight._m0[_2333].z * 0.3183098733425140380859375) * _2351) * _2352) + _2217;
    }
    bool _2332 = _2221.y == 0u;
    float _2387;
    float _2389;
    float _2391;
    if (_2332)
    {
        _2387 = _2325;
        _2389 = _2327;
        _2391 = _2329;
    }
    else
    {
        uint _2560 = _2147 + 7u;
        float _2576 = (dot(vec3(cbLight._m0[_2147 + 3u].xyz), vec3(_478, _479, _480)) * 0.5) + 0.5;
        float _2577 = _2576 * _2576;
        float _4509 = isnan(0.0) ? _2577 : (isnan(_2577) ? 0.0 : max(_2577, 0.0));
        float _2578 = isnan(1.0) ? _4509 : (isnan(_4509) ? 1.0 : min(_4509, 1.0));
        float _2579 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2387 = (((cbLight._m0[_2560].x * 0.3183098733425140380859375) * _2578) * _2579) + _2325;
        _2389 = (((cbLight._m0[_2560].y * 0.3183098733425140380859375) * _2578) * _2579) + _2327;
        _2391 = (((cbLight._m0[_2560].z * 0.3183098733425140380859375) * _2578) * _2579) + _2329;
    }
    uint _2394 = _2147 + 8u;
    float _2407 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2147].w)) * _721) * 0.949999988079071044921875);
    float _2408 = _2407 * _2407;
    float _2409 = cbLight._m0[_2147].x + _504;
    float _2410 = cbLight._m0[_2147].y + _505;
    float _2411 = cbLight._m0[_2147].z + _506;
    float _2415 = inversesqrt(dot(vec3(_2409, _2410, _2411), vec3(_2409, _2410, _2411)));
    float _2416 = _2415 * _2409;
    float _2417 = _2415 * _2410;
    float _2418 = _2415 * _2411;
    float _2419 = dot(vec3(_478, _479, _480), vec3(cbLight._m0[_2147].xyz));
    float _4525 = isnan(0.0) ? _2419 : (isnan(_2419) ? 0.0 : max(_2419, 0.0));
    float _2422 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
    float _4536 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _2423 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
    float _2424 = dot(vec3(_478, _479, _480), vec3(_2416, _2417, _2418));
    float _4547 = isnan(0.0) ? _2424 : (isnan(_2424) ? 0.0 : max(_2424, 0.0));
    float _2427 = isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0));
    float _2428 = dot(vec3(cbLight._m0[_2147].xyz), vec3(_2416, _2417, _2418));
    float _4558 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
    float _2432 = _2408 * _2408;
    float _2436 = ((_2427 * _2427) * (_2432 + (-1.0))) + 1.0;
    float _2444 = exp2(log2(1.0 - (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0)))) * 5.0);
    float _2445 = 0.959999978542327880859375 - _837;
    float _2447 = 0.959999978542327880859375 - _838;
    float _2448 = 0.959999978542327880859375 - _839;
    float _2455 = 1.0 - _2408;
    float _2466 = (0.5 / (((_2423 * ((_2422 * _2455) + _2408)) + 9.9999999392252902907785028219223e-09) + (((_2423 * _2455) + _2408) * _2422))) * _2422;
    float _4569 = isnan(0.0) ? _2466 : (isnan(_2466) ? 0.0 : max(_2466, 0.0));
    float _2468 = (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * (_2432 / ((_2436 * _2436) * 3.141590118408203125));
    uint _2482 = _2147 + 9u;
    float _2493 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2187].w)) * _721) * 0.949999988079071044921875);
    float _2494 = _2493 * _2493;
    float _2495 = cbLight._m0[_2187].x + _504;
    float _2496 = cbLight._m0[_2187].y + _505;
    float _2497 = cbLight._m0[_2187].z + _506;
    float _2501 = inversesqrt(dot(vec3(_2495, _2496, _2497), vec3(_2495, _2496, _2497)));
    float _2502 = _2501 * _2495;
    float _2503 = _2501 * _2496;
    float _2504 = _2501 * _2497;
    float _2505 = dot(vec3(_478, _479, _480), vec3(cbLight._m0[_2187].xyz));
    float _4580 = isnan(0.0) ? _2505 : (isnan(_2505) ? 0.0 : max(_2505, 0.0));
    float _2508 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
    float _2509 = dot(vec3(_478, _479, _480), vec3(_2502, _2503, _2504));
    float _4591 = isnan(0.0) ? _2509 : (isnan(_2509) ? 0.0 : max(_2509, 0.0));
    float _2512 = isnan(1.0) ? _4591 : (isnan(_4591) ? 1.0 : min(_4591, 1.0));
    float _2513 = dot(vec3(cbLight._m0[_2187].xyz), vec3(_2502, _2503, _2504));
    float _4602 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
    float _2517 = _2494 * _2494;
    float _2521 = ((_2512 * _2512) * (_2517 + (-1.0))) + 1.0;
    float _2528 = exp2(log2(1.0 - (isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0)))) * 5.0);
    float _2535 = 1.0 - _2494;
    float _2545 = (0.5 / (((_2423 * ((_2508 * _2535) + _2494)) + 9.9999999392252902907785028219223e-09) + (((_2423 * _2535) + _2494) * _2508))) * _2508;
    float _4613 = isnan(0.0) ? _2545 : (isnan(_2545) ? 0.0 : max(_2545, 0.0));
    float _2547 = (isnan(1.0) ? _4613 : (isnan(_4613) ? 1.0 : min(_4613, 1.0))) * (_2517 / ((_2521 * _2521) * 3.141590118408203125));
    float _2557 = (((((_2528 * _2445) + _840) * cbLight._m0[_2482].x) * _2547) * _2170) + ((((cbLight._m0[_2394].x * _2136) * ((_2444 * _2445) + _840)) * _2468) * _2183);
    float _2558 = (((((_2528 * _2447) + _841) * cbLight._m0[_2482].y) * _2547) * _2170) + ((((cbLight._m0[_2394].y * _2138) * ((_2444 * _2447) + _841)) * _2468) * _2183);
    float _2559 = (((((_2528 * _2448) + _842) * cbLight._m0[_2482].z) * _2547) * _2170) + ((((cbLight._m0[_2394].z * _2140) * ((_2444 * _2448) + _842)) * _2468) * _2183);
    float _2615;
    float _2617;
    float _2619;
    if (_2223)
    {
        _2615 = _2557;
        _2617 = _2558;
        _2619 = _2559;
    }
    else
    {
        uint _2621 = _2147 + 2u;
        uint _2625 = _2147 + 10u;
        float _2639 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2621].w)) * _721) * 0.949999988079071044921875);
        float _2640 = _2639 * _2639;
        float _2641 = cbLight._m0[_2621].x + _504;
        float _2642 = cbLight._m0[_2621].y + _505;
        float _2643 = cbLight._m0[_2621].z + _506;
        float _2647 = inversesqrt(dot(vec3(_2641, _2642, _2643), vec3(_2641, _2642, _2643)));
        float _2648 = _2647 * _2641;
        float _2649 = _2647 * _2642;
        float _2650 = _2647 * _2643;
        float _2651 = dot(vec3(_478, _479, _480), vec3(cbLight._m0[_2621].xyz));
        float _4624 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
        float _2654 = isnan(1.0) ? _4624 : (isnan(_4624) ? 1.0 : min(_4624, 1.0));
        float _2655 = dot(vec3(_478, _479, _480), vec3(_2648, _2649, _2650));
        float _4635 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
        float _2658 = isnan(1.0) ? _4635 : (isnan(_4635) ? 1.0 : min(_4635, 1.0));
        float _2659 = dot(vec3(cbLight._m0[_2621].xyz), vec3(_2648, _2649, _2650));
        float _4646 = isnan(0.0) ? _2659 : (isnan(_2659) ? 0.0 : max(_2659, 0.0));
        float _2663 = _2640 * _2640;
        float _2667 = ((_2658 * _2658) * (_2663 + (-1.0))) + 1.0;
        float _2674 = exp2(log2(1.0 - (isnan(1.0) ? _4646 : (isnan(_4646) ? 1.0 : min(_4646, 1.0)))) * 5.0);
        float _2681 = 1.0 - _2640;
        float _2691 = (0.5 / (((_2423 * ((_2654 * _2681) + _2640)) + 9.9999999392252902907785028219223e-09) + (((_2423 * _2681) + _2640) * _2654))) * _2654;
        float _4657 = isnan(0.0) ? _2691 : (isnan(_2691) ? 0.0 : max(_2691, 0.0));
        float _2693 = (isnan(1.0) ? _4657 : (isnan(_4657) ? 1.0 : min(_4657, 1.0))) * (_2663 / ((_2667 * _2667) * 3.141590118408203125));
        float _2694 = isnan(1.0) ? _2162 : (isnan(_2162) ? 1.0 : min(_2162, 1.0));
        _2615 = (((((_2674 * _2445) + _840) * cbLight._m0[_2625].x) * _2693) * _2694) + _2557;
        _2617 = (((((_2674 * _2447) + _841) * cbLight._m0[_2625].y) * _2693) * _2694) + _2558;
        _2619 = (((((_2674 * _2448) + _842) * cbLight._m0[_2625].z) * _2693) * _2694) + _2559;
    }
    float _2725;
    float _2727;
    float _2729;
    if (_2332)
    {
        _2725 = _2615;
        _2727 = _2617;
        _2729 = _2619;
    }
    else
    {
        uint _2736 = _2147 + 3u;
        uint _2740 = _2147 + 11u;
        float _2754 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2736].w)) * _721) * 0.949999988079071044921875);
        float _2755 = _2754 * _2754;
        float _2756 = cbLight._m0[_2736].x + _504;
        float _2757 = cbLight._m0[_2736].y + _505;
        float _2758 = cbLight._m0[_2736].z + _506;
        float _2762 = inversesqrt(dot(vec3(_2756, _2757, _2758), vec3(_2756, _2757, _2758)));
        float _2763 = _2762 * _2756;
        float _2764 = _2762 * _2757;
        float _2765 = _2762 * _2758;
        float _2766 = dot(vec3(_478, _479, _480), vec3(cbLight._m0[_2736].xyz));
        float _4673 = isnan(0.0) ? _2766 : (isnan(_2766) ? 0.0 : max(_2766, 0.0));
        float _2769 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
        float _2770 = dot(vec3(_478, _479, _480), vec3(_2763, _2764, _2765));
        float _4684 = isnan(0.0) ? _2770 : (isnan(_2770) ? 0.0 : max(_2770, 0.0));
        float _2773 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
        float _2774 = dot(vec3(cbLight._m0[_2736].xyz), vec3(_2763, _2764, _2765));
        float _4695 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
        float _2778 = _2755 * _2755;
        float _2782 = ((_2773 * _2773) * (_2778 + (-1.0))) + 1.0;
        float _2789 = exp2(log2(1.0 - (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0)))) * 5.0);
        float _2796 = 1.0 - _2755;
        float _2806 = (0.5 / (((_2423 * ((_2769 * _2796) + _2755)) + 9.9999999392252902907785028219223e-09) + (((_2423 * _2796) + _2755) * _2769))) * _2769;
        float _4706 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
        float _2808 = (isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0))) * (_2778 / ((_2782 * _2782) * 3.141590118408203125));
        float _2809 = isnan(1.0) ? _2163 : (isnan(_2163) ? 1.0 : min(_2163, 1.0));
        _2725 = (((((_2789 * _2445) + _840) * cbLight._m0[_2740].x) * _2808) * _2809) + _2615;
        _2727 = (((((_2789 * _2447) + _841) * cbLight._m0[_2740].y) * _2808) * _2809) + _2617;
        _2729 = (((((_2789 * _2448) + _842) * cbLight._m0[_2740].z) * _2808) * _2809) + _2619;
    }
    float _2874;
    float _2876;
    float _2878;
    float _2880;
    float _2882;
    float _2884;
    if (_2145.y == 0u)
    {
        uvec4 _2830 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2831 = _2830.x;
        uint _2842 = uint((float(_2830.y) * floor(float(uint(cbSceneParam._m0[85u].y * _642) / _2831))) + floor(float(uint(cbSceneParam._m0[85u].x * _641) / _2831)));
        float _2852 = (log2(_1923 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2853 = isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0));
        uint _2856 = uint(isnan(14.0) ? _2853 : (isnan(_2853) ? 14.0 : min(_2853, 14.0)));
        uvec4 _2861 = texelFetch(g_lightClusterGridBuffer, int(((_2856 << 2u) + (_2842 << 6u)) >> 2u));
        uint _2862 = _2861.x;
        uint _2863 = _2830.z;
        float _2977;
        float _2979;
        float _2981;
        float _2983;
        float _2985;
        float _2987;
        if (((((1u << ((_2863 >> 4u) & 15u)) + 4294967295u) & _2862) == 0u) || ((_2863 & 240u) == 0u))
        {
            _2977 = 0.0;
            _2979 = 0.0;
            _2981 = 0.0;
            _2983 = 0.0;
            _2985 = 0.0;
            _2987 = 0.0;
        }
        else
        {
            float _2978;
            float _2980;
            float _2982;
            float _2984;
            float _2986;
            float _2988;
            float _3130 = 0.0;
            float _3131 = 0.0;
            float _3132 = 0.0;
            float _3133 = 0.0;
            float _3134 = 0.0;
            float _3135 = 0.0;
            uint _3136 = 0u;
            uint _3145;
            bool _3146;
            for (;;)
            {
                _3145 = texelFetch(g_lightClassification, int((((_2856 << 5u) + (_2842 << 9u)) + (_3136 << 2u)) >> 2u)).x;
                _3146 = _3145 == 0u;
                float frontier_phi_68_pred;
                float frontier_phi_68_pred_1;
                float frontier_phi_68_pred_2;
                float frontier_phi_68_pred_3;
                float frontier_phi_68_pred_4;
                float frontier_phi_68_pred_5;
                if (_3146)
                {
                    frontier_phi_68_pred = _3135;
                    frontier_phi_68_pred_1 = _3134;
                    frontier_phi_68_pred_2 = _3133;
                    frontier_phi_68_pred_3 = _3131;
                    frontier_phi_68_pred_4 = _3130;
                    frontier_phi_68_pred_5 = _3132;
                }
                else
                {
                    float _3254;
                    float _3255;
                    float _3256;
                    float _3257;
                    float _3258;
                    float _3259;
                    uint _3260;
                    _3254 = _3130;
                    _3255 = _3131;
                    _3256 = _3132;
                    _3257 = _3133;
                    _3258 = _3134;
                    _3259 = _3135;
                    _3260 = _3145;
                    float _3186;
                    float _3187;
                    float _3188;
                    float _3189;
                    float _3190;
                    float _3191;
                    for (;;)
                    {
                        uint _3264 = uint(findLSB(_3260)) + (_3136 << 5u);
                        uint _3261 = (_3260 + 4294967295u) & _3260;
                        uint _3266 = _3264 * 48u;
                        vec4 _3280 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3266)).x, texelFetch(g_PointLightRenderingBuffer, int(_3266 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3266 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3266 + 3u)).x));
                        uint _3286 = (_3264 * 48u) + 4u;
                        vec4 _3299 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3286)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3286 + 3u)).x));
                        uint _3305 = (_3264 * 48u) + 8u;
                        vec3 _3316 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3305)).x, texelFetch(g_PointLightRenderingBuffer, int(_3305 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3305 + 2u)).x));
                        float _3320 = _3280.x - _1921;
                        float _3321 = _3280.y - _1922;
                        float _3322 = _3280.z - _1923;
                        float _3323 = dot(vec3(_3320, _3321, _3322), vec3(_3320, _3321, _3322));
                        float _3326 = inversesqrt(_3323);
                        float _3327 = _3326 * _3320;
                        float _3328 = _3326 * _3321;
                        float _3329 = _3326 * _3322;
                        float _3330 = dot(vec3(_666, _669, _672), vec3(_3327, _3328, _3329));
                        float _3335 = 1.0 - (_3323 * _3280.w);
                        float _4732 = isnan(0.0) ? _3335 : (isnan(_3335) ? 0.0 : max(_3335, 0.0));
                        float _3336 = isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0));
                        float _3337 = sqrt(_3323) * _3299.w;
                        float _3340 = 1.39999997615814208984375 / (_3337 + 1.39999997615814208984375);
                        float _3341 = _3340 * _3340;
                        float _3344 = ((1.0 - _3341) * _3330) + _3341;
                        float _3347 = _3337 * _3337;
                        float _3350 = ((isnan(0.0) ? _3344 : (isnan(_3344) ? 0.0 : max(_3344, 0.0))) * _3336) / ((_3347 * 0.699999988079071044921875) + 1.0);
                        float _3354 = (-0.0) - _1921;
                        float _3355 = (-0.0) - _1922;
                        float _3356 = (-0.0) - _1923;
                        float _3360 = inversesqrt(dot(vec3(_3354, _3355, _3356), vec3(_3354, _3355, _3356)));
                        float _3361 = _3360 * _3354;
                        float _3362 = _3360 * _3355;
                        float _3363 = _3360 * _3356;
                        float _3370 = exp2(log2(1.0 / ((_3347 * 3.5) + 5.0)) * 0.25);
                        float _3371 = 1.0 - _864;
                        float _3378 = sqrt(1.0 - ((1.0 - (_3371 * _3371)) * (1.0 - (_3370 * _3370))));
                        float _3379 = _3378 * _3378;
                        float _3380 = _3379 * _3379;
                        float _3381 = _3361 + _3327;
                        float _3382 = _3362 + _3328;
                        float _3383 = _3363 + _3329;
                        float _3387 = inversesqrt(dot(vec3(_3381, _3382, _3383), vec3(_3381, _3382, _3383)));
                        float _3391 = dot(vec3(_666, _669, _672), vec3(_3361, _3362, _3363));
                        float _4748 = isnan(0.0) ? _3391 : (isnan(_3391) ? 0.0 : max(_3391, 0.0));
                        float _3394 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
                        float _3395 = dot(vec3(_666, _669, _672), vec3(_3387 * _3381, _3387 * _3382, _3387 * _3383));
                        float _4759 = isnan(0.0) ? _3395 : (isnan(_3395) ? 0.0 : max(_3395, 0.0));
                        float _3398 = isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0));
                        float _3402 = ((_3398 * _3398) * (_3380 + (-1.0))) + 1.0;
                        float _3403 = _3340 * _3379;
                        float _3404 = _3403 * _3403;
                        float _3407 = ((1.0 - _3404) * _3330) + _3404;
                        float _4770 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3408 = isnan(1.0) ? _4770 : (isnan(_4770) ? 1.0 : min(_4770, 1.0));
                        float _3409 = 1.0 - _3379;
                        float _3419 = (0.5 / (((_3408 * ((_3394 * _3409) + _3379)) + 9.9999999392252902907785028219223e-09) + (((_3408 * _3409) + _3379) * _3394))) * _3408;
                        float _4781 = isnan(0.0) ? _3419 : (isnan(_3419) ? 0.0 : max(_3419, 0.0));
                        float _3430 = (((_3380 * 3.1415927410125732421875) * (isnan(1.0) ? _4781 : (isnan(_4781) ? 1.0 : min(_4781, 1.0)))) / ((_3402 * _3402) * ((_3347 * 2.1991131305694580078125) + 3.141590118408203125))) * _3336;
                        _3189 = (_3350 * _3299.x) + _3257;
                        _3190 = (_3350 * _3299.y) + _3258;
                        _3191 = (_3350 * _3299.z) + _3259;
                        _3186 = (_3430 * _3316.x) + _3254;
                        _3187 = (_3430 * _3316.y) + _3255;
                        _3188 = (_3430 * _3316.z) + _3256;
                        if (_3261 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3254 = _3186;
                            _3255 = _3187;
                            _3256 = _3188;
                            _3257 = _3189;
                            _3258 = _3190;
                            _3259 = _3191;
                            _3260 = _3261;
                        }
                    }
                    frontier_phi_68_pred = _3191;
                    frontier_phi_68_pred_1 = _3190;
                    frontier_phi_68_pred_2 = _3189;
                    frontier_phi_68_pred_3 = _3187;
                    frontier_phi_68_pred_4 = _3186;
                    frontier_phi_68_pred_5 = _3188;
                }
                _2988 = frontier_phi_68_pred;
                _2986 = frontier_phi_68_pred_1;
                _2984 = frontier_phi_68_pred_2;
                _2980 = frontier_phi_68_pred_3;
                _2978 = frontier_phi_68_pred_4;
                _2982 = frontier_phi_68_pred_5;
                uint _3137 = _3136 + 1u;
                if (_3137 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3130 = _2978;
                    _3131 = _2980;
                    _3132 = _2982;
                    _3133 = _2984;
                    _3134 = _2986;
                    _3135 = _2988;
                    _3136 = _3137;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2977 = _2978;
            _2979 = _2980;
            _2981 = _2982;
            _2983 = _2984;
            _2985 = _2986;
            _2987 = _2988;
        }
        uvec4 _2991 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2992 = _2991.z;
        uint _2994 = (_2992 >> 8u) & 15u;
        float _3098;
        float _3100;
        float _3102;
        float _3104;
        float _3106;
        float _3108;
        if (((4294967295u << _2994) & _2862) == 0u)
        {
            _3098 = _2977;
            _3100 = _2979;
            _3102 = _2981;
            _3104 = _2983;
            _3106 = _2985;
            _3108 = _2987;
        }
        else
        {
            float _3123 = inversesqrt(dot(vec3(_1921, _1922, _1923), vec3(_1921, _1922, _1923)));
            float _3124 = _3123 * _1921;
            float _3125 = _3123 * _1922;
            float _3126 = _3123 * _1923;
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            float frontier_phi_62_63_ladder_3;
            float frontier_phi_62_63_ladder_4;
            float frontier_phi_62_63_ladder_5;
            if (_2994 < ((_2992 >> 12u) & 15u))
            {
                float _3099;
                float _3101;
                float _3103;
                float _3105;
                float _3107;
                float _3109;
                float _3237 = _2977;
                float _3238 = _2979;
                float _3239 = _2981;
                float _3240 = _2983;
                float _3241 = _2985;
                float _3242 = _2987;
                uint _3243 = _2994;
                uint _3252;
                bool _3253;
                for (;;)
                {
                    _3252 = texelFetch(g_lightClassification, int((((_2856 << 5u) + (_2842 << 9u)) + (_3243 << 2u)) >> 2u)).x;
                    _3253 = _3252 == 0u;
                    float frontier_phi_74_pred;
                    float frontier_phi_74_pred_1;
                    float frontier_phi_74_pred_2;
                    float frontier_phi_74_pred_3;
                    float frontier_phi_74_pred_4;
                    float frontier_phi_74_pred_5;
                    if (_3253)
                    {
                        frontier_phi_74_pred = _3239;
                        frontier_phi_74_pred_1 = _3238;
                        frontier_phi_74_pred_2 = _3237;
                        frontier_phi_74_pred_3 = _3242;
                        frontier_phi_74_pred_4 = _3241;
                        frontier_phi_74_pred_5 = _3240;
                    }
                    else
                    {
                        float _3435;
                        float _3436;
                        float _3437;
                        float _3438;
                        float _3439;
                        float _3440;
                        float _3730;
                        float _3731;
                        float _3732;
                        float _3733;
                        float _3734;
                        float _3735;
                        float _3448 = _3237;
                        float _3449 = _3238;
                        float _3450 = _3239;
                        float _3451 = _3240;
                        float _3452 = _3241;
                        float _3453 = _3242;
                        uint _3454 = _3252;
                        uint _3455;
                        vec4 _3480;
                        float _3481;
                        vec4 _3496;
                        vec3 _3508;
                        vec4 _3523;
                        vec4 _3539;
                        float _3586;
                        bool _3587;
                        for (;;)
                        {
                            uint _3465 = ((_3243 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3454));
                            _3455 = (_3454 + 4294967295u) & _3454;
                            uint _3467 = _3465 * 40u;
                            _3480 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3467)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3467 + 3u)).x));
                            _3481 = _3480.w;
                            uint _3483 = (_3465 * 40u) + 4u;
                            _3496 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3483)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3483 + 3u)).x));
                            uint _3498 = (_3465 * 40u) + 8u;
                            _3508 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3498)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3498 + 2u)).x));
                            uint _3510 = (_3465 * 40u) + 16u;
                            _3523 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3510)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3510 + 3u)).x));
                            uint _3526 = (_3465 * 40u) + 20u;
                            _3539 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3526)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 3u)).x));
                            uint _3542 = (_3465 * 40u) + 24u;
                            vec4 _3555 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3542)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3542 + 3u)).x));
                            uint _3561 = (_3465 * 40u) + 28u;
                            vec4 _3574 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3561)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3561 + 3u)).x));
                            _3586 = fma(_1923, _3574.z, fma(_1922, _3574.y, _3574.x * _1921)) + _3574.w;
                            _3587 = !((fma(_1923, _3555.z, fma(_1922, _3555.y, _3555.x * _1921)) + _3555.w) <= 0.0);
                            float frontier_phi_80_pred;
                            float frontier_phi_80_pred_1;
                            float frontier_phi_80_pred_2;
                            float frontier_phi_80_pred_3;
                            float frontier_phi_80_pred_4;
                            float frontier_phi_80_pred_5;
                            if (_3587)
                            {
                                float _3614 = _3480.x - _1921;
                                float _3615 = _3480.y - _1922;
                                float _3616 = _3480.z - _1923;
                                float _3617 = dot(vec3(_3614, _3615, _3616), vec3(_3614, _3615, _3616));
                                float _3620 = inversesqrt(_3617);
                                float _3621 = _3620 * _3614;
                                float _3622 = _3620 * _3615;
                                float _3623 = _3620 * _3616;
                                float _3627 = 1.0 - (_3617 / (_3481 * _3481));
                                float _4792 = isnan(0.0) ? _3627 : (isnan(_3627) ? 0.0 : max(_3627, 0.0));
                                float _3628 = isnan(1.0) ? _4792 : (isnan(_4792) ? 1.0 : min(_4792, 1.0));
                                float _3632 = sqrt(_3617) * _3496.w;
                                float _3634 = 1.39999997615814208984375 / (_3632 + 1.39999997615814208984375);
                                float _3635 = _3634 * _3634;
                                float _3638 = ((1.0 - _3635) * dot(vec3(_3621, _3622, _3623), vec3(_666, _669, _672))) + _3635;
                                float _3641 = _3632 * _3632;
                                float _3645 = (fma(_1923, _3523.z, fma(_1922, _3523.y, _3523.x * _1921)) + _3523.w) / _3586;
                                float _3646 = (fma(_1923, _3539.z, fma(_1922, _3539.y, _3539.x * _1921)) + _3539.w) / _3586;
                                float _3650 = 1.0 - dot(vec2(_3645, _3646), vec2(_3645, _3646));
                                float _4808 = isnan(0.0) ? _3650 : (isnan(_3650) ? 0.0 : max(_3650, 0.0));
                                float _3651 = isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0));
                                float _3652 = _3651 * (((isnan(0.0) ? _3638 : (isnan(_3638) ? 0.0 : max(_3638, 0.0))) * _3628) / ((_3641 * 0.699999988079071044921875) + 1.0));
                                float _3664 = exp2(log2(1.0 / ((_3641 * 3.5) + 5.0)) * 0.25);
                                float _3665 = 1.0 - _864;
                                float _3672 = sqrt(1.0 - ((1.0 - (_3665 * _3665)) * (1.0 - (_3664 * _3664))));
                                float _3673 = _3672 * _3672;
                                float _3674 = _3673 * _3673;
                                float _3675 = _3621 - _3124;
                                float _3676 = _3622 - _3125;
                                float _3677 = _3623 - _3126;
                                float _3681 = inversesqrt(dot(vec3(_3675, _3676, _3677), vec3(_3675, _3676, _3677)));
                                float _3685 = dot(vec3(_666, _669, _672), vec3((-0.0) - _3124, (-0.0) - _3125, (-0.0) - _3126));
                                float _4819 = isnan(0.0) ? _3685 : (isnan(_3685) ? 0.0 : max(_3685, 0.0));
                                float _3688 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
                                float _3689 = dot(vec3(_666, _669, _672), vec3(_3681 * _3675, _3681 * _3676, _3681 * _3677));
                                float _4830 = isnan(0.0) ? _3689 : (isnan(_3689) ? 0.0 : max(_3689, 0.0));
                                float _3692 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
                                float _3696 = ((_3692 * _3692) * (_3674 + (-1.0))) + 1.0;
                                float _3697 = _3634 * _3673;
                                float _3698 = _3697 * _3697;
                                float _3704 = ((1.0 - _3698) * dot(vec3(_666, _669, _672), vec3(_3621, _3622, _3623))) + _3698;
                                float _4841 = isnan(0.0) ? _3704 : (isnan(_3704) ? 0.0 : max(_3704, 0.0));
                                float _3705 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
                                float _3706 = 1.0 - _3673;
                                float _3716 = (0.5 / (((_3705 * ((_3688 * _3706) + _3673)) + 9.9999999392252902907785028219223e-09) + (((_3705 * _3706) + _3673) * _3688))) * _3705;
                                float _4852 = isnan(0.0) ? _3716 : (isnan(_3716) ? 0.0 : max(_3716, 0.0));
                                float _3726 = (_3651 * _3628) * (((_3674 * 3.1415927410125732421875) * (isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0)))) / ((_3696 * _3696) * ((_3641 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_80_pred = _3726 * _3508.z;
                                frontier_phi_80_pred_1 = _3726 * _3508.y;
                                frontier_phi_80_pred_2 = _3726 * _3508.x;
                                frontier_phi_80_pred_3 = _3652 * _3496.z;
                                frontier_phi_80_pred_4 = _3652 * _3496.y;
                                frontier_phi_80_pred_5 = _3652 * _3496.x;
                            }
                            else
                            {
                                frontier_phi_80_pred = 0.0;
                                frontier_phi_80_pred_1 = 0.0;
                                frontier_phi_80_pred_2 = 0.0;
                                frontier_phi_80_pred_3 = 0.0;
                                frontier_phi_80_pred_4 = 0.0;
                                frontier_phi_80_pred_5 = 0.0;
                            }
                            _3732 = frontier_phi_80_pred;
                            _3731 = frontier_phi_80_pred_1;
                            _3730 = frontier_phi_80_pred_2;
                            _3735 = frontier_phi_80_pred_3;
                            _3734 = frontier_phi_80_pred_4;
                            _3733 = frontier_phi_80_pred_5;
                            _3438 = _3733 + _3451;
                            _3439 = _3734 + _3452;
                            _3440 = _3735 + _3453;
                            _3435 = _3730 + _3448;
                            _3436 = _3731 + _3449;
                            _3437 = _3732 + _3450;
                            if (_3455 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3448 = _3435;
                                _3449 = _3436;
                                _3450 = _3437;
                                _3451 = _3438;
                                _3452 = _3439;
                                _3453 = _3440;
                                _3454 = _3455;
                                continue;
                            }
                        }
                        frontier_phi_74_pred = _3437;
                        frontier_phi_74_pred_1 = _3436;
                        frontier_phi_74_pred_2 = _3435;
                        frontier_phi_74_pred_3 = _3440;
                        frontier_phi_74_pred_4 = _3439;
                        frontier_phi_74_pred_5 = _3438;
                    }
                    _3103 = frontier_phi_74_pred;
                    _3101 = frontier_phi_74_pred_1;
                    _3099 = frontier_phi_74_pred_2;
                    _3109 = frontier_phi_74_pred_3;
                    _3107 = frontier_phi_74_pred_4;
                    _3105 = frontier_phi_74_pred_5;
                    uint _3244 = _3243 + 1u;
                    if (_3244 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3237 = _3099;
                        _3238 = _3101;
                        _3239 = _3103;
                        _3240 = _3105;
                        _3241 = _3107;
                        _3242 = _3109;
                        _3243 = _3244;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _3107;
                frontier_phi_62_63_ladder_1 = _3105;
                frontier_phi_62_63_ladder_2 = _3103;
                frontier_phi_62_63_ladder_3 = _3109;
                frontier_phi_62_63_ladder_4 = _3101;
                frontier_phi_62_63_ladder_5 = _3099;
            }
            else
            {
                frontier_phi_62_63_ladder = _2985;
                frontier_phi_62_63_ladder_1 = _2983;
                frontier_phi_62_63_ladder_2 = _2981;
                frontier_phi_62_63_ladder_3 = _2987;
                frontier_phi_62_63_ladder_4 = _2979;
                frontier_phi_62_63_ladder_5 = _2977;
            }
            _3098 = frontier_phi_62_63_ladder_5;
            _3100 = frontier_phi_62_63_ladder_4;
            _3102 = frontier_phi_62_63_ladder_2;
            _3104 = frontier_phi_62_63_ladder_1;
            _3106 = frontier_phi_62_63_ladder;
            _3108 = frontier_phi_62_63_ladder_3;
        }
        float _3113 = isnan(1.0) ? _854 : (isnan(_854) ? 1.0 : min(_854, 1.0));
        _2874 = (_3113 * _3104) + _2387;
        _2876 = (_3113 * _3106) + _2389;
        _2878 = (_3113 * _3108) + _2391;
        _2880 = ((_3098 * _840) * _3113) + _2725;
        _2882 = ((_3100 * _841) * _3113) + _2727;
        _2884 = ((_3102 * _842) * _3113) + _2729;
    }
    else
    {
        _2874 = _2387;
        _2876 = _2389;
        _2878 = _2391;
        _2880 = _2725;
        _2882 = _2727;
        _2884 = _2729;
    }
    uint _2890 = _747 + uint(cbMatDynParam._m0[0u].w);
    float _2896 = cbInstanceData._m0[_2890].x * (((((cbMatDynParam._m0[8u].x - cbMatDynParam._m0[7u].x) * _520) + cbMatDynParam._m0[7u].x) + (((((cbMtdParam._m0[12u].x * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _428) * _441.x) * _549)) + (((_578 - (_578 * _486)) + (cbMatDynParam._m0[11u].x * _609)) * cbMatDynParam._m0[9u].x));
    float _2897 = cbInstanceData._m0[_2890].y * (((((cbMatDynParam._m0[8u].y - cbMatDynParam._m0[7u].y) * _520) + cbMatDynParam._m0[7u].y) + (((((cbMtdParam._m0[12u].y * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _428) * _441.y) * _549)) + (((_580 - (_580 * _486)) + (cbMatDynParam._m0[11u].y * _609)) * cbMatDynParam._m0[9u].y));
    float _2898 = cbInstanceData._m0[_2890].z * (((((cbMatDynParam._m0[8u].z - cbMatDynParam._m0[7u].z) * _520) + cbMatDynParam._m0[7u].z) + (((((cbMtdParam._m0[12u].z * cbMtdParam._m0[16u].z) * cbMtdParam._m0[15u].w) * _428) * _441.z) * _549)) + (((_582 - (_582 * _486)) + (cbMatDynParam._m0[11u].z * _609)) * cbMatDynParam._m0[9u].z));
    float _4868 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
    float _4879 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
    float _4890 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _4901 = isnan(0.0) ? _481 : (isnan(_481) ? 0.0 : max(_481, 0.0));
    float _2916 = (((isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0))) * (_2874 + ((isnan(0.0) ? _1577 : (isnan(_1577) ? 0.0 : max(_1577, 0.0))) * _854))) + ((_2880 + ((isnan(0.0) ? _1868 : (isnan(_1868) ? 0.0 : max(_1868, 0.0))) * _1653)) * cbPerFrame._m0[3u].x)) + _2896;
    float _2918 = (_2897 + ((_2882 + ((isnan(0.0) ? _1871 : (isnan(_1871) ? 0.0 : max(_1871, 0.0))) * _1653)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0))) * (_2876 + ((isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0))) * _854)));
    float _2920 = (_2898 + ((_2884 + ((isnan(0.0) ? _1874 : (isnan(_1874) ? 0.0 : max(_1874, 0.0))) * _1653)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _4890 : (isnan(_4890) ? 1.0 : min(_4890, 1.0))) * (_2878 + ((isnan(0.0) ? _1583 : (isnan(_1583) ? 0.0 : max(_1583, 0.0))) * _854)));
    float _2938 = ((cbMtdParam._m0[2u].w - cbMatDynParam._m0[12u].y) * _549) + cbMatDynParam._m0[12u].y;
    float _2943 = cbInstanceData._m0[_745 + 6u].w * (isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0)));
    float _2948 = _641 / cbSceneParam._m0[86u].x;
    float _2949 = _642 / cbSceneParam._m0[86u].y;
    vec4 _2963 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2948, _2949, (log2((isnan(cbSceneParam._m0[77u].w) ? _635 : (isnan(_635) ? cbSceneParam._m0[77u].w : min(_635, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2965 = _2963.x;
    float _2966 = _2963.y;
    float _2967 = _2963.z;
    float _2968 = _2963.w;
    float _3039;
    float _3041;
    float _3043;
    float _3045;
    if (_635 > cbSceneParam._m0[78u].w)
    {
        float _3002 = isnan(_635) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _635 : min(cbSceneParam._m0[80u].w, _635));
        float _3003 = _3002 / _635;
        float _3014 = _3003 * _289;
        float _3015 = _290 * _3003;
        float _3016 = (-0.0) - _3015;
        float _3017 = _3003 * _291;
        float _3019 = (cbSceneParam._m0[77u].w * _3016) / _3002;
        float _3020 = _3019 + cbSceneParam._m0[79u].w;
        float _3021 = cbSceneParam._m0[79u].w - _3015;
        float _3027 = sqrt(((_3014 * _3014) + (_3015 * _3015)) + (_3017 * _3017));
        float _3030 = (1.0 - (cbSceneParam._m0[77u].w / _3002)) * _3027;
        float _3035 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3037 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3199;
        if (abs((_3016 - _3019) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3199 = ((((_3020 > 0.0) ? exp2(_3035 * _3020) : (2.0 - exp2(_3037 * _3020))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3030;
        }
        else
        {
            float _3159 = 1.0 / cbSceneParam._m0[80u].x;
            float _3160 = isnan(_3021) ? _3020 : (isnan(_3020) ? _3021 : max(_3020, _3021));
            float _3161 = isnan(_3021) ? _3020 : (isnan(_3020) ? _3021 : min(_3020, _3021));
            float _3170 = isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : min(_3160, 0.0));
            float _3171 = isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : min(_3161, 0.0));
            _3199 = ((abs(_3027 / _3016) * cbSceneParam._m0[80u].y) * ((((_3170 - _3171) * 2.0) - ((exp2(_3035 * (isnan(0.0) ? _3160 : (isnan(_3160) ? 0.0 : max(_3160, 0.0)))) - exp2(_3035 * (isnan(0.0) ? _3161 : (isnan(_3161) ? 0.0 : max(_3161, 0.0))))) * _3159)) - ((exp2(_3037 * _3170) - exp2(_3037 * _3171)) * _3159))) + (_3030 * cbSceneParam._m0[80u].z);
        }
        vec4 _3201 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2948, _2949, 1.0), 0.0);
        float _3210 = exp2((_3199 * (-1.44269502162933349609375)) * (1.0 - _3201.w));
        float _3211 = log2(_3210);
        float _3227 = log2(_2968);
        _3039 = (exp2(_3227 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3211 * cbSceneParam._m0[78u].x)) * _3201.x) / cbSceneParam._m0[78u].x)) + _2965;
        _3041 = (exp2(_3227 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3211 * cbSceneParam._m0[78u].y)) * _3201.y) / cbSceneParam._m0[78u].y)) + _2966;
        _3043 = (exp2(_3227 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3211 * cbSceneParam._m0[78u].z)) * _3201.z) / cbSceneParam._m0[78u].z)) + _2967;
        _3045 = _3210 * _2968;
    }
    else
    {
        _3039 = _2965;
        _3041 = _2966;
        _3043 = _2967;
        _3045 = _2968;
    }
    float _3057 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3058 = _3057 == 3.0;
    float _3059 = log2(_3045);
    float _3063 = exp2(_3059 * cbSceneParam._m0[78u].x);
    float _3064 = exp2(_3059 * cbSceneParam._m0[78u].y);
    float _3065 = exp2(_3059 * cbSceneParam._m0[78u].z);
    float _3066 = _3063 * (isnan(0.0) ? _2916 : (isnan(_2916) ? 0.0 : max(_2916, 0.0)));
    float _3067 = _3064 * (isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0)));
    float _3068 = _3065 * (isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0)));
    float _3077 = (_3057 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3077 * (_3058 ? _3066 : (_3066 + (cbSceneParam._m0[72u].w * _3039)));
    SV_Target.y = _3077 * (_3058 ? _3067 : (_3067 + (cbSceneParam._m0[72u].w * _3041)));
    SV_Target.z = _3077 * (_3058 ? _3068 : (_3068 + (cbSceneParam._m0[72u].w * _3043)));
    SV_Target.w = _2943;
    SV_Target_1.x = (((cbMtdParam._m0[2u].x * _2896) * _2938) * _3063) * _3077;
    SV_Target_1.y = (((cbMtdParam._m0[2u].y * _2897) * _2938) * _3064) * _3077;
    SV_Target_1.z = (((cbMtdParam._m0[2u].z * _2898) * _2938) * _3065) * _3077;
    SV_Target_1.w = _2943;
}


