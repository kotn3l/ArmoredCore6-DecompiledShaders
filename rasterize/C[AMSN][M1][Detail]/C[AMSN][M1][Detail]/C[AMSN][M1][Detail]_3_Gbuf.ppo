#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_13;
layout(set = 0, binding = 4) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 5) in float TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _114 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _115 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _116 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _122 = inversesqrt(dot(vec3(_114, _115, _116), vec3(_114, _115, _116)));
    float _129 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _136 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _159 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _165 = _159.x * cbMtdParam._m0[9u].x;
    float _166 = _159.y * cbMtdParam._m0[9u].y;
    float _167 = _159.z * cbMtdParam._m0[9u].z;
    vec4 _184 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _192 = (_184.x * 2.0) + (-1.0);
    float _194 = (_184.y * 2.0) + (-1.0);
    float _195 = dot(vec2(_192, _194), vec2(_192, _194));
    float _303 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _201 = sqrt(1.0 - (isnan(1.0) ? _303 : (isnan(_303) ? 1.0 : min(_303, 1.0))));
    float _202 = _184.z * cbMtdParam._m0[12u].y;
    float _205 = fma(_201, _129 * NORMAL.x, fma(_194, _136 * TANGENT.x, (_122 * _114) * _192));
    float _208 = fma(_201, _129 * NORMAL.y, fma(_194, _136 * TANGENT.y, (_122 * _115) * _192));
    float _211 = fma(_201, _129 * NORMAL.z, fma(_194, _136 * TANGENT.z, (_122 * _116) * _192));
    float _215 = inversesqrt(dot(vec3(_205, _208, _211), vec3(_205, _208, _211)));
    float _314 = isnan(0.0) ? _202 : (isnan(_202) ? 0.0 : max(_202, 0.0));
    float _325 = isnan(0.0) ? _165 : (isnan(_165) ? 0.0 : max(_165, 0.0));
    float _336 = isnan(0.0) ? _166 : (isnan(_166) ? 0.0 : max(_166, 0.0));
    float _347 = isnan(0.0) ? _167 : (isnan(_167) ? 0.0 : max(_167, 0.0));
    uint _234 = uint(roundEven(NORMAL.w)) * 13u;
    uint _236 = (_234 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _242 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _325 : (isnan(_325) ? 1.0 : min(_325, 1.0)))) * cbInstanceData._m0[_236].x;
    float _243 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _336 : (isnan(_336) ? 1.0 : min(_336, 1.0)))) * cbInstanceData._m0[_236].y;
    float _244 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _347 : (isnan(_347) ? 1.0 : min(_347, 1.0)))) * cbInstanceData._m0[_236].z;
    float _358 = isnan(0.0) ? _242 : (isnan(_242) ? 0.0 : max(_242, 0.0));
    float _369 = isnan(0.0) ? _243 : (isnan(_243) ? 0.0 : max(_243, 0.0));
    float _380 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    uint _248 = _234 + 6u;
    bool _277 = cbMtdParam._m0[1u].z != 0.0;
    float _278 = _277 ? cbInstanceData._m0[_248].w : 0.0;
    SV_Target.x = ((_205 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.y = ((_208 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.z = ((_211 * 0.5) * _215) + 0.500488758087158203125;
    SV_Target.w = _278;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _314 : (isnan(_314) ? 1.0 : min(_314, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _277 ? cbInstanceData._m0[_248].w : TEXCOORD_5.w;
    SV_Target_2.x = isnan(1.0) ? _358 : (isnan(_358) ? 1.0 : min(_358, 1.0));
    SV_Target_2.y = isnan(1.0) ? _369 : (isnan(_369) ? 1.0 : min(_369, 1.0));
    SV_Target_2.z = isnan(1.0) ? _380 : (isnan(_380) ? 1.0 : min(_380, 1.0));
    SV_Target_2.w = _277 ? cbInstanceData._m0[_248].w : (float(floatBitsToUint(cbInstanceData._m0[_234 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _278;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _278;
}


