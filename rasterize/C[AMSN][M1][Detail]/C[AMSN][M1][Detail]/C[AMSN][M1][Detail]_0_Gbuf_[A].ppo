#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_12;
layout(set = 0, binding = 1) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_13;
layout(set = 0, binding = 2) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_20;
layout(set = 0, binding = 3) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_21;
layout(set = 0, binding = 4) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_7;
layout(set = 0, binding = 5) uniform texture2D C_AMSN_M1_Detail_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD;
layout(location = 4) in vec4 TEXCOORD_5;
layout(location = 5) in float TEXCOORD_13;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _146 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _147 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _148 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _154 = inversesqrt(dot(vec3(_146, _147, _148), vec3(_146, _147, _148)));
    float _161 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    vec4 _191 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _197 = _191.x * cbMtdParam._m0[9u].x;
    float _198 = _191.y * cbMtdParam._m0[9u].y;
    float _199 = _191.z * cbMtdParam._m0[9u].z;
    vec4 _222 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_20, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _253 = (TEXCOORD_5.x - ((cbMtdParam._m0[11u].z * (1.0 - TEXCOORD_5.x)) * (texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w)).x + 0.00999999977648258209228515625))) * (cbMtdParam._m0[11u].y + 1.0);
    float _541 = isnan(0.0) ? _253 : (isnan(_253) ? 0.0 : max(_253, 0.0));
    float _254 = isnan(1.0) ? _541 : (isnan(_541) ? 1.0 : min(_541, 1.0));
    float _261 = (_254 * ((_222.x * cbMtdParam._m0[10u].x) - _197)) + _197;
    float _262 = (_254 * ((_222.y * cbMtdParam._m0[10u].y) - _198)) + _198;
    float _263 = (_254 * ((_222.z * cbMtdParam._m0[10u].z) - _199)) + _199;
    vec4 _275 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _277 = _275.x;
    float _279 = _277 - (_277 * TEXCOORD_5.x);
    vec4 _296 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _304 = (_296.x * 2.0) + (-1.0);
    float _306 = (_296.y * 2.0) + (-1.0);
    float _307 = dot(vec2(_304, _306), vec2(_304, _306));
    float _552 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _312 = sqrt(1.0 - (isnan(1.0) ? _552 : (isnan(_552) ? 1.0 : min(_552, 1.0))));
    float _313 = _296.z * cbMtdParam._m0[12u].y;
    vec4 _326 = texture(sampler2D(C_AMSN_M1_Detail_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.z) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.w) + cbTextureTilingScale._m0[0u].w));
    float _340 = ((cbMtdParam._m0[11u].w * TEXCOORD_5.x) * ((_326.z * cbMtdParam._m0[12u].x) - _313)) + _313;
    float _346 = ((((_326.x * 2.0) + (-1.0)) * TEXCOORD_5.x) * cbMtdParam._m0[11u].x) + _304;
    float _347 = ((((_326.y * 2.0) + (-1.0)) * TEXCOORD_5.y) * cbMtdParam._m0[11u].x) + _306;
    float _350 = fma(_312, _161 * NORMAL.x, fma(_347, _168 * TANGENT.x, (_154 * _146) * _346));
    float _353 = fma(_312, _161 * NORMAL.y, fma(_347, _168 * TANGENT.y, (_154 * _147) * _346));
    float _356 = fma(_312, _161 * NORMAL.z, fma(_347, _168 * TANGENT.z, (_154 * _148) * _346));
    float _360 = inversesqrt(dot(vec3(_350, _353, _356), vec3(_350, _353, _356)));
    float _563 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _574 = isnan(0.0) ? _261 : (isnan(_261) ? 0.0 : max(_261, 0.0));
    float _362 = isnan(1.0) ? _574 : (isnan(_574) ? 1.0 : min(_574, 1.0));
    float _585 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _363 = isnan(1.0) ? _585 : (isnan(_585) ? 1.0 : min(_585, 1.0));
    float _596 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    float _364 = isnan(1.0) ? _596 : (isnan(_596) ? 1.0 : min(_596, 1.0));
    float _607 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    uint _367 = uint(roundEven(NORMAL.w));
    vec4 _372 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _374 = _372.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _435 = (cbMatDynParam._m0[5u].x * TEXCOORD_13) + cbMatDynParam._m0[5u].y;
        float _618 = isnan(0.0) ? _435 : (isnan(_435) ? 0.0 : max(_435, 0.0));
        float _436 = isnan(1.0) ? _618 : (isnan(_618) ? 1.0 : min(_618, 1.0));
        float _440 = (cbMatDynParam._m0[5u].z * TEXCOORD_13) + cbMatDynParam._m0[5u].w;
        float _629 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _629 : (isnan(_629) ? 1.0 : min(_629, 1.0))) - _436)) + _436) < ((_374 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _468;
    uint _394;
    vec4 _398;
    float _405;
    float _406;
    float _407;
    float _411;
    vec4 _415;
    float _417;
    float _418;
    bool _429;
    for (;;)
    {
        _394 = _367 * 13u;
        _398 = cbInstanceData._m0[(_394 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _402 = (cbMtdParam._m0[0u].x * _362) * _398.x;
        float _403 = (cbMtdParam._m0[0u].y * _363) * _398.y;
        float _404 = (cbMtdParam._m0[0u].z * _364) * _398.z;
        float _640 = isnan(0.0) ? _402 : (isnan(_402) ? 0.0 : max(_402, 0.0));
        _405 = isnan(1.0) ? _640 : (isnan(_640) ? 1.0 : min(_640, 1.0));
        float _651 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
        _406 = isnan(1.0) ? _651 : (isnan(_651) ? 1.0 : min(_651, 1.0));
        float _662 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
        _407 = isnan(1.0) ? _662 : (isnan(_662) ? 1.0 : min(_662, 1.0));
        _411 = cbInstanceData._m0[_394 + 6u].w;
        float _412 = _374 + (-0.5);
        _415 = cbMtdParam._m0[1u];
        _417 = _415.y * _412;
        _418 = _412 * 0.999000012874603271484375;
        _429 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_429)
        {
            if ((cbInstanceData._m0[_394 + 7u].x + _418) < 0.5)
            {
                _468 = true;
                break;
            }
        }
        if ((_398.w < 1.0) && ((_398.w + _418) < 0.5))
        {
            _468 = true;
            break;
        }
        if ((_417 + 1.0) < _415.x)
        {
            _468 = true;
            break;
        }
        _468 = false;
        break;
    }
    if (_468)
    {
        discard_state = true;
    }
    bool _494 = cbMtdParam._m0[1u].z != 0.0;
    float _495 = _494 ? _411 : 0.0;
    SV_Target.x = ((_350 * 0.5) * _360) + 0.500488758087158203125;
    SV_Target.y = ((_353 * 0.5) * _360) + 0.500488758087158203125;
    SV_Target.z = ((_356 * 0.5) * _360) + 0.500488758087158203125;
    SV_Target.w = _495;
    SV_Target_1.x = isnan(1.0) ? _607 : (isnan(_607) ? 1.0 : min(_607, 1.0));
    SV_Target_1.y = isnan(1.0) ? _563 : (isnan(_563) ? 1.0 : min(_563, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _494 ? _411 : TEXCOORD_5.w;
    SV_Target_2.x = _405;
    SV_Target_2.y = _406;
    SV_Target_2.z = _407;
    SV_Target_2.w = _494 ? _411 : (float(floatBitsToUint(cbInstanceData._m0[_394 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _495;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _495;
    discard_exit();
}


