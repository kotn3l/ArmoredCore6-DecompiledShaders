#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[18];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_1;
layout(set = 0, binding = 10) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_18;
layout(set = 0, binding = 11) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_19;
layout(set = 0, binding = 12) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_2;
layout(set = 0, binding = 13) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_20;
layout(set = 0, binding = 14) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_21;
layout(set = 0, binding = 15) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_23;
layout(set = 0, binding = 16) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_24;
layout(set = 0, binding = 17) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_4;
layout(set = 0, binding = 18) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6;
layout(set = 0, binding = 19) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10;
layout(set = 0, binding = 20) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8;
layout(set = 0, binding = 21) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9;
layout(set = 0, binding = 3) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11;
layout(set = 0, binding = 4) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16;
layout(set = 0, binding = 9) uniform texture2D M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_17;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1445;
float _4110;
float _4111;
float _4112;
float _4113;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _228 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _229 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _230 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _236 = inversesqrt(dot(vec3(_228, _229, _230), vec3(_228, _229, _230)));
    float _243 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _244 = _243 * NORMAL.x;
    float _245 = _243 * NORMAL.y;
    float _246 = _243 * NORMAL.z;
    float _250 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _258;
    float _259;
    float _260;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _258 = (-0.0) - _244;
        _259 = (-0.0) - _245;
        _260 = (-0.0) - _246;
    }
    else
    {
        _258 = _244;
        _259 = _245;
        _260 = _246;
    }
    vec4 _282 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[18u].x * TEXCOORD.x) + cbTextureTilingScale._m0[18u].z, (cbTextureTilingScale._m0[18u].y * TEXCOORD.y) + cbTextureTilingScale._m0[18u].w));
    float _322 = ((cbMtdParam._m0[14u].z * (-1.39999997615814208984375)) * (((1.0 - _282.x) * 2.0) - (texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_7, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * TEXCOORD.z) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * TEXCOORD.w) + cbTextureTilingScale._m0[19u].w)).x * cbMtdParam._m0[15u].w))) + 1.0;
    float _4122 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _323 = isnan(1.0) ? _4122 : (isnan(_4122) ? 1.0 : min(_4122, 1.0));
    vec4 _336 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.z) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.w) + cbTextureTilingScale._m0[4u].w));
    vec4 _353 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.w) + cbTextureTilingScale._m0[6u].w));
    float _355 = _353.x;
    float _356 = _353.y;
    float _357 = _353.z;
    float _364 = ((_336.x - _355) * _323) + _355;
    float _365 = ((_336.y - _356) * _323) + _356;
    float _366 = ((_336.z - _357) * _323) + _357;
    float _388 = ((cbMtdParam._m0[16u].y * (-1.39999997615814208984375)) * (((1.0 - _282.y) * 2.0) - (texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_21, SS_WrapLinear), vec2((cbTextureTilingScale._m0[14u].x * TEXCOORD.z) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * TEXCOORD.w) + cbTextureTilingScale._m0[14u].w)).x * cbMtdParam._m0[15u].z))) + 1.0;
    float _4133 = isnan(0.0) ? _388 : (isnan(_388) ? 0.0 : max(_388, 0.0));
    float _389 = isnan(1.0) ? _4133 : (isnan(_4133) ? 1.0 : min(_4133, 1.0));
    vec4 _401 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_10, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.z) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.w) + cbTextureTilingScale._m0[2u].w));
    float _412 = ((_401.x - _364) * _389) + _364;
    float _413 = ((_401.y - _365) * _389) + _365;
    float _414 = ((_401.z - _366) * _389) + _366;
    float _437 = ((cbMtdParam._m0[16u].x * (-1.39999997615814208984375)) * (((1.0 - _282.z) * 2.0) - (texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_20, SS_WrapLinear), vec2((cbTextureTilingScale._m0[13u].x * TEXCOORD.z) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * TEXCOORD.w) + cbTextureTilingScale._m0[13u].w)).x * cbMtdParam._m0[15u].y))) + 1.0;
    float _4144 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _438 = isnan(1.0) ? _4144 : (isnan(_4144) ? 1.0 : min(_4144, 1.0));
    vec4 _451 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_8, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * TEXCOORD.z) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * TEXCOORD.w) + cbTextureTilingScale._m0[20u].w));
    float _467 = ((((_451.x - _412) * _438) + _412) * 2.0) + (-1.0);
    float _469 = ((((_451.y - _413) * _438) + _413) * 2.0) + (-1.0);
    float _470 = dot(vec2(_467, _469), vec2(_467, _469));
    float _4155 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _475 = sqrt(1.0 - (isnan(1.0) ? _4155 : (isnan(_4155) ? 1.0 : min(_4155, 1.0))));
    float _476 = fma(_475, _258, 0.0);
    float _477 = fma(_475, _259, 0.0);
    float _478 = fma(_475, _260, 0.0);
    float _482 = inversesqrt(dot(vec3(_476, _477, _478), vec3(_476, _477, _478)));
    float _508 = (cbMtdParam._m0[14u].y + dot(vec4(_482 * _476, _482 * _477, _482 * _478, 0.0), vec4(cbMtdParam._m0[16u].w, cbMtdParam._m0[17u].xy, 0.0))) - (texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * TEXCOORD.x) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * TEXCOORD.y) + cbTextureTilingScale._m0[11u].w)).x * cbMtdParam._m0[14u].x);
    float _4166 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _509 = isnan(1.0) ? _4166 : (isnan(_4166) ? 1.0 : min(_4166, 1.0));
    vec4 _528 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_15, SS_WrapLinear), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.z) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.w) + cbTextureTilingScale._m0[7u].w));
    float _533 = _528.x * cbMtdParam._m0[10u].x;
    float _534 = _528.y * cbMtdParam._m0[10u].y;
    float _535 = _528.z * cbMtdParam._m0[10u].z;
    vec4 _553 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * TEXCOORD.z) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * TEXCOORD.w) + cbTextureTilingScale._m0[5u].w));
    float _567 = (((_553.x * cbMtdParam._m0[11u].x) - _533) * _323) + _533;
    float _568 = (((_553.y * cbMtdParam._m0[11u].y) - _534) * _323) + _534;
    float _569 = (((_553.z * cbMtdParam._m0[11u].z) - _535) * _323) + _535;
    vec4 _587 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_11, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.z) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.w) + cbTextureTilingScale._m0[3u].w));
    float _601 = (((_587.x * cbMtdParam._m0[12u].x) - _567) * _389) + _567;
    float _602 = (((_587.y * cbMtdParam._m0[12u].y) - _568) * _389) + _568;
    float _603 = (((_587.z * cbMtdParam._m0[12u].z) - _569) * _389) + _569;
    vec4 _621 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_9, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[21u].x * TEXCOORD.z) + cbTextureTilingScale._m0[21u].z, (cbTextureTilingScale._m0[21u].y * TEXCOORD.w) + cbTextureTilingScale._m0[21u].w));
    vec4 _655 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _663 = ((cbMtdParam._m0[9u].x * 4.55000019073486328125) * ((((_621.x * cbMtdParam._m0[13u].x) - _601) * _438) + _601)) * _655.x;
    float _666 = ((cbMtdParam._m0[9u].y * 4.55000019073486328125) * ((((_621.y * cbMtdParam._m0[13u].y) - _602) * _438) + _602)) * _655.y;
    float _669 = ((cbMtdParam._m0[9u].z * 4.55000019073486328125) * ((((_621.z * cbMtdParam._m0[13u].z) - _603) * _438) + _603)) * _655.z;
    vec4 _681 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[15u].x * TEXCOORD.x) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * TEXCOORD.y) + cbTextureTilingScale._m0[15u].w));
    float _692 = ((_681.x - _663) * _509) + _663;
    float _693 = ((_681.y - _666) * _509) + _666;
    float _694 = ((_681.z - _669) * _509) + _669;
    vec4 _706 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[12u].x * TEXCOORD.x) + cbTextureTilingScale._m0[12u].z, (cbTextureTilingScale._m0[12u].y * TEXCOORD.y) + cbTextureTilingScale._m0[12u].w));
    float _708 = _706.x;
    vec4 _748 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_1, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.z) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.w) + cbTextureTilingScale._m0[1u].w));
    float _750 = _748.x;
    float _767 = ((texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_17, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.z) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.w) + cbTextureTilingScale._m0[9u].w)).x - _750) * _323) + _750;
    float _770 = ((texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[17u].x * TEXCOORD.z) + cbTextureTilingScale._m0[17u].z, (cbTextureTilingScale._m0[17u].y * TEXCOORD.w) + cbTextureTilingScale._m0[17u].w)).x - _767) * _389) + _767;
    float _777 = (((_770 - _708) + ((texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_18, SS_WrapLinear), vec2((cbTextureTilingScale._m0[10u].x * TEXCOORD.z) + cbTextureTilingScale._m0[10u].z, (cbTextureTilingScale._m0[10u].y * TEXCOORD.w) + cbTextureTilingScale._m0[10u].w)).x - _770) * _438)) * cbMtdParam._m0[14u].w) + _708;
    float _779 = _777 - (_777 * _509);
    vec4 _793 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _797 = _793.z;
    float _804 = (((((_451.z - _414) * _438) + _414) - _797) * cbMtdParam._m0[15u].x) + _797;
    vec4 _816 = texture(sampler2D(M_AMSN_M0_M1_Mb4_Ch2_3Mask_Ov_AN_Snow_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[16u].x * TEXCOORD.x) + cbTextureTilingScale._m0[16u].z, (cbTextureTilingScale._m0[16u].y * TEXCOORD.y) + cbTextureTilingScale._m0[16u].w));
    float _823 = (_816.x * 2.0) + (-1.0);
    float _824 = (_816.y * 2.0) + (-1.0);
    float _825 = dot(vec2(_823, _824), vec2(_823, _824));
    float _4177 = isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0));
    float _833 = ((_816.z - _804) * _509) + _804;
    float _842 = ((sqrt(1.0 - (isnan(1.0) ? _4177 : (isnan(_4177) ? 1.0 : min(_4177, 1.0)))) - _475) * _509) + _475;
    float _848 = (((_823 - _467) * _509) + _467) + (cbMtdParam._m0[16u].z * ((_793.x * 2.0) + (-1.0)));
    float _849 = (((_824 - _469) * _509) + _469) + (cbMtdParam._m0[16u].z * ((_793.y * 2.0) + (-1.0)));
    float _852 = fma(_842, _258, fma(_849, _250 * TANGENT.x, (_236 * _228) * _848));
    float _855 = fma(_842, _259, fma(_849, _250 * TANGENT.y, (_236 * _229) * _848));
    float _858 = fma(_842, _260, fma(_849, _250 * TANGENT.z, (_236 * _230) * _848));
    float _862 = inversesqrt(dot(vec3(_852, _855, _858), vec3(_852, _855, _858)));
    float _863 = _862 * _852;
    float _864 = _862 * _855;
    float _865 = _862 * _858;
    float _4188 = isnan(0.0) ? _833 : (isnan(_833) ? 0.0 : max(_833, 0.0));
    float _866 = isnan(1.0) ? _4188 : (isnan(_4188) ? 1.0 : min(_4188, 1.0));
    float _4199 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _4210 = isnan(0.0) ? _693 : (isnan(_693) ? 0.0 : max(_693, 0.0));
    float _4221 = isnan(0.0) ? _694 : (isnan(_694) ? 0.0 : max(_694, 0.0));
    float _4232 = isnan(0.0) ? _779 : (isnan(_779) ? 0.0 : max(_779, 0.0));
    float _870 = isnan(1.0) ? _4232 : (isnan(_4232) ? 1.0 : min(_4232, 1.0));
    float _886 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _926 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _936 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _926);
    float _937 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _926);
    float _938 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _926);
    float _942 = inversesqrt(dot(vec3(_936, _937, _938), vec3(_936, _937, _938)));
    float _943 = _936 * _942;
    float _944 = _937 * _942;
    float _945 = _938 * _942;
    vec4 _950 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _952 = _950.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1124 = sqrt(((_936 * _936) + (_937 * _937)) + (_938 * _938));
        float _1130 = (cbMatDynParam._m0[5u].x * _1124) + cbMatDynParam._m0[5u].y;
        float _4243 = isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0));
        float _1131 = isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0));
        float _1135 = (cbMatDynParam._m0[5u].z * _1124) + cbMatDynParam._m0[5u].w;
        float _4254 = isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0))) - _1131)) + _1131) < ((_952 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _963 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _964 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _982 = fma(_865, cbSceneParam._m0[5u].z, fma(_864, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _863));
    float _985 = fma(_865, cbSceneParam._m0[6u].z, fma(_864, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _863));
    float _988 = fma(_865, cbSceneParam._m0[7u].z, fma(_864, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _863));
    uint _1001 = uint(roundEven(NORMAL.w)) * 13u;
    uint _1002 = _1001 + 9u;
    uint _1003 = _1002 + uint(cbMatDynParam._m0[0u].w);
    float _1009 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4199 : (isnan(_4199) ? 1.0 : min(_4199, 1.0)))) * cbInstanceData._m0[_1003].x;
    float _1010 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4210 : (isnan(_4210) ? 1.0 : min(_4210, 1.0)))) * cbInstanceData._m0[_1003].y;
    float _1011 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4221 : (isnan(_4221) ? 1.0 : min(_4221, 1.0)))) * cbInstanceData._m0[_1003].z;
    float _4265 = isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0));
    float _1012 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
    float _4276 = isnan(0.0) ? _1010 : (isnan(_1010) ? 0.0 : max(_1010, 0.0));
    float _1013 = isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0));
    float _4287 = isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0));
    float _1014 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
    float _1015 = 1.0 - _870;
    float _1016 = _1012 * _1015;
    float _1017 = _1013 * _1015;
    float _1018 = _1014 * _1015;
    float _1023 = (_1012 + (-0.039999999105930328369140625)) * _870;
    float _1024 = (_1013 + (-0.039999999105930328369140625)) * _870;
    float _1025 = (_1014 + (-0.039999999105930328369140625)) * _870;
    float _1026 = _1023 + 0.039999999105930328369140625;
    float _1028 = _1024 + 0.039999999105930328369140625;
    float _1029 = _1025 + 0.039999999105930328369140625;
    vec4 _1038 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _963, cbSceneParam._m0[86u].y * _964));
    float _1041 = _1038.x * TEXCOORD_4;
    float _1042 = dot(vec3(_863, _864, _865), vec3(_943, _944, _945));
    float _1045 = _1042 * 2.0;
    float _1049 = (_1045 * _863) - _943;
    float _1050 = (_1045 * _864) - _944;
    float _1051 = (_1045 * _865) - _945;
    float _1055 = abs(dot(vec3(_943, _944, _945), vec3(_863, _864, _865)));
    float _4298 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
    float _1057 = sqrt(_866);
    float _1070 = exp2((_1057 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1057 * 3.0));
    float _1076 = (1.0 - _1070) * ((_1057 * 0.60000002384185791015625) + 0.4000000059604644775390625);
    float _1077 = _1070 * _1057;
    float _1105 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1109 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1113 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1444;
    float _1446;
    float _1447;
    float _1448;
    float _1449;
    float _1450;
    float _1451;
    float _1452;
    float _1453;
    float _1454;
    float _1455;
    float _1456;
    float _1457;
    float _1458;
    float _1459;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1169 = fma(_1113, cbModelParam._m0[26u].z, fma(_1109, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1105));
        float _1173 = fma(_1113, cbModelParam._m0[27u].z, fma(_1109, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1105));
        float _1177 = fma(_1113, cbModelParam._m0[28u].z, fma(_1109, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1105));
        float _1202 = _1105 + _863;
        float _1203 = _1109 + _864;
        float _1204 = _1113 + _865;
        float _1214 = fma(_1204, cbModelParam._m0[26u].z, fma(_1203, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1202)) - _1169;
        float _1215 = fma(_1204, cbModelParam._m0[27u].z, fma(_1203, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1202)) - _1173;
        float _1216 = fma(_1204, cbModelParam._m0[28u].z, fma(_1203, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1202)) - _1177;
        float _1220 = inversesqrt(dot(vec3(_1214, _1215, _1216), vec3(_1214, _1215, _1216)));
        float _1233 = ((_1220 * _1214) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1169 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1234 = ((_1220 * _1215) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1173 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1235 = ((_1220 * _1216) / cbModelParam._m0[34u].z) + ((((((_1177 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1238 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1233, _1234, _1235), 0.0);
        vec4 _1245 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1233, _1234, _1235), 0.0);
        vec4 _1252 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1233, _1234, _1235), 0.0);
        vec4 _1259 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1233, _1234, _1235), 0.0);
        float _1272 = exp2((_1238.w + (-0.5)) * 20.0) * 2.0;
        float _1273 = _1272 * (_1238.x + (-0.5));
        float _1274 = _1272 * (_1238.y + (-0.5));
        float _1275 = _1272 * (_1238.z + (-0.5));
        float _1282 = exp2((_1245.w + (-0.5)) * 20.0) * 2.0;
        float _1283 = _1282 * (_1245.x + (-0.5));
        float _1284 = _1282 * (_1245.y + (-0.5));
        float _1285 = _1282 * (_1245.z + (-0.5));
        float _1292 = exp2((_1252.w + (-0.5)) * 20.0) * 2.0;
        float _1293 = _1292 * (_1252.x + (-0.5));
        float _1294 = _1292 * (_1252.y + (-0.5));
        float _1295 = _1292 * (_1252.z + (-0.5));
        float _1302 = exp2((_1259.w + (-0.5)) * 20.0) * 2.0;
        float _1303 = _1302 * (_1259.x + (-0.5));
        float _1304 = _1302 * (_1259.y + (-0.5));
        float _1305 = _1302 * (_1259.z + (-0.5));
        float _1306 = isnan(0.0) ? _1303 : (isnan(_1303) ? 0.0 : max(_1303, 0.0));
        float _1307 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1308 = isnan(0.0) ? _1305 : (isnan(_1305) ? 0.0 : max(_1305, 0.0));
        float _1309 = _1273 * 0.5;
        float _1310 = _1283 * 0.5;
        float _1311 = _1293 * 0.5;
        float _1312 = dot(vec3(_1309, _1310, _1311), vec3(_1309, _1310, _1311));
        float _1317 = (_1312 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1312);
        float _1326 = (dot(vec3(_863, _864, _865), vec3(_1317 * _1309, _1317 * _1310, _1317 * _1311)) + 1.0) * 0.5;
        float _4324 = isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0));
        float _1336 = sqrt(((_1310 * _1310) + (_1309 * _1309)) + (_1311 * _1311)) / (_1306 + 9.9999997473787516355514526367188e-06);
        float _4335 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1338 = _1337 * 2.0;
        float _1342 = (1.0 - _1337) / (_1337 + 1.0);
        float _4346 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1352 = ((((1.0 - _1343) * (_1338 + 2.0)) * exp2(log2(isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_1338 + 1.0))) + _1343) * _1306;
        float _1353 = _1274 * 0.5;
        float _1354 = _1284 * 0.5;
        float _1355 = _1294 * 0.5;
        float _1356 = dot(vec3(_1353, _1354, _1355), vec3(_1353, _1354, _1355));
        float _1361 = (_1356 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1356);
        float _1369 = (dot(vec3(_863, _864, _865), vec3(_1361 * _1353, _1361 * _1354, _1361 * _1355)) + 1.0) * 0.5;
        float _4357 = isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0));
        float _1378 = sqrt(((_1354 * _1354) + (_1353 * _1353)) + (_1355 * _1355)) / (_1307 + 9.9999997473787516355514526367188e-06);
        float _4368 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
        float _1379 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _1380 = _1379 * 2.0;
        float _1384 = (1.0 - _1379) / (_1379 + 1.0);
        float _4379 = isnan(0.0) ? _1384 : (isnan(_1384) ? 0.0 : max(_1384, 0.0));
        float _1385 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1394 = ((((1.0 - _1385) * (_1380 + 2.0)) * exp2(log2(isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (_1380 + 1.0))) + _1385) * _1307;
        float _1395 = _1275 * 0.5;
        float _1396 = _1285 * 0.5;
        float _1397 = _1295 * 0.5;
        float _1398 = dot(vec3(_1395, _1396, _1397), vec3(_1395, _1396, _1397));
        float _1403 = (_1398 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1398);
        float _1411 = (dot(vec3(_863, _864, _865), vec3(_1403 * _1395, _1403 * _1396, _1403 * _1397)) + 1.0) * 0.5;
        float _4390 = isnan(0.0) ? _1411 : (isnan(_1411) ? 0.0 : max(_1411, 0.0));
        float _1420 = sqrt(((_1396 * _1396) + (_1395 * _1395)) + (_1397 * _1397)) / (_1308 + 9.9999997473787516355514526367188e-06);
        float _4401 = isnan(0.0) ? _1420 : (isnan(_1420) ? 0.0 : max(_1420, 0.0));
        float _1421 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _1422 = _1421 * 2.0;
        float _1426 = (1.0 - _1421) / (_1421 + 1.0);
        float _4412 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
        float _1427 = isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0));
        float _1436 = ((((1.0 - _1427) * (_1422 + 2.0)) * exp2(log2(isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * (_1422 + 1.0))) + _1427) * _1308;
        _1444 = _1275;
        _1446 = _1274;
        _1447 = _1273;
        _1448 = _1285;
        _1449 = _1284;
        _1450 = _1283;
        _1451 = _1295;
        _1452 = _1294;
        _1453 = _1293;
        _1454 = _1308;
        _1455 = _1307;
        _1456 = _1306;
        _1457 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0)));
        _1458 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0)));
        _1459 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0)));
    }
    else
    {
        _1444 = _1445;
        _1446 = _1445;
        _1447 = _1445;
        _1448 = _1445;
        _1449 = _1445;
        _1450 = _1445;
        _1451 = _1445;
        _1452 = _1445;
        _1453 = _1445;
        _1454 = _1445;
        _1455 = _1445;
        _1456 = _1445;
        _1457 = 0.0;
        _1458 = 0.0;
        _1459 = 0.0;
    }
    float _1757;
    float _1758;
    float _1759;
    float _1760;
    float _1761;
    float _1762;
    float _1763;
    float _1764;
    float _1765;
    float _1766;
    float _1767;
    float _1768;
    float _1769;
    float _1770;
    float _1771;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1488 = fma(_1113, cbModelParam._m0[30u].z, fma(_1109, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1105));
        float _1492 = fma(_1113, cbModelParam._m0[31u].z, fma(_1109, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1105));
        float _1496 = fma(_1113, cbModelParam._m0[32u].z, fma(_1109, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1105));
        float _1519 = _1105 + _863;
        float _1520 = _1109 + _864;
        float _1521 = _1113 + _865;
        float _1531 = fma(_1521, cbModelParam._m0[30u].z, fma(_1520, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1519)) - _1488;
        float _1532 = fma(_1521, cbModelParam._m0[31u].z, fma(_1520, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1519)) - _1492;
        float _1533 = fma(_1521, cbModelParam._m0[32u].z, fma(_1520, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1519)) - _1496;
        float _1537 = inversesqrt(dot(vec3(_1531, _1532, _1533), vec3(_1531, _1532, _1533)));
        float _1550 = ((_1537 * _1531) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1488 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1551 = ((_1537 * _1532) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1492 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1552 = ((_1537 * _1533) / cbModelParam._m0[35u].z) + ((((((_1496 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1554 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1550, _1551, _1552), 0.0);
        vec4 _1561 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1550, _1551, _1552), 0.0);
        vec4 _1568 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1550, _1551, _1552), 0.0);
        vec4 _1575 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1550, _1551, _1552), 0.0);
        float _1587 = exp2((_1554.w + (-0.5)) * 20.0) * 2.0;
        float _1588 = _1587 * (_1554.x + (-0.5));
        float _1589 = _1587 * (_1554.y + (-0.5));
        float _1590 = _1587 * (_1554.z + (-0.5));
        float _1597 = exp2((_1561.w + (-0.5)) * 20.0) * 2.0;
        float _1598 = _1597 * (_1561.x + (-0.5));
        float _1599 = _1597 * (_1561.y + (-0.5));
        float _1600 = _1597 * (_1561.z + (-0.5));
        float _1607 = exp2((_1568.w + (-0.5)) * 20.0) * 2.0;
        float _1608 = _1607 * (_1568.x + (-0.5));
        float _1609 = _1607 * (_1568.y + (-0.5));
        float _1610 = _1607 * (_1568.z + (-0.5));
        float _1617 = exp2((_1575.w + (-0.5)) * 20.0) * 2.0;
        float _1618 = _1617 * (_1575.x + (-0.5));
        float _1619 = _1617 * (_1575.y + (-0.5));
        float _1620 = _1617 * (_1575.z + (-0.5));
        float _1621 = isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0));
        float _1622 = isnan(0.0) ? _1619 : (isnan(_1619) ? 0.0 : max(_1619, 0.0));
        float _1623 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1624 = _1588 * 0.5;
        float _1625 = _1598 * 0.5;
        float _1626 = _1608 * 0.5;
        float _1627 = dot(vec3(_1624, _1625, _1626), vec3(_1624, _1625, _1626));
        float _1632 = (_1627 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1627);
        float _1640 = (dot(vec3(_863, _864, _865), vec3(_1632 * _1624, _1632 * _1625, _1632 * _1626)) + 1.0) * 0.5;
        float _4453 = isnan(0.0) ? _1640 : (isnan(_1640) ? 0.0 : max(_1640, 0.0));
        float _1649 = sqrt(((_1625 * _1625) + (_1624 * _1624)) + (_1626 * _1626)) / (_1621 + 9.9999997473787516355514526367188e-06);
        float _4464 = isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0));
        float _1650 = isnan(1.0) ? _4464 : (isnan(_4464) ? 1.0 : min(_4464, 1.0));
        float _1651 = _1650 * 2.0;
        float _1655 = (1.0 - _1650) / (_1650 + 1.0);
        float _4475 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
        float _1656 = isnan(1.0) ? _4475 : (isnan(_4475) ? 1.0 : min(_4475, 1.0));
        float _1665 = ((((1.0 - _1656) * (_1651 + 2.0)) * exp2(log2(isnan(1.0) ? _4453 : (isnan(_4453) ? 1.0 : min(_4453, 1.0))) * (_1651 + 1.0))) + _1656) * _1621;
        float _1666 = _1589 * 0.5;
        float _1667 = _1599 * 0.5;
        float _1668 = _1609 * 0.5;
        float _1669 = dot(vec3(_1666, _1667, _1668), vec3(_1666, _1667, _1668));
        float _1674 = (_1669 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1669);
        float _1682 = (dot(vec3(_863, _864, _865), vec3(_1674 * _1666, _1674 * _1667, _1674 * _1668)) + 1.0) * 0.5;
        float _4486 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
        float _1691 = sqrt(((_1667 * _1667) + (_1666 * _1666)) + (_1668 * _1668)) / (_1622 + 9.9999997473787516355514526367188e-06);
        float _4497 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
        float _1692 = isnan(1.0) ? _4497 : (isnan(_4497) ? 1.0 : min(_4497, 1.0));
        float _1693 = _1692 * 2.0;
        float _1697 = (1.0 - _1692) / (_1692 + 1.0);
        float _4508 = isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0));
        float _1698 = isnan(1.0) ? _4508 : (isnan(_4508) ? 1.0 : min(_4508, 1.0));
        float _1707 = ((((1.0 - _1698) * (_1693 + 2.0)) * exp2(log2(isnan(1.0) ? _4486 : (isnan(_4486) ? 1.0 : min(_4486, 1.0))) * (_1693 + 1.0))) + _1698) * _1622;
        float _1708 = _1590 * 0.5;
        float _1709 = _1600 * 0.5;
        float _1710 = _1610 * 0.5;
        float _1711 = dot(vec3(_1708, _1709, _1710), vec3(_1708, _1709, _1710));
        float _1716 = (_1711 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1711);
        float _1724 = (dot(vec3(_863, _864, _865), vec3(_1716 * _1708, _1716 * _1709, _1716 * _1710)) + 1.0) * 0.5;
        float _4519 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0));
        float _1733 = sqrt(((_1709 * _1709) + (_1708 * _1708)) + (_1710 * _1710)) / (_1623 + 9.9999997473787516355514526367188e-06);
        float _4530 = isnan(0.0) ? _1733 : (isnan(_1733) ? 0.0 : max(_1733, 0.0));
        float _1734 = isnan(1.0) ? _4530 : (isnan(_4530) ? 1.0 : min(_4530, 1.0));
        float _1735 = _1734 * 2.0;
        float _1739 = (1.0 - _1734) / (_1734 + 1.0);
        float _4541 = isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0));
        float _1740 = isnan(1.0) ? _4541 : (isnan(_4541) ? 1.0 : min(_4541, 1.0));
        float _1749 = ((((1.0 - _1740) * (_1735 + 2.0)) * exp2(log2(isnan(1.0) ? _4519 : (isnan(_4519) ? 1.0 : min(_4519, 1.0))) * (_1735 + 1.0))) + _1740) * _1623;
        _1757 = _1590;
        _1758 = _1589;
        _1759 = _1588;
        _1760 = _1600;
        _1761 = _1599;
        _1762 = _1598;
        _1763 = _1610;
        _1764 = _1609;
        _1765 = _1608;
        _1766 = _1623;
        _1767 = _1622;
        _1768 = _1621;
        _1769 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0)));
        _1770 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0)));
        _1771 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0)));
    }
    else
    {
        _1757 = _1445;
        _1758 = _1445;
        _1759 = _1445;
        _1760 = _1445;
        _1761 = _1445;
        _1762 = _1445;
        _1763 = _1445;
        _1764 = _1445;
        _1765 = _1445;
        _1766 = _1445;
        _1767 = _1445;
        _1768 = _1445;
        _1769 = 0.0;
        _1770 = 0.0;
        _1771 = 0.0;
    }
    float _1781 = (cbModelParam._m0[1u].x * (_1769 - _1457)) + _1457;
    float _1782 = (cbModelParam._m0[1u].x * (_1770 - _1458)) + _1458;
    float _1783 = (cbModelParam._m0[1u].x * (_1771 - _1459)) + _1459;
    float _1804 = fma(_1783, cbSceneParam._m0[89u].z, fma(_1782, cbSceneParam._m0[89u].y, _1781 * cbSceneParam._m0[89u].x));
    float _1807 = fma(_1783, cbSceneParam._m0[90u].z, fma(_1782, cbSceneParam._m0[90u].y, _1781 * cbSceneParam._m0[90u].x));
    float _1810 = fma(_1783, cbSceneParam._m0[91u].z, fma(_1782, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1781));
    float _1825 = _1049 * 0.5;
    float _1826 = _1050 * 0.5;
    float _1827 = _1051 * 0.5;
    float _1828 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1759, _1762, _1765, _1768));
    float _1831 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1758, _1761, _1764, _1767));
    float _1834 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1757, _1760, _1763, _1766));
    float _1868;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1841 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1444, _1448, _1451, _1454));
        float _1845 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1446, _1449, _1452, _1455));
        float _1849 = dot(vec4(_1825, _1826, _1827, 1.0), vec4(_1447, _1450, _1453, _1456));
        float _1856 = dot(vec4(cbModelParam._m0[39u]), vec4(_1825, _1826, _1827, 1.0));
        _1868 = dot(vec3(isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0)), isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0)), isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1856) ? 0.0 : (isnan(0.0) ? _1856 : max(0.0, _1856))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1868 = 1.0;
    }
    float _1879;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1870 = dot(vec4(cbModelParam._m0[40u]), vec4(_1825, _1826, _1827, 1.0));
        _1879 = dot(vec3(isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0)), isnan(0.0) ? _1831 : (isnan(_1831) ? 0.0 : max(_1831, 0.0)), isnan(0.0) ? _1834 : (isnan(_1834) ? 0.0 : max(_1834, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1870) ? 0.0 : (isnan(0.0) ? _1870 : max(0.0, _1870))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1879 = 1.0;
    }
    float _1883 = (_1879 * cbModelParam._m0[1u].x) + (_1868 * (1.0 - cbModelParam._m0[1u].x));
    float _1893 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _866);
    float _1894 = isnan(_1893) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1893 : min(cbModelParam._m0[25u].z, _1893));
    float _1974;
    float _1976;
    float _1978;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1941 = fma(_1113, cbModelParam._m0[13u].z, fma(_1109, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1105)) + cbModelParam._m0[13u].w;
        float _1945 = fma(_1113, cbModelParam._m0[14u].z, fma(_1109, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1105)) + cbModelParam._m0[14u].w;
        float _1949 = fma(_1113, cbModelParam._m0[15u].z, fma(_1109, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1105)) + cbModelParam._m0[15u].w;
        float _1952 = fma(_1051, cbModelParam._m0[13u].z, fma(_1050, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1049));
        float _1955 = fma(_1051, cbModelParam._m0[14u].z, fma(_1050, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1049));
        float _1958 = fma(_1051, cbModelParam._m0[15u].z, fma(_1050, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1049));
        float _1986;
        if (_1952 > 0.0)
        {
            _1986 = abs((1.0 - _1941) / _1952);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1952 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1941 + 1.0) / _1952);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1986 = frontier_phi_19_17_ladder;
        }
        float _2158;
        if (_1955 > 0.0)
        {
            _2158 = abs((1.0 - _1945) / _1955);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1955 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1945 + 1.0) / _1955);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2158 = frontier_phi_28_24_ladder;
        }
        float _2453;
        if (_1958 > 0.0)
        {
            _2453 = abs((1.0 - _1949) / _1958);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1949 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2453 = frontier_phi_40_35_ladder;
        }
        float _2455 = isnan(_2158) ? _1986 : (isnan(_1986) ? _2158 : min(_1986, _2158));
        float _2456 = isnan(_2453) ? _2455 : (isnan(_2455) ? _2453 : min(_2455, _2453));
        float _2460 = (_2456 * _1952) + _1941;
        float _2461 = (_2456 * _1955) + _1945;
        float _2462 = (_2456 * _1958) + _1949;
        float _2463 = _2456 * 9.9999997473787516355514526367188e-05;
        float _2465 = (-1.0) - _2463;
        float _2467 = _2463 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2462 > _2467) || ((_2462 < _2465) || ((_2461 > _2467) || ((_2461 < _2465) || ((_2460 < _2465) || (_2460 > _2467))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2607 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2462, cbModelParam._m0[9u].z, fma(_2461, cbModelParam._m0[9u].y, _2460 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2462, cbModelParam._m0[10u].z, fma(_2461, cbModelParam._m0[10u].y, _2460 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2462, cbModelParam._m0[11u].z, fma(_2461, cbModelParam._m0[11u].y, _2460 * cbModelParam._m0[11u].x))), _1894);
            frontier_phi_18_40_ladder = _2607.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2607.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2607.x * cbModelParam._m0[1u].y;
        }
        _1974 = frontier_phi_18_40_ladder_2;
        _1976 = frontier_phi_18_40_ladder_1;
        _1978 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1962 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1049, _1050, _1051), _1894);
        _1974 = _1962.x * cbModelParam._m0[1u].y;
        _1976 = _1962.y * cbModelParam._m0[1u].y;
        _1978 = _1962.z * cbModelParam._m0[1u].y;
    }
    float _1982 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _866);
    float _1983 = isnan(_1982) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1982 : min(cbModelParam._m0[25u].w, _1982));
    float _2073;
    float _2075;
    float _2077;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2037 = fma(_1113, cbModelParam._m0[21u].z, fma(_1109, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1105)) + cbModelParam._m0[21u].w;
        float _2041 = fma(_1113, cbModelParam._m0[22u].z, fma(_1109, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1105)) + cbModelParam._m0[22u].w;
        float _2045 = fma(_1113, cbModelParam._m0[23u].z, fma(_1109, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1105)) + cbModelParam._m0[23u].w;
        float _2048 = fma(_1051, cbModelParam._m0[21u].z, fma(_1050, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1049));
        float _2051 = fma(_1051, cbModelParam._m0[22u].z, fma(_1050, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1049));
        float _2054 = fma(_1051, cbModelParam._m0[23u].z, fma(_1050, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1049));
        float _2163;
        if (_2048 > 0.0)
        {
            _2163 = abs((1.0 - _2037) / _2048);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_2048 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_2037 + 1.0) / _2048);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _2163 = frontier_phi_30_26_ladder;
        }
        float _2480;
        if (_2051 > 0.0)
        {
            _2480 = abs((1.0 - _2041) / _2051);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_2051 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_2041 + 1.0) / _2051);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2480 = frontier_phi_42_37_ladder;
        }
        float _2818;
        if (_2054 > 0.0)
        {
            _2818 = abs((1.0 - _2045) / _2054);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_2054 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_2045 + 1.0) / _2054);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2818 = frontier_phi_52_49_ladder;
        }
        float _2820 = isnan(_2480) ? _2163 : (isnan(_2163) ? _2480 : min(_2163, _2480));
        float _2821 = isnan(_2818) ? _2820 : (isnan(_2820) ? _2818 : min(_2820, _2818));
        float _2825 = (_2821 * _2048) + _2037;
        float _2826 = (_2821 * _2051) + _2041;
        float _2827 = (_2821 * _2054) + _2045;
        float _2828 = _2821 * 9.9999997473787516355514526367188e-05;
        float _2829 = (-1.0) - _2828;
        float _2831 = _2828 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2827 > _2831) || ((_2827 < _2829) || ((_2826 > _2831) || ((_2826 < _2829) || ((_2825 < _2829) || (_2825 > _2831))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2949 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2827, cbModelParam._m0[17u].z, fma(_2826, cbModelParam._m0[17u].y, _2825 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2827, cbModelParam._m0[18u].z, fma(_2826, cbModelParam._m0[18u].y, _2825 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2827, cbModelParam._m0[19u].z, fma(_2826, cbModelParam._m0[19u].y, _2825 * cbModelParam._m0[19u].x))), _1983);
            frontier_phi_27_52_ladder = _2949.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2949.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2949.x * cbModelParam._m0[1u].z;
        }
        _2073 = frontier_phi_27_52_ladder_2;
        _2075 = frontier_phi_27_52_ladder_1;
        _2077 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _2057 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1049, _1050, _1051), _1983);
        _2073 = _2057.x * cbModelParam._m0[1u].z;
        _2075 = _2057.y * cbModelParam._m0[1u].z;
        _2077 = _2057.z * cbModelParam._m0[1u].z;
    }
    float _2090 = (((_1076 * _1026) + _1077) * _1041) * ((cbModelParam._m0[1u].w * (_2073 - _1974)) + _1974);
    float _2092 = (((_1076 * _1028) + _1077) * _1041) * ((cbModelParam._m0[1u].w * (_2075 - _1976)) + _1976);
    float _2094 = (((_1076 * _1029) + _1077) * _1041) * ((cbModelParam._m0[1u].w * (_2077 - _1978)) + _1978);
    float _2097 = fma(_2094, cbSceneParam._m0[89u].z, fma(_2092, cbSceneParam._m0[89u].y, _2090 * cbSceneParam._m0[89u].x));
    float _2100 = fma(_2094, cbSceneParam._m0[90u].z, fma(_2092, cbSceneParam._m0[90u].y, _2090 * cbSceneParam._m0[90u].x));
    float _2103 = fma(_2094, cbSceneParam._m0[91u].z, fma(_2092, cbSceneParam._m0[91u].y, _2090 * cbSceneParam._m0[91u].x));
    float _2137 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2141 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2145 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2149 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2150 = _2137 / _2149;
    float _2151 = _2141 / _2149;
    float _2152 = _2145 / _2149;
    float _2299;
    float _2300;
    float _2301;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2179 = ((uint(_2152 > cbSceneParam._m0[59u].y) + uint(_2152 > cbSceneParam._m0[59u].x)) + uint(_2152 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2180 = _2179 + 43u;
        uint _2188 = _2179 + 44u;
        uint _2196 = _2179 + 45u;
        uint _2204 = _2179 + 46u;
        float _2215 = fma(_2149, cbSceneParam._m0[_2180].w, fma(_2145, cbSceneParam._m0[_2180].z, fma(_2141, cbSceneParam._m0[_2180].y, _2137 * cbSceneParam._m0[_2180].x)));
        float _2219 = fma(_2149, cbSceneParam._m0[_2188].w, fma(_2145, cbSceneParam._m0[_2188].z, fma(_2141, cbSceneParam._m0[_2188].y, _2137 * cbSceneParam._m0[_2188].x)));
        float _2227 = fma(_2149, cbSceneParam._m0[_2204].w, fma(_2145, cbSceneParam._m0[_2204].z, fma(_2141, cbSceneParam._m0[_2204].y, _2137 * cbSceneParam._m0[_2204].x)));
        float _2232 = cbSceneParam._m0[33u].z * _2227;
        float _2234 = cbSceneParam._m0[33u].w * _2227;
        float _2237 = fma(_2149, cbSceneParam._m0[_2196].w, fma(_2145, cbSceneParam._m0[_2196].z, fma(_2141, cbSceneParam._m0[_2196].y, _2137 * cbSceneParam._m0[_2196].x))) / _2227;
        float _2285 = (cbSceneParam._m0[33u].x - sqrt(((_2151 * _2151) + (_2150 * _2150)) + (_2152 * _2152))) * cbSceneParam._m0[33u].y;
        float _4667 = isnan(0.0) ? _2285 : (isnan(_2285) ? 0.0 : max(_2285, 0.0));
        float _2292 = (isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2232 + _2215) / _2227, (_2234 + _2219) / _2227), _2237), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2234 + _2215) / _2227, (_2219 - _2232) / _2227), _2237), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2215 - _2232) / _2227, (_2219 - _2234) / _2227), _2237), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2215 - _2234) / _2227, (_2232 + _2219) / _2227), _2237), 0.0)).x), vec4(0.25)));
        _2299 = 1.0 - (_2292 * cbSceneParam._m0[34u].x);
        _2300 = 1.0 - (_2292 * cbSceneParam._m0[34u].y);
        _2301 = 1.0 - (_2292 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2299 = 1.0;
        _2300 = 1.0;
        _2301 = 1.0;
    }
    float _2365;
    float _2367;
    float _2369;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2353 = fma(_2149, cbSceneParam._m0[63u].w, fma(_2145, cbSceneParam._m0[63u].z, fma(_2141, cbSceneParam._m0[63u].y, _2137 * cbSceneParam._m0[63u].x)));
        float _2354 = fma(_2149, cbSceneParam._m0[60u].w, fma(_2145, cbSceneParam._m0[60u].z, fma(_2141, cbSceneParam._m0[60u].y, _2137 * cbSceneParam._m0[60u].x))) / _2353;
        float _2355 = fma(_2149, cbSceneParam._m0[61u].w, fma(_2145, cbSceneParam._m0[61u].z, fma(_2141, cbSceneParam._m0[61u].y, _2137 * cbSceneParam._m0[61u].x))) / _2353;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_2354 >= cbSceneParam._m0[64u].x) && (_2355 >= cbSceneParam._m0[64u].y)) && (_2354 <= cbSceneParam._m0[64u].z)) && (_2355 <= cbSceneParam._m0[64u].w))
        {
            float _2493 = fma(_2149, cbSceneParam._m0[62u].w, fma(_2145, cbSceneParam._m0[62u].z, fma(_2141, cbSceneParam._m0[62u].y, _2137 * cbSceneParam._m0[62u].x))) / _2353;
            float _2497 = isnan(cbSceneParam._m0[41u].w) ? _2493 : (isnan(_2493) ? cbSceneParam._m0[41u].w : max(_2493, cbSceneParam._m0[41u].w));
            float _2540 = (cbSceneParam._m0[33u].x - sqrt(((_2151 * _2151) + (_2150 * _2150)) + (_2152 * _2152))) * cbSceneParam._m0[33u].y;
            float _4683 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
            float _2547 = (isnan(1.0) ? _4683 : (isnan(_4683) ? 1.0 : min(_4683, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2354, cbSceneParam._m0[33u].w + _2355), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2354, _2355 - cbSceneParam._m0[33u].z), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2354 - cbSceneParam._m0[33u].z, _2355 - cbSceneParam._m0[33u].w), _2497), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2354 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2355), _2497), 0.0)).x), vec4(0.25)));
            float _2551 = 1.0 - (_2547 * cbSceneParam._m0[34u].x);
            float _2552 = 1.0 - (_2547 * cbSceneParam._m0[34u].y);
            float _2553 = 1.0 - (_2547 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2552) ? _2300 : (isnan(_2300) ? _2552 : min(_2300, _2552));
            frontier_phi_39_38_ladder_1 = isnan(_2551) ? _2299 : (isnan(_2299) ? _2551 : min(_2299, _2551));
            frontier_phi_39_38_ladder_2 = isnan(_2553) ? _2301 : (isnan(_2301) ? _2553 : min(_2301, _2553));
        }
        else
        {
            frontier_phi_39_38_ladder = _2300;
            frontier_phi_39_38_ladder_1 = _2299;
            frontier_phi_39_38_ladder_2 = _2301;
        }
        _2365 = frontier_phi_39_38_ladder_1;
        _2367 = frontier_phi_39_38_ladder;
        _2369 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _2365 = _2299;
        _2367 = _2300;
        _2369 = _2301;
    }
    uvec4 _2374 = floatBitsToUint(cbInstanceData._m0[_1001 + 5u]);
    uint _2376 = _2374.x * 14u;
    uint _2377 = _2376 + 13u;
    float _2384 = _1041 + (-1.0);
    float _2389 = (cbLight._m0[_2377].x * _2384) + 1.0;
    float _2390 = (cbLight._m0[_2377].y * _2384) + 1.0;
    float _2391 = (cbLight._m0[_2377].z * _2384) + 1.0;
    float _2392 = (cbLight._m0[_2377].w * _2384) + 1.0;
    uint _2393 = _2376 + 5u;
    float _2399 = isnan(1.0) ? _2390 : (isnan(_2390) ? 1.0 : min(_2390, 1.0));
    uint _2403 = _2376 + 4u;
    float _2412 = isnan(1.0) ? _2389 : (isnan(_2389) ? 1.0 : min(_2389, 1.0));
    uint _2416 = _2376 | 1u;
    float _2427 = dot(vec3(cbLight._m0[_2376].xyz), vec3(_863, _864, _865));
    float _2430 = dot(vec3(cbLight._m0[_2416].xyz), vec3(_863, _864, _865));
    float _4719 = isnan(0.0) ? _2427 : (isnan(_2427) ? 0.0 : max(_2427, 0.0));
    float _4730 = isnan(0.0) ? _2430 : (isnan(_2430) ? 0.0 : max(_2430, 0.0));
    float _2435 = (isnan(1.0) ? _4719 : (isnan(_4719) ? 1.0 : min(_4719, 1.0))) * 0.3183098733425140380859375;
    float _2437 = (isnan(1.0) ? _4730 : (isnan(_4730) ? 1.0 : min(_4730, 1.0))) * 0.3183098733425140380859375;
    float _2444 = ((cbLight._m0[_2393].x * _2399) * _2437) + (((cbLight._m0[_2403].x * _2365) * _2412) * _2435);
    float _2445 = ((_2399 * cbLight._m0[_2393].y) * _2437) + (((cbLight._m0[_2403].y * _2367) * _2412) * _2435);
    float _2446 = ((_2399 * cbLight._m0[_2393].z) * _2437) + (((cbLight._m0[_2403].z * _2369) * _2412) * _2435);
    uvec4 _2450 = floatBitsToUint(cbLight._m0[_2376 + 12u]);
    bool _2452 = _2450.x == 0u;
    float _2554;
    float _2556;
    float _2558;
    if (_2452)
    {
        _2554 = _2444;
        _2556 = _2445;
        _2558 = _2446;
    }
    else
    {
        uint _2562 = _2376 + 6u;
        float _2578 = (dot(vec3(cbLight._m0[_2376 + 2u].xyz), vec3(_863, _864, _865)) * 0.5) + 0.5;
        float _2579 = _2578 * _2578;
        float _4741 = isnan(0.0) ? _2579 : (isnan(_2579) ? 0.0 : max(_2579, 0.0));
        float _2580 = isnan(1.0) ? _4741 : (isnan(_4741) ? 1.0 : min(_4741, 1.0));
        float _2581 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
        _2554 = (((cbLight._m0[_2562].x * 0.3183098733425140380859375) * _2580) * _2581) + _2444;
        _2556 = (((cbLight._m0[_2562].y * 0.3183098733425140380859375) * _2580) * _2581) + _2445;
        _2558 = (((cbLight._m0[_2562].z * 0.3183098733425140380859375) * _2580) * _2581) + _2446;
    }
    bool _2561 = _2450.y == 0u;
    float _2616;
    float _2618;
    float _2620;
    if (_2561)
    {
        _2616 = _2554;
        _2618 = _2556;
        _2620 = _2558;
    }
    else
    {
        uint _2789 = _2376 + 7u;
        float _2805 = (dot(vec3(cbLight._m0[_2376 + 3u].xyz), vec3(_863, _864, _865)) * 0.5) + 0.5;
        float _2806 = _2805 * _2805;
        float _4757 = isnan(0.0) ? _2806 : (isnan(_2806) ? 0.0 : max(_2806, 0.0));
        float _2807 = isnan(1.0) ? _4757 : (isnan(_4757) ? 1.0 : min(_4757, 1.0));
        float _2808 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
        _2616 = (((cbLight._m0[_2789].x * 0.3183098733425140380859375) * _2807) * _2808) + _2554;
        _2618 = (((cbLight._m0[_2789].y * 0.3183098733425140380859375) * _2807) * _2808) + _2556;
        _2620 = (((cbLight._m0[_2789].z * 0.3183098733425140380859375) * _2807) * _2808) + _2558;
    }
    uint _2623 = _2376 + 8u;
    float _2636 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2376].w)) * _866) * 0.949999988079071044921875);
    float _2637 = _2636 * _2636;
    float _2638 = cbLight._m0[_2376].x + _943;
    float _2639 = cbLight._m0[_2376].y + _944;
    float _2640 = cbLight._m0[_2376].z + _945;
    float _2644 = inversesqrt(dot(vec3(_2638, _2639, _2640), vec3(_2638, _2639, _2640)));
    float _2645 = _2644 * _2638;
    float _2646 = _2644 * _2639;
    float _2647 = _2644 * _2640;
    float _2648 = dot(vec3(_863, _864, _865), vec3(cbLight._m0[_2376].xyz));
    float _4773 = isnan(0.0) ? _2648 : (isnan(_2648) ? 0.0 : max(_2648, 0.0));
    float _2651 = isnan(1.0) ? _4773 : (isnan(_4773) ? 1.0 : min(_4773, 1.0));
    float _4784 = isnan(0.0) ? _1042 : (isnan(_1042) ? 0.0 : max(_1042, 0.0));
    float _2652 = isnan(1.0) ? _4784 : (isnan(_4784) ? 1.0 : min(_4784, 1.0));
    float _2653 = dot(vec3(_863, _864, _865), vec3(_2645, _2646, _2647));
    float _4795 = isnan(0.0) ? _2653 : (isnan(_2653) ? 0.0 : max(_2653, 0.0));
    float _2656 = isnan(1.0) ? _4795 : (isnan(_4795) ? 1.0 : min(_4795, 1.0));
    float _2657 = dot(vec3(cbLight._m0[_2376].xyz), vec3(_2645, _2646, _2647));
    float _4806 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
    float _2661 = _2637 * _2637;
    float _2665 = ((_2656 * _2656) * (_2661 + (-1.0))) + 1.0;
    float _2673 = exp2(log2(1.0 - (isnan(1.0) ? _4806 : (isnan(_4806) ? 1.0 : min(_4806, 1.0)))) * 5.0);
    float _2674 = 0.959999978542327880859375 - _1023;
    float _2676 = 0.959999978542327880859375 - _1024;
    float _2677 = 0.959999978542327880859375 - _1025;
    float _2684 = 1.0 - _2637;
    float _2695 = (0.5 / (((_2652 * ((_2651 * _2684) + _2637)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2684) + _2637) * _2651))) * _2651;
    float _4817 = isnan(0.0) ? _2695 : (isnan(_2695) ? 0.0 : max(_2695, 0.0));
    float _2697 = (isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0))) * (_2661 / ((_2665 * _2665) * 3.141590118408203125));
    uint _2711 = _2376 + 9u;
    float _2722 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2416].w)) * _866) * 0.949999988079071044921875);
    float _2723 = _2722 * _2722;
    float _2724 = cbLight._m0[_2416].x + _943;
    float _2725 = cbLight._m0[_2416].y + _944;
    float _2726 = cbLight._m0[_2416].z + _945;
    float _2730 = inversesqrt(dot(vec3(_2724, _2725, _2726), vec3(_2724, _2725, _2726)));
    float _2731 = _2730 * _2724;
    float _2732 = _2730 * _2725;
    float _2733 = _2730 * _2726;
    float _2734 = dot(vec3(_863, _864, _865), vec3(cbLight._m0[_2416].xyz));
    float _4828 = isnan(0.0) ? _2734 : (isnan(_2734) ? 0.0 : max(_2734, 0.0));
    float _2737 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
    float _2738 = dot(vec3(_863, _864, _865), vec3(_2731, _2732, _2733));
    float _4839 = isnan(0.0) ? _2738 : (isnan(_2738) ? 0.0 : max(_2738, 0.0));
    float _2741 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    float _2742 = dot(vec3(cbLight._m0[_2416].xyz), vec3(_2731, _2732, _2733));
    float _4850 = isnan(0.0) ? _2742 : (isnan(_2742) ? 0.0 : max(_2742, 0.0));
    float _2746 = _2723 * _2723;
    float _2750 = ((_2741 * _2741) * (_2746 + (-1.0))) + 1.0;
    float _2757 = exp2(log2(1.0 - (isnan(1.0) ? _4850 : (isnan(_4850) ? 1.0 : min(_4850, 1.0)))) * 5.0);
    float _2764 = 1.0 - _2723;
    float _2774 = (0.5 / (((_2652 * ((_2737 * _2764) + _2723)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2764) + _2723) * _2737))) * _2737;
    float _4861 = isnan(0.0) ? _2774 : (isnan(_2774) ? 0.0 : max(_2774, 0.0));
    float _2776 = (isnan(1.0) ? _4861 : (isnan(_4861) ? 1.0 : min(_4861, 1.0))) * (_2746 / ((_2750 * _2750) * 3.141590118408203125));
    float _2786 = (((((_2757 * _2674) + _1026) * cbLight._m0[_2711].x) * _2776) * _2399) + ((((cbLight._m0[_2623].x * _2365) * ((_2673 * _2674) + _1026)) * _2697) * _2412);
    float _2787 = (((((_2757 * _2676) + _1028) * cbLight._m0[_2711].y) * _2776) * _2399) + ((((cbLight._m0[_2623].y * _2367) * ((_2673 * _2676) + _1028)) * _2697) * _2412);
    float _2788 = (((((_2757 * _2677) + _1029) * cbLight._m0[_2711].z) * _2776) * _2399) + ((((cbLight._m0[_2623].z * _2369) * ((_2673 * _2677) + _1029)) * _2697) * _2412);
    float _2844;
    float _2846;
    float _2848;
    if (_2452)
    {
        _2844 = _2786;
        _2846 = _2787;
        _2848 = _2788;
    }
    else
    {
        uint _2850 = _2376 + 2u;
        uint _2854 = _2376 + 10u;
        float _2868 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2850].w)) * _866) * 0.949999988079071044921875);
        float _2869 = _2868 * _2868;
        float _2870 = cbLight._m0[_2850].x + _943;
        float _2871 = cbLight._m0[_2850].y + _944;
        float _2872 = cbLight._m0[_2850].z + _945;
        float _2876 = inversesqrt(dot(vec3(_2870, _2871, _2872), vec3(_2870, _2871, _2872)));
        float _2877 = _2876 * _2870;
        float _2878 = _2876 * _2871;
        float _2879 = _2876 * _2872;
        float _2880 = dot(vec3(_863, _864, _865), vec3(cbLight._m0[_2850].xyz));
        float _4872 = isnan(0.0) ? _2880 : (isnan(_2880) ? 0.0 : max(_2880, 0.0));
        float _2883 = isnan(1.0) ? _4872 : (isnan(_4872) ? 1.0 : min(_4872, 1.0));
        float _2884 = dot(vec3(_863, _864, _865), vec3(_2877, _2878, _2879));
        float _4883 = isnan(0.0) ? _2884 : (isnan(_2884) ? 0.0 : max(_2884, 0.0));
        float _2887 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
        float _2888 = dot(vec3(cbLight._m0[_2850].xyz), vec3(_2877, _2878, _2879));
        float _4894 = isnan(0.0) ? _2888 : (isnan(_2888) ? 0.0 : max(_2888, 0.0));
        float _2892 = _2869 * _2869;
        float _2896 = ((_2887 * _2887) * (_2892 + (-1.0))) + 1.0;
        float _2903 = exp2(log2(1.0 - (isnan(1.0) ? _4894 : (isnan(_4894) ? 1.0 : min(_4894, 1.0)))) * 5.0);
        float _2910 = 1.0 - _2869;
        float _2920 = (0.5 / (((_2652 * ((_2883 * _2910) + _2869)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _2910) + _2869) * _2883))) * _2883;
        float _4905 = isnan(0.0) ? _2920 : (isnan(_2920) ? 0.0 : max(_2920, 0.0));
        float _2922 = (isnan(1.0) ? _4905 : (isnan(_4905) ? 1.0 : min(_4905, 1.0))) * (_2892 / ((_2896 * _2896) * 3.141590118408203125));
        float _2923 = isnan(1.0) ? _2391 : (isnan(_2391) ? 1.0 : min(_2391, 1.0));
        _2844 = (((((_2903 * _2674) + _1026) * cbLight._m0[_2854].x) * _2922) * _2923) + _2786;
        _2846 = (((((_2903 * _2676) + _1028) * cbLight._m0[_2854].y) * _2922) * _2923) + _2787;
        _2848 = (((((_2903 * _2677) + _1029) * cbLight._m0[_2854].z) * _2922) * _2923) + _2788;
    }
    float _2954;
    float _2956;
    float _2958;
    if (_2561)
    {
        _2954 = _2844;
        _2956 = _2846;
        _2958 = _2848;
    }
    else
    {
        uint _2965 = _2376 + 3u;
        uint _2969 = _2376 + 11u;
        float _2983 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2965].w)) * _866) * 0.949999988079071044921875);
        float _2984 = _2983 * _2983;
        float _2985 = cbLight._m0[_2965].x + _943;
        float _2986 = cbLight._m0[_2965].y + _944;
        float _2987 = cbLight._m0[_2965].z + _945;
        float _2991 = inversesqrt(dot(vec3(_2985, _2986, _2987), vec3(_2985, _2986, _2987)));
        float _2992 = _2991 * _2985;
        float _2993 = _2991 * _2986;
        float _2994 = _2991 * _2987;
        float _2995 = dot(vec3(_863, _864, _865), vec3(cbLight._m0[_2965].xyz));
        float _4921 = isnan(0.0) ? _2995 : (isnan(_2995) ? 0.0 : max(_2995, 0.0));
        float _2998 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
        float _2999 = dot(vec3(_863, _864, _865), vec3(_2992, _2993, _2994));
        float _4932 = isnan(0.0) ? _2999 : (isnan(_2999) ? 0.0 : max(_2999, 0.0));
        float _3002 = isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0));
        float _3003 = dot(vec3(cbLight._m0[_2965].xyz), vec3(_2992, _2993, _2994));
        float _4943 = isnan(0.0) ? _3003 : (isnan(_3003) ? 0.0 : max(_3003, 0.0));
        float _3007 = _2984 * _2984;
        float _3011 = ((_3002 * _3002) * (_3007 + (-1.0))) + 1.0;
        float _3018 = exp2(log2(1.0 - (isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0)))) * 5.0);
        float _3025 = 1.0 - _2984;
        float _3035 = (0.5 / (((_2652 * ((_2998 * _3025) + _2984)) + 9.9999999392252902907785028219223e-09) + (((_2652 * _3025) + _2984) * _2998))) * _2998;
        float _4954 = isnan(0.0) ? _3035 : (isnan(_3035) ? 0.0 : max(_3035, 0.0));
        float _3037 = (isnan(1.0) ? _4954 : (isnan(_4954) ? 1.0 : min(_4954, 1.0))) * (_3007 / ((_3011 * _3011) * 3.141590118408203125));
        float _3038 = isnan(1.0) ? _2392 : (isnan(_2392) ? 1.0 : min(_2392, 1.0));
        _2954 = (((((_3018 * _2674) + _1026) * cbLight._m0[_2969].x) * _3037) * _3038) + _2844;
        _2956 = (((((_3018 * _2676) + _1028) * cbLight._m0[_2969].y) * _3037) * _3038) + _2846;
        _2958 = (((((_3018 * _2677) + _1029) * cbLight._m0[_2969].z) * _3037) * _3038) + _2848;
    }
    float _3103;
    float _3105;
    float _3107;
    float _3109;
    float _3111;
    float _3113;
    if (_2374.y == 0u)
    {
        uvec4 _3059 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3060 = _3059.x;
        uint _3071 = uint((float(_3059.y) * floor(float(uint(cbSceneParam._m0[85u].y * _964) / _3060))) + floor(float(uint(cbSceneParam._m0[85u].x * _963) / _3060)));
        float _3081 = (log2(_2152 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3082 = isnan(0.0) ? _3081 : (isnan(_3081) ? 0.0 : max(_3081, 0.0));
        uint _3085 = uint(isnan(14.0) ? _3082 : (isnan(_3082) ? 14.0 : min(_3082, 14.0)));
        uvec4 _3090 = texelFetch(g_lightClusterGridBuffer, int(((_3085 << 2u) + (_3071 << 6u)) >> 2u));
        uint _3091 = _3090.x;
        uint _3092 = _3059.z;
        float _3170;
        float _3172;
        float _3174;
        float _3176;
        float _3178;
        float _3180;
        if (((((1u << ((_3092 >> 4u) & 15u)) + 4294967295u) & _3091) == 0u) || ((_3092 & 240u) == 0u))
        {
            _3170 = 0.0;
            _3172 = 0.0;
            _3174 = 0.0;
            _3176 = 0.0;
            _3178 = 0.0;
            _3180 = 0.0;
        }
        else
        {
            float _3171;
            float _3173;
            float _3175;
            float _3177;
            float _3179;
            float _3181;
            float _3322 = 0.0;
            float _3323 = 0.0;
            float _3324 = 0.0;
            float _3325 = 0.0;
            float _3326 = 0.0;
            float _3327 = 0.0;
            uint _3328 = 0u;
            uint _3337;
            bool _3338;
            for (;;)
            {
                _3337 = texelFetch(g_lightClassification, int((((_3085 << 5u) + (_3071 << 9u)) + (_3328 << 2u)) >> 2u)).x;
                _3338 = _3337 == 0u;
                float frontier_phi_73_pred;
                float frontier_phi_73_pred_1;
                float frontier_phi_73_pred_2;
                float frontier_phi_73_pred_3;
                float frontier_phi_73_pred_4;
                float frontier_phi_73_pred_5;
                if (_3338)
                {
                    frontier_phi_73_pred = _3327;
                    frontier_phi_73_pred_1 = _3326;
                    frontier_phi_73_pred_2 = _3325;
                    frontier_phi_73_pred_3 = _3324;
                    frontier_phi_73_pred_4 = _3323;
                    frontier_phi_73_pred_5 = _3322;
                }
                else
                {
                    float _3467;
                    float _3468;
                    float _3469;
                    float _3470;
                    float _3471;
                    float _3472;
                    uint _3473;
                    _3467 = _3322;
                    _3468 = _3323;
                    _3469 = _3324;
                    _3470 = _3325;
                    _3471 = _3326;
                    _3472 = _3327;
                    _3473 = _3337;
                    float _3394;
                    float _3395;
                    float _3396;
                    float _3397;
                    float _3398;
                    float _3399;
                    for (;;)
                    {
                        uint _3477 = uint(findLSB(_3473)) + (_3328 << 5u);
                        uint _3474 = (_3473 + 4294967295u) & _3473;
                        uint _3479 = _3477 * 48u;
                        vec4 _3493 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3479)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3479 + 3u)).x));
                        uint _3499 = (_3477 * 48u) + 4u;
                        vec4 _3512 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3499)).x, texelFetch(g_PointLightRenderingBuffer, int(_3499 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3499 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3499 + 3u)).x));
                        uint _3518 = (_3477 * 48u) + 8u;
                        vec3 _3529 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3518)).x, texelFetch(g_PointLightRenderingBuffer, int(_3518 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3518 + 2u)).x));
                        float _3533 = _3493.x - _2150;
                        float _3534 = _3493.y - _2151;
                        float _3535 = _3493.z - _2152;
                        float _3536 = dot(vec3(_3533, _3534, _3535), vec3(_3533, _3534, _3535));
                        float _3539 = inversesqrt(_3536);
                        float _3540 = _3539 * _3533;
                        float _3541 = _3539 * _3534;
                        float _3542 = _3539 * _3535;
                        float _3543 = dot(vec3(_982, _985, _988), vec3(_3540, _3541, _3542));
                        float _3548 = 1.0 - (_3536 * _3493.w);
                        float _4980 = isnan(0.0) ? _3548 : (isnan(_3548) ? 0.0 : max(_3548, 0.0));
                        float _3549 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
                        float _3550 = sqrt(_3536) * _3512.w;
                        float _3553 = 1.39999997615814208984375 / (_3550 + 1.39999997615814208984375);
                        float _3554 = _3553 * _3553;
                        float _3557 = ((1.0 - _3554) * _3543) + _3554;
                        float _3560 = _3550 * _3550;
                        float _3564 = ((isnan(0.0) ? _3557 : (isnan(_3557) ? 0.0 : max(_3557, 0.0))) * _3549) / ((_3560 * 0.699999988079071044921875) + 1.0);
                        float _3568 = (-0.0) - _2150;
                        float _3569 = (-0.0) - _2151;
                        float _3570 = (-0.0) - _2152;
                        float _3574 = inversesqrt(dot(vec3(_3568, _3569, _3570), vec3(_3568, _3569, _3570)));
                        float _3575 = _3574 * _3568;
                        float _3576 = _3574 * _3569;
                        float _3577 = _3574 * _3570;
                        float _3584 = exp2(log2(1.0 / ((_3560 * 3.5) + 5.0)) * 0.25);
                        float _3585 = 1.0 - _1057;
                        float _3592 = sqrt(1.0 - ((1.0 - (_3585 * _3585)) * (1.0 - (_3584 * _3584))));
                        float _3593 = _3592 * _3592;
                        float _3594 = _3593 * _3593;
                        float _3595 = _3575 + _3540;
                        float _3596 = _3576 + _3541;
                        float _3597 = _3577 + _3542;
                        float _3601 = inversesqrt(dot(vec3(_3595, _3596, _3597), vec3(_3595, _3596, _3597)));
                        float _3605 = dot(vec3(_982, _985, _988), vec3(_3575, _3576, _3577));
                        float _4996 = isnan(0.0) ? _3605 : (isnan(_3605) ? 0.0 : max(_3605, 0.0));
                        float _3608 = isnan(1.0) ? _4996 : (isnan(_4996) ? 1.0 : min(_4996, 1.0));
                        float _3609 = dot(vec3(_982, _985, _988), vec3(_3601 * _3595, _3601 * _3596, _3601 * _3597));
                        float _5007 = isnan(0.0) ? _3609 : (isnan(_3609) ? 0.0 : max(_3609, 0.0));
                        float _3612 = isnan(1.0) ? _5007 : (isnan(_5007) ? 1.0 : min(_5007, 1.0));
                        float _3616 = ((_3612 * _3612) * (_3594 + (-1.0))) + 1.0;
                        float _3617 = _3553 * _3593;
                        float _3618 = _3617 * _3617;
                        float _3621 = ((1.0 - _3618) * _3543) + _3618;
                        float _5018 = isnan(0.0) ? _3621 : (isnan(_3621) ? 0.0 : max(_3621, 0.0));
                        float _3622 = isnan(1.0) ? _5018 : (isnan(_5018) ? 1.0 : min(_5018, 1.0));
                        float _3623 = 1.0 - _3593;
                        float _3633 = (0.5 / (((_3622 * ((_3608 * _3623) + _3593)) + 9.9999999392252902907785028219223e-09) + (((_3622 * _3623) + _3593) * _3608))) * _3622;
                        float _5029 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                        float _3644 = (((_3594 * 3.1415927410125732421875) * (isnan(1.0) ? _5029 : (isnan(_5029) ? 1.0 : min(_5029, 1.0)))) / ((_3616 * _3616) * ((_3560 * 2.1991131305694580078125) + 3.141590118408203125))) * _3549;
                        _3397 = (_3564 * _3512.x) + _3470;
                        _3398 = (_3564 * _3512.y) + _3471;
                        _3399 = (_3564 * _3512.z) + _3472;
                        _3394 = (_3644 * _3529.x) + _3467;
                        _3395 = (_3644 * _3529.y) + _3468;
                        _3396 = (_3644 * _3529.z) + _3469;
                        if (_3474 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3467 = _3394;
                            _3468 = _3395;
                            _3469 = _3396;
                            _3470 = _3397;
                            _3471 = _3398;
                            _3472 = _3399;
                            _3473 = _3474;
                        }
                    }
                    frontier_phi_73_pred = _3399;
                    frontier_phi_73_pred_1 = _3398;
                    frontier_phi_73_pred_2 = _3397;
                    frontier_phi_73_pred_3 = _3396;
                    frontier_phi_73_pred_4 = _3395;
                    frontier_phi_73_pred_5 = _3394;
                }
                _3181 = frontier_phi_73_pred;
                _3179 = frontier_phi_73_pred_1;
                _3177 = frontier_phi_73_pred_2;
                _3175 = frontier_phi_73_pred_3;
                _3173 = frontier_phi_73_pred_4;
                _3171 = frontier_phi_73_pred_5;
                uint _3329 = _3328 + 1u;
                if (_3329 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3322 = _3171;
                    _3323 = _3173;
                    _3324 = _3175;
                    _3325 = _3177;
                    _3326 = _3179;
                    _3327 = _3181;
                    _3328 = _3329;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3170 = _3171;
            _3172 = _3173;
            _3174 = _3175;
            _3176 = _3177;
            _3178 = _3179;
            _3180 = _3181;
        }
        uvec4 _3184 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3185 = _3184.z;
        uint _3187 = (_3185 >> 8u) & 15u;
        float _3290;
        float _3292;
        float _3294;
        float _3296;
        float _3298;
        float _3300;
        if (((4294967295u << _3187) & _3091) == 0u)
        {
            _3290 = _3170;
            _3292 = _3172;
            _3294 = _3174;
            _3296 = _3176;
            _3298 = _3178;
            _3300 = _3180;
        }
        else
        {
            float _3315 = inversesqrt(dot(vec3(_2150, _2151, _2152), vec3(_2150, _2151, _2152)));
            float _3316 = _3315 * _2150;
            float _3317 = _3315 * _2151;
            float _3318 = _3315 * _2152;
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_3187 < ((_3185 >> 12u) & 15u))
            {
                float _3291;
                float _3293;
                float _3295;
                float _3297;
                float _3299;
                float _3301;
                float _3450 = _3170;
                float _3451 = _3172;
                float _3452 = _3174;
                float _3453 = _3176;
                float _3454 = _3178;
                float _3455 = _3180;
                uint _3456 = _3187;
                uint _3465;
                bool _3466;
                for (;;)
                {
                    _3465 = texelFetch(g_lightClassification, int((((_3085 << 5u) + (_3071 << 9u)) + (_3456 << 2u)) >> 2u)).x;
                    _3466 = _3465 == 0u;
                    float frontier_phi_84_pred;
                    float frontier_phi_84_pred_1;
                    float frontier_phi_84_pred_2;
                    float frontier_phi_84_pred_3;
                    float frontier_phi_84_pred_4;
                    float frontier_phi_84_pred_5;
                    if (_3466)
                    {
                        frontier_phi_84_pred = _3454;
                        frontier_phi_84_pred_1 = _3453;
                        frontier_phi_84_pred_2 = _3452;
                        frontier_phi_84_pred_3 = _3451;
                        frontier_phi_84_pred_4 = _3450;
                        frontier_phi_84_pred_5 = _3455;
                    }
                    else
                    {
                        float _3658;
                        float _3659;
                        float _3660;
                        float _3661;
                        float _3662;
                        float _3663;
                        float _3952;
                        float _3953;
                        float _3954;
                        float _3955;
                        float _3956;
                        float _3957;
                        float _3671 = _3450;
                        float _3672 = _3451;
                        float _3673 = _3452;
                        float _3674 = _3453;
                        float _3675 = _3454;
                        float _3676 = _3455;
                        uint _3677 = _3465;
                        uint _3678;
                        vec4 _3703;
                        float _3704;
                        vec4 _3719;
                        vec3 _3731;
                        vec4 _3746;
                        vec4 _3761;
                        float _3808;
                        bool _3809;
                        for (;;)
                        {
                            uint _3688 = ((_3456 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3677));
                            _3678 = (_3677 + 4294967295u) & _3677;
                            uint _3690 = _3688 * 40u;
                            _3703 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3690)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3690 + 3u)).x));
                            _3704 = _3703.w;
                            uint _3706 = (_3688 * 40u) + 4u;
                            _3719 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3706)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3706 + 3u)).x));
                            uint _3721 = (_3688 * 40u) + 8u;
                            _3731 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3721)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3721 + 2u)).x));
                            uint _3733 = (_3688 * 40u) + 16u;
                            _3746 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3733)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3733 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3733 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3733 + 3u)).x));
                            uint _3748 = (_3688 * 40u) + 20u;
                            _3761 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3748)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3748 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3748 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3748 + 3u)).x));
                            uint _3764 = (_3688 * 40u) + 24u;
                            vec4 _3777 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3764)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3764 + 3u)).x));
                            uint _3783 = (_3688 * 40u) + 28u;
                            vec4 _3796 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3783)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3783 + 3u)).x));
                            _3808 = fma(_2152, _3796.z, fma(_2151, _3796.y, _3796.x * _2150)) + _3796.w;
                            _3809 = !((fma(_2152, _3777.z, fma(_2151, _3777.y, _3777.x * _2150)) + _3777.w) <= 0.0);
                            float frontier_phi_90_pred;
                            float frontier_phi_90_pred_1;
                            float frontier_phi_90_pred_2;
                            float frontier_phi_90_pred_3;
                            float frontier_phi_90_pred_4;
                            float frontier_phi_90_pred_5;
                            if (_3809)
                            {
                                float _3836 = _3703.x - _2150;
                                float _3837 = _3703.y - _2151;
                                float _3838 = _3703.z - _2152;
                                float _3839 = dot(vec3(_3836, _3837, _3838), vec3(_3836, _3837, _3838));
                                float _3842 = inversesqrt(_3839);
                                float _3843 = _3842 * _3836;
                                float _3844 = _3842 * _3837;
                                float _3845 = _3842 * _3838;
                                float _3849 = 1.0 - (_3839 / (_3704 * _3704));
                                float _5040 = isnan(0.0) ? _3849 : (isnan(_3849) ? 0.0 : max(_3849, 0.0));
                                float _3850 = isnan(1.0) ? _5040 : (isnan(_5040) ? 1.0 : min(_5040, 1.0));
                                float _3854 = sqrt(_3839) * _3719.w;
                                float _3856 = 1.39999997615814208984375 / (_3854 + 1.39999997615814208984375);
                                float _3857 = _3856 * _3856;
                                float _3860 = ((1.0 - _3857) * dot(vec3(_3843, _3844, _3845), vec3(_982, _985, _988))) + _3857;
                                float _3863 = _3854 * _3854;
                                float _3867 = (fma(_2152, _3746.z, fma(_2151, _3746.y, _3746.x * _2150)) + _3746.w) / _3808;
                                float _3868 = (fma(_2152, _3761.z, fma(_2151, _3761.y, _3761.x * _2150)) + _3761.w) / _3808;
                                float _3872 = 1.0 - dot(vec2(_3867, _3868), vec2(_3867, _3868));
                                float _5056 = isnan(0.0) ? _3872 : (isnan(_3872) ? 0.0 : max(_3872, 0.0));
                                float _3873 = isnan(1.0) ? _5056 : (isnan(_5056) ? 1.0 : min(_5056, 1.0));
                                float _3874 = _3873 * (((isnan(0.0) ? _3860 : (isnan(_3860) ? 0.0 : max(_3860, 0.0))) * _3850) / ((_3863 * 0.699999988079071044921875) + 1.0));
                                float _3886 = exp2(log2(1.0 / ((_3863 * 3.5) + 5.0)) * 0.25);
                                float _3887 = 1.0 - _1057;
                                float _3894 = sqrt(1.0 - ((1.0 - (_3887 * _3887)) * (1.0 - (_3886 * _3886))));
                                float _3895 = _3894 * _3894;
                                float _3896 = _3895 * _3895;
                                float _3897 = _3843 - _3316;
                                float _3898 = _3844 - _3317;
                                float _3899 = _3845 - _3318;
                                float _3903 = inversesqrt(dot(vec3(_3897, _3898, _3899), vec3(_3897, _3898, _3899)));
                                float _3907 = dot(vec3(_982, _985, _988), vec3((-0.0) - _3316, (-0.0) - _3317, (-0.0) - _3318));
                                float _5067 = isnan(0.0) ? _3907 : (isnan(_3907) ? 0.0 : max(_3907, 0.0));
                                float _3910 = isnan(1.0) ? _5067 : (isnan(_5067) ? 1.0 : min(_5067, 1.0));
                                float _3911 = dot(vec3(_982, _985, _988), vec3(_3903 * _3897, _3903 * _3898, _3903 * _3899));
                                float _5078 = isnan(0.0) ? _3911 : (isnan(_3911) ? 0.0 : max(_3911, 0.0));
                                float _3914 = isnan(1.0) ? _5078 : (isnan(_5078) ? 1.0 : min(_5078, 1.0));
                                float _3918 = ((_3914 * _3914) * (_3896 + (-1.0))) + 1.0;
                                float _3919 = _3856 * _3895;
                                float _3920 = _3919 * _3919;
                                float _3926 = ((1.0 - _3920) * dot(vec3(_982, _985, _988), vec3(_3843, _3844, _3845))) + _3920;
                                float _5089 = isnan(0.0) ? _3926 : (isnan(_3926) ? 0.0 : max(_3926, 0.0));
                                float _3927 = isnan(1.0) ? _5089 : (isnan(_5089) ? 1.0 : min(_5089, 1.0));
                                float _3928 = 1.0 - _3895;
                                float _3938 = (0.5 / (((_3927 * ((_3910 * _3928) + _3895)) + 9.9999999392252902907785028219223e-09) + (((_3927 * _3928) + _3895) * _3910))) * _3927;
                                float _5100 = isnan(0.0) ? _3938 : (isnan(_3938) ? 0.0 : max(_3938, 0.0));
                                float _3948 = (_3873 * _3850) * (((_3896 * 3.1415927410125732421875) * (isnan(1.0) ? _5100 : (isnan(_5100) ? 1.0 : min(_5100, 1.0)))) / ((_3918 * _3918) * ((_3863 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_90_pred = _3874 * _3719.y;
                                frontier_phi_90_pred_1 = _3874 * _3719.x;
                                frontier_phi_90_pred_2 = _3948 * _3731.z;
                                frontier_phi_90_pred_3 = _3948 * _3731.y;
                                frontier_phi_90_pred_4 = _3948 * _3731.x;
                                frontier_phi_90_pred_5 = _3874 * _3719.z;
                            }
                            else
                            {
                                frontier_phi_90_pred = 0.0;
                                frontier_phi_90_pred_1 = 0.0;
                                frontier_phi_90_pred_2 = 0.0;
                                frontier_phi_90_pred_3 = 0.0;
                                frontier_phi_90_pred_4 = 0.0;
                                frontier_phi_90_pred_5 = 0.0;
                            }
                            _3956 = frontier_phi_90_pred;
                            _3955 = frontier_phi_90_pred_1;
                            _3954 = frontier_phi_90_pred_2;
                            _3953 = frontier_phi_90_pred_3;
                            _3952 = frontier_phi_90_pred_4;
                            _3957 = frontier_phi_90_pred_5;
                            _3661 = _3955 + _3674;
                            _3662 = _3956 + _3675;
                            _3663 = _3957 + _3676;
                            _3658 = _3952 + _3671;
                            _3659 = _3953 + _3672;
                            _3660 = _3954 + _3673;
                            if (_3678 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3671 = _3658;
                                _3672 = _3659;
                                _3673 = _3660;
                                _3674 = _3661;
                                _3675 = _3662;
                                _3676 = _3663;
                                _3677 = _3678;
                                continue;
                            }
                        }
                        frontier_phi_84_pred = _3662;
                        frontier_phi_84_pred_1 = _3661;
                        frontier_phi_84_pred_2 = _3660;
                        frontier_phi_84_pred_3 = _3659;
                        frontier_phi_84_pred_4 = _3658;
                        frontier_phi_84_pred_5 = _3663;
                    }
                    _3299 = frontier_phi_84_pred;
                    _3297 = frontier_phi_84_pred_1;
                    _3295 = frontier_phi_84_pred_2;
                    _3293 = frontier_phi_84_pred_3;
                    _3291 = frontier_phi_84_pred_4;
                    _3301 = frontier_phi_84_pred_5;
                    uint _3457 = _3456 + 1u;
                    if (_3457 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3450 = _3291;
                        _3451 = _3293;
                        _3452 = _3295;
                        _3453 = _3297;
                        _3454 = _3299;
                        _3455 = _3301;
                        _3456 = _3457;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _3301;
                frontier_phi_65_66_ladder_1 = _3297;
                frontier_phi_65_66_ladder_2 = _3299;
                frontier_phi_65_66_ladder_3 = _3293;
                frontier_phi_65_66_ladder_4 = _3291;
                frontier_phi_65_66_ladder_5 = _3295;
            }
            else
            {
                frontier_phi_65_66_ladder = _3180;
                frontier_phi_65_66_ladder_1 = _3176;
                frontier_phi_65_66_ladder_2 = _3178;
                frontier_phi_65_66_ladder_3 = _3172;
                frontier_phi_65_66_ladder_4 = _3170;
                frontier_phi_65_66_ladder_5 = _3174;
            }
            _3290 = frontier_phi_65_66_ladder_4;
            _3292 = frontier_phi_65_66_ladder_3;
            _3294 = frontier_phi_65_66_ladder_5;
            _3296 = frontier_phi_65_66_ladder_1;
            _3298 = frontier_phi_65_66_ladder_2;
            _3300 = frontier_phi_65_66_ladder;
        }
        float _3305 = isnan(1.0) ? _1041 : (isnan(_1041) ? 1.0 : min(_1041, 1.0));
        _3103 = (_3305 * _3296) + _2616;
        _3105 = (_3305 * _3298) + _2618;
        _3107 = (_3305 * _3300) + _2620;
        _3109 = ((_3290 * _1026) * _3305) + _2954;
        _3111 = ((_3292 * _1028) * _3305) + _2956;
        _3113 = ((_3294 * _1029) * _3305) + _2958;
    }
    else
    {
        _3103 = _2616;
        _3105 = _2618;
        _3107 = _2620;
        _3109 = _2954;
        _3111 = _2956;
        _3113 = _2958;
    }
    float _5116 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
    float _5127 = isnan(0.0) ? _1017 : (isnan(_1017) ? 0.0 : max(_1017, 0.0));
    float _5138 = isnan(0.0) ? _1018 : (isnan(_1018) ? 0.0 : max(_1018, 0.0));
    float _3130 = ((isnan(1.0) ? _5116 : (isnan(_5116) ? 1.0 : min(_5116, 1.0))) * (_3103 + ((isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0))) * _1041))) + ((_3109 + ((isnan(0.0) ? _2097 : (isnan(_2097) ? 0.0 : max(_2097, 0.0))) * _1883)) * cbPerFrame._m0[3u].x);
    float _3131 = ((isnan(1.0) ? _5127 : (isnan(_5127) ? 1.0 : min(_5127, 1.0))) * (_3105 + ((isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0))) * _1041))) + ((_3111 + ((isnan(0.0) ? _2100 : (isnan(_2100) ? 0.0 : max(_2100, 0.0))) * _1883)) * cbPerFrame._m0[3u].x);
    float _3132 = ((isnan(1.0) ? _5138 : (isnan(_5138) ? 1.0 : min(_5138, 1.0))) * (_3107 + ((isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))) * _1041))) + ((_3113 + ((isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0))) * _1883)) * cbPerFrame._m0[3u].x);
    uint _3133 = _1001 + 6u;
    float _3141 = _963 / cbSceneParam._m0[86u].x;
    float _3142 = _964 / cbSceneParam._m0[86u].y;
    vec4 _3156 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3141, _3142, (log2((isnan(cbSceneParam._m0[77u].w) ? _886 : (isnan(_886) ? cbSceneParam._m0[77u].w : min(_886, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3158 = _3156.x;
    float _3159 = _3156.y;
    float _3160 = _3156.z;
    float _3161 = _3156.w;
    float _3232;
    float _3234;
    float _3236;
    float _3238;
    if (_886 > cbSceneParam._m0[78u].w)
    {
        float _3195 = isnan(_886) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _886 : min(cbSceneParam._m0[80u].w, _886));
        float _3196 = _3195 / _886;
        float _3207 = _3196 * _936;
        float _3208 = _937 * _3196;
        float _3209 = (-0.0) - _3208;
        float _3210 = _3196 * _938;
        float _3212 = (cbSceneParam._m0[77u].w * _3209) / _3195;
        float _3213 = _3212 + cbSceneParam._m0[79u].w;
        float _3214 = cbSceneParam._m0[79u].w - _3208;
        float _3220 = sqrt(((_3207 * _3207) + (_3208 * _3208)) + (_3210 * _3210));
        float _3223 = (1.0 - (cbSceneParam._m0[77u].w / _3195)) * _3220;
        float _3228 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3230 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3407;
        if (abs((_3209 - _3212) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3407 = ((((_3213 > 0.0) ? exp2(_3228 * _3213) : (2.0 - exp2(_3230 * _3213))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3223;
        }
        else
        {
            float _3351 = 1.0 / cbSceneParam._m0[80u].x;
            float _3352 = isnan(_3214) ? _3213 : (isnan(_3213) ? _3214 : max(_3213, _3214));
            float _3353 = isnan(_3214) ? _3213 : (isnan(_3213) ? _3214 : min(_3213, _3214));
            float _3362 = isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : min(_3352, 0.0));
            float _3363 = isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : min(_3353, 0.0));
            _3407 = ((abs(_3220 / _3209) * cbSceneParam._m0[80u].y) * ((((_3362 - _3363) * 2.0) - ((exp2(_3228 * (isnan(0.0) ? _3352 : (isnan(_3352) ? 0.0 : max(_3352, 0.0)))) - exp2(_3228 * (isnan(0.0) ? _3353 : (isnan(_3353) ? 0.0 : max(_3353, 0.0))))) * _3351)) - ((exp2(_3230 * _3362) - exp2(_3230 * _3363)) * _3351))) + (_3223 * cbSceneParam._m0[80u].z);
        }
        vec4 _3409 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_3141, _3142, 1.0), 0.0);
        float _3418 = exp2((_3407 * (-1.44269502162933349609375)) * (1.0 - _3409.w));
        float _3419 = log2(_3418);
        float _3435 = log2(_3161);
        _3232 = (exp2(_3435 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].x)) * _3409.x) / cbSceneParam._m0[78u].x)) + _3158;
        _3234 = (exp2(_3435 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].y)) * _3409.y) / cbSceneParam._m0[78u].y)) + _3159;
        _3236 = (exp2(_3435 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3419 * cbSceneParam._m0[78u].z)) * _3409.z) / cbSceneParam._m0[78u].z)) + _3160;
        _3238 = _3418 * _3161;
    }
    else
    {
        _3232 = _3158;
        _3234 = _3159;
        _3236 = _3160;
        _3238 = _3161;
    }
    bool _3445;
    vec4 _3248;
    vec4 _3270;
    float _3272;
    float _3276;
    float _3277;
    float _3278;
    float _3279;
    bool _3289;
    for (;;)
    {
        _3248 = cbMatDynParam._m0[0u];
        float _3250 = roundEven(_3248.y);
        bool _3251 = _3250 == 3.0;
        float _3252 = log2(_3238);
        float _3259 = exp2(_3252 * cbSceneParam._m0[78u].x) * _3130;
        float _3260 = exp2(_3252 * cbSceneParam._m0[78u].y) * _3131;
        float _3261 = exp2(_3252 * cbSceneParam._m0[78u].z) * _3132;
        float _3268 = _952 + (-0.5);
        _3270 = cbMtdParam._m0[1u];
        _3272 = _3270.y * _3268;
        float _3275 = (_3250 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3276 = _3275 * (_3251 ? _3259 : (_3259 + (cbSceneParam._m0[72u].w * _3232)));
        _3277 = _3275 * (_3251 ? _3260 : (_3260 + (cbSceneParam._m0[72u].w * _3234)));
        _3278 = _3275 * (_3251 ? _3261 : (_3261 + (cbSceneParam._m0[72u].w * _3236)));
        _3279 = _3268 * 0.999000012874603271484375;
        _3289 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3289)
        {
            if ((cbInstanceData._m0[_1001 + 7u].x + _3279) < 0.5)
            {
                _3445 = true;
                break;
            }
        }
        uint _3386 = _1002 + uint(_3248.w);
        if ((cbInstanceData._m0[_3386].w < 1.0) && ((cbInstanceData._m0[_3386].w + _3279) < 0.5))
        {
            _3445 = true;
            break;
        }
        if ((_3272 + 1.0) < _3270.x)
        {
            _3445 = true;
            break;
        }
        _3445 = false;
        break;
    }
    float _3649;
    if (_3445)
    {
        discard_state = true;
        _3649 = 0.0;
    }
    else
    {
        _3649 = cbInstanceData._m0[_3133].w;
    }
    SV_Target.x = _3276;
    SV_Target.y = _3277;
    SV_Target.z = _3278;
    SV_Target.w = _3649;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3133].w;
    discard_exit();
}


