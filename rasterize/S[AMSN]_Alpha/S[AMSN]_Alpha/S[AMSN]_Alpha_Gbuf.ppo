#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D S_AMSN_Alpha_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_Alpha_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_Alpha_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec4 TEXCOORD_1;
layout(location = 4) in float TEXCOORD_9;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _131 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _138 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _139 = _138 * NORMAL.x;
    float _140 = _138 * NORMAL.y;
    float _141 = _138 * NORMAL.z;
    float _145 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _153;
    float _154;
    float _155;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
        _155 = (-0.0) - _141;
    }
    else
    {
        _153 = _139;
        _154 = _140;
        _155 = _141;
    }
    vec4 _169 = texture(sampler2D(S_AMSN_Alpha_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[0u].w));
    float _172 = _169.x;
    float _173 = _169.y;
    float _174 = _169.z;
    float _176 = _169.w * TEXCOORD_1.z;
    float _195 = texture(sampler2D(S_AMSN_Alpha_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[2u].w)).x + cbMtdParam._m0[9u].x;
    vec4 _207 = texture(sampler2D(S_AMSN_Alpha_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD_1.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD_1.y) + cbTextureTilingScale._m0[1u].w));
    float _211 = _207.z;
    float _215 = (_207.x * 2.0) + (-1.0);
    float _217 = (_207.y * 2.0) + (-1.0);
    float _218 = dot(vec2(_215, _217), vec2(_215, _217));
    float _332 = isnan(0.0) ? _218 : (isnan(_218) ? 0.0 : max(_218, 0.0));
    float _224 = sqrt(1.0 - (isnan(1.0) ? _332 : (isnan(_332) ? 1.0 : min(_332, 1.0))));
    float _227 = fma(_224, _153, fma(_217, _145 * TANGENT.x, (_131 * _123) * _215));
    float _230 = fma(_224, _154, fma(_217, _145 * TANGENT.y, (_131 * _124) * _215));
    float _233 = fma(_224, _155, fma(_217, _145 * TANGENT.z, (_131 * _125) * _215));
    float _237 = inversesqrt(dot(vec3(_227, _230, _233), vec3(_227, _230, _233)));
    float _343 = isnan(0.0) ? _176 : (isnan(_176) ? 0.0 : max(_176, 0.0));
    float _238 = isnan(1.0) ? _343 : (isnan(_343) ? 1.0 : min(_343, 1.0));
    float _354 = isnan(0.0) ? _211 : (isnan(_211) ? 0.0 : max(_211, 0.0));
    float _365 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _376 = isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0));
    float _387 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _398 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    uint _258 = uint(roundEven(NORMAL.w)) * 13u;
    uint _261 = (_258 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _267 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _365 : (isnan(_365) ? 1.0 : min(_365, 1.0)))) * cbInstanceData._m0[_261].x;
    float _268 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0)))) * cbInstanceData._m0[_261].y;
    float _269 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _387 : (isnan(_387) ? 1.0 : min(_387, 1.0)))) * cbInstanceData._m0[_261].z;
    float _409 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _420 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _431 = isnan(0.0) ? _269 : (isnan(_269) ? 0.0 : max(_269, 0.0));
    float _442 = isnan(0.0) ? _238 : (isnan(_238) ? 0.0 : max(_238, 0.0));
    float _279 = cbInstanceData._m0[_258 + 6u].w * (isnan(1.0) ? _442 : (isnan(_442) ? 1.0 : min(_442, 1.0)));
    bool _304 = cbMtdParam._m0[1u].z != 0.0;
    float _305 = _304 ? _279 : 0.0;
    SV_Target.x = ((_227 * 0.5) * _237) + 0.500488758087158203125;
    SV_Target.y = ((_230 * 0.5) * _237) + 0.500488758087158203125;
    SV_Target.z = ((_233 * 0.5) * _237) + 0.500488758087158203125;
    SV_Target.w = _305;
    SV_Target_1.x = isnan(1.0) ? _398 : (isnan(_398) ? 1.0 : min(_398, 1.0));
    SV_Target_1.y = isnan(1.0) ? _354 : (isnan(_354) ? 1.0 : min(_354, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _304 ? _279 : TEXCOORD_1.w;
    SV_Target_2.x = isnan(1.0) ? _409 : (isnan(_409) ? 1.0 : min(_409, 1.0));
    SV_Target_2.y = isnan(1.0) ? _420 : (isnan(_420) ? 1.0 : min(_420, 1.0));
    SV_Target_2.z = isnan(1.0) ? _431 : (isnan(_431) ? 1.0 : min(_431, 1.0));
    SV_Target_2.w = _304 ? _279 : (float(floatBitsToUint(cbInstanceData._m0[_258 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _305;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _305;
}


