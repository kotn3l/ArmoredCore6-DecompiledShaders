#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[21];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 3) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_4;
layout(set = 0, binding = 4) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_5;
layout(set = 0, binding = 5) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_6;
layout(set = 0, binding = 6) uniform texture2D S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_7;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec2 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _975;
float _976;
float _977;
float _978;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _188 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _178);
    float _189 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _178);
    float _190 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _178);
    float _200 = sqrt(((_188 * _188) + (_189 * _189)) + (_190 * _190));
    float _203 = cbMtdParam._m0[15u].x - cbMtdParam._m0[15u].y;
    float _206 = (_200 - cbMtdParam._m0[15u].y) / (isnan(0.00999999977648258209228515625) ? _203 : (isnan(_203) ? 0.00999999977648258209228515625 : max(_203, 0.00999999977648258209228515625)));
    float _992 = isnan(0.0) ? _206 : (isnan(_206) ? 0.0 : max(_206, 0.0));
    float _229 = cbMtdParam._m0[16u].w * texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD_1.z) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD_1.w) + cbTextureTilingScale._m0[6u].w)).x;
    float _238 = sin(cbMtdParam._m0[14u].w);
    float _239 = cos(cbMtdParam._m0[14u].w);
    float _240 = TEXCOORD_1.z - cbMtdParam._m0[14u].z;
    float _241 = TEXCOORD_1.w - cbMtdParam._m0[14u].z;
    float _248 = fma(_241, (-0.0) - _238, _239 * _240) + cbMtdParam._m0[14u].z;
    float _249 = fma(_241, _239, _240 * _238) + cbMtdParam._m0[14u].z;
    vec4 _275 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[3u].x * ((cbMtdParam._m0[19u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((cbMtdParam._m0[20u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[3u].w));
    float _279 = cbPerFrame._m0[22u].x * 2.0;
    float _281 = _279 * cbMtdParam._m0[16u].x;
    float _284 = (_275.x * 0.5) + (-0.25);
    float _287 = (_275.y * 0.5) + (-0.25);
    float _288 = _287 * cbMtdParam._m0[15u].z;
    float _290 = (-0.0) - (cbMtdParam._m0[15u].z * _284);
    float _291 = fract(_281);
    float _293 = fract(_281 + 0.5);
    float _294 = _291 * _290;
    float _295 = _288 * _291;
    float _298 = _293 * _290;
    float _299 = _288 * _293;
    float _305 = abs((_291 * 2.0) + (-1.0));
    vec4 _322 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_294 + _248) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_295 + _249) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _324 = _322.x;
    vec4 _325 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_298 + _248) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, ((_299 + _249) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _330 = ((_325.x - _324) * _305) + _324;
    float _335 = ((isnan(1.0) ? _992 : (isnan(_992) ? 1.0 : min(_992, 1.0))) * TEXCOORD.x) * ((_330 * (cbMtdParam._m0[17u].x - _229)) + _229);
    float _348 = cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x;
    float _351 = (_348 * cbMtdParam._m0[18u].y) + TEXCOORD_1.x;
    float _352 = (_348 * cbMtdParam._m0[18u].z) + TEXCOORD_1.y;
    vec4 _372 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_294 + _351) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_295 + _352) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _374 = _372.x;
    float _375 = _372.y;
    float _376 = _372.z;
    vec4 _377 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((_298 + _351) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((_299 + _352) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _404 = (cbMtdParam._m0[19u].y * _348) + TEXCOORD_1.x;
    float _405 = (cbMtdParam._m0[19u].z * _348) + TEXCOORD_1.y;
    vec4 _425 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_294 + _404) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_295 + _405) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _427 = _425.x;
    float _428 = _425.y;
    float _429 = _425.z;
    vec4 _430 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_298 + _404) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_299 + _405) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _447 = ((((_430.x - _427) * _305) + _427) * cbMtdParam._m0[13u].x) + ((((_377.x - _374) * _305) + _374) * cbMtdParam._m0[11u].x);
    float _448 = ((((_430.y - _428) * _305) + _428) * cbMtdParam._m0[13u].y) + ((((_377.y - _375) * _305) + _375) * cbMtdParam._m0[11u].y);
    float _449 = ((((_430.z - _429) * _305) + _429) * cbMtdParam._m0[13u].z) + ((((_377.z - _376) * _305) + _376) * cbMtdParam._m0[11u].z);
    float _455 = abs((fract(cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1003 = isnan(0.0) ? _455 : (isnan(_455) ? 0.0 : max(_455, 0.0));
    float _456 = isnan(1.0) ? _1003 : (isnan(_1003) ? 1.0 : min(_1003, 1.0));
    float _463 = ((_456 * _456) * (3.0 - (_456 * 2.0))) - cbMtdParam._m0[16u].y;
    float _473 = (cbMtdParam._m0[20u].y * _348) + TEXCOORD_1.x;
    float _474 = (cbMtdParam._m0[20u].z * _348) + TEXCOORD_1.y;
    vec4 _495 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_294 + _473) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((_295 + _474) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _497 = _495.x;
    float _498 = _495.y;
    float _499 = _495.z;
    vec4 _500 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_298 + _473) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, ((_299 + _474) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _527 = (cbMtdParam._m0[18u].w * _348) + TEXCOORD_1.x;
    float _528 = (cbMtdParam._m0[19u].x * _348) + TEXCOORD_1.y;
    float _531 = _279 * cbMtdParam._m0[18u].x;
    float _532 = _287 * cbMtdParam._m0[17u].w;
    float _534 = (-0.0) - (cbMtdParam._m0[17u].w * _284);
    float _535 = fract(_531);
    float _537 = fract(_531 + 0.5);
    float _548 = abs((_535 * 2.0) + (-1.0));
    vec4 _564 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_535 * _534) + _527) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_532 * _535) + _528) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _566 = _564.x;
    float _567 = _564.y;
    float _568 = _564.z;
    vec4 _569 = texture(sampler2D(S_PC_PAShield_B_Emissive_Glow_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((_537 * _534) + _527) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_532 * _537) + _528) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _593 = cbMtdParam._m0[14u].y * _330;
    float _1014 = isnan(0.0) ? _335 : (isnan(_335) ? 0.0 : max(_335, 0.0));
    float _622 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _627 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _629 = _627.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _716 = (cbMatDynParam._m0[5u].x * _200) + cbMatDynParam._m0[5u].y;
        float _1025 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
        float _717 = isnan(1.0) ? _1025 : (isnan(_1025) ? 1.0 : min(_1025, 1.0));
        float _721 = (cbMatDynParam._m0[5u].z * _200) + cbMatDynParam._m0[5u].w;
        float _1036 = isnan(0.0) ? _721 : (isnan(_721) ? 0.0 : max(_721, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1036 : (isnan(_1036) ? 1.0 : min(_1036, 1.0))) - _717)) + _717) < ((_629 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _646 = uint(roundEven(NORMAL.w)) * 13u;
    uint _647 = _646 + 9u;
    uint _648 = _647 + uint(cbMatDynParam._m0[0u].w);
    float _654 = (((_593 * (((((((_569.x - _566) * _548) + _566) * cbMtdParam._m0[12u].x) + ((((_500.x - _497) * _305) + _497) * cbMtdParam._m0[9u].x)) * _463) - _447)) + _447) * cbMtdParam._m0[17u].y) * cbInstanceData._m0[_648].x;
    float _655 = (((_593 * (((((((_569.y - _567) * _548) + _567) * cbMtdParam._m0[12u].y) + ((((_500.y - _498) * _305) + _498) * cbMtdParam._m0[9u].y)) * _463) - _448)) + _448) * cbMtdParam._m0[17u].y) * cbInstanceData._m0[_648].y;
    float _656 = (((_593 * (((((((_569.z - _568) * _548) + _568) * cbMtdParam._m0[12u].z) + ((((_500.z - _499) * _305) + _499) * cbMtdParam._m0[9u].z)) * _463) - _449)) + _449) * cbMtdParam._m0[17u].y) * cbInstanceData._m0[_648].z;
    float _657 = isnan(0.0) ? _654 : (isnan(_654) ? 0.0 : max(_654, 0.0));
    float _658 = isnan(0.0) ? _655 : (isnan(_655) ? 0.0 : max(_655, 0.0));
    float _659 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _665 = cbMtdParam._m0[2u].x * _654;
    float _666 = cbMtdParam._m0[2u].y * _655;
    float _667 = cbMtdParam._m0[2u].z * _656;
    float _1062 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _669 = isnan(1.0) ? _1062 : (isnan(_1062) ? 1.0 : min(_1062, 1.0));
    float _674 = cbInstanceData._m0[_646 + 6u].w * (isnan(1.0) ? _1014 : (isnan(_1014) ? 1.0 : min(_1014, 1.0)));
    float _680 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _681 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _696 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_680, _681, (log2((isnan(cbSceneParam._m0[77u].w) ? _622 : (isnan(_622) ? cbSceneParam._m0[77u].w : min(_622, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _699 = _696.x;
    float _700 = _696.y;
    float _701 = _696.z;
    float _702 = _696.w;
    float _775;
    float _777;
    float _779;
    float _781;
    if (_622 > cbSceneParam._m0[78u].w)
    {
        float _737 = isnan(_622) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _622 : min(cbSceneParam._m0[80u].w, _622));
        float _738 = _737 / _622;
        float _749 = _738 * _188;
        float _750 = _189 * _738;
        float _751 = (-0.0) - _750;
        float _752 = _738 * _190;
        float _754 = (cbSceneParam._m0[77u].w * _751) / _737;
        float _755 = _754 + cbSceneParam._m0[79u].w;
        float _756 = cbSceneParam._m0[79u].w - _750;
        float _762 = sqrt(((_749 * _749) + (_750 * _750)) + (_752 * _752));
        float _765 = (1.0 - (cbSceneParam._m0[77u].w / _737)) * _762;
        float _771 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _773 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _903;
        if (abs((_751 - _754) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _903 = ((((_755 > 0.0) ? exp2(_771 * _755) : (2.0 - exp2(_773 * _755))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _765;
        }
        else
        {
            float _859 = 1.0 / cbSceneParam._m0[80u].x;
            float _860 = isnan(_756) ? _755 : (isnan(_755) ? _756 : max(_755, _756));
            float _861 = isnan(_756) ? _755 : (isnan(_755) ? _756 : min(_755, _756));
            float _870 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : min(_860, 0.0));
            float _871 = isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : min(_861, 0.0));
            _903 = ((abs(_762 / _751) * cbSceneParam._m0[80u].y) * ((((_870 - _871) * 2.0) - ((exp2(_771 * (isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0)))) - exp2(_771 * (isnan(0.0) ? _861 : (isnan(_861) ? 0.0 : max(_861, 0.0))))) * _859)) - ((exp2(_773 * _870) - exp2(_773 * _871)) * _859))) + (_765 * cbSceneParam._m0[80u].z);
        }
        vec4 _905 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_680, _681, 1.0), 0.0);
        float _914 = exp2((_903 * (-1.44269502162933349609375)) * (1.0 - _905.w));
        float _915 = log2(_914);
        float _931 = log2(_702);
        _775 = (exp2(_931 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_915 * cbSceneParam._m0[78u].x)) * _905.x) / cbSceneParam._m0[78u].x)) + _699;
        _777 = (exp2(_931 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_915 * cbSceneParam._m0[78u].y)) * _905.y) / cbSceneParam._m0[78u].y)) + _700;
        _779 = (exp2(_931 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_915 * cbSceneParam._m0[78u].z)) * _905.z) / cbSceneParam._m0[78u].z)) + _701;
        _781 = _914 * _702;
    }
    else
    {
        _775 = _699;
        _777 = _700;
        _779 = _701;
        _781 = _702;
    }
    bool _941;
    vec4 _791;
    vec4 _814;
    float _816;
    float _820;
    float _821;
    float _822;
    float _825;
    float _828;
    float _831;
    float _832;
    bool _843;
    for (;;)
    {
        _791 = cbMatDynParam._m0[0u];
        float _793 = roundEven(_791.y);
        bool _794 = _793 == 3.0;
        float _795 = log2(_781);
        float _799 = exp2(_795 * cbSceneParam._m0[78u].x);
        float _800 = exp2(_795 * cbSceneParam._m0[78u].y);
        float _801 = exp2(_795 * cbSceneParam._m0[78u].z);
        float _802 = _799 * _657;
        float _803 = _800 * _658;
        float _804 = _801 * _659;
        float _811 = _629 + (-0.5);
        _814 = cbMtdParam._m0[1u];
        _816 = _814.y * _811;
        float _819 = (_793 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _820 = _819 * (_794 ? _802 : (_802 + (cbSceneParam._m0[72u].w * _775)));
        _821 = _819 * (_794 ? _803 : (_803 + (cbSceneParam._m0[72u].w * _777)));
        _822 = _819 * (_794 ? _804 : (_804 + (cbSceneParam._m0[72u].w * _779)));
        _825 = ((_665 * _669) * _799) * _819;
        _828 = ((_666 * _669) * _800) * _819;
        _831 = ((_667 * _669) * _801) * _819;
        _832 = _811 * 0.999000012874603271484375;
        _843 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_843)
        {
            if ((cbInstanceData._m0[_646 + 7u].x + _832) < 0.5)
            {
                _941 = true;
                break;
            }
        }
        uint _895 = _647 + uint(_791.w);
        if ((cbInstanceData._m0[_895].w < 1.0) && ((cbInstanceData._m0[_895].w + _832) < 0.5))
        {
            _941 = true;
            break;
        }
        if ((_816 + 1.0) < _814.x)
        {
            _941 = true;
            break;
        }
        _941 = false;
        break;
    }
    float _946;
    if (_941)
    {
        discard_state = true;
        _946 = 0.0;
    }
    else
    {
        _946 = _674;
    }
    SV_Target.x = _820;
    SV_Target.y = _821;
    SV_Target.z = _822;
    SV_Target.w = _946;
    SV_Target_1.x = _825;
    SV_Target_1.y = _828;
    SV_Target_1.z = _831;
    SV_Target_1.w = _674;
    discard_exit();
}


