#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[28];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1240;
float _1241;
float _1242;
float _1243;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _141 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _142 = _141 * NORMAL.x;
    float _143 = _141 * NORMAL.y;
    float _144 = _141 * NORMAL.z;
    float _149;
    float _150;
    float _151;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _149 = (-0.0) - _142;
        _150 = (-0.0) - _143;
        _151 = (-0.0) - _144;
    }
    else
    {
        _149 = _142;
        _150 = _143;
        _151 = _144;
    }
    float _197 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _207 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _197);
    float _208 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _197);
    float _209 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _197);
    float _224 = inversesqrt(dot(vec3(_207, _208, _209), vec3(_207, _208, _209)));
    float _225 = _224 * _207;
    float _226 = _224 * _208;
    float _227 = _224 * _209;
    float _228 = dot(vec4(_225, _226, _227, 0.0), vec4(_149, _150, _151, 0.0));
    float _231 = _228 - cbMtdParam._m0[21u].x;
    float _1252 = isnan(0.0) ? _231 : (isnan(_231) ? 0.0 : max(_231, 0.0));
    float _241 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1252 : (isnan(_1252) ? 1.0 : min(_1252, 1.0)))))) * cbMtdParam._m0[15u].w) * cbMtdParam._m0[22u].x);
    float _1263 = isnan(0.0) ? _241 : (isnan(_241) ? 0.0 : max(_241, 0.0));
    float _265 = cbMtdParam._m0[18u].y * cbPerFrame._m0[22u].x;
    vec4 _284 = texture(sampler2D(M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_1, SS_WrapLinear), vec2(((cbTextureTilingScale._m0[1u].x * cbMtdParam._m0[24u].w) * ((_265 * cbMtdParam._m0[24u].y) + TEXCOORD.x)) + cbTextureTilingScale._m0[1u].z, ((cbTextureTilingScale._m0[1u].y * cbMtdParam._m0[25u].x) * ((_265 * cbMtdParam._m0[24u].z) + TEXCOORD.y)) + cbTextureTilingScale._m0[1u].w));
    float _287 = _284.x;
    vec4 _321 = texture(sampler2D(M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_0, SS_ClampLinear), vec2((((cbMtdParam._m0[25u].y + TEXCOORD.x) * cbMtdParam._m0[23u].y) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[25u].z + TEXCOORD.y) * cbMtdParam._m0[23u].z) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _350 = texture(sampler2D(M_Cutscene_Planet_Clouds_001_snp_0_Texture2D_2, SS_DiffuseMap), vec2(((((((cbMtdParam._m0[22u].w * _265) + (_287 * cbMtdParam._m0[23u].w)) + cbMtdParam._m0[22u].y) + (cbMtdParam._m0[25u].w * TEXCOORD.x)) + ((_321.x + (-0.5)) * cbMtdParam._m0[16u].w)) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((((((cbMtdParam._m0[23u].x * _265) + (_287 * cbMtdParam._m0[24u].x)) + cbMtdParam._m0[22u].z) + (cbMtdParam._m0[26u].x * TEXCOORD.y)) + ((_321.y + (-0.5)) * cbMtdParam._m0[16u].w)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _360 = exp2(log2(cbMtdParam._m0[16u].x * _350.w) * cbMtdParam._m0[16u].y);
    float _1274 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _375 = cbMtdParam._m0[19u].y - cbMtdParam._m0[19u].x;
    float _377 = (sqrt(((_207 * _207) + (_208 * _208)) + (_209 * _209)) - cbMtdParam._m0[19u].x) / (isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0)));
    float _1290 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    vec4 _389 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _391 = _389.x;
    bool _398 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _414 = ((_398 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _391)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _391))) - POSITION_1.w) / cbMtdParam._m0[18u].w;
    float _1301 = isnan(0.0) ? _414 : (isnan(_414) ? 0.0 : max(_414, 0.0));
    float _416 = (((isnan(1.0) ? _1274 : (isnan(_1274) ? 1.0 : min(_1274, 1.0))) * cbMtdParam._m0[15u].y) * (isnan(1.0) ? _1290 : (isnan(_1290) ? 1.0 : min(_1290, 1.0)))) * (isnan(1.0) ? _1301 : (isnan(_1301) ? 1.0 : min(_1301, 1.0)));
    float _1312 = isnan(0.0) ? _416 : (isnan(_416) ? 0.0 : max(_416, 0.0));
    float _431 = _228 - cbMtdParam._m0[18u].z;
    float _1323 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
    float _439 = exp2(log2(1.0 - (isnan(1.0) ? _1323 : (isnan(_1323) ? 1.0 : min(_1323, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[17u].y : (isnan(cbMtdParam._m0[17u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[17u].y, 0.001000000047497451305389404296875)))) * cbMtdParam._m0[16u].z;
    float _440 = _439 + (cbMtdParam._m0[15u].z * (isnan(1.0) ? _1312 : (isnan(_1312) ? 1.0 : min(_1312, 1.0))));
    float _1339 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _442 = (isnan(1.0) ? _1339 : (isnan(_1339) ? 1.0 : min(_1339, 1.0))) * (isnan(1.0) ? _1263 : (isnan(_1263) ? 1.0 : min(_1263, 1.0)));
    float _471 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _475 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _479 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _483 = inversesqrt(dot(vec3(_471, _475, _479), vec3(_471, _475, _479)));
    float _484 = _483 * _471;
    float _485 = _483 * _475;
    float _486 = _483 * _479;
    float _495 = inversesqrt(dot(vec3(cbMtdParam._m0[26u].yzw), vec3(cbMtdParam._m0[26u].yzw)));
    uint _500 = uint(roundEven(NORMAL.w)) * 13u;
    uint _508 = floatBitsToUint(cbInstanceData._m0[_500 + 5u]).x * 14u;
    float _521 = (((_495 * cbMtdParam._m0[26u].y) - cbLight._m0[_508].x) * cbMtdParam._m0[17u].w) + cbLight._m0[_508].x;
    float _522 = (((_495 * cbMtdParam._m0[26u].z) - cbLight._m0[_508].y) * cbMtdParam._m0[17u].w) + cbLight._m0[_508].y;
    float _523 = (((_495 * cbMtdParam._m0[26u].w) - cbLight._m0[_508].z) * cbMtdParam._m0[17u].w) + cbLight._m0[_508].z;
    float _527 = inversesqrt(dot(vec3(_521, _522, _523), vec3(_521, _522, _523)));
    float _528 = _521 * _527;
    float _529 = _522 * _527;
    float _530 = _523 * _527;
    float _531 = dot(vec4(_484, _485, _486, 0.0), vec4(_528, _529, _530, 0.0));
    float _1350 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _534 = isnan(1.0) ? _1350 : (isnan(_1350) ? 1.0 : min(_1350, 1.0));
    float _540 = exp2(log2((_534 * _534) * cbMtdParam._m0[18u].x) * cbMtdParam._m0[19u].z);
    float _1361 = isnan(0.0) ? _540 : (isnan(_540) ? 0.0 : max(_540, 0.0));
    float _542 = 1.0 - (isnan(1.0) ? _1361 : (isnan(_1361) ? 1.0 : min(_1361, 1.0)));
    float _544 = (-0.0) - (_542 - cbMtdParam._m0[20u].z);
    float _545 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _563 = (-0.0) - (_542 - cbMtdParam._m0[21u].y);
    float _564 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _601 = dot(vec3(cbSceneParam._m0[84u].xyz), vec3((-0.0) - _225, (-0.0) - _226, (-0.0) - _227)) * 0.5;
    float _603 = _601 + 0.5;
    float _613 = 0.5 - _601;
    float _630 = (((cbSceneParam._m0[83u].x * _613) + (cbSceneParam._m0[82u].x * _603)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].x;
    float _631 = (((cbSceneParam._m0[83u].y * _613) + (cbSceneParam._m0[82u].y * _603)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].y;
    float _632 = (((cbSceneParam._m0[83u].z * _613) + (cbSceneParam._m0[82u].z * _603)) * 0.15915493667125701904296875) + cbSceneParam._m0[81u].z;
    float _639 = ((_630 - cbMtdParam._m0[13u].y) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[13u].y;
    float _640 = ((_631 - cbMtdParam._m0[13u].z) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[13u].z;
    float _641 = ((_632 - cbMtdParam._m0[13u].w) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[13u].w;
    float _660 = inversesqrt(dot(vec3(_528, _529, _530), vec3(_528, _529, _530)));
    float _675 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_484, _485, _486, 0.0), vec4(_660 * _528, _660 * _529, _660 * _530, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _1392 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
    float _681 = exp2(log2((isnan(1.0) ? _1392 : (isnan(_1392) ? 1.0 : min(_1392, 1.0))) * cbMtdParam._m0[18u].x) * cbMtdParam._m0[19u].z);
    float _1403 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
    float _682 = isnan(1.0) ? _1403 : (isnan(_1403) ? 1.0 : min(_1403, 1.0));
    float _688 = exp2(log2(_682 * 6.5) * 7.0);
    float _1414 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _690 = (isnan(1.0) ? _1414 : (isnan(_1414) ? 1.0 : min(_1414, 1.0))) + _682;
    float _1425 = isnan(0.0) ? _690 : (isnan(_690) ? 0.0 : max(_690, 0.0));
    float _691 = isnan(1.0) ? _1425 : (isnan(_1425) ? 1.0 : min(_1425, 1.0));
    float _701 = ((_691 * ((((_630 - cbMtdParam._m0[12u].y) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[12u].y) - _639)) + _639) * _350.x;
    float _702 = ((_691 * ((((_631 - cbMtdParam._m0[12u].z) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[12u].z) - _640)) + _640) * _350.y;
    float _703 = ((_691 * ((((_632 - cbMtdParam._m0[12u].w) * cbMtdParam._m0[20u].y) + cbMtdParam._m0[12u].w) - _641)) + _641) * _350.z;
    float _704 = isnan(_702) ? _701 : (isnan(_701) ? _702 : max(_701, _702));
    float _705 = isnan(_703) ? _704 : (isnan(_704) ? _703 : max(_704, _703));
    float _708;
    float _710;
    if (_705 < 1.1920928955078125e-07)
    {
        _708 = 0.0;
        _710 = 0.0;
    }
    else
    {
        float _735 = isnan(_702) ? _701 : (isnan(_701) ? _702 : min(_701, _702));
        float _737 = _705 - (isnan(_703) ? _735 : (isnan(_735) ? _703 : min(_735, _703)));
        float _711 = _737 / _705;
        float frontier_phi_3_4_ladder;
        float frontier_phi_3_4_ladder_1;
        if (_737 < 1.1920928955078125e-07)
        {
            frontier_phi_3_4_ladder = 0.0;
            frontier_phi_3_4_ladder_1 = _711;
        }
        else
        {
            float _1118;
            if (_705 == _701)
            {
                _1118 = ((_702 - _703) / _737) * 0.16666667163372039794921875;
            }
            else
            {
                float frontier_phi_18_12_ladder;
                if (_705 == _702)
                {
                    frontier_phi_18_12_ladder = (((_703 - _701) / _737) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
                }
                else
                {
                    frontier_phi_18_12_ladder = (((_701 - _702) / _737) * 0.16666667163372039794921875) + 0.666666686534881591796875;
                }
                _1118 = frontier_phi_18_12_ladder;
            }
            float _1123 = (_1118 < 0.0) ? (_1118 + 1.0) : _1118;
            precise float _709 = (_1123 - floor(_1123)) * 6.0;
            frontier_phi_3_4_ladder = _709;
            frontier_phi_3_4_ladder_1 = _711;
        }
        _708 = frontier_phi_3_4_ladder;
        _710 = frontier_phi_3_4_ladder_1;
    }
    float _713 = cbMtdParam._m0[20u].w + _705;
    float _1456 = isnan(0.0) ? _713 : (isnan(_713) ? 0.0 : max(_713, 0.0));
    float _714 = isnan(1.0) ? _1456 : (isnan(_1456) ? 1.0 : min(_1456, 1.0));
    float _716 = cbMtdParam._m0[21u].z + _710;
    float _1467 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _717 = isnan(1.0) ? _1467 : (isnan(_1467) ? 1.0 : min(_1467, 1.0));
    uint _719 = uint(int(floor(_708)));
    float _721 = _708 - float(int(_719));
    float _723 = (1.0 - _717) * _714;
    float _726 = (1.0 - (_721 * _717)) * _714;
    float _730 = (1.0 - ((1.0 - _721) * _717)) * _714;
    float _739;
    float _741;
    float _742;
    if ((_719 == 0u) || (_719 == 6u))
    {
        _739 = _714;
        _741 = _730;
        _742 = _723;
    }
    else
    {
        float frontier_phi_5_6_ladder;
        float frontier_phi_5_6_ladder_1;
        float frontier_phi_5_6_ladder_2;
        if (_719 == 1u)
        {
            frontier_phi_5_6_ladder = _726;
            frontier_phi_5_6_ladder_1 = _714;
            frontier_phi_5_6_ladder_2 = _723;
        }
        else
        {
            float frontier_phi_5_6_ladder_10_ladder;
            float frontier_phi_5_6_ladder_10_ladder_1;
            float frontier_phi_5_6_ladder_10_ladder_2;
            if (_719 == 2u)
            {
                frontier_phi_5_6_ladder_10_ladder = _723;
                frontier_phi_5_6_ladder_10_ladder_1 = _714;
                frontier_phi_5_6_ladder_10_ladder_2 = _730;
            }
            else
            {
                float frontier_phi_5_6_ladder_10_ladder_17_ladder;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                float frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
                if (_719 == 3u)
                {
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _723;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _726;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _714;
                }
                else
                {
                    bool _1179 = _719 == 4u;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder = _1179 ? _730 : _714;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_1 = _723;
                    frontier_phi_5_6_ladder_10_ladder_17_ladder_2 = _1179 ? _714 : _726;
                }
                frontier_phi_5_6_ladder_10_ladder = frontier_phi_5_6_ladder_10_ladder_17_ladder;
                frontier_phi_5_6_ladder_10_ladder_1 = frontier_phi_5_6_ladder_10_ladder_17_ladder_1;
                frontier_phi_5_6_ladder_10_ladder_2 = frontier_phi_5_6_ladder_10_ladder_17_ladder_2;
            }
            frontier_phi_5_6_ladder = frontier_phi_5_6_ladder_10_ladder;
            frontier_phi_5_6_ladder_1 = frontier_phi_5_6_ladder_10_ladder_1;
            frontier_phi_5_6_ladder_2 = frontier_phi_5_6_ladder_10_ladder_2;
        }
        _739 = frontier_phi_5_6_ladder;
        _741 = frontier_phi_5_6_ladder_1;
        _742 = frontier_phi_5_6_ladder_2;
    }
    float _751 = exp2(log2(_739) * cbMtdParam._m0[21u].w);
    float _752 = exp2(log2(_741) * cbMtdParam._m0[21u].w);
    float _753 = exp2(log2(_742) * cbMtdParam._m0[21u].w);
    float _766 = inversesqrt(dot(vec3(cbMtdParam._m0[27u].xyz), vec3(cbMtdParam._m0[27u].xyz)));
    float _774 = (dot(vec4(_484, _485, _486, 0.0), vec4(_766 * cbMtdParam._m0[27u].x, _766 * cbMtdParam._m0[27u].y, _766 * cbMtdParam._m0[27u].z, 0.0)) + 1.0) * 0.5;
    float _1478 = isnan(0.0) ? _774 : (isnan(_774) ? 0.0 : max(_774, 0.0));
    float _781 = cbMtdParam._m0[17u].x * exp2(log2(isnan(1.0) ? _1478 : (isnan(_1478) ? 1.0 : min(_1478, 1.0))) * cbMtdParam._m0[17u].z);
    float _1489 = isnan(0.0) ? _781 : (isnan(_781) ? 0.0 : max(_781, 0.0));
    float _782 = isnan(1.0) ? _1489 : (isnan(_1489) ? 1.0 : min(_1489, 1.0));
    float _789 = (cbMtdParam._m0[19u].w * exp2(log2(isnan(64.0) ? _564 : (isnan(_564) ? 64.0 : min(_564, 64.0))) * 2.599999904632568359375)) + (cbMtdParam._m0[20u].x * exp2(log2(isnan(64.0) ? _545 : (isnan(_545) ? 64.0 : min(_545, 64.0))) * 1.64999997615814208984375));
    float _792 = ((_782 * ((_751 * cbMtdParam._m0[9u].y) - _751)) + _751) + (_789 * cbMtdParam._m0[11u].y);
    float _795 = ((_782 * ((_752 * cbMtdParam._m0[9u].z) - _752)) + _752) + (_789 * cbMtdParam._m0[11u].z);
    float _798 = ((_782 * ((_753 * cbMtdParam._m0[9u].w) - _753)) + _753) + (_789 * cbMtdParam._m0[11u].w);
    bool _807 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _1515 = isnan(0.0) ? _442 : (isnan(_442) ? 0.0 : max(_442, 0.0));
    float _839 = _398 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _849 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _856 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _858 = _856.w;
    uint _869 = _500 + 9u;
    uint _870 = _869 + uint(cbMatDynParam._m0[0u].w);
    float _876 = cbInstanceData._m0[_870].x * ((_807 ? (((_691 * (cbMtdParam._m0[10u].y - cbMtdParam._m0[14u].y)) + cbMtdParam._m0[14u].y) * _439) : 0.0) + (isnan(4.0) ? _792 : (isnan(_792) ? 4.0 : min(_792, 4.0))));
    float _877 = cbInstanceData._m0[_870].y * ((_807 ? (_439 * ((_691 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[14u].z)) + cbMtdParam._m0[14u].z)) : 0.0) + (isnan(4.0) ? _795 : (isnan(_795) ? 4.0 : min(_795, 4.0))));
    float _878 = cbInstanceData._m0[_870].z * ((_807 ? (_439 * ((_691 * (cbMtdParam._m0[10u].w - cbMtdParam._m0[14u].w)) + cbMtdParam._m0[14u].w)) : 0.0) + (isnan(4.0) ? _798 : (isnan(_798) ? 4.0 : min(_798, 4.0))));
    float _879 = isnan(0.0) ? _876 : (isnan(_876) ? 0.0 : max(_876, 0.0));
    float _880 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
    float _881 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
    float _887 = cbMtdParam._m0[2u].x * _876;
    float _888 = cbMtdParam._m0[2u].y * _877;
    float _889 = cbMtdParam._m0[2u].z * _878;
    float _1541 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _891 = isnan(1.0) ? _1541 : (isnan(_1541) ? 1.0 : min(_1541, 1.0));
    float _896 = cbInstanceData._m0[_500 + 6u].w * (isnan(1.0) ? _1515 : (isnan(_1515) ? 1.0 : min(_1515, 1.0)));
    float _902 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _903 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _918 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_902, _903, (log2((isnan(cbSceneParam._m0[77u].w) ? _839 : (isnan(_839) ? cbSceneParam._m0[77u].w : min(_839, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _920 = _918.x;
    float _921 = _918.y;
    float _922 = _918.z;
    float _923 = _918.w;
    float _985;
    float _987;
    float _989;
    float _991;
    if (_839 > cbSceneParam._m0[78u].w)
    {
        float _947 = isnan(_839) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _839 : min(cbSceneParam._m0[80u].w, _839));
        float _948 = _947 / _839;
        float _959 = _948 * (cbSceneParam._m0[71u].x - (_471 / _849));
        float _960 = (cbSceneParam._m0[71u].y - (_475 / _849)) * _948;
        float _961 = (-0.0) - _960;
        float _962 = _948 * (cbSceneParam._m0[71u].z - (_479 / _849));
        float _964 = (cbSceneParam._m0[77u].w * _961) / _947;
        float _965 = _964 + cbSceneParam._m0[79u].w;
        float _966 = cbSceneParam._m0[79u].w - _960;
        float _972 = sqrt(((_959 * _959) + (_960 * _960)) + (_962 * _962));
        float _975 = (1.0 - (cbSceneParam._m0[77u].w / _947)) * _972;
        float _981 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _983 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1135;
        if (abs((_961 - _964) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1135 = ((((_965 > 0.0) ? exp2(_981 * _965) : (2.0 - exp2(_983 * _965))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _975;
        }
        else
        {
            float _1073 = 1.0 / cbSceneParam._m0[80u].x;
            float _1074 = isnan(_966) ? _965 : (isnan(_965) ? _966 : max(_965, _966));
            float _1075 = isnan(_966) ? _965 : (isnan(_965) ? _966 : min(_965, _966));
            float _1084 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : min(_1074, 0.0));
            float _1085 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : min(_1075, 0.0));
            _1135 = ((abs(_972 / _961) * cbSceneParam._m0[80u].y) * ((((_1084 - _1085) * 2.0) - ((exp2(_981 * (isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0)))) - exp2(_981 * (isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0))))) * _1073)) - ((exp2(_983 * _1084) - exp2(_983 * _1085)) * _1073))) + (_975 * cbSceneParam._m0[80u].z);
        }
        vec4 _1137 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_902, _903, 1.0), 0.0);
        float _1146 = exp2((_1135 * (-1.44269502162933349609375)) * (1.0 - _1137.w));
        float _1147 = log2(_1146);
        float _1163 = log2(_923);
        _985 = (exp2(_1163 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1147 * cbSceneParam._m0[78u].x)) * _1137.x) / cbSceneParam._m0[78u].x)) + _920;
        _987 = (exp2(_1163 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1147 * cbSceneParam._m0[78u].y)) * _1137.y) / cbSceneParam._m0[78u].y)) + _921;
        _989 = (exp2(_1163 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1147 * cbSceneParam._m0[78u].z)) * _1137.z) / cbSceneParam._m0[78u].z)) + _922;
        _991 = _1146 * _923;
    }
    else
    {
        _985 = _920;
        _987 = _921;
        _989 = _922;
        _991 = _923;
    }
    bool _1173;
    vec4 _1001;
    vec4 _1024;
    float _1026;
    float _1031;
    float _1032;
    float _1033;
    float _1036;
    float _1039;
    float _1042;
    float _1043;
    bool _1054;
    for (;;)
    {
        _1001 = cbMatDynParam._m0[0u];
        float _1003 = roundEven(_1001.y);
        bool _1004 = _1003 == 3.0;
        float _1006 = log2(_991);
        float _1010 = exp2(_1006 * cbSceneParam._m0[78u].x);
        float _1011 = exp2(_1006 * cbSceneParam._m0[78u].y);
        float _1012 = exp2(_1006 * cbSceneParam._m0[78u].z);
        float _1013 = _1010 * _879;
        float _1014 = _1011 * _880;
        float _1015 = _1012 * _881;
        float _1022 = _858 + (-0.5);
        _1024 = cbMtdParam._m0[1u];
        _1026 = _1024.y * _1022;
        float _1030 = (_1003 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1031 = _1030 * (_1004 ? _1013 : (_1013 + (cbSceneParam._m0[72u].w * _985)));
        _1032 = _1030 * (_1004 ? _1014 : (_1014 + (cbSceneParam._m0[72u].w * _987)));
        _1033 = _1030 * (_1004 ? _1015 : (_1015 + (cbSceneParam._m0[72u].w * _989)));
        _1036 = ((_887 * _891) * _1010) * _1030;
        _1039 = ((_888 * _891) * _1011) * _1030;
        _1042 = ((_889 * _891) * _1012) * _1030;
        _1043 = _1022 * 0.999000012874603271484375;
        _1054 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1054)
        {
            if ((cbInstanceData._m0[_500 + 7u].x + _1043) < 0.5)
            {
                _1173 = true;
                break;
            }
        }
        uint _1109 = _869 + uint(_1001.w);
        if ((cbInstanceData._m0[_1109].w < 1.0) && ((cbInstanceData._m0[_1109].w + _1043) < 0.5))
        {
            _1173 = true;
            break;
        }
        if ((_1026 + 1.0) < _1024.x)
        {
            _1173 = true;
            break;
        }
        _1173 = false;
        break;
    }
    float _1183;
    if (_1173)
    {
        discard_state = true;
        _1183 = 0.0;
    }
    else
    {
        _1183 = _896;
    }
    SV_Target.x = _1031;
    SV_Target.y = _1032;
    SV_Target.z = _1033;
    SV_Target.w = _1183;
    SV_Target_1.x = _1036;
    SV_Target_1.y = _1039;
    SV_Target_1.z = _1042;
    SV_Target_1.w = _896;
    discard_exit();
}


