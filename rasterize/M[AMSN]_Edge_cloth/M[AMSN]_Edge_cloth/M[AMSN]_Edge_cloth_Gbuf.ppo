#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[11];
} cbMtdParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 0) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_AMSN_Edge_snp_0_Texture2D_2;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 NORMAL;
layout(location = 2) in vec4 TANGENT;
layout(location = 3) in vec3 TEXCOORD;
layout(location = 3, component = 3) in float TEXCOORD_8;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _123 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _124 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _125 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _130 = inversesqrt(dot(vec3(_123, _124, _125), vec3(_123, _124, _125)));
    float _137 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _138 = _137 * NORMAL.x;
    float _139 = _137 * NORMAL.y;
    float _140 = _137 * NORMAL.z;
    float _144 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _152;
    float _153;
    float _154;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _152 = (-0.0) - _138;
        _153 = (-0.0) - _139;
        _154 = (-0.0) - _140;
    }
    else
    {
        _152 = _138;
        _153 = _139;
        _154 = _140;
    }
    vec4 _174 = texture(sampler2D(M_AMSN_Edge_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _180 = _174.x * cbMtdParam._m0[9u].x;
    float _181 = _174.y * cbMtdParam._m0[9u].y;
    float _182 = _174.z * cbMtdParam._m0[9u].z;
    float _201 = texture(sampler2D(M_AMSN_Edge_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w)).x + cbMtdParam._m0[10u].x;
    vec4 _213 = texture(sampler2D(M_AMSN_Edge_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _217 = _213.z;
    float _221 = (_213.x * 2.0) + (-1.0);
    float _223 = (_213.y * 2.0) + (-1.0);
    float _224 = dot(vec2(_221, _223), vec2(_221, _223));
    float _342 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    float _230 = sqrt(1.0 - (isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0))));
    float _233 = fma(_230, _152, fma(_223, _144 * TANGENT.x, (_130 * _123) * _221));
    float _236 = fma(_230, _153, fma(_223, _144 * TANGENT.y, (_130 * _124) * _221));
    float _239 = fma(_230, _154, fma(_223, _144 * TANGENT.z, (_130 * _125) * _221));
    float _243 = inversesqrt(dot(vec3(_233, _236, _239), vec3(_233, _236, _239)));
    float _244 = _243 * _233;
    float _245 = _243 * _236;
    float _246 = _243 * _239;
    float _250 = inversesqrt(dot(vec3(_244, _245, _246), vec3(_244, _245, _246)));
    float _353 = isnan(0.0) ? _217 : (isnan(_217) ? 0.0 : max(_217, 0.0));
    float _364 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _375 = isnan(0.0) ? _181 : (isnan(_181) ? 0.0 : max(_181, 0.0));
    float _386 = isnan(0.0) ? _182 : (isnan(_182) ? 0.0 : max(_182, 0.0));
    float _397 = isnan(0.0) ? _201 : (isnan(_201) ? 0.0 : max(_201, 0.0));
    uint _270 = uint(roundEven(NORMAL.w)) * 13u;
    uint _273 = (_270 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _279 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _364 : (isnan(_364) ? 1.0 : min(_364, 1.0)))) * cbInstanceData._m0[_273].x;
    float _280 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _375 : (isnan(_375) ? 1.0 : min(_375, 1.0)))) * cbInstanceData._m0[_273].y;
    float _281 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _386 : (isnan(_386) ? 1.0 : min(_386, 1.0)))) * cbInstanceData._m0[_273].z;
    float _408 = isnan(0.0) ? _279 : (isnan(_279) ? 0.0 : max(_279, 0.0));
    float _419 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _430 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    uint _285 = _270 + 6u;
    bool _314 = cbMtdParam._m0[1u].z != 0.0;
    float _315 = _314 ? cbInstanceData._m0[_285].w : 0.0;
    SV_Target.x = ((_244 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.y = ((_245 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.z = ((_246 * 0.5) * _250) + 0.500488758087158203125;
    SV_Target.w = _315;
    SV_Target_1.x = isnan(1.0) ? _397 : (isnan(_397) ? 1.0 : min(_397, 1.0));
    SV_Target_1.y = isnan(1.0) ? _353 : (isnan(_353) ? 1.0 : min(_353, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _314 ? cbInstanceData._m0[_285].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _408 : (isnan(_408) ? 1.0 : min(_408, 1.0));
    SV_Target_2.y = isnan(1.0) ? _419 : (isnan(_419) ? 1.0 : min(_419, 1.0));
    SV_Target_2.z = isnan(1.0) ? _430 : (isnan(_430) ? 1.0 : min(_430, 1.0));
    SV_Target_2.w = _314 ? cbInstanceData._m0[_285].w : (float(floatBitsToUint(cbInstanceData._m0[_270 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _315;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _315;
}


