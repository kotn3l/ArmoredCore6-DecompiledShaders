#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1421;
float _3861;
float _3862;
float _3863;
float _3864;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _238 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _239 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _240 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _246 = inversesqrt(dot(vec3(_238, _239, _240), vec3(_238, _239, _240)));
    float _253 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _260 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _272 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _275 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3873 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    float _3884 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _3895 = isnan(0.0) ? _275 : (isnan(_275) ? 0.0 : max(_275, 0.0));
    uint _285 = uint(roundEven(NORMAL.w)) * 13u;
    uint _290 = _285 + 1u;
    uint _294 = _285 + 2u;
    float _303 = sqrt(((cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x) + (cbInstanceData._m0[_285].x * cbInstanceData._m0[_285].x)) + (cbInstanceData._m0[_294].x * cbInstanceData._m0[_294].x));
    float _304 = _303 * TEXCOORD.z;
    float _305 = _303 * TEXCOORD.w;
    vec4 _318 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _304) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _305) + cbTextureTilingScale._m0[13u].w));
    vec4 _335 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _337 = _335.w;
    vec4 _356 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _361 = _356.x * cbMtdParam._m0[11u].x;
    float _362 = _356.y * cbMtdParam._m0[11u].y;
    float _363 = _356.z * cbMtdParam._m0[11u].z;
    vec4 _382 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _304) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _305) + cbTextureTilingScale._m0[5u].w));
    vec4 _415 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _417 = _415.x;
    float _430 = dot(vec4(_417, _415.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _447 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_417 - _430) * cbMtdParam._m0[24u].x) + _430) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3906 = isnan(0.0) ? _447 : (isnan(_447) ? 0.0 : max(_447, 0.0));
    float _448 = isnan(1.0) ? _3906 : (isnan(_3906) ? 1.0 : min(_3906, 1.0));
    float _455 = (_448 * ((_382.x * cbMtdParam._m0[12u].x) - _361)) + _361;
    float _456 = (_448 * ((_382.y * cbMtdParam._m0[12u].y) - _362)) + _362;
    float _457 = (_448 * ((_382.z * cbMtdParam._m0[12u].z) - _363)) + _363;
    float _461 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _318.x) * _455;
    float _464 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _318.y) * _456;
    float _467 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _318.z) * _457;
    float _474 = ((_455 - _461) * (isnan(1.0) ? _3873 : (isnan(_3873) ? 1.0 : min(_3873, 1.0)))) + _461;
    float _475 = ((_456 - _464) * (isnan(1.0) ? _3884 : (isnan(_3884) ? 1.0 : min(_3884, 1.0)))) + _464;
    float _476 = ((_457 - _467) * (isnan(1.0) ? _3895 : (isnan(_3895) ? 1.0 : min(_3895, 1.0)))) + _467;
    vec4 _495 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _304) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _305) + cbTextureTilingScale._m0[14u].w));
    vec4 _515 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _304) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _305) + cbTextureTilingScale._m0[20u].w));
    vec4 _540 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _542 = _540.x;
    float _543 = _540.y;
    float _548 = cbMtdParam._m0[25u].w * _540.z;
    float _3917 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _549 = isnan(1.0) ? _3917 : (isnan(_3917) ? 1.0 : min(_3917, 1.0));
    vec4 _562 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _304) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _305) + cbTextureTilingScale._m0[4u].w));
    float _570 = cbMtdParam._m0[26u].x * _562.z;
    float _3928 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _580 = (((isnan(1.0) ? _3928 : (isnan(_3928) ? 1.0 : min(_3928, 1.0))) - _549) * _448) + _549;
    float _583 = ((((_562.x - _542) * _448) + _542) * 2.0) + (-1.0);
    float _584 = ((((_562.y - _543) * _448) + _543) * 2.0) + (-1.0);
    float _585 = dot(vec2(_583, _584), vec2(_583, _584));
    float _3939 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0));
    float _590 = sqrt(1.0 - (isnan(1.0) ? _3939 : (isnan(_3939) ? 1.0 : min(_3939, 1.0))));
    vec4 _607 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _614 = cbMtdParam._m0[25u].z * _607.z;
    float _3950 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    vec4 _635 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _304) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _305) + cbTextureTilingScale._m0[11u].w));
    float _637 = _635.x;
    float _638 = 1.0 - _637;
    float _644 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _647 = ((isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : min(_644, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _656 = (_647 - ((((((_637 - _638) * cbMtdParam._m0[24u].z) + _638) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _647))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3971 = isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0));
    float _657 = isnan(1.0) ? _3971 : (isnan(_3971) ? 1.0 : min(_3971, 1.0));
    float _664 = (_657 * ((_495.x * cbMtdParam._m0[18u].x) - _474)) + _474;
    float _665 = (_657 * ((_495.y * cbMtdParam._m0[18u].y) - _475)) + _475;
    float _666 = (_657 * ((_495.z * cbMtdParam._m0[18u].z) - _476)) + _476;
    vec4 _678 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _304) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _305) + cbTextureTilingScale._m0[19u].w));
    float _680 = _678.x;
    float _681 = 1.0 - _680;
    float _706 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_680 - _681) * cbMtdParam._m0[24u].w) + _681) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3982 = isnan(0.0) ? _706 : (isnan(_706) ? 0.0 : max(_706, 0.0));
    float _707 = isnan(1.0) ? _3982 : (isnan(_3982) ? 1.0 : min(_3982, 1.0));
    float _715 = ((((cbMtdParam._m0[10u].x - _664) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _707) + _664;
    float _716 = ((((cbMtdParam._m0[10u].y - _665) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _707) + _665;
    float _717 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _666)) * _707) + _666;
    float _722 = (((_515.z - _580) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _580;
    float _726 = (((isnan(1.0) ? _3950 : (isnan(_3950) ? 1.0 : min(_3950, 1.0))) - _722) * cbMtdParam._m0[19u].w) + _722;
    vec4 _740 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _304) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _305) + cbTextureTilingScale._m0[15u].w));
    float _747 = (_740.x * 2.0) + (-1.0);
    float _748 = (_740.y * 2.0) + (-1.0);
    float _749 = dot(vec2(_747, _748), vec2(_747, _748));
    float _3993 = isnan(0.0) ? _749 : (isnan(_749) ? 0.0 : max(_749, 0.0));
    float _757 = (_657 * (_740.z - _726)) + _726;
    float _760 = ((cbMtdParam._m0[23u].y - _757) * _707) + _757;
    float _764 = ((1.0 - _760) * cbMtdParam._m0[26u].y) + _760;
    float _4004 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
    float _765 = isnan(1.0) ? _4004 : (isnan(_4004) ? 1.0 : min(_4004, 1.0));
    vec4 _787 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _304) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _305) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _793 = (_787.x * 2.0) + (-1.0);
    float _794 = (_787.y * 2.0) + (-1.0);
    float _795 = dot(vec2(_793, _794), vec2(_793, _794));
    float _4015 = isnan(0.0) ? _795 : (isnan(_795) ? 0.0 : max(_795, 0.0));
    float _809 = (_583 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_515.x * 2.0) + (-1.0)))) + (((_607.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _810 = (_584 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_515.y * 2.0) + (-1.0)))) + (((_607.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _822 = (((_747 - _809) + (cbMtdParam._m0[21u].x * _809)) * _657) + _809;
    float _823 = (((_748 - _810) + (cbMtdParam._m0[21u].x * _810)) * _657) + _810;
    float _824 = (_657 * (sqrt(1.0 - (isnan(1.0) ? _3993 : (isnan(_3993) ? 1.0 : min(_3993, 1.0)))) - _590)) + _590;
    float _835 = (((_793 - _822) + (_822 * cbMtdParam._m0[22u].z)) * _707) + _822;
    float _836 = (((_794 - _823) + (_823 * cbMtdParam._m0[22u].z)) * _707) + _823;
    float _837 = ((sqrt(1.0 - (isnan(1.0) ? _4015 : (isnan(_4015) ? 1.0 : min(_4015, 1.0)))) - _824) * _707) + _824;
    float _841 = cbMtdParam._m0[22u].x + _607.w;
    float _846 = fma(_837, _253 * NORMAL.x, fma(_836, _260 * TANGENT.x, (_246 * _238) * _835));
    float _849 = fma(_837, _253 * NORMAL.y, fma(_836, _260 * TANGENT.y, (_246 * _239) * _835));
    float _852 = fma(_837, _253 * NORMAL.z, fma(_836, _260 * TANGENT.z, (_246 * _240) * _835));
    float _856 = inversesqrt(dot(vec3(_846, _849, _852), vec3(_846, _849, _852)));
    float _857 = _856 * _846;
    float _858 = _856 * _849;
    float _859 = _856 * _852;
    float _4026 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
    float _860 = isnan(1.0) ? _4026 : (isnan(_4026) ? 1.0 : min(_4026, 1.0));
    float _4037 = isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0));
    float _4048 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
    float _4059 = isnan(0.0) ? _716 : (isnan(_716) ? 0.0 : max(_716, 0.0));
    float _4070 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _878 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _919 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _929 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _919);
    float _930 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _919);
    float _931 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _919);
    float _935 = inversesqrt(dot(vec3(_929, _930, _931), vec3(_929, _930, _931)));
    float _936 = _929 * _935;
    float _937 = _930 * _935;
    float _938 = _931 * _935;
    vec4 _943 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _945 = _943.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1102 = sqrt(((_929 * _929) + (_930 * _930)) + (_931 * _931));
        float _1108 = (cbMatDynParam._m0[5u].x * _1102) + cbMatDynParam._m0[5u].y;
        float _4081 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _4081 : (isnan(_4081) ? 1.0 : min(_4081, 1.0));
        float _1113 = (cbMatDynParam._m0[5u].z * _1102) + cbMatDynParam._m0[5u].w;
        float _4092 = isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4092 : (isnan(_4092) ? 1.0 : min(_4092, 1.0))) - _1109)) + _1109) < ((_945 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _956 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _957 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _975 = fma(_859, cbSceneParam._m0[5u].z, fma(_858, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _857));
    float _978 = fma(_859, cbSceneParam._m0[6u].z, fma(_858, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _857));
    float _981 = fma(_859, cbSceneParam._m0[7u].z, fma(_858, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _857));
    uint _994 = _285 + 9u;
    uint _995 = _994 + uint(cbMatDynParam._m0[0u].w);
    float _1001 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4048 : (isnan(_4048) ? 1.0 : min(_4048, 1.0)))) * cbInstanceData._m0[_995].x;
    float _1002 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4059 : (isnan(_4059) ? 1.0 : min(_4059, 1.0)))) * cbInstanceData._m0[_995].y;
    float _1003 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4070 : (isnan(_4070) ? 1.0 : min(_4070, 1.0)))) * cbInstanceData._m0[_995].z;
    float _4103 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
    float _1004 = isnan(1.0) ? _4103 : (isnan(_4103) ? 1.0 : min(_4103, 1.0));
    float _4114 = isnan(0.0) ? _1002 : (isnan(_1002) ? 0.0 : max(_1002, 0.0));
    float _1005 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
    float _4125 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1006 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
    vec4 _1015 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _956, cbSceneParam._m0[86u].y * _957));
    float _1019 = ((isnan(1.0) ? _4037 : (isnan(_4037) ? 1.0 : min(_4037, 1.0))) * TEXCOORD_5.w) * _1015.x;
    float _1020 = dot(vec3(_857, _858, _859), vec3(_936, _937, _938));
    float _1023 = _1020 * 2.0;
    float _1027 = (_1023 * _857) - _936;
    float _1028 = (_1023 * _858) - _937;
    float _1029 = (_1023 * _859) - _938;
    float _1036 = abs(dot(vec3(_936, _937, _938), vec3(_857, _858, _859)));
    float _4136 = isnan(0.0) ? _1036 : (isnan(_1036) ? 0.0 : max(_1036, 0.0));
    float _1038 = sqrt(_860);
    float _1051 = exp2((_1038 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1038 * 3.0));
    float _1083 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1087 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1091 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1420;
    float _1422;
    float _1423;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1145 = fma(_1091, cbModelParam._m0[26u].z, fma(_1087, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1083));
        float _1149 = fma(_1091, cbModelParam._m0[27u].z, fma(_1087, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1083));
        float _1153 = fma(_1091, cbModelParam._m0[28u].z, fma(_1087, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1083));
        float _1178 = _1083 + _857;
        float _1179 = _1087 + _858;
        float _1180 = _1091 + _859;
        float _1190 = fma(_1180, cbModelParam._m0[26u].z, fma(_1179, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1178)) - _1145;
        float _1191 = fma(_1180, cbModelParam._m0[27u].z, fma(_1179, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1178)) - _1149;
        float _1192 = fma(_1180, cbModelParam._m0[28u].z, fma(_1179, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1178)) - _1153;
        float _1196 = inversesqrt(dot(vec3(_1190, _1191, _1192), vec3(_1190, _1191, _1192)));
        float _1209 = ((_1196 * _1190) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1145 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1210 = ((_1196 * _1191) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1149 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1211 = ((_1196 * _1192) / cbModelParam._m0[34u].z) + ((((((_1153 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1214 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1221 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1228 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        vec4 _1235 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1209, _1210, _1211), 0.0);
        float _1248 = exp2((_1214.w + (-0.5)) * 20.0) * 2.0;
        float _1249 = _1248 * (_1214.x + (-0.5));
        float _1250 = _1248 * (_1214.y + (-0.5));
        float _1251 = _1248 * (_1214.z + (-0.5));
        float _1258 = exp2((_1221.w + (-0.5)) * 20.0) * 2.0;
        float _1259 = _1258 * (_1221.x + (-0.5));
        float _1260 = _1258 * (_1221.y + (-0.5));
        float _1261 = _1258 * (_1221.z + (-0.5));
        float _1268 = exp2((_1228.w + (-0.5)) * 20.0) * 2.0;
        float _1269 = _1268 * (_1228.x + (-0.5));
        float _1270 = _1268 * (_1228.y + (-0.5));
        float _1271 = _1268 * (_1228.z + (-0.5));
        float _1278 = exp2((_1235.w + (-0.5)) * 20.0) * 2.0;
        float _1279 = _1278 * (_1235.x + (-0.5));
        float _1280 = _1278 * (_1235.y + (-0.5));
        float _1281 = _1278 * (_1235.z + (-0.5));
        float _1282 = isnan(0.0) ? _1279 : (isnan(_1279) ? 0.0 : max(_1279, 0.0));
        float _1283 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1284 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1285 = _1249 * 0.5;
        float _1286 = _1259 * 0.5;
        float _1287 = _1269 * 0.5;
        float _1288 = dot(vec3(_1285, _1286, _1287), vec3(_1285, _1286, _1287));
        float _1293 = (_1288 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1288);
        float _1302 = (dot(vec3(_857, _858, _859), vec3(_1293 * _1285, _1293 * _1286, _1293 * _1287)) + 1.0) * 0.5;
        float _4162 = isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0));
        float _1312 = sqrt(((_1286 * _1286) + (_1285 * _1285)) + (_1287 * _1287)) / (_1282 + 9.9999997473787516355514526367188e-06);
        float _4173 = isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0));
        float _1313 = isnan(1.0) ? _4173 : (isnan(_4173) ? 1.0 : min(_4173, 1.0));
        float _1314 = _1313 * 2.0;
        float _1318 = (1.0 - _1313) / (_1313 + 1.0);
        float _4184 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4184 : (isnan(_4184) ? 1.0 : min(_4184, 1.0));
        float _1328 = ((((1.0 - _1319) * (_1314 + 2.0)) * exp2(log2(isnan(1.0) ? _4162 : (isnan(_4162) ? 1.0 : min(_4162, 1.0))) * (_1314 + 1.0))) + _1319) * _1282;
        float _1329 = _1250 * 0.5;
        float _1330 = _1260 * 0.5;
        float _1331 = _1270 * 0.5;
        float _1332 = dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331));
        float _1337 = (_1332 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1332);
        float _1345 = (dot(vec3(_857, _858, _859), vec3(_1337 * _1329, _1337 * _1330, _1337 * _1331)) + 1.0) * 0.5;
        float _4195 = isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0));
        float _1354 = sqrt(((_1330 * _1330) + (_1329 * _1329)) + (_1331 * _1331)) / (_1283 + 9.9999997473787516355514526367188e-06);
        float _4206 = isnan(0.0) ? _1354 : (isnan(_1354) ? 0.0 : max(_1354, 0.0));
        float _1355 = isnan(1.0) ? _4206 : (isnan(_4206) ? 1.0 : min(_4206, 1.0));
        float _1356 = _1355 * 2.0;
        float _1360 = (1.0 - _1355) / (_1355 + 1.0);
        float _4217 = isnan(0.0) ? _1360 : (isnan(_1360) ? 0.0 : max(_1360, 0.0));
        float _1361 = isnan(1.0) ? _4217 : (isnan(_4217) ? 1.0 : min(_4217, 1.0));
        float _1370 = ((((1.0 - _1361) * (_1356 + 2.0)) * exp2(log2(isnan(1.0) ? _4195 : (isnan(_4195) ? 1.0 : min(_4195, 1.0))) * (_1356 + 1.0))) + _1361) * _1283;
        float _1371 = _1251 * 0.5;
        float _1372 = _1261 * 0.5;
        float _1373 = _1271 * 0.5;
        float _1374 = dot(vec3(_1371, _1372, _1373), vec3(_1371, _1372, _1373));
        float _1379 = (_1374 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1374);
        float _1387 = (dot(vec3(_857, _858, _859), vec3(_1379 * _1371, _1379 * _1372, _1379 * _1373)) + 1.0) * 0.5;
        float _4228 = isnan(0.0) ? _1387 : (isnan(_1387) ? 0.0 : max(_1387, 0.0));
        float _1396 = sqrt(((_1372 * _1372) + (_1371 * _1371)) + (_1373 * _1373)) / (_1284 + 9.9999997473787516355514526367188e-06);
        float _4239 = isnan(0.0) ? _1396 : (isnan(_1396) ? 0.0 : max(_1396, 0.0));
        float _1397 = isnan(1.0) ? _4239 : (isnan(_4239) ? 1.0 : min(_4239, 1.0));
        float _1398 = _1397 * 2.0;
        float _1402 = (1.0 - _1397) / (_1397 + 1.0);
        float _4250 = isnan(0.0) ? _1402 : (isnan(_1402) ? 0.0 : max(_1402, 0.0));
        float _1403 = isnan(1.0) ? _4250 : (isnan(_4250) ? 1.0 : min(_4250, 1.0));
        float _1412 = ((((1.0 - _1403) * (_1398 + 2.0)) * exp2(log2(isnan(1.0) ? _4228 : (isnan(_4228) ? 1.0 : min(_4228, 1.0))) * (_1398 + 1.0))) + _1403) * _1284;
        _1420 = _1251;
        _1422 = _1250;
        _1423 = _1249;
        _1424 = _1261;
        _1425 = _1260;
        _1426 = _1259;
        _1427 = _1271;
        _1428 = _1270;
        _1429 = _1269;
        _1430 = _1284;
        _1431 = _1283;
        _1432 = _1282;
        _1433 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1328 : (isnan(_1328) ? 0.0 : max(_1328, 0.0)));
        _1434 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1370 : (isnan(_1370) ? 0.0 : max(_1370, 0.0)));
        _1435 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1412 : (isnan(_1412) ? 0.0 : max(_1412, 0.0)));
    }
    else
    {
        _1420 = _1421;
        _1422 = _1421;
        _1423 = _1421;
        _1424 = _1421;
        _1425 = _1421;
        _1426 = _1421;
        _1427 = _1421;
        _1428 = _1421;
        _1429 = _1421;
        _1430 = _1421;
        _1431 = _1421;
        _1432 = _1421;
        _1433 = 0.0;
        _1434 = 0.0;
        _1435 = 0.0;
    }
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1462 = fma(_1091, cbModelParam._m0[30u].z, fma(_1087, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1083));
        float _1466 = fma(_1091, cbModelParam._m0[31u].z, fma(_1087, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1083));
        float _1470 = fma(_1091, cbModelParam._m0[32u].z, fma(_1087, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1083));
        float _1493 = _1083 + _857;
        float _1494 = _1087 + _858;
        float _1495 = _1091 + _859;
        float _1505 = fma(_1495, cbModelParam._m0[30u].z, fma(_1494, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1493)) - _1462;
        float _1506 = fma(_1495, cbModelParam._m0[31u].z, fma(_1494, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1493)) - _1466;
        float _1507 = fma(_1495, cbModelParam._m0[32u].z, fma(_1494, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1493)) - _1470;
        float _1511 = inversesqrt(dot(vec3(_1505, _1506, _1507), vec3(_1505, _1506, _1507)));
        float _1524 = ((_1511 * _1505) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1462 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1525 = ((_1511 * _1506) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1466 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1526 = ((_1511 * _1507) / cbModelParam._m0[35u].z) + ((((((_1470 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1528 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1524, _1525, _1526), 0.0);
        vec4 _1535 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1524, _1525, _1526), 0.0);
        vec4 _1542 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1524, _1525, _1526), 0.0);
        vec4 _1549 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1524, _1525, _1526), 0.0);
        float _1561 = exp2((_1528.w + (-0.5)) * 20.0) * 2.0;
        float _1562 = _1561 * (_1528.x + (-0.5));
        float _1563 = _1561 * (_1528.y + (-0.5));
        float _1564 = _1561 * (_1528.z + (-0.5));
        float _1571 = exp2((_1535.w + (-0.5)) * 20.0) * 2.0;
        float _1572 = _1571 * (_1535.x + (-0.5));
        float _1573 = _1571 * (_1535.y + (-0.5));
        float _1574 = _1571 * (_1535.z + (-0.5));
        float _1581 = exp2((_1542.w + (-0.5)) * 20.0) * 2.0;
        float _1582 = _1581 * (_1542.x + (-0.5));
        float _1583 = _1581 * (_1542.y + (-0.5));
        float _1584 = _1581 * (_1542.z + (-0.5));
        float _1591 = exp2((_1549.w + (-0.5)) * 20.0) * 2.0;
        float _1592 = _1591 * (_1549.x + (-0.5));
        float _1593 = _1591 * (_1549.y + (-0.5));
        float _1594 = _1591 * (_1549.z + (-0.5));
        float _1595 = isnan(0.0) ? _1592 : (isnan(_1592) ? 0.0 : max(_1592, 0.0));
        float _1596 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1597 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1598 = _1562 * 0.5;
        float _1599 = _1572 * 0.5;
        float _1600 = _1582 * 0.5;
        float _1601 = dot(vec3(_1598, _1599, _1600), vec3(_1598, _1599, _1600));
        float _1606 = (_1601 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1601);
        float _1614 = (dot(vec3(_857, _858, _859), vec3(_1606 * _1598, _1606 * _1599, _1606 * _1600)) + 1.0) * 0.5;
        float _4291 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
        float _1623 = sqrt(((_1599 * _1599) + (_1598 * _1598)) + (_1600 * _1600)) / (_1595 + 9.9999997473787516355514526367188e-06);
        float _4302 = isnan(0.0) ? _1623 : (isnan(_1623) ? 0.0 : max(_1623, 0.0));
        float _1624 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
        float _1625 = _1624 * 2.0;
        float _1629 = (1.0 - _1624) / (_1624 + 1.0);
        float _4313 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1630 = isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0));
        float _1639 = ((((1.0 - _1630) * (_1625 + 2.0)) * exp2(log2(isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0))) * (_1625 + 1.0))) + _1630) * _1595;
        float _1640 = _1563 * 0.5;
        float _1641 = _1573 * 0.5;
        float _1642 = _1583 * 0.5;
        float _1643 = dot(vec3(_1640, _1641, _1642), vec3(_1640, _1641, _1642));
        float _1648 = (_1643 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1643);
        float _1656 = (dot(vec3(_857, _858, _859), vec3(_1648 * _1640, _1648 * _1641, _1648 * _1642)) + 1.0) * 0.5;
        float _4324 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
        float _1665 = sqrt(((_1641 * _1641) + (_1640 * _1640)) + (_1642 * _1642)) / (_1596 + 9.9999997473787516355514526367188e-06);
        float _4335 = isnan(0.0) ? _1665 : (isnan(_1665) ? 0.0 : max(_1665, 0.0));
        float _1666 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1667 = _1666 * 2.0;
        float _1671 = (1.0 - _1666) / (_1666 + 1.0);
        float _4346 = isnan(0.0) ? _1671 : (isnan(_1671) ? 0.0 : max(_1671, 0.0));
        float _1672 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
        float _1681 = ((((1.0 - _1672) * (_1667 + 2.0)) * exp2(log2(isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0))) * (_1667 + 1.0))) + _1672) * _1596;
        float _1682 = _1564 * 0.5;
        float _1683 = _1574 * 0.5;
        float _1684 = _1584 * 0.5;
        float _1685 = dot(vec3(_1682, _1683, _1684), vec3(_1682, _1683, _1684));
        float _1690 = (_1685 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1685);
        float _1698 = (dot(vec3(_857, _858, _859), vec3(_1690 * _1682, _1690 * _1683, _1690 * _1684)) + 1.0) * 0.5;
        float _4357 = isnan(0.0) ? _1698 : (isnan(_1698) ? 0.0 : max(_1698, 0.0));
        float _1707 = sqrt(((_1683 * _1683) + (_1682 * _1682)) + (_1684 * _1684)) / (_1597 + 9.9999997473787516355514526367188e-06);
        float _4368 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
        float _1708 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
        float _1709 = _1708 * 2.0;
        float _1713 = (1.0 - _1708) / (_1708 + 1.0);
        float _4379 = isnan(0.0) ? _1713 : (isnan(_1713) ? 0.0 : max(_1713, 0.0));
        float _1714 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
        float _1723 = ((((1.0 - _1714) * (_1709 + 2.0)) * exp2(log2(isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0))) * (_1709 + 1.0))) + _1714) * _1597;
        _1731 = _1564;
        _1732 = _1563;
        _1733 = _1562;
        _1734 = _1574;
        _1735 = _1573;
        _1736 = _1572;
        _1737 = _1584;
        _1738 = _1583;
        _1739 = _1582;
        _1740 = _1597;
        _1741 = _1596;
        _1742 = _1595;
        _1743 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0)));
        _1744 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1681 : (isnan(_1681) ? 0.0 : max(_1681, 0.0)));
        _1745 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0)));
    }
    else
    {
        _1731 = _1421;
        _1732 = _1421;
        _1733 = _1421;
        _1734 = _1421;
        _1735 = _1421;
        _1736 = _1421;
        _1737 = _1421;
        _1738 = _1421;
        _1739 = _1421;
        _1740 = _1421;
        _1741 = _1421;
        _1742 = _1421;
        _1743 = 0.0;
        _1744 = 0.0;
        _1745 = 0.0;
    }
    float _1755 = (cbModelParam._m0[1u].x * (_1743 - _1433)) + _1433;
    float _1756 = (cbModelParam._m0[1u].x * (_1744 - _1434)) + _1434;
    float _1757 = (cbModelParam._m0[1u].x * (_1745 - _1435)) + _1435;
    float _1778 = fma(_1757, cbSceneParam._m0[89u].z, fma(_1756, cbSceneParam._m0[89u].y, _1755 * cbSceneParam._m0[89u].x));
    float _1781 = fma(_1757, cbSceneParam._m0[90u].z, fma(_1756, cbSceneParam._m0[90u].y, _1755 * cbSceneParam._m0[90u].x));
    float _1784 = fma(_1757, cbSceneParam._m0[91u].z, fma(_1756, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1755));
    float _1799 = _1027 * 0.5;
    float _1800 = _1028 * 0.5;
    float _1801 = _1029 * 0.5;
    float _1802 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1733, _1736, _1739, _1742));
    float _1805 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1732, _1735, _1738, _1741));
    float _1808 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1731, _1734, _1737, _1740));
    float _1842;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1815 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1420, _1424, _1427, _1430));
        float _1819 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1422, _1425, _1428, _1431));
        float _1823 = dot(vec4(_1799, _1800, _1801, 1.0), vec4(_1423, _1426, _1429, _1432));
        float _1830 = dot(vec4(cbModelParam._m0[39u]), vec4(_1799, _1800, _1801, 1.0));
        _1842 = dot(vec3(isnan(0.0) ? _1823 : (isnan(_1823) ? 0.0 : max(_1823, 0.0)), isnan(0.0) ? _1819 : (isnan(_1819) ? 0.0 : max(_1819, 0.0)), isnan(0.0) ? _1815 : (isnan(_1815) ? 0.0 : max(_1815, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1830) ? 0.0 : (isnan(0.0) ? _1830 : max(0.0, _1830))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1842 = 1.0;
    }
    float _1853;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1844 = dot(vec4(cbModelParam._m0[40u]), vec4(_1799, _1800, _1801, 1.0));
        _1853 = dot(vec3(isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0)), isnan(0.0) ? _1805 : (isnan(_1805) ? 0.0 : max(_1805, 0.0)), isnan(0.0) ? _1808 : (isnan(_1808) ? 0.0 : max(_1808, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1844) ? 0.0 : (isnan(0.0) ? _1844 : max(0.0, _1844))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1853 = 1.0;
    }
    float _1857 = (_1853 * cbModelParam._m0[1u].x) + (_1842 * (1.0 - cbModelParam._m0[1u].x));
    float _1867 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _860);
    float _1868 = isnan(_1867) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1867 : min(cbModelParam._m0[25u].z, _1867));
    float _1948;
    float _1950;
    float _1952;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1915 = fma(_1091, cbModelParam._m0[13u].z, fma(_1087, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1083)) + cbModelParam._m0[13u].w;
        float _1919 = fma(_1091, cbModelParam._m0[14u].z, fma(_1087, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1083)) + cbModelParam._m0[14u].w;
        float _1923 = fma(_1091, cbModelParam._m0[15u].z, fma(_1087, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1083)) + cbModelParam._m0[15u].w;
        float _1926 = fma(_1029, cbModelParam._m0[13u].z, fma(_1028, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1027));
        float _1929 = fma(_1029, cbModelParam._m0[14u].z, fma(_1028, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1027));
        float _1932 = fma(_1029, cbModelParam._m0[15u].z, fma(_1028, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1027));
        float _1960;
        if (_1926 > 0.0)
        {
            _1960 = abs((1.0 - _1915) / _1926);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1926 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1915 + 1.0) / _1926);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1960 = frontier_phi_17_15_ladder;
        }
        float _2241;
        if (_1929 > 0.0)
        {
            _2241 = abs((1.0 - _1919) / _1929);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1929 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1919 + 1.0) / _1929);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2241 = frontier_phi_26_22_ladder;
        }
        float _2487;
        if (_1932 > 0.0)
        {
            _2487 = abs((1.0 - _1923) / _1932);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1932 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1923 + 1.0) / _1932);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2487 = frontier_phi_38_33_ladder;
        }
        float _2489 = isnan(_2241) ? _1960 : (isnan(_1960) ? _2241 : min(_1960, _2241));
        float _2490 = isnan(_2487) ? _2489 : (isnan(_2489) ? _2487 : min(_2489, _2487));
        float _2494 = (_2490 * _1926) + _1915;
        float _2495 = (_2490 * _1929) + _1919;
        float _2496 = (_2490 * _1932) + _1923;
        float _2497 = _2490 * 9.9999997473787516355514526367188e-05;
        float _2499 = (-1.0) - _2497;
        float _2501 = _2497 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2496 > _2501) || ((_2496 < _2499) || ((_2495 > _2501) || ((_2495 < _2499) || ((_2494 < _2499) || (_2494 > _2501))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2620 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2496, cbModelParam._m0[9u].z, fma(_2495, cbModelParam._m0[9u].y, _2494 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2496, cbModelParam._m0[10u].z, fma(_2495, cbModelParam._m0[10u].y, _2494 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2496, cbModelParam._m0[11u].z, fma(_2495, cbModelParam._m0[11u].y, _2494 * cbModelParam._m0[11u].x))), _1868);
            frontier_phi_16_38_ladder = _2620.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2620.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2620.x * cbModelParam._m0[1u].y;
        }
        _1948 = frontier_phi_16_38_ladder_2;
        _1950 = frontier_phi_16_38_ladder_1;
        _1952 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1936 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1027, _1028, _1029), _1868);
        _1948 = _1936.x * cbModelParam._m0[1u].y;
        _1950 = _1936.y * cbModelParam._m0[1u].y;
        _1952 = _1936.z * cbModelParam._m0[1u].y;
    }
    float _1956 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _860);
    float _1957 = isnan(_1956) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1956 : min(cbModelParam._m0[25u].w, _1956));
    float _2046;
    float _2048;
    float _2050;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2010 = fma(_1091, cbModelParam._m0[21u].z, fma(_1087, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1083)) + cbModelParam._m0[21u].w;
        float _2014 = fma(_1091, cbModelParam._m0[22u].z, fma(_1087, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1083)) + cbModelParam._m0[22u].w;
        float _2018 = fma(_1091, cbModelParam._m0[23u].z, fma(_1087, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1083)) + cbModelParam._m0[23u].w;
        float _2021 = fma(_1029, cbModelParam._m0[21u].z, fma(_1028, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1027));
        float _2024 = fma(_1029, cbModelParam._m0[22u].z, fma(_1028, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1027));
        float _2027 = fma(_1029, cbModelParam._m0[23u].z, fma(_1028, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1027));
        float _2246;
        if (_2021 > 0.0)
        {
            _2246 = abs((1.0 - _2010) / _2021);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2021 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2010 + 1.0) / _2021);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2246 = frontier_phi_28_24_ladder;
        }
        float _2514;
        if (_2024 > 0.0)
        {
            _2514 = abs((1.0 - _2014) / _2024);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2024 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2014 + 1.0) / _2024);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2514 = frontier_phi_40_35_ladder;
        }
        float _2719;
        if (_2027 > 0.0)
        {
            _2719 = abs((1.0 - _2018) / _2027);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_2027 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_2018 + 1.0) / _2027);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2719 = frontier_phi_49_46_ladder;
        }
        float _2721 = isnan(_2514) ? _2246 : (isnan(_2246) ? _2514 : min(_2246, _2514));
        float _2722 = isnan(_2719) ? _2721 : (isnan(_2721) ? _2719 : min(_2721, _2719));
        float _2726 = (_2722 * _2021) + _2010;
        float _2727 = (_2722 * _2024) + _2014;
        float _2728 = (_2722 * _2027) + _2018;
        float _2729 = _2722 * 9.9999997473787516355514526367188e-05;
        float _2730 = (-1.0) - _2729;
        float _2732 = _2729 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_2728 > _2732) || ((_2728 < _2730) || ((_2727 > _2732) || ((_2727 < _2730) || ((_2726 < _2730) || (_2726 > _2732))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2927 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2728, cbModelParam._m0[17u].z, fma(_2727, cbModelParam._m0[17u].y, _2726 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2728, cbModelParam._m0[18u].z, fma(_2727, cbModelParam._m0[18u].y, _2726 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2728, cbModelParam._m0[19u].z, fma(_2727, cbModelParam._m0[19u].y, _2726 * cbModelParam._m0[19u].x))), _1957);
            frontier_phi_25_49_ladder = _2927.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2927.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2927.x * cbModelParam._m0[1u].z;
        }
        _2046 = frontier_phi_25_49_ladder_2;
        _2048 = frontier_phi_25_49_ladder_1;
        _2050 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _2030 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1027, _1028, _1029), _1957);
        _2046 = _2030.x * cbModelParam._m0[1u].z;
        _2048 = _2030.y * cbModelParam._m0[1u].z;
        _2050 = _2030.z * cbModelParam._m0[1u].z;
    }
    float _2062 = ((((1.0 - _1051) * ((_1038 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1051 * _1038)) * _1019;
    float _2063 = _2062 * ((cbModelParam._m0[1u].w * (_2046 - _1948)) + _1948);
    float _2064 = _2062 * ((cbModelParam._m0[1u].w * (_2048 - _1950)) + _1950);
    float _2065 = _2062 * ((cbModelParam._m0[1u].w * (_2050 - _1952)) + _1952);
    float _2068 = fma(_2065, cbSceneParam._m0[89u].z, fma(_2064, cbSceneParam._m0[89u].y, _2063 * cbSceneParam._m0[89u].x));
    float _2071 = fma(_2065, cbSceneParam._m0[90u].z, fma(_2064, cbSceneParam._m0[90u].y, _2063 * cbSceneParam._m0[90u].x));
    float _2074 = fma(_2065, cbSceneParam._m0[91u].z, fma(_2064, cbSceneParam._m0[91u].y, _2063 * cbSceneParam._m0[91u].x));
    float _2085 = _956 / cbSceneParam._m0[86u].x;
    float _2093 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4505 = isnan(0.0) ? _2093 : (isnan(_2093) ? 0.0 : max(_2093, 0.0));
    float _2095 = (isnan(1.0) ? _4505 : (isnan(_4505) ? 1.0 : min(_4505, 1.0))) * 5.0;
    float _2100 = ((10.0 / (_878 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_857, _858, _859), vec3(1.0, 0.0, 0.0));
    vec4 _2110 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_2100 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_2100 + _2085) * cbSceneParam._m0[86u].x, _957), _2095).w) + _2085) * cbSceneParam._m0[86u].x, _957), _2095);
    float _2116 = isnan(0.5) ? _2110.w : (isnan(_2110.w) ? 0.5 : max(_2110.w, 0.5));
    float _2131 = 1.0 - (_2110.w / _2116);
    vec4 _2139 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_956, _957));
    float _2141 = _2139.w;
    float _2153 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _2141);
    float _2154 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _2141);
    float _2155 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _2141);
    float _4521 = isnan(0.0) ? _2153 : (isnan(_2153) ? 0.0 : max(_2153, 0.0));
    float _2156 = isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0));
    float _4532 = isnan(0.0) ? _2154 : (isnan(_2154) ? 0.0 : max(_2154, 0.0));
    float _2157 = isnan(1.0) ? _4532 : (isnan(_4532) ? 1.0 : min(_4532, 1.0));
    float _4543 = isnan(0.0) ? _2155 : (isnan(_2155) ? 0.0 : max(_2155, 0.0));
    float _2158 = isnan(1.0) ? _4543 : (isnan(_4543) ? 1.0 : min(_4543, 1.0));
    uvec4 _2162 = floatBitsToUint(cbInstanceData._m0[_285 + 5u]);
    uint _2164 = _2162.x * 14u;
    uint _2165 = _2164 + 13u;
    float _2172 = _1019 + (-1.0);
    float _2177 = (cbLight._m0[_2165].x * _2172) + 1.0;
    float _2178 = (cbLight._m0[_2165].y * _2172) + 1.0;
    float _2179 = (cbLight._m0[_2165].z * _2172) + 1.0;
    float _2180 = (cbLight._m0[_2165].w * _2172) + 1.0;
    uint _2181 = _2164 + 5u;
    float _2187 = isnan(1.0) ? _2178 : (isnan(_2178) ? 1.0 : min(_2178, 1.0));
    uint _2191 = _2164 + 4u;
    float _2200 = isnan(1.0) ? _2177 : (isnan(_2177) ? 1.0 : min(_2177, 1.0));
    uint _2204 = _2164 | 1u;
    float _2215 = dot(vec3(cbLight._m0[_2164].xyz), vec3(_857, _858, _859));
    float _2218 = dot(vec3(cbLight._m0[_2204].xyz), vec3(_857, _858, _859));
    float _4564 = isnan(0.0) ? _2215 : (isnan(_2215) ? 0.0 : max(_2215, 0.0));
    float _4575 = isnan(0.0) ? _2218 : (isnan(_2218) ? 0.0 : max(_2218, 0.0));
    float _2223 = (isnan(1.0) ? _4564 : (isnan(_4564) ? 1.0 : min(_4564, 1.0))) * 0.3183098733425140380859375;
    float _2225 = (isnan(1.0) ? _4575 : (isnan(_4575) ? 1.0 : min(_4575, 1.0))) * 0.3183098733425140380859375;
    float _2232 = ((cbLight._m0[_2181].x * _2187) * _2225) + (((cbLight._m0[_2191].x * _2156) * _2200) * _2223);
    float _2233 = ((_2187 * cbLight._m0[_2181].y) * _2225) + (((cbLight._m0[_2191].y * _2157) * _2200) * _2223);
    float _2234 = ((_2187 * cbLight._m0[_2181].z) * _2225) + (((cbLight._m0[_2191].z * _2158) * _2200) * _2223);
    uvec4 _2238 = floatBitsToUint(cbLight._m0[_2164 + 12u]);
    bool _2240 = _2238.x == 0u;
    float _2251;
    float _2253;
    float _2255;
    if (_2240)
    {
        _2251 = _2232;
        _2253 = _2233;
        _2255 = _2234;
    }
    else
    {
        uint _2259 = _2164 + 6u;
        float _2275 = (dot(vec3(cbLight._m0[_2164 + 2u].xyz), vec3(_857, _858, _859)) * 0.5) + 0.5;
        float _2276 = _2275 * _2275;
        float _4586 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
        float _2277 = isnan(1.0) ? _4586 : (isnan(_4586) ? 1.0 : min(_4586, 1.0));
        float _2278 = isnan(1.0) ? _2179 : (isnan(_2179) ? 1.0 : min(_2179, 1.0));
        _2251 = (((cbLight._m0[_2259].x * 0.3183098733425140380859375) * _2277) * _2278) + _2232;
        _2253 = (((cbLight._m0[_2259].y * 0.3183098733425140380859375) * _2277) * _2278) + _2233;
        _2255 = (((cbLight._m0[_2259].z * 0.3183098733425140380859375) * _2277) * _2278) + _2234;
    }
    bool _2258 = _2238.y == 0u;
    float _2296;
    float _2298;
    float _2300;
    if (_2258)
    {
        _2296 = _2251;
        _2298 = _2253;
        _2300 = _2255;
    }
    else
    {
        uint _2458 = _2164 + 7u;
        float _2474 = (dot(vec3(cbLight._m0[_2164 + 3u].xyz), vec3(_857, _858, _859)) * 0.5) + 0.5;
        float _2475 = _2474 * _2474;
        float _4602 = isnan(0.0) ? _2475 : (isnan(_2475) ? 0.0 : max(_2475, 0.0));
        float _2476 = isnan(1.0) ? _4602 : (isnan(_4602) ? 1.0 : min(_4602, 1.0));
        float _2477 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        _2296 = (((cbLight._m0[_2458].x * 0.3183098733425140380859375) * _2476) * _2477) + _2251;
        _2298 = (((cbLight._m0[_2458].y * 0.3183098733425140380859375) * _2476) * _2477) + _2253;
        _2300 = (((cbLight._m0[_2458].z * 0.3183098733425140380859375) * _2476) * _2477) + _2255;
    }
    uint _2303 = _2164 + 8u;
    float _2316 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2164].w)) * _860) * 0.949999988079071044921875);
    float _2317 = _2316 * _2316;
    float _2318 = cbLight._m0[_2164].x + _936;
    float _2319 = cbLight._m0[_2164].y + _937;
    float _2320 = cbLight._m0[_2164].z + _938;
    float _2324 = inversesqrt(dot(vec3(_2318, _2319, _2320), vec3(_2318, _2319, _2320)));
    float _2325 = _2324 * _2318;
    float _2326 = _2324 * _2319;
    float _2327 = _2324 * _2320;
    float _2328 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2164].xyz));
    float _4618 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
    float _2331 = isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0));
    float _4629 = isnan(0.0) ? _1020 : (isnan(_1020) ? 0.0 : max(_1020, 0.0));
    float _2332 = isnan(1.0) ? _4629 : (isnan(_4629) ? 1.0 : min(_4629, 1.0));
    float _2333 = dot(vec3(_857, _858, _859), vec3(_2325, _2326, _2327));
    float _4640 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
    float _2336 = isnan(1.0) ? _4640 : (isnan(_4640) ? 1.0 : min(_4640, 1.0));
    float _2337 = dot(vec3(cbLight._m0[_2164].xyz), vec3(_2325, _2326, _2327));
    float _4651 = isnan(0.0) ? _2337 : (isnan(_2337) ? 0.0 : max(_2337, 0.0));
    float _2341 = _2317 * _2317;
    float _2345 = ((_2336 * _2336) * (_2341 + (-1.0))) + 1.0;
    float _2356 = (exp2(log2(1.0 - (isnan(1.0) ? _4651 : (isnan(_4651) ? 1.0 : min(_4651, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2357 = 1.0 - _2317;
    float _2368 = (0.5 / (((_2332 * ((_2331 * _2357) + _2317)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2357) + _2317) * _2331))) * _2331;
    float _4662 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
    float _2370 = (isnan(1.0) ? _4662 : (isnan(_4662) ? 1.0 : min(_4662, 1.0))) * (_2341 / ((_2345 * _2345) * 3.141590118408203125));
    uint _2384 = _2164 + 9u;
    float _2395 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2204].w)) * _860) * 0.949999988079071044921875);
    float _2396 = _2395 * _2395;
    float _2397 = cbLight._m0[_2204].x + _936;
    float _2398 = cbLight._m0[_2204].y + _937;
    float _2399 = cbLight._m0[_2204].z + _938;
    float _2403 = inversesqrt(dot(vec3(_2397, _2398, _2399), vec3(_2397, _2398, _2399)));
    float _2404 = _2403 * _2397;
    float _2405 = _2403 * _2398;
    float _2406 = _2403 * _2399;
    float _2407 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2204].xyz));
    float _4673 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
    float _2410 = isnan(1.0) ? _4673 : (isnan(_4673) ? 1.0 : min(_4673, 1.0));
    float _2411 = dot(vec3(_857, _858, _859), vec3(_2404, _2405, _2406));
    float _4684 = isnan(0.0) ? _2411 : (isnan(_2411) ? 0.0 : max(_2411, 0.0));
    float _2414 = isnan(1.0) ? _4684 : (isnan(_4684) ? 1.0 : min(_4684, 1.0));
    float _2415 = dot(vec3(cbLight._m0[_2204].xyz), vec3(_2404, _2405, _2406));
    float _4695 = isnan(0.0) ? _2415 : (isnan(_2415) ? 0.0 : max(_2415, 0.0));
    float _2419 = _2396 * _2396;
    float _2423 = ((_2414 * _2414) * (_2419 + (-1.0))) + 1.0;
    float _2432 = (exp2(log2(1.0 - (isnan(1.0) ? _4695 : (isnan(_4695) ? 1.0 : min(_4695, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2433 = 1.0 - _2396;
    float _2443 = (0.5 / (((_2332 * ((_2410 * _2433) + _2396)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2433) + _2396) * _2410))) * _2410;
    float _4706 = isnan(0.0) ? _2443 : (isnan(_2443) ? 0.0 : max(_2443, 0.0));
    float _2445 = (isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0))) * (_2419 / ((_2423 * _2423) * 3.141590118408203125));
    float _2455 = (((_2432 * cbLight._m0[_2384].x) * _2445) * _2187) + ((((cbLight._m0[_2303].x * _2156) * _2356) * _2370) * _2200);
    float _2456 = (((_2432 * cbLight._m0[_2384].y) * _2445) * _2187) + ((((cbLight._m0[_2303].y * _2157) * _2356) * _2370) * _2200);
    float _2457 = (((_2432 * cbLight._m0[_2384].z) * _2445) * _2187) + ((((cbLight._m0[_2303].z * _2158) * _2356) * _2370) * _2200);
    float _2519;
    float _2521;
    float _2523;
    if (_2240)
    {
        _2519 = _2455;
        _2521 = _2456;
        _2523 = _2457;
    }
    else
    {
        uint _2525 = _2164 + 2u;
        uint _2529 = _2164 + 10u;
        float _2543 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2525].w)) * _860) * 0.949999988079071044921875);
        float _2544 = _2543 * _2543;
        float _2545 = cbLight._m0[_2525].x + _936;
        float _2546 = cbLight._m0[_2525].y + _937;
        float _2547 = cbLight._m0[_2525].z + _938;
        float _2551 = inversesqrt(dot(vec3(_2545, _2546, _2547), vec3(_2545, _2546, _2547)));
        float _2552 = _2551 * _2545;
        float _2553 = _2551 * _2546;
        float _2554 = _2551 * _2547;
        float _2555 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2525].xyz));
        float _4717 = isnan(0.0) ? _2555 : (isnan(_2555) ? 0.0 : max(_2555, 0.0));
        float _2558 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
        float _2559 = dot(vec3(_857, _858, _859), vec3(_2552, _2553, _2554));
        float _4728 = isnan(0.0) ? _2559 : (isnan(_2559) ? 0.0 : max(_2559, 0.0));
        float _2562 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
        float _2563 = dot(vec3(cbLight._m0[_2525].xyz), vec3(_2552, _2553, _2554));
        float _4739 = isnan(0.0) ? _2563 : (isnan(_2563) ? 0.0 : max(_2563, 0.0));
        float _2567 = _2544 * _2544;
        float _2571 = ((_2562 * _2562) * (_2567 + (-1.0))) + 1.0;
        float _2580 = (exp2(log2(1.0 - (isnan(1.0) ? _4739 : (isnan(_4739) ? 1.0 : min(_4739, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2581 = 1.0 - _2544;
        float _2591 = (0.5 / (((_2332 * ((_2558 * _2581) + _2544)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2581) + _2544) * _2558))) * _2558;
        float _4750 = isnan(0.0) ? _2591 : (isnan(_2591) ? 0.0 : max(_2591, 0.0));
        float _2593 = (isnan(1.0) ? _4750 : (isnan(_4750) ? 1.0 : min(_4750, 1.0))) * (_2567 / ((_2571 * _2571) * 3.141590118408203125));
        float _2594 = isnan(1.0) ? _2179 : (isnan(_2179) ? 1.0 : min(_2179, 1.0));
        _2519 = (((_2580 * cbLight._m0[_2529].x) * _2593) * _2594) + _2455;
        _2521 = (((_2580 * cbLight._m0[_2529].y) * _2593) * _2594) + _2456;
        _2523 = (((_2580 * cbLight._m0[_2529].z) * _2593) * _2594) + _2457;
    }
    float _2629;
    float _2631;
    float _2633;
    if (_2258)
    {
        _2629 = _2519;
        _2631 = _2521;
        _2633 = _2523;
    }
    else
    {
        uint _2640 = _2164 + 3u;
        uint _2644 = _2164 + 11u;
        float _2658 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2640].w)) * _860) * 0.949999988079071044921875);
        float _2659 = _2658 * _2658;
        float _2660 = cbLight._m0[_2640].x + _936;
        float _2661 = cbLight._m0[_2640].y + _937;
        float _2662 = cbLight._m0[_2640].z + _938;
        float _2666 = inversesqrt(dot(vec3(_2660, _2661, _2662), vec3(_2660, _2661, _2662)));
        float _2667 = _2666 * _2660;
        float _2668 = _2666 * _2661;
        float _2669 = _2666 * _2662;
        float _2670 = dot(vec3(_857, _858, _859), vec3(cbLight._m0[_2640].xyz));
        float _4766 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
        float _2673 = isnan(1.0) ? _4766 : (isnan(_4766) ? 1.0 : min(_4766, 1.0));
        float _2674 = dot(vec3(_857, _858, _859), vec3(_2667, _2668, _2669));
        float _4777 = isnan(0.0) ? _2674 : (isnan(_2674) ? 0.0 : max(_2674, 0.0));
        float _2677 = isnan(1.0) ? _4777 : (isnan(_4777) ? 1.0 : min(_4777, 1.0));
        float _2678 = dot(vec3(cbLight._m0[_2640].xyz), vec3(_2667, _2668, _2669));
        float _4788 = isnan(0.0) ? _2678 : (isnan(_2678) ? 0.0 : max(_2678, 0.0));
        float _2682 = _2659 * _2659;
        float _2686 = ((_2677 * _2677) * (_2682 + (-1.0))) + 1.0;
        float _2695 = (exp2(log2(1.0 - (isnan(1.0) ? _4788 : (isnan(_4788) ? 1.0 : min(_4788, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2696 = 1.0 - _2659;
        float _2706 = (0.5 / (((_2332 * ((_2673 * _2696) + _2659)) + 9.9999999392252902907785028219223e-09) + (((_2332 * _2696) + _2659) * _2673))) * _2673;
        float _4799 = isnan(0.0) ? _2706 : (isnan(_2706) ? 0.0 : max(_2706, 0.0));
        float _2708 = (isnan(1.0) ? _4799 : (isnan(_4799) ? 1.0 : min(_4799, 1.0))) * (_2682 / ((_2686 * _2686) * 3.141590118408203125));
        float _2709 = isnan(1.0) ? _2180 : (isnan(_2180) ? 1.0 : min(_2180, 1.0));
        _2629 = (((_2695 * cbLight._m0[_2644].x) * _2708) * _2709) + _2519;
        _2631 = (((_2695 * cbLight._m0[_2644].y) * _2708) * _2709) + _2521;
        _2633 = (((_2695 * cbLight._m0[_2644].z) * _2708) * _2709) + _2523;
    }
    float _2844;
    float _2846;
    float _2848;
    float _2850;
    float _2852;
    float _2854;
    if (_2162.y == 0u)
    {
        float _2784 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2785 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2784;
        float _2786 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2784;
        float _2787 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2784;
        uvec4 _2799 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2800 = _2799.x;
        uint _2811 = uint((float(_2799.y) * floor(float(uint(cbSceneParam._m0[85u].y * _957) / _2800))) + floor(float(uint(cbSceneParam._m0[85u].x * _956) / _2800)));
        float _2821 = (log2(_2787 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2822 = isnan(0.0) ? _2821 : (isnan(_2821) ? 0.0 : max(_2821, 0.0));
        uint _2825 = uint(isnan(14.0) ? _2822 : (isnan(_2822) ? 14.0 : min(_2822, 14.0)));
        uvec4 _2830 = texelFetch(g_lightClusterGridBuffer, int(((_2825 << 2u) + (_2811 << 6u)) >> 2u));
        uint _2831 = _2830.x;
        uint _2832 = _2799.z;
        float _2932;
        float _2934;
        float _2936;
        float _2938;
        float _2940;
        float _2942;
        if (((((1u << ((_2832 >> 4u) & 15u)) + 4294967295u) & _2831) == 0u) || ((_2832 & 240u) == 0u))
        {
            _2932 = 0.0;
            _2934 = 0.0;
            _2936 = 0.0;
            _2938 = 0.0;
            _2940 = 0.0;
            _2942 = 0.0;
        }
        else
        {
            float _2933;
            float _2935;
            float _2937;
            float _2939;
            float _2941;
            float _2943;
            float _3084 = 0.0;
            float _3085 = 0.0;
            float _3086 = 0.0;
            float _3087 = 0.0;
            float _3088 = 0.0;
            float _3089 = 0.0;
            uint _3090 = 0u;
            uint _3099;
            bool _3100;
            for (;;)
            {
                _3099 = texelFetch(g_lightClassification, int((((_2825 << 5u) + (_2811 << 9u)) + (_3090 << 2u)) >> 2u)).x;
                _3100 = _3099 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3100)
                {
                    frontier_phi_66_pred = _3084;
                    frontier_phi_66_pred_1 = _3089;
                    frontier_phi_66_pred_2 = _3088;
                    frontier_phi_66_pred_3 = _3087;
                    frontier_phi_66_pred_4 = _3086;
                    frontier_phi_66_pred_5 = _3085;
                }
                else
                {
                    float _3229;
                    float _3230;
                    float _3231;
                    float _3232;
                    float _3233;
                    float _3234;
                    uint _3235;
                    _3229 = _3084;
                    _3230 = _3085;
                    _3231 = _3086;
                    _3232 = _3087;
                    _3233 = _3088;
                    _3234 = _3089;
                    _3235 = _3099;
                    float _3156;
                    float _3157;
                    float _3158;
                    float _3159;
                    float _3160;
                    float _3161;
                    for (;;)
                    {
                        uint _3239 = uint(findLSB(_3235)) + (_3090 << 5u);
                        uint _3236 = (_3235 + 4294967295u) & _3235;
                        uint _3241 = _3239 * 48u;
                        vec4 _3255 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3241)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3241 + 3u)).x));
                        uint _3261 = (_3239 * 48u) + 4u;
                        vec4 _3274 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3261)).x, texelFetch(g_PointLightRenderingBuffer, int(_3261 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3261 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3261 + 3u)).x));
                        uint _3280 = (_3239 * 48u) + 8u;
                        vec3 _3291 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3280)).x, texelFetch(g_PointLightRenderingBuffer, int(_3280 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3280 + 2u)).x));
                        float _3295 = _3255.x - _2785;
                        float _3296 = _3255.y - _2786;
                        float _3297 = _3255.z - _2787;
                        float _3298 = dot(vec3(_3295, _3296, _3297), vec3(_3295, _3296, _3297));
                        float _3301 = inversesqrt(_3298);
                        float _3302 = _3301 * _3295;
                        float _3303 = _3301 * _3296;
                        float _3304 = _3301 * _3297;
                        float _3305 = dot(vec3(_975, _978, _981), vec3(_3302, _3303, _3304));
                        float _3310 = 1.0 - (_3298 * _3255.w);
                        float _4825 = isnan(0.0) ? _3310 : (isnan(_3310) ? 0.0 : max(_3310, 0.0));
                        float _3311 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
                        float _3312 = sqrt(_3298) * _3274.w;
                        float _3315 = 1.39999997615814208984375 / (_3312 + 1.39999997615814208984375);
                        float _3316 = _3315 * _3315;
                        float _3319 = ((1.0 - _3316) * _3305) + _3316;
                        float _3322 = _3312 * _3312;
                        float _3326 = ((isnan(0.0) ? _3319 : (isnan(_3319) ? 0.0 : max(_3319, 0.0))) * _3311) / ((_3322 * 0.699999988079071044921875) + 1.0);
                        float _3330 = (-0.0) - _2785;
                        float _3331 = (-0.0) - _2786;
                        float _3332 = (-0.0) - _2787;
                        float _3336 = inversesqrt(dot(vec3(_3330, _3331, _3332), vec3(_3330, _3331, _3332)));
                        float _3337 = _3336 * _3330;
                        float _3338 = _3336 * _3331;
                        float _3339 = _3336 * _3332;
                        float _3347 = exp2(log2(1.0 / ((_3322 * 3.5) + 5.0)) * 0.25);
                        float _3348 = 1.0 - _1038;
                        float _3355 = sqrt(1.0 - ((1.0 - (_3348 * _3348)) * (1.0 - (_3347 * _3347))));
                        float _3356 = _3355 * _3355;
                        float _3357 = _3356 * _3356;
                        float _3358 = _3337 + _3302;
                        float _3359 = _3338 + _3303;
                        float _3360 = _3339 + _3304;
                        float _3364 = inversesqrt(dot(vec3(_3358, _3359, _3360), vec3(_3358, _3359, _3360)));
                        float _3368 = dot(vec3(_975, _978, _981), vec3(_3337, _3338, _3339));
                        float _4841 = isnan(0.0) ? _3368 : (isnan(_3368) ? 0.0 : max(_3368, 0.0));
                        float _3371 = isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0));
                        float _3372 = dot(vec3(_975, _978, _981), vec3(_3364 * _3358, _3364 * _3359, _3364 * _3360));
                        float _4852 = isnan(0.0) ? _3372 : (isnan(_3372) ? 0.0 : max(_3372, 0.0));
                        float _3375 = isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0));
                        float _3379 = ((_3375 * _3375) * (_3357 + (-1.0))) + 1.0;
                        float _3380 = _3315 * _3356;
                        float _3381 = _3380 * _3380;
                        float _3384 = ((1.0 - _3381) * _3305) + _3381;
                        float _4863 = isnan(0.0) ? _3384 : (isnan(_3384) ? 0.0 : max(_3384, 0.0));
                        float _3385 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
                        float _3386 = 1.0 - _3356;
                        float _3396 = (0.5 / (((_3385 * ((_3371 * _3386) + _3356)) + 9.9999999392252902907785028219223e-09) + (((_3385 * _3386) + _3356) * _3371))) * _3385;
                        float _4874 = isnan(0.0) ? _3396 : (isnan(_3396) ? 0.0 : max(_3396, 0.0));
                        float _3407 = (((_3357 * 3.1415927410125732421875) * (isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0)))) / ((_3379 * _3379) * ((_3322 * 2.1991131305694580078125) + 3.141590118408203125))) * _3311;
                        _3159 = (_3326 * _3274.x) + _3232;
                        _3160 = (_3326 * _3274.y) + _3233;
                        _3161 = (_3326 * _3274.z) + _3234;
                        _3156 = (_3407 * _3291.x) + _3229;
                        _3157 = (_3407 * _3291.y) + _3230;
                        _3158 = (_3407 * _3291.z) + _3231;
                        if (_3236 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3229 = _3156;
                            _3230 = _3157;
                            _3231 = _3158;
                            _3232 = _3159;
                            _3233 = _3160;
                            _3234 = _3161;
                            _3235 = _3236;
                        }
                    }
                    frontier_phi_66_pred = _3156;
                    frontier_phi_66_pred_1 = _3161;
                    frontier_phi_66_pred_2 = _3160;
                    frontier_phi_66_pred_3 = _3159;
                    frontier_phi_66_pred_4 = _3158;
                    frontier_phi_66_pred_5 = _3157;
                }
                _2933 = frontier_phi_66_pred;
                _2943 = frontier_phi_66_pred_1;
                _2941 = frontier_phi_66_pred_2;
                _2939 = frontier_phi_66_pred_3;
                _2937 = frontier_phi_66_pred_4;
                _2935 = frontier_phi_66_pred_5;
                uint _3091 = _3090 + 1u;
                if (_3091 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3084 = _2933;
                    _3085 = _2935;
                    _3086 = _2937;
                    _3087 = _2939;
                    _3088 = _2941;
                    _3089 = _2943;
                    _3090 = _3091;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2932 = _2933;
            _2934 = _2935;
            _2936 = _2937;
            _2938 = _2939;
            _2940 = _2941;
            _2942 = _2943;
        }
        uvec4 _2946 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2947 = _2946.z;
        uint _2949 = (_2947 >> 8u) & 15u;
        float _3052;
        float _3054;
        float _3056;
        float _3058;
        float _3060;
        float _3062;
        if (((4294967295u << _2949) & _2831) == 0u)
        {
            _3052 = _2932;
            _3054 = _2934;
            _3056 = _2936;
            _3058 = _2938;
            _3060 = _2940;
            _3062 = _2942;
        }
        else
        {
            float _3077 = inversesqrt(dot(vec3(_2785, _2786, _2787), vec3(_2785, _2786, _2787)));
            float _3078 = _3077 * _2785;
            float _3079 = _3077 * _2786;
            float _3080 = _3077 * _2787;
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2949 < ((_2947 >> 12u) & 15u))
            {
                float _3053;
                float _3055;
                float _3057;
                float _3059;
                float _3061;
                float _3063;
                float _3212 = _2932;
                float _3213 = _2934;
                float _3214 = _2936;
                float _3215 = _2938;
                float _3216 = _2940;
                float _3217 = _2942;
                uint _3218 = _2949;
                uint _3227;
                bool _3228;
                for (;;)
                {
                    _3227 = texelFetch(g_lightClassification, int((((_2825 << 5u) + (_2811 << 9u)) + (_3218 << 2u)) >> 2u)).x;
                    _3228 = _3227 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_3228)
                    {
                        frontier_phi_77_pred = _3217;
                        frontier_phi_77_pred_1 = _3216;
                        frontier_phi_77_pred_2 = _3215;
                        frontier_phi_77_pred_3 = _3214;
                        frontier_phi_77_pred_4 = _3213;
                        frontier_phi_77_pred_5 = _3212;
                    }
                    else
                    {
                        float _3421;
                        float _3422;
                        float _3423;
                        float _3424;
                        float _3425;
                        float _3426;
                        float _3714;
                        float _3715;
                        float _3716;
                        float _3717;
                        float _3718;
                        float _3719;
                        float _3434 = _3212;
                        float _3435 = _3213;
                        float _3436 = _3214;
                        float _3437 = _3215;
                        float _3438 = _3216;
                        float _3439 = _3217;
                        uint _3440 = _3227;
                        uint _3441;
                        vec4 _3466;
                        float _3467;
                        vec4 _3482;
                        vec3 _3494;
                        vec4 _3509;
                        vec4 _3524;
                        float _3570;
                        bool _3571;
                        for (;;)
                        {
                            uint _3451 = ((_3218 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3440));
                            _3441 = (_3440 + 4294967295u) & _3440;
                            uint _3453 = _3451 * 40u;
                            _3466 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3453)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3453 + 3u)).x));
                            _3467 = _3466.w;
                            uint _3469 = (_3451 * 40u) + 4u;
                            _3482 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3469)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3469 + 3u)).x));
                            uint _3484 = (_3451 * 40u) + 8u;
                            _3494 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3484)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3484 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3484 + 2u)).x));
                            uint _3496 = (_3451 * 40u) + 16u;
                            _3509 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3496)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3496 + 3u)).x));
                            uint _3511 = (_3451 * 40u) + 20u;
                            _3524 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3511)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3511 + 3u)).x));
                            uint _3526 = (_3451 * 40u) + 24u;
                            vec4 _3539 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3526)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3526 + 3u)).x));
                            uint _3545 = (_3451 * 40u) + 28u;
                            vec4 _3558 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3545)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3545 + 3u)).x));
                            _3570 = fma(_2787, _3558.z, fma(_2786, _3558.y, _3558.x * _2785)) + _3558.w;
                            _3571 = !((fma(_2787, _3539.z, fma(_2786, _3539.y, _3539.x * _2785)) + _3539.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_3571)
                            {
                                float _3598 = _3466.x - _2785;
                                float _3599 = _3466.y - _2786;
                                float _3600 = _3466.z - _2787;
                                float _3601 = dot(vec3(_3598, _3599, _3600), vec3(_3598, _3599, _3600));
                                float _3604 = inversesqrt(_3601);
                                float _3605 = _3604 * _3598;
                                float _3606 = _3604 * _3599;
                                float _3607 = _3604 * _3600;
                                float _3611 = 1.0 - (_3601 / (_3467 * _3467));
                                float _4885 = isnan(0.0) ? _3611 : (isnan(_3611) ? 0.0 : max(_3611, 0.0));
                                float _3612 = isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0));
                                float _3616 = sqrt(_3601) * _3482.w;
                                float _3618 = 1.39999997615814208984375 / (_3616 + 1.39999997615814208984375);
                                float _3619 = _3618 * _3618;
                                float _3622 = ((1.0 - _3619) * dot(vec3(_3605, _3606, _3607), vec3(_975, _978, _981))) + _3619;
                                float _3625 = _3616 * _3616;
                                float _3629 = (fma(_2787, _3509.z, fma(_2786, _3509.y, _3509.x * _2785)) + _3509.w) / _3570;
                                float _3630 = (fma(_2787, _3524.z, fma(_2786, _3524.y, _3524.x * _2785)) + _3524.w) / _3570;
                                float _3634 = 1.0 - dot(vec2(_3629, _3630), vec2(_3629, _3630));
                                float _4901 = isnan(0.0) ? _3634 : (isnan(_3634) ? 0.0 : max(_3634, 0.0));
                                float _3635 = isnan(1.0) ? _4901 : (isnan(_4901) ? 1.0 : min(_4901, 1.0));
                                float _3636 = _3635 * (((isnan(0.0) ? _3622 : (isnan(_3622) ? 0.0 : max(_3622, 0.0))) * _3612) / ((_3625 * 0.699999988079071044921875) + 1.0));
                                float _3648 = exp2(log2(1.0 / ((_3625 * 3.5) + 5.0)) * 0.25);
                                float _3649 = 1.0 - _1038;
                                float _3656 = sqrt(1.0 - ((1.0 - (_3649 * _3649)) * (1.0 - (_3648 * _3648))));
                                float _3657 = _3656 * _3656;
                                float _3658 = _3657 * _3657;
                                float _3659 = _3605 - _3078;
                                float _3660 = _3606 - _3079;
                                float _3661 = _3607 - _3080;
                                float _3665 = inversesqrt(dot(vec3(_3659, _3660, _3661), vec3(_3659, _3660, _3661)));
                                float _3669 = dot(vec3(_975, _978, _981), vec3((-0.0) - _3078, (-0.0) - _3079, (-0.0) - _3080));
                                float _4912 = isnan(0.0) ? _3669 : (isnan(_3669) ? 0.0 : max(_3669, 0.0));
                                float _3672 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
                                float _3673 = dot(vec3(_975, _978, _981), vec3(_3665 * _3659, _3665 * _3660, _3665 * _3661));
                                float _4923 = isnan(0.0) ? _3673 : (isnan(_3673) ? 0.0 : max(_3673, 0.0));
                                float _3676 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
                                float _3680 = ((_3676 * _3676) * (_3658 + (-1.0))) + 1.0;
                                float _3681 = _3618 * _3657;
                                float _3682 = _3681 * _3681;
                                float _3688 = ((1.0 - _3682) * dot(vec3(_975, _978, _981), vec3(_3605, _3606, _3607))) + _3682;
                                float _4934 = isnan(0.0) ? _3688 : (isnan(_3688) ? 0.0 : max(_3688, 0.0));
                                float _3689 = isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0));
                                float _3690 = 1.0 - _3657;
                                float _3700 = (0.5 / (((_3689 * ((_3672 * _3690) + _3657)) + 9.9999999392252902907785028219223e-09) + (((_3689 * _3690) + _3657) * _3672))) * _3689;
                                float _4945 = isnan(0.0) ? _3700 : (isnan(_3700) ? 0.0 : max(_3700, 0.0));
                                float _3710 = (_3635 * _3612) * (((_3658 * 3.1415927410125732421875) * (isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0)))) / ((_3680 * _3680) * ((_3625 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_83_pred = _3636 * _3482.y;
                                frontier_phi_83_pred_1 = _3636 * _3482.x;
                                frontier_phi_83_pred_2 = _3710 * _3494.z;
                                frontier_phi_83_pred_3 = _3710 * _3494.y;
                                frontier_phi_83_pred_4 = _3710 * _3494.x;
                                frontier_phi_83_pred_5 = _3636 * _3482.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _3718 = frontier_phi_83_pred;
                            _3717 = frontier_phi_83_pred_1;
                            _3716 = frontier_phi_83_pred_2;
                            _3715 = frontier_phi_83_pred_3;
                            _3714 = frontier_phi_83_pred_4;
                            _3719 = frontier_phi_83_pred_5;
                            _3424 = _3717 + _3437;
                            _3425 = _3718 + _3438;
                            _3426 = _3719 + _3439;
                            _3421 = _3714 + _3434;
                            _3422 = _3715 + _3435;
                            _3423 = _3716 + _3436;
                            if (_3441 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3434 = _3421;
                                _3435 = _3422;
                                _3436 = _3423;
                                _3437 = _3424;
                                _3438 = _3425;
                                _3439 = _3426;
                                _3440 = _3441;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _3426;
                        frontier_phi_77_pred_1 = _3425;
                        frontier_phi_77_pred_2 = _3424;
                        frontier_phi_77_pred_3 = _3423;
                        frontier_phi_77_pred_4 = _3422;
                        frontier_phi_77_pred_5 = _3421;
                    }
                    _3063 = frontier_phi_77_pred;
                    _3061 = frontier_phi_77_pred_1;
                    _3059 = frontier_phi_77_pred_2;
                    _3057 = frontier_phi_77_pred_3;
                    _3055 = frontier_phi_77_pred_4;
                    _3053 = frontier_phi_77_pred_5;
                    uint _3219 = _3218 + 1u;
                    if (_3219 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3212 = _3053;
                        _3213 = _3055;
                        _3214 = _3057;
                        _3215 = _3059;
                        _3216 = _3061;
                        _3217 = _3063;
                        _3218 = _3219;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _3057;
                frontier_phi_58_59_ladder_1 = _3063;
                frontier_phi_58_59_ladder_2 = _3061;
                frontier_phi_58_59_ladder_3 = _3059;
                frontier_phi_58_59_ladder_4 = _3055;
                frontier_phi_58_59_ladder_5 = _3053;
            }
            else
            {
                frontier_phi_58_59_ladder = _2936;
                frontier_phi_58_59_ladder_1 = _2942;
                frontier_phi_58_59_ladder_2 = _2940;
                frontier_phi_58_59_ladder_3 = _2938;
                frontier_phi_58_59_ladder_4 = _2934;
                frontier_phi_58_59_ladder_5 = _2932;
            }
            _3052 = frontier_phi_58_59_ladder_5;
            _3054 = frontier_phi_58_59_ladder_4;
            _3056 = frontier_phi_58_59_ladder;
            _3058 = frontier_phi_58_59_ladder_3;
            _3060 = frontier_phi_58_59_ladder_2;
            _3062 = frontier_phi_58_59_ladder_1;
        }
        float _3067 = isnan(1.0) ? _1019 : (isnan(_1019) ? 1.0 : min(_1019, 1.0));
        _2844 = (_3067 * _3058) + _2296;
        _2846 = (_3067 * _3060) + _2298;
        _2848 = (_3067 * _3062) + _2300;
        _2850 = ((_3052 * 0.039999999105930328369140625) * _3067) + _2629;
        _2852 = ((_3054 * 0.039999999105930328369140625) * _3067) + _2631;
        _2854 = ((_3056 * 0.039999999105930328369140625) * _3067) + _2633;
    }
    else
    {
        _2844 = _2296;
        _2846 = _2298;
        _2848 = _2300;
        _2850 = _2629;
        _2852 = _2631;
        _2854 = _2633;
    }
    float _4961 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _4972 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _4983 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _2871 = ((isnan(1.0) ? _4961 : (isnan(_4961) ? 1.0 : min(_4961, 1.0))) * (_2844 + ((isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0))) * _1019))) + (((((_2062 * (_2110.x / _2116)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0))) * _1857) * _2131)) + _2850) * cbPerFrame._m0[3u].x);
    float _2872 = ((isnan(1.0) ? _4972 : (isnan(_4972) ? 1.0 : min(_4972, 1.0))) * (_2846 + ((isnan(0.0) ? _1781 : (isnan(_1781) ? 0.0 : max(_1781, 0.0))) * _1019))) + (((((_2062 * (_2110.y / _2116)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2071 : (isnan(_2071) ? 0.0 : max(_2071, 0.0))) * _1857) * _2131)) + _2852) * cbPerFrame._m0[3u].x);
    float _2873 = ((isnan(1.0) ? _4983 : (isnan(_4983) ? 1.0 : min(_4983, 1.0))) * (_2848 + ((isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0))) * _1019))) + (((((_2062 * (_2110.z / _2116)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2074 : (isnan(_2074) ? 0.0 : max(_2074, 0.0))) * _1857) * _2131)) + _2854) * cbPerFrame._m0[3u].x);
    uint _2874 = _285 + 6u;
    float _2882 = _956 / cbSceneParam._m0[86u].x;
    float _2883 = _957 / cbSceneParam._m0[86u].y;
    vec4 _2897 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2882, _2883, (log2((isnan(cbSceneParam._m0[77u].w) ? _878 : (isnan(_878) ? cbSceneParam._m0[77u].w : min(_878, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2899 = _2897.x;
    float _2900 = _2897.y;
    float _2901 = _2897.z;
    float _2902 = _2897.w;
    float _2995;
    float _2997;
    float _2999;
    float _3001;
    if (_878 > cbSceneParam._m0[78u].w)
    {
        float _2957 = isnan(_878) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _878 : min(cbSceneParam._m0[80u].w, _878));
        float _2958 = _2957 / _878;
        float _2969 = _2958 * _929;
        float _2970 = _930 * _2958;
        float _2971 = (-0.0) - _2970;
        float _2973 = _2958 * _931;
        float _2975 = (cbSceneParam._m0[77u].w * _2971) / _2957;
        float _2976 = _2975 + cbSceneParam._m0[79u].w;
        float _2977 = cbSceneParam._m0[79u].w - _2970;
        float _2983 = sqrt(((_2969 * _2969) + (_2970 * _2970)) + (_2973 * _2973));
        float _2986 = (1.0 - (cbSceneParam._m0[77u].w / _2957)) * _2983;
        float _2991 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2993 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3169;
        if (abs((_2971 - _2975) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3169 = ((((_2976 > 0.0) ? exp2(_2991 * _2976) : (2.0 - exp2(_2993 * _2976))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2986;
        }
        else
        {
            float _3113 = 1.0 / cbSceneParam._m0[80u].x;
            float _3114 = isnan(_2977) ? _2976 : (isnan(_2976) ? _2977 : max(_2976, _2977));
            float _3115 = isnan(_2977) ? _2976 : (isnan(_2976) ? _2977 : min(_2976, _2977));
            float _3124 = isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : min(_3114, 0.0));
            float _3125 = isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : min(_3115, 0.0));
            _3169 = ((abs(_2983 / _2971) * cbSceneParam._m0[80u].y) * ((((_3124 - _3125) * 2.0) - ((exp2(_2991 * (isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0)))) - exp2(_2991 * (isnan(0.0) ? _3115 : (isnan(_3115) ? 0.0 : max(_3115, 0.0))))) * _3113)) - ((exp2(_2993 * _3124) - exp2(_2993 * _3125)) * _3113))) + (_2986 * cbSceneParam._m0[80u].z);
        }
        vec4 _3171 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2882, _2883, 1.0), 0.0);
        float _3180 = exp2((_3169 * (-1.44269502162933349609375)) * (1.0 - _3171.w));
        float _3181 = log2(_3180);
        float _3197 = log2(_2902);
        _2995 = (exp2(_3197 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].x)) * _3171.x) / cbSceneParam._m0[78u].x)) + _2899;
        _2997 = (exp2(_3197 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].y)) * _3171.y) / cbSceneParam._m0[78u].y)) + _2900;
        _2999 = (exp2(_3197 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3181 * cbSceneParam._m0[78u].z)) * _3171.z) / cbSceneParam._m0[78u].z)) + _2901;
        _3001 = _3180 * _2902;
    }
    else
    {
        _2995 = _2899;
        _2997 = _2900;
        _2999 = _2901;
        _3001 = _2902;
    }
    bool _3207;
    vec4 _3010;
    vec4 _3032;
    float _3034;
    float _3038;
    float _3039;
    float _3040;
    float _3041;
    bool _3051;
    for (;;)
    {
        _3010 = cbMatDynParam._m0[0u];
        float _3012 = roundEven(_3010.y);
        bool _3013 = _3012 == 3.0;
        float _3014 = log2(_3001);
        float _3021 = exp2(_3014 * cbSceneParam._m0[78u].x) * _2871;
        float _3022 = exp2(_3014 * cbSceneParam._m0[78u].y) * _2872;
        float _3023 = exp2(_3014 * cbSceneParam._m0[78u].z) * _2873;
        float _3030 = _945 + (-0.5);
        _3032 = cbMtdParam._m0[1u];
        _3034 = _3032.y * _3030;
        float _3037 = (_3012 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3038 = _3037 * (_3013 ? _3021 : (_3021 + (cbSceneParam._m0[72u].w * _2995)));
        _3039 = _3037 * (_3013 ? _3022 : (_3022 + (cbSceneParam._m0[72u].w * _2997)));
        _3040 = _3037 * (_3013 ? _3023 : (_3023 + (cbSceneParam._m0[72u].w * _2999)));
        _3041 = _3030 * 0.999000012874603271484375;
        _3051 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3051)
        {
            if ((cbInstanceData._m0[_285 + 7u].x + _3041) < 0.5)
            {
                _3207 = true;
                break;
            }
        }
        uint _3148 = _994 + uint(_3010.w);
        if ((cbInstanceData._m0[_3148].w < 1.0) && ((cbInstanceData._m0[_3148].w + _3041) < 0.5))
        {
            _3207 = true;
            break;
        }
        if ((_3034 + _337) < _3032.x)
        {
            _3207 = true;
            break;
        }
        _3207 = false;
        break;
    }
    float _3412;
    if (_3207)
    {
        discard_state = true;
        _3412 = 0.0;
    }
    else
    {
        _3412 = cbInstanceData._m0[_2874].w;
    }
    SV_Target.x = _3038;
    SV_Target.y = _3039;
    SV_Target.z = _3040;
    SV_Target.w = _3412;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2874].w;
    discard_exit();
}


