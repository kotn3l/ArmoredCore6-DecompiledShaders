#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1306;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _229 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _230 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _231 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _237 = inversesqrt(dot(vec3(_229, _230, _231), vec3(_229, _230, _231)));
    float _244 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _251 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _257 = uint(roundEven(NORMAL.w)) * 13u;
    uint _262 = _257 + 1u;
    uint _266 = _257 + 2u;
    float _275 = sqrt(((cbInstanceData._m0[_262].x * cbInstanceData._m0[_262].x) + (cbInstanceData._m0[_257].x * cbInstanceData._m0[_257].x)) + (cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x));
    float _276 = _275 * TEXCOORD.z;
    float _277 = _275 * TEXCOORD.w;
    vec4 _297 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _303 = _297.x * cbMtdParam._m0[11u].x;
    float _304 = _297.y * cbMtdParam._m0[11u].y;
    float _305 = _297.z * cbMtdParam._m0[11u].z;
    vec4 _324 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _276) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _277) + cbTextureTilingScale._m0[5u].w));
    vec4 _359 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _361 = _359.x;
    float _374 = dot(vec4(_361, _359.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _391 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_361 - _374) * cbMtdParam._m0[24u].x) + _374) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3944 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _392 = isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0));
    float _399 = (_392 * ((_324.x * cbMtdParam._m0[12u].x) - _303)) + _303;
    float _400 = (_392 * ((_324.y * cbMtdParam._m0[12u].y) - _304)) + _304;
    float _401 = (_392 * ((_324.z * cbMtdParam._m0[12u].z) - _305)) + _305;
    vec4 _420 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _276) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _277) + cbTextureTilingScale._m0[14u].w));
    vec4 _440 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _276) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _277) + cbTextureTilingScale._m0[20u].w));
    vec4 _465 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _467 = _465.x;
    float _468 = _465.y;
    float _473 = cbMtdParam._m0[25u].w * _465.z;
    float _3955 = isnan(0.0) ? _473 : (isnan(_473) ? 0.0 : max(_473, 0.0));
    float _474 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
    vec4 _487 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _276) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _277) + cbTextureTilingScale._m0[4u].w));
    float _495 = cbMtdParam._m0[26u].x * _487.z;
    float _3966 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _505 = (((isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0))) - _474) * _392) + _474;
    float _508 = ((((_487.x - _467) * _392) + _467) * 2.0) + (-1.0);
    float _509 = ((((_487.y - _468) * _392) + _468) * 2.0) + (-1.0);
    float _510 = dot(vec2(_508, _509), vec2(_508, _509));
    float _3977 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _515 = sqrt(1.0 - (isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0))));
    vec4 _532 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _539 = cbMtdParam._m0[25u].z * _532.z;
    float _3988 = isnan(0.0) ? _539 : (isnan(_539) ? 0.0 : max(_539, 0.0));
    vec4 _560 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _276) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _277) + cbTextureTilingScale._m0[11u].w));
    float _562 = _560.x;
    float _563 = 1.0 - _562;
    float _569 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _572 = ((isnan(0.0) ? _569 : (isnan(_569) ? 0.0 : min(_569, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _581 = (_572 - ((((((_562 - _563) * cbMtdParam._m0[24u].z) + _563) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _572))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4009 = isnan(0.0) ? _581 : (isnan(_581) ? 0.0 : max(_581, 0.0));
    float _582 = isnan(1.0) ? _4009 : (isnan(_4009) ? 1.0 : min(_4009, 1.0));
    float _589 = (_582 * ((_420.x * cbMtdParam._m0[18u].x) - _399)) + _399;
    float _590 = (_582 * ((_420.y * cbMtdParam._m0[18u].y) - _400)) + _400;
    float _591 = (_582 * ((_420.z * cbMtdParam._m0[18u].z) - _401)) + _401;
    vec4 _603 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _276) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _277) + cbTextureTilingScale._m0[19u].w));
    float _605 = _603.x;
    float _606 = 1.0 - _605;
    float _633 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_605 - _606) * cbMtdParam._m0[24u].w) + _606) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4020 = isnan(0.0) ? _633 : (isnan(_633) ? 0.0 : max(_633, 0.0));
    float _634 = isnan(1.0) ? _4020 : (isnan(_4020) ? 1.0 : min(_4020, 1.0));
    float _642 = ((((cbMtdParam._m0[10u].x - _589) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _634) + _589;
    float _643 = ((((cbMtdParam._m0[10u].y - _590) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _634) + _590;
    float _644 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _591)) * _634) + _591;
    float _649 = (((_440.z - _505) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _505;
    float _653 = (((isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0))) - _649) * cbMtdParam._m0[19u].w) + _649;
    vec4 _667 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _276) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _277) + cbTextureTilingScale._m0[15u].w));
    float _674 = (_667.x * 2.0) + (-1.0);
    float _675 = (_667.y * 2.0) + (-1.0);
    float _676 = dot(vec2(_674, _675), vec2(_674, _675));
    float _4031 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
    float _684 = (_582 * (_667.z - _653)) + _653;
    float _687 = ((cbMtdParam._m0[23u].y - _684) * _634) + _684;
    float _691 = ((1.0 - _687) * cbMtdParam._m0[26u].y) + _687;
    float _4042 = isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0));
    float _692 = isnan(1.0) ? _4042 : (isnan(_4042) ? 1.0 : min(_4042, 1.0));
    vec4 _714 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _276) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _277) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _720 = (_714.x * 2.0) + (-1.0);
    float _721 = (_714.y * 2.0) + (-1.0);
    float _722 = dot(vec2(_720, _721), vec2(_720, _721));
    float _4053 = isnan(0.0) ? _722 : (isnan(_722) ? 0.0 : max(_722, 0.0));
    float _736 = (_508 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_440.x * 2.0) + (-1.0)))) + (((_532.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _737 = (_509 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_440.y * 2.0) + (-1.0)))) + (((_532.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _749 = (((_674 - _736) + (cbMtdParam._m0[21u].x * _736)) * _582) + _736;
    float _750 = (((_675 - _737) + (cbMtdParam._m0[21u].x * _737)) * _582) + _737;
    float _751 = (_582 * (sqrt(1.0 - (isnan(1.0) ? _4031 : (isnan(_4031) ? 1.0 : min(_4031, 1.0)))) - _515)) + _515;
    float _762 = (((_720 - _749) + (_749 * cbMtdParam._m0[22u].z)) * _634) + _749;
    float _763 = (((_721 - _750) + (_750 * cbMtdParam._m0[22u].z)) * _634) + _750;
    float _764 = ((sqrt(1.0 - (isnan(1.0) ? _4053 : (isnan(_4053) ? 1.0 : min(_4053, 1.0)))) - _751) * _634) + _751;
    float _766 = cbMtdParam._m0[22u].x + _532.w;
    float _771 = fma(_764, _244 * NORMAL.x, fma(_763, _251 * TANGENT.x, (_237 * _229) * _762));
    float _774 = fma(_764, _244 * NORMAL.y, fma(_763, _251 * TANGENT.y, (_237 * _230) * _762));
    float _777 = fma(_764, _244 * NORMAL.z, fma(_763, _251 * TANGENT.z, (_237 * _231) * _762));
    float _781 = inversesqrt(dot(vec3(_771, _774, _777), vec3(_771, _774, _777)));
    float _782 = _781 * _771;
    float _783 = _781 * _774;
    float _784 = _781 * _777;
    float _4064 = isnan(0.0) ? _692 : (isnan(_692) ? 0.0 : max(_692, 0.0));
    float _785 = isnan(1.0) ? _4064 : (isnan(_4064) ? 1.0 : min(_4064, 1.0));
    float _4075 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _4086 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
    float _4097 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _4108 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
    float _803 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _844 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _854 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _844);
    float _855 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _844);
    float _856 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _844);
    float _860 = inversesqrt(dot(vec3(_854, _855, _856), vec3(_854, _855, _856)));
    float _861 = _854 * _860;
    float _862 = _855 * _860;
    float _863 = _856 * _860;
    float _869 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _870 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _888 = fma(_784, cbSceneParam._m0[5u].z, fma(_783, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _782));
    float _891 = fma(_784, cbSceneParam._m0[6u].z, fma(_783, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _782));
    float _894 = fma(_784, cbSceneParam._m0[7u].z, fma(_783, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _782));
    uint _908 = (_257 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _914 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4086 : (isnan(_4086) ? 1.0 : min(_4086, 1.0)))) * cbInstanceData._m0[_908].x;
    float _915 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0)))) * cbInstanceData._m0[_908].y;
    float _916 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0)))) * cbInstanceData._m0[_908].z;
    float _4119 = isnan(0.0) ? _914 : (isnan(_914) ? 0.0 : max(_914, 0.0));
    float _917 = isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0));
    float _4130 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
    float _918 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
    float _4141 = isnan(0.0) ? _916 : (isnan(_916) ? 0.0 : max(_916, 0.0));
    float _919 = isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0));
    vec4 _928 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _869, cbSceneParam._m0[86u].y * _870));
    float _932 = ((isnan(1.0) ? _4075 : (isnan(_4075) ? 1.0 : min(_4075, 1.0))) * TEXCOORD_5.w) * _928.x;
    float _933 = dot(vec3(_782, _783, _784), vec3(_861, _862, _863));
    float _936 = _933 * 2.0;
    float _940 = (_936 * _782) - _861;
    float _941 = (_936 * _783) - _862;
    float _942 = (_936 * _784) - _863;
    float _949 = abs(dot(vec3(_861, _862, _863), vec3(_782, _783, _784)));
    float _4152 = isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0));
    float _951 = sqrt(_785);
    float _964 = exp2((_951 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_951 * 3.0));
    float _996 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1000 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1004 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1305;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1030 = fma(_1004, cbModelParam._m0[26u].z, fma(_1000, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _996));
        float _1034 = fma(_1004, cbModelParam._m0[27u].z, fma(_1000, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _996));
        float _1038 = fma(_1004, cbModelParam._m0[28u].z, fma(_1000, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _996));
        float _1063 = _996 + _782;
        float _1064 = _1000 + _783;
        float _1065 = _1004 + _784;
        float _1075 = fma(_1065, cbModelParam._m0[26u].z, fma(_1064, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1063)) - _1030;
        float _1076 = fma(_1065, cbModelParam._m0[27u].z, fma(_1064, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1063)) - _1034;
        float _1077 = fma(_1065, cbModelParam._m0[28u].z, fma(_1064, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1063)) - _1038;
        float _1081 = inversesqrt(dot(vec3(_1075, _1076, _1077), vec3(_1075, _1076, _1077)));
        float _1094 = ((_1081 * _1075) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1030 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1095 = ((_1081 * _1076) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1034 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1096 = ((_1081 * _1077) / cbModelParam._m0[34u].z) + ((((((_1038 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1099 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1094, _1095, _1096), 0.0);
        float _1133 = exp2((_1099.w + (-0.5)) * 20.0) * 2.0;
        float _1134 = _1133 * (_1099.x + (-0.5));
        float _1135 = _1133 * (_1099.y + (-0.5));
        float _1136 = _1133 * (_1099.z + (-0.5));
        float _1143 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1144 = _1143 * (_1106.x + (-0.5));
        float _1145 = _1143 * (_1106.y + (-0.5));
        float _1146 = _1143 * (_1106.z + (-0.5));
        float _1153 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1154 = _1153 * (_1113.x + (-0.5));
        float _1155 = _1153 * (_1113.y + (-0.5));
        float _1156 = _1153 * (_1113.z + (-0.5));
        float _1163 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1164 = _1163 * (_1120.x + (-0.5));
        float _1165 = _1163 * (_1120.y + (-0.5));
        float _1166 = _1163 * (_1120.z + (-0.5));
        float _1167 = isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0));
        float _1168 = isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0));
        float _1169 = isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0));
        float _1170 = _1134 * 0.5;
        float _1171 = _1144 * 0.5;
        float _1172 = _1154 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1187 = (dot(vec3(_782, _783, _784), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _4178 = isnan(0.0) ? _1187 : (isnan(_1187) ? 0.0 : max(_1187, 0.0));
        float _1197 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1167 + 9.9999997473787516355514526367188e-06);
        float _4189 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _4189 : (isnan(_4189) ? 1.0 : min(_4189, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _4200 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _4200 : (isnan(_4200) ? 1.0 : min(_4200, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _4178 : (isnan(_4178) ? 1.0 : min(_4178, 1.0))) * (_1199 + 1.0))) + _1204) * _1167;
        float _1214 = _1135 * 0.5;
        float _1215 = _1145 * 0.5;
        float _1216 = _1155 * 0.5;
        float _1217 = dot(vec3(_1214, _1215, _1216), vec3(_1214, _1215, _1216));
        float _1222 = (_1217 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1217);
        float _1230 = (dot(vec3(_782, _783, _784), vec3(_1222 * _1214, _1222 * _1215, _1222 * _1216)) + 1.0) * 0.5;
        float _4211 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1239 = sqrt(((_1215 * _1215) + (_1214 * _1214)) + (_1216 * _1216)) / (_1168 + 9.9999997473787516355514526367188e-06);
        float _4222 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1240 = isnan(1.0) ? _4222 : (isnan(_4222) ? 1.0 : min(_4222, 1.0));
        float _1241 = _1240 * 2.0;
        float _1245 = (1.0 - _1240) / (_1240 + 1.0);
        float _4233 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1246 = isnan(1.0) ? _4233 : (isnan(_4233) ? 1.0 : min(_4233, 1.0));
        float _1255 = ((((1.0 - _1246) * (_1241 + 2.0)) * exp2(log2(isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * (_1241 + 1.0))) + _1246) * _1168;
        float _1256 = _1136 * 0.5;
        float _1257 = _1146 * 0.5;
        float _1258 = _1156 * 0.5;
        float _1259 = dot(vec3(_1256, _1257, _1258), vec3(_1256, _1257, _1258));
        float _1264 = (_1259 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1259);
        float _1272 = (dot(vec3(_782, _783, _784), vec3(_1264 * _1256, _1264 * _1257, _1264 * _1258)) + 1.0) * 0.5;
        float _4244 = isnan(0.0) ? _1272 : (isnan(_1272) ? 0.0 : max(_1272, 0.0));
        float _1281 = sqrt(((_1257 * _1257) + (_1256 * _1256)) + (_1258 * _1258)) / (_1169 + 9.9999997473787516355514526367188e-06);
        float _4255 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1282 = isnan(1.0) ? _4255 : (isnan(_4255) ? 1.0 : min(_4255, 1.0));
        float _1283 = _1282 * 2.0;
        float _1287 = (1.0 - _1282) / (_1282 + 1.0);
        float _4266 = isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0));
        float _1288 = isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0));
        float _1297 = ((((1.0 - _1288) * (_1283 + 2.0)) * exp2(log2(isnan(1.0) ? _4244 : (isnan(_4244) ? 1.0 : min(_4244, 1.0))) * (_1283 + 1.0))) + _1288) * _1169;
        _1305 = _1136;
        _1307 = _1135;
        _1308 = _1134;
        _1309 = _1146;
        _1310 = _1145;
        _1311 = _1144;
        _1312 = _1156;
        _1313 = _1155;
        _1314 = _1154;
        _1315 = _1169;
        _1316 = _1168;
        _1317 = _1167;
        _1318 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
        _1319 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0)));
        _1320 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1297 : (isnan(_1297) ? 0.0 : max(_1297, 0.0)));
    }
    else
    {
        _1305 = _1306;
        _1307 = _1306;
        _1308 = _1306;
        _1309 = _1306;
        _1310 = _1306;
        _1311 = _1306;
        _1312 = _1306;
        _1313 = _1306;
        _1314 = _1306;
        _1315 = _1306;
        _1316 = _1306;
        _1317 = _1306;
        _1318 = 0.0;
        _1319 = 0.0;
        _1320 = 0.0;
    }
    float _1613;
    float _1614;
    float _1615;
    float _1616;
    float _1617;
    float _1618;
    float _1619;
    float _1620;
    float _1621;
    float _1622;
    float _1623;
    float _1624;
    float _1625;
    float _1626;
    float _1627;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1344 = fma(_1004, cbModelParam._m0[30u].z, fma(_1000, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _996));
        float _1348 = fma(_1004, cbModelParam._m0[31u].z, fma(_1000, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _996));
        float _1352 = fma(_1004, cbModelParam._m0[32u].z, fma(_1000, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _996));
        float _1375 = _996 + _782;
        float _1376 = _1000 + _783;
        float _1377 = _1004 + _784;
        float _1387 = fma(_1377, cbModelParam._m0[30u].z, fma(_1376, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1375)) - _1344;
        float _1388 = fma(_1377, cbModelParam._m0[31u].z, fma(_1376, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1375)) - _1348;
        float _1389 = fma(_1377, cbModelParam._m0[32u].z, fma(_1376, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1375)) - _1352;
        float _1393 = inversesqrt(dot(vec3(_1387, _1388, _1389), vec3(_1387, _1388, _1389)));
        float _1406 = ((_1393 * _1387) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1344 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1407 = ((_1393 * _1388) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1348 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1408 = ((_1393 * _1389) / cbModelParam._m0[35u].z) + ((((((_1352 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1410 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1417 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1424 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        vec4 _1431 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1406, _1407, _1408), 0.0);
        float _1443 = exp2((_1410.w + (-0.5)) * 20.0) * 2.0;
        float _1444 = _1443 * (_1410.x + (-0.5));
        float _1445 = _1443 * (_1410.y + (-0.5));
        float _1446 = _1443 * (_1410.z + (-0.5));
        float _1453 = exp2((_1417.w + (-0.5)) * 20.0) * 2.0;
        float _1454 = _1453 * (_1417.x + (-0.5));
        float _1455 = _1453 * (_1417.y + (-0.5));
        float _1456 = _1453 * (_1417.z + (-0.5));
        float _1463 = exp2((_1424.w + (-0.5)) * 20.0) * 2.0;
        float _1464 = _1463 * (_1424.x + (-0.5));
        float _1465 = _1463 * (_1424.y + (-0.5));
        float _1466 = _1463 * (_1424.z + (-0.5));
        float _1473 = exp2((_1431.w + (-0.5)) * 20.0) * 2.0;
        float _1474 = _1473 * (_1431.x + (-0.5));
        float _1475 = _1473 * (_1431.y + (-0.5));
        float _1476 = _1473 * (_1431.z + (-0.5));
        float _1477 = isnan(0.0) ? _1474 : (isnan(_1474) ? 0.0 : max(_1474, 0.0));
        float _1478 = isnan(0.0) ? _1475 : (isnan(_1475) ? 0.0 : max(_1475, 0.0));
        float _1479 = isnan(0.0) ? _1476 : (isnan(_1476) ? 0.0 : max(_1476, 0.0));
        float _1480 = _1444 * 0.5;
        float _1481 = _1454 * 0.5;
        float _1482 = _1464 * 0.5;
        float _1483 = dot(vec3(_1480, _1481, _1482), vec3(_1480, _1481, _1482));
        float _1488 = (_1483 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1483);
        float _1496 = (dot(vec3(_782, _783, _784), vec3(_1488 * _1480, _1488 * _1481, _1488 * _1482)) + 1.0) * 0.5;
        float _4307 = isnan(0.0) ? _1496 : (isnan(_1496) ? 0.0 : max(_1496, 0.0));
        float _1505 = sqrt(((_1481 * _1481) + (_1480 * _1480)) + (_1482 * _1482)) / (_1477 + 9.9999997473787516355514526367188e-06);
        float _4318 = isnan(0.0) ? _1505 : (isnan(_1505) ? 0.0 : max(_1505, 0.0));
        float _1506 = isnan(1.0) ? _4318 : (isnan(_4318) ? 1.0 : min(_4318, 1.0));
        float _1507 = _1506 * 2.0;
        float _1511 = (1.0 - _1506) / (_1506 + 1.0);
        float _4329 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1512 = isnan(1.0) ? _4329 : (isnan(_4329) ? 1.0 : min(_4329, 1.0));
        float _1521 = ((((1.0 - _1512) * (_1507 + 2.0)) * exp2(log2(isnan(1.0) ? _4307 : (isnan(_4307) ? 1.0 : min(_4307, 1.0))) * (_1507 + 1.0))) + _1512) * _1477;
        float _1522 = _1445 * 0.5;
        float _1523 = _1455 * 0.5;
        float _1524 = _1465 * 0.5;
        float _1525 = dot(vec3(_1522, _1523, _1524), vec3(_1522, _1523, _1524));
        float _1530 = (_1525 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1525);
        float _1538 = (dot(vec3(_782, _783, _784), vec3(_1530 * _1522, _1530 * _1523, _1530 * _1524)) + 1.0) * 0.5;
        float _4340 = isnan(0.0) ? _1538 : (isnan(_1538) ? 0.0 : max(_1538, 0.0));
        float _1547 = sqrt(((_1523 * _1523) + (_1522 * _1522)) + (_1524 * _1524)) / (_1478 + 9.9999997473787516355514526367188e-06);
        float _4351 = isnan(0.0) ? _1547 : (isnan(_1547) ? 0.0 : max(_1547, 0.0));
        float _1548 = isnan(1.0) ? _4351 : (isnan(_4351) ? 1.0 : min(_4351, 1.0));
        float _1549 = _1548 * 2.0;
        float _1553 = (1.0 - _1548) / (_1548 + 1.0);
        float _4362 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1554 = isnan(1.0) ? _4362 : (isnan(_4362) ? 1.0 : min(_4362, 1.0));
        float _1563 = ((((1.0 - _1554) * (_1549 + 2.0)) * exp2(log2(isnan(1.0) ? _4340 : (isnan(_4340) ? 1.0 : min(_4340, 1.0))) * (_1549 + 1.0))) + _1554) * _1478;
        float _1564 = _1446 * 0.5;
        float _1565 = _1456 * 0.5;
        float _1566 = _1466 * 0.5;
        float _1567 = dot(vec3(_1564, _1565, _1566), vec3(_1564, _1565, _1566));
        float _1572 = (_1567 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1567);
        float _1580 = (dot(vec3(_782, _783, _784), vec3(_1572 * _1564, _1572 * _1565, _1572 * _1566)) + 1.0) * 0.5;
        float _4373 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
        float _1589 = sqrt(((_1565 * _1565) + (_1564 * _1564)) + (_1566 * _1566)) / (_1479 + 9.9999997473787516355514526367188e-06);
        float _4384 = isnan(0.0) ? _1589 : (isnan(_1589) ? 0.0 : max(_1589, 0.0));
        float _1590 = isnan(1.0) ? _4384 : (isnan(_4384) ? 1.0 : min(_4384, 1.0));
        float _1591 = _1590 * 2.0;
        float _1595 = (1.0 - _1590) / (_1590 + 1.0);
        float _4395 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1596 = isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0));
        float _1605 = ((((1.0 - _1596) * (_1591 + 2.0)) * exp2(log2(isnan(1.0) ? _4373 : (isnan(_4373) ? 1.0 : min(_4373, 1.0))) * (_1591 + 1.0))) + _1596) * _1479;
        _1613 = _1446;
        _1614 = _1445;
        _1615 = _1444;
        _1616 = _1456;
        _1617 = _1455;
        _1618 = _1454;
        _1619 = _1466;
        _1620 = _1465;
        _1621 = _1464;
        _1622 = _1479;
        _1623 = _1478;
        _1624 = _1477;
        _1625 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1521 : (isnan(_1521) ? 0.0 : max(_1521, 0.0)));
        _1626 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0)));
        _1627 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0)));
    }
    else
    {
        _1613 = _1306;
        _1614 = _1306;
        _1615 = _1306;
        _1616 = _1306;
        _1617 = _1306;
        _1618 = _1306;
        _1619 = _1306;
        _1620 = _1306;
        _1621 = _1306;
        _1622 = _1306;
        _1623 = _1306;
        _1624 = _1306;
        _1625 = 0.0;
        _1626 = 0.0;
        _1627 = 0.0;
    }
    float _1637 = (cbModelParam._m0[1u].x * (_1625 - _1318)) + _1318;
    float _1638 = (cbModelParam._m0[1u].x * (_1626 - _1319)) + _1319;
    float _1639 = (cbModelParam._m0[1u].x * (_1627 - _1320)) + _1320;
    float _1660 = fma(_1639, cbSceneParam._m0[89u].z, fma(_1638, cbSceneParam._m0[89u].y, _1637 * cbSceneParam._m0[89u].x));
    float _1663 = fma(_1639, cbSceneParam._m0[90u].z, fma(_1638, cbSceneParam._m0[90u].y, _1637 * cbSceneParam._m0[90u].x));
    float _1666 = fma(_1639, cbSceneParam._m0[91u].z, fma(_1638, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1637));
    float _1681 = _940 * 0.5;
    float _1682 = _941 * 0.5;
    float _1683 = _942 * 0.5;
    float _1684 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1615, _1618, _1621, _1624));
    float _1687 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1614, _1617, _1620, _1623));
    float _1690 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1613, _1616, _1619, _1622));
    float _1724;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1697 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1305, _1309, _1312, _1315));
        float _1701 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1307, _1310, _1313, _1316));
        float _1705 = dot(vec4(_1681, _1682, _1683, 1.0), vec4(_1308, _1311, _1314, _1317));
        float _1712 = dot(vec4(cbModelParam._m0[39u]), vec4(_1681, _1682, _1683, 1.0));
        _1724 = dot(vec3(isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0)), isnan(0.0) ? _1701 : (isnan(_1701) ? 0.0 : max(_1701, 0.0)), isnan(0.0) ? _1697 : (isnan(_1697) ? 0.0 : max(_1697, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1712) ? 0.0 : (isnan(0.0) ? _1712 : max(0.0, _1712))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1724 = 1.0;
    }
    float _1735;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1726 = dot(vec4(cbModelParam._m0[40u]), vec4(_1681, _1682, _1683, 1.0));
        _1735 = dot(vec3(isnan(0.0) ? _1684 : (isnan(_1684) ? 0.0 : max(_1684, 0.0)), isnan(0.0) ? _1687 : (isnan(_1687) ? 0.0 : max(_1687, 0.0)), isnan(0.0) ? _1690 : (isnan(_1690) ? 0.0 : max(_1690, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1726) ? 0.0 : (isnan(0.0) ? _1726 : max(0.0, _1726))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1735 = 1.0;
    }
    float _1739 = (_1735 * cbModelParam._m0[1u].x) + (_1724 * (1.0 - cbModelParam._m0[1u].x));
    float _1749 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _785);
    float _1750 = isnan(_1749) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1749 : min(cbModelParam._m0[25u].z, _1749));
    float _1830;
    float _1832;
    float _1834;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1797 = fma(_1004, cbModelParam._m0[13u].z, fma(_1000, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _996)) + cbModelParam._m0[13u].w;
        float _1801 = fma(_1004, cbModelParam._m0[14u].z, fma(_1000, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _996)) + cbModelParam._m0[14u].w;
        float _1805 = fma(_1004, cbModelParam._m0[15u].z, fma(_1000, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _996)) + cbModelParam._m0[15u].w;
        float _1808 = fma(_942, cbModelParam._m0[13u].z, fma(_941, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _940));
        float _1811 = fma(_942, cbModelParam._m0[14u].z, fma(_941, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _940));
        float _1814 = fma(_942, cbModelParam._m0[15u].z, fma(_941, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _940));
        float _1842;
        if (_1808 > 0.0)
        {
            _1842 = abs((1.0 - _1797) / _1808);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1808 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1797 + 1.0) / _1808);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1842 = frontier_phi_14_12_ladder;
        }
        float _2068;
        if (_1811 > 0.0)
        {
            _2068 = abs((1.0 - _1801) / _1811);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1811 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1801 + 1.0) / _1811);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2068 = frontier_phi_23_19_ladder;
        }
        float _2365;
        if (_1814 > 0.0)
        {
            _2365 = abs((1.0 - _1805) / _1814);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1814 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1805 + 1.0) / _1814);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2365 = frontier_phi_35_30_ladder;
        }
        float _2367 = isnan(_2068) ? _1842 : (isnan(_1842) ? _2068 : min(_1842, _2068));
        float _2368 = isnan(_2365) ? _2367 : (isnan(_2367) ? _2365 : min(_2367, _2365));
        float _2372 = (_2368 * _1808) + _1797;
        float _2373 = (_2368 * _1811) + _1801;
        float _2374 = (_2368 * _1814) + _1805;
        float _2375 = _2368 * 9.9999997473787516355514526367188e-05;
        float _2377 = (-1.0) - _2375;
        float _2379 = _2375 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2374 > _2379) || ((_2374 < _2377) || ((_2373 > _2379) || ((_2373 < _2377) || ((_2372 < _2377) || (_2372 > _2379))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2519 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2374, cbModelParam._m0[9u].z, fma(_2373, cbModelParam._m0[9u].y, _2372 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2374, cbModelParam._m0[10u].z, fma(_2373, cbModelParam._m0[10u].y, _2372 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2374, cbModelParam._m0[11u].z, fma(_2373, cbModelParam._m0[11u].y, _2372 * cbModelParam._m0[11u].x))), _1750);
            frontier_phi_13_35_ladder = _2519.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2519.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2519.x * cbModelParam._m0[1u].y;
        }
        _1830 = frontier_phi_13_35_ladder_2;
        _1832 = frontier_phi_13_35_ladder_1;
        _1834 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1818 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_940, _941, _942), _1750);
        _1830 = _1818.x * cbModelParam._m0[1u].y;
        _1832 = _1818.y * cbModelParam._m0[1u].y;
        _1834 = _1818.z * cbModelParam._m0[1u].y;
    }
    float _1838 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _785);
    float _1839 = isnan(_1838) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1838 : min(cbModelParam._m0[25u].w, _1838));
    float _1928;
    float _1930;
    float _1932;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1892 = fma(_1004, cbModelParam._m0[21u].z, fma(_1000, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _996)) + cbModelParam._m0[21u].w;
        float _1896 = fma(_1004, cbModelParam._m0[22u].z, fma(_1000, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _996)) + cbModelParam._m0[22u].w;
        float _1900 = fma(_1004, cbModelParam._m0[23u].z, fma(_1000, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _996)) + cbModelParam._m0[23u].w;
        float _1903 = fma(_942, cbModelParam._m0[21u].z, fma(_941, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _940));
        float _1906 = fma(_942, cbModelParam._m0[22u].z, fma(_941, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _940));
        float _1909 = fma(_942, cbModelParam._m0[23u].z, fma(_941, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _940));
        float _2073;
        if (_1903 > 0.0)
        {
            _2073 = abs((1.0 - _1892) / _1903);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1903 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1892 + 1.0) / _1903);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2073 = frontier_phi_25_21_ladder;
        }
        float _2392;
        if (_1906 > 0.0)
        {
            _2392 = abs((1.0 - _1896) / _1906);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1906 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1896 + 1.0) / _1906);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2392 = frontier_phi_37_32_ladder;
        }
        float _2719;
        if (_1909 > 0.0)
        {
            _2719 = abs((1.0 - _1900) / _1909);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1909 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1900 + 1.0) / _1909);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2719 = frontier_phi_47_44_ladder;
        }
        float _2721 = isnan(_2392) ? _2073 : (isnan(_2073) ? _2392 : min(_2073, _2392));
        float _2722 = isnan(_2719) ? _2721 : (isnan(_2721) ? _2719 : min(_2721, _2719));
        float _2726 = (_2722 * _1903) + _1892;
        float _2727 = (_2722 * _1906) + _1896;
        float _2728 = (_2722 * _1909) + _1900;
        float _2729 = _2722 * 9.9999997473787516355514526367188e-05;
        float _2730 = (-1.0) - _2729;
        float _2732 = _2729 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2728 > _2732) || ((_2728 < _2730) || ((_2727 > _2732) || ((_2727 < _2730) || ((_2726 < _2730) || (_2726 > _2732))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2846 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2728, cbModelParam._m0[17u].z, fma(_2727, cbModelParam._m0[17u].y, _2726 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2728, cbModelParam._m0[18u].z, fma(_2727, cbModelParam._m0[18u].y, _2726 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2728, cbModelParam._m0[19u].z, fma(_2727, cbModelParam._m0[19u].y, _2726 * cbModelParam._m0[19u].x))), _1839);
            frontier_phi_22_47_ladder = _2846.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2846.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2846.x * cbModelParam._m0[1u].z;
        }
        _1928 = frontier_phi_22_47_ladder_2;
        _1930 = frontier_phi_22_47_ladder_1;
        _1932 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1912 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_940, _941, _942), _1839);
        _1928 = _1912.x * cbModelParam._m0[1u].z;
        _1930 = _1912.y * cbModelParam._m0[1u].z;
        _1932 = _1912.z * cbModelParam._m0[1u].z;
    }
    float _1944 = ((((1.0 - _964) * ((_951 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_964 * _951)) * _932;
    float _1945 = _1944 * ((cbModelParam._m0[1u].w * (_1928 - _1830)) + _1830);
    float _1946 = _1944 * ((cbModelParam._m0[1u].w * (_1930 - _1832)) + _1832);
    float _1947 = _1944 * ((cbModelParam._m0[1u].w * (_1932 - _1834)) + _1834);
    float _1950 = fma(_1947, cbSceneParam._m0[89u].z, fma(_1946, cbSceneParam._m0[89u].y, _1945 * cbSceneParam._m0[89u].x));
    float _1953 = fma(_1947, cbSceneParam._m0[90u].z, fma(_1946, cbSceneParam._m0[90u].y, _1945 * cbSceneParam._m0[90u].x));
    float _1956 = fma(_1947, cbSceneParam._m0[91u].z, fma(_1946, cbSceneParam._m0[91u].y, _1945 * cbSceneParam._m0[91u].x));
    float _1967 = _869 / cbSceneParam._m0[86u].x;
    float _1968 = _870 / cbSceneParam._m0[86u].y;
    float _1975 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4521 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0));
    float _1977 = (isnan(1.0) ? _4521 : (isnan(_4521) ? 1.0 : min(_4521, 1.0))) * 5.0;
    float _1982 = ((10.0 / (_803 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_782, _783, _784), vec3(1.0, 0.0, 0.0));
    vec4 _1992 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1982 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1982 + _1967) * cbSceneParam._m0[86u].x, _870), _1977).w) + _1967) * cbSceneParam._m0[86u].x, _870), _1977);
    float _1998 = isnan(0.5) ? _1992.w : (isnan(_1992.w) ? 0.5 : max(_1992.w, 0.5));
    float _2013 = 1.0 - (_1992.w / _1998);
    float _2047 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2051 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2055 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2059 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2060 = _2047 / _2059;
    float _2061 = _2051 / _2059;
    float _2062 = _2055 / _2059;
    float _2208;
    float _2209;
    float _2210;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2089 = ((uint(_2062 > cbSceneParam._m0[59u].y) + uint(_2062 > cbSceneParam._m0[59u].x)) + uint(_2062 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2090 = _2089 + 43u;
        uint _2098 = _2089 + 44u;
        uint _2106 = _2089 + 45u;
        uint _2114 = _2089 + 46u;
        float _2125 = fma(_2059, cbSceneParam._m0[_2090].w, fma(_2055, cbSceneParam._m0[_2090].z, fma(_2051, cbSceneParam._m0[_2090].y, _2047 * cbSceneParam._m0[_2090].x)));
        float _2129 = fma(_2059, cbSceneParam._m0[_2098].w, fma(_2055, cbSceneParam._m0[_2098].z, fma(_2051, cbSceneParam._m0[_2098].y, _2047 * cbSceneParam._m0[_2098].x)));
        float _2137 = fma(_2059, cbSceneParam._m0[_2114].w, fma(_2055, cbSceneParam._m0[_2114].z, fma(_2051, cbSceneParam._m0[_2114].y, _2047 * cbSceneParam._m0[_2114].x)));
        float _2141 = cbSceneParam._m0[33u].z * _2137;
        float _2143 = cbSceneParam._m0[33u].w * _2137;
        float _2146 = fma(_2059, cbSceneParam._m0[_2106].w, fma(_2055, cbSceneParam._m0[_2106].z, fma(_2051, cbSceneParam._m0[_2106].y, _2047 * cbSceneParam._m0[_2106].x))) / _2137;
        float _2194 = (cbSceneParam._m0[33u].x - sqrt(((_2061 * _2061) + (_2060 * _2060)) + (_2062 * _2062))) * cbSceneParam._m0[33u].y;
        float _4537 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
        float _2201 = (isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2141 + _2125) / _2137, (_2143 + _2129) / _2137), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2143 + _2125) / _2137, (_2129 - _2141) / _2137), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2125 - _2141) / _2137, (_2129 - _2143) / _2137), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2125 - _2143) / _2137, (_2141 + _2129) / _2137), _2146), 0.0)).x), vec4(0.25)));
        _2208 = 1.0 - (_2201 * cbSceneParam._m0[34u].x);
        _2209 = 1.0 - (_2201 * cbSceneParam._m0[34u].y);
        _2210 = 1.0 - (_2201 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2208 = 1.0;
        _2209 = 1.0;
        _2210 = 1.0;
    }
    float _2274;
    float _2276;
    float _2278;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2262 = fma(_2059, cbSceneParam._m0[63u].w, fma(_2055, cbSceneParam._m0[63u].z, fma(_2051, cbSceneParam._m0[63u].y, _2047 * cbSceneParam._m0[63u].x)));
        float _2263 = fma(_2059, cbSceneParam._m0[60u].w, fma(_2055, cbSceneParam._m0[60u].z, fma(_2051, cbSceneParam._m0[60u].y, _2047 * cbSceneParam._m0[60u].x))) / _2262;
        float _2264 = fma(_2059, cbSceneParam._m0[61u].w, fma(_2055, cbSceneParam._m0[61u].z, fma(_2051, cbSceneParam._m0[61u].y, _2047 * cbSceneParam._m0[61u].x))) / _2262;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2263 >= cbSceneParam._m0[64u].x) && (_2264 >= cbSceneParam._m0[64u].y)) && (_2263 <= cbSceneParam._m0[64u].z)) && (_2264 <= cbSceneParam._m0[64u].w))
        {
            float _2405 = fma(_2059, cbSceneParam._m0[62u].w, fma(_2055, cbSceneParam._m0[62u].z, fma(_2051, cbSceneParam._m0[62u].y, _2047 * cbSceneParam._m0[62u].x))) / _2262;
            float _2409 = isnan(cbSceneParam._m0[41u].w) ? _2405 : (isnan(_2405) ? cbSceneParam._m0[41u].w : max(_2405, cbSceneParam._m0[41u].w));
            float _2452 = (cbSceneParam._m0[33u].x - sqrt(((_2061 * _2061) + (_2060 * _2060)) + (_2062 * _2062))) * cbSceneParam._m0[33u].y;
            float _4553 = isnan(0.0) ? _2452 : (isnan(_2452) ? 0.0 : max(_2452, 0.0));
            float _2459 = (isnan(1.0) ? _4553 : (isnan(_4553) ? 1.0 : min(_4553, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2263, cbSceneParam._m0[33u].w + _2264), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2263, _2264 - cbSceneParam._m0[33u].z), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2263 - cbSceneParam._m0[33u].z, _2264 - cbSceneParam._m0[33u].w), _2409), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2263 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2264), _2409), 0.0)).x), vec4(0.25)));
            float _2463 = 1.0 - (_2459 * cbSceneParam._m0[34u].x);
            float _2464 = 1.0 - (_2459 * cbSceneParam._m0[34u].y);
            float _2465 = 1.0 - (_2459 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2465) ? _2210 : (isnan(_2210) ? _2465 : min(_2210, _2465));
            frontier_phi_34_33_ladder_1 = isnan(_2464) ? _2209 : (isnan(_2209) ? _2464 : min(_2209, _2464));
            frontier_phi_34_33_ladder_2 = isnan(_2463) ? _2208 : (isnan(_2208) ? _2463 : min(_2208, _2463));
        }
        else
        {
            frontier_phi_34_33_ladder = _2210;
            frontier_phi_34_33_ladder_1 = _2209;
            frontier_phi_34_33_ladder_2 = _2208;
        }
        _2274 = frontier_phi_34_33_ladder_2;
        _2276 = frontier_phi_34_33_ladder_1;
        _2278 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2274 = _2208;
        _2276 = _2209;
        _2278 = _2210;
    }
    float _4579 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
    float _2280 = isnan(1.0) ? _4579 : (isnan(_4579) ? 1.0 : min(_4579, 1.0));
    float _4590 = isnan(0.0) ? _2276 : (isnan(_2276) ? 0.0 : max(_2276, 0.0));
    float _2281 = isnan(1.0) ? _4590 : (isnan(_4590) ? 1.0 : min(_4590, 1.0));
    float _4601 = isnan(0.0) ? _2278 : (isnan(_2278) ? 0.0 : max(_2278, 0.0));
    float _2282 = isnan(1.0) ? _4601 : (isnan(_4601) ? 1.0 : min(_4601, 1.0));
    uvec4 _2286 = floatBitsToUint(cbInstanceData._m0[_257 + 5u]);
    uint _2288 = _2286.x * 14u;
    uint _2289 = _2288 + 13u;
    float _2296 = _932 + (-1.0);
    float _2301 = (cbLight._m0[_2289].x * _2296) + 1.0;
    float _2302 = (cbLight._m0[_2289].y * _2296) + 1.0;
    float _2303 = (cbLight._m0[_2289].z * _2296) + 1.0;
    float _2304 = (cbLight._m0[_2289].w * _2296) + 1.0;
    uint _2305 = _2288 + 5u;
    float _2311 = isnan(1.0) ? _2302 : (isnan(_2302) ? 1.0 : min(_2302, 1.0));
    uint _2315 = _2288 + 4u;
    float _2324 = isnan(1.0) ? _2301 : (isnan(_2301) ? 1.0 : min(_2301, 1.0));
    uint _2328 = _2288 | 1u;
    float _2339 = dot(vec3(cbLight._m0[_2288].xyz), vec3(_782, _783, _784));
    float _2342 = dot(vec3(cbLight._m0[_2328].xyz), vec3(_782, _783, _784));
    float _4622 = isnan(0.0) ? _2339 : (isnan(_2339) ? 0.0 : max(_2339, 0.0));
    float _4633 = isnan(0.0) ? _2342 : (isnan(_2342) ? 0.0 : max(_2342, 0.0));
    float _2347 = (isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0))) * 0.3183098733425140380859375;
    float _2349 = (isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0))) * 0.3183098733425140380859375;
    float _2356 = ((cbLight._m0[_2305].x * _2311) * _2349) + (((cbLight._m0[_2315].x * _2280) * _2324) * _2347);
    float _2357 = ((_2311 * cbLight._m0[_2305].y) * _2349) + (((cbLight._m0[_2315].y * _2281) * _2324) * _2347);
    float _2358 = ((_2311 * cbLight._m0[_2305].z) * _2349) + (((cbLight._m0[_2315].z * _2282) * _2324) * _2347);
    uvec4 _2362 = floatBitsToUint(cbLight._m0[_2288 + 12u]);
    bool _2364 = _2362.x == 0u;
    float _2466;
    float _2468;
    float _2470;
    if (_2364)
    {
        _2466 = _2356;
        _2468 = _2357;
        _2470 = _2358;
    }
    else
    {
        uint _2474 = _2288 + 6u;
        float _2490 = (dot(vec3(cbLight._m0[_2288 + 2u].xyz), vec3(_782, _783, _784)) * 0.5) + 0.5;
        float _2491 = _2490 * _2490;
        float _4644 = isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0));
        float _2492 = isnan(1.0) ? _4644 : (isnan(_4644) ? 1.0 : min(_4644, 1.0));
        float _2493 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
        _2466 = (((cbLight._m0[_2474].x * 0.3183098733425140380859375) * _2492) * _2493) + _2356;
        _2468 = (((cbLight._m0[_2474].y * 0.3183098733425140380859375) * _2492) * _2493) + _2357;
        _2470 = (((cbLight._m0[_2474].z * 0.3183098733425140380859375) * _2492) * _2493) + _2358;
    }
    bool _2473 = _2362.y == 0u;
    float _2528;
    float _2530;
    float _2532;
    if (_2473)
    {
        _2528 = _2466;
        _2530 = _2468;
        _2532 = _2470;
    }
    else
    {
        uint _2690 = _2288 + 7u;
        float _2706 = (dot(vec3(cbLight._m0[_2288 + 3u].xyz), vec3(_782, _783, _784)) * 0.5) + 0.5;
        float _2707 = _2706 * _2706;
        float _4660 = isnan(0.0) ? _2707 : (isnan(_2707) ? 0.0 : max(_2707, 0.0));
        float _2708 = isnan(1.0) ? _4660 : (isnan(_4660) ? 1.0 : min(_4660, 1.0));
        float _2709 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2528 = (((cbLight._m0[_2690].x * 0.3183098733425140380859375) * _2708) * _2709) + _2466;
        _2530 = (((cbLight._m0[_2690].y * 0.3183098733425140380859375) * _2708) * _2709) + _2468;
        _2532 = (((cbLight._m0[_2690].z * 0.3183098733425140380859375) * _2708) * _2709) + _2470;
    }
    uint _2535 = _2288 + 8u;
    float _2548 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2288].w)) * _785) * 0.949999988079071044921875);
    float _2549 = _2548 * _2548;
    float _2550 = cbLight._m0[_2288].x + _861;
    float _2551 = cbLight._m0[_2288].y + _862;
    float _2552 = cbLight._m0[_2288].z + _863;
    float _2556 = inversesqrt(dot(vec3(_2550, _2551, _2552), vec3(_2550, _2551, _2552)));
    float _2557 = _2556 * _2550;
    float _2558 = _2556 * _2551;
    float _2559 = _2556 * _2552;
    float _2560 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2288].xyz));
    float _4676 = isnan(0.0) ? _2560 : (isnan(_2560) ? 0.0 : max(_2560, 0.0));
    float _2563 = isnan(1.0) ? _4676 : (isnan(_4676) ? 1.0 : min(_4676, 1.0));
    float _4687 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
    float _2564 = isnan(1.0) ? _4687 : (isnan(_4687) ? 1.0 : min(_4687, 1.0));
    float _2565 = dot(vec3(_782, _783, _784), vec3(_2557, _2558, _2559));
    float _4698 = isnan(0.0) ? _2565 : (isnan(_2565) ? 0.0 : max(_2565, 0.0));
    float _2568 = isnan(1.0) ? _4698 : (isnan(_4698) ? 1.0 : min(_4698, 1.0));
    float _2569 = dot(vec3(cbLight._m0[_2288].xyz), vec3(_2557, _2558, _2559));
    float _4709 = isnan(0.0) ? _2569 : (isnan(_2569) ? 0.0 : max(_2569, 0.0));
    float _2573 = _2549 * _2549;
    float _2577 = ((_2568 * _2568) * (_2573 + (-1.0))) + 1.0;
    float _2588 = (exp2(log2(1.0 - (isnan(1.0) ? _4709 : (isnan(_4709) ? 1.0 : min(_4709, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2589 = 1.0 - _2549;
    float _2600 = (0.5 / (((_2564 * ((_2563 * _2589) + _2549)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2589) + _2549) * _2563))) * _2563;
    float _4720 = isnan(0.0) ? _2600 : (isnan(_2600) ? 0.0 : max(_2600, 0.0));
    float _2602 = (isnan(1.0) ? _4720 : (isnan(_4720) ? 1.0 : min(_4720, 1.0))) * (_2573 / ((_2577 * _2577) * 3.141590118408203125));
    uint _2616 = _2288 + 9u;
    float _2627 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2328].w)) * _785) * 0.949999988079071044921875);
    float _2628 = _2627 * _2627;
    float _2629 = cbLight._m0[_2328].x + _861;
    float _2630 = cbLight._m0[_2328].y + _862;
    float _2631 = cbLight._m0[_2328].z + _863;
    float _2635 = inversesqrt(dot(vec3(_2629, _2630, _2631), vec3(_2629, _2630, _2631)));
    float _2636 = _2635 * _2629;
    float _2637 = _2635 * _2630;
    float _2638 = _2635 * _2631;
    float _2639 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2328].xyz));
    float _4731 = isnan(0.0) ? _2639 : (isnan(_2639) ? 0.0 : max(_2639, 0.0));
    float _2642 = isnan(1.0) ? _4731 : (isnan(_4731) ? 1.0 : min(_4731, 1.0));
    float _2643 = dot(vec3(_782, _783, _784), vec3(_2636, _2637, _2638));
    float _4742 = isnan(0.0) ? _2643 : (isnan(_2643) ? 0.0 : max(_2643, 0.0));
    float _2646 = isnan(1.0) ? _4742 : (isnan(_4742) ? 1.0 : min(_4742, 1.0));
    float _2647 = dot(vec3(cbLight._m0[_2328].xyz), vec3(_2636, _2637, _2638));
    float _4753 = isnan(0.0) ? _2647 : (isnan(_2647) ? 0.0 : max(_2647, 0.0));
    float _2651 = _2628 * _2628;
    float _2655 = ((_2646 * _2646) * (_2651 + (-1.0))) + 1.0;
    float _2664 = (exp2(log2(1.0 - (isnan(1.0) ? _4753 : (isnan(_4753) ? 1.0 : min(_4753, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2665 = 1.0 - _2628;
    float _2675 = (0.5 / (((_2564 * ((_2642 * _2665) + _2628)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2665) + _2628) * _2642))) * _2642;
    float _4764 = isnan(0.0) ? _2675 : (isnan(_2675) ? 0.0 : max(_2675, 0.0));
    float _2677 = (isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0))) * (_2651 / ((_2655 * _2655) * 3.141590118408203125));
    float _2687 = (((_2664 * cbLight._m0[_2616].x) * _2677) * _2311) + ((((cbLight._m0[_2535].x * _2280) * _2588) * _2602) * _2324);
    float _2688 = (((_2664 * cbLight._m0[_2616].y) * _2677) * _2311) + ((((cbLight._m0[_2535].y * _2281) * _2588) * _2602) * _2324);
    float _2689 = (((_2664 * cbLight._m0[_2616].z) * _2677) * _2311) + ((((cbLight._m0[_2535].z * _2282) * _2588) * _2602) * _2324);
    float _2745;
    float _2747;
    float _2749;
    if (_2364)
    {
        _2745 = _2687;
        _2747 = _2688;
        _2749 = _2689;
    }
    else
    {
        uint _2751 = _2288 + 2u;
        uint _2755 = _2288 + 10u;
        float _2769 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2751].w)) * _785) * 0.949999988079071044921875);
        float _2770 = _2769 * _2769;
        float _2771 = cbLight._m0[_2751].x + _861;
        float _2772 = cbLight._m0[_2751].y + _862;
        float _2773 = cbLight._m0[_2751].z + _863;
        float _2777 = inversesqrt(dot(vec3(_2771, _2772, _2773), vec3(_2771, _2772, _2773)));
        float _2778 = _2777 * _2771;
        float _2779 = _2777 * _2772;
        float _2780 = _2777 * _2773;
        float _2781 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2751].xyz));
        float _4775 = isnan(0.0) ? _2781 : (isnan(_2781) ? 0.0 : max(_2781, 0.0));
        float _2784 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
        float _2785 = dot(vec3(_782, _783, _784), vec3(_2778, _2779, _2780));
        float _4786 = isnan(0.0) ? _2785 : (isnan(_2785) ? 0.0 : max(_2785, 0.0));
        float _2788 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
        float _2789 = dot(vec3(cbLight._m0[_2751].xyz), vec3(_2778, _2779, _2780));
        float _4797 = isnan(0.0) ? _2789 : (isnan(_2789) ? 0.0 : max(_2789, 0.0));
        float _2793 = _2770 * _2770;
        float _2797 = ((_2788 * _2788) * (_2793 + (-1.0))) + 1.0;
        float _2806 = (exp2(log2(1.0 - (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2807 = 1.0 - _2770;
        float _2817 = (0.5 / (((_2564 * ((_2784 * _2807) + _2770)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2807) + _2770) * _2784))) * _2784;
        float _4808 = isnan(0.0) ? _2817 : (isnan(_2817) ? 0.0 : max(_2817, 0.0));
        float _2819 = (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0))) * (_2793 / ((_2797 * _2797) * 3.141590118408203125));
        float _2820 = isnan(1.0) ? _2303 : (isnan(_2303) ? 1.0 : min(_2303, 1.0));
        _2745 = (((_2806 * cbLight._m0[_2755].x) * _2819) * _2820) + _2687;
        _2747 = (((_2806 * cbLight._m0[_2755].y) * _2819) * _2820) + _2688;
        _2749 = (((_2806 * cbLight._m0[_2755].z) * _2819) * _2820) + _2689;
    }
    float _2851;
    float _2853;
    float _2855;
    if (_2473)
    {
        _2851 = _2745;
        _2853 = _2747;
        _2855 = _2749;
    }
    else
    {
        uint _2862 = _2288 + 3u;
        uint _2866 = _2288 + 11u;
        float _2880 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2862].w)) * _785) * 0.949999988079071044921875);
        float _2881 = _2880 * _2880;
        float _2882 = cbLight._m0[_2862].x + _861;
        float _2883 = cbLight._m0[_2862].y + _862;
        float _2884 = cbLight._m0[_2862].z + _863;
        float _2888 = inversesqrt(dot(vec3(_2882, _2883, _2884), vec3(_2882, _2883, _2884)));
        float _2889 = _2888 * _2882;
        float _2890 = _2888 * _2883;
        float _2891 = _2888 * _2884;
        float _2892 = dot(vec3(_782, _783, _784), vec3(cbLight._m0[_2862].xyz));
        float _4824 = isnan(0.0) ? _2892 : (isnan(_2892) ? 0.0 : max(_2892, 0.0));
        float _2895 = isnan(1.0) ? _4824 : (isnan(_4824) ? 1.0 : min(_4824, 1.0));
        float _2896 = dot(vec3(_782, _783, _784), vec3(_2889, _2890, _2891));
        float _4835 = isnan(0.0) ? _2896 : (isnan(_2896) ? 0.0 : max(_2896, 0.0));
        float _2899 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
        float _2900 = dot(vec3(cbLight._m0[_2862].xyz), vec3(_2889, _2890, _2891));
        float _4846 = isnan(0.0) ? _2900 : (isnan(_2900) ? 0.0 : max(_2900, 0.0));
        float _2904 = _2881 * _2881;
        float _2908 = ((_2899 * _2899) * (_2904 + (-1.0))) + 1.0;
        float _2917 = (exp2(log2(1.0 - (isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2918 = 1.0 - _2881;
        float _2928 = (0.5 / (((_2564 * ((_2895 * _2918) + _2881)) + 9.9999999392252902907785028219223e-09) + (((_2564 * _2918) + _2881) * _2895))) * _2895;
        float _4857 = isnan(0.0) ? _2928 : (isnan(_2928) ? 0.0 : max(_2928, 0.0));
        float _2930 = (isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0))) * (_2904 / ((_2908 * _2908) * 3.141590118408203125));
        float _2931 = isnan(1.0) ? _2304 : (isnan(_2304) ? 1.0 : min(_2304, 1.0));
        _2851 = (((_2917 * cbLight._m0[_2866].x) * _2930) * _2931) + _2745;
        _2853 = (((_2917 * cbLight._m0[_2866].y) * _2930) * _2931) + _2747;
        _2855 = (((_2917 * cbLight._m0[_2866].z) * _2930) * _2931) + _2749;
    }
    float _2997;
    float _2999;
    float _3001;
    float _3003;
    float _3005;
    float _3007;
    if (_2286.y == 0u)
    {
        uvec4 _2952 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2953 = _2952.x;
        uint _2964 = uint((float(_2952.y) * floor(float(uint(cbSceneParam._m0[85u].y * _870) / _2953))) + floor(float(uint(cbSceneParam._m0[85u].x * _869) / _2953)));
        float _2974 = (log2(_2062 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2975 = isnan(0.0) ? _2974 : (isnan(_2974) ? 0.0 : max(_2974, 0.0));
        uint _2978 = uint(isnan(14.0) ? _2975 : (isnan(_2975) ? 14.0 : min(_2975, 14.0)));
        uvec4 _2983 = texelFetch(g_lightClusterGridBuffer, int(((_2978 << 2u) + (_2964 << 6u)) >> 2u));
        uint _2984 = _2983.x;
        uint _2985 = _2952.z;
        float _3058;
        float _3060;
        float _3062;
        float _3064;
        float _3066;
        float _3068;
        if (((((1u << ((_2985 >> 4u) & 15u)) + 4294967295u) & _2984) == 0u) || ((_2985 & 240u) == 0u))
        {
            _3058 = 0.0;
            _3060 = 0.0;
            _3062 = 0.0;
            _3064 = 0.0;
            _3066 = 0.0;
            _3068 = 0.0;
        }
        else
        {
            float _3059;
            float _3061;
            float _3063;
            float _3065;
            float _3067;
            float _3069;
            float _3202 = 0.0;
            float _3203 = 0.0;
            float _3204 = 0.0;
            float _3205 = 0.0;
            float _3206 = 0.0;
            float _3207 = 0.0;
            uint _3208 = 0u;
            uint _3217;
            bool _3218;
            for (;;)
            {
                _3217 = texelFetch(g_lightClassification, int((((_2978 << 5u) + (_2964 << 9u)) + (_3208 << 2u)) >> 2u)).x;
                _3218 = _3217 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3218)
                {
                    frontier_phi_66_pred = _3207;
                    frontier_phi_66_pred_1 = _3206;
                    frontier_phi_66_pred_2 = _3205;
                    frontier_phi_66_pred_3 = _3204;
                    frontier_phi_66_pred_4 = _3203;
                    frontier_phi_66_pred_5 = _3202;
                }
                else
                {
                    float _3326;
                    float _3327;
                    float _3328;
                    float _3329;
                    float _3330;
                    float _3331;
                    uint _3332;
                    _3326 = _3202;
                    _3327 = _3203;
                    _3328 = _3204;
                    _3329 = _3205;
                    _3330 = _3206;
                    _3331 = _3207;
                    _3332 = _3217;
                    float _3258;
                    float _3259;
                    float _3260;
                    float _3261;
                    float _3262;
                    float _3263;
                    for (;;)
                    {
                        uint _3336 = uint(findLSB(_3332)) + (_3208 << 5u);
                        uint _3333 = (_3332 + 4294967295u) & _3332;
                        uint _3338 = _3336 * 48u;
                        vec4 _3352 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3338)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3338 + 3u)).x));
                        uint _3358 = (_3336 * 48u) + 4u;
                        vec4 _3371 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3358)).x, texelFetch(g_PointLightRenderingBuffer, int(_3358 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3358 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3358 + 3u)).x));
                        uint _3377 = (_3336 * 48u) + 8u;
                        vec3 _3388 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3377)).x, texelFetch(g_PointLightRenderingBuffer, int(_3377 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3377 + 2u)).x));
                        float _3392 = _3352.x - _2060;
                        float _3393 = _3352.y - _2061;
                        float _3394 = _3352.z - _2062;
                        float _3395 = dot(vec3(_3392, _3393, _3394), vec3(_3392, _3393, _3394));
                        float _3398 = inversesqrt(_3395);
                        float _3399 = _3398 * _3392;
                        float _3400 = _3398 * _3393;
                        float _3401 = _3398 * _3394;
                        float _3402 = dot(vec3(_888, _891, _894), vec3(_3399, _3400, _3401));
                        float _3407 = 1.0 - (_3395 * _3352.w);
                        float _4883 = isnan(0.0) ? _3407 : (isnan(_3407) ? 0.0 : max(_3407, 0.0));
                        float _3408 = isnan(1.0) ? _4883 : (isnan(_4883) ? 1.0 : min(_4883, 1.0));
                        float _3409 = sqrt(_3395) * _3371.w;
                        float _3412 = 1.39999997615814208984375 / (_3409 + 1.39999997615814208984375);
                        float _3413 = _3412 * _3412;
                        float _3416 = ((1.0 - _3413) * _3402) + _3413;
                        float _3419 = _3409 * _3409;
                        float _3423 = ((isnan(0.0) ? _3416 : (isnan(_3416) ? 0.0 : max(_3416, 0.0))) * _3408) / ((_3419 * 0.699999988079071044921875) + 1.0);
                        float _3427 = (-0.0) - _2060;
                        float _3428 = (-0.0) - _2061;
                        float _3429 = (-0.0) - _2062;
                        float _3433 = inversesqrt(dot(vec3(_3427, _3428, _3429), vec3(_3427, _3428, _3429)));
                        float _3434 = _3433 * _3427;
                        float _3435 = _3433 * _3428;
                        float _3436 = _3433 * _3429;
                        float _3443 = exp2(log2(1.0 / ((_3419 * 3.5) + 5.0)) * 0.25);
                        float _3444 = 1.0 - _951;
                        float _3451 = sqrt(1.0 - ((1.0 - (_3444 * _3444)) * (1.0 - (_3443 * _3443))));
                        float _3452 = _3451 * _3451;
                        float _3453 = _3452 * _3452;
                        float _3454 = _3434 + _3399;
                        float _3455 = _3435 + _3400;
                        float _3456 = _3436 + _3401;
                        float _3460 = inversesqrt(dot(vec3(_3454, _3455, _3456), vec3(_3454, _3455, _3456)));
                        float _3464 = dot(vec3(_888, _891, _894), vec3(_3434, _3435, _3436));
                        float _4899 = isnan(0.0) ? _3464 : (isnan(_3464) ? 0.0 : max(_3464, 0.0));
                        float _3467 = isnan(1.0) ? _4899 : (isnan(_4899) ? 1.0 : min(_4899, 1.0));
                        float _3468 = dot(vec3(_888, _891, _894), vec3(_3460 * _3454, _3460 * _3455, _3460 * _3456));
                        float _4910 = isnan(0.0) ? _3468 : (isnan(_3468) ? 0.0 : max(_3468, 0.0));
                        float _3471 = isnan(1.0) ? _4910 : (isnan(_4910) ? 1.0 : min(_4910, 1.0));
                        float _3475 = ((_3471 * _3471) * (_3453 + (-1.0))) + 1.0;
                        float _3476 = _3412 * _3452;
                        float _3477 = _3476 * _3476;
                        float _3480 = ((1.0 - _3477) * _3402) + _3477;
                        float _4921 = isnan(0.0) ? _3480 : (isnan(_3480) ? 0.0 : max(_3480, 0.0));
                        float _3481 = isnan(1.0) ? _4921 : (isnan(_4921) ? 1.0 : min(_4921, 1.0));
                        float _3482 = 1.0 - _3452;
                        float _3492 = (0.5 / (((_3481 * ((_3467 * _3482) + _3452)) + 9.9999999392252902907785028219223e-09) + (((_3481 * _3482) + _3452) * _3467))) * _3481;
                        float _4932 = isnan(0.0) ? _3492 : (isnan(_3492) ? 0.0 : max(_3492, 0.0));
                        float _3503 = (((_3453 * 3.1415927410125732421875) * (isnan(1.0) ? _4932 : (isnan(_4932) ? 1.0 : min(_4932, 1.0)))) / ((_3475 * _3475) * ((_3419 * 2.1991131305694580078125) + 3.141590118408203125))) * _3408;
                        _3261 = (_3423 * _3371.x) + _3329;
                        _3262 = (_3423 * _3371.y) + _3330;
                        _3263 = (_3423 * _3371.z) + _3331;
                        _3258 = (_3503 * _3388.x) + _3326;
                        _3259 = (_3503 * _3388.y) + _3327;
                        _3260 = (_3503 * _3388.z) + _3328;
                        if (_3333 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3326 = _3258;
                            _3327 = _3259;
                            _3328 = _3260;
                            _3329 = _3261;
                            _3330 = _3262;
                            _3331 = _3263;
                            _3332 = _3333;
                        }
                    }
                    frontier_phi_66_pred = _3263;
                    frontier_phi_66_pred_1 = _3262;
                    frontier_phi_66_pred_2 = _3261;
                    frontier_phi_66_pred_3 = _3260;
                    frontier_phi_66_pred_4 = _3259;
                    frontier_phi_66_pred_5 = _3258;
                }
                _3069 = frontier_phi_66_pred;
                _3067 = frontier_phi_66_pred_1;
                _3065 = frontier_phi_66_pred_2;
                _3063 = frontier_phi_66_pred_3;
                _3061 = frontier_phi_66_pred_4;
                _3059 = frontier_phi_66_pred_5;
                uint _3209 = _3208 + 1u;
                if (_3209 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3202 = _3059;
                    _3203 = _3061;
                    _3204 = _3063;
                    _3205 = _3065;
                    _3206 = _3067;
                    _3207 = _3069;
                    _3208 = _3209;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3058 = _3059;
            _3060 = _3061;
            _3062 = _3063;
            _3064 = _3065;
            _3066 = _3067;
            _3068 = _3069;
        }
        uvec4 _3072 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3073 = _3072.z;
        uint _3075 = (_3073 >> 8u) & 15u;
        float _3170;
        float _3172;
        float _3174;
        float _3176;
        float _3178;
        float _3180;
        if (((4294967295u << _3075) & _2984) == 0u)
        {
            _3170 = _3058;
            _3172 = _3060;
            _3174 = _3062;
            _3176 = _3064;
            _3178 = _3066;
            _3180 = _3068;
        }
        else
        {
            float _3195 = inversesqrt(dot(vec3(_2060, _2061, _2062), vec3(_2060, _2061, _2062)));
            float _3196 = _3195 * _2060;
            float _3197 = _3195 * _2061;
            float _3198 = _3195 * _2062;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3075 < ((_3073 >> 12u) & 15u))
            {
                float _3171;
                float _3173;
                float _3175;
                float _3177;
                float _3179;
                float _3181;
                float _3309 = _3058;
                float _3310 = _3060;
                float _3311 = _3062;
                float _3312 = _3064;
                float _3313 = _3066;
                float _3314 = _3068;
                uint _3315 = _3075;
                uint _3324;
                bool _3325;
                for (;;)
                {
                    _3324 = texelFetch(g_lightClassification, int((((_2978 << 5u) + (_2964 << 9u)) + (_3315 << 2u)) >> 2u)).x;
                    _3325 = _3324 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3325)
                    {
                        frontier_phi_72_pred = _3314;
                        frontier_phi_72_pred_1 = _3313;
                        frontier_phi_72_pred_2 = _3312;
                        frontier_phi_72_pred_3 = _3311;
                        frontier_phi_72_pred_4 = _3310;
                        frontier_phi_72_pred_5 = _3309;
                    }
                    else
                    {
                        float _3508;
                        float _3509;
                        float _3510;
                        float _3511;
                        float _3512;
                        float _3513;
                        float _3801;
                        float _3802;
                        float _3803;
                        float _3804;
                        float _3805;
                        float _3806;
                        float _3521 = _3309;
                        float _3522 = _3310;
                        float _3523 = _3311;
                        float _3524 = _3312;
                        float _3525 = _3313;
                        float _3526 = _3314;
                        uint _3527 = _3324;
                        uint _3528;
                        vec4 _3553;
                        float _3554;
                        vec4 _3569;
                        vec3 _3581;
                        vec4 _3596;
                        vec4 _3611;
                        float _3657;
                        bool _3658;
                        for (;;)
                        {
                            uint _3538 = ((_3315 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3527));
                            _3528 = (_3527 + 4294967295u) & _3527;
                            uint _3540 = _3538 * 40u;
                            _3553 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3540)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3540 + 3u)).x));
                            _3554 = _3553.w;
                            uint _3556 = (_3538 * 40u) + 4u;
                            _3569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3556 + 3u)).x));
                            uint _3571 = (_3538 * 40u) + 8u;
                            _3581 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3571)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3571 + 2u)).x));
                            uint _3583 = (_3538 * 40u) + 16u;
                            _3596 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3583)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3583 + 3u)).x));
                            uint _3598 = (_3538 * 40u) + 20u;
                            _3611 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3598)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3598 + 3u)).x));
                            uint _3613 = (_3538 * 40u) + 24u;
                            vec4 _3626 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3613)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3613 + 3u)).x));
                            uint _3632 = (_3538 * 40u) + 28u;
                            vec4 _3645 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3632)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3632 + 3u)).x));
                            _3657 = fma(_2062, _3645.z, fma(_2061, _3645.y, _3645.x * _2060)) + _3645.w;
                            _3658 = !((fma(_2062, _3626.z, fma(_2061, _3626.y, _3626.x * _2060)) + _3626.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3658)
                            {
                                float _3685 = _3553.x - _2060;
                                float _3686 = _3553.y - _2061;
                                float _3687 = _3553.z - _2062;
                                float _3688 = dot(vec3(_3685, _3686, _3687), vec3(_3685, _3686, _3687));
                                float _3691 = inversesqrt(_3688);
                                float _3692 = _3691 * _3685;
                                float _3693 = _3691 * _3686;
                                float _3694 = _3691 * _3687;
                                float _3698 = 1.0 - (_3688 / (_3554 * _3554));
                                float _4943 = isnan(0.0) ? _3698 : (isnan(_3698) ? 0.0 : max(_3698, 0.0));
                                float _3699 = isnan(1.0) ? _4943 : (isnan(_4943) ? 1.0 : min(_4943, 1.0));
                                float _3703 = sqrt(_3688) * _3569.w;
                                float _3705 = 1.39999997615814208984375 / (_3703 + 1.39999997615814208984375);
                                float _3706 = _3705 * _3705;
                                float _3709 = ((1.0 - _3706) * dot(vec3(_3692, _3693, _3694), vec3(_888, _891, _894))) + _3706;
                                float _3712 = _3703 * _3703;
                                float _3716 = (fma(_2062, _3596.z, fma(_2061, _3596.y, _3596.x * _2060)) + _3596.w) / _3657;
                                float _3717 = (fma(_2062, _3611.z, fma(_2061, _3611.y, _3611.x * _2060)) + _3611.w) / _3657;
                                float _3721 = 1.0 - dot(vec2(_3716, _3717), vec2(_3716, _3717));
                                float _4959 = isnan(0.0) ? _3721 : (isnan(_3721) ? 0.0 : max(_3721, 0.0));
                                float _3722 = isnan(1.0) ? _4959 : (isnan(_4959) ? 1.0 : min(_4959, 1.0));
                                float _3723 = _3722 * (((isnan(0.0) ? _3709 : (isnan(_3709) ? 0.0 : max(_3709, 0.0))) * _3699) / ((_3712 * 0.699999988079071044921875) + 1.0));
                                float _3735 = exp2(log2(1.0 / ((_3712 * 3.5) + 5.0)) * 0.25);
                                float _3736 = 1.0 - _951;
                                float _3743 = sqrt(1.0 - ((1.0 - (_3736 * _3736)) * (1.0 - (_3735 * _3735))));
                                float _3744 = _3743 * _3743;
                                float _3745 = _3744 * _3744;
                                float _3746 = _3692 - _3196;
                                float _3747 = _3693 - _3197;
                                float _3748 = _3694 - _3198;
                                float _3752 = inversesqrt(dot(vec3(_3746, _3747, _3748), vec3(_3746, _3747, _3748)));
                                float _3756 = dot(vec3(_888, _891, _894), vec3((-0.0) - _3196, (-0.0) - _3197, (-0.0) - _3198));
                                float _4970 = isnan(0.0) ? _3756 : (isnan(_3756) ? 0.0 : max(_3756, 0.0));
                                float _3759 = isnan(1.0) ? _4970 : (isnan(_4970) ? 1.0 : min(_4970, 1.0));
                                float _3760 = dot(vec3(_888, _891, _894), vec3(_3752 * _3746, _3752 * _3747, _3752 * _3748));
                                float _4981 = isnan(0.0) ? _3760 : (isnan(_3760) ? 0.0 : max(_3760, 0.0));
                                float _3763 = isnan(1.0) ? _4981 : (isnan(_4981) ? 1.0 : min(_4981, 1.0));
                                float _3767 = ((_3763 * _3763) * (_3745 + (-1.0))) + 1.0;
                                float _3768 = _3705 * _3744;
                                float _3769 = _3768 * _3768;
                                float _3775 = ((1.0 - _3769) * dot(vec3(_888, _891, _894), vec3(_3692, _3693, _3694))) + _3769;
                                float _4992 = isnan(0.0) ? _3775 : (isnan(_3775) ? 0.0 : max(_3775, 0.0));
                                float _3776 = isnan(1.0) ? _4992 : (isnan(_4992) ? 1.0 : min(_4992, 1.0));
                                float _3777 = 1.0 - _3744;
                                float _3787 = (0.5 / (((_3776 * ((_3759 * _3777) + _3744)) + 9.9999999392252902907785028219223e-09) + (((_3776 * _3777) + _3744) * _3759))) * _3776;
                                float _5003 = isnan(0.0) ? _3787 : (isnan(_3787) ? 0.0 : max(_3787, 0.0));
                                float _3797 = (_3722 * _3699) * (((_3745 * 3.1415927410125732421875) * (isnan(1.0) ? _5003 : (isnan(_5003) ? 1.0 : min(_5003, 1.0)))) / ((_3767 * _3767) * ((_3712 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3723 * _3569.y;
                                frontier_phi_78_pred_1 = _3723 * _3569.x;
                                frontier_phi_78_pred_2 = _3797 * _3581.z;
                                frontier_phi_78_pred_3 = _3797 * _3581.y;
                                frontier_phi_78_pred_4 = _3797 * _3581.x;
                                frontier_phi_78_pred_5 = _3723 * _3569.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3805 = frontier_phi_78_pred;
                            _3804 = frontier_phi_78_pred_1;
                            _3803 = frontier_phi_78_pred_2;
                            _3802 = frontier_phi_78_pred_3;
                            _3801 = frontier_phi_78_pred_4;
                            _3806 = frontier_phi_78_pred_5;
                            _3511 = _3804 + _3524;
                            _3512 = _3805 + _3525;
                            _3513 = _3806 + _3526;
                            _3508 = _3801 + _3521;
                            _3509 = _3802 + _3522;
                            _3510 = _3803 + _3523;
                            if (_3528 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3521 = _3508;
                                _3522 = _3509;
                                _3523 = _3510;
                                _3524 = _3511;
                                _3525 = _3512;
                                _3526 = _3513;
                                _3527 = _3528;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3513;
                        frontier_phi_72_pred_1 = _3512;
                        frontier_phi_72_pred_2 = _3511;
                        frontier_phi_72_pred_3 = _3510;
                        frontier_phi_72_pred_4 = _3509;
                        frontier_phi_72_pred_5 = _3508;
                    }
                    _3181 = frontier_phi_72_pred;
                    _3179 = frontier_phi_72_pred_1;
                    _3177 = frontier_phi_72_pred_2;
                    _3175 = frontier_phi_72_pred_3;
                    _3173 = frontier_phi_72_pred_4;
                    _3171 = frontier_phi_72_pred_5;
                    uint _3316 = _3315 + 1u;
                    if (_3316 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3309 = _3171;
                        _3310 = _3173;
                        _3311 = _3175;
                        _3312 = _3177;
                        _3313 = _3179;
                        _3314 = _3181;
                        _3315 = _3316;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3181;
                frontier_phi_60_61_ladder_1 = _3179;
                frontier_phi_60_61_ladder_2 = _3175;
                frontier_phi_60_61_ladder_3 = _3173;
                frontier_phi_60_61_ladder_4 = _3171;
                frontier_phi_60_61_ladder_5 = _3177;
            }
            else
            {
                frontier_phi_60_61_ladder = _3068;
                frontier_phi_60_61_ladder_1 = _3066;
                frontier_phi_60_61_ladder_2 = _3062;
                frontier_phi_60_61_ladder_3 = _3060;
                frontier_phi_60_61_ladder_4 = _3058;
                frontier_phi_60_61_ladder_5 = _3064;
            }
            _3170 = frontier_phi_60_61_ladder_4;
            _3172 = frontier_phi_60_61_ladder_3;
            _3174 = frontier_phi_60_61_ladder_2;
            _3176 = frontier_phi_60_61_ladder_5;
            _3178 = frontier_phi_60_61_ladder_1;
            _3180 = frontier_phi_60_61_ladder;
        }
        float _3185 = isnan(1.0) ? _932 : (isnan(_932) ? 1.0 : min(_932, 1.0));
        _2997 = (_3185 * _3176) + _2528;
        _2999 = (_3185 * _3178) + _2530;
        _3001 = (_3185 * _3180) + _2532;
        _3003 = ((_3170 * 0.039999999105930328369140625) * _3185) + _2851;
        _3005 = ((_3172 * 0.039999999105930328369140625) * _3185) + _2853;
        _3007 = ((_3174 * 0.039999999105930328369140625) * _3185) + _2855;
    }
    else
    {
        _2997 = _2528;
        _2999 = _2530;
        _3001 = _2532;
        _3003 = _2851;
        _3005 = _2853;
        _3007 = _2855;
    }
    float _5019 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
    float _5030 = isnan(0.0) ? _918 : (isnan(_918) ? 0.0 : max(_918, 0.0));
    float _5041 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
    uint _3027 = _257 + 6u;
    vec4 _3044 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1967, _1968, (log2((isnan(cbSceneParam._m0[77u].w) ? _803 : (isnan(_803) ? cbSceneParam._m0[77u].w : min(_803, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3046 = _3044.x;
    float _3047 = _3044.y;
    float _3048 = _3044.z;
    float _3049 = _3044.w;
    float _3121;
    float _3123;
    float _3125;
    float _3127;
    if (_803 > cbSceneParam._m0[78u].w)
    {
        float _3083 = isnan(_803) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _803 : min(cbSceneParam._m0[80u].w, _803));
        float _3084 = _3083 / _803;
        float _3095 = _3084 * _854;
        float _3096 = _855 * _3084;
        float _3097 = (-0.0) - _3096;
        float _3099 = _3084 * _856;
        float _3101 = (cbSceneParam._m0[77u].w * _3097) / _3083;
        float _3102 = _3101 + cbSceneParam._m0[79u].w;
        float _3103 = cbSceneParam._m0[79u].w - _3096;
        float _3109 = sqrt(((_3095 * _3095) + (_3096 * _3096)) + (_3099 * _3099));
        float _3112 = (1.0 - (cbSceneParam._m0[77u].w / _3083)) * _3109;
        float _3117 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3119 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3271;
        if (abs((_3097 - _3101) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3271 = ((((_3102 > 0.0) ? exp2(_3117 * _3102) : (2.0 - exp2(_3119 * _3102))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3112;
        }
        else
        {
            float _3231 = 1.0 / cbSceneParam._m0[80u].x;
            float _3232 = isnan(_3103) ? _3102 : (isnan(_3102) ? _3103 : max(_3102, _3103));
            float _3233 = isnan(_3103) ? _3102 : (isnan(_3102) ? _3103 : min(_3102, _3103));
            float _3242 = isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : min(_3232, 0.0));
            float _3243 = isnan(0.0) ? _3233 : (isnan(_3233) ? 0.0 : min(_3233, 0.0));
            _3271 = ((abs(_3109 / _3097) * cbSceneParam._m0[80u].y) * ((((_3242 - _3243) * 2.0) - ((exp2(_3117 * (isnan(0.0) ? _3232 : (isnan(_3232) ? 0.0 : max(_3232, 0.0)))) - exp2(_3117 * (isnan(0.0) ? _3233 : (isnan(_3233) ? 0.0 : max(_3233, 0.0))))) * _3231)) - ((exp2(_3119 * _3242) - exp2(_3119 * _3243)) * _3231))) + (_3112 * cbSceneParam._m0[80u].z);
        }
        vec4 _3273 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1967, _1968, 1.0), 0.0);
        float _3282 = exp2((_3271 * (-1.44269502162933349609375)) * (1.0 - _3273.w));
        float _3283 = log2(_3282);
        float _3299 = log2(_3049);
        _3121 = (exp2(_3299 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3283 * cbSceneParam._m0[78u].x)) * _3273.x) / cbSceneParam._m0[78u].x)) + _3046;
        _3123 = (exp2(_3299 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3283 * cbSceneParam._m0[78u].y)) * _3273.y) / cbSceneParam._m0[78u].y)) + _3047;
        _3125 = (exp2(_3299 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3283 * cbSceneParam._m0[78u].z)) * _3273.z) / cbSceneParam._m0[78u].z)) + _3048;
        _3127 = _3282 * _3049;
    }
    else
    {
        _3121 = _3046;
        _3123 = _3047;
        _3125 = _3048;
        _3127 = _3049;
    }
    float _3138 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3139 = _3138 == 3.0;
    float _3140 = log2(_3127);
    float _3147 = exp2(_3140 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5019 : (isnan(_5019) ? 1.0 : min(_5019, 1.0))) * (_2997 + ((isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0))) * _932))) + (((((_1944 * (_1992.x / _1998)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0))) * _1739) * _2013)) + _3003) * cbPerFrame._m0[3u].x));
    float _3148 = exp2(_3140 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5030 : (isnan(_5030) ? 1.0 : min(_5030, 1.0))) * (_2999 + ((isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))) * _932))) + (((((_1944 * (_1992.y / _1998)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1953 : (isnan(_1953) ? 0.0 : max(_1953, 0.0))) * _1739) * _2013)) + _3005) * cbPerFrame._m0[3u].x));
    float _3149 = exp2(_3140 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5041 : (isnan(_5041) ? 1.0 : min(_5041, 1.0))) * (_3001 + ((isnan(0.0) ? _1666 : (isnan(_1666) ? 0.0 : max(_1666, 0.0))) * _932))) + (((((_1944 * (_1992.z / _1998)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0))) * _1739) * _2013)) + _3007) * cbPerFrame._m0[3u].x));
    float _3158 = (_3138 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3158 * (_3139 ? _3147 : (_3147 + (cbSceneParam._m0[72u].w * _3121)));
    SV_Target.y = _3158 * (_3139 ? _3148 : (_3148 + (cbSceneParam._m0[72u].w * _3123)));
    SV_Target.z = _3158 * (_3139 ? _3149 : (_3149 + (cbSceneParam._m0[72u].w * _3125)));
    SV_Target.w = cbInstanceData._m0[_3027].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3027].w;
}


