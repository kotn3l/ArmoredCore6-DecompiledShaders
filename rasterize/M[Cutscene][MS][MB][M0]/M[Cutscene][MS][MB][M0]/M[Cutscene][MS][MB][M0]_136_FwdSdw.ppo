#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1361;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _234 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _235 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _236 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _242 = inversesqrt(dot(vec3(_234, _235, _236), vec3(_234, _235, _236)));
    float _249 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _256 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _268 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _270 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _271 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3999 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _4010 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _4021 = isnan(0.0) ? _271 : (isnan(_271) ? 0.0 : max(_271, 0.0));
    uint _281 = uint(roundEven(NORMAL.w)) * 13u;
    uint _286 = _281 + 1u;
    uint _290 = _281 + 2u;
    float _299 = sqrt(((cbInstanceData._m0[_286].x * cbInstanceData._m0[_286].x) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) + (cbInstanceData._m0[_290].x * cbInstanceData._m0[_290].x));
    float _300 = _299 * TEXCOORD.z;
    float _301 = _299 * TEXCOORD.w;
    vec4 _314 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _300) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _301) + cbTextureTilingScale._m0[13u].w));
    vec4 _338 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _343 = _338.x * cbMtdParam._m0[11u].x;
    float _344 = _338.y * cbMtdParam._m0[11u].y;
    float _345 = _338.z * cbMtdParam._m0[11u].z;
    vec4 _364 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _300) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _301) + cbTextureTilingScale._m0[5u].w));
    vec4 _397 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _399 = _397.x;
    float _412 = dot(vec4(_399, _397.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _429 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_399 - _412) * cbMtdParam._m0[24u].x) + _412) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4032 = isnan(0.0) ? _429 : (isnan(_429) ? 0.0 : max(_429, 0.0));
    float _430 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
    float _437 = (_430 * ((_364.x * cbMtdParam._m0[12u].x) - _343)) + _343;
    float _438 = (_430 * ((_364.y * cbMtdParam._m0[12u].y) - _344)) + _344;
    float _439 = (_430 * ((_364.z * cbMtdParam._m0[12u].z) - _345)) + _345;
    float _443 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _314.x) * _437;
    float _446 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _314.y) * _438;
    float _449 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _314.z) * _439;
    float _456 = ((_437 - _443) * (isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0)))) + _443;
    float _457 = ((_438 - _446) * (isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0)))) + _446;
    float _458 = ((_439 - _449) * (isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0)))) + _449;
    vec4 _477 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _300) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _301) + cbTextureTilingScale._m0[14u].w));
    vec4 _497 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _300) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _301) + cbTextureTilingScale._m0[20u].w));
    vec4 _522 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _524 = _522.x;
    float _525 = _522.y;
    float _530 = cbMtdParam._m0[25u].w * _522.z;
    float _4043 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _531 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
    vec4 _544 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _300) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _301) + cbTextureTilingScale._m0[4u].w));
    float _552 = cbMtdParam._m0[26u].x * _544.z;
    float _4054 = isnan(0.0) ? _552 : (isnan(_552) ? 0.0 : max(_552, 0.0));
    float _562 = (((isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0))) - _531) * _430) + _531;
    float _565 = ((((_544.x - _524) * _430) + _524) * 2.0) + (-1.0);
    float _566 = ((((_544.y - _525) * _430) + _525) * 2.0) + (-1.0);
    float _567 = dot(vec2(_565, _566), vec2(_565, _566));
    float _4065 = isnan(0.0) ? _567 : (isnan(_567) ? 0.0 : max(_567, 0.0));
    float _572 = sqrt(1.0 - (isnan(1.0) ? _4065 : (isnan(_4065) ? 1.0 : min(_4065, 1.0))));
    vec4 _589 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _596 = cbMtdParam._m0[25u].z * _589.z;
    float _4076 = isnan(0.0) ? _596 : (isnan(_596) ? 0.0 : max(_596, 0.0));
    vec4 _617 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _300) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _301) + cbTextureTilingScale._m0[11u].w));
    float _619 = _617.x;
    float _620 = 1.0 - _619;
    float _626 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _629 = ((isnan(0.0) ? _626 : (isnan(_626) ? 0.0 : min(_626, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _638 = (_629 - ((((((_619 - _620) * cbMtdParam._m0[24u].z) + _620) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _629))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4097 = isnan(0.0) ? _638 : (isnan(_638) ? 0.0 : max(_638, 0.0));
    float _639 = isnan(1.0) ? _4097 : (isnan(_4097) ? 1.0 : min(_4097, 1.0));
    float _646 = (_639 * ((_477.x * cbMtdParam._m0[18u].x) - _456)) + _456;
    float _647 = (_639 * ((_477.y * cbMtdParam._m0[18u].y) - _457)) + _457;
    float _648 = (_639 * ((_477.z * cbMtdParam._m0[18u].z) - _458)) + _458;
    vec4 _660 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _300) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _301) + cbTextureTilingScale._m0[19u].w));
    float _662 = _660.x;
    float _663 = 1.0 - _662;
    float _688 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_662 - _663) * cbMtdParam._m0[24u].w) + _663) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4108 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _689 = isnan(1.0) ? _4108 : (isnan(_4108) ? 1.0 : min(_4108, 1.0));
    float _697 = ((((cbMtdParam._m0[10u].x - _646) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _689) + _646;
    float _698 = ((((cbMtdParam._m0[10u].y - _647) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _689) + _647;
    float _699 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _648)) * _689) + _648;
    float _704 = (((_497.z - _562) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _562;
    float _708 = (((isnan(1.0) ? _4076 : (isnan(_4076) ? 1.0 : min(_4076, 1.0))) - _704) * cbMtdParam._m0[19u].w) + _704;
    vec4 _722 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _300) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _301) + cbTextureTilingScale._m0[15u].w));
    float _729 = (_722.x * 2.0) + (-1.0);
    float _730 = (_722.y * 2.0) + (-1.0);
    float _731 = dot(vec2(_729, _730), vec2(_729, _730));
    float _4119 = isnan(0.0) ? _731 : (isnan(_731) ? 0.0 : max(_731, 0.0));
    float _739 = (_639 * (_722.z - _708)) + _708;
    float _742 = ((cbMtdParam._m0[23u].y - _739) * _689) + _739;
    float _746 = ((1.0 - _742) * cbMtdParam._m0[26u].y) + _742;
    float _4130 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
    float _747 = isnan(1.0) ? _4130 : (isnan(_4130) ? 1.0 : min(_4130, 1.0));
    vec4 _769 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _300) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _301) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _775 = (_769.x * 2.0) + (-1.0);
    float _776 = (_769.y * 2.0) + (-1.0);
    float _777 = dot(vec2(_775, _776), vec2(_775, _776));
    float _4141 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
    float _791 = (_565 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_497.x * 2.0) + (-1.0)))) + (((_589.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _792 = (_566 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_497.y * 2.0) + (-1.0)))) + (((_589.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _804 = (((_729 - _791) + (cbMtdParam._m0[21u].x * _791)) * _639) + _791;
    float _805 = (((_730 - _792) + (cbMtdParam._m0[21u].x * _792)) * _639) + _792;
    float _806 = (_639 * (sqrt(1.0 - (isnan(1.0) ? _4119 : (isnan(_4119) ? 1.0 : min(_4119, 1.0)))) - _572)) + _572;
    float _817 = (((_775 - _804) + (_804 * cbMtdParam._m0[22u].z)) * _689) + _804;
    float _818 = (((_776 - _805) + (_805 * cbMtdParam._m0[22u].z)) * _689) + _805;
    float _819 = ((sqrt(1.0 - (isnan(1.0) ? _4141 : (isnan(_4141) ? 1.0 : min(_4141, 1.0)))) - _806) * _689) + _806;
    float _821 = cbMtdParam._m0[22u].x + _589.w;
    float _826 = fma(_819, _249 * NORMAL.x, fma(_818, _256 * TANGENT.x, (_242 * _234) * _817));
    float _829 = fma(_819, _249 * NORMAL.y, fma(_818, _256 * TANGENT.y, (_242 * _235) * _817));
    float _832 = fma(_819, _249 * NORMAL.z, fma(_818, _256 * TANGENT.z, (_242 * _236) * _817));
    float _836 = inversesqrt(dot(vec3(_826, _829, _832), vec3(_826, _829, _832)));
    float _837 = _836 * _826;
    float _838 = _836 * _829;
    float _839 = _836 * _832;
    float _4152 = isnan(0.0) ? _747 : (isnan(_747) ? 0.0 : max(_747, 0.0));
    float _840 = isnan(1.0) ? _4152 : (isnan(_4152) ? 1.0 : min(_4152, 1.0));
    float _4163 = isnan(0.0) ? _821 : (isnan(_821) ? 0.0 : max(_821, 0.0));
    float _4174 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _4185 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
    float _4196 = isnan(0.0) ? _699 : (isnan(_699) ? 0.0 : max(_699, 0.0));
    float _858 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _899 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _909 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _899);
    float _910 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _899);
    float _911 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _899);
    float _915 = inversesqrt(dot(vec3(_909, _910, _911), vec3(_909, _910, _911)));
    float _916 = _909 * _915;
    float _917 = _910 * _915;
    float _918 = _911 * _915;
    float _924 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _925 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _943 = fma(_839, cbSceneParam._m0[5u].z, fma(_838, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _837));
    float _946 = fma(_839, cbSceneParam._m0[6u].z, fma(_838, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _837));
    float _949 = fma(_839, cbSceneParam._m0[7u].z, fma(_838, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _837));
    uint _963 = (_281 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _969 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4174 : (isnan(_4174) ? 1.0 : min(_4174, 1.0)))) * cbInstanceData._m0[_963].x;
    float _970 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4185 : (isnan(_4185) ? 1.0 : min(_4185, 1.0)))) * cbInstanceData._m0[_963].y;
    float _971 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4196 : (isnan(_4196) ? 1.0 : min(_4196, 1.0)))) * cbInstanceData._m0[_963].z;
    float _4207 = isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0));
    float _972 = isnan(1.0) ? _4207 : (isnan(_4207) ? 1.0 : min(_4207, 1.0));
    float _4218 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
    float _973 = isnan(1.0) ? _4218 : (isnan(_4218) ? 1.0 : min(_4218, 1.0));
    float _4229 = isnan(0.0) ? _971 : (isnan(_971) ? 0.0 : max(_971, 0.0));
    float _974 = isnan(1.0) ? _4229 : (isnan(_4229) ? 1.0 : min(_4229, 1.0));
    vec4 _983 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _924, cbSceneParam._m0[86u].y * _925));
    float _987 = ((isnan(1.0) ? _4163 : (isnan(_4163) ? 1.0 : min(_4163, 1.0))) * TEXCOORD_5.w) * _983.x;
    float _988 = dot(vec3(_837, _838, _839), vec3(_916, _917, _918));
    float _991 = _988 * 2.0;
    float _995 = (_991 * _837) - _916;
    float _996 = (_991 * _838) - _917;
    float _997 = (_991 * _839) - _918;
    float _1004 = abs(dot(vec3(_916, _917, _918), vec3(_837, _838, _839)));
    float _4240 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1006 = sqrt(_840);
    float _1019 = exp2((_1006 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4240 : (isnan(_4240) ? 1.0 : min(_4240, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1006 * 3.0));
    float _1051 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1055 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1059 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1360;
    float _1362;
    float _1363;
    float _1364;
    float _1365;
    float _1366;
    float _1367;
    float _1368;
    float _1369;
    float _1370;
    float _1371;
    float _1372;
    float _1373;
    float _1374;
    float _1375;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1085 = fma(_1059, cbModelParam._m0[26u].z, fma(_1055, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1051));
        float _1089 = fma(_1059, cbModelParam._m0[27u].z, fma(_1055, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1051));
        float _1093 = fma(_1059, cbModelParam._m0[28u].z, fma(_1055, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1051));
        float _1118 = _1051 + _837;
        float _1119 = _1055 + _838;
        float _1120 = _1059 + _839;
        float _1130 = fma(_1120, cbModelParam._m0[26u].z, fma(_1119, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1118)) - _1085;
        float _1131 = fma(_1120, cbModelParam._m0[27u].z, fma(_1119, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1118)) - _1089;
        float _1132 = fma(_1120, cbModelParam._m0[28u].z, fma(_1119, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1118)) - _1093;
        float _1136 = inversesqrt(dot(vec3(_1130, _1131, _1132), vec3(_1130, _1131, _1132)));
        float _1149 = ((_1136 * _1130) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1085 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1150 = ((_1136 * _1131) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1089 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1151 = ((_1136 * _1132) / cbModelParam._m0[34u].z) + ((((((_1093 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1154 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1149, _1150, _1151), 0.0);
        vec4 _1161 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1149, _1150, _1151), 0.0);
        vec4 _1168 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1149, _1150, _1151), 0.0);
        vec4 _1175 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1149, _1150, _1151), 0.0);
        float _1188 = exp2((_1154.w + (-0.5)) * 20.0) * 2.0;
        float _1189 = _1188 * (_1154.x + (-0.5));
        float _1190 = _1188 * (_1154.y + (-0.5));
        float _1191 = _1188 * (_1154.z + (-0.5));
        float _1198 = exp2((_1161.w + (-0.5)) * 20.0) * 2.0;
        float _1199 = _1198 * (_1161.x + (-0.5));
        float _1200 = _1198 * (_1161.y + (-0.5));
        float _1201 = _1198 * (_1161.z + (-0.5));
        float _1208 = exp2((_1168.w + (-0.5)) * 20.0) * 2.0;
        float _1209 = _1208 * (_1168.x + (-0.5));
        float _1210 = _1208 * (_1168.y + (-0.5));
        float _1211 = _1208 * (_1168.z + (-0.5));
        float _1218 = exp2((_1175.w + (-0.5)) * 20.0) * 2.0;
        float _1219 = _1218 * (_1175.x + (-0.5));
        float _1220 = _1218 * (_1175.y + (-0.5));
        float _1221 = _1218 * (_1175.z + (-0.5));
        float _1222 = isnan(0.0) ? _1219 : (isnan(_1219) ? 0.0 : max(_1219, 0.0));
        float _1223 = isnan(0.0) ? _1220 : (isnan(_1220) ? 0.0 : max(_1220, 0.0));
        float _1224 = isnan(0.0) ? _1221 : (isnan(_1221) ? 0.0 : max(_1221, 0.0));
        float _1225 = _1189 * 0.5;
        float _1226 = _1199 * 0.5;
        float _1227 = _1209 * 0.5;
        float _1228 = dot(vec3(_1225, _1226, _1227), vec3(_1225, _1226, _1227));
        float _1233 = (_1228 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1228);
        float _1242 = (dot(vec3(_837, _838, _839), vec3(_1233 * _1225, _1233 * _1226, _1233 * _1227)) + 1.0) * 0.5;
        float _4266 = isnan(0.0) ? _1242 : (isnan(_1242) ? 0.0 : max(_1242, 0.0));
        float _1252 = sqrt(((_1226 * _1226) + (_1225 * _1225)) + (_1227 * _1227)) / (_1222 + 9.9999997473787516355514526367188e-06);
        float _4277 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
        float _1253 = isnan(1.0) ? _4277 : (isnan(_4277) ? 1.0 : min(_4277, 1.0));
        float _1254 = _1253 * 2.0;
        float _1258 = (1.0 - _1253) / (_1253 + 1.0);
        float _4288 = isnan(0.0) ? _1258 : (isnan(_1258) ? 0.0 : max(_1258, 0.0));
        float _1259 = isnan(1.0) ? _4288 : (isnan(_4288) ? 1.0 : min(_4288, 1.0));
        float _1268 = ((((1.0 - _1259) * (_1254 + 2.0)) * exp2(log2(isnan(1.0) ? _4266 : (isnan(_4266) ? 1.0 : min(_4266, 1.0))) * (_1254 + 1.0))) + _1259) * _1222;
        float _1269 = _1190 * 0.5;
        float _1270 = _1200 * 0.5;
        float _1271 = _1210 * 0.5;
        float _1272 = dot(vec3(_1269, _1270, _1271), vec3(_1269, _1270, _1271));
        float _1277 = (_1272 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1272);
        float _1285 = (dot(vec3(_837, _838, _839), vec3(_1277 * _1269, _1277 * _1270, _1277 * _1271)) + 1.0) * 0.5;
        float _4299 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1294 = sqrt(((_1270 * _1270) + (_1269 * _1269)) + (_1271 * _1271)) / (_1223 + 9.9999997473787516355514526367188e-06);
        float _4310 = isnan(0.0) ? _1294 : (isnan(_1294) ? 0.0 : max(_1294, 0.0));
        float _1295 = isnan(1.0) ? _4310 : (isnan(_4310) ? 1.0 : min(_4310, 1.0));
        float _1296 = _1295 * 2.0;
        float _1300 = (1.0 - _1295) / (_1295 + 1.0);
        float _4321 = isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0));
        float _1301 = isnan(1.0) ? _4321 : (isnan(_4321) ? 1.0 : min(_4321, 1.0));
        float _1310 = ((((1.0 - _1301) * (_1296 + 2.0)) * exp2(log2(isnan(1.0) ? _4299 : (isnan(_4299) ? 1.0 : min(_4299, 1.0))) * (_1296 + 1.0))) + _1301) * _1223;
        float _1311 = _1191 * 0.5;
        float _1312 = _1201 * 0.5;
        float _1313 = _1211 * 0.5;
        float _1314 = dot(vec3(_1311, _1312, _1313), vec3(_1311, _1312, _1313));
        float _1319 = (_1314 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1314);
        float _1327 = (dot(vec3(_837, _838, _839), vec3(_1319 * _1311, _1319 * _1312, _1319 * _1313)) + 1.0) * 0.5;
        float _4332 = isnan(0.0) ? _1327 : (isnan(_1327) ? 0.0 : max(_1327, 0.0));
        float _1336 = sqrt(((_1312 * _1312) + (_1311 * _1311)) + (_1313 * _1313)) / (_1224 + 9.9999997473787516355514526367188e-06);
        float _4343 = isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0));
        float _1337 = isnan(1.0) ? _4343 : (isnan(_4343) ? 1.0 : min(_4343, 1.0));
        float _1338 = _1337 * 2.0;
        float _1342 = (1.0 - _1337) / (_1337 + 1.0);
        float _4354 = isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0));
        float _1343 = isnan(1.0) ? _4354 : (isnan(_4354) ? 1.0 : min(_4354, 1.0));
        float _1352 = ((((1.0 - _1343) * (_1338 + 2.0)) * exp2(log2(isnan(1.0) ? _4332 : (isnan(_4332) ? 1.0 : min(_4332, 1.0))) * (_1338 + 1.0))) + _1343) * _1224;
        _1360 = _1191;
        _1362 = _1190;
        _1363 = _1189;
        _1364 = _1201;
        _1365 = _1200;
        _1366 = _1199;
        _1367 = _1211;
        _1368 = _1210;
        _1369 = _1209;
        _1370 = _1224;
        _1371 = _1223;
        _1372 = _1222;
        _1373 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1268 : (isnan(_1268) ? 0.0 : max(_1268, 0.0)));
        _1374 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0)));
        _1375 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1352 : (isnan(_1352) ? 0.0 : max(_1352, 0.0)));
    }
    else
    {
        _1360 = _1361;
        _1362 = _1361;
        _1363 = _1361;
        _1364 = _1361;
        _1365 = _1361;
        _1366 = _1361;
        _1367 = _1361;
        _1368 = _1361;
        _1369 = _1361;
        _1370 = _1361;
        _1371 = _1361;
        _1372 = _1361;
        _1373 = 0.0;
        _1374 = 0.0;
        _1375 = 0.0;
    }
    float _1668;
    float _1669;
    float _1670;
    float _1671;
    float _1672;
    float _1673;
    float _1674;
    float _1675;
    float _1676;
    float _1677;
    float _1678;
    float _1679;
    float _1680;
    float _1681;
    float _1682;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1399 = fma(_1059, cbModelParam._m0[30u].z, fma(_1055, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1051));
        float _1403 = fma(_1059, cbModelParam._m0[31u].z, fma(_1055, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1051));
        float _1407 = fma(_1059, cbModelParam._m0[32u].z, fma(_1055, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1051));
        float _1430 = _1051 + _837;
        float _1431 = _1055 + _838;
        float _1432 = _1059 + _839;
        float _1442 = fma(_1432, cbModelParam._m0[30u].z, fma(_1431, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1430)) - _1399;
        float _1443 = fma(_1432, cbModelParam._m0[31u].z, fma(_1431, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1430)) - _1403;
        float _1444 = fma(_1432, cbModelParam._m0[32u].z, fma(_1431, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1430)) - _1407;
        float _1448 = inversesqrt(dot(vec3(_1442, _1443, _1444), vec3(_1442, _1443, _1444)));
        float _1461 = ((_1448 * _1442) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1399 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1462 = ((_1448 * _1443) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1403 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1463 = ((_1448 * _1444) / cbModelParam._m0[35u].z) + ((((((_1407 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1465 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1461, _1462, _1463), 0.0);
        vec4 _1472 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1461, _1462, _1463), 0.0);
        vec4 _1479 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1461, _1462, _1463), 0.0);
        vec4 _1486 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1461, _1462, _1463), 0.0);
        float _1498 = exp2((_1465.w + (-0.5)) * 20.0) * 2.0;
        float _1499 = _1498 * (_1465.x + (-0.5));
        float _1500 = _1498 * (_1465.y + (-0.5));
        float _1501 = _1498 * (_1465.z + (-0.5));
        float _1508 = exp2((_1472.w + (-0.5)) * 20.0) * 2.0;
        float _1509 = _1508 * (_1472.x + (-0.5));
        float _1510 = _1508 * (_1472.y + (-0.5));
        float _1511 = _1508 * (_1472.z + (-0.5));
        float _1518 = exp2((_1479.w + (-0.5)) * 20.0) * 2.0;
        float _1519 = _1518 * (_1479.x + (-0.5));
        float _1520 = _1518 * (_1479.y + (-0.5));
        float _1521 = _1518 * (_1479.z + (-0.5));
        float _1528 = exp2((_1486.w + (-0.5)) * 20.0) * 2.0;
        float _1529 = _1528 * (_1486.x + (-0.5));
        float _1530 = _1528 * (_1486.y + (-0.5));
        float _1531 = _1528 * (_1486.z + (-0.5));
        float _1532 = isnan(0.0) ? _1529 : (isnan(_1529) ? 0.0 : max(_1529, 0.0));
        float _1533 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
        float _1534 = isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0));
        float _1535 = _1499 * 0.5;
        float _1536 = _1509 * 0.5;
        float _1537 = _1519 * 0.5;
        float _1538 = dot(vec3(_1535, _1536, _1537), vec3(_1535, _1536, _1537));
        float _1543 = (_1538 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1538);
        float _1551 = (dot(vec3(_837, _838, _839), vec3(_1543 * _1535, _1543 * _1536, _1543 * _1537)) + 1.0) * 0.5;
        float _4395 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1560 = sqrt(((_1536 * _1536) + (_1535 * _1535)) + (_1537 * _1537)) / (_1532 + 9.9999997473787516355514526367188e-06);
        float _4406 = isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0));
        float _1561 = isnan(1.0) ? _4406 : (isnan(_4406) ? 1.0 : min(_4406, 1.0));
        float _1562 = _1561 * 2.0;
        float _1566 = (1.0 - _1561) / (_1561 + 1.0);
        float _4417 = isnan(0.0) ? _1566 : (isnan(_1566) ? 0.0 : max(_1566, 0.0));
        float _1567 = isnan(1.0) ? _4417 : (isnan(_4417) ? 1.0 : min(_4417, 1.0));
        float _1576 = ((((1.0 - _1567) * (_1562 + 2.0)) * exp2(log2(isnan(1.0) ? _4395 : (isnan(_4395) ? 1.0 : min(_4395, 1.0))) * (_1562 + 1.0))) + _1567) * _1532;
        float _1577 = _1500 * 0.5;
        float _1578 = _1510 * 0.5;
        float _1579 = _1520 * 0.5;
        float _1580 = dot(vec3(_1577, _1578, _1579), vec3(_1577, _1578, _1579));
        float _1585 = (_1580 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1580);
        float _1593 = (dot(vec3(_837, _838, _839), vec3(_1585 * _1577, _1585 * _1578, _1585 * _1579)) + 1.0) * 0.5;
        float _4428 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1602 = sqrt(((_1578 * _1578) + (_1577 * _1577)) + (_1579 * _1579)) / (_1533 + 9.9999997473787516355514526367188e-06);
        float _4439 = isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0));
        float _1603 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _1604 = _1603 * 2.0;
        float _1608 = (1.0 - _1603) / (_1603 + 1.0);
        float _4450 = isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0));
        float _1609 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _1618 = ((((1.0 - _1609) * (_1604 + 2.0)) * exp2(log2(isnan(1.0) ? _4428 : (isnan(_4428) ? 1.0 : min(_4428, 1.0))) * (_1604 + 1.0))) + _1609) * _1533;
        float _1619 = _1501 * 0.5;
        float _1620 = _1511 * 0.5;
        float _1621 = _1521 * 0.5;
        float _1622 = dot(vec3(_1619, _1620, _1621), vec3(_1619, _1620, _1621));
        float _1627 = (_1622 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1622);
        float _1635 = (dot(vec3(_837, _838, _839), vec3(_1627 * _1619, _1627 * _1620, _1627 * _1621)) + 1.0) * 0.5;
        float _4461 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1644 = sqrt(((_1620 * _1620) + (_1619 * _1619)) + (_1621 * _1621)) / (_1534 + 9.9999997473787516355514526367188e-06);
        float _4472 = isnan(0.0) ? _1644 : (isnan(_1644) ? 0.0 : max(_1644, 0.0));
        float _1645 = isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0));
        float _1646 = _1645 * 2.0;
        float _1650 = (1.0 - _1645) / (_1645 + 1.0);
        float _4483 = isnan(0.0) ? _1650 : (isnan(_1650) ? 0.0 : max(_1650, 0.0));
        float _1651 = isnan(1.0) ? _4483 : (isnan(_4483) ? 1.0 : min(_4483, 1.0));
        float _1660 = ((((1.0 - _1651) * (_1646 + 2.0)) * exp2(log2(isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0))) * (_1646 + 1.0))) + _1651) * _1534;
        _1668 = _1501;
        _1669 = _1500;
        _1670 = _1499;
        _1671 = _1511;
        _1672 = _1510;
        _1673 = _1509;
        _1674 = _1521;
        _1675 = _1520;
        _1676 = _1519;
        _1677 = _1534;
        _1678 = _1533;
        _1679 = _1532;
        _1680 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1576 : (isnan(_1576) ? 0.0 : max(_1576, 0.0)));
        _1681 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0)));
        _1682 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0)));
    }
    else
    {
        _1668 = _1361;
        _1669 = _1361;
        _1670 = _1361;
        _1671 = _1361;
        _1672 = _1361;
        _1673 = _1361;
        _1674 = _1361;
        _1675 = _1361;
        _1676 = _1361;
        _1677 = _1361;
        _1678 = _1361;
        _1679 = _1361;
        _1680 = 0.0;
        _1681 = 0.0;
        _1682 = 0.0;
    }
    float _1692 = (cbModelParam._m0[1u].x * (_1680 - _1373)) + _1373;
    float _1693 = (cbModelParam._m0[1u].x * (_1681 - _1374)) + _1374;
    float _1694 = (cbModelParam._m0[1u].x * (_1682 - _1375)) + _1375;
    float _1715 = fma(_1694, cbSceneParam._m0[89u].z, fma(_1693, cbSceneParam._m0[89u].y, _1692 * cbSceneParam._m0[89u].x));
    float _1718 = fma(_1694, cbSceneParam._m0[90u].z, fma(_1693, cbSceneParam._m0[90u].y, _1692 * cbSceneParam._m0[90u].x));
    float _1721 = fma(_1694, cbSceneParam._m0[91u].z, fma(_1693, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1692));
    float _1736 = _995 * 0.5;
    float _1737 = _996 * 0.5;
    float _1738 = _997 * 0.5;
    float _1739 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1670, _1673, _1676, _1679));
    float _1742 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1669, _1672, _1675, _1678));
    float _1745 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1668, _1671, _1674, _1677));
    float _1779;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1752 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1360, _1364, _1367, _1370));
        float _1756 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1362, _1365, _1368, _1371));
        float _1760 = dot(vec4(_1736, _1737, _1738, 1.0), vec4(_1363, _1366, _1369, _1372));
        float _1767 = dot(vec4(cbModelParam._m0[39u]), vec4(_1736, _1737, _1738, 1.0));
        _1779 = dot(vec3(isnan(0.0) ? _1760 : (isnan(_1760) ? 0.0 : max(_1760, 0.0)), isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)), isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1767) ? 0.0 : (isnan(0.0) ? _1767 : max(0.0, _1767))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1779 = 1.0;
    }
    float _1790;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1781 = dot(vec4(cbModelParam._m0[40u]), vec4(_1736, _1737, _1738, 1.0));
        _1790 = dot(vec3(isnan(0.0) ? _1739 : (isnan(_1739) ? 0.0 : max(_1739, 0.0)), isnan(0.0) ? _1742 : (isnan(_1742) ? 0.0 : max(_1742, 0.0)), isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1781) ? 0.0 : (isnan(0.0) ? _1781 : max(0.0, _1781))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1790 = 1.0;
    }
    float _1794 = (_1790 * cbModelParam._m0[1u].x) + (_1779 * (1.0 - cbModelParam._m0[1u].x));
    float _1804 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _840);
    float _1805 = isnan(_1804) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1804 : min(cbModelParam._m0[25u].z, _1804));
    float _1885;
    float _1887;
    float _1889;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1852 = fma(_1059, cbModelParam._m0[13u].z, fma(_1055, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1051)) + cbModelParam._m0[13u].w;
        float _1856 = fma(_1059, cbModelParam._m0[14u].z, fma(_1055, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1051)) + cbModelParam._m0[14u].w;
        float _1860 = fma(_1059, cbModelParam._m0[15u].z, fma(_1055, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1051)) + cbModelParam._m0[15u].w;
        float _1863 = fma(_997, cbModelParam._m0[13u].z, fma(_996, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _995));
        float _1866 = fma(_997, cbModelParam._m0[14u].z, fma(_996, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _995));
        float _1869 = fma(_997, cbModelParam._m0[15u].z, fma(_996, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _995));
        float _1897;
        if (_1863 > 0.0)
        {
            _1897 = abs((1.0 - _1852) / _1863);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1863 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1852 + 1.0) / _1863);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1897 = frontier_phi_14_12_ladder;
        }
        float _2123;
        if (_1866 > 0.0)
        {
            _2123 = abs((1.0 - _1856) / _1866);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1866 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1856 + 1.0) / _1866);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2123 = frontier_phi_23_19_ladder;
        }
        float _2420;
        if (_1869 > 0.0)
        {
            _2420 = abs((1.0 - _1860) / _1869);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1869 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1860 + 1.0) / _1869);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2420 = frontier_phi_35_30_ladder;
        }
        float _2422 = isnan(_2123) ? _1897 : (isnan(_1897) ? _2123 : min(_1897, _2123));
        float _2423 = isnan(_2420) ? _2422 : (isnan(_2422) ? _2420 : min(_2422, _2420));
        float _2427 = (_2423 * _1863) + _1852;
        float _2428 = (_2423 * _1866) + _1856;
        float _2429 = (_2423 * _1869) + _1860;
        float _2430 = _2423 * 9.9999997473787516355514526367188e-05;
        float _2432 = (-1.0) - _2430;
        float _2434 = _2430 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2429 > _2434) || ((_2429 < _2432) || ((_2428 > _2434) || ((_2428 < _2432) || ((_2427 < _2432) || (_2427 > _2434))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2574 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2429, cbModelParam._m0[9u].z, fma(_2428, cbModelParam._m0[9u].y, _2427 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2429, cbModelParam._m0[10u].z, fma(_2428, cbModelParam._m0[10u].y, _2427 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2429, cbModelParam._m0[11u].z, fma(_2428, cbModelParam._m0[11u].y, _2427 * cbModelParam._m0[11u].x))), _1805);
            frontier_phi_13_35_ladder = _2574.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2574.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2574.x * cbModelParam._m0[1u].y;
        }
        _1885 = frontier_phi_13_35_ladder_2;
        _1887 = frontier_phi_13_35_ladder_1;
        _1889 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1873 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_995, _996, _997), _1805);
        _1885 = _1873.x * cbModelParam._m0[1u].y;
        _1887 = _1873.y * cbModelParam._m0[1u].y;
        _1889 = _1873.z * cbModelParam._m0[1u].y;
    }
    float _1893 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _840);
    float _1894 = isnan(_1893) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1893 : min(cbModelParam._m0[25u].w, _1893));
    float _1983;
    float _1985;
    float _1987;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1947 = fma(_1059, cbModelParam._m0[21u].z, fma(_1055, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1051)) + cbModelParam._m0[21u].w;
        float _1951 = fma(_1059, cbModelParam._m0[22u].z, fma(_1055, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1051)) + cbModelParam._m0[22u].w;
        float _1955 = fma(_1059, cbModelParam._m0[23u].z, fma(_1055, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1051)) + cbModelParam._m0[23u].w;
        float _1958 = fma(_997, cbModelParam._m0[21u].z, fma(_996, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _995));
        float _1961 = fma(_997, cbModelParam._m0[22u].z, fma(_996, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _995));
        float _1964 = fma(_997, cbModelParam._m0[23u].z, fma(_996, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _995));
        float _2128;
        if (_1958 > 0.0)
        {
            _2128 = abs((1.0 - _1947) / _1958);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1958 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1947 + 1.0) / _1958);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2128 = frontier_phi_25_21_ladder;
        }
        float _2447;
        if (_1961 > 0.0)
        {
            _2447 = abs((1.0 - _1951) / _1961);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1961 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1951 + 1.0) / _1961);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2447 = frontier_phi_37_32_ladder;
        }
        float _2774;
        if (_1964 > 0.0)
        {
            _2774 = abs((1.0 - _1955) / _1964);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1964 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1955 + 1.0) / _1964);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2774 = frontier_phi_47_44_ladder;
        }
        float _2776 = isnan(_2447) ? _2128 : (isnan(_2128) ? _2447 : min(_2128, _2447));
        float _2777 = isnan(_2774) ? _2776 : (isnan(_2776) ? _2774 : min(_2776, _2774));
        float _2781 = (_2777 * _1958) + _1947;
        float _2782 = (_2777 * _1961) + _1951;
        float _2783 = (_2777 * _1964) + _1955;
        float _2784 = _2777 * 9.9999997473787516355514526367188e-05;
        float _2785 = (-1.0) - _2784;
        float _2787 = _2784 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2783 > _2787) || ((_2783 < _2785) || ((_2782 > _2787) || ((_2782 < _2785) || ((_2781 < _2785) || (_2781 > _2787))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2901 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2783, cbModelParam._m0[17u].z, fma(_2782, cbModelParam._m0[17u].y, _2781 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2783, cbModelParam._m0[18u].z, fma(_2782, cbModelParam._m0[18u].y, _2781 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2783, cbModelParam._m0[19u].z, fma(_2782, cbModelParam._m0[19u].y, _2781 * cbModelParam._m0[19u].x))), _1894);
            frontier_phi_22_47_ladder = _2901.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2901.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2901.x * cbModelParam._m0[1u].z;
        }
        _1983 = frontier_phi_22_47_ladder_2;
        _1985 = frontier_phi_22_47_ladder_1;
        _1987 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1967 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_995, _996, _997), _1894);
        _1983 = _1967.x * cbModelParam._m0[1u].z;
        _1985 = _1967.y * cbModelParam._m0[1u].z;
        _1987 = _1967.z * cbModelParam._m0[1u].z;
    }
    float _1999 = ((((1.0 - _1019) * ((_1006 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1019 * _1006)) * _987;
    float _2000 = _1999 * ((cbModelParam._m0[1u].w * (_1983 - _1885)) + _1885);
    float _2001 = _1999 * ((cbModelParam._m0[1u].w * (_1985 - _1887)) + _1887);
    float _2002 = _1999 * ((cbModelParam._m0[1u].w * (_1987 - _1889)) + _1889);
    float _2005 = fma(_2002, cbSceneParam._m0[89u].z, fma(_2001, cbSceneParam._m0[89u].y, _2000 * cbSceneParam._m0[89u].x));
    float _2008 = fma(_2002, cbSceneParam._m0[90u].z, fma(_2001, cbSceneParam._m0[90u].y, _2000 * cbSceneParam._m0[90u].x));
    float _2011 = fma(_2002, cbSceneParam._m0[91u].z, fma(_2001, cbSceneParam._m0[91u].y, _2000 * cbSceneParam._m0[91u].x));
    float _2022 = _924 / cbSceneParam._m0[86u].x;
    float _2023 = _925 / cbSceneParam._m0[86u].y;
    float _2030 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4609 = isnan(0.0) ? _2030 : (isnan(_2030) ? 0.0 : max(_2030, 0.0));
    float _2032 = (isnan(1.0) ? _4609 : (isnan(_4609) ? 1.0 : min(_4609, 1.0))) * 5.0;
    float _2037 = ((10.0 / (_858 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_837, _838, _839), vec3(1.0, 0.0, 0.0));
    vec4 _2047 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_2037 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_2037 + _2022) * cbSceneParam._m0[86u].x, _925), _2032).w) + _2022) * cbSceneParam._m0[86u].x, _925), _2032);
    float _2053 = isnan(0.5) ? _2047.w : (isnan(_2047.w) ? 0.5 : max(_2047.w, 0.5));
    float _2068 = 1.0 - (_2047.w / _2053);
    float _2102 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2106 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2110 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2114 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2115 = _2102 / _2114;
    float _2116 = _2106 / _2114;
    float _2117 = _2110 / _2114;
    float _2263;
    float _2264;
    float _2265;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2144 = ((uint(_2117 > cbSceneParam._m0[59u].y) + uint(_2117 > cbSceneParam._m0[59u].x)) + uint(_2117 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2145 = _2144 + 43u;
        uint _2153 = _2144 + 44u;
        uint _2161 = _2144 + 45u;
        uint _2169 = _2144 + 46u;
        float _2180 = fma(_2114, cbSceneParam._m0[_2145].w, fma(_2110, cbSceneParam._m0[_2145].z, fma(_2106, cbSceneParam._m0[_2145].y, _2102 * cbSceneParam._m0[_2145].x)));
        float _2184 = fma(_2114, cbSceneParam._m0[_2153].w, fma(_2110, cbSceneParam._m0[_2153].z, fma(_2106, cbSceneParam._m0[_2153].y, _2102 * cbSceneParam._m0[_2153].x)));
        float _2192 = fma(_2114, cbSceneParam._m0[_2169].w, fma(_2110, cbSceneParam._m0[_2169].z, fma(_2106, cbSceneParam._m0[_2169].y, _2102 * cbSceneParam._m0[_2169].x)));
        float _2196 = cbSceneParam._m0[33u].z * _2192;
        float _2198 = cbSceneParam._m0[33u].w * _2192;
        float _2201 = fma(_2114, cbSceneParam._m0[_2161].w, fma(_2110, cbSceneParam._m0[_2161].z, fma(_2106, cbSceneParam._m0[_2161].y, _2102 * cbSceneParam._m0[_2161].x))) / _2192;
        float _2249 = (cbSceneParam._m0[33u].x - sqrt(((_2116 * _2116) + (_2115 * _2115)) + (_2117 * _2117))) * cbSceneParam._m0[33u].y;
        float _4625 = isnan(0.0) ? _2249 : (isnan(_2249) ? 0.0 : max(_2249, 0.0));
        float _2256 = (isnan(1.0) ? _4625 : (isnan(_4625) ? 1.0 : min(_4625, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2196 + _2180) / _2192, (_2198 + _2184) / _2192), _2201), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2198 + _2180) / _2192, (_2184 - _2196) / _2192), _2201), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2180 - _2196) / _2192, (_2184 - _2198) / _2192), _2201), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2180 - _2198) / _2192, (_2196 + _2184) / _2192), _2201), 0.0)).x), vec4(0.25)));
        _2263 = 1.0 - (_2256 * cbSceneParam._m0[34u].x);
        _2264 = 1.0 - (_2256 * cbSceneParam._m0[34u].y);
        _2265 = 1.0 - (_2256 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2263 = 1.0;
        _2264 = 1.0;
        _2265 = 1.0;
    }
    float _2329;
    float _2331;
    float _2333;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2317 = fma(_2114, cbSceneParam._m0[63u].w, fma(_2110, cbSceneParam._m0[63u].z, fma(_2106, cbSceneParam._m0[63u].y, _2102 * cbSceneParam._m0[63u].x)));
        float _2318 = fma(_2114, cbSceneParam._m0[60u].w, fma(_2110, cbSceneParam._m0[60u].z, fma(_2106, cbSceneParam._m0[60u].y, _2102 * cbSceneParam._m0[60u].x))) / _2317;
        float _2319 = fma(_2114, cbSceneParam._m0[61u].w, fma(_2110, cbSceneParam._m0[61u].z, fma(_2106, cbSceneParam._m0[61u].y, _2102 * cbSceneParam._m0[61u].x))) / _2317;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2318 >= cbSceneParam._m0[64u].x) && (_2319 >= cbSceneParam._m0[64u].y)) && (_2318 <= cbSceneParam._m0[64u].z)) && (_2319 <= cbSceneParam._m0[64u].w))
        {
            float _2460 = fma(_2114, cbSceneParam._m0[62u].w, fma(_2110, cbSceneParam._m0[62u].z, fma(_2106, cbSceneParam._m0[62u].y, _2102 * cbSceneParam._m0[62u].x))) / _2317;
            float _2464 = isnan(cbSceneParam._m0[41u].w) ? _2460 : (isnan(_2460) ? cbSceneParam._m0[41u].w : max(_2460, cbSceneParam._m0[41u].w));
            float _2507 = (cbSceneParam._m0[33u].x - sqrt(((_2116 * _2116) + (_2115 * _2115)) + (_2117 * _2117))) * cbSceneParam._m0[33u].y;
            float _4641 = isnan(0.0) ? _2507 : (isnan(_2507) ? 0.0 : max(_2507, 0.0));
            float _2514 = (isnan(1.0) ? _4641 : (isnan(_4641) ? 1.0 : min(_4641, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2318, cbSceneParam._m0[33u].w + _2319), _2464), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2318, _2319 - cbSceneParam._m0[33u].z), _2464), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2318 - cbSceneParam._m0[33u].z, _2319 - cbSceneParam._m0[33u].w), _2464), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2318 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2319), _2464), 0.0)).x), vec4(0.25)));
            float _2518 = 1.0 - (_2514 * cbSceneParam._m0[34u].x);
            float _2519 = 1.0 - (_2514 * cbSceneParam._m0[34u].y);
            float _2520 = 1.0 - (_2514 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2520) ? _2265 : (isnan(_2265) ? _2520 : min(_2265, _2520));
            frontier_phi_34_33_ladder_1 = isnan(_2519) ? _2264 : (isnan(_2264) ? _2519 : min(_2264, _2519));
            frontier_phi_34_33_ladder_2 = isnan(_2518) ? _2263 : (isnan(_2263) ? _2518 : min(_2263, _2518));
        }
        else
        {
            frontier_phi_34_33_ladder = _2265;
            frontier_phi_34_33_ladder_1 = _2264;
            frontier_phi_34_33_ladder_2 = _2263;
        }
        _2329 = frontier_phi_34_33_ladder_2;
        _2331 = frontier_phi_34_33_ladder_1;
        _2333 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2329 = _2263;
        _2331 = _2264;
        _2333 = _2265;
    }
    float _4667 = isnan(0.0) ? _2329 : (isnan(_2329) ? 0.0 : max(_2329, 0.0));
    float _2335 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
    float _4678 = isnan(0.0) ? _2331 : (isnan(_2331) ? 0.0 : max(_2331, 0.0));
    float _2336 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
    float _4689 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
    float _2337 = isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0));
    uvec4 _2341 = floatBitsToUint(cbInstanceData._m0[_281 + 5u]);
    uint _2343 = _2341.x * 14u;
    uint _2344 = _2343 + 13u;
    float _2351 = _987 + (-1.0);
    float _2356 = (cbLight._m0[_2344].x * _2351) + 1.0;
    float _2357 = (cbLight._m0[_2344].y * _2351) + 1.0;
    float _2358 = (cbLight._m0[_2344].z * _2351) + 1.0;
    float _2359 = (cbLight._m0[_2344].w * _2351) + 1.0;
    uint _2360 = _2343 + 5u;
    float _2366 = isnan(1.0) ? _2357 : (isnan(_2357) ? 1.0 : min(_2357, 1.0));
    uint _2370 = _2343 + 4u;
    float _2379 = isnan(1.0) ? _2356 : (isnan(_2356) ? 1.0 : min(_2356, 1.0));
    uint _2383 = _2343 | 1u;
    float _2394 = dot(vec3(cbLight._m0[_2343].xyz), vec3(_837, _838, _839));
    float _2397 = dot(vec3(cbLight._m0[_2383].xyz), vec3(_837, _838, _839));
    float _4710 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
    float _4721 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
    float _2402 = (isnan(1.0) ? _4710 : (isnan(_4710) ? 1.0 : min(_4710, 1.0))) * 0.3183098733425140380859375;
    float _2404 = (isnan(1.0) ? _4721 : (isnan(_4721) ? 1.0 : min(_4721, 1.0))) * 0.3183098733425140380859375;
    float _2411 = ((cbLight._m0[_2360].x * _2366) * _2404) + (((cbLight._m0[_2370].x * _2335) * _2379) * _2402);
    float _2412 = ((_2366 * cbLight._m0[_2360].y) * _2404) + (((cbLight._m0[_2370].y * _2336) * _2379) * _2402);
    float _2413 = ((_2366 * cbLight._m0[_2360].z) * _2404) + (((cbLight._m0[_2370].z * _2337) * _2379) * _2402);
    uvec4 _2417 = floatBitsToUint(cbLight._m0[_2343 + 12u]);
    bool _2419 = _2417.x == 0u;
    float _2521;
    float _2523;
    float _2525;
    if (_2419)
    {
        _2521 = _2411;
        _2523 = _2412;
        _2525 = _2413;
    }
    else
    {
        uint _2529 = _2343 + 6u;
        float _2545 = (dot(vec3(cbLight._m0[_2343 + 2u].xyz), vec3(_837, _838, _839)) * 0.5) + 0.5;
        float _2546 = _2545 * _2545;
        float _4732 = isnan(0.0) ? _2546 : (isnan(_2546) ? 0.0 : max(_2546, 0.0));
        float _2547 = isnan(1.0) ? _4732 : (isnan(_4732) ? 1.0 : min(_4732, 1.0));
        float _2548 = isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0));
        _2521 = (((cbLight._m0[_2529].x * 0.3183098733425140380859375) * _2547) * _2548) + _2411;
        _2523 = (((cbLight._m0[_2529].y * 0.3183098733425140380859375) * _2547) * _2548) + _2412;
        _2525 = (((cbLight._m0[_2529].z * 0.3183098733425140380859375) * _2547) * _2548) + _2413;
    }
    bool _2528 = _2417.y == 0u;
    float _2583;
    float _2585;
    float _2587;
    if (_2528)
    {
        _2583 = _2521;
        _2585 = _2523;
        _2587 = _2525;
    }
    else
    {
        uint _2745 = _2343 + 7u;
        float _2761 = (dot(vec3(cbLight._m0[_2343 + 3u].xyz), vec3(_837, _838, _839)) * 0.5) + 0.5;
        float _2762 = _2761 * _2761;
        float _4748 = isnan(0.0) ? _2762 : (isnan(_2762) ? 0.0 : max(_2762, 0.0));
        float _2763 = isnan(1.0) ? _4748 : (isnan(_4748) ? 1.0 : min(_4748, 1.0));
        float _2764 = isnan(1.0) ? _2359 : (isnan(_2359) ? 1.0 : min(_2359, 1.0));
        _2583 = (((cbLight._m0[_2745].x * 0.3183098733425140380859375) * _2763) * _2764) + _2521;
        _2585 = (((cbLight._m0[_2745].y * 0.3183098733425140380859375) * _2763) * _2764) + _2523;
        _2587 = (((cbLight._m0[_2745].z * 0.3183098733425140380859375) * _2763) * _2764) + _2525;
    }
    uint _2590 = _2343 + 8u;
    float _2603 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2343].w)) * _840) * 0.949999988079071044921875);
    float _2604 = _2603 * _2603;
    float _2605 = cbLight._m0[_2343].x + _916;
    float _2606 = cbLight._m0[_2343].y + _917;
    float _2607 = cbLight._m0[_2343].z + _918;
    float _2611 = inversesqrt(dot(vec3(_2605, _2606, _2607), vec3(_2605, _2606, _2607)));
    float _2612 = _2611 * _2605;
    float _2613 = _2611 * _2606;
    float _2614 = _2611 * _2607;
    float _2615 = dot(vec3(_837, _838, _839), vec3(cbLight._m0[_2343].xyz));
    float _4764 = isnan(0.0) ? _2615 : (isnan(_2615) ? 0.0 : max(_2615, 0.0));
    float _2618 = isnan(1.0) ? _4764 : (isnan(_4764) ? 1.0 : min(_4764, 1.0));
    float _4775 = isnan(0.0) ? _988 : (isnan(_988) ? 0.0 : max(_988, 0.0));
    float _2619 = isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0));
    float _2620 = dot(vec3(_837, _838, _839), vec3(_2612, _2613, _2614));
    float _4786 = isnan(0.0) ? _2620 : (isnan(_2620) ? 0.0 : max(_2620, 0.0));
    float _2623 = isnan(1.0) ? _4786 : (isnan(_4786) ? 1.0 : min(_4786, 1.0));
    float _2624 = dot(vec3(cbLight._m0[_2343].xyz), vec3(_2612, _2613, _2614));
    float _4797 = isnan(0.0) ? _2624 : (isnan(_2624) ? 0.0 : max(_2624, 0.0));
    float _2628 = _2604 * _2604;
    float _2632 = ((_2623 * _2623) * (_2628 + (-1.0))) + 1.0;
    float _2643 = (exp2(log2(1.0 - (isnan(1.0) ? _4797 : (isnan(_4797) ? 1.0 : min(_4797, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2644 = 1.0 - _2604;
    float _2655 = (0.5 / (((_2619 * ((_2618 * _2644) + _2604)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2644) + _2604) * _2618))) * _2618;
    float _4808 = isnan(0.0) ? _2655 : (isnan(_2655) ? 0.0 : max(_2655, 0.0));
    float _2657 = (isnan(1.0) ? _4808 : (isnan(_4808) ? 1.0 : min(_4808, 1.0))) * (_2628 / ((_2632 * _2632) * 3.141590118408203125));
    uint _2671 = _2343 + 9u;
    float _2682 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2383].w)) * _840) * 0.949999988079071044921875);
    float _2683 = _2682 * _2682;
    float _2684 = cbLight._m0[_2383].x + _916;
    float _2685 = cbLight._m0[_2383].y + _917;
    float _2686 = cbLight._m0[_2383].z + _918;
    float _2690 = inversesqrt(dot(vec3(_2684, _2685, _2686), vec3(_2684, _2685, _2686)));
    float _2691 = _2690 * _2684;
    float _2692 = _2690 * _2685;
    float _2693 = _2690 * _2686;
    float _2694 = dot(vec3(_837, _838, _839), vec3(cbLight._m0[_2383].xyz));
    float _4819 = isnan(0.0) ? _2694 : (isnan(_2694) ? 0.0 : max(_2694, 0.0));
    float _2697 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
    float _2698 = dot(vec3(_837, _838, _839), vec3(_2691, _2692, _2693));
    float _4830 = isnan(0.0) ? _2698 : (isnan(_2698) ? 0.0 : max(_2698, 0.0));
    float _2701 = isnan(1.0) ? _4830 : (isnan(_4830) ? 1.0 : min(_4830, 1.0));
    float _2702 = dot(vec3(cbLight._m0[_2383].xyz), vec3(_2691, _2692, _2693));
    float _4841 = isnan(0.0) ? _2702 : (isnan(_2702) ? 0.0 : max(_2702, 0.0));
    float _2706 = _2683 * _2683;
    float _2710 = ((_2701 * _2701) * (_2706 + (-1.0))) + 1.0;
    float _2719 = (exp2(log2(1.0 - (isnan(1.0) ? _4841 : (isnan(_4841) ? 1.0 : min(_4841, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2720 = 1.0 - _2683;
    float _2730 = (0.5 / (((_2619 * ((_2697 * _2720) + _2683)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2720) + _2683) * _2697))) * _2697;
    float _4852 = isnan(0.0) ? _2730 : (isnan(_2730) ? 0.0 : max(_2730, 0.0));
    float _2732 = (isnan(1.0) ? _4852 : (isnan(_4852) ? 1.0 : min(_4852, 1.0))) * (_2706 / ((_2710 * _2710) * 3.141590118408203125));
    float _2742 = (((_2719 * cbLight._m0[_2671].x) * _2732) * _2366) + ((((cbLight._m0[_2590].x * _2335) * _2643) * _2657) * _2379);
    float _2743 = (((_2719 * cbLight._m0[_2671].y) * _2732) * _2366) + ((((cbLight._m0[_2590].y * _2336) * _2643) * _2657) * _2379);
    float _2744 = (((_2719 * cbLight._m0[_2671].z) * _2732) * _2366) + ((((cbLight._m0[_2590].z * _2337) * _2643) * _2657) * _2379);
    float _2800;
    float _2802;
    float _2804;
    if (_2419)
    {
        _2800 = _2742;
        _2802 = _2743;
        _2804 = _2744;
    }
    else
    {
        uint _2806 = _2343 + 2u;
        uint _2810 = _2343 + 10u;
        float _2824 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2806].w)) * _840) * 0.949999988079071044921875);
        float _2825 = _2824 * _2824;
        float _2826 = cbLight._m0[_2806].x + _916;
        float _2827 = cbLight._m0[_2806].y + _917;
        float _2828 = cbLight._m0[_2806].z + _918;
        float _2832 = inversesqrt(dot(vec3(_2826, _2827, _2828), vec3(_2826, _2827, _2828)));
        float _2833 = _2832 * _2826;
        float _2834 = _2832 * _2827;
        float _2835 = _2832 * _2828;
        float _2836 = dot(vec3(_837, _838, _839), vec3(cbLight._m0[_2806].xyz));
        float _4863 = isnan(0.0) ? _2836 : (isnan(_2836) ? 0.0 : max(_2836, 0.0));
        float _2839 = isnan(1.0) ? _4863 : (isnan(_4863) ? 1.0 : min(_4863, 1.0));
        float _2840 = dot(vec3(_837, _838, _839), vec3(_2833, _2834, _2835));
        float _4874 = isnan(0.0) ? _2840 : (isnan(_2840) ? 0.0 : max(_2840, 0.0));
        float _2843 = isnan(1.0) ? _4874 : (isnan(_4874) ? 1.0 : min(_4874, 1.0));
        float _2844 = dot(vec3(cbLight._m0[_2806].xyz), vec3(_2833, _2834, _2835));
        float _4885 = isnan(0.0) ? _2844 : (isnan(_2844) ? 0.0 : max(_2844, 0.0));
        float _2848 = _2825 * _2825;
        float _2852 = ((_2843 * _2843) * (_2848 + (-1.0))) + 1.0;
        float _2861 = (exp2(log2(1.0 - (isnan(1.0) ? _4885 : (isnan(_4885) ? 1.0 : min(_4885, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2862 = 1.0 - _2825;
        float _2872 = (0.5 / (((_2619 * ((_2839 * _2862) + _2825)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2862) + _2825) * _2839))) * _2839;
        float _4896 = isnan(0.0) ? _2872 : (isnan(_2872) ? 0.0 : max(_2872, 0.0));
        float _2874 = (isnan(1.0) ? _4896 : (isnan(_4896) ? 1.0 : min(_4896, 1.0))) * (_2848 / ((_2852 * _2852) * 3.141590118408203125));
        float _2875 = isnan(1.0) ? _2358 : (isnan(_2358) ? 1.0 : min(_2358, 1.0));
        _2800 = (((_2861 * cbLight._m0[_2810].x) * _2874) * _2875) + _2742;
        _2802 = (((_2861 * cbLight._m0[_2810].y) * _2874) * _2875) + _2743;
        _2804 = (((_2861 * cbLight._m0[_2810].z) * _2874) * _2875) + _2744;
    }
    float _2906;
    float _2908;
    float _2910;
    if (_2528)
    {
        _2906 = _2800;
        _2908 = _2802;
        _2910 = _2804;
    }
    else
    {
        uint _2917 = _2343 + 3u;
        uint _2921 = _2343 + 11u;
        float _2935 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2917].w)) * _840) * 0.949999988079071044921875);
        float _2936 = _2935 * _2935;
        float _2937 = cbLight._m0[_2917].x + _916;
        float _2938 = cbLight._m0[_2917].y + _917;
        float _2939 = cbLight._m0[_2917].z + _918;
        float _2943 = inversesqrt(dot(vec3(_2937, _2938, _2939), vec3(_2937, _2938, _2939)));
        float _2944 = _2943 * _2937;
        float _2945 = _2943 * _2938;
        float _2946 = _2943 * _2939;
        float _2947 = dot(vec3(_837, _838, _839), vec3(cbLight._m0[_2917].xyz));
        float _4912 = isnan(0.0) ? _2947 : (isnan(_2947) ? 0.0 : max(_2947, 0.0));
        float _2950 = isnan(1.0) ? _4912 : (isnan(_4912) ? 1.0 : min(_4912, 1.0));
        float _2951 = dot(vec3(_837, _838, _839), vec3(_2944, _2945, _2946));
        float _4923 = isnan(0.0) ? _2951 : (isnan(_2951) ? 0.0 : max(_2951, 0.0));
        float _2954 = isnan(1.0) ? _4923 : (isnan(_4923) ? 1.0 : min(_4923, 1.0));
        float _2955 = dot(vec3(cbLight._m0[_2917].xyz), vec3(_2944, _2945, _2946));
        float _4934 = isnan(0.0) ? _2955 : (isnan(_2955) ? 0.0 : max(_2955, 0.0));
        float _2959 = _2936 * _2936;
        float _2963 = ((_2954 * _2954) * (_2959 + (-1.0))) + 1.0;
        float _2972 = (exp2(log2(1.0 - (isnan(1.0) ? _4934 : (isnan(_4934) ? 1.0 : min(_4934, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2973 = 1.0 - _2936;
        float _2983 = (0.5 / (((_2619 * ((_2950 * _2973) + _2936)) + 9.9999999392252902907785028219223e-09) + (((_2619 * _2973) + _2936) * _2950))) * _2950;
        float _4945 = isnan(0.0) ? _2983 : (isnan(_2983) ? 0.0 : max(_2983, 0.0));
        float _2985 = (isnan(1.0) ? _4945 : (isnan(_4945) ? 1.0 : min(_4945, 1.0))) * (_2959 / ((_2963 * _2963) * 3.141590118408203125));
        float _2986 = isnan(1.0) ? _2359 : (isnan(_2359) ? 1.0 : min(_2359, 1.0));
        _2906 = (((_2972 * cbLight._m0[_2921].x) * _2985) * _2986) + _2800;
        _2908 = (((_2972 * cbLight._m0[_2921].y) * _2985) * _2986) + _2802;
        _2910 = (((_2972 * cbLight._m0[_2921].z) * _2985) * _2986) + _2804;
    }
    float _3052;
    float _3054;
    float _3056;
    float _3058;
    float _3060;
    float _3062;
    if (_2341.y == 0u)
    {
        uvec4 _3007 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3008 = _3007.x;
        uint _3019 = uint((float(_3007.y) * floor(float(uint(cbSceneParam._m0[85u].y * _925) / _3008))) + floor(float(uint(cbSceneParam._m0[85u].x * _924) / _3008)));
        float _3029 = (log2(_2117 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3030 = isnan(0.0) ? _3029 : (isnan(_3029) ? 0.0 : max(_3029, 0.0));
        uint _3033 = uint(isnan(14.0) ? _3030 : (isnan(_3030) ? 14.0 : min(_3030, 14.0)));
        uvec4 _3038 = texelFetch(g_lightClusterGridBuffer, int(((_3033 << 2u) + (_3019 << 6u)) >> 2u));
        uint _3039 = _3038.x;
        uint _3040 = _3007.z;
        float _3113;
        float _3115;
        float _3117;
        float _3119;
        float _3121;
        float _3123;
        if (((((1u << ((_3040 >> 4u) & 15u)) + 4294967295u) & _3039) == 0u) || ((_3040 & 240u) == 0u))
        {
            _3113 = 0.0;
            _3115 = 0.0;
            _3117 = 0.0;
            _3119 = 0.0;
            _3121 = 0.0;
            _3123 = 0.0;
        }
        else
        {
            float _3114;
            float _3116;
            float _3118;
            float _3120;
            float _3122;
            float _3124;
            float _3257 = 0.0;
            float _3258 = 0.0;
            float _3259 = 0.0;
            float _3260 = 0.0;
            float _3261 = 0.0;
            float _3262 = 0.0;
            uint _3263 = 0u;
            uint _3272;
            bool _3273;
            for (;;)
            {
                _3272 = texelFetch(g_lightClassification, int((((_3033 << 5u) + (_3019 << 9u)) + (_3263 << 2u)) >> 2u)).x;
                _3273 = _3272 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3273)
                {
                    frontier_phi_66_pred = _3262;
                    frontier_phi_66_pred_1 = _3261;
                    frontier_phi_66_pred_2 = _3260;
                    frontier_phi_66_pred_3 = _3259;
                    frontier_phi_66_pred_4 = _3258;
                    frontier_phi_66_pred_5 = _3257;
                }
                else
                {
                    float _3381;
                    float _3382;
                    float _3383;
                    float _3384;
                    float _3385;
                    float _3386;
                    uint _3387;
                    _3381 = _3257;
                    _3382 = _3258;
                    _3383 = _3259;
                    _3384 = _3260;
                    _3385 = _3261;
                    _3386 = _3262;
                    _3387 = _3272;
                    float _3313;
                    float _3314;
                    float _3315;
                    float _3316;
                    float _3317;
                    float _3318;
                    for (;;)
                    {
                        uint _3391 = uint(findLSB(_3387)) + (_3263 << 5u);
                        uint _3388 = (_3387 + 4294967295u) & _3387;
                        uint _3393 = _3391 * 48u;
                        vec4 _3407 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3393)).x, texelFetch(g_PointLightRenderingBuffer, int(_3393 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3393 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3393 + 3u)).x));
                        uint _3413 = (_3391 * 48u) + 4u;
                        vec4 _3426 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3413)).x, texelFetch(g_PointLightRenderingBuffer, int(_3413 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3413 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3413 + 3u)).x));
                        uint _3432 = (_3391 * 48u) + 8u;
                        vec3 _3443 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3432)).x, texelFetch(g_PointLightRenderingBuffer, int(_3432 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3432 + 2u)).x));
                        float _3447 = _3407.x - _2115;
                        float _3448 = _3407.y - _2116;
                        float _3449 = _3407.z - _2117;
                        float _3450 = dot(vec3(_3447, _3448, _3449), vec3(_3447, _3448, _3449));
                        float _3453 = inversesqrt(_3450);
                        float _3454 = _3453 * _3447;
                        float _3455 = _3453 * _3448;
                        float _3456 = _3453 * _3449;
                        float _3457 = dot(vec3(_943, _946, _949), vec3(_3454, _3455, _3456));
                        float _3462 = 1.0 - (_3450 * _3407.w);
                        float _4971 = isnan(0.0) ? _3462 : (isnan(_3462) ? 0.0 : max(_3462, 0.0));
                        float _3463 = isnan(1.0) ? _4971 : (isnan(_4971) ? 1.0 : min(_4971, 1.0));
                        float _3464 = sqrt(_3450) * _3426.w;
                        float _3467 = 1.39999997615814208984375 / (_3464 + 1.39999997615814208984375);
                        float _3468 = _3467 * _3467;
                        float _3471 = ((1.0 - _3468) * _3457) + _3468;
                        float _3474 = _3464 * _3464;
                        float _3478 = ((isnan(0.0) ? _3471 : (isnan(_3471) ? 0.0 : max(_3471, 0.0))) * _3463) / ((_3474 * 0.699999988079071044921875) + 1.0);
                        float _3482 = (-0.0) - _2115;
                        float _3483 = (-0.0) - _2116;
                        float _3484 = (-0.0) - _2117;
                        float _3488 = inversesqrt(dot(vec3(_3482, _3483, _3484), vec3(_3482, _3483, _3484)));
                        float _3489 = _3488 * _3482;
                        float _3490 = _3488 * _3483;
                        float _3491 = _3488 * _3484;
                        float _3498 = exp2(log2(1.0 / ((_3474 * 3.5) + 5.0)) * 0.25);
                        float _3499 = 1.0 - _1006;
                        float _3506 = sqrt(1.0 - ((1.0 - (_3499 * _3499)) * (1.0 - (_3498 * _3498))));
                        float _3507 = _3506 * _3506;
                        float _3508 = _3507 * _3507;
                        float _3509 = _3489 + _3454;
                        float _3510 = _3490 + _3455;
                        float _3511 = _3491 + _3456;
                        float _3515 = inversesqrt(dot(vec3(_3509, _3510, _3511), vec3(_3509, _3510, _3511)));
                        float _3519 = dot(vec3(_943, _946, _949), vec3(_3489, _3490, _3491));
                        float _4987 = isnan(0.0) ? _3519 : (isnan(_3519) ? 0.0 : max(_3519, 0.0));
                        float _3522 = isnan(1.0) ? _4987 : (isnan(_4987) ? 1.0 : min(_4987, 1.0));
                        float _3523 = dot(vec3(_943, _946, _949), vec3(_3515 * _3509, _3515 * _3510, _3515 * _3511));
                        float _4998 = isnan(0.0) ? _3523 : (isnan(_3523) ? 0.0 : max(_3523, 0.0));
                        float _3526 = isnan(1.0) ? _4998 : (isnan(_4998) ? 1.0 : min(_4998, 1.0));
                        float _3530 = ((_3526 * _3526) * (_3508 + (-1.0))) + 1.0;
                        float _3531 = _3467 * _3507;
                        float _3532 = _3531 * _3531;
                        float _3535 = ((1.0 - _3532) * _3457) + _3532;
                        float _5009 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                        float _3536 = isnan(1.0) ? _5009 : (isnan(_5009) ? 1.0 : min(_5009, 1.0));
                        float _3537 = 1.0 - _3507;
                        float _3547 = (0.5 / (((_3536 * ((_3522 * _3537) + _3507)) + 9.9999999392252902907785028219223e-09) + (((_3536 * _3537) + _3507) * _3522))) * _3536;
                        float _5020 = isnan(0.0) ? _3547 : (isnan(_3547) ? 0.0 : max(_3547, 0.0));
                        float _3558 = (((_3508 * 3.1415927410125732421875) * (isnan(1.0) ? _5020 : (isnan(_5020) ? 1.0 : min(_5020, 1.0)))) / ((_3530 * _3530) * ((_3474 * 2.1991131305694580078125) + 3.141590118408203125))) * _3463;
                        _3316 = (_3478 * _3426.x) + _3384;
                        _3317 = (_3478 * _3426.y) + _3385;
                        _3318 = (_3478 * _3426.z) + _3386;
                        _3313 = (_3558 * _3443.x) + _3381;
                        _3314 = (_3558 * _3443.y) + _3382;
                        _3315 = (_3558 * _3443.z) + _3383;
                        if (_3388 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3381 = _3313;
                            _3382 = _3314;
                            _3383 = _3315;
                            _3384 = _3316;
                            _3385 = _3317;
                            _3386 = _3318;
                            _3387 = _3388;
                        }
                    }
                    frontier_phi_66_pred = _3318;
                    frontier_phi_66_pred_1 = _3317;
                    frontier_phi_66_pred_2 = _3316;
                    frontier_phi_66_pred_3 = _3315;
                    frontier_phi_66_pred_4 = _3314;
                    frontier_phi_66_pred_5 = _3313;
                }
                _3124 = frontier_phi_66_pred;
                _3122 = frontier_phi_66_pred_1;
                _3120 = frontier_phi_66_pred_2;
                _3118 = frontier_phi_66_pred_3;
                _3116 = frontier_phi_66_pred_4;
                _3114 = frontier_phi_66_pred_5;
                uint _3264 = _3263 + 1u;
                if (_3264 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3257 = _3114;
                    _3258 = _3116;
                    _3259 = _3118;
                    _3260 = _3120;
                    _3261 = _3122;
                    _3262 = _3124;
                    _3263 = _3264;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3113 = _3114;
            _3115 = _3116;
            _3117 = _3118;
            _3119 = _3120;
            _3121 = _3122;
            _3123 = _3124;
        }
        uvec4 _3127 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3128 = _3127.z;
        uint _3130 = (_3128 >> 8u) & 15u;
        float _3225;
        float _3227;
        float _3229;
        float _3231;
        float _3233;
        float _3235;
        if (((4294967295u << _3130) & _3039) == 0u)
        {
            _3225 = _3113;
            _3227 = _3115;
            _3229 = _3117;
            _3231 = _3119;
            _3233 = _3121;
            _3235 = _3123;
        }
        else
        {
            float _3250 = inversesqrt(dot(vec3(_2115, _2116, _2117), vec3(_2115, _2116, _2117)));
            float _3251 = _3250 * _2115;
            float _3252 = _3250 * _2116;
            float _3253 = _3250 * _2117;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3130 < ((_3128 >> 12u) & 15u))
            {
                float _3226;
                float _3228;
                float _3230;
                float _3232;
                float _3234;
                float _3236;
                float _3364 = _3113;
                float _3365 = _3115;
                float _3366 = _3117;
                float _3367 = _3119;
                float _3368 = _3121;
                float _3369 = _3123;
                uint _3370 = _3130;
                uint _3379;
                bool _3380;
                for (;;)
                {
                    _3379 = texelFetch(g_lightClassification, int((((_3033 << 5u) + (_3019 << 9u)) + (_3370 << 2u)) >> 2u)).x;
                    _3380 = _3379 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3380)
                    {
                        frontier_phi_72_pred = _3369;
                        frontier_phi_72_pred_1 = _3368;
                        frontier_phi_72_pred_2 = _3367;
                        frontier_phi_72_pred_3 = _3366;
                        frontier_phi_72_pred_4 = _3365;
                        frontier_phi_72_pred_5 = _3364;
                    }
                    else
                    {
                        float _3563;
                        float _3564;
                        float _3565;
                        float _3566;
                        float _3567;
                        float _3568;
                        float _3856;
                        float _3857;
                        float _3858;
                        float _3859;
                        float _3860;
                        float _3861;
                        float _3576 = _3364;
                        float _3577 = _3365;
                        float _3578 = _3366;
                        float _3579 = _3367;
                        float _3580 = _3368;
                        float _3581 = _3369;
                        uint _3582 = _3379;
                        uint _3583;
                        vec4 _3608;
                        float _3609;
                        vec4 _3624;
                        vec3 _3636;
                        vec4 _3651;
                        vec4 _3666;
                        float _3712;
                        bool _3713;
                        for (;;)
                        {
                            uint _3593 = ((_3370 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3582));
                            _3583 = (_3582 + 4294967295u) & _3582;
                            uint _3595 = _3593 * 40u;
                            _3608 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3595)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3595 + 3u)).x));
                            _3609 = _3608.w;
                            uint _3611 = (_3593 * 40u) + 4u;
                            _3624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3611 + 3u)).x));
                            uint _3626 = (_3593 * 40u) + 8u;
                            _3636 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3626)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3626 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3626 + 2u)).x));
                            uint _3638 = (_3593 * 40u) + 16u;
                            _3651 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3638)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3638 + 3u)).x));
                            uint _3653 = (_3593 * 40u) + 20u;
                            _3666 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3653)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3653 + 3u)).x));
                            uint _3668 = (_3593 * 40u) + 24u;
                            vec4 _3681 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3668)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3668 + 3u)).x));
                            uint _3687 = (_3593 * 40u) + 28u;
                            vec4 _3700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3687 + 3u)).x));
                            _3712 = fma(_2117, _3700.z, fma(_2116, _3700.y, _3700.x * _2115)) + _3700.w;
                            _3713 = !((fma(_2117, _3681.z, fma(_2116, _3681.y, _3681.x * _2115)) + _3681.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3713)
                            {
                                float _3740 = _3608.x - _2115;
                                float _3741 = _3608.y - _2116;
                                float _3742 = _3608.z - _2117;
                                float _3743 = dot(vec3(_3740, _3741, _3742), vec3(_3740, _3741, _3742));
                                float _3746 = inversesqrt(_3743);
                                float _3747 = _3746 * _3740;
                                float _3748 = _3746 * _3741;
                                float _3749 = _3746 * _3742;
                                float _3753 = 1.0 - (_3743 / (_3609 * _3609));
                                float _5031 = isnan(0.0) ? _3753 : (isnan(_3753) ? 0.0 : max(_3753, 0.0));
                                float _3754 = isnan(1.0) ? _5031 : (isnan(_5031) ? 1.0 : min(_5031, 1.0));
                                float _3758 = sqrt(_3743) * _3624.w;
                                float _3760 = 1.39999997615814208984375 / (_3758 + 1.39999997615814208984375);
                                float _3761 = _3760 * _3760;
                                float _3764 = ((1.0 - _3761) * dot(vec3(_3747, _3748, _3749), vec3(_943, _946, _949))) + _3761;
                                float _3767 = _3758 * _3758;
                                float _3771 = (fma(_2117, _3651.z, fma(_2116, _3651.y, _3651.x * _2115)) + _3651.w) / _3712;
                                float _3772 = (fma(_2117, _3666.z, fma(_2116, _3666.y, _3666.x * _2115)) + _3666.w) / _3712;
                                float _3776 = 1.0 - dot(vec2(_3771, _3772), vec2(_3771, _3772));
                                float _5047 = isnan(0.0) ? _3776 : (isnan(_3776) ? 0.0 : max(_3776, 0.0));
                                float _3777 = isnan(1.0) ? _5047 : (isnan(_5047) ? 1.0 : min(_5047, 1.0));
                                float _3778 = _3777 * (((isnan(0.0) ? _3764 : (isnan(_3764) ? 0.0 : max(_3764, 0.0))) * _3754) / ((_3767 * 0.699999988079071044921875) + 1.0));
                                float _3790 = exp2(log2(1.0 / ((_3767 * 3.5) + 5.0)) * 0.25);
                                float _3791 = 1.0 - _1006;
                                float _3798 = sqrt(1.0 - ((1.0 - (_3791 * _3791)) * (1.0 - (_3790 * _3790))));
                                float _3799 = _3798 * _3798;
                                float _3800 = _3799 * _3799;
                                float _3801 = _3747 - _3251;
                                float _3802 = _3748 - _3252;
                                float _3803 = _3749 - _3253;
                                float _3807 = inversesqrt(dot(vec3(_3801, _3802, _3803), vec3(_3801, _3802, _3803)));
                                float _3811 = dot(vec3(_943, _946, _949), vec3((-0.0) - _3251, (-0.0) - _3252, (-0.0) - _3253));
                                float _5058 = isnan(0.0) ? _3811 : (isnan(_3811) ? 0.0 : max(_3811, 0.0));
                                float _3814 = isnan(1.0) ? _5058 : (isnan(_5058) ? 1.0 : min(_5058, 1.0));
                                float _3815 = dot(vec3(_943, _946, _949), vec3(_3807 * _3801, _3807 * _3802, _3807 * _3803));
                                float _5069 = isnan(0.0) ? _3815 : (isnan(_3815) ? 0.0 : max(_3815, 0.0));
                                float _3818 = isnan(1.0) ? _5069 : (isnan(_5069) ? 1.0 : min(_5069, 1.0));
                                float _3822 = ((_3818 * _3818) * (_3800 + (-1.0))) + 1.0;
                                float _3823 = _3760 * _3799;
                                float _3824 = _3823 * _3823;
                                float _3830 = ((1.0 - _3824) * dot(vec3(_943, _946, _949), vec3(_3747, _3748, _3749))) + _3824;
                                float _5080 = isnan(0.0) ? _3830 : (isnan(_3830) ? 0.0 : max(_3830, 0.0));
                                float _3831 = isnan(1.0) ? _5080 : (isnan(_5080) ? 1.0 : min(_5080, 1.0));
                                float _3832 = 1.0 - _3799;
                                float _3842 = (0.5 / (((_3831 * ((_3814 * _3832) + _3799)) + 9.9999999392252902907785028219223e-09) + (((_3831 * _3832) + _3799) * _3814))) * _3831;
                                float _5091 = isnan(0.0) ? _3842 : (isnan(_3842) ? 0.0 : max(_3842, 0.0));
                                float _3852 = (_3777 * _3754) * (((_3800 * 3.1415927410125732421875) * (isnan(1.0) ? _5091 : (isnan(_5091) ? 1.0 : min(_5091, 1.0)))) / ((_3822 * _3822) * ((_3767 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3778 * _3624.y;
                                frontier_phi_78_pred_1 = _3778 * _3624.x;
                                frontier_phi_78_pred_2 = _3852 * _3636.z;
                                frontier_phi_78_pred_3 = _3852 * _3636.y;
                                frontier_phi_78_pred_4 = _3852 * _3636.x;
                                frontier_phi_78_pred_5 = _3778 * _3624.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3860 = frontier_phi_78_pred;
                            _3859 = frontier_phi_78_pred_1;
                            _3858 = frontier_phi_78_pred_2;
                            _3857 = frontier_phi_78_pred_3;
                            _3856 = frontier_phi_78_pred_4;
                            _3861 = frontier_phi_78_pred_5;
                            _3566 = _3859 + _3579;
                            _3567 = _3860 + _3580;
                            _3568 = _3861 + _3581;
                            _3563 = _3856 + _3576;
                            _3564 = _3857 + _3577;
                            _3565 = _3858 + _3578;
                            if (_3583 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3576 = _3563;
                                _3577 = _3564;
                                _3578 = _3565;
                                _3579 = _3566;
                                _3580 = _3567;
                                _3581 = _3568;
                                _3582 = _3583;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3568;
                        frontier_phi_72_pred_1 = _3567;
                        frontier_phi_72_pred_2 = _3566;
                        frontier_phi_72_pred_3 = _3565;
                        frontier_phi_72_pred_4 = _3564;
                        frontier_phi_72_pred_5 = _3563;
                    }
                    _3236 = frontier_phi_72_pred;
                    _3234 = frontier_phi_72_pred_1;
                    _3232 = frontier_phi_72_pred_2;
                    _3230 = frontier_phi_72_pred_3;
                    _3228 = frontier_phi_72_pred_4;
                    _3226 = frontier_phi_72_pred_5;
                    uint _3371 = _3370 + 1u;
                    if (_3371 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3364 = _3226;
                        _3365 = _3228;
                        _3366 = _3230;
                        _3367 = _3232;
                        _3368 = _3234;
                        _3369 = _3236;
                        _3370 = _3371;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3236;
                frontier_phi_60_61_ladder_1 = _3234;
                frontier_phi_60_61_ladder_2 = _3230;
                frontier_phi_60_61_ladder_3 = _3228;
                frontier_phi_60_61_ladder_4 = _3226;
                frontier_phi_60_61_ladder_5 = _3232;
            }
            else
            {
                frontier_phi_60_61_ladder = _3123;
                frontier_phi_60_61_ladder_1 = _3121;
                frontier_phi_60_61_ladder_2 = _3117;
                frontier_phi_60_61_ladder_3 = _3115;
                frontier_phi_60_61_ladder_4 = _3113;
                frontier_phi_60_61_ladder_5 = _3119;
            }
            _3225 = frontier_phi_60_61_ladder_4;
            _3227 = frontier_phi_60_61_ladder_3;
            _3229 = frontier_phi_60_61_ladder_2;
            _3231 = frontier_phi_60_61_ladder_5;
            _3233 = frontier_phi_60_61_ladder_1;
            _3235 = frontier_phi_60_61_ladder;
        }
        float _3240 = isnan(1.0) ? _987 : (isnan(_987) ? 1.0 : min(_987, 1.0));
        _3052 = (_3240 * _3231) + _2583;
        _3054 = (_3240 * _3233) + _2585;
        _3056 = (_3240 * _3235) + _2587;
        _3058 = ((_3225 * 0.039999999105930328369140625) * _3240) + _2906;
        _3060 = ((_3227 * 0.039999999105930328369140625) * _3240) + _2908;
        _3062 = ((_3229 * 0.039999999105930328369140625) * _3240) + _2910;
    }
    else
    {
        _3052 = _2583;
        _3054 = _2585;
        _3056 = _2587;
        _3058 = _2906;
        _3060 = _2908;
        _3062 = _2910;
    }
    float _5107 = isnan(0.0) ? _972 : (isnan(_972) ? 0.0 : max(_972, 0.0));
    float _5118 = isnan(0.0) ? _973 : (isnan(_973) ? 0.0 : max(_973, 0.0));
    float _5129 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    uint _3082 = _281 + 6u;
    vec4 _3099 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2022, _2023, (log2((isnan(cbSceneParam._m0[77u].w) ? _858 : (isnan(_858) ? cbSceneParam._m0[77u].w : min(_858, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3101 = _3099.x;
    float _3102 = _3099.y;
    float _3103 = _3099.z;
    float _3104 = _3099.w;
    float _3176;
    float _3178;
    float _3180;
    float _3182;
    if (_858 > cbSceneParam._m0[78u].w)
    {
        float _3138 = isnan(_858) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _858 : min(cbSceneParam._m0[80u].w, _858));
        float _3139 = _3138 / _858;
        float _3150 = _3139 * _909;
        float _3151 = _910 * _3139;
        float _3152 = (-0.0) - _3151;
        float _3154 = _3139 * _911;
        float _3156 = (cbSceneParam._m0[77u].w * _3152) / _3138;
        float _3157 = _3156 + cbSceneParam._m0[79u].w;
        float _3158 = cbSceneParam._m0[79u].w - _3151;
        float _3164 = sqrt(((_3150 * _3150) + (_3151 * _3151)) + (_3154 * _3154));
        float _3167 = (1.0 - (cbSceneParam._m0[77u].w / _3138)) * _3164;
        float _3172 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3174 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3326;
        if (abs((_3152 - _3156) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3326 = ((((_3157 > 0.0) ? exp2(_3172 * _3157) : (2.0 - exp2(_3174 * _3157))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3167;
        }
        else
        {
            float _3286 = 1.0 / cbSceneParam._m0[80u].x;
            float _3287 = isnan(_3158) ? _3157 : (isnan(_3157) ? _3158 : max(_3157, _3158));
            float _3288 = isnan(_3158) ? _3157 : (isnan(_3157) ? _3158 : min(_3157, _3158));
            float _3297 = isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : min(_3287, 0.0));
            float _3298 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : min(_3288, 0.0));
            _3326 = ((abs(_3164 / _3152) * cbSceneParam._m0[80u].y) * ((((_3297 - _3298) * 2.0) - ((exp2(_3172 * (isnan(0.0) ? _3287 : (isnan(_3287) ? 0.0 : max(_3287, 0.0)))) - exp2(_3172 * (isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0))))) * _3286)) - ((exp2(_3174 * _3297) - exp2(_3174 * _3298)) * _3286))) + (_3167 * cbSceneParam._m0[80u].z);
        }
        vec4 _3328 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2022, _2023, 1.0), 0.0);
        float _3337 = exp2((_3326 * (-1.44269502162933349609375)) * (1.0 - _3328.w));
        float _3338 = log2(_3337);
        float _3354 = log2(_3104);
        _3176 = (exp2(_3354 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3338 * cbSceneParam._m0[78u].x)) * _3328.x) / cbSceneParam._m0[78u].x)) + _3101;
        _3178 = (exp2(_3354 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3338 * cbSceneParam._m0[78u].y)) * _3328.y) / cbSceneParam._m0[78u].y)) + _3102;
        _3180 = (exp2(_3354 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3338 * cbSceneParam._m0[78u].z)) * _3328.z) / cbSceneParam._m0[78u].z)) + _3103;
        _3182 = _3337 * _3104;
    }
    else
    {
        _3176 = _3101;
        _3178 = _3102;
        _3180 = _3103;
        _3182 = _3104;
    }
    float _3193 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3194 = _3193 == 3.0;
    float _3195 = log2(_3182);
    float _3202 = exp2(_3195 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _5107 : (isnan(_5107) ? 1.0 : min(_5107, 1.0))) * (_3052 + ((isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0))) * _987))) + (((((_1999 * (_2047.x / _2053)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2005 : (isnan(_2005) ? 0.0 : max(_2005, 0.0))) * _1794) * _2068)) + _3058) * cbPerFrame._m0[3u].x));
    float _3203 = exp2(_3195 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _5118 : (isnan(_5118) ? 1.0 : min(_5118, 1.0))) * (_3054 + ((isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0))) * _987))) + (((((_1999 * (_2047.y / _2053)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2008 : (isnan(_2008) ? 0.0 : max(_2008, 0.0))) * _1794) * _2068)) + _3060) * cbPerFrame._m0[3u].x));
    float _3204 = exp2(_3195 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _5129 : (isnan(_5129) ? 1.0 : min(_5129, 1.0))) * (_3056 + ((isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0))) * _987))) + (((((_1999 * (_2047.z / _2053)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))) * _1794) * _2068)) + _3062) * cbPerFrame._m0[3u].x));
    float _3213 = (_3193 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3213 * (_3194 ? _3202 : (_3202 + (cbSceneParam._m0[72u].w * _3176)));
    SV_Target.y = _3213 * (_3194 ? _3203 : (_3203 + (cbSceneParam._m0[72u].w * _3178)));
    SV_Target.z = _3213 * (_3194 ? _3204 : (_3204 + (cbSceneParam._m0[72u].w * _3180)));
    SV_Target.w = cbInstanceData._m0[_3082].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3082].w;
}


