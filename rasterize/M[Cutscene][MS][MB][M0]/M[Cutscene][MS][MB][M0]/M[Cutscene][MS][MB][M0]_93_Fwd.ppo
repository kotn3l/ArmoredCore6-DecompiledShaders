#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1279;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _223 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _224 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _225 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _231 = inversesqrt(dot(vec3(_223, _224, _225), vec3(_223, _224, _225)));
    float _238 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _245 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _251 = uint(roundEven(NORMAL.w)) * 13u;
    uint _256 = _251 + 1u;
    uint _260 = _251 + 2u;
    float _269 = sqrt(((cbInstanceData._m0[_256].x * cbInstanceData._m0[_256].x) + (cbInstanceData._m0[_251].x * cbInstanceData._m0[_251].x)) + (cbInstanceData._m0[_260].x * cbInstanceData._m0[_260].x));
    float _270 = _269 * TEXCOORD.z;
    float _271 = _269 * TEXCOORD.w;
    vec4 _291 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _297 = _291.x * cbMtdParam._m0[11u].x;
    float _298 = _291.y * cbMtdParam._m0[11u].y;
    float _299 = _291.z * cbMtdParam._m0[11u].z;
    vec4 _318 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _270) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _271) + cbTextureTilingScale._m0[5u].w));
    vec4 _353 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _355 = _353.x;
    float _368 = dot(vec4(_355, _353.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _385 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_355 - _368) * cbMtdParam._m0[24u].x) + _368) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3634 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _3634 : (isnan(_3634) ? 1.0 : min(_3634, 1.0));
    float _393 = (_386 * ((_318.x * cbMtdParam._m0[12u].x) - _297)) + _297;
    float _394 = (_386 * ((_318.y * cbMtdParam._m0[12u].y) - _298)) + _298;
    float _395 = (_386 * ((_318.z * cbMtdParam._m0[12u].z) - _299)) + _299;
    vec4 _413 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _270) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _271) + cbTextureTilingScale._m0[20u].w));
    vec4 _438 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _440 = _438.x;
    float _441 = _438.y;
    float _446 = cbMtdParam._m0[25u].w * _438.z;
    float _3645 = isnan(0.0) ? _446 : (isnan(_446) ? 0.0 : max(_446, 0.0));
    float _447 = isnan(1.0) ? _3645 : (isnan(_3645) ? 1.0 : min(_3645, 1.0));
    vec4 _460 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _270) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _271) + cbTextureTilingScale._m0[4u].w));
    float _468 = cbMtdParam._m0[26u].x * _460.z;
    float _3656 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _478 = (((isnan(1.0) ? _3656 : (isnan(_3656) ? 1.0 : min(_3656, 1.0))) - _447) * _386) + _447;
    float _481 = ((((_460.x - _440) * _386) + _440) * 2.0) + (-1.0);
    float _482 = ((((_460.y - _441) * _386) + _441) * 2.0) + (-1.0);
    float _483 = dot(vec2(_481, _482), vec2(_481, _482));
    float _3667 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
    float _488 = sqrt(1.0 - (isnan(1.0) ? _3667 : (isnan(_3667) ? 1.0 : min(_3667, 1.0))));
    vec4 _505 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _512 = cbMtdParam._m0[25u].z * _505.z;
    float _3678 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    vec4 _533 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _270) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _271) + cbTextureTilingScale._m0[11u].w));
    float _535 = _533.x;
    float _536 = 1.0 - _535;
    float _542 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _545 = ((isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : min(_542, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _554 = (_545 - ((((((_535 - _536) * cbMtdParam._m0[24u].z) + _536) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _545))) * (cbMtdParam._m0[21u].w + 1.0);
    float _3699 = isnan(0.0) ? _554 : (isnan(_554) ? 0.0 : max(_554, 0.0));
    float _555 = isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0));
    float _562 = (_555 * (cbMtdParam._m0[17u].x - _393)) + _393;
    float _563 = (_555 * (cbMtdParam._m0[17u].y - _394)) + _394;
    float _564 = (_555 * (cbMtdParam._m0[17u].z - _395)) + _395;
    vec4 _576 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _270) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _271) + cbTextureTilingScale._m0[19u].w));
    float _578 = _576.x;
    float _579 = 1.0 - _578;
    float _606 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_578 - _579) * cbMtdParam._m0[24u].w) + _579) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3710 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _607 = isnan(1.0) ? _3710 : (isnan(_3710) ? 1.0 : min(_3710, 1.0));
    float _615 = ((((cbMtdParam._m0[10u].x - _562) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _607) + _562;
    float _616 = ((((cbMtdParam._m0[10u].y - _563) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _607) + _563;
    float _617 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _564)) * _607) + _564;
    float _622 = (((_413.z - _478) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _478;
    float _626 = (((isnan(1.0) ? _3678 : (isnan(_3678) ? 1.0 : min(_3678, 1.0))) - _622) * cbMtdParam._m0[19u].w) + _622;
    vec4 _640 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _270) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _271) + cbTextureTilingScale._m0[15u].w));
    float _647 = (_640.x * 2.0) + (-1.0);
    float _648 = (_640.y * 2.0) + (-1.0);
    float _649 = dot(vec2(_647, _648), vec2(_647, _648));
    float _3721 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
    float _657 = (_555 * (_640.z - _626)) + _626;
    float _660 = ((cbMtdParam._m0[23u].y - _657) * _607) + _657;
    float _664 = ((1.0 - _660) * cbMtdParam._m0[26u].y) + _660;
    float _3732 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
    float _665 = isnan(1.0) ? _3732 : (isnan(_3732) ? 1.0 : min(_3732, 1.0));
    vec4 _687 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _270) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _271) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _693 = (_687.x * 2.0) + (-1.0);
    float _694 = (_687.y * 2.0) + (-1.0);
    float _695 = dot(vec2(_693, _694), vec2(_693, _694));
    float _3743 = isnan(0.0) ? _695 : (isnan(_695) ? 0.0 : max(_695, 0.0));
    float _709 = (_481 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_413.x * 2.0) + (-1.0)))) + (((_505.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _710 = (_482 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_413.y * 2.0) + (-1.0)))) + (((_505.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _722 = (((_647 - _709) + (cbMtdParam._m0[21u].x * _709)) * _555) + _709;
    float _723 = (((_648 - _710) + (cbMtdParam._m0[21u].x * _710)) * _555) + _710;
    float _724 = (_555 * (sqrt(1.0 - (isnan(1.0) ? _3721 : (isnan(_3721) ? 1.0 : min(_3721, 1.0)))) - _488)) + _488;
    float _735 = (((_693 - _722) + (_722 * cbMtdParam._m0[22u].z)) * _607) + _722;
    float _736 = (((_694 - _723) + (_723 * cbMtdParam._m0[22u].z)) * _607) + _723;
    float _737 = ((sqrt(1.0 - (isnan(1.0) ? _3743 : (isnan(_3743) ? 1.0 : min(_3743, 1.0)))) - _724) * _607) + _724;
    float _739 = cbMtdParam._m0[22u].x + _505.w;
    float _744 = fma(_737, _238 * NORMAL.x, fma(_736, _245 * TANGENT.x, (_231 * _223) * _735));
    float _747 = fma(_737, _238 * NORMAL.y, fma(_736, _245 * TANGENT.y, (_231 * _224) * _735));
    float _750 = fma(_737, _238 * NORMAL.z, fma(_736, _245 * TANGENT.z, (_231 * _225) * _735));
    float _754 = inversesqrt(dot(vec3(_744, _747, _750), vec3(_744, _747, _750)));
    float _755 = _754 * _744;
    float _756 = _754 * _747;
    float _757 = _754 * _750;
    float _3754 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
    float _758 = isnan(1.0) ? _3754 : (isnan(_3754) ? 1.0 : min(_3754, 1.0));
    float _3765 = isnan(0.0) ? _739 : (isnan(_739) ? 0.0 : max(_739, 0.0));
    float _3776 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _3787 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _3798 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _776 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _817 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _827 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _817);
    float _828 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _817);
    float _829 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _817);
    float _833 = inversesqrt(dot(vec3(_827, _828, _829), vec3(_827, _828, _829)));
    float _834 = _827 * _833;
    float _835 = _828 * _833;
    float _836 = _829 * _833;
    float _842 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _843 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _861 = fma(_757, cbSceneParam._m0[5u].z, fma(_756, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _755));
    float _864 = fma(_757, cbSceneParam._m0[6u].z, fma(_756, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _755));
    float _867 = fma(_757, cbSceneParam._m0[7u].z, fma(_756, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _755));
    uint _881 = (_251 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _887 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3776 : (isnan(_3776) ? 1.0 : min(_3776, 1.0)))) * cbInstanceData._m0[_881].x;
    float _888 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3787 : (isnan(_3787) ? 1.0 : min(_3787, 1.0)))) * cbInstanceData._m0[_881].y;
    float _889 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3798 : (isnan(_3798) ? 1.0 : min(_3798, 1.0)))) * cbInstanceData._m0[_881].z;
    float _3809 = isnan(0.0) ? _887 : (isnan(_887) ? 0.0 : max(_887, 0.0));
    float _890 = isnan(1.0) ? _3809 : (isnan(_3809) ? 1.0 : min(_3809, 1.0));
    float _3820 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
    float _891 = isnan(1.0) ? _3820 : (isnan(_3820) ? 1.0 : min(_3820, 1.0));
    float _3831 = isnan(0.0) ? _889 : (isnan(_889) ? 0.0 : max(_889, 0.0));
    float _892 = isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0));
    vec4 _901 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _842, cbSceneParam._m0[86u].y * _843));
    float _905 = ((isnan(1.0) ? _3765 : (isnan(_3765) ? 1.0 : min(_3765, 1.0))) * TEXCOORD_5.w) * _901.x;
    float _906 = dot(vec3(_755, _756, _757), vec3(_834, _835, _836));
    float _909 = _906 * 2.0;
    float _913 = (_909 * _755) - _834;
    float _914 = (_909 * _756) - _835;
    float _915 = (_909 * _757) - _836;
    float _922 = abs(dot(vec3(_834, _835, _836), vec3(_755, _756, _757)));
    float _3842 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
    float _924 = sqrt(_758);
    float _937 = exp2((_924 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_924 * 3.0));
    float _969 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _973 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _977 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1278;
    float _1280;
    float _1281;
    float _1282;
    float _1283;
    float _1284;
    float _1285;
    float _1286;
    float _1287;
    float _1288;
    float _1289;
    float _1290;
    float _1291;
    float _1292;
    float _1293;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1003 = fma(_977, cbModelParam._m0[26u].z, fma(_973, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _969));
        float _1007 = fma(_977, cbModelParam._m0[27u].z, fma(_973, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _969));
        float _1011 = fma(_977, cbModelParam._m0[28u].z, fma(_973, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _969));
        float _1036 = _969 + _755;
        float _1037 = _973 + _756;
        float _1038 = _977 + _757;
        float _1048 = fma(_1038, cbModelParam._m0[26u].z, fma(_1037, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1036)) - _1003;
        float _1049 = fma(_1038, cbModelParam._m0[27u].z, fma(_1037, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1036)) - _1007;
        float _1050 = fma(_1038, cbModelParam._m0[28u].z, fma(_1037, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1036)) - _1011;
        float _1054 = inversesqrt(dot(vec3(_1048, _1049, _1050), vec3(_1048, _1049, _1050)));
        float _1067 = ((_1054 * _1048) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1003 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1068 = ((_1054 * _1049) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1007 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1069 = ((_1054 * _1050) / cbModelParam._m0[34u].z) + ((((((_1011 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1086 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        vec4 _1093 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1067, _1068, _1069), 0.0);
        float _1106 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1107 = _1106 * (_1072.x + (-0.5));
        float _1108 = _1106 * (_1072.y + (-0.5));
        float _1109 = _1106 * (_1072.z + (-0.5));
        float _1116 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1117 = _1116 * (_1079.x + (-0.5));
        float _1118 = _1116 * (_1079.y + (-0.5));
        float _1119 = _1116 * (_1079.z + (-0.5));
        float _1126 = exp2((_1086.w + (-0.5)) * 20.0) * 2.0;
        float _1127 = _1126 * (_1086.x + (-0.5));
        float _1128 = _1126 * (_1086.y + (-0.5));
        float _1129 = _1126 * (_1086.z + (-0.5));
        float _1136 = exp2((_1093.w + (-0.5)) * 20.0) * 2.0;
        float _1137 = _1136 * (_1093.x + (-0.5));
        float _1138 = _1136 * (_1093.y + (-0.5));
        float _1139 = _1136 * (_1093.z + (-0.5));
        float _1140 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1141 = isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0));
        float _1142 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1143 = _1107 * 0.5;
        float _1144 = _1117 * 0.5;
        float _1145 = _1127 * 0.5;
        float _1146 = dot(vec3(_1143, _1144, _1145), vec3(_1143, _1144, _1145));
        float _1151 = (_1146 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1146);
        float _1160 = (dot(vec3(_755, _756, _757), vec3(_1151 * _1143, _1151 * _1144, _1151 * _1145)) + 1.0) * 0.5;
        float _3868 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1170 = sqrt(((_1144 * _1144) + (_1143 * _1143)) + (_1145 * _1145)) / (_1140 + 9.9999997473787516355514526367188e-06);
        float _3879 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0));
        float _1172 = _1171 * 2.0;
        float _1176 = (1.0 - _1171) / (_1171 + 1.0);
        float _3890 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1177 = isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0));
        float _1186 = ((((1.0 - _1177) * (_1172 + 2.0)) * exp2(log2(isnan(1.0) ? _3868 : (isnan(_3868) ? 1.0 : min(_3868, 1.0))) * (_1172 + 1.0))) + _1177) * _1140;
        float _1187 = _1108 * 0.5;
        float _1188 = _1118 * 0.5;
        float _1189 = _1128 * 0.5;
        float _1190 = dot(vec3(_1187, _1188, _1189), vec3(_1187, _1188, _1189));
        float _1195 = (_1190 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1190);
        float _1203 = (dot(vec3(_755, _756, _757), vec3(_1195 * _1187, _1195 * _1188, _1195 * _1189)) + 1.0) * 0.5;
        float _3901 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1212 = sqrt(((_1188 * _1188) + (_1187 * _1187)) + (_1189 * _1189)) / (_1141 + 9.9999997473787516355514526367188e-06);
        float _3912 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0));
        float _1214 = _1213 * 2.0;
        float _1218 = (1.0 - _1213) / (_1213 + 1.0);
        float _3923 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1219 = isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0));
        float _1228 = ((((1.0 - _1219) * (_1214 + 2.0)) * exp2(log2(isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0))) * (_1214 + 1.0))) + _1219) * _1141;
        float _1229 = _1109 * 0.5;
        float _1230 = _1119 * 0.5;
        float _1231 = _1129 * 0.5;
        float _1232 = dot(vec3(_1229, _1230, _1231), vec3(_1229, _1230, _1231));
        float _1237 = (_1232 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1232);
        float _1245 = (dot(vec3(_755, _756, _757), vec3(_1237 * _1229, _1237 * _1230, _1237 * _1231)) + 1.0) * 0.5;
        float _3934 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1254 = sqrt(((_1230 * _1230) + (_1229 * _1229)) + (_1231 * _1231)) / (_1142 + 9.9999997473787516355514526367188e-06);
        float _3945 = isnan(0.0) ? _1254 : (isnan(_1254) ? 0.0 : max(_1254, 0.0));
        float _1255 = isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0));
        float _1256 = _1255 * 2.0;
        float _1260 = (1.0 - _1255) / (_1255 + 1.0);
        float _3956 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
        float _1261 = isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0));
        float _1270 = ((((1.0 - _1261) * (_1256 + 2.0)) * exp2(log2(isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0))) * (_1256 + 1.0))) + _1261) * _1142;
        _1278 = _1109;
        _1280 = _1108;
        _1281 = _1107;
        _1282 = _1119;
        _1283 = _1118;
        _1284 = _1117;
        _1285 = _1129;
        _1286 = _1128;
        _1287 = _1127;
        _1288 = _1142;
        _1289 = _1141;
        _1290 = _1140;
        _1291 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0)));
        _1292 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0)));
        _1293 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0)));
    }
    else
    {
        _1278 = _1279;
        _1280 = _1279;
        _1281 = _1279;
        _1282 = _1279;
        _1283 = _1279;
        _1284 = _1279;
        _1285 = _1279;
        _1286 = _1279;
        _1287 = _1279;
        _1288 = _1279;
        _1289 = _1279;
        _1290 = _1279;
        _1291 = 0.0;
        _1292 = 0.0;
        _1293 = 0.0;
    }
    float _1586;
    float _1587;
    float _1588;
    float _1589;
    float _1590;
    float _1591;
    float _1592;
    float _1593;
    float _1594;
    float _1595;
    float _1596;
    float _1597;
    float _1598;
    float _1599;
    float _1600;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1317 = fma(_977, cbModelParam._m0[30u].z, fma(_973, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _969));
        float _1321 = fma(_977, cbModelParam._m0[31u].z, fma(_973, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _969));
        float _1325 = fma(_977, cbModelParam._m0[32u].z, fma(_973, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _969));
        float _1348 = _969 + _755;
        float _1349 = _973 + _756;
        float _1350 = _977 + _757;
        float _1360 = fma(_1350, cbModelParam._m0[30u].z, fma(_1349, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1348)) - _1317;
        float _1361 = fma(_1350, cbModelParam._m0[31u].z, fma(_1349, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1348)) - _1321;
        float _1362 = fma(_1350, cbModelParam._m0[32u].z, fma(_1349, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1348)) - _1325;
        float _1366 = inversesqrt(dot(vec3(_1360, _1361, _1362), vec3(_1360, _1361, _1362)));
        float _1379 = ((_1366 * _1360) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1317 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1380 = ((_1366 * _1361) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1321 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1381 = ((_1366 * _1362) / cbModelParam._m0[35u].z) + ((((((_1325 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1383 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1379, _1380, _1381), 0.0);
        vec4 _1390 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1379, _1380, _1381), 0.0);
        vec4 _1397 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1379, _1380, _1381), 0.0);
        vec4 _1404 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1379, _1380, _1381), 0.0);
        float _1416 = exp2((_1383.w + (-0.5)) * 20.0) * 2.0;
        float _1417 = _1416 * (_1383.x + (-0.5));
        float _1418 = _1416 * (_1383.y + (-0.5));
        float _1419 = _1416 * (_1383.z + (-0.5));
        float _1426 = exp2((_1390.w + (-0.5)) * 20.0) * 2.0;
        float _1427 = _1426 * (_1390.x + (-0.5));
        float _1428 = _1426 * (_1390.y + (-0.5));
        float _1429 = _1426 * (_1390.z + (-0.5));
        float _1436 = exp2((_1397.w + (-0.5)) * 20.0) * 2.0;
        float _1437 = _1436 * (_1397.x + (-0.5));
        float _1438 = _1436 * (_1397.y + (-0.5));
        float _1439 = _1436 * (_1397.z + (-0.5));
        float _1446 = exp2((_1404.w + (-0.5)) * 20.0) * 2.0;
        float _1447 = _1446 * (_1404.x + (-0.5));
        float _1448 = _1446 * (_1404.y + (-0.5));
        float _1449 = _1446 * (_1404.z + (-0.5));
        float _1450 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
        float _1451 = isnan(0.0) ? _1448 : (isnan(_1448) ? 0.0 : max(_1448, 0.0));
        float _1452 = isnan(0.0) ? _1449 : (isnan(_1449) ? 0.0 : max(_1449, 0.0));
        float _1453 = _1417 * 0.5;
        float _1454 = _1427 * 0.5;
        float _1455 = _1437 * 0.5;
        float _1456 = dot(vec3(_1453, _1454, _1455), vec3(_1453, _1454, _1455));
        float _1461 = (_1456 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1456);
        float _1469 = (dot(vec3(_755, _756, _757), vec3(_1461 * _1453, _1461 * _1454, _1461 * _1455)) + 1.0) * 0.5;
        float _3997 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1478 = sqrt(((_1454 * _1454) + (_1453 * _1453)) + (_1455 * _1455)) / (_1450 + 9.9999997473787516355514526367188e-06);
        float _4008 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1479 = isnan(1.0) ? _4008 : (isnan(_4008) ? 1.0 : min(_4008, 1.0));
        float _1480 = _1479 * 2.0;
        float _1484 = (1.0 - _1479) / (_1479 + 1.0);
        float _4019 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1485 = isnan(1.0) ? _4019 : (isnan(_4019) ? 1.0 : min(_4019, 1.0));
        float _1494 = ((((1.0 - _1485) * (_1480 + 2.0)) * exp2(log2(isnan(1.0) ? _3997 : (isnan(_3997) ? 1.0 : min(_3997, 1.0))) * (_1480 + 1.0))) + _1485) * _1450;
        float _1495 = _1418 * 0.5;
        float _1496 = _1428 * 0.5;
        float _1497 = _1438 * 0.5;
        float _1498 = dot(vec3(_1495, _1496, _1497), vec3(_1495, _1496, _1497));
        float _1503 = (_1498 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1498);
        float _1511 = (dot(vec3(_755, _756, _757), vec3(_1503 * _1495, _1503 * _1496, _1503 * _1497)) + 1.0) * 0.5;
        float _4030 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1520 = sqrt(((_1496 * _1496) + (_1495 * _1495)) + (_1497 * _1497)) / (_1451 + 9.9999997473787516355514526367188e-06);
        float _4041 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _4041 : (isnan(_4041) ? 1.0 : min(_4041, 1.0));
        float _1522 = _1521 * 2.0;
        float _1526 = (1.0 - _1521) / (_1521 + 1.0);
        float _4052 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1527 = isnan(1.0) ? _4052 : (isnan(_4052) ? 1.0 : min(_4052, 1.0));
        float _1536 = ((((1.0 - _1527) * (_1522 + 2.0)) * exp2(log2(isnan(1.0) ? _4030 : (isnan(_4030) ? 1.0 : min(_4030, 1.0))) * (_1522 + 1.0))) + _1527) * _1451;
        float _1537 = _1419 * 0.5;
        float _1538 = _1429 * 0.5;
        float _1539 = _1439 * 0.5;
        float _1540 = dot(vec3(_1537, _1538, _1539), vec3(_1537, _1538, _1539));
        float _1545 = (_1540 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1540);
        float _1553 = (dot(vec3(_755, _756, _757), vec3(_1545 * _1537, _1545 * _1538, _1545 * _1539)) + 1.0) * 0.5;
        float _4063 = isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0));
        float _1562 = sqrt(((_1538 * _1538) + (_1537 * _1537)) + (_1539 * _1539)) / (_1452 + 9.9999997473787516355514526367188e-06);
        float _4074 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
        float _1563 = isnan(1.0) ? _4074 : (isnan(_4074) ? 1.0 : min(_4074, 1.0));
        float _1564 = _1563 * 2.0;
        float _1568 = (1.0 - _1563) / (_1563 + 1.0);
        float _4085 = isnan(0.0) ? _1568 : (isnan(_1568) ? 0.0 : max(_1568, 0.0));
        float _1569 = isnan(1.0) ? _4085 : (isnan(_4085) ? 1.0 : min(_4085, 1.0));
        float _1578 = ((((1.0 - _1569) * (_1564 + 2.0)) * exp2(log2(isnan(1.0) ? _4063 : (isnan(_4063) ? 1.0 : min(_4063, 1.0))) * (_1564 + 1.0))) + _1569) * _1452;
        _1586 = _1419;
        _1587 = _1418;
        _1588 = _1417;
        _1589 = _1429;
        _1590 = _1428;
        _1591 = _1427;
        _1592 = _1439;
        _1593 = _1438;
        _1594 = _1437;
        _1595 = _1452;
        _1596 = _1451;
        _1597 = _1450;
        _1598 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0)));
        _1599 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0)));
        _1600 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0)));
    }
    else
    {
        _1586 = _1279;
        _1587 = _1279;
        _1588 = _1279;
        _1589 = _1279;
        _1590 = _1279;
        _1591 = _1279;
        _1592 = _1279;
        _1593 = _1279;
        _1594 = _1279;
        _1595 = _1279;
        _1596 = _1279;
        _1597 = _1279;
        _1598 = 0.0;
        _1599 = 0.0;
        _1600 = 0.0;
    }
    float _1610 = (cbModelParam._m0[1u].x * (_1598 - _1291)) + _1291;
    float _1611 = (cbModelParam._m0[1u].x * (_1599 - _1292)) + _1292;
    float _1612 = (cbModelParam._m0[1u].x * (_1600 - _1293)) + _1293;
    float _1633 = fma(_1612, cbSceneParam._m0[89u].z, fma(_1611, cbSceneParam._m0[89u].y, _1610 * cbSceneParam._m0[89u].x));
    float _1636 = fma(_1612, cbSceneParam._m0[90u].z, fma(_1611, cbSceneParam._m0[90u].y, _1610 * cbSceneParam._m0[90u].x));
    float _1639 = fma(_1612, cbSceneParam._m0[91u].z, fma(_1611, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1610));
    float _1654 = _913 * 0.5;
    float _1655 = _914 * 0.5;
    float _1656 = _915 * 0.5;
    float _1657 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1588, _1591, _1594, _1597));
    float _1660 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1587, _1590, _1593, _1596));
    float _1663 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1586, _1589, _1592, _1595));
    float _1697;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1670 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1278, _1282, _1285, _1288));
        float _1674 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1280, _1283, _1286, _1289));
        float _1678 = dot(vec4(_1654, _1655, _1656, 1.0), vec4(_1281, _1284, _1287, _1290));
        float _1685 = dot(vec4(cbModelParam._m0[39u]), vec4(_1654, _1655, _1656, 1.0));
        _1697 = dot(vec3(isnan(0.0) ? _1678 : (isnan(_1678) ? 0.0 : max(_1678, 0.0)), isnan(0.0) ? _1674 : (isnan(_1674) ? 0.0 : max(_1674, 0.0)), isnan(0.0) ? _1670 : (isnan(_1670) ? 0.0 : max(_1670, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1685) ? 0.0 : (isnan(0.0) ? _1685 : max(0.0, _1685))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1697 = 1.0;
    }
    float _1708;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1699 = dot(vec4(cbModelParam._m0[40u]), vec4(_1654, _1655, _1656, 1.0));
        _1708 = dot(vec3(isnan(0.0) ? _1657 : (isnan(_1657) ? 0.0 : max(_1657, 0.0)), isnan(0.0) ? _1660 : (isnan(_1660) ? 0.0 : max(_1660, 0.0)), isnan(0.0) ? _1663 : (isnan(_1663) ? 0.0 : max(_1663, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1699) ? 0.0 : (isnan(0.0) ? _1699 : max(0.0, _1699))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1708 = 1.0;
    }
    float _1712 = (_1708 * cbModelParam._m0[1u].x) + (_1697 * (1.0 - cbModelParam._m0[1u].x));
    float _1722 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _758);
    float _1723 = isnan(_1722) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1722 : min(cbModelParam._m0[25u].z, _1722));
    float _1804;
    float _1806;
    float _1808;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1771 = fma(_977, cbModelParam._m0[13u].z, fma(_973, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _969)) + cbModelParam._m0[13u].w;
        float _1775 = fma(_977, cbModelParam._m0[14u].z, fma(_973, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _969)) + cbModelParam._m0[14u].w;
        float _1779 = fma(_977, cbModelParam._m0[15u].z, fma(_973, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _969)) + cbModelParam._m0[15u].w;
        float _1782 = fma(_915, cbModelParam._m0[13u].z, fma(_914, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _913));
        float _1785 = fma(_915, cbModelParam._m0[14u].z, fma(_914, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _913));
        float _1788 = fma(_915, cbModelParam._m0[15u].z, fma(_914, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _913));
        float _1816;
        if (_1782 > 0.0)
        {
            _1816 = abs((1.0 - _1771) / _1782);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1782 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1771 + 1.0) / _1782);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1816 = frontier_phi_14_12_ladder;
        }
        float _2074;
        if (_1785 > 0.0)
        {
            _2074 = abs((1.0 - _1775) / _1785);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1785 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1775 + 1.0) / _1785);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2074 = frontier_phi_23_19_ladder;
        }
        float _2317;
        if (_1788 > 0.0)
        {
            _2317 = abs((1.0 - _1779) / _1788);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1788 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1779 + 1.0) / _1788);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2317 = frontier_phi_35_30_ladder;
        }
        float _2319 = isnan(_2074) ? _1816 : (isnan(_1816) ? _2074 : min(_1816, _2074));
        float _2320 = isnan(_2317) ? _2319 : (isnan(_2319) ? _2317 : min(_2319, _2317));
        float _2324 = (_2320 * _1782) + _1771;
        float _2325 = (_2320 * _1785) + _1775;
        float _2326 = (_2320 * _1788) + _1779;
        float _2327 = _2320 * 9.9999997473787516355514526367188e-05;
        float _2329 = (-1.0) - _2327;
        float _2331 = _2327 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2326 > _2331) || ((_2326 < _2329) || ((_2325 > _2331) || ((_2325 < _2329) || ((_2324 < _2329) || (_2324 > _2331))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2450 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2326, cbModelParam._m0[9u].z, fma(_2325, cbModelParam._m0[9u].y, _2324 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2326, cbModelParam._m0[10u].z, fma(_2325, cbModelParam._m0[10u].y, _2324 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2326, cbModelParam._m0[11u].z, fma(_2325, cbModelParam._m0[11u].y, _2324 * cbModelParam._m0[11u].x))), _1723);
            frontier_phi_13_35_ladder = _2450.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2450.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2450.x * cbModelParam._m0[1u].y;
        }
        _1804 = frontier_phi_13_35_ladder_2;
        _1806 = frontier_phi_13_35_ladder_1;
        _1808 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1792 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_913, _914, _915), _1723);
        _1804 = _1792.x * cbModelParam._m0[1u].y;
        _1806 = _1792.y * cbModelParam._m0[1u].y;
        _1808 = _1792.z * cbModelParam._m0[1u].y;
    }
    float _1812 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _758);
    float _1813 = isnan(_1812) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1812 : min(cbModelParam._m0[25u].w, _1812));
    float _1903;
    float _1905;
    float _1907;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1867 = fma(_977, cbModelParam._m0[21u].z, fma(_973, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _969)) + cbModelParam._m0[21u].w;
        float _1871 = fma(_977, cbModelParam._m0[22u].z, fma(_973, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _969)) + cbModelParam._m0[22u].w;
        float _1875 = fma(_977, cbModelParam._m0[23u].z, fma(_973, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _969)) + cbModelParam._m0[23u].w;
        float _1878 = fma(_915, cbModelParam._m0[21u].z, fma(_914, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _913));
        float _1881 = fma(_915, cbModelParam._m0[22u].z, fma(_914, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _913));
        float _1884 = fma(_915, cbModelParam._m0[23u].z, fma(_914, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _913));
        float _2079;
        if (_1878 > 0.0)
        {
            _2079 = abs((1.0 - _1867) / _1878);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1878 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1867 + 1.0) / _1878);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2079 = frontier_phi_25_21_ladder;
        }
        float _2344;
        if (_1881 > 0.0)
        {
            _2344 = abs((1.0 - _1871) / _1881);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1881 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1871 + 1.0) / _1881);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2344 = frontier_phi_37_32_ladder;
        }
        float _2549;
        if (_1884 > 0.0)
        {
            _2549 = abs((1.0 - _1875) / _1884);
        }
        else
        {
            float frontier_phi_46_43_ladder;
            if (_1884 < 0.0)
            {
                frontier_phi_46_43_ladder = abs((_1875 + 1.0) / _1884);
            }
            else
            {
                frontier_phi_46_43_ladder = 5000.0;
            }
            _2549 = frontier_phi_46_43_ladder;
        }
        float _2551 = isnan(_2344) ? _2079 : (isnan(_2079) ? _2344 : min(_2079, _2344));
        float _2552 = isnan(_2549) ? _2551 : (isnan(_2551) ? _2549 : min(_2551, _2549));
        float _2556 = (_2552 * _1878) + _1867;
        float _2557 = (_2552 * _1881) + _1871;
        float _2558 = (_2552 * _1884) + _1875;
        float _2559 = _2552 * 9.9999997473787516355514526367188e-05;
        float _2560 = (-1.0) - _2559;
        float _2562 = _2559 + 1.0;
        float frontier_phi_22_46_ladder;
        float frontier_phi_22_46_ladder_1;
        float frontier_phi_22_46_ladder_2;
        if ((_2558 > _2562) || ((_2558 < _2560) || ((_2557 > _2562) || ((_2557 < _2560) || ((_2556 < _2560) || (_2556 > _2562))))))
        {
            frontier_phi_22_46_ladder = 0.0;
            frontier_phi_22_46_ladder_1 = 0.0;
            frontier_phi_22_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2751 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2558, cbModelParam._m0[17u].z, fma(_2557, cbModelParam._m0[17u].y, _2556 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2558, cbModelParam._m0[18u].z, fma(_2557, cbModelParam._m0[18u].y, _2556 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2558, cbModelParam._m0[19u].z, fma(_2557, cbModelParam._m0[19u].y, _2556 * cbModelParam._m0[19u].x))), _1813);
            frontier_phi_22_46_ladder = _2751.z * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_1 = _2751.y * cbModelParam._m0[1u].z;
            frontier_phi_22_46_ladder_2 = _2751.x * cbModelParam._m0[1u].z;
        }
        _1903 = frontier_phi_22_46_ladder_2;
        _1905 = frontier_phi_22_46_ladder_1;
        _1907 = frontier_phi_22_46_ladder;
    }
    else
    {
        vec4 _1887 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_913, _914, _915), _1813);
        _1903 = _1887.x * cbModelParam._m0[1u].z;
        _1905 = _1887.y * cbModelParam._m0[1u].z;
        _1907 = _1887.z * cbModelParam._m0[1u].z;
    }
    float _1919 = ((((1.0 - _937) * ((_924 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_937 * _924)) * _905;
    float _1920 = _1919 * ((cbModelParam._m0[1u].w * (_1903 - _1804)) + _1804);
    float _1921 = _1919 * ((cbModelParam._m0[1u].w * (_1905 - _1806)) + _1806);
    float _1922 = _1919 * ((cbModelParam._m0[1u].w * (_1907 - _1808)) + _1808);
    float _1925 = fma(_1922, cbSceneParam._m0[89u].z, fma(_1921, cbSceneParam._m0[89u].y, _1920 * cbSceneParam._m0[89u].x));
    float _1928 = fma(_1922, cbSceneParam._m0[90u].z, fma(_1921, cbSceneParam._m0[90u].y, _1920 * cbSceneParam._m0[90u].x));
    float _1931 = fma(_1922, cbSceneParam._m0[91u].z, fma(_1921, cbSceneParam._m0[91u].y, _1920 * cbSceneParam._m0[91u].x));
    float _1942 = _842 / cbSceneParam._m0[86u].x;
    float _1943 = _843 / cbSceneParam._m0[86u].y;
    float _1950 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4211 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
    float _1952 = (isnan(1.0) ? _4211 : (isnan(_4211) ? 1.0 : min(_4211, 1.0))) * 5.0;
    float _1957 = ((10.0 / (_776 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_755, _756, _757), vec3(1.0, 0.0, 0.0));
    vec4 _1967 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1957 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1957 + _1942) * cbSceneParam._m0[86u].x, _843), _1952).w) + _1942) * cbSceneParam._m0[86u].x, _843), _1952);
    float _1973 = isnan(0.5) ? _1967.w : (isnan(_1967.w) ? 0.5 : max(_1967.w, 0.5));
    float _1988 = 1.0 - (_1967.w / _1973);
    uvec4 _1998 = floatBitsToUint(cbInstanceData._m0[_251 + 5u]);
    uint _2000 = _1998.x * 14u;
    uint _2001 = _2000 + 13u;
    float _2008 = _905 + (-1.0);
    float _2013 = (cbLight._m0[_2001].x * _2008) + 1.0;
    float _2014 = (cbLight._m0[_2001].y * _2008) + 1.0;
    float _2015 = (cbLight._m0[_2001].z * _2008) + 1.0;
    float _2016 = (cbLight._m0[_2001].w * _2008) + 1.0;
    uint _2017 = _2000 + 5u;
    float _2023 = isnan(1.0) ? _2014 : (isnan(_2014) ? 1.0 : min(_2014, 1.0));
    uint _2027 = _2000 + 4u;
    float _2033 = isnan(1.0) ? _2013 : (isnan(_2013) ? 1.0 : min(_2013, 1.0));
    uint _2037 = _2000 | 1u;
    float _2048 = dot(vec3(cbLight._m0[_2000].xyz), vec3(_755, _756, _757));
    float _2051 = dot(vec3(cbLight._m0[_2037].xyz), vec3(_755, _756, _757));
    float _4237 = isnan(0.0) ? _2048 : (isnan(_2048) ? 0.0 : max(_2048, 0.0));
    float _4248 = isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0));
    float _2056 = (isnan(1.0) ? _4237 : (isnan(_4237) ? 1.0 : min(_4237, 1.0))) * 0.3183098733425140380859375;
    float _2058 = (isnan(1.0) ? _4248 : (isnan(_4248) ? 1.0 : min(_4248, 1.0))) * 0.3183098733425140380859375;
    float _2065 = ((cbLight._m0[_2017].x * _2023) * _2058) + ((cbLight._m0[_2027].x * _2033) * _2056);
    float _2066 = ((_2023 * cbLight._m0[_2017].y) * _2058) + ((_2033 * cbLight._m0[_2027].y) * _2056);
    float _2067 = ((_2023 * cbLight._m0[_2017].z) * _2058) + ((_2033 * cbLight._m0[_2027].z) * _2056);
    uvec4 _2071 = floatBitsToUint(cbLight._m0[_2000 + 12u]);
    bool _2073 = _2071.x == 0u;
    float _2084;
    float _2086;
    float _2088;
    if (_2073)
    {
        _2084 = _2065;
        _2086 = _2066;
        _2088 = _2067;
    }
    else
    {
        uint _2092 = _2000 + 6u;
        float _2108 = (dot(vec3(cbLight._m0[_2000 + 2u].xyz), vec3(_755, _756, _757)) * 0.5) + 0.5;
        float _2109 = _2108 * _2108;
        float _4259 = isnan(0.0) ? _2109 : (isnan(_2109) ? 0.0 : max(_2109, 0.0));
        float _2110 = isnan(1.0) ? _4259 : (isnan(_4259) ? 1.0 : min(_4259, 1.0));
        float _2111 = isnan(1.0) ? _2015 : (isnan(_2015) ? 1.0 : min(_2015, 1.0));
        _2084 = (((cbLight._m0[_2092].x * 0.3183098733425140380859375) * _2110) * _2111) + _2065;
        _2086 = (((cbLight._m0[_2092].y * 0.3183098733425140380859375) * _2110) * _2111) + _2066;
        _2088 = (((cbLight._m0[_2092].z * 0.3183098733425140380859375) * _2110) * _2111) + _2067;
    }
    bool _2091 = _2071.y == 0u;
    float _2129;
    float _2131;
    float _2133;
    if (_2091)
    {
        _2129 = _2084;
        _2131 = _2086;
        _2133 = _2088;
    }
    else
    {
        uint _2288 = _2000 + 7u;
        float _2304 = (dot(vec3(cbLight._m0[_2000 + 3u].xyz), vec3(_755, _756, _757)) * 0.5) + 0.5;
        float _2305 = _2304 * _2304;
        float _4275 = isnan(0.0) ? _2305 : (isnan(_2305) ? 0.0 : max(_2305, 0.0));
        float _2306 = isnan(1.0) ? _4275 : (isnan(_4275) ? 1.0 : min(_4275, 1.0));
        float _2307 = isnan(1.0) ? _2016 : (isnan(_2016) ? 1.0 : min(_2016, 1.0));
        _2129 = (((cbLight._m0[_2288].x * 0.3183098733425140380859375) * _2306) * _2307) + _2084;
        _2131 = (((cbLight._m0[_2288].y * 0.3183098733425140380859375) * _2306) * _2307) + _2086;
        _2133 = (((cbLight._m0[_2288].z * 0.3183098733425140380859375) * _2306) * _2307) + _2088;
    }
    uint _2136 = _2000 + 8u;
    float _2149 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2000].w)) * _758) * 0.949999988079071044921875);
    float _2150 = _2149 * _2149;
    float _2151 = cbLight._m0[_2000].x + _834;
    float _2152 = cbLight._m0[_2000].y + _835;
    float _2153 = cbLight._m0[_2000].z + _836;
    float _2157 = inversesqrt(dot(vec3(_2151, _2152, _2153), vec3(_2151, _2152, _2153)));
    float _2158 = _2157 * _2151;
    float _2159 = _2157 * _2152;
    float _2160 = _2157 * _2153;
    float _2161 = dot(vec3(_755, _756, _757), vec3(cbLight._m0[_2000].xyz));
    float _4291 = isnan(0.0) ? _2161 : (isnan(_2161) ? 0.0 : max(_2161, 0.0));
    float _2164 = isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0));
    float _4302 = isnan(0.0) ? _906 : (isnan(_906) ? 0.0 : max(_906, 0.0));
    float _2165 = isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0));
    float _2166 = dot(vec3(_755, _756, _757), vec3(_2158, _2159, _2160));
    float _4313 = isnan(0.0) ? _2166 : (isnan(_2166) ? 0.0 : max(_2166, 0.0));
    float _2169 = isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0));
    float _2170 = dot(vec3(cbLight._m0[_2000].xyz), vec3(_2158, _2159, _2160));
    float _4324 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0));
    float _2174 = _2150 * _2150;
    float _2178 = ((_2169 * _2169) * (_2174 + (-1.0))) + 1.0;
    float _2189 = (exp2(log2(1.0 - (isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2190 = 1.0 - _2150;
    float _2201 = (0.5 / (((_2165 * ((_2164 * _2190) + _2150)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2190) + _2150) * _2164))) * _2164;
    float _4335 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
    float _2203 = (isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0))) * (_2174 / ((_2178 * _2178) * 3.141590118408203125));
    uint _2214 = _2000 + 9u;
    float _2225 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2037].w)) * _758) * 0.949999988079071044921875);
    float _2226 = _2225 * _2225;
    float _2227 = cbLight._m0[_2037].x + _834;
    float _2228 = cbLight._m0[_2037].y + _835;
    float _2229 = cbLight._m0[_2037].z + _836;
    float _2233 = inversesqrt(dot(vec3(_2227, _2228, _2229), vec3(_2227, _2228, _2229)));
    float _2234 = _2233 * _2227;
    float _2235 = _2233 * _2228;
    float _2236 = _2233 * _2229;
    float _2237 = dot(vec3(_755, _756, _757), vec3(cbLight._m0[_2037].xyz));
    float _4346 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
    float _2240 = isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0));
    float _2241 = dot(vec3(_755, _756, _757), vec3(_2234, _2235, _2236));
    float _4357 = isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0));
    float _2244 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
    float _2245 = dot(vec3(cbLight._m0[_2037].xyz), vec3(_2234, _2235, _2236));
    float _4368 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
    float _2249 = _2226 * _2226;
    float _2253 = ((_2244 * _2244) * (_2249 + (-1.0))) + 1.0;
    float _2262 = (exp2(log2(1.0 - (isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2263 = 1.0 - _2226;
    float _2273 = (0.5 / (((_2165 * ((_2240 * _2263) + _2226)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2263) + _2226) * _2240))) * _2240;
    float _4379 = isnan(0.0) ? _2273 : (isnan(_2273) ? 0.0 : max(_2273, 0.0));
    float _2275 = (isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0))) * (_2249 / ((_2253 * _2253) * 3.141590118408203125));
    float _2285 = (((_2262 * cbLight._m0[_2214].x) * _2275) * _2023) + (((_2189 * cbLight._m0[_2136].x) * _2203) * _2033);
    float _2286 = (((_2262 * cbLight._m0[_2214].y) * _2275) * _2023) + (((_2189 * cbLight._m0[_2136].y) * _2203) * _2033);
    float _2287 = (((_2262 * cbLight._m0[_2214].z) * _2275) * _2023) + (((_2189 * cbLight._m0[_2136].z) * _2203) * _2033);
    float _2349;
    float _2351;
    float _2353;
    if (_2073)
    {
        _2349 = _2285;
        _2351 = _2286;
        _2353 = _2287;
    }
    else
    {
        uint _2355 = _2000 + 2u;
        uint _2359 = _2000 + 10u;
        float _2373 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2355].w)) * _758) * 0.949999988079071044921875);
        float _2374 = _2373 * _2373;
        float _2375 = cbLight._m0[_2355].x + _834;
        float _2376 = cbLight._m0[_2355].y + _835;
        float _2377 = cbLight._m0[_2355].z + _836;
        float _2381 = inversesqrt(dot(vec3(_2375, _2376, _2377), vec3(_2375, _2376, _2377)));
        float _2382 = _2381 * _2375;
        float _2383 = _2381 * _2376;
        float _2384 = _2381 * _2377;
        float _2385 = dot(vec3(_755, _756, _757), vec3(cbLight._m0[_2355].xyz));
        float _4390 = isnan(0.0) ? _2385 : (isnan(_2385) ? 0.0 : max(_2385, 0.0));
        float _2388 = isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0));
        float _2389 = dot(vec3(_755, _756, _757), vec3(_2382, _2383, _2384));
        float _4401 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
        float _2392 = isnan(1.0) ? _4401 : (isnan(_4401) ? 1.0 : min(_4401, 1.0));
        float _2393 = dot(vec3(cbLight._m0[_2355].xyz), vec3(_2382, _2383, _2384));
        float _4412 = isnan(0.0) ? _2393 : (isnan(_2393) ? 0.0 : max(_2393, 0.0));
        float _2397 = _2374 * _2374;
        float _2401 = ((_2392 * _2392) * (_2397 + (-1.0))) + 1.0;
        float _2410 = (exp2(log2(1.0 - (isnan(1.0) ? _4412 : (isnan(_4412) ? 1.0 : min(_4412, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2411 = 1.0 - _2374;
        float _2421 = (0.5 / (((_2165 * ((_2388 * _2411) + _2374)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2411) + _2374) * _2388))) * _2388;
        float _4423 = isnan(0.0) ? _2421 : (isnan(_2421) ? 0.0 : max(_2421, 0.0));
        float _2423 = (isnan(1.0) ? _4423 : (isnan(_4423) ? 1.0 : min(_4423, 1.0))) * (_2397 / ((_2401 * _2401) * 3.141590118408203125));
        float _2424 = isnan(1.0) ? _2015 : (isnan(_2015) ? 1.0 : min(_2015, 1.0));
        _2349 = (((_2410 * cbLight._m0[_2359].x) * _2423) * _2424) + _2285;
        _2351 = (((_2410 * cbLight._m0[_2359].y) * _2423) * _2424) + _2286;
        _2353 = (((_2410 * cbLight._m0[_2359].z) * _2423) * _2424) + _2287;
    }
    float _2459;
    float _2461;
    float _2463;
    if (_2091)
    {
        _2459 = _2349;
        _2461 = _2351;
        _2463 = _2353;
    }
    else
    {
        uint _2470 = _2000 + 3u;
        uint _2474 = _2000 + 11u;
        float _2488 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2470].w)) * _758) * 0.949999988079071044921875);
        float _2489 = _2488 * _2488;
        float _2490 = cbLight._m0[_2470].x + _834;
        float _2491 = cbLight._m0[_2470].y + _835;
        float _2492 = cbLight._m0[_2470].z + _836;
        float _2496 = inversesqrt(dot(vec3(_2490, _2491, _2492), vec3(_2490, _2491, _2492)));
        float _2497 = _2496 * _2490;
        float _2498 = _2496 * _2491;
        float _2499 = _2496 * _2492;
        float _2500 = dot(vec3(_755, _756, _757), vec3(cbLight._m0[_2470].xyz));
        float _4439 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
        float _2503 = isnan(1.0) ? _4439 : (isnan(_4439) ? 1.0 : min(_4439, 1.0));
        float _2504 = dot(vec3(_755, _756, _757), vec3(_2497, _2498, _2499));
        float _4450 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
        float _2507 = isnan(1.0) ? _4450 : (isnan(_4450) ? 1.0 : min(_4450, 1.0));
        float _2508 = dot(vec3(cbLight._m0[_2470].xyz), vec3(_2497, _2498, _2499));
        float _4461 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
        float _2512 = _2489 * _2489;
        float _2516 = ((_2507 * _2507) * (_2512 + (-1.0))) + 1.0;
        float _2525 = (exp2(log2(1.0 - (isnan(1.0) ? _4461 : (isnan(_4461) ? 1.0 : min(_4461, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2526 = 1.0 - _2489;
        float _2536 = (0.5 / (((_2165 * ((_2503 * _2526) + _2489)) + 9.9999999392252902907785028219223e-09) + (((_2165 * _2526) + _2489) * _2503))) * _2503;
        float _4472 = isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0));
        float _2538 = (isnan(1.0) ? _4472 : (isnan(_4472) ? 1.0 : min(_4472, 1.0))) * (_2512 / ((_2516 * _2516) * 3.141590118408203125));
        float _2539 = isnan(1.0) ? _2016 : (isnan(_2016) ? 1.0 : min(_2016, 1.0));
        _2459 = (((_2525 * cbLight._m0[_2474].x) * _2538) * _2539) + _2349;
        _2461 = (((_2525 * cbLight._m0[_2474].y) * _2538) * _2539) + _2351;
        _2463 = (((_2525 * cbLight._m0[_2474].z) * _2538) * _2539) + _2353;
    }
    float _2674;
    float _2676;
    float _2678;
    float _2680;
    float _2682;
    float _2684;
    if (_1998.y == 0u)
    {
        float _2614 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2615 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2614;
        float _2616 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2614;
        float _2617 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2614;
        uvec4 _2629 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2630 = _2629.x;
        uint _2641 = uint((float(_2629.y) * floor(float(uint(cbSceneParam._m0[85u].y * _843) / _2630))) + floor(float(uint(cbSceneParam._m0[85u].x * _842) / _2630)));
        float _2651 = (log2(_2617 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2652 = isnan(0.0) ? _2651 : (isnan(_2651) ? 0.0 : max(_2651, 0.0));
        uint _2655 = uint(isnan(14.0) ? _2652 : (isnan(_2652) ? 14.0 : min(_2652, 14.0)));
        uvec4 _2660 = texelFetch(g_lightClusterGridBuffer, int(((_2655 << 2u) + (_2641 << 6u)) >> 2u));
        uint _2661 = _2660.x;
        uint _2662 = _2629.z;
        float _2756;
        float _2758;
        float _2760;
        float _2762;
        float _2764;
        float _2766;
        if (((((1u << ((_2662 >> 4u) & 15u)) + 4294967295u) & _2661) == 0u) || ((_2662 & 240u) == 0u))
        {
            _2756 = 0.0;
            _2758 = 0.0;
            _2760 = 0.0;
            _2762 = 0.0;
            _2764 = 0.0;
            _2766 = 0.0;
        }
        else
        {
            float _2757;
            float _2759;
            float _2761;
            float _2763;
            float _2765;
            float _2767;
            float _2900 = 0.0;
            float _2901 = 0.0;
            float _2902 = 0.0;
            float _2903 = 0.0;
            float _2904 = 0.0;
            float _2905 = 0.0;
            uint _2906 = 0u;
            uint _2915;
            bool _2916;
            for (;;)
            {
                _2915 = texelFetch(g_lightClassification, int((((_2655 << 5u) + (_2641 << 9u)) + (_2906 << 2u)) >> 2u)).x;
                _2916 = _2915 == 0u;
                float frontier_phi_61_pred;
                float frontier_phi_61_pred_1;
                float frontier_phi_61_pred_2;
                float frontier_phi_61_pred_3;
                float frontier_phi_61_pred_4;
                float frontier_phi_61_pred_5;
                if (_2916)
                {
                    frontier_phi_61_pred = _2900;
                    frontier_phi_61_pred_1 = _2905;
                    frontier_phi_61_pred_2 = _2904;
                    frontier_phi_61_pred_3 = _2903;
                    frontier_phi_61_pred_4 = _2902;
                    frontier_phi_61_pred_5 = _2901;
                }
                else
                {
                    float _3024;
                    float _3025;
                    float _3026;
                    float _3027;
                    float _3028;
                    float _3029;
                    uint _3030;
                    _3024 = _2900;
                    _3025 = _2901;
                    _3026 = _2902;
                    _3027 = _2903;
                    _3028 = _2904;
                    _3029 = _2905;
                    _3030 = _2915;
                    float _2956;
                    float _2957;
                    float _2958;
                    float _2959;
                    float _2960;
                    float _2961;
                    for (;;)
                    {
                        uint _3034 = uint(findLSB(_3030)) + (_2906 << 5u);
                        uint _3031 = (_3030 + 4294967295u) & _3030;
                        uint _3036 = _3034 * 48u;
                        vec4 _3050 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3036)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3036 + 3u)).x));
                        uint _3056 = (_3034 * 48u) + 4u;
                        vec4 _3069 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3056)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3056 + 3u)).x));
                        uint _3075 = (_3034 * 48u) + 8u;
                        vec3 _3086 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3075)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3075 + 2u)).x));
                        float _3090 = _3050.x - _2615;
                        float _3091 = _3050.y - _2616;
                        float _3092 = _3050.z - _2617;
                        float _3093 = dot(vec3(_3090, _3091, _3092), vec3(_3090, _3091, _3092));
                        float _3096 = inversesqrt(_3093);
                        float _3097 = _3096 * _3090;
                        float _3098 = _3096 * _3091;
                        float _3099 = _3096 * _3092;
                        float _3100 = dot(vec3(_861, _864, _867), vec3(_3097, _3098, _3099));
                        float _3105 = 1.0 - (_3093 * _3050.w);
                        float _4498 = isnan(0.0) ? _3105 : (isnan(_3105) ? 0.0 : max(_3105, 0.0));
                        float _3106 = isnan(1.0) ? _4498 : (isnan(_4498) ? 1.0 : min(_4498, 1.0));
                        float _3107 = sqrt(_3093) * _3069.w;
                        float _3110 = 1.39999997615814208984375 / (_3107 + 1.39999997615814208984375);
                        float _3111 = _3110 * _3110;
                        float _3114 = ((1.0 - _3111) * _3100) + _3111;
                        float _3117 = _3107 * _3107;
                        float _3121 = ((isnan(0.0) ? _3114 : (isnan(_3114) ? 0.0 : max(_3114, 0.0))) * _3106) / ((_3117 * 0.699999988079071044921875) + 1.0);
                        float _3125 = (-0.0) - _2615;
                        float _3126 = (-0.0) - _2616;
                        float _3127 = (-0.0) - _2617;
                        float _3131 = inversesqrt(dot(vec3(_3125, _3126, _3127), vec3(_3125, _3126, _3127)));
                        float _3132 = _3131 * _3125;
                        float _3133 = _3131 * _3126;
                        float _3134 = _3131 * _3127;
                        float _3142 = exp2(log2(1.0 / ((_3117 * 3.5) + 5.0)) * 0.25);
                        float _3143 = 1.0 - _924;
                        float _3150 = sqrt(1.0 - ((1.0 - (_3143 * _3143)) * (1.0 - (_3142 * _3142))));
                        float _3151 = _3150 * _3150;
                        float _3152 = _3151 * _3151;
                        float _3153 = _3132 + _3097;
                        float _3154 = _3133 + _3098;
                        float _3155 = _3134 + _3099;
                        float _3159 = inversesqrt(dot(vec3(_3153, _3154, _3155), vec3(_3153, _3154, _3155)));
                        float _3163 = dot(vec3(_861, _864, _867), vec3(_3132, _3133, _3134));
                        float _4514 = isnan(0.0) ? _3163 : (isnan(_3163) ? 0.0 : max(_3163, 0.0));
                        float _3166 = isnan(1.0) ? _4514 : (isnan(_4514) ? 1.0 : min(_4514, 1.0));
                        float _3167 = dot(vec3(_861, _864, _867), vec3(_3159 * _3153, _3159 * _3154, _3159 * _3155));
                        float _4525 = isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : max(_3167, 0.0));
                        float _3170 = isnan(1.0) ? _4525 : (isnan(_4525) ? 1.0 : min(_4525, 1.0));
                        float _3174 = ((_3170 * _3170) * (_3152 + (-1.0))) + 1.0;
                        float _3175 = _3110 * _3151;
                        float _3176 = _3175 * _3175;
                        float _3179 = ((1.0 - _3176) * _3100) + _3176;
                        float _4536 = isnan(0.0) ? _3179 : (isnan(_3179) ? 0.0 : max(_3179, 0.0));
                        float _3180 = isnan(1.0) ? _4536 : (isnan(_4536) ? 1.0 : min(_4536, 1.0));
                        float _3181 = 1.0 - _3151;
                        float _3191 = (0.5 / (((_3180 * ((_3166 * _3181) + _3151)) + 9.9999999392252902907785028219223e-09) + (((_3180 * _3181) + _3151) * _3166))) * _3180;
                        float _4547 = isnan(0.0) ? _3191 : (isnan(_3191) ? 0.0 : max(_3191, 0.0));
                        float _3202 = (((_3152 * 3.1415927410125732421875) * (isnan(1.0) ? _4547 : (isnan(_4547) ? 1.0 : min(_4547, 1.0)))) / ((_3174 * _3174) * ((_3117 * 2.1991131305694580078125) + 3.141590118408203125))) * _3106;
                        _2959 = (_3121 * _3069.x) + _3027;
                        _2960 = (_3121 * _3069.y) + _3028;
                        _2961 = (_3121 * _3069.z) + _3029;
                        _2956 = (_3202 * _3086.x) + _3024;
                        _2957 = (_3202 * _3086.y) + _3025;
                        _2958 = (_3202 * _3086.z) + _3026;
                        if (_3031 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3024 = _2956;
                            _3025 = _2957;
                            _3026 = _2958;
                            _3027 = _2959;
                            _3028 = _2960;
                            _3029 = _2961;
                            _3030 = _3031;
                        }
                    }
                    frontier_phi_61_pred = _2956;
                    frontier_phi_61_pred_1 = _2961;
                    frontier_phi_61_pred_2 = _2960;
                    frontier_phi_61_pred_3 = _2959;
                    frontier_phi_61_pred_4 = _2958;
                    frontier_phi_61_pred_5 = _2957;
                }
                _2757 = frontier_phi_61_pred;
                _2767 = frontier_phi_61_pred_1;
                _2765 = frontier_phi_61_pred_2;
                _2763 = frontier_phi_61_pred_3;
                _2761 = frontier_phi_61_pred_4;
                _2759 = frontier_phi_61_pred_5;
                uint _2907 = _2906 + 1u;
                if (_2907 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2900 = _2757;
                    _2901 = _2759;
                    _2902 = _2761;
                    _2903 = _2763;
                    _2904 = _2765;
                    _2905 = _2767;
                    _2906 = _2907;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2756 = _2757;
            _2758 = _2759;
            _2760 = _2761;
            _2762 = _2763;
            _2764 = _2765;
            _2766 = _2767;
        }
        uvec4 _2770 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2771 = _2770.z;
        uint _2773 = (_2771 >> 8u) & 15u;
        float _2868;
        float _2870;
        float _2872;
        float _2874;
        float _2876;
        float _2878;
        if (((4294967295u << _2773) & _2661) == 0u)
        {
            _2868 = _2756;
            _2870 = _2758;
            _2872 = _2760;
            _2874 = _2762;
            _2876 = _2764;
            _2878 = _2766;
        }
        else
        {
            float _2893 = inversesqrt(dot(vec3(_2615, _2616, _2617), vec3(_2615, _2616, _2617)));
            float _2894 = _2893 * _2615;
            float _2895 = _2893 * _2616;
            float _2896 = _2893 * _2617;
            float frontier_phi_55_56_ladder;
            float frontier_phi_55_56_ladder_1;
            float frontier_phi_55_56_ladder_2;
            float frontier_phi_55_56_ladder_3;
            float frontier_phi_55_56_ladder_4;
            float frontier_phi_55_56_ladder_5;
            if (_2773 < ((_2771 >> 12u) & 15u))
            {
                float _2869;
                float _2871;
                float _2873;
                float _2875;
                float _2877;
                float _2879;
                float _3007 = _2756;
                float _3008 = _2758;
                float _3009 = _2760;
                float _3010 = _2762;
                float _3011 = _2764;
                float _3012 = _2766;
                uint _3013 = _2773;
                uint _3022;
                bool _3023;
                for (;;)
                {
                    _3022 = texelFetch(g_lightClassification, int((((_2655 << 5u) + (_2641 << 9u)) + (_3013 << 2u)) >> 2u)).x;
                    _3023 = _3022 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_3023)
                    {
                        frontier_phi_67_pred = _3010;
                        frontier_phi_67_pred_1 = _3011;
                        frontier_phi_67_pred_2 = _3012;
                        frontier_phi_67_pred_3 = _3009;
                        frontier_phi_67_pred_4 = _3008;
                        frontier_phi_67_pred_5 = _3007;
                    }
                    else
                    {
                        float _3207;
                        float _3208;
                        float _3209;
                        float _3210;
                        float _3211;
                        float _3212;
                        float _3500;
                        float _3501;
                        float _3502;
                        float _3503;
                        float _3504;
                        float _3505;
                        float _3220 = _3007;
                        float _3221 = _3008;
                        float _3222 = _3009;
                        float _3223 = _3010;
                        float _3224 = _3011;
                        float _3225 = _3012;
                        uint _3226 = _3022;
                        uint _3227;
                        vec4 _3252;
                        float _3253;
                        vec4 _3268;
                        vec3 _3280;
                        vec4 _3295;
                        vec4 _3310;
                        float _3356;
                        bool _3357;
                        for (;;)
                        {
                            uint _3237 = ((_3013 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3226));
                            _3227 = (_3226 + 4294967295u) & _3226;
                            uint _3239 = _3237 * 40u;
                            _3252 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3239)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3239 + 3u)).x));
                            _3253 = _3252.w;
                            uint _3255 = (_3237 * 40u) + 4u;
                            _3268 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3255)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3255 + 3u)).x));
                            uint _3270 = (_3237 * 40u) + 8u;
                            _3280 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3270)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3270 + 2u)).x));
                            uint _3282 = (_3237 * 40u) + 16u;
                            _3295 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3282)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3282 + 3u)).x));
                            uint _3297 = (_3237 * 40u) + 20u;
                            _3310 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3297)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3297 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3297 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3297 + 3u)).x));
                            uint _3312 = (_3237 * 40u) + 24u;
                            vec4 _3325 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3312)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3312 + 3u)).x));
                            uint _3331 = (_3237 * 40u) + 28u;
                            vec4 _3344 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3331)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3331 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3331 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3331 + 3u)).x));
                            _3356 = fma(_2617, _3344.z, fma(_2616, _3344.y, _3344.x * _2615)) + _3344.w;
                            _3357 = !((fma(_2617, _3325.z, fma(_2616, _3325.y, _3325.x * _2615)) + _3325.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_3357)
                            {
                                float _3384 = _3252.x - _2615;
                                float _3385 = _3252.y - _2616;
                                float _3386 = _3252.z - _2617;
                                float _3387 = dot(vec3(_3384, _3385, _3386), vec3(_3384, _3385, _3386));
                                float _3390 = inversesqrt(_3387);
                                float _3391 = _3390 * _3384;
                                float _3392 = _3390 * _3385;
                                float _3393 = _3390 * _3386;
                                float _3397 = 1.0 - (_3387 / (_3253 * _3253));
                                float _4558 = isnan(0.0) ? _3397 : (isnan(_3397) ? 0.0 : max(_3397, 0.0));
                                float _3398 = isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0));
                                float _3402 = sqrt(_3387) * _3268.w;
                                float _3404 = 1.39999997615814208984375 / (_3402 + 1.39999997615814208984375);
                                float _3405 = _3404 * _3404;
                                float _3408 = ((1.0 - _3405) * dot(vec3(_3391, _3392, _3393), vec3(_861, _864, _867))) + _3405;
                                float _3411 = _3402 * _3402;
                                float _3415 = (fma(_2617, _3295.z, fma(_2616, _3295.y, _3295.x * _2615)) + _3295.w) / _3356;
                                float _3416 = (fma(_2617, _3310.z, fma(_2616, _3310.y, _3310.x * _2615)) + _3310.w) / _3356;
                                float _3420 = 1.0 - dot(vec2(_3415, _3416), vec2(_3415, _3416));
                                float _4574 = isnan(0.0) ? _3420 : (isnan(_3420) ? 0.0 : max(_3420, 0.0));
                                float _3421 = isnan(1.0) ? _4574 : (isnan(_4574) ? 1.0 : min(_4574, 1.0));
                                float _3422 = _3421 * (((isnan(0.0) ? _3408 : (isnan(_3408) ? 0.0 : max(_3408, 0.0))) * _3398) / ((_3411 * 0.699999988079071044921875) + 1.0));
                                float _3434 = exp2(log2(1.0 / ((_3411 * 3.5) + 5.0)) * 0.25);
                                float _3435 = 1.0 - _924;
                                float _3442 = sqrt(1.0 - ((1.0 - (_3435 * _3435)) * (1.0 - (_3434 * _3434))));
                                float _3443 = _3442 * _3442;
                                float _3444 = _3443 * _3443;
                                float _3445 = _3391 - _2894;
                                float _3446 = _3392 - _2895;
                                float _3447 = _3393 - _2896;
                                float _3451 = inversesqrt(dot(vec3(_3445, _3446, _3447), vec3(_3445, _3446, _3447)));
                                float _3455 = dot(vec3(_861, _864, _867), vec3((-0.0) - _2894, (-0.0) - _2895, (-0.0) - _2896));
                                float _4585 = isnan(0.0) ? _3455 : (isnan(_3455) ? 0.0 : max(_3455, 0.0));
                                float _3458 = isnan(1.0) ? _4585 : (isnan(_4585) ? 1.0 : min(_4585, 1.0));
                                float _3459 = dot(vec3(_861, _864, _867), vec3(_3451 * _3445, _3451 * _3446, _3451 * _3447));
                                float _4596 = isnan(0.0) ? _3459 : (isnan(_3459) ? 0.0 : max(_3459, 0.0));
                                float _3462 = isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0));
                                float _3466 = ((_3462 * _3462) * (_3444 + (-1.0))) + 1.0;
                                float _3467 = _3404 * _3443;
                                float _3468 = _3467 * _3467;
                                float _3474 = ((1.0 - _3468) * dot(vec3(_861, _864, _867), vec3(_3391, _3392, _3393))) + _3468;
                                float _4607 = isnan(0.0) ? _3474 : (isnan(_3474) ? 0.0 : max(_3474, 0.0));
                                float _3475 = isnan(1.0) ? _4607 : (isnan(_4607) ? 1.0 : min(_4607, 1.0));
                                float _3476 = 1.0 - _3443;
                                float _3486 = (0.5 / (((_3475 * ((_3458 * _3476) + _3443)) + 9.9999999392252902907785028219223e-09) + (((_3475 * _3476) + _3443) * _3458))) * _3475;
                                float _4618 = isnan(0.0) ? _3486 : (isnan(_3486) ? 0.0 : max(_3486, 0.0));
                                float _3496 = (_3421 * _3398) * (((_3444 * 3.1415927410125732421875) * (isnan(1.0) ? _4618 : (isnan(_4618) ? 1.0 : min(_4618, 1.0)))) / ((_3466 * _3466) * ((_3411 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _3496 * _3280.x;
                                frontier_phi_73_pred_1 = _3496 * _3280.y;
                                frontier_phi_73_pred_2 = _3422 * _3268.z;
                                frontier_phi_73_pred_3 = _3422 * _3268.y;
                                frontier_phi_73_pred_4 = _3422 * _3268.x;
                                frontier_phi_73_pred_5 = _3496 * _3280.z;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _3500 = frontier_phi_73_pred;
                            _3501 = frontier_phi_73_pred_1;
                            _3505 = frontier_phi_73_pred_2;
                            _3504 = frontier_phi_73_pred_3;
                            _3503 = frontier_phi_73_pred_4;
                            _3502 = frontier_phi_73_pred_5;
                            _3210 = _3503 + _3223;
                            _3211 = _3504 + _3224;
                            _3212 = _3505 + _3225;
                            _3207 = _3500 + _3220;
                            _3208 = _3501 + _3221;
                            _3209 = _3502 + _3222;
                            if (_3227 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3220 = _3207;
                                _3221 = _3208;
                                _3222 = _3209;
                                _3223 = _3210;
                                _3224 = _3211;
                                _3225 = _3212;
                                _3226 = _3227;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _3210;
                        frontier_phi_67_pred_1 = _3211;
                        frontier_phi_67_pred_2 = _3212;
                        frontier_phi_67_pred_3 = _3209;
                        frontier_phi_67_pred_4 = _3208;
                        frontier_phi_67_pred_5 = _3207;
                    }
                    _2875 = frontier_phi_67_pred;
                    _2877 = frontier_phi_67_pred_1;
                    _2879 = frontier_phi_67_pred_2;
                    _2873 = frontier_phi_67_pred_3;
                    _2871 = frontier_phi_67_pred_4;
                    _2869 = frontier_phi_67_pred_5;
                    uint _3014 = _3013 + 1u;
                    if (_3014 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3007 = _2869;
                        _3008 = _2871;
                        _3009 = _2873;
                        _3010 = _2875;
                        _3011 = _2877;
                        _3012 = _2879;
                        _3013 = _3014;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_55_56_ladder = _2877;
                frontier_phi_55_56_ladder_1 = _2879;
                frontier_phi_55_56_ladder_2 = _2875;
                frontier_phi_55_56_ladder_3 = _2873;
                frontier_phi_55_56_ladder_4 = _2871;
                frontier_phi_55_56_ladder_5 = _2869;
            }
            else
            {
                frontier_phi_55_56_ladder = _2764;
                frontier_phi_55_56_ladder_1 = _2766;
                frontier_phi_55_56_ladder_2 = _2762;
                frontier_phi_55_56_ladder_3 = _2760;
                frontier_phi_55_56_ladder_4 = _2758;
                frontier_phi_55_56_ladder_5 = _2756;
            }
            _2868 = frontier_phi_55_56_ladder_5;
            _2870 = frontier_phi_55_56_ladder_4;
            _2872 = frontier_phi_55_56_ladder_3;
            _2874 = frontier_phi_55_56_ladder_2;
            _2876 = frontier_phi_55_56_ladder;
            _2878 = frontier_phi_55_56_ladder_1;
        }
        float _2883 = isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0));
        _2674 = (_2883 * _2874) + _2129;
        _2676 = (_2883 * _2876) + _2131;
        _2678 = (_2883 * _2878) + _2133;
        _2680 = ((_2868 * 0.039999999105930328369140625) * _2883) + _2459;
        _2682 = ((_2870 * 0.039999999105930328369140625) * _2883) + _2461;
        _2684 = ((_2872 * 0.039999999105930328369140625) * _2883) + _2463;
    }
    else
    {
        _2674 = _2129;
        _2676 = _2131;
        _2678 = _2133;
        _2680 = _2459;
        _2682 = _2461;
        _2684 = _2463;
    }
    float _4634 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
    float _4645 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
    float _4656 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
    uint _2704 = _251 + 6u;
    vec4 _2721 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1942, _1943, (log2((isnan(cbSceneParam._m0[77u].w) ? _776 : (isnan(_776) ? cbSceneParam._m0[77u].w : min(_776, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2723 = _2721.x;
    float _2724 = _2721.y;
    float _2725 = _2721.z;
    float _2726 = _2721.w;
    float _2819;
    float _2821;
    float _2823;
    float _2825;
    if (_776 > cbSceneParam._m0[78u].w)
    {
        float _2781 = isnan(_776) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _776 : min(cbSceneParam._m0[80u].w, _776));
        float _2782 = _2781 / _776;
        float _2793 = _2782 * _827;
        float _2794 = _828 * _2782;
        float _2795 = (-0.0) - _2794;
        float _2797 = _2782 * _829;
        float _2799 = (cbSceneParam._m0[77u].w * _2795) / _2781;
        float _2800 = _2799 + cbSceneParam._m0[79u].w;
        float _2801 = cbSceneParam._m0[79u].w - _2794;
        float _2807 = sqrt(((_2793 * _2793) + (_2794 * _2794)) + (_2797 * _2797));
        float _2810 = (1.0 - (cbSceneParam._m0[77u].w / _2781)) * _2807;
        float _2815 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2817 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2969;
        if (abs((_2795 - _2799) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2969 = ((((_2800 > 0.0) ? exp2(_2815 * _2800) : (2.0 - exp2(_2817 * _2800))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2810;
        }
        else
        {
            float _2929 = 1.0 / cbSceneParam._m0[80u].x;
            float _2930 = isnan(_2801) ? _2800 : (isnan(_2800) ? _2801 : max(_2800, _2801));
            float _2931 = isnan(_2801) ? _2800 : (isnan(_2800) ? _2801 : min(_2800, _2801));
            float _2940 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : min(_2930, 0.0));
            float _2941 = isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : min(_2931, 0.0));
            _2969 = ((abs(_2807 / _2795) * cbSceneParam._m0[80u].y) * ((((_2940 - _2941) * 2.0) - ((exp2(_2815 * (isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0)))) - exp2(_2815 * (isnan(0.0) ? _2931 : (isnan(_2931) ? 0.0 : max(_2931, 0.0))))) * _2929)) - ((exp2(_2817 * _2940) - exp2(_2817 * _2941)) * _2929))) + (_2810 * cbSceneParam._m0[80u].z);
        }
        vec4 _2971 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1942, _1943, 1.0), 0.0);
        float _2980 = exp2((_2969 * (-1.44269502162933349609375)) * (1.0 - _2971.w));
        float _2981 = log2(_2980);
        float _2997 = log2(_2726);
        _2819 = (exp2(_2997 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].x)) * _2971.x) / cbSceneParam._m0[78u].x)) + _2723;
        _2821 = (exp2(_2997 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].y)) * _2971.y) / cbSceneParam._m0[78u].y)) + _2724;
        _2823 = (exp2(_2997 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2981 * cbSceneParam._m0[78u].z)) * _2971.z) / cbSceneParam._m0[78u].z)) + _2725;
        _2825 = _2980 * _2726;
    }
    else
    {
        _2819 = _2723;
        _2821 = _2724;
        _2823 = _2725;
        _2825 = _2726;
    }
    float _2836 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2837 = _2836 == 3.0;
    float _2838 = log2(_2825);
    float _2845 = exp2(_2838 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0))) * (_2674 + ((isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0))) * _905))) + (((((_1919 * (_1967.x / _1973)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1925 : (isnan(_1925) ? 0.0 : max(_1925, 0.0))) * _1712) * _1988)) + _2680) * cbPerFrame._m0[3u].x));
    float _2846 = exp2(_2838 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0))) * (_2676 + ((isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0))) * _905))) + (((((_1919 * (_1967.y / _1973)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1928 : (isnan(_1928) ? 0.0 : max(_1928, 0.0))) * _1712) * _1988)) + _2682) * cbPerFrame._m0[3u].x));
    float _2847 = exp2(_2838 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0))) * (_2678 + ((isnan(0.0) ? _1639 : (isnan(_1639) ? 0.0 : max(_1639, 0.0))) * _905))) + (((((_1919 * (_1967.z / _1973)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1931 : (isnan(_1931) ? 0.0 : max(_1931, 0.0))) * _1712) * _1988)) + _2684) * cbPerFrame._m0[3u].x));
    float _2856 = (_2836 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2856 * (_2837 ? _2845 : (_2845 + (cbSceneParam._m0[72u].w * _2819)));
    SV_Target.y = _2856 * (_2837 ? _2846 : (_2846 + (cbSceneParam._m0[72u].w * _2821)));
    SV_Target.z = _2856 * (_2837 ? _2847 : (_2847 + (cbSceneParam._m0[72u].w * _2823)));
    SV_Target.w = cbInstanceData._m0[_2704].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2704].w;
}


