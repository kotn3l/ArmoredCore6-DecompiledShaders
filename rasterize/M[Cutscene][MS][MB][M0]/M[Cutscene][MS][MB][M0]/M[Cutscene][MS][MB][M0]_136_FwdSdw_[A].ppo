#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 14) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_23;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1423;
float _4115;
float _4116;
float _4117;
float _4118;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _240 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _241 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _242 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _248 = inversesqrt(dot(vec3(_240, _241, _242), vec3(_240, _241, _242)));
    float _255 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _262 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _274 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _276 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _277 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _4127 = isnan(0.0) ? _274 : (isnan(_274) ? 0.0 : max(_274, 0.0));
    float _4138 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _4149 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    uint _287 = uint(roundEven(NORMAL.w)) * 13u;
    uint _292 = _287 + 1u;
    uint _296 = _287 + 2u;
    float _305 = sqrt(((cbInstanceData._m0[_292].x * cbInstanceData._m0[_292].x) + (cbInstanceData._m0[_287].x * cbInstanceData._m0[_287].x)) + (cbInstanceData._m0[_296].x * cbInstanceData._m0[_296].x));
    float _306 = _305 * TEXCOORD.z;
    float _307 = _305 * TEXCOORD.w;
    vec4 _320 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _306) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _307) + cbTextureTilingScale._m0[13u].w));
    vec4 _337 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _339 = _337.w;
    vec4 _358 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _363 = _358.x * cbMtdParam._m0[11u].x;
    float _364 = _358.y * cbMtdParam._m0[11u].y;
    float _365 = _358.z * cbMtdParam._m0[11u].z;
    vec4 _384 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _306) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _307) + cbTextureTilingScale._m0[5u].w));
    vec4 _417 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _419 = _417.x;
    float _432 = dot(vec4(_419, _417.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _449 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_419 - _432) * cbMtdParam._m0[24u].x) + _432) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4160 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0));
    float _450 = isnan(1.0) ? _4160 : (isnan(_4160) ? 1.0 : min(_4160, 1.0));
    float _457 = (_450 * ((_384.x * cbMtdParam._m0[12u].x) - _363)) + _363;
    float _458 = (_450 * ((_384.y * cbMtdParam._m0[12u].y) - _364)) + _364;
    float _459 = (_450 * ((_384.z * cbMtdParam._m0[12u].z) - _365)) + _365;
    float _463 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _320.x) * _457;
    float _466 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _320.y) * _458;
    float _469 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _320.z) * _459;
    float _476 = ((_457 - _463) * (isnan(1.0) ? _4127 : (isnan(_4127) ? 1.0 : min(_4127, 1.0)))) + _463;
    float _477 = ((_458 - _466) * (isnan(1.0) ? _4138 : (isnan(_4138) ? 1.0 : min(_4138, 1.0)))) + _466;
    float _478 = ((_459 - _469) * (isnan(1.0) ? _4149 : (isnan(_4149) ? 1.0 : min(_4149, 1.0)))) + _469;
    vec4 _497 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_23, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[14u].x * _306) + cbTextureTilingScale._m0[14u].z, (cbTextureTilingScale._m0[14u].y * _307) + cbTextureTilingScale._m0[14u].w));
    vec4 _517 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _306) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _307) + cbTextureTilingScale._m0[20u].w));
    vec4 _542 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _544 = _542.x;
    float _545 = _542.y;
    float _550 = cbMtdParam._m0[25u].w * _542.z;
    float _4171 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _551 = isnan(1.0) ? _4171 : (isnan(_4171) ? 1.0 : min(_4171, 1.0));
    vec4 _564 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _306) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _307) + cbTextureTilingScale._m0[4u].w));
    float _572 = cbMtdParam._m0[26u].x * _564.z;
    float _4182 = isnan(0.0) ? _572 : (isnan(_572) ? 0.0 : max(_572, 0.0));
    float _582 = (((isnan(1.0) ? _4182 : (isnan(_4182) ? 1.0 : min(_4182, 1.0))) - _551) * _450) + _551;
    float _585 = ((((_564.x - _544) * _450) + _544) * 2.0) + (-1.0);
    float _586 = ((((_564.y - _545) * _450) + _545) * 2.0) + (-1.0);
    float _587 = dot(vec2(_585, _586), vec2(_585, _586));
    float _4193 = isnan(0.0) ? _587 : (isnan(_587) ? 0.0 : max(_587, 0.0));
    float _592 = sqrt(1.0 - (isnan(1.0) ? _4193 : (isnan(_4193) ? 1.0 : min(_4193, 1.0))));
    vec4 _609 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _616 = cbMtdParam._m0[25u].z * _609.z;
    float _4204 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    vec4 _637 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _306) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _307) + cbTextureTilingScale._m0[11u].w));
    float _639 = _637.x;
    float _640 = 1.0 - _639;
    float _646 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _649 = ((isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : min(_646, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _658 = (_649 - ((((((_639 - _640) * cbMtdParam._m0[24u].z) + _640) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _649))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4225 = isnan(0.0) ? _658 : (isnan(_658) ? 0.0 : max(_658, 0.0));
    float _659 = isnan(1.0) ? _4225 : (isnan(_4225) ? 1.0 : min(_4225, 1.0));
    float _666 = (_659 * ((_497.x * cbMtdParam._m0[18u].x) - _476)) + _476;
    float _667 = (_659 * ((_497.y * cbMtdParam._m0[18u].y) - _477)) + _477;
    float _668 = (_659 * ((_497.z * cbMtdParam._m0[18u].z) - _478)) + _478;
    vec4 _680 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _306) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _307) + cbTextureTilingScale._m0[19u].w));
    float _682 = _680.x;
    float _683 = 1.0 - _682;
    float _708 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_682 - _683) * cbMtdParam._m0[24u].w) + _683) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4236 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
    float _709 = isnan(1.0) ? _4236 : (isnan(_4236) ? 1.0 : min(_4236, 1.0));
    float _717 = ((((cbMtdParam._m0[10u].x - _666) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _709) + _666;
    float _718 = ((((cbMtdParam._m0[10u].y - _667) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _709) + _667;
    float _719 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _668)) * _709) + _668;
    float _724 = (((_517.z - _582) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _582;
    float _728 = (((isnan(1.0) ? _4204 : (isnan(_4204) ? 1.0 : min(_4204, 1.0))) - _724) * cbMtdParam._m0[19u].w) + _724;
    vec4 _742 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _306) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _307) + cbTextureTilingScale._m0[15u].w));
    float _749 = (_742.x * 2.0) + (-1.0);
    float _750 = (_742.y * 2.0) + (-1.0);
    float _751 = dot(vec2(_749, _750), vec2(_749, _750));
    float _4247 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
    float _759 = (_659 * (_742.z - _728)) + _728;
    float _762 = ((cbMtdParam._m0[23u].y - _759) * _709) + _759;
    float _766 = ((1.0 - _762) * cbMtdParam._m0[26u].y) + _762;
    float _4258 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
    float _767 = isnan(1.0) ? _4258 : (isnan(_4258) ? 1.0 : min(_4258, 1.0));
    vec4 _789 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _306) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _307) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _795 = (_789.x * 2.0) + (-1.0);
    float _796 = (_789.y * 2.0) + (-1.0);
    float _797 = dot(vec2(_795, _796), vec2(_795, _796));
    float _4269 = isnan(0.0) ? _797 : (isnan(_797) ? 0.0 : max(_797, 0.0));
    float _811 = (_585 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_517.x * 2.0) + (-1.0)))) + (((_609.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _812 = (_586 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_517.y * 2.0) + (-1.0)))) + (((_609.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _824 = (((_749 - _811) + (cbMtdParam._m0[21u].x * _811)) * _659) + _811;
    float _825 = (((_750 - _812) + (cbMtdParam._m0[21u].x * _812)) * _659) + _812;
    float _826 = (_659 * (sqrt(1.0 - (isnan(1.0) ? _4247 : (isnan(_4247) ? 1.0 : min(_4247, 1.0)))) - _592)) + _592;
    float _837 = (((_795 - _824) + (_824 * cbMtdParam._m0[22u].z)) * _709) + _824;
    float _838 = (((_796 - _825) + (_825 * cbMtdParam._m0[22u].z)) * _709) + _825;
    float _839 = ((sqrt(1.0 - (isnan(1.0) ? _4269 : (isnan(_4269) ? 1.0 : min(_4269, 1.0)))) - _826) * _709) + _826;
    float _843 = cbMtdParam._m0[22u].x + _609.w;
    float _848 = fma(_839, _255 * NORMAL.x, fma(_838, _262 * TANGENT.x, (_248 * _240) * _837));
    float _851 = fma(_839, _255 * NORMAL.y, fma(_838, _262 * TANGENT.y, (_248 * _241) * _837));
    float _854 = fma(_839, _255 * NORMAL.z, fma(_838, _262 * TANGENT.z, (_248 * _242) * _837));
    float _858 = inversesqrt(dot(vec3(_848, _851, _854), vec3(_848, _851, _854)));
    float _859 = _858 * _848;
    float _860 = _858 * _851;
    float _861 = _858 * _854;
    float _4280 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
    float _862 = isnan(1.0) ? _4280 : (isnan(_4280) ? 1.0 : min(_4280, 1.0));
    float _4291 = isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0));
    float _4302 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
    float _4313 = isnan(0.0) ? _718 : (isnan(_718) ? 0.0 : max(_718, 0.0));
    float _4324 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _880 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _921 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _931 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _921);
    float _932 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _921);
    float _933 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _921);
    float _937 = inversesqrt(dot(vec3(_931, _932, _933), vec3(_931, _932, _933)));
    float _938 = _931 * _937;
    float _939 = _932 * _937;
    float _940 = _933 * _937;
    vec4 _945 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _947 = _945.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1104 = sqrt(((_931 * _931) + (_932 * _932)) + (_933 * _933));
        float _1110 = (cbMatDynParam._m0[5u].x * _1104) + cbMatDynParam._m0[5u].y;
        float _4335 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1111 = isnan(1.0) ? _4335 : (isnan(_4335) ? 1.0 : min(_4335, 1.0));
        float _1115 = (cbMatDynParam._m0[5u].z * _1104) + cbMatDynParam._m0[5u].w;
        float _4346 = isnan(0.0) ? _1115 : (isnan(_1115) ? 0.0 : max(_1115, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4346 : (isnan(_4346) ? 1.0 : min(_4346, 1.0))) - _1111)) + _1111) < ((_947 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _958 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _959 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _977 = fma(_861, cbSceneParam._m0[5u].z, fma(_860, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _859));
    float _980 = fma(_861, cbSceneParam._m0[6u].z, fma(_860, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _859));
    float _983 = fma(_861, cbSceneParam._m0[7u].z, fma(_860, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _859));
    uint _996 = _287 + 9u;
    uint _997 = _996 + uint(cbMatDynParam._m0[0u].w);
    float _1003 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4302 : (isnan(_4302) ? 1.0 : min(_4302, 1.0)))) * cbInstanceData._m0[_997].x;
    float _1004 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4313 : (isnan(_4313) ? 1.0 : min(_4313, 1.0)))) * cbInstanceData._m0[_997].y;
    float _1005 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4324 : (isnan(_4324) ? 1.0 : min(_4324, 1.0)))) * cbInstanceData._m0[_997].z;
    float _4357 = isnan(0.0) ? _1003 : (isnan(_1003) ? 0.0 : max(_1003, 0.0));
    float _1006 = isnan(1.0) ? _4357 : (isnan(_4357) ? 1.0 : min(_4357, 1.0));
    float _4368 = isnan(0.0) ? _1004 : (isnan(_1004) ? 0.0 : max(_1004, 0.0));
    float _1007 = isnan(1.0) ? _4368 : (isnan(_4368) ? 1.0 : min(_4368, 1.0));
    float _4379 = isnan(0.0) ? _1005 : (isnan(_1005) ? 0.0 : max(_1005, 0.0));
    float _1008 = isnan(1.0) ? _4379 : (isnan(_4379) ? 1.0 : min(_4379, 1.0));
    vec4 _1017 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _958, cbSceneParam._m0[86u].y * _959));
    float _1021 = ((isnan(1.0) ? _4291 : (isnan(_4291) ? 1.0 : min(_4291, 1.0))) * TEXCOORD_5.w) * _1017.x;
    float _1022 = dot(vec3(_859, _860, _861), vec3(_938, _939, _940));
    float _1025 = _1022 * 2.0;
    float _1029 = (_1025 * _859) - _938;
    float _1030 = (_1025 * _860) - _939;
    float _1031 = (_1025 * _861) - _940;
    float _1038 = abs(dot(vec3(_938, _939, _940), vec3(_859, _860, _861)));
    float _4390 = isnan(0.0) ? _1038 : (isnan(_1038) ? 0.0 : max(_1038, 0.0));
    float _1040 = sqrt(_862);
    float _1053 = exp2((_1040 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4390 : (isnan(_4390) ? 1.0 : min(_4390, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1040 * 3.0));
    float _1085 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1089 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1093 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1422;
    float _1424;
    float _1425;
    float _1426;
    float _1427;
    float _1428;
    float _1429;
    float _1430;
    float _1431;
    float _1432;
    float _1433;
    float _1434;
    float _1435;
    float _1436;
    float _1437;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1147 = fma(_1093, cbModelParam._m0[26u].z, fma(_1089, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1085));
        float _1151 = fma(_1093, cbModelParam._m0[27u].z, fma(_1089, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1085));
        float _1155 = fma(_1093, cbModelParam._m0[28u].z, fma(_1089, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1085));
        float _1180 = _1085 + _859;
        float _1181 = _1089 + _860;
        float _1182 = _1093 + _861;
        float _1192 = fma(_1182, cbModelParam._m0[26u].z, fma(_1181, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1180)) - _1147;
        float _1193 = fma(_1182, cbModelParam._m0[27u].z, fma(_1181, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1180)) - _1151;
        float _1194 = fma(_1182, cbModelParam._m0[28u].z, fma(_1181, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1180)) - _1155;
        float _1198 = inversesqrt(dot(vec3(_1192, _1193, _1194), vec3(_1192, _1193, _1194)));
        float _1211 = ((_1198 * _1192) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1147 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1212 = ((_1198 * _1193) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1151 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1213 = ((_1198 * _1194) / cbModelParam._m0[34u].z) + ((((((_1155 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1216 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1211, _1212, _1213), 0.0);
        vec4 _1223 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1211, _1212, _1213), 0.0);
        vec4 _1230 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1211, _1212, _1213), 0.0);
        vec4 _1237 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1211, _1212, _1213), 0.0);
        float _1250 = exp2((_1216.w + (-0.5)) * 20.0) * 2.0;
        float _1251 = _1250 * (_1216.x + (-0.5));
        float _1252 = _1250 * (_1216.y + (-0.5));
        float _1253 = _1250 * (_1216.z + (-0.5));
        float _1260 = exp2((_1223.w + (-0.5)) * 20.0) * 2.0;
        float _1261 = _1260 * (_1223.x + (-0.5));
        float _1262 = _1260 * (_1223.y + (-0.5));
        float _1263 = _1260 * (_1223.z + (-0.5));
        float _1270 = exp2((_1230.w + (-0.5)) * 20.0) * 2.0;
        float _1271 = _1270 * (_1230.x + (-0.5));
        float _1272 = _1270 * (_1230.y + (-0.5));
        float _1273 = _1270 * (_1230.z + (-0.5));
        float _1280 = exp2((_1237.w + (-0.5)) * 20.0) * 2.0;
        float _1281 = _1280 * (_1237.x + (-0.5));
        float _1282 = _1280 * (_1237.y + (-0.5));
        float _1283 = _1280 * (_1237.z + (-0.5));
        float _1284 = isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0));
        float _1285 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1286 = isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0));
        float _1287 = _1251 * 0.5;
        float _1288 = _1261 * 0.5;
        float _1289 = _1271 * 0.5;
        float _1290 = dot(vec3(_1287, _1288, _1289), vec3(_1287, _1288, _1289));
        float _1295 = (_1290 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1290);
        float _1304 = (dot(vec3(_859, _860, _861), vec3(_1295 * _1287, _1295 * _1288, _1295 * _1289)) + 1.0) * 0.5;
        float _4416 = isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0));
        float _1314 = sqrt(((_1288 * _1288) + (_1287 * _1287)) + (_1289 * _1289)) / (_1284 + 9.9999997473787516355514526367188e-06);
        float _4427 = isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0));
        float _1315 = isnan(1.0) ? _4427 : (isnan(_4427) ? 1.0 : min(_4427, 1.0));
        float _1316 = _1315 * 2.0;
        float _1320 = (1.0 - _1315) / (_1315 + 1.0);
        float _4438 = isnan(0.0) ? _1320 : (isnan(_1320) ? 0.0 : max(_1320, 0.0));
        float _1321 = isnan(1.0) ? _4438 : (isnan(_4438) ? 1.0 : min(_4438, 1.0));
        float _1330 = ((((1.0 - _1321) * (_1316 + 2.0)) * exp2(log2(isnan(1.0) ? _4416 : (isnan(_4416) ? 1.0 : min(_4416, 1.0))) * (_1316 + 1.0))) + _1321) * _1284;
        float _1331 = _1252 * 0.5;
        float _1332 = _1262 * 0.5;
        float _1333 = _1272 * 0.5;
        float _1334 = dot(vec3(_1331, _1332, _1333), vec3(_1331, _1332, _1333));
        float _1339 = (_1334 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1334);
        float _1347 = (dot(vec3(_859, _860, _861), vec3(_1339 * _1331, _1339 * _1332, _1339 * _1333)) + 1.0) * 0.5;
        float _4449 = isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0));
        float _1356 = sqrt(((_1332 * _1332) + (_1331 * _1331)) + (_1333 * _1333)) / (_1285 + 9.9999997473787516355514526367188e-06);
        float _4460 = isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0));
        float _1357 = isnan(1.0) ? _4460 : (isnan(_4460) ? 1.0 : min(_4460, 1.0));
        float _1358 = _1357 * 2.0;
        float _1362 = (1.0 - _1357) / (_1357 + 1.0);
        float _4471 = isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0));
        float _1363 = isnan(1.0) ? _4471 : (isnan(_4471) ? 1.0 : min(_4471, 1.0));
        float _1372 = ((((1.0 - _1363) * (_1358 + 2.0)) * exp2(log2(isnan(1.0) ? _4449 : (isnan(_4449) ? 1.0 : min(_4449, 1.0))) * (_1358 + 1.0))) + _1363) * _1285;
        float _1373 = _1253 * 0.5;
        float _1374 = _1263 * 0.5;
        float _1375 = _1273 * 0.5;
        float _1376 = dot(vec3(_1373, _1374, _1375), vec3(_1373, _1374, _1375));
        float _1381 = (_1376 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1376);
        float _1389 = (dot(vec3(_859, _860, _861), vec3(_1381 * _1373, _1381 * _1374, _1381 * _1375)) + 1.0) * 0.5;
        float _4482 = isnan(0.0) ? _1389 : (isnan(_1389) ? 0.0 : max(_1389, 0.0));
        float _1398 = sqrt(((_1374 * _1374) + (_1373 * _1373)) + (_1375 * _1375)) / (_1286 + 9.9999997473787516355514526367188e-06);
        float _4493 = isnan(0.0) ? _1398 : (isnan(_1398) ? 0.0 : max(_1398, 0.0));
        float _1399 = isnan(1.0) ? _4493 : (isnan(_4493) ? 1.0 : min(_4493, 1.0));
        float _1400 = _1399 * 2.0;
        float _1404 = (1.0 - _1399) / (_1399 + 1.0);
        float _4504 = isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0));
        float _1405 = isnan(1.0) ? _4504 : (isnan(_4504) ? 1.0 : min(_4504, 1.0));
        float _1414 = ((((1.0 - _1405) * (_1400 + 2.0)) * exp2(log2(isnan(1.0) ? _4482 : (isnan(_4482) ? 1.0 : min(_4482, 1.0))) * (_1400 + 1.0))) + _1405) * _1286;
        _1422 = _1253;
        _1424 = _1252;
        _1425 = _1251;
        _1426 = _1263;
        _1427 = _1262;
        _1428 = _1261;
        _1429 = _1273;
        _1430 = _1272;
        _1431 = _1271;
        _1432 = _1286;
        _1433 = _1285;
        _1434 = _1284;
        _1435 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0)));
        _1436 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)));
        _1437 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1414 : (isnan(_1414) ? 0.0 : max(_1414, 0.0)));
    }
    else
    {
        _1422 = _1423;
        _1424 = _1423;
        _1425 = _1423;
        _1426 = _1423;
        _1427 = _1423;
        _1428 = _1423;
        _1429 = _1423;
        _1430 = _1423;
        _1431 = _1423;
        _1432 = _1423;
        _1433 = _1423;
        _1434 = _1423;
        _1435 = 0.0;
        _1436 = 0.0;
        _1437 = 0.0;
    }
    float _1733;
    float _1734;
    float _1735;
    float _1736;
    float _1737;
    float _1738;
    float _1739;
    float _1740;
    float _1741;
    float _1742;
    float _1743;
    float _1744;
    float _1745;
    float _1746;
    float _1747;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1464 = fma(_1093, cbModelParam._m0[30u].z, fma(_1089, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1085));
        float _1468 = fma(_1093, cbModelParam._m0[31u].z, fma(_1089, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1085));
        float _1472 = fma(_1093, cbModelParam._m0[32u].z, fma(_1089, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1085));
        float _1495 = _1085 + _859;
        float _1496 = _1089 + _860;
        float _1497 = _1093 + _861;
        float _1507 = fma(_1497, cbModelParam._m0[30u].z, fma(_1496, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1495)) - _1464;
        float _1508 = fma(_1497, cbModelParam._m0[31u].z, fma(_1496, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1495)) - _1468;
        float _1509 = fma(_1497, cbModelParam._m0[32u].z, fma(_1496, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1495)) - _1472;
        float _1513 = inversesqrt(dot(vec3(_1507, _1508, _1509), vec3(_1507, _1508, _1509)));
        float _1526 = ((_1513 * _1507) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1464 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1527 = ((_1513 * _1508) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1468 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1528 = ((_1513 * _1509) / cbModelParam._m0[35u].z) + ((((((_1472 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1530 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1537 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1544 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        vec4 _1551 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1526, _1527, _1528), 0.0);
        float _1563 = exp2((_1530.w + (-0.5)) * 20.0) * 2.0;
        float _1564 = _1563 * (_1530.x + (-0.5));
        float _1565 = _1563 * (_1530.y + (-0.5));
        float _1566 = _1563 * (_1530.z + (-0.5));
        float _1573 = exp2((_1537.w + (-0.5)) * 20.0) * 2.0;
        float _1574 = _1573 * (_1537.x + (-0.5));
        float _1575 = _1573 * (_1537.y + (-0.5));
        float _1576 = _1573 * (_1537.z + (-0.5));
        float _1583 = exp2((_1544.w + (-0.5)) * 20.0) * 2.0;
        float _1584 = _1583 * (_1544.x + (-0.5));
        float _1585 = _1583 * (_1544.y + (-0.5));
        float _1586 = _1583 * (_1544.z + (-0.5));
        float _1593 = exp2((_1551.w + (-0.5)) * 20.0) * 2.0;
        float _1594 = _1593 * (_1551.x + (-0.5));
        float _1595 = _1593 * (_1551.y + (-0.5));
        float _1596 = _1593 * (_1551.z + (-0.5));
        float _1597 = isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0));
        float _1598 = isnan(0.0) ? _1595 : (isnan(_1595) ? 0.0 : max(_1595, 0.0));
        float _1599 = isnan(0.0) ? _1596 : (isnan(_1596) ? 0.0 : max(_1596, 0.0));
        float _1600 = _1564 * 0.5;
        float _1601 = _1574 * 0.5;
        float _1602 = _1584 * 0.5;
        float _1603 = dot(vec3(_1600, _1601, _1602), vec3(_1600, _1601, _1602));
        float _1608 = (_1603 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1603);
        float _1616 = (dot(vec3(_859, _860, _861), vec3(_1608 * _1600, _1608 * _1601, _1608 * _1602)) + 1.0) * 0.5;
        float _4545 = isnan(0.0) ? _1616 : (isnan(_1616) ? 0.0 : max(_1616, 0.0));
        float _1625 = sqrt(((_1601 * _1601) + (_1600 * _1600)) + (_1602 * _1602)) / (_1597 + 9.9999997473787516355514526367188e-06);
        float _4556 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
        float _1626 = isnan(1.0) ? _4556 : (isnan(_4556) ? 1.0 : min(_4556, 1.0));
        float _1627 = _1626 * 2.0;
        float _1631 = (1.0 - _1626) / (_1626 + 1.0);
        float _4567 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
        float _1632 = isnan(1.0) ? _4567 : (isnan(_4567) ? 1.0 : min(_4567, 1.0));
        float _1641 = ((((1.0 - _1632) * (_1627 + 2.0)) * exp2(log2(isnan(1.0) ? _4545 : (isnan(_4545) ? 1.0 : min(_4545, 1.0))) * (_1627 + 1.0))) + _1632) * _1597;
        float _1642 = _1565 * 0.5;
        float _1643 = _1575 * 0.5;
        float _1644 = _1585 * 0.5;
        float _1645 = dot(vec3(_1642, _1643, _1644), vec3(_1642, _1643, _1644));
        float _1650 = (_1645 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1645);
        float _1658 = (dot(vec3(_859, _860, _861), vec3(_1650 * _1642, _1650 * _1643, _1650 * _1644)) + 1.0) * 0.5;
        float _4578 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        float _1667 = sqrt(((_1643 * _1643) + (_1642 * _1642)) + (_1644 * _1644)) / (_1598 + 9.9999997473787516355514526367188e-06);
        float _4589 = isnan(0.0) ? _1667 : (isnan(_1667) ? 0.0 : max(_1667, 0.0));
        float _1668 = isnan(1.0) ? _4589 : (isnan(_4589) ? 1.0 : min(_4589, 1.0));
        float _1669 = _1668 * 2.0;
        float _1673 = (1.0 - _1668) / (_1668 + 1.0);
        float _4600 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
        float _1674 = isnan(1.0) ? _4600 : (isnan(_4600) ? 1.0 : min(_4600, 1.0));
        float _1683 = ((((1.0 - _1674) * (_1669 + 2.0)) * exp2(log2(isnan(1.0) ? _4578 : (isnan(_4578) ? 1.0 : min(_4578, 1.0))) * (_1669 + 1.0))) + _1674) * _1598;
        float _1684 = _1566 * 0.5;
        float _1685 = _1576 * 0.5;
        float _1686 = _1586 * 0.5;
        float _1687 = dot(vec3(_1684, _1685, _1686), vec3(_1684, _1685, _1686));
        float _1692 = (_1687 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1687);
        float _1700 = (dot(vec3(_859, _860, _861), vec3(_1692 * _1684, _1692 * _1685, _1692 * _1686)) + 1.0) * 0.5;
        float _4611 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
        float _1709 = sqrt(((_1685 * _1685) + (_1684 * _1684)) + (_1686 * _1686)) / (_1599 + 9.9999997473787516355514526367188e-06);
        float _4622 = isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0));
        float _1710 = isnan(1.0) ? _4622 : (isnan(_4622) ? 1.0 : min(_4622, 1.0));
        float _1711 = _1710 * 2.0;
        float _1715 = (1.0 - _1710) / (_1710 + 1.0);
        float _4633 = isnan(0.0) ? _1715 : (isnan(_1715) ? 0.0 : max(_1715, 0.0));
        float _1716 = isnan(1.0) ? _4633 : (isnan(_4633) ? 1.0 : min(_4633, 1.0));
        float _1725 = ((((1.0 - _1716) * (_1711 + 2.0)) * exp2(log2(isnan(1.0) ? _4611 : (isnan(_4611) ? 1.0 : min(_4611, 1.0))) * (_1711 + 1.0))) + _1716) * _1599;
        _1733 = _1566;
        _1734 = _1565;
        _1735 = _1564;
        _1736 = _1576;
        _1737 = _1575;
        _1738 = _1574;
        _1739 = _1586;
        _1740 = _1585;
        _1741 = _1584;
        _1742 = _1599;
        _1743 = _1598;
        _1744 = _1597;
        _1745 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0)));
        _1746 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1683 : (isnan(_1683) ? 0.0 : max(_1683, 0.0)));
        _1747 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0)));
    }
    else
    {
        _1733 = _1423;
        _1734 = _1423;
        _1735 = _1423;
        _1736 = _1423;
        _1737 = _1423;
        _1738 = _1423;
        _1739 = _1423;
        _1740 = _1423;
        _1741 = _1423;
        _1742 = _1423;
        _1743 = _1423;
        _1744 = _1423;
        _1745 = 0.0;
        _1746 = 0.0;
        _1747 = 0.0;
    }
    float _1757 = (cbModelParam._m0[1u].x * (_1745 - _1435)) + _1435;
    float _1758 = (cbModelParam._m0[1u].x * (_1746 - _1436)) + _1436;
    float _1759 = (cbModelParam._m0[1u].x * (_1747 - _1437)) + _1437;
    float _1780 = fma(_1759, cbSceneParam._m0[89u].z, fma(_1758, cbSceneParam._m0[89u].y, _1757 * cbSceneParam._m0[89u].x));
    float _1783 = fma(_1759, cbSceneParam._m0[90u].z, fma(_1758, cbSceneParam._m0[90u].y, _1757 * cbSceneParam._m0[90u].x));
    float _1786 = fma(_1759, cbSceneParam._m0[91u].z, fma(_1758, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1757));
    float _1801 = _1029 * 0.5;
    float _1802 = _1030 * 0.5;
    float _1803 = _1031 * 0.5;
    float _1804 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1735, _1738, _1741, _1744));
    float _1807 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1734, _1737, _1740, _1743));
    float _1810 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1733, _1736, _1739, _1742));
    float _1844;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1817 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1422, _1426, _1429, _1432));
        float _1821 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1424, _1427, _1430, _1433));
        float _1825 = dot(vec4(_1801, _1802, _1803, 1.0), vec4(_1425, _1428, _1431, _1434));
        float _1832 = dot(vec4(cbModelParam._m0[39u]), vec4(_1801, _1802, _1803, 1.0));
        _1844 = dot(vec3(isnan(0.0) ? _1825 : (isnan(_1825) ? 0.0 : max(_1825, 0.0)), isnan(0.0) ? _1821 : (isnan(_1821) ? 0.0 : max(_1821, 0.0)), isnan(0.0) ? _1817 : (isnan(_1817) ? 0.0 : max(_1817, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1832) ? 0.0 : (isnan(0.0) ? _1832 : max(0.0, _1832))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1844 = 1.0;
    }
    float _1855;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1846 = dot(vec4(cbModelParam._m0[40u]), vec4(_1801, _1802, _1803, 1.0));
        _1855 = dot(vec3(isnan(0.0) ? _1804 : (isnan(_1804) ? 0.0 : max(_1804, 0.0)), isnan(0.0) ? _1807 : (isnan(_1807) ? 0.0 : max(_1807, 0.0)), isnan(0.0) ? _1810 : (isnan(_1810) ? 0.0 : max(_1810, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1846) ? 0.0 : (isnan(0.0) ? _1846 : max(0.0, _1846))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1855 = 1.0;
    }
    float _1859 = (_1855 * cbModelParam._m0[1u].x) + (_1844 * (1.0 - cbModelParam._m0[1u].x));
    float _1869 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _862);
    float _1870 = isnan(_1869) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1869 : min(cbModelParam._m0[25u].z, _1869));
    float _1950;
    float _1952;
    float _1954;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1917 = fma(_1093, cbModelParam._m0[13u].z, fma(_1089, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1085)) + cbModelParam._m0[13u].w;
        float _1921 = fma(_1093, cbModelParam._m0[14u].z, fma(_1089, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1085)) + cbModelParam._m0[14u].w;
        float _1925 = fma(_1093, cbModelParam._m0[15u].z, fma(_1089, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1085)) + cbModelParam._m0[15u].w;
        float _1928 = fma(_1031, cbModelParam._m0[13u].z, fma(_1030, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1029));
        float _1931 = fma(_1031, cbModelParam._m0[14u].z, fma(_1030, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1029));
        float _1934 = fma(_1031, cbModelParam._m0[15u].z, fma(_1030, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1029));
        float _1962;
        if (_1928 > 0.0)
        {
            _1962 = abs((1.0 - _1917) / _1928);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1928 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1917 + 1.0) / _1928);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1962 = frontier_phi_17_15_ladder;
        }
        float _2188;
        if (_1931 > 0.0)
        {
            _2188 = abs((1.0 - _1921) / _1931);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1931 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1921 + 1.0) / _1931);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2188 = frontier_phi_26_22_ladder;
        }
        float _2485;
        if (_1934 > 0.0)
        {
            _2485 = abs((1.0 - _1925) / _1934);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1934 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1925 + 1.0) / _1934);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2485 = frontier_phi_38_33_ladder;
        }
        float _2487 = isnan(_2188) ? _1962 : (isnan(_1962) ? _2188 : min(_1962, _2188));
        float _2488 = isnan(_2485) ? _2487 : (isnan(_2487) ? _2485 : min(_2487, _2485));
        float _2492 = (_2488 * _1928) + _1917;
        float _2493 = (_2488 * _1931) + _1921;
        float _2494 = (_2488 * _1934) + _1925;
        float _2495 = _2488 * 9.9999997473787516355514526367188e-05;
        float _2497 = (-1.0) - _2495;
        float _2499 = _2495 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2494 > _2499) || ((_2494 < _2497) || ((_2493 > _2499) || ((_2493 < _2497) || ((_2492 < _2497) || (_2492 > _2499))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2639 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2494, cbModelParam._m0[9u].z, fma(_2493, cbModelParam._m0[9u].y, _2492 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2494, cbModelParam._m0[10u].z, fma(_2493, cbModelParam._m0[10u].y, _2492 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2494, cbModelParam._m0[11u].z, fma(_2493, cbModelParam._m0[11u].y, _2492 * cbModelParam._m0[11u].x))), _1870);
            frontier_phi_16_38_ladder = _2639.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2639.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2639.x * cbModelParam._m0[1u].y;
        }
        _1950 = frontier_phi_16_38_ladder_2;
        _1952 = frontier_phi_16_38_ladder_1;
        _1954 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1938 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1029, _1030, _1031), _1870);
        _1950 = _1938.x * cbModelParam._m0[1u].y;
        _1952 = _1938.y * cbModelParam._m0[1u].y;
        _1954 = _1938.z * cbModelParam._m0[1u].y;
    }
    float _1958 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _862);
    float _1959 = isnan(_1958) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1958 : min(cbModelParam._m0[25u].w, _1958));
    float _2048;
    float _2050;
    float _2052;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _2012 = fma(_1093, cbModelParam._m0[21u].z, fma(_1089, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1085)) + cbModelParam._m0[21u].w;
        float _2016 = fma(_1093, cbModelParam._m0[22u].z, fma(_1089, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1085)) + cbModelParam._m0[22u].w;
        float _2020 = fma(_1093, cbModelParam._m0[23u].z, fma(_1089, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1085)) + cbModelParam._m0[23u].w;
        float _2023 = fma(_1031, cbModelParam._m0[21u].z, fma(_1030, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1029));
        float _2026 = fma(_1031, cbModelParam._m0[22u].z, fma(_1030, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1029));
        float _2029 = fma(_1031, cbModelParam._m0[23u].z, fma(_1030, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1029));
        float _2193;
        if (_2023 > 0.0)
        {
            _2193 = abs((1.0 - _2012) / _2023);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_2023 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_2012 + 1.0) / _2023);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2193 = frontier_phi_28_24_ladder;
        }
        float _2512;
        if (_2026 > 0.0)
        {
            _2512 = abs((1.0 - _2016) / _2026);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_2026 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_2016 + 1.0) / _2026);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2512 = frontier_phi_40_35_ladder;
        }
        float _2839;
        if (_2029 > 0.0)
        {
            _2839 = abs((1.0 - _2020) / _2029);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_2029 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_2020 + 1.0) / _2029);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2839 = frontier_phi_50_47_ladder;
        }
        float _2841 = isnan(_2512) ? _2193 : (isnan(_2193) ? _2512 : min(_2193, _2512));
        float _2842 = isnan(_2839) ? _2841 : (isnan(_2841) ? _2839 : min(_2841, _2839));
        float _2846 = (_2842 * _2023) + _2012;
        float _2847 = (_2842 * _2026) + _2016;
        float _2848 = (_2842 * _2029) + _2020;
        float _2849 = _2842 * 9.9999997473787516355514526367188e-05;
        float _2850 = (-1.0) - _2849;
        float _2852 = _2849 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2848 > _2852) || ((_2848 < _2850) || ((_2847 > _2852) || ((_2847 < _2850) || ((_2846 < _2850) || (_2846 > _2852))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2966 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2848, cbModelParam._m0[17u].z, fma(_2847, cbModelParam._m0[17u].y, _2846 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2848, cbModelParam._m0[18u].z, fma(_2847, cbModelParam._m0[18u].y, _2846 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2848, cbModelParam._m0[19u].z, fma(_2847, cbModelParam._m0[19u].y, _2846 * cbModelParam._m0[19u].x))), _1959);
            frontier_phi_25_50_ladder = _2966.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2966.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2966.x * cbModelParam._m0[1u].z;
        }
        _2048 = frontier_phi_25_50_ladder_2;
        _2050 = frontier_phi_25_50_ladder_1;
        _2052 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _2032 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1029, _1030, _1031), _1959);
        _2048 = _2032.x * cbModelParam._m0[1u].z;
        _2050 = _2032.y * cbModelParam._m0[1u].z;
        _2052 = _2032.z * cbModelParam._m0[1u].z;
    }
    float _2064 = ((((1.0 - _1053) * ((_1040 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1053 * _1040)) * _1021;
    float _2065 = _2064 * ((cbModelParam._m0[1u].w * (_2048 - _1950)) + _1950);
    float _2066 = _2064 * ((cbModelParam._m0[1u].w * (_2050 - _1952)) + _1952);
    float _2067 = _2064 * ((cbModelParam._m0[1u].w * (_2052 - _1954)) + _1954);
    float _2070 = fma(_2067, cbSceneParam._m0[89u].z, fma(_2066, cbSceneParam._m0[89u].y, _2065 * cbSceneParam._m0[89u].x));
    float _2073 = fma(_2067, cbSceneParam._m0[90u].z, fma(_2066, cbSceneParam._m0[90u].y, _2065 * cbSceneParam._m0[90u].x));
    float _2076 = fma(_2067, cbSceneParam._m0[91u].z, fma(_2066, cbSceneParam._m0[91u].y, _2065 * cbSceneParam._m0[91u].x));
    float _2087 = _958 / cbSceneParam._m0[86u].x;
    float _2088 = _959 / cbSceneParam._m0[86u].y;
    float _2095 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4759 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
    float _2097 = (isnan(1.0) ? _4759 : (isnan(_4759) ? 1.0 : min(_4759, 1.0))) * 5.0;
    float _2102 = ((10.0 / (_880 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_859, _860, _861), vec3(1.0, 0.0, 0.0));
    vec4 _2112 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_2102 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_2102 + _2087) * cbSceneParam._m0[86u].x, _959), _2097).w) + _2087) * cbSceneParam._m0[86u].x, _959), _2097);
    float _2118 = isnan(0.5) ? _2112.w : (isnan(_2112.w) ? 0.5 : max(_2112.w, 0.5));
    float _2133 = 1.0 - (_2112.w / _2118);
    float _2167 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2171 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2175 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2179 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2180 = _2167 / _2179;
    float _2181 = _2171 / _2179;
    float _2182 = _2175 / _2179;
    float _2328;
    float _2329;
    float _2330;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2209 = ((uint(_2182 > cbSceneParam._m0[59u].y) + uint(_2182 > cbSceneParam._m0[59u].x)) + uint(_2182 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2210 = _2209 + 43u;
        uint _2218 = _2209 + 44u;
        uint _2226 = _2209 + 45u;
        uint _2234 = _2209 + 46u;
        float _2245 = fma(_2179, cbSceneParam._m0[_2210].w, fma(_2175, cbSceneParam._m0[_2210].z, fma(_2171, cbSceneParam._m0[_2210].y, _2167 * cbSceneParam._m0[_2210].x)));
        float _2249 = fma(_2179, cbSceneParam._m0[_2218].w, fma(_2175, cbSceneParam._m0[_2218].z, fma(_2171, cbSceneParam._m0[_2218].y, _2167 * cbSceneParam._m0[_2218].x)));
        float _2257 = fma(_2179, cbSceneParam._m0[_2234].w, fma(_2175, cbSceneParam._m0[_2234].z, fma(_2171, cbSceneParam._m0[_2234].y, _2167 * cbSceneParam._m0[_2234].x)));
        float _2261 = cbSceneParam._m0[33u].z * _2257;
        float _2263 = cbSceneParam._m0[33u].w * _2257;
        float _2266 = fma(_2179, cbSceneParam._m0[_2226].w, fma(_2175, cbSceneParam._m0[_2226].z, fma(_2171, cbSceneParam._m0[_2226].y, _2167 * cbSceneParam._m0[_2226].x))) / _2257;
        float _2314 = (cbSceneParam._m0[33u].x - sqrt(((_2181 * _2181) + (_2180 * _2180)) + (_2182 * _2182))) * cbSceneParam._m0[33u].y;
        float _4775 = isnan(0.0) ? _2314 : (isnan(_2314) ? 0.0 : max(_2314, 0.0));
        float _2321 = (isnan(1.0) ? _4775 : (isnan(_4775) ? 1.0 : min(_4775, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2261 + _2245) / _2257, (_2263 + _2249) / _2257), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2263 + _2245) / _2257, (_2249 - _2261) / _2257), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2245 - _2261) / _2257, (_2249 - _2263) / _2257), _2266), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2245 - _2263) / _2257, (_2261 + _2249) / _2257), _2266), 0.0)).x), vec4(0.25)));
        _2328 = 1.0 - (_2321 * cbSceneParam._m0[34u].x);
        _2329 = 1.0 - (_2321 * cbSceneParam._m0[34u].y);
        _2330 = 1.0 - (_2321 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2328 = 1.0;
        _2329 = 1.0;
        _2330 = 1.0;
    }
    float _2394;
    float _2396;
    float _2398;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2382 = fma(_2179, cbSceneParam._m0[63u].w, fma(_2175, cbSceneParam._m0[63u].z, fma(_2171, cbSceneParam._m0[63u].y, _2167 * cbSceneParam._m0[63u].x)));
        float _2383 = fma(_2179, cbSceneParam._m0[60u].w, fma(_2175, cbSceneParam._m0[60u].z, fma(_2171, cbSceneParam._m0[60u].y, _2167 * cbSceneParam._m0[60u].x))) / _2382;
        float _2384 = fma(_2179, cbSceneParam._m0[61u].w, fma(_2175, cbSceneParam._m0[61u].z, fma(_2171, cbSceneParam._m0[61u].y, _2167 * cbSceneParam._m0[61u].x))) / _2382;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2383 >= cbSceneParam._m0[64u].x) && (_2384 >= cbSceneParam._m0[64u].y)) && (_2383 <= cbSceneParam._m0[64u].z)) && (_2384 <= cbSceneParam._m0[64u].w))
        {
            float _2525 = fma(_2179, cbSceneParam._m0[62u].w, fma(_2175, cbSceneParam._m0[62u].z, fma(_2171, cbSceneParam._m0[62u].y, _2167 * cbSceneParam._m0[62u].x))) / _2382;
            float _2529 = isnan(cbSceneParam._m0[41u].w) ? _2525 : (isnan(_2525) ? cbSceneParam._m0[41u].w : max(_2525, cbSceneParam._m0[41u].w));
            float _2572 = (cbSceneParam._m0[33u].x - sqrt(((_2181 * _2181) + (_2180 * _2180)) + (_2182 * _2182))) * cbSceneParam._m0[33u].y;
            float _4791 = isnan(0.0) ? _2572 : (isnan(_2572) ? 0.0 : max(_2572, 0.0));
            float _2579 = (isnan(1.0) ? _4791 : (isnan(_4791) ? 1.0 : min(_4791, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2383, cbSceneParam._m0[33u].w + _2384), _2529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2383, _2384 - cbSceneParam._m0[33u].z), _2529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2383 - cbSceneParam._m0[33u].z, _2384 - cbSceneParam._m0[33u].w), _2529), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2383 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2384), _2529), 0.0)).x), vec4(0.25)));
            float _2583 = 1.0 - (_2579 * cbSceneParam._m0[34u].x);
            float _2584 = 1.0 - (_2579 * cbSceneParam._m0[34u].y);
            float _2585 = 1.0 - (_2579 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2585) ? _2330 : (isnan(_2330) ? _2585 : min(_2330, _2585));
            frontier_phi_37_36_ladder_1 = isnan(_2584) ? _2329 : (isnan(_2329) ? _2584 : min(_2329, _2584));
            frontier_phi_37_36_ladder_2 = isnan(_2583) ? _2328 : (isnan(_2328) ? _2583 : min(_2328, _2583));
        }
        else
        {
            frontier_phi_37_36_ladder = _2330;
            frontier_phi_37_36_ladder_1 = _2329;
            frontier_phi_37_36_ladder_2 = _2328;
        }
        _2394 = frontier_phi_37_36_ladder_2;
        _2396 = frontier_phi_37_36_ladder_1;
        _2398 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2394 = _2328;
        _2396 = _2329;
        _2398 = _2330;
    }
    float _4817 = isnan(0.0) ? _2394 : (isnan(_2394) ? 0.0 : max(_2394, 0.0));
    float _2400 = isnan(1.0) ? _4817 : (isnan(_4817) ? 1.0 : min(_4817, 1.0));
    float _4828 = isnan(0.0) ? _2396 : (isnan(_2396) ? 0.0 : max(_2396, 0.0));
    float _2401 = isnan(1.0) ? _4828 : (isnan(_4828) ? 1.0 : min(_4828, 1.0));
    float _4839 = isnan(0.0) ? _2398 : (isnan(_2398) ? 0.0 : max(_2398, 0.0));
    float _2402 = isnan(1.0) ? _4839 : (isnan(_4839) ? 1.0 : min(_4839, 1.0));
    uvec4 _2406 = floatBitsToUint(cbInstanceData._m0[_287 + 5u]);
    uint _2408 = _2406.x * 14u;
    uint _2409 = _2408 + 13u;
    float _2416 = _1021 + (-1.0);
    float _2421 = (cbLight._m0[_2409].x * _2416) + 1.0;
    float _2422 = (cbLight._m0[_2409].y * _2416) + 1.0;
    float _2423 = (cbLight._m0[_2409].z * _2416) + 1.0;
    float _2424 = (cbLight._m0[_2409].w * _2416) + 1.0;
    uint _2425 = _2408 + 5u;
    float _2431 = isnan(1.0) ? _2422 : (isnan(_2422) ? 1.0 : min(_2422, 1.0));
    uint _2435 = _2408 + 4u;
    float _2444 = isnan(1.0) ? _2421 : (isnan(_2421) ? 1.0 : min(_2421, 1.0));
    uint _2448 = _2408 | 1u;
    float _2459 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_859, _860, _861));
    float _2462 = dot(vec3(cbLight._m0[_2448].xyz), vec3(_859, _860, _861));
    float _4860 = isnan(0.0) ? _2459 : (isnan(_2459) ? 0.0 : max(_2459, 0.0));
    float _4871 = isnan(0.0) ? _2462 : (isnan(_2462) ? 0.0 : max(_2462, 0.0));
    float _2467 = (isnan(1.0) ? _4860 : (isnan(_4860) ? 1.0 : min(_4860, 1.0))) * 0.3183098733425140380859375;
    float _2469 = (isnan(1.0) ? _4871 : (isnan(_4871) ? 1.0 : min(_4871, 1.0))) * 0.3183098733425140380859375;
    float _2476 = ((cbLight._m0[_2425].x * _2431) * _2469) + (((cbLight._m0[_2435].x * _2400) * _2444) * _2467);
    float _2477 = ((_2431 * cbLight._m0[_2425].y) * _2469) + (((cbLight._m0[_2435].y * _2401) * _2444) * _2467);
    float _2478 = ((_2431 * cbLight._m0[_2425].z) * _2469) + (((cbLight._m0[_2435].z * _2402) * _2444) * _2467);
    uvec4 _2482 = floatBitsToUint(cbLight._m0[_2408 + 12u]);
    bool _2484 = _2482.x == 0u;
    float _2586;
    float _2588;
    float _2590;
    if (_2484)
    {
        _2586 = _2476;
        _2588 = _2477;
        _2590 = _2478;
    }
    else
    {
        uint _2594 = _2408 + 6u;
        float _2610 = (dot(vec3(cbLight._m0[_2408 + 2u].xyz), vec3(_859, _860, _861)) * 0.5) + 0.5;
        float _2611 = _2610 * _2610;
        float _4882 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
        float _2612 = isnan(1.0) ? _4882 : (isnan(_4882) ? 1.0 : min(_4882, 1.0));
        float _2613 = isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0));
        _2586 = (((cbLight._m0[_2594].x * 0.3183098733425140380859375) * _2612) * _2613) + _2476;
        _2588 = (((cbLight._m0[_2594].y * 0.3183098733425140380859375) * _2612) * _2613) + _2477;
        _2590 = (((cbLight._m0[_2594].z * 0.3183098733425140380859375) * _2612) * _2613) + _2478;
    }
    bool _2593 = _2482.y == 0u;
    float _2648;
    float _2650;
    float _2652;
    if (_2593)
    {
        _2648 = _2586;
        _2650 = _2588;
        _2652 = _2590;
    }
    else
    {
        uint _2810 = _2408 + 7u;
        float _2826 = (dot(vec3(cbLight._m0[_2408 + 3u].xyz), vec3(_859, _860, _861)) * 0.5) + 0.5;
        float _2827 = _2826 * _2826;
        float _4898 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2828 = isnan(1.0) ? _4898 : (isnan(_4898) ? 1.0 : min(_4898, 1.0));
        float _2829 = isnan(1.0) ? _2424 : (isnan(_2424) ? 1.0 : min(_2424, 1.0));
        _2648 = (((cbLight._m0[_2810].x * 0.3183098733425140380859375) * _2828) * _2829) + _2586;
        _2650 = (((cbLight._m0[_2810].y * 0.3183098733425140380859375) * _2828) * _2829) + _2588;
        _2652 = (((cbLight._m0[_2810].z * 0.3183098733425140380859375) * _2828) * _2829) + _2590;
    }
    uint _2655 = _2408 + 8u;
    float _2668 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2408].w)) * _862) * 0.949999988079071044921875);
    float _2669 = _2668 * _2668;
    float _2670 = cbLight._m0[_2408].x + _938;
    float _2671 = cbLight._m0[_2408].y + _939;
    float _2672 = cbLight._m0[_2408].z + _940;
    float _2676 = inversesqrt(dot(vec3(_2670, _2671, _2672), vec3(_2670, _2671, _2672)));
    float _2677 = _2676 * _2670;
    float _2678 = _2676 * _2671;
    float _2679 = _2676 * _2672;
    float _2680 = dot(vec3(_859, _860, _861), vec3(cbLight._m0[_2408].xyz));
    float _4914 = isnan(0.0) ? _2680 : (isnan(_2680) ? 0.0 : max(_2680, 0.0));
    float _2683 = isnan(1.0) ? _4914 : (isnan(_4914) ? 1.0 : min(_4914, 1.0));
    float _4925 = isnan(0.0) ? _1022 : (isnan(_1022) ? 0.0 : max(_1022, 0.0));
    float _2684 = isnan(1.0) ? _4925 : (isnan(_4925) ? 1.0 : min(_4925, 1.0));
    float _2685 = dot(vec3(_859, _860, _861), vec3(_2677, _2678, _2679));
    float _4936 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2688 = isnan(1.0) ? _4936 : (isnan(_4936) ? 1.0 : min(_4936, 1.0));
    float _2689 = dot(vec3(cbLight._m0[_2408].xyz), vec3(_2677, _2678, _2679));
    float _4947 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2693 = _2669 * _2669;
    float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
    float _2708 = (exp2(log2(1.0 - (isnan(1.0) ? _4947 : (isnan(_4947) ? 1.0 : min(_4947, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2709 = 1.0 - _2669;
    float _2720 = (0.5 / (((_2684 * ((_2683 * _2709) + _2669)) + 9.9999999392252902907785028219223e-09) + (((_2684 * _2709) + _2669) * _2683))) * _2683;
    float _4958 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
    float _2722 = (isnan(1.0) ? _4958 : (isnan(_4958) ? 1.0 : min(_4958, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
    uint _2736 = _2408 + 9u;
    float _2747 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2448].w)) * _862) * 0.949999988079071044921875);
    float _2748 = _2747 * _2747;
    float _2749 = cbLight._m0[_2448].x + _938;
    float _2750 = cbLight._m0[_2448].y + _939;
    float _2751 = cbLight._m0[_2448].z + _940;
    float _2755 = inversesqrt(dot(vec3(_2749, _2750, _2751), vec3(_2749, _2750, _2751)));
    float _2756 = _2755 * _2749;
    float _2757 = _2755 * _2750;
    float _2758 = _2755 * _2751;
    float _2759 = dot(vec3(_859, _860, _861), vec3(cbLight._m0[_2448].xyz));
    float _4969 = isnan(0.0) ? _2759 : (isnan(_2759) ? 0.0 : max(_2759, 0.0));
    float _2762 = isnan(1.0) ? _4969 : (isnan(_4969) ? 1.0 : min(_4969, 1.0));
    float _2763 = dot(vec3(_859, _860, _861), vec3(_2756, _2757, _2758));
    float _4980 = isnan(0.0) ? _2763 : (isnan(_2763) ? 0.0 : max(_2763, 0.0));
    float _2766 = isnan(1.0) ? _4980 : (isnan(_4980) ? 1.0 : min(_4980, 1.0));
    float _2767 = dot(vec3(cbLight._m0[_2448].xyz), vec3(_2756, _2757, _2758));
    float _4991 = isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0));
    float _2771 = _2748 * _2748;
    float _2775 = ((_2766 * _2766) * (_2771 + (-1.0))) + 1.0;
    float _2784 = (exp2(log2(1.0 - (isnan(1.0) ? _4991 : (isnan(_4991) ? 1.0 : min(_4991, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2785 = 1.0 - _2748;
    float _2795 = (0.5 / (((_2684 * ((_2762 * _2785) + _2748)) + 9.9999999392252902907785028219223e-09) + (((_2684 * _2785) + _2748) * _2762))) * _2762;
    float _5002 = isnan(0.0) ? _2795 : (isnan(_2795) ? 0.0 : max(_2795, 0.0));
    float _2797 = (isnan(1.0) ? _5002 : (isnan(_5002) ? 1.0 : min(_5002, 1.0))) * (_2771 / ((_2775 * _2775) * 3.141590118408203125));
    float _2807 = (((_2784 * cbLight._m0[_2736].x) * _2797) * _2431) + ((((cbLight._m0[_2655].x * _2400) * _2708) * _2722) * _2444);
    float _2808 = (((_2784 * cbLight._m0[_2736].y) * _2797) * _2431) + ((((cbLight._m0[_2655].y * _2401) * _2708) * _2722) * _2444);
    float _2809 = (((_2784 * cbLight._m0[_2736].z) * _2797) * _2431) + ((((cbLight._m0[_2655].z * _2402) * _2708) * _2722) * _2444);
    float _2865;
    float _2867;
    float _2869;
    if (_2484)
    {
        _2865 = _2807;
        _2867 = _2808;
        _2869 = _2809;
    }
    else
    {
        uint _2871 = _2408 + 2u;
        uint _2875 = _2408 + 10u;
        float _2889 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2871].w)) * _862) * 0.949999988079071044921875);
        float _2890 = _2889 * _2889;
        float _2891 = cbLight._m0[_2871].x + _938;
        float _2892 = cbLight._m0[_2871].y + _939;
        float _2893 = cbLight._m0[_2871].z + _940;
        float _2897 = inversesqrt(dot(vec3(_2891, _2892, _2893), vec3(_2891, _2892, _2893)));
        float _2898 = _2897 * _2891;
        float _2899 = _2897 * _2892;
        float _2900 = _2897 * _2893;
        float _2901 = dot(vec3(_859, _860, _861), vec3(cbLight._m0[_2871].xyz));
        float _5013 = isnan(0.0) ? _2901 : (isnan(_2901) ? 0.0 : max(_2901, 0.0));
        float _2904 = isnan(1.0) ? _5013 : (isnan(_5013) ? 1.0 : min(_5013, 1.0));
        float _2905 = dot(vec3(_859, _860, _861), vec3(_2898, _2899, _2900));
        float _5024 = isnan(0.0) ? _2905 : (isnan(_2905) ? 0.0 : max(_2905, 0.0));
        float _2908 = isnan(1.0) ? _5024 : (isnan(_5024) ? 1.0 : min(_5024, 1.0));
        float _2909 = dot(vec3(cbLight._m0[_2871].xyz), vec3(_2898, _2899, _2900));
        float _5035 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        float _2913 = _2890 * _2890;
        float _2917 = ((_2908 * _2908) * (_2913 + (-1.0))) + 1.0;
        float _2926 = (exp2(log2(1.0 - (isnan(1.0) ? _5035 : (isnan(_5035) ? 1.0 : min(_5035, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2927 = 1.0 - _2890;
        float _2937 = (0.5 / (((_2684 * ((_2904 * _2927) + _2890)) + 9.9999999392252902907785028219223e-09) + (((_2684 * _2927) + _2890) * _2904))) * _2904;
        float _5046 = isnan(0.0) ? _2937 : (isnan(_2937) ? 0.0 : max(_2937, 0.0));
        float _2939 = (isnan(1.0) ? _5046 : (isnan(_5046) ? 1.0 : min(_5046, 1.0))) * (_2913 / ((_2917 * _2917) * 3.141590118408203125));
        float _2940 = isnan(1.0) ? _2423 : (isnan(_2423) ? 1.0 : min(_2423, 1.0));
        _2865 = (((_2926 * cbLight._m0[_2875].x) * _2939) * _2940) + _2807;
        _2867 = (((_2926 * cbLight._m0[_2875].y) * _2939) * _2940) + _2808;
        _2869 = (((_2926 * cbLight._m0[_2875].z) * _2939) * _2940) + _2809;
    }
    float _2971;
    float _2973;
    float _2975;
    if (_2593)
    {
        _2971 = _2865;
        _2973 = _2867;
        _2975 = _2869;
    }
    else
    {
        uint _2982 = _2408 + 3u;
        uint _2986 = _2408 + 11u;
        float _3000 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2982].w)) * _862) * 0.949999988079071044921875);
        float _3001 = _3000 * _3000;
        float _3002 = cbLight._m0[_2982].x + _938;
        float _3003 = cbLight._m0[_2982].y + _939;
        float _3004 = cbLight._m0[_2982].z + _940;
        float _3008 = inversesqrt(dot(vec3(_3002, _3003, _3004), vec3(_3002, _3003, _3004)));
        float _3009 = _3008 * _3002;
        float _3010 = _3008 * _3003;
        float _3011 = _3008 * _3004;
        float _3012 = dot(vec3(_859, _860, _861), vec3(cbLight._m0[_2982].xyz));
        float _5062 = isnan(0.0) ? _3012 : (isnan(_3012) ? 0.0 : max(_3012, 0.0));
        float _3015 = isnan(1.0) ? _5062 : (isnan(_5062) ? 1.0 : min(_5062, 1.0));
        float _3016 = dot(vec3(_859, _860, _861), vec3(_3009, _3010, _3011));
        float _5073 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
        float _3019 = isnan(1.0) ? _5073 : (isnan(_5073) ? 1.0 : min(_5073, 1.0));
        float _3020 = dot(vec3(cbLight._m0[_2982].xyz), vec3(_3009, _3010, _3011));
        float _5084 = isnan(0.0) ? _3020 : (isnan(_3020) ? 0.0 : max(_3020, 0.0));
        float _3024 = _3001 * _3001;
        float _3028 = ((_3019 * _3019) * (_3024 + (-1.0))) + 1.0;
        float _3037 = (exp2(log2(1.0 - (isnan(1.0) ? _5084 : (isnan(_5084) ? 1.0 : min(_5084, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _3038 = 1.0 - _3001;
        float _3048 = (0.5 / (((_2684 * ((_3015 * _3038) + _3001)) + 9.9999999392252902907785028219223e-09) + (((_2684 * _3038) + _3001) * _3015))) * _3015;
        float _5095 = isnan(0.0) ? _3048 : (isnan(_3048) ? 0.0 : max(_3048, 0.0));
        float _3050 = (isnan(1.0) ? _5095 : (isnan(_5095) ? 1.0 : min(_5095, 1.0))) * (_3024 / ((_3028 * _3028) * 3.141590118408203125));
        float _3051 = isnan(1.0) ? _2424 : (isnan(_2424) ? 1.0 : min(_2424, 1.0));
        _2971 = (((_3037 * cbLight._m0[_2986].x) * _3050) * _3051) + _2865;
        _2973 = (((_3037 * cbLight._m0[_2986].y) * _3050) * _3051) + _2867;
        _2975 = (((_3037 * cbLight._m0[_2986].z) * _3050) * _3051) + _2869;
    }
    float _3117;
    float _3119;
    float _3121;
    float _3123;
    float _3125;
    float _3127;
    if (_2406.y == 0u)
    {
        uvec4 _3072 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3073 = _3072.x;
        uint _3084 = uint((float(_3072.y) * floor(float(uint(cbSceneParam._m0[85u].y * _959) / _3073))) + floor(float(uint(cbSceneParam._m0[85u].x * _958) / _3073)));
        float _3094 = (log2(_2182 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3095 = isnan(0.0) ? _3094 : (isnan(_3094) ? 0.0 : max(_3094, 0.0));
        uint _3098 = uint(isnan(14.0) ? _3095 : (isnan(_3095) ? 14.0 : min(_3095, 14.0)));
        uvec4 _3103 = texelFetch(g_lightClusterGridBuffer, int(((_3098 << 2u) + (_3084 << 6u)) >> 2u));
        uint _3104 = _3103.x;
        uint _3105 = _3072.z;
        float _3178;
        float _3180;
        float _3182;
        float _3184;
        float _3186;
        float _3188;
        if (((((1u << ((_3105 >> 4u) & 15u)) + 4294967295u) & _3104) == 0u) || ((_3105 & 240u) == 0u))
        {
            _3178 = 0.0;
            _3180 = 0.0;
            _3182 = 0.0;
            _3184 = 0.0;
            _3186 = 0.0;
            _3188 = 0.0;
        }
        else
        {
            float _3179;
            float _3181;
            float _3183;
            float _3185;
            float _3187;
            float _3189;
            float _3330 = 0.0;
            float _3331 = 0.0;
            float _3332 = 0.0;
            float _3333 = 0.0;
            float _3334 = 0.0;
            float _3335 = 0.0;
            uint _3336 = 0u;
            uint _3345;
            bool _3346;
            for (;;)
            {
                _3345 = texelFetch(g_lightClassification, int((((_3098 << 5u) + (_3084 << 9u)) + (_3336 << 2u)) >> 2u)).x;
                _3346 = _3345 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3346)
                {
                    frontier_phi_71_pred = _3335;
                    frontier_phi_71_pred_1 = _3334;
                    frontier_phi_71_pred_2 = _3333;
                    frontier_phi_71_pred_3 = _3332;
                    frontier_phi_71_pred_4 = _3331;
                    frontier_phi_71_pred_5 = _3330;
                }
                else
                {
                    float _3475;
                    float _3476;
                    float _3477;
                    float _3478;
                    float _3479;
                    float _3480;
                    uint _3481;
                    _3475 = _3330;
                    _3476 = _3331;
                    _3477 = _3332;
                    _3478 = _3333;
                    _3479 = _3334;
                    _3480 = _3335;
                    _3481 = _3345;
                    float _3402;
                    float _3403;
                    float _3404;
                    float _3405;
                    float _3406;
                    float _3407;
                    for (;;)
                    {
                        uint _3485 = uint(findLSB(_3481)) + (_3336 << 5u);
                        uint _3482 = (_3481 + 4294967295u) & _3481;
                        uint _3487 = _3485 * 48u;
                        vec4 _3501 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3487)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3487 + 3u)).x));
                        uint _3507 = (_3485 * 48u) + 4u;
                        vec4 _3520 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3507)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3507 + 3u)).x));
                        uint _3526 = (_3485 * 48u) + 8u;
                        vec3 _3537 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3526)).x, texelFetch(g_PointLightRenderingBuffer, int(_3526 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3526 + 2u)).x));
                        float _3541 = _3501.x - _2180;
                        float _3542 = _3501.y - _2181;
                        float _3543 = _3501.z - _2182;
                        float _3544 = dot(vec3(_3541, _3542, _3543), vec3(_3541, _3542, _3543));
                        float _3547 = inversesqrt(_3544);
                        float _3548 = _3547 * _3541;
                        float _3549 = _3547 * _3542;
                        float _3550 = _3547 * _3543;
                        float _3551 = dot(vec3(_977, _980, _983), vec3(_3548, _3549, _3550));
                        float _3556 = 1.0 - (_3544 * _3501.w);
                        float _5121 = isnan(0.0) ? _3556 : (isnan(_3556) ? 0.0 : max(_3556, 0.0));
                        float _3557 = isnan(1.0) ? _5121 : (isnan(_5121) ? 1.0 : min(_5121, 1.0));
                        float _3558 = sqrt(_3544) * _3520.w;
                        float _3561 = 1.39999997615814208984375 / (_3558 + 1.39999997615814208984375);
                        float _3562 = _3561 * _3561;
                        float _3565 = ((1.0 - _3562) * _3551) + _3562;
                        float _3568 = _3558 * _3558;
                        float _3572 = ((isnan(0.0) ? _3565 : (isnan(_3565) ? 0.0 : max(_3565, 0.0))) * _3557) / ((_3568 * 0.699999988079071044921875) + 1.0);
                        float _3576 = (-0.0) - _2180;
                        float _3577 = (-0.0) - _2181;
                        float _3578 = (-0.0) - _2182;
                        float _3582 = inversesqrt(dot(vec3(_3576, _3577, _3578), vec3(_3576, _3577, _3578)));
                        float _3583 = _3582 * _3576;
                        float _3584 = _3582 * _3577;
                        float _3585 = _3582 * _3578;
                        float _3592 = exp2(log2(1.0 / ((_3568 * 3.5) + 5.0)) * 0.25);
                        float _3593 = 1.0 - _1040;
                        float _3600 = sqrt(1.0 - ((1.0 - (_3593 * _3593)) * (1.0 - (_3592 * _3592))));
                        float _3601 = _3600 * _3600;
                        float _3602 = _3601 * _3601;
                        float _3603 = _3583 + _3548;
                        float _3604 = _3584 + _3549;
                        float _3605 = _3585 + _3550;
                        float _3609 = inversesqrt(dot(vec3(_3603, _3604, _3605), vec3(_3603, _3604, _3605)));
                        float _3613 = dot(vec3(_977, _980, _983), vec3(_3583, _3584, _3585));
                        float _5137 = isnan(0.0) ? _3613 : (isnan(_3613) ? 0.0 : max(_3613, 0.0));
                        float _3616 = isnan(1.0) ? _5137 : (isnan(_5137) ? 1.0 : min(_5137, 1.0));
                        float _3617 = dot(vec3(_977, _980, _983), vec3(_3609 * _3603, _3609 * _3604, _3609 * _3605));
                        float _5148 = isnan(0.0) ? _3617 : (isnan(_3617) ? 0.0 : max(_3617, 0.0));
                        float _3620 = isnan(1.0) ? _5148 : (isnan(_5148) ? 1.0 : min(_5148, 1.0));
                        float _3624 = ((_3620 * _3620) * (_3602 + (-1.0))) + 1.0;
                        float _3625 = _3561 * _3601;
                        float _3626 = _3625 * _3625;
                        float _3629 = ((1.0 - _3626) * _3551) + _3626;
                        float _5159 = isnan(0.0) ? _3629 : (isnan(_3629) ? 0.0 : max(_3629, 0.0));
                        float _3630 = isnan(1.0) ? _5159 : (isnan(_5159) ? 1.0 : min(_5159, 1.0));
                        float _3631 = 1.0 - _3601;
                        float _3641 = (0.5 / (((_3630 * ((_3616 * _3631) + _3601)) + 9.9999999392252902907785028219223e-09) + (((_3630 * _3631) + _3601) * _3616))) * _3630;
                        float _5170 = isnan(0.0) ? _3641 : (isnan(_3641) ? 0.0 : max(_3641, 0.0));
                        float _3652 = (((_3602 * 3.1415927410125732421875) * (isnan(1.0) ? _5170 : (isnan(_5170) ? 1.0 : min(_5170, 1.0)))) / ((_3624 * _3624) * ((_3568 * 2.1991131305694580078125) + 3.141590118408203125))) * _3557;
                        _3405 = (_3572 * _3520.x) + _3478;
                        _3406 = (_3572 * _3520.y) + _3479;
                        _3407 = (_3572 * _3520.z) + _3480;
                        _3402 = (_3652 * _3537.x) + _3475;
                        _3403 = (_3652 * _3537.y) + _3476;
                        _3404 = (_3652 * _3537.z) + _3477;
                        if (_3482 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3475 = _3402;
                            _3476 = _3403;
                            _3477 = _3404;
                            _3478 = _3405;
                            _3479 = _3406;
                            _3480 = _3407;
                            _3481 = _3482;
                        }
                    }
                    frontier_phi_71_pred = _3407;
                    frontier_phi_71_pred_1 = _3406;
                    frontier_phi_71_pred_2 = _3405;
                    frontier_phi_71_pred_3 = _3404;
                    frontier_phi_71_pred_4 = _3403;
                    frontier_phi_71_pred_5 = _3402;
                }
                _3189 = frontier_phi_71_pred;
                _3187 = frontier_phi_71_pred_1;
                _3185 = frontier_phi_71_pred_2;
                _3183 = frontier_phi_71_pred_3;
                _3181 = frontier_phi_71_pred_4;
                _3179 = frontier_phi_71_pred_5;
                uint _3337 = _3336 + 1u;
                if (_3337 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3330 = _3179;
                    _3331 = _3181;
                    _3332 = _3183;
                    _3333 = _3185;
                    _3334 = _3187;
                    _3335 = _3189;
                    _3336 = _3337;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3178 = _3179;
            _3180 = _3181;
            _3182 = _3183;
            _3184 = _3185;
            _3186 = _3187;
            _3188 = _3189;
        }
        uvec4 _3192 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3193 = _3192.z;
        uint _3195 = (_3193 >> 8u) & 15u;
        float _3298;
        float _3300;
        float _3302;
        float _3304;
        float _3306;
        float _3308;
        if (((4294967295u << _3195) & _3104) == 0u)
        {
            _3298 = _3178;
            _3300 = _3180;
            _3302 = _3182;
            _3304 = _3184;
            _3306 = _3186;
            _3308 = _3188;
        }
        else
        {
            float _3323 = inversesqrt(dot(vec3(_2180, _2181, _2182), vec3(_2180, _2181, _2182)));
            float _3324 = _3323 * _2180;
            float _3325 = _3323 * _2181;
            float _3326 = _3323 * _2182;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3195 < ((_3193 >> 12u) & 15u))
            {
                float _3299;
                float _3301;
                float _3303;
                float _3305;
                float _3307;
                float _3309;
                float _3458 = _3178;
                float _3459 = _3180;
                float _3460 = _3182;
                float _3461 = _3184;
                float _3462 = _3186;
                float _3463 = _3188;
                uint _3464 = _3195;
                uint _3473;
                bool _3474;
                for (;;)
                {
                    _3473 = texelFetch(g_lightClassification, int((((_3098 << 5u) + (_3084 << 9u)) + (_3464 << 2u)) >> 2u)).x;
                    _3474 = _3473 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3474)
                    {
                        frontier_phi_82_pred = _3463;
                        frontier_phi_82_pred_1 = _3462;
                        frontier_phi_82_pred_2 = _3461;
                        frontier_phi_82_pred_3 = _3460;
                        frontier_phi_82_pred_4 = _3459;
                        frontier_phi_82_pred_5 = _3458;
                    }
                    else
                    {
                        float _3666;
                        float _3667;
                        float _3668;
                        float _3669;
                        float _3670;
                        float _3671;
                        float _3959;
                        float _3960;
                        float _3961;
                        float _3962;
                        float _3963;
                        float _3964;
                        float _3679 = _3458;
                        float _3680 = _3459;
                        float _3681 = _3460;
                        float _3682 = _3461;
                        float _3683 = _3462;
                        float _3684 = _3463;
                        uint _3685 = _3473;
                        uint _3686;
                        vec4 _3711;
                        float _3712;
                        vec4 _3727;
                        vec3 _3739;
                        vec4 _3754;
                        vec4 _3769;
                        float _3815;
                        bool _3816;
                        for (;;)
                        {
                            uint _3696 = ((_3464 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3685));
                            _3686 = (_3685 + 4294967295u) & _3685;
                            uint _3698 = _3696 * 40u;
                            _3711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3698 + 3u)).x));
                            _3712 = _3711.w;
                            uint _3714 = (_3696 * 40u) + 4u;
                            _3727 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3714)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3714 + 3u)).x));
                            uint _3729 = (_3696 * 40u) + 8u;
                            _3739 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3729)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3729 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3729 + 2u)).x));
                            uint _3741 = (_3696 * 40u) + 16u;
                            _3754 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3741)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3741 + 3u)).x));
                            uint _3756 = (_3696 * 40u) + 20u;
                            _3769 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3756)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3756 + 3u)).x));
                            uint _3771 = (_3696 * 40u) + 24u;
                            vec4 _3784 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3771)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3771 + 3u)).x));
                            uint _3790 = (_3696 * 40u) + 28u;
                            vec4 _3803 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3790)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3790 + 3u)).x));
                            _3815 = fma(_2182, _3803.z, fma(_2181, _3803.y, _3803.x * _2180)) + _3803.w;
                            _3816 = !((fma(_2182, _3784.z, fma(_2181, _3784.y, _3784.x * _2180)) + _3784.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3816)
                            {
                                float _3843 = _3711.x - _2180;
                                float _3844 = _3711.y - _2181;
                                float _3845 = _3711.z - _2182;
                                float _3846 = dot(vec3(_3843, _3844, _3845), vec3(_3843, _3844, _3845));
                                float _3849 = inversesqrt(_3846);
                                float _3850 = _3849 * _3843;
                                float _3851 = _3849 * _3844;
                                float _3852 = _3849 * _3845;
                                float _3856 = 1.0 - (_3846 / (_3712 * _3712));
                                float _5181 = isnan(0.0) ? _3856 : (isnan(_3856) ? 0.0 : max(_3856, 0.0));
                                float _3857 = isnan(1.0) ? _5181 : (isnan(_5181) ? 1.0 : min(_5181, 1.0));
                                float _3861 = sqrt(_3846) * _3727.w;
                                float _3863 = 1.39999997615814208984375 / (_3861 + 1.39999997615814208984375);
                                float _3864 = _3863 * _3863;
                                float _3867 = ((1.0 - _3864) * dot(vec3(_3850, _3851, _3852), vec3(_977, _980, _983))) + _3864;
                                float _3870 = _3861 * _3861;
                                float _3874 = (fma(_2182, _3754.z, fma(_2181, _3754.y, _3754.x * _2180)) + _3754.w) / _3815;
                                float _3875 = (fma(_2182, _3769.z, fma(_2181, _3769.y, _3769.x * _2180)) + _3769.w) / _3815;
                                float _3879 = 1.0 - dot(vec2(_3874, _3875), vec2(_3874, _3875));
                                float _5197 = isnan(0.0) ? _3879 : (isnan(_3879) ? 0.0 : max(_3879, 0.0));
                                float _3880 = isnan(1.0) ? _5197 : (isnan(_5197) ? 1.0 : min(_5197, 1.0));
                                float _3881 = _3880 * (((isnan(0.0) ? _3867 : (isnan(_3867) ? 0.0 : max(_3867, 0.0))) * _3857) / ((_3870 * 0.699999988079071044921875) + 1.0));
                                float _3893 = exp2(log2(1.0 / ((_3870 * 3.5) + 5.0)) * 0.25);
                                float _3894 = 1.0 - _1040;
                                float _3901 = sqrt(1.0 - ((1.0 - (_3894 * _3894)) * (1.0 - (_3893 * _3893))));
                                float _3902 = _3901 * _3901;
                                float _3903 = _3902 * _3902;
                                float _3904 = _3850 - _3324;
                                float _3905 = _3851 - _3325;
                                float _3906 = _3852 - _3326;
                                float _3910 = inversesqrt(dot(vec3(_3904, _3905, _3906), vec3(_3904, _3905, _3906)));
                                float _3914 = dot(vec3(_977, _980, _983), vec3((-0.0) - _3324, (-0.0) - _3325, (-0.0) - _3326));
                                float _5208 = isnan(0.0) ? _3914 : (isnan(_3914) ? 0.0 : max(_3914, 0.0));
                                float _3917 = isnan(1.0) ? _5208 : (isnan(_5208) ? 1.0 : min(_5208, 1.0));
                                float _3918 = dot(vec3(_977, _980, _983), vec3(_3910 * _3904, _3910 * _3905, _3910 * _3906));
                                float _5219 = isnan(0.0) ? _3918 : (isnan(_3918) ? 0.0 : max(_3918, 0.0));
                                float _3921 = isnan(1.0) ? _5219 : (isnan(_5219) ? 1.0 : min(_5219, 1.0));
                                float _3925 = ((_3921 * _3921) * (_3903 + (-1.0))) + 1.0;
                                float _3926 = _3863 * _3902;
                                float _3927 = _3926 * _3926;
                                float _3933 = ((1.0 - _3927) * dot(vec3(_977, _980, _983), vec3(_3850, _3851, _3852))) + _3927;
                                float _5230 = isnan(0.0) ? _3933 : (isnan(_3933) ? 0.0 : max(_3933, 0.0));
                                float _3934 = isnan(1.0) ? _5230 : (isnan(_5230) ? 1.0 : min(_5230, 1.0));
                                float _3935 = 1.0 - _3902;
                                float _3945 = (0.5 / (((_3934 * ((_3917 * _3935) + _3902)) + 9.9999999392252902907785028219223e-09) + (((_3934 * _3935) + _3902) * _3917))) * _3934;
                                float _5241 = isnan(0.0) ? _3945 : (isnan(_3945) ? 0.0 : max(_3945, 0.0));
                                float _3955 = (_3880 * _3857) * (((_3903 * 3.1415927410125732421875) * (isnan(1.0) ? _5241 : (isnan(_5241) ? 1.0 : min(_5241, 1.0)))) / ((_3925 * _3925) * ((_3870 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3881 * _3727.z;
                                frontier_phi_88_pred_1 = _3881 * _3727.y;
                                frontier_phi_88_pred_2 = _3881 * _3727.x;
                                frontier_phi_88_pred_3 = _3955 * _3739.z;
                                frontier_phi_88_pred_4 = _3955 * _3739.y;
                                frontier_phi_88_pred_5 = _3955 * _3739.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3964 = frontier_phi_88_pred;
                            _3963 = frontier_phi_88_pred_1;
                            _3962 = frontier_phi_88_pred_2;
                            _3961 = frontier_phi_88_pred_3;
                            _3960 = frontier_phi_88_pred_4;
                            _3959 = frontier_phi_88_pred_5;
                            _3669 = _3962 + _3682;
                            _3670 = _3963 + _3683;
                            _3671 = _3964 + _3684;
                            _3666 = _3959 + _3679;
                            _3667 = _3960 + _3680;
                            _3668 = _3961 + _3681;
                            if (_3686 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3679 = _3666;
                                _3680 = _3667;
                                _3681 = _3668;
                                _3682 = _3669;
                                _3683 = _3670;
                                _3684 = _3671;
                                _3685 = _3686;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3671;
                        frontier_phi_82_pred_1 = _3670;
                        frontier_phi_82_pred_2 = _3669;
                        frontier_phi_82_pred_3 = _3668;
                        frontier_phi_82_pred_4 = _3667;
                        frontier_phi_82_pred_5 = _3666;
                    }
                    _3309 = frontier_phi_82_pred;
                    _3307 = frontier_phi_82_pred_1;
                    _3305 = frontier_phi_82_pred_2;
                    _3303 = frontier_phi_82_pred_3;
                    _3301 = frontier_phi_82_pred_4;
                    _3299 = frontier_phi_82_pred_5;
                    uint _3465 = _3464 + 1u;
                    if (_3465 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3458 = _3299;
                        _3459 = _3301;
                        _3460 = _3303;
                        _3461 = _3305;
                        _3462 = _3307;
                        _3463 = _3309;
                        _3464 = _3465;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3305;
                frontier_phi_63_64_ladder_1 = _3309;
                frontier_phi_63_64_ladder_2 = _3307;
                frontier_phi_63_64_ladder_3 = _3303;
                frontier_phi_63_64_ladder_4 = _3301;
                frontier_phi_63_64_ladder_5 = _3299;
            }
            else
            {
                frontier_phi_63_64_ladder = _3184;
                frontier_phi_63_64_ladder_1 = _3188;
                frontier_phi_63_64_ladder_2 = _3186;
                frontier_phi_63_64_ladder_3 = _3182;
                frontier_phi_63_64_ladder_4 = _3180;
                frontier_phi_63_64_ladder_5 = _3178;
            }
            _3298 = frontier_phi_63_64_ladder_5;
            _3300 = frontier_phi_63_64_ladder_4;
            _3302 = frontier_phi_63_64_ladder_3;
            _3304 = frontier_phi_63_64_ladder;
            _3306 = frontier_phi_63_64_ladder_2;
            _3308 = frontier_phi_63_64_ladder_1;
        }
        float _3313 = isnan(1.0) ? _1021 : (isnan(_1021) ? 1.0 : min(_1021, 1.0));
        _3117 = (_3313 * _3304) + _2648;
        _3119 = (_3313 * _3306) + _2650;
        _3121 = (_3313 * _3308) + _2652;
        _3123 = ((_3298 * 0.039999999105930328369140625) * _3313) + _2971;
        _3125 = ((_3300 * 0.039999999105930328369140625) * _3313) + _2973;
        _3127 = ((_3302 * 0.039999999105930328369140625) * _3313) + _2975;
    }
    else
    {
        _3117 = _2648;
        _3119 = _2650;
        _3121 = _2652;
        _3123 = _2971;
        _3125 = _2973;
        _3127 = _2975;
    }
    float _5257 = isnan(0.0) ? _1006 : (isnan(_1006) ? 0.0 : max(_1006, 0.0));
    float _5268 = isnan(0.0) ? _1007 : (isnan(_1007) ? 0.0 : max(_1007, 0.0));
    float _5279 = isnan(0.0) ? _1008 : (isnan(_1008) ? 0.0 : max(_1008, 0.0));
    float _3144 = ((isnan(1.0) ? _5257 : (isnan(_5257) ? 1.0 : min(_5257, 1.0))) * (_3117 + ((isnan(0.0) ? _1780 : (isnan(_1780) ? 0.0 : max(_1780, 0.0))) * _1021))) + (((((_2064 * (_2112.x / _2118)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2070 : (isnan(_2070) ? 0.0 : max(_2070, 0.0))) * _1859) * _2133)) + _3123) * cbPerFrame._m0[3u].x);
    float _3145 = ((isnan(1.0) ? _5268 : (isnan(_5268) ? 1.0 : min(_5268, 1.0))) * (_3119 + ((isnan(0.0) ? _1783 : (isnan(_1783) ? 0.0 : max(_1783, 0.0))) * _1021))) + (((((_2064 * (_2112.y / _2118)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2073 : (isnan(_2073) ? 0.0 : max(_2073, 0.0))) * _1859) * _2133)) + _3125) * cbPerFrame._m0[3u].x);
    float _3146 = ((isnan(1.0) ? _5279 : (isnan(_5279) ? 1.0 : min(_5279, 1.0))) * (_3121 + ((isnan(0.0) ? _1786 : (isnan(_1786) ? 0.0 : max(_1786, 0.0))) * _1021))) + (((((_2064 * (_2112.z / _2118)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _2076 : (isnan(_2076) ? 0.0 : max(_2076, 0.0))) * _1859) * _2133)) + _3127) * cbPerFrame._m0[3u].x);
    uint _3147 = _287 + 6u;
    vec4 _3164 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2087, _2088, (log2((isnan(cbSceneParam._m0[77u].w) ? _880 : (isnan(_880) ? cbSceneParam._m0[77u].w : min(_880, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3166 = _3164.x;
    float _3167 = _3164.y;
    float _3168 = _3164.z;
    float _3169 = _3164.w;
    float _3241;
    float _3243;
    float _3245;
    float _3247;
    if (_880 > cbSceneParam._m0[78u].w)
    {
        float _3203 = isnan(_880) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _880 : min(cbSceneParam._m0[80u].w, _880));
        float _3204 = _3203 / _880;
        float _3215 = _3204 * _931;
        float _3216 = _932 * _3204;
        float _3217 = (-0.0) - _3216;
        float _3219 = _3204 * _933;
        float _3221 = (cbSceneParam._m0[77u].w * _3217) / _3203;
        float _3222 = _3221 + cbSceneParam._m0[79u].w;
        float _3223 = cbSceneParam._m0[79u].w - _3216;
        float _3229 = sqrt(((_3215 * _3215) + (_3216 * _3216)) + (_3219 * _3219));
        float _3232 = (1.0 - (cbSceneParam._m0[77u].w / _3203)) * _3229;
        float _3237 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3239 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3415;
        if (abs((_3217 - _3221) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3415 = ((((_3222 > 0.0) ? exp2(_3237 * _3222) : (2.0 - exp2(_3239 * _3222))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3232;
        }
        else
        {
            float _3359 = 1.0 / cbSceneParam._m0[80u].x;
            float _3360 = isnan(_3223) ? _3222 : (isnan(_3222) ? _3223 : max(_3222, _3223));
            float _3361 = isnan(_3223) ? _3222 : (isnan(_3222) ? _3223 : min(_3222, _3223));
            float _3370 = isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : min(_3360, 0.0));
            float _3371 = isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : min(_3361, 0.0));
            _3415 = ((abs(_3229 / _3217) * cbSceneParam._m0[80u].y) * ((((_3370 - _3371) * 2.0) - ((exp2(_3237 * (isnan(0.0) ? _3360 : (isnan(_3360) ? 0.0 : max(_3360, 0.0)))) - exp2(_3237 * (isnan(0.0) ? _3361 : (isnan(_3361) ? 0.0 : max(_3361, 0.0))))) * _3359)) - ((exp2(_3239 * _3370) - exp2(_3239 * _3371)) * _3359))) + (_3232 * cbSceneParam._m0[80u].z);
        }
        vec4 _3417 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2087, _2088, 1.0), 0.0);
        float _3426 = exp2((_3415 * (-1.44269502162933349609375)) * (1.0 - _3417.w));
        float _3427 = log2(_3426);
        float _3443 = log2(_3169);
        _3241 = (exp2(_3443 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3427 * cbSceneParam._m0[78u].x)) * _3417.x) / cbSceneParam._m0[78u].x)) + _3166;
        _3243 = (exp2(_3443 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3427 * cbSceneParam._m0[78u].y)) * _3417.y) / cbSceneParam._m0[78u].y)) + _3167;
        _3245 = (exp2(_3443 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3427 * cbSceneParam._m0[78u].z)) * _3417.z) / cbSceneParam._m0[78u].z)) + _3168;
        _3247 = _3426 * _3169;
    }
    else
    {
        _3241 = _3166;
        _3243 = _3167;
        _3245 = _3168;
        _3247 = _3169;
    }
    bool _3453;
    vec4 _3256;
    vec4 _3278;
    float _3280;
    float _3284;
    float _3285;
    float _3286;
    float _3287;
    bool _3297;
    for (;;)
    {
        _3256 = cbMatDynParam._m0[0u];
        float _3258 = roundEven(_3256.y);
        bool _3259 = _3258 == 3.0;
        float _3260 = log2(_3247);
        float _3267 = exp2(_3260 * cbSceneParam._m0[78u].x) * _3144;
        float _3268 = exp2(_3260 * cbSceneParam._m0[78u].y) * _3145;
        float _3269 = exp2(_3260 * cbSceneParam._m0[78u].z) * _3146;
        float _3276 = _947 + (-0.5);
        _3278 = cbMtdParam._m0[1u];
        _3280 = _3278.y * _3276;
        float _3283 = (_3258 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3284 = _3283 * (_3259 ? _3267 : (_3267 + (cbSceneParam._m0[72u].w * _3241)));
        _3285 = _3283 * (_3259 ? _3268 : (_3268 + (cbSceneParam._m0[72u].w * _3243)));
        _3286 = _3283 * (_3259 ? _3269 : (_3269 + (cbSceneParam._m0[72u].w * _3245)));
        _3287 = _3276 * 0.999000012874603271484375;
        _3297 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3297)
        {
            if ((cbInstanceData._m0[_287 + 7u].x + _3287) < 0.5)
            {
                _3453 = true;
                break;
            }
        }
        uint _3394 = _996 + uint(_3256.w);
        if ((cbInstanceData._m0[_3394].w < 1.0) && ((cbInstanceData._m0[_3394].w + _3287) < 0.5))
        {
            _3453 = true;
            break;
        }
        if ((_3280 + _339) < _3278.x)
        {
            _3453 = true;
            break;
        }
        _3453 = false;
        break;
    }
    float _3657;
    if (_3453)
    {
        discard_state = true;
        _3657 = 0.0;
    }
    else
    {
        _3657 = cbInstanceData._m0[_3147].w;
    }
    SV_Target.x = _3284;
    SV_Target.y = _3285;
    SV_Target.z = _3286;
    SV_Target.w = _3657;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3147].w;
    discard_exit();
}


