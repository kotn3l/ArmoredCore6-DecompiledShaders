#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 13) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_22;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1237;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _226 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _227 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _228 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _234 = inversesqrt(dot(vec3(_226, _227, _228), vec3(_226, _227, _228)));
    float _241 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _248 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _260 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_20);
    float _262 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_21);
    float _263 = 1.0 - (cbMtdParam._m0[22u].y * TEXCOORD_22);
    float _3879 = isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0));
    float _3890 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _3901 = isnan(0.0) ? _263 : (isnan(_263) ? 0.0 : max(_263, 0.0));
    uint _273 = uint(roundEven(NORMAL.w)) * 13u;
    uint _278 = _273 + 1u;
    uint _282 = _273 + 2u;
    float _291 = sqrt(((cbInstanceData._m0[_278].x * cbInstanceData._m0[_278].x) + (cbInstanceData._m0[_273].x * cbInstanceData._m0[_273].x)) + (cbInstanceData._m0[_282].x * cbInstanceData._m0[_282].x));
    float _292 = _291 * TEXCOORD.z;
    float _293 = _291 * TEXCOORD.w;
    vec4 _306 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_22, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[13u].x * _292) + cbTextureTilingScale._m0[13u].z, (cbTextureTilingScale._m0[13u].y * _293) + cbTextureTilingScale._m0[13u].w));
    vec4 _330 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _335 = _330.x * cbMtdParam._m0[11u].x;
    float _336 = _330.y * cbMtdParam._m0[11u].y;
    float _337 = _330.z * cbMtdParam._m0[11u].z;
    vec4 _356 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _292) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _293) + cbTextureTilingScale._m0[5u].w));
    vec4 _389 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _391 = _389.x;
    float _404 = dot(vec4(_391, _389.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _421 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_391 - _404) * cbMtdParam._m0[24u].x) + _404) * cbMtdParam._m0[23u].x))) + 1.0;
    float _3912 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    float _422 = isnan(1.0) ? _3912 : (isnan(_3912) ? 1.0 : min(_3912, 1.0));
    float _429 = (_422 * ((_356.x * cbMtdParam._m0[12u].x) - _335)) + _335;
    float _430 = (_422 * ((_356.y * cbMtdParam._m0[12u].y) - _336)) + _336;
    float _431 = (_422 * ((_356.z * cbMtdParam._m0[12u].z) - _337)) + _337;
    float _435 = ((cbMtdParam._m0[16u].x * 4.55000019073486328125) * _306.x) * _429;
    float _438 = ((cbMtdParam._m0[16u].y * 4.55000019073486328125) * _306.y) * _430;
    float _441 = ((cbMtdParam._m0[16u].z * 4.55000019073486328125) * _306.z) * _431;
    float _448 = ((_429 - _435) * (isnan(1.0) ? _3879 : (isnan(_3879) ? 1.0 : min(_3879, 1.0)))) + _435;
    float _449 = ((_430 - _438) * (isnan(1.0) ? _3890 : (isnan(_3890) ? 1.0 : min(_3890, 1.0)))) + _438;
    float _450 = ((_431 - _441) * (isnan(1.0) ? _3901 : (isnan(_3901) ? 1.0 : min(_3901, 1.0)))) + _441;
    vec4 _463 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _292) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _293) + cbTextureTilingScale._m0[20u].w));
    vec4 _488 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _490 = _488.x;
    float _491 = _488.y;
    float _496 = cbMtdParam._m0[25u].w * _488.z;
    float _3923 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _497 = isnan(1.0) ? _3923 : (isnan(_3923) ? 1.0 : min(_3923, 1.0));
    vec4 _510 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _292) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _293) + cbTextureTilingScale._m0[4u].w));
    float _518 = cbMtdParam._m0[26u].x * _510.z;
    float _3934 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _528 = (((isnan(1.0) ? _3934 : (isnan(_3934) ? 1.0 : min(_3934, 1.0))) - _497) * _422) + _497;
    float _531 = ((((_510.x - _490) * _422) + _490) * 2.0) + (-1.0);
    float _532 = ((((_510.y - _491) * _422) + _491) * 2.0) + (-1.0);
    float _533 = dot(vec2(_531, _532), vec2(_531, _532));
    float _3945 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _538 = sqrt(1.0 - (isnan(1.0) ? _3945 : (isnan(_3945) ? 1.0 : min(_3945, 1.0))));
    vec4 _561 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _568 = cbMtdParam._m0[25u].z * _561.z;
    float _3956 = isnan(0.0) ? _568 : (isnan(_568) ? 0.0 : max(_568, 0.0));
    float _576 = (_531 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_463.x * 2.0) + (-1.0)))) + (((_561.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _577 = (_532 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_463.y * 2.0) + (-1.0)))) + (((_561.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    vec4 _589 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _292) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _293) + cbTextureTilingScale._m0[19u].w));
    float _591 = _589.x;
    float _592 = 1.0 - _591;
    float _618 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_591 - _592) * cbMtdParam._m0[24u].w) + _592) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _3967 = isnan(0.0) ? _618 : (isnan(_618) ? 0.0 : max(_618, 0.0));
    float _619 = isnan(1.0) ? _3967 : (isnan(_3967) ? 1.0 : min(_3967, 1.0));
    float _627 = ((((cbMtdParam._m0[10u].x - _448) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _619) + _448;
    float _628 = ((((cbMtdParam._m0[10u].y - _449) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _619) + _449;
    float _629 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _450)) * _619) + _450;
    float _634 = (((_463.z - _528) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _528;
    float _638 = (((isnan(1.0) ? _3956 : (isnan(_3956) ? 1.0 : min(_3956, 1.0))) - _634) * cbMtdParam._m0[19u].w) + _634;
    float _642 = ((cbMtdParam._m0[23u].y - _638) * _619) + _638;
    float _646 = ((1.0 - _642) * cbMtdParam._m0[26u].y) + _642;
    float _3978 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
    float _647 = isnan(1.0) ? _3978 : (isnan(_3978) ? 1.0 : min(_3978, 1.0));
    vec4 _669 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _292) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _293) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _675 = (_669.x * 2.0) + (-1.0);
    float _676 = (_669.y * 2.0) + (-1.0);
    float _677 = dot(vec2(_675, _676), vec2(_675, _676));
    float _3989 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
    float _693 = (_619 * (((cbMtdParam._m0[22u].z * _576) - _576) + _675)) + _576;
    float _694 = (_619 * (((cbMtdParam._m0[22u].z * _577) - _577) + _676)) + _577;
    float _695 = (_619 * (sqrt(1.0 - (isnan(1.0) ? _3989 : (isnan(_3989) ? 1.0 : min(_3989, 1.0)))) - _538)) + _538;
    float _697 = cbMtdParam._m0[22u].x + _561.w;
    float _702 = fma(_695, _241 * NORMAL.x, fma(_694, _248 * TANGENT.x, (_234 * _226) * _693));
    float _705 = fma(_695, _241 * NORMAL.y, fma(_694, _248 * TANGENT.y, (_234 * _227) * _693));
    float _708 = fma(_695, _241 * NORMAL.z, fma(_694, _248 * TANGENT.z, (_234 * _228) * _693));
    float _712 = inversesqrt(dot(vec3(_702, _705, _708), vec3(_702, _705, _708)));
    float _713 = _712 * _702;
    float _714 = _712 * _705;
    float _715 = _712 * _708;
    float _4000 = isnan(0.0) ? _647 : (isnan(_647) ? 0.0 : max(_647, 0.0));
    float _716 = isnan(1.0) ? _4000 : (isnan(_4000) ? 1.0 : min(_4000, 1.0));
    float _4011 = isnan(0.0) ? _697 : (isnan(_697) ? 0.0 : max(_697, 0.0));
    float _4022 = isnan(0.0) ? _627 : (isnan(_627) ? 0.0 : max(_627, 0.0));
    float _4033 = isnan(0.0) ? _628 : (isnan(_628) ? 0.0 : max(_628, 0.0));
    float _4044 = isnan(0.0) ? _629 : (isnan(_629) ? 0.0 : max(_629, 0.0));
    float _734 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _775 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _785 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _775);
    float _786 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _775);
    float _787 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _775);
    float _791 = inversesqrt(dot(vec3(_785, _786, _787), vec3(_785, _786, _787)));
    float _792 = _785 * _791;
    float _793 = _786 * _791;
    float _794 = _787 * _791;
    float _800 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _801 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _819 = fma(_715, cbSceneParam._m0[5u].z, fma(_714, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _713));
    float _822 = fma(_715, cbSceneParam._m0[6u].z, fma(_714, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _713));
    float _825 = fma(_715, cbSceneParam._m0[7u].z, fma(_714, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _713));
    uint _839 = (_273 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _845 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4022 : (isnan(_4022) ? 1.0 : min(_4022, 1.0)))) * cbInstanceData._m0[_839].x;
    float _846 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4033 : (isnan(_4033) ? 1.0 : min(_4033, 1.0)))) * cbInstanceData._m0[_839].y;
    float _847 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4044 : (isnan(_4044) ? 1.0 : min(_4044, 1.0)))) * cbInstanceData._m0[_839].z;
    float _4055 = isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0));
    float _848 = isnan(1.0) ? _4055 : (isnan(_4055) ? 1.0 : min(_4055, 1.0));
    float _4066 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
    float _849 = isnan(1.0) ? _4066 : (isnan(_4066) ? 1.0 : min(_4066, 1.0));
    float _4077 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
    float _850 = isnan(1.0) ? _4077 : (isnan(_4077) ? 1.0 : min(_4077, 1.0));
    vec4 _859 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _800, cbSceneParam._m0[86u].y * _801));
    float _863 = ((isnan(1.0) ? _4011 : (isnan(_4011) ? 1.0 : min(_4011, 1.0))) * TEXCOORD_5.w) * _859.x;
    float _864 = dot(vec3(_713, _714, _715), vec3(_792, _793, _794));
    float _867 = _864 * 2.0;
    float _871 = (_867 * _713) - _792;
    float _872 = (_867 * _714) - _793;
    float _873 = (_867 * _715) - _794;
    float _880 = abs(dot(vec3(_792, _793, _794), vec3(_713, _714, _715)));
    float _4088 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
    float _882 = sqrt(_716);
    float _895 = exp2((_882 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4088 : (isnan(_4088) ? 1.0 : min(_4088, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_882 * 3.0));
    float _927 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _931 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _935 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1236;
    float _1238;
    float _1239;
    float _1240;
    float _1241;
    float _1242;
    float _1243;
    float _1244;
    float _1245;
    float _1246;
    float _1247;
    float _1248;
    float _1249;
    float _1250;
    float _1251;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _961 = fma(_935, cbModelParam._m0[26u].z, fma(_931, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _927));
        float _965 = fma(_935, cbModelParam._m0[27u].z, fma(_931, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _927));
        float _969 = fma(_935, cbModelParam._m0[28u].z, fma(_931, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _927));
        float _994 = _927 + _713;
        float _995 = _931 + _714;
        float _996 = _935 + _715;
        float _1006 = fma(_996, cbModelParam._m0[26u].z, fma(_995, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _994)) - _961;
        float _1007 = fma(_996, cbModelParam._m0[27u].z, fma(_995, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _994)) - _965;
        float _1008 = fma(_996, cbModelParam._m0[28u].z, fma(_995, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _994)) - _969;
        float _1012 = inversesqrt(dot(vec3(_1006, _1007, _1008), vec3(_1006, _1007, _1008)));
        float _1025 = ((_1012 * _1006) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_961 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1026 = ((_1012 * _1007) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_965 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1027 = ((_1012 * _1008) / cbModelParam._m0[34u].z) + ((((((_969 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1030 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1025, _1026, _1027), 0.0);
        vec4 _1037 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1025, _1026, _1027), 0.0);
        vec4 _1044 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1025, _1026, _1027), 0.0);
        vec4 _1051 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1025, _1026, _1027), 0.0);
        float _1064 = exp2((_1030.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1030.x + (-0.5));
        float _1066 = _1064 * (_1030.y + (-0.5));
        float _1067 = _1064 * (_1030.z + (-0.5));
        float _1074 = exp2((_1037.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1037.x + (-0.5));
        float _1076 = _1074 * (_1037.y + (-0.5));
        float _1077 = _1074 * (_1037.z + (-0.5));
        float _1084 = exp2((_1044.w + (-0.5)) * 20.0) * 2.0;
        float _1085 = _1084 * (_1044.x + (-0.5));
        float _1086 = _1084 * (_1044.y + (-0.5));
        float _1087 = _1084 * (_1044.z + (-0.5));
        float _1094 = exp2((_1051.w + (-0.5)) * 20.0) * 2.0;
        float _1095 = _1094 * (_1051.x + (-0.5));
        float _1096 = _1094 * (_1051.y + (-0.5));
        float _1097 = _1094 * (_1051.z + (-0.5));
        float _1098 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1099 = isnan(0.0) ? _1096 : (isnan(_1096) ? 0.0 : max(_1096, 0.0));
        float _1100 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1101 = _1065 * 0.5;
        float _1102 = _1075 * 0.5;
        float _1103 = _1085 * 0.5;
        float _1104 = dot(vec3(_1101, _1102, _1103), vec3(_1101, _1102, _1103));
        float _1109 = (_1104 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1104);
        float _1118 = (dot(vec3(_713, _714, _715), vec3(_1109 * _1101, _1109 * _1102, _1109 * _1103)) + 1.0) * 0.5;
        float _4114 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1128 = sqrt(((_1102 * _1102) + (_1101 * _1101)) + (_1103 * _1103)) / (_1098 + 9.9999997473787516355514526367188e-06);
        float _4125 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1129 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
        float _1130 = _1129 * 2.0;
        float _1134 = (1.0 - _1129) / (_1129 + 1.0);
        float _4136 = isnan(0.0) ? _1134 : (isnan(_1134) ? 0.0 : max(_1134, 0.0));
        float _1135 = isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0));
        float _1144 = ((((1.0 - _1135) * (_1130 + 2.0)) * exp2(log2(isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0))) * (_1130 + 1.0))) + _1135) * _1098;
        float _1145 = _1066 * 0.5;
        float _1146 = _1076 * 0.5;
        float _1147 = _1086 * 0.5;
        float _1148 = dot(vec3(_1145, _1146, _1147), vec3(_1145, _1146, _1147));
        float _1153 = (_1148 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1148);
        float _1161 = (dot(vec3(_713, _714, _715), vec3(_1153 * _1145, _1153 * _1146, _1153 * _1147)) + 1.0) * 0.5;
        float _4147 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1170 = sqrt(((_1146 * _1146) + (_1145 * _1145)) + (_1147 * _1147)) / (_1099 + 9.9999997473787516355514526367188e-06);
        float _4158 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1171 = isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0));
        float _1172 = _1171 * 2.0;
        float _1176 = (1.0 - _1171) / (_1171 + 1.0);
        float _4169 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
        float _1177 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
        float _1186 = ((((1.0 - _1177) * (_1172 + 2.0)) * exp2(log2(isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0))) * (_1172 + 1.0))) + _1177) * _1099;
        float _1187 = _1067 * 0.5;
        float _1188 = _1077 * 0.5;
        float _1189 = _1087 * 0.5;
        float _1190 = dot(vec3(_1187, _1188, _1189), vec3(_1187, _1188, _1189));
        float _1195 = (_1190 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1190);
        float _1203 = (dot(vec3(_713, _714, _715), vec3(_1195 * _1187, _1195 * _1188, _1195 * _1189)) + 1.0) * 0.5;
        float _4180 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1212 = sqrt(((_1188 * _1188) + (_1187 * _1187)) + (_1189 * _1189)) / (_1100 + 9.9999997473787516355514526367188e-06);
        float _4191 = isnan(0.0) ? _1212 : (isnan(_1212) ? 0.0 : max(_1212, 0.0));
        float _1213 = isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0));
        float _1214 = _1213 * 2.0;
        float _1218 = (1.0 - _1213) / (_1213 + 1.0);
        float _4202 = isnan(0.0) ? _1218 : (isnan(_1218) ? 0.0 : max(_1218, 0.0));
        float _1219 = isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0));
        float _1228 = ((((1.0 - _1219) * (_1214 + 2.0)) * exp2(log2(isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * (_1214 + 1.0))) + _1219) * _1100;
        _1236 = _1067;
        _1238 = _1066;
        _1239 = _1065;
        _1240 = _1077;
        _1241 = _1076;
        _1242 = _1075;
        _1243 = _1087;
        _1244 = _1086;
        _1245 = _1085;
        _1246 = _1100;
        _1247 = _1099;
        _1248 = _1098;
        _1249 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0)));
        _1250 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0)));
        _1251 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0)));
    }
    else
    {
        _1236 = _1237;
        _1238 = _1237;
        _1239 = _1237;
        _1240 = _1237;
        _1241 = _1237;
        _1242 = _1237;
        _1243 = _1237;
        _1244 = _1237;
        _1245 = _1237;
        _1246 = _1237;
        _1247 = _1237;
        _1248 = _1237;
        _1249 = 0.0;
        _1250 = 0.0;
        _1251 = 0.0;
    }
    float _1544;
    float _1545;
    float _1546;
    float _1547;
    float _1548;
    float _1549;
    float _1550;
    float _1551;
    float _1552;
    float _1553;
    float _1554;
    float _1555;
    float _1556;
    float _1557;
    float _1558;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1275 = fma(_935, cbModelParam._m0[30u].z, fma(_931, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _927));
        float _1279 = fma(_935, cbModelParam._m0[31u].z, fma(_931, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _927));
        float _1283 = fma(_935, cbModelParam._m0[32u].z, fma(_931, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _927));
        float _1306 = _927 + _713;
        float _1307 = _931 + _714;
        float _1308 = _935 + _715;
        float _1318 = fma(_1308, cbModelParam._m0[30u].z, fma(_1307, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1306)) - _1275;
        float _1319 = fma(_1308, cbModelParam._m0[31u].z, fma(_1307, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1306)) - _1279;
        float _1320 = fma(_1308, cbModelParam._m0[32u].z, fma(_1307, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1306)) - _1283;
        float _1324 = inversesqrt(dot(vec3(_1318, _1319, _1320), vec3(_1318, _1319, _1320)));
        float _1337 = ((_1324 * _1318) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1275 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1338 = ((_1324 * _1319) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1279 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1339 = ((_1324 * _1320) / cbModelParam._m0[35u].z) + ((((((_1283 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1341 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1348 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1355 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        vec4 _1362 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1337, _1338, _1339), 0.0);
        float _1374 = exp2((_1341.w + (-0.5)) * 20.0) * 2.0;
        float _1375 = _1374 * (_1341.x + (-0.5));
        float _1376 = _1374 * (_1341.y + (-0.5));
        float _1377 = _1374 * (_1341.z + (-0.5));
        float _1384 = exp2((_1348.w + (-0.5)) * 20.0) * 2.0;
        float _1385 = _1384 * (_1348.x + (-0.5));
        float _1386 = _1384 * (_1348.y + (-0.5));
        float _1387 = _1384 * (_1348.z + (-0.5));
        float _1394 = exp2((_1355.w + (-0.5)) * 20.0) * 2.0;
        float _1395 = _1394 * (_1355.x + (-0.5));
        float _1396 = _1394 * (_1355.y + (-0.5));
        float _1397 = _1394 * (_1355.z + (-0.5));
        float _1404 = exp2((_1362.w + (-0.5)) * 20.0) * 2.0;
        float _1405 = _1404 * (_1362.x + (-0.5));
        float _1406 = _1404 * (_1362.y + (-0.5));
        float _1407 = _1404 * (_1362.z + (-0.5));
        float _1408 = isnan(0.0) ? _1405 : (isnan(_1405) ? 0.0 : max(_1405, 0.0));
        float _1409 = isnan(0.0) ? _1406 : (isnan(_1406) ? 0.0 : max(_1406, 0.0));
        float _1410 = isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0));
        float _1411 = _1375 * 0.5;
        float _1412 = _1385 * 0.5;
        float _1413 = _1395 * 0.5;
        float _1414 = dot(vec3(_1411, _1412, _1413), vec3(_1411, _1412, _1413));
        float _1419 = (_1414 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1414);
        float _1427 = (dot(vec3(_713, _714, _715), vec3(_1419 * _1411, _1419 * _1412, _1419 * _1413)) + 1.0) * 0.5;
        float _4243 = isnan(0.0) ? _1427 : (isnan(_1427) ? 0.0 : max(_1427, 0.0));
        float _1436 = sqrt(((_1412 * _1412) + (_1411 * _1411)) + (_1413 * _1413)) / (_1408 + 9.9999997473787516355514526367188e-06);
        float _4254 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
        float _1437 = isnan(1.0) ? _4254 : (isnan(_4254) ? 1.0 : min(_4254, 1.0));
        float _1438 = _1437 * 2.0;
        float _1442 = (1.0 - _1437) / (_1437 + 1.0);
        float _4265 = isnan(0.0) ? _1442 : (isnan(_1442) ? 0.0 : max(_1442, 0.0));
        float _1443 = isnan(1.0) ? _4265 : (isnan(_4265) ? 1.0 : min(_4265, 1.0));
        float _1452 = ((((1.0 - _1443) * (_1438 + 2.0)) * exp2(log2(isnan(1.0) ? _4243 : (isnan(_4243) ? 1.0 : min(_4243, 1.0))) * (_1438 + 1.0))) + _1443) * _1408;
        float _1453 = _1376 * 0.5;
        float _1454 = _1386 * 0.5;
        float _1455 = _1396 * 0.5;
        float _1456 = dot(vec3(_1453, _1454, _1455), vec3(_1453, _1454, _1455));
        float _1461 = (_1456 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1456);
        float _1469 = (dot(vec3(_713, _714, _715), vec3(_1461 * _1453, _1461 * _1454, _1461 * _1455)) + 1.0) * 0.5;
        float _4276 = isnan(0.0) ? _1469 : (isnan(_1469) ? 0.0 : max(_1469, 0.0));
        float _1478 = sqrt(((_1454 * _1454) + (_1453 * _1453)) + (_1455 * _1455)) / (_1409 + 9.9999997473787516355514526367188e-06);
        float _4287 = isnan(0.0) ? _1478 : (isnan(_1478) ? 0.0 : max(_1478, 0.0));
        float _1479 = isnan(1.0) ? _4287 : (isnan(_4287) ? 1.0 : min(_4287, 1.0));
        float _1480 = _1479 * 2.0;
        float _1484 = (1.0 - _1479) / (_1479 + 1.0);
        float _4298 = isnan(0.0) ? _1484 : (isnan(_1484) ? 0.0 : max(_1484, 0.0));
        float _1485 = isnan(1.0) ? _4298 : (isnan(_4298) ? 1.0 : min(_4298, 1.0));
        float _1494 = ((((1.0 - _1485) * (_1480 + 2.0)) * exp2(log2(isnan(1.0) ? _4276 : (isnan(_4276) ? 1.0 : min(_4276, 1.0))) * (_1480 + 1.0))) + _1485) * _1409;
        float _1495 = _1377 * 0.5;
        float _1496 = _1387 * 0.5;
        float _1497 = _1397 * 0.5;
        float _1498 = dot(vec3(_1495, _1496, _1497), vec3(_1495, _1496, _1497));
        float _1503 = (_1498 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1498);
        float _1511 = (dot(vec3(_713, _714, _715), vec3(_1503 * _1495, _1503 * _1496, _1503 * _1497)) + 1.0) * 0.5;
        float _4309 = isnan(0.0) ? _1511 : (isnan(_1511) ? 0.0 : max(_1511, 0.0));
        float _1520 = sqrt(((_1496 * _1496) + (_1495 * _1495)) + (_1497 * _1497)) / (_1410 + 9.9999997473787516355514526367188e-06);
        float _4320 = isnan(0.0) ? _1520 : (isnan(_1520) ? 0.0 : max(_1520, 0.0));
        float _1521 = isnan(1.0) ? _4320 : (isnan(_4320) ? 1.0 : min(_4320, 1.0));
        float _1522 = _1521 * 2.0;
        float _1526 = (1.0 - _1521) / (_1521 + 1.0);
        float _4331 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
        float _1527 = isnan(1.0) ? _4331 : (isnan(_4331) ? 1.0 : min(_4331, 1.0));
        float _1536 = ((((1.0 - _1527) * (_1522 + 2.0)) * exp2(log2(isnan(1.0) ? _4309 : (isnan(_4309) ? 1.0 : min(_4309, 1.0))) * (_1522 + 1.0))) + _1527) * _1410;
        _1544 = _1377;
        _1545 = _1376;
        _1546 = _1375;
        _1547 = _1387;
        _1548 = _1386;
        _1549 = _1385;
        _1550 = _1397;
        _1551 = _1396;
        _1552 = _1395;
        _1553 = _1410;
        _1554 = _1409;
        _1555 = _1408;
        _1556 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1452 : (isnan(_1452) ? 0.0 : max(_1452, 0.0)));
        _1557 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1494 : (isnan(_1494) ? 0.0 : max(_1494, 0.0)));
        _1558 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0)));
    }
    else
    {
        _1544 = _1237;
        _1545 = _1237;
        _1546 = _1237;
        _1547 = _1237;
        _1548 = _1237;
        _1549 = _1237;
        _1550 = _1237;
        _1551 = _1237;
        _1552 = _1237;
        _1553 = _1237;
        _1554 = _1237;
        _1555 = _1237;
        _1556 = 0.0;
        _1557 = 0.0;
        _1558 = 0.0;
    }
    float _1568 = (cbModelParam._m0[1u].x * (_1556 - _1249)) + _1249;
    float _1569 = (cbModelParam._m0[1u].x * (_1557 - _1250)) + _1250;
    float _1570 = (cbModelParam._m0[1u].x * (_1558 - _1251)) + _1251;
    float _1591 = fma(_1570, cbSceneParam._m0[89u].z, fma(_1569, cbSceneParam._m0[89u].y, _1568 * cbSceneParam._m0[89u].x));
    float _1594 = fma(_1570, cbSceneParam._m0[90u].z, fma(_1569, cbSceneParam._m0[90u].y, _1568 * cbSceneParam._m0[90u].x));
    float _1597 = fma(_1570, cbSceneParam._m0[91u].z, fma(_1569, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1568));
    float _1612 = _871 * 0.5;
    float _1613 = _872 * 0.5;
    float _1614 = _873 * 0.5;
    float _1615 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1546, _1549, _1552, _1555));
    float _1618 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1545, _1548, _1551, _1554));
    float _1621 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1544, _1547, _1550, _1553));
    float _1655;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1628 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1236, _1240, _1243, _1246));
        float _1632 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1238, _1241, _1244, _1247));
        float _1636 = dot(vec4(_1612, _1613, _1614, 1.0), vec4(_1239, _1242, _1245, _1248));
        float _1643 = dot(vec4(cbModelParam._m0[39u]), vec4(_1612, _1613, _1614, 1.0));
        _1655 = dot(vec3(isnan(0.0) ? _1636 : (isnan(_1636) ? 0.0 : max(_1636, 0.0)), isnan(0.0) ? _1632 : (isnan(_1632) ? 0.0 : max(_1632, 0.0)), isnan(0.0) ? _1628 : (isnan(_1628) ? 0.0 : max(_1628, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1643) ? 0.0 : (isnan(0.0) ? _1643 : max(0.0, _1643))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1655 = 1.0;
    }
    float _1666;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1657 = dot(vec4(cbModelParam._m0[40u]), vec4(_1612, _1613, _1614, 1.0));
        _1666 = dot(vec3(isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0)), isnan(0.0) ? _1618 : (isnan(_1618) ? 0.0 : max(_1618, 0.0)), isnan(0.0) ? _1621 : (isnan(_1621) ? 0.0 : max(_1621, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1657) ? 0.0 : (isnan(0.0) ? _1657 : max(0.0, _1657))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1666 = 1.0;
    }
    float _1670 = (_1666 * cbModelParam._m0[1u].x) + (_1655 * (1.0 - cbModelParam._m0[1u].x));
    float _1680 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _716);
    float _1681 = isnan(_1680) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1680 : min(cbModelParam._m0[25u].z, _1680));
    float _1763;
    float _1765;
    float _1767;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1730 = fma(_935, cbModelParam._m0[13u].z, fma(_931, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _927)) + cbModelParam._m0[13u].w;
        float _1734 = fma(_935, cbModelParam._m0[14u].z, fma(_931, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _927)) + cbModelParam._m0[14u].w;
        float _1738 = fma(_935, cbModelParam._m0[15u].z, fma(_931, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _927)) + cbModelParam._m0[15u].w;
        float _1741 = fma(_873, cbModelParam._m0[13u].z, fma(_872, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _871));
        float _1744 = fma(_873, cbModelParam._m0[14u].z, fma(_872, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _871));
        float _1747 = fma(_873, cbModelParam._m0[15u].z, fma(_872, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _871));
        float _1775;
        if (_1741 > 0.0)
        {
            _1775 = abs((1.0 - _1730) / _1741);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1741 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1730 + 1.0) / _1741);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1775 = frontier_phi_14_12_ladder;
        }
        float _2003;
        if (_1744 > 0.0)
        {
            _2003 = abs((1.0 - _1734) / _1744);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1744 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1734 + 1.0) / _1744);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2003 = frontier_phi_23_19_ladder;
        }
        float _2300;
        if (_1747 > 0.0)
        {
            _2300 = abs((1.0 - _1738) / _1747);
        }
        else
        {
            float frontier_phi_35_30_ladder;
            if (_1747 < 0.0)
            {
                frontier_phi_35_30_ladder = abs((_1738 + 1.0) / _1747);
            }
            else
            {
                frontier_phi_35_30_ladder = 5000.0;
            }
            _2300 = frontier_phi_35_30_ladder;
        }
        float _2302 = isnan(_2003) ? _1775 : (isnan(_1775) ? _2003 : min(_1775, _2003));
        float _2303 = isnan(_2300) ? _2302 : (isnan(_2302) ? _2300 : min(_2302, _2300));
        float _2307 = (_2303 * _1741) + _1730;
        float _2308 = (_2303 * _1744) + _1734;
        float _2309 = (_2303 * _1747) + _1738;
        float _2310 = _2303 * 9.9999997473787516355514526367188e-05;
        float _2312 = (-1.0) - _2310;
        float _2314 = _2310 + 1.0;
        float frontier_phi_13_35_ladder;
        float frontier_phi_13_35_ladder_1;
        float frontier_phi_13_35_ladder_2;
        if ((_2309 > _2314) || ((_2309 < _2312) || ((_2308 > _2314) || ((_2308 < _2312) || ((_2307 < _2312) || (_2307 > _2314))))))
        {
            frontier_phi_13_35_ladder = 0.0;
            frontier_phi_13_35_ladder_1 = 0.0;
            frontier_phi_13_35_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2454 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2309, cbModelParam._m0[9u].z, fma(_2308, cbModelParam._m0[9u].y, _2307 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2309, cbModelParam._m0[10u].z, fma(_2308, cbModelParam._m0[10u].y, _2307 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2309, cbModelParam._m0[11u].z, fma(_2308, cbModelParam._m0[11u].y, _2307 * cbModelParam._m0[11u].x))), _1681);
            frontier_phi_13_35_ladder = _2454.z * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_1 = _2454.y * cbModelParam._m0[1u].y;
            frontier_phi_13_35_ladder_2 = _2454.x * cbModelParam._m0[1u].y;
        }
        _1763 = frontier_phi_13_35_ladder_2;
        _1765 = frontier_phi_13_35_ladder_1;
        _1767 = frontier_phi_13_35_ladder;
    }
    else
    {
        vec4 _1751 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_871, _872, _873), _1681);
        _1763 = _1751.x * cbModelParam._m0[1u].y;
        _1765 = _1751.y * cbModelParam._m0[1u].y;
        _1767 = _1751.z * cbModelParam._m0[1u].y;
    }
    float _1771 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _716);
    float _1772 = isnan(_1771) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1771 : min(cbModelParam._m0[25u].w, _1771));
    float _1863;
    float _1865;
    float _1867;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1827 = fma(_935, cbModelParam._m0[21u].z, fma(_931, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _927)) + cbModelParam._m0[21u].w;
        float _1831 = fma(_935, cbModelParam._m0[22u].z, fma(_931, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _927)) + cbModelParam._m0[22u].w;
        float _1835 = fma(_935, cbModelParam._m0[23u].z, fma(_931, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _927)) + cbModelParam._m0[23u].w;
        float _1838 = fma(_873, cbModelParam._m0[21u].z, fma(_872, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _871));
        float _1841 = fma(_873, cbModelParam._m0[22u].z, fma(_872, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _871));
        float _1844 = fma(_873, cbModelParam._m0[23u].z, fma(_872, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _871));
        float _2008;
        if (_1838 > 0.0)
        {
            _2008 = abs((1.0 - _1827) / _1838);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1838 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1827 + 1.0) / _1838);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2008 = frontier_phi_25_21_ladder;
        }
        float _2327;
        if (_1841 > 0.0)
        {
            _2327 = abs((1.0 - _1831) / _1841);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1841 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1831 + 1.0) / _1841);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2327 = frontier_phi_37_32_ladder;
        }
        float _2654;
        if (_1844 > 0.0)
        {
            _2654 = abs((1.0 - _1835) / _1844);
        }
        else
        {
            float frontier_phi_47_44_ladder;
            if (_1844 < 0.0)
            {
                frontier_phi_47_44_ladder = abs((_1835 + 1.0) / _1844);
            }
            else
            {
                frontier_phi_47_44_ladder = 5000.0;
            }
            _2654 = frontier_phi_47_44_ladder;
        }
        float _2656 = isnan(_2327) ? _2008 : (isnan(_2008) ? _2327 : min(_2008, _2327));
        float _2657 = isnan(_2654) ? _2656 : (isnan(_2656) ? _2654 : min(_2656, _2654));
        float _2661 = (_2657 * _1838) + _1827;
        float _2662 = (_2657 * _1841) + _1831;
        float _2663 = (_2657 * _1844) + _1835;
        float _2664 = _2657 * 9.9999997473787516355514526367188e-05;
        float _2665 = (-1.0) - _2664;
        float _2667 = _2664 + 1.0;
        float frontier_phi_22_47_ladder;
        float frontier_phi_22_47_ladder_1;
        float frontier_phi_22_47_ladder_2;
        if ((_2663 > _2667) || ((_2663 < _2665) || ((_2662 > _2667) || ((_2662 < _2665) || ((_2661 < _2665) || (_2661 > _2667))))))
        {
            frontier_phi_22_47_ladder = 0.0;
            frontier_phi_22_47_ladder_1 = 0.0;
            frontier_phi_22_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2781 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2663, cbModelParam._m0[17u].z, fma(_2662, cbModelParam._m0[17u].y, _2661 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2663, cbModelParam._m0[18u].z, fma(_2662, cbModelParam._m0[18u].y, _2661 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2663, cbModelParam._m0[19u].z, fma(_2662, cbModelParam._m0[19u].y, _2661 * cbModelParam._m0[19u].x))), _1772);
            frontier_phi_22_47_ladder = _2781.z * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_1 = _2781.y * cbModelParam._m0[1u].z;
            frontier_phi_22_47_ladder_2 = _2781.x * cbModelParam._m0[1u].z;
        }
        _1863 = frontier_phi_22_47_ladder_2;
        _1865 = frontier_phi_22_47_ladder_1;
        _1867 = frontier_phi_22_47_ladder;
    }
    else
    {
        vec4 _1847 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_871, _872, _873), _1772);
        _1863 = _1847.x * cbModelParam._m0[1u].z;
        _1865 = _1847.y * cbModelParam._m0[1u].z;
        _1867 = _1847.z * cbModelParam._m0[1u].z;
    }
    float _1879 = ((((1.0 - _895) * ((_882 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_895 * _882)) * _863;
    float _1880 = _1879 * ((cbModelParam._m0[1u].w * (_1863 - _1763)) + _1763);
    float _1881 = _1879 * ((cbModelParam._m0[1u].w * (_1865 - _1765)) + _1765);
    float _1882 = _1879 * ((cbModelParam._m0[1u].w * (_1867 - _1767)) + _1767);
    float _1885 = fma(_1882, cbSceneParam._m0[89u].z, fma(_1881, cbSceneParam._m0[89u].y, _1880 * cbSceneParam._m0[89u].x));
    float _1888 = fma(_1882, cbSceneParam._m0[90u].z, fma(_1881, cbSceneParam._m0[90u].y, _1880 * cbSceneParam._m0[90u].x));
    float _1891 = fma(_1882, cbSceneParam._m0[91u].z, fma(_1881, cbSceneParam._m0[91u].y, _1880 * cbSceneParam._m0[91u].x));
    float _1902 = _800 / cbSceneParam._m0[86u].x;
    float _1903 = _801 / cbSceneParam._m0[86u].y;
    float _1910 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4457 = isnan(0.0) ? _1910 : (isnan(_1910) ? 0.0 : max(_1910, 0.0));
    float _1912 = (isnan(1.0) ? _4457 : (isnan(_4457) ? 1.0 : min(_4457, 1.0))) * 5.0;
    float _1917 = ((10.0 / (_734 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_713, _714, _715), vec3(1.0, 0.0, 0.0));
    vec4 _1927 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_1917 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_1917 + _1902) * cbSceneParam._m0[86u].x, _801), _1912).w) + _1902) * cbSceneParam._m0[86u].x, _801), _1912);
    float _1933 = isnan(0.5) ? _1927.w : (isnan(_1927.w) ? 0.5 : max(_1927.w, 0.5));
    float _1948 = 1.0 - (_1927.w / _1933);
    float _1982 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1986 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1990 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1994 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1995 = _1982 / _1994;
    float _1996 = _1986 / _1994;
    float _1997 = _1990 / _1994;
    float _2143;
    float _2144;
    float _2145;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2024 = ((uint(_1997 > cbSceneParam._m0[59u].y) + uint(_1997 > cbSceneParam._m0[59u].x)) + uint(_1997 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2025 = _2024 + 43u;
        uint _2033 = _2024 + 44u;
        uint _2041 = _2024 + 45u;
        uint _2049 = _2024 + 46u;
        float _2060 = fma(_1994, cbSceneParam._m0[_2025].w, fma(_1990, cbSceneParam._m0[_2025].z, fma(_1986, cbSceneParam._m0[_2025].y, _1982 * cbSceneParam._m0[_2025].x)));
        float _2064 = fma(_1994, cbSceneParam._m0[_2033].w, fma(_1990, cbSceneParam._m0[_2033].z, fma(_1986, cbSceneParam._m0[_2033].y, _1982 * cbSceneParam._m0[_2033].x)));
        float _2072 = fma(_1994, cbSceneParam._m0[_2049].w, fma(_1990, cbSceneParam._m0[_2049].z, fma(_1986, cbSceneParam._m0[_2049].y, _1982 * cbSceneParam._m0[_2049].x)));
        float _2076 = cbSceneParam._m0[33u].z * _2072;
        float _2078 = cbSceneParam._m0[33u].w * _2072;
        float _2081 = fma(_1994, cbSceneParam._m0[_2041].w, fma(_1990, cbSceneParam._m0[_2041].z, fma(_1986, cbSceneParam._m0[_2041].y, _1982 * cbSceneParam._m0[_2041].x))) / _2072;
        float _2129 = (cbSceneParam._m0[33u].x - sqrt(((_1996 * _1996) + (_1995 * _1995)) + (_1997 * _1997))) * cbSceneParam._m0[33u].y;
        float _4473 = isnan(0.0) ? _2129 : (isnan(_2129) ? 0.0 : max(_2129, 0.0));
        float _2136 = (isnan(1.0) ? _4473 : (isnan(_4473) ? 1.0 : min(_4473, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2076 + _2060) / _2072, (_2078 + _2064) / _2072), _2081), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2078 + _2060) / _2072, (_2064 - _2076) / _2072), _2081), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2060 - _2076) / _2072, (_2064 - _2078) / _2072), _2081), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2060 - _2078) / _2072, (_2076 + _2064) / _2072), _2081), 0.0)).x), vec4(0.25)));
        _2143 = 1.0 - (_2136 * cbSceneParam._m0[34u].x);
        _2144 = 1.0 - (_2136 * cbSceneParam._m0[34u].y);
        _2145 = 1.0 - (_2136 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2143 = 1.0;
        _2144 = 1.0;
        _2145 = 1.0;
    }
    float _2209;
    float _2211;
    float _2213;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2197 = fma(_1994, cbSceneParam._m0[63u].w, fma(_1990, cbSceneParam._m0[63u].z, fma(_1986, cbSceneParam._m0[63u].y, _1982 * cbSceneParam._m0[63u].x)));
        float _2198 = fma(_1994, cbSceneParam._m0[60u].w, fma(_1990, cbSceneParam._m0[60u].z, fma(_1986, cbSceneParam._m0[60u].y, _1982 * cbSceneParam._m0[60u].x))) / _2197;
        float _2199 = fma(_1994, cbSceneParam._m0[61u].w, fma(_1990, cbSceneParam._m0[61u].z, fma(_1986, cbSceneParam._m0[61u].y, _1982 * cbSceneParam._m0[61u].x))) / _2197;
        float frontier_phi_34_33_ladder;
        float frontier_phi_34_33_ladder_1;
        float frontier_phi_34_33_ladder_2;
        if ((((_2198 >= cbSceneParam._m0[64u].x) && (_2199 >= cbSceneParam._m0[64u].y)) && (_2198 <= cbSceneParam._m0[64u].z)) && (_2199 <= cbSceneParam._m0[64u].w))
        {
            float _2340 = fma(_1994, cbSceneParam._m0[62u].w, fma(_1990, cbSceneParam._m0[62u].z, fma(_1986, cbSceneParam._m0[62u].y, _1982 * cbSceneParam._m0[62u].x))) / _2197;
            float _2344 = isnan(cbSceneParam._m0[41u].w) ? _2340 : (isnan(_2340) ? cbSceneParam._m0[41u].w : max(_2340, cbSceneParam._m0[41u].w));
            float _2387 = (cbSceneParam._m0[33u].x - sqrt(((_1996 * _1996) + (_1995 * _1995)) + (_1997 * _1997))) * cbSceneParam._m0[33u].y;
            float _4489 = isnan(0.0) ? _2387 : (isnan(_2387) ? 0.0 : max(_2387, 0.0));
            float _2394 = (isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2198, cbSceneParam._m0[33u].w + _2199), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2198, _2199 - cbSceneParam._m0[33u].z), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2198 - cbSceneParam._m0[33u].z, _2199 - cbSceneParam._m0[33u].w), _2344), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2198 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2199), _2344), 0.0)).x), vec4(0.25)));
            float _2398 = 1.0 - (_2394 * cbSceneParam._m0[34u].x);
            float _2399 = 1.0 - (_2394 * cbSceneParam._m0[34u].y);
            float _2400 = 1.0 - (_2394 * cbSceneParam._m0[34u].z);
            frontier_phi_34_33_ladder = isnan(_2400) ? _2145 : (isnan(_2145) ? _2400 : min(_2145, _2400));
            frontier_phi_34_33_ladder_1 = isnan(_2399) ? _2144 : (isnan(_2144) ? _2399 : min(_2144, _2399));
            frontier_phi_34_33_ladder_2 = isnan(_2398) ? _2143 : (isnan(_2143) ? _2398 : min(_2143, _2398));
        }
        else
        {
            frontier_phi_34_33_ladder = _2145;
            frontier_phi_34_33_ladder_1 = _2144;
            frontier_phi_34_33_ladder_2 = _2143;
        }
        _2209 = frontier_phi_34_33_ladder_2;
        _2211 = frontier_phi_34_33_ladder_1;
        _2213 = frontier_phi_34_33_ladder;
    }
    else
    {
        _2209 = _2143;
        _2211 = _2144;
        _2213 = _2145;
    }
    float _4515 = isnan(0.0) ? _2209 : (isnan(_2209) ? 0.0 : max(_2209, 0.0));
    float _2215 = isnan(1.0) ? _4515 : (isnan(_4515) ? 1.0 : min(_4515, 1.0));
    float _4526 = isnan(0.0) ? _2211 : (isnan(_2211) ? 0.0 : max(_2211, 0.0));
    float _2216 = isnan(1.0) ? _4526 : (isnan(_4526) ? 1.0 : min(_4526, 1.0));
    float _4537 = isnan(0.0) ? _2213 : (isnan(_2213) ? 0.0 : max(_2213, 0.0));
    float _2217 = isnan(1.0) ? _4537 : (isnan(_4537) ? 1.0 : min(_4537, 1.0));
    uvec4 _2221 = floatBitsToUint(cbInstanceData._m0[_273 + 5u]);
    uint _2223 = _2221.x * 14u;
    uint _2224 = _2223 + 13u;
    float _2231 = _863 + (-1.0);
    float _2236 = (cbLight._m0[_2224].x * _2231) + 1.0;
    float _2237 = (cbLight._m0[_2224].y * _2231) + 1.0;
    float _2238 = (cbLight._m0[_2224].z * _2231) + 1.0;
    float _2239 = (cbLight._m0[_2224].w * _2231) + 1.0;
    uint _2240 = _2223 + 5u;
    float _2246 = isnan(1.0) ? _2237 : (isnan(_2237) ? 1.0 : min(_2237, 1.0));
    uint _2250 = _2223 + 4u;
    float _2259 = isnan(1.0) ? _2236 : (isnan(_2236) ? 1.0 : min(_2236, 1.0));
    uint _2263 = _2223 | 1u;
    float _2274 = dot(vec3(cbLight._m0[_2223].xyz), vec3(_713, _714, _715));
    float _2277 = dot(vec3(cbLight._m0[_2263].xyz), vec3(_713, _714, _715));
    float _4558 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
    float _4569 = isnan(0.0) ? _2277 : (isnan(_2277) ? 0.0 : max(_2277, 0.0));
    float _2282 = (isnan(1.0) ? _4558 : (isnan(_4558) ? 1.0 : min(_4558, 1.0))) * 0.3183098733425140380859375;
    float _2284 = (isnan(1.0) ? _4569 : (isnan(_4569) ? 1.0 : min(_4569, 1.0))) * 0.3183098733425140380859375;
    float _2291 = ((cbLight._m0[_2240].x * _2246) * _2284) + (((cbLight._m0[_2250].x * _2215) * _2259) * _2282);
    float _2292 = ((_2246 * cbLight._m0[_2240].y) * _2284) + (((cbLight._m0[_2250].y * _2216) * _2259) * _2282);
    float _2293 = ((_2246 * cbLight._m0[_2240].z) * _2284) + (((cbLight._m0[_2250].z * _2217) * _2259) * _2282);
    uvec4 _2297 = floatBitsToUint(cbLight._m0[_2223 + 12u]);
    bool _2299 = _2297.x == 0u;
    float _2401;
    float _2403;
    float _2405;
    if (_2299)
    {
        _2401 = _2291;
        _2403 = _2292;
        _2405 = _2293;
    }
    else
    {
        uint _2409 = _2223 + 6u;
        float _2425 = (dot(vec3(cbLight._m0[_2223 + 2u].xyz), vec3(_713, _714, _715)) * 0.5) + 0.5;
        float _2426 = _2425 * _2425;
        float _4580 = isnan(0.0) ? _2426 : (isnan(_2426) ? 0.0 : max(_2426, 0.0));
        float _2427 = isnan(1.0) ? _4580 : (isnan(_4580) ? 1.0 : min(_4580, 1.0));
        float _2428 = isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0));
        _2401 = (((cbLight._m0[_2409].x * 0.3183098733425140380859375) * _2427) * _2428) + _2291;
        _2403 = (((cbLight._m0[_2409].y * 0.3183098733425140380859375) * _2427) * _2428) + _2292;
        _2405 = (((cbLight._m0[_2409].z * 0.3183098733425140380859375) * _2427) * _2428) + _2293;
    }
    bool _2408 = _2297.y == 0u;
    float _2463;
    float _2465;
    float _2467;
    if (_2408)
    {
        _2463 = _2401;
        _2465 = _2403;
        _2467 = _2405;
    }
    else
    {
        uint _2625 = _2223 + 7u;
        float _2641 = (dot(vec3(cbLight._m0[_2223 + 3u].xyz), vec3(_713, _714, _715)) * 0.5) + 0.5;
        float _2642 = _2641 * _2641;
        float _4596 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
        float _2643 = isnan(1.0) ? _4596 : (isnan(_4596) ? 1.0 : min(_4596, 1.0));
        float _2644 = isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0));
        _2463 = (((cbLight._m0[_2625].x * 0.3183098733425140380859375) * _2643) * _2644) + _2401;
        _2465 = (((cbLight._m0[_2625].y * 0.3183098733425140380859375) * _2643) * _2644) + _2403;
        _2467 = (((cbLight._m0[_2625].z * 0.3183098733425140380859375) * _2643) * _2644) + _2405;
    }
    uint _2470 = _2223 + 8u;
    float _2483 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2223].w)) * _716) * 0.949999988079071044921875);
    float _2484 = _2483 * _2483;
    float _2485 = cbLight._m0[_2223].x + _792;
    float _2486 = cbLight._m0[_2223].y + _793;
    float _2487 = cbLight._m0[_2223].z + _794;
    float _2491 = inversesqrt(dot(vec3(_2485, _2486, _2487), vec3(_2485, _2486, _2487)));
    float _2492 = _2491 * _2485;
    float _2493 = _2491 * _2486;
    float _2494 = _2491 * _2487;
    float _2495 = dot(vec3(_713, _714, _715), vec3(cbLight._m0[_2223].xyz));
    float _4612 = isnan(0.0) ? _2495 : (isnan(_2495) ? 0.0 : max(_2495, 0.0));
    float _2498 = isnan(1.0) ? _4612 : (isnan(_4612) ? 1.0 : min(_4612, 1.0));
    float _4623 = isnan(0.0) ? _864 : (isnan(_864) ? 0.0 : max(_864, 0.0));
    float _2499 = isnan(1.0) ? _4623 : (isnan(_4623) ? 1.0 : min(_4623, 1.0));
    float _2500 = dot(vec3(_713, _714, _715), vec3(_2492, _2493, _2494));
    float _4634 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
    float _2503 = isnan(1.0) ? _4634 : (isnan(_4634) ? 1.0 : min(_4634, 1.0));
    float _2504 = dot(vec3(cbLight._m0[_2223].xyz), vec3(_2492, _2493, _2494));
    float _4645 = isnan(0.0) ? _2504 : (isnan(_2504) ? 0.0 : max(_2504, 0.0));
    float _2508 = _2484 * _2484;
    float _2512 = ((_2503 * _2503) * (_2508 + (-1.0))) + 1.0;
    float _2523 = (exp2(log2(1.0 - (isnan(1.0) ? _4645 : (isnan(_4645) ? 1.0 : min(_4645, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2524 = 1.0 - _2484;
    float _2535 = (0.5 / (((_2499 * ((_2498 * _2524) + _2484)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2524) + _2484) * _2498))) * _2498;
    float _4656 = isnan(0.0) ? _2535 : (isnan(_2535) ? 0.0 : max(_2535, 0.0));
    float _2537 = (isnan(1.0) ? _4656 : (isnan(_4656) ? 1.0 : min(_4656, 1.0))) * (_2508 / ((_2512 * _2512) * 3.141590118408203125));
    uint _2551 = _2223 + 9u;
    float _2562 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2263].w)) * _716) * 0.949999988079071044921875);
    float _2563 = _2562 * _2562;
    float _2564 = cbLight._m0[_2263].x + _792;
    float _2565 = cbLight._m0[_2263].y + _793;
    float _2566 = cbLight._m0[_2263].z + _794;
    float _2570 = inversesqrt(dot(vec3(_2564, _2565, _2566), vec3(_2564, _2565, _2566)));
    float _2571 = _2570 * _2564;
    float _2572 = _2570 * _2565;
    float _2573 = _2570 * _2566;
    float _2574 = dot(vec3(_713, _714, _715), vec3(cbLight._m0[_2263].xyz));
    float _4667 = isnan(0.0) ? _2574 : (isnan(_2574) ? 0.0 : max(_2574, 0.0));
    float _2577 = isnan(1.0) ? _4667 : (isnan(_4667) ? 1.0 : min(_4667, 1.0));
    float _2578 = dot(vec3(_713, _714, _715), vec3(_2571, _2572, _2573));
    float _4678 = isnan(0.0) ? _2578 : (isnan(_2578) ? 0.0 : max(_2578, 0.0));
    float _2581 = isnan(1.0) ? _4678 : (isnan(_4678) ? 1.0 : min(_4678, 1.0));
    float _2582 = dot(vec3(cbLight._m0[_2263].xyz), vec3(_2571, _2572, _2573));
    float _4689 = isnan(0.0) ? _2582 : (isnan(_2582) ? 0.0 : max(_2582, 0.0));
    float _2586 = _2563 * _2563;
    float _2590 = ((_2581 * _2581) * (_2586 + (-1.0))) + 1.0;
    float _2599 = (exp2(log2(1.0 - (isnan(1.0) ? _4689 : (isnan(_4689) ? 1.0 : min(_4689, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2600 = 1.0 - _2563;
    float _2610 = (0.5 / (((_2499 * ((_2577 * _2600) + _2563)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2600) + _2563) * _2577))) * _2577;
    float _4700 = isnan(0.0) ? _2610 : (isnan(_2610) ? 0.0 : max(_2610, 0.0));
    float _2612 = (isnan(1.0) ? _4700 : (isnan(_4700) ? 1.0 : min(_4700, 1.0))) * (_2586 / ((_2590 * _2590) * 3.141590118408203125));
    float _2622 = (((_2599 * cbLight._m0[_2551].x) * _2612) * _2246) + ((((cbLight._m0[_2470].x * _2215) * _2523) * _2537) * _2259);
    float _2623 = (((_2599 * cbLight._m0[_2551].y) * _2612) * _2246) + ((((cbLight._m0[_2470].y * _2216) * _2523) * _2537) * _2259);
    float _2624 = (((_2599 * cbLight._m0[_2551].z) * _2612) * _2246) + ((((cbLight._m0[_2470].z * _2217) * _2523) * _2537) * _2259);
    float _2680;
    float _2682;
    float _2684;
    if (_2299)
    {
        _2680 = _2622;
        _2682 = _2623;
        _2684 = _2624;
    }
    else
    {
        uint _2686 = _2223 + 2u;
        uint _2690 = _2223 + 10u;
        float _2704 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2686].w)) * _716) * 0.949999988079071044921875);
        float _2705 = _2704 * _2704;
        float _2706 = cbLight._m0[_2686].x + _792;
        float _2707 = cbLight._m0[_2686].y + _793;
        float _2708 = cbLight._m0[_2686].z + _794;
        float _2712 = inversesqrt(dot(vec3(_2706, _2707, _2708), vec3(_2706, _2707, _2708)));
        float _2713 = _2712 * _2706;
        float _2714 = _2712 * _2707;
        float _2715 = _2712 * _2708;
        float _2716 = dot(vec3(_713, _714, _715), vec3(cbLight._m0[_2686].xyz));
        float _4711 = isnan(0.0) ? _2716 : (isnan(_2716) ? 0.0 : max(_2716, 0.0));
        float _2719 = isnan(1.0) ? _4711 : (isnan(_4711) ? 1.0 : min(_4711, 1.0));
        float _2720 = dot(vec3(_713, _714, _715), vec3(_2713, _2714, _2715));
        float _4722 = isnan(0.0) ? _2720 : (isnan(_2720) ? 0.0 : max(_2720, 0.0));
        float _2723 = isnan(1.0) ? _4722 : (isnan(_4722) ? 1.0 : min(_4722, 1.0));
        float _2724 = dot(vec3(cbLight._m0[_2686].xyz), vec3(_2713, _2714, _2715));
        float _4733 = isnan(0.0) ? _2724 : (isnan(_2724) ? 0.0 : max(_2724, 0.0));
        float _2728 = _2705 * _2705;
        float _2732 = ((_2723 * _2723) * (_2728 + (-1.0))) + 1.0;
        float _2741 = (exp2(log2(1.0 - (isnan(1.0) ? _4733 : (isnan(_4733) ? 1.0 : min(_4733, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2742 = 1.0 - _2705;
        float _2752 = (0.5 / (((_2499 * ((_2719 * _2742) + _2705)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2742) + _2705) * _2719))) * _2719;
        float _4744 = isnan(0.0) ? _2752 : (isnan(_2752) ? 0.0 : max(_2752, 0.0));
        float _2754 = (isnan(1.0) ? _4744 : (isnan(_4744) ? 1.0 : min(_4744, 1.0))) * (_2728 / ((_2732 * _2732) * 3.141590118408203125));
        float _2755 = isnan(1.0) ? _2238 : (isnan(_2238) ? 1.0 : min(_2238, 1.0));
        _2680 = (((_2741 * cbLight._m0[_2690].x) * _2754) * _2755) + _2622;
        _2682 = (((_2741 * cbLight._m0[_2690].y) * _2754) * _2755) + _2623;
        _2684 = (((_2741 * cbLight._m0[_2690].z) * _2754) * _2755) + _2624;
    }
    float _2786;
    float _2788;
    float _2790;
    if (_2408)
    {
        _2786 = _2680;
        _2788 = _2682;
        _2790 = _2684;
    }
    else
    {
        uint _2797 = _2223 + 3u;
        uint _2801 = _2223 + 11u;
        float _2815 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2797].w)) * _716) * 0.949999988079071044921875);
        float _2816 = _2815 * _2815;
        float _2817 = cbLight._m0[_2797].x + _792;
        float _2818 = cbLight._m0[_2797].y + _793;
        float _2819 = cbLight._m0[_2797].z + _794;
        float _2823 = inversesqrt(dot(vec3(_2817, _2818, _2819), vec3(_2817, _2818, _2819)));
        float _2824 = _2823 * _2817;
        float _2825 = _2823 * _2818;
        float _2826 = _2823 * _2819;
        float _2827 = dot(vec3(_713, _714, _715), vec3(cbLight._m0[_2797].xyz));
        float _4760 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2830 = isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0));
        float _2831 = dot(vec3(_713, _714, _715), vec3(_2824, _2825, _2826));
        float _4771 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2834 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
        float _2835 = dot(vec3(cbLight._m0[_2797].xyz), vec3(_2824, _2825, _2826));
        float _4782 = isnan(0.0) ? _2835 : (isnan(_2835) ? 0.0 : max(_2835, 0.0));
        float _2839 = _2816 * _2816;
        float _2843 = ((_2834 * _2834) * (_2839 + (-1.0))) + 1.0;
        float _2852 = (exp2(log2(1.0 - (isnan(1.0) ? _4782 : (isnan(_4782) ? 1.0 : min(_4782, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2853 = 1.0 - _2816;
        float _2863 = (0.5 / (((_2499 * ((_2830 * _2853) + _2816)) + 9.9999999392252902907785028219223e-09) + (((_2499 * _2853) + _2816) * _2830))) * _2830;
        float _4793 = isnan(0.0) ? _2863 : (isnan(_2863) ? 0.0 : max(_2863, 0.0));
        float _2865 = (isnan(1.0) ? _4793 : (isnan(_4793) ? 1.0 : min(_4793, 1.0))) * (_2839 / ((_2843 * _2843) * 3.141590118408203125));
        float _2866 = isnan(1.0) ? _2239 : (isnan(_2239) ? 1.0 : min(_2239, 1.0));
        _2786 = (((_2852 * cbLight._m0[_2801].x) * _2865) * _2866) + _2680;
        _2788 = (((_2852 * cbLight._m0[_2801].y) * _2865) * _2866) + _2682;
        _2790 = (((_2852 * cbLight._m0[_2801].z) * _2865) * _2866) + _2684;
    }
    float _2932;
    float _2934;
    float _2936;
    float _2938;
    float _2940;
    float _2942;
    if (_2221.y == 0u)
    {
        uvec4 _2887 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2888 = _2887.x;
        uint _2899 = uint((float(_2887.y) * floor(float(uint(cbSceneParam._m0[85u].y * _801) / _2888))) + floor(float(uint(cbSceneParam._m0[85u].x * _800) / _2888)));
        float _2909 = (log2(_1997 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2910 = isnan(0.0) ? _2909 : (isnan(_2909) ? 0.0 : max(_2909, 0.0));
        uint _2913 = uint(isnan(14.0) ? _2910 : (isnan(_2910) ? 14.0 : min(_2910, 14.0)));
        uvec4 _2918 = texelFetch(g_lightClusterGridBuffer, int(((_2913 << 2u) + (_2899 << 6u)) >> 2u));
        uint _2919 = _2918.x;
        uint _2920 = _2887.z;
        float _2993;
        float _2995;
        float _2997;
        float _2999;
        float _3001;
        float _3003;
        if (((((1u << ((_2920 >> 4u) & 15u)) + 4294967295u) & _2919) == 0u) || ((_2920 & 240u) == 0u))
        {
            _2993 = 0.0;
            _2995 = 0.0;
            _2997 = 0.0;
            _2999 = 0.0;
            _3001 = 0.0;
            _3003 = 0.0;
        }
        else
        {
            float _2994;
            float _2996;
            float _2998;
            float _3000;
            float _3002;
            float _3004;
            float _3137 = 0.0;
            float _3138 = 0.0;
            float _3139 = 0.0;
            float _3140 = 0.0;
            float _3141 = 0.0;
            float _3142 = 0.0;
            uint _3143 = 0u;
            uint _3152;
            bool _3153;
            for (;;)
            {
                _3152 = texelFetch(g_lightClassification, int((((_2913 << 5u) + (_2899 << 9u)) + (_3143 << 2u)) >> 2u)).x;
                _3153 = _3152 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_3153)
                {
                    frontier_phi_66_pred = _3142;
                    frontier_phi_66_pred_1 = _3141;
                    frontier_phi_66_pred_2 = _3140;
                    frontier_phi_66_pred_3 = _3139;
                    frontier_phi_66_pred_4 = _3138;
                    frontier_phi_66_pred_5 = _3137;
                }
                else
                {
                    float _3261;
                    float _3262;
                    float _3263;
                    float _3264;
                    float _3265;
                    float _3266;
                    uint _3267;
                    _3261 = _3137;
                    _3262 = _3138;
                    _3263 = _3139;
                    _3264 = _3140;
                    _3265 = _3141;
                    _3266 = _3142;
                    _3267 = _3152;
                    float _3193;
                    float _3194;
                    float _3195;
                    float _3196;
                    float _3197;
                    float _3198;
                    for (;;)
                    {
                        uint _3271 = uint(findLSB(_3267)) + (_3143 << 5u);
                        uint _3268 = (_3267 + 4294967295u) & _3267;
                        uint _3273 = _3271 * 48u;
                        vec4 _3287 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3273)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3273 + 3u)).x));
                        uint _3293 = (_3271 * 48u) + 4u;
                        vec4 _3306 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3293)).x, texelFetch(g_PointLightRenderingBuffer, int(_3293 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3293 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3293 + 3u)).x));
                        uint _3312 = (_3271 * 48u) + 8u;
                        vec3 _3323 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3312)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3312 + 2u)).x));
                        float _3327 = _3287.x - _1995;
                        float _3328 = _3287.y - _1996;
                        float _3329 = _3287.z - _1997;
                        float _3330 = dot(vec3(_3327, _3328, _3329), vec3(_3327, _3328, _3329));
                        float _3333 = inversesqrt(_3330);
                        float _3334 = _3333 * _3327;
                        float _3335 = _3333 * _3328;
                        float _3336 = _3333 * _3329;
                        float _3337 = dot(vec3(_819, _822, _825), vec3(_3334, _3335, _3336));
                        float _3342 = 1.0 - (_3330 * _3287.w);
                        float _4819 = isnan(0.0) ? _3342 : (isnan(_3342) ? 0.0 : max(_3342, 0.0));
                        float _3343 = isnan(1.0) ? _4819 : (isnan(_4819) ? 1.0 : min(_4819, 1.0));
                        float _3344 = sqrt(_3330) * _3306.w;
                        float _3347 = 1.39999997615814208984375 / (_3344 + 1.39999997615814208984375);
                        float _3348 = _3347 * _3347;
                        float _3351 = ((1.0 - _3348) * _3337) + _3348;
                        float _3354 = _3344 * _3344;
                        float _3358 = ((isnan(0.0) ? _3351 : (isnan(_3351) ? 0.0 : max(_3351, 0.0))) * _3343) / ((_3354 * 0.699999988079071044921875) + 1.0);
                        float _3362 = (-0.0) - _1995;
                        float _3363 = (-0.0) - _1996;
                        float _3364 = (-0.0) - _1997;
                        float _3368 = inversesqrt(dot(vec3(_3362, _3363, _3364), vec3(_3362, _3363, _3364)));
                        float _3369 = _3368 * _3362;
                        float _3370 = _3368 * _3363;
                        float _3371 = _3368 * _3364;
                        float _3378 = exp2(log2(1.0 / ((_3354 * 3.5) + 5.0)) * 0.25);
                        float _3379 = 1.0 - _882;
                        float _3386 = sqrt(1.0 - ((1.0 - (_3379 * _3379)) * (1.0 - (_3378 * _3378))));
                        float _3387 = _3386 * _3386;
                        float _3388 = _3387 * _3387;
                        float _3389 = _3369 + _3334;
                        float _3390 = _3370 + _3335;
                        float _3391 = _3371 + _3336;
                        float _3395 = inversesqrt(dot(vec3(_3389, _3390, _3391), vec3(_3389, _3390, _3391)));
                        float _3399 = dot(vec3(_819, _822, _825), vec3(_3369, _3370, _3371));
                        float _4835 = isnan(0.0) ? _3399 : (isnan(_3399) ? 0.0 : max(_3399, 0.0));
                        float _3402 = isnan(1.0) ? _4835 : (isnan(_4835) ? 1.0 : min(_4835, 1.0));
                        float _3403 = dot(vec3(_819, _822, _825), vec3(_3395 * _3389, _3395 * _3390, _3395 * _3391));
                        float _4846 = isnan(0.0) ? _3403 : (isnan(_3403) ? 0.0 : max(_3403, 0.0));
                        float _3406 = isnan(1.0) ? _4846 : (isnan(_4846) ? 1.0 : min(_4846, 1.0));
                        float _3410 = ((_3406 * _3406) * (_3388 + (-1.0))) + 1.0;
                        float _3411 = _3347 * _3387;
                        float _3412 = _3411 * _3411;
                        float _3415 = ((1.0 - _3412) * _3337) + _3412;
                        float _4857 = isnan(0.0) ? _3415 : (isnan(_3415) ? 0.0 : max(_3415, 0.0));
                        float _3416 = isnan(1.0) ? _4857 : (isnan(_4857) ? 1.0 : min(_4857, 1.0));
                        float _3417 = 1.0 - _3387;
                        float _3427 = (0.5 / (((_3416 * ((_3402 * _3417) + _3387)) + 9.9999999392252902907785028219223e-09) + (((_3416 * _3417) + _3387) * _3402))) * _3416;
                        float _4868 = isnan(0.0) ? _3427 : (isnan(_3427) ? 0.0 : max(_3427, 0.0));
                        float _3438 = (((_3388 * 3.1415927410125732421875) * (isnan(1.0) ? _4868 : (isnan(_4868) ? 1.0 : min(_4868, 1.0)))) / ((_3410 * _3410) * ((_3354 * 2.1991131305694580078125) + 3.141590118408203125))) * _3343;
                        _3196 = (_3358 * _3306.x) + _3264;
                        _3197 = (_3358 * _3306.y) + _3265;
                        _3198 = (_3358 * _3306.z) + _3266;
                        _3193 = (_3438 * _3323.x) + _3261;
                        _3194 = (_3438 * _3323.y) + _3262;
                        _3195 = (_3438 * _3323.z) + _3263;
                        if (_3268 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3261 = _3193;
                            _3262 = _3194;
                            _3263 = _3195;
                            _3264 = _3196;
                            _3265 = _3197;
                            _3266 = _3198;
                            _3267 = _3268;
                        }
                    }
                    frontier_phi_66_pred = _3198;
                    frontier_phi_66_pred_1 = _3197;
                    frontier_phi_66_pred_2 = _3196;
                    frontier_phi_66_pred_3 = _3195;
                    frontier_phi_66_pred_4 = _3194;
                    frontier_phi_66_pred_5 = _3193;
                }
                _3004 = frontier_phi_66_pred;
                _3002 = frontier_phi_66_pred_1;
                _3000 = frontier_phi_66_pred_2;
                _2998 = frontier_phi_66_pred_3;
                _2996 = frontier_phi_66_pred_4;
                _2994 = frontier_phi_66_pred_5;
                uint _3144 = _3143 + 1u;
                if (_3144 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3137 = _2994;
                    _3138 = _2996;
                    _3139 = _2998;
                    _3140 = _3000;
                    _3141 = _3002;
                    _3142 = _3004;
                    _3143 = _3144;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2993 = _2994;
            _2995 = _2996;
            _2997 = _2998;
            _2999 = _3000;
            _3001 = _3002;
            _3003 = _3004;
        }
        uvec4 _3007 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3008 = _3007.z;
        uint _3010 = (_3008 >> 8u) & 15u;
        float _3105;
        float _3107;
        float _3109;
        float _3111;
        float _3113;
        float _3115;
        if (((4294967295u << _3010) & _2919) == 0u)
        {
            _3105 = _2993;
            _3107 = _2995;
            _3109 = _2997;
            _3111 = _2999;
            _3113 = _3001;
            _3115 = _3003;
        }
        else
        {
            float _3130 = inversesqrt(dot(vec3(_1995, _1996, _1997), vec3(_1995, _1996, _1997)));
            float _3131 = _3130 * _1995;
            float _3132 = _3130 * _1996;
            float _3133 = _3130 * _1997;
            float frontier_phi_60_61_ladder;
            float frontier_phi_60_61_ladder_1;
            float frontier_phi_60_61_ladder_2;
            float frontier_phi_60_61_ladder_3;
            float frontier_phi_60_61_ladder_4;
            float frontier_phi_60_61_ladder_5;
            if (_3010 < ((_3008 >> 12u) & 15u))
            {
                float _3106;
                float _3108;
                float _3110;
                float _3112;
                float _3114;
                float _3116;
                float _3244 = _2993;
                float _3245 = _2995;
                float _3246 = _2997;
                float _3247 = _2999;
                float _3248 = _3001;
                float _3249 = _3003;
                uint _3250 = _3010;
                uint _3259;
                bool _3260;
                for (;;)
                {
                    _3259 = texelFetch(g_lightClassification, int((((_2913 << 5u) + (_2899 << 9u)) + (_3250 << 2u)) >> 2u)).x;
                    _3260 = _3259 == 0u;
                    float frontier_phi_72_pred;
                    float frontier_phi_72_pred_1;
                    float frontier_phi_72_pred_2;
                    float frontier_phi_72_pred_3;
                    float frontier_phi_72_pred_4;
                    float frontier_phi_72_pred_5;
                    if (_3260)
                    {
                        frontier_phi_72_pred = _3249;
                        frontier_phi_72_pred_1 = _3248;
                        frontier_phi_72_pred_2 = _3247;
                        frontier_phi_72_pred_3 = _3246;
                        frontier_phi_72_pred_4 = _3245;
                        frontier_phi_72_pred_5 = _3244;
                    }
                    else
                    {
                        float _3443;
                        float _3444;
                        float _3445;
                        float _3446;
                        float _3447;
                        float _3448;
                        float _3736;
                        float _3737;
                        float _3738;
                        float _3739;
                        float _3740;
                        float _3741;
                        float _3456 = _3244;
                        float _3457 = _3245;
                        float _3458 = _3246;
                        float _3459 = _3247;
                        float _3460 = _3248;
                        float _3461 = _3249;
                        uint _3462 = _3259;
                        uint _3463;
                        vec4 _3488;
                        float _3489;
                        vec4 _3504;
                        vec3 _3516;
                        vec4 _3531;
                        vec4 _3546;
                        float _3592;
                        bool _3593;
                        for (;;)
                        {
                            uint _3473 = ((_3250 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3462));
                            _3463 = (_3462 + 4294967295u) & _3462;
                            uint _3475 = _3473 * 40u;
                            _3488 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3475)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3475 + 3u)).x));
                            _3489 = _3488.w;
                            uint _3491 = (_3473 * 40u) + 4u;
                            _3504 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3491)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3491 + 3u)).x));
                            uint _3506 = (_3473 * 40u) + 8u;
                            _3516 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3506)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3506 + 2u)).x));
                            uint _3518 = (_3473 * 40u) + 16u;
                            _3531 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3518)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3518 + 3u)).x));
                            uint _3533 = (_3473 * 40u) + 20u;
                            _3546 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3533)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3533 + 3u)).x));
                            uint _3548 = (_3473 * 40u) + 24u;
                            vec4 _3561 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3548)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3548 + 3u)).x));
                            uint _3567 = (_3473 * 40u) + 28u;
                            vec4 _3580 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3567)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3567 + 3u)).x));
                            _3592 = fma(_1997, _3580.z, fma(_1996, _3580.y, _3580.x * _1995)) + _3580.w;
                            _3593 = !((fma(_1997, _3561.z, fma(_1996, _3561.y, _3561.x * _1995)) + _3561.w) <= 0.0);
                            float frontier_phi_78_pred;
                            float frontier_phi_78_pred_1;
                            float frontier_phi_78_pred_2;
                            float frontier_phi_78_pred_3;
                            float frontier_phi_78_pred_4;
                            float frontier_phi_78_pred_5;
                            if (_3593)
                            {
                                float _3620 = _3488.x - _1995;
                                float _3621 = _3488.y - _1996;
                                float _3622 = _3488.z - _1997;
                                float _3623 = dot(vec3(_3620, _3621, _3622), vec3(_3620, _3621, _3622));
                                float _3626 = inversesqrt(_3623);
                                float _3627 = _3626 * _3620;
                                float _3628 = _3626 * _3621;
                                float _3629 = _3626 * _3622;
                                float _3633 = 1.0 - (_3623 / (_3489 * _3489));
                                float _4879 = isnan(0.0) ? _3633 : (isnan(_3633) ? 0.0 : max(_3633, 0.0));
                                float _3634 = isnan(1.0) ? _4879 : (isnan(_4879) ? 1.0 : min(_4879, 1.0));
                                float _3638 = sqrt(_3623) * _3504.w;
                                float _3640 = 1.39999997615814208984375 / (_3638 + 1.39999997615814208984375);
                                float _3641 = _3640 * _3640;
                                float _3644 = ((1.0 - _3641) * dot(vec3(_3627, _3628, _3629), vec3(_819, _822, _825))) + _3641;
                                float _3647 = _3638 * _3638;
                                float _3651 = (fma(_1997, _3531.z, fma(_1996, _3531.y, _3531.x * _1995)) + _3531.w) / _3592;
                                float _3652 = (fma(_1997, _3546.z, fma(_1996, _3546.y, _3546.x * _1995)) + _3546.w) / _3592;
                                float _3656 = 1.0 - dot(vec2(_3651, _3652), vec2(_3651, _3652));
                                float _4895 = isnan(0.0) ? _3656 : (isnan(_3656) ? 0.0 : max(_3656, 0.0));
                                float _3657 = isnan(1.0) ? _4895 : (isnan(_4895) ? 1.0 : min(_4895, 1.0));
                                float _3658 = _3657 * (((isnan(0.0) ? _3644 : (isnan(_3644) ? 0.0 : max(_3644, 0.0))) * _3634) / ((_3647 * 0.699999988079071044921875) + 1.0));
                                float _3670 = exp2(log2(1.0 / ((_3647 * 3.5) + 5.0)) * 0.25);
                                float _3671 = 1.0 - _882;
                                float _3678 = sqrt(1.0 - ((1.0 - (_3671 * _3671)) * (1.0 - (_3670 * _3670))));
                                float _3679 = _3678 * _3678;
                                float _3680 = _3679 * _3679;
                                float _3681 = _3627 - _3131;
                                float _3682 = _3628 - _3132;
                                float _3683 = _3629 - _3133;
                                float _3687 = inversesqrt(dot(vec3(_3681, _3682, _3683), vec3(_3681, _3682, _3683)));
                                float _3691 = dot(vec3(_819, _822, _825), vec3((-0.0) - _3131, (-0.0) - _3132, (-0.0) - _3133));
                                float _4906 = isnan(0.0) ? _3691 : (isnan(_3691) ? 0.0 : max(_3691, 0.0));
                                float _3694 = isnan(1.0) ? _4906 : (isnan(_4906) ? 1.0 : min(_4906, 1.0));
                                float _3695 = dot(vec3(_819, _822, _825), vec3(_3687 * _3681, _3687 * _3682, _3687 * _3683));
                                float _4917 = isnan(0.0) ? _3695 : (isnan(_3695) ? 0.0 : max(_3695, 0.0));
                                float _3698 = isnan(1.0) ? _4917 : (isnan(_4917) ? 1.0 : min(_4917, 1.0));
                                float _3702 = ((_3698 * _3698) * (_3680 + (-1.0))) + 1.0;
                                float _3703 = _3640 * _3679;
                                float _3704 = _3703 * _3703;
                                float _3710 = ((1.0 - _3704) * dot(vec3(_819, _822, _825), vec3(_3627, _3628, _3629))) + _3704;
                                float _4928 = isnan(0.0) ? _3710 : (isnan(_3710) ? 0.0 : max(_3710, 0.0));
                                float _3711 = isnan(1.0) ? _4928 : (isnan(_4928) ? 1.0 : min(_4928, 1.0));
                                float _3712 = 1.0 - _3679;
                                float _3722 = (0.5 / (((_3711 * ((_3694 * _3712) + _3679)) + 9.9999999392252902907785028219223e-09) + (((_3711 * _3712) + _3679) * _3694))) * _3711;
                                float _4939 = isnan(0.0) ? _3722 : (isnan(_3722) ? 0.0 : max(_3722, 0.0));
                                float _3732 = (_3657 * _3634) * (((_3680 * 3.1415927410125732421875) * (isnan(1.0) ? _4939 : (isnan(_4939) ? 1.0 : min(_4939, 1.0)))) / ((_3702 * _3702) * ((_3647 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_78_pred = _3658 * _3504.y;
                                frontier_phi_78_pred_1 = _3658 * _3504.x;
                                frontier_phi_78_pred_2 = _3732 * _3516.z;
                                frontier_phi_78_pred_3 = _3732 * _3516.y;
                                frontier_phi_78_pred_4 = _3732 * _3516.x;
                                frontier_phi_78_pred_5 = _3658 * _3504.z;
                            }
                            else
                            {
                                frontier_phi_78_pred = 0.0;
                                frontier_phi_78_pred_1 = 0.0;
                                frontier_phi_78_pred_2 = 0.0;
                                frontier_phi_78_pred_3 = 0.0;
                                frontier_phi_78_pred_4 = 0.0;
                                frontier_phi_78_pred_5 = 0.0;
                            }
                            _3740 = frontier_phi_78_pred;
                            _3739 = frontier_phi_78_pred_1;
                            _3738 = frontier_phi_78_pred_2;
                            _3737 = frontier_phi_78_pred_3;
                            _3736 = frontier_phi_78_pred_4;
                            _3741 = frontier_phi_78_pred_5;
                            _3446 = _3739 + _3459;
                            _3447 = _3740 + _3460;
                            _3448 = _3741 + _3461;
                            _3443 = _3736 + _3456;
                            _3444 = _3737 + _3457;
                            _3445 = _3738 + _3458;
                            if (_3463 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3456 = _3443;
                                _3457 = _3444;
                                _3458 = _3445;
                                _3459 = _3446;
                                _3460 = _3447;
                                _3461 = _3448;
                                _3462 = _3463;
                                continue;
                            }
                        }
                        frontier_phi_72_pred = _3448;
                        frontier_phi_72_pred_1 = _3447;
                        frontier_phi_72_pred_2 = _3446;
                        frontier_phi_72_pred_3 = _3445;
                        frontier_phi_72_pred_4 = _3444;
                        frontier_phi_72_pred_5 = _3443;
                    }
                    _3116 = frontier_phi_72_pred;
                    _3114 = frontier_phi_72_pred_1;
                    _3112 = frontier_phi_72_pred_2;
                    _3110 = frontier_phi_72_pred_3;
                    _3108 = frontier_phi_72_pred_4;
                    _3106 = frontier_phi_72_pred_5;
                    uint _3251 = _3250 + 1u;
                    if (_3251 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3244 = _3106;
                        _3245 = _3108;
                        _3246 = _3110;
                        _3247 = _3112;
                        _3248 = _3114;
                        _3249 = _3116;
                        _3250 = _3251;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_60_61_ladder = _3116;
                frontier_phi_60_61_ladder_1 = _3114;
                frontier_phi_60_61_ladder_2 = _3110;
                frontier_phi_60_61_ladder_3 = _3108;
                frontier_phi_60_61_ladder_4 = _3106;
                frontier_phi_60_61_ladder_5 = _3112;
            }
            else
            {
                frontier_phi_60_61_ladder = _3003;
                frontier_phi_60_61_ladder_1 = _3001;
                frontier_phi_60_61_ladder_2 = _2997;
                frontier_phi_60_61_ladder_3 = _2995;
                frontier_phi_60_61_ladder_4 = _2993;
                frontier_phi_60_61_ladder_5 = _2999;
            }
            _3105 = frontier_phi_60_61_ladder_4;
            _3107 = frontier_phi_60_61_ladder_3;
            _3109 = frontier_phi_60_61_ladder_2;
            _3111 = frontier_phi_60_61_ladder_5;
            _3113 = frontier_phi_60_61_ladder_1;
            _3115 = frontier_phi_60_61_ladder;
        }
        float _3120 = isnan(1.0) ? _863 : (isnan(_863) ? 1.0 : min(_863, 1.0));
        _2932 = (_3120 * _3111) + _2463;
        _2934 = (_3120 * _3113) + _2465;
        _2936 = (_3120 * _3115) + _2467;
        _2938 = ((_3105 * 0.039999999105930328369140625) * _3120) + _2786;
        _2940 = ((_3107 * 0.039999999105930328369140625) * _3120) + _2788;
        _2942 = ((_3109 * 0.039999999105930328369140625) * _3120) + _2790;
    }
    else
    {
        _2932 = _2463;
        _2934 = _2465;
        _2936 = _2467;
        _2938 = _2786;
        _2940 = _2788;
        _2942 = _2790;
    }
    float _4955 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
    float _4966 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
    float _4977 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
    uint _2962 = _273 + 6u;
    vec4 _2979 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1902, _1903, (log2((isnan(cbSceneParam._m0[77u].w) ? _734 : (isnan(_734) ? cbSceneParam._m0[77u].w : min(_734, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2981 = _2979.x;
    float _2982 = _2979.y;
    float _2983 = _2979.z;
    float _2984 = _2979.w;
    float _3056;
    float _3058;
    float _3060;
    float _3062;
    if (_734 > cbSceneParam._m0[78u].w)
    {
        float _3018 = isnan(_734) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _734 : min(cbSceneParam._m0[80u].w, _734));
        float _3019 = _3018 / _734;
        float _3030 = _3019 * _785;
        float _3031 = _786 * _3019;
        float _3032 = (-0.0) - _3031;
        float _3034 = _3019 * _787;
        float _3036 = (cbSceneParam._m0[77u].w * _3032) / _3018;
        float _3037 = _3036 + cbSceneParam._m0[79u].w;
        float _3038 = cbSceneParam._m0[79u].w - _3031;
        float _3044 = sqrt(((_3030 * _3030) + (_3031 * _3031)) + (_3034 * _3034));
        float _3047 = (1.0 - (cbSceneParam._m0[77u].w / _3018)) * _3044;
        float _3052 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3054 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3206;
        if (abs((_3032 - _3036) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3206 = ((((_3037 > 0.0) ? exp2(_3052 * _3037) : (2.0 - exp2(_3054 * _3037))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3047;
        }
        else
        {
            float _3166 = 1.0 / cbSceneParam._m0[80u].x;
            float _3167 = isnan(_3038) ? _3037 : (isnan(_3037) ? _3038 : max(_3037, _3038));
            float _3168 = isnan(_3038) ? _3037 : (isnan(_3037) ? _3038 : min(_3037, _3038));
            float _3177 = isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : min(_3167, 0.0));
            float _3178 = isnan(0.0) ? _3168 : (isnan(_3168) ? 0.0 : min(_3168, 0.0));
            _3206 = ((abs(_3044 / _3032) * cbSceneParam._m0[80u].y) * ((((_3177 - _3178) * 2.0) - ((exp2(_3052 * (isnan(0.0) ? _3167 : (isnan(_3167) ? 0.0 : max(_3167, 0.0)))) - exp2(_3052 * (isnan(0.0) ? _3168 : (isnan(_3168) ? 0.0 : max(_3168, 0.0))))) * _3166)) - ((exp2(_3054 * _3177) - exp2(_3054 * _3178)) * _3166))) + (_3047 * cbSceneParam._m0[80u].z);
        }
        vec4 _3208 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1902, _1903, 1.0), 0.0);
        float _3217 = exp2((_3206 * (-1.44269502162933349609375)) * (1.0 - _3208.w));
        float _3218 = log2(_3217);
        float _3234 = log2(_2984);
        _3056 = (exp2(_3234 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3218 * cbSceneParam._m0[78u].x)) * _3208.x) / cbSceneParam._m0[78u].x)) + _2981;
        _3058 = (exp2(_3234 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3218 * cbSceneParam._m0[78u].y)) * _3208.y) / cbSceneParam._m0[78u].y)) + _2982;
        _3060 = (exp2(_3234 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3218 * cbSceneParam._m0[78u].z)) * _3208.z) / cbSceneParam._m0[78u].z)) + _2983;
        _3062 = _3217 * _2984;
    }
    else
    {
        _3056 = _2981;
        _3058 = _2982;
        _3060 = _2983;
        _3062 = _2984;
    }
    float _3073 = roundEven(cbMatDynParam._m0[0u].y);
    bool _3074 = _3073 == 3.0;
    float _3075 = log2(_3062);
    float _3082 = exp2(_3075 * cbSceneParam._m0[78u].x) * (((isnan(1.0) ? _4955 : (isnan(_4955) ? 1.0 : min(_4955, 1.0))) * (_2932 + ((isnan(0.0) ? _1591 : (isnan(_1591) ? 0.0 : max(_1591, 0.0))) * _863))) + (((((_1879 * (_1927.x / _1933)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1885 : (isnan(_1885) ? 0.0 : max(_1885, 0.0))) * _1670) * _1948)) + _2938) * cbPerFrame._m0[3u].x));
    float _3083 = exp2(_3075 * cbSceneParam._m0[78u].y) * (((isnan(1.0) ? _4966 : (isnan(_4966) ? 1.0 : min(_4966, 1.0))) * (_2934 + ((isnan(0.0) ? _1594 : (isnan(_1594) ? 0.0 : max(_1594, 0.0))) * _863))) + (((((_1879 * (_1927.y / _1933)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0))) * _1670) * _1948)) + _2940) * cbPerFrame._m0[3u].x));
    float _3084 = exp2(_3075 * cbSceneParam._m0[78u].z) * (((isnan(1.0) ? _4977 : (isnan(_4977) ? 1.0 : min(_4977, 1.0))) * (_2936 + ((isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0))) * _863))) + (((((_1879 * (_1927.z / _1933)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1891 : (isnan(_1891) ? 0.0 : max(_1891, 0.0))) * _1670) * _1948)) + _2942) * cbPerFrame._m0[3u].x));
    float _3093 = (_3073 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _3093 * (_3074 ? _3082 : (_3082 + (cbSceneParam._m0[72u].w * _3056)));
    SV_Target.y = _3093 * (_3074 ? _3083 : (_3083 + (cbSceneParam._m0[72u].w * _3058)));
    SV_Target.z = _3093 * (_3074 ? _3084 : (_3084 + (cbSceneParam._m0[72u].w * _3060)));
    SV_Target.w = cbInstanceData._m0[_2962].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2962].w;
}


