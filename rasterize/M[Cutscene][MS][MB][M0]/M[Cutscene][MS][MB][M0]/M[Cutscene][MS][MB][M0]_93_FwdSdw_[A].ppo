#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[33];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_0;
layout(set = 0, binding = 11) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_19;
layout(set = 0, binding = 15) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_24;
layout(set = 0, binding = 16) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_26;
layout(set = 0, binding = 17) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_27;
layout(set = 0, binding = 19) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_29;
layout(set = 0, binding = 20) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_12;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_13;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_14;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_15;
layout(set = 0, binding = 8) uniform texture2D M_Cutscene_MS_MB_M0_snp_0_Texture2D_16;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TANGENT_2;
layout(location = 5) in vec4 TEXCOORD;
layout(location = 6) in vec4 TEXCOORD_5;
layout(location = 7) in vec4 TEXCOORD_8;
layout(location = 8) in vec4 TEXCOORD_11;
layout(location = 9) in vec4 TEXCOORD_14;
layout(location = 10) in float TEXCOORD_20;
layout(location = 10, component = 1) in float TEXCOORD_21;
layout(location = 10, component = 2) in float TEXCOORD_22;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1343;
float _4037;
float _4038;
float _4039;
float _4040;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _233 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _234 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _235 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _241 = inversesqrt(dot(vec3(_233, _234, _235), vec3(_233, _234, _235)));
    float _248 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _255 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    uint _261 = uint(roundEven(NORMAL.w)) * 13u;
    uint _266 = _261 + 1u;
    uint _270 = _261 + 2u;
    float _279 = sqrt(((cbInstanceData._m0[_266].x * cbInstanceData._m0[_266].x) + (cbInstanceData._m0[_261].x * cbInstanceData._m0[_261].x)) + (cbInstanceData._m0[_270].x * cbInstanceData._m0[_270].x));
    float _280 = _279 * TEXCOORD.z;
    float _281 = _279 * TEXCOORD.w;
    vec4 _294 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _297 = _294.w;
    vec4 _316 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_15, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * TEXCOORD.x) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * TEXCOORD.y) + cbTextureTilingScale._m0[7u].w));
    float _321 = _316.x * cbMtdParam._m0[11u].x;
    float _322 = _316.y * cbMtdParam._m0[11u].y;
    float _323 = _316.z * cbMtdParam._m0[11u].z;
    vec4 _342 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_13, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[5u].x * _280) + cbTextureTilingScale._m0[5u].z, (cbTextureTilingScale._m0[5u].y * _281) + cbTextureTilingScale._m0[5u].w));
    vec4 _377 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_26, SS_WrapLinear), vec2(((cbMtdParam._m0[28u].y * TEXCOORD.z) * cbTextureTilingScale._m0[16u].x) + cbTextureTilingScale._m0[16u].z, ((cbMtdParam._m0[28u].z * TEXCOORD.w) * cbTextureTilingScale._m0[16u].y) + cbTextureTilingScale._m0[16u].w));
    float _379 = _377.x;
    float _392 = dot(vec4(_379, _377.yzw), vec4(cbMtdParam._m0[30u].w, cbMtdParam._m0[31u].xy, 0.0));
    float _409 = ((cbMtdParam._m0[19u].y * (-1.2000000476837158203125)) * (((1.0 - TEXCOORD_5.x) * 2.0) - ((((_379 - _392) * cbMtdParam._m0[24u].x) + _392) * cbMtdParam._m0[23u].x))) + 1.0;
    float _4049 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _410 = isnan(1.0) ? _4049 : (isnan(_4049) ? 1.0 : min(_4049, 1.0));
    float _417 = (_410 * ((_342.x * cbMtdParam._m0[12u].x) - _321)) + _321;
    float _418 = (_410 * ((_342.y * cbMtdParam._m0[12u].y) - _322)) + _322;
    float _419 = (_410 * ((_342.z * cbMtdParam._m0[12u].z) - _323)) + _323;
    vec4 _437 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[20u].x * _280) + cbTextureTilingScale._m0[20u].z, (cbTextureTilingScale._m0[20u].y * _281) + cbTextureTilingScale._m0[20u].w));
    vec4 _462 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_14, SS_BumpMap), vec2((cbTextureTilingScale._m0[6u].x * TEXCOORD.x) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * TEXCOORD.y) + cbTextureTilingScale._m0[6u].w));
    float _464 = _462.x;
    float _465 = _462.y;
    float _470 = cbMtdParam._m0[25u].w * _462.z;
    float _4060 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _471 = isnan(1.0) ? _4060 : (isnan(_4060) ? 1.0 : min(_4060, 1.0));
    vec4 _484 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_12, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * _280) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * _281) + cbTextureTilingScale._m0[4u].w));
    float _492 = cbMtdParam._m0[26u].x * _484.z;
    float _4071 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _502 = (((isnan(1.0) ? _4071 : (isnan(_4071) ? 1.0 : min(_4071, 1.0))) - _471) * _410) + _471;
    float _505 = ((((_484.x - _464) * _410) + _464) * 2.0) + (-1.0);
    float _506 = ((((_484.y - _465) * _410) + _465) * 2.0) + (-1.0);
    float _507 = dot(vec2(_505, _506), vec2(_505, _506));
    float _4082 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _512 = sqrt(1.0 - (isnan(1.0) ? _4082 : (isnan(_4082) ? 1.0 : min(_4082, 1.0))));
    vec4 _529 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_16, SS_BumpMap), vec2((cbTextureTilingScale._m0[8u].x * TEXCOORD.x) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * TEXCOORD.y) + cbTextureTilingScale._m0[8u].w));
    float _536 = cbMtdParam._m0[25u].z * _529.z;
    float _4093 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    vec4 _557 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_19, SS_WrapLinear), vec2((cbTextureTilingScale._m0[11u].x * _280) + cbTextureTilingScale._m0[11u].z, (cbTextureTilingScale._m0[11u].y * _281) + cbTextureTilingScale._m0[11u].w));
    float _559 = _557.x;
    float _560 = 1.0 - _559;
    float _566 = isnan(-1.0) ? cbMtdParam._m0[24u].y : (isnan(cbMtdParam._m0[24u].y) ? (-1.0) : max(cbMtdParam._m0[24u].y, -1.0));
    float _569 = ((isnan(0.0) ? _566 : (isnan(_566) ? 0.0 : min(_566, 0.0))) * TEXCOORD_8.x) + TEXCOORD_8.w;
    float _578 = (_569 - ((((((_559 - _560) * cbMtdParam._m0[24u].z) + _560) + 0.00999999977648258209228515625) * cbMtdParam._m0[21u].z) * (1.0 - _569))) * (cbMtdParam._m0[21u].w + 1.0);
    float _4114 = isnan(0.0) ? _578 : (isnan(_578) ? 0.0 : max(_578, 0.0));
    float _579 = isnan(1.0) ? _4114 : (isnan(_4114) ? 1.0 : min(_4114, 1.0));
    float _586 = (_579 * (cbMtdParam._m0[17u].x - _417)) + _417;
    float _587 = (_579 * (cbMtdParam._m0[17u].y - _418)) + _418;
    float _588 = (_579 * (cbMtdParam._m0[17u].z - _419)) + _419;
    vec4 _600 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_29, SS_WrapLinear), vec2((cbTextureTilingScale._m0[19u].x * _280) + cbTextureTilingScale._m0[19u].z, (cbTextureTilingScale._m0[19u].y * _281) + cbTextureTilingScale._m0[19u].w));
    float _602 = _600.x;
    float _603 = 1.0 - _602;
    float _630 = (TEXCOORD_8.x - ((cbMtdParam._m0[22u].w * (1.0 - TEXCOORD_8.x)) * ((((_602 - _603) * cbMtdParam._m0[24u].w) + _603) + 0.00999999977648258209228515625))) * (cbMtdParam._m0[23u].z + 1.0);
    float _4125 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _631 = isnan(1.0) ? _4125 : (isnan(_4125) ? 1.0 : min(_4125, 1.0));
    float _639 = ((((cbMtdParam._m0[10u].x - _586) * TEXCOORD_8.x) * cbMtdParam._m0[23u].w) * _631) + _586;
    float _640 = ((((cbMtdParam._m0[10u].y - _587) * TEXCOORD_8.y) * cbMtdParam._m0[23u].w) * _631) + _587;
    float _641 = (((cbMtdParam._m0[23u].w * TEXCOORD_8.z) * (cbMtdParam._m0[10u].z - _588)) * _631) + _588;
    float _646 = (((_437.z - _502) * TEXCOORD_11.x) * cbMtdParam._m0[20u].y) + _502;
    float _650 = (((isnan(1.0) ? _4093 : (isnan(_4093) ? 1.0 : min(_4093, 1.0))) - _646) * cbMtdParam._m0[19u].w) + _646;
    vec4 _664 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_24, SS_BumpMap), vec2((cbTextureTilingScale._m0[15u].x * _280) + cbTextureTilingScale._m0[15u].z, (cbTextureTilingScale._m0[15u].y * _281) + cbTextureTilingScale._m0[15u].w));
    float _671 = (_664.x * 2.0) + (-1.0);
    float _672 = (_664.y * 2.0) + (-1.0);
    float _673 = dot(vec2(_671, _672), vec2(_671, _672));
    float _4136 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
    float _681 = (_579 * (_664.z - _650)) + _650;
    float _684 = ((cbMtdParam._m0[23u].y - _681) * _631) + _681;
    float _688 = ((1.0 - _684) * cbMtdParam._m0[26u].y) + _684;
    float _4147 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
    float _689 = isnan(1.0) ? _4147 : (isnan(_4147) ? 1.0 : min(_4147, 1.0));
    vec4 _711 = texture(sampler2D(M_Cutscene_MS_MB_M0_snp_0_Texture2D_27, SS_BumpMap), vec2((((cbMtdParam._m0[28u].w * cbPerFrame._m0[22u].x) + _280) * cbTextureTilingScale._m0[17u].x) + cbTextureTilingScale._m0[17u].z, (((cbMtdParam._m0[29u].x * cbPerFrame._m0[22u].x) + _281) * cbTextureTilingScale._m0[17u].y) + cbTextureTilingScale._m0[17u].w));
    float _717 = (_711.x * 2.0) + (-1.0);
    float _718 = (_711.y * 2.0) + (-1.0);
    float _719 = dot(vec2(_717, _718), vec2(_717, _718));
    float _4158 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0));
    float _733 = (_505 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.x) * ((_437.x * 2.0) + (-1.0)))) + (((_529.x * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _734 = (_506 + ((cbMtdParam._m0[20u].x * TEXCOORD_11.y) * ((_437.y * 2.0) + (-1.0)))) + (((_529.y * 2.0) + (-1.0)) * cbMtdParam._m0[27u].x);
    float _746 = (((_671 - _733) + (cbMtdParam._m0[21u].x * _733)) * _579) + _733;
    float _747 = (((_672 - _734) + (cbMtdParam._m0[21u].x * _734)) * _579) + _734;
    float _748 = (_579 * (sqrt(1.0 - (isnan(1.0) ? _4136 : (isnan(_4136) ? 1.0 : min(_4136, 1.0)))) - _512)) + _512;
    float _759 = (((_717 - _746) + (_746 * cbMtdParam._m0[22u].z)) * _631) + _746;
    float _760 = (((_718 - _747) + (_747 * cbMtdParam._m0[22u].z)) * _631) + _747;
    float _761 = ((sqrt(1.0 - (isnan(1.0) ? _4158 : (isnan(_4158) ? 1.0 : min(_4158, 1.0)))) - _748) * _631) + _748;
    float _763 = cbMtdParam._m0[22u].x + _529.w;
    float _768 = fma(_761, _248 * NORMAL.x, fma(_760, _255 * TANGENT.x, (_241 * _233) * _759));
    float _771 = fma(_761, _248 * NORMAL.y, fma(_760, _255 * TANGENT.y, (_241 * _234) * _759));
    float _774 = fma(_761, _248 * NORMAL.z, fma(_760, _255 * TANGENT.z, (_241 * _235) * _759));
    float _778 = inversesqrt(dot(vec3(_768, _771, _774), vec3(_768, _771, _774)));
    float _779 = _778 * _768;
    float _780 = _778 * _771;
    float _781 = _778 * _774;
    float _4169 = isnan(0.0) ? _689 : (isnan(_689) ? 0.0 : max(_689, 0.0));
    float _782 = isnan(1.0) ? _4169 : (isnan(_4169) ? 1.0 : min(_4169, 1.0));
    float _4180 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
    float _4191 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
    float _4202 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
    float _4213 = isnan(0.0) ? _641 : (isnan(_641) ? 0.0 : max(_641, 0.0));
    float _800 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _841 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _851 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _841);
    float _852 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _841);
    float _853 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _841);
    float _857 = inversesqrt(dot(vec3(_851, _852, _853), vec3(_851, _852, _853)));
    float _858 = _851 * _857;
    float _859 = _852 * _857;
    float _860 = _853 * _857;
    vec4 _865 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _867 = _865.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _1024 = sqrt(((_851 * _851) + (_852 * _852)) + (_853 * _853));
        float _1030 = (cbMatDynParam._m0[5u].x * _1024) + cbMatDynParam._m0[5u].y;
        float _4224 = isnan(0.0) ? _1030 : (isnan(_1030) ? 0.0 : max(_1030, 0.0));
        float _1031 = isnan(1.0) ? _4224 : (isnan(_4224) ? 1.0 : min(_4224, 1.0));
        float _1035 = (cbMatDynParam._m0[5u].z * _1024) + cbMatDynParam._m0[5u].w;
        float _4235 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _4235 : (isnan(_4235) ? 1.0 : min(_4235, 1.0))) - _1031)) + _1031) < ((_867 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _878 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _879 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _897 = fma(_781, cbSceneParam._m0[5u].z, fma(_780, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _779));
    float _900 = fma(_781, cbSceneParam._m0[6u].z, fma(_780, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _779));
    float _903 = fma(_781, cbSceneParam._m0[7u].z, fma(_780, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _779));
    uint _916 = _261 + 9u;
    uint _917 = _916 + uint(cbMatDynParam._m0[0u].w);
    float _923 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _4191 : (isnan(_4191) ? 1.0 : min(_4191, 1.0)))) * cbInstanceData._m0[_917].x;
    float _924 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _4202 : (isnan(_4202) ? 1.0 : min(_4202, 1.0)))) * cbInstanceData._m0[_917].y;
    float _925 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _4213 : (isnan(_4213) ? 1.0 : min(_4213, 1.0)))) * cbInstanceData._m0[_917].z;
    float _4246 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
    float _926 = isnan(1.0) ? _4246 : (isnan(_4246) ? 1.0 : min(_4246, 1.0));
    float _4257 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
    float _927 = isnan(1.0) ? _4257 : (isnan(_4257) ? 1.0 : min(_4257, 1.0));
    float _4268 = isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0));
    float _928 = isnan(1.0) ? _4268 : (isnan(_4268) ? 1.0 : min(_4268, 1.0));
    vec4 _937 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _878, cbSceneParam._m0[86u].y * _879));
    float _941 = ((isnan(1.0) ? _4180 : (isnan(_4180) ? 1.0 : min(_4180, 1.0))) * TEXCOORD_5.w) * _937.x;
    float _942 = dot(vec3(_779, _780, _781), vec3(_858, _859, _860));
    float _945 = _942 * 2.0;
    float _949 = (_945 * _779) - _858;
    float _950 = (_945 * _780) - _859;
    float _951 = (_945 * _781) - _860;
    float _958 = abs(dot(vec3(_858, _859, _860), vec3(_779, _780, _781)));
    float _4279 = isnan(0.0) ? _958 : (isnan(_958) ? 0.0 : max(_958, 0.0));
    float _960 = sqrt(_782);
    float _973 = exp2((_960 * 5.0) * log2(1.0 - ((isnan(1.0) ? _4279 : (isnan(_4279) ? 1.0 : min(_4279, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_960 * 3.0));
    float _1005 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1009 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1013 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1342;
    float _1344;
    float _1345;
    float _1346;
    float _1347;
    float _1348;
    float _1349;
    float _1350;
    float _1351;
    float _1352;
    float _1353;
    float _1354;
    float _1355;
    float _1356;
    float _1357;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1067 = fma(_1013, cbModelParam._m0[26u].z, fma(_1009, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1005));
        float _1071 = fma(_1013, cbModelParam._m0[27u].z, fma(_1009, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1005));
        float _1075 = fma(_1013, cbModelParam._m0[28u].z, fma(_1009, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1005));
        float _1100 = _1005 + _779;
        float _1101 = _1009 + _780;
        float _1102 = _1013 + _781;
        float _1112 = fma(_1102, cbModelParam._m0[26u].z, fma(_1101, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1100)) - _1067;
        float _1113 = fma(_1102, cbModelParam._m0[27u].z, fma(_1101, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1100)) - _1071;
        float _1114 = fma(_1102, cbModelParam._m0[28u].z, fma(_1101, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1100)) - _1075;
        float _1118 = inversesqrt(dot(vec3(_1112, _1113, _1114), vec3(_1112, _1113, _1114)));
        float _1131 = ((_1118 * _1112) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1067 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1132 = ((_1118 * _1113) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1071 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1133 = ((_1118 * _1114) / cbModelParam._m0[34u].z) + ((((((_1075 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1136 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1131, _1132, _1133), 0.0);
        vec4 _1143 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1131, _1132, _1133), 0.0);
        vec4 _1150 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1131, _1132, _1133), 0.0);
        vec4 _1157 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1131, _1132, _1133), 0.0);
        float _1170 = exp2((_1136.w + (-0.5)) * 20.0) * 2.0;
        float _1171 = _1170 * (_1136.x + (-0.5));
        float _1172 = _1170 * (_1136.y + (-0.5));
        float _1173 = _1170 * (_1136.z + (-0.5));
        float _1180 = exp2((_1143.w + (-0.5)) * 20.0) * 2.0;
        float _1181 = _1180 * (_1143.x + (-0.5));
        float _1182 = _1180 * (_1143.y + (-0.5));
        float _1183 = _1180 * (_1143.z + (-0.5));
        float _1190 = exp2((_1150.w + (-0.5)) * 20.0) * 2.0;
        float _1191 = _1190 * (_1150.x + (-0.5));
        float _1192 = _1190 * (_1150.y + (-0.5));
        float _1193 = _1190 * (_1150.z + (-0.5));
        float _1200 = exp2((_1157.w + (-0.5)) * 20.0) * 2.0;
        float _1201 = _1200 * (_1157.x + (-0.5));
        float _1202 = _1200 * (_1157.y + (-0.5));
        float _1203 = _1200 * (_1157.z + (-0.5));
        float _1204 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1205 = isnan(0.0) ? _1202 : (isnan(_1202) ? 0.0 : max(_1202, 0.0));
        float _1206 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1207 = _1171 * 0.5;
        float _1208 = _1181 * 0.5;
        float _1209 = _1191 * 0.5;
        float _1210 = dot(vec3(_1207, _1208, _1209), vec3(_1207, _1208, _1209));
        float _1215 = (_1210 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1210);
        float _1224 = (dot(vec3(_779, _780, _781), vec3(_1215 * _1207, _1215 * _1208, _1215 * _1209)) + 1.0) * 0.5;
        float _4305 = isnan(0.0) ? _1224 : (isnan(_1224) ? 0.0 : max(_1224, 0.0));
        float _1234 = sqrt(((_1208 * _1208) + (_1207 * _1207)) + (_1209 * _1209)) / (_1204 + 9.9999997473787516355514526367188e-06);
        float _4316 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1235 = isnan(1.0) ? _4316 : (isnan(_4316) ? 1.0 : min(_4316, 1.0));
        float _1236 = _1235 * 2.0;
        float _1240 = (1.0 - _1235) / (_1235 + 1.0);
        float _4327 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
        float _1241 = isnan(1.0) ? _4327 : (isnan(_4327) ? 1.0 : min(_4327, 1.0));
        float _1250 = ((((1.0 - _1241) * (_1236 + 2.0)) * exp2(log2(isnan(1.0) ? _4305 : (isnan(_4305) ? 1.0 : min(_4305, 1.0))) * (_1236 + 1.0))) + _1241) * _1204;
        float _1251 = _1172 * 0.5;
        float _1252 = _1182 * 0.5;
        float _1253 = _1192 * 0.5;
        float _1254 = dot(vec3(_1251, _1252, _1253), vec3(_1251, _1252, _1253));
        float _1259 = (_1254 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1254);
        float _1267 = (dot(vec3(_779, _780, _781), vec3(_1259 * _1251, _1259 * _1252, _1259 * _1253)) + 1.0) * 0.5;
        float _4338 = isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0));
        float _1276 = sqrt(((_1252 * _1252) + (_1251 * _1251)) + (_1253 * _1253)) / (_1205 + 9.9999997473787516355514526367188e-06);
        float _4349 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1277 = isnan(1.0) ? _4349 : (isnan(_4349) ? 1.0 : min(_4349, 1.0));
        float _1278 = _1277 * 2.0;
        float _1282 = (1.0 - _1277) / (_1277 + 1.0);
        float _4360 = isnan(0.0) ? _1282 : (isnan(_1282) ? 0.0 : max(_1282, 0.0));
        float _1283 = isnan(1.0) ? _4360 : (isnan(_4360) ? 1.0 : min(_4360, 1.0));
        float _1292 = ((((1.0 - _1283) * (_1278 + 2.0)) * exp2(log2(isnan(1.0) ? _4338 : (isnan(_4338) ? 1.0 : min(_4338, 1.0))) * (_1278 + 1.0))) + _1283) * _1205;
        float _1293 = _1173 * 0.5;
        float _1294 = _1183 * 0.5;
        float _1295 = _1193 * 0.5;
        float _1296 = dot(vec3(_1293, _1294, _1295), vec3(_1293, _1294, _1295));
        float _1301 = (_1296 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1296);
        float _1309 = (dot(vec3(_779, _780, _781), vec3(_1301 * _1293, _1301 * _1294, _1301 * _1295)) + 1.0) * 0.5;
        float _4371 = isnan(0.0) ? _1309 : (isnan(_1309) ? 0.0 : max(_1309, 0.0));
        float _1318 = sqrt(((_1294 * _1294) + (_1293 * _1293)) + (_1295 * _1295)) / (_1206 + 9.9999997473787516355514526367188e-06);
        float _4382 = isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0));
        float _1319 = isnan(1.0) ? _4382 : (isnan(_4382) ? 1.0 : min(_4382, 1.0));
        float _1320 = _1319 * 2.0;
        float _1324 = (1.0 - _1319) / (_1319 + 1.0);
        float _4393 = isnan(0.0) ? _1324 : (isnan(_1324) ? 0.0 : max(_1324, 0.0));
        float _1325 = isnan(1.0) ? _4393 : (isnan(_4393) ? 1.0 : min(_4393, 1.0));
        float _1334 = ((((1.0 - _1325) * (_1320 + 2.0)) * exp2(log2(isnan(1.0) ? _4371 : (isnan(_4371) ? 1.0 : min(_4371, 1.0))) * (_1320 + 1.0))) + _1325) * _1206;
        _1342 = _1173;
        _1344 = _1172;
        _1345 = _1171;
        _1346 = _1183;
        _1347 = _1182;
        _1348 = _1181;
        _1349 = _1193;
        _1350 = _1192;
        _1351 = _1191;
        _1352 = _1206;
        _1353 = _1205;
        _1354 = _1204;
        _1355 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1250 : (isnan(_1250) ? 0.0 : max(_1250, 0.0)));
        _1356 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1292 : (isnan(_1292) ? 0.0 : max(_1292, 0.0)));
        _1357 = cbModelParam._m0[36u].z * (isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0)));
    }
    else
    {
        _1342 = _1343;
        _1344 = _1343;
        _1345 = _1343;
        _1346 = _1343;
        _1347 = _1343;
        _1348 = _1343;
        _1349 = _1343;
        _1350 = _1343;
        _1351 = _1343;
        _1352 = _1343;
        _1353 = _1343;
        _1354 = _1343;
        _1355 = 0.0;
        _1356 = 0.0;
        _1357 = 0.0;
    }
    float _1653;
    float _1654;
    float _1655;
    float _1656;
    float _1657;
    float _1658;
    float _1659;
    float _1660;
    float _1661;
    float _1662;
    float _1663;
    float _1664;
    float _1665;
    float _1666;
    float _1667;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1384 = fma(_1013, cbModelParam._m0[30u].z, fma(_1009, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1005));
        float _1388 = fma(_1013, cbModelParam._m0[31u].z, fma(_1009, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1005));
        float _1392 = fma(_1013, cbModelParam._m0[32u].z, fma(_1009, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1005));
        float _1415 = _1005 + _779;
        float _1416 = _1009 + _780;
        float _1417 = _1013 + _781;
        float _1427 = fma(_1417, cbModelParam._m0[30u].z, fma(_1416, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1415)) - _1384;
        float _1428 = fma(_1417, cbModelParam._m0[31u].z, fma(_1416, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1415)) - _1388;
        float _1429 = fma(_1417, cbModelParam._m0[32u].z, fma(_1416, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1415)) - _1392;
        float _1433 = inversesqrt(dot(vec3(_1427, _1428, _1429), vec3(_1427, _1428, _1429)));
        float _1446 = ((_1433 * _1427) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1384 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1447 = ((_1433 * _1428) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1388 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1448 = ((_1433 * _1429) / cbModelParam._m0[35u].z) + ((((((_1392 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1450 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1446, _1447, _1448), 0.0);
        vec4 _1457 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1446, _1447, _1448), 0.0);
        vec4 _1464 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1446, _1447, _1448), 0.0);
        vec4 _1471 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1446, _1447, _1448), 0.0);
        float _1483 = exp2((_1450.w + (-0.5)) * 20.0) * 2.0;
        float _1484 = _1483 * (_1450.x + (-0.5));
        float _1485 = _1483 * (_1450.y + (-0.5));
        float _1486 = _1483 * (_1450.z + (-0.5));
        float _1493 = exp2((_1457.w + (-0.5)) * 20.0) * 2.0;
        float _1494 = _1493 * (_1457.x + (-0.5));
        float _1495 = _1493 * (_1457.y + (-0.5));
        float _1496 = _1493 * (_1457.z + (-0.5));
        float _1503 = exp2((_1464.w + (-0.5)) * 20.0) * 2.0;
        float _1504 = _1503 * (_1464.x + (-0.5));
        float _1505 = _1503 * (_1464.y + (-0.5));
        float _1506 = _1503 * (_1464.z + (-0.5));
        float _1513 = exp2((_1471.w + (-0.5)) * 20.0) * 2.0;
        float _1514 = _1513 * (_1471.x + (-0.5));
        float _1515 = _1513 * (_1471.y + (-0.5));
        float _1516 = _1513 * (_1471.z + (-0.5));
        float _1517 = isnan(0.0) ? _1514 : (isnan(_1514) ? 0.0 : max(_1514, 0.0));
        float _1518 = isnan(0.0) ? _1515 : (isnan(_1515) ? 0.0 : max(_1515, 0.0));
        float _1519 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
        float _1520 = _1484 * 0.5;
        float _1521 = _1494 * 0.5;
        float _1522 = _1504 * 0.5;
        float _1523 = dot(vec3(_1520, _1521, _1522), vec3(_1520, _1521, _1522));
        float _1528 = (_1523 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1523);
        float _1536 = (dot(vec3(_779, _780, _781), vec3(_1528 * _1520, _1528 * _1521, _1528 * _1522)) + 1.0) * 0.5;
        float _4434 = isnan(0.0) ? _1536 : (isnan(_1536) ? 0.0 : max(_1536, 0.0));
        float _1545 = sqrt(((_1521 * _1521) + (_1520 * _1520)) + (_1522 * _1522)) / (_1517 + 9.9999997473787516355514526367188e-06);
        float _4445 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
        float _1546 = isnan(1.0) ? _4445 : (isnan(_4445) ? 1.0 : min(_4445, 1.0));
        float _1547 = _1546 * 2.0;
        float _1551 = (1.0 - _1546) / (_1546 + 1.0);
        float _4456 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _4456 : (isnan(_4456) ? 1.0 : min(_4456, 1.0));
        float _1561 = ((((1.0 - _1552) * (_1547 + 2.0)) * exp2(log2(isnan(1.0) ? _4434 : (isnan(_4434) ? 1.0 : min(_4434, 1.0))) * (_1547 + 1.0))) + _1552) * _1517;
        float _1562 = _1485 * 0.5;
        float _1563 = _1495 * 0.5;
        float _1564 = _1505 * 0.5;
        float _1565 = dot(vec3(_1562, _1563, _1564), vec3(_1562, _1563, _1564));
        float _1570 = (_1565 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1565);
        float _1578 = (dot(vec3(_779, _780, _781), vec3(_1570 * _1562, _1570 * _1563, _1570 * _1564)) + 1.0) * 0.5;
        float _4467 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
        float _1587 = sqrt(((_1563 * _1563) + (_1562 * _1562)) + (_1564 * _1564)) / (_1518 + 9.9999997473787516355514526367188e-06);
        float _4478 = isnan(0.0) ? _1587 : (isnan(_1587) ? 0.0 : max(_1587, 0.0));
        float _1588 = isnan(1.0) ? _4478 : (isnan(_4478) ? 1.0 : min(_4478, 1.0));
        float _1589 = _1588 * 2.0;
        float _1593 = (1.0 - _1588) / (_1588 + 1.0);
        float _4489 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
        float _1594 = isnan(1.0) ? _4489 : (isnan(_4489) ? 1.0 : min(_4489, 1.0));
        float _1603 = ((((1.0 - _1594) * (_1589 + 2.0)) * exp2(log2(isnan(1.0) ? _4467 : (isnan(_4467) ? 1.0 : min(_4467, 1.0))) * (_1589 + 1.0))) + _1594) * _1518;
        float _1604 = _1486 * 0.5;
        float _1605 = _1496 * 0.5;
        float _1606 = _1506 * 0.5;
        float _1607 = dot(vec3(_1604, _1605, _1606), vec3(_1604, _1605, _1606));
        float _1612 = (_1607 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1607);
        float _1620 = (dot(vec3(_779, _780, _781), vec3(_1612 * _1604, _1612 * _1605, _1612 * _1606)) + 1.0) * 0.5;
        float _4500 = isnan(0.0) ? _1620 : (isnan(_1620) ? 0.0 : max(_1620, 0.0));
        float _1629 = sqrt(((_1605 * _1605) + (_1604 * _1604)) + (_1606 * _1606)) / (_1519 + 9.9999997473787516355514526367188e-06);
        float _4511 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
        float _1630 = isnan(1.0) ? _4511 : (isnan(_4511) ? 1.0 : min(_4511, 1.0));
        float _1631 = _1630 * 2.0;
        float _1635 = (1.0 - _1630) / (_1630 + 1.0);
        float _4522 = isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0));
        float _1636 = isnan(1.0) ? _4522 : (isnan(_4522) ? 1.0 : min(_4522, 1.0));
        float _1645 = ((((1.0 - _1636) * (_1631 + 2.0)) * exp2(log2(isnan(1.0) ? _4500 : (isnan(_4500) ? 1.0 : min(_4500, 1.0))) * (_1631 + 1.0))) + _1636) * _1519;
        _1653 = _1486;
        _1654 = _1485;
        _1655 = _1484;
        _1656 = _1496;
        _1657 = _1495;
        _1658 = _1494;
        _1659 = _1506;
        _1660 = _1505;
        _1661 = _1504;
        _1662 = _1519;
        _1663 = _1518;
        _1664 = _1517;
        _1665 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0)));
        _1666 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1603 : (isnan(_1603) ? 0.0 : max(_1603, 0.0)));
        _1667 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1645 : (isnan(_1645) ? 0.0 : max(_1645, 0.0)));
    }
    else
    {
        _1653 = _1343;
        _1654 = _1343;
        _1655 = _1343;
        _1656 = _1343;
        _1657 = _1343;
        _1658 = _1343;
        _1659 = _1343;
        _1660 = _1343;
        _1661 = _1343;
        _1662 = _1343;
        _1663 = _1343;
        _1664 = _1343;
        _1665 = 0.0;
        _1666 = 0.0;
        _1667 = 0.0;
    }
    float _1677 = (cbModelParam._m0[1u].x * (_1665 - _1355)) + _1355;
    float _1678 = (cbModelParam._m0[1u].x * (_1666 - _1356)) + _1356;
    float _1679 = (cbModelParam._m0[1u].x * (_1667 - _1357)) + _1357;
    float _1700 = fma(_1679, cbSceneParam._m0[89u].z, fma(_1678, cbSceneParam._m0[89u].y, _1677 * cbSceneParam._m0[89u].x));
    float _1703 = fma(_1679, cbSceneParam._m0[90u].z, fma(_1678, cbSceneParam._m0[90u].y, _1677 * cbSceneParam._m0[90u].x));
    float _1706 = fma(_1679, cbSceneParam._m0[91u].z, fma(_1678, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1677));
    float _1721 = _949 * 0.5;
    float _1722 = _950 * 0.5;
    float _1723 = _951 * 0.5;
    float _1724 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1655, _1658, _1661, _1664));
    float _1727 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1654, _1657, _1660, _1663));
    float _1730 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1653, _1656, _1659, _1662));
    float _1764;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1737 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1342, _1346, _1349, _1352));
        float _1741 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1344, _1347, _1350, _1353));
        float _1745 = dot(vec4(_1721, _1722, _1723, 1.0), vec4(_1345, _1348, _1351, _1354));
        float _1752 = dot(vec4(cbModelParam._m0[39u]), vec4(_1721, _1722, _1723, 1.0));
        _1764 = dot(vec3(isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0)), isnan(0.0) ? _1741 : (isnan(_1741) ? 0.0 : max(_1741, 0.0)), isnan(0.0) ? _1737 : (isnan(_1737) ? 0.0 : max(_1737, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1752) ? 0.0 : (isnan(0.0) ? _1752 : max(0.0, _1752))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1764 = 1.0;
    }
    float _1775;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1766 = dot(vec4(cbModelParam._m0[40u]), vec4(_1721, _1722, _1723, 1.0));
        _1775 = dot(vec3(isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)), isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0)), isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1766) ? 0.0 : (isnan(0.0) ? _1766 : max(0.0, _1766))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1775 = 1.0;
    }
    float _1779 = (_1775 * cbModelParam._m0[1u].x) + (_1764 * (1.0 - cbModelParam._m0[1u].x));
    float _1789 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _782);
    float _1790 = isnan(_1789) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1789 : min(cbModelParam._m0[25u].z, _1789));
    float _1871;
    float _1873;
    float _1875;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1838 = fma(_1013, cbModelParam._m0[13u].z, fma(_1009, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1005)) + cbModelParam._m0[13u].w;
        float _1842 = fma(_1013, cbModelParam._m0[14u].z, fma(_1009, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1005)) + cbModelParam._m0[14u].w;
        float _1846 = fma(_1013, cbModelParam._m0[15u].z, fma(_1009, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1005)) + cbModelParam._m0[15u].w;
        float _1849 = fma(_951, cbModelParam._m0[13u].z, fma(_950, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _949));
        float _1852 = fma(_951, cbModelParam._m0[14u].z, fma(_950, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _949));
        float _1855 = fma(_951, cbModelParam._m0[15u].z, fma(_950, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _949));
        float _1883;
        if (_1849 > 0.0)
        {
            _1883 = abs((1.0 - _1838) / _1849);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1849 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1838 + 1.0) / _1849);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1883 = frontier_phi_17_15_ladder;
        }
        float _2110;
        if (_1852 > 0.0)
        {
            _2110 = abs((1.0 - _1842) / _1852);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1852 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1842 + 1.0) / _1852);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _2110 = frontier_phi_26_22_ladder;
        }
        float _2407;
        if (_1855 > 0.0)
        {
            _2407 = abs((1.0 - _1846) / _1855);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1855 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1846 + 1.0) / _1855);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _2407 = frontier_phi_38_33_ladder;
        }
        float _2409 = isnan(_2110) ? _1883 : (isnan(_1883) ? _2110 : min(_1883, _2110));
        float _2410 = isnan(_2407) ? _2409 : (isnan(_2409) ? _2407 : min(_2409, _2407));
        float _2414 = (_2410 * _1849) + _1838;
        float _2415 = (_2410 * _1852) + _1842;
        float _2416 = (_2410 * _1855) + _1846;
        float _2417 = _2410 * 9.9999997473787516355514526367188e-05;
        float _2419 = (-1.0) - _2417;
        float _2421 = _2417 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_2416 > _2421) || ((_2416 < _2419) || ((_2415 > _2421) || ((_2415 < _2419) || ((_2414 < _2419) || (_2414 > _2421))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2561 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2416, cbModelParam._m0[9u].z, fma(_2415, cbModelParam._m0[9u].y, _2414 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2416, cbModelParam._m0[10u].z, fma(_2415, cbModelParam._m0[10u].y, _2414 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2416, cbModelParam._m0[11u].z, fma(_2415, cbModelParam._m0[11u].y, _2414 * cbModelParam._m0[11u].x))), _1790);
            frontier_phi_16_38_ladder = _2561.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _2561.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _2561.x * cbModelParam._m0[1u].y;
        }
        _1871 = frontier_phi_16_38_ladder_2;
        _1873 = frontier_phi_16_38_ladder_1;
        _1875 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1859 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_949, _950, _951), _1790);
        _1871 = _1859.x * cbModelParam._m0[1u].y;
        _1873 = _1859.y * cbModelParam._m0[1u].y;
        _1875 = _1859.z * cbModelParam._m0[1u].y;
    }
    float _1879 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _782);
    float _1880 = isnan(_1879) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1879 : min(cbModelParam._m0[25u].w, _1879));
    float _1970;
    float _1972;
    float _1974;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1934 = fma(_1013, cbModelParam._m0[21u].z, fma(_1009, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1005)) + cbModelParam._m0[21u].w;
        float _1938 = fma(_1013, cbModelParam._m0[22u].z, fma(_1009, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1005)) + cbModelParam._m0[22u].w;
        float _1942 = fma(_1013, cbModelParam._m0[23u].z, fma(_1009, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1005)) + cbModelParam._m0[23u].w;
        float _1945 = fma(_951, cbModelParam._m0[21u].z, fma(_950, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _949));
        float _1948 = fma(_951, cbModelParam._m0[22u].z, fma(_950, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _949));
        float _1951 = fma(_951, cbModelParam._m0[23u].z, fma(_950, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _949));
        float _2115;
        if (_1945 > 0.0)
        {
            _2115 = abs((1.0 - _1934) / _1945);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1945 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1934 + 1.0) / _1945);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _2115 = frontier_phi_28_24_ladder;
        }
        float _2434;
        if (_1948 > 0.0)
        {
            _2434 = abs((1.0 - _1938) / _1948);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1948 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1938 + 1.0) / _1948);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2434 = frontier_phi_40_35_ladder;
        }
        float _2761;
        if (_1951 > 0.0)
        {
            _2761 = abs((1.0 - _1942) / _1951);
        }
        else
        {
            float frontier_phi_50_47_ladder;
            if (_1951 < 0.0)
            {
                frontier_phi_50_47_ladder = abs((_1942 + 1.0) / _1951);
            }
            else
            {
                frontier_phi_50_47_ladder = 5000.0;
            }
            _2761 = frontier_phi_50_47_ladder;
        }
        float _2763 = isnan(_2434) ? _2115 : (isnan(_2115) ? _2434 : min(_2115, _2434));
        float _2764 = isnan(_2761) ? _2763 : (isnan(_2763) ? _2761 : min(_2763, _2761));
        float _2768 = (_2764 * _1945) + _1934;
        float _2769 = (_2764 * _1948) + _1938;
        float _2770 = (_2764 * _1951) + _1942;
        float _2771 = _2764 * 9.9999997473787516355514526367188e-05;
        float _2772 = (-1.0) - _2771;
        float _2774 = _2771 + 1.0;
        float frontier_phi_25_50_ladder;
        float frontier_phi_25_50_ladder_1;
        float frontier_phi_25_50_ladder_2;
        if ((_2770 > _2774) || ((_2770 < _2772) || ((_2769 > _2774) || ((_2769 < _2772) || ((_2768 < _2772) || (_2768 > _2774))))))
        {
            frontier_phi_25_50_ladder = 0.0;
            frontier_phi_25_50_ladder_1 = 0.0;
            frontier_phi_25_50_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2888 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2770, cbModelParam._m0[17u].z, fma(_2769, cbModelParam._m0[17u].y, _2768 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2770, cbModelParam._m0[18u].z, fma(_2769, cbModelParam._m0[18u].y, _2768 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2770, cbModelParam._m0[19u].z, fma(_2769, cbModelParam._m0[19u].y, _2768 * cbModelParam._m0[19u].x))), _1880);
            frontier_phi_25_50_ladder = _2888.z * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_1 = _2888.y * cbModelParam._m0[1u].z;
            frontier_phi_25_50_ladder_2 = _2888.x * cbModelParam._m0[1u].z;
        }
        _1970 = frontier_phi_25_50_ladder_2;
        _1972 = frontier_phi_25_50_ladder_1;
        _1974 = frontier_phi_25_50_ladder;
    }
    else
    {
        vec4 _1954 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_949, _950, _951), _1880);
        _1970 = _1954.x * cbModelParam._m0[1u].z;
        _1972 = _1954.y * cbModelParam._m0[1u].z;
        _1974 = _1954.z * cbModelParam._m0[1u].z;
    }
    float _1986 = ((((1.0 - _973) * ((_960 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_973 * _960)) * _941;
    float _1987 = _1986 * ((cbModelParam._m0[1u].w * (_1970 - _1871)) + _1871);
    float _1988 = _1986 * ((cbModelParam._m0[1u].w * (_1972 - _1873)) + _1873);
    float _1989 = _1986 * ((cbModelParam._m0[1u].w * (_1974 - _1875)) + _1875);
    float _1992 = fma(_1989, cbSceneParam._m0[89u].z, fma(_1988, cbSceneParam._m0[89u].y, _1987 * cbSceneParam._m0[89u].x));
    float _1995 = fma(_1989, cbSceneParam._m0[90u].z, fma(_1988, cbSceneParam._m0[90u].y, _1987 * cbSceneParam._m0[90u].x));
    float _1998 = fma(_1989, cbSceneParam._m0[91u].z, fma(_1988, cbSceneParam._m0[91u].y, _1987 * cbSceneParam._m0[91u].x));
    float _2009 = _878 / cbSceneParam._m0[86u].x;
    float _2010 = _879 / cbSceneParam._m0[86u].y;
    float _2017 = (cbSceneParam._m0[88u].y * (1.0 - cbMtdParam._m0[25u].y)) + cbSceneParam._m0[88u].z;
    float _4648 = isnan(0.0) ? _2017 : (isnan(_2017) ? 0.0 : max(_2017, 0.0));
    float _2019 = (isnan(1.0) ? _4648 : (isnan(_4648) ? 1.0 : min(_4648, 1.0))) * 5.0;
    float _2024 = ((10.0 / (_800 + 10.0)) * cbMtdParam._m0[25u].x) * dot(vec3(_779, _780, _781), vec3(1.0, 0.0, 0.0));
    vec4 _2034 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(((_2024 * textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2((_2024 + _2009) * cbSceneParam._m0[86u].x, _879), _2019).w) + _2009) * cbSceneParam._m0[86u].x, _879), _2019);
    float _2040 = isnan(0.5) ? _2034.w : (isnan(_2034.w) ? 0.5 : max(_2034.w, 0.5));
    float _2055 = 1.0 - (_2034.w / _2040);
    float _2089 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _2093 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _2097 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _2101 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _2102 = _2089 / _2101;
    float _2103 = _2093 / _2101;
    float _2104 = _2097 / _2101;
    float _2250;
    float _2251;
    float _2252;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _2131 = ((uint(_2104 > cbSceneParam._m0[59u].y) + uint(_2104 > cbSceneParam._m0[59u].x)) + uint(_2104 > cbSceneParam._m0[59u].z)) << 2u;
        uint _2132 = _2131 + 43u;
        uint _2140 = _2131 + 44u;
        uint _2148 = _2131 + 45u;
        uint _2156 = _2131 + 46u;
        float _2167 = fma(_2101, cbSceneParam._m0[_2132].w, fma(_2097, cbSceneParam._m0[_2132].z, fma(_2093, cbSceneParam._m0[_2132].y, _2089 * cbSceneParam._m0[_2132].x)));
        float _2171 = fma(_2101, cbSceneParam._m0[_2140].w, fma(_2097, cbSceneParam._m0[_2140].z, fma(_2093, cbSceneParam._m0[_2140].y, _2089 * cbSceneParam._m0[_2140].x)));
        float _2179 = fma(_2101, cbSceneParam._m0[_2156].w, fma(_2097, cbSceneParam._m0[_2156].z, fma(_2093, cbSceneParam._m0[_2156].y, _2089 * cbSceneParam._m0[_2156].x)));
        float _2183 = cbSceneParam._m0[33u].z * _2179;
        float _2185 = cbSceneParam._m0[33u].w * _2179;
        float _2188 = fma(_2101, cbSceneParam._m0[_2148].w, fma(_2097, cbSceneParam._m0[_2148].z, fma(_2093, cbSceneParam._m0[_2148].y, _2089 * cbSceneParam._m0[_2148].x))) / _2179;
        float _2236 = (cbSceneParam._m0[33u].x - sqrt(((_2103 * _2103) + (_2102 * _2102)) + (_2104 * _2104))) * cbSceneParam._m0[33u].y;
        float _4664 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
        float _2243 = (isnan(1.0) ? _4664 : (isnan(_4664) ? 1.0 : min(_4664, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2183 + _2167) / _2179, (_2185 + _2171) / _2179), _2188), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2185 + _2167) / _2179, (_2171 - _2183) / _2179), _2188), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2167 - _2183) / _2179, (_2171 - _2185) / _2179), _2188), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_2167 - _2185) / _2179, (_2183 + _2171) / _2179), _2188), 0.0)).x), vec4(0.25)));
        _2250 = 1.0 - (_2243 * cbSceneParam._m0[34u].x);
        _2251 = 1.0 - (_2243 * cbSceneParam._m0[34u].y);
        _2252 = 1.0 - (_2243 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _2250 = 1.0;
        _2251 = 1.0;
        _2252 = 1.0;
    }
    float _2316;
    float _2318;
    float _2320;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _2304 = fma(_2101, cbSceneParam._m0[63u].w, fma(_2097, cbSceneParam._m0[63u].z, fma(_2093, cbSceneParam._m0[63u].y, _2089 * cbSceneParam._m0[63u].x)));
        float _2305 = fma(_2101, cbSceneParam._m0[60u].w, fma(_2097, cbSceneParam._m0[60u].z, fma(_2093, cbSceneParam._m0[60u].y, _2089 * cbSceneParam._m0[60u].x))) / _2304;
        float _2306 = fma(_2101, cbSceneParam._m0[61u].w, fma(_2097, cbSceneParam._m0[61u].z, fma(_2093, cbSceneParam._m0[61u].y, _2089 * cbSceneParam._m0[61u].x))) / _2304;
        float frontier_phi_37_36_ladder;
        float frontier_phi_37_36_ladder_1;
        float frontier_phi_37_36_ladder_2;
        if ((((_2305 >= cbSceneParam._m0[64u].x) && (_2306 >= cbSceneParam._m0[64u].y)) && (_2305 <= cbSceneParam._m0[64u].z)) && (_2306 <= cbSceneParam._m0[64u].w))
        {
            float _2447 = fma(_2101, cbSceneParam._m0[62u].w, fma(_2097, cbSceneParam._m0[62u].z, fma(_2093, cbSceneParam._m0[62u].y, _2089 * cbSceneParam._m0[62u].x))) / _2304;
            float _2451 = isnan(cbSceneParam._m0[41u].w) ? _2447 : (isnan(_2447) ? cbSceneParam._m0[41u].w : max(_2447, cbSceneParam._m0[41u].w));
            float _2494 = (cbSceneParam._m0[33u].x - sqrt(((_2103 * _2103) + (_2102 * _2102)) + (_2104 * _2104))) * cbSceneParam._m0[33u].y;
            float _4680 = isnan(0.0) ? _2494 : (isnan(_2494) ? 0.0 : max(_2494, 0.0));
            float _2501 = (isnan(1.0) ? _4680 : (isnan(_4680) ? 1.0 : min(_4680, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _2305, cbSceneParam._m0[33u].w + _2306), _2451), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _2305, _2306 - cbSceneParam._m0[33u].z), _2451), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2305 - cbSceneParam._m0[33u].z, _2306 - cbSceneParam._m0[33u].w), _2451), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_2305 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _2306), _2451), 0.0)).x), vec4(0.25)));
            float _2505 = 1.0 - (_2501 * cbSceneParam._m0[34u].x);
            float _2506 = 1.0 - (_2501 * cbSceneParam._m0[34u].y);
            float _2507 = 1.0 - (_2501 * cbSceneParam._m0[34u].z);
            frontier_phi_37_36_ladder = isnan(_2507) ? _2252 : (isnan(_2252) ? _2507 : min(_2252, _2507));
            frontier_phi_37_36_ladder_1 = isnan(_2506) ? _2251 : (isnan(_2251) ? _2506 : min(_2251, _2506));
            frontier_phi_37_36_ladder_2 = isnan(_2505) ? _2250 : (isnan(_2250) ? _2505 : min(_2250, _2505));
        }
        else
        {
            frontier_phi_37_36_ladder = _2252;
            frontier_phi_37_36_ladder_1 = _2251;
            frontier_phi_37_36_ladder_2 = _2250;
        }
        _2316 = frontier_phi_37_36_ladder_2;
        _2318 = frontier_phi_37_36_ladder_1;
        _2320 = frontier_phi_37_36_ladder;
    }
    else
    {
        _2316 = _2250;
        _2318 = _2251;
        _2320 = _2252;
    }
    float _4706 = isnan(0.0) ? _2316 : (isnan(_2316) ? 0.0 : max(_2316, 0.0));
    float _2322 = isnan(1.0) ? _4706 : (isnan(_4706) ? 1.0 : min(_4706, 1.0));
    float _4717 = isnan(0.0) ? _2318 : (isnan(_2318) ? 0.0 : max(_2318, 0.0));
    float _2323 = isnan(1.0) ? _4717 : (isnan(_4717) ? 1.0 : min(_4717, 1.0));
    float _4728 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
    float _2324 = isnan(1.0) ? _4728 : (isnan(_4728) ? 1.0 : min(_4728, 1.0));
    uvec4 _2328 = floatBitsToUint(cbInstanceData._m0[_261 + 5u]);
    uint _2330 = _2328.x * 14u;
    uint _2331 = _2330 + 13u;
    float _2338 = _941 + (-1.0);
    float _2343 = (cbLight._m0[_2331].x * _2338) + 1.0;
    float _2344 = (cbLight._m0[_2331].y * _2338) + 1.0;
    float _2345 = (cbLight._m0[_2331].z * _2338) + 1.0;
    float _2346 = (cbLight._m0[_2331].w * _2338) + 1.0;
    uint _2347 = _2330 + 5u;
    float _2353 = isnan(1.0) ? _2344 : (isnan(_2344) ? 1.0 : min(_2344, 1.0));
    uint _2357 = _2330 + 4u;
    float _2366 = isnan(1.0) ? _2343 : (isnan(_2343) ? 1.0 : min(_2343, 1.0));
    uint _2370 = _2330 | 1u;
    float _2381 = dot(vec3(cbLight._m0[_2330].xyz), vec3(_779, _780, _781));
    float _2384 = dot(vec3(cbLight._m0[_2370].xyz), vec3(_779, _780, _781));
    float _4749 = isnan(0.0) ? _2381 : (isnan(_2381) ? 0.0 : max(_2381, 0.0));
    float _4760 = isnan(0.0) ? _2384 : (isnan(_2384) ? 0.0 : max(_2384, 0.0));
    float _2389 = (isnan(1.0) ? _4749 : (isnan(_4749) ? 1.0 : min(_4749, 1.0))) * 0.3183098733425140380859375;
    float _2391 = (isnan(1.0) ? _4760 : (isnan(_4760) ? 1.0 : min(_4760, 1.0))) * 0.3183098733425140380859375;
    float _2398 = ((cbLight._m0[_2347].x * _2353) * _2391) + (((cbLight._m0[_2357].x * _2322) * _2366) * _2389);
    float _2399 = ((_2353 * cbLight._m0[_2347].y) * _2391) + (((cbLight._m0[_2357].y * _2323) * _2366) * _2389);
    float _2400 = ((_2353 * cbLight._m0[_2347].z) * _2391) + (((cbLight._m0[_2357].z * _2324) * _2366) * _2389);
    uvec4 _2404 = floatBitsToUint(cbLight._m0[_2330 + 12u]);
    bool _2406 = _2404.x == 0u;
    float _2508;
    float _2510;
    float _2512;
    if (_2406)
    {
        _2508 = _2398;
        _2510 = _2399;
        _2512 = _2400;
    }
    else
    {
        uint _2516 = _2330 + 6u;
        float _2532 = (dot(vec3(cbLight._m0[_2330 + 2u].xyz), vec3(_779, _780, _781)) * 0.5) + 0.5;
        float _2533 = _2532 * _2532;
        float _4771 = isnan(0.0) ? _2533 : (isnan(_2533) ? 0.0 : max(_2533, 0.0));
        float _2534 = isnan(1.0) ? _4771 : (isnan(_4771) ? 1.0 : min(_4771, 1.0));
        float _2535 = isnan(1.0) ? _2345 : (isnan(_2345) ? 1.0 : min(_2345, 1.0));
        _2508 = (((cbLight._m0[_2516].x * 0.3183098733425140380859375) * _2534) * _2535) + _2398;
        _2510 = (((cbLight._m0[_2516].y * 0.3183098733425140380859375) * _2534) * _2535) + _2399;
        _2512 = (((cbLight._m0[_2516].z * 0.3183098733425140380859375) * _2534) * _2535) + _2400;
    }
    bool _2515 = _2404.y == 0u;
    float _2570;
    float _2572;
    float _2574;
    if (_2515)
    {
        _2570 = _2508;
        _2572 = _2510;
        _2574 = _2512;
    }
    else
    {
        uint _2732 = _2330 + 7u;
        float _2748 = (dot(vec3(cbLight._m0[_2330 + 3u].xyz), vec3(_779, _780, _781)) * 0.5) + 0.5;
        float _2749 = _2748 * _2748;
        float _4787 = isnan(0.0) ? _2749 : (isnan(_2749) ? 0.0 : max(_2749, 0.0));
        float _2750 = isnan(1.0) ? _4787 : (isnan(_4787) ? 1.0 : min(_4787, 1.0));
        float _2751 = isnan(1.0) ? _2346 : (isnan(_2346) ? 1.0 : min(_2346, 1.0));
        _2570 = (((cbLight._m0[_2732].x * 0.3183098733425140380859375) * _2750) * _2751) + _2508;
        _2572 = (((cbLight._m0[_2732].y * 0.3183098733425140380859375) * _2750) * _2751) + _2510;
        _2574 = (((cbLight._m0[_2732].z * 0.3183098733425140380859375) * _2750) * _2751) + _2512;
    }
    uint _2577 = _2330 + 8u;
    float _2590 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2330].w)) * _782) * 0.949999988079071044921875);
    float _2591 = _2590 * _2590;
    float _2592 = cbLight._m0[_2330].x + _858;
    float _2593 = cbLight._m0[_2330].y + _859;
    float _2594 = cbLight._m0[_2330].z + _860;
    float _2598 = inversesqrt(dot(vec3(_2592, _2593, _2594), vec3(_2592, _2593, _2594)));
    float _2599 = _2598 * _2592;
    float _2600 = _2598 * _2593;
    float _2601 = _2598 * _2594;
    float _2602 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2330].xyz));
    float _4803 = isnan(0.0) ? _2602 : (isnan(_2602) ? 0.0 : max(_2602, 0.0));
    float _2605 = isnan(1.0) ? _4803 : (isnan(_4803) ? 1.0 : min(_4803, 1.0));
    float _4814 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
    float _2606 = isnan(1.0) ? _4814 : (isnan(_4814) ? 1.0 : min(_4814, 1.0));
    float _2607 = dot(vec3(_779, _780, _781), vec3(_2599, _2600, _2601));
    float _4825 = isnan(0.0) ? _2607 : (isnan(_2607) ? 0.0 : max(_2607, 0.0));
    float _2610 = isnan(1.0) ? _4825 : (isnan(_4825) ? 1.0 : min(_4825, 1.0));
    float _2611 = dot(vec3(cbLight._m0[_2330].xyz), vec3(_2599, _2600, _2601));
    float _4836 = isnan(0.0) ? _2611 : (isnan(_2611) ? 0.0 : max(_2611, 0.0));
    float _2615 = _2591 * _2591;
    float _2619 = ((_2610 * _2610) * (_2615 + (-1.0))) + 1.0;
    float _2630 = (exp2(log2(1.0 - (isnan(1.0) ? _4836 : (isnan(_4836) ? 1.0 : min(_4836, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2631 = 1.0 - _2591;
    float _2642 = (0.5 / (((_2606 * ((_2605 * _2631) + _2591)) + 9.9999999392252902907785028219223e-09) + (((_2606 * _2631) + _2591) * _2605))) * _2605;
    float _4847 = isnan(0.0) ? _2642 : (isnan(_2642) ? 0.0 : max(_2642, 0.0));
    float _2644 = (isnan(1.0) ? _4847 : (isnan(_4847) ? 1.0 : min(_4847, 1.0))) * (_2615 / ((_2619 * _2619) * 3.141590118408203125));
    uint _2658 = _2330 + 9u;
    float _2669 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2370].w)) * _782) * 0.949999988079071044921875);
    float _2670 = _2669 * _2669;
    float _2671 = cbLight._m0[_2370].x + _858;
    float _2672 = cbLight._m0[_2370].y + _859;
    float _2673 = cbLight._m0[_2370].z + _860;
    float _2677 = inversesqrt(dot(vec3(_2671, _2672, _2673), vec3(_2671, _2672, _2673)));
    float _2678 = _2677 * _2671;
    float _2679 = _2677 * _2672;
    float _2680 = _2677 * _2673;
    float _2681 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2370].xyz));
    float _4858 = isnan(0.0) ? _2681 : (isnan(_2681) ? 0.0 : max(_2681, 0.0));
    float _2684 = isnan(1.0) ? _4858 : (isnan(_4858) ? 1.0 : min(_4858, 1.0));
    float _2685 = dot(vec3(_779, _780, _781), vec3(_2678, _2679, _2680));
    float _4869 = isnan(0.0) ? _2685 : (isnan(_2685) ? 0.0 : max(_2685, 0.0));
    float _2688 = isnan(1.0) ? _4869 : (isnan(_4869) ? 1.0 : min(_4869, 1.0));
    float _2689 = dot(vec3(cbLight._m0[_2370].xyz), vec3(_2678, _2679, _2680));
    float _4880 = isnan(0.0) ? _2689 : (isnan(_2689) ? 0.0 : max(_2689, 0.0));
    float _2693 = _2670 * _2670;
    float _2697 = ((_2688 * _2688) * (_2693 + (-1.0))) + 1.0;
    float _2706 = (exp2(log2(1.0 - (isnan(1.0) ? _4880 : (isnan(_4880) ? 1.0 : min(_4880, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2707 = 1.0 - _2670;
    float _2717 = (0.5 / (((_2606 * ((_2684 * _2707) + _2670)) + 9.9999999392252902907785028219223e-09) + (((_2606 * _2707) + _2670) * _2684))) * _2684;
    float _4891 = isnan(0.0) ? _2717 : (isnan(_2717) ? 0.0 : max(_2717, 0.0));
    float _2719 = (isnan(1.0) ? _4891 : (isnan(_4891) ? 1.0 : min(_4891, 1.0))) * (_2693 / ((_2697 * _2697) * 3.141590118408203125));
    float _2729 = (((_2706 * cbLight._m0[_2658].x) * _2719) * _2353) + ((((cbLight._m0[_2577].x * _2322) * _2630) * _2644) * _2366);
    float _2730 = (((_2706 * cbLight._m0[_2658].y) * _2719) * _2353) + ((((cbLight._m0[_2577].y * _2323) * _2630) * _2644) * _2366);
    float _2731 = (((_2706 * cbLight._m0[_2658].z) * _2719) * _2353) + ((((cbLight._m0[_2577].z * _2324) * _2630) * _2644) * _2366);
    float _2787;
    float _2789;
    float _2791;
    if (_2406)
    {
        _2787 = _2729;
        _2789 = _2730;
        _2791 = _2731;
    }
    else
    {
        uint _2793 = _2330 + 2u;
        uint _2797 = _2330 + 10u;
        float _2811 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2793].w)) * _782) * 0.949999988079071044921875);
        float _2812 = _2811 * _2811;
        float _2813 = cbLight._m0[_2793].x + _858;
        float _2814 = cbLight._m0[_2793].y + _859;
        float _2815 = cbLight._m0[_2793].z + _860;
        float _2819 = inversesqrt(dot(vec3(_2813, _2814, _2815), vec3(_2813, _2814, _2815)));
        float _2820 = _2819 * _2813;
        float _2821 = _2819 * _2814;
        float _2822 = _2819 * _2815;
        float _2823 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2793].xyz));
        float _4902 = isnan(0.0) ? _2823 : (isnan(_2823) ? 0.0 : max(_2823, 0.0));
        float _2826 = isnan(1.0) ? _4902 : (isnan(_4902) ? 1.0 : min(_4902, 1.0));
        float _2827 = dot(vec3(_779, _780, _781), vec3(_2820, _2821, _2822));
        float _4913 = isnan(0.0) ? _2827 : (isnan(_2827) ? 0.0 : max(_2827, 0.0));
        float _2830 = isnan(1.0) ? _4913 : (isnan(_4913) ? 1.0 : min(_4913, 1.0));
        float _2831 = dot(vec3(cbLight._m0[_2793].xyz), vec3(_2820, _2821, _2822));
        float _4924 = isnan(0.0) ? _2831 : (isnan(_2831) ? 0.0 : max(_2831, 0.0));
        float _2835 = _2812 * _2812;
        float _2839 = ((_2830 * _2830) * (_2835 + (-1.0))) + 1.0;
        float _2848 = (exp2(log2(1.0 - (isnan(1.0) ? _4924 : (isnan(_4924) ? 1.0 : min(_4924, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2849 = 1.0 - _2812;
        float _2859 = (0.5 / (((_2606 * ((_2826 * _2849) + _2812)) + 9.9999999392252902907785028219223e-09) + (((_2606 * _2849) + _2812) * _2826))) * _2826;
        float _4935 = isnan(0.0) ? _2859 : (isnan(_2859) ? 0.0 : max(_2859, 0.0));
        float _2861 = (isnan(1.0) ? _4935 : (isnan(_4935) ? 1.0 : min(_4935, 1.0))) * (_2835 / ((_2839 * _2839) * 3.141590118408203125));
        float _2862 = isnan(1.0) ? _2345 : (isnan(_2345) ? 1.0 : min(_2345, 1.0));
        _2787 = (((_2848 * cbLight._m0[_2797].x) * _2861) * _2862) + _2729;
        _2789 = (((_2848 * cbLight._m0[_2797].y) * _2861) * _2862) + _2730;
        _2791 = (((_2848 * cbLight._m0[_2797].z) * _2861) * _2862) + _2731;
    }
    float _2893;
    float _2895;
    float _2897;
    if (_2515)
    {
        _2893 = _2787;
        _2895 = _2789;
        _2897 = _2791;
    }
    else
    {
        uint _2904 = _2330 + 3u;
        uint _2908 = _2330 + 11u;
        float _2922 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2904].w)) * _782) * 0.949999988079071044921875);
        float _2923 = _2922 * _2922;
        float _2924 = cbLight._m0[_2904].x + _858;
        float _2925 = cbLight._m0[_2904].y + _859;
        float _2926 = cbLight._m0[_2904].z + _860;
        float _2930 = inversesqrt(dot(vec3(_2924, _2925, _2926), vec3(_2924, _2925, _2926)));
        float _2931 = _2930 * _2924;
        float _2932 = _2930 * _2925;
        float _2933 = _2930 * _2926;
        float _2934 = dot(vec3(_779, _780, _781), vec3(cbLight._m0[_2904].xyz));
        float _4951 = isnan(0.0) ? _2934 : (isnan(_2934) ? 0.0 : max(_2934, 0.0));
        float _2937 = isnan(1.0) ? _4951 : (isnan(_4951) ? 1.0 : min(_4951, 1.0));
        float _2938 = dot(vec3(_779, _780, _781), vec3(_2931, _2932, _2933));
        float _4962 = isnan(0.0) ? _2938 : (isnan(_2938) ? 0.0 : max(_2938, 0.0));
        float _2941 = isnan(1.0) ? _4962 : (isnan(_4962) ? 1.0 : min(_4962, 1.0));
        float _2942 = dot(vec3(cbLight._m0[_2904].xyz), vec3(_2931, _2932, _2933));
        float _4973 = isnan(0.0) ? _2942 : (isnan(_2942) ? 0.0 : max(_2942, 0.0));
        float _2946 = _2923 * _2923;
        float _2950 = ((_2941 * _2941) * (_2946 + (-1.0))) + 1.0;
        float _2959 = (exp2(log2(1.0 - (isnan(1.0) ? _4973 : (isnan(_4973) ? 1.0 : min(_4973, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _2960 = 1.0 - _2923;
        float _2970 = (0.5 / (((_2606 * ((_2937 * _2960) + _2923)) + 9.9999999392252902907785028219223e-09) + (((_2606 * _2960) + _2923) * _2937))) * _2937;
        float _4984 = isnan(0.0) ? _2970 : (isnan(_2970) ? 0.0 : max(_2970, 0.0));
        float _2972 = (isnan(1.0) ? _4984 : (isnan(_4984) ? 1.0 : min(_4984, 1.0))) * (_2946 / ((_2950 * _2950) * 3.141590118408203125));
        float _2973 = isnan(1.0) ? _2346 : (isnan(_2346) ? 1.0 : min(_2346, 1.0));
        _2893 = (((_2959 * cbLight._m0[_2908].x) * _2972) * _2973) + _2787;
        _2895 = (((_2959 * cbLight._m0[_2908].y) * _2972) * _2973) + _2789;
        _2897 = (((_2959 * cbLight._m0[_2908].z) * _2972) * _2973) + _2791;
    }
    float _3039;
    float _3041;
    float _3043;
    float _3045;
    float _3047;
    float _3049;
    if (_2328.y == 0u)
    {
        uvec4 _2994 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2995 = _2994.x;
        uint _3006 = uint((float(_2994.y) * floor(float(uint(cbSceneParam._m0[85u].y * _879) / _2995))) + floor(float(uint(cbSceneParam._m0[85u].x * _878) / _2995)));
        float _3016 = (log2(_2104 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _3017 = isnan(0.0) ? _3016 : (isnan(_3016) ? 0.0 : max(_3016, 0.0));
        uint _3020 = uint(isnan(14.0) ? _3017 : (isnan(_3017) ? 14.0 : min(_3017, 14.0)));
        uvec4 _3025 = texelFetch(g_lightClusterGridBuffer, int(((_3020 << 2u) + (_3006 << 6u)) >> 2u));
        uint _3026 = _3025.x;
        uint _3027 = _2994.z;
        float _3100;
        float _3102;
        float _3104;
        float _3106;
        float _3108;
        float _3110;
        if (((((1u << ((_3027 >> 4u) & 15u)) + 4294967295u) & _3026) == 0u) || ((_3027 & 240u) == 0u))
        {
            _3100 = 0.0;
            _3102 = 0.0;
            _3104 = 0.0;
            _3106 = 0.0;
            _3108 = 0.0;
            _3110 = 0.0;
        }
        else
        {
            float _3101;
            float _3103;
            float _3105;
            float _3107;
            float _3109;
            float _3111;
            float _3252 = 0.0;
            float _3253 = 0.0;
            float _3254 = 0.0;
            float _3255 = 0.0;
            float _3256 = 0.0;
            float _3257 = 0.0;
            uint _3258 = 0u;
            uint _3267;
            bool _3268;
            for (;;)
            {
                _3267 = texelFetch(g_lightClassification, int((((_3020 << 5u) + (_3006 << 9u)) + (_3258 << 2u)) >> 2u)).x;
                _3268 = _3267 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                float frontier_phi_71_pred_3;
                float frontier_phi_71_pred_4;
                float frontier_phi_71_pred_5;
                if (_3268)
                {
                    frontier_phi_71_pred = _3257;
                    frontier_phi_71_pred_1 = _3256;
                    frontier_phi_71_pred_2 = _3255;
                    frontier_phi_71_pred_3 = _3254;
                    frontier_phi_71_pred_4 = _3253;
                    frontier_phi_71_pred_5 = _3252;
                }
                else
                {
                    float _3397;
                    float _3398;
                    float _3399;
                    float _3400;
                    float _3401;
                    float _3402;
                    uint _3403;
                    _3397 = _3252;
                    _3398 = _3253;
                    _3399 = _3254;
                    _3400 = _3255;
                    _3401 = _3256;
                    _3402 = _3257;
                    _3403 = _3267;
                    float _3324;
                    float _3325;
                    float _3326;
                    float _3327;
                    float _3328;
                    float _3329;
                    for (;;)
                    {
                        uint _3407 = uint(findLSB(_3403)) + (_3258 << 5u);
                        uint _3404 = (_3403 + 4294967295u) & _3403;
                        uint _3409 = _3407 * 48u;
                        vec4 _3423 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3409)).x, texelFetch(g_PointLightRenderingBuffer, int(_3409 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3409 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3409 + 3u)).x));
                        uint _3429 = (_3407 * 48u) + 4u;
                        vec4 _3442 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_3429)).x, texelFetch(g_PointLightRenderingBuffer, int(_3429 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3429 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3429 + 3u)).x));
                        uint _3448 = (_3407 * 48u) + 8u;
                        vec3 _3459 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_3448)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_3448 + 2u)).x));
                        float _3463 = _3423.x - _2102;
                        float _3464 = _3423.y - _2103;
                        float _3465 = _3423.z - _2104;
                        float _3466 = dot(vec3(_3463, _3464, _3465), vec3(_3463, _3464, _3465));
                        float _3469 = inversesqrt(_3466);
                        float _3470 = _3469 * _3463;
                        float _3471 = _3469 * _3464;
                        float _3472 = _3469 * _3465;
                        float _3473 = dot(vec3(_897, _900, _903), vec3(_3470, _3471, _3472));
                        float _3478 = 1.0 - (_3466 * _3423.w);
                        float _5010 = isnan(0.0) ? _3478 : (isnan(_3478) ? 0.0 : max(_3478, 0.0));
                        float _3479 = isnan(1.0) ? _5010 : (isnan(_5010) ? 1.0 : min(_5010, 1.0));
                        float _3480 = sqrt(_3466) * _3442.w;
                        float _3483 = 1.39999997615814208984375 / (_3480 + 1.39999997615814208984375);
                        float _3484 = _3483 * _3483;
                        float _3487 = ((1.0 - _3484) * _3473) + _3484;
                        float _3490 = _3480 * _3480;
                        float _3494 = ((isnan(0.0) ? _3487 : (isnan(_3487) ? 0.0 : max(_3487, 0.0))) * _3479) / ((_3490 * 0.699999988079071044921875) + 1.0);
                        float _3498 = (-0.0) - _2102;
                        float _3499 = (-0.0) - _2103;
                        float _3500 = (-0.0) - _2104;
                        float _3504 = inversesqrt(dot(vec3(_3498, _3499, _3500), vec3(_3498, _3499, _3500)));
                        float _3505 = _3504 * _3498;
                        float _3506 = _3504 * _3499;
                        float _3507 = _3504 * _3500;
                        float _3514 = exp2(log2(1.0 / ((_3490 * 3.5) + 5.0)) * 0.25);
                        float _3515 = 1.0 - _960;
                        float _3522 = sqrt(1.0 - ((1.0 - (_3515 * _3515)) * (1.0 - (_3514 * _3514))));
                        float _3523 = _3522 * _3522;
                        float _3524 = _3523 * _3523;
                        float _3525 = _3505 + _3470;
                        float _3526 = _3506 + _3471;
                        float _3527 = _3507 + _3472;
                        float _3531 = inversesqrt(dot(vec3(_3525, _3526, _3527), vec3(_3525, _3526, _3527)));
                        float _3535 = dot(vec3(_897, _900, _903), vec3(_3505, _3506, _3507));
                        float _5026 = isnan(0.0) ? _3535 : (isnan(_3535) ? 0.0 : max(_3535, 0.0));
                        float _3538 = isnan(1.0) ? _5026 : (isnan(_5026) ? 1.0 : min(_5026, 1.0));
                        float _3539 = dot(vec3(_897, _900, _903), vec3(_3531 * _3525, _3531 * _3526, _3531 * _3527));
                        float _5037 = isnan(0.0) ? _3539 : (isnan(_3539) ? 0.0 : max(_3539, 0.0));
                        float _3542 = isnan(1.0) ? _5037 : (isnan(_5037) ? 1.0 : min(_5037, 1.0));
                        float _3546 = ((_3542 * _3542) * (_3524 + (-1.0))) + 1.0;
                        float _3547 = _3483 * _3523;
                        float _3548 = _3547 * _3547;
                        float _3551 = ((1.0 - _3548) * _3473) + _3548;
                        float _5048 = isnan(0.0) ? _3551 : (isnan(_3551) ? 0.0 : max(_3551, 0.0));
                        float _3552 = isnan(1.0) ? _5048 : (isnan(_5048) ? 1.0 : min(_5048, 1.0));
                        float _3553 = 1.0 - _3523;
                        float _3563 = (0.5 / (((_3552 * ((_3538 * _3553) + _3523)) + 9.9999999392252902907785028219223e-09) + (((_3552 * _3553) + _3523) * _3538))) * _3552;
                        float _5059 = isnan(0.0) ? _3563 : (isnan(_3563) ? 0.0 : max(_3563, 0.0));
                        float _3574 = (((_3524 * 3.1415927410125732421875) * (isnan(1.0) ? _5059 : (isnan(_5059) ? 1.0 : min(_5059, 1.0)))) / ((_3546 * _3546) * ((_3490 * 2.1991131305694580078125) + 3.141590118408203125))) * _3479;
                        _3327 = (_3494 * _3442.x) + _3400;
                        _3328 = (_3494 * _3442.y) + _3401;
                        _3329 = (_3494 * _3442.z) + _3402;
                        _3324 = (_3574 * _3459.x) + _3397;
                        _3325 = (_3574 * _3459.y) + _3398;
                        _3326 = (_3574 * _3459.z) + _3399;
                        if (_3404 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _3397 = _3324;
                            _3398 = _3325;
                            _3399 = _3326;
                            _3400 = _3327;
                            _3401 = _3328;
                            _3402 = _3329;
                            _3403 = _3404;
                        }
                    }
                    frontier_phi_71_pred = _3329;
                    frontier_phi_71_pred_1 = _3328;
                    frontier_phi_71_pred_2 = _3327;
                    frontier_phi_71_pred_3 = _3326;
                    frontier_phi_71_pred_4 = _3325;
                    frontier_phi_71_pred_5 = _3324;
                }
                _3111 = frontier_phi_71_pred;
                _3109 = frontier_phi_71_pred_1;
                _3107 = frontier_phi_71_pred_2;
                _3105 = frontier_phi_71_pred_3;
                _3103 = frontier_phi_71_pred_4;
                _3101 = frontier_phi_71_pred_5;
                uint _3259 = _3258 + 1u;
                if (_3259 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _3252 = _3101;
                    _3253 = _3103;
                    _3254 = _3105;
                    _3255 = _3107;
                    _3256 = _3109;
                    _3257 = _3111;
                    _3258 = _3259;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _3100 = _3101;
            _3102 = _3103;
            _3104 = _3105;
            _3106 = _3107;
            _3108 = _3109;
            _3110 = _3111;
        }
        uvec4 _3114 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _3115 = _3114.z;
        uint _3117 = (_3115 >> 8u) & 15u;
        float _3220;
        float _3222;
        float _3224;
        float _3226;
        float _3228;
        float _3230;
        if (((4294967295u << _3117) & _3026) == 0u)
        {
            _3220 = _3100;
            _3222 = _3102;
            _3224 = _3104;
            _3226 = _3106;
            _3228 = _3108;
            _3230 = _3110;
        }
        else
        {
            float _3245 = inversesqrt(dot(vec3(_2102, _2103, _2104), vec3(_2102, _2103, _2104)));
            float _3246 = _3245 * _2102;
            float _3247 = _3245 * _2103;
            float _3248 = _3245 * _2104;
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            float frontier_phi_63_64_ladder_3;
            float frontier_phi_63_64_ladder_4;
            float frontier_phi_63_64_ladder_5;
            if (_3117 < ((_3115 >> 12u) & 15u))
            {
                float _3221;
                float _3223;
                float _3225;
                float _3227;
                float _3229;
                float _3231;
                float _3380 = _3100;
                float _3381 = _3102;
                float _3382 = _3104;
                float _3383 = _3106;
                float _3384 = _3108;
                float _3385 = _3110;
                uint _3386 = _3117;
                uint _3395;
                bool _3396;
                for (;;)
                {
                    _3395 = texelFetch(g_lightClassification, int((((_3020 << 5u) + (_3006 << 9u)) + (_3386 << 2u)) >> 2u)).x;
                    _3396 = _3395 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    float frontier_phi_82_pred_3;
                    float frontier_phi_82_pred_4;
                    float frontier_phi_82_pred_5;
                    if (_3396)
                    {
                        frontier_phi_82_pred = _3385;
                        frontier_phi_82_pred_1 = _3384;
                        frontier_phi_82_pred_2 = _3383;
                        frontier_phi_82_pred_3 = _3382;
                        frontier_phi_82_pred_4 = _3381;
                        frontier_phi_82_pred_5 = _3380;
                    }
                    else
                    {
                        float _3588;
                        float _3589;
                        float _3590;
                        float _3591;
                        float _3592;
                        float _3593;
                        float _3881;
                        float _3882;
                        float _3883;
                        float _3884;
                        float _3885;
                        float _3886;
                        float _3601 = _3380;
                        float _3602 = _3381;
                        float _3603 = _3382;
                        float _3604 = _3383;
                        float _3605 = _3384;
                        float _3606 = _3385;
                        uint _3607 = _3395;
                        uint _3608;
                        vec4 _3633;
                        float _3634;
                        vec4 _3649;
                        vec3 _3661;
                        vec4 _3676;
                        vec4 _3691;
                        float _3737;
                        bool _3738;
                        for (;;)
                        {
                            uint _3618 = ((_3386 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3607));
                            _3608 = (_3607 + 4294967295u) & _3607;
                            uint _3620 = _3618 * 40u;
                            _3633 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3620)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3620 + 3u)).x));
                            _3634 = _3633.w;
                            uint _3636 = (_3618 * 40u) + 4u;
                            _3649 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3636)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3636 + 3u)).x));
                            uint _3651 = (_3618 * 40u) + 8u;
                            _3661 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3651)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3651 + 2u)).x));
                            uint _3663 = (_3618 * 40u) + 16u;
                            _3676 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3663)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3663 + 3u)).x));
                            uint _3678 = (_3618 * 40u) + 20u;
                            _3691 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3678)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3678 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3678 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3678 + 3u)).x));
                            uint _3693 = (_3618 * 40u) + 24u;
                            vec4 _3706 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3693)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3693 + 3u)).x));
                            uint _3712 = (_3618 * 40u) + 28u;
                            vec4 _3725 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3712)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3712 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3712 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3712 + 3u)).x));
                            _3737 = fma(_2104, _3725.z, fma(_2103, _3725.y, _3725.x * _2102)) + _3725.w;
                            _3738 = !((fma(_2104, _3706.z, fma(_2103, _3706.y, _3706.x * _2102)) + _3706.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            float frontier_phi_88_pred_3;
                            float frontier_phi_88_pred_4;
                            float frontier_phi_88_pred_5;
                            if (_3738)
                            {
                                float _3765 = _3633.x - _2102;
                                float _3766 = _3633.y - _2103;
                                float _3767 = _3633.z - _2104;
                                float _3768 = dot(vec3(_3765, _3766, _3767), vec3(_3765, _3766, _3767));
                                float _3771 = inversesqrt(_3768);
                                float _3772 = _3771 * _3765;
                                float _3773 = _3771 * _3766;
                                float _3774 = _3771 * _3767;
                                float _3778 = 1.0 - (_3768 / (_3634 * _3634));
                                float _5070 = isnan(0.0) ? _3778 : (isnan(_3778) ? 0.0 : max(_3778, 0.0));
                                float _3779 = isnan(1.0) ? _5070 : (isnan(_5070) ? 1.0 : min(_5070, 1.0));
                                float _3783 = sqrt(_3768) * _3649.w;
                                float _3785 = 1.39999997615814208984375 / (_3783 + 1.39999997615814208984375);
                                float _3786 = _3785 * _3785;
                                float _3789 = ((1.0 - _3786) * dot(vec3(_3772, _3773, _3774), vec3(_897, _900, _903))) + _3786;
                                float _3792 = _3783 * _3783;
                                float _3796 = (fma(_2104, _3676.z, fma(_2103, _3676.y, _3676.x * _2102)) + _3676.w) / _3737;
                                float _3797 = (fma(_2104, _3691.z, fma(_2103, _3691.y, _3691.x * _2102)) + _3691.w) / _3737;
                                float _3801 = 1.0 - dot(vec2(_3796, _3797), vec2(_3796, _3797));
                                float _5086 = isnan(0.0) ? _3801 : (isnan(_3801) ? 0.0 : max(_3801, 0.0));
                                float _3802 = isnan(1.0) ? _5086 : (isnan(_5086) ? 1.0 : min(_5086, 1.0));
                                float _3803 = _3802 * (((isnan(0.0) ? _3789 : (isnan(_3789) ? 0.0 : max(_3789, 0.0))) * _3779) / ((_3792 * 0.699999988079071044921875) + 1.0));
                                float _3815 = exp2(log2(1.0 / ((_3792 * 3.5) + 5.0)) * 0.25);
                                float _3816 = 1.0 - _960;
                                float _3823 = sqrt(1.0 - ((1.0 - (_3816 * _3816)) * (1.0 - (_3815 * _3815))));
                                float _3824 = _3823 * _3823;
                                float _3825 = _3824 * _3824;
                                float _3826 = _3772 - _3246;
                                float _3827 = _3773 - _3247;
                                float _3828 = _3774 - _3248;
                                float _3832 = inversesqrt(dot(vec3(_3826, _3827, _3828), vec3(_3826, _3827, _3828)));
                                float _3836 = dot(vec3(_897, _900, _903), vec3((-0.0) - _3246, (-0.0) - _3247, (-0.0) - _3248));
                                float _5097 = isnan(0.0) ? _3836 : (isnan(_3836) ? 0.0 : max(_3836, 0.0));
                                float _3839 = isnan(1.0) ? _5097 : (isnan(_5097) ? 1.0 : min(_5097, 1.0));
                                float _3840 = dot(vec3(_897, _900, _903), vec3(_3832 * _3826, _3832 * _3827, _3832 * _3828));
                                float _5108 = isnan(0.0) ? _3840 : (isnan(_3840) ? 0.0 : max(_3840, 0.0));
                                float _3843 = isnan(1.0) ? _5108 : (isnan(_5108) ? 1.0 : min(_5108, 1.0));
                                float _3847 = ((_3843 * _3843) * (_3825 + (-1.0))) + 1.0;
                                float _3848 = _3785 * _3824;
                                float _3849 = _3848 * _3848;
                                float _3855 = ((1.0 - _3849) * dot(vec3(_897, _900, _903), vec3(_3772, _3773, _3774))) + _3849;
                                float _5119 = isnan(0.0) ? _3855 : (isnan(_3855) ? 0.0 : max(_3855, 0.0));
                                float _3856 = isnan(1.0) ? _5119 : (isnan(_5119) ? 1.0 : min(_5119, 1.0));
                                float _3857 = 1.0 - _3824;
                                float _3867 = (0.5 / (((_3856 * ((_3839 * _3857) + _3824)) + 9.9999999392252902907785028219223e-09) + (((_3856 * _3857) + _3824) * _3839))) * _3856;
                                float _5130 = isnan(0.0) ? _3867 : (isnan(_3867) ? 0.0 : max(_3867, 0.0));
                                float _3877 = (_3802 * _3779) * (((_3825 * 3.1415927410125732421875) * (isnan(1.0) ? _5130 : (isnan(_5130) ? 1.0 : min(_5130, 1.0)))) / ((_3847 * _3847) * ((_3792 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_88_pred = _3803 * _3649.z;
                                frontier_phi_88_pred_1 = _3803 * _3649.y;
                                frontier_phi_88_pred_2 = _3803 * _3649.x;
                                frontier_phi_88_pred_3 = _3877 * _3661.z;
                                frontier_phi_88_pred_4 = _3877 * _3661.y;
                                frontier_phi_88_pred_5 = _3877 * _3661.x;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                                frontier_phi_88_pred_3 = 0.0;
                                frontier_phi_88_pred_4 = 0.0;
                                frontier_phi_88_pred_5 = 0.0;
                            }
                            _3886 = frontier_phi_88_pred;
                            _3885 = frontier_phi_88_pred_1;
                            _3884 = frontier_phi_88_pred_2;
                            _3883 = frontier_phi_88_pred_3;
                            _3882 = frontier_phi_88_pred_4;
                            _3881 = frontier_phi_88_pred_5;
                            _3591 = _3884 + _3604;
                            _3592 = _3885 + _3605;
                            _3593 = _3886 + _3606;
                            _3588 = _3881 + _3601;
                            _3589 = _3882 + _3602;
                            _3590 = _3883 + _3603;
                            if (_3608 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3601 = _3588;
                                _3602 = _3589;
                                _3603 = _3590;
                                _3604 = _3591;
                                _3605 = _3592;
                                _3606 = _3593;
                                _3607 = _3608;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _3593;
                        frontier_phi_82_pred_1 = _3592;
                        frontier_phi_82_pred_2 = _3591;
                        frontier_phi_82_pred_3 = _3590;
                        frontier_phi_82_pred_4 = _3589;
                        frontier_phi_82_pred_5 = _3588;
                    }
                    _3231 = frontier_phi_82_pred;
                    _3229 = frontier_phi_82_pred_1;
                    _3227 = frontier_phi_82_pred_2;
                    _3225 = frontier_phi_82_pred_3;
                    _3223 = frontier_phi_82_pred_4;
                    _3221 = frontier_phi_82_pred_5;
                    uint _3387 = _3386 + 1u;
                    if (_3387 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _3380 = _3221;
                        _3381 = _3223;
                        _3382 = _3225;
                        _3383 = _3227;
                        _3384 = _3229;
                        _3385 = _3231;
                        _3386 = _3387;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _3227;
                frontier_phi_63_64_ladder_1 = _3231;
                frontier_phi_63_64_ladder_2 = _3229;
                frontier_phi_63_64_ladder_3 = _3225;
                frontier_phi_63_64_ladder_4 = _3223;
                frontier_phi_63_64_ladder_5 = _3221;
            }
            else
            {
                frontier_phi_63_64_ladder = _3106;
                frontier_phi_63_64_ladder_1 = _3110;
                frontier_phi_63_64_ladder_2 = _3108;
                frontier_phi_63_64_ladder_3 = _3104;
                frontier_phi_63_64_ladder_4 = _3102;
                frontier_phi_63_64_ladder_5 = _3100;
            }
            _3220 = frontier_phi_63_64_ladder_5;
            _3222 = frontier_phi_63_64_ladder_4;
            _3224 = frontier_phi_63_64_ladder_3;
            _3226 = frontier_phi_63_64_ladder;
            _3228 = frontier_phi_63_64_ladder_2;
            _3230 = frontier_phi_63_64_ladder_1;
        }
        float _3235 = isnan(1.0) ? _941 : (isnan(_941) ? 1.0 : min(_941, 1.0));
        _3039 = (_3235 * _3226) + _2570;
        _3041 = (_3235 * _3228) + _2572;
        _3043 = (_3235 * _3230) + _2574;
        _3045 = ((_3220 * 0.039999999105930328369140625) * _3235) + _2893;
        _3047 = ((_3222 * 0.039999999105930328369140625) * _3235) + _2895;
        _3049 = ((_3224 * 0.039999999105930328369140625) * _3235) + _2897;
    }
    else
    {
        _3039 = _2570;
        _3041 = _2572;
        _3043 = _2574;
        _3045 = _2893;
        _3047 = _2895;
        _3049 = _2897;
    }
    float _5146 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
    float _5157 = isnan(0.0) ? _927 : (isnan(_927) ? 0.0 : max(_927, 0.0));
    float _5168 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
    float _3066 = ((isnan(1.0) ? _5146 : (isnan(_5146) ? 1.0 : min(_5146, 1.0))) * (_3039 + ((isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0))) * _941))) + (((((_1986 * (_2034.x / _2040)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1992 : (isnan(_1992) ? 0.0 : max(_1992, 0.0))) * _1779) * _2055)) + _3045) * cbPerFrame._m0[3u].x);
    float _3067 = ((isnan(1.0) ? _5157 : (isnan(_5157) ? 1.0 : min(_5157, 1.0))) * (_3041 + ((isnan(0.0) ? _1703 : (isnan(_1703) ? 0.0 : max(_1703, 0.0))) * _941))) + (((((_1986 * (_2034.y / _2040)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1995 : (isnan(_1995) ? 0.0 : max(_1995, 0.0))) * _1779) * _2055)) + _3047) * cbPerFrame._m0[3u].x);
    float _3068 = ((isnan(1.0) ? _5168 : (isnan(_5168) ? 1.0 : min(_5168, 1.0))) * (_3043 + ((isnan(0.0) ? _1706 : (isnan(_1706) ? 0.0 : max(_1706, 0.0))) * _941))) + (((((_1986 * (_2034.z / _2040)) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1998 : (isnan(_1998) ? 0.0 : max(_1998, 0.0))) * _1779) * _2055)) + _3049) * cbPerFrame._m0[3u].x);
    uint _3069 = _261 + 6u;
    vec4 _3086 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2009, _2010, (log2((isnan(cbSceneParam._m0[77u].w) ? _800 : (isnan(_800) ? cbSceneParam._m0[77u].w : min(_800, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _3088 = _3086.x;
    float _3089 = _3086.y;
    float _3090 = _3086.z;
    float _3091 = _3086.w;
    float _3163;
    float _3165;
    float _3167;
    float _3169;
    if (_800 > cbSceneParam._m0[78u].w)
    {
        float _3125 = isnan(_800) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _800 : min(cbSceneParam._m0[80u].w, _800));
        float _3126 = _3125 / _800;
        float _3137 = _3126 * _851;
        float _3138 = _852 * _3126;
        float _3139 = (-0.0) - _3138;
        float _3141 = _3126 * _853;
        float _3143 = (cbSceneParam._m0[77u].w * _3139) / _3125;
        float _3144 = _3143 + cbSceneParam._m0[79u].w;
        float _3145 = cbSceneParam._m0[79u].w - _3138;
        float _3151 = sqrt(((_3137 * _3137) + (_3138 * _3138)) + (_3141 * _3141));
        float _3154 = (1.0 - (cbSceneParam._m0[77u].w / _3125)) * _3151;
        float _3159 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _3161 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _3337;
        if (abs((_3139 - _3143) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _3337 = ((((_3144 > 0.0) ? exp2(_3159 * _3144) : (2.0 - exp2(_3161 * _3144))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _3154;
        }
        else
        {
            float _3281 = 1.0 / cbSceneParam._m0[80u].x;
            float _3282 = isnan(_3145) ? _3144 : (isnan(_3144) ? _3145 : max(_3144, _3145));
            float _3283 = isnan(_3145) ? _3144 : (isnan(_3144) ? _3145 : min(_3144, _3145));
            float _3292 = isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : min(_3282, 0.0));
            float _3293 = isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : min(_3283, 0.0));
            _3337 = ((abs(_3151 / _3139) * cbSceneParam._m0[80u].y) * ((((_3292 - _3293) * 2.0) - ((exp2(_3159 * (isnan(0.0) ? _3282 : (isnan(_3282) ? 0.0 : max(_3282, 0.0)))) - exp2(_3159 * (isnan(0.0) ? _3283 : (isnan(_3283) ? 0.0 : max(_3283, 0.0))))) * _3281)) - ((exp2(_3161 * _3292) - exp2(_3161 * _3293)) * _3281))) + (_3154 * cbSceneParam._m0[80u].z);
        }
        vec4 _3339 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2009, _2010, 1.0), 0.0);
        float _3348 = exp2((_3337 * (-1.44269502162933349609375)) * (1.0 - _3339.w));
        float _3349 = log2(_3348);
        float _3365 = log2(_3091);
        _3163 = (exp2(_3365 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_3349 * cbSceneParam._m0[78u].x)) * _3339.x) / cbSceneParam._m0[78u].x)) + _3088;
        _3165 = (exp2(_3365 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_3349 * cbSceneParam._m0[78u].y)) * _3339.y) / cbSceneParam._m0[78u].y)) + _3089;
        _3167 = (exp2(_3365 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_3349 * cbSceneParam._m0[78u].z)) * _3339.z) / cbSceneParam._m0[78u].z)) + _3090;
        _3169 = _3348 * _3091;
    }
    else
    {
        _3163 = _3088;
        _3165 = _3089;
        _3167 = _3090;
        _3169 = _3091;
    }
    bool _3375;
    vec4 _3178;
    vec4 _3200;
    float _3202;
    float _3206;
    float _3207;
    float _3208;
    float _3209;
    bool _3219;
    for (;;)
    {
        _3178 = cbMatDynParam._m0[0u];
        float _3180 = roundEven(_3178.y);
        bool _3181 = _3180 == 3.0;
        float _3182 = log2(_3169);
        float _3189 = exp2(_3182 * cbSceneParam._m0[78u].x) * _3066;
        float _3190 = exp2(_3182 * cbSceneParam._m0[78u].y) * _3067;
        float _3191 = exp2(_3182 * cbSceneParam._m0[78u].z) * _3068;
        float _3198 = _867 + (-0.5);
        _3200 = cbMtdParam._m0[1u];
        _3202 = _3200.y * _3198;
        float _3205 = (_3180 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _3206 = _3205 * (_3181 ? _3189 : (_3189 + (cbSceneParam._m0[72u].w * _3163)));
        _3207 = _3205 * (_3181 ? _3190 : (_3190 + (cbSceneParam._m0[72u].w * _3165)));
        _3208 = _3205 * (_3181 ? _3191 : (_3191 + (cbSceneParam._m0[72u].w * _3167)));
        _3209 = _3198 * 0.999000012874603271484375;
        _3219 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_3219)
        {
            if ((cbInstanceData._m0[_261 + 7u].x + _3209) < 0.5)
            {
                _3375 = true;
                break;
            }
        }
        uint _3316 = _916 + uint(_3178.w);
        if ((cbInstanceData._m0[_3316].w < 1.0) && ((cbInstanceData._m0[_3316].w + _3209) < 0.5))
        {
            _3375 = true;
            break;
        }
        if ((_3202 + _297) < _3200.x)
        {
            _3375 = true;
            break;
        }
        _3375 = false;
        break;
    }
    float _3579;
    if (_3375)
    {
        discard_state = true;
        _3579 = 0.0;
    }
    else
    {
        _3579 = cbInstanceData._m0[_3069].w;
    }
    SV_Target.x = _3206;
    SV_Target.y = _3207;
    SV_Target.z = _3208;
    SV_Target.w = _3579;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_3069].w;
    discard_exit();
}


