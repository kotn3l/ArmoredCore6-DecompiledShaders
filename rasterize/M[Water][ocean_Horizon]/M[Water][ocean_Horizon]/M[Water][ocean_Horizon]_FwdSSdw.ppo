#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _905;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _175 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _176 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _177 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _182 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _183 = _182 * _175;
    float _184 = _182 * _176;
    float _185 = _182 * _177;
    float _189 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _190 = _189 * NORMAL.x;
    float _191 = _189 * NORMAL.y;
    float _192 = _189 * NORMAL.z;
    float _196 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204;
    float _205;
    float _206;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _204 = (-0.0) - _190;
        _205 = (-0.0) - _191;
        _206 = (-0.0) - _192;
    }
    else
    {
        _204 = _190;
        _205 = _191;
        _206 = _192;
    }
    float _252 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _262 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _252);
    float _263 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _252);
    float _264 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _252);
    uvec4 _275 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _278 = _263 * 100.0;
    float _2408 = isnan(0.0) ? _278 : (isnan(_278) ? 0.0 : max(_278, 0.0));
    float _286 = cbMtdParam._m0[11u].y * _263;
    float _2419 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _290 = exp2(log2(isnan(1.0) ? _2419 : (isnan(_2419) ? 1.0 : min(_2419, 1.0))) * cbMtdParam._m0[11u].z);
    float _2430 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _297 = cbMtdParam._m0[12u].z * _263;
    float _2441 = isnan(0.0) ? _297 : (isnan(_297) ? 0.0 : max(_297, 0.0));
    float _301 = exp2(log2(isnan(1.0) ? _2441 : (isnan(_2441) ? 1.0 : min(_2441, 1.0))) * cbMtdParam._m0[11u].w);
    float _2452 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _302 = isnan(1.0) ? _2452 : (isnan(_2452) ? 1.0 : min(_2452, 1.0));
    float _305 = cbMtdParam._m0[12u].y * _263;
    float _2463 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _309 = exp2(log2(isnan(1.0) ? _2463 : (isnan(_2463) ? 1.0 : min(_2463, 1.0))) * cbMtdParam._m0[11u].x);
    float _2474 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _314 = (((isnan(1.0) ? _2474 : (isnan(_2474) ? 1.0 : min(_2474, 1.0))) - _302) * 0.5) + _302;
    float _317 = (((isnan(1.0) ? _2430 : (isnan(_2430) ? 1.0 : min(_2430, 1.0))) - _314) * 0.5) + _314;
    float _2485 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _319 = (_275.y != 0u) ? (isnan(1.0) ? _2485 : (isnan(_2485) ? 1.0 : min(_2485, 1.0))) : (isnan(1.0) ? _2408 : (isnan(_2408) ? 1.0 : min(_2408, 1.0)));
    bool _334 = _275.x != 0u;
    uint _338 = uint(roundEven(NORMAL.w)) * 13u;
    float _343 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_338 + 1u].w;
    float _344 = _262 / _263;
    float _346 = (-0.0) - (_264 / _263);
    vec4 _367 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_334 ? (_343 * _344) : _344) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_334 ? (_343 * _346) : _346) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _375 = (_367.x * 2.0) + (-1.0);
    float _377 = (_367.y * 2.0) + (-1.0);
    float _378 = dot(vec2(_375, _377), vec2(_375, _377));
    float _2496 = isnan(0.0) ? _378 : (isnan(_378) ? 0.0 : max(_378, 0.0));
    float _383 = sqrt(1.0 - (isnan(1.0) ? _2496 : (isnan(_2496) ? 1.0 : min(_2496, 1.0))));
    uint _397 = _338 + 5u;
    float _409 = (-0.0) - _262;
    float _410 = (-0.0) - _263;
    float _411 = (-0.0) - _264;
    float _415 = inversesqrt(dot(vec3(_409, _410, _411), vec3(_409, _410, _411)));
    float _419 = dot(vec3(_415 * _409, _415 * _410, _415 * _411), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_397]).x * 14u].xyz));
    float _430 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_419 * 0.60000002384185791015625)) * 1.5);
    float _444 = ((((0.959999978542327880859375 / exp2(log2((_419 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _430) * 0.5) + _430) * 0.079577468335628509521484375;
    float _448 = fma(_383, _204, fma(_377, _196 * TANGENT.x, _375 * _183));
    float _451 = fma(_383, _205, fma(_377, _196 * TANGENT.y, _375 * _184));
    float _454 = fma(_383, _206, fma(_377, _196 * TANGENT.z, _375 * _185));
    float _458 = inversesqrt(dot(vec3(_448, _451, _454), vec3(_448, _451, _454)));
    float _459 = _458 * _448;
    float _460 = _458 * _451;
    float _461 = _458 * _454;
    float _2507 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _2518 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _463 = isnan(1.0) ? _2518 : (isnan(_2518) ? 1.0 : min(_2518, 1.0));
    float _2529 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2540 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2551 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _479 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _483 = inversesqrt(dot(vec3(_262, _263, _264), vec3(_262, _263, _264)));
    float _484 = _262 * _483;
    float _485 = _263 * _483;
    float _486 = _264 * _483;
    float _492 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _493 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _507 = (_338 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _513 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2529 : (isnan(_2529) ? 1.0 : min(_2529, 1.0)))) * cbInstanceData._m0[_507].x;
    float _514 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0)))) * cbInstanceData._m0[_507].y;
    float _515 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0)))) * cbInstanceData._m0[_507].z;
    float _2562 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _516 = isnan(1.0) ? _2562 : (isnan(_2562) ? 1.0 : min(_2562, 1.0));
    float _2573 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _517 = isnan(1.0) ? _2573 : (isnan(_2573) ? 1.0 : min(_2573, 1.0));
    float _2584 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _518 = isnan(1.0) ? _2584 : (isnan(_2584) ? 1.0 : min(_2584, 1.0));
    vec4 _527 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _492, cbSceneParam._m0[86u].y * _493));
    float _530 = _527.x * TEXCOORD.z;
    float _531 = dot(vec3(_459, _460, _461), vec3(_484, _485, _486));
    float _534 = _531 * 2.0;
    float _538 = (_534 * _459) - _484;
    float _539 = (_534 * _460) - _485;
    float _540 = (_534 * _461) - _486;
    float _544 = abs(dot(vec3(_484, _485, _486), vec3(_459, _460, _461)));
    float _2595 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _545 = isnan(1.0) ? _2595 : (isnan(_2595) ? 1.0 : min(_2595, 1.0));
    float _553 = sqrt(_463);
    float _565 = exp2((_553 * 5.0) * log2(1.0 - (_545 * 0.999000012874603271484375))) / (4.0 - (_553 * 3.0));
    float _595 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _599 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _603 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _904;
    float _906;
    float _907;
    float _908;
    float _909;
    float _910;
    float _911;
    float _912;
    float _913;
    float _914;
    float _915;
    float _916;
    float _917;
    float _918;
    float _919;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _630 = fma(_603, cbModelParam._m0[26u].z, fma(_599, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _595));
        float _634 = fma(_603, cbModelParam._m0[27u].z, fma(_599, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _595));
        float _638 = fma(_603, cbModelParam._m0[28u].z, fma(_599, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _595));
        float _662 = _595 + _459;
        float _663 = _599 + _460;
        float _664 = _603 + _461;
        float _674 = fma(_664, cbModelParam._m0[26u].z, fma(_663, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _662)) - _630;
        float _675 = fma(_664, cbModelParam._m0[27u].z, fma(_663, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _662)) - _634;
        float _676 = fma(_664, cbModelParam._m0[28u].z, fma(_663, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _662)) - _638;
        float _680 = inversesqrt(dot(vec3(_674, _675, _676), vec3(_674, _675, _676)));
        float _693 = ((_680 * _674) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_630 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _694 = ((_680 * _675) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_634 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _695 = ((_680 * _676) / cbModelParam._m0[34u].z) + ((((((_638 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _698 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_693, _694, _695), 0.0);
        vec4 _705 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_693, _694, _695), 0.0);
        vec4 _712 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_693, _694, _695), 0.0);
        vec4 _719 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_693, _694, _695), 0.0);
        float _732 = exp2((_698.w + (-0.5)) * 20.0) * 2.0;
        float _733 = _732 * (_698.x + (-0.5));
        float _734 = _732 * (_698.y + (-0.5));
        float _735 = _732 * (_698.z + (-0.5));
        float _742 = exp2((_705.w + (-0.5)) * 20.0) * 2.0;
        float _743 = _742 * (_705.x + (-0.5));
        float _744 = _742 * (_705.y + (-0.5));
        float _745 = _742 * (_705.z + (-0.5));
        float _752 = exp2((_712.w + (-0.5)) * 20.0) * 2.0;
        float _753 = _752 * (_712.x + (-0.5));
        float _754 = _752 * (_712.y + (-0.5));
        float _755 = _752 * (_712.z + (-0.5));
        float _762 = exp2((_719.w + (-0.5)) * 20.0) * 2.0;
        float _763 = _762 * (_719.x + (-0.5));
        float _764 = _762 * (_719.y + (-0.5));
        float _765 = _762 * (_719.z + (-0.5));
        float _766 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
        float _767 = isnan(0.0) ? _764 : (isnan(_764) ? 0.0 : max(_764, 0.0));
        float _768 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _769 = _733 * 0.5;
        float _770 = _743 * 0.5;
        float _771 = _753 * 0.5;
        float _772 = dot(vec3(_769, _770, _771), vec3(_769, _770, _771));
        float _777 = (_772 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_772);
        float _786 = (dot(vec3(_459, _460, _461), vec3(_777 * _769, _777 * _770, _777 * _771)) + 1.0) * 0.5;
        float _2621 = isnan(0.0) ? _786 : (isnan(_786) ? 0.0 : max(_786, 0.0));
        float _796 = sqrt(((_770 * _770) + (_769 * _769)) + (_771 * _771)) / (_766 + 9.9999997473787516355514526367188e-06);
        float _2632 = isnan(0.0) ? _796 : (isnan(_796) ? 0.0 : max(_796, 0.0));
        float _797 = isnan(1.0) ? _2632 : (isnan(_2632) ? 1.0 : min(_2632, 1.0));
        float _798 = _797 * 2.0;
        float _802 = (1.0 - _797) / (_797 + 1.0);
        float _2643 = isnan(0.0) ? _802 : (isnan(_802) ? 0.0 : max(_802, 0.0));
        float _803 = isnan(1.0) ? _2643 : (isnan(_2643) ? 1.0 : min(_2643, 1.0));
        float _812 = ((((1.0 - _803) * (_798 + 2.0)) * exp2(log2(isnan(1.0) ? _2621 : (isnan(_2621) ? 1.0 : min(_2621, 1.0))) * (_798 + 1.0))) + _803) * _766;
        float _813 = _734 * 0.5;
        float _814 = _744 * 0.5;
        float _815 = _754 * 0.5;
        float _816 = dot(vec3(_813, _814, _815), vec3(_813, _814, _815));
        float _821 = (_816 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_816);
        float _829 = (dot(vec3(_459, _460, _461), vec3(_821 * _813, _821 * _814, _821 * _815)) + 1.0) * 0.5;
        float _2654 = isnan(0.0) ? _829 : (isnan(_829) ? 0.0 : max(_829, 0.0));
        float _838 = sqrt(((_814 * _814) + (_813 * _813)) + (_815 * _815)) / (_767 + 9.9999997473787516355514526367188e-06);
        float _2665 = isnan(0.0) ? _838 : (isnan(_838) ? 0.0 : max(_838, 0.0));
        float _839 = isnan(1.0) ? _2665 : (isnan(_2665) ? 1.0 : min(_2665, 1.0));
        float _840 = _839 * 2.0;
        float _844 = (1.0 - _839) / (_839 + 1.0);
        float _2676 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
        float _845 = isnan(1.0) ? _2676 : (isnan(_2676) ? 1.0 : min(_2676, 1.0));
        float _854 = ((((1.0 - _845) * (_840 + 2.0)) * exp2(log2(isnan(1.0) ? _2654 : (isnan(_2654) ? 1.0 : min(_2654, 1.0))) * (_840 + 1.0))) + _845) * _767;
        float _855 = _735 * 0.5;
        float _856 = _745 * 0.5;
        float _857 = _755 * 0.5;
        float _858 = dot(vec3(_855, _856, _857), vec3(_855, _856, _857));
        float _863 = (_858 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_858);
        float _871 = (dot(vec3(_459, _460, _461), vec3(_863 * _855, _863 * _856, _863 * _857)) + 1.0) * 0.5;
        float _2687 = isnan(0.0) ? _871 : (isnan(_871) ? 0.0 : max(_871, 0.0));
        float _880 = sqrt(((_856 * _856) + (_855 * _855)) + (_857 * _857)) / (_768 + 9.9999997473787516355514526367188e-06);
        float _2698 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
        float _881 = isnan(1.0) ? _2698 : (isnan(_2698) ? 1.0 : min(_2698, 1.0));
        float _882 = _881 * 2.0;
        float _886 = (1.0 - _881) / (_881 + 1.0);
        float _2709 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _887 = isnan(1.0) ? _2709 : (isnan(_2709) ? 1.0 : min(_2709, 1.0));
        float _896 = ((((1.0 - _887) * (_882 + 2.0)) * exp2(log2(isnan(1.0) ? _2687 : (isnan(_2687) ? 1.0 : min(_2687, 1.0))) * (_882 + 1.0))) + _887) * _768;
        _904 = _735;
        _906 = _734;
        _907 = _733;
        _908 = _745;
        _909 = _744;
        _910 = _743;
        _911 = _755;
        _912 = _754;
        _913 = _753;
        _914 = _768;
        _915 = _767;
        _916 = _766;
        _917 = cbModelParam._m0[36u].z * (isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0)));
        _918 = cbModelParam._m0[36u].z * (isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0)));
        _919 = cbModelParam._m0[36u].z * (isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0)));
    }
    else
    {
        _904 = _905;
        _906 = _905;
        _907 = _905;
        _908 = _905;
        _909 = _905;
        _910 = _905;
        _911 = _905;
        _912 = _905;
        _913 = _905;
        _914 = _905;
        _915 = _905;
        _916 = _905;
        _917 = 0.0;
        _918 = 0.0;
        _919 = 0.0;
    }
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _945 = fma(_603, cbModelParam._m0[30u].z, fma(_599, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _595));
        float _949 = fma(_603, cbModelParam._m0[31u].z, fma(_599, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _595));
        float _953 = fma(_603, cbModelParam._m0[32u].z, fma(_599, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _595));
        float _976 = _595 + _459;
        float _977 = _599 + _460;
        float _978 = _603 + _461;
        float _988 = fma(_978, cbModelParam._m0[30u].z, fma(_977, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _976)) - _945;
        float _989 = fma(_978, cbModelParam._m0[31u].z, fma(_977, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _976)) - _949;
        float _990 = fma(_978, cbModelParam._m0[32u].z, fma(_977, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _976)) - _953;
        float _994 = inversesqrt(dot(vec3(_988, _989, _990), vec3(_988, _989, _990)));
        float _1007 = ((_994 * _988) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_945 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1008 = ((_994 * _989) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_949 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1009 = ((_994 * _990) / cbModelParam._m0[35u].z) + ((((((_953 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1007, _1008, _1009), 0.0);
        vec4 _1018 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1007, _1008, _1009), 0.0);
        vec4 _1025 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1007, _1008, _1009), 0.0);
        vec4 _1032 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1007, _1008, _1009), 0.0);
        float _1044 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1045 = _1044 * (_1011.x + (-0.5));
        float _1046 = _1044 * (_1011.y + (-0.5));
        float _1047 = _1044 * (_1011.z + (-0.5));
        float _1054 = exp2((_1018.w + (-0.5)) * 20.0) * 2.0;
        float _1055 = _1054 * (_1018.x + (-0.5));
        float _1056 = _1054 * (_1018.y + (-0.5));
        float _1057 = _1054 * (_1018.z + (-0.5));
        float _1064 = exp2((_1025.w + (-0.5)) * 20.0) * 2.0;
        float _1065 = _1064 * (_1025.x + (-0.5));
        float _1066 = _1064 * (_1025.y + (-0.5));
        float _1067 = _1064 * (_1025.z + (-0.5));
        float _1074 = exp2((_1032.w + (-0.5)) * 20.0) * 2.0;
        float _1075 = _1074 * (_1032.x + (-0.5));
        float _1076 = _1074 * (_1032.y + (-0.5));
        float _1077 = _1074 * (_1032.z + (-0.5));
        float _1078 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1079 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1080 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1081 = _1045 * 0.5;
        float _1082 = _1055 * 0.5;
        float _1083 = _1065 * 0.5;
        float _1084 = dot(vec3(_1081, _1082, _1083), vec3(_1081, _1082, _1083));
        float _1089 = (_1084 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1084);
        float _1097 = (dot(vec3(_459, _460, _461), vec3(_1089 * _1081, _1089 * _1082, _1089 * _1083)) + 1.0) * 0.5;
        float _2750 = isnan(0.0) ? _1097 : (isnan(_1097) ? 0.0 : max(_1097, 0.0));
        float _1106 = sqrt(((_1082 * _1082) + (_1081 * _1081)) + (_1083 * _1083)) / (_1078 + 9.9999997473787516355514526367188e-06);
        float _2761 = isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0));
        float _1107 = isnan(1.0) ? _2761 : (isnan(_2761) ? 1.0 : min(_2761, 1.0));
        float _1108 = _1107 * 2.0;
        float _1112 = (1.0 - _1107) / (_1107 + 1.0);
        float _2772 = isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0));
        float _1113 = isnan(1.0) ? _2772 : (isnan(_2772) ? 1.0 : min(_2772, 1.0));
        float _1122 = ((((1.0 - _1113) * (_1108 + 2.0)) * exp2(log2(isnan(1.0) ? _2750 : (isnan(_2750) ? 1.0 : min(_2750, 1.0))) * (_1108 + 1.0))) + _1113) * _1078;
        float _1123 = _1046 * 0.5;
        float _1124 = _1056 * 0.5;
        float _1125 = _1066 * 0.5;
        float _1126 = dot(vec3(_1123, _1124, _1125), vec3(_1123, _1124, _1125));
        float _1131 = (_1126 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1126);
        float _1139 = (dot(vec3(_459, _460, _461), vec3(_1131 * _1123, _1131 * _1124, _1131 * _1125)) + 1.0) * 0.5;
        float _2783 = isnan(0.0) ? _1139 : (isnan(_1139) ? 0.0 : max(_1139, 0.0));
        float _1148 = sqrt(((_1124 * _1124) + (_1123 * _1123)) + (_1125 * _1125)) / (_1079 + 9.9999997473787516355514526367188e-06);
        float _2794 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1149 = isnan(1.0) ? _2794 : (isnan(_2794) ? 1.0 : min(_2794, 1.0));
        float _1150 = _1149 * 2.0;
        float _1154 = (1.0 - _1149) / (_1149 + 1.0);
        float _2805 = isnan(0.0) ? _1154 : (isnan(_1154) ? 0.0 : max(_1154, 0.0));
        float _1155 = isnan(1.0) ? _2805 : (isnan(_2805) ? 1.0 : min(_2805, 1.0));
        float _1164 = ((((1.0 - _1155) * (_1150 + 2.0)) * exp2(log2(isnan(1.0) ? _2783 : (isnan(_2783) ? 1.0 : min(_2783, 1.0))) * (_1150 + 1.0))) + _1155) * _1079;
        float _1165 = _1047 * 0.5;
        float _1166 = _1057 * 0.5;
        float _1167 = _1067 * 0.5;
        float _1168 = dot(vec3(_1165, _1166, _1167), vec3(_1165, _1166, _1167));
        float _1173 = (_1168 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1168);
        float _1181 = (dot(vec3(_459, _460, _461), vec3(_1173 * _1165, _1173 * _1166, _1173 * _1167)) + 1.0) * 0.5;
        float _2816 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1190 = sqrt(((_1166 * _1166) + (_1165 * _1165)) + (_1167 * _1167)) / (_1080 + 9.9999997473787516355514526367188e-06);
        float _2827 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _2827 : (isnan(_2827) ? 1.0 : min(_2827, 1.0));
        float _1192 = _1191 * 2.0;
        float _1196 = (1.0 - _1191) / (_1191 + 1.0);
        float _2838 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _2838 : (isnan(_2838) ? 1.0 : min(_2838, 1.0));
        float _1206 = ((((1.0 - _1197) * (_1192 + 2.0)) * exp2(log2(isnan(1.0) ? _2816 : (isnan(_2816) ? 1.0 : min(_2816, 1.0))) * (_1192 + 1.0))) + _1197) * _1080;
        _1214 = _1047;
        _1215 = _1046;
        _1216 = _1045;
        _1217 = _1057;
        _1218 = _1056;
        _1219 = _1055;
        _1220 = _1067;
        _1221 = _1066;
        _1222 = _1065;
        _1223 = _1080;
        _1224 = _1079;
        _1225 = _1078;
        _1226 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0)));
        _1227 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1164 : (isnan(_1164) ? 0.0 : max(_1164, 0.0)));
        _1228 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)));
    }
    else
    {
        _1214 = _905;
        _1215 = _905;
        _1216 = _905;
        _1217 = _905;
        _1218 = _905;
        _1219 = _905;
        _1220 = _905;
        _1221 = _905;
        _1222 = _905;
        _1223 = _905;
        _1224 = _905;
        _1225 = _905;
        _1226 = 0.0;
        _1227 = 0.0;
        _1228 = 0.0;
    }
    float _1238 = (cbModelParam._m0[1u].x * (_1226 - _917)) + _917;
    float _1239 = (cbModelParam._m0[1u].x * (_1227 - _918)) + _918;
    float _1240 = (cbModelParam._m0[1u].x * (_1228 - _919)) + _919;
    float _1261 = fma(_1240, cbSceneParam._m0[89u].z, fma(_1239, cbSceneParam._m0[89u].y, _1238 * cbSceneParam._m0[89u].x));
    float _1264 = fma(_1240, cbSceneParam._m0[90u].z, fma(_1239, cbSceneParam._m0[90u].y, _1238 * cbSceneParam._m0[90u].x));
    float _1267 = fma(_1240, cbSceneParam._m0[91u].z, fma(_1239, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1238));
    float _1282 = _538 * 0.5;
    float _1283 = _539 * 0.5;
    float _1284 = _540 * 0.5;
    float _1285 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_1216, _1219, _1222, _1225));
    float _1288 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_1215, _1218, _1221, _1224));
    float _1291 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_1214, _1217, _1220, _1223));
    float _1325;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1298 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_904, _908, _911, _914));
        float _1302 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_906, _909, _912, _915));
        float _1306 = dot(vec4(_1282, _1283, _1284, 1.0), vec4(_907, _910, _913, _916));
        float _1313 = dot(vec4(cbModelParam._m0[39u]), vec4(_1282, _1283, _1284, 1.0));
        _1325 = dot(vec3(isnan(0.0) ? _1306 : (isnan(_1306) ? 0.0 : max(_1306, 0.0)), isnan(0.0) ? _1302 : (isnan(_1302) ? 0.0 : max(_1302, 0.0)), isnan(0.0) ? _1298 : (isnan(_1298) ? 0.0 : max(_1298, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1313) ? 0.0 : (isnan(0.0) ? _1313 : max(0.0, _1313))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1325 = 1.0;
    }
    float _1336;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1327 = dot(vec4(cbModelParam._m0[40u]), vec4(_1282, _1283, _1284, 1.0));
        _1336 = dot(vec3(isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0)), isnan(0.0) ? _1288 : (isnan(_1288) ? 0.0 : max(_1288, 0.0)), isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1327) ? 0.0 : (isnan(0.0) ? _1327 : max(0.0, _1327))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1336 = 1.0;
    }
    float _1340 = (_1336 * cbModelParam._m0[1u].x) + (_1325 * (1.0 - cbModelParam._m0[1u].x));
    float _1350 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _463);
    float _1351 = isnan(_1350) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1350 : min(cbModelParam._m0[25u].z, _1350));
    float _1432;
    float _1434;
    float _1436;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1399 = fma(_603, cbModelParam._m0[13u].z, fma(_599, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _595)) + cbModelParam._m0[13u].w;
        float _1403 = fma(_603, cbModelParam._m0[14u].z, fma(_599, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _595)) + cbModelParam._m0[14u].w;
        float _1407 = fma(_603, cbModelParam._m0[15u].z, fma(_599, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _595)) + cbModelParam._m0[15u].w;
        float _1410 = fma(_540, cbModelParam._m0[13u].z, fma(_539, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _538));
        float _1413 = fma(_540, cbModelParam._m0[14u].z, fma(_539, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _538));
        float _1416 = fma(_540, cbModelParam._m0[15u].z, fma(_539, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _538));
        float _1444;
        if (_1410 > 0.0)
        {
            _1444 = abs((1.0 - _1399) / _1410);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1410 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1399 + 1.0) / _1410);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1444 = frontier_phi_16_14_ladder;
        }
        float _1863;
        if (_1413 > 0.0)
        {
            _1863 = abs((1.0 - _1403) / _1413);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1413 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1403 + 1.0) / _1413);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1863 = frontier_phi_25_21_ladder;
        }
        float _2157;
        if (_1416 > 0.0)
        {
            _2157 = abs((1.0 - _1407) / _1416);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1416 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1407 + 1.0) / _1416);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2157 = frontier_phi_37_32_ladder;
        }
        float _2159 = isnan(_1863) ? _1444 : (isnan(_1444) ? _1863 : min(_1444, _1863));
        float _2160 = isnan(_2157) ? _2159 : (isnan(_2159) ? _2157 : min(_2159, _2157));
        float _2164 = (_2160 * _1410) + _1399;
        float _2165 = (_2160 * _1413) + _1403;
        float _2166 = (_2160 * _1416) + _1407;
        float _2167 = _2160 * 9.9999997473787516355514526367188e-05;
        float _2168 = (-1.0) - _2167;
        float _2170 = _2167 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2166 > _2170) || ((_2166 < _2168) || ((_2165 > _2170) || ((_2165 < _2168) || ((_2164 < _2168) || (_2164 > _2170))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2243 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2166, cbModelParam._m0[9u].z, fma(_2165, cbModelParam._m0[9u].y, _2164 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2166, cbModelParam._m0[10u].z, fma(_2165, cbModelParam._m0[10u].y, _2164 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2166, cbModelParam._m0[11u].z, fma(_2165, cbModelParam._m0[11u].y, _2164 * cbModelParam._m0[11u].x))), _1351);
            frontier_phi_15_37_ladder = _2243.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2243.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2243.x * cbModelParam._m0[1u].y;
        }
        _1432 = frontier_phi_15_37_ladder_2;
        _1434 = frontier_phi_15_37_ladder_1;
        _1436 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1420 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_538, _539, _540), _1351);
        _1432 = _1420.x * cbModelParam._m0[1u].y;
        _1434 = _1420.y * cbModelParam._m0[1u].y;
        _1436 = _1420.z * cbModelParam._m0[1u].y;
    }
    float _1440 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _463);
    float _1441 = isnan(_1440) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1440 : min(cbModelParam._m0[25u].w, _1440));
    float _1533;
    float _1535;
    float _1537;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1497 = fma(_603, cbModelParam._m0[21u].z, fma(_599, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _595)) + cbModelParam._m0[21u].w;
        float _1501 = fma(_603, cbModelParam._m0[22u].z, fma(_599, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _595)) + cbModelParam._m0[22u].w;
        float _1505 = fma(_603, cbModelParam._m0[23u].z, fma(_599, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _595)) + cbModelParam._m0[23u].w;
        float _1508 = fma(_540, cbModelParam._m0[21u].z, fma(_539, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _538));
        float _1511 = fma(_540, cbModelParam._m0[22u].z, fma(_539, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _538));
        float _1514 = fma(_540, cbModelParam._m0[23u].z, fma(_539, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _538));
        float _1868;
        if (_1508 > 0.0)
        {
            _1868 = abs((1.0 - _1497) / _1508);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1508 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1497 + 1.0) / _1508);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1868 = frontier_phi_27_23_ladder;
        }
        float _2183;
        if (_1511 > 0.0)
        {
            _2183 = abs((1.0 - _1501) / _1511);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1511 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1501 + 1.0) / _1511);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2183 = frontier_phi_39_34_ladder;
        }
        float _2290;
        if (_1514 > 0.0)
        {
            _2290 = abs((1.0 - _1505) / _1514);
        }
        else
        {
            float frontier_phi_47_45_ladder;
            if (_1514 < 0.0)
            {
                frontier_phi_47_45_ladder = abs((_1505 + 1.0) / _1514);
            }
            else
            {
                frontier_phi_47_45_ladder = 5000.0;
            }
            _2290 = frontier_phi_47_45_ladder;
        }
        float _2292 = isnan(_2183) ? _1868 : (isnan(_1868) ? _2183 : min(_1868, _2183));
        float _2293 = isnan(_2290) ? _2292 : (isnan(_2292) ? _2290 : min(_2292, _2290));
        float _2297 = (_2293 * _1508) + _1497;
        float _2298 = (_2293 * _1511) + _1501;
        float _2299 = (_2293 * _1514) + _1505;
        float _2300 = _2293 * 9.9999997473787516355514526367188e-05;
        float _2301 = (-1.0) - _2300;
        float _2303 = _2300 + 1.0;
        float frontier_phi_24_47_ladder;
        float frontier_phi_24_47_ladder_1;
        float frontier_phi_24_47_ladder_2;
        if ((_2299 > _2303) || ((_2299 < _2301) || ((_2298 > _2303) || ((_2298 < _2301) || ((_2297 < _2301) || (_2297 > _2303))))))
        {
            frontier_phi_24_47_ladder = 0.0;
            frontier_phi_24_47_ladder_1 = 0.0;
            frontier_phi_24_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2332 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2299, cbModelParam._m0[17u].z, fma(_2298, cbModelParam._m0[17u].y, _2297 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2299, cbModelParam._m0[18u].z, fma(_2298, cbModelParam._m0[18u].y, _2297 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2299, cbModelParam._m0[19u].z, fma(_2298, cbModelParam._m0[19u].y, _2297 * cbModelParam._m0[19u].x))), _1441);
            frontier_phi_24_47_ladder = _2332.z * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_1 = _2332.y * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_2 = _2332.x * cbModelParam._m0[1u].z;
        }
        _1533 = frontier_phi_24_47_ladder_2;
        _1535 = frontier_phi_24_47_ladder_1;
        _1537 = frontier_phi_24_47_ladder;
    }
    else
    {
        vec4 _1517 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_538, _539, _540), _1441);
        _1533 = _1517.x * cbModelParam._m0[1u].z;
        _1535 = _1517.y * cbModelParam._m0[1u].z;
        _1537 = _1517.z * cbModelParam._m0[1u].z;
    }
    float _1549 = ((((1.0 - _565) * ((_553 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_565 * _553)) * _530;
    float _1550 = _1549 * ((cbModelParam._m0[1u].w * (_1533 - _1432)) + _1432);
    float _1551 = _1549 * ((cbModelParam._m0[1u].w * (_1535 - _1434)) + _1434);
    float _1552 = _1549 * ((cbModelParam._m0[1u].w * (_1537 - _1436)) + _1436);
    float _1555 = fma(_1552, cbSceneParam._m0[89u].z, fma(_1551, cbSceneParam._m0[89u].y, _1550 * cbSceneParam._m0[89u].x));
    float _1558 = fma(_1552, cbSceneParam._m0[90u].z, fma(_1551, cbSceneParam._m0[90u].y, _1550 * cbSceneParam._m0[90u].x));
    float _1561 = fma(_1552, cbSceneParam._m0[91u].z, fma(_1551, cbSceneParam._m0[91u].y, _1550 * cbSceneParam._m0[91u].x));
    float _1580 = (cbSceneParam._m0[88u].y * (1.0 - _463)) + cbSceneParam._m0[88u].z;
    float _2964 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
    vec4 _1584 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_492, _493), (isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0))) * 5.0);
    float _1600 = 1.0 - _1584.w;
    vec4 _1608 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_492, _493));
    float _1610 = _1608.w;
    float _1622 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1610);
    float _1623 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1610);
    float _1624 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1610);
    uint _1629 = floatBitsToUint(cbInstanceData._m0[_397]).x * 14u;
    float _1636 = (cbLight._m0[_1629 + 13u].x * (_530 + (-1.0))) + 1.0;
    uint _1637 = _1629 + 4u;
    float _1647 = isnan(1.0) ? _1636 : (isnan(_1636) ? 1.0 : min(_1636, 1.0));
    float _1656 = dot(vec3(cbLight._m0[_1629].xyz), vec3(_459, _460, _461));
    float _2980 = isnan(0.0) ? _1656 : (isnan(_1656) ? 0.0 : max(_1656, 0.0));
    float _1660 = (isnan(1.0) ? _2980 : (isnan(_2980) ? 1.0 : min(_2980, 1.0))) * 0.3183098733425140380859375;
    uint _1666 = _1629 + 8u;
    float _1679 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1629].w)) * _463) * 0.949999988079071044921875);
    float _1680 = _1679 * _1679;
    float _1681 = cbLight._m0[_1629].x + _484;
    float _1682 = cbLight._m0[_1629].y + _485;
    float _1683 = cbLight._m0[_1629].z + _486;
    float _1687 = inversesqrt(dot(vec3(_1681, _1682, _1683), vec3(_1681, _1682, _1683)));
    float _1688 = _1687 * _1681;
    float _1689 = _1687 * _1682;
    float _1690 = _1687 * _1683;
    float _1691 = dot(vec3(_459, _460, _461), vec3(cbLight._m0[_1629].xyz));
    float _2991 = isnan(0.0) ? _1691 : (isnan(_1691) ? 0.0 : max(_1691, 0.0));
    float _1694 = isnan(1.0) ? _2991 : (isnan(_2991) ? 1.0 : min(_2991, 1.0));
    float _3002 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _1695 = isnan(1.0) ? _3002 : (isnan(_3002) ? 1.0 : min(_3002, 1.0));
    float _1696 = dot(vec3(_459, _460, _461), vec3(_1688, _1689, _1690));
    float _3013 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
    float _1699 = isnan(1.0) ? _3013 : (isnan(_3013) ? 1.0 : min(_3013, 1.0));
    float _1700 = dot(vec3(cbLight._m0[_1629].xyz), vec3(_1688, _1689, _1690));
    float _3024 = isnan(0.0) ? _1700 : (isnan(_1700) ? 0.0 : max(_1700, 0.0));
    float _1704 = _1680 * _1680;
    float _1708 = ((_1699 * _1699) * (_1704 + (-1.0))) + 1.0;
    float _1718 = (exp2(log2(1.0 - (isnan(1.0) ? _3024 : (isnan(_3024) ? 1.0 : min(_3024, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1719 = 1.0 - _1680;
    float _1730 = (0.5 / (((_1695 * ((_1694 * _1719) + _1680)) + 9.9999999392252902907785028219223e-09) + (((_1695 * _1719) + _1680) * _1694))) * _1694;
    float _3035 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
    float _1732 = (isnan(1.0) ? _3035 : (isnan(_3035) ? 1.0 : min(_3035, 1.0))) * (_1704 / ((_1708 * _1708) * 3.141590118408203125));
    float _1767 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _1768 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _1769 = cbSceneParam._m0[86u].x * ((_492 / cbSceneParam._m0[86u].x) + ((4.5 / (_479 + 10.0)) * dot(vec3(_459, _460, _461), vec3(_183, _184, _185))));
    float _1770 = isnan(_1767) ? _1769 : (isnan(_1769) ? _1767 : min(_1769, _1767));
    float _1771 = isnan(_1768) ? _493 : (isnan(_493) ? _1768 : min(_493, _1768));
    vec4 _1773 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1770, _1771), 0.0);
    float _1775 = _1773.x;
    bool _1795 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _1775)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1775))) > _479;
    float _1796 = _1795 ? _1770 : _492;
    float _1797 = _1795 ? _1771 : _493;
    vec4 _1799 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_1796, _1797));
    vec4 _1804 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1796, _1797));
    float _1806 = _1804.x;
    bool _1811 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _1820 = (-0.0) - cbSceneParam._m0[2u].z;
    float _1826 = (_1811 ? (_1820 / (cbSceneParam._m0[2u].x - _1806)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1806))) - _479;
    float _1828 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _1829 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _1830 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _1836 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _1840 = (isnan(_1826) ? 0.0 : (isnan(0.0) ? _1826 : max(0.0, _1826))) * (-1.44269502162933349609375);
    float _3061 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _3072 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _3083 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _1954;
    float _1955;
    float _1956;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _1874 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1796, _1797), 0.0);
        float _1876 = _1874.x;
        float _1882 = (_1811 ? (_1820 / (cbSceneParam._m0[2u].x - _1876)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1876))) - _479;
        uint _1888 = floatBitsToUint(cbInstanceData._m0[_397]).x * 14u;
        uint _1894 = _1888 + 4u;
        float _1903 = dot(vec3(cbLight._m0[_1888].xyz), vec3(_204, _205, _206));
        float _1911 = dot(vec3((-0.0) - _484, (-0.0) - _485, (-0.0) - _486), vec3((-0.0) - _204, (-0.0) - _205, (-0.0) - _206));
        float _1916 = ((isnan(0.0) ? _1911 : (isnan(_1911) ? 0.0 : max(_1911, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _1903 : (isnan(_1903) ? 0.001000000047497451305389404296875 : max(_1903, 0.001000000047497451305389404296875)))) + 1.0;
        float _1918 = (-0.0) - ((isnan(_1882) ? 0.0 : (isnan(0.0) ? _1882 : max(0.0, _1882))) * _1916);
        _1954 = _1836 ? 0.0 : ((((_444 * cbMtdParam._m0[13u].w) * cbLight._m0[_1894].x) / ((_1916 * _1828) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1828 * 1.44269502162933349609375) * _1918)));
        _1955 = _1836 ? 0.0 : ((((_444 * cbMtdParam._m0[14u].x) * cbLight._m0[_1894].y) / ((_1916 * _1829) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1829 * 1.44269502162933349609375) * _1918)));
        _1956 = _1836 ? 0.0 : ((((_444 * cbMtdParam._m0[14u].y) * cbLight._m0[_1894].z) / ((_1916 * _1830) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1830 * 1.44269502162933349609375) * _1918)));
    }
    else
    {
        _1954 = 0.0;
        _1955 = 0.0;
        _1956 = 0.0;
    }
    float _1973 = 0.959999978542327880859375 - (exp2(log2(1.0 - _545) * 5.0) * 0.959999978542327880859375);
    float _1974 = (_1954 + ((exp2(_1840 * (_1836 ? 0.0 : _1828)) * _1799.x) * cbSceneParam._m0[72u].w)) * _1973;
    float _1975 = (_1955 + ((exp2(_1840 * (_1836 ? 0.0 : _1829)) * _1799.y) * cbSceneParam._m0[72u].w)) * _1973;
    float _1976 = (_1956 + ((exp2(_1840 * (_1836 ? 0.0 : _1830)) * _1799.z) * cbSceneParam._m0[72u].w)) * _1973;
    float _1999 = _492 / cbSceneParam._m0[86u].x;
    float _2000 = _493 / cbSceneParam._m0[86u].y;
    vec4 _2014 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1999, _2000, (log2((isnan(cbSceneParam._m0[77u].w) ? _479 : (isnan(_479) ? cbSceneParam._m0[77u].w : min(_479, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2016 = _2014.x;
    float _2017 = _2014.y;
    float _2018 = _2014.z;
    float _2019 = _2014.w;
    float _2075;
    float _2077;
    float _2079;
    float _2081;
    if (_479 > cbSceneParam._m0[78u].w)
    {
        float _2040 = isnan(_479) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _479 : min(cbSceneParam._m0[80u].w, _479));
        float _2041 = _2040 / _479;
        float _2052 = _2041 * _262;
        float _2053 = _2041 * _410;
        float _2054 = _2041 * _264;
        float _2056 = (cbSceneParam._m0[77u].w * _2053) / _2040;
        float _2057 = _2056 + cbSceneParam._m0[79u].w;
        float _2058 = cbSceneParam._m0[79u].w + _2053;
        float _2064 = sqrt(((_2052 * _2052) + (_2053 * _2053)) + (_2054 * _2054));
        float _2067 = (1.0 - (cbSceneParam._m0[77u].w / _2040)) * _2064;
        float _2073 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2074 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2252;
        if (abs((_2053 - _2056) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2252 = ((((_2057 > 0.0) ? exp2(_2073 * _2057) : (2.0 - exp2(_2074 * _2057))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2067;
        }
        else
        {
            float _2200 = 1.0 / cbSceneParam._m0[80u].x;
            float _2201 = isnan(_2058) ? _2057 : (isnan(_2057) ? _2058 : max(_2057, _2058));
            float _2202 = isnan(_2058) ? _2057 : (isnan(_2057) ? _2058 : min(_2057, _2058));
            float _2211 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : min(_2201, 0.0));
            float _2212 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : min(_2202, 0.0));
            _2252 = ((abs(_2064 / _2053) * cbSceneParam._m0[80u].y) * ((((_2211 - _2212) * 2.0) - ((exp2(_2073 * (isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0)))) - exp2(_2073 * (isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0))))) * _2200)) - ((exp2(_2074 * _2211) - exp2(_2074 * _2212)) * _2200))) + (_2067 * cbSceneParam._m0[80u].z);
        }
        vec4 _2254 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1999, _2000, 1.0), 0.0);
        float _2263 = exp2((_2252 * (-1.44269502162933349609375)) * (1.0 - _2254.w));
        float _2264 = log2(_2263);
        float _2280 = log2(_2019);
        _2075 = (exp2(_2280 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2264 * cbSceneParam._m0[78u].x)) * _2254.x) / cbSceneParam._m0[78u].x)) + _2016;
        _2077 = (exp2(_2280 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2264 * cbSceneParam._m0[78u].y)) * _2254.y) / cbSceneParam._m0[78u].y)) + _2017;
        _2079 = (exp2(_2280 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2264 * cbSceneParam._m0[78u].z)) * _2254.z) / cbSceneParam._m0[78u].z)) + _2018;
        _2081 = _2263 * _2019;
    }
    else
    {
        _2075 = _2016;
        _2077 = _2017;
        _2079 = _2018;
        _2081 = _2019;
    }
    bool _2093 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2094 = log2(_2081);
    float _2101 = exp2(_2094 * cbSceneParam._m0[78u].x) * ((_1974 + (((((_1549 * _1584.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1555 : (isnan(_1555) ? 0.0 : max(_1555, 0.0))) * _1340) * _1600)) + ((((cbLight._m0[_1666].x * _1622) * _1718) * _1732) * _1647)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3061 : (isnan(_3061) ? 1.0 : min(_3061, 1.0))) * ((((cbLight._m0[_1637].x * _1622) * _1647) * _1660) + ((isnan(0.0) ? _1261 : (isnan(_1261) ? 0.0 : max(_1261, 0.0))) * _530))) - _1974) * cbMtdParam._m0[12u].x));
    float _2102 = exp2(_2094 * cbSceneParam._m0[78u].y) * ((_1975 + (((((_1549 * _1584.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1558 : (isnan(_1558) ? 0.0 : max(_1558, 0.0))) * _1340) * _1600)) + ((((cbLight._m0[_1666].y * _1623) * _1718) * _1732) * _1647)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3072 : (isnan(_3072) ? 1.0 : min(_3072, 1.0))) * ((((cbLight._m0[_1637].y * _1623) * _1647) * _1660) + ((isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0))) * _530))) - _1975) * cbMtdParam._m0[12u].x));
    float _2103 = exp2(_2094 * cbSceneParam._m0[78u].z) * ((_1976 + (((((_1549 * _1584.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1561 : (isnan(_1561) ? 0.0 : max(_1561, 0.0))) * _1340) * _1600)) + ((((cbLight._m0[_1666].z * _1624) * _1718) * _1732) * _1647)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3083 : (isnan(_3083) ? 1.0 : min(_3083, 1.0))) * ((((cbLight._m0[_1637].z * _1624) * _1647) * _1660) + ((isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0))) * _530))) - _1976) * cbMtdParam._m0[12u].x));
    vec4 _2111 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_492, _493));
    float _2113 = _2111.x;
    float _2134 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2113)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2113))) - _479) * 3.0;
    float _3149 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0));
    float _2136 = (cbInstanceData._m0[_338 + 6u].w * (isnan(1.0) ? _2507 : (isnan(_2507) ? 1.0 : min(_2507, 1.0)))) * (isnan(1.0) ? _3149 : (isnan(_3149) ? 1.0 : min(_3149, 1.0)));
    float _2145 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2145 * (_2093 ? _2101 : (_2101 + (cbSceneParam._m0[72u].w * _2075)));
    SV_Target.y = _2145 * (_2093 ? _2102 : (_2102 + (cbSceneParam._m0[72u].w * _2077)));
    SV_Target.z = _2145 * (_2093 ? _2103 : (_2103 + (cbSceneParam._m0[72u].w * _2079)));
    SV_Target.w = _2136;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2136;
}


