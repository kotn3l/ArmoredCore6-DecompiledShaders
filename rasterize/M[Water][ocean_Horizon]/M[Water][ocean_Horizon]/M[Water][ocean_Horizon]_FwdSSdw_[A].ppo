#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _951;
float _2506;
float _2507;
float _2508;
float _2509;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _179 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _180 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _181 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _186 = inversesqrt(dot(vec3(_179, _180, _181), vec3(_179, _180, _181)));
    float _187 = _186 * _179;
    float _188 = _186 * _180;
    float _189 = _186 * _181;
    float _193 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _194 = _193 * NORMAL.x;
    float _195 = _193 * NORMAL.y;
    float _196 = _193 * NORMAL.z;
    float _200 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _208;
    float _209;
    float _210;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _208 = (-0.0) - _194;
        _209 = (-0.0) - _195;
        _210 = (-0.0) - _196;
    }
    else
    {
        _208 = _194;
        _209 = _195;
        _210 = _196;
    }
    float _256 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _266 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _256);
    float _267 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _256);
    float _268 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _256);
    uvec4 _279 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _282 = _267 * 100.0;
    float _2518 = isnan(0.0) ? _282 : (isnan(_282) ? 0.0 : max(_282, 0.0));
    float _290 = cbMtdParam._m0[11u].y * _267;
    float _2529 = isnan(0.0) ? _290 : (isnan(_290) ? 0.0 : max(_290, 0.0));
    float _294 = exp2(log2(isnan(1.0) ? _2529 : (isnan(_2529) ? 1.0 : min(_2529, 1.0))) * cbMtdParam._m0[11u].z);
    float _2540 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
    float _301 = cbMtdParam._m0[12u].z * _267;
    float _2551 = isnan(0.0) ? _301 : (isnan(_301) ? 0.0 : max(_301, 0.0));
    float _305 = exp2(log2(isnan(1.0) ? _2551 : (isnan(_2551) ? 1.0 : min(_2551, 1.0))) * cbMtdParam._m0[11u].w);
    float _2562 = isnan(0.0) ? _305 : (isnan(_305) ? 0.0 : max(_305, 0.0));
    float _306 = isnan(1.0) ? _2562 : (isnan(_2562) ? 1.0 : min(_2562, 1.0));
    float _309 = cbMtdParam._m0[12u].y * _267;
    float _2573 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _313 = exp2(log2(isnan(1.0) ? _2573 : (isnan(_2573) ? 1.0 : min(_2573, 1.0))) * cbMtdParam._m0[11u].x);
    float _2584 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _318 = (((isnan(1.0) ? _2584 : (isnan(_2584) ? 1.0 : min(_2584, 1.0))) - _306) * 0.5) + _306;
    float _321 = (((isnan(1.0) ? _2540 : (isnan(_2540) ? 1.0 : min(_2540, 1.0))) - _318) * 0.5) + _318;
    float _2595 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _323 = (_279.y != 0u) ? (isnan(1.0) ? _2595 : (isnan(_2595) ? 1.0 : min(_2595, 1.0))) : (isnan(1.0) ? _2518 : (isnan(_2518) ? 1.0 : min(_2518, 1.0)));
    bool _338 = _279.x != 0u;
    uint _342 = uint(roundEven(NORMAL.w)) * 13u;
    float _347 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_342 + 1u].w;
    float _348 = _266 / _267;
    float _350 = (-0.0) - (_268 / _267);
    vec4 _371 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_338 ? (_347 * _348) : _348) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_338 ? (_347 * _350) : _350) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _379 = (_371.x * 2.0) + (-1.0);
    float _381 = (_371.y * 2.0) + (-1.0);
    float _382 = dot(vec2(_379, _381), vec2(_379, _381));
    float _2606 = isnan(0.0) ? _382 : (isnan(_382) ? 0.0 : max(_382, 0.0));
    float _387 = sqrt(1.0 - (isnan(1.0) ? _2606 : (isnan(_2606) ? 1.0 : min(_2606, 1.0))));
    uint _401 = _342 + 5u;
    float _413 = (-0.0) - _266;
    float _414 = (-0.0) - _267;
    float _415 = (-0.0) - _268;
    float _419 = inversesqrt(dot(vec3(_413, _414, _415), vec3(_413, _414, _415)));
    float _423 = dot(vec3(_419 * _413, _419 * _414, _419 * _415), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_401]).x * 14u].xyz));
    float _434 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_423 * 0.60000002384185791015625)) * 1.5);
    float _448 = ((((0.959999978542327880859375 / exp2(log2((_423 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _434) * 0.5) + _434) * 0.079577468335628509521484375;
    float _452 = fma(_387, _208, fma(_381, _200 * TANGENT.x, _379 * _187));
    float _455 = fma(_387, _209, fma(_381, _200 * TANGENT.y, _379 * _188));
    float _458 = fma(_387, _210, fma(_381, _200 * TANGENT.z, _379 * _189));
    float _462 = inversesqrt(dot(vec3(_452, _455, _458), vec3(_452, _455, _458)));
    float _463 = _462 * _452;
    float _464 = _462 * _455;
    float _465 = _462 * _458;
    float _2617 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _2628 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _467 = isnan(1.0) ? _2628 : (isnan(_2628) ? 1.0 : min(_2628, 1.0));
    float _2639 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2650 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2661 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _483 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _487 = inversesqrt(dot(vec3(_266, _267, _268), vec3(_266, _267, _268)));
    float _488 = _266 * _487;
    float _489 = _267 * _487;
    float _490 = _268 * _487;
    vec4 _495 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _497 = _495.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _631 = sqrt(((_266 * _266) + (_267 * _267)) + (_268 * _268));
        float _637 = (cbMatDynParam._m0[5u].x * _631) + cbMatDynParam._m0[5u].y;
        float _2672 = isnan(0.0) ? _637 : (isnan(_637) ? 0.0 : max(_637, 0.0));
        float _638 = isnan(1.0) ? _2672 : (isnan(_2672) ? 1.0 : min(_2672, 1.0));
        float _642 = (cbMatDynParam._m0[5u].z * _631) + cbMatDynParam._m0[5u].w;
        float _2683 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2683 : (isnan(_2683) ? 1.0 : min(_2683, 1.0))) - _638)) + _638) < ((_497 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _509 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _510 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _523 = _342 + 9u;
    uint _524 = _523 + uint(cbMatDynParam._m0[0u].w);
    float _530 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2639 : (isnan(_2639) ? 1.0 : min(_2639, 1.0)))) * cbInstanceData._m0[_524].x;
    float _531 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2650 : (isnan(_2650) ? 1.0 : min(_2650, 1.0)))) * cbInstanceData._m0[_524].y;
    float _532 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2661 : (isnan(_2661) ? 1.0 : min(_2661, 1.0)))) * cbInstanceData._m0[_524].z;
    float _2694 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _533 = isnan(1.0) ? _2694 : (isnan(_2694) ? 1.0 : min(_2694, 1.0));
    float _2705 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _534 = isnan(1.0) ? _2705 : (isnan(_2705) ? 1.0 : min(_2705, 1.0));
    float _2716 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _535 = isnan(1.0) ? _2716 : (isnan(_2716) ? 1.0 : min(_2716, 1.0));
    vec4 _544 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _509, cbSceneParam._m0[86u].y * _510));
    float _547 = _544.x * TEXCOORD.z;
    float _548 = dot(vec3(_463, _464, _465), vec3(_488, _489, _490));
    float _551 = _548 * 2.0;
    float _555 = (_551 * _463) - _488;
    float _556 = (_551 * _464) - _489;
    float _557 = (_551 * _465) - _490;
    float _561 = abs(dot(vec3(_488, _489, _490), vec3(_463, _464, _465)));
    float _2727 = isnan(0.0) ? _561 : (isnan(_561) ? 0.0 : max(_561, 0.0));
    float _562 = isnan(1.0) ? _2727 : (isnan(_2727) ? 1.0 : min(_2727, 1.0));
    float _570 = sqrt(_467);
    float _582 = exp2((_570 * 5.0) * log2(1.0 - (_562 * 0.999000012874603271484375))) / (4.0 - (_570 * 3.0));
    float _612 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _616 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _620 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _950;
    float _952;
    float _953;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    float _965;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _676 = fma(_620, cbModelParam._m0[26u].z, fma(_616, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _612));
        float _680 = fma(_620, cbModelParam._m0[27u].z, fma(_616, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _612));
        float _684 = fma(_620, cbModelParam._m0[28u].z, fma(_616, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _612));
        float _708 = _612 + _463;
        float _709 = _616 + _464;
        float _710 = _620 + _465;
        float _720 = fma(_710, cbModelParam._m0[26u].z, fma(_709, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _708)) - _676;
        float _721 = fma(_710, cbModelParam._m0[27u].z, fma(_709, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _708)) - _680;
        float _722 = fma(_710, cbModelParam._m0[28u].z, fma(_709, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _708)) - _684;
        float _726 = inversesqrt(dot(vec3(_720, _721, _722), vec3(_720, _721, _722)));
        float _739 = ((_726 * _720) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_676 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _740 = ((_726 * _721) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_680 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _741 = ((_726 * _722) / cbModelParam._m0[34u].z) + ((((((_684 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _744 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_739, _740, _741), 0.0);
        vec4 _751 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_739, _740, _741), 0.0);
        vec4 _758 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_739, _740, _741), 0.0);
        vec4 _765 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_739, _740, _741), 0.0);
        float _778 = exp2((_744.w + (-0.5)) * 20.0) * 2.0;
        float _779 = _778 * (_744.x + (-0.5));
        float _780 = _778 * (_744.y + (-0.5));
        float _781 = _778 * (_744.z + (-0.5));
        float _788 = exp2((_751.w + (-0.5)) * 20.0) * 2.0;
        float _789 = _788 * (_751.x + (-0.5));
        float _790 = _788 * (_751.y + (-0.5));
        float _791 = _788 * (_751.z + (-0.5));
        float _798 = exp2((_758.w + (-0.5)) * 20.0) * 2.0;
        float _799 = _798 * (_758.x + (-0.5));
        float _800 = _798 * (_758.y + (-0.5));
        float _801 = _798 * (_758.z + (-0.5));
        float _808 = exp2((_765.w + (-0.5)) * 20.0) * 2.0;
        float _809 = _808 * (_765.x + (-0.5));
        float _810 = _808 * (_765.y + (-0.5));
        float _811 = _808 * (_765.z + (-0.5));
        float _812 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
        float _813 = isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0));
        float _814 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
        float _815 = _779 * 0.5;
        float _816 = _789 * 0.5;
        float _817 = _799 * 0.5;
        float _818 = dot(vec3(_815, _816, _817), vec3(_815, _816, _817));
        float _823 = (_818 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_818);
        float _832 = (dot(vec3(_463, _464, _465), vec3(_823 * _815, _823 * _816, _823 * _817)) + 1.0) * 0.5;
        float _2753 = isnan(0.0) ? _832 : (isnan(_832) ? 0.0 : max(_832, 0.0));
        float _842 = sqrt(((_816 * _816) + (_815 * _815)) + (_817 * _817)) / (_812 + 9.9999997473787516355514526367188e-06);
        float _2764 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _843 = isnan(1.0) ? _2764 : (isnan(_2764) ? 1.0 : min(_2764, 1.0));
        float _844 = _843 * 2.0;
        float _848 = (1.0 - _843) / (_843 + 1.0);
        float _2775 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        float _849 = isnan(1.0) ? _2775 : (isnan(_2775) ? 1.0 : min(_2775, 1.0));
        float _858 = ((((1.0 - _849) * (_844 + 2.0)) * exp2(log2(isnan(1.0) ? _2753 : (isnan(_2753) ? 1.0 : min(_2753, 1.0))) * (_844 + 1.0))) + _849) * _812;
        float _859 = _780 * 0.5;
        float _860 = _790 * 0.5;
        float _861 = _800 * 0.5;
        float _862 = dot(vec3(_859, _860, _861), vec3(_859, _860, _861));
        float _867 = (_862 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_862);
        float _875 = (dot(vec3(_463, _464, _465), vec3(_867 * _859, _867 * _860, _867 * _861)) + 1.0) * 0.5;
        float _2786 = isnan(0.0) ? _875 : (isnan(_875) ? 0.0 : max(_875, 0.0));
        float _884 = sqrt(((_860 * _860) + (_859 * _859)) + (_861 * _861)) / (_813 + 9.9999997473787516355514526367188e-06);
        float _2797 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _885 = isnan(1.0) ? _2797 : (isnan(_2797) ? 1.0 : min(_2797, 1.0));
        float _886 = _885 * 2.0;
        float _890 = (1.0 - _885) / (_885 + 1.0);
        float _2808 = isnan(0.0) ? _890 : (isnan(_890) ? 0.0 : max(_890, 0.0));
        float _891 = isnan(1.0) ? _2808 : (isnan(_2808) ? 1.0 : min(_2808, 1.0));
        float _900 = ((((1.0 - _891) * (_886 + 2.0)) * exp2(log2(isnan(1.0) ? _2786 : (isnan(_2786) ? 1.0 : min(_2786, 1.0))) * (_886 + 1.0))) + _891) * _813;
        float _901 = _781 * 0.5;
        float _902 = _791 * 0.5;
        float _903 = _801 * 0.5;
        float _904 = dot(vec3(_901, _902, _903), vec3(_901, _902, _903));
        float _909 = (_904 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_904);
        float _917 = (dot(vec3(_463, _464, _465), vec3(_909 * _901, _909 * _902, _909 * _903)) + 1.0) * 0.5;
        float _2819 = isnan(0.0) ? _917 : (isnan(_917) ? 0.0 : max(_917, 0.0));
        float _926 = sqrt(((_902 * _902) + (_901 * _901)) + (_903 * _903)) / (_814 + 9.9999997473787516355514526367188e-06);
        float _2830 = isnan(0.0) ? _926 : (isnan(_926) ? 0.0 : max(_926, 0.0));
        float _927 = isnan(1.0) ? _2830 : (isnan(_2830) ? 1.0 : min(_2830, 1.0));
        float _928 = _927 * 2.0;
        float _932 = (1.0 - _927) / (_927 + 1.0);
        float _2841 = isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0));
        float _933 = isnan(1.0) ? _2841 : (isnan(_2841) ? 1.0 : min(_2841, 1.0));
        float _942 = ((((1.0 - _933) * (_928 + 2.0)) * exp2(log2(isnan(1.0) ? _2819 : (isnan(_2819) ? 1.0 : min(_2819, 1.0))) * (_928 + 1.0))) + _933) * _814;
        _950 = _781;
        _952 = _780;
        _953 = _779;
        _954 = _791;
        _955 = _790;
        _956 = _789;
        _957 = _801;
        _958 = _800;
        _959 = _799;
        _960 = _814;
        _961 = _813;
        _962 = _812;
        _963 = cbModelParam._m0[36u].z * (isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0)));
        _964 = cbModelParam._m0[36u].z * (isnan(0.0) ? _900 : (isnan(_900) ? 0.0 : max(_900, 0.0)));
        _965 = cbModelParam._m0[36u].z * (isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0)));
    }
    else
    {
        _950 = _951;
        _952 = _951;
        _953 = _951;
        _954 = _951;
        _955 = _951;
        _956 = _951;
        _957 = _951;
        _958 = _951;
        _959 = _951;
        _960 = _951;
        _961 = _951;
        _962 = _951;
        _963 = 0.0;
        _964 = 0.0;
        _965 = 0.0;
    }
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _994 = fma(_620, cbModelParam._m0[30u].z, fma(_616, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _612));
        float _998 = fma(_620, cbModelParam._m0[31u].z, fma(_616, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _612));
        float _1002 = fma(_620, cbModelParam._m0[32u].z, fma(_616, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _612));
        float _1025 = _612 + _463;
        float _1026 = _616 + _464;
        float _1027 = _620 + _465;
        float _1037 = fma(_1027, cbModelParam._m0[30u].z, fma(_1026, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1025)) - _994;
        float _1038 = fma(_1027, cbModelParam._m0[31u].z, fma(_1026, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1025)) - _998;
        float _1039 = fma(_1027, cbModelParam._m0[32u].z, fma(_1026, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1025)) - _1002;
        float _1043 = inversesqrt(dot(vec3(_1037, _1038, _1039), vec3(_1037, _1038, _1039)));
        float _1056 = ((_1043 * _1037) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_994 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1057 = ((_1043 * _1038) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_998 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1058 = ((_1043 * _1039) / cbModelParam._m0[35u].z) + ((((((_1002 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1060 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1056, _1057, _1058), 0.0);
        vec4 _1067 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1056, _1057, _1058), 0.0);
        vec4 _1074 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1056, _1057, _1058), 0.0);
        vec4 _1081 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1056, _1057, _1058), 0.0);
        float _1093 = exp2((_1060.w + (-0.5)) * 20.0) * 2.0;
        float _1094 = _1093 * (_1060.x + (-0.5));
        float _1095 = _1093 * (_1060.y + (-0.5));
        float _1096 = _1093 * (_1060.z + (-0.5));
        float _1103 = exp2((_1067.w + (-0.5)) * 20.0) * 2.0;
        float _1104 = _1103 * (_1067.x + (-0.5));
        float _1105 = _1103 * (_1067.y + (-0.5));
        float _1106 = _1103 * (_1067.z + (-0.5));
        float _1113 = exp2((_1074.w + (-0.5)) * 20.0) * 2.0;
        float _1114 = _1113 * (_1074.x + (-0.5));
        float _1115 = _1113 * (_1074.y + (-0.5));
        float _1116 = _1113 * (_1074.z + (-0.5));
        float _1123 = exp2((_1081.w + (-0.5)) * 20.0) * 2.0;
        float _1124 = _1123 * (_1081.x + (-0.5));
        float _1125 = _1123 * (_1081.y + (-0.5));
        float _1126 = _1123 * (_1081.z + (-0.5));
        float _1127 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1128 = isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0));
        float _1129 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1130 = _1094 * 0.5;
        float _1131 = _1104 * 0.5;
        float _1132 = _1114 * 0.5;
        float _1133 = dot(vec3(_1130, _1131, _1132), vec3(_1130, _1131, _1132));
        float _1138 = (_1133 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1133);
        float _1146 = (dot(vec3(_463, _464, _465), vec3(_1138 * _1130, _1138 * _1131, _1138 * _1132)) + 1.0) * 0.5;
        float _2882 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1155 = sqrt(((_1131 * _1131) + (_1130 * _1130)) + (_1132 * _1132)) / (_1127 + 9.9999997473787516355514526367188e-06);
        float _2893 = isnan(0.0) ? _1155 : (isnan(_1155) ? 0.0 : max(_1155, 0.0));
        float _1156 = isnan(1.0) ? _2893 : (isnan(_2893) ? 1.0 : min(_2893, 1.0));
        float _1157 = _1156 * 2.0;
        float _1161 = (1.0 - _1156) / (_1156 + 1.0);
        float _2904 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1162 = isnan(1.0) ? _2904 : (isnan(_2904) ? 1.0 : min(_2904, 1.0));
        float _1171 = ((((1.0 - _1162) * (_1157 + 2.0)) * exp2(log2(isnan(1.0) ? _2882 : (isnan(_2882) ? 1.0 : min(_2882, 1.0))) * (_1157 + 1.0))) + _1162) * _1127;
        float _1172 = _1095 * 0.5;
        float _1173 = _1105 * 0.5;
        float _1174 = _1115 * 0.5;
        float _1175 = dot(vec3(_1172, _1173, _1174), vec3(_1172, _1173, _1174));
        float _1180 = (_1175 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1175);
        float _1188 = (dot(vec3(_463, _464, _465), vec3(_1180 * _1172, _1180 * _1173, _1180 * _1174)) + 1.0) * 0.5;
        float _2915 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1197 = sqrt(((_1173 * _1173) + (_1172 * _1172)) + (_1174 * _1174)) / (_1128 + 9.9999997473787516355514526367188e-06);
        float _2926 = isnan(0.0) ? _1197 : (isnan(_1197) ? 0.0 : max(_1197, 0.0));
        float _1198 = isnan(1.0) ? _2926 : (isnan(_2926) ? 1.0 : min(_2926, 1.0));
        float _1199 = _1198 * 2.0;
        float _1203 = (1.0 - _1198) / (_1198 + 1.0);
        float _2937 = isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0));
        float _1204 = isnan(1.0) ? _2937 : (isnan(_2937) ? 1.0 : min(_2937, 1.0));
        float _1213 = ((((1.0 - _1204) * (_1199 + 2.0)) * exp2(log2(isnan(1.0) ? _2915 : (isnan(_2915) ? 1.0 : min(_2915, 1.0))) * (_1199 + 1.0))) + _1204) * _1128;
        float _1214 = _1096 * 0.5;
        float _1215 = _1106 * 0.5;
        float _1216 = _1116 * 0.5;
        float _1217 = dot(vec3(_1214, _1215, _1216), vec3(_1214, _1215, _1216));
        float _1222 = (_1217 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1217);
        float _1230 = (dot(vec3(_463, _464, _465), vec3(_1222 * _1214, _1222 * _1215, _1222 * _1216)) + 1.0) * 0.5;
        float _2948 = isnan(0.0) ? _1230 : (isnan(_1230) ? 0.0 : max(_1230, 0.0));
        float _1239 = sqrt(((_1215 * _1215) + (_1214 * _1214)) + (_1216 * _1216)) / (_1129 + 9.9999997473787516355514526367188e-06);
        float _2959 = isnan(0.0) ? _1239 : (isnan(_1239) ? 0.0 : max(_1239, 0.0));
        float _1240 = isnan(1.0) ? _2959 : (isnan(_2959) ? 1.0 : min(_2959, 1.0));
        float _1241 = _1240 * 2.0;
        float _1245 = (1.0 - _1240) / (_1240 + 1.0);
        float _2970 = isnan(0.0) ? _1245 : (isnan(_1245) ? 0.0 : max(_1245, 0.0));
        float _1246 = isnan(1.0) ? _2970 : (isnan(_2970) ? 1.0 : min(_2970, 1.0));
        float _1255 = ((((1.0 - _1246) * (_1241 + 2.0)) * exp2(log2(isnan(1.0) ? _2948 : (isnan(_2948) ? 1.0 : min(_2948, 1.0))) * (_1241 + 1.0))) + _1246) * _1129;
        _1263 = _1096;
        _1264 = _1095;
        _1265 = _1094;
        _1266 = _1106;
        _1267 = _1105;
        _1268 = _1104;
        _1269 = _1116;
        _1270 = _1115;
        _1271 = _1114;
        _1272 = _1129;
        _1273 = _1128;
        _1274 = _1127;
        _1275 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0)));
        _1276 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1213 : (isnan(_1213) ? 0.0 : max(_1213, 0.0)));
        _1277 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1255 : (isnan(_1255) ? 0.0 : max(_1255, 0.0)));
    }
    else
    {
        _1263 = _951;
        _1264 = _951;
        _1265 = _951;
        _1266 = _951;
        _1267 = _951;
        _1268 = _951;
        _1269 = _951;
        _1270 = _951;
        _1271 = _951;
        _1272 = _951;
        _1273 = _951;
        _1274 = _951;
        _1275 = 0.0;
        _1276 = 0.0;
        _1277 = 0.0;
    }
    float _1287 = (cbModelParam._m0[1u].x * (_1275 - _963)) + _963;
    float _1288 = (cbModelParam._m0[1u].x * (_1276 - _964)) + _964;
    float _1289 = (cbModelParam._m0[1u].x * (_1277 - _965)) + _965;
    float _1310 = fma(_1289, cbSceneParam._m0[89u].z, fma(_1288, cbSceneParam._m0[89u].y, _1287 * cbSceneParam._m0[89u].x));
    float _1313 = fma(_1289, cbSceneParam._m0[90u].z, fma(_1288, cbSceneParam._m0[90u].y, _1287 * cbSceneParam._m0[90u].x));
    float _1316 = fma(_1289, cbSceneParam._m0[91u].z, fma(_1288, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1287));
    float _1331 = _555 * 0.5;
    float _1332 = _556 * 0.5;
    float _1333 = _557 * 0.5;
    float _1334 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_1265, _1268, _1271, _1274));
    float _1337 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_1264, _1267, _1270, _1273));
    float _1340 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_1263, _1266, _1269, _1272));
    float _1374;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1347 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_950, _954, _957, _960));
        float _1351 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_952, _955, _958, _961));
        float _1355 = dot(vec4(_1331, _1332, _1333, 1.0), vec4(_953, _956, _959, _962));
        float _1362 = dot(vec4(cbModelParam._m0[39u]), vec4(_1331, _1332, _1333, 1.0));
        _1374 = dot(vec3(isnan(0.0) ? _1355 : (isnan(_1355) ? 0.0 : max(_1355, 0.0)), isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0)), isnan(0.0) ? _1347 : (isnan(_1347) ? 0.0 : max(_1347, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1362) ? 0.0 : (isnan(0.0) ? _1362 : max(0.0, _1362))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1374 = 1.0;
    }
    float _1385;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1376 = dot(vec4(cbModelParam._m0[40u]), vec4(_1331, _1332, _1333, 1.0));
        _1385 = dot(vec3(isnan(0.0) ? _1334 : (isnan(_1334) ? 0.0 : max(_1334, 0.0)), isnan(0.0) ? _1337 : (isnan(_1337) ? 0.0 : max(_1337, 0.0)), isnan(0.0) ? _1340 : (isnan(_1340) ? 0.0 : max(_1340, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1376) ? 0.0 : (isnan(0.0) ? _1376 : max(0.0, _1376))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1385 = 1.0;
    }
    float _1389 = (_1385 * cbModelParam._m0[1u].x) + (_1374 * (1.0 - cbModelParam._m0[1u].x));
    float _1399 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _467);
    float _1400 = isnan(_1399) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1399 : min(cbModelParam._m0[25u].z, _1399));
    float _1481;
    float _1483;
    float _1485;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1448 = fma(_620, cbModelParam._m0[13u].z, fma(_616, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _612)) + cbModelParam._m0[13u].w;
        float _1452 = fma(_620, cbModelParam._m0[14u].z, fma(_616, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _612)) + cbModelParam._m0[14u].w;
        float _1456 = fma(_620, cbModelParam._m0[15u].z, fma(_616, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _612)) + cbModelParam._m0[15u].w;
        float _1459 = fma(_557, cbModelParam._m0[13u].z, fma(_556, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _555));
        float _1462 = fma(_557, cbModelParam._m0[14u].z, fma(_556, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _555));
        float _1465 = fma(_557, cbModelParam._m0[15u].z, fma(_556, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _555));
        float _1493;
        if (_1459 > 0.0)
        {
            _1493 = abs((1.0 - _1448) / _1459);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1459 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1448 + 1.0) / _1459);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1493 = frontier_phi_19_17_ladder;
        }
        float _1911;
        if (_1462 > 0.0)
        {
            _1911 = abs((1.0 - _1452) / _1462);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1462 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1452 + 1.0) / _1462);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1911 = frontier_phi_28_24_ladder;
        }
        float _2212;
        if (_1465 > 0.0)
        {
            _2212 = abs((1.0 - _1456) / _1465);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1465 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1456 + 1.0) / _1465);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2212 = frontier_phi_40_35_ladder;
        }
        float _2214 = isnan(_1911) ? _1493 : (isnan(_1493) ? _1911 : min(_1493, _1911));
        float _2215 = isnan(_2212) ? _2214 : (isnan(_2214) ? _2212 : min(_2214, _2212));
        float _2219 = (_2215 * _1459) + _1448;
        float _2220 = (_2215 * _1462) + _1452;
        float _2221 = (_2215 * _1465) + _1456;
        float _2222 = _2215 * 9.9999997473787516355514526367188e-05;
        float _2223 = (-1.0) - _2222;
        float _2225 = _2222 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2221 > _2225) || ((_2221 < _2223) || ((_2220 > _2225) || ((_2220 < _2223) || ((_2219 < _2223) || (_2219 > _2225))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2314 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2221, cbModelParam._m0[9u].z, fma(_2220, cbModelParam._m0[9u].y, _2219 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2221, cbModelParam._m0[10u].z, fma(_2220, cbModelParam._m0[10u].y, _2219 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2221, cbModelParam._m0[11u].z, fma(_2220, cbModelParam._m0[11u].y, _2219 * cbModelParam._m0[11u].x))), _1400);
            frontier_phi_18_40_ladder = _2314.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2314.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2314.x * cbModelParam._m0[1u].y;
        }
        _1481 = frontier_phi_18_40_ladder_2;
        _1483 = frontier_phi_18_40_ladder_1;
        _1485 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1469 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_555, _556, _557), _1400);
        _1481 = _1469.x * cbModelParam._m0[1u].y;
        _1483 = _1469.y * cbModelParam._m0[1u].y;
        _1485 = _1469.z * cbModelParam._m0[1u].y;
    }
    float _1489 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _467);
    float _1490 = isnan(_1489) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1489 : min(cbModelParam._m0[25u].w, _1489));
    float _1582;
    float _1584;
    float _1586;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1546 = fma(_620, cbModelParam._m0[21u].z, fma(_616, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _612)) + cbModelParam._m0[21u].w;
        float _1550 = fma(_620, cbModelParam._m0[22u].z, fma(_616, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _612)) + cbModelParam._m0[22u].w;
        float _1554 = fma(_620, cbModelParam._m0[23u].z, fma(_616, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _612)) + cbModelParam._m0[23u].w;
        float _1557 = fma(_557, cbModelParam._m0[21u].z, fma(_556, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _555));
        float _1560 = fma(_557, cbModelParam._m0[22u].z, fma(_556, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _555));
        float _1563 = fma(_557, cbModelParam._m0[23u].z, fma(_556, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _555));
        float _1916;
        if (_1557 > 0.0)
        {
            _1916 = abs((1.0 - _1546) / _1557);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1557 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1546 + 1.0) / _1557);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1916 = frontier_phi_30_26_ladder;
        }
        float _2238;
        if (_1560 > 0.0)
        {
            _2238 = abs((1.0 - _1550) / _1560);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1560 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1550 + 1.0) / _1560);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2238 = frontier_phi_42_37_ladder;
        }
        float _2366;
        if (_1563 > 0.0)
        {
            _2366 = abs((1.0 - _1554) / _1563);
        }
        else
        {
            float frontier_phi_54_50_ladder;
            if (_1563 < 0.0)
            {
                frontier_phi_54_50_ladder = abs((_1554 + 1.0) / _1563);
            }
            else
            {
                frontier_phi_54_50_ladder = 5000.0;
            }
            _2366 = frontier_phi_54_50_ladder;
        }
        float _2368 = isnan(_2238) ? _1916 : (isnan(_1916) ? _2238 : min(_1916, _2238));
        float _2369 = isnan(_2366) ? _2368 : (isnan(_2368) ? _2366 : min(_2368, _2366));
        float _2373 = (_2369 * _1557) + _1546;
        float _2374 = (_2369 * _1560) + _1550;
        float _2375 = (_2369 * _1563) + _1554;
        float _2376 = _2369 * 9.9999997473787516355514526367188e-05;
        float _2377 = (-1.0) - _2376;
        float _2379 = _2376 + 1.0;
        float frontier_phi_27_54_ladder;
        float frontier_phi_27_54_ladder_1;
        float frontier_phi_27_54_ladder_2;
        if ((_2375 > _2379) || ((_2375 < _2377) || ((_2374 > _2379) || ((_2374 < _2377) || ((_2373 < _2377) || (_2373 > _2379))))))
        {
            frontier_phi_27_54_ladder = 0.0;
            frontier_phi_27_54_ladder_1 = 0.0;
            frontier_phi_27_54_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2417 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2375, cbModelParam._m0[17u].z, fma(_2374, cbModelParam._m0[17u].y, _2373 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2375, cbModelParam._m0[18u].z, fma(_2374, cbModelParam._m0[18u].y, _2373 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2375, cbModelParam._m0[19u].z, fma(_2374, cbModelParam._m0[19u].y, _2373 * cbModelParam._m0[19u].x))), _1490);
            frontier_phi_27_54_ladder = _2417.z * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_1 = _2417.y * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_2 = _2417.x * cbModelParam._m0[1u].z;
        }
        _1582 = frontier_phi_27_54_ladder_2;
        _1584 = frontier_phi_27_54_ladder_1;
        _1586 = frontier_phi_27_54_ladder;
    }
    else
    {
        vec4 _1566 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_555, _556, _557), _1490);
        _1582 = _1566.x * cbModelParam._m0[1u].z;
        _1584 = _1566.y * cbModelParam._m0[1u].z;
        _1586 = _1566.z * cbModelParam._m0[1u].z;
    }
    float _1598 = ((((1.0 - _582) * ((_570 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_582 * _570)) * _547;
    float _1599 = _1598 * ((cbModelParam._m0[1u].w * (_1582 - _1481)) + _1481);
    float _1600 = _1598 * ((cbModelParam._m0[1u].w * (_1584 - _1483)) + _1483);
    float _1601 = _1598 * ((cbModelParam._m0[1u].w * (_1586 - _1485)) + _1485);
    float _1604 = fma(_1601, cbSceneParam._m0[89u].z, fma(_1600, cbSceneParam._m0[89u].y, _1599 * cbSceneParam._m0[89u].x));
    float _1607 = fma(_1601, cbSceneParam._m0[90u].z, fma(_1600, cbSceneParam._m0[90u].y, _1599 * cbSceneParam._m0[90u].x));
    float _1610 = fma(_1601, cbSceneParam._m0[91u].z, fma(_1600, cbSceneParam._m0[91u].y, _1599 * cbSceneParam._m0[91u].x));
    float _1629 = (cbSceneParam._m0[88u].y * (1.0 - _467)) + cbSceneParam._m0[88u].z;
    float _3096 = isnan(0.0) ? _1629 : (isnan(_1629) ? 0.0 : max(_1629, 0.0));
    vec4 _1633 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_509, _510), (isnan(1.0) ? _3096 : (isnan(_3096) ? 1.0 : min(_3096, 1.0))) * 5.0);
    float _1649 = 1.0 - _1633.w;
    vec4 _1657 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_509, _510));
    float _1659 = _1657.w;
    float _1671 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1659);
    float _1672 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1659);
    float _1673 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1659);
    uint _1678 = floatBitsToUint(cbInstanceData._m0[_401]).x * 14u;
    float _1685 = (cbLight._m0[_1678 + 13u].x * (_547 + (-1.0))) + 1.0;
    uint _1686 = _1678 + 4u;
    float _1696 = isnan(1.0) ? _1685 : (isnan(_1685) ? 1.0 : min(_1685, 1.0));
    float _1705 = dot(vec3(cbLight._m0[_1678].xyz), vec3(_463, _464, _465));
    float _3112 = isnan(0.0) ? _1705 : (isnan(_1705) ? 0.0 : max(_1705, 0.0));
    float _1709 = (isnan(1.0) ? _3112 : (isnan(_3112) ? 1.0 : min(_3112, 1.0))) * 0.3183098733425140380859375;
    uint _1715 = _1678 + 8u;
    float _1728 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1678].w)) * _467) * 0.949999988079071044921875);
    float _1729 = _1728 * _1728;
    float _1730 = cbLight._m0[_1678].x + _488;
    float _1731 = cbLight._m0[_1678].y + _489;
    float _1732 = cbLight._m0[_1678].z + _490;
    float _1736 = inversesqrt(dot(vec3(_1730, _1731, _1732), vec3(_1730, _1731, _1732)));
    float _1737 = _1736 * _1730;
    float _1738 = _1736 * _1731;
    float _1739 = _1736 * _1732;
    float _1740 = dot(vec3(_463, _464, _465), vec3(cbLight._m0[_1678].xyz));
    float _3123 = isnan(0.0) ? _1740 : (isnan(_1740) ? 0.0 : max(_1740, 0.0));
    float _1743 = isnan(1.0) ? _3123 : (isnan(_3123) ? 1.0 : min(_3123, 1.0));
    float _3134 = isnan(0.0) ? _548 : (isnan(_548) ? 0.0 : max(_548, 0.0));
    float _1744 = isnan(1.0) ? _3134 : (isnan(_3134) ? 1.0 : min(_3134, 1.0));
    float _1745 = dot(vec3(_463, _464, _465), vec3(_1737, _1738, _1739));
    float _3145 = isnan(0.0) ? _1745 : (isnan(_1745) ? 0.0 : max(_1745, 0.0));
    float _1748 = isnan(1.0) ? _3145 : (isnan(_3145) ? 1.0 : min(_3145, 1.0));
    float _1749 = dot(vec3(cbLight._m0[_1678].xyz), vec3(_1737, _1738, _1739));
    float _3156 = isnan(0.0) ? _1749 : (isnan(_1749) ? 0.0 : max(_1749, 0.0));
    float _1753 = _1729 * _1729;
    float _1757 = ((_1748 * _1748) * (_1753 + (-1.0))) + 1.0;
    float _1767 = (exp2(log2(1.0 - (isnan(1.0) ? _3156 : (isnan(_3156) ? 1.0 : min(_3156, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1768 = 1.0 - _1729;
    float _1779 = (0.5 / (((_1744 * ((_1743 * _1768) + _1729)) + 9.9999999392252902907785028219223e-09) + (((_1744 * _1768) + _1729) * _1743))) * _1743;
    float _3167 = isnan(0.0) ? _1779 : (isnan(_1779) ? 0.0 : max(_1779, 0.0));
    float _1781 = (isnan(1.0) ? _3167 : (isnan(_3167) ? 1.0 : min(_3167, 1.0))) * (_1753 / ((_1757 * _1757) * 3.141590118408203125));
    float _1816 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _1817 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _1818 = cbSceneParam._m0[86u].x * ((_509 / cbSceneParam._m0[86u].x) + ((4.5 / (_483 + 10.0)) * dot(vec3(_463, _464, _465), vec3(_187, _188, _189))));
    float _1819 = isnan(_1816) ? _1818 : (isnan(_1818) ? _1816 : min(_1818, _1816));
    float _1820 = isnan(_1817) ? _510 : (isnan(_510) ? _1817 : min(_510, _1817));
    vec4 _1822 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1819, _1820), 0.0);
    float _1824 = _1822.x;
    bool _1844 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _1824)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1824))) > _483;
    float _1845 = _1844 ? _1819 : _509;
    float _1846 = _1844 ? _1820 : _510;
    vec4 _1848 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_1845, _1846));
    vec4 _1853 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1845, _1846));
    float _1855 = _1853.x;
    bool _1860 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _1869 = (-0.0) - cbSceneParam._m0[2u].z;
    float _1875 = (_1860 ? (_1869 / (cbSceneParam._m0[2u].x - _1855)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1855))) - _483;
    float _1877 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _1878 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _1879 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _1885 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _1889 = (isnan(_1875) ? 0.0 : (isnan(0.0) ? _1875 : max(0.0, _1875))) * (-1.44269502162933349609375);
    float _3193 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _3204 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _3215 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _2002;
    float _2003;
    float _2004;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _1922 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1845, _1846), 0.0);
        float _1924 = _1922.x;
        float _1930 = (_1860 ? (_1869 / (cbSceneParam._m0[2u].x - _1924)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1924))) - _483;
        uint _1936 = floatBitsToUint(cbInstanceData._m0[_401]).x * 14u;
        uint _1942 = _1936 + 4u;
        float _1951 = dot(vec3(cbLight._m0[_1936].xyz), vec3(_208, _209, _210));
        float _1959 = dot(vec3((-0.0) - _488, (-0.0) - _489, (-0.0) - _490), vec3((-0.0) - _208, (-0.0) - _209, (-0.0) - _210));
        float _1964 = ((isnan(0.0) ? _1959 : (isnan(_1959) ? 0.0 : max(_1959, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _1951 : (isnan(_1951) ? 0.001000000047497451305389404296875 : max(_1951, 0.001000000047497451305389404296875)))) + 1.0;
        float _1966 = (-0.0) - ((isnan(_1930) ? 0.0 : (isnan(0.0) ? _1930 : max(0.0, _1930))) * _1964);
        _2002 = _1885 ? 0.0 : ((((_448 * cbMtdParam._m0[13u].w) * cbLight._m0[_1942].x) / ((_1964 * _1877) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1877 * 1.44269502162933349609375) * _1966)));
        _2003 = _1885 ? 0.0 : ((((_448 * cbMtdParam._m0[14u].x) * cbLight._m0[_1942].y) / ((_1964 * _1878) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1878 * 1.44269502162933349609375) * _1966)));
        _2004 = _1885 ? 0.0 : ((((_448 * cbMtdParam._m0[14u].y) * cbLight._m0[_1942].z) / ((_1964 * _1879) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1879 * 1.44269502162933349609375) * _1966)));
    }
    else
    {
        _2002 = 0.0;
        _2003 = 0.0;
        _2004 = 0.0;
    }
    float _2021 = 0.959999978542327880859375 - (exp2(log2(1.0 - _562) * 5.0) * 0.959999978542327880859375);
    float _2022 = (_2002 + ((exp2(_1889 * (_1885 ? 0.0 : _1877)) * _1848.x) * cbSceneParam._m0[72u].w)) * _2021;
    float _2023 = (_2003 + ((exp2(_1889 * (_1885 ? 0.0 : _1878)) * _1848.y) * cbSceneParam._m0[72u].w)) * _2021;
    float _2024 = (_2004 + ((exp2(_1889 * (_1885 ? 0.0 : _1879)) * _1848.z) * cbSceneParam._m0[72u].w)) * _2021;
    float _2032 = (_2022 + (((((_1598 * _1633.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1604 : (isnan(_1604) ? 0.0 : max(_1604, 0.0))) * _1389) * _1649)) + ((((cbLight._m0[_1715].x * _1671) * _1767) * _1781) * _1696)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3193 : (isnan(_3193) ? 1.0 : min(_3193, 1.0))) * ((((cbLight._m0[_1686].x * _1671) * _1696) * _1709) + ((isnan(0.0) ? _1310 : (isnan(_1310) ? 0.0 : max(_1310, 0.0))) * _547))) - _2022) * cbMtdParam._m0[12u].x);
    float _2034 = (_2023 + (((((_1598 * _1633.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1607 : (isnan(_1607) ? 0.0 : max(_1607, 0.0))) * _1389) * _1649)) + ((((cbLight._m0[_1715].y * _1672) * _1767) * _1781) * _1696)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3204 : (isnan(_3204) ? 1.0 : min(_3204, 1.0))) * ((((cbLight._m0[_1686].y * _1672) * _1696) * _1709) + ((isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0))) * _547))) - _2023) * cbMtdParam._m0[12u].x);
    float _2036 = (_2024 + (((((_1598 * _1633.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1610 : (isnan(_1610) ? 0.0 : max(_1610, 0.0))) * _1389) * _1649)) + ((((cbLight._m0[_1715].z * _1673) * _1767) * _1781) * _1696)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0))) * ((((cbLight._m0[_1686].z * _1673) * _1696) * _1709) + ((isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0))) * _547))) - _2024) * cbMtdParam._m0[12u].x);
    float _2041 = cbInstanceData._m0[_342 + 6u].w * (isnan(1.0) ? _2617 : (isnan(_2617) ? 1.0 : min(_2617, 1.0)));
    float _2046 = _509 / cbSceneParam._m0[86u].x;
    float _2047 = _510 / cbSceneParam._m0[86u].y;
    vec4 _2061 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2046, _2047, (log2((isnan(cbSceneParam._m0[77u].w) ? _483 : (isnan(_483) ? cbSceneParam._m0[77u].w : min(_483, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2063 = _2061.x;
    float _2064 = _2061.y;
    float _2065 = _2061.z;
    float _2066 = _2061.w;
    float _2122;
    float _2124;
    float _2126;
    float _2128;
    if (_483 > cbSceneParam._m0[78u].w)
    {
        float _2087 = isnan(_483) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _483 : min(cbSceneParam._m0[80u].w, _483));
        float _2088 = _2087 / _483;
        float _2099 = _2088 * _266;
        float _2100 = _2088 * _414;
        float _2101 = _2088 * _268;
        float _2103 = (cbSceneParam._m0[77u].w * _2100) / _2087;
        float _2104 = _2103 + cbSceneParam._m0[79u].w;
        float _2105 = cbSceneParam._m0[79u].w + _2100;
        float _2111 = sqrt(((_2099 * _2099) + (_2100 * _2100)) + (_2101 * _2101));
        float _2114 = (1.0 - (cbSceneParam._m0[77u].w / _2087)) * _2111;
        float _2120 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2121 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2323;
        if (abs((_2100 - _2103) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2323 = ((((_2104 > 0.0) ? exp2(_2120 * _2104) : (2.0 - exp2(_2121 * _2104))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2114;
        }
        else
        {
            float _2255 = 1.0 / cbSceneParam._m0[80u].x;
            float _2256 = isnan(_2105) ? _2104 : (isnan(_2104) ? _2105 : max(_2104, _2105));
            float _2257 = isnan(_2105) ? _2104 : (isnan(_2104) ? _2105 : min(_2104, _2105));
            float _2266 = isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : min(_2256, 0.0));
            float _2267 = isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : min(_2257, 0.0));
            _2323 = ((abs(_2111 / _2100) * cbSceneParam._m0[80u].y) * ((((_2266 - _2267) * 2.0) - ((exp2(_2120 * (isnan(0.0) ? _2256 : (isnan(_2256) ? 0.0 : max(_2256, 0.0)))) - exp2(_2120 * (isnan(0.0) ? _2257 : (isnan(_2257) ? 0.0 : max(_2257, 0.0))))) * _2255)) - ((exp2(_2121 * _2266) - exp2(_2121 * _2267)) * _2255))) + (_2114 * cbSceneParam._m0[80u].z);
        }
        vec4 _2325 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2046, _2047, 1.0), 0.0);
        float _2334 = exp2((_2323 * (-1.44269502162933349609375)) * (1.0 - _2325.w));
        float _2335 = log2(_2334);
        float _2351 = log2(_2066);
        _2122 = (exp2(_2351 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2335 * cbSceneParam._m0[78u].x)) * _2325.x) / cbSceneParam._m0[78u].x)) + _2063;
        _2124 = (exp2(_2351 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2335 * cbSceneParam._m0[78u].y)) * _2325.y) / cbSceneParam._m0[78u].y)) + _2064;
        _2126 = (exp2(_2351 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2335 * cbSceneParam._m0[78u].z)) * _2325.z) / cbSceneParam._m0[78u].z)) + _2065;
        _2128 = _2334 * _2066;
    }
    else
    {
        _2122 = _2063;
        _2124 = _2064;
        _2126 = _2065;
        _2128 = _2066;
    }
    bool _2361;
    float _2183;
    vec4 _2186;
    float _2188;
    vec4 _2190;
    float _2198;
    float _2199;
    float _2200;
    float _2201;
    bool _2211;
    for (;;)
    {
        bool _2140 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2141 = log2(_2128);
        float _2148 = exp2(_2141 * cbSceneParam._m0[78u].x) * _2032;
        float _2149 = exp2(_2141 * cbSceneParam._m0[78u].y) * _2034;
        float _2150 = exp2(_2141 * cbSceneParam._m0[78u].z) * _2036;
        vec4 _2158 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_509, _510));
        float _2160 = _2158.x;
        float _2181 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2160)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2160))) - _483) * 3.0;
        float _3281 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
        _2183 = _2041 * (isnan(1.0) ? _3281 : (isnan(_3281) ? 1.0 : min(_3281, 1.0)));
        float _2184 = _497 + (-0.5);
        _2186 = cbMtdParam._m0[1u];
        _2188 = _2186.y * _2184;
        _2190 = cbMatDynParam._m0[0u];
        float _2197 = (roundEven(_2190.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2198 = _2197 * (_2140 ? _2148 : (_2148 + (cbSceneParam._m0[72u].w * _2122)));
        _2199 = _2197 * (_2140 ? _2149 : (_2149 + (cbSceneParam._m0[72u].w * _2124)));
        _2200 = _2197 * (_2140 ? _2150 : (_2150 + (cbSceneParam._m0[72u].w * _2126)));
        _2201 = _2184 * 0.999000012874603271484375;
        _2211 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2211)
        {
            if ((cbInstanceData._m0[_342 + 7u].x + _2201) < 0.5)
            {
                _2361 = true;
                break;
            }
        }
        uint _2290 = _523 + uint(_2190.w);
        if ((cbInstanceData._m0[_2290].w < 1.0) && ((cbInstanceData._m0[_2290].w + _2201) < 0.5))
        {
            _2361 = true;
            break;
        }
        if ((_2188 + 1.0) < _2186.x)
        {
            _2361 = true;
            break;
        }
        _2361 = false;
        break;
    }
    float _2392;
    if (_2361)
    {
        discard_state = true;
        _2392 = 0.0;
    }
    else
    {
        _2392 = _2183;
    }
    SV_Target.x = _2198;
    SV_Target.y = _2199;
    SV_Target.z = _2200;
    SV_Target.w = _2392;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2183;
    discard_exit();
}


