#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _166 = _165 * NORMAL.x;
    float _167 = _165 * NORMAL.y;
    float _168 = _165 * NORMAL.z;
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _180;
    float _181;
    float _182;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _180 = (-0.0) - _166;
        _181 = (-0.0) - _167;
        _182 = (-0.0) - _168;
    }
    else
    {
        _180 = _166;
        _181 = _167;
        _182 = _168;
    }
    float _228 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _238 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _228);
    float _239 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _228);
    float _240 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _228);
    uvec4 _251 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _254 = _239 * 100.0;
    float _614 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _262 = cbMtdParam._m0[11u].y * _239;
    float _625 = isnan(0.0) ? _262 : (isnan(_262) ? 0.0 : max(_262, 0.0));
    float _266 = exp2(log2(isnan(1.0) ? _625 : (isnan(_625) ? 1.0 : min(_625, 1.0))) * cbMtdParam._m0[11u].z);
    float _636 = isnan(0.0) ? _266 : (isnan(_266) ? 0.0 : max(_266, 0.0));
    float _273 = cbMtdParam._m0[12u].z * _239;
    float _647 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _277 = exp2(log2(isnan(1.0) ? _647 : (isnan(_647) ? 1.0 : min(_647, 1.0))) * cbMtdParam._m0[11u].w);
    float _658 = isnan(0.0) ? _277 : (isnan(_277) ? 0.0 : max(_277, 0.0));
    float _278 = isnan(1.0) ? _658 : (isnan(_658) ? 1.0 : min(_658, 1.0));
    float _281 = cbMtdParam._m0[12u].y * _239;
    float _669 = isnan(0.0) ? _281 : (isnan(_281) ? 0.0 : max(_281, 0.0));
    float _285 = exp2(log2(isnan(1.0) ? _669 : (isnan(_669) ? 1.0 : min(_669, 1.0))) * cbMtdParam._m0[11u].x);
    float _680 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _290 = (((isnan(1.0) ? _680 : (isnan(_680) ? 1.0 : min(_680, 1.0))) - _278) * 0.5) + _278;
    float _293 = (((isnan(1.0) ? _636 : (isnan(_636) ? 1.0 : min(_636, 1.0))) - _290) * 0.5) + _290;
    float _691 = isnan(0.0) ? _293 : (isnan(_293) ? 0.0 : max(_293, 0.0));
    float _295 = (_251.y != 0u) ? (isnan(1.0) ? _691 : (isnan(_691) ? 1.0 : min(_691, 1.0))) : (isnan(1.0) ? _614 : (isnan(_614) ? 1.0 : min(_614, 1.0)));
    bool _310 = _251.x != 0u;
    uint _314 = uint(roundEven(NORMAL.w)) * 13u;
    float _319 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_314 + 1u].w;
    float _320 = _238 / _239;
    float _322 = (-0.0) - (_240 / _239);
    vec4 _343 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_310 ? (_319 * _320) : _320) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_310 ? (_319 * _322) : _322) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _351 = (_343.x * 2.0) + (-1.0);
    float _353 = (_343.y * 2.0) + (-1.0);
    float _354 = dot(vec2(_351, _353), vec2(_351, _353));
    float _702 = isnan(0.0) ? _354 : (isnan(_354) ? 0.0 : max(_354, 0.0));
    float _359 = sqrt(1.0 - (isnan(1.0) ? _702 : (isnan(_702) ? 1.0 : min(_702, 1.0))));
    float _362 = fma(_359, _180, fma(_353, _172 * TANGENT.x, (_158 * _151) * _351));
    float _365 = fma(_359, _181, fma(_353, _172 * TANGENT.y, (_158 * _152) * _351));
    float _368 = fma(_359, _182, fma(_353, _172 * TANGENT.z, (_158 * _153) * _351));
    float _372 = inversesqrt(dot(vec3(_362, _365, _368), vec3(_362, _365, _368)));
    float _713 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _373 = isnan(1.0) ? _713 : (isnan(_713) ? 1.0 : min(_713, 1.0));
    float _724 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _735 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _375 = isnan(1.0) ? _735 : (isnan(_735) ? 1.0 : min(_735, 1.0));
    float _746 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _376 = isnan(1.0) ? _746 : (isnan(_746) ? 1.0 : min(_746, 1.0));
    float _757 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _377 = isnan(1.0) ? _757 : (isnan(_757) ? 1.0 : min(_757, 1.0));
    float _390 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _395 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _397 = _395.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _492 = sqrt(((_238 * _238) + (_239 * _239)) + (_240 * _240));
        float _499 = (cbMatDynParam._m0[5u].x * _492) + cbMatDynParam._m0[5u].y;
        float _768 = isnan(0.0) ? _499 : (isnan(_499) ? 0.0 : max(_499, 0.0));
        float _500 = isnan(1.0) ? _768 : (isnan(_768) ? 1.0 : min(_768, 1.0));
        float _504 = (cbMatDynParam._m0[5u].z * _492) + cbMatDynParam._m0[5u].w;
        float _779 = isnan(0.0) ? _504 : (isnan(_504) ? 0.0 : max(_504, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _779 : (isnan(_779) ? 1.0 : min(_779, 1.0))) - _500)) + _500) < ((_397 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _539;
    uint _423;
    float _433;
    float _434;
    float _435;
    float _468;
    vec4 _472;
    float _474;
    float _475;
    bool _486;
    for (;;)
    {
        _423 = _314 + 9u;
        uint _424 = _423 + uint(cbMatDynParam._m0[0u].w);
        float _430 = (cbMtdParam._m0[0u].x * _375) * cbInstanceData._m0[_424].x;
        float _431 = (cbMtdParam._m0[0u].y * _376) * cbInstanceData._m0[_424].y;
        float _432 = (cbMtdParam._m0[0u].z * _377) * cbInstanceData._m0[_424].z;
        float _790 = isnan(0.0) ? _430 : (isnan(_430) ? 0.0 : max(_430, 0.0));
        _433 = isnan(1.0) ? _790 : (isnan(_790) ? 1.0 : min(_790, 1.0));
        float _801 = isnan(0.0) ? _431 : (isnan(_431) ? 0.0 : max(_431, 0.0));
        _434 = isnan(1.0) ? _801 : (isnan(_801) ? 1.0 : min(_801, 1.0));
        float _812 = isnan(0.0) ? _432 : (isnan(_432) ? 0.0 : max(_432, 0.0));
        _435 = isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0));
        vec4 _442 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _444 = _442.x;
        float _465 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _444)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _444))) - _390) * 3.0;
        float _823 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
        _468 = (cbInstanceData._m0[_314 + 6u].w * _373) * (isnan(1.0) ? _823 : (isnan(_823) ? 1.0 : min(_823, 1.0)));
        float _469 = _397 + (-0.5);
        _472 = cbMtdParam._m0[1u];
        _474 = _472.y * _469;
        _475 = _469 * 0.999000012874603271484375;
        _486 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_486)
        {
            if ((cbInstanceData._m0[_314 + 7u].x + _475) < 0.5)
            {
                _539 = true;
                break;
            }
        }
        uint _528 = _423 + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_528].w < 1.0) && ((cbInstanceData._m0[_528].w + _475) < 0.5))
        {
            _539 = true;
            break;
        }
        if ((_474 + 1.0) < _472.x)
        {
            _539 = true;
            break;
        }
        _539 = false;
        break;
    }
    if (_539)
    {
        discard_state = true;
    }
    bool _565 = cbMtdParam._m0[1u].z != 0.0;
    float _566 = _565 ? _468 : 0.0;
    SV_Target.x = ((_362 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.y = ((_365 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.z = ((_368 * 0.5) * _372) + 0.500488758087158203125;
    SV_Target.w = _566;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _724 : (isnan(_724) ? 1.0 : min(_724, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _565 ? _468 : TEXCOORD.z;
    SV_Target_2.x = _433;
    SV_Target_2.y = _434;
    SV_Target_2.z = _435;
    SV_Target_2.w = _565 ? _468 : (float(floatBitsToUint(cbInstanceData._m0[_314 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _566;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _566;
    discard_exit();
}


