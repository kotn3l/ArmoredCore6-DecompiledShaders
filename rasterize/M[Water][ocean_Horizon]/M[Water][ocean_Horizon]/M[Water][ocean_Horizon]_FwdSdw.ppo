#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _907;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _177 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _178 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _179 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _184 = inversesqrt(dot(vec3(_177, _178, _179), vec3(_177, _178, _179)));
    float _185 = _184 * _177;
    float _186 = _184 * _178;
    float _187 = _184 * _179;
    float _191 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _192 = _191 * NORMAL.x;
    float _193 = _191 * NORMAL.y;
    float _194 = _191 * NORMAL.z;
    float _198 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _206;
    float _207;
    float _208;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _206 = (-0.0) - _192;
        _207 = (-0.0) - _193;
        _208 = (-0.0) - _194;
    }
    else
    {
        _206 = _192;
        _207 = _193;
        _208 = _194;
    }
    float _254 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _264 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _254);
    float _265 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _254);
    float _266 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _254);
    uvec4 _277 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _280 = _265 * 100.0;
    float _2707 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _288 = cbMtdParam._m0[11u].y * _265;
    float _2718 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _292 = exp2(log2(isnan(1.0) ? _2718 : (isnan(_2718) ? 1.0 : min(_2718, 1.0))) * cbMtdParam._m0[11u].z);
    float _2729 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _299 = cbMtdParam._m0[12u].z * _265;
    float _2740 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _303 = exp2(log2(isnan(1.0) ? _2740 : (isnan(_2740) ? 1.0 : min(_2740, 1.0))) * cbMtdParam._m0[11u].w);
    float _2751 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _304 = isnan(1.0) ? _2751 : (isnan(_2751) ? 1.0 : min(_2751, 1.0));
    float _307 = cbMtdParam._m0[12u].y * _265;
    float _2762 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _311 = exp2(log2(isnan(1.0) ? _2762 : (isnan(_2762) ? 1.0 : min(_2762, 1.0))) * cbMtdParam._m0[11u].x);
    float _2773 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _316 = (((isnan(1.0) ? _2773 : (isnan(_2773) ? 1.0 : min(_2773, 1.0))) - _304) * 0.5) + _304;
    float _319 = (((isnan(1.0) ? _2729 : (isnan(_2729) ? 1.0 : min(_2729, 1.0))) - _316) * 0.5) + _316;
    float _2784 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _321 = (_277.y != 0u) ? (isnan(1.0) ? _2784 : (isnan(_2784) ? 1.0 : min(_2784, 1.0))) : (isnan(1.0) ? _2707 : (isnan(_2707) ? 1.0 : min(_2707, 1.0)));
    bool _336 = _277.x != 0u;
    uint _340 = uint(roundEven(NORMAL.w)) * 13u;
    float _345 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_340 + 1u].w;
    float _346 = _264 / _265;
    float _348 = (-0.0) - (_266 / _265);
    vec4 _369 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_336 ? (_345 * _346) : _346) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_336 ? (_345 * _348) : _348) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _377 = (_369.x * 2.0) + (-1.0);
    float _379 = (_369.y * 2.0) + (-1.0);
    float _380 = dot(vec2(_377, _379), vec2(_377, _379));
    float _2795 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _385 = sqrt(1.0 - (isnan(1.0) ? _2795 : (isnan(_2795) ? 1.0 : min(_2795, 1.0))));
    uint _399 = _340 + 5u;
    float _411 = (-0.0) - _264;
    float _412 = (-0.0) - _265;
    float _413 = (-0.0) - _266;
    float _417 = inversesqrt(dot(vec3(_411, _412, _413), vec3(_411, _412, _413)));
    float _421 = dot(vec3(_417 * _411, _417 * _412, _417 * _413), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_399]).x * 14u].xyz));
    float _432 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_421 * 0.60000002384185791015625)) * 1.5);
    float _446 = ((((0.959999978542327880859375 / exp2(log2((_421 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _432) * 0.5) + _432) * 0.079577468335628509521484375;
    float _450 = fma(_385, _206, fma(_379, _198 * TANGENT.x, _377 * _185));
    float _453 = fma(_385, _207, fma(_379, _198 * TANGENT.y, _377 * _186));
    float _456 = fma(_385, _208, fma(_379, _198 * TANGENT.z, _377 * _187));
    float _460 = inversesqrt(dot(vec3(_450, _453, _456), vec3(_450, _453, _456)));
    float _461 = _460 * _450;
    float _462 = _460 * _453;
    float _463 = _460 * _456;
    float _2806 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _2817 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _465 = isnan(1.0) ? _2817 : (isnan(_2817) ? 1.0 : min(_2817, 1.0));
    float _2828 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2839 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2850 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _481 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _485 = inversesqrt(dot(vec3(_264, _265, _266), vec3(_264, _265, _266)));
    float _486 = _264 * _485;
    float _487 = _265 * _485;
    float _488 = _266 * _485;
    float _494 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _495 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _509 = (_340 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _515 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2828 : (isnan(_2828) ? 1.0 : min(_2828, 1.0)))) * cbInstanceData._m0[_509].x;
    float _516 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2839 : (isnan(_2839) ? 1.0 : min(_2839, 1.0)))) * cbInstanceData._m0[_509].y;
    float _517 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2850 : (isnan(_2850) ? 1.0 : min(_2850, 1.0)))) * cbInstanceData._m0[_509].z;
    float _2861 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _518 = isnan(1.0) ? _2861 : (isnan(_2861) ? 1.0 : min(_2861, 1.0));
    float _2872 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _519 = isnan(1.0) ? _2872 : (isnan(_2872) ? 1.0 : min(_2872, 1.0));
    float _2883 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _520 = isnan(1.0) ? _2883 : (isnan(_2883) ? 1.0 : min(_2883, 1.0));
    vec4 _529 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _494, cbSceneParam._m0[86u].y * _495));
    float _532 = _529.x * TEXCOORD.z;
    float _533 = dot(vec3(_461, _462, _463), vec3(_486, _487, _488));
    float _536 = _533 * 2.0;
    float _540 = (_536 * _461) - _486;
    float _541 = (_536 * _462) - _487;
    float _542 = (_536 * _463) - _488;
    float _546 = abs(dot(vec3(_486, _487, _488), vec3(_461, _462, _463)));
    float _2894 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _547 = isnan(1.0) ? _2894 : (isnan(_2894) ? 1.0 : min(_2894, 1.0));
    float _555 = sqrt(_465);
    float _567 = exp2((_555 * 5.0) * log2(1.0 - (_547 * 0.999000012874603271484375))) / (4.0 - (_555 * 3.0));
    float _597 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _601 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _605 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _906;
    float _908;
    float _909;
    float _910;
    float _911;
    float _912;
    float _913;
    float _914;
    float _915;
    float _916;
    float _917;
    float _918;
    float _919;
    float _920;
    float _921;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _632 = fma(_605, cbModelParam._m0[26u].z, fma(_601, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _597));
        float _636 = fma(_605, cbModelParam._m0[27u].z, fma(_601, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _597));
        float _640 = fma(_605, cbModelParam._m0[28u].z, fma(_601, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _597));
        float _664 = _597 + _461;
        float _665 = _601 + _462;
        float _666 = _605 + _463;
        float _676 = fma(_666, cbModelParam._m0[26u].z, fma(_665, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _664)) - _632;
        float _677 = fma(_666, cbModelParam._m0[27u].z, fma(_665, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _664)) - _636;
        float _678 = fma(_666, cbModelParam._m0[28u].z, fma(_665, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _664)) - _640;
        float _682 = inversesqrt(dot(vec3(_676, _677, _678), vec3(_676, _677, _678)));
        float _695 = ((_682 * _676) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_632 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _696 = ((_682 * _677) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_636 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _697 = ((_682 * _678) / cbModelParam._m0[34u].z) + ((((((_640 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _700 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_695, _696, _697), 0.0);
        vec4 _707 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_695, _696, _697), 0.0);
        vec4 _714 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_695, _696, _697), 0.0);
        vec4 _721 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_695, _696, _697), 0.0);
        float _734 = exp2((_700.w + (-0.5)) * 20.0) * 2.0;
        float _735 = _734 * (_700.x + (-0.5));
        float _736 = _734 * (_700.y + (-0.5));
        float _737 = _734 * (_700.z + (-0.5));
        float _744 = exp2((_707.w + (-0.5)) * 20.0) * 2.0;
        float _745 = _744 * (_707.x + (-0.5));
        float _746 = _744 * (_707.y + (-0.5));
        float _747 = _744 * (_707.z + (-0.5));
        float _754 = exp2((_714.w + (-0.5)) * 20.0) * 2.0;
        float _755 = _754 * (_714.x + (-0.5));
        float _756 = _754 * (_714.y + (-0.5));
        float _757 = _754 * (_714.z + (-0.5));
        float _764 = exp2((_721.w + (-0.5)) * 20.0) * 2.0;
        float _765 = _764 * (_721.x + (-0.5));
        float _766 = _764 * (_721.y + (-0.5));
        float _767 = _764 * (_721.z + (-0.5));
        float _768 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _769 = isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0));
        float _770 = isnan(0.0) ? _767 : (isnan(_767) ? 0.0 : max(_767, 0.0));
        float _771 = _735 * 0.5;
        float _772 = _745 * 0.5;
        float _773 = _755 * 0.5;
        float _774 = dot(vec3(_771, _772, _773), vec3(_771, _772, _773));
        float _779 = (_774 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_774);
        float _788 = (dot(vec3(_461, _462, _463), vec3(_779 * _771, _779 * _772, _779 * _773)) + 1.0) * 0.5;
        float _2920 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
        float _798 = sqrt(((_772 * _772) + (_771 * _771)) + (_773 * _773)) / (_768 + 9.9999997473787516355514526367188e-06);
        float _2931 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        float _799 = isnan(1.0) ? _2931 : (isnan(_2931) ? 1.0 : min(_2931, 1.0));
        float _800 = _799 * 2.0;
        float _804 = (1.0 - _799) / (_799 + 1.0);
        float _2942 = isnan(0.0) ? _804 : (isnan(_804) ? 0.0 : max(_804, 0.0));
        float _805 = isnan(1.0) ? _2942 : (isnan(_2942) ? 1.0 : min(_2942, 1.0));
        float _814 = ((((1.0 - _805) * (_800 + 2.0)) * exp2(log2(isnan(1.0) ? _2920 : (isnan(_2920) ? 1.0 : min(_2920, 1.0))) * (_800 + 1.0))) + _805) * _768;
        float _815 = _736 * 0.5;
        float _816 = _746 * 0.5;
        float _817 = _756 * 0.5;
        float _818 = dot(vec3(_815, _816, _817), vec3(_815, _816, _817));
        float _823 = (_818 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_818);
        float _831 = (dot(vec3(_461, _462, _463), vec3(_823 * _815, _823 * _816, _823 * _817)) + 1.0) * 0.5;
        float _2953 = isnan(0.0) ? _831 : (isnan(_831) ? 0.0 : max(_831, 0.0));
        float _840 = sqrt(((_816 * _816) + (_815 * _815)) + (_817 * _817)) / (_769 + 9.9999997473787516355514526367188e-06);
        float _2964 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
        float _841 = isnan(1.0) ? _2964 : (isnan(_2964) ? 1.0 : min(_2964, 1.0));
        float _842 = _841 * 2.0;
        float _846 = (1.0 - _841) / (_841 + 1.0);
        float _2975 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
        float _847 = isnan(1.0) ? _2975 : (isnan(_2975) ? 1.0 : min(_2975, 1.0));
        float _856 = ((((1.0 - _847) * (_842 + 2.0)) * exp2(log2(isnan(1.0) ? _2953 : (isnan(_2953) ? 1.0 : min(_2953, 1.0))) * (_842 + 1.0))) + _847) * _769;
        float _857 = _737 * 0.5;
        float _858 = _747 * 0.5;
        float _859 = _757 * 0.5;
        float _860 = dot(vec3(_857, _858, _859), vec3(_857, _858, _859));
        float _865 = (_860 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_860);
        float _873 = (dot(vec3(_461, _462, _463), vec3(_865 * _857, _865 * _858, _865 * _859)) + 1.0) * 0.5;
        float _2986 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        float _882 = sqrt(((_858 * _858) + (_857 * _857)) + (_859 * _859)) / (_770 + 9.9999997473787516355514526367188e-06);
        float _2997 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _883 = isnan(1.0) ? _2997 : (isnan(_2997) ? 1.0 : min(_2997, 1.0));
        float _884 = _883 * 2.0;
        float _888 = (1.0 - _883) / (_883 + 1.0);
        float _3008 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _889 = isnan(1.0) ? _3008 : (isnan(_3008) ? 1.0 : min(_3008, 1.0));
        float _898 = ((((1.0 - _889) * (_884 + 2.0)) * exp2(log2(isnan(1.0) ? _2986 : (isnan(_2986) ? 1.0 : min(_2986, 1.0))) * (_884 + 1.0))) + _889) * _770;
        _906 = _737;
        _908 = _736;
        _909 = _735;
        _910 = _747;
        _911 = _746;
        _912 = _745;
        _913 = _757;
        _914 = _756;
        _915 = _755;
        _916 = _770;
        _917 = _769;
        _918 = _768;
        _919 = cbModelParam._m0[36u].z * (isnan(0.0) ? _814 : (isnan(_814) ? 0.0 : max(_814, 0.0)));
        _920 = cbModelParam._m0[36u].z * (isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0)));
        _921 = cbModelParam._m0[36u].z * (isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0)));
    }
    else
    {
        _906 = _907;
        _908 = _907;
        _909 = _907;
        _910 = _907;
        _911 = _907;
        _912 = _907;
        _913 = _907;
        _914 = _907;
        _915 = _907;
        _916 = _907;
        _917 = _907;
        _918 = _907;
        _919 = 0.0;
        _920 = 0.0;
        _921 = 0.0;
    }
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    float _1227;
    float _1228;
    float _1229;
    float _1230;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _947 = fma(_605, cbModelParam._m0[30u].z, fma(_601, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _597));
        float _951 = fma(_605, cbModelParam._m0[31u].z, fma(_601, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _597));
        float _955 = fma(_605, cbModelParam._m0[32u].z, fma(_601, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _597));
        float _978 = _597 + _461;
        float _979 = _601 + _462;
        float _980 = _605 + _463;
        float _990 = fma(_980, cbModelParam._m0[30u].z, fma(_979, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _978)) - _947;
        float _991 = fma(_980, cbModelParam._m0[31u].z, fma(_979, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _978)) - _951;
        float _992 = fma(_980, cbModelParam._m0[32u].z, fma(_979, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _978)) - _955;
        float _996 = inversesqrt(dot(vec3(_990, _991, _992), vec3(_990, _991, _992)));
        float _1009 = ((_996 * _990) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_947 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1010 = ((_996 * _991) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_951 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1011 = ((_996 * _992) / cbModelParam._m0[35u].z) + ((((((_955 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1013 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1020 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1027 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        vec4 _1034 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1009, _1010, _1011), 0.0);
        float _1046 = exp2((_1013.w + (-0.5)) * 20.0) * 2.0;
        float _1047 = _1046 * (_1013.x + (-0.5));
        float _1048 = _1046 * (_1013.y + (-0.5));
        float _1049 = _1046 * (_1013.z + (-0.5));
        float _1056 = exp2((_1020.w + (-0.5)) * 20.0) * 2.0;
        float _1057 = _1056 * (_1020.x + (-0.5));
        float _1058 = _1056 * (_1020.y + (-0.5));
        float _1059 = _1056 * (_1020.z + (-0.5));
        float _1066 = exp2((_1027.w + (-0.5)) * 20.0) * 2.0;
        float _1067 = _1066 * (_1027.x + (-0.5));
        float _1068 = _1066 * (_1027.y + (-0.5));
        float _1069 = _1066 * (_1027.z + (-0.5));
        float _1076 = exp2((_1034.w + (-0.5)) * 20.0) * 2.0;
        float _1077 = _1076 * (_1034.x + (-0.5));
        float _1078 = _1076 * (_1034.y + (-0.5));
        float _1079 = _1076 * (_1034.z + (-0.5));
        float _1080 = isnan(0.0) ? _1077 : (isnan(_1077) ? 0.0 : max(_1077, 0.0));
        float _1081 = isnan(0.0) ? _1078 : (isnan(_1078) ? 0.0 : max(_1078, 0.0));
        float _1082 = isnan(0.0) ? _1079 : (isnan(_1079) ? 0.0 : max(_1079, 0.0));
        float _1083 = _1047 * 0.5;
        float _1084 = _1057 * 0.5;
        float _1085 = _1067 * 0.5;
        float _1086 = dot(vec3(_1083, _1084, _1085), vec3(_1083, _1084, _1085));
        float _1091 = (_1086 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1086);
        float _1099 = (dot(vec3(_461, _462, _463), vec3(_1091 * _1083, _1091 * _1084, _1091 * _1085)) + 1.0) * 0.5;
        float _3049 = isnan(0.0) ? _1099 : (isnan(_1099) ? 0.0 : max(_1099, 0.0));
        float _1108 = sqrt(((_1084 * _1084) + (_1083 * _1083)) + (_1085 * _1085)) / (_1080 + 9.9999997473787516355514526367188e-06);
        float _3060 = isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0));
        float _1109 = isnan(1.0) ? _3060 : (isnan(_3060) ? 1.0 : min(_3060, 1.0));
        float _1110 = _1109 * 2.0;
        float _1114 = (1.0 - _1109) / (_1109 + 1.0);
        float _3071 = isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0));
        float _1115 = isnan(1.0) ? _3071 : (isnan(_3071) ? 1.0 : min(_3071, 1.0));
        float _1124 = ((((1.0 - _1115) * (_1110 + 2.0)) * exp2(log2(isnan(1.0) ? _3049 : (isnan(_3049) ? 1.0 : min(_3049, 1.0))) * (_1110 + 1.0))) + _1115) * _1080;
        float _1125 = _1048 * 0.5;
        float _1126 = _1058 * 0.5;
        float _1127 = _1068 * 0.5;
        float _1128 = dot(vec3(_1125, _1126, _1127), vec3(_1125, _1126, _1127));
        float _1133 = (_1128 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1128);
        float _1141 = (dot(vec3(_461, _462, _463), vec3(_1133 * _1125, _1133 * _1126, _1133 * _1127)) + 1.0) * 0.5;
        float _3082 = isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0));
        float _1150 = sqrt(((_1126 * _1126) + (_1125 * _1125)) + (_1127 * _1127)) / (_1081 + 9.9999997473787516355514526367188e-06);
        float _3093 = isnan(0.0) ? _1150 : (isnan(_1150) ? 0.0 : max(_1150, 0.0));
        float _1151 = isnan(1.0) ? _3093 : (isnan(_3093) ? 1.0 : min(_3093, 1.0));
        float _1152 = _1151 * 2.0;
        float _1156 = (1.0 - _1151) / (_1151 + 1.0);
        float _3104 = isnan(0.0) ? _1156 : (isnan(_1156) ? 0.0 : max(_1156, 0.0));
        float _1157 = isnan(1.0) ? _3104 : (isnan(_3104) ? 1.0 : min(_3104, 1.0));
        float _1166 = ((((1.0 - _1157) * (_1152 + 2.0)) * exp2(log2(isnan(1.0) ? _3082 : (isnan(_3082) ? 1.0 : min(_3082, 1.0))) * (_1152 + 1.0))) + _1157) * _1081;
        float _1167 = _1049 * 0.5;
        float _1168 = _1059 * 0.5;
        float _1169 = _1069 * 0.5;
        float _1170 = dot(vec3(_1167, _1168, _1169), vec3(_1167, _1168, _1169));
        float _1175 = (_1170 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1170);
        float _1183 = (dot(vec3(_461, _462, _463), vec3(_1175 * _1167, _1175 * _1168, _1175 * _1169)) + 1.0) * 0.5;
        float _3115 = isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0));
        float _1192 = sqrt(((_1168 * _1168) + (_1167 * _1167)) + (_1169 * _1169)) / (_1082 + 9.9999997473787516355514526367188e-06);
        float _3126 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1193 = isnan(1.0) ? _3126 : (isnan(_3126) ? 1.0 : min(_3126, 1.0));
        float _1194 = _1193 * 2.0;
        float _1198 = (1.0 - _1193) / (_1193 + 1.0);
        float _3137 = isnan(0.0) ? _1198 : (isnan(_1198) ? 0.0 : max(_1198, 0.0));
        float _1199 = isnan(1.0) ? _3137 : (isnan(_3137) ? 1.0 : min(_3137, 1.0));
        float _1208 = ((((1.0 - _1199) * (_1194 + 2.0)) * exp2(log2(isnan(1.0) ? _3115 : (isnan(_3115) ? 1.0 : min(_3115, 1.0))) * (_1194 + 1.0))) + _1199) * _1082;
        _1216 = _1049;
        _1217 = _1048;
        _1218 = _1047;
        _1219 = _1059;
        _1220 = _1058;
        _1221 = _1057;
        _1222 = _1069;
        _1223 = _1068;
        _1224 = _1067;
        _1225 = _1082;
        _1226 = _1081;
        _1227 = _1080;
        _1228 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0)));
        _1229 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1166 : (isnan(_1166) ? 0.0 : max(_1166, 0.0)));
        _1230 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1208 : (isnan(_1208) ? 0.0 : max(_1208, 0.0)));
    }
    else
    {
        _1216 = _907;
        _1217 = _907;
        _1218 = _907;
        _1219 = _907;
        _1220 = _907;
        _1221 = _907;
        _1222 = _907;
        _1223 = _907;
        _1224 = _907;
        _1225 = _907;
        _1226 = _907;
        _1227 = _907;
        _1228 = 0.0;
        _1229 = 0.0;
        _1230 = 0.0;
    }
    float _1240 = (cbModelParam._m0[1u].x * (_1228 - _919)) + _919;
    float _1241 = (cbModelParam._m0[1u].x * (_1229 - _920)) + _920;
    float _1242 = (cbModelParam._m0[1u].x * (_1230 - _921)) + _921;
    float _1263 = fma(_1242, cbSceneParam._m0[89u].z, fma(_1241, cbSceneParam._m0[89u].y, _1240 * cbSceneParam._m0[89u].x));
    float _1266 = fma(_1242, cbSceneParam._m0[90u].z, fma(_1241, cbSceneParam._m0[90u].y, _1240 * cbSceneParam._m0[90u].x));
    float _1269 = fma(_1242, cbSceneParam._m0[91u].z, fma(_1241, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1240));
    float _1284 = _540 * 0.5;
    float _1285 = _541 * 0.5;
    float _1286 = _542 * 0.5;
    float _1287 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_1218, _1221, _1224, _1227));
    float _1290 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_1217, _1220, _1223, _1226));
    float _1293 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_1216, _1219, _1222, _1225));
    float _1327;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1300 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_906, _910, _913, _916));
        float _1304 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_908, _911, _914, _917));
        float _1308 = dot(vec4(_1284, _1285, _1286, 1.0), vec4(_909, _912, _915, _918));
        float _1315 = dot(vec4(cbModelParam._m0[39u]), vec4(_1284, _1285, _1286, 1.0));
        _1327 = dot(vec3(isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0)), isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0)), isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1315) ? 0.0 : (isnan(0.0) ? _1315 : max(0.0, _1315))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1327 = 1.0;
    }
    float _1338;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1329 = dot(vec4(cbModelParam._m0[40u]), vec4(_1284, _1285, _1286, 1.0));
        _1338 = dot(vec3(isnan(0.0) ? _1287 : (isnan(_1287) ? 0.0 : max(_1287, 0.0)), isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)), isnan(0.0) ? _1293 : (isnan(_1293) ? 0.0 : max(_1293, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1329) ? 0.0 : (isnan(0.0) ? _1329 : max(0.0, _1329))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1338 = 1.0;
    }
    float _1342 = (_1338 * cbModelParam._m0[1u].x) + (_1327 * (1.0 - cbModelParam._m0[1u].x));
    float _1352 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _465);
    float _1353 = isnan(_1352) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1352 : min(cbModelParam._m0[25u].z, _1352));
    float _1434;
    float _1436;
    float _1438;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1401 = fma(_605, cbModelParam._m0[13u].z, fma(_601, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _597)) + cbModelParam._m0[13u].w;
        float _1405 = fma(_605, cbModelParam._m0[14u].z, fma(_601, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _597)) + cbModelParam._m0[14u].w;
        float _1409 = fma(_605, cbModelParam._m0[15u].z, fma(_601, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _597)) + cbModelParam._m0[15u].w;
        float _1412 = fma(_542, cbModelParam._m0[13u].z, fma(_541, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _540));
        float _1415 = fma(_542, cbModelParam._m0[14u].z, fma(_541, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _540));
        float _1418 = fma(_542, cbModelParam._m0[15u].z, fma(_541, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _540));
        float _1446;
        if (_1412 > 0.0)
        {
            _1446 = abs((1.0 - _1401) / _1412);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1412 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1401 + 1.0) / _1412);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1446 = frontier_phi_16_14_ladder;
        }
        float _1657;
        if (_1415 > 0.0)
        {
            _1657 = abs((1.0 - _1405) / _1415);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1415 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1405 + 1.0) / _1415);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1657 = frontier_phi_25_21_ladder;
        }
        float _2102;
        if (_1418 > 0.0)
        {
            _2102 = abs((1.0 - _1409) / _1418);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1418 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1409 + 1.0) / _1418);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2102 = frontier_phi_37_32_ladder;
        }
        float _2104 = isnan(_1657) ? _1446 : (isnan(_1446) ? _1657 : min(_1446, _1657));
        float _2105 = isnan(_2102) ? _2104 : (isnan(_2104) ? _2102 : min(_2104, _2102));
        float _2109 = (_2105 * _1412) + _1401;
        float _2110 = (_2105 * _1415) + _1405;
        float _2111 = (_2105 * _1418) + _1409;
        float _2112 = _2105 * 9.9999997473787516355514526367188e-05;
        float _2114 = (-1.0) - _2112;
        float _2116 = _2112 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2111 > _2116) || ((_2111 < _2114) || ((_2110 > _2116) || ((_2110 < _2114) || ((_2109 < _2114) || (_2109 > _2116))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2374 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2111, cbModelParam._m0[9u].z, fma(_2110, cbModelParam._m0[9u].y, _2109 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2111, cbModelParam._m0[10u].z, fma(_2110, cbModelParam._m0[10u].y, _2109 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2111, cbModelParam._m0[11u].z, fma(_2110, cbModelParam._m0[11u].y, _2109 * cbModelParam._m0[11u].x))), _1353);
            frontier_phi_15_37_ladder = _2374.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2374.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2374.x * cbModelParam._m0[1u].y;
        }
        _1434 = frontier_phi_15_37_ladder_2;
        _1436 = frontier_phi_15_37_ladder_1;
        _1438 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1422 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_540, _541, _542), _1353);
        _1434 = _1422.x * cbModelParam._m0[1u].y;
        _1436 = _1422.y * cbModelParam._m0[1u].y;
        _1438 = _1422.z * cbModelParam._m0[1u].y;
    }
    float _1442 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _465);
    float _1443 = isnan(_1442) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1442 : min(cbModelParam._m0[25u].w, _1442));
    float _1535;
    float _1537;
    float _1539;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1499 = fma(_605, cbModelParam._m0[21u].z, fma(_601, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _597)) + cbModelParam._m0[21u].w;
        float _1503 = fma(_605, cbModelParam._m0[22u].z, fma(_601, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _597)) + cbModelParam._m0[22u].w;
        float _1507 = fma(_605, cbModelParam._m0[23u].z, fma(_601, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _597)) + cbModelParam._m0[23u].w;
        float _1510 = fma(_542, cbModelParam._m0[21u].z, fma(_541, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _540));
        float _1513 = fma(_542, cbModelParam._m0[22u].z, fma(_541, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _540));
        float _1516 = fma(_542, cbModelParam._m0[23u].z, fma(_541, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _540));
        float _1662;
        if (_1510 > 0.0)
        {
            _1662 = abs((1.0 - _1499) / _1510);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1510 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1499 + 1.0) / _1510);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1662 = frontier_phi_27_23_ladder;
        }
        float _2129;
        if (_1513 > 0.0)
        {
            _2129 = abs((1.0 - _1503) / _1513);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1513 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1503 + 1.0) / _1513);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2129 = frontier_phi_39_34_ladder;
        }
        float _2503;
        if (_1516 > 0.0)
        {
            _2503 = abs((1.0 - _1507) / _1516);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1516 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1507 + 1.0) / _1516);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _2503 = frontier_phi_49_46_ladder;
        }
        float _2505 = isnan(_2129) ? _1662 : (isnan(_1662) ? _2129 : min(_1662, _2129));
        float _2506 = isnan(_2503) ? _2505 : (isnan(_2505) ? _2503 : min(_2505, _2503));
        float _2510 = (_2506 * _1510) + _1499;
        float _2511 = (_2506 * _1513) + _1503;
        float _2512 = (_2506 * _1516) + _1507;
        float _2513 = _2506 * 9.9999997473787516355514526367188e-05;
        float _2514 = (-1.0) - _2513;
        float _2516 = _2513 + 1.0;
        float frontier_phi_24_49_ladder;
        float frontier_phi_24_49_ladder_1;
        float frontier_phi_24_49_ladder_2;
        if ((_2512 > _2516) || ((_2512 < _2514) || ((_2511 > _2516) || ((_2511 < _2514) || ((_2510 < _2514) || (_2510 > _2516))))))
        {
            frontier_phi_24_49_ladder = 0.0;
            frontier_phi_24_49_ladder_1 = 0.0;
            frontier_phi_24_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2584 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2512, cbModelParam._m0[17u].z, fma(_2511, cbModelParam._m0[17u].y, _2510 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2512, cbModelParam._m0[18u].z, fma(_2511, cbModelParam._m0[18u].y, _2510 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2512, cbModelParam._m0[19u].z, fma(_2511, cbModelParam._m0[19u].y, _2510 * cbModelParam._m0[19u].x))), _1443);
            frontier_phi_24_49_ladder = _2584.x * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_1 = _2584.z * cbModelParam._m0[1u].z;
            frontier_phi_24_49_ladder_2 = _2584.y * cbModelParam._m0[1u].z;
        }
        _1535 = frontier_phi_24_49_ladder;
        _1537 = frontier_phi_24_49_ladder_2;
        _1539 = frontier_phi_24_49_ladder_1;
    }
    else
    {
        vec4 _1519 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_540, _541, _542), _1443);
        _1535 = _1519.x * cbModelParam._m0[1u].z;
        _1537 = _1519.y * cbModelParam._m0[1u].z;
        _1539 = _1519.z * cbModelParam._m0[1u].z;
    }
    float _1551 = ((((1.0 - _567) * ((_555 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_567 * _555)) * _532;
    float _1552 = _1551 * ((cbModelParam._m0[1u].w * (_1535 - _1434)) + _1434);
    float _1553 = _1551 * ((cbModelParam._m0[1u].w * (_1537 - _1436)) + _1436);
    float _1554 = _1551 * ((cbModelParam._m0[1u].w * (_1539 - _1438)) + _1438);
    float _1557 = fma(_1554, cbSceneParam._m0[89u].z, fma(_1553, cbSceneParam._m0[89u].y, _1552 * cbSceneParam._m0[89u].x));
    float _1560 = fma(_1554, cbSceneParam._m0[90u].z, fma(_1553, cbSceneParam._m0[90u].y, _1552 * cbSceneParam._m0[90u].x));
    float _1563 = fma(_1554, cbSceneParam._m0[91u].z, fma(_1553, cbSceneParam._m0[91u].y, _1552 * cbSceneParam._m0[91u].x));
    float _1582 = (cbSceneParam._m0[88u].y * (1.0 - _465)) + cbSceneParam._m0[88u].z;
    float _3263 = isnan(0.0) ? _1582 : (isnan(_1582) ? 0.0 : max(_1582, 0.0));
    vec4 _1586 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_494, _495), (isnan(1.0) ? _3263 : (isnan(_3263) ? 1.0 : min(_3263, 1.0))) * 5.0);
    float _1602 = 1.0 - _1586.w;
    float _1636 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1640 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1644 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1648 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1649 = _1636 / _1648;
    float _1650 = _1640 / _1648;
    float _1651 = _1644 / _1648;
    float _1798;
    float _1799;
    float _1800;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1678 = ((uint(_1651 > cbSceneParam._m0[59u].y) + uint(_1651 > cbSceneParam._m0[59u].x)) + uint(_1651 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1679 = _1678 + 43u;
        uint _1687 = _1678 + 44u;
        uint _1695 = _1678 + 45u;
        uint _1703 = _1678 + 46u;
        float _1714 = fma(_1648, cbSceneParam._m0[_1679].w, fma(_1644, cbSceneParam._m0[_1679].z, fma(_1640, cbSceneParam._m0[_1679].y, _1636 * cbSceneParam._m0[_1679].x)));
        float _1718 = fma(_1648, cbSceneParam._m0[_1687].w, fma(_1644, cbSceneParam._m0[_1687].z, fma(_1640, cbSceneParam._m0[_1687].y, _1636 * cbSceneParam._m0[_1687].x)));
        float _1726 = fma(_1648, cbSceneParam._m0[_1703].w, fma(_1644, cbSceneParam._m0[_1703].z, fma(_1640, cbSceneParam._m0[_1703].y, _1636 * cbSceneParam._m0[_1703].x)));
        float _1731 = cbSceneParam._m0[33u].z * _1726;
        float _1733 = cbSceneParam._m0[33u].w * _1726;
        float _1736 = fma(_1648, cbSceneParam._m0[_1695].w, fma(_1644, cbSceneParam._m0[_1695].z, fma(_1640, cbSceneParam._m0[_1695].y, _1636 * cbSceneParam._m0[_1695].x))) / _1726;
        float _1784 = (cbSceneParam._m0[33u].x - sqrt(((_1650 * _1650) + (_1649 * _1649)) + (_1651 * _1651))) * cbSceneParam._m0[33u].y;
        float _3274 = isnan(0.0) ? _1784 : (isnan(_1784) ? 0.0 : max(_1784, 0.0));
        float _1791 = (isnan(1.0) ? _3274 : (isnan(_3274) ? 1.0 : min(_3274, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1731 + _1714) / _1726, (_1733 + _1718) / _1726), _1736), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1733 + _1714) / _1726, (_1718 - _1731) / _1726), _1736), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1714 - _1731) / _1726, (_1718 - _1733) / _1726), _1736), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1714 - _1733) / _1726, (_1731 + _1718) / _1726), _1736), 0.0)).x), vec4(0.25)));
        _1798 = 1.0 - (_1791 * cbSceneParam._m0[34u].x);
        _1799 = 1.0 - (_1791 * cbSceneParam._m0[34u].y);
        _1800 = 1.0 - (_1791 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1798 = 1.0;
        _1799 = 1.0;
        _1800 = 1.0;
    }
    float _1864;
    float _1866;
    float _1868;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1852 = fma(_1648, cbSceneParam._m0[63u].w, fma(_1644, cbSceneParam._m0[63u].z, fma(_1640, cbSceneParam._m0[63u].y, _1636 * cbSceneParam._m0[63u].x)));
        float _1853 = fma(_1648, cbSceneParam._m0[60u].w, fma(_1644, cbSceneParam._m0[60u].z, fma(_1640, cbSceneParam._m0[60u].y, _1636 * cbSceneParam._m0[60u].x))) / _1852;
        float _1854 = fma(_1648, cbSceneParam._m0[61u].w, fma(_1644, cbSceneParam._m0[61u].z, fma(_1640, cbSceneParam._m0[61u].y, _1636 * cbSceneParam._m0[61u].x))) / _1852;
        float frontier_phi_36_35_ladder;
        float frontier_phi_36_35_ladder_1;
        float frontier_phi_36_35_ladder_2;
        if ((((_1853 >= cbSceneParam._m0[64u].x) && (_1854 >= cbSceneParam._m0[64u].y)) && (_1853 <= cbSceneParam._m0[64u].z)) && (_1854 <= cbSceneParam._m0[64u].w))
        {
            float _2142 = fma(_1648, cbSceneParam._m0[62u].w, fma(_1644, cbSceneParam._m0[62u].z, fma(_1640, cbSceneParam._m0[62u].y, _1636 * cbSceneParam._m0[62u].x))) / _1852;
            float _2146 = isnan(cbSceneParam._m0[41u].w) ? _2142 : (isnan(_2142) ? cbSceneParam._m0[41u].w : max(_2142, cbSceneParam._m0[41u].w));
            float _2189 = (cbSceneParam._m0[33u].x - sqrt(((_1650 * _1650) + (_1649 * _1649)) + (_1651 * _1651))) * cbSceneParam._m0[33u].y;
            float _3290 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
            float _2196 = (isnan(1.0) ? _3290 : (isnan(_3290) ? 1.0 : min(_3290, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1853, cbSceneParam._m0[33u].w + _1854), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1853, _1854 - cbSceneParam._m0[33u].z), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1853 - cbSceneParam._m0[33u].z, _1854 - cbSceneParam._m0[33u].w), _2146), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1853 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1854), _2146), 0.0)).x), vec4(0.25)));
            float _2200 = 1.0 - (_2196 * cbSceneParam._m0[34u].x);
            float _2201 = 1.0 - (_2196 * cbSceneParam._m0[34u].y);
            float _2202 = 1.0 - (_2196 * cbSceneParam._m0[34u].z);
            frontier_phi_36_35_ladder = isnan(_2200) ? _1798 : (isnan(_1798) ? _2200 : min(_1798, _2200));
            frontier_phi_36_35_ladder_1 = isnan(_2201) ? _1799 : (isnan(_1799) ? _2201 : min(_1799, _2201));
            frontier_phi_36_35_ladder_2 = isnan(_2202) ? _1800 : (isnan(_1800) ? _2202 : min(_1800, _2202));
        }
        else
        {
            frontier_phi_36_35_ladder = _1798;
            frontier_phi_36_35_ladder_1 = _1799;
            frontier_phi_36_35_ladder_2 = _1800;
        }
        _1864 = frontier_phi_36_35_ladder;
        _1866 = frontier_phi_36_35_ladder_1;
        _1868 = frontier_phi_36_35_ladder_2;
    }
    else
    {
        _1864 = _1798;
        _1866 = _1799;
        _1868 = _1800;
    }
    uint _1874 = floatBitsToUint(cbInstanceData._m0[_399]).x * 14u;
    float _1881 = (cbLight._m0[_1874 + 13u].x * (_532 + (-1.0))) + 1.0;
    uint _1882 = _1874 + 4u;
    float _1892 = isnan(1.0) ? _1881 : (isnan(_1881) ? 1.0 : min(_1881, 1.0));
    float _1901 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_461, _462, _463));
    float _3321 = isnan(0.0) ? _1901 : (isnan(_1901) ? 0.0 : max(_1901, 0.0));
    float _1905 = (isnan(1.0) ? _3321 : (isnan(_3321) ? 1.0 : min(_3321, 1.0))) * 0.3183098733425140380859375;
    uint _1911 = _1874 + 8u;
    float _1924 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1874].w)) * _465) * 0.949999988079071044921875);
    float _1925 = _1924 * _1924;
    float _1926 = cbLight._m0[_1874].x + _486;
    float _1927 = cbLight._m0[_1874].y + _487;
    float _1928 = cbLight._m0[_1874].z + _488;
    float _1932 = inversesqrt(dot(vec3(_1926, _1927, _1928), vec3(_1926, _1927, _1928)));
    float _1933 = _1932 * _1926;
    float _1934 = _1932 * _1927;
    float _1935 = _1932 * _1928;
    float _1936 = dot(vec3(_461, _462, _463), vec3(cbLight._m0[_1874].xyz));
    float _3332 = isnan(0.0) ? _1936 : (isnan(_1936) ? 0.0 : max(_1936, 0.0));
    float _1939 = isnan(1.0) ? _3332 : (isnan(_3332) ? 1.0 : min(_3332, 1.0));
    float _3343 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _1940 = isnan(1.0) ? _3343 : (isnan(_3343) ? 1.0 : min(_3343, 1.0));
    float _1941 = dot(vec3(_461, _462, _463), vec3(_1933, _1934, _1935));
    float _3354 = isnan(0.0) ? _1941 : (isnan(_1941) ? 0.0 : max(_1941, 0.0));
    float _1944 = isnan(1.0) ? _3354 : (isnan(_3354) ? 1.0 : min(_3354, 1.0));
    float _1945 = dot(vec3(cbLight._m0[_1874].xyz), vec3(_1933, _1934, _1935));
    float _3365 = isnan(0.0) ? _1945 : (isnan(_1945) ? 0.0 : max(_1945, 0.0));
    float _1949 = _1925 * _1925;
    float _1953 = ((_1944 * _1944) * (_1949 + (-1.0))) + 1.0;
    float _1963 = (exp2(log2(1.0 - (isnan(1.0) ? _3365 : (isnan(_3365) ? 1.0 : min(_3365, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1964 = 1.0 - _1925;
    float _1975 = (0.5 / (((_1940 * ((_1939 * _1964) + _1925)) + 9.9999999392252902907785028219223e-09) + (((_1940 * _1964) + _1925) * _1939))) * _1939;
    float _3376 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0));
    float _1977 = (isnan(1.0) ? _3376 : (isnan(_3376) ? 1.0 : min(_3376, 1.0))) * (_1949 / ((_1953 * _1953) * 3.141590118408203125));
    float _2006 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2007 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2008 = cbSceneParam._m0[86u].x * ((_494 / cbSceneParam._m0[86u].x) + ((4.5 / (_481 + 10.0)) * dot(vec3(_461, _462, _463), vec3(_185, _186, _187))));
    float _2009 = isnan(_2006) ? _2008 : (isnan(_2008) ? _2006 : min(_2008, _2006));
    float _2010 = isnan(_2007) ? _495 : (isnan(_495) ? _2007 : min(_495, _2007));
    vec4 _2012 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2009, _2010), 0.0);
    float _2014 = _2012.x;
    bool _2034 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2014)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2014))) > _481;
    float _2035 = _2034 ? _2009 : _494;
    float _2036 = _2034 ? _2010 : _495;
    vec4 _2038 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2035, _2036));
    vec4 _2043 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2035, _2036));
    float _2045 = _2043.x;
    bool _2050 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2059 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2065 = (_2050 ? (_2059 / (cbSceneParam._m0[2u].x - _2045)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2045))) - _481;
    float _2067 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _2068 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _2069 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _2075 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2079 = (isnan(_2065) ? 0.0 : (isnan(0.0) ? _2065 : max(0.0, _2065))) * (-1.44269502162933349609375);
    float _3402 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _3413 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    float _3424 = isnan(0.0) ? _520 : (isnan(_520) ? 0.0 : max(_520, 0.0));
    float _2284;
    float _2285;
    float _2286;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _2204 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2035, _2036), 0.0);
        float _2206 = _2204.x;
        float _2212 = (_2050 ? (_2059 / (cbSceneParam._m0[2u].x - _2206)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2206))) - _481;
        uint _2218 = floatBitsToUint(cbInstanceData._m0[_399]).x * 14u;
        uint _2224 = _2218 + 4u;
        float _2233 = dot(vec3(cbLight._m0[_2218].xyz), vec3(_206, _207, _208));
        float _2241 = dot(vec3((-0.0) - _486, (-0.0) - _487, (-0.0) - _488), vec3((-0.0) - _206, (-0.0) - _207, (-0.0) - _208));
        float _2246 = ((isnan(0.0) ? _2241 : (isnan(_2241) ? 0.0 : max(_2241, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2233 : (isnan(_2233) ? 0.001000000047497451305389404296875 : max(_2233, 0.001000000047497451305389404296875)))) + 1.0;
        float _2248 = (-0.0) - ((isnan(_2212) ? 0.0 : (isnan(0.0) ? _2212 : max(0.0, _2212))) * _2246);
        _2284 = _2075 ? 0.0 : ((((_446 * cbMtdParam._m0[13u].w) * cbLight._m0[_2224].x) / ((_2246 * _2067) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2067 * 1.44269502162933349609375) * _2248)));
        _2285 = _2075 ? 0.0 : ((((_446 * cbMtdParam._m0[14u].x) * cbLight._m0[_2224].y) / ((_2246 * _2068) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2068 * 1.44269502162933349609375) * _2248)));
        _2286 = _2075 ? 0.0 : ((((_446 * cbMtdParam._m0[14u].y) * cbLight._m0[_2224].z) / ((_2246 * _2069) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2069 * 1.44269502162933349609375) * _2248)));
    }
    else
    {
        _2284 = 0.0;
        _2285 = 0.0;
        _2286 = 0.0;
    }
    float _2303 = 0.959999978542327880859375 - (exp2(log2(1.0 - _547) * 5.0) * 0.959999978542327880859375);
    float _2304 = (_2284 + ((exp2(_2079 * (_2075 ? 0.0 : _2067)) * _2038.x) * cbSceneParam._m0[72u].w)) * _2303;
    float _2305 = (_2285 + ((exp2(_2079 * (_2075 ? 0.0 : _2068)) * _2038.y) * cbSceneParam._m0[72u].w)) * _2303;
    float _2306 = (_2286 + ((exp2(_2079 * (_2075 ? 0.0 : _2069)) * _2038.z) * cbSceneParam._m0[72u].w)) * _2303;
    float _2329 = _494 / cbSceneParam._m0[86u].x;
    float _2330 = _495 / cbSceneParam._m0[86u].y;
    vec4 _2344 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2329, _2330, (log2((isnan(cbSceneParam._m0[77u].w) ? _481 : (isnan(_481) ? cbSceneParam._m0[77u].w : min(_481, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2346 = _2344.x;
    float _2347 = _2344.y;
    float _2348 = _2344.z;
    float _2349 = _2344.w;
    float _2421;
    float _2423;
    float _2425;
    float _2427;
    if (_481 > cbSceneParam._m0[78u].w)
    {
        float _2387 = isnan(_481) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _481 : min(cbSceneParam._m0[80u].w, _481));
        float _2388 = _2387 / _481;
        float _2399 = _2388 * _264;
        float _2400 = _2388 * _412;
        float _2401 = _2388 * _266;
        float _2403 = (cbSceneParam._m0[77u].w * _2400) / _2387;
        float _2404 = _2403 + cbSceneParam._m0[79u].w;
        float _2405 = cbSceneParam._m0[79u].w + _2400;
        float _2411 = sqrt(((_2399 * _2399) + (_2400 * _2400)) + (_2401 * _2401));
        float _2414 = (1.0 - (cbSceneParam._m0[77u].w / _2387)) * _2411;
        float _2419 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2420 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2589;
        if (abs((_2400 - _2403) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2589 = ((((_2404 > 0.0) ? exp2(_2419 * _2404) : (2.0 - exp2(_2420 * _2404))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2414;
        }
        else
        {
            float _2541 = 1.0 / cbSceneParam._m0[80u].x;
            float _2542 = isnan(_2405) ? _2404 : (isnan(_2404) ? _2405 : max(_2404, _2405));
            float _2543 = isnan(_2405) ? _2404 : (isnan(_2404) ? _2405 : min(_2404, _2405));
            float _2552 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : min(_2542, 0.0));
            float _2553 = isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : min(_2543, 0.0));
            _2589 = ((abs(_2411 / _2400) * cbSceneParam._m0[80u].y) * ((((_2552 - _2553) * 2.0) - ((exp2(_2419 * (isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0)))) - exp2(_2419 * (isnan(0.0) ? _2543 : (isnan(_2543) ? 0.0 : max(_2543, 0.0))))) * _2541)) - ((exp2(_2420 * _2552) - exp2(_2420 * _2553)) * _2541))) + (_2414 * cbSceneParam._m0[80u].z);
        }
        vec4 _2591 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2329, _2330, 1.0), 0.0);
        float _2600 = exp2((_2589 * (-1.44269502162933349609375)) * (1.0 - _2591.w));
        float _2601 = log2(_2600);
        float _2617 = log2(_2349);
        _2421 = (exp2(_2617 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].x)) * _2591.x) / cbSceneParam._m0[78u].x)) + _2346;
        _2423 = (exp2(_2617 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].y)) * _2591.y) / cbSceneParam._m0[78u].y)) + _2347;
        _2425 = (exp2(_2617 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2601 * cbSceneParam._m0[78u].z)) * _2591.z) / cbSceneParam._m0[78u].z)) + _2348;
        _2427 = _2600 * _2349;
    }
    else
    {
        _2421 = _2346;
        _2423 = _2347;
        _2425 = _2348;
        _2427 = _2349;
    }
    bool _2439 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2440 = log2(_2427);
    float _2447 = exp2(_2440 * cbSceneParam._m0[78u].x) * ((_2304 + (((((_1551 * _1586.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1557 : (isnan(_1557) ? 0.0 : max(_1557, 0.0))) * _1342) * _1602)) + ((((cbLight._m0[_1911].x * _1864) * _1963) * _1977) * _1892)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3402 : (isnan(_3402) ? 1.0 : min(_3402, 1.0))) * ((((cbLight._m0[_1882].x * _1864) * _1892) * _1905) + ((isnan(0.0) ? _1263 : (isnan(_1263) ? 0.0 : max(_1263, 0.0))) * _532))) - _2304) * cbMtdParam._m0[12u].x));
    float _2448 = exp2(_2440 * cbSceneParam._m0[78u].y) * ((_2305 + (((((_1551 * _1586.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1560 : (isnan(_1560) ? 0.0 : max(_1560, 0.0))) * _1342) * _1602)) + ((((cbLight._m0[_1911].y * _1866) * _1963) * _1977) * _1892)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3413 : (isnan(_3413) ? 1.0 : min(_3413, 1.0))) * ((((cbLight._m0[_1882].y * _1866) * _1892) * _1905) + ((isnan(0.0) ? _1266 : (isnan(_1266) ? 0.0 : max(_1266, 0.0))) * _532))) - _2305) * cbMtdParam._m0[12u].x));
    float _2449 = exp2(_2440 * cbSceneParam._m0[78u].z) * ((_2306 + (((((_1551 * _1586.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1563 : (isnan(_1563) ? 0.0 : max(_1563, 0.0))) * _1342) * _1602)) + ((((cbLight._m0[_1911].z * _1868) * _1963) * _1977) * _1892)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3424 : (isnan(_3424) ? 1.0 : min(_3424, 1.0))) * ((((cbLight._m0[_1882].z * _1868) * _1892) * _1905) + ((isnan(0.0) ? _1269 : (isnan(_1269) ? 0.0 : max(_1269, 0.0))) * _532))) - _2306) * cbMtdParam._m0[12u].x));
    vec4 _2457 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_494, _495));
    float _2459 = _2457.x;
    float _2480 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2459)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2459))) - _481) * 3.0;
    float _3490 = isnan(0.0) ? _2480 : (isnan(_2480) ? 0.0 : max(_2480, 0.0));
    float _2482 = (cbInstanceData._m0[_340 + 6u].w * (isnan(1.0) ? _2806 : (isnan(_2806) ? 1.0 : min(_2806, 1.0)))) * (isnan(1.0) ? _3490 : (isnan(_3490) ? 1.0 : min(_3490, 1.0)));
    float _2491 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2491 * (_2439 ? _2447 : (_2447 + (cbSceneParam._m0[72u].w * _2421)));
    SV_Target.y = _2491 * (_2439 ? _2448 : (_2448 + (cbSceneParam._m0[72u].w * _2423)));
    SV_Target.z = _2491 * (_2439 ? _2449 : (_2449 + (cbSceneParam._m0[72u].w * _2425)));
    SV_Target.w = _2482;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2482;
}


