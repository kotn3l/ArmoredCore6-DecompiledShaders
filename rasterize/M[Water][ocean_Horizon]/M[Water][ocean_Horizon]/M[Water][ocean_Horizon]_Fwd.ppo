#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _903;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _173 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _174 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _175 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _180 = inversesqrt(dot(vec3(_173, _174, _175), vec3(_173, _174, _175)));
    float _181 = _180 * _173;
    float _182 = _180 * _174;
    float _183 = _180 * _175;
    float _187 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _188 = _187 * NORMAL.x;
    float _189 = _187 * NORMAL.y;
    float _190 = _187 * NORMAL.z;
    float _194 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _202;
    float _203;
    float _204;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _202 = (-0.0) - _188;
        _203 = (-0.0) - _189;
        _204 = (-0.0) - _190;
    }
    else
    {
        _202 = _188;
        _203 = _189;
        _204 = _190;
    }
    float _250 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _260 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _250);
    float _261 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _250);
    float _262 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _250);
    uvec4 _273 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _276 = _261 * 100.0;
    float _2376 = isnan(0.0) ? _276 : (isnan(_276) ? 0.0 : max(_276, 0.0));
    float _284 = cbMtdParam._m0[11u].y * _261;
    float _2387 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _288 = exp2(log2(isnan(1.0) ? _2387 : (isnan(_2387) ? 1.0 : min(_2387, 1.0))) * cbMtdParam._m0[11u].z);
    float _2398 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _295 = cbMtdParam._m0[12u].z * _261;
    float _2409 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
    float _299 = exp2(log2(isnan(1.0) ? _2409 : (isnan(_2409) ? 1.0 : min(_2409, 1.0))) * cbMtdParam._m0[11u].w);
    float _2420 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _300 = isnan(1.0) ? _2420 : (isnan(_2420) ? 1.0 : min(_2420, 1.0));
    float _303 = cbMtdParam._m0[12u].y * _261;
    float _2431 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _307 = exp2(log2(isnan(1.0) ? _2431 : (isnan(_2431) ? 1.0 : min(_2431, 1.0))) * cbMtdParam._m0[11u].x);
    float _2442 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _312 = (((isnan(1.0) ? _2442 : (isnan(_2442) ? 1.0 : min(_2442, 1.0))) - _300) * 0.5) + _300;
    float _315 = (((isnan(1.0) ? _2398 : (isnan(_2398) ? 1.0 : min(_2398, 1.0))) - _312) * 0.5) + _312;
    float _2453 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _317 = (_273.y != 0u) ? (isnan(1.0) ? _2453 : (isnan(_2453) ? 1.0 : min(_2453, 1.0))) : (isnan(1.0) ? _2376 : (isnan(_2376) ? 1.0 : min(_2376, 1.0)));
    bool _332 = _273.x != 0u;
    uint _336 = uint(roundEven(NORMAL.w)) * 13u;
    float _341 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_336 + 1u].w;
    float _342 = _260 / _261;
    float _344 = (-0.0) - (_262 / _261);
    vec4 _365 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_332 ? (_341 * _342) : _342) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_332 ? (_341 * _344) : _344) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _373 = (_365.x * 2.0) + (-1.0);
    float _375 = (_365.y * 2.0) + (-1.0);
    float _376 = dot(vec2(_373, _375), vec2(_373, _375));
    float _2464 = isnan(0.0) ? _376 : (isnan(_376) ? 0.0 : max(_376, 0.0));
    float _381 = sqrt(1.0 - (isnan(1.0) ? _2464 : (isnan(_2464) ? 1.0 : min(_2464, 1.0))));
    uint _395 = _336 + 5u;
    float _407 = (-0.0) - _260;
    float _408 = (-0.0) - _261;
    float _409 = (-0.0) - _262;
    float _413 = inversesqrt(dot(vec3(_407, _408, _409), vec3(_407, _408, _409)));
    float _417 = dot(vec3(_413 * _407, _413 * _408, _413 * _409), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_395]).x * 14u].xyz));
    float _428 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_417 * 0.60000002384185791015625)) * 1.5);
    float _442 = ((((0.959999978542327880859375 / exp2(log2((_417 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _428) * 0.5) + _428) * 0.079577468335628509521484375;
    float _446 = fma(_381, _202, fma(_375, _194 * TANGENT.x, _373 * _181));
    float _449 = fma(_381, _203, fma(_375, _194 * TANGENT.y, _373 * _182));
    float _452 = fma(_381, _204, fma(_375, _194 * TANGENT.z, _373 * _183));
    float _456 = inversesqrt(dot(vec3(_446, _449, _452), vec3(_446, _449, _452)));
    float _457 = _456 * _446;
    float _458 = _456 * _449;
    float _459 = _456 * _452;
    float _2475 = isnan(0.0) ? _317 : (isnan(_317) ? 0.0 : max(_317, 0.0));
    float _2486 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _461 = isnan(1.0) ? _2486 : (isnan(_2486) ? 1.0 : min(_2486, 1.0));
    float _2497 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2508 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2519 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _477 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _481 = inversesqrt(dot(vec3(_260, _261, _262), vec3(_260, _261, _262)));
    float _482 = _260 * _481;
    float _483 = _261 * _481;
    float _484 = _262 * _481;
    float _490 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _491 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _505 = (_336 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _511 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2497 : (isnan(_2497) ? 1.0 : min(_2497, 1.0)))) * cbInstanceData._m0[_505].x;
    float _512 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2508 : (isnan(_2508) ? 1.0 : min(_2508, 1.0)))) * cbInstanceData._m0[_505].y;
    float _513 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2519 : (isnan(_2519) ? 1.0 : min(_2519, 1.0)))) * cbInstanceData._m0[_505].z;
    float _2530 = isnan(0.0) ? _511 : (isnan(_511) ? 0.0 : max(_511, 0.0));
    float _514 = isnan(1.0) ? _2530 : (isnan(_2530) ? 1.0 : min(_2530, 1.0));
    float _2541 = isnan(0.0) ? _512 : (isnan(_512) ? 0.0 : max(_512, 0.0));
    float _515 = isnan(1.0) ? _2541 : (isnan(_2541) ? 1.0 : min(_2541, 1.0));
    float _2552 = isnan(0.0) ? _513 : (isnan(_513) ? 0.0 : max(_513, 0.0));
    float _516 = isnan(1.0) ? _2552 : (isnan(_2552) ? 1.0 : min(_2552, 1.0));
    vec4 _525 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _490, cbSceneParam._m0[86u].y * _491));
    float _528 = _525.x * TEXCOORD.z;
    float _529 = dot(vec3(_457, _458, _459), vec3(_482, _483, _484));
    float _532 = _529 * 2.0;
    float _536 = (_532 * _457) - _482;
    float _537 = (_532 * _458) - _483;
    float _538 = (_532 * _459) - _484;
    float _542 = abs(dot(vec3(_482, _483, _484), vec3(_457, _458, _459)));
    float _2563 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _543 = isnan(1.0) ? _2563 : (isnan(_2563) ? 1.0 : min(_2563, 1.0));
    float _551 = sqrt(_461);
    float _563 = exp2((_551 * 5.0) * log2(1.0 - (_543 * 0.999000012874603271484375))) / (4.0 - (_551 * 3.0));
    float _593 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _597 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _601 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _902;
    float _904;
    float _905;
    float _906;
    float _907;
    float _908;
    float _909;
    float _910;
    float _911;
    float _912;
    float _913;
    float _914;
    float _915;
    float _916;
    float _917;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _628 = fma(_601, cbModelParam._m0[26u].z, fma(_597, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _593));
        float _632 = fma(_601, cbModelParam._m0[27u].z, fma(_597, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _593));
        float _636 = fma(_601, cbModelParam._m0[28u].z, fma(_597, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _593));
        float _660 = _593 + _457;
        float _661 = _597 + _458;
        float _662 = _601 + _459;
        float _672 = fma(_662, cbModelParam._m0[26u].z, fma(_661, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _660)) - _628;
        float _673 = fma(_662, cbModelParam._m0[27u].z, fma(_661, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _660)) - _632;
        float _674 = fma(_662, cbModelParam._m0[28u].z, fma(_661, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _660)) - _636;
        float _678 = inversesqrt(dot(vec3(_672, _673, _674), vec3(_672, _673, _674)));
        float _691 = ((_678 * _672) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_628 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _692 = ((_678 * _673) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_632 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _693 = ((_678 * _674) / cbModelParam._m0[34u].z) + ((((((_636 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _696 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_691, _692, _693), 0.0);
        vec4 _703 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_691, _692, _693), 0.0);
        vec4 _710 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_691, _692, _693), 0.0);
        vec4 _717 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_691, _692, _693), 0.0);
        float _730 = exp2((_696.w + (-0.5)) * 20.0) * 2.0;
        float _731 = _730 * (_696.x + (-0.5));
        float _732 = _730 * (_696.y + (-0.5));
        float _733 = _730 * (_696.z + (-0.5));
        float _740 = exp2((_703.w + (-0.5)) * 20.0) * 2.0;
        float _741 = _740 * (_703.x + (-0.5));
        float _742 = _740 * (_703.y + (-0.5));
        float _743 = _740 * (_703.z + (-0.5));
        float _750 = exp2((_710.w + (-0.5)) * 20.0) * 2.0;
        float _751 = _750 * (_710.x + (-0.5));
        float _752 = _750 * (_710.y + (-0.5));
        float _753 = _750 * (_710.z + (-0.5));
        float _760 = exp2((_717.w + (-0.5)) * 20.0) * 2.0;
        float _761 = _760 * (_717.x + (-0.5));
        float _762 = _760 * (_717.y + (-0.5));
        float _763 = _760 * (_717.z + (-0.5));
        float _764 = isnan(0.0) ? _761 : (isnan(_761) ? 0.0 : max(_761, 0.0));
        float _765 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
        float _766 = isnan(0.0) ? _763 : (isnan(_763) ? 0.0 : max(_763, 0.0));
        float _767 = _731 * 0.5;
        float _768 = _741 * 0.5;
        float _769 = _751 * 0.5;
        float _770 = dot(vec3(_767, _768, _769), vec3(_767, _768, _769));
        float _775 = (_770 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_770);
        float _784 = (dot(vec3(_457, _458, _459), vec3(_775 * _767, _775 * _768, _775 * _769)) + 1.0) * 0.5;
        float _2589 = isnan(0.0) ? _784 : (isnan(_784) ? 0.0 : max(_784, 0.0));
        float _794 = sqrt(((_768 * _768) + (_767 * _767)) + (_769 * _769)) / (_764 + 9.9999997473787516355514526367188e-06);
        float _2600 = isnan(0.0) ? _794 : (isnan(_794) ? 0.0 : max(_794, 0.0));
        float _795 = isnan(1.0) ? _2600 : (isnan(_2600) ? 1.0 : min(_2600, 1.0));
        float _796 = _795 * 2.0;
        float _800 = (1.0 - _795) / (_795 + 1.0);
        float _2611 = isnan(0.0) ? _800 : (isnan(_800) ? 0.0 : max(_800, 0.0));
        float _801 = isnan(1.0) ? _2611 : (isnan(_2611) ? 1.0 : min(_2611, 1.0));
        float _810 = ((((1.0 - _801) * (_796 + 2.0)) * exp2(log2(isnan(1.0) ? _2589 : (isnan(_2589) ? 1.0 : min(_2589, 1.0))) * (_796 + 1.0))) + _801) * _764;
        float _811 = _732 * 0.5;
        float _812 = _742 * 0.5;
        float _813 = _752 * 0.5;
        float _814 = dot(vec3(_811, _812, _813), vec3(_811, _812, _813));
        float _819 = (_814 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_814);
        float _827 = (dot(vec3(_457, _458, _459), vec3(_819 * _811, _819 * _812, _819 * _813)) + 1.0) * 0.5;
        float _2622 = isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0));
        float _836 = sqrt(((_812 * _812) + (_811 * _811)) + (_813 * _813)) / (_765 + 9.9999997473787516355514526367188e-06);
        float _2633 = isnan(0.0) ? _836 : (isnan(_836) ? 0.0 : max(_836, 0.0));
        float _837 = isnan(1.0) ? _2633 : (isnan(_2633) ? 1.0 : min(_2633, 1.0));
        float _838 = _837 * 2.0;
        float _842 = (1.0 - _837) / (_837 + 1.0);
        float _2644 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _843 = isnan(1.0) ? _2644 : (isnan(_2644) ? 1.0 : min(_2644, 1.0));
        float _852 = ((((1.0 - _843) * (_838 + 2.0)) * exp2(log2(isnan(1.0) ? _2622 : (isnan(_2622) ? 1.0 : min(_2622, 1.0))) * (_838 + 1.0))) + _843) * _765;
        float _853 = _733 * 0.5;
        float _854 = _743 * 0.5;
        float _855 = _753 * 0.5;
        float _856 = dot(vec3(_853, _854, _855), vec3(_853, _854, _855));
        float _861 = (_856 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_856);
        float _869 = (dot(vec3(_457, _458, _459), vec3(_861 * _853, _861 * _854, _861 * _855)) + 1.0) * 0.5;
        float _2655 = isnan(0.0) ? _869 : (isnan(_869) ? 0.0 : max(_869, 0.0));
        float _878 = sqrt(((_854 * _854) + (_853 * _853)) + (_855 * _855)) / (_766 + 9.9999997473787516355514526367188e-06);
        float _2666 = isnan(0.0) ? _878 : (isnan(_878) ? 0.0 : max(_878, 0.0));
        float _879 = isnan(1.0) ? _2666 : (isnan(_2666) ? 1.0 : min(_2666, 1.0));
        float _880 = _879 * 2.0;
        float _884 = (1.0 - _879) / (_879 + 1.0);
        float _2677 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _885 = isnan(1.0) ? _2677 : (isnan(_2677) ? 1.0 : min(_2677, 1.0));
        float _894 = ((((1.0 - _885) * (_880 + 2.0)) * exp2(log2(isnan(1.0) ? _2655 : (isnan(_2655) ? 1.0 : min(_2655, 1.0))) * (_880 + 1.0))) + _885) * _766;
        _902 = _733;
        _904 = _732;
        _905 = _731;
        _906 = _743;
        _907 = _742;
        _908 = _741;
        _909 = _753;
        _910 = _752;
        _911 = _751;
        _912 = _766;
        _913 = _765;
        _914 = _764;
        _915 = cbModelParam._m0[36u].z * (isnan(0.0) ? _810 : (isnan(_810) ? 0.0 : max(_810, 0.0)));
        _916 = cbModelParam._m0[36u].z * (isnan(0.0) ? _852 : (isnan(_852) ? 0.0 : max(_852, 0.0)));
        _917 = cbModelParam._m0[36u].z * (isnan(0.0) ? _894 : (isnan(_894) ? 0.0 : max(_894, 0.0)));
    }
    else
    {
        _902 = _903;
        _904 = _903;
        _905 = _903;
        _906 = _903;
        _907 = _903;
        _908 = _903;
        _909 = _903;
        _910 = _903;
        _911 = _903;
        _912 = _903;
        _913 = _903;
        _914 = _903;
        _915 = 0.0;
        _916 = 0.0;
        _917 = 0.0;
    }
    float _1212;
    float _1213;
    float _1214;
    float _1215;
    float _1216;
    float _1217;
    float _1218;
    float _1219;
    float _1220;
    float _1221;
    float _1222;
    float _1223;
    float _1224;
    float _1225;
    float _1226;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _943 = fma(_601, cbModelParam._m0[30u].z, fma(_597, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _593));
        float _947 = fma(_601, cbModelParam._m0[31u].z, fma(_597, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _593));
        float _951 = fma(_601, cbModelParam._m0[32u].z, fma(_597, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _593));
        float _974 = _593 + _457;
        float _975 = _597 + _458;
        float _976 = _601 + _459;
        float _986 = fma(_976, cbModelParam._m0[30u].z, fma(_975, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _974)) - _943;
        float _987 = fma(_976, cbModelParam._m0[31u].z, fma(_975, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _974)) - _947;
        float _988 = fma(_976, cbModelParam._m0[32u].z, fma(_975, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _974)) - _951;
        float _992 = inversesqrt(dot(vec3(_986, _987, _988), vec3(_986, _987, _988)));
        float _1005 = ((_992 * _986) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_943 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1006 = ((_992 * _987) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_947 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1007 = ((_992 * _988) / cbModelParam._m0[35u].z) + ((((((_951 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1009 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1016 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1023 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        vec4 _1030 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1005, _1006, _1007), 0.0);
        float _1042 = exp2((_1009.w + (-0.5)) * 20.0) * 2.0;
        float _1043 = _1042 * (_1009.x + (-0.5));
        float _1044 = _1042 * (_1009.y + (-0.5));
        float _1045 = _1042 * (_1009.z + (-0.5));
        float _1052 = exp2((_1016.w + (-0.5)) * 20.0) * 2.0;
        float _1053 = _1052 * (_1016.x + (-0.5));
        float _1054 = _1052 * (_1016.y + (-0.5));
        float _1055 = _1052 * (_1016.z + (-0.5));
        float _1062 = exp2((_1023.w + (-0.5)) * 20.0) * 2.0;
        float _1063 = _1062 * (_1023.x + (-0.5));
        float _1064 = _1062 * (_1023.y + (-0.5));
        float _1065 = _1062 * (_1023.z + (-0.5));
        float _1072 = exp2((_1030.w + (-0.5)) * 20.0) * 2.0;
        float _1073 = _1072 * (_1030.x + (-0.5));
        float _1074 = _1072 * (_1030.y + (-0.5));
        float _1075 = _1072 * (_1030.z + (-0.5));
        float _1076 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1077 = isnan(0.0) ? _1074 : (isnan(_1074) ? 0.0 : max(_1074, 0.0));
        float _1078 = isnan(0.0) ? _1075 : (isnan(_1075) ? 0.0 : max(_1075, 0.0));
        float _1079 = _1043 * 0.5;
        float _1080 = _1053 * 0.5;
        float _1081 = _1063 * 0.5;
        float _1082 = dot(vec3(_1079, _1080, _1081), vec3(_1079, _1080, _1081));
        float _1087 = (_1082 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1082);
        float _1095 = (dot(vec3(_457, _458, _459), vec3(_1087 * _1079, _1087 * _1080, _1087 * _1081)) + 1.0) * 0.5;
        float _2718 = isnan(0.0) ? _1095 : (isnan(_1095) ? 0.0 : max(_1095, 0.0));
        float _1104 = sqrt(((_1080 * _1080) + (_1079 * _1079)) + (_1081 * _1081)) / (_1076 + 9.9999997473787516355514526367188e-06);
        float _2729 = isnan(0.0) ? _1104 : (isnan(_1104) ? 0.0 : max(_1104, 0.0));
        float _1105 = isnan(1.0) ? _2729 : (isnan(_2729) ? 1.0 : min(_2729, 1.0));
        float _1106 = _1105 * 2.0;
        float _1110 = (1.0 - _1105) / (_1105 + 1.0);
        float _2740 = isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0));
        float _1111 = isnan(1.0) ? _2740 : (isnan(_2740) ? 1.0 : min(_2740, 1.0));
        float _1120 = ((((1.0 - _1111) * (_1106 + 2.0)) * exp2(log2(isnan(1.0) ? _2718 : (isnan(_2718) ? 1.0 : min(_2718, 1.0))) * (_1106 + 1.0))) + _1111) * _1076;
        float _1121 = _1044 * 0.5;
        float _1122 = _1054 * 0.5;
        float _1123 = _1064 * 0.5;
        float _1124 = dot(vec3(_1121, _1122, _1123), vec3(_1121, _1122, _1123));
        float _1129 = (_1124 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1124);
        float _1137 = (dot(vec3(_457, _458, _459), vec3(_1129 * _1121, _1129 * _1122, _1129 * _1123)) + 1.0) * 0.5;
        float _2751 = isnan(0.0) ? _1137 : (isnan(_1137) ? 0.0 : max(_1137, 0.0));
        float _1146 = sqrt(((_1122 * _1122) + (_1121 * _1121)) + (_1123 * _1123)) / (_1077 + 9.9999997473787516355514526367188e-06);
        float _2762 = isnan(0.0) ? _1146 : (isnan(_1146) ? 0.0 : max(_1146, 0.0));
        float _1147 = isnan(1.0) ? _2762 : (isnan(_2762) ? 1.0 : min(_2762, 1.0));
        float _1148 = _1147 * 2.0;
        float _1152 = (1.0 - _1147) / (_1147 + 1.0);
        float _2773 = isnan(0.0) ? _1152 : (isnan(_1152) ? 0.0 : max(_1152, 0.0));
        float _1153 = isnan(1.0) ? _2773 : (isnan(_2773) ? 1.0 : min(_2773, 1.0));
        float _1162 = ((((1.0 - _1153) * (_1148 + 2.0)) * exp2(log2(isnan(1.0) ? _2751 : (isnan(_2751) ? 1.0 : min(_2751, 1.0))) * (_1148 + 1.0))) + _1153) * _1077;
        float _1163 = _1045 * 0.5;
        float _1164 = _1055 * 0.5;
        float _1165 = _1065 * 0.5;
        float _1166 = dot(vec3(_1163, _1164, _1165), vec3(_1163, _1164, _1165));
        float _1171 = (_1166 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1166);
        float _1179 = (dot(vec3(_457, _458, _459), vec3(_1171 * _1163, _1171 * _1164, _1171 * _1165)) + 1.0) * 0.5;
        float _2784 = isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0));
        float _1188 = sqrt(((_1164 * _1164) + (_1163 * _1163)) + (_1165 * _1165)) / (_1078 + 9.9999997473787516355514526367188e-06);
        float _2795 = isnan(0.0) ? _1188 : (isnan(_1188) ? 0.0 : max(_1188, 0.0));
        float _1189 = isnan(1.0) ? _2795 : (isnan(_2795) ? 1.0 : min(_2795, 1.0));
        float _1190 = _1189 * 2.0;
        float _1194 = (1.0 - _1189) / (_1189 + 1.0);
        float _2806 = isnan(0.0) ? _1194 : (isnan(_1194) ? 0.0 : max(_1194, 0.0));
        float _1195 = isnan(1.0) ? _2806 : (isnan(_2806) ? 1.0 : min(_2806, 1.0));
        float _1204 = ((((1.0 - _1195) * (_1190 + 2.0)) * exp2(log2(isnan(1.0) ? _2784 : (isnan(_2784) ? 1.0 : min(_2784, 1.0))) * (_1190 + 1.0))) + _1195) * _1078;
        _1212 = _1045;
        _1213 = _1044;
        _1214 = _1043;
        _1215 = _1055;
        _1216 = _1054;
        _1217 = _1053;
        _1218 = _1065;
        _1219 = _1064;
        _1220 = _1063;
        _1221 = _1078;
        _1222 = _1077;
        _1223 = _1076;
        _1224 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0)));
        _1225 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)));
        _1226 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1204 : (isnan(_1204) ? 0.0 : max(_1204, 0.0)));
    }
    else
    {
        _1212 = _903;
        _1213 = _903;
        _1214 = _903;
        _1215 = _903;
        _1216 = _903;
        _1217 = _903;
        _1218 = _903;
        _1219 = _903;
        _1220 = _903;
        _1221 = _903;
        _1222 = _903;
        _1223 = _903;
        _1224 = 0.0;
        _1225 = 0.0;
        _1226 = 0.0;
    }
    float _1236 = (cbModelParam._m0[1u].x * (_1224 - _915)) + _915;
    float _1237 = (cbModelParam._m0[1u].x * (_1225 - _916)) + _916;
    float _1238 = (cbModelParam._m0[1u].x * (_1226 - _917)) + _917;
    float _1259 = fma(_1238, cbSceneParam._m0[89u].z, fma(_1237, cbSceneParam._m0[89u].y, _1236 * cbSceneParam._m0[89u].x));
    float _1262 = fma(_1238, cbSceneParam._m0[90u].z, fma(_1237, cbSceneParam._m0[90u].y, _1236 * cbSceneParam._m0[90u].x));
    float _1265 = fma(_1238, cbSceneParam._m0[91u].z, fma(_1237, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1236));
    float _1280 = _536 * 0.5;
    float _1281 = _537 * 0.5;
    float _1282 = _538 * 0.5;
    float _1283 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_1214, _1217, _1220, _1223));
    float _1286 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_1213, _1216, _1219, _1222));
    float _1289 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_1212, _1215, _1218, _1221));
    float _1323;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1296 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_902, _906, _909, _912));
        float _1300 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_904, _907, _910, _913));
        float _1304 = dot(vec4(_1280, _1281, _1282, 1.0), vec4(_905, _908, _911, _914));
        float _1311 = dot(vec4(cbModelParam._m0[39u]), vec4(_1280, _1281, _1282, 1.0));
        _1323 = dot(vec3(isnan(0.0) ? _1304 : (isnan(_1304) ? 0.0 : max(_1304, 0.0)), isnan(0.0) ? _1300 : (isnan(_1300) ? 0.0 : max(_1300, 0.0)), isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1311) ? 0.0 : (isnan(0.0) ? _1311 : max(0.0, _1311))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1323 = 1.0;
    }
    float _1334;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1325 = dot(vec4(cbModelParam._m0[40u]), vec4(_1280, _1281, _1282, 1.0));
        _1334 = dot(vec3(isnan(0.0) ? _1283 : (isnan(_1283) ? 0.0 : max(_1283, 0.0)), isnan(0.0) ? _1286 : (isnan(_1286) ? 0.0 : max(_1286, 0.0)), isnan(0.0) ? _1289 : (isnan(_1289) ? 0.0 : max(_1289, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1325) ? 0.0 : (isnan(0.0) ? _1325 : max(0.0, _1325))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1334 = 1.0;
    }
    float _1338 = (_1334 * cbModelParam._m0[1u].x) + (_1323 * (1.0 - cbModelParam._m0[1u].x));
    float _1348 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _461);
    float _1349 = isnan(_1348) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1348 : min(cbModelParam._m0[25u].z, _1348));
    float _1430;
    float _1432;
    float _1434;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1397 = fma(_601, cbModelParam._m0[13u].z, fma(_597, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _593)) + cbModelParam._m0[13u].w;
        float _1401 = fma(_601, cbModelParam._m0[14u].z, fma(_597, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _593)) + cbModelParam._m0[14u].w;
        float _1405 = fma(_601, cbModelParam._m0[15u].z, fma(_597, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _593)) + cbModelParam._m0[15u].w;
        float _1408 = fma(_538, cbModelParam._m0[13u].z, fma(_537, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _536));
        float _1411 = fma(_538, cbModelParam._m0[14u].z, fma(_537, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _536));
        float _1414 = fma(_538, cbModelParam._m0[15u].z, fma(_537, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _536));
        float _1442;
        if (_1408 > 0.0)
        {
            _1442 = abs((1.0 - _1397) / _1408);
        }
        else
        {
            float frontier_phi_16_14_ladder;
            if (_1408 < 0.0)
            {
                frontier_phi_16_14_ladder = abs((_1397 + 1.0) / _1408);
            }
            else
            {
                frontier_phi_16_14_ladder = 5000.0;
            }
            _1442 = frontier_phi_16_14_ladder;
        }
        float _1831;
        if (_1411 > 0.0)
        {
            _1831 = abs((1.0 - _1401) / _1411);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1411 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1401 + 1.0) / _1411);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _1831 = frontier_phi_25_21_ladder;
        }
        float _2125;
        if (_1414 > 0.0)
        {
            _2125 = abs((1.0 - _1405) / _1414);
        }
        else
        {
            float frontier_phi_37_32_ladder;
            if (_1414 < 0.0)
            {
                frontier_phi_37_32_ladder = abs((_1405 + 1.0) / _1414);
            }
            else
            {
                frontier_phi_37_32_ladder = 5000.0;
            }
            _2125 = frontier_phi_37_32_ladder;
        }
        float _2127 = isnan(_1831) ? _1442 : (isnan(_1442) ? _1831 : min(_1442, _1831));
        float _2128 = isnan(_2125) ? _2127 : (isnan(_2127) ? _2125 : min(_2127, _2125));
        float _2132 = (_2128 * _1408) + _1397;
        float _2133 = (_2128 * _1411) + _1401;
        float _2134 = (_2128 * _1414) + _1405;
        float _2135 = _2128 * 9.9999997473787516355514526367188e-05;
        float _2136 = (-1.0) - _2135;
        float _2138 = _2135 + 1.0;
        float frontier_phi_15_37_ladder;
        float frontier_phi_15_37_ladder_1;
        float frontier_phi_15_37_ladder_2;
        if ((_2134 > _2138) || ((_2134 < _2136) || ((_2133 > _2138) || ((_2133 < _2136) || ((_2132 < _2136) || (_2132 > _2138))))))
        {
            frontier_phi_15_37_ladder = 0.0;
            frontier_phi_15_37_ladder_1 = 0.0;
            frontier_phi_15_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2211 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2134, cbModelParam._m0[9u].z, fma(_2133, cbModelParam._m0[9u].y, _2132 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2134, cbModelParam._m0[10u].z, fma(_2133, cbModelParam._m0[10u].y, _2132 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2134, cbModelParam._m0[11u].z, fma(_2133, cbModelParam._m0[11u].y, _2132 * cbModelParam._m0[11u].x))), _1349);
            frontier_phi_15_37_ladder = _2211.z * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_1 = _2211.y * cbModelParam._m0[1u].y;
            frontier_phi_15_37_ladder_2 = _2211.x * cbModelParam._m0[1u].y;
        }
        _1430 = frontier_phi_15_37_ladder_2;
        _1432 = frontier_phi_15_37_ladder_1;
        _1434 = frontier_phi_15_37_ladder;
    }
    else
    {
        vec4 _1418 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_536, _537, _538), _1349);
        _1430 = _1418.x * cbModelParam._m0[1u].y;
        _1432 = _1418.y * cbModelParam._m0[1u].y;
        _1434 = _1418.z * cbModelParam._m0[1u].y;
    }
    float _1438 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _461);
    float _1439 = isnan(_1438) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1438 : min(cbModelParam._m0[25u].w, _1438));
    float _1531;
    float _1533;
    float _1535;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1495 = fma(_601, cbModelParam._m0[21u].z, fma(_597, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _593)) + cbModelParam._m0[21u].w;
        float _1499 = fma(_601, cbModelParam._m0[22u].z, fma(_597, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _593)) + cbModelParam._m0[22u].w;
        float _1503 = fma(_601, cbModelParam._m0[23u].z, fma(_597, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _593)) + cbModelParam._m0[23u].w;
        float _1506 = fma(_538, cbModelParam._m0[21u].z, fma(_537, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _536));
        float _1509 = fma(_538, cbModelParam._m0[22u].z, fma(_537, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _536));
        float _1512 = fma(_538, cbModelParam._m0[23u].z, fma(_537, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _536));
        float _1836;
        if (_1506 > 0.0)
        {
            _1836 = abs((1.0 - _1495) / _1506);
        }
        else
        {
            float frontier_phi_27_23_ladder;
            if (_1506 < 0.0)
            {
                frontier_phi_27_23_ladder = abs((_1495 + 1.0) / _1506);
            }
            else
            {
                frontier_phi_27_23_ladder = 5000.0;
            }
            _1836 = frontier_phi_27_23_ladder;
        }
        float _2151;
        if (_1509 > 0.0)
        {
            _2151 = abs((1.0 - _1499) / _1509);
        }
        else
        {
            float frontier_phi_39_34_ladder;
            if (_1509 < 0.0)
            {
                frontier_phi_39_34_ladder = abs((_1499 + 1.0) / _1509);
            }
            else
            {
                frontier_phi_39_34_ladder = 5000.0;
            }
            _2151 = frontier_phi_39_34_ladder;
        }
        float _2258;
        if (_1512 > 0.0)
        {
            _2258 = abs((1.0 - _1503) / _1512);
        }
        else
        {
            float frontier_phi_47_45_ladder;
            if (_1512 < 0.0)
            {
                frontier_phi_47_45_ladder = abs((_1503 + 1.0) / _1512);
            }
            else
            {
                frontier_phi_47_45_ladder = 5000.0;
            }
            _2258 = frontier_phi_47_45_ladder;
        }
        float _2260 = isnan(_2151) ? _1836 : (isnan(_1836) ? _2151 : min(_1836, _2151));
        float _2261 = isnan(_2258) ? _2260 : (isnan(_2260) ? _2258 : min(_2260, _2258));
        float _2265 = (_2261 * _1506) + _1495;
        float _2266 = (_2261 * _1509) + _1499;
        float _2267 = (_2261 * _1512) + _1503;
        float _2268 = _2261 * 9.9999997473787516355514526367188e-05;
        float _2269 = (-1.0) - _2268;
        float _2271 = _2268 + 1.0;
        float frontier_phi_24_47_ladder;
        float frontier_phi_24_47_ladder_1;
        float frontier_phi_24_47_ladder_2;
        if ((_2267 > _2271) || ((_2267 < _2269) || ((_2266 > _2271) || ((_2266 < _2269) || ((_2265 < _2269) || (_2265 > _2271))))))
        {
            frontier_phi_24_47_ladder = 0.0;
            frontier_phi_24_47_ladder_1 = 0.0;
            frontier_phi_24_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2300 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2267, cbModelParam._m0[17u].z, fma(_2266, cbModelParam._m0[17u].y, _2265 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2267, cbModelParam._m0[18u].z, fma(_2266, cbModelParam._m0[18u].y, _2265 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2267, cbModelParam._m0[19u].z, fma(_2266, cbModelParam._m0[19u].y, _2265 * cbModelParam._m0[19u].x))), _1439);
            frontier_phi_24_47_ladder = _2300.z * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_1 = _2300.y * cbModelParam._m0[1u].z;
            frontier_phi_24_47_ladder_2 = _2300.x * cbModelParam._m0[1u].z;
        }
        _1531 = frontier_phi_24_47_ladder_2;
        _1533 = frontier_phi_24_47_ladder_1;
        _1535 = frontier_phi_24_47_ladder;
    }
    else
    {
        vec4 _1515 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_536, _537, _538), _1439);
        _1531 = _1515.x * cbModelParam._m0[1u].z;
        _1533 = _1515.y * cbModelParam._m0[1u].z;
        _1535 = _1515.z * cbModelParam._m0[1u].z;
    }
    float _1547 = ((((1.0 - _563) * ((_551 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_563 * _551)) * _528;
    float _1548 = _1547 * ((cbModelParam._m0[1u].w * (_1531 - _1430)) + _1430);
    float _1549 = _1547 * ((cbModelParam._m0[1u].w * (_1533 - _1432)) + _1432);
    float _1550 = _1547 * ((cbModelParam._m0[1u].w * (_1535 - _1434)) + _1434);
    float _1553 = fma(_1550, cbSceneParam._m0[89u].z, fma(_1549, cbSceneParam._m0[89u].y, _1548 * cbSceneParam._m0[89u].x));
    float _1556 = fma(_1550, cbSceneParam._m0[90u].z, fma(_1549, cbSceneParam._m0[90u].y, _1548 * cbSceneParam._m0[90u].x));
    float _1559 = fma(_1550, cbSceneParam._m0[91u].z, fma(_1549, cbSceneParam._m0[91u].y, _1548 * cbSceneParam._m0[91u].x));
    float _1578 = (cbSceneParam._m0[88u].y * (1.0 - _461)) + cbSceneParam._m0[88u].z;
    float _2932 = isnan(0.0) ? _1578 : (isnan(_1578) ? 0.0 : max(_1578, 0.0));
    vec4 _1582 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_490, _491), (isnan(1.0) ? _2932 : (isnan(_2932) ? 1.0 : min(_2932, 1.0))) * 5.0);
    float _1598 = 1.0 - _1582.w;
    uint _1609 = floatBitsToUint(cbInstanceData._m0[_395]).x * 14u;
    float _1616 = (cbLight._m0[_1609 + 13u].x * (_528 + (-1.0))) + 1.0;
    uint _1617 = _1609 + 4u;
    float _1624 = isnan(1.0) ? _1616 : (isnan(_1616) ? 1.0 : min(_1616, 1.0));
    float _1633 = dot(vec3(cbLight._m0[_1609].xyz), vec3(_457, _458, _459));
    float _2948 = isnan(0.0) ? _1633 : (isnan(_1633) ? 0.0 : max(_1633, 0.0));
    float _1637 = (isnan(1.0) ? _2948 : (isnan(_2948) ? 1.0 : min(_2948, 1.0))) * 0.3183098733425140380859375;
    uint _1643 = _1609 + 8u;
    float _1656 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1609].w)) * _461) * 0.949999988079071044921875);
    float _1657 = _1656 * _1656;
    float _1658 = cbLight._m0[_1609].x + _482;
    float _1659 = cbLight._m0[_1609].y + _483;
    float _1660 = cbLight._m0[_1609].z + _484;
    float _1664 = inversesqrt(dot(vec3(_1658, _1659, _1660), vec3(_1658, _1659, _1660)));
    float _1665 = _1664 * _1658;
    float _1666 = _1664 * _1659;
    float _1667 = _1664 * _1660;
    float _1668 = dot(vec3(_457, _458, _459), vec3(cbLight._m0[_1609].xyz));
    float _2959 = isnan(0.0) ? _1668 : (isnan(_1668) ? 0.0 : max(_1668, 0.0));
    float _1671 = isnan(1.0) ? _2959 : (isnan(_2959) ? 1.0 : min(_2959, 1.0));
    float _2970 = isnan(0.0) ? _529 : (isnan(_529) ? 0.0 : max(_529, 0.0));
    float _1672 = isnan(1.0) ? _2970 : (isnan(_2970) ? 1.0 : min(_2970, 1.0));
    float _1673 = dot(vec3(_457, _458, _459), vec3(_1665, _1666, _1667));
    float _2981 = isnan(0.0) ? _1673 : (isnan(_1673) ? 0.0 : max(_1673, 0.0));
    float _1676 = isnan(1.0) ? _2981 : (isnan(_2981) ? 1.0 : min(_2981, 1.0));
    float _1677 = dot(vec3(cbLight._m0[_1609].xyz), vec3(_1665, _1666, _1667));
    float _2992 = isnan(0.0) ? _1677 : (isnan(_1677) ? 0.0 : max(_1677, 0.0));
    float _1681 = _1657 * _1657;
    float _1685 = ((_1676 * _1676) * (_1681 + (-1.0))) + 1.0;
    float _1695 = (exp2(log2(1.0 - (isnan(1.0) ? _2992 : (isnan(_2992) ? 1.0 : min(_2992, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1696 = 1.0 - _1657;
    float _1707 = (0.5 / (((_1672 * ((_1671 * _1696) + _1657)) + 9.9999999392252902907785028219223e-09) + (((_1672 * _1696) + _1657) * _1671))) * _1671;
    float _3003 = isnan(0.0) ? _1707 : (isnan(_1707) ? 0.0 : max(_1707, 0.0));
    float _1709 = (isnan(1.0) ? _3003 : (isnan(_3003) ? 1.0 : min(_3003, 1.0))) * (_1681 / ((_1685 * _1685) * 3.141590118408203125));
    float _1735 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _1736 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _1737 = cbSceneParam._m0[86u].x * ((_490 / cbSceneParam._m0[86u].x) + ((4.5 / (_477 + 10.0)) * dot(vec3(_457, _458, _459), vec3(_181, _182, _183))));
    float _1738 = isnan(_1735) ? _1737 : (isnan(_1737) ? _1735 : min(_1737, _1735));
    float _1739 = isnan(_1736) ? _491 : (isnan(_491) ? _1736 : min(_491, _1736));
    vec4 _1741 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1738, _1739), 0.0);
    float _1743 = _1741.x;
    bool _1763 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _1743)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1743))) > _477;
    float _1764 = _1763 ? _1738 : _490;
    float _1765 = _1763 ? _1739 : _491;
    vec4 _1767 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_1764, _1765));
    vec4 _1772 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1764, _1765));
    float _1774 = _1772.x;
    bool _1779 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _1788 = (-0.0) - cbSceneParam._m0[2u].z;
    float _1794 = (_1779 ? (_1788 / (cbSceneParam._m0[2u].x - _1774)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1774))) - _477;
    float _1796 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _1797 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _1798 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _1804 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _1808 = (isnan(_1794) ? 0.0 : (isnan(0.0) ? _1794 : max(0.0, _1794))) * (-1.44269502162933349609375);
    float _3029 = isnan(0.0) ? _514 : (isnan(_514) ? 0.0 : max(_514, 0.0));
    float _3040 = isnan(0.0) ? _515 : (isnan(_515) ? 0.0 : max(_515, 0.0));
    float _3051 = isnan(0.0) ? _516 : (isnan(_516) ? 0.0 : max(_516, 0.0));
    float _1922;
    float _1923;
    float _1924;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _1842 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1764, _1765), 0.0);
        float _1844 = _1842.x;
        float _1850 = (_1779 ? (_1788 / (cbSceneParam._m0[2u].x - _1844)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1844))) - _477;
        uint _1856 = floatBitsToUint(cbInstanceData._m0[_395]).x * 14u;
        uint _1862 = _1856 + 4u;
        float _1871 = dot(vec3(cbLight._m0[_1856].xyz), vec3(_202, _203, _204));
        float _1879 = dot(vec3((-0.0) - _482, (-0.0) - _483, (-0.0) - _484), vec3((-0.0) - _202, (-0.0) - _203, (-0.0) - _204));
        float _1884 = ((isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _1871 : (isnan(_1871) ? 0.001000000047497451305389404296875 : max(_1871, 0.001000000047497451305389404296875)))) + 1.0;
        float _1886 = (-0.0) - ((isnan(_1850) ? 0.0 : (isnan(0.0) ? _1850 : max(0.0, _1850))) * _1884);
        _1922 = _1804 ? 0.0 : ((((_442 * cbMtdParam._m0[13u].w) * cbLight._m0[_1862].x) / ((_1884 * _1796) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1796 * 1.44269502162933349609375) * _1886)));
        _1923 = _1804 ? 0.0 : ((((_442 * cbMtdParam._m0[14u].x) * cbLight._m0[_1862].y) / ((_1884 * _1797) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1797 * 1.44269502162933349609375) * _1886)));
        _1924 = _1804 ? 0.0 : ((((_442 * cbMtdParam._m0[14u].y) * cbLight._m0[_1862].z) / ((_1884 * _1798) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1798 * 1.44269502162933349609375) * _1886)));
    }
    else
    {
        _1922 = 0.0;
        _1923 = 0.0;
        _1924 = 0.0;
    }
    float _1941 = 0.959999978542327880859375 - (exp2(log2(1.0 - _543) * 5.0) * 0.959999978542327880859375);
    float _1942 = (_1922 + ((exp2(_1808 * (_1804 ? 0.0 : _1796)) * _1767.x) * cbSceneParam._m0[72u].w)) * _1941;
    float _1943 = (_1923 + ((exp2(_1808 * (_1804 ? 0.0 : _1797)) * _1767.y) * cbSceneParam._m0[72u].w)) * _1941;
    float _1944 = (_1924 + ((exp2(_1808 * (_1804 ? 0.0 : _1798)) * _1767.z) * cbSceneParam._m0[72u].w)) * _1941;
    float _1967 = _490 / cbSceneParam._m0[86u].x;
    float _1968 = _491 / cbSceneParam._m0[86u].y;
    vec4 _1982 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1967, _1968, (log2((isnan(cbSceneParam._m0[77u].w) ? _477 : (isnan(_477) ? cbSceneParam._m0[77u].w : min(_477, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1984 = _1982.x;
    float _1985 = _1982.y;
    float _1986 = _1982.z;
    float _1987 = _1982.w;
    float _2043;
    float _2045;
    float _2047;
    float _2049;
    if (_477 > cbSceneParam._m0[78u].w)
    {
        float _2008 = isnan(_477) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _477 : min(cbSceneParam._m0[80u].w, _477));
        float _2009 = _2008 / _477;
        float _2020 = _2009 * _260;
        float _2021 = _2009 * _408;
        float _2022 = _2009 * _262;
        float _2024 = (cbSceneParam._m0[77u].w * _2021) / _2008;
        float _2025 = _2024 + cbSceneParam._m0[79u].w;
        float _2026 = cbSceneParam._m0[79u].w + _2021;
        float _2032 = sqrt(((_2020 * _2020) + (_2021 * _2021)) + (_2022 * _2022));
        float _2035 = (1.0 - (cbSceneParam._m0[77u].w / _2008)) * _2032;
        float _2041 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2042 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2220;
        if (abs((_2021 - _2024) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2220 = ((((_2025 > 0.0) ? exp2(_2041 * _2025) : (2.0 - exp2(_2042 * _2025))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2035;
        }
        else
        {
            float _2168 = 1.0 / cbSceneParam._m0[80u].x;
            float _2169 = isnan(_2026) ? _2025 : (isnan(_2025) ? _2026 : max(_2025, _2026));
            float _2170 = isnan(_2026) ? _2025 : (isnan(_2025) ? _2026 : min(_2025, _2026));
            float _2179 = isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : min(_2169, 0.0));
            float _2180 = isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : min(_2170, 0.0));
            _2220 = ((abs(_2032 / _2021) * cbSceneParam._m0[80u].y) * ((((_2179 - _2180) * 2.0) - ((exp2(_2041 * (isnan(0.0) ? _2169 : (isnan(_2169) ? 0.0 : max(_2169, 0.0)))) - exp2(_2041 * (isnan(0.0) ? _2170 : (isnan(_2170) ? 0.0 : max(_2170, 0.0))))) * _2168)) - ((exp2(_2042 * _2179) - exp2(_2042 * _2180)) * _2168))) + (_2035 * cbSceneParam._m0[80u].z);
        }
        vec4 _2222 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1967, _1968, 1.0), 0.0);
        float _2231 = exp2((_2220 * (-1.44269502162933349609375)) * (1.0 - _2222.w));
        float _2232 = log2(_2231);
        float _2248 = log2(_1987);
        _2043 = (exp2(_2248 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2232 * cbSceneParam._m0[78u].x)) * _2222.x) / cbSceneParam._m0[78u].x)) + _1984;
        _2045 = (exp2(_2248 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2232 * cbSceneParam._m0[78u].y)) * _2222.y) / cbSceneParam._m0[78u].y)) + _1985;
        _2047 = (exp2(_2248 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2232 * cbSceneParam._m0[78u].z)) * _2222.z) / cbSceneParam._m0[78u].z)) + _1986;
        _2049 = _2231 * _1987;
    }
    else
    {
        _2043 = _1984;
        _2045 = _1985;
        _2047 = _1986;
        _2049 = _1987;
    }
    bool _2061 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2062 = log2(_2049);
    float _2069 = exp2(_2062 * cbSceneParam._m0[78u].x) * ((_1942 + (cbPerFrame._m0[3u].x * ((((_1547 * _1582.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1553 : (isnan(_1553) ? 0.0 : max(_1553, 0.0))) * _1338) * _1598)) + (((_1695 * cbLight._m0[_1643].x) * _1709) * _1624)))) + ((((isnan(1.0) ? _3029 : (isnan(_3029) ? 1.0 : min(_3029, 1.0))) * (((cbLight._m0[_1617].x * _1624) * _1637) + ((isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0))) * _528))) - _1942) * cbMtdParam._m0[12u].x));
    float _2070 = exp2(_2062 * cbSceneParam._m0[78u].y) * ((_1943 + (cbPerFrame._m0[3u].x * ((((_1547 * _1582.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1556 : (isnan(_1556) ? 0.0 : max(_1556, 0.0))) * _1338) * _1598)) + (((_1695 * cbLight._m0[_1643].y) * _1709) * _1624)))) + ((((isnan(1.0) ? _3040 : (isnan(_3040) ? 1.0 : min(_3040, 1.0))) * (((_1624 * cbLight._m0[_1617].y) * _1637) + ((isnan(0.0) ? _1262 : (isnan(_1262) ? 0.0 : max(_1262, 0.0))) * _528))) - _1943) * cbMtdParam._m0[12u].x));
    float _2071 = exp2(_2062 * cbSceneParam._m0[78u].z) * ((_1944 + (cbPerFrame._m0[3u].x * ((((_1547 * _1582.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1559 : (isnan(_1559) ? 0.0 : max(_1559, 0.0))) * _1338) * _1598)) + (((_1695 * cbLight._m0[_1643].z) * _1709) * _1624)))) + ((((isnan(1.0) ? _3051 : (isnan(_3051) ? 1.0 : min(_3051, 1.0))) * (((_1624 * cbLight._m0[_1617].z) * _1637) + ((isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0))) * _528))) - _1944) * cbMtdParam._m0[12u].x));
    vec4 _2079 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_490, _491));
    float _2081 = _2079.x;
    float _2102 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2081)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2081))) - _477) * 3.0;
    float _3117 = isnan(0.0) ? _2102 : (isnan(_2102) ? 0.0 : max(_2102, 0.0));
    float _2104 = (cbInstanceData._m0[_336 + 6u].w * (isnan(1.0) ? _2475 : (isnan(_2475) ? 1.0 : min(_2475, 1.0)))) * (isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0)));
    float _2113 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2113 * (_2061 ? _2069 : (_2069 + (cbSceneParam._m0[72u].w * _2043)));
    SV_Target.y = _2113 * (_2061 ? _2070 : (_2070 + (cbSceneParam._m0[72u].w * _2045)));
    SV_Target.z = _2113 * (_2061 ? _2071 : (_2071 + (cbSceneParam._m0[72u].w * _2047)));
    SV_Target.w = _2104;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2104;
}


