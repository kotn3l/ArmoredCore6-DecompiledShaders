#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _953;
float _2805;
float _2806;
float _2807;
float _2808;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _181 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _182 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _183 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _188 = inversesqrt(dot(vec3(_181, _182, _183), vec3(_181, _182, _183)));
    float _189 = _188 * _181;
    float _190 = _188 * _182;
    float _191 = _188 * _183;
    float _195 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = _195 * NORMAL.x;
    float _197 = _195 * NORMAL.y;
    float _198 = _195 * NORMAL.z;
    float _202 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _210;
    float _211;
    float _212;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _210 = (-0.0) - _196;
        _211 = (-0.0) - _197;
        _212 = (-0.0) - _198;
    }
    else
    {
        _210 = _196;
        _211 = _197;
        _212 = _198;
    }
    float _258 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _268 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _258);
    float _269 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _258);
    float _270 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _258);
    uvec4 _281 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _284 = _269 * 100.0;
    float _2817 = isnan(0.0) ? _284 : (isnan(_284) ? 0.0 : max(_284, 0.0));
    float _292 = cbMtdParam._m0[11u].y * _269;
    float _2828 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _296 = exp2(log2(isnan(1.0) ? _2828 : (isnan(_2828) ? 1.0 : min(_2828, 1.0))) * cbMtdParam._m0[11u].z);
    float _2839 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _303 = cbMtdParam._m0[12u].z * _269;
    float _2850 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _307 = exp2(log2(isnan(1.0) ? _2850 : (isnan(_2850) ? 1.0 : min(_2850, 1.0))) * cbMtdParam._m0[11u].w);
    float _2861 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _308 = isnan(1.0) ? _2861 : (isnan(_2861) ? 1.0 : min(_2861, 1.0));
    float _311 = cbMtdParam._m0[12u].y * _269;
    float _2872 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _315 = exp2(log2(isnan(1.0) ? _2872 : (isnan(_2872) ? 1.0 : min(_2872, 1.0))) * cbMtdParam._m0[11u].x);
    float _2883 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _320 = (((isnan(1.0) ? _2883 : (isnan(_2883) ? 1.0 : min(_2883, 1.0))) - _308) * 0.5) + _308;
    float _323 = (((isnan(1.0) ? _2839 : (isnan(_2839) ? 1.0 : min(_2839, 1.0))) - _320) * 0.5) + _320;
    float _2894 = isnan(0.0) ? _323 : (isnan(_323) ? 0.0 : max(_323, 0.0));
    float _325 = (_281.y != 0u) ? (isnan(1.0) ? _2894 : (isnan(_2894) ? 1.0 : min(_2894, 1.0))) : (isnan(1.0) ? _2817 : (isnan(_2817) ? 1.0 : min(_2817, 1.0)));
    bool _340 = _281.x != 0u;
    uint _344 = uint(roundEven(NORMAL.w)) * 13u;
    float _349 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_344 + 1u].w;
    float _350 = _268 / _269;
    float _352 = (-0.0) - (_270 / _269);
    vec4 _373 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_340 ? (_349 * _350) : _350) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_340 ? (_349 * _352) : _352) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _381 = (_373.x * 2.0) + (-1.0);
    float _383 = (_373.y * 2.0) + (-1.0);
    float _384 = dot(vec2(_381, _383), vec2(_381, _383));
    float _2905 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _389 = sqrt(1.0 - (isnan(1.0) ? _2905 : (isnan(_2905) ? 1.0 : min(_2905, 1.0))));
    uint _403 = _344 + 5u;
    float _415 = (-0.0) - _268;
    float _416 = (-0.0) - _269;
    float _417 = (-0.0) - _270;
    float _421 = inversesqrt(dot(vec3(_415, _416, _417), vec3(_415, _416, _417)));
    float _425 = dot(vec3(_421 * _415, _421 * _416, _421 * _417), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_403]).x * 14u].xyz));
    float _436 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_425 * 0.60000002384185791015625)) * 1.5);
    float _450 = ((((0.959999978542327880859375 / exp2(log2((_425 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _436) * 0.5) + _436) * 0.079577468335628509521484375;
    float _454 = fma(_389, _210, fma(_383, _202 * TANGENT.x, _381 * _189));
    float _457 = fma(_389, _211, fma(_383, _202 * TANGENT.y, _381 * _190));
    float _460 = fma(_389, _212, fma(_383, _202 * TANGENT.z, _381 * _191));
    float _464 = inversesqrt(dot(vec3(_454, _457, _460), vec3(_454, _457, _460)));
    float _465 = _464 * _454;
    float _466 = _464 * _457;
    float _467 = _464 * _460;
    float _2916 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _2927 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _469 = isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0));
    float _2938 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2949 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2960 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _485 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _489 = inversesqrt(dot(vec3(_268, _269, _270), vec3(_268, _269, _270)));
    float _490 = _268 * _489;
    float _491 = _269 * _489;
    float _492 = _270 * _489;
    vec4 _497 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _499 = _497.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _633 = sqrt(((_268 * _268) + (_269 * _269)) + (_270 * _270));
        float _639 = (cbMatDynParam._m0[5u].x * _633) + cbMatDynParam._m0[5u].y;
        float _2971 = isnan(0.0) ? _639 : (isnan(_639) ? 0.0 : max(_639, 0.0));
        float _640 = isnan(1.0) ? _2971 : (isnan(_2971) ? 1.0 : min(_2971, 1.0));
        float _644 = (cbMatDynParam._m0[5u].z * _633) + cbMatDynParam._m0[5u].w;
        float _2982 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2982 : (isnan(_2982) ? 1.0 : min(_2982, 1.0))) - _640)) + _640) < ((_499 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _511 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _512 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _525 = _344 + 9u;
    uint _526 = _525 + uint(cbMatDynParam._m0[0u].w);
    float _532 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0)))) * cbInstanceData._m0[_526].x;
    float _533 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2949 : (isnan(_2949) ? 1.0 : min(_2949, 1.0)))) * cbInstanceData._m0[_526].y;
    float _534 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2960 : (isnan(_2960) ? 1.0 : min(_2960, 1.0)))) * cbInstanceData._m0[_526].z;
    float _2993 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _535 = isnan(1.0) ? _2993 : (isnan(_2993) ? 1.0 : min(_2993, 1.0));
    float _3004 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _536 = isnan(1.0) ? _3004 : (isnan(_3004) ? 1.0 : min(_3004, 1.0));
    float _3015 = isnan(0.0) ? _534 : (isnan(_534) ? 0.0 : max(_534, 0.0));
    float _537 = isnan(1.0) ? _3015 : (isnan(_3015) ? 1.0 : min(_3015, 1.0));
    vec4 _546 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _511, cbSceneParam._m0[86u].y * _512));
    float _549 = _546.x * TEXCOORD.z;
    float _550 = dot(vec3(_465, _466, _467), vec3(_490, _491, _492));
    float _553 = _550 * 2.0;
    float _557 = (_553 * _465) - _490;
    float _558 = (_553 * _466) - _491;
    float _559 = (_553 * _467) - _492;
    float _563 = abs(dot(vec3(_490, _491, _492), vec3(_465, _466, _467)));
    float _3026 = isnan(0.0) ? _563 : (isnan(_563) ? 0.0 : max(_563, 0.0));
    float _564 = isnan(1.0) ? _3026 : (isnan(_3026) ? 1.0 : min(_3026, 1.0));
    float _572 = sqrt(_469);
    float _584 = exp2((_572 * 5.0) * log2(1.0 - (_564 * 0.999000012874603271484375))) / (4.0 - (_572 * 3.0));
    float _614 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _618 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _622 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _952;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    float _964;
    float _965;
    float _966;
    float _967;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _678 = fma(_622, cbModelParam._m0[26u].z, fma(_618, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _614));
        float _682 = fma(_622, cbModelParam._m0[27u].z, fma(_618, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _614));
        float _686 = fma(_622, cbModelParam._m0[28u].z, fma(_618, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _614));
        float _710 = _614 + _465;
        float _711 = _618 + _466;
        float _712 = _622 + _467;
        float _722 = fma(_712, cbModelParam._m0[26u].z, fma(_711, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _710)) - _678;
        float _723 = fma(_712, cbModelParam._m0[27u].z, fma(_711, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _710)) - _682;
        float _724 = fma(_712, cbModelParam._m0[28u].z, fma(_711, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _710)) - _686;
        float _728 = inversesqrt(dot(vec3(_722, _723, _724), vec3(_722, _723, _724)));
        float _741 = ((_728 * _722) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_678 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _742 = ((_728 * _723) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_682 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _743 = ((_728 * _724) / cbModelParam._m0[34u].z) + ((((((_686 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _746 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_741, _742, _743), 0.0);
        vec4 _753 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_741, _742, _743), 0.0);
        vec4 _760 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_741, _742, _743), 0.0);
        vec4 _767 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_741, _742, _743), 0.0);
        float _780 = exp2((_746.w + (-0.5)) * 20.0) * 2.0;
        float _781 = _780 * (_746.x + (-0.5));
        float _782 = _780 * (_746.y + (-0.5));
        float _783 = _780 * (_746.z + (-0.5));
        float _790 = exp2((_753.w + (-0.5)) * 20.0) * 2.0;
        float _791 = _790 * (_753.x + (-0.5));
        float _792 = _790 * (_753.y + (-0.5));
        float _793 = _790 * (_753.z + (-0.5));
        float _800 = exp2((_760.w + (-0.5)) * 20.0) * 2.0;
        float _801 = _800 * (_760.x + (-0.5));
        float _802 = _800 * (_760.y + (-0.5));
        float _803 = _800 * (_760.z + (-0.5));
        float _810 = exp2((_767.w + (-0.5)) * 20.0) * 2.0;
        float _811 = _810 * (_767.x + (-0.5));
        float _812 = _810 * (_767.y + (-0.5));
        float _813 = _810 * (_767.z + (-0.5));
        float _814 = isnan(0.0) ? _811 : (isnan(_811) ? 0.0 : max(_811, 0.0));
        float _815 = isnan(0.0) ? _812 : (isnan(_812) ? 0.0 : max(_812, 0.0));
        float _816 = isnan(0.0) ? _813 : (isnan(_813) ? 0.0 : max(_813, 0.0));
        float _817 = _781 * 0.5;
        float _818 = _791 * 0.5;
        float _819 = _801 * 0.5;
        float _820 = dot(vec3(_817, _818, _819), vec3(_817, _818, _819));
        float _825 = (_820 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_820);
        float _834 = (dot(vec3(_465, _466, _467), vec3(_825 * _817, _825 * _818, _825 * _819)) + 1.0) * 0.5;
        float _3052 = isnan(0.0) ? _834 : (isnan(_834) ? 0.0 : max(_834, 0.0));
        float _844 = sqrt(((_818 * _818) + (_817 * _817)) + (_819 * _819)) / (_814 + 9.9999997473787516355514526367188e-06);
        float _3063 = isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0));
        float _845 = isnan(1.0) ? _3063 : (isnan(_3063) ? 1.0 : min(_3063, 1.0));
        float _846 = _845 * 2.0;
        float _850 = (1.0 - _845) / (_845 + 1.0);
        float _3074 = isnan(0.0) ? _850 : (isnan(_850) ? 0.0 : max(_850, 0.0));
        float _851 = isnan(1.0) ? _3074 : (isnan(_3074) ? 1.0 : min(_3074, 1.0));
        float _860 = ((((1.0 - _851) * (_846 + 2.0)) * exp2(log2(isnan(1.0) ? _3052 : (isnan(_3052) ? 1.0 : min(_3052, 1.0))) * (_846 + 1.0))) + _851) * _814;
        float _861 = _782 * 0.5;
        float _862 = _792 * 0.5;
        float _863 = _802 * 0.5;
        float _864 = dot(vec3(_861, _862, _863), vec3(_861, _862, _863));
        float _869 = (_864 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_864);
        float _877 = (dot(vec3(_465, _466, _467), vec3(_869 * _861, _869 * _862, _869 * _863)) + 1.0) * 0.5;
        float _3085 = isnan(0.0) ? _877 : (isnan(_877) ? 0.0 : max(_877, 0.0));
        float _886 = sqrt(((_862 * _862) + (_861 * _861)) + (_863 * _863)) / (_815 + 9.9999997473787516355514526367188e-06);
        float _3096 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _887 = isnan(1.0) ? _3096 : (isnan(_3096) ? 1.0 : min(_3096, 1.0));
        float _888 = _887 * 2.0;
        float _892 = (1.0 - _887) / (_887 + 1.0);
        float _3107 = isnan(0.0) ? _892 : (isnan(_892) ? 0.0 : max(_892, 0.0));
        float _893 = isnan(1.0) ? _3107 : (isnan(_3107) ? 1.0 : min(_3107, 1.0));
        float _902 = ((((1.0 - _893) * (_888 + 2.0)) * exp2(log2(isnan(1.0) ? _3085 : (isnan(_3085) ? 1.0 : min(_3085, 1.0))) * (_888 + 1.0))) + _893) * _815;
        float _903 = _783 * 0.5;
        float _904 = _793 * 0.5;
        float _905 = _803 * 0.5;
        float _906 = dot(vec3(_903, _904, _905), vec3(_903, _904, _905));
        float _911 = (_906 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_906);
        float _919 = (dot(vec3(_465, _466, _467), vec3(_911 * _903, _911 * _904, _911 * _905)) + 1.0) * 0.5;
        float _3118 = isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0));
        float _928 = sqrt(((_904 * _904) + (_903 * _903)) + (_905 * _905)) / (_816 + 9.9999997473787516355514526367188e-06);
        float _3129 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _929 = isnan(1.0) ? _3129 : (isnan(_3129) ? 1.0 : min(_3129, 1.0));
        float _930 = _929 * 2.0;
        float _934 = (1.0 - _929) / (_929 + 1.0);
        float _3140 = isnan(0.0) ? _934 : (isnan(_934) ? 0.0 : max(_934, 0.0));
        float _935 = isnan(1.0) ? _3140 : (isnan(_3140) ? 1.0 : min(_3140, 1.0));
        float _944 = ((((1.0 - _935) * (_930 + 2.0)) * exp2(log2(isnan(1.0) ? _3118 : (isnan(_3118) ? 1.0 : min(_3118, 1.0))) * (_930 + 1.0))) + _935) * _816;
        _952 = _783;
        _954 = _782;
        _955 = _781;
        _956 = _793;
        _957 = _792;
        _958 = _791;
        _959 = _803;
        _960 = _802;
        _961 = _801;
        _962 = _816;
        _963 = _815;
        _964 = _814;
        _965 = cbModelParam._m0[36u].z * (isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0)));
        _966 = cbModelParam._m0[36u].z * (isnan(0.0) ? _902 : (isnan(_902) ? 0.0 : max(_902, 0.0)));
        _967 = cbModelParam._m0[36u].z * (isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0)));
    }
    else
    {
        _952 = _953;
        _954 = _953;
        _955 = _953;
        _956 = _953;
        _957 = _953;
        _958 = _953;
        _959 = _953;
        _960 = _953;
        _961 = _953;
        _962 = _953;
        _963 = _953;
        _964 = _953;
        _965 = 0.0;
        _966 = 0.0;
        _967 = 0.0;
    }
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    float _1276;
    float _1277;
    float _1278;
    float _1279;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _996 = fma(_622, cbModelParam._m0[30u].z, fma(_618, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _614));
        float _1000 = fma(_622, cbModelParam._m0[31u].z, fma(_618, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _614));
        float _1004 = fma(_622, cbModelParam._m0[32u].z, fma(_618, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _614));
        float _1027 = _614 + _465;
        float _1028 = _618 + _466;
        float _1029 = _622 + _467;
        float _1039 = fma(_1029, cbModelParam._m0[30u].z, fma(_1028, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1027)) - _996;
        float _1040 = fma(_1029, cbModelParam._m0[31u].z, fma(_1028, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1027)) - _1000;
        float _1041 = fma(_1029, cbModelParam._m0[32u].z, fma(_1028, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1027)) - _1004;
        float _1045 = inversesqrt(dot(vec3(_1039, _1040, _1041), vec3(_1039, _1040, _1041)));
        float _1058 = ((_1045 * _1039) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_996 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1059 = ((_1045 * _1040) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1000 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1060 = ((_1045 * _1041) / cbModelParam._m0[35u].z) + ((((((_1004 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1062 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1058, _1059, _1060), 0.0);
        vec4 _1069 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1058, _1059, _1060), 0.0);
        vec4 _1076 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1058, _1059, _1060), 0.0);
        vec4 _1083 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1058, _1059, _1060), 0.0);
        float _1095 = exp2((_1062.w + (-0.5)) * 20.0) * 2.0;
        float _1096 = _1095 * (_1062.x + (-0.5));
        float _1097 = _1095 * (_1062.y + (-0.5));
        float _1098 = _1095 * (_1062.z + (-0.5));
        float _1105 = exp2((_1069.w + (-0.5)) * 20.0) * 2.0;
        float _1106 = _1105 * (_1069.x + (-0.5));
        float _1107 = _1105 * (_1069.y + (-0.5));
        float _1108 = _1105 * (_1069.z + (-0.5));
        float _1115 = exp2((_1076.w + (-0.5)) * 20.0) * 2.0;
        float _1116 = _1115 * (_1076.x + (-0.5));
        float _1117 = _1115 * (_1076.y + (-0.5));
        float _1118 = _1115 * (_1076.z + (-0.5));
        float _1125 = exp2((_1083.w + (-0.5)) * 20.0) * 2.0;
        float _1126 = _1125 * (_1083.x + (-0.5));
        float _1127 = _1125 * (_1083.y + (-0.5));
        float _1128 = _1125 * (_1083.z + (-0.5));
        float _1129 = isnan(0.0) ? _1126 : (isnan(_1126) ? 0.0 : max(_1126, 0.0));
        float _1130 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1131 = isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0));
        float _1132 = _1096 * 0.5;
        float _1133 = _1106 * 0.5;
        float _1134 = _1116 * 0.5;
        float _1135 = dot(vec3(_1132, _1133, _1134), vec3(_1132, _1133, _1134));
        float _1140 = (_1135 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1135);
        float _1148 = (dot(vec3(_465, _466, _467), vec3(_1140 * _1132, _1140 * _1133, _1140 * _1134)) + 1.0) * 0.5;
        float _3181 = isnan(0.0) ? _1148 : (isnan(_1148) ? 0.0 : max(_1148, 0.0));
        float _1157 = sqrt(((_1133 * _1133) + (_1132 * _1132)) + (_1134 * _1134)) / (_1129 + 9.9999997473787516355514526367188e-06);
        float _3192 = isnan(0.0) ? _1157 : (isnan(_1157) ? 0.0 : max(_1157, 0.0));
        float _1158 = isnan(1.0) ? _3192 : (isnan(_3192) ? 1.0 : min(_3192, 1.0));
        float _1159 = _1158 * 2.0;
        float _1163 = (1.0 - _1158) / (_1158 + 1.0);
        float _3203 = isnan(0.0) ? _1163 : (isnan(_1163) ? 0.0 : max(_1163, 0.0));
        float _1164 = isnan(1.0) ? _3203 : (isnan(_3203) ? 1.0 : min(_3203, 1.0));
        float _1173 = ((((1.0 - _1164) * (_1159 + 2.0)) * exp2(log2(isnan(1.0) ? _3181 : (isnan(_3181) ? 1.0 : min(_3181, 1.0))) * (_1159 + 1.0))) + _1164) * _1129;
        float _1174 = _1097 * 0.5;
        float _1175 = _1107 * 0.5;
        float _1176 = _1117 * 0.5;
        float _1177 = dot(vec3(_1174, _1175, _1176), vec3(_1174, _1175, _1176));
        float _1182 = (_1177 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1177);
        float _1190 = (dot(vec3(_465, _466, _467), vec3(_1182 * _1174, _1182 * _1175, _1182 * _1176)) + 1.0) * 0.5;
        float _3214 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1199 = sqrt(((_1175 * _1175) + (_1174 * _1174)) + (_1176 * _1176)) / (_1130 + 9.9999997473787516355514526367188e-06);
        float _3225 = isnan(0.0) ? _1199 : (isnan(_1199) ? 0.0 : max(_1199, 0.0));
        float _1200 = isnan(1.0) ? _3225 : (isnan(_3225) ? 1.0 : min(_3225, 1.0));
        float _1201 = _1200 * 2.0;
        float _1205 = (1.0 - _1200) / (_1200 + 1.0);
        float _3236 = isnan(0.0) ? _1205 : (isnan(_1205) ? 0.0 : max(_1205, 0.0));
        float _1206 = isnan(1.0) ? _3236 : (isnan(_3236) ? 1.0 : min(_3236, 1.0));
        float _1215 = ((((1.0 - _1206) * (_1201 + 2.0)) * exp2(log2(isnan(1.0) ? _3214 : (isnan(_3214) ? 1.0 : min(_3214, 1.0))) * (_1201 + 1.0))) + _1206) * _1130;
        float _1216 = _1098 * 0.5;
        float _1217 = _1108 * 0.5;
        float _1218 = _1118 * 0.5;
        float _1219 = dot(vec3(_1216, _1217, _1218), vec3(_1216, _1217, _1218));
        float _1224 = (_1219 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1219);
        float _1232 = (dot(vec3(_465, _466, _467), vec3(_1224 * _1216, _1224 * _1217, _1224 * _1218)) + 1.0) * 0.5;
        float _3247 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1241 = sqrt(((_1217 * _1217) + (_1216 * _1216)) + (_1218 * _1218)) / (_1131 + 9.9999997473787516355514526367188e-06);
        float _3258 = isnan(0.0) ? _1241 : (isnan(_1241) ? 0.0 : max(_1241, 0.0));
        float _1242 = isnan(1.0) ? _3258 : (isnan(_3258) ? 1.0 : min(_3258, 1.0));
        float _1243 = _1242 * 2.0;
        float _1247 = (1.0 - _1242) / (_1242 + 1.0);
        float _3269 = isnan(0.0) ? _1247 : (isnan(_1247) ? 0.0 : max(_1247, 0.0));
        float _1248 = isnan(1.0) ? _3269 : (isnan(_3269) ? 1.0 : min(_3269, 1.0));
        float _1257 = ((((1.0 - _1248) * (_1243 + 2.0)) * exp2(log2(isnan(1.0) ? _3247 : (isnan(_3247) ? 1.0 : min(_3247, 1.0))) * (_1243 + 1.0))) + _1248) * _1131;
        _1265 = _1098;
        _1266 = _1097;
        _1267 = _1096;
        _1268 = _1108;
        _1269 = _1107;
        _1270 = _1106;
        _1271 = _1118;
        _1272 = _1117;
        _1273 = _1116;
        _1274 = _1131;
        _1275 = _1130;
        _1276 = _1129;
        _1277 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1173 : (isnan(_1173) ? 0.0 : max(_1173, 0.0)));
        _1278 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1215 : (isnan(_1215) ? 0.0 : max(_1215, 0.0)));
        _1279 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0)));
    }
    else
    {
        _1265 = _953;
        _1266 = _953;
        _1267 = _953;
        _1268 = _953;
        _1269 = _953;
        _1270 = _953;
        _1271 = _953;
        _1272 = _953;
        _1273 = _953;
        _1274 = _953;
        _1275 = _953;
        _1276 = _953;
        _1277 = 0.0;
        _1278 = 0.0;
        _1279 = 0.0;
    }
    float _1289 = (cbModelParam._m0[1u].x * (_1277 - _965)) + _965;
    float _1290 = (cbModelParam._m0[1u].x * (_1278 - _966)) + _966;
    float _1291 = (cbModelParam._m0[1u].x * (_1279 - _967)) + _967;
    float _1312 = fma(_1291, cbSceneParam._m0[89u].z, fma(_1290, cbSceneParam._m0[89u].y, _1289 * cbSceneParam._m0[89u].x));
    float _1315 = fma(_1291, cbSceneParam._m0[90u].z, fma(_1290, cbSceneParam._m0[90u].y, _1289 * cbSceneParam._m0[90u].x));
    float _1318 = fma(_1291, cbSceneParam._m0[91u].z, fma(_1290, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1289));
    float _1333 = _557 * 0.5;
    float _1334 = _558 * 0.5;
    float _1335 = _559 * 0.5;
    float _1336 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_1267, _1270, _1273, _1276));
    float _1339 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_1266, _1269, _1272, _1275));
    float _1342 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_1265, _1268, _1271, _1274));
    float _1376;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1349 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_952, _956, _959, _962));
        float _1353 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_954, _957, _960, _963));
        float _1357 = dot(vec4(_1333, _1334, _1335, 1.0), vec4(_955, _958, _961, _964));
        float _1364 = dot(vec4(cbModelParam._m0[39u]), vec4(_1333, _1334, _1335, 1.0));
        _1376 = dot(vec3(isnan(0.0) ? _1357 : (isnan(_1357) ? 0.0 : max(_1357, 0.0)), isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)), isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1364) ? 0.0 : (isnan(0.0) ? _1364 : max(0.0, _1364))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1376 = 1.0;
    }
    float _1387;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1378 = dot(vec4(cbModelParam._m0[40u]), vec4(_1333, _1334, _1335, 1.0));
        _1387 = dot(vec3(isnan(0.0) ? _1336 : (isnan(_1336) ? 0.0 : max(_1336, 0.0)), isnan(0.0) ? _1339 : (isnan(_1339) ? 0.0 : max(_1339, 0.0)), isnan(0.0) ? _1342 : (isnan(_1342) ? 0.0 : max(_1342, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1378) ? 0.0 : (isnan(0.0) ? _1378 : max(0.0, _1378))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1387 = 1.0;
    }
    float _1391 = (_1387 * cbModelParam._m0[1u].x) + (_1376 * (1.0 - cbModelParam._m0[1u].x));
    float _1401 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _469);
    float _1402 = isnan(_1401) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1401 : min(cbModelParam._m0[25u].z, _1401));
    float _1483;
    float _1485;
    float _1487;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1450 = fma(_622, cbModelParam._m0[13u].z, fma(_618, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _614)) + cbModelParam._m0[13u].w;
        float _1454 = fma(_622, cbModelParam._m0[14u].z, fma(_618, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _614)) + cbModelParam._m0[14u].w;
        float _1458 = fma(_622, cbModelParam._m0[15u].z, fma(_618, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _614)) + cbModelParam._m0[15u].w;
        float _1461 = fma(_559, cbModelParam._m0[13u].z, fma(_558, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _557));
        float _1464 = fma(_559, cbModelParam._m0[14u].z, fma(_558, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _557));
        float _1467 = fma(_559, cbModelParam._m0[15u].z, fma(_558, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _557));
        float _1495;
        if (_1461 > 0.0)
        {
            _1495 = abs((1.0 - _1450) / _1461);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1461 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1450 + 1.0) / _1461);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1495 = frontier_phi_19_17_ladder;
        }
        float _1706;
        if (_1464 > 0.0)
        {
            _1706 = abs((1.0 - _1454) / _1464);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1464 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1454 + 1.0) / _1464);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1706 = frontier_phi_28_24_ladder;
        }
        float _2150;
        if (_1467 > 0.0)
        {
            _2150 = abs((1.0 - _1458) / _1467);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1467 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1458 + 1.0) / _1467);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2150 = frontier_phi_40_35_ladder;
        }
        float _2152 = isnan(_1706) ? _1495 : (isnan(_1495) ? _1706 : min(_1495, _1706));
        float _2153 = isnan(_2150) ? _2152 : (isnan(_2152) ? _2150 : min(_2152, _2150));
        float _2157 = (_2153 * _1461) + _1450;
        float _2158 = (_2153 * _1464) + _1454;
        float _2159 = (_2153 * _1467) + _1458;
        float _2160 = _2153 * 9.9999997473787516355514526367188e-05;
        float _2162 = (-1.0) - _2160;
        float _2164 = _2160 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2159 > _2164) || ((_2159 < _2162) || ((_2158 > _2164) || ((_2158 < _2162) || ((_2157 < _2162) || (_2157 > _2164))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2421 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2159, cbModelParam._m0[9u].z, fma(_2158, cbModelParam._m0[9u].y, _2157 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2159, cbModelParam._m0[10u].z, fma(_2158, cbModelParam._m0[10u].y, _2157 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2159, cbModelParam._m0[11u].z, fma(_2158, cbModelParam._m0[11u].y, _2157 * cbModelParam._m0[11u].x))), _1402);
            frontier_phi_18_40_ladder = _2421.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2421.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2421.x * cbModelParam._m0[1u].y;
        }
        _1483 = frontier_phi_18_40_ladder_2;
        _1485 = frontier_phi_18_40_ladder_1;
        _1487 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1471 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_557, _558, _559), _1402);
        _1483 = _1471.x * cbModelParam._m0[1u].y;
        _1485 = _1471.y * cbModelParam._m0[1u].y;
        _1487 = _1471.z * cbModelParam._m0[1u].y;
    }
    float _1491 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _469);
    float _1492 = isnan(_1491) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1491 : min(cbModelParam._m0[25u].w, _1491));
    float _1584;
    float _1586;
    float _1588;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1548 = fma(_622, cbModelParam._m0[21u].z, fma(_618, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _614)) + cbModelParam._m0[21u].w;
        float _1552 = fma(_622, cbModelParam._m0[22u].z, fma(_618, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _614)) + cbModelParam._m0[22u].w;
        float _1556 = fma(_622, cbModelParam._m0[23u].z, fma(_618, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _614)) + cbModelParam._m0[23u].w;
        float _1559 = fma(_559, cbModelParam._m0[21u].z, fma(_558, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _557));
        float _1562 = fma(_559, cbModelParam._m0[22u].z, fma(_558, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _557));
        float _1565 = fma(_559, cbModelParam._m0[23u].z, fma(_558, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _557));
        float _1711;
        if (_1559 > 0.0)
        {
            _1711 = abs((1.0 - _1548) / _1559);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1559 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1548 + 1.0) / _1559);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1711 = frontier_phi_30_26_ladder;
        }
        float _2177;
        if (_1562 > 0.0)
        {
            _2177 = abs((1.0 - _1552) / _1562);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1562 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1552 + 1.0) / _1562);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2177 = frontier_phi_42_37_ladder;
        }
        float _2558;
        if (_1565 > 0.0)
        {
            _2558 = abs((1.0 - _1556) / _1565);
        }
        else
        {
            float frontier_phi_52_49_ladder;
            if (_1565 < 0.0)
            {
                frontier_phi_52_49_ladder = abs((_1556 + 1.0) / _1565);
            }
            else
            {
                frontier_phi_52_49_ladder = 5000.0;
            }
            _2558 = frontier_phi_52_49_ladder;
        }
        float _2560 = isnan(_2177) ? _1711 : (isnan(_1711) ? _2177 : min(_1711, _2177));
        float _2561 = isnan(_2558) ? _2560 : (isnan(_2560) ? _2558 : min(_2560, _2558));
        float _2565 = (_2561 * _1559) + _1548;
        float _2566 = (_2561 * _1562) + _1552;
        float _2567 = (_2561 * _1565) + _1556;
        float _2568 = _2561 * 9.9999997473787516355514526367188e-05;
        float _2569 = (-1.0) - _2568;
        float _2571 = _2568 + 1.0;
        float frontier_phi_27_52_ladder;
        float frontier_phi_27_52_ladder_1;
        float frontier_phi_27_52_ladder_2;
        if ((_2567 > _2571) || ((_2567 < _2569) || ((_2566 > _2571) || ((_2566 < _2569) || ((_2565 < _2569) || (_2565 > _2571))))))
        {
            frontier_phi_27_52_ladder = 0.0;
            frontier_phi_27_52_ladder_1 = 0.0;
            frontier_phi_27_52_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2655 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2567, cbModelParam._m0[17u].z, fma(_2566, cbModelParam._m0[17u].y, _2565 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2567, cbModelParam._m0[18u].z, fma(_2566, cbModelParam._m0[18u].y, _2565 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2567, cbModelParam._m0[19u].z, fma(_2566, cbModelParam._m0[19u].y, _2565 * cbModelParam._m0[19u].x))), _1492);
            frontier_phi_27_52_ladder = _2655.z * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_1 = _2655.y * cbModelParam._m0[1u].z;
            frontier_phi_27_52_ladder_2 = _2655.x * cbModelParam._m0[1u].z;
        }
        _1584 = frontier_phi_27_52_ladder_2;
        _1586 = frontier_phi_27_52_ladder_1;
        _1588 = frontier_phi_27_52_ladder;
    }
    else
    {
        vec4 _1568 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_557, _558, _559), _1492);
        _1584 = _1568.x * cbModelParam._m0[1u].z;
        _1586 = _1568.y * cbModelParam._m0[1u].z;
        _1588 = _1568.z * cbModelParam._m0[1u].z;
    }
    float _1600 = ((((1.0 - _584) * ((_572 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_584 * _572)) * _549;
    float _1601 = _1600 * ((cbModelParam._m0[1u].w * (_1584 - _1483)) + _1483);
    float _1602 = _1600 * ((cbModelParam._m0[1u].w * (_1586 - _1485)) + _1485);
    float _1603 = _1600 * ((cbModelParam._m0[1u].w * (_1588 - _1487)) + _1487);
    float _1606 = fma(_1603, cbSceneParam._m0[89u].z, fma(_1602, cbSceneParam._m0[89u].y, _1601 * cbSceneParam._m0[89u].x));
    float _1609 = fma(_1603, cbSceneParam._m0[90u].z, fma(_1602, cbSceneParam._m0[90u].y, _1601 * cbSceneParam._m0[90u].x));
    float _1612 = fma(_1603, cbSceneParam._m0[91u].z, fma(_1602, cbSceneParam._m0[91u].y, _1601 * cbSceneParam._m0[91u].x));
    float _1631 = (cbSceneParam._m0[88u].y * (1.0 - _469)) + cbSceneParam._m0[88u].z;
    float _3395 = isnan(0.0) ? _1631 : (isnan(_1631) ? 0.0 : max(_1631, 0.0));
    vec4 _1635 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_511, _512), (isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0))) * 5.0);
    float _1651 = 1.0 - _1635.w;
    float _1685 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1689 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1693 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1697 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1698 = _1685 / _1697;
    float _1699 = _1689 / _1697;
    float _1700 = _1693 / _1697;
    float _1847;
    float _1848;
    float _1849;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1727 = ((uint(_1700 > cbSceneParam._m0[59u].y) + uint(_1700 > cbSceneParam._m0[59u].x)) + uint(_1700 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1728 = _1727 + 43u;
        uint _1736 = _1727 + 44u;
        uint _1744 = _1727 + 45u;
        uint _1752 = _1727 + 46u;
        float _1763 = fma(_1697, cbSceneParam._m0[_1728].w, fma(_1693, cbSceneParam._m0[_1728].z, fma(_1689, cbSceneParam._m0[_1728].y, _1685 * cbSceneParam._m0[_1728].x)));
        float _1767 = fma(_1697, cbSceneParam._m0[_1736].w, fma(_1693, cbSceneParam._m0[_1736].z, fma(_1689, cbSceneParam._m0[_1736].y, _1685 * cbSceneParam._m0[_1736].x)));
        float _1775 = fma(_1697, cbSceneParam._m0[_1752].w, fma(_1693, cbSceneParam._m0[_1752].z, fma(_1689, cbSceneParam._m0[_1752].y, _1685 * cbSceneParam._m0[_1752].x)));
        float _1780 = cbSceneParam._m0[33u].z * _1775;
        float _1782 = cbSceneParam._m0[33u].w * _1775;
        float _1785 = fma(_1697, cbSceneParam._m0[_1744].w, fma(_1693, cbSceneParam._m0[_1744].z, fma(_1689, cbSceneParam._m0[_1744].y, _1685 * cbSceneParam._m0[_1744].x))) / _1775;
        float _1833 = (cbSceneParam._m0[33u].x - sqrt(((_1699 * _1699) + (_1698 * _1698)) + (_1700 * _1700))) * cbSceneParam._m0[33u].y;
        float _3406 = isnan(0.0) ? _1833 : (isnan(_1833) ? 0.0 : max(_1833, 0.0));
        float _1840 = (isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1780 + _1763) / _1775, (_1782 + _1767) / _1775), _1785), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1782 + _1763) / _1775, (_1767 - _1780) / _1775), _1785), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1763 - _1780) / _1775, (_1767 - _1782) / _1775), _1785), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1763 - _1782) / _1775, (_1780 + _1767) / _1775), _1785), 0.0)).x), vec4(0.25)));
        _1847 = 1.0 - (_1840 * cbSceneParam._m0[34u].x);
        _1848 = 1.0 - (_1840 * cbSceneParam._m0[34u].y);
        _1849 = 1.0 - (_1840 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1847 = 1.0;
        _1848 = 1.0;
        _1849 = 1.0;
    }
    float _1913;
    float _1915;
    float _1917;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1901 = fma(_1697, cbSceneParam._m0[63u].w, fma(_1693, cbSceneParam._m0[63u].z, fma(_1689, cbSceneParam._m0[63u].y, _1685 * cbSceneParam._m0[63u].x)));
        float _1902 = fma(_1697, cbSceneParam._m0[60u].w, fma(_1693, cbSceneParam._m0[60u].z, fma(_1689, cbSceneParam._m0[60u].y, _1685 * cbSceneParam._m0[60u].x))) / _1901;
        float _1903 = fma(_1697, cbSceneParam._m0[61u].w, fma(_1693, cbSceneParam._m0[61u].z, fma(_1689, cbSceneParam._m0[61u].y, _1685 * cbSceneParam._m0[61u].x))) / _1901;
        float frontier_phi_39_38_ladder;
        float frontier_phi_39_38_ladder_1;
        float frontier_phi_39_38_ladder_2;
        if ((((_1902 >= cbSceneParam._m0[64u].x) && (_1903 >= cbSceneParam._m0[64u].y)) && (_1902 <= cbSceneParam._m0[64u].z)) && (_1903 <= cbSceneParam._m0[64u].w))
        {
            float _2190 = fma(_1697, cbSceneParam._m0[62u].w, fma(_1693, cbSceneParam._m0[62u].z, fma(_1689, cbSceneParam._m0[62u].y, _1685 * cbSceneParam._m0[62u].x))) / _1901;
            float _2194 = isnan(cbSceneParam._m0[41u].w) ? _2190 : (isnan(_2190) ? cbSceneParam._m0[41u].w : max(_2190, cbSceneParam._m0[41u].w));
            float _2237 = (cbSceneParam._m0[33u].x - sqrt(((_1699 * _1699) + (_1698 * _1698)) + (_1700 * _1700))) * cbSceneParam._m0[33u].y;
            float _3422 = isnan(0.0) ? _2237 : (isnan(_2237) ? 0.0 : max(_2237, 0.0));
            float _2244 = (isnan(1.0) ? _3422 : (isnan(_3422) ? 1.0 : min(_3422, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1902, cbSceneParam._m0[33u].w + _1903), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1902, _1903 - cbSceneParam._m0[33u].z), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1902 - cbSceneParam._m0[33u].z, _1903 - cbSceneParam._m0[33u].w), _2194), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1902 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1903), _2194), 0.0)).x), vec4(0.25)));
            float _2248 = 1.0 - (_2244 * cbSceneParam._m0[34u].x);
            float _2249 = 1.0 - (_2244 * cbSceneParam._m0[34u].y);
            float _2250 = 1.0 - (_2244 * cbSceneParam._m0[34u].z);
            frontier_phi_39_38_ladder = isnan(_2248) ? _1847 : (isnan(_1847) ? _2248 : min(_1847, _2248));
            frontier_phi_39_38_ladder_1 = isnan(_2249) ? _1848 : (isnan(_1848) ? _2249 : min(_1848, _2249));
            frontier_phi_39_38_ladder_2 = isnan(_2250) ? _1849 : (isnan(_1849) ? _2250 : min(_1849, _2250));
        }
        else
        {
            frontier_phi_39_38_ladder = _1847;
            frontier_phi_39_38_ladder_1 = _1848;
            frontier_phi_39_38_ladder_2 = _1849;
        }
        _1913 = frontier_phi_39_38_ladder;
        _1915 = frontier_phi_39_38_ladder_1;
        _1917 = frontier_phi_39_38_ladder_2;
    }
    else
    {
        _1913 = _1847;
        _1915 = _1848;
        _1917 = _1849;
    }
    uint _1923 = floatBitsToUint(cbInstanceData._m0[_403]).x * 14u;
    float _1930 = (cbLight._m0[_1923 + 13u].x * (_549 + (-1.0))) + 1.0;
    uint _1931 = _1923 + 4u;
    float _1941 = isnan(1.0) ? _1930 : (isnan(_1930) ? 1.0 : min(_1930, 1.0));
    float _1950 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_465, _466, _467));
    float _3453 = isnan(0.0) ? _1950 : (isnan(_1950) ? 0.0 : max(_1950, 0.0));
    float _1954 = (isnan(1.0) ? _3453 : (isnan(_3453) ? 1.0 : min(_3453, 1.0))) * 0.3183098733425140380859375;
    uint _1960 = _1923 + 8u;
    float _1973 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1923].w)) * _469) * 0.949999988079071044921875);
    float _1974 = _1973 * _1973;
    float _1975 = cbLight._m0[_1923].x + _490;
    float _1976 = cbLight._m0[_1923].y + _491;
    float _1977 = cbLight._m0[_1923].z + _492;
    float _1981 = inversesqrt(dot(vec3(_1975, _1976, _1977), vec3(_1975, _1976, _1977)));
    float _1982 = _1981 * _1975;
    float _1983 = _1981 * _1976;
    float _1984 = _1981 * _1977;
    float _1985 = dot(vec3(_465, _466, _467), vec3(cbLight._m0[_1923].xyz));
    float _3464 = isnan(0.0) ? _1985 : (isnan(_1985) ? 0.0 : max(_1985, 0.0));
    float _1988 = isnan(1.0) ? _3464 : (isnan(_3464) ? 1.0 : min(_3464, 1.0));
    float _3475 = isnan(0.0) ? _550 : (isnan(_550) ? 0.0 : max(_550, 0.0));
    float _1989 = isnan(1.0) ? _3475 : (isnan(_3475) ? 1.0 : min(_3475, 1.0));
    float _1990 = dot(vec3(_465, _466, _467), vec3(_1982, _1983, _1984));
    float _3486 = isnan(0.0) ? _1990 : (isnan(_1990) ? 0.0 : max(_1990, 0.0));
    float _1993 = isnan(1.0) ? _3486 : (isnan(_3486) ? 1.0 : min(_3486, 1.0));
    float _1994 = dot(vec3(cbLight._m0[_1923].xyz), vec3(_1982, _1983, _1984));
    float _3497 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
    float _1998 = _1974 * _1974;
    float _2002 = ((_1993 * _1993) * (_1998 + (-1.0))) + 1.0;
    float _2012 = (exp2(log2(1.0 - (isnan(1.0) ? _3497 : (isnan(_3497) ? 1.0 : min(_3497, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2013 = 1.0 - _1974;
    float _2024 = (0.5 / (((_1989 * ((_1988 * _2013) + _1974)) + 9.9999999392252902907785028219223e-09) + (((_1989 * _2013) + _1974) * _1988))) * _1988;
    float _3508 = isnan(0.0) ? _2024 : (isnan(_2024) ? 0.0 : max(_2024, 0.0));
    float _2026 = (isnan(1.0) ? _3508 : (isnan(_3508) ? 1.0 : min(_3508, 1.0))) * (_1998 / ((_2002 * _2002) * 3.141590118408203125));
    float _2055 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2056 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2057 = cbSceneParam._m0[86u].x * ((_511 / cbSceneParam._m0[86u].x) + ((4.5 / (_485 + 10.0)) * dot(vec3(_465, _466, _467), vec3(_189, _190, _191))));
    float _2058 = isnan(_2055) ? _2057 : (isnan(_2057) ? _2055 : min(_2057, _2055));
    float _2059 = isnan(_2056) ? _512 : (isnan(_512) ? _2056 : min(_512, _2056));
    vec4 _2061 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2058, _2059), 0.0);
    float _2063 = _2061.x;
    bool _2083 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2063)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2063))) > _485;
    float _2084 = _2083 ? _2058 : _511;
    float _2085 = _2083 ? _2059 : _512;
    vec4 _2087 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2084, _2085));
    vec4 _2092 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2084, _2085));
    float _2094 = _2092.x;
    bool _2099 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _2108 = (-0.0) - cbSceneParam._m0[2u].z;
    float _2114 = (_2099 ? (_2108 / (cbSceneParam._m0[2u].x - _2094)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2094))) - _485;
    float _2116 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _2117 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _2118 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _2124 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2128 = (isnan(_2114) ? 0.0 : (isnan(0.0) ? _2114 : max(0.0, _2114))) * (-1.44269502162933349609375);
    float _3534 = isnan(0.0) ? _535 : (isnan(_535) ? 0.0 : max(_535, 0.0));
    float _3545 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
    float _3556 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
    float _2332;
    float _2333;
    float _2334;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _2252 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2084, _2085), 0.0);
        float _2254 = _2252.x;
        float _2260 = (_2099 ? (_2108 / (cbSceneParam._m0[2u].x - _2254)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2254))) - _485;
        uint _2266 = floatBitsToUint(cbInstanceData._m0[_403]).x * 14u;
        uint _2272 = _2266 + 4u;
        float _2281 = dot(vec3(cbLight._m0[_2266].xyz), vec3(_210, _211, _212));
        float _2289 = dot(vec3((-0.0) - _490, (-0.0) - _491, (-0.0) - _492), vec3((-0.0) - _210, (-0.0) - _211, (-0.0) - _212));
        float _2294 = ((isnan(0.0) ? _2289 : (isnan(_2289) ? 0.0 : max(_2289, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _2281 : (isnan(_2281) ? 0.001000000047497451305389404296875 : max(_2281, 0.001000000047497451305389404296875)))) + 1.0;
        float _2296 = (-0.0) - ((isnan(_2260) ? 0.0 : (isnan(0.0) ? _2260 : max(0.0, _2260))) * _2294);
        _2332 = _2124 ? 0.0 : ((((_450 * cbMtdParam._m0[13u].w) * cbLight._m0[_2272].x) / ((_2294 * _2116) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2116 * 1.44269502162933349609375) * _2296)));
        _2333 = _2124 ? 0.0 : ((((_450 * cbMtdParam._m0[14u].x) * cbLight._m0[_2272].y) / ((_2294 * _2117) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2117 * 1.44269502162933349609375) * _2296)));
        _2334 = _2124 ? 0.0 : ((((_450 * cbMtdParam._m0[14u].y) * cbLight._m0[_2272].z) / ((_2294 * _2118) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_2118 * 1.44269502162933349609375) * _2296)));
    }
    else
    {
        _2332 = 0.0;
        _2333 = 0.0;
        _2334 = 0.0;
    }
    float _2351 = 0.959999978542327880859375 - (exp2(log2(1.0 - _564) * 5.0) * 0.959999978542327880859375);
    float _2352 = (_2332 + ((exp2(_2128 * (_2124 ? 0.0 : _2116)) * _2087.x) * cbSceneParam._m0[72u].w)) * _2351;
    float _2353 = (_2333 + ((exp2(_2128 * (_2124 ? 0.0 : _2117)) * _2087.y) * cbSceneParam._m0[72u].w)) * _2351;
    float _2354 = (_2334 + ((exp2(_2128 * (_2124 ? 0.0 : _2118)) * _2087.z) * cbSceneParam._m0[72u].w)) * _2351;
    float _2362 = (_2352 + (((((_1600 * _1635.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1606 : (isnan(_1606) ? 0.0 : max(_1606, 0.0))) * _1391) * _1651)) + ((((cbLight._m0[_1960].x * _1913) * _2012) * _2026) * _1941)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3534 : (isnan(_3534) ? 1.0 : min(_3534, 1.0))) * ((((cbLight._m0[_1931].x * _1913) * _1941) * _1954) + ((isnan(0.0) ? _1312 : (isnan(_1312) ? 0.0 : max(_1312, 0.0))) * _549))) - _2352) * cbMtdParam._m0[12u].x);
    float _2364 = (_2353 + (((((_1600 * _1635.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1609 : (isnan(_1609) ? 0.0 : max(_1609, 0.0))) * _1391) * _1651)) + ((((cbLight._m0[_1960].y * _1915) * _2012) * _2026) * _1941)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3545 : (isnan(_3545) ? 1.0 : min(_3545, 1.0))) * ((((cbLight._m0[_1931].y * _1915) * _1941) * _1954) + ((isnan(0.0) ? _1315 : (isnan(_1315) ? 0.0 : max(_1315, 0.0))) * _549))) - _2353) * cbMtdParam._m0[12u].x);
    float _2366 = (_2354 + (((((_1600 * _1635.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1612 : (isnan(_1612) ? 0.0 : max(_1612, 0.0))) * _1391) * _1651)) + ((((cbLight._m0[_1960].z * _1917) * _2012) * _2026) * _1941)) * cbPerFrame._m0[3u].x)) + ((((isnan(1.0) ? _3556 : (isnan(_3556) ? 1.0 : min(_3556, 1.0))) * ((((cbLight._m0[_1931].z * _1917) * _1941) * _1954) + ((isnan(0.0) ? _1318 : (isnan(_1318) ? 0.0 : max(_1318, 0.0))) * _549))) - _2354) * cbMtdParam._m0[12u].x);
    float _2371 = cbInstanceData._m0[_344 + 6u].w * (isnan(1.0) ? _2916 : (isnan(_2916) ? 1.0 : min(_2916, 1.0)));
    float _2376 = _511 / cbSceneParam._m0[86u].x;
    float _2377 = _512 / cbSceneParam._m0[86u].y;
    vec4 _2391 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2376, _2377, (log2((isnan(cbSceneParam._m0[77u].w) ? _485 : (isnan(_485) ? cbSceneParam._m0[77u].w : min(_485, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2393 = _2391.x;
    float _2394 = _2391.y;
    float _2395 = _2391.z;
    float _2396 = _2391.w;
    float _2468;
    float _2470;
    float _2472;
    float _2474;
    if (_485 > cbSceneParam._m0[78u].w)
    {
        float _2434 = isnan(_485) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _485 : min(cbSceneParam._m0[80u].w, _485));
        float _2435 = _2434 / _485;
        float _2446 = _2435 * _268;
        float _2447 = _2435 * _416;
        float _2448 = _2435 * _270;
        float _2450 = (cbSceneParam._m0[77u].w * _2447) / _2434;
        float _2451 = _2450 + cbSceneParam._m0[79u].w;
        float _2452 = cbSceneParam._m0[79u].w + _2447;
        float _2458 = sqrt(((_2446 * _2446) + (_2447 * _2447)) + (_2448 * _2448));
        float _2461 = (1.0 - (cbSceneParam._m0[77u].w / _2434)) * _2458;
        float _2466 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2467 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2660;
        if (abs((_2447 - _2450) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2660 = ((((_2451 > 0.0) ? exp2(_2466 * _2451) : (2.0 - exp2(_2467 * _2451))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2461;
        }
        else
        {
            float _2596 = 1.0 / cbSceneParam._m0[80u].x;
            float _2597 = isnan(_2452) ? _2451 : (isnan(_2451) ? _2452 : max(_2451, _2452));
            float _2598 = isnan(_2452) ? _2451 : (isnan(_2451) ? _2452 : min(_2451, _2452));
            float _2607 = isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : min(_2597, 0.0));
            float _2608 = isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : min(_2598, 0.0));
            _2660 = ((abs(_2458 / _2447) * cbSceneParam._m0[80u].y) * ((((_2607 - _2608) * 2.0) - ((exp2(_2466 * (isnan(0.0) ? _2597 : (isnan(_2597) ? 0.0 : max(_2597, 0.0)))) - exp2(_2466 * (isnan(0.0) ? _2598 : (isnan(_2598) ? 0.0 : max(_2598, 0.0))))) * _2596)) - ((exp2(_2467 * _2607) - exp2(_2467 * _2608)) * _2596))) + (_2461 * cbSceneParam._m0[80u].z);
        }
        vec4 _2662 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2376, _2377, 1.0), 0.0);
        float _2671 = exp2((_2660 * (-1.44269502162933349609375)) * (1.0 - _2662.w));
        float _2672 = log2(_2671);
        float _2688 = log2(_2396);
        _2468 = (exp2(_2688 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2672 * cbSceneParam._m0[78u].x)) * _2662.x) / cbSceneParam._m0[78u].x)) + _2393;
        _2470 = (exp2(_2688 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2672 * cbSceneParam._m0[78u].y)) * _2662.y) / cbSceneParam._m0[78u].y)) + _2394;
        _2472 = (exp2(_2688 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2672 * cbSceneParam._m0[78u].z)) * _2662.z) / cbSceneParam._m0[78u].z)) + _2395;
        _2474 = _2671 * _2396;
    }
    else
    {
        _2468 = _2393;
        _2470 = _2394;
        _2472 = _2395;
        _2474 = _2396;
    }
    bool _2698;
    float _2529;
    vec4 _2532;
    float _2534;
    vec4 _2536;
    float _2544;
    float _2545;
    float _2546;
    float _2547;
    bool _2557;
    for (;;)
    {
        bool _2486 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2487 = log2(_2474);
        float _2494 = exp2(_2487 * cbSceneParam._m0[78u].x) * _2362;
        float _2495 = exp2(_2487 * cbSceneParam._m0[78u].y) * _2364;
        float _2496 = exp2(_2487 * cbSceneParam._m0[78u].z) * _2366;
        vec4 _2504 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_511, _512));
        float _2506 = _2504.x;
        float _2527 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2506)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2506))) - _485) * 3.0;
        float _3622 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
        _2529 = _2371 * (isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0)));
        float _2530 = _499 + (-0.5);
        _2532 = cbMtdParam._m0[1u];
        _2534 = _2532.y * _2530;
        _2536 = cbMatDynParam._m0[0u];
        float _2543 = (roundEven(_2536.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2544 = _2543 * (_2486 ? _2494 : (_2494 + (cbSceneParam._m0[72u].w * _2468)));
        _2545 = _2543 * (_2486 ? _2495 : (_2495 + (cbSceneParam._m0[72u].w * _2470)));
        _2546 = _2543 * (_2486 ? _2496 : (_2496 + (cbSceneParam._m0[72u].w * _2472)));
        _2547 = _2530 * 0.999000012874603271484375;
        _2557 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2557)
        {
            if ((cbInstanceData._m0[_344 + 7u].x + _2547) < 0.5)
            {
                _2698 = true;
                break;
            }
        }
        uint _2631 = _525 + uint(_2536.w);
        if ((cbInstanceData._m0[_2631].w < 1.0) && ((cbInstanceData._m0[_2631].w + _2547) < 0.5))
        {
            _2698 = true;
            break;
        }
        if ((_2534 + 1.0) < _2532.x)
        {
            _2698 = true;
            break;
        }
        _2698 = false;
        break;
    }
    float _2703;
    if (_2698)
    {
        discard_state = true;
        _2703 = 0.0;
    }
    else
    {
        _2703 = _2529;
    }
    SV_Target.x = _2544;
    SV_Target.y = _2545;
    SV_Target.z = _2546;
    SV_Target.w = _2703;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2529;
    discard_exit();
}


