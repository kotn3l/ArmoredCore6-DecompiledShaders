#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 44) uniform texture2D g_RLRTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 0) uniform texture2D M_Water_ocean_Horizon_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _949;
float _2474;
float _2475;
float _2476;
float _2477;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _177 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _178 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _179 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _184 = inversesqrt(dot(vec3(_177, _178, _179), vec3(_177, _178, _179)));
    float _185 = _184 * _177;
    float _186 = _184 * _178;
    float _187 = _184 * _179;
    float _191 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _192 = _191 * NORMAL.x;
    float _193 = _191 * NORMAL.y;
    float _194 = _191 * NORMAL.z;
    float _198 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _206;
    float _207;
    float _208;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _206 = (-0.0) - _192;
        _207 = (-0.0) - _193;
        _208 = (-0.0) - _194;
    }
    else
    {
        _206 = _192;
        _207 = _193;
        _208 = _194;
    }
    float _254 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _264 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _254);
    float _265 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _254);
    float _266 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _254);
    uvec4 _277 = floatBitsToUint(cbMtdParam._m0[9u]);
    float _280 = _265 * 100.0;
    float _2486 = isnan(0.0) ? _280 : (isnan(_280) ? 0.0 : max(_280, 0.0));
    float _288 = cbMtdParam._m0[11u].y * _265;
    float _2497 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
    float _292 = exp2(log2(isnan(1.0) ? _2497 : (isnan(_2497) ? 1.0 : min(_2497, 1.0))) * cbMtdParam._m0[11u].z);
    float _2508 = isnan(0.0) ? _292 : (isnan(_292) ? 0.0 : max(_292, 0.0));
    float _299 = cbMtdParam._m0[12u].z * _265;
    float _2519 = isnan(0.0) ? _299 : (isnan(_299) ? 0.0 : max(_299, 0.0));
    float _303 = exp2(log2(isnan(1.0) ? _2519 : (isnan(_2519) ? 1.0 : min(_2519, 1.0))) * cbMtdParam._m0[11u].w);
    float _2530 = isnan(0.0) ? _303 : (isnan(_303) ? 0.0 : max(_303, 0.0));
    float _304 = isnan(1.0) ? _2530 : (isnan(_2530) ? 1.0 : min(_2530, 1.0));
    float _307 = cbMtdParam._m0[12u].y * _265;
    float _2541 = isnan(0.0) ? _307 : (isnan(_307) ? 0.0 : max(_307, 0.0));
    float _311 = exp2(log2(isnan(1.0) ? _2541 : (isnan(_2541) ? 1.0 : min(_2541, 1.0))) * cbMtdParam._m0[11u].x);
    float _2552 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _316 = (((isnan(1.0) ? _2552 : (isnan(_2552) ? 1.0 : min(_2552, 1.0))) - _304) * 0.5) + _304;
    float _319 = (((isnan(1.0) ? _2508 : (isnan(_2508) ? 1.0 : min(_2508, 1.0))) - _316) * 0.5) + _316;
    float _2563 = isnan(0.0) ? _319 : (isnan(_319) ? 0.0 : max(_319, 0.0));
    float _321 = (_277.y != 0u) ? (isnan(1.0) ? _2563 : (isnan(_2563) ? 1.0 : min(_2563, 1.0))) : (isnan(1.0) ? _2486 : (isnan(_2486) ? 1.0 : min(_2486, 1.0)));
    bool _336 = _277.x != 0u;
    uint _340 = uint(roundEven(NORMAL.w)) * 13u;
    float _345 = cbSceneParam._m0[3u].y - cbInstanceData._m0[_340 + 1u].w;
    float _346 = _264 / _265;
    float _348 = (-0.0) - (_266 / _265);
    vec4 _369 = texture(sampler2D(M_Water_ocean_Horizon_snp_0_Texture2D_1, SS_BumpMap), vec2(((((_336 ? (_345 * _346) : _346) * cbMtdParam._m0[12u].w) + ((cbMtdParam._m0[13u].y * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((_336 ? (_345 * _348) : _348) * cbMtdParam._m0[13u].x) + ((cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[10u].w)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _377 = (_369.x * 2.0) + (-1.0);
    float _379 = (_369.y * 2.0) + (-1.0);
    float _380 = dot(vec2(_377, _379), vec2(_377, _379));
    float _2574 = isnan(0.0) ? _380 : (isnan(_380) ? 0.0 : max(_380, 0.0));
    float _385 = sqrt(1.0 - (isnan(1.0) ? _2574 : (isnan(_2574) ? 1.0 : min(_2574, 1.0))));
    uint _399 = _340 + 5u;
    float _411 = (-0.0) - _264;
    float _412 = (-0.0) - _265;
    float _413 = (-0.0) - _266;
    float _417 = inversesqrt(dot(vec3(_411, _412, _413), vec3(_411, _412, _413)));
    float _421 = dot(vec3(_417 * _411, _417 * _412, _417 * _413), vec3(cbLight._m0[floatBitsToUint(cbInstanceData._m0[_399]).x * 14u].xyz));
    float _432 = 0.90999996662139892578125 / exp2(log2(1.091000080108642578125 - (_421 * 0.60000002384185791015625)) * 1.5);
    float _446 = ((((0.959999978542327880859375 / exp2(log2((_421 * 0.4000000059604644775390625) + 1.04100000858306884765625) * 1.5)) - _432) * 0.5) + _432) * 0.079577468335628509521484375;
    float _450 = fma(_385, _206, fma(_379, _198 * TANGENT.x, _377 * _185));
    float _453 = fma(_385, _207, fma(_379, _198 * TANGENT.y, _377 * _186));
    float _456 = fma(_385, _208, fma(_379, _198 * TANGENT.z, _377 * _187));
    float _460 = inversesqrt(dot(vec3(_450, _453, _456), vec3(_450, _453, _456)));
    float _461 = _460 * _450;
    float _462 = _460 * _453;
    float _463 = _460 * _456;
    float _2585 = isnan(0.0) ? _321 : (isnan(_321) ? 0.0 : max(_321, 0.0));
    float _2596 = isnan(0.0) ? cbMtdParam._m0[10u].z : (isnan(cbMtdParam._m0[10u].z) ? 0.0 : max(cbMtdParam._m0[10u].z, 0.0));
    float _465 = isnan(1.0) ? _2596 : (isnan(_2596) ? 1.0 : min(_2596, 1.0));
    float _2607 = isnan(0.0) ? cbMtdParam._m0[9u].z : (isnan(cbMtdParam._m0[9u].z) ? 0.0 : max(cbMtdParam._m0[9u].z, 0.0));
    float _2618 = isnan(0.0) ? cbMtdParam._m0[9u].w : (isnan(cbMtdParam._m0[9u].w) ? 0.0 : max(cbMtdParam._m0[9u].w, 0.0));
    float _2629 = isnan(0.0) ? cbMtdParam._m0[10u].x : (isnan(cbMtdParam._m0[10u].x) ? 0.0 : max(cbMtdParam._m0[10u].x, 0.0));
    float _481 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _485 = inversesqrt(dot(vec3(_264, _265, _266), vec3(_264, _265, _266)));
    float _486 = _264 * _485;
    float _487 = _265 * _485;
    float _488 = _266 * _485;
    vec4 _493 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _495 = _493.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _629 = sqrt(((_264 * _264) + (_265 * _265)) + (_266 * _266));
        float _635 = (cbMatDynParam._m0[5u].x * _629) + cbMatDynParam._m0[5u].y;
        float _2640 = isnan(0.0) ? _635 : (isnan(_635) ? 0.0 : max(_635, 0.0));
        float _636 = isnan(1.0) ? _2640 : (isnan(_2640) ? 1.0 : min(_2640, 1.0));
        float _640 = (cbMatDynParam._m0[5u].z * _629) + cbMatDynParam._m0[5u].w;
        float _2651 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2651 : (isnan(_2651) ? 1.0 : min(_2651, 1.0))) - _636)) + _636) < ((_495 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _507 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _508 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _521 = _340 + 9u;
    uint _522 = _521 + uint(cbMatDynParam._m0[0u].w);
    float _528 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2607 : (isnan(_2607) ? 1.0 : min(_2607, 1.0)))) * cbInstanceData._m0[_522].x;
    float _529 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2618 : (isnan(_2618) ? 1.0 : min(_2618, 1.0)))) * cbInstanceData._m0[_522].y;
    float _530 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2629 : (isnan(_2629) ? 1.0 : min(_2629, 1.0)))) * cbInstanceData._m0[_522].z;
    float _2662 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0));
    float _531 = isnan(1.0) ? _2662 : (isnan(_2662) ? 1.0 : min(_2662, 1.0));
    float _2673 = isnan(0.0) ? _529 : (isnan(_529) ? 0.0 : max(_529, 0.0));
    float _532 = isnan(1.0) ? _2673 : (isnan(_2673) ? 1.0 : min(_2673, 1.0));
    float _2684 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
    float _533 = isnan(1.0) ? _2684 : (isnan(_2684) ? 1.0 : min(_2684, 1.0));
    vec4 _542 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _507, cbSceneParam._m0[86u].y * _508));
    float _545 = _542.x * TEXCOORD.z;
    float _546 = dot(vec3(_461, _462, _463), vec3(_486, _487, _488));
    float _549 = _546 * 2.0;
    float _553 = (_549 * _461) - _486;
    float _554 = (_549 * _462) - _487;
    float _555 = (_549 * _463) - _488;
    float _559 = abs(dot(vec3(_486, _487, _488), vec3(_461, _462, _463)));
    float _2695 = isnan(0.0) ? _559 : (isnan(_559) ? 0.0 : max(_559, 0.0));
    float _560 = isnan(1.0) ? _2695 : (isnan(_2695) ? 1.0 : min(_2695, 1.0));
    float _568 = sqrt(_465);
    float _580 = exp2((_568 * 5.0) * log2(1.0 - (_560 * 0.999000012874603271484375))) / (4.0 - (_568 * 3.0));
    float _610 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _614 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _618 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _948;
    float _950;
    float _951;
    float _952;
    float _953;
    float _954;
    float _955;
    float _956;
    float _957;
    float _958;
    float _959;
    float _960;
    float _961;
    float _962;
    float _963;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _674 = fma(_618, cbModelParam._m0[26u].z, fma(_614, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _610));
        float _678 = fma(_618, cbModelParam._m0[27u].z, fma(_614, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _610));
        float _682 = fma(_618, cbModelParam._m0[28u].z, fma(_614, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _610));
        float _706 = _610 + _461;
        float _707 = _614 + _462;
        float _708 = _618 + _463;
        float _718 = fma(_708, cbModelParam._m0[26u].z, fma(_707, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _706)) - _674;
        float _719 = fma(_708, cbModelParam._m0[27u].z, fma(_707, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _706)) - _678;
        float _720 = fma(_708, cbModelParam._m0[28u].z, fma(_707, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _706)) - _682;
        float _724 = inversesqrt(dot(vec3(_718, _719, _720), vec3(_718, _719, _720)));
        float _737 = ((_724 * _718) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_674 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _738 = ((_724 * _719) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_678 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _739 = ((_724 * _720) / cbModelParam._m0[34u].z) + ((((((_682 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _742 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_737, _738, _739), 0.0);
        vec4 _749 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_737, _738, _739), 0.0);
        vec4 _756 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_737, _738, _739), 0.0);
        vec4 _763 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_737, _738, _739), 0.0);
        float _776 = exp2((_742.w + (-0.5)) * 20.0) * 2.0;
        float _777 = _776 * (_742.x + (-0.5));
        float _778 = _776 * (_742.y + (-0.5));
        float _779 = _776 * (_742.z + (-0.5));
        float _786 = exp2((_749.w + (-0.5)) * 20.0) * 2.0;
        float _787 = _786 * (_749.x + (-0.5));
        float _788 = _786 * (_749.y + (-0.5));
        float _789 = _786 * (_749.z + (-0.5));
        float _796 = exp2((_756.w + (-0.5)) * 20.0) * 2.0;
        float _797 = _796 * (_756.x + (-0.5));
        float _798 = _796 * (_756.y + (-0.5));
        float _799 = _796 * (_756.z + (-0.5));
        float _806 = exp2((_763.w + (-0.5)) * 20.0) * 2.0;
        float _807 = _806 * (_763.x + (-0.5));
        float _808 = _806 * (_763.y + (-0.5));
        float _809 = _806 * (_763.z + (-0.5));
        float _810 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        float _811 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
        float _812 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
        float _813 = _777 * 0.5;
        float _814 = _787 * 0.5;
        float _815 = _797 * 0.5;
        float _816 = dot(vec3(_813, _814, _815), vec3(_813, _814, _815));
        float _821 = (_816 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_816);
        float _830 = (dot(vec3(_461, _462, _463), vec3(_821 * _813, _821 * _814, _821 * _815)) + 1.0) * 0.5;
        float _2721 = isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0));
        float _840 = sqrt(((_814 * _814) + (_813 * _813)) + (_815 * _815)) / (_810 + 9.9999997473787516355514526367188e-06);
        float _2732 = isnan(0.0) ? _840 : (isnan(_840) ? 0.0 : max(_840, 0.0));
        float _841 = isnan(1.0) ? _2732 : (isnan(_2732) ? 1.0 : min(_2732, 1.0));
        float _842 = _841 * 2.0;
        float _846 = (1.0 - _841) / (_841 + 1.0);
        float _2743 = isnan(0.0) ? _846 : (isnan(_846) ? 0.0 : max(_846, 0.0));
        float _847 = isnan(1.0) ? _2743 : (isnan(_2743) ? 1.0 : min(_2743, 1.0));
        float _856 = ((((1.0 - _847) * (_842 + 2.0)) * exp2(log2(isnan(1.0) ? _2721 : (isnan(_2721) ? 1.0 : min(_2721, 1.0))) * (_842 + 1.0))) + _847) * _810;
        float _857 = _778 * 0.5;
        float _858 = _788 * 0.5;
        float _859 = _798 * 0.5;
        float _860 = dot(vec3(_857, _858, _859), vec3(_857, _858, _859));
        float _865 = (_860 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_860);
        float _873 = (dot(vec3(_461, _462, _463), vec3(_865 * _857, _865 * _858, _865 * _859)) + 1.0) * 0.5;
        float _2754 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        float _882 = sqrt(((_858 * _858) + (_857 * _857)) + (_859 * _859)) / (_811 + 9.9999997473787516355514526367188e-06);
        float _2765 = isnan(0.0) ? _882 : (isnan(_882) ? 0.0 : max(_882, 0.0));
        float _883 = isnan(1.0) ? _2765 : (isnan(_2765) ? 1.0 : min(_2765, 1.0));
        float _884 = _883 * 2.0;
        float _888 = (1.0 - _883) / (_883 + 1.0);
        float _2776 = isnan(0.0) ? _888 : (isnan(_888) ? 0.0 : max(_888, 0.0));
        float _889 = isnan(1.0) ? _2776 : (isnan(_2776) ? 1.0 : min(_2776, 1.0));
        float _898 = ((((1.0 - _889) * (_884 + 2.0)) * exp2(log2(isnan(1.0) ? _2754 : (isnan(_2754) ? 1.0 : min(_2754, 1.0))) * (_884 + 1.0))) + _889) * _811;
        float _899 = _779 * 0.5;
        float _900 = _789 * 0.5;
        float _901 = _799 * 0.5;
        float _902 = dot(vec3(_899, _900, _901), vec3(_899, _900, _901));
        float _907 = (_902 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_902);
        float _915 = (dot(vec3(_461, _462, _463), vec3(_907 * _899, _907 * _900, _907 * _901)) + 1.0) * 0.5;
        float _2787 = isnan(0.0) ? _915 : (isnan(_915) ? 0.0 : max(_915, 0.0));
        float _924 = sqrt(((_900 * _900) + (_899 * _899)) + (_901 * _901)) / (_812 + 9.9999997473787516355514526367188e-06);
        float _2798 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _925 = isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0));
        float _926 = _925 * 2.0;
        float _930 = (1.0 - _925) / (_925 + 1.0);
        float _2809 = isnan(0.0) ? _930 : (isnan(_930) ? 0.0 : max(_930, 0.0));
        float _931 = isnan(1.0) ? _2809 : (isnan(_2809) ? 1.0 : min(_2809, 1.0));
        float _940 = ((((1.0 - _931) * (_926 + 2.0)) * exp2(log2(isnan(1.0) ? _2787 : (isnan(_2787) ? 1.0 : min(_2787, 1.0))) * (_926 + 1.0))) + _931) * _812;
        _948 = _779;
        _950 = _778;
        _951 = _777;
        _952 = _789;
        _953 = _788;
        _954 = _787;
        _955 = _799;
        _956 = _798;
        _957 = _797;
        _958 = _812;
        _959 = _811;
        _960 = _810;
        _961 = cbModelParam._m0[36u].z * (isnan(0.0) ? _856 : (isnan(_856) ? 0.0 : max(_856, 0.0)));
        _962 = cbModelParam._m0[36u].z * (isnan(0.0) ? _898 : (isnan(_898) ? 0.0 : max(_898, 0.0)));
        _963 = cbModelParam._m0[36u].z * (isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0)));
    }
    else
    {
        _948 = _949;
        _950 = _949;
        _951 = _949;
        _952 = _949;
        _953 = _949;
        _954 = _949;
        _955 = _949;
        _956 = _949;
        _957 = _949;
        _958 = _949;
        _959 = _949;
        _960 = _949;
        _961 = 0.0;
        _962 = 0.0;
        _963 = 0.0;
    }
    float _1261;
    float _1262;
    float _1263;
    float _1264;
    float _1265;
    float _1266;
    float _1267;
    float _1268;
    float _1269;
    float _1270;
    float _1271;
    float _1272;
    float _1273;
    float _1274;
    float _1275;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _992 = fma(_618, cbModelParam._m0[30u].z, fma(_614, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _610));
        float _996 = fma(_618, cbModelParam._m0[31u].z, fma(_614, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _610));
        float _1000 = fma(_618, cbModelParam._m0[32u].z, fma(_614, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _610));
        float _1023 = _610 + _461;
        float _1024 = _614 + _462;
        float _1025 = _618 + _463;
        float _1035 = fma(_1025, cbModelParam._m0[30u].z, fma(_1024, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1023)) - _992;
        float _1036 = fma(_1025, cbModelParam._m0[31u].z, fma(_1024, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1023)) - _996;
        float _1037 = fma(_1025, cbModelParam._m0[32u].z, fma(_1024, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1023)) - _1000;
        float _1041 = inversesqrt(dot(vec3(_1035, _1036, _1037), vec3(_1035, _1036, _1037)));
        float _1054 = ((_1041 * _1035) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_992 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1055 = ((_1041 * _1036) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_996 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1056 = ((_1041 * _1037) / cbModelParam._m0[35u].z) + ((((((_1000 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1058 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1054, _1055, _1056), 0.0);
        vec4 _1065 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1054, _1055, _1056), 0.0);
        vec4 _1072 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1054, _1055, _1056), 0.0);
        vec4 _1079 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1054, _1055, _1056), 0.0);
        float _1091 = exp2((_1058.w + (-0.5)) * 20.0) * 2.0;
        float _1092 = _1091 * (_1058.x + (-0.5));
        float _1093 = _1091 * (_1058.y + (-0.5));
        float _1094 = _1091 * (_1058.z + (-0.5));
        float _1101 = exp2((_1065.w + (-0.5)) * 20.0) * 2.0;
        float _1102 = _1101 * (_1065.x + (-0.5));
        float _1103 = _1101 * (_1065.y + (-0.5));
        float _1104 = _1101 * (_1065.z + (-0.5));
        float _1111 = exp2((_1072.w + (-0.5)) * 20.0) * 2.0;
        float _1112 = _1111 * (_1072.x + (-0.5));
        float _1113 = _1111 * (_1072.y + (-0.5));
        float _1114 = _1111 * (_1072.z + (-0.5));
        float _1121 = exp2((_1079.w + (-0.5)) * 20.0) * 2.0;
        float _1122 = _1121 * (_1079.x + (-0.5));
        float _1123 = _1121 * (_1079.y + (-0.5));
        float _1124 = _1121 * (_1079.z + (-0.5));
        float _1125 = isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0));
        float _1126 = isnan(0.0) ? _1123 : (isnan(_1123) ? 0.0 : max(_1123, 0.0));
        float _1127 = isnan(0.0) ? _1124 : (isnan(_1124) ? 0.0 : max(_1124, 0.0));
        float _1128 = _1092 * 0.5;
        float _1129 = _1102 * 0.5;
        float _1130 = _1112 * 0.5;
        float _1131 = dot(vec3(_1128, _1129, _1130), vec3(_1128, _1129, _1130));
        float _1136 = (_1131 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1131);
        float _1144 = (dot(vec3(_461, _462, _463), vec3(_1136 * _1128, _1136 * _1129, _1136 * _1130)) + 1.0) * 0.5;
        float _2850 = isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0));
        float _1153 = sqrt(((_1129 * _1129) + (_1128 * _1128)) + (_1130 * _1130)) / (_1125 + 9.9999997473787516355514526367188e-06);
        float _2861 = isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0));
        float _1154 = isnan(1.0) ? _2861 : (isnan(_2861) ? 1.0 : min(_2861, 1.0));
        float _1155 = _1154 * 2.0;
        float _1159 = (1.0 - _1154) / (_1154 + 1.0);
        float _2872 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1160 = isnan(1.0) ? _2872 : (isnan(_2872) ? 1.0 : min(_2872, 1.0));
        float _1169 = ((((1.0 - _1160) * (_1155 + 2.0)) * exp2(log2(isnan(1.0) ? _2850 : (isnan(_2850) ? 1.0 : min(_2850, 1.0))) * (_1155 + 1.0))) + _1160) * _1125;
        float _1170 = _1093 * 0.5;
        float _1171 = _1103 * 0.5;
        float _1172 = _1113 * 0.5;
        float _1173 = dot(vec3(_1170, _1171, _1172), vec3(_1170, _1171, _1172));
        float _1178 = (_1173 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1173);
        float _1186 = (dot(vec3(_461, _462, _463), vec3(_1178 * _1170, _1178 * _1171, _1178 * _1172)) + 1.0) * 0.5;
        float _2883 = isnan(0.0) ? _1186 : (isnan(_1186) ? 0.0 : max(_1186, 0.0));
        float _1195 = sqrt(((_1171 * _1171) + (_1170 * _1170)) + (_1172 * _1172)) / (_1126 + 9.9999997473787516355514526367188e-06);
        float _2894 = isnan(0.0) ? _1195 : (isnan(_1195) ? 0.0 : max(_1195, 0.0));
        float _1196 = isnan(1.0) ? _2894 : (isnan(_2894) ? 1.0 : min(_2894, 1.0));
        float _1197 = _1196 * 2.0;
        float _1201 = (1.0 - _1196) / (_1196 + 1.0);
        float _2905 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _2905 : (isnan(_2905) ? 1.0 : min(_2905, 1.0));
        float _1211 = ((((1.0 - _1202) * (_1197 + 2.0)) * exp2(log2(isnan(1.0) ? _2883 : (isnan(_2883) ? 1.0 : min(_2883, 1.0))) * (_1197 + 1.0))) + _1202) * _1126;
        float _1212 = _1094 * 0.5;
        float _1213 = _1104 * 0.5;
        float _1214 = _1114 * 0.5;
        float _1215 = dot(vec3(_1212, _1213, _1214), vec3(_1212, _1213, _1214));
        float _1220 = (_1215 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1215);
        float _1228 = (dot(vec3(_461, _462, _463), vec3(_1220 * _1212, _1220 * _1213, _1220 * _1214)) + 1.0) * 0.5;
        float _2916 = isnan(0.0) ? _1228 : (isnan(_1228) ? 0.0 : max(_1228, 0.0));
        float _1237 = sqrt(((_1213 * _1213) + (_1212 * _1212)) + (_1214 * _1214)) / (_1127 + 9.9999997473787516355514526367188e-06);
        float _2927 = isnan(0.0) ? _1237 : (isnan(_1237) ? 0.0 : max(_1237, 0.0));
        float _1238 = isnan(1.0) ? _2927 : (isnan(_2927) ? 1.0 : min(_2927, 1.0));
        float _1239 = _1238 * 2.0;
        float _1243 = (1.0 - _1238) / (_1238 + 1.0);
        float _2938 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _2938 : (isnan(_2938) ? 1.0 : min(_2938, 1.0));
        float _1253 = ((((1.0 - _1244) * (_1239 + 2.0)) * exp2(log2(isnan(1.0) ? _2916 : (isnan(_2916) ? 1.0 : min(_2916, 1.0))) * (_1239 + 1.0))) + _1244) * _1127;
        _1261 = _1094;
        _1262 = _1093;
        _1263 = _1092;
        _1264 = _1104;
        _1265 = _1103;
        _1266 = _1102;
        _1267 = _1114;
        _1268 = _1113;
        _1269 = _1112;
        _1270 = _1127;
        _1271 = _1126;
        _1272 = _1125;
        _1273 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0)));
        _1274 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1211 : (isnan(_1211) ? 0.0 : max(_1211, 0.0)));
        _1275 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1253 : (isnan(_1253) ? 0.0 : max(_1253, 0.0)));
    }
    else
    {
        _1261 = _949;
        _1262 = _949;
        _1263 = _949;
        _1264 = _949;
        _1265 = _949;
        _1266 = _949;
        _1267 = _949;
        _1268 = _949;
        _1269 = _949;
        _1270 = _949;
        _1271 = _949;
        _1272 = _949;
        _1273 = 0.0;
        _1274 = 0.0;
        _1275 = 0.0;
    }
    float _1285 = (cbModelParam._m0[1u].x * (_1273 - _961)) + _961;
    float _1286 = (cbModelParam._m0[1u].x * (_1274 - _962)) + _962;
    float _1287 = (cbModelParam._m0[1u].x * (_1275 - _963)) + _963;
    float _1308 = fma(_1287, cbSceneParam._m0[89u].z, fma(_1286, cbSceneParam._m0[89u].y, _1285 * cbSceneParam._m0[89u].x));
    float _1311 = fma(_1287, cbSceneParam._m0[90u].z, fma(_1286, cbSceneParam._m0[90u].y, _1285 * cbSceneParam._m0[90u].x));
    float _1314 = fma(_1287, cbSceneParam._m0[91u].z, fma(_1286, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1285));
    float _1329 = _553 * 0.5;
    float _1330 = _554 * 0.5;
    float _1331 = _555 * 0.5;
    float _1332 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_1263, _1266, _1269, _1272));
    float _1335 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_1262, _1265, _1268, _1271));
    float _1338 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_1261, _1264, _1267, _1270));
    float _1372;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1345 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_948, _952, _955, _958));
        float _1349 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_950, _953, _956, _959));
        float _1353 = dot(vec4(_1329, _1330, _1331, 1.0), vec4(_951, _954, _957, _960));
        float _1360 = dot(vec4(cbModelParam._m0[39u]), vec4(_1329, _1330, _1331, 1.0));
        _1372 = dot(vec3(isnan(0.0) ? _1353 : (isnan(_1353) ? 0.0 : max(_1353, 0.0)), isnan(0.0) ? _1349 : (isnan(_1349) ? 0.0 : max(_1349, 0.0)), isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1360) ? 0.0 : (isnan(0.0) ? _1360 : max(0.0, _1360))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1372 = 1.0;
    }
    float _1383;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1374 = dot(vec4(cbModelParam._m0[40u]), vec4(_1329, _1330, _1331, 1.0));
        _1383 = dot(vec3(isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0)), isnan(0.0) ? _1335 : (isnan(_1335) ? 0.0 : max(_1335, 0.0)), isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1374) ? 0.0 : (isnan(0.0) ? _1374 : max(0.0, _1374))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1383 = 1.0;
    }
    float _1387 = (_1383 * cbModelParam._m0[1u].x) + (_1372 * (1.0 - cbModelParam._m0[1u].x));
    float _1397 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _465);
    float _1398 = isnan(_1397) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1397 : min(cbModelParam._m0[25u].z, _1397));
    float _1479;
    float _1481;
    float _1483;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1446 = fma(_618, cbModelParam._m0[13u].z, fma(_614, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _610)) + cbModelParam._m0[13u].w;
        float _1450 = fma(_618, cbModelParam._m0[14u].z, fma(_614, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _610)) + cbModelParam._m0[14u].w;
        float _1454 = fma(_618, cbModelParam._m0[15u].z, fma(_614, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _610)) + cbModelParam._m0[15u].w;
        float _1457 = fma(_555, cbModelParam._m0[13u].z, fma(_554, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _553));
        float _1460 = fma(_555, cbModelParam._m0[14u].z, fma(_554, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _553));
        float _1463 = fma(_555, cbModelParam._m0[15u].z, fma(_554, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _553));
        float _1491;
        if (_1457 > 0.0)
        {
            _1491 = abs((1.0 - _1446) / _1457);
        }
        else
        {
            float frontier_phi_19_17_ladder;
            if (_1457 < 0.0)
            {
                frontier_phi_19_17_ladder = abs((_1446 + 1.0) / _1457);
            }
            else
            {
                frontier_phi_19_17_ladder = 5000.0;
            }
            _1491 = frontier_phi_19_17_ladder;
        }
        float _1879;
        if (_1460 > 0.0)
        {
            _1879 = abs((1.0 - _1450) / _1460);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1460 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1450 + 1.0) / _1460);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1879 = frontier_phi_28_24_ladder;
        }
        float _2180;
        if (_1463 > 0.0)
        {
            _2180 = abs((1.0 - _1454) / _1463);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1463 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1454 + 1.0) / _1463);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _2180 = frontier_phi_40_35_ladder;
        }
        float _2182 = isnan(_1879) ? _1491 : (isnan(_1491) ? _1879 : min(_1491, _1879));
        float _2183 = isnan(_2180) ? _2182 : (isnan(_2182) ? _2180 : min(_2182, _2180));
        float _2187 = (_2183 * _1457) + _1446;
        float _2188 = (_2183 * _1460) + _1450;
        float _2189 = (_2183 * _1463) + _1454;
        float _2190 = _2183 * 9.9999997473787516355514526367188e-05;
        float _2191 = (-1.0) - _2190;
        float _2193 = _2190 + 1.0;
        float frontier_phi_18_40_ladder;
        float frontier_phi_18_40_ladder_1;
        float frontier_phi_18_40_ladder_2;
        if ((_2189 > _2193) || ((_2189 < _2191) || ((_2188 > _2193) || ((_2188 < _2191) || ((_2187 < _2191) || (_2187 > _2193))))))
        {
            frontier_phi_18_40_ladder = 0.0;
            frontier_phi_18_40_ladder_1 = 0.0;
            frontier_phi_18_40_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2282 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2189, cbModelParam._m0[9u].z, fma(_2188, cbModelParam._m0[9u].y, _2187 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2189, cbModelParam._m0[10u].z, fma(_2188, cbModelParam._m0[10u].y, _2187 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2189, cbModelParam._m0[11u].z, fma(_2188, cbModelParam._m0[11u].y, _2187 * cbModelParam._m0[11u].x))), _1398);
            frontier_phi_18_40_ladder = _2282.z * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_1 = _2282.y * cbModelParam._m0[1u].y;
            frontier_phi_18_40_ladder_2 = _2282.x * cbModelParam._m0[1u].y;
        }
        _1479 = frontier_phi_18_40_ladder_2;
        _1481 = frontier_phi_18_40_ladder_1;
        _1483 = frontier_phi_18_40_ladder;
    }
    else
    {
        vec4 _1467 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_553, _554, _555), _1398);
        _1479 = _1467.x * cbModelParam._m0[1u].y;
        _1481 = _1467.y * cbModelParam._m0[1u].y;
        _1483 = _1467.z * cbModelParam._m0[1u].y;
    }
    float _1487 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _465);
    float _1488 = isnan(_1487) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1487 : min(cbModelParam._m0[25u].w, _1487));
    float _1580;
    float _1582;
    float _1584;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1544 = fma(_618, cbModelParam._m0[21u].z, fma(_614, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _610)) + cbModelParam._m0[21u].w;
        float _1548 = fma(_618, cbModelParam._m0[22u].z, fma(_614, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _610)) + cbModelParam._m0[22u].w;
        float _1552 = fma(_618, cbModelParam._m0[23u].z, fma(_614, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _610)) + cbModelParam._m0[23u].w;
        float _1555 = fma(_555, cbModelParam._m0[21u].z, fma(_554, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _553));
        float _1558 = fma(_555, cbModelParam._m0[22u].z, fma(_554, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _553));
        float _1561 = fma(_555, cbModelParam._m0[23u].z, fma(_554, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _553));
        float _1884;
        if (_1555 > 0.0)
        {
            _1884 = abs((1.0 - _1544) / _1555);
        }
        else
        {
            float frontier_phi_30_26_ladder;
            if (_1555 < 0.0)
            {
                frontier_phi_30_26_ladder = abs((_1544 + 1.0) / _1555);
            }
            else
            {
                frontier_phi_30_26_ladder = 5000.0;
            }
            _1884 = frontier_phi_30_26_ladder;
        }
        float _2206;
        if (_1558 > 0.0)
        {
            _2206 = abs((1.0 - _1548) / _1558);
        }
        else
        {
            float frontier_phi_42_37_ladder;
            if (_1558 < 0.0)
            {
                frontier_phi_42_37_ladder = abs((_1548 + 1.0) / _1558);
            }
            else
            {
                frontier_phi_42_37_ladder = 5000.0;
            }
            _2206 = frontier_phi_42_37_ladder;
        }
        float _2334;
        if (_1561 > 0.0)
        {
            _2334 = abs((1.0 - _1552) / _1561);
        }
        else
        {
            float frontier_phi_54_50_ladder;
            if (_1561 < 0.0)
            {
                frontier_phi_54_50_ladder = abs((_1552 + 1.0) / _1561);
            }
            else
            {
                frontier_phi_54_50_ladder = 5000.0;
            }
            _2334 = frontier_phi_54_50_ladder;
        }
        float _2336 = isnan(_2206) ? _1884 : (isnan(_1884) ? _2206 : min(_1884, _2206));
        float _2337 = isnan(_2334) ? _2336 : (isnan(_2336) ? _2334 : min(_2336, _2334));
        float _2341 = (_2337 * _1555) + _1544;
        float _2342 = (_2337 * _1558) + _1548;
        float _2343 = (_2337 * _1561) + _1552;
        float _2344 = _2337 * 9.9999997473787516355514526367188e-05;
        float _2345 = (-1.0) - _2344;
        float _2347 = _2344 + 1.0;
        float frontier_phi_27_54_ladder;
        float frontier_phi_27_54_ladder_1;
        float frontier_phi_27_54_ladder_2;
        if ((_2343 > _2347) || ((_2343 < _2345) || ((_2342 > _2347) || ((_2342 < _2345) || ((_2341 < _2345) || (_2341 > _2347))))))
        {
            frontier_phi_27_54_ladder = 0.0;
            frontier_phi_27_54_ladder_1 = 0.0;
            frontier_phi_27_54_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2385 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2343, cbModelParam._m0[17u].z, fma(_2342, cbModelParam._m0[17u].y, _2341 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2343, cbModelParam._m0[18u].z, fma(_2342, cbModelParam._m0[18u].y, _2341 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2343, cbModelParam._m0[19u].z, fma(_2342, cbModelParam._m0[19u].y, _2341 * cbModelParam._m0[19u].x))), _1488);
            frontier_phi_27_54_ladder = _2385.z * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_1 = _2385.y * cbModelParam._m0[1u].z;
            frontier_phi_27_54_ladder_2 = _2385.x * cbModelParam._m0[1u].z;
        }
        _1580 = frontier_phi_27_54_ladder_2;
        _1582 = frontier_phi_27_54_ladder_1;
        _1584 = frontier_phi_27_54_ladder;
    }
    else
    {
        vec4 _1564 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_553, _554, _555), _1488);
        _1580 = _1564.x * cbModelParam._m0[1u].z;
        _1582 = _1564.y * cbModelParam._m0[1u].z;
        _1584 = _1564.z * cbModelParam._m0[1u].z;
    }
    float _1596 = ((((1.0 - _580) * ((_568 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_580 * _568)) * _545;
    float _1597 = _1596 * ((cbModelParam._m0[1u].w * (_1580 - _1479)) + _1479);
    float _1598 = _1596 * ((cbModelParam._m0[1u].w * (_1582 - _1481)) + _1481);
    float _1599 = _1596 * ((cbModelParam._m0[1u].w * (_1584 - _1483)) + _1483);
    float _1602 = fma(_1599, cbSceneParam._m0[89u].z, fma(_1598, cbSceneParam._m0[89u].y, _1597 * cbSceneParam._m0[89u].x));
    float _1605 = fma(_1599, cbSceneParam._m0[90u].z, fma(_1598, cbSceneParam._m0[90u].y, _1597 * cbSceneParam._m0[90u].x));
    float _1608 = fma(_1599, cbSceneParam._m0[91u].z, fma(_1598, cbSceneParam._m0[91u].y, _1597 * cbSceneParam._m0[91u].x));
    float _1627 = (cbSceneParam._m0[88u].y * (1.0 - _465)) + cbSceneParam._m0[88u].z;
    float _3064 = isnan(0.0) ? _1627 : (isnan(_1627) ? 0.0 : max(_1627, 0.0));
    vec4 _1631 = textureLod(sampler2D(g_RLRTexture, SS_ClampLinear), vec2(_507, _508), (isnan(1.0) ? _3064 : (isnan(_3064) ? 1.0 : min(_3064, 1.0))) * 5.0);
    float _1647 = 1.0 - _1631.w;
    uint _1658 = floatBitsToUint(cbInstanceData._m0[_399]).x * 14u;
    float _1665 = (cbLight._m0[_1658 + 13u].x * (_545 + (-1.0))) + 1.0;
    uint _1666 = _1658 + 4u;
    float _1673 = isnan(1.0) ? _1665 : (isnan(_1665) ? 1.0 : min(_1665, 1.0));
    float _1682 = dot(vec3(cbLight._m0[_1658].xyz), vec3(_461, _462, _463));
    float _3080 = isnan(0.0) ? _1682 : (isnan(_1682) ? 0.0 : max(_1682, 0.0));
    float _1686 = (isnan(1.0) ? _3080 : (isnan(_3080) ? 1.0 : min(_3080, 1.0))) * 0.3183098733425140380859375;
    uint _1692 = _1658 + 8u;
    float _1705 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1658].w)) * _465) * 0.949999988079071044921875);
    float _1706 = _1705 * _1705;
    float _1707 = cbLight._m0[_1658].x + _486;
    float _1708 = cbLight._m0[_1658].y + _487;
    float _1709 = cbLight._m0[_1658].z + _488;
    float _1713 = inversesqrt(dot(vec3(_1707, _1708, _1709), vec3(_1707, _1708, _1709)));
    float _1714 = _1713 * _1707;
    float _1715 = _1713 * _1708;
    float _1716 = _1713 * _1709;
    float _1717 = dot(vec3(_461, _462, _463), vec3(cbLight._m0[_1658].xyz));
    float _3091 = isnan(0.0) ? _1717 : (isnan(_1717) ? 0.0 : max(_1717, 0.0));
    float _1720 = isnan(1.0) ? _3091 : (isnan(_3091) ? 1.0 : min(_3091, 1.0));
    float _3102 = isnan(0.0) ? _546 : (isnan(_546) ? 0.0 : max(_546, 0.0));
    float _1721 = isnan(1.0) ? _3102 : (isnan(_3102) ? 1.0 : min(_3102, 1.0));
    float _1722 = dot(vec3(_461, _462, _463), vec3(_1714, _1715, _1716));
    float _3113 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    float _1725 = isnan(1.0) ? _3113 : (isnan(_3113) ? 1.0 : min(_3113, 1.0));
    float _1726 = dot(vec3(cbLight._m0[_1658].xyz), vec3(_1714, _1715, _1716));
    float _3124 = isnan(0.0) ? _1726 : (isnan(_1726) ? 0.0 : max(_1726, 0.0));
    float _1730 = _1706 * _1706;
    float _1734 = ((_1725 * _1725) * (_1730 + (-1.0))) + 1.0;
    float _1744 = (exp2(log2(1.0 - (isnan(1.0) ? _3124 : (isnan(_3124) ? 1.0 : min(_3124, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1745 = 1.0 - _1706;
    float _1756 = (0.5 / (((_1721 * ((_1720 * _1745) + _1706)) + 9.9999999392252902907785028219223e-09) + (((_1721 * _1745) + _1706) * _1720))) * _1720;
    float _3135 = isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0));
    float _1758 = (isnan(1.0) ? _3135 : (isnan(_3135) ? 1.0 : min(_3135, 1.0))) * (_1730 / ((_1734 * _1734) * 3.141590118408203125));
    float _1784 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _1785 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _1786 = cbSceneParam._m0[86u].x * ((_507 / cbSceneParam._m0[86u].x) + ((4.5 / (_481 + 10.0)) * dot(vec3(_461, _462, _463), vec3(_185, _186, _187))));
    float _1787 = isnan(_1784) ? _1786 : (isnan(_1786) ? _1784 : min(_1786, _1784));
    float _1788 = isnan(_1785) ? _508 : (isnan(_508) ? _1785 : min(_508, _1785));
    vec4 _1790 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1787, _1788), 0.0);
    float _1792 = _1790.x;
    bool _1812 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _1792)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1792))) > _481;
    float _1813 = _1812 ? _1787 : _507;
    float _1814 = _1812 ? _1788 : _508;
    vec4 _1816 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_1813, _1814));
    vec4 _1821 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1813, _1814));
    float _1823 = _1821.x;
    bool _1828 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _1837 = (-0.0) - cbSceneParam._m0[2u].z;
    float _1843 = (_1828 ? (_1837 / (cbSceneParam._m0[2u].x - _1823)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1823))) - _481;
    float _1845 = cbMtdParam._m0[14u].z + cbMtdParam._m0[13u].w;
    float _1846 = cbMtdParam._m0[14u].w + cbMtdParam._m0[14u].x;
    float _1847 = cbMtdParam._m0[15u].x + cbMtdParam._m0[14u].y;
    bool _1853 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _1857 = (isnan(_1843) ? 0.0 : (isnan(0.0) ? _1843 : max(0.0, _1843))) * (-1.44269502162933349609375);
    float _3161 = isnan(0.0) ? _531 : (isnan(_531) ? 0.0 : max(_531, 0.0));
    float _3172 = isnan(0.0) ? _532 : (isnan(_532) ? 0.0 : max(_532, 0.0));
    float _3183 = isnan(0.0) ? _533 : (isnan(_533) ? 0.0 : max(_533, 0.0));
    float _1970;
    float _1971;
    float _1972;
    if ((1.0 - cbMtdParam._m0[12u].x) > 0.00999999977648258209228515625)
    {
        vec4 _1890 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1813, _1814), 0.0);
        float _1892 = _1890.x;
        float _1898 = (_1828 ? (_1837 / (cbSceneParam._m0[2u].x - _1892)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _1892))) - _481;
        uint _1904 = floatBitsToUint(cbInstanceData._m0[_399]).x * 14u;
        uint _1910 = _1904 + 4u;
        float _1919 = dot(vec3(cbLight._m0[_1904].xyz), vec3(_206, _207, _208));
        float _1927 = dot(vec3((-0.0) - _486, (-0.0) - _487, (-0.0) - _488), vec3((-0.0) - _206, (-0.0) - _207, (-0.0) - _208));
        float _1932 = ((isnan(0.0) ? _1927 : (isnan(_1927) ? 0.0 : max(_1927, 0.0))) / (isnan(0.001000000047497451305389404296875) ? _1919 : (isnan(_1919) ? 0.001000000047497451305389404296875 : max(_1919, 0.001000000047497451305389404296875)))) + 1.0;
        float _1934 = (-0.0) - ((isnan(_1898) ? 0.0 : (isnan(0.0) ? _1898 : max(0.0, _1898))) * _1932);
        _1970 = _1853 ? 0.0 : ((((_446 * cbMtdParam._m0[13u].w) * cbLight._m0[_1910].x) / ((_1932 * _1845) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1845 * 1.44269502162933349609375) * _1934)));
        _1971 = _1853 ? 0.0 : ((((_446 * cbMtdParam._m0[14u].x) * cbLight._m0[_1910].y) / ((_1932 * _1846) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1846 * 1.44269502162933349609375) * _1934)));
        _1972 = _1853 ? 0.0 : ((((_446 * cbMtdParam._m0[14u].y) * cbLight._m0[_1910].z) / ((_1932 * _1847) + 9.9999999747524270787835121154785e-07)) * (1.0 - exp2((_1847 * 1.44269502162933349609375) * _1934)));
    }
    else
    {
        _1970 = 0.0;
        _1971 = 0.0;
        _1972 = 0.0;
    }
    float _1989 = 0.959999978542327880859375 - (exp2(log2(1.0 - _560) * 5.0) * 0.959999978542327880859375);
    float _1990 = (_1970 + ((exp2(_1857 * (_1853 ? 0.0 : _1845)) * _1816.x) * cbSceneParam._m0[72u].w)) * _1989;
    float _1991 = (_1971 + ((exp2(_1857 * (_1853 ? 0.0 : _1846)) * _1816.y) * cbSceneParam._m0[72u].w)) * _1989;
    float _1992 = (_1972 + ((exp2(_1857 * (_1853 ? 0.0 : _1847)) * _1816.z) * cbSceneParam._m0[72u].w)) * _1989;
    float _2000 = (_1990 + (cbPerFrame._m0[3u].x * ((((_1596 * _1631.x) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1602 : (isnan(_1602) ? 0.0 : max(_1602, 0.0))) * _1387) * _1647)) + (((_1744 * cbLight._m0[_1692].x) * _1758) * _1673)))) + ((((isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0))) * (((cbLight._m0[_1666].x * _1673) * _1686) + ((isnan(0.0) ? _1308 : (isnan(_1308) ? 0.0 : max(_1308, 0.0))) * _545))) - _1990) * cbMtdParam._m0[12u].x);
    float _2002 = (_1991 + (cbPerFrame._m0[3u].x * ((((_1596 * _1631.y) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1605 : (isnan(_1605) ? 0.0 : max(_1605, 0.0))) * _1387) * _1647)) + (((_1744 * cbLight._m0[_1692].y) * _1758) * _1673)))) + ((((isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0))) * (((_1673 * cbLight._m0[_1666].y) * _1686) + ((isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0))) * _545))) - _1991) * cbMtdParam._m0[12u].x);
    float _2004 = (_1992 + (cbPerFrame._m0[3u].x * ((((_1596 * _1631.z) * cbSceneParam._m0[72u].w) + (((isnan(0.0) ? _1608 : (isnan(_1608) ? 0.0 : max(_1608, 0.0))) * _1387) * _1647)) + (((_1744 * cbLight._m0[_1692].z) * _1758) * _1673)))) + ((((isnan(1.0) ? _3183 : (isnan(_3183) ? 1.0 : min(_3183, 1.0))) * (((_1673 * cbLight._m0[_1666].z) * _1686) + ((isnan(0.0) ? _1314 : (isnan(_1314) ? 0.0 : max(_1314, 0.0))) * _545))) - _1992) * cbMtdParam._m0[12u].x);
    float _2009 = cbInstanceData._m0[_340 + 6u].w * (isnan(1.0) ? _2585 : (isnan(_2585) ? 1.0 : min(_2585, 1.0)));
    float _2014 = _507 / cbSceneParam._m0[86u].x;
    float _2015 = _508 / cbSceneParam._m0[86u].y;
    vec4 _2029 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2014, _2015, (log2((isnan(cbSceneParam._m0[77u].w) ? _481 : (isnan(_481) ? cbSceneParam._m0[77u].w : min(_481, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2031 = _2029.x;
    float _2032 = _2029.y;
    float _2033 = _2029.z;
    float _2034 = _2029.w;
    float _2090;
    float _2092;
    float _2094;
    float _2096;
    if (_481 > cbSceneParam._m0[78u].w)
    {
        float _2055 = isnan(_481) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _481 : min(cbSceneParam._m0[80u].w, _481));
        float _2056 = _2055 / _481;
        float _2067 = _2056 * _264;
        float _2068 = _2056 * _412;
        float _2069 = _2056 * _266;
        float _2071 = (cbSceneParam._m0[77u].w * _2068) / _2055;
        float _2072 = _2071 + cbSceneParam._m0[79u].w;
        float _2073 = cbSceneParam._m0[79u].w + _2068;
        float _2079 = sqrt(((_2067 * _2067) + (_2068 * _2068)) + (_2069 * _2069));
        float _2082 = (1.0 - (cbSceneParam._m0[77u].w / _2055)) * _2079;
        float _2088 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2089 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2291;
        if (abs((_2068 - _2071) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2291 = ((((_2072 > 0.0) ? exp2(_2088 * _2072) : (2.0 - exp2(_2089 * _2072))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2082;
        }
        else
        {
            float _2223 = 1.0 / cbSceneParam._m0[80u].x;
            float _2224 = isnan(_2073) ? _2072 : (isnan(_2072) ? _2073 : max(_2072, _2073));
            float _2225 = isnan(_2073) ? _2072 : (isnan(_2072) ? _2073 : min(_2072, _2073));
            float _2234 = isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : min(_2224, 0.0));
            float _2235 = isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : min(_2225, 0.0));
            _2291 = ((abs(_2079 / _2068) * cbSceneParam._m0[80u].y) * ((((_2234 - _2235) * 2.0) - ((exp2(_2088 * (isnan(0.0) ? _2224 : (isnan(_2224) ? 0.0 : max(_2224, 0.0)))) - exp2(_2088 * (isnan(0.0) ? _2225 : (isnan(_2225) ? 0.0 : max(_2225, 0.0))))) * _2223)) - ((exp2(_2089 * _2234) - exp2(_2089 * _2235)) * _2223))) + (_2082 * cbSceneParam._m0[80u].z);
        }
        vec4 _2293 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2014, _2015, 1.0), 0.0);
        float _2302 = exp2((_2291 * (-1.44269502162933349609375)) * (1.0 - _2293.w));
        float _2303 = log2(_2302);
        float _2319 = log2(_2034);
        _2090 = (exp2(_2319 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2303 * cbSceneParam._m0[78u].x)) * _2293.x) / cbSceneParam._m0[78u].x)) + _2031;
        _2092 = (exp2(_2319 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2303 * cbSceneParam._m0[78u].y)) * _2293.y) / cbSceneParam._m0[78u].y)) + _2032;
        _2094 = (exp2(_2319 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2303 * cbSceneParam._m0[78u].z)) * _2293.z) / cbSceneParam._m0[78u].z)) + _2033;
        _2096 = _2302 * _2034;
    }
    else
    {
        _2090 = _2031;
        _2092 = _2032;
        _2094 = _2033;
        _2096 = _2034;
    }
    bool _2329;
    float _2151;
    vec4 _2154;
    float _2156;
    vec4 _2158;
    float _2166;
    float _2167;
    float _2168;
    float _2169;
    bool _2179;
    for (;;)
    {
        bool _2108 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
        float _2109 = log2(_2096);
        float _2116 = exp2(_2109 * cbSceneParam._m0[78u].x) * _2000;
        float _2117 = exp2(_2109 * cbSceneParam._m0[78u].y) * _2002;
        float _2118 = exp2(_2109 * cbSceneParam._m0[78u].z) * _2004;
        vec4 _2126 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_507, _508));
        float _2128 = _2126.x;
        float _2149 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2128)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2128))) - _481) * 3.0;
        float _3249 = isnan(0.0) ? _2149 : (isnan(_2149) ? 0.0 : max(_2149, 0.0));
        _2151 = _2009 * (isnan(1.0) ? _3249 : (isnan(_3249) ? 1.0 : min(_3249, 1.0)));
        float _2152 = _495 + (-0.5);
        _2154 = cbMtdParam._m0[1u];
        _2156 = _2154.y * _2152;
        _2158 = cbMatDynParam._m0[0u];
        float _2165 = (roundEven(_2158.y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2166 = _2165 * (_2108 ? _2116 : (_2116 + (cbSceneParam._m0[72u].w * _2090)));
        _2167 = _2165 * (_2108 ? _2117 : (_2117 + (cbSceneParam._m0[72u].w * _2092)));
        _2168 = _2165 * (_2108 ? _2118 : (_2118 + (cbSceneParam._m0[72u].w * _2094)));
        _2169 = _2152 * 0.999000012874603271484375;
        _2179 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2179)
        {
            if ((cbInstanceData._m0[_340 + 7u].x + _2169) < 0.5)
            {
                _2329 = true;
                break;
            }
        }
        uint _2258 = _521 + uint(_2158.w);
        if ((cbInstanceData._m0[_2258].w < 1.0) && ((cbInstanceData._m0[_2258].w + _2169) < 0.5))
        {
            _2329 = true;
            break;
        }
        if ((_2156 + 1.0) < _2154.x)
        {
            _2329 = true;
            break;
        }
        _2329 = false;
        break;
    }
    float _2360;
    if (_2329)
    {
        discard_state = true;
        _2360 = 0.0;
    }
    else
    {
        _2360 = _2151;
    }
    SV_Target.x = _2166;
    SV_Target.y = _2167;
    SV_Target.z = _2168;
    SV_Target.w = _2360;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _2151;
    discard_exit();
}


