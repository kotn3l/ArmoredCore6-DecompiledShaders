#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _989;
float _990;
float _991;
float _992;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _141 = _140 * NORMAL.x;
    float _142 = _140 * NORMAL.y;
    float _143 = _140 * NORMAL.z;
    float _148;
    float _149;
    float _150;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _148 = (-0.0) - _141;
        _149 = (-0.0) - _142;
        _150 = (-0.0) - _143;
    }
    else
    {
        _148 = _141;
        _149 = _142;
        _150 = _143;
    }
    float _196 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _206 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _196);
    float _207 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _196);
    float _208 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _196);
    vec4 _222 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _225 = _222.x;
    bool _232 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _248 = ((_232 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _225)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _225))) - POSITION_1.w) / cbMtdParam._m0[15u].y;
    float _1001 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _251 = 1.0 - (isnan(1.0) ? _1001 : (isnan(_1001) ? 1.0 : min(_1001, 1.0)));
    float _267 = cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].x;
    float _270 = (sqrt(((_206 * _206) + (_207 * _207)) + (_208 * _208)) - cbMtdParam._m0[13u].x) / (isnan(0.00999999977648258209228515625) ? _267 : (isnan(_267) ? 0.00999999977648258209228515625 : max(_267, 0.00999999977648258209228515625)));
    float _1017 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _282 = inversesqrt(dot(vec3(_148, _149, _150), vec3(_148, _149, _150)));
    float _289 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _293 = dot(vec4(_289 * _206, _289 * _207, _289 * _208, 0.0), vec4(_282 * _148, _282 * _149, _282 * _150, 0.0));
    float _296 = _293 - cbMtdParam._m0[14u].w;
    float _1028 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _306 = _293 - cbMtdParam._m0[15u].z;
    float _1044 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    float _316 = (((isnan(1.0) ? _1017 : (isnan(_1017) ? 1.0 : min(_1017, 1.0))) * TEXCOORD_1.z) * exp2(log2(1.0 - (isnan(1.0) ? _1028 : (isnan(_1028) ? 1.0 : min(_1028, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].x : (isnan(cbMtdParam._m0[15u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].x, 0.001000000047497451305389404296875))))) * (1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1044 : (isnan(_1044) ? 1.0 : min(_1044, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875)))));
    float _1060 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _317 = isnan(1.0) ? _1060 : (isnan(_1060) ? 1.0 : min(_1060, 1.0));
    float _339 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    uint _342 = uint(roundEven(NORMAL.w)) * 13u;
    uint _346 = _342 + 1u;
    uint _350 = _342 + 2u;
    float _359 = sqrt(((cbInstanceData._m0[_346].x * cbInstanceData._m0[_346].x) + (cbInstanceData._m0[_342].x * cbInstanceData._m0[_342].x)) + (cbInstanceData._m0[_350].x * cbInstanceData._m0[_350].x));
    float _360 = _359 * TEXCOORD_1.x;
    float _361 = _359 * TEXCOORD_1.y;
    float _362 = _360 + (_339 * cbMtdParam._m0[16u].w);
    float _363 = _361 + (_339 * cbMtdParam._m0[17u].x);
    vec4 _383 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _388 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].w;
    float _395 = ((_383.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _397 = (-0.0) - (cbMtdParam._m0[13u].y * ((_383.x * 0.5) + (-0.25)));
    float _398 = fract(_388);
    float _400 = fract(_388 + 0.5);
    float _401 = _398 * _397;
    float _402 = _395 * _398;
    float _405 = _400 * _397;
    float _406 = _395 * _400;
    float _412 = abs((_398 * 2.0) + (-1.0));
    vec4 _428 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_401 + _362) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_402 + _363) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _430 = _428.x;
    float _431 = _428.y;
    float _432 = _428.z;
    vec4 _433 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_405 + _362) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_406 + _363) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _447 = (((_433.x - _430) * _412) + _430) * cbMtdParam._m0[11u].x;
    float _448 = (((_433.y - _431) * _412) + _431) * cbMtdParam._m0[11u].y;
    float _449 = (((_433.z - _432) * _412) + _432) * cbMtdParam._m0[11u].z;
    float _462 = (cbMtdParam._m0[17u].w * _339) + TEXCOORD_1.x;
    float _463 = (cbMtdParam._m0[18u].x * _339) + TEXCOORD_1.y;
    vec4 _483 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_401 + _462) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_402 + _463) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _485 = _483.x;
    float _486 = _483.y;
    float _487 = _483.z;
    vec4 _488 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_405 + _462) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_406 + _463) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _510 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1071 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _511 = isnan(1.0) ? _1071 : (isnan(_1071) ? 1.0 : min(_1071, 1.0));
    float _517 = ((_511 * _511) * (3.0 - (_511 * 2.0))) - cbMtdParam._m0[14u].x;
    float _525 = (cbMtdParam._m0[16u].y * _339) + _360;
    float _526 = (cbMtdParam._m0[16u].z * _339) + _361;
    vec4 _546 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_401 + _525) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_402 + _526) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _548 = _546.x;
    vec4 _549 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_405 + _525) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_406 + _526) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _554 = ((_549.x - _548) * _412) + _548;
    float _565 = ((cbMtdParam._m0[12u].y * ((((((_488.x - _485) * _412) + _485) * cbMtdParam._m0[9u].x) * _517) - _447)) * _554) + _447;
    float _570 = (cbMtdParam._m0[14u].z * (_316 - (((_317 * _317) * (3.0 - (_317 * 2.0))) * _316))) * _565;
    float _1082 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _578 = _232 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _618 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _627 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _618);
    float _628 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _618);
    float _629 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _618);
    vec4 _634 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _636 = _634.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _721 = sqrt(((_627 * _627) + (_628 * _628)) + (_629 * _629));
        float _728 = (cbMatDynParam._m0[5u].x * _721) + cbMatDynParam._m0[5u].y;
        float _1093 = isnan(0.0) ? _728 : (isnan(_728) ? 0.0 : max(_728, 0.0));
        float _729 = isnan(1.0) ? _1093 : (isnan(_1093) ? 1.0 : min(_1093, 1.0));
        float _733 = (cbMatDynParam._m0[5u].z * _721) + cbMatDynParam._m0[5u].w;
        float _1104 = isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1104 : (isnan(_1104) ? 1.0 : min(_1104, 1.0))) - _729)) + _729) < ((_636 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _653 = _342 + 9u;
    uint _654 = _653 + uint(cbMatDynParam._m0[0u].w);
    float _660 = (_565 * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_654].x;
    float _661 = ((((cbMtdParam._m0[12u].y * ((((((_488.y - _486) * _412) + _486) * cbMtdParam._m0[9u].y) * _517) - _448)) * _554) + _448) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_654].y;
    float _662 = ((((cbMtdParam._m0[12u].y * ((((((_488.z - _487) * _412) + _487) * cbMtdParam._m0[9u].z) * _517) - _449)) * _554) + _449) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_654].z;
    float _663 = isnan(0.0) ? _660 : (isnan(_660) ? 0.0 : max(_660, 0.0));
    float _664 = isnan(0.0) ? _661 : (isnan(_661) ? 0.0 : max(_661, 0.0));
    float _665 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
    float _671 = cbMtdParam._m0[2u].x * _660;
    float _672 = cbMtdParam._m0[2u].y * _661;
    float _673 = cbMtdParam._m0[2u].z * _662;
    float _1130 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _675 = isnan(1.0) ? _1130 : (isnan(_1130) ? 1.0 : min(_1130, 1.0));
    float _680 = cbInstanceData._m0[_342 + 6u].w * (isnan(1.0) ? _1082 : (isnan(_1082) ? 1.0 : min(_1082, 1.0)));
    float _686 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _687 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _702 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_686, _687, (log2((isnan(cbSceneParam._m0[77u].w) ? _578 : (isnan(_578) ? cbSceneParam._m0[77u].w : min(_578, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _704 = _702.x;
    float _705 = _702.y;
    float _706 = _702.z;
    float _707 = _702.w;
    float _787;
    float _789;
    float _791;
    float _793;
    if (_578 > cbSceneParam._m0[78u].w)
    {
        float _749 = isnan(_578) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _578 : min(cbSceneParam._m0[80u].w, _578));
        float _750 = _749 / _578;
        float _761 = _750 * _627;
        float _762 = _628 * _750;
        float _763 = (-0.0) - _762;
        float _764 = _750 * _629;
        float _766 = (cbSceneParam._m0[77u].w * _763) / _749;
        float _767 = _766 + cbSceneParam._m0[79u].w;
        float _768 = cbSceneParam._m0[79u].w - _762;
        float _774 = sqrt(((_761 * _761) + (_762 * _762)) + (_764 * _764));
        float _777 = (1.0 - (cbSceneParam._m0[77u].w / _749)) * _774;
        float _783 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _785 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _915;
        if (abs((_763 - _766) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _915 = ((((_767 > 0.0) ? exp2(_783 * _767) : (2.0 - exp2(_785 * _767))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _777;
        }
        else
        {
            float _871 = 1.0 / cbSceneParam._m0[80u].x;
            float _872 = isnan(_768) ? _767 : (isnan(_767) ? _768 : max(_767, _768));
            float _873 = isnan(_768) ? _767 : (isnan(_767) ? _768 : min(_767, _768));
            float _882 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : min(_872, 0.0));
            float _883 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : min(_873, 0.0));
            _915 = ((abs(_774 / _763) * cbSceneParam._m0[80u].y) * ((((_882 - _883) * 2.0) - ((exp2(_783 * (isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0)))) - exp2(_783 * (isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0))))) * _871)) - ((exp2(_785 * _882) - exp2(_785 * _883)) * _871))) + (_777 * cbSceneParam._m0[80u].z);
        }
        vec4 _917 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_686, _687, 1.0), 0.0);
        float _926 = exp2((_915 * (-1.44269502162933349609375)) * (1.0 - _917.w));
        float _927 = log2(_926);
        float _943 = log2(_707);
        _787 = (exp2(_943 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_927 * cbSceneParam._m0[78u].x)) * _917.x) / cbSceneParam._m0[78u].x)) + _704;
        _789 = (exp2(_943 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_927 * cbSceneParam._m0[78u].y)) * _917.y) / cbSceneParam._m0[78u].y)) + _705;
        _791 = (exp2(_943 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_927 * cbSceneParam._m0[78u].z)) * _917.z) / cbSceneParam._m0[78u].z)) + _706;
        _793 = _926 * _707;
    }
    else
    {
        _787 = _704;
        _789 = _705;
        _791 = _706;
        _793 = _707;
    }
    bool _953;
    vec4 _803;
    vec4 _826;
    float _828;
    float _832;
    float _833;
    float _834;
    float _837;
    float _840;
    float _843;
    float _844;
    bool _855;
    for (;;)
    {
        _803 = cbMatDynParam._m0[0u];
        float _805 = roundEven(_803.y);
        bool _806 = _805 == 3.0;
        float _807 = log2(_793);
        float _811 = exp2(_807 * cbSceneParam._m0[78u].x);
        float _812 = exp2(_807 * cbSceneParam._m0[78u].y);
        float _813 = exp2(_807 * cbSceneParam._m0[78u].z);
        float _814 = _811 * _663;
        float _815 = _812 * _664;
        float _816 = _813 * _665;
        float _823 = _636 + (-0.5);
        _826 = cbMtdParam._m0[1u];
        _828 = _826.y * _823;
        float _831 = (_805 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _832 = _831 * (_806 ? _814 : (_814 + (cbSceneParam._m0[72u].w * _787)));
        _833 = _831 * (_806 ? _815 : (_815 + (cbSceneParam._m0[72u].w * _789)));
        _834 = _831 * (_806 ? _816 : (_816 + (cbSceneParam._m0[72u].w * _791)));
        _837 = ((_671 * _675) * _811) * _831;
        _840 = ((_672 * _675) * _812) * _831;
        _843 = ((_673 * _675) * _813) * _831;
        _844 = _823 * 0.999000012874603271484375;
        _855 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_855)
        {
            if ((cbInstanceData._m0[_342 + 7u].x + _844) < 0.5)
            {
                _953 = true;
                break;
            }
        }
        uint _907 = _653 + uint(_803.w);
        if ((cbInstanceData._m0[_907].w < 1.0) && ((cbInstanceData._m0[_907].w + _844) < 0.5))
        {
            _953 = true;
            break;
        }
        if ((_828 + 1.0) < _826.x)
        {
            _953 = true;
            break;
        }
        _953 = false;
        break;
    }
    float _958;
    if (_953)
    {
        discard_state = true;
        _958 = 0.0;
    }
    else
    {
        _958 = _680;
    }
    SV_Target.x = _832;
    SV_Target.y = _833;
    SV_Target.z = _834;
    SV_Target.w = _958;
    SV_Target_1.x = _837;
    SV_Target_1.y = _840;
    SV_Target_1.z = _843;
    SV_Target_1.w = _680;
    discard_exit();
}


