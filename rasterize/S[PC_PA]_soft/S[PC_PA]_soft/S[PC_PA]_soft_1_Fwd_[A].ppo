#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_3;
layout(set = 0, binding = 1) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_4;
layout(set = 0, binding = 2) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_5;
layout(set = 0, binding = 3) uniform texture2D S_PC_PA_soft_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _1012;
float _1013;
float _1014;
float _1015;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _141 = _140 * NORMAL.x;
    float _142 = _140 * NORMAL.y;
    float _143 = _140 * NORMAL.z;
    float _148;
    float _149;
    float _150;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _148 = (-0.0) - _141;
        _149 = (-0.0) - _142;
        _150 = (-0.0) - _143;
    }
    else
    {
        _148 = _141;
        _149 = _142;
        _150 = _143;
    }
    float _196 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _206 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _196);
    float _207 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _196);
    float _208 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _196);
    vec4 _222 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _225 = _222.x;
    bool _232 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _248 = ((_232 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _225)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _225))) - POSITION_1.w) / cbMtdParam._m0[15u].y;
    float _1024 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _251 = 1.0 - (isnan(1.0) ? _1024 : (isnan(_1024) ? 1.0 : min(_1024, 1.0)));
    float _267 = cbMtdParam._m0[12u].w - cbMtdParam._m0[13u].x;
    float _270 = (sqrt(((_206 * _206) + (_207 * _207)) + (_208 * _208)) - cbMtdParam._m0[13u].x) / (isnan(0.00999999977648258209228515625) ? _267 : (isnan(_267) ? 0.00999999977648258209228515625 : max(_267, 0.00999999977648258209228515625)));
    float _1040 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _282 = inversesqrt(dot(vec3(_148, _149, _150), vec3(_148, _149, _150)));
    float _289 = inversesqrt(dot(vec3(_206, _207, _208), vec3(_206, _207, _208)));
    float _293 = dot(vec4(_289 * _206, _289 * _207, _289 * _208, 0.0), vec4(_282 * _148, _282 * _149, _282 * _150, 0.0));
    float _296 = _293 - cbMtdParam._m0[14u].w;
    float _1051 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _306 = _293 - cbMtdParam._m0[15u].z;
    float _1067 = isnan(0.0) ? _306 : (isnan(_306) ? 0.0 : max(_306, 0.0));
    float _316 = (((isnan(1.0) ? _1040 : (isnan(_1040) ? 1.0 : min(_1040, 1.0))) * TEXCOORD_1.z) * exp2(log2(1.0 - (isnan(1.0) ? _1051 : (isnan(_1051) ? 1.0 : min(_1051, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[15u].x : (isnan(cbMtdParam._m0[15u].x) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[15u].x, 0.001000000047497451305389404296875))))) * (1.0 - exp2(log2(1.0 - (isnan(1.0) ? _1067 : (isnan(_1067) ? 1.0 : min(_1067, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[12u].z : (isnan(cbMtdParam._m0[12u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[12u].z, 0.001000000047497451305389404296875)))));
    float _1083 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _317 = isnan(1.0) ? _1083 : (isnan(_1083) ? 1.0 : min(_1083, 1.0));
    float _339 = cbMtdParam._m0[16u].x * cbPerFrame._m0[22u].x;
    uint _342 = uint(roundEven(NORMAL.w)) * 13u;
    uint _346 = _342 + 1u;
    uint _350 = _342 + 2u;
    float _359 = sqrt(((cbInstanceData._m0[_346].x * cbInstanceData._m0[_346].x) + (cbInstanceData._m0[_342].x * cbInstanceData._m0[_342].x)) + (cbInstanceData._m0[_350].x * cbInstanceData._m0[_350].x));
    float _360 = _359 * TEXCOORD_1.x;
    float _361 = _359 * TEXCOORD_1.y;
    float _362 = _360 + (_339 * cbMtdParam._m0[16u].w);
    float _363 = _361 + (_339 * cbMtdParam._m0[17u].x);
    vec4 _383 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_4, SS_WrapLinear), vec2((cbTextureTilingScale._m0[1u].x * ((cbMtdParam._m0[17u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x)) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((cbMtdParam._m0[17u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y)) + cbTextureTilingScale._m0[1u].w));
    float _388 = (cbPerFrame._m0[22u].x * 2.0) * cbMtdParam._m0[13u].w;
    float _395 = ((_383.y * 0.5) + (-0.25)) * cbMtdParam._m0[13u].y;
    float _397 = (-0.0) - (cbMtdParam._m0[13u].y * ((_383.x * 0.5) + (-0.25)));
    float _398 = fract(_388);
    float _400 = fract(_388 + 0.5);
    float _401 = _398 * _397;
    float _402 = _395 * _398;
    float _405 = _400 * _397;
    float _406 = _395 * _400;
    float _412 = abs((_398 * 2.0) + (-1.0));
    vec4 _428 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_401 + _362) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_402 + _363) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _430 = _428.x;
    float _431 = _428.y;
    float _432 = _428.z;
    vec4 _433 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_3, SS_DiffuseMap), vec2(((_405 + _362) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_406 + _363) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _447 = (((_433.x - _430) * _412) + _430) * cbMtdParam._m0[11u].x;
    float _448 = (((_433.y - _431) * _412) + _431) * cbMtdParam._m0[11u].y;
    float _449 = (((_433.z - _432) * _412) + _432) * cbMtdParam._m0[11u].z;
    float _462 = (cbMtdParam._m0[17u].w * _339) + TEXCOORD_1.x;
    float _463 = (cbMtdParam._m0[18u].x * _339) + TEXCOORD_1.y;
    vec4 _483 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_401 + _462) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_402 + _463) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _485 = _483.x;
    float _486 = _483.y;
    float _487 = _483.z;
    vec4 _488 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_5, SS_DiffuseMap), vec2(((_405 + _462) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_406 + _463) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _510 = abs((fract(cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _1094 = isnan(0.0) ? _510 : (isnan(_510) ? 0.0 : max(_510, 0.0));
    float _511 = isnan(1.0) ? _1094 : (isnan(_1094) ? 1.0 : min(_1094, 1.0));
    float _517 = ((_511 * _511) * (3.0 - (_511 * 2.0))) - cbMtdParam._m0[14u].x;
    float _525 = (cbMtdParam._m0[16u].y * _339) + _360;
    float _526 = (cbMtdParam._m0[16u].z * _339) + _361;
    vec4 _546 = texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_401 + _525) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_402 + _526) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _548 = _546.x;
    float _554 = ((texture(sampler2D(S_PC_PA_soft_snp_0_Texture2D_6, SS_DiffuseMap), vec2(((_405 + _525) * cbTextureTilingScale._m0[3u].x) + cbTextureTilingScale._m0[3u].z, ((_406 + _526) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w)).x - _548) * _412) + _548;
    float _565 = ((cbMtdParam._m0[12u].y * ((((((_488.x - _485) * _412) + _485) * cbMtdParam._m0[9u].x) * _517) - _447)) * _554) + _447;
    float _570 = (cbMtdParam._m0[14u].z * (_316 - (((_317 * _317) * (3.0 - (_317 * 2.0))) * _316))) * _565;
    float _579 = _293 - cbMtdParam._m0[12u].x;
    float _1105 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
    float _585 = exp2(log2(1.0 - (isnan(1.0) ? _1105 : (isnan(_1105) ? 1.0 : min(_1105, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].z : (isnan(cbMtdParam._m0[13u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].z, 0.001000000047497451305389404296875))));
    float _1121 = isnan(0.0) ? _570 : (isnan(_570) ? 0.0 : max(_570, 0.0));
    float _601 = _232 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _641 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _650 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _641);
    float _651 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _641);
    float _652 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _641);
    vec4 _657 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _659 = _657.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _744 = sqrt(((_650 * _650) + (_651 * _651)) + (_652 * _652));
        float _751 = (cbMatDynParam._m0[5u].x * _744) + cbMatDynParam._m0[5u].y;
        float _1132 = isnan(0.0) ? _751 : (isnan(_751) ? 0.0 : max(_751, 0.0));
        float _752 = isnan(1.0) ? _1132 : (isnan(_1132) ? 1.0 : min(_1132, 1.0));
        float _756 = (cbMatDynParam._m0[5u].z * _744) + cbMatDynParam._m0[5u].w;
        float _1143 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _1143 : (isnan(_1143) ? 1.0 : min(_1143, 1.0))) - _752)) + _752) < ((_659 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _676 = _342 + 9u;
    uint _677 = _676 + uint(cbMatDynParam._m0[0u].w);
    float _683 = ((((cbMtdParam._m0[10u].x * TEXCOORD_1.z) * _585) + _565) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_677].x;
    float _684 = (((((cbMtdParam._m0[12u].y * ((((((_488.y - _486) * _412) + _486) * cbMtdParam._m0[9u].y) * _517) - _448)) * _554) + _448) + ((cbMtdParam._m0[10u].y * TEXCOORD_1.z) * _585)) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_677].y;
    float _685 = (((((cbMtdParam._m0[12u].y * ((((((_488.z - _487) * _412) + _487) * cbMtdParam._m0[9u].z) * _517) - _449)) * _554) + _449) + ((cbMtdParam._m0[10u].z * TEXCOORD_1.z) * _585)) * cbMtdParam._m0[15u].w) * cbInstanceData._m0[_677].z;
    float _686 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0));
    float _687 = isnan(0.0) ? _684 : (isnan(_684) ? 0.0 : max(_684, 0.0));
    float _688 = isnan(0.0) ? _685 : (isnan(_685) ? 0.0 : max(_685, 0.0));
    float _694 = cbMtdParam._m0[2u].x * _683;
    float _695 = cbMtdParam._m0[2u].y * _684;
    float _696 = cbMtdParam._m0[2u].z * _685;
    float _1169 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _698 = isnan(1.0) ? _1169 : (isnan(_1169) ? 1.0 : min(_1169, 1.0));
    float _703 = cbInstanceData._m0[_342 + 6u].w * (isnan(1.0) ? _1121 : (isnan(_1121) ? 1.0 : min(_1121, 1.0)));
    float _709 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _710 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _725 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_709, _710, (log2((isnan(cbSceneParam._m0[77u].w) ? _601 : (isnan(_601) ? cbSceneParam._m0[77u].w : min(_601, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _727 = _725.x;
    float _728 = _725.y;
    float _729 = _725.z;
    float _730 = _725.w;
    float _810;
    float _812;
    float _814;
    float _816;
    if (_601 > cbSceneParam._m0[78u].w)
    {
        float _772 = isnan(_601) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _601 : min(cbSceneParam._m0[80u].w, _601));
        float _773 = _772 / _601;
        float _784 = _773 * _650;
        float _785 = _651 * _773;
        float _786 = (-0.0) - _785;
        float _787 = _773 * _652;
        float _789 = (cbSceneParam._m0[77u].w * _786) / _772;
        float _790 = _789 + cbSceneParam._m0[79u].w;
        float _791 = cbSceneParam._m0[79u].w - _785;
        float _797 = sqrt(((_784 * _784) + (_785 * _785)) + (_787 * _787));
        float _800 = (1.0 - (cbSceneParam._m0[77u].w / _772)) * _797;
        float _806 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _808 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _938;
        if (abs((_786 - _789) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _938 = ((((_790 > 0.0) ? exp2(_806 * _790) : (2.0 - exp2(_808 * _790))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _800;
        }
        else
        {
            float _894 = 1.0 / cbSceneParam._m0[80u].x;
            float _895 = isnan(_791) ? _790 : (isnan(_790) ? _791 : max(_790, _791));
            float _896 = isnan(_791) ? _790 : (isnan(_790) ? _791 : min(_790, _791));
            float _905 = isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : min(_895, 0.0));
            float _906 = isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : min(_896, 0.0));
            _938 = ((abs(_797 / _786) * cbSceneParam._m0[80u].y) * ((((_905 - _906) * 2.0) - ((exp2(_806 * (isnan(0.0) ? _895 : (isnan(_895) ? 0.0 : max(_895, 0.0)))) - exp2(_806 * (isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0))))) * _894)) - ((exp2(_808 * _905) - exp2(_808 * _906)) * _894))) + (_800 * cbSceneParam._m0[80u].z);
        }
        vec4 _940 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_709, _710, 1.0), 0.0);
        float _949 = exp2((_938 * (-1.44269502162933349609375)) * (1.0 - _940.w));
        float _950 = log2(_949);
        float _966 = log2(_730);
        _810 = (exp2(_966 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_950 * cbSceneParam._m0[78u].x)) * _940.x) / cbSceneParam._m0[78u].x)) + _727;
        _812 = (exp2(_966 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_950 * cbSceneParam._m0[78u].y)) * _940.y) / cbSceneParam._m0[78u].y)) + _728;
        _814 = (exp2(_966 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_950 * cbSceneParam._m0[78u].z)) * _940.z) / cbSceneParam._m0[78u].z)) + _729;
        _816 = _949 * _730;
    }
    else
    {
        _810 = _727;
        _812 = _728;
        _814 = _729;
        _816 = _730;
    }
    bool _976;
    vec4 _826;
    vec4 _849;
    float _851;
    float _855;
    float _856;
    float _857;
    float _860;
    float _863;
    float _866;
    float _867;
    bool _878;
    for (;;)
    {
        _826 = cbMatDynParam._m0[0u];
        float _828 = roundEven(_826.y);
        bool _829 = _828 == 3.0;
        float _830 = log2(_816);
        float _834 = exp2(_830 * cbSceneParam._m0[78u].x);
        float _835 = exp2(_830 * cbSceneParam._m0[78u].y);
        float _836 = exp2(_830 * cbSceneParam._m0[78u].z);
        float _837 = _834 * _686;
        float _838 = _835 * _687;
        float _839 = _836 * _688;
        float _846 = _659 + (-0.5);
        _849 = cbMtdParam._m0[1u];
        _851 = _849.y * _846;
        float _854 = (_828 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _855 = _854 * (_829 ? _837 : (_837 + (cbSceneParam._m0[72u].w * _810)));
        _856 = _854 * (_829 ? _838 : (_838 + (cbSceneParam._m0[72u].w * _812)));
        _857 = _854 * (_829 ? _839 : (_839 + (cbSceneParam._m0[72u].w * _814)));
        _860 = ((_694 * _698) * _834) * _854;
        _863 = ((_695 * _698) * _835) * _854;
        _866 = ((_696 * _698) * _836) * _854;
        _867 = _846 * 0.999000012874603271484375;
        _878 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_878)
        {
            if ((cbInstanceData._m0[_342 + 7u].x + _867) < 0.5)
            {
                _976 = true;
                break;
            }
        }
        uint _930 = _676 + uint(_826.w);
        if ((cbInstanceData._m0[_930].w < 1.0) && ((cbInstanceData._m0[_930].w + _867) < 0.5))
        {
            _976 = true;
            break;
        }
        if ((_851 + 1.0) < _849.x)
        {
            _976 = true;
            break;
        }
        _976 = false;
        break;
    }
    float _981;
    if (_976)
    {
        discard_state = true;
        _981 = 0.0;
    }
    else
    {
        _981 = _703;
    }
    SV_Target.x = _855;
    SV_Target.y = _856;
    SV_Target.z = _857;
    SV_Target.w = _981;
    SV_Target_1.x = _860;
    SV_Target_1.y = _863;
    SV_Target_1.z = _866;
    SV_Target_1.w = _703;
    discard_exit();
}


