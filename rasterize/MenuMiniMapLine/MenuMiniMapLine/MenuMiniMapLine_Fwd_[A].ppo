#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[13];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D MenuMiniMapLine_snp_0_Texture2D_7;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _699;
float _700;
float _701;
float _702;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _126 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _127 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _128 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _133 = inversesqrt(dot(vec3(_126, _127, _128), vec3(_126, _127, _128)));
    float _140 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _147 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _191 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _195 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _199 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _200 = _195 / cbMtdParam._m0[11u].x;
    float _205 = fract(abs(_200));
    float _210 = abs(((_200 >= ((-0.0) - _200)) ? _205 : ((-0.0) - _205)) * cbMtdParam._m0[11u].x) - cbMtdParam._m0[11u].y;
    float _217 = (cbMtdParam._m0[11u].y - abs((_210 == cbMtdParam._m0[11u].y) ? _210 : ((_210 >= cbMtdParam._m0[11u].y) ? cbMtdParam._m0[11u].y : _210))) / cbMtdParam._m0[11u].y;
    float _223 = _195 / (cbMtdParam._m0[12u].z * cbMtdParam._m0[11u].x);
    float _711 = isnan(0.0) ? _223 : (isnan(_223) ? 0.0 : max(_223, 0.0));
    float _225 = isnan(1.0) ? _711 : (isnan(_711) ? 1.0 : min(_711, 1.0));
    float _233 = _191 - cbSceneParam._m0[3u].x;
    float _234 = _195 - cbSceneParam._m0[3u].y;
    float _235 = _199 - cbSceneParam._m0[3u].z;
    float _244 = 1.0 - ((sqrt(((_233 * _233) + (_234 * _234)) + (_235 * _235)) - cbMtdParam._m0[11u].z) / cbMtdParam._m0[11u].w);
    float _722 = isnan(0.0) ? _244 : (isnan(_244) ? 0.0 : max(_244, 0.0));
    float _245 = isnan(1.0) ? _722 : (isnan(_722) ? 1.0 : min(_722, 1.0));
    float _247 = (_225 * _217) * _245;
    float _258 = (_247 * (cbMtdParam._m0[10u].x - cbMtdParam._m0[9u].x)) + cbMtdParam._m0[9u].x;
    float _259 = (((_217 * (cbMtdParam._m0[10u].y - cbMtdParam._m0[9u].y)) * _225) * _245) + cbMtdParam._m0[9u].y;
    float _260 = (((_217 * (cbMtdParam._m0[10u].z - cbMtdParam._m0[9u].z)) * _225) * _245) + cbMtdParam._m0[9u].z;
    vec4 _275 = texture(sampler2D(MenuMiniMapLine_snp_0_Texture2D_7, SS_BumpMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _283 = (_275.x * 2.0) + (-1.0);
    float _285 = (_275.y * 2.0) + (-1.0);
    float _286 = dot(vec2(_283, _285), vec2(_283, _285));
    float _733 = isnan(0.0) ? _286 : (isnan(_286) ? 0.0 : max(_286, 0.0));
    float _291 = sqrt(1.0 - (isnan(1.0) ? _733 : (isnan(_733) ? 1.0 : min(_733, 1.0))));
    float _294 = fma(_291, _140 * NORMAL.x, fma(_285, _147 * TANGENT.x, (_133 * _126) * _283));
    float _297 = fma(_291, _140 * NORMAL.y, fma(_285, _147 * TANGENT.y, (_133 * _127) * _283));
    float _300 = fma(_291, _140 * NORMAL.z, fma(_285, _147 * TANGENT.z, (_133 * _128) * _283));
    float _304 = inversesqrt(dot(vec3(_294, _297, _300), vec3(_294, _297, _300)));
    float _305 = _304 * _294;
    float _306 = _304 * _297;
    float _307 = _304 * _300;
    float _311 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _327 = cbSceneParam._m0[21u].z * 0.100000001490116119384765625;
    float _332 = inversesqrt(dot(vec3(cbSceneParam._m0[20u].z, _327, cbSceneParam._m0[22u].z), vec3(cbSceneParam._m0[20u].z, _327, cbSceneParam._m0[22u].z)));
    float _340 = 1.0 - abs(dot(vec3(_332 * cbSceneParam._m0[20u].z, _332 * _327, _332 * cbSceneParam._m0[22u].z), vec3(_311 * _305, _311 * _306, _311 * _307)));
    float _744 = isnan(0.0) ? _340 : (isnan(_340) ? 0.0 : max(_340, 0.0));
    float _341 = isnan(1.0) ? _744 : (isnan(_744) ? 1.0 : min(_744, 1.0));
    float _342 = isnan(cbMtdParam._m0[12u].x) ? _341 : (isnan(_341) ? cbMtdParam._m0[12u].x : max(_341, cbMtdParam._m0[12u].x));
    float _343 = isnan(1.0) ? _342 : (isnan(_342) ? 1.0 : min(_342, 1.0));
    float _344 = _343 * _343;
    float _347 = ((cbMtdParam._m0[12u].y - _344) * _247) + _344;
    float _780 = isnan(0.0) ? _347 : (isnan(_347) ? 0.0 : max(_347, 0.0));
    float _367 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _377 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _385 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _387 = _385.w;
    uint _407 = uint(roundEven(NORMAL.w)) * 13u;
    uint _408 = _407 + 9u;
    uint _409 = _408 + uint(cbMatDynParam._m0[0u].w);
    float _415 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _258 : (isnan(_258) ? 0.0 : max(_258, 0.0)))) * cbInstanceData._m0[_409].x;
    float _416 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _259 : (isnan(_259) ? 0.0 : max(_259, 0.0)))) * cbInstanceData._m0[_409].y;
    float _417 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _260 : (isnan(_260) ? 0.0 : max(_260, 0.0)))) * cbInstanceData._m0[_409].z;
    float _423 = cbInstanceData._m0[_407 + 6u].w * (isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0)));
    float _429 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _430 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _445 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_429, _430, (log2((isnan(cbSceneParam._m0[77u].w) ? _367 : (isnan(_367) ? cbSceneParam._m0[77u].w : min(_367, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _447 = _445.x;
    float _448 = _445.y;
    float _449 = _445.z;
    float _450 = _445.w;
    float _510;
    float _512;
    float _514;
    float _516;
    if (_367 > cbSceneParam._m0[78u].w)
    {
        float _472 = isnan(_367) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _367 : min(cbSceneParam._m0[80u].w, _367));
        float _473 = _472 / _367;
        float _484 = _473 * (cbSceneParam._m0[71u].x - (_191 / _377));
        float _485 = (cbSceneParam._m0[71u].y - (_195 / _377)) * _473;
        float _486 = (-0.0) - _485;
        float _487 = _473 * (cbSceneParam._m0[71u].z - (_199 / _377));
        float _489 = (cbSceneParam._m0[77u].w * _486) / _472;
        float _490 = _489 + cbSceneParam._m0[79u].w;
        float _491 = cbSceneParam._m0[79u].w - _485;
        float _497 = sqrt(((_484 * _484) + (_485 * _485)) + (_487 * _487));
        float _500 = (1.0 - (cbSceneParam._m0[77u].w / _472)) * _497;
        float _506 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _508 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _628;
        if (abs((_486 - _489) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _628 = ((((_490 > 0.0) ? exp2(_506 * _490) : (2.0 - exp2(_508 * _490))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _500;
        }
        else
        {
            float _583 = 1.0 / cbSceneParam._m0[80u].x;
            float _584 = isnan(_491) ? _490 : (isnan(_490) ? _491 : max(_490, _491));
            float _585 = isnan(_491) ? _490 : (isnan(_490) ? _491 : min(_490, _491));
            float _594 = isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : min(_584, 0.0));
            float _595 = isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : min(_585, 0.0));
            _628 = ((abs(_497 / _486) * cbSceneParam._m0[80u].y) * ((((_594 - _595) * 2.0) - ((exp2(_506 * (isnan(0.0) ? _584 : (isnan(_584) ? 0.0 : max(_584, 0.0)))) - exp2(_506 * (isnan(0.0) ? _585 : (isnan(_585) ? 0.0 : max(_585, 0.0))))) * _583)) - ((exp2(_508 * _594) - exp2(_508 * _595)) * _583))) + (_500 * cbSceneParam._m0[80u].z);
        }
        vec4 _630 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_429, _430, 1.0), 0.0);
        float _639 = exp2((_628 * (-1.44269502162933349609375)) * (1.0 - _630.w));
        float _640 = log2(_639);
        float _656 = log2(_450);
        _510 = (exp2(_656 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_640 * cbSceneParam._m0[78u].x)) * _630.x) / cbSceneParam._m0[78u].x)) + _447;
        _512 = (exp2(_656 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_640 * cbSceneParam._m0[78u].y)) * _630.y) / cbSceneParam._m0[78u].y)) + _448;
        _514 = (exp2(_656 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_640 * cbSceneParam._m0[78u].z)) * _630.z) / cbSceneParam._m0[78u].z)) + _449;
        _516 = _639 * _450;
    }
    else
    {
        _510 = _447;
        _512 = _448;
        _514 = _449;
        _516 = _450;
    }
    bool _666;
    vec4 _526;
    vec4 _550;
    float _552;
    float _556;
    float _557;
    float _558;
    float _559;
    bool _570;
    for (;;)
    {
        _526 = cbMatDynParam._m0[0u];
        float _528 = roundEven(_526.y);
        bool _529 = _528 == 3.0;
        float _531 = log2(_516);
        float _538 = _415 * exp2(_531 * cbSceneParam._m0[78u].x);
        float _539 = _416 * exp2(_531 * cbSceneParam._m0[78u].y);
        float _540 = _417 * exp2(_531 * cbSceneParam._m0[78u].z);
        float _547 = _387 + (-0.5);
        _550 = cbMtdParam._m0[1u];
        _552 = _550.y * _547;
        float _555 = (_528 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _556 = _555 * (_529 ? _538 : (_538 + (cbSceneParam._m0[72u].w * _510)));
        _557 = _555 * (_529 ? _539 : (_539 + (cbSceneParam._m0[72u].w * _512)));
        _558 = _555 * (_529 ? _540 : (_540 + (cbSceneParam._m0[72u].w * _514)));
        _559 = _547 * 0.999000012874603271484375;
        _570 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_570)
        {
            if ((cbInstanceData._m0[_407 + 7u].x + _559) < 0.5)
            {
                _666 = true;
                break;
            }
        }
        uint _620 = _408 + uint(_526.w);
        if ((cbInstanceData._m0[_620].w < 1.0) && ((cbInstanceData._m0[_620].w + _559) < 0.5))
        {
            _666 = true;
            break;
        }
        if ((_552 + 1.0) < _550.x)
        {
            _666 = true;
            break;
        }
        _666 = false;
        break;
    }
    float _674;
    if (_666)
    {
        discard_state = true;
        _674 = 0.0;
    }
    else
    {
        _674 = _423;
    }
    SV_Target.x = _556;
    SV_Target.y = _557;
    SV_Target.z = _558;
    SV_Target.w = _674;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _423;
    discard_exit();
}


