#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[12];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D G_Sub_monitor_Emissive_Glow_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _749;
float _2962;
float _2963;
float _2964;
float _2965;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    vec4 _186 = texture(sampler2D(G_Sub_monitor_Emissive_Glow_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _189 = _186.x;
    float _190 = _186.y;
    float _191 = _186.z;
    float _192 = _189 * cbMtdParam._m0[9u].x;
    float _193 = _190 * cbMtdParam._m0[9u].y;
    float _194 = _191 * cbMtdParam._m0[9u].z;
    float _208 = inversesqrt(dot(vec3(_164, _165, _166), vec3(_164, _165, _166)));
    float _209 = _208 * _164;
    float _210 = _208 * _165;
    float _211 = _208 * _166;
    float _2974 = isnan(0.0) ? _192 : (isnan(_192) ? 0.0 : max(_192, 0.0));
    float _2985 = isnan(0.0) ? _193 : (isnan(_193) ? 0.0 : max(_193, 0.0));
    float _2996 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _231 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _272 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _282 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _272);
    float _283 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _272);
    float _284 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _272);
    float _288 = inversesqrt(dot(vec3(_282, _283, _284), vec3(_282, _283, _284)));
    float _289 = _282 * _288;
    float _290 = _283 * _288;
    float _291 = _284 * _288;
    vec4 _296 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _298 = _296.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _428 = sqrt(((_282 * _282) + (_283 * _283)) + (_284 * _284));
        float _434 = (cbMatDynParam._m0[5u].x * _428) + cbMatDynParam._m0[5u].y;
        float _3007 = isnan(0.0) ? _434 : (isnan(_434) ? 0.0 : max(_434, 0.0));
        float _435 = isnan(1.0) ? _3007 : (isnan(_3007) ? 1.0 : min(_3007, 1.0));
        float _439 = (cbMatDynParam._m0[5u].z * _428) + cbMatDynParam._m0[5u].w;
        float _3018 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _3018 : (isnan(_3018) ? 1.0 : min(_3018, 1.0))) - _435)) + _435) < ((_298 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _310 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _311 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _331 = fma(_211, cbSceneParam._m0[5u].z, fma(_210, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _209));
    float _334 = fma(_211, cbSceneParam._m0[6u].z, fma(_210, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _209));
    float _337 = fma(_211, cbSceneParam._m0[7u].z, fma(_210, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _209));
    uint _350 = uint(roundEven(NORMAL.w)) * 13u;
    uint _352 = _350 + 9u;
    uint _353 = _352 + uint(cbMatDynParam._m0[0u].w);
    float _359 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2974 : (isnan(_2974) ? 1.0 : min(_2974, 1.0)))) * cbInstanceData._m0[_353].x;
    float _360 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2985 : (isnan(_2985) ? 1.0 : min(_2985, 1.0)))) * cbInstanceData._m0[_353].y;
    float _361 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2996 : (isnan(_2996) ? 1.0 : min(_2996, 1.0)))) * cbInstanceData._m0[_353].z;
    float _3029 = isnan(0.0) ? _359 : (isnan(_359) ? 0.0 : max(_359, 0.0));
    float _362 = isnan(1.0) ? _3029 : (isnan(_3029) ? 1.0 : min(_3029, 1.0));
    float _3040 = isnan(0.0) ? _360 : (isnan(_360) ? 0.0 : max(_360, 0.0));
    float _363 = isnan(1.0) ? _3040 : (isnan(_3040) ? 1.0 : min(_3040, 1.0));
    float _3051 = isnan(0.0) ? _361 : (isnan(_361) ? 0.0 : max(_361, 0.0));
    float _364 = isnan(1.0) ? _3051 : (isnan(_3051) ? 1.0 : min(_3051, 1.0));
    vec4 _373 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _310, cbSceneParam._m0[86u].y * _311));
    float _376 = _373.x * TEXCOORD.z;
    float _377 = dot(vec3(_209, _210, _211), vec3(_289, _290, _291));
    float _380 = _377 * 2.0;
    float _385 = (_380 * _209) - _289;
    float _386 = (_380 * _210) - _290;
    float _387 = (_380 * _211) - _291;
    float _409 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _413 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _417 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _748;
    float _750;
    float _751;
    float _752;
    float _753;
    float _754;
    float _755;
    float _756;
    float _757;
    float _758;
    float _759;
    float _760;
    float _761;
    float _762;
    float _763;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _473 = fma(_417, cbModelParam._m0[26u].z, fma(_413, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _409));
        float _477 = fma(_417, cbModelParam._m0[27u].z, fma(_413, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _409));
        float _481 = fma(_417, cbModelParam._m0[28u].z, fma(_413, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _409));
        float _506 = _409 + _209;
        float _507 = _413 + _210;
        float _508 = _417 + _211;
        float _518 = fma(_508, cbModelParam._m0[26u].z, fma(_507, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _506)) - _473;
        float _519 = fma(_508, cbModelParam._m0[27u].z, fma(_507, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _506)) - _477;
        float _520 = fma(_508, cbModelParam._m0[28u].z, fma(_507, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _506)) - _481;
        float _524 = inversesqrt(dot(vec3(_518, _519, _520), vec3(_518, _519, _520)));
        float _537 = ((_524 * _518) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_473 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _538 = ((_524 * _519) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_477 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _539 = ((_524 * _520) / cbModelParam._m0[34u].z) + ((((((_481 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _542 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_537, _538, _539), 0.0);
        vec4 _549 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_537, _538, _539), 0.0);
        vec4 _556 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_537, _538, _539), 0.0);
        vec4 _563 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_537, _538, _539), 0.0);
        float _576 = exp2((_542.w + (-0.5)) * 20.0) * 2.0;
        float _577 = _576 * (_542.x + (-0.5));
        float _578 = _576 * (_542.y + (-0.5));
        float _579 = _576 * (_542.z + (-0.5));
        float _586 = exp2((_549.w + (-0.5)) * 20.0) * 2.0;
        float _587 = _586 * (_549.x + (-0.5));
        float _588 = _586 * (_549.y + (-0.5));
        float _589 = _586 * (_549.z + (-0.5));
        float _596 = exp2((_556.w + (-0.5)) * 20.0) * 2.0;
        float _597 = _596 * (_556.x + (-0.5));
        float _598 = _596 * (_556.y + (-0.5));
        float _599 = _596 * (_556.z + (-0.5));
        float _606 = exp2((_563.w + (-0.5)) * 20.0) * 2.0;
        float _607 = _606 * (_563.x + (-0.5));
        float _608 = _606 * (_563.y + (-0.5));
        float _609 = _606 * (_563.z + (-0.5));
        float _610 = isnan(0.0) ? _607 : (isnan(_607) ? 0.0 : max(_607, 0.0));
        float _611 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
        float _612 = isnan(0.0) ? _609 : (isnan(_609) ? 0.0 : max(_609, 0.0));
        float _613 = _577 * 0.5;
        float _614 = _587 * 0.5;
        float _615 = _597 * 0.5;
        float _616 = dot(vec3(_613, _614, _615), vec3(_613, _614, _615));
        float _621 = (_616 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_616);
        float _630 = (dot(vec3(_209, _210, _211), vec3(_621 * _613, _621 * _614, _621 * _615)) + 1.0) * 0.5;
        float _3077 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
        float _640 = sqrt(((_614 * _614) + (_613 * _613)) + (_615 * _615)) / (_610 + 9.9999997473787516355514526367188e-06);
        float _3088 = isnan(0.0) ? _640 : (isnan(_640) ? 0.0 : max(_640, 0.0));
        float _641 = isnan(1.0) ? _3088 : (isnan(_3088) ? 1.0 : min(_3088, 1.0));
        float _642 = _641 * 2.0;
        float _646 = (1.0 - _641) / (_641 + 1.0);
        float _3099 = isnan(0.0) ? _646 : (isnan(_646) ? 0.0 : max(_646, 0.0));
        float _647 = isnan(1.0) ? _3099 : (isnan(_3099) ? 1.0 : min(_3099, 1.0));
        float _656 = ((((1.0 - _647) * (_642 + 2.0)) * exp2(log2(isnan(1.0) ? _3077 : (isnan(_3077) ? 1.0 : min(_3077, 1.0))) * (_642 + 1.0))) + _647) * _610;
        float _657 = _578 * 0.5;
        float _658 = _588 * 0.5;
        float _659 = _598 * 0.5;
        float _660 = dot(vec3(_657, _658, _659), vec3(_657, _658, _659));
        float _665 = (_660 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_660);
        float _673 = (dot(vec3(_209, _210, _211), vec3(_665 * _657, _665 * _658, _665 * _659)) + 1.0) * 0.5;
        float _3110 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
        float _682 = sqrt(((_658 * _658) + (_657 * _657)) + (_659 * _659)) / (_611 + 9.9999997473787516355514526367188e-06);
        float _3121 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0));
        float _683 = isnan(1.0) ? _3121 : (isnan(_3121) ? 1.0 : min(_3121, 1.0));
        float _684 = _683 * 2.0;
        float _688 = (1.0 - _683) / (_683 + 1.0);
        float _3132 = isnan(0.0) ? _688 : (isnan(_688) ? 0.0 : max(_688, 0.0));
        float _689 = isnan(1.0) ? _3132 : (isnan(_3132) ? 1.0 : min(_3132, 1.0));
        float _698 = ((((1.0 - _689) * (_684 + 2.0)) * exp2(log2(isnan(1.0) ? _3110 : (isnan(_3110) ? 1.0 : min(_3110, 1.0))) * (_684 + 1.0))) + _689) * _611;
        float _699 = _579 * 0.5;
        float _700 = _589 * 0.5;
        float _701 = _599 * 0.5;
        float _702 = dot(vec3(_699, _700, _701), vec3(_699, _700, _701));
        float _707 = (_702 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_702);
        float _715 = (dot(vec3(_209, _210, _211), vec3(_707 * _699, _707 * _700, _707 * _701)) + 1.0) * 0.5;
        float _3143 = isnan(0.0) ? _715 : (isnan(_715) ? 0.0 : max(_715, 0.0));
        float _724 = sqrt(((_700 * _700) + (_699 * _699)) + (_701 * _701)) / (_612 + 9.9999997473787516355514526367188e-06);
        float _3154 = isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0));
        float _725 = isnan(1.0) ? _3154 : (isnan(_3154) ? 1.0 : min(_3154, 1.0));
        float _726 = _725 * 2.0;
        float _730 = (1.0 - _725) / (_725 + 1.0);
        float _3165 = isnan(0.0) ? _730 : (isnan(_730) ? 0.0 : max(_730, 0.0));
        float _731 = isnan(1.0) ? _3165 : (isnan(_3165) ? 1.0 : min(_3165, 1.0));
        float _740 = ((((1.0 - _731) * (_726 + 2.0)) * exp2(log2(isnan(1.0) ? _3143 : (isnan(_3143) ? 1.0 : min(_3143, 1.0))) * (_726 + 1.0))) + _731) * _612;
        _748 = _579;
        _750 = _578;
        _751 = _577;
        _752 = _589;
        _753 = _588;
        _754 = _587;
        _755 = _599;
        _756 = _598;
        _757 = _597;
        _758 = _612;
        _759 = _611;
        _760 = _610;
        _761 = cbModelParam._m0[36u].z * (isnan(0.0) ? _656 : (isnan(_656) ? 0.0 : max(_656, 0.0)));
        _762 = cbModelParam._m0[36u].z * (isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0)));
        _763 = cbModelParam._m0[36u].z * (isnan(0.0) ? _740 : (isnan(_740) ? 0.0 : max(_740, 0.0)));
    }
    else
    {
        _748 = _749;
        _750 = _749;
        _751 = _749;
        _752 = _749;
        _753 = _749;
        _754 = _749;
        _755 = _749;
        _756 = _749;
        _757 = _749;
        _758 = _749;
        _759 = _749;
        _760 = _749;
        _761 = 0.0;
        _762 = 0.0;
        _763 = 0.0;
    }
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    float _1071;
    float _1072;
    float _1073;
    float _1074;
    float _1075;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _792 = fma(_417, cbModelParam._m0[30u].z, fma(_413, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _409));
        float _796 = fma(_417, cbModelParam._m0[31u].z, fma(_413, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _409));
        float _800 = fma(_417, cbModelParam._m0[32u].z, fma(_413, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _409));
        float _823 = _409 + _209;
        float _824 = _413 + _210;
        float _825 = _417 + _211;
        float _835 = fma(_825, cbModelParam._m0[30u].z, fma(_824, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _823)) - _792;
        float _836 = fma(_825, cbModelParam._m0[31u].z, fma(_824, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _823)) - _796;
        float _837 = fma(_825, cbModelParam._m0[32u].z, fma(_824, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _823)) - _800;
        float _841 = inversesqrt(dot(vec3(_835, _836, _837), vec3(_835, _836, _837)));
        float _854 = ((_841 * _835) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_792 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _855 = ((_841 * _836) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_796 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _856 = ((_841 * _837) / cbModelParam._m0[35u].z) + ((((((_800 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _858 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _865 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _872 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        vec4 _879 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_854, _855, _856), 0.0);
        float _891 = exp2((_858.w + (-0.5)) * 20.0) * 2.0;
        float _892 = _891 * (_858.x + (-0.5));
        float _893 = _891 * (_858.y + (-0.5));
        float _894 = _891 * (_858.z + (-0.5));
        float _901 = exp2((_865.w + (-0.5)) * 20.0) * 2.0;
        float _902 = _901 * (_865.x + (-0.5));
        float _903 = _901 * (_865.y + (-0.5));
        float _904 = _901 * (_865.z + (-0.5));
        float _911 = exp2((_872.w + (-0.5)) * 20.0) * 2.0;
        float _912 = _911 * (_872.x + (-0.5));
        float _913 = _911 * (_872.y + (-0.5));
        float _914 = _911 * (_872.z + (-0.5));
        float _921 = exp2((_879.w + (-0.5)) * 20.0) * 2.0;
        float _922 = _921 * (_879.x + (-0.5));
        float _923 = _921 * (_879.y + (-0.5));
        float _924 = _921 * (_879.z + (-0.5));
        float _925 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _926 = isnan(0.0) ? _923 : (isnan(_923) ? 0.0 : max(_923, 0.0));
        float _927 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _928 = _892 * 0.5;
        float _929 = _902 * 0.5;
        float _930 = _912 * 0.5;
        float _931 = dot(vec3(_928, _929, _930), vec3(_928, _929, _930));
        float _936 = (_931 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_931);
        float _944 = (dot(vec3(_209, _210, _211), vec3(_936 * _928, _936 * _929, _936 * _930)) + 1.0) * 0.5;
        float _3206 = isnan(0.0) ? _944 : (isnan(_944) ? 0.0 : max(_944, 0.0));
        float _953 = sqrt(((_929 * _929) + (_928 * _928)) + (_930 * _930)) / (_925 + 9.9999997473787516355514526367188e-06);
        float _3217 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        float _954 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
        float _955 = _954 * 2.0;
        float _959 = (1.0 - _954) / (_954 + 1.0);
        float _3228 = isnan(0.0) ? _959 : (isnan(_959) ? 0.0 : max(_959, 0.0));
        float _960 = isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0));
        float _969 = ((((1.0 - _960) * (_955 + 2.0)) * exp2(log2(isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0))) * (_955 + 1.0))) + _960) * _925;
        float _970 = _893 * 0.5;
        float _971 = _903 * 0.5;
        float _972 = _913 * 0.5;
        float _973 = dot(vec3(_970, _971, _972), vec3(_970, _971, _972));
        float _978 = (_973 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_973);
        float _986 = (dot(vec3(_209, _210, _211), vec3(_978 * _970, _978 * _971, _978 * _972)) + 1.0) * 0.5;
        float _3239 = isnan(0.0) ? _986 : (isnan(_986) ? 0.0 : max(_986, 0.0));
        float _995 = sqrt(((_971 * _971) + (_970 * _970)) + (_972 * _972)) / (_926 + 9.9999997473787516355514526367188e-06);
        float _3250 = isnan(0.0) ? _995 : (isnan(_995) ? 0.0 : max(_995, 0.0));
        float _996 = isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0));
        float _997 = _996 * 2.0;
        float _1001 = (1.0 - _996) / (_996 + 1.0);
        float _3261 = isnan(0.0) ? _1001 : (isnan(_1001) ? 0.0 : max(_1001, 0.0));
        float _1002 = isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0));
        float _1011 = ((((1.0 - _1002) * (_997 + 2.0)) * exp2(log2(isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0))) * (_997 + 1.0))) + _1002) * _926;
        float _1012 = _894 * 0.5;
        float _1013 = _904 * 0.5;
        float _1014 = _914 * 0.5;
        float _1015 = dot(vec3(_1012, _1013, _1014), vec3(_1012, _1013, _1014));
        float _1020 = (_1015 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1015);
        float _1028 = (dot(vec3(_209, _210, _211), vec3(_1020 * _1012, _1020 * _1013, _1020 * _1014)) + 1.0) * 0.5;
        float _3272 = isnan(0.0) ? _1028 : (isnan(_1028) ? 0.0 : max(_1028, 0.0));
        float _1037 = sqrt(((_1013 * _1013) + (_1012 * _1012)) + (_1014 * _1014)) / (_927 + 9.9999997473787516355514526367188e-06);
        float _3283 = isnan(0.0) ? _1037 : (isnan(_1037) ? 0.0 : max(_1037, 0.0));
        float _1038 = isnan(1.0) ? _3283 : (isnan(_3283) ? 1.0 : min(_3283, 1.0));
        float _1039 = _1038 * 2.0;
        float _1043 = (1.0 - _1038) / (_1038 + 1.0);
        float _3294 = isnan(0.0) ? _1043 : (isnan(_1043) ? 0.0 : max(_1043, 0.0));
        float _1044 = isnan(1.0) ? _3294 : (isnan(_3294) ? 1.0 : min(_3294, 1.0));
        float _1053 = ((((1.0 - _1044) * (_1039 + 2.0)) * exp2(log2(isnan(1.0) ? _3272 : (isnan(_3272) ? 1.0 : min(_3272, 1.0))) * (_1039 + 1.0))) + _1044) * _927;
        _1061 = _894;
        _1062 = _893;
        _1063 = _892;
        _1064 = _904;
        _1065 = _903;
        _1066 = _902;
        _1067 = _914;
        _1068 = _913;
        _1069 = _912;
        _1070 = _927;
        _1071 = _926;
        _1072 = _925;
        _1073 = cbModelParam._m0[36u].w * (isnan(0.0) ? _969 : (isnan(_969) ? 0.0 : max(_969, 0.0)));
        _1074 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1011 : (isnan(_1011) ? 0.0 : max(_1011, 0.0)));
        _1075 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0)));
    }
    else
    {
        _1061 = _749;
        _1062 = _749;
        _1063 = _749;
        _1064 = _749;
        _1065 = _749;
        _1066 = _749;
        _1067 = _749;
        _1068 = _749;
        _1069 = _749;
        _1070 = _749;
        _1071 = _749;
        _1072 = _749;
        _1073 = 0.0;
        _1074 = 0.0;
        _1075 = 0.0;
    }
    float _1085 = (cbModelParam._m0[1u].x * (_1073 - _761)) + _761;
    float _1086 = (cbModelParam._m0[1u].x * (_1074 - _762)) + _762;
    float _1087 = (cbModelParam._m0[1u].x * (_1075 - _763)) + _763;
    float _1108 = fma(_1087, cbSceneParam._m0[89u].z, fma(_1086, cbSceneParam._m0[89u].y, _1085 * cbSceneParam._m0[89u].x));
    float _1111 = fma(_1087, cbSceneParam._m0[90u].z, fma(_1086, cbSceneParam._m0[90u].y, _1085 * cbSceneParam._m0[90u].x));
    float _1114 = fma(_1087, cbSceneParam._m0[91u].z, fma(_1086, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1085));
    float _1129 = _385 * 0.5;
    float _1130 = _386 * 0.5;
    float _1131 = _387 * 0.5;
    float _1132 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1063, _1066, _1069, _1072));
    float _1135 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1062, _1065, _1068, _1071));
    float _1138 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_1061, _1064, _1067, _1070));
    float _1172;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1145 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_748, _752, _755, _758));
        float _1149 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_750, _753, _756, _759));
        float _1153 = dot(vec4(_1129, _1130, _1131, 1.0), vec4(_751, _754, _757, _760));
        float _1160 = dot(vec4(cbModelParam._m0[39u]), vec4(_1129, _1130, _1131, 1.0));
        _1172 = dot(vec3(isnan(0.0) ? _1153 : (isnan(_1153) ? 0.0 : max(_1153, 0.0)), isnan(0.0) ? _1149 : (isnan(_1149) ? 0.0 : max(_1149, 0.0)), isnan(0.0) ? _1145 : (isnan(_1145) ? 0.0 : max(_1145, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1160) ? 0.0 : (isnan(0.0) ? _1160 : max(0.0, _1160))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1172 = 1.0;
    }
    float _1183;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1174 = dot(vec4(cbModelParam._m0[40u]), vec4(_1129, _1130, _1131, 1.0));
        _1183 = dot(vec3(isnan(0.0) ? _1132 : (isnan(_1132) ? 0.0 : max(_1132, 0.0)), isnan(0.0) ? _1135 : (isnan(_1135) ? 0.0 : max(_1135, 0.0)), isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1174) ? 0.0 : (isnan(0.0) ? _1174 : max(0.0, _1174))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1183 = 1.0;
    }
    float _1187 = (_1183 * cbModelParam._m0[1u].x) + (_1172 * (1.0 - cbModelParam._m0[1u].x));
    float _1196 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1278;
    float _1280;
    float _1282;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1245 = fma(_417, cbModelParam._m0[13u].z, fma(_413, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _409)) + cbModelParam._m0[13u].w;
        float _1249 = fma(_417, cbModelParam._m0[14u].z, fma(_413, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _409)) + cbModelParam._m0[14u].w;
        float _1253 = fma(_417, cbModelParam._m0[15u].z, fma(_413, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _409)) + cbModelParam._m0[15u].w;
        float _1256 = fma(_387, cbModelParam._m0[13u].z, fma(_386, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _385));
        float _1259 = fma(_387, cbModelParam._m0[14u].z, fma(_386, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _385));
        float _1262 = fma(_387, cbModelParam._m0[15u].z, fma(_386, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _385));
        float _1288;
        if (_1256 > 0.0)
        {
            _1288 = abs((1.0 - _1245) / _1256);
        }
        else
        {
            float frontier_phi_17_15_ladder;
            if (_1256 < 0.0)
            {
                frontier_phi_17_15_ladder = abs((_1245 + 1.0) / _1256);
            }
            else
            {
                frontier_phi_17_15_ladder = 5000.0;
            }
            _1288 = frontier_phi_17_15_ladder;
        }
        float _1516;
        if (_1259 > 0.0)
        {
            _1516 = abs((1.0 - _1249) / _1259);
        }
        else
        {
            float frontier_phi_26_22_ladder;
            if (_1259 < 0.0)
            {
                frontier_phi_26_22_ladder = abs((_1249 + 1.0) / _1259);
            }
            else
            {
                frontier_phi_26_22_ladder = 5000.0;
            }
            _1516 = frontier_phi_26_22_ladder;
        }
        float _1708;
        if (_1262 > 0.0)
        {
            _1708 = abs((1.0 - _1253) / _1262);
        }
        else
        {
            float frontier_phi_38_33_ladder;
            if (_1262 < 0.0)
            {
                frontier_phi_38_33_ladder = abs((_1253 + 1.0) / _1262);
            }
            else
            {
                frontier_phi_38_33_ladder = 5000.0;
            }
            _1708 = frontier_phi_38_33_ladder;
        }
        float _1710 = isnan(_1516) ? _1288 : (isnan(_1288) ? _1516 : min(_1288, _1516));
        float _1711 = isnan(_1708) ? _1710 : (isnan(_1710) ? _1708 : min(_1710, _1708));
        float _1715 = (_1711 * _1256) + _1245;
        float _1716 = (_1711 * _1259) + _1249;
        float _1717 = (_1711 * _1262) + _1253;
        float _1718 = _1711 * 9.9999997473787516355514526367188e-05;
        float _1720 = (-1.0) - _1718;
        float _1722 = _1718 + 1.0;
        float frontier_phi_16_38_ladder;
        float frontier_phi_16_38_ladder_1;
        float frontier_phi_16_38_ladder_2;
        if ((_1717 > _1722) || ((_1717 < _1720) || ((_1716 > _1722) || ((_1716 < _1720) || ((_1715 < _1720) || (_1715 > _1722))))))
        {
            frontier_phi_16_38_ladder = 0.0;
            frontier_phi_16_38_ladder_1 = 0.0;
            frontier_phi_16_38_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1814 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1717, cbModelParam._m0[9u].z, fma(_1716, cbModelParam._m0[9u].y, _1715 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1717, cbModelParam._m0[10u].z, fma(_1716, cbModelParam._m0[10u].y, _1715 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1717, cbModelParam._m0[11u].z, fma(_1716, cbModelParam._m0[11u].y, _1715 * cbModelParam._m0[11u].x))), _1196);
            frontier_phi_16_38_ladder = _1814.z * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_1 = _1814.y * cbModelParam._m0[1u].y;
            frontier_phi_16_38_ladder_2 = _1814.x * cbModelParam._m0[1u].y;
        }
        _1278 = frontier_phi_16_38_ladder_2;
        _1280 = frontier_phi_16_38_ladder_1;
        _1282 = frontier_phi_16_38_ladder;
    }
    else
    {
        vec4 _1266 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_385, _386, _387), _1196);
        _1278 = _1266.x * cbModelParam._m0[1u].y;
        _1280 = _1266.y * cbModelParam._m0[1u].y;
        _1282 = _1266.z * cbModelParam._m0[1u].y;
    }
    float _1285 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1378;
    float _1380;
    float _1382;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1342 = fma(_417, cbModelParam._m0[21u].z, fma(_413, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _409)) + cbModelParam._m0[21u].w;
        float _1346 = fma(_417, cbModelParam._m0[22u].z, fma(_413, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _409)) + cbModelParam._m0[22u].w;
        float _1350 = fma(_417, cbModelParam._m0[23u].z, fma(_413, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _409)) + cbModelParam._m0[23u].w;
        float _1353 = fma(_387, cbModelParam._m0[21u].z, fma(_386, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _385));
        float _1356 = fma(_387, cbModelParam._m0[22u].z, fma(_386, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _385));
        float _1359 = fma(_387, cbModelParam._m0[23u].z, fma(_386, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _385));
        float _1521;
        if (_1353 > 0.0)
        {
            _1521 = abs((1.0 - _1342) / _1353);
        }
        else
        {
            float frontier_phi_28_24_ladder;
            if (_1353 < 0.0)
            {
                frontier_phi_28_24_ladder = abs((_1342 + 1.0) / _1353);
            }
            else
            {
                frontier_phi_28_24_ladder = 5000.0;
            }
            _1521 = frontier_phi_28_24_ladder;
        }
        float _1735;
        if (_1356 > 0.0)
        {
            _1735 = abs((1.0 - _1346) / _1356);
        }
        else
        {
            float frontier_phi_40_35_ladder;
            if (_1356 < 0.0)
            {
                frontier_phi_40_35_ladder = abs((_1346 + 1.0) / _1356);
            }
            else
            {
                frontier_phi_40_35_ladder = 5000.0;
            }
            _1735 = frontier_phi_40_35_ladder;
        }
        float _1886;
        if (_1359 > 0.0)
        {
            _1886 = abs((1.0 - _1350) / _1359);
        }
        else
        {
            float frontier_phi_49_46_ladder;
            if (_1359 < 0.0)
            {
                frontier_phi_49_46_ladder = abs((_1350 + 1.0) / _1359);
            }
            else
            {
                frontier_phi_49_46_ladder = 5000.0;
            }
            _1886 = frontier_phi_49_46_ladder;
        }
        float _1888 = isnan(_1735) ? _1521 : (isnan(_1521) ? _1735 : min(_1521, _1735));
        float _1889 = isnan(_1886) ? _1888 : (isnan(_1888) ? _1886 : min(_1888, _1886));
        float _1893 = (_1889 * _1353) + _1342;
        float _1894 = (_1889 * _1356) + _1346;
        float _1895 = (_1889 * _1359) + _1350;
        float _1896 = _1889 * 9.9999997473787516355514526367188e-05;
        float _1897 = (-1.0) - _1896;
        float _1899 = _1896 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1895 > _1899) || ((_1895 < _1897) || ((_1894 > _1899) || ((_1894 < _1897) || ((_1893 < _1897) || (_1893 > _1899))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2119 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1895, cbModelParam._m0[17u].z, fma(_1894, cbModelParam._m0[17u].y, _1893 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1895, cbModelParam._m0[18u].z, fma(_1894, cbModelParam._m0[18u].y, _1893 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1895, cbModelParam._m0[19u].z, fma(_1894, cbModelParam._m0[19u].y, _1893 * cbModelParam._m0[19u].x))), _1285);
            frontier_phi_25_49_ladder = _2119.z * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_1 = _2119.y * cbModelParam._m0[1u].z;
            frontier_phi_25_49_ladder_2 = _2119.x * cbModelParam._m0[1u].z;
        }
        _1378 = frontier_phi_25_49_ladder_2;
        _1380 = frontier_phi_25_49_ladder_1;
        _1382 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1362 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_385, _386, _387), _1285);
        _1378 = _1362.x * cbModelParam._m0[1u].z;
        _1380 = _1362.y * cbModelParam._m0[1u].z;
        _1382 = _1362.z * cbModelParam._m0[1u].z;
    }
    float _1394 = _376 * 0.01200000010430812835693359375;
    float _1396 = _1394 * ((cbModelParam._m0[1u].w * (_1378 - _1278)) + _1278);
    float _1397 = _1394 * ((cbModelParam._m0[1u].w * (_1380 - _1280)) + _1280);
    float _1398 = _1394 * ((cbModelParam._m0[1u].w * (_1382 - _1282)) + _1282);
    float _1401 = fma(_1398, cbSceneParam._m0[89u].z, fma(_1397, cbSceneParam._m0[89u].y, _1396 * cbSceneParam._m0[89u].x));
    float _1404 = fma(_1398, cbSceneParam._m0[90u].z, fma(_1397, cbSceneParam._m0[90u].y, _1396 * cbSceneParam._m0[90u].x));
    float _1407 = fma(_1398, cbSceneParam._m0[91u].z, fma(_1397, cbSceneParam._m0[91u].y, _1396 * cbSceneParam._m0[91u].x));
    vec4 _1415 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_310, _311));
    float _1417 = _1415.w;
    float _1429 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1417);
    float _1430 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1417);
    float _1431 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1417);
    uvec4 _1435 = floatBitsToUint(cbInstanceData._m0[_350 + 5u]);
    uint _1437 = _1435.x * 14u;
    uint _1438 = _1437 + 13u;
    float _1445 = _376 + (-1.0);
    float _1451 = (cbLight._m0[_1438].x * _1445) + 1.0;
    float _1452 = (cbLight._m0[_1438].y * _1445) + 1.0;
    float _1453 = (cbLight._m0[_1438].z * _1445) + 1.0;
    float _1454 = (cbLight._m0[_1438].w * _1445) + 1.0;
    uint _1455 = _1437 + 5u;
    float _1461 = isnan(1.0) ? _1452 : (isnan(_1452) ? 1.0 : min(_1452, 1.0));
    uint _1465 = _1437 + 4u;
    float _1475 = isnan(1.0) ? _1451 : (isnan(_1451) ? 1.0 : min(_1451, 1.0));
    uint _1479 = _1437 | 1u;
    float _1490 = dot(vec3(cbLight._m0[_1437].xyz), vec3(_209, _210, _211));
    float _1493 = dot(vec3(cbLight._m0[_1479].xyz), vec3(_209, _210, _211));
    float _3430 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _3441 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
    float _1498 = (isnan(1.0) ? _3430 : (isnan(_3430) ? 1.0 : min(_3430, 1.0))) * 0.3183098733425140380859375;
    float _1500 = (isnan(1.0) ? _3441 : (isnan(_3441) ? 1.0 : min(_3441, 1.0))) * 0.3183098733425140380859375;
    float _1507 = ((cbLight._m0[_1455].x * _1461) * _1500) + (((cbLight._m0[_1465].x * _1429) * _1475) * _1498);
    float _1508 = ((_1461 * cbLight._m0[_1455].y) * _1500) + (((cbLight._m0[_1465].y * _1430) * _1475) * _1498);
    float _1509 = ((_1461 * cbLight._m0[_1455].z) * _1500) + (((cbLight._m0[_1465].z * _1431) * _1475) * _1498);
    uvec4 _1513 = floatBitsToUint(cbLight._m0[_1437 + 12u]);
    bool _1515 = _1513.x == 0u;
    float _1526;
    float _1528;
    float _1530;
    if (_1515)
    {
        _1526 = _1507;
        _1528 = _1508;
        _1530 = _1509;
    }
    else
    {
        uint _1534 = _1437 + 6u;
        float _1550 = (dot(vec3(cbLight._m0[_1437 + 2u].xyz), vec3(_209, _210, _211)) * 0.5) + 0.5;
        float _1551 = _1550 * _1550;
        float _3452 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
        float _1552 = isnan(1.0) ? _3452 : (isnan(_3452) ? 1.0 : min(_3452, 1.0));
        float _1553 = isnan(1.0) ? _1453 : (isnan(_1453) ? 1.0 : min(_1453, 1.0));
        _1526 = (((cbLight._m0[_1534].x * 0.3183098733425140380859375) * _1552) * _1553) + _1507;
        _1528 = (((cbLight._m0[_1534].y * 0.3183098733425140380859375) * _1552) * _1553) + _1508;
        _1530 = (((cbLight._m0[_1534].z * 0.3183098733425140380859375) * _1552) * _1553) + _1509;
    }
    bool _1533 = _1513.y == 0u;
    float _1571;
    float _1573;
    float _1575;
    if (_1533)
    {
        _1571 = _1526;
        _1573 = _1528;
        _1575 = _1530;
    }
    else
    {
        uint _1679 = _1437 + 7u;
        float _1695 = (dot(vec3(cbLight._m0[_1437 + 3u].xyz), vec3(_209, _210, _211)) * 0.5) + 0.5;
        float _1696 = _1695 * _1695;
        float _3468 = isnan(0.0) ? _1696 : (isnan(_1696) ? 0.0 : max(_1696, 0.0));
        float _1697 = isnan(1.0) ? _3468 : (isnan(_3468) ? 1.0 : min(_3468, 1.0));
        float _1698 = isnan(1.0) ? _1454 : (isnan(_1454) ? 1.0 : min(_1454, 1.0));
        _1571 = (((cbLight._m0[_1679].x * 0.3183098733425140380859375) * _1697) * _1698) + _1526;
        _1573 = (((cbLight._m0[_1679].y * 0.3183098733425140380859375) * _1697) * _1698) + _1528;
        _1575 = (((cbLight._m0[_1679].z * 0.3183098733425140380859375) * _1697) * _1698) + _1530;
    }
    uint _1577 = _1437 + 8u;
    float _1583 = cbLight._m0[_1437].x + _289;
    float _1584 = cbLight._m0[_1437].y + _290;
    float _1585 = cbLight._m0[_1437].z + _291;
    float _1589 = inversesqrt(dot(vec3(_1583, _1584, _1585), vec3(_1583, _1584, _1585)));
    float _1593 = dot(vec3(_209, _210, _211), vec3(cbLight._m0[_1437].xyz));
    float _3484 = isnan(0.0) ? _1593 : (isnan(_1593) ? 0.0 : max(_1593, 0.0));
    float _1596 = isnan(1.0) ? _3484 : (isnan(_3484) ? 1.0 : min(_3484, 1.0));
    float _3495 = isnan(0.0) ? _377 : (isnan(_377) ? 0.0 : max(_377, 0.0));
    float _1597 = isnan(1.0) ? _3495 : (isnan(_3495) ? 1.0 : min(_3495, 1.0));
    float _1598 = dot(vec3(cbLight._m0[_1437].xyz), vec3(_1583 * _1589, _1584 * _1589, _1585 * _1589));
    float _3506 = isnan(0.0) ? _1598 : (isnan(_1598) ? 0.0 : max(_1598, 0.0));
    float _1609 = (exp2(log2(1.0 - (isnan(1.0) ? _3506 : (isnan(_3506) ? 1.0 : min(_3506, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1615 = (0.5 / ((_1596 + 9.9999999392252902907785028219223e-09) + _1597)) * _1596;
    float _3517 = isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0));
    float _1617 = (isnan(1.0) ? _3517 : (isnan(_3517) ? 1.0 : min(_3517, 1.0))) * 0.31831014156341552734375;
    uint _1631 = _1437 + 9u;
    float _1637 = cbLight._m0[_1479].x + _289;
    float _1638 = cbLight._m0[_1479].y + _290;
    float _1639 = cbLight._m0[_1479].z + _291;
    float _1643 = inversesqrt(dot(vec3(_1637, _1638, _1639), vec3(_1637, _1638, _1639)));
    float _1647 = dot(vec3(_209, _210, _211), vec3(cbLight._m0[_1479].xyz));
    float _3528 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
    float _1650 = isnan(1.0) ? _3528 : (isnan(_3528) ? 1.0 : min(_3528, 1.0));
    float _1651 = dot(vec3(cbLight._m0[_1479].xyz), vec3(_1637 * _1643, _1638 * _1643, _1639 * _1643));
    float _3539 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
    float _1660 = (exp2(log2(1.0 - (isnan(1.0) ? _3539 : (isnan(_3539) ? 1.0 : min(_3539, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1664 = (0.5 / ((_1650 + 9.9999999392252902907785028219223e-09) + _1597)) * _1650;
    float _3550 = isnan(0.0) ? _1664 : (isnan(_1664) ? 0.0 : max(_1664, 0.0));
    float _1666 = (isnan(1.0) ? _3550 : (isnan(_3550) ? 1.0 : min(_3550, 1.0))) * 0.31831014156341552734375;
    float _1676 = (((_1660 * cbLight._m0[_1631].x) * _1666) * _1461) + ((((cbLight._m0[_1577].x * _1429) * _1609) * _1617) * _1475);
    float _1677 = (((_1660 * cbLight._m0[_1631].y) * _1666) * _1461) + ((((cbLight._m0[_1577].y * _1430) * _1609) * _1617) * _1475);
    float _1678 = (((_1660 * cbLight._m0[_1631].z) * _1666) * _1461) + ((((cbLight._m0[_1577].z * _1431) * _1609) * _1617) * _1475);
    float _1740;
    float _1742;
    float _1744;
    if (_1515)
    {
        _1740 = _1676;
        _1742 = _1677;
        _1744 = _1678;
    }
    else
    {
        uint _1746 = _1437 + 10u;
        uint _1752 = _1437 + 2u;
        float _1758 = cbLight._m0[_1752].x + _289;
        float _1759 = cbLight._m0[_1752].y + _290;
        float _1760 = cbLight._m0[_1752].z + _291;
        float _1764 = inversesqrt(dot(vec3(_1758, _1759, _1760), vec3(_1758, _1759, _1760)));
        float _1768 = dot(vec3(_209, _210, _211), vec3(cbLight._m0[_1752].xyz));
        float _3561 = isnan(0.0) ? _1768 : (isnan(_1768) ? 0.0 : max(_1768, 0.0));
        float _1771 = isnan(1.0) ? _3561 : (isnan(_3561) ? 1.0 : min(_3561, 1.0));
        float _1772 = dot(vec3(cbLight._m0[_1752].xyz), vec3(_1758 * _1764, _1759 * _1764, _1760 * _1764));
        float _3572 = isnan(0.0) ? _1772 : (isnan(_1772) ? 0.0 : max(_1772, 0.0));
        float _1781 = (exp2(log2(1.0 - (isnan(1.0) ? _3572 : (isnan(_3572) ? 1.0 : min(_3572, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1785 = (0.5 / ((_1771 + 9.9999999392252902907785028219223e-09) + _1597)) * _1771;
        float _3583 = isnan(0.0) ? _1785 : (isnan(_1785) ? 0.0 : max(_1785, 0.0));
        float _1787 = (isnan(1.0) ? _3583 : (isnan(_3583) ? 1.0 : min(_3583, 1.0))) * 0.31831014156341552734375;
        float _1788 = isnan(1.0) ? _1453 : (isnan(_1453) ? 1.0 : min(_1453, 1.0));
        _1740 = (((_1781 * cbLight._m0[_1746].x) * _1787) * _1788) + _1676;
        _1742 = (((_1781 * cbLight._m0[_1746].y) * _1787) * _1788) + _1677;
        _1744 = (((_1781 * cbLight._m0[_1746].z) * _1787) * _1788) + _1678;
    }
    float _1823;
    float _1825;
    float _1827;
    if (_1533)
    {
        _1823 = _1740;
        _1825 = _1742;
        _1827 = _1744;
    }
    else
    {
        uint _1834 = _1437 + 11u;
        uint _1840 = _1437 + 3u;
        float _1846 = cbLight._m0[_1840].x + _289;
        float _1847 = cbLight._m0[_1840].y + _290;
        float _1848 = cbLight._m0[_1840].z + _291;
        float _1852 = inversesqrt(dot(vec3(_1846, _1847, _1848), vec3(_1846, _1847, _1848)));
        float _1856 = dot(vec3(_209, _210, _211), vec3(cbLight._m0[_1840].xyz));
        float _3599 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
        float _1859 = isnan(1.0) ? _3599 : (isnan(_3599) ? 1.0 : min(_3599, 1.0));
        float _1860 = dot(vec3(cbLight._m0[_1840].xyz), vec3(_1846 * _1852, _1847 * _1852, _1848 * _1852));
        float _3610 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
        float _1869 = (exp2(log2(1.0 - (isnan(1.0) ? _3610 : (isnan(_3610) ? 1.0 : min(_3610, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
        float _1873 = (0.5 / ((_1859 + 9.9999999392252902907785028219223e-09) + _1597)) * _1859;
        float _3621 = isnan(0.0) ? _1873 : (isnan(_1873) ? 0.0 : max(_1873, 0.0));
        float _1875 = (isnan(1.0) ? _3621 : (isnan(_3621) ? 1.0 : min(_3621, 1.0))) * 0.31831014156341552734375;
        float _1876 = isnan(1.0) ? _1454 : (isnan(_1454) ? 1.0 : min(_1454, 1.0));
        _1823 = (((_1869 * cbLight._m0[_1834].x) * _1875) * _1876) + _1740;
        _1825 = (((_1869 * cbLight._m0[_1834].y) * _1875) * _1876) + _1742;
        _1827 = (((_1869 * cbLight._m0[_1834].z) * _1875) * _1876) + _1744;
    }
    float _2011;
    float _2013;
    float _2015;
    float _2017;
    float _2019;
    float _2021;
    if (_1435.y == 0u)
    {
        float _1951 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1952 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1951;
        float _1953 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1951;
        float _1954 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1951;
        uvec4 _1966 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1967 = _1966.x;
        uint _1978 = uint((float(_1966.y) * floor(float(uint(cbSceneParam._m0[85u].y * _311) / _1967))) + floor(float(uint(cbSceneParam._m0[85u].x * _310) / _1967)));
        float _1988 = (log2(_1954 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1989 = isnan(0.0) ? _1988 : (isnan(_1988) ? 0.0 : max(_1988, 0.0));
        uint _1992 = uint(isnan(14.0) ? _1989 : (isnan(_1989) ? 14.0 : min(_1989, 14.0)));
        uvec4 _1997 = texelFetch(g_lightClusterGridBuffer, int(((_1992 << 2u) + (_1978 << 6u)) >> 2u));
        uint _1998 = _1997.x;
        uint _1999 = _1966.z;
        float _2124;
        float _2126;
        float _2128;
        float _2130;
        float _2132;
        float _2134;
        if (((((1u << ((_1999 >> 4u) & 15u)) + 4294967295u) & _1998) == 0u) || ((_1999 & 240u) == 0u))
        {
            _2124 = 0.0;
            _2126 = 0.0;
            _2128 = 0.0;
            _2130 = 0.0;
            _2132 = 0.0;
            _2134 = 0.0;
        }
        else
        {
            float _2125;
            float _2127;
            float _2129;
            float _2131;
            float _2133;
            float _2135;
            float _2276 = 0.0;
            float _2277 = 0.0;
            float _2278 = 0.0;
            float _2279 = 0.0;
            float _2280 = 0.0;
            float _2281 = 0.0;
            uint _2282 = 0u;
            uint _2291;
            bool _2292;
            for (;;)
            {
                _2291 = texelFetch(g_lightClassification, int((((_1992 << 5u) + (_1978 << 9u)) + (_2282 << 2u)) >> 2u)).x;
                _2292 = _2291 == 0u;
                float frontier_phi_66_pred;
                float frontier_phi_66_pred_1;
                float frontier_phi_66_pred_2;
                float frontier_phi_66_pred_3;
                float frontier_phi_66_pred_4;
                float frontier_phi_66_pred_5;
                if (_2292)
                {
                    frontier_phi_66_pred = _2276;
                    frontier_phi_66_pred_1 = _2281;
                    frontier_phi_66_pred_2 = _2280;
                    frontier_phi_66_pred_3 = _2279;
                    frontier_phi_66_pred_4 = _2278;
                    frontier_phi_66_pred_5 = _2277;
                }
                else
                {
                    float _2421;
                    float _2422;
                    float _2423;
                    float _2424;
                    float _2425;
                    float _2426;
                    uint _2427;
                    _2421 = _2276;
                    _2422 = _2277;
                    _2423 = _2278;
                    _2424 = _2279;
                    _2425 = _2280;
                    _2426 = _2281;
                    _2427 = _2291;
                    float _2348;
                    float _2349;
                    float _2350;
                    float _2351;
                    float _2352;
                    float _2353;
                    for (;;)
                    {
                        uint _2431 = uint(findLSB(_2427)) + (_2282 << 5u);
                        uint _2428 = (_2427 + 4294967295u) & _2427;
                        uint _2433 = _2431 * 48u;
                        vec4 _2447 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2433)).x, texelFetch(g_PointLightRenderingBuffer, int(_2433 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2433 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2433 + 3u)).x));
                        uint _2453 = (_2431 * 48u) + 4u;
                        vec4 _2466 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2453)).x, texelFetch(g_PointLightRenderingBuffer, int(_2453 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2453 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2453 + 3u)).x));
                        uint _2472 = (_2431 * 48u) + 8u;
                        vec3 _2483 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2472)).x, texelFetch(g_PointLightRenderingBuffer, int(_2472 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2472 + 2u)).x));
                        float _2487 = _2447.x - _1952;
                        float _2488 = _2447.y - _1953;
                        float _2489 = _2447.z - _1954;
                        float _2490 = dot(vec3(_2487, _2488, _2489), vec3(_2487, _2488, _2489));
                        float _2493 = inversesqrt(_2490);
                        float _2502 = 1.0 - (_2490 * _2447.w);
                        float _3647 = isnan(0.0) ? _2502 : (isnan(_2502) ? 0.0 : max(_2502, 0.0));
                        float _2503 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
                        float _2504 = sqrt(_2490) * _2466.w;
                        float _2507 = 1.39999997615814208984375 / (_2504 + 1.39999997615814208984375);
                        float _2508 = _2507 * _2507;
                        float _2511 = ((1.0 - _2508) * dot(vec3(_331, _334, _337), vec3(_2493 * _2487, _2493 * _2488, _2493 * _2489))) + _2508;
                        float _2514 = _2504 * _2504;
                        float _2518 = ((isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0))) * _2503) / ((_2514 * 0.699999988079071044921875) + 1.0);
                        float _2522 = (-0.0) - _1952;
                        float _2523 = (-0.0) - _1953;
                        float _2524 = (-0.0) - _1954;
                        float _2528 = inversesqrt(dot(vec3(_2522, _2523, _2524), vec3(_2522, _2523, _2524)));
                        float _2532 = dot(vec3(_331, _334, _337), vec3(_2528 * _2522, _2528 * _2523, _2528 * _2524));
                        float _3663 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
                        float _3674 = isnan(0.0) ? _2511 : (isnan(_2511) ? 0.0 : max(_2511, 0.0));
                        float _2536 = isnan(1.0) ? _3674 : (isnan(_3674) ? 1.0 : min(_3674, 1.0));
                        float _2540 = (0.5 / (((isnan(1.0) ? _3663 : (isnan(_3663) ? 1.0 : min(_3663, 1.0))) + 9.9999999392252902907785028219223e-09) + _2536)) * _2536;
                        float _3685 = isnan(0.0) ? _2540 : (isnan(_2540) ? 0.0 : max(_2540, 0.0));
                        float _2549 = (((isnan(1.0) ? _3685 : (isnan(_3685) ? 1.0 : min(_3685, 1.0))) * 3.1415927410125732421875) / ((_2514 * 2.1991131305694580078125) + 3.141590118408203125)) * _2503;
                        _2351 = (_2518 * _2466.x) + _2424;
                        _2352 = (_2518 * _2466.y) + _2425;
                        _2353 = (_2518 * _2466.z) + _2426;
                        _2348 = (_2549 * _2483.x) + _2421;
                        _2349 = (_2549 * _2483.y) + _2422;
                        _2350 = (_2549 * _2483.z) + _2423;
                        if (_2428 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2421 = _2348;
                            _2422 = _2349;
                            _2423 = _2350;
                            _2424 = _2351;
                            _2425 = _2352;
                            _2426 = _2353;
                            _2427 = _2428;
                        }
                    }
                    frontier_phi_66_pred = _2348;
                    frontier_phi_66_pred_1 = _2353;
                    frontier_phi_66_pred_2 = _2352;
                    frontier_phi_66_pred_3 = _2351;
                    frontier_phi_66_pred_4 = _2350;
                    frontier_phi_66_pred_5 = _2349;
                }
                _2125 = frontier_phi_66_pred;
                _2135 = frontier_phi_66_pred_1;
                _2133 = frontier_phi_66_pred_2;
                _2131 = frontier_phi_66_pred_3;
                _2129 = frontier_phi_66_pred_4;
                _2127 = frontier_phi_66_pred_5;
                uint _2283 = _2282 + 1u;
                if (_2283 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2276 = _2125;
                    _2277 = _2127;
                    _2278 = _2129;
                    _2279 = _2131;
                    _2280 = _2133;
                    _2281 = _2135;
                    _2282 = _2283;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2124 = _2125;
            _2126 = _2127;
            _2128 = _2129;
            _2130 = _2131;
            _2132 = _2133;
            _2134 = _2135;
        }
        uvec4 _2138 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2139 = _2138.z;
        uint _2141 = (_2139 >> 8u) & 15u;
        float _2247;
        float _2249;
        float _2251;
        float _2253;
        float _2255;
        float _2257;
        if (((4294967295u << _2141) & _1998) == 0u)
        {
            _2247 = _2124;
            _2249 = _2126;
            _2251 = _2128;
            _2253 = _2130;
            _2255 = _2132;
            _2257 = _2134;
        }
        else
        {
            float _2272 = inversesqrt(dot(vec3(_1952, _1953, _1954), vec3(_1952, _1953, _1954)));
            float frontier_phi_58_59_ladder;
            float frontier_phi_58_59_ladder_1;
            float frontier_phi_58_59_ladder_2;
            float frontier_phi_58_59_ladder_3;
            float frontier_phi_58_59_ladder_4;
            float frontier_phi_58_59_ladder_5;
            if (_2141 < ((_2139 >> 12u) & 15u))
            {
                float _2248;
                float _2250;
                float _2252;
                float _2254;
                float _2256;
                float _2258;
                float _2404 = _2124;
                float _2405 = _2126;
                float _2406 = _2128;
                float _2407 = _2130;
                float _2408 = _2132;
                float _2409 = _2134;
                uint _2410 = _2141;
                uint _2419;
                bool _2420;
                for (;;)
                {
                    _2419 = texelFetch(g_lightClassification, int((((_1992 << 5u) + (_1978 << 9u)) + (_2410 << 2u)) >> 2u)).x;
                    _2420 = _2419 == 0u;
                    float frontier_phi_77_pred;
                    float frontier_phi_77_pred_1;
                    float frontier_phi_77_pred_2;
                    float frontier_phi_77_pred_3;
                    float frontier_phi_77_pred_4;
                    float frontier_phi_77_pred_5;
                    if (_2420)
                    {
                        frontier_phi_77_pred = _2409;
                        frontier_phi_77_pred_1 = _2408;
                        frontier_phi_77_pred_2 = _2407;
                        frontier_phi_77_pred_3 = _2406;
                        frontier_phi_77_pred_4 = _2405;
                        frontier_phi_77_pred_5 = _2404;
                    }
                    else
                    {
                        float _2563;
                        float _2564;
                        float _2565;
                        float _2566;
                        float _2567;
                        float _2568;
                        float _2815;
                        float _2816;
                        float _2817;
                        float _2818;
                        float _2819;
                        float _2820;
                        float _2576 = _2404;
                        float _2577 = _2405;
                        float _2578 = _2406;
                        float _2579 = _2407;
                        float _2580 = _2408;
                        float _2581 = _2409;
                        uint _2582 = _2419;
                        uint _2583;
                        vec4 _2608;
                        float _2609;
                        vec4 _2624;
                        vec3 _2636;
                        vec4 _2652;
                        vec4 _2668;
                        float _2715;
                        bool _2716;
                        for (;;)
                        {
                            uint _2593 = ((_2410 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2582));
                            _2583 = (_2582 + 4294967295u) & _2582;
                            uint _2595 = _2593 * 40u;
                            _2608 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2595)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2595 + 3u)).x));
                            _2609 = _2608.w;
                            uint _2611 = (_2593 * 40u) + 4u;
                            _2624 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2611)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2611 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2611 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2611 + 3u)).x));
                            uint _2626 = (_2593 * 40u) + 8u;
                            _2636 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2626)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2626 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2626 + 2u)).x));
                            uint _2639 = (_2593 * 40u) + 16u;
                            _2652 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2639)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2639 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2639 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2639 + 3u)).x));
                            uint _2655 = (_2593 * 40u) + 20u;
                            _2668 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2655)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2655 + 3u)).x));
                            uint _2671 = (_2593 * 40u) + 24u;
                            vec4 _2684 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2671)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2671 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2671 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2671 + 3u)).x));
                            uint _2690 = (_2593 * 40u) + 28u;
                            vec4 _2703 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2690)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2690 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2690 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2690 + 3u)).x));
                            _2715 = fma(_1954, _2703.z, fma(_1953, _2703.y, _2703.x * _1952)) + _2703.w;
                            _2716 = !((fma(_1954, _2684.z, fma(_1953, _2684.y, _2684.x * _1952)) + _2684.w) <= 0.0);
                            float frontier_phi_83_pred;
                            float frontier_phi_83_pred_1;
                            float frontier_phi_83_pred_2;
                            float frontier_phi_83_pred_3;
                            float frontier_phi_83_pred_4;
                            float frontier_phi_83_pred_5;
                            if (_2716)
                            {
                                float _2743 = _2608.x - _1952;
                                float _2744 = _2608.y - _1953;
                                float _2745 = _2608.z - _1954;
                                float _2746 = dot(vec3(_2743, _2744, _2745), vec3(_2743, _2744, _2745));
                                float _2749 = inversesqrt(_2746);
                                float _2750 = _2749 * _2743;
                                float _2751 = _2749 * _2744;
                                float _2752 = _2749 * _2745;
                                float _2756 = 1.0 - (_2746 / (_2609 * _2609));
                                float _3696 = isnan(0.0) ? _2756 : (isnan(_2756) ? 0.0 : max(_2756, 0.0));
                                float _2757 = isnan(1.0) ? _3696 : (isnan(_3696) ? 1.0 : min(_3696, 1.0));
                                float _2761 = sqrt(_2746) * _2624.w;
                                float _2763 = 1.39999997615814208984375 / (_2761 + 1.39999997615814208984375);
                                float _2764 = _2763 * _2763;
                                float _2765 = 1.0 - _2764;
                                float _2767 = (_2765 * dot(vec3(_2750, _2751, _2752), vec3(_331, _334, _337))) + _2764;
                                float _2770 = _2761 * _2761;
                                float _2774 = (fma(_1954, _2652.z, fma(_1953, _2652.y, _2652.x * _1952)) + _2652.w) / _2715;
                                float _2775 = (fma(_1954, _2668.z, fma(_1953, _2668.y, _2668.x * _1952)) + _2668.w) / _2715;
                                float _2779 = 1.0 - dot(vec2(_2774, _2775), vec2(_2774, _2775));
                                float _3712 = isnan(0.0) ? _2779 : (isnan(_2779) ? 0.0 : max(_2779, 0.0));
                                float _2780 = isnan(1.0) ? _3712 : (isnan(_3712) ? 1.0 : min(_3712, 1.0));
                                float _2781 = _2780 * (((isnan(0.0) ? _2767 : (isnan(_2767) ? 0.0 : max(_2767, 0.0))) * _2757) / ((_2770 * 0.699999988079071044921875) + 1.0));
                                float _2791 = dot(vec3(_331, _334, _337), vec3((-0.0) - (_1952 * _2272), (-0.0) - (_1953 * _2272), (-0.0) - (_1954 * _2272)));
                                float _3723 = isnan(0.0) ? _2791 : (isnan(_2791) ? 0.0 : max(_2791, 0.0));
                                float _2799 = (_2765 * dot(vec3(_331, _334, _337), vec3(_2750, _2751, _2752))) + _2764;
                                float _3734 = isnan(0.0) ? _2799 : (isnan(_2799) ? 0.0 : max(_2799, 0.0));
                                float _2800 = isnan(1.0) ? _3734 : (isnan(_3734) ? 1.0 : min(_3734, 1.0));
                                float _2804 = (0.5 / (((isnan(1.0) ? _3723 : (isnan(_3723) ? 1.0 : min(_3723, 1.0))) + 9.9999999392252902907785028219223e-09) + _2800)) * _2800;
                                float _3745 = isnan(0.0) ? _2804 : (isnan(_2804) ? 0.0 : max(_2804, 0.0));
                                float _2811 = (_2780 * _2757) * (((isnan(1.0) ? _3745 : (isnan(_3745) ? 1.0 : min(_3745, 1.0))) * 3.1415927410125732421875) / ((_2770 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_83_pred = _2781 * _2624.y;
                                frontier_phi_83_pred_1 = _2781 * _2624.x;
                                frontier_phi_83_pred_2 = _2811 * _2636.z;
                                frontier_phi_83_pred_3 = _2811 * _2636.y;
                                frontier_phi_83_pred_4 = _2811 * _2636.x;
                                frontier_phi_83_pred_5 = _2781 * _2624.z;
                            }
                            else
                            {
                                frontier_phi_83_pred = 0.0;
                                frontier_phi_83_pred_1 = 0.0;
                                frontier_phi_83_pred_2 = 0.0;
                                frontier_phi_83_pred_3 = 0.0;
                                frontier_phi_83_pred_4 = 0.0;
                                frontier_phi_83_pred_5 = 0.0;
                            }
                            _2819 = frontier_phi_83_pred;
                            _2818 = frontier_phi_83_pred_1;
                            _2817 = frontier_phi_83_pred_2;
                            _2816 = frontier_phi_83_pred_3;
                            _2815 = frontier_phi_83_pred_4;
                            _2820 = frontier_phi_83_pred_5;
                            _2566 = _2818 + _2579;
                            _2567 = _2819 + _2580;
                            _2568 = _2820 + _2581;
                            _2563 = _2815 + _2576;
                            _2564 = _2816 + _2577;
                            _2565 = _2817 + _2578;
                            if (_2583 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2576 = _2563;
                                _2577 = _2564;
                                _2578 = _2565;
                                _2579 = _2566;
                                _2580 = _2567;
                                _2581 = _2568;
                                _2582 = _2583;
                                continue;
                            }
                        }
                        frontier_phi_77_pred = _2568;
                        frontier_phi_77_pred_1 = _2567;
                        frontier_phi_77_pred_2 = _2566;
                        frontier_phi_77_pred_3 = _2565;
                        frontier_phi_77_pred_4 = _2564;
                        frontier_phi_77_pred_5 = _2563;
                    }
                    _2258 = frontier_phi_77_pred;
                    _2256 = frontier_phi_77_pred_1;
                    _2254 = frontier_phi_77_pred_2;
                    _2252 = frontier_phi_77_pred_3;
                    _2250 = frontier_phi_77_pred_4;
                    _2248 = frontier_phi_77_pred_5;
                    uint _2411 = _2410 + 1u;
                    if (_2411 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2404 = _2248;
                        _2405 = _2250;
                        _2406 = _2252;
                        _2407 = _2254;
                        _2408 = _2256;
                        _2409 = _2258;
                        _2410 = _2411;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_58_59_ladder = _2252;
                frontier_phi_58_59_ladder_1 = _2258;
                frontier_phi_58_59_ladder_2 = _2256;
                frontier_phi_58_59_ladder_3 = _2254;
                frontier_phi_58_59_ladder_4 = _2250;
                frontier_phi_58_59_ladder_5 = _2248;
            }
            else
            {
                frontier_phi_58_59_ladder = _2128;
                frontier_phi_58_59_ladder_1 = _2134;
                frontier_phi_58_59_ladder_2 = _2132;
                frontier_phi_58_59_ladder_3 = _2130;
                frontier_phi_58_59_ladder_4 = _2126;
                frontier_phi_58_59_ladder_5 = _2124;
            }
            _2247 = frontier_phi_58_59_ladder_5;
            _2249 = frontier_phi_58_59_ladder_4;
            _2251 = frontier_phi_58_59_ladder;
            _2253 = frontier_phi_58_59_ladder_3;
            _2255 = frontier_phi_58_59_ladder_2;
            _2257 = frontier_phi_58_59_ladder_1;
        }
        float _2262 = isnan(1.0) ? _376 : (isnan(_376) ? 1.0 : min(_376, 1.0));
        _2011 = (_2262 * _2253) + _1571;
        _2013 = (_2262 * _2255) + _1573;
        _2015 = (_2262 * _2257) + _1575;
        _2017 = ((_2247 * 0.039999999105930328369140625) * _2262) + _1823;
        _2019 = ((_2249 * 0.039999999105930328369140625) * _2262) + _1825;
        _2021 = ((_2251 * 0.039999999105930328369140625) * _2262) + _1827;
    }
    else
    {
        _2011 = _1571;
        _2013 = _1573;
        _2015 = _1575;
        _2017 = _1823;
        _2019 = _1825;
        _2021 = _1827;
    }
    uint _2027 = _352 + uint(cbMatDynParam._m0[0u].w);
    float _3761 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _3772 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _3783 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    float _2058 = (((isnan(1.0) ? _3761 : (isnan(_3761) ? 1.0 : min(_3761, 1.0))) * (_2011 + ((isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0))) * _376))) + ((_2017 + ((isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0))) * _1187)) * cbPerFrame._m0[3u].x)) + (((cbMtdParam._m0[11u].x * _189) * cbMtdParam._m0[10u].x) * cbInstanceData._m0[_2027].x);
    float _2060 = ((((cbMtdParam._m0[11u].x * _190) * cbMtdParam._m0[10u].y) * cbInstanceData._m0[_2027].y) + ((_2019 + ((isnan(0.0) ? _1404 : (isnan(_1404) ? 0.0 : max(_1404, 0.0))) * _1187)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3772 : (isnan(_3772) ? 1.0 : min(_3772, 1.0))) * (_2013 + ((isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0))) * _376)));
    float _2062 = ((((cbMtdParam._m0[11u].x * _191) * cbMtdParam._m0[10u].z) * cbInstanceData._m0[_2027].z) + ((_2021 + ((isnan(0.0) ? _1407 : (isnan(_1407) ? 0.0 : max(_1407, 0.0))) * _1187)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3783 : (isnan(_3783) ? 1.0 : min(_3783, 1.0))) * (_2015 + ((isnan(0.0) ? _1114 : (isnan(_1114) ? 0.0 : max(_1114, 0.0))) * _376)));
    float _2063 = isnan(0.0) ? _2058 : (isnan(_2058) ? 0.0 : max(_2058, 0.0));
    float _2064 = isnan(0.0) ? _2060 : (isnan(_2060) ? 0.0 : max(_2060, 0.0));
    float _2065 = isnan(0.0) ? _2062 : (isnan(_2062) ? 0.0 : max(_2062, 0.0));
    uint _2066 = _350 + 6u;
    float _2074 = _310 / cbSceneParam._m0[86u].x;
    float _2075 = _311 / cbSceneParam._m0[86u].y;
    vec4 _2089 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2074, _2075, (log2((isnan(cbSceneParam._m0[77u].w) ? _231 : (isnan(_231) ? cbSceneParam._m0[77u].w : min(_231, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2091 = _2089.x;
    float _2092 = _2089.y;
    float _2093 = _2089.z;
    float _2094 = _2089.w;
    float _2187;
    float _2189;
    float _2191;
    float _2193;
    if (_231 > cbSceneParam._m0[78u].w)
    {
        float _2149 = isnan(_231) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _231 : min(cbSceneParam._m0[80u].w, _231));
        float _2150 = _2149 / _231;
        float _2161 = _2150 * _282;
        float _2162 = _283 * _2150;
        float _2163 = (-0.0) - _2162;
        float _2165 = _2150 * _284;
        float _2167 = (cbSceneParam._m0[77u].w * _2163) / _2149;
        float _2168 = _2167 + cbSceneParam._m0[79u].w;
        float _2169 = cbSceneParam._m0[79u].w - _2162;
        float _2175 = sqrt(((_2161 * _2161) + (_2162 * _2162)) + (_2165 * _2165));
        float _2178 = (1.0 - (cbSceneParam._m0[77u].w / _2149)) * _2175;
        float _2183 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2185 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2361;
        if (abs((_2163 - _2167) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2361 = ((((_2168 > 0.0) ? exp2(_2183 * _2168) : (2.0 - exp2(_2185 * _2168))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2178;
        }
        else
        {
            float _2305 = 1.0 / cbSceneParam._m0[80u].x;
            float _2306 = isnan(_2169) ? _2168 : (isnan(_2168) ? _2169 : max(_2168, _2169));
            float _2307 = isnan(_2169) ? _2168 : (isnan(_2168) ? _2169 : min(_2168, _2169));
            float _2316 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : min(_2306, 0.0));
            float _2317 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : min(_2307, 0.0));
            _2361 = ((abs(_2175 / _2163) * cbSceneParam._m0[80u].y) * ((((_2316 - _2317) * 2.0) - ((exp2(_2183 * (isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0)))) - exp2(_2183 * (isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0))))) * _2305)) - ((exp2(_2185 * _2316) - exp2(_2185 * _2317)) * _2305))) + (_2178 * cbSceneParam._m0[80u].z);
        }
        vec4 _2363 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2074, _2075, 1.0), 0.0);
        float _2372 = exp2((_2361 * (-1.44269502162933349609375)) * (1.0 - _2363.w));
        float _2373 = log2(_2372);
        float _2389 = log2(_2094);
        _2187 = (exp2(_2389 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2373 * cbSceneParam._m0[78u].x)) * _2363.x) / cbSceneParam._m0[78u].x)) + _2091;
        _2189 = (exp2(_2389 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2373 * cbSceneParam._m0[78u].y)) * _2363.y) / cbSceneParam._m0[78u].y)) + _2092;
        _2191 = (exp2(_2389 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2373 * cbSceneParam._m0[78u].z)) * _2363.z) / cbSceneParam._m0[78u].z)) + _2093;
        _2193 = _2372 * _2094;
    }
    else
    {
        _2187 = _2091;
        _2189 = _2092;
        _2191 = _2093;
        _2193 = _2094;
    }
    bool _2399;
    vec4 _2203;
    vec4 _2226;
    float _2228;
    float _2232;
    float _2233;
    float _2234;
    float _2235;
    bool _2246;
    for (;;)
    {
        _2203 = cbMatDynParam._m0[0u];
        float _2205 = roundEven(_2203.y);
        bool _2206 = _2205 == 3.0;
        float _2208 = log2(_2193);
        float _2215 = exp2(_2208 * cbSceneParam._m0[78u].x) * _2063;
        float _2216 = exp2(_2208 * cbSceneParam._m0[78u].y) * _2064;
        float _2217 = exp2(_2208 * cbSceneParam._m0[78u].z) * _2065;
        float _2224 = _298 + (-0.5);
        _2226 = cbMtdParam._m0[1u];
        _2228 = _2226.y * _2224;
        float _2231 = (_2205 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _2232 = _2231 * (_2206 ? _2215 : (_2215 + (cbSceneParam._m0[72u].w * _2187)));
        _2233 = _2231 * (_2206 ? _2216 : (_2216 + (cbSceneParam._m0[72u].w * _2189)));
        _2234 = _2231 * (_2206 ? _2217 : (_2217 + (cbSceneParam._m0[72u].w * _2191)));
        _2235 = _2224 * 0.999000012874603271484375;
        _2246 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_2246)
        {
            if ((cbInstanceData._m0[_350 + 7u].x + _2235) < 0.5)
            {
                _2399 = true;
                break;
            }
        }
        uint _2340 = _352 + uint(_2203.w);
        if ((cbInstanceData._m0[_2340].w < 1.0) && ((cbInstanceData._m0[_2340].w + _2235) < 0.5))
        {
            _2399 = true;
            break;
        }
        if ((_2228 + 1.0) < _2226.x)
        {
            _2399 = true;
            break;
        }
        _2399 = false;
        break;
    }
    float _2554;
    if (_2399)
    {
        discard_state = true;
        _2554 = 0.0;
    }
    else
    {
        _2554 = cbInstanceData._m0[_2066].w;
    }
    SV_Target.x = _2232;
    SV_Target.y = _2233;
    SV_Target.z = _2234;
    SV_Target.w = _2554;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2066].w;
    discard_exit();
}


