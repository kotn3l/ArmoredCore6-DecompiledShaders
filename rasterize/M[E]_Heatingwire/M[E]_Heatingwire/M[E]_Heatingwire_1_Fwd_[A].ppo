#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_1;
layout(set = 0, binding = 1) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_2;
layout(set = 0, binding = 2) uniform texture2D M_E_Heatingwire_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _800;
float _801;
float _802;
float _803;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _144 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _145 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _146 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _152 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _156 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _157 = _156 * NORMAL.x;
    float _158 = _156 * NORMAL.y;
    float _159 = _156 * NORMAL.z;
    float _163 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _171;
    float _172;
    float _173;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _171 = (-0.0) - _157;
        _172 = (-0.0) - _158;
        _173 = (-0.0) - _159;
    }
    else
    {
        _171 = _157;
        _172 = _158;
        _173 = _159;
    }
    float _217 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _227 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _217);
    float _228 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _217);
    float _229 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _217);
    float _234 = cbMtdParam._m0[13u].z * TEXCOORD_1.z;
    float _246 = fma(0.9055385589599609375, _171, fma(0.2999999523162841796875, _163 * TANGENT.x, (_144 * 0.2999999523162841796875) * _152));
    float _251 = fma(0.9055385589599609375, _172, fma(0.2999999523162841796875, _163 * TANGENT.y, (_145 * 0.2999999523162841796875) * _152));
    float _255 = fma(0.9055385589599609375, _173, fma(0.2999999523162841796875, _163 * TANGENT.z, (_146 * 0.2999999523162841796875) * _152));
    float _259 = inversesqrt(dot(vec3(_246, _251, _255), vec3(_246, _251, _255)));
    float _266 = inversesqrt(dot(vec3(_227, _228, _229), vec3(_227, _228, _229)));
    float _273 = dot(vec4(_266 * _227, _266 * _228, _266 * _229, 0.0), vec4(_259 * _246, _259 * _251, _259 * _255, 0.0)) - cbMtdParam._m0[13u].x;
    float _812 = isnan(0.0) ? _273 : (isnan(_273) ? 0.0 : max(_273, 0.0));
    float _281 = exp2(log2(1.0 - (isnan(1.0) ? _812 : (isnan(_812) ? 1.0 : min(_812, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].y : (isnan(cbMtdParam._m0[13u].y) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].y, 0.001000000047497451305389404296875))));
    float _304 = abs((fract(cbMtdParam._m0[14u].x * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _828 = isnan(0.0) ? _304 : (isnan(_304) ? 0.0 : max(_304, 0.0));
    float _305 = isnan(1.0) ? _828 : (isnan(_828) ? 1.0 : min(_828, 1.0));
    float _310 = (_305 * _305) * (3.0 - (_305 * 2.0));
    vec4 _329 = texture(sampler2D(M_E_Heatingwire_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    vec4 _369 = texture(sampler2D(M_E_Heatingwire_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _400 = texture(sampler2D(M_E_Heatingwire_snp_0_Texture2D_3, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x) + TEXCOORD_1.x) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, (((cbMtdParam._m0[15u].z * cbPerFrame._m0[22u].x) + TEXCOORD_1.y) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _839 = isnan(0.0) ? _234 : (isnan(_234) ? 0.0 : max(_234, 0.0));
    float _436 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    vec4 _441 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _443 = _441.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _530 = sqrt(((_227 * _227) + (_228 * _228)) + (_229 * _229));
        float _537 = (cbMatDynParam._m0[5u].x * _530) + cbMatDynParam._m0[5u].y;
        float _850 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
        float _538 = isnan(1.0) ? _850 : (isnan(_850) ? 1.0 : min(_850, 1.0));
        float _542 = (cbMatDynParam._m0[5u].z * _530) + cbMatDynParam._m0[5u].w;
        float _861 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _861 : (isnan(_861) ? 1.0 : min(_861, 1.0))) - _538)) + _538) < ((_443 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _461 = uint(roundEven(NORMAL.w)) * 13u;
    uint _462 = _461 + 9u;
    uint _463 = _462 + uint(cbMatDynParam._m0[0u].w);
    float _469 = (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].x) * _310) * _329.x) + ((cbMtdParam._m0[9u].x * TEXCOORD_1.z) * _281)) + (_369.x * cbMtdParam._m0[11u].x)) + (_400.x * cbMtdParam._m0[12u].x)) * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_463].x;
    float _470 = (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].y) * _310) * _329.y) + ((cbMtdParam._m0[9u].y * TEXCOORD_1.z) * _281)) + (_369.y * cbMtdParam._m0[11u].y)) + (_400.y * cbMtdParam._m0[12u].y)) * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_463].y;
    float _471 = (((((((cbMtdParam._m0[13u].w * cbMtdParam._m0[10u].z) * _310) * _329.z) + ((cbMtdParam._m0[9u].z * TEXCOORD_1.z) * _281)) + (_369.z * cbMtdParam._m0[11u].z)) + (_400.z * cbMtdParam._m0[12u].z)) * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_463].z;
    float _472 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _473 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _474 = isnan(0.0) ? _471 : (isnan(_471) ? 0.0 : max(_471, 0.0));
    float _480 = cbMtdParam._m0[2u].x * _469;
    float _481 = cbMtdParam._m0[2u].y * _470;
    float _482 = cbMtdParam._m0[2u].z * _471;
    float _887 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _484 = isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0));
    float _489 = cbInstanceData._m0[_461 + 6u].w * (isnan(1.0) ? _839 : (isnan(_839) ? 1.0 : min(_839, 1.0)));
    float _495 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _496 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _511 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_495, _496, (log2((isnan(cbSceneParam._m0[77u].w) ? _436 : (isnan(_436) ? cbSceneParam._m0[77u].w : min(_436, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _513 = _511.x;
    float _514 = _511.y;
    float _515 = _511.z;
    float _516 = _511.w;
    float _597;
    float _599;
    float _601;
    float _603;
    if (_436 > cbSceneParam._m0[78u].w)
    {
        float _559 = isnan(_436) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _436 : min(cbSceneParam._m0[80u].w, _436));
        float _560 = _559 / _436;
        float _571 = _560 * _227;
        float _572 = _228 * _560;
        float _573 = (-0.0) - _572;
        float _574 = _560 * _229;
        float _576 = (cbSceneParam._m0[77u].w * _573) / _559;
        float _577 = _576 + cbSceneParam._m0[79u].w;
        float _578 = cbSceneParam._m0[79u].w - _572;
        float _584 = sqrt(((_571 * _571) + (_572 * _572)) + (_574 * _574));
        float _587 = (1.0 - (cbSceneParam._m0[77u].w / _559)) * _584;
        float _593 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _595 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _726;
        if (abs((_573 - _576) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _726 = ((((_577 > 0.0) ? exp2(_593 * _577) : (2.0 - exp2(_595 * _577))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _587;
        }
        else
        {
            float _681 = 1.0 / cbSceneParam._m0[80u].x;
            float _682 = isnan(_578) ? _577 : (isnan(_577) ? _578 : max(_577, _578));
            float _683 = isnan(_578) ? _577 : (isnan(_577) ? _578 : min(_577, _578));
            float _692 = isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : min(_682, 0.0));
            float _693 = isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : min(_683, 0.0));
            _726 = ((abs(_584 / _573) * cbSceneParam._m0[80u].y) * ((((_692 - _693) * 2.0) - ((exp2(_593 * (isnan(0.0) ? _682 : (isnan(_682) ? 0.0 : max(_682, 0.0)))) - exp2(_593 * (isnan(0.0) ? _683 : (isnan(_683) ? 0.0 : max(_683, 0.0))))) * _681)) - ((exp2(_595 * _692) - exp2(_595 * _693)) * _681))) + (_587 * cbSceneParam._m0[80u].z);
        }
        vec4 _728 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_495, _496, 1.0), 0.0);
        float _737 = exp2((_726 * (-1.44269502162933349609375)) * (1.0 - _728.w));
        float _738 = log2(_737);
        float _754 = log2(_516);
        _597 = (exp2(_754 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_738 * cbSceneParam._m0[78u].x)) * _728.x) / cbSceneParam._m0[78u].x)) + _513;
        _599 = (exp2(_754 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_738 * cbSceneParam._m0[78u].y)) * _728.y) / cbSceneParam._m0[78u].y)) + _514;
        _601 = (exp2(_754 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_738 * cbSceneParam._m0[78u].z)) * _728.z) / cbSceneParam._m0[78u].z)) + _515;
        _603 = _737 * _516;
    }
    else
    {
        _597 = _513;
        _599 = _514;
        _601 = _515;
        _603 = _516;
    }
    bool _764;
    vec4 _613;
    vec4 _636;
    float _638;
    float _642;
    float _643;
    float _644;
    float _647;
    float _650;
    float _653;
    float _654;
    bool _665;
    for (;;)
    {
        _613 = cbMatDynParam._m0[0u];
        float _615 = roundEven(_613.y);
        bool _616 = _615 == 3.0;
        float _617 = log2(_603);
        float _621 = exp2(_617 * cbSceneParam._m0[78u].x);
        float _622 = exp2(_617 * cbSceneParam._m0[78u].y);
        float _623 = exp2(_617 * cbSceneParam._m0[78u].z);
        float _624 = _621 * _472;
        float _625 = _622 * _473;
        float _626 = _623 * _474;
        float _633 = _443 + (-0.5);
        _636 = cbMtdParam._m0[1u];
        _638 = _636.y * _633;
        float _641 = (_615 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _642 = _641 * (_616 ? _624 : (_624 + (cbSceneParam._m0[72u].w * _597)));
        _643 = _641 * (_616 ? _625 : (_625 + (cbSceneParam._m0[72u].w * _599)));
        _644 = _641 * (_616 ? _626 : (_626 + (cbSceneParam._m0[72u].w * _601)));
        _647 = ((_480 * _484) * _621) * _641;
        _650 = ((_481 * _484) * _622) * _641;
        _653 = ((_482 * _484) * _623) * _641;
        _654 = _633 * 0.999000012874603271484375;
        _665 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_665)
        {
            if ((cbInstanceData._m0[_461 + 7u].x + _654) < 0.5)
            {
                _764 = true;
                break;
            }
        }
        uint _718 = _462 + uint(_613.w);
        if ((cbInstanceData._m0[_718].w < 1.0) && ((cbInstanceData._m0[_718].w + _654) < 0.5))
        {
            _764 = true;
            break;
        }
        if ((_638 + 1.0) < _636.x)
        {
            _764 = true;
            break;
        }
        _764 = false;
        break;
    }
    float _769;
    if (_764)
    {
        discard_state = true;
        _769 = 0.0;
    }
    else
    {
        _769 = _489;
    }
    SV_Target.x = _642;
    SV_Target.y = _643;
    SV_Target.z = _644;
    SV_Target.w = _769;
    SV_Target_1.x = _647;
    SV_Target_1.y = _650;
    SV_Target_1.z = _653;
    SV_Target_1.w = _489;
    discard_exit();
}


