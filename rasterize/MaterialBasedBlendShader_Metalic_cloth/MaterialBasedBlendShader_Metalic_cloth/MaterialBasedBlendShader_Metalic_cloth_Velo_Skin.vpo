#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[25];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_12;
layout(location = 6, component = 1) out vec3 TEXCOORD_13;

void main()
{
    uint _90 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _227 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _229 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _230 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _237 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _238 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _239 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _241 = float(BLENDINDICES.x);
    float _242 = float(BLENDINDICES.y);
    float _243 = float(BLENDINDICES.z);
    float _244 = float(BLENDINDICES.w);
    bool _250 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _471;
    float _472;
    float _473;
    float _474;
    float _475;
    float _476;
    float _477;
    float _478;
    float _479;
    float _480;
    float _481;
    float _482;
    if (_250)
    {
        uint _255 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
        precise float _259 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _264 = isnan(_259) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _259 : max(0.001000000047497451305389404296875, _259));
        precise float _266 = BLENDWEIGHT.x / _264;
        precise float _267 = BLENDWEIGHT.y / _264;
        precise float _268 = BLENDWEIGHT.z / _264;
        precise float _269 = BLENDWEIGHT.w / _264;
        uvec4 _276 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_255)).x * 13u) + 4u]);
        uint _277 = _276.x;
        uint _279 = (_277 + uint(_241)) * 3u;
        uint _286 = _279 + 1u;
        uint _293 = _279 + 2u;
        precise float _300 = _266 * cbObjMatrix._m0[_279].x;
        precise float _301 = _266 * cbObjMatrix._m0[_286].x;
        precise float _302 = _266 * cbObjMatrix._m0[_293].x;
        precise float _303 = _266 * cbObjMatrix._m0[_279].y;
        precise float _304 = _266 * cbObjMatrix._m0[_286].y;
        precise float _305 = _266 * cbObjMatrix._m0[_293].y;
        precise float _306 = _266 * cbObjMatrix._m0[_279].z;
        precise float _307 = _266 * cbObjMatrix._m0[_286].z;
        precise float _308 = _266 * cbObjMatrix._m0[_293].z;
        precise float _309 = _266 * cbObjMatrix._m0[_279].w;
        precise float _310 = _266 * cbObjMatrix._m0[_286].w;
        precise float _311 = _266 * cbObjMatrix._m0[_293].w;
        uint _314 = (_277 + uint(_242)) * 3u;
        uint _321 = _314 + 1u;
        uint _328 = _314 + 2u;
        precise float _335 = _267 * cbObjMatrix._m0[_314].x;
        precise float _336 = _267 * cbObjMatrix._m0[_321].x;
        precise float _337 = _267 * cbObjMatrix._m0[_328].x;
        precise float _338 = _267 * cbObjMatrix._m0[_314].y;
        precise float _339 = _267 * cbObjMatrix._m0[_321].y;
        precise float _340 = _267 * cbObjMatrix._m0[_328].y;
        precise float _341 = _267 * cbObjMatrix._m0[_314].z;
        precise float _342 = _267 * cbObjMatrix._m0[_321].z;
        precise float _343 = _267 * cbObjMatrix._m0[_328].z;
        precise float _344 = _267 * cbObjMatrix._m0[_314].w;
        precise float _345 = _267 * cbObjMatrix._m0[_321].w;
        precise float _346 = _267 * cbObjMatrix._m0[_328].w;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        precise float _354 = _307 + _342;
        precise float _355 = _308 + _343;
        precise float _356 = _309 + _344;
        precise float _357 = _310 + _345;
        precise float _358 = _311 + _346;
        uint _361 = (_277 + uint(_243)) * 3u;
        uint _368 = _361 + 1u;
        uint _375 = _361 + 2u;
        precise float _382 = _268 * cbObjMatrix._m0[_361].x;
        precise float _383 = _268 * cbObjMatrix._m0[_368].x;
        precise float _384 = _268 * cbObjMatrix._m0[_375].x;
        precise float _385 = _268 * cbObjMatrix._m0[_361].y;
        precise float _386 = _268 * cbObjMatrix._m0[_368].y;
        precise float _387 = _268 * cbObjMatrix._m0[_375].y;
        precise float _388 = _268 * cbObjMatrix._m0[_361].z;
        precise float _389 = _268 * cbObjMatrix._m0[_368].z;
        precise float _390 = _268 * cbObjMatrix._m0[_375].z;
        precise float _391 = _268 * cbObjMatrix._m0[_361].w;
        precise float _392 = _268 * cbObjMatrix._m0[_368].w;
        precise float _393 = _268 * cbObjMatrix._m0[_375].w;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        precise float _401 = _354 + _389;
        precise float _402 = _355 + _390;
        precise float _403 = _356 + _391;
        precise float _404 = _357 + _392;
        precise float _405 = _358 + _393;
        uint _408 = (_277 + uint(_244)) * 3u;
        uint _415 = _408 + 1u;
        uint _422 = _408 + 2u;
        precise float _429 = _269 * cbObjMatrix._m0[_408].x;
        precise float _430 = _269 * cbObjMatrix._m0[_415].x;
        precise float _431 = _269 * cbObjMatrix._m0[_422].x;
        precise float _432 = _269 * cbObjMatrix._m0[_408].y;
        precise float _433 = _269 * cbObjMatrix._m0[_415].y;
        precise float _434 = _269 * cbObjMatrix._m0[_422].y;
        precise float _435 = _269 * cbObjMatrix._m0[_408].z;
        precise float _436 = _269 * cbObjMatrix._m0[_415].z;
        precise float _437 = _269 * cbObjMatrix._m0[_422].z;
        precise float _438 = _269 * cbObjMatrix._m0[_408].w;
        precise float _439 = _269 * cbObjMatrix._m0[_415].w;
        precise float _440 = _269 * cbObjMatrix._m0[_422].w;
        precise float _441 = _394 + _429;
        precise float _442 = _395 + _430;
        precise float _443 = _396 + _431;
        precise float _444 = _397 + _432;
        precise float _445 = _398 + _433;
        precise float _446 = _399 + _434;
        precise float _447 = _400 + _435;
        precise float _448 = _401 + _436;
        precise float _449 = _402 + _437;
        precise float _450 = _403 + _438;
        precise float _451 = _404 + _439;
        precise float _452 = _405 + _440;
        _471 = _441;
        _472 = _444;
        _473 = _447;
        _474 = _450;
        _475 = _442;
        _476 = _445;
        _477 = _448;
        _478 = _451;
        _479 = _443;
        _480 = _446;
        _481 = _449;
        _482 = _452;
    }
    else
    {
        _471 = cbvModelParam._m0[0u].x;
        _472 = cbvModelParam._m0[0u].y;
        _473 = cbvModelParam._m0[0u].z;
        _474 = cbvModelParam._m0[0u].w;
        _475 = cbvModelParam._m0[1u].x;
        _476 = cbvModelParam._m0[1u].y;
        _477 = cbvModelParam._m0[1u].z;
        _478 = cbvModelParam._m0[1u].w;
        _479 = cbvModelParam._m0[2u].x;
        _480 = cbvModelParam._m0[2u].y;
        _481 = cbvModelParam._m0[2u].z;
        _482 = cbvModelParam._m0[2u].w;
    }
    precise float _483 = POSITION.x * _471;
    precise float _484 = POSITION.y * _472;
    precise float _485 = _484 + _483;
    precise float _486 = POSITION.z * _473;
    precise float _487 = _486 + _485;
    precise float _488 = 1.0 * _474;
    precise float _489 = _488 + _487;
    precise float _490 = POSITION.x * _475;
    precise float _491 = POSITION.y * _476;
    precise float _492 = _491 + _490;
    precise float _493 = POSITION.z * _477;
    precise float _494 = _493 + _492;
    precise float _495 = 1.0 * _478;
    precise float _496 = _495 + _494;
    precise float _497 = POSITION.x * _479;
    precise float _498 = POSITION.y * _480;
    precise float _499 = _498 + _497;
    precise float _500 = POSITION.z * _481;
    precise float _501 = _500 + _499;
    precise float _502 = 1.0 * _482;
    precise float _503 = _502 + _501;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    float _728;
    float _729;
    float _730;
    float _731;
    float _732;
    if (_250)
    {
        float _504 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _507 = isnan(_504) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _504 : max(0.001000000047497451305389404296875, _504));
        float _508 = BLENDWEIGHT.x / _507;
        float _509 = BLENDWEIGHT.y / _507;
        float _510 = BLENDWEIGHT.z / _507;
        float _511 = BLENDWEIGHT.w / _507;
        uint _517 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
        uvec4 _525 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_517)).x * 13u) + 4u]);
        uint _526 = _525.x;
        uint _528 = (_526 + uint(_241)) * 3u;
        uint _535 = _528 + 1u;
        uint _542 = _528 + 2u;
        uint _563 = (_526 + uint(_242)) * 3u;
        uint _570 = _563 + 1u;
        uint _577 = _563 + 2u;
        uint _610 = (_526 + uint(_243)) * 3u;
        uint _617 = _610 + 1u;
        uint _624 = _610 + 2u;
        uint _657 = (_526 + uint(_244)) * 3u;
        uint _664 = _657 + 1u;
        uint _671 = _657 + 2u;
        _721 = (((cbPrevObjMatrix._m0[_563].x * _509) + (cbPrevObjMatrix._m0[_528].x * _508)) + (cbPrevObjMatrix._m0[_610].x * _510)) + (cbPrevObjMatrix._m0[_657].x * _511);
        _722 = (((cbPrevObjMatrix._m0[_563].y * _509) + (cbPrevObjMatrix._m0[_528].y * _508)) + (cbPrevObjMatrix._m0[_610].y * _510)) + (cbPrevObjMatrix._m0[_657].y * _511);
        _723 = (((cbPrevObjMatrix._m0[_563].z * _509) + (cbPrevObjMatrix._m0[_528].z * _508)) + (cbPrevObjMatrix._m0[_610].z * _510)) + (cbPrevObjMatrix._m0[_657].z * _511);
        _724 = (((cbPrevObjMatrix._m0[_563].w * _509) + (cbPrevObjMatrix._m0[_528].w * _508)) + (cbPrevObjMatrix._m0[_610].w * _510)) + (cbPrevObjMatrix._m0[_657].w * _511);
        _725 = (((cbPrevObjMatrix._m0[_570].x * _509) + (cbPrevObjMatrix._m0[_535].x * _508)) + (cbPrevObjMatrix._m0[_617].x * _510)) + (cbPrevObjMatrix._m0[_664].x * _511);
        _726 = (((cbPrevObjMatrix._m0[_570].y * _509) + (cbPrevObjMatrix._m0[_535].y * _508)) + (cbPrevObjMatrix._m0[_617].y * _510)) + (cbPrevObjMatrix._m0[_664].y * _511);
        _727 = (((cbPrevObjMatrix._m0[_570].z * _509) + (cbPrevObjMatrix._m0[_535].z * _508)) + (cbPrevObjMatrix._m0[_617].z * _510)) + (cbPrevObjMatrix._m0[_664].z * _511);
        _728 = (((cbPrevObjMatrix._m0[_570].w * _509) + (cbPrevObjMatrix._m0[_535].w * _508)) + (cbPrevObjMatrix._m0[_617].w * _510)) + (cbPrevObjMatrix._m0[_664].w * _511);
        _729 = (((cbPrevObjMatrix._m0[_577].x * _509) + (cbPrevObjMatrix._m0[_542].x * _508)) + (cbPrevObjMatrix._m0[_624].x * _510)) + (cbPrevObjMatrix._m0[_671].x * _511);
        _730 = (((cbPrevObjMatrix._m0[_577].y * _509) + (cbPrevObjMatrix._m0[_542].y * _508)) + (cbPrevObjMatrix._m0[_624].y * _510)) + (cbPrevObjMatrix._m0[_671].y * _511);
        _731 = (((cbPrevObjMatrix._m0[_577].z * _509) + (cbPrevObjMatrix._m0[_542].z * _508)) + (cbPrevObjMatrix._m0[_624].z * _510)) + (cbPrevObjMatrix._m0[_671].z * _511);
        _732 = (((cbPrevObjMatrix._m0[_577].w * _509) + (cbPrevObjMatrix._m0[_542].w * _508)) + (cbPrevObjMatrix._m0[_624].w * _510)) + (cbPrevObjMatrix._m0[_671].w * _511);
    }
    else
    {
        _721 = cbvModelParam._m0[3u].x;
        _722 = cbvModelParam._m0[3u].y;
        _723 = cbvModelParam._m0[3u].z;
        _724 = cbvModelParam._m0[3u].w;
        _725 = cbvModelParam._m0[4u].x;
        _726 = cbvModelParam._m0[4u].y;
        _727 = cbvModelParam._m0[4u].z;
        _728 = cbvModelParam._m0[4u].w;
        _729 = cbvModelParam._m0[5u].x;
        _730 = cbvModelParam._m0[5u].y;
        _731 = cbvModelParam._m0[5u].z;
        _732 = cbvModelParam._m0[5u].w;
    }
    float _751 = (fma(POSITION.z, _723, fma(POSITION.y, _722, _721 * POSITION.x)) + _724) - cbSceneParam._m0[28u].x;
    float _752 = (fma(POSITION.z, _727, fma(POSITION.y, _726, _725 * POSITION.x)) + _728) - cbSceneParam._m0[28u].y;
    float _753 = (fma(POSITION.z, _731, fma(POSITION.y, _730, _729 * POSITION.x)) + _732) - cbSceneParam._m0[28u].z;
    float _800 = fma(_230, _473, fma(_229, _472, _471 * _227));
    float _803 = fma(_230, _477, fma(_229, _476, _475 * _227));
    float _806 = fma(_230, _481, fma(_229, _480, _479 * _227));
    uint _811 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _90;
    uvec4 _813 = texelFetch(g_InstanceIndexBuffer, int(_811));
    uint _814 = _813.x;
    precise float _830 = _489 - cbSceneParam._m0[3u].x;
    precise float _831 = _496 - cbSceneParam._m0[3u].y;
    precise float _832 = _503 - cbSceneParam._m0[3u].z;
    precise float _859 = _830 * cbSceneParam._m0[24u].x;
    precise float _860 = _831 * cbSceneParam._m0[24u].y;
    precise float _861 = _860 + _859;
    precise float _862 = _832 * cbSceneParam._m0[24u].z;
    precise float _863 = _862 + _861;
    precise float _864 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _865 = _864 + _863;
    precise float _866 = _830 * cbSceneParam._m0[25u].x;
    precise float _867 = _831 * cbSceneParam._m0[25u].y;
    precise float _868 = _867 + _866;
    precise float _869 = _832 * cbSceneParam._m0[25u].z;
    precise float _870 = _869 + _868;
    precise float _871 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _872 = _871 + _870;
    precise float _873 = _830 * cbSceneParam._m0[26u].x;
    precise float _874 = _831 * cbSceneParam._m0[26u].y;
    precise float _875 = _874 + _873;
    precise float _876 = _832 * cbSceneParam._m0[26u].z;
    precise float _877 = _876 + _875;
    precise float _878 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _879 = _878 + _877;
    precise float _880 = _830 * cbSceneParam._m0[27u].x;
    precise float _881 = _831 * cbSceneParam._m0[27u].y;
    precise float _882 = _881 + _880;
    precise float _883 = _832 * cbSceneParam._m0[27u].z;
    precise float _884 = _883 + _882;
    precise float _885 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _886 = _885 + _884;
    gl_Position.x = _865;
    gl_Position.y = _872;
    gl_Position.z = _879;
    gl_Position.w = _886;
    POSITION_1.x = _865;
    POSITION_1.y = _872;
    POSITION_1.z = _879;
    POSITION_1.w = _886;
    NORMAL_1.x = _800;
    NORMAL_1.y = _803;
    NORMAL_1.z = _806;
    NORMAL_1.w = float(_814);
    TANGENT_1.x = fma(_239, _473, fma(_238, _472, _471 * _237));
    TANGENT_1.y = fma(_239, _477, fma(_238, _476, _475 * _237));
    TANGENT_1.z = fma(_239, _481, fma(_238, _480, _479 * _237));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_11.x = _865;
    TEXCOORD_11.y = _872;
    TEXCOORD_11.z = _879;
    TEXCOORD_11.w = _886;
    TEXCOORD_12.x = fma(_753, cbSceneParam._m0[29u].z, fma(_752, cbSceneParam._m0[29u].y, _751 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_753, cbSceneParam._m0[30u].z, fma(_752, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _751)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_753, cbSceneParam._m0[31u].z, fma(_752, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _751)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_753, cbSceneParam._m0[32u].z, fma(_752, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _751)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _800;
    TEXCOORD_13.y = _803;
    TEXCOORD_13.z = _806;
    gl_ClipDistance[0u] = dot(vec4(_865, _872, _879, _886), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_865, _872, _879, _886), vec4(cbInstanceData._m0[(_814 * 13u) + 3u]));
}


