#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[25];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 6, std140) uniform cbPrevObjMatrixUBO
{
    vec4 _m0[6];
} cbPrevObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in uvec4 BLENDINDICES;
layout(location = 5) in vec4 BLENDWEIGHT;
layout(location = 6) in vec4 COLOR;
layout(location = 7) in vec4 COLOR_1;
layout(location = 8) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_8;
layout(location = 7) out vec4 TEXCOORD_11;
layout(location = 8) out vec4 TEXCOORD_12;
layout(location = 6, component = 1) out vec3 TEXCOORD_13;

void main()
{
    uint _86 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    TEXCOORD_11.x = 0.0;
    TEXCOORD_11.y = 0.0;
    TEXCOORD_11.z = 0.0;
    TEXCOORD_11.w = 0.0;
    TEXCOORD_12.x = 0.0;
    TEXCOORD_12.y = 0.0;
    TEXCOORD_12.z = 0.0;
    TEXCOORD_12.w = 0.0;
    TEXCOORD_13.x = 0.0;
    TEXCOORD_13.y = 0.0;
    TEXCOORD_13.z = 0.0;
    float _222 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _224 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _225 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _232 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _233 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _234 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _236 = float(BLENDINDICES.x);
    float _237 = float(BLENDINDICES.y);
    float _238 = float(BLENDINDICES.z);
    float _239 = float(BLENDINDICES.w);
    bool _245 = floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u;
    float _466;
    float _467;
    float _468;
    float _469;
    float _470;
    float _471;
    float _472;
    float _473;
    float _474;
    float _475;
    float _476;
    float _477;
    if (_245)
    {
        uint _250 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        precise float _254 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _259 = isnan(_254) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _254 : max(0.001000000047497451305389404296875, _254));
        precise float _261 = BLENDWEIGHT.x / _259;
        precise float _262 = BLENDWEIGHT.y / _259;
        precise float _263 = BLENDWEIGHT.z / _259;
        precise float _264 = BLENDWEIGHT.w / _259;
        uvec4 _271 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_250)).x * 13u) + 4u]);
        uint _272 = _271.x;
        uint _274 = (_272 + uint(_236)) * 3u;
        uint _281 = _274 + 1u;
        uint _288 = _274 + 2u;
        precise float _295 = _261 * cbObjMatrix._m0[_274].x;
        precise float _296 = _261 * cbObjMatrix._m0[_281].x;
        precise float _297 = _261 * cbObjMatrix._m0[_288].x;
        precise float _298 = _261 * cbObjMatrix._m0[_274].y;
        precise float _299 = _261 * cbObjMatrix._m0[_281].y;
        precise float _300 = _261 * cbObjMatrix._m0[_288].y;
        precise float _301 = _261 * cbObjMatrix._m0[_274].z;
        precise float _302 = _261 * cbObjMatrix._m0[_281].z;
        precise float _303 = _261 * cbObjMatrix._m0[_288].z;
        precise float _304 = _261 * cbObjMatrix._m0[_274].w;
        precise float _305 = _261 * cbObjMatrix._m0[_281].w;
        precise float _306 = _261 * cbObjMatrix._m0[_288].w;
        uint _309 = (_272 + uint(_237)) * 3u;
        uint _316 = _309 + 1u;
        uint _323 = _309 + 2u;
        precise float _330 = _262 * cbObjMatrix._m0[_309].x;
        precise float _331 = _262 * cbObjMatrix._m0[_316].x;
        precise float _332 = _262 * cbObjMatrix._m0[_323].x;
        precise float _333 = _262 * cbObjMatrix._m0[_309].y;
        precise float _334 = _262 * cbObjMatrix._m0[_316].y;
        precise float _335 = _262 * cbObjMatrix._m0[_323].y;
        precise float _336 = _262 * cbObjMatrix._m0[_309].z;
        precise float _337 = _262 * cbObjMatrix._m0[_316].z;
        precise float _338 = _262 * cbObjMatrix._m0[_323].z;
        precise float _339 = _262 * cbObjMatrix._m0[_309].w;
        precise float _340 = _262 * cbObjMatrix._m0[_316].w;
        precise float _341 = _262 * cbObjMatrix._m0[_323].w;
        precise float _342 = _295 + _330;
        precise float _343 = _296 + _331;
        precise float _344 = _297 + _332;
        precise float _345 = _298 + _333;
        precise float _346 = _299 + _334;
        precise float _347 = _300 + _335;
        precise float _348 = _301 + _336;
        precise float _349 = _302 + _337;
        precise float _350 = _303 + _338;
        precise float _351 = _304 + _339;
        precise float _352 = _305 + _340;
        precise float _353 = _306 + _341;
        uint _356 = (_272 + uint(_238)) * 3u;
        uint _363 = _356 + 1u;
        uint _370 = _356 + 2u;
        precise float _377 = _263 * cbObjMatrix._m0[_356].x;
        precise float _378 = _263 * cbObjMatrix._m0[_363].x;
        precise float _379 = _263 * cbObjMatrix._m0[_370].x;
        precise float _380 = _263 * cbObjMatrix._m0[_356].y;
        precise float _381 = _263 * cbObjMatrix._m0[_363].y;
        precise float _382 = _263 * cbObjMatrix._m0[_370].y;
        precise float _383 = _263 * cbObjMatrix._m0[_356].z;
        precise float _384 = _263 * cbObjMatrix._m0[_363].z;
        precise float _385 = _263 * cbObjMatrix._m0[_370].z;
        precise float _386 = _263 * cbObjMatrix._m0[_356].w;
        precise float _387 = _263 * cbObjMatrix._m0[_363].w;
        precise float _388 = _263 * cbObjMatrix._m0[_370].w;
        precise float _389 = _342 + _377;
        precise float _390 = _343 + _378;
        precise float _391 = _344 + _379;
        precise float _392 = _345 + _380;
        precise float _393 = _346 + _381;
        precise float _394 = _347 + _382;
        precise float _395 = _348 + _383;
        precise float _396 = _349 + _384;
        precise float _397 = _350 + _385;
        precise float _398 = _351 + _386;
        precise float _399 = _352 + _387;
        precise float _400 = _353 + _388;
        uint _403 = (_272 + uint(_239)) * 3u;
        uint _410 = _403 + 1u;
        uint _417 = _403 + 2u;
        precise float _424 = _264 * cbObjMatrix._m0[_403].x;
        precise float _425 = _264 * cbObjMatrix._m0[_410].x;
        precise float _426 = _264 * cbObjMatrix._m0[_417].x;
        precise float _427 = _264 * cbObjMatrix._m0[_403].y;
        precise float _428 = _264 * cbObjMatrix._m0[_410].y;
        precise float _429 = _264 * cbObjMatrix._m0[_417].y;
        precise float _430 = _264 * cbObjMatrix._m0[_403].z;
        precise float _431 = _264 * cbObjMatrix._m0[_410].z;
        precise float _432 = _264 * cbObjMatrix._m0[_417].z;
        precise float _433 = _264 * cbObjMatrix._m0[_403].w;
        precise float _434 = _264 * cbObjMatrix._m0[_410].w;
        precise float _435 = _264 * cbObjMatrix._m0[_417].w;
        precise float _436 = _389 + _424;
        precise float _437 = _390 + _425;
        precise float _438 = _391 + _426;
        precise float _439 = _392 + _427;
        precise float _440 = _393 + _428;
        precise float _441 = _394 + _429;
        precise float _442 = _395 + _430;
        precise float _443 = _396 + _431;
        precise float _444 = _397 + _432;
        precise float _445 = _398 + _433;
        precise float _446 = _399 + _434;
        precise float _447 = _400 + _435;
        _466 = _436;
        _467 = _439;
        _468 = _442;
        _469 = _445;
        _470 = _437;
        _471 = _440;
        _472 = _443;
        _473 = _446;
        _474 = _438;
        _475 = _441;
        _476 = _444;
        _477 = _447;
    }
    else
    {
        _466 = cbvModelParam._m0[0u].x;
        _467 = cbvModelParam._m0[0u].y;
        _468 = cbvModelParam._m0[0u].z;
        _469 = cbvModelParam._m0[0u].w;
        _470 = cbvModelParam._m0[1u].x;
        _471 = cbvModelParam._m0[1u].y;
        _472 = cbvModelParam._m0[1u].z;
        _473 = cbvModelParam._m0[1u].w;
        _474 = cbvModelParam._m0[2u].x;
        _475 = cbvModelParam._m0[2u].y;
        _476 = cbvModelParam._m0[2u].z;
        _477 = cbvModelParam._m0[2u].w;
    }
    precise float _478 = POSITION.x * _466;
    precise float _479 = POSITION.y * _467;
    precise float _480 = _479 + _478;
    precise float _481 = POSITION.z * _468;
    precise float _482 = _481 + _480;
    precise float _483 = 1.0 * _469;
    precise float _484 = _483 + _482;
    precise float _485 = POSITION.x * _470;
    precise float _486 = POSITION.y * _471;
    precise float _487 = _486 + _485;
    precise float _488 = POSITION.z * _472;
    precise float _489 = _488 + _487;
    precise float _490 = 1.0 * _473;
    precise float _491 = _490 + _489;
    precise float _492 = POSITION.x * _474;
    precise float _493 = POSITION.y * _475;
    precise float _494 = _493 + _492;
    precise float _495 = POSITION.z * _476;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * _477;
    precise float _498 = _497 + _496;
    float _716;
    float _717;
    float _718;
    float _719;
    float _720;
    float _721;
    float _722;
    float _723;
    float _724;
    float _725;
    float _726;
    float _727;
    if (_245)
    {
        float _499 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
        float _502 = isnan(_499) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _499 : max(0.001000000047497451305389404296875, _499));
        float _503 = BLENDWEIGHT.x / _502;
        float _504 = BLENDWEIGHT.y / _502;
        float _505 = BLENDWEIGHT.z / _502;
        float _506 = BLENDWEIGHT.w / _502;
        uint _512 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
        uvec4 _520 = floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_512)).x * 13u) + 4u]);
        uint _521 = _520.x;
        uint _523 = (_521 + uint(_236)) * 3u;
        uint _530 = _523 + 1u;
        uint _537 = _523 + 2u;
        uint _558 = (_521 + uint(_237)) * 3u;
        uint _565 = _558 + 1u;
        uint _572 = _558 + 2u;
        uint _605 = (_521 + uint(_238)) * 3u;
        uint _612 = _605 + 1u;
        uint _619 = _605 + 2u;
        uint _652 = (_521 + uint(_239)) * 3u;
        uint _659 = _652 + 1u;
        uint _666 = _652 + 2u;
        _716 = (((cbPrevObjMatrix._m0[_558].x * _504) + (cbPrevObjMatrix._m0[_523].x * _503)) + (cbPrevObjMatrix._m0[_605].x * _505)) + (cbPrevObjMatrix._m0[_652].x * _506);
        _717 = (((cbPrevObjMatrix._m0[_558].y * _504) + (cbPrevObjMatrix._m0[_523].y * _503)) + (cbPrevObjMatrix._m0[_605].y * _505)) + (cbPrevObjMatrix._m0[_652].y * _506);
        _718 = (((cbPrevObjMatrix._m0[_558].z * _504) + (cbPrevObjMatrix._m0[_523].z * _503)) + (cbPrevObjMatrix._m0[_605].z * _505)) + (cbPrevObjMatrix._m0[_652].z * _506);
        _719 = (((cbPrevObjMatrix._m0[_558].w * _504) + (cbPrevObjMatrix._m0[_523].w * _503)) + (cbPrevObjMatrix._m0[_605].w * _505)) + (cbPrevObjMatrix._m0[_652].w * _506);
        _720 = (((cbPrevObjMatrix._m0[_565].x * _504) + (cbPrevObjMatrix._m0[_530].x * _503)) + (cbPrevObjMatrix._m0[_612].x * _505)) + (cbPrevObjMatrix._m0[_659].x * _506);
        _721 = (((cbPrevObjMatrix._m0[_565].y * _504) + (cbPrevObjMatrix._m0[_530].y * _503)) + (cbPrevObjMatrix._m0[_612].y * _505)) + (cbPrevObjMatrix._m0[_659].y * _506);
        _722 = (((cbPrevObjMatrix._m0[_565].z * _504) + (cbPrevObjMatrix._m0[_530].z * _503)) + (cbPrevObjMatrix._m0[_612].z * _505)) + (cbPrevObjMatrix._m0[_659].z * _506);
        _723 = (((cbPrevObjMatrix._m0[_565].w * _504) + (cbPrevObjMatrix._m0[_530].w * _503)) + (cbPrevObjMatrix._m0[_612].w * _505)) + (cbPrevObjMatrix._m0[_659].w * _506);
        _724 = (((cbPrevObjMatrix._m0[_572].x * _504) + (cbPrevObjMatrix._m0[_537].x * _503)) + (cbPrevObjMatrix._m0[_619].x * _505)) + (cbPrevObjMatrix._m0[_666].x * _506);
        _725 = (((cbPrevObjMatrix._m0[_572].y * _504) + (cbPrevObjMatrix._m0[_537].y * _503)) + (cbPrevObjMatrix._m0[_619].y * _505)) + (cbPrevObjMatrix._m0[_666].y * _506);
        _726 = (((cbPrevObjMatrix._m0[_572].z * _504) + (cbPrevObjMatrix._m0[_537].z * _503)) + (cbPrevObjMatrix._m0[_619].z * _505)) + (cbPrevObjMatrix._m0[_666].z * _506);
        _727 = (((cbPrevObjMatrix._m0[_572].w * _504) + (cbPrevObjMatrix._m0[_537].w * _503)) + (cbPrevObjMatrix._m0[_619].w * _505)) + (cbPrevObjMatrix._m0[_666].w * _506);
    }
    else
    {
        _716 = cbvModelParam._m0[3u].x;
        _717 = cbvModelParam._m0[3u].y;
        _718 = cbvModelParam._m0[3u].z;
        _719 = cbvModelParam._m0[3u].w;
        _720 = cbvModelParam._m0[4u].x;
        _721 = cbvModelParam._m0[4u].y;
        _722 = cbvModelParam._m0[4u].z;
        _723 = cbvModelParam._m0[4u].w;
        _724 = cbvModelParam._m0[5u].x;
        _725 = cbvModelParam._m0[5u].y;
        _726 = cbvModelParam._m0[5u].z;
        _727 = cbvModelParam._m0[5u].w;
    }
    float _746 = (fma(POSITION.z, _718, fma(POSITION.y, _717, _716 * POSITION.x)) + _719) - cbSceneParam._m0[28u].x;
    float _747 = (fma(POSITION.z, _722, fma(POSITION.y, _721, _720 * POSITION.x)) + _723) - cbSceneParam._m0[28u].y;
    float _748 = (fma(POSITION.z, _726, fma(POSITION.y, _725, _724 * POSITION.x)) + _727) - cbSceneParam._m0[28u].z;
    float _795 = fma(_225, _468, fma(_224, _467, _466 * _222));
    float _798 = fma(_225, _472, fma(_224, _471, _470 * _222));
    float _801 = fma(_225, _476, fma(_224, _475, _474 * _222));
    uint _806 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _86;
    precise float _825 = _484 - cbSceneParam._m0[3u].x;
    precise float _826 = _491 - cbSceneParam._m0[3u].y;
    precise float _827 = _498 - cbSceneParam._m0[3u].z;
    precise float _854 = _825 * cbSceneParam._m0[24u].x;
    precise float _855 = _826 * cbSceneParam._m0[24u].y;
    precise float _856 = _855 + _854;
    precise float _857 = _827 * cbSceneParam._m0[24u].z;
    precise float _858 = _857 + _856;
    precise float _859 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _860 = _859 + _858;
    precise float _861 = _825 * cbSceneParam._m0[25u].x;
    precise float _862 = _826 * cbSceneParam._m0[25u].y;
    precise float _863 = _862 + _861;
    precise float _864 = _827 * cbSceneParam._m0[25u].z;
    precise float _865 = _864 + _863;
    precise float _866 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _867 = _866 + _865;
    precise float _868 = _825 * cbSceneParam._m0[26u].x;
    precise float _869 = _826 * cbSceneParam._m0[26u].y;
    precise float _870 = _869 + _868;
    precise float _871 = _827 * cbSceneParam._m0[26u].z;
    precise float _872 = _871 + _870;
    precise float _873 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _874 = _873 + _872;
    precise float _875 = _825 * cbSceneParam._m0[27u].x;
    precise float _876 = _826 * cbSceneParam._m0[27u].y;
    precise float _877 = _876 + _875;
    precise float _878 = _827 * cbSceneParam._m0[27u].z;
    precise float _879 = _878 + _877;
    precise float _880 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _881 = _880 + _879;
    gl_Position.x = _860;
    gl_Position.y = _867;
    gl_Position.z = _874;
    gl_Position.w = _881;
    POSITION_1.x = _860;
    POSITION_1.y = _867;
    POSITION_1.z = _874;
    POSITION_1.w = _881;
    NORMAL_1.x = _795;
    NORMAL_1.y = _798;
    NORMAL_1.z = _801;
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_806)).x);
    TANGENT_1.x = fma(_234, _468, fma(_233, _467, _466 * _232));
    TANGENT_1.y = fma(_234, _472, fma(_233, _471, _470 * _232));
    TANGENT_1.z = fma(_234, _476, fma(_233, _475, _474 * _232));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
    TEXCOORD_11.x = _860;
    TEXCOORD_11.y = _867;
    TEXCOORD_11.z = _874;
    TEXCOORD_11.w = _881;
    TEXCOORD_12.x = fma(_748, cbSceneParam._m0[29u].z, fma(_747, cbSceneParam._m0[29u].y, _746 * cbSceneParam._m0[29u].x)) + cbSceneParam._m0[29u].w;
    TEXCOORD_12.y = fma(_748, cbSceneParam._m0[30u].z, fma(_747, cbSceneParam._m0[30u].y, cbSceneParam._m0[30u].x * _746)) + cbSceneParam._m0[30u].w;
    TEXCOORD_12.z = fma(_748, cbSceneParam._m0[31u].z, fma(_747, cbSceneParam._m0[31u].y, cbSceneParam._m0[31u].x * _746)) + cbSceneParam._m0[31u].w;
    TEXCOORD_12.w = fma(_748, cbSceneParam._m0[32u].z, fma(_747, cbSceneParam._m0[32u].y, cbSceneParam._m0[32u].x * _746)) + cbSceneParam._m0[32u].w;
    TEXCOORD_13.x = _795;
    TEXCOORD_13.y = _798;
    TEXCOORD_13.z = _801;
}


