#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[25];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbvModelParamUBO
{
    vec4 _m0[10];
} cbvModelParam;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uint BINORMAL;
layout(location = 4) in vec4 COLOR;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_1;
layout(location = 5) out vec4 TEXCOORD_4;
layout(location = 6) out float TEXCOORD_8;

void main()
{
    uint _76 = uint(gl_InstanceIndex) - uint(gl_BaseInstance);
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    TEXCOORD_1.w = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8 = 0.0;
    float _185 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _187 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _188 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _195 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _196 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _264;
    float _265;
    float _266;
    float _267;
    float _268;
    float _269;
    float _270;
    float _271;
    float _272;
    float _273;
    float _274;
    float _275;
    if (floatBitsToUint(cbMatDynParam._m0[1u]).x == 0u)
    {
        uint _212 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
        uint _225 = (floatBitsToUint(cbInstanceData._m0[(texelFetch(g_InstanceIndexBuffer, int(_212)).x * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
        uint _232 = _225 + 1u;
        uint _239 = _225 + 2u;
        _264 = cbObjMatrix._m0[_225].x;
        _265 = cbObjMatrix._m0[_225].y;
        _266 = cbObjMatrix._m0[_225].z;
        _267 = cbObjMatrix._m0[_225].w;
        _268 = cbObjMatrix._m0[_232].x;
        _269 = cbObjMatrix._m0[_232].y;
        _270 = cbObjMatrix._m0[_232].z;
        _271 = cbObjMatrix._m0[_232].w;
        _272 = cbObjMatrix._m0[_239].x;
        _273 = cbObjMatrix._m0[_239].y;
        _274 = cbObjMatrix._m0[_239].z;
        _275 = cbObjMatrix._m0[_239].w;
    }
    else
    {
        _264 = cbvModelParam._m0[0u].x;
        _265 = cbvModelParam._m0[0u].y;
        _266 = cbvModelParam._m0[0u].z;
        _267 = cbvModelParam._m0[0u].w;
        _268 = cbvModelParam._m0[1u].x;
        _269 = cbvModelParam._m0[1u].y;
        _270 = cbvModelParam._m0[1u].z;
        _271 = cbvModelParam._m0[1u].w;
        _272 = cbvModelParam._m0[2u].x;
        _273 = cbvModelParam._m0[2u].y;
        _274 = cbvModelParam._m0[2u].z;
        _275 = cbvModelParam._m0[2u].w;
    }
    precise float _276 = POSITION.x * _264;
    precise float _277 = POSITION.y * _265;
    precise float _278 = _277 + _276;
    precise float _279 = POSITION.z * _266;
    precise float _280 = _279 + _278;
    precise float _281 = 1.0 * _267;
    precise float _283 = _281 + _280;
    precise float _284 = POSITION.x * _268;
    precise float _285 = POSITION.y * _269;
    precise float _286 = _285 + _284;
    precise float _287 = POSITION.z * _270;
    precise float _288 = _287 + _286;
    precise float _289 = 1.0 * _271;
    precise float _290 = _289 + _288;
    precise float _291 = POSITION.x * _272;
    precise float _292 = POSITION.y * _273;
    precise float _293 = _292 + _291;
    precise float _294 = POSITION.z * _274;
    precise float _295 = _294 + _293;
    precise float _296 = 1.0 * _275;
    precise float _297 = _296 + _295;
    uint _312 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + _76;
    precise float _331 = _283 - cbSceneParam._m0[3u].x;
    precise float _332 = _290 - cbSceneParam._m0[3u].y;
    precise float _333 = _297 - cbSceneParam._m0[3u].z;
    precise float _360 = _331 * cbSceneParam._m0[24u].x;
    precise float _361 = _332 * cbSceneParam._m0[24u].y;
    precise float _362 = _361 + _360;
    precise float _363 = _333 * cbSceneParam._m0[24u].z;
    precise float _364 = _363 + _362;
    precise float _365 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _366 = _365 + _364;
    precise float _367 = _331 * cbSceneParam._m0[25u].x;
    precise float _368 = _332 * cbSceneParam._m0[25u].y;
    precise float _369 = _368 + _367;
    precise float _370 = _333 * cbSceneParam._m0[25u].z;
    precise float _371 = _370 + _369;
    precise float _372 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _373 = _372 + _371;
    precise float _374 = _331 * cbSceneParam._m0[26u].x;
    precise float _375 = _332 * cbSceneParam._m0[26u].y;
    precise float _376 = _375 + _374;
    precise float _377 = _333 * cbSceneParam._m0[26u].z;
    precise float _378 = _377 + _376;
    precise float _379 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _380 = _379 + _378;
    precise float _381 = _331 * cbSceneParam._m0[27u].x;
    precise float _382 = _332 * cbSceneParam._m0[27u].y;
    precise float _383 = _382 + _381;
    precise float _384 = _333 * cbSceneParam._m0[27u].z;
    precise float _385 = _384 + _383;
    precise float _386 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _387 = _386 + _385;
    gl_Position.x = _366;
    gl_Position.y = _373;
    gl_Position.z = _380;
    gl_Position.w = _387;
    POSITION_1.x = _366;
    POSITION_1.y = _373;
    POSITION_1.z = _380;
    POSITION_1.w = _387;
    NORMAL_1.x = fma(_188, _266, fma(_187, _265, _264 * _185));
    NORMAL_1.y = fma(_188, _270, fma(_187, _269, _268 * _185));
    NORMAL_1.z = fma(_188, _274, fma(_187, _273, _272 * _185));
    NORMAL_1.w = float(texelFetch(g_InstanceIndexBuffer, int(_312)).x);
    TANGENT_1.x = fma(_197, _266, fma(_196, _265, _264 * _195));
    TANGENT_1.y = fma(_197, _270, fma(_196, _269, _268 * _195));
    TANGENT_1.z = fma(_197, _274, fma(_196, _273, _272 * _195));
    TANGENT_1.w = (float(BINORMAL) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = COLOR.x;
    TEXCOORD_1.y = COLOR.y;
    TEXCOORD_1.z = COLOR.z;
    TEXCOORD_1.w = COLOR.w;
    TEXCOORD_4.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_4.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_4.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[2u].x) + cbTexScroll._m0[2u].z;
    TEXCOORD_4.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[2u].y) + cbTexScroll._m0[2u].w;
    TEXCOORD_8 = COLOR_1.x;
}


