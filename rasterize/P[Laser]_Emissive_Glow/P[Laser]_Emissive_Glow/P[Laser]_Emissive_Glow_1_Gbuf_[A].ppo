#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _147 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _148 = _147 * NORMAL.x;
    float _149 = _147 * NORMAL.y;
    float _150 = _147 * NORMAL.z;
    float _155;
    float _156;
    float _157;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _155 = (-0.0) - _148;
        _156 = (-0.0) - _149;
        _157 = (-0.0) - _150;
    }
    else
    {
        _155 = _148;
        _156 = _149;
        _157 = _150;
    }
    float _169 = float(TEXCOORD_4 < cbMtdParam._m0[14u].y);
    vec4 _181 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _184 = _181.x;
    float _207 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _184)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _184))) - POSITION_1.w) / cbMtdParam._m0[13u].x;
    float _514 = isnan(0.0) ? _207 : (isnan(_207) ? 0.0 : max(_207, 0.0));
    float _209 = 1.0 - (isnan(1.0) ? _514 : (isnan(_514) ? 1.0 : min(_514, 1.0)));
    float _525 = isnan(0.0) ? _209 : (isnan(_209) ? 0.0 : max(_209, 0.0));
    float _210 = isnan(1.0) ? _525 : (isnan(_525) ? 1.0 : min(_525, 1.0));
    uint _226 = uint(roundEven(NORMAL.w)) * 13u;
    uint _231 = _226 + 1u;
    uint _236 = _226 + 2u;
    float _253 = sqrt(((cbInstanceData._m0[_231].x * cbInstanceData._m0[_231].x) + (cbInstanceData._m0[_226].x * cbInstanceData._m0[_226].x)) + (cbInstanceData._m0[_236].x * cbInstanceData._m0[_236].x)) * TEXCOORD_1.x;
    float _254 = sqrt(((cbInstanceData._m0[_231].y * cbInstanceData._m0[_231].y) + (cbInstanceData._m0[_226].y * cbInstanceData._m0[_226].y)) + (cbInstanceData._m0[_236].y * cbInstanceData._m0[_236].y)) * TEXCOORD_1.y;
    float _296 = ((cbMtdParam._m0[13u].w * TEXCOORD_1.z) * (_169 - (((_210 * _210) * _169) * (3.0 - (_210 * 2.0))))) * (texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _253) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _254) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w)).x + texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (_253 + (cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x))) + cbTextureTilingScale._m0[1u].z, ((_254 + (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w)).x);
    float _300 = inversesqrt(dot(vec3(_155, _156, _157), vec3(_155, _156, _157)));
    float _536 = isnan(0.0) ? _296 : (isnan(_296) ? 0.0 : max(_296, 0.0));
    float _301 = isnan(1.0) ? _536 : (isnan(_536) ? 1.0 : min(_536, 1.0));
    float _345 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _355 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _345);
    float _356 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _345);
    float _357 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _345);
    vec4 _362 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _364 = _362.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _399 = sqrt(((_355 * _355) + (_356 * _356)) + (_357 * _357));
        float _406 = (cbMatDynParam._m0[5u].x * _399) + cbMatDynParam._m0[5u].y;
        float _547 = isnan(0.0) ? _406 : (isnan(_406) ? 0.0 : max(_406, 0.0));
        float _407 = isnan(1.0) ? _547 : (isnan(_547) ? 1.0 : min(_547, 1.0));
        float _411 = (cbMatDynParam._m0[5u].z * _399) + cbMatDynParam._m0[5u].w;
        float _558 = isnan(0.0) ? _411 : (isnan(_411) ? 0.0 : max(_411, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _558 : (isnan(_558) ? 1.0 : min(_558, 1.0))) - _407)) + _407) < ((_364 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _448;
    float _375;
    vec4 _379;
    float _381;
    float _382;
    bool _393;
    for (;;)
    {
        _375 = cbInstanceData._m0[_226 + 6u].w * _301;
        float _376 = _364 + (-0.5);
        _379 = cbMtdParam._m0[1u];
        _381 = _379.y * _376;
        _382 = _376 * 0.999000012874603271484375;
        _393 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_393)
        {
            if ((cbInstanceData._m0[_226 + 7u].x + _382) < 0.5)
            {
                _448 = true;
                break;
            }
        }
        uint _437 = (_226 + 9u) + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_437].w < 1.0) && ((cbInstanceData._m0[_437].w + _382) < 0.5))
        {
            _448 = true;
            break;
        }
        if ((_381 + 1.0) < _379.x)
        {
            _448 = true;
            break;
        }
        _448 = false;
        break;
    }
    if (_448)
    {
        discard_state = true;
    }
    bool _466 = cbMtdParam._m0[1u].z != 0.0;
    float _467 = _466 ? _375 : 0.0;
    SV_Target.x = ((_155 * 0.5) * _300) + 0.500488758087158203125;
    SV_Target.y = ((_156 * 0.5) * _300) + 0.500488758087158203125;
    SV_Target.z = ((_157 * 0.5) * _300) + 0.500488758087158203125;
    SV_Target.w = _467;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _466 ? _375 : TEXCOORD_1.w;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _375;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _467;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _467;
    discard_exit();
}


