#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _718;
float _719;
float _720;
float _721;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _133 = float(TEXCOORD_4 < cbMtdParam._m0[14u].y);
    vec4 _145 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _148 = _145.x;
    bool _155 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _172 = ((_155 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _148)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _148))) - POSITION_1.w) / cbMtdParam._m0[13u].x;
    float _730 = isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0));
    float _174 = 1.0 - (isnan(1.0) ? _730 : (isnan(_730) ? 1.0 : min(_730, 1.0)));
    float _741 = isnan(0.0) ? _174 : (isnan(_174) ? 0.0 : max(_174, 0.0));
    float _175 = isnan(1.0) ? _741 : (isnan(_741) ? 1.0 : min(_741, 1.0));
    uint _191 = uint(roundEven(NORMAL.w)) * 13u;
    uint _196 = _191 + 1u;
    uint _201 = _191 + 2u;
    float _218 = sqrt(((cbInstanceData._m0[_196].x * cbInstanceData._m0[_196].x) + (cbInstanceData._m0[_191].x * cbInstanceData._m0[_191].x)) + (cbInstanceData._m0[_201].x * cbInstanceData._m0[_201].x)) * TEXCOORD_1.x;
    float _219 = sqrt(((cbInstanceData._m0[_196].y * cbInstanceData._m0[_196].y) + (cbInstanceData._m0[_191].y * cbInstanceData._m0[_191].y)) + (cbInstanceData._m0[_201].y * cbInstanceData._m0[_201].y)) * TEXCOORD_1.y;
    vec4 _233 = texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (_218 + (cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x))) + cbTextureTilingScale._m0[1u].z, ((_219 + (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _235 = _233.x;
    vec4 _257 = texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _218) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _219) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _259 = _257.x;
    float _265 = ((cbMtdParam._m0[13u].w * TEXCOORD_1.z) * (_133 - (((_175 * _175) * _133) * (3.0 - (_175 * 2.0))))) * (_259 + _235);
    float _752 = isnan(0.0) ? _265 : (isnan(_265) ? 0.0 : max(_265, 0.0));
    float _297 = _155 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _339 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _349 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _339);
    float _350 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _339);
    float _351 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _339);
    vec4 _356 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _358 = _356.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _450 = sqrt(((_349 * _349) + (_350 * _350)) + (_351 * _351));
        float _457 = (cbMatDynParam._m0[5u].x * _450) + cbMatDynParam._m0[5u].y;
        float _763 = isnan(0.0) ? _457 : (isnan(_457) ? 0.0 : max(_457, 0.0));
        float _458 = isnan(1.0) ? _763 : (isnan(_763) ? 1.0 : min(_763, 1.0));
        float _462 = (cbMatDynParam._m0[5u].z * _450) + cbMatDynParam._m0[5u].w;
        float _774 = isnan(0.0) ? _462 : (isnan(_462) ? 0.0 : max(_462, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _774 : (isnan(_774) ? 1.0 : min(_774, 1.0))) - _458)) + _458) < ((_358 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _375 = _191 + 9u;
    uint _376 = _375 + uint(cbMatDynParam._m0[0u].w);
    float _384 = ((((cbMtdParam._m0[9u].x * _235) + (cbMtdParam._m0[12u].x * _259)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].x) * cbInstanceData._m0[_376].x;
    float _387 = ((((cbMtdParam._m0[9u].y * _233.y) + (cbMtdParam._m0[12u].y * _257.y)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].y) * cbInstanceData._m0[_376].y;
    float _390 = ((((cbMtdParam._m0[9u].z * _233.z) + (cbMtdParam._m0[12u].z * _257.z)) * cbMtdParam._m0[14u].x) * cbMtdParam._m0[11u].z) * cbInstanceData._m0[_376].z;
    float _391 = isnan(0.0) ? _384 : (isnan(_384) ? 0.0 : max(_384, 0.0));
    float _392 = isnan(0.0) ? _387 : (isnan(_387) ? 0.0 : max(_387, 0.0));
    float _393 = isnan(0.0) ? _390 : (isnan(_390) ? 0.0 : max(_390, 0.0));
    float _399 = cbMtdParam._m0[2u].x * _384;
    float _400 = cbMtdParam._m0[2u].y * _387;
    float _401 = cbMtdParam._m0[2u].z * _390;
    float _800 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _403 = isnan(1.0) ? _800 : (isnan(_800) ? 1.0 : min(_800, 1.0));
    float _408 = cbInstanceData._m0[_191 + 6u].w * (isnan(1.0) ? _752 : (isnan(_752) ? 1.0 : min(_752, 1.0)));
    float _414 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _415 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _430 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_414, _415, (log2((isnan(cbSceneParam._m0[77u].w) ? _297 : (isnan(_297) ? cbSceneParam._m0[77u].w : min(_297, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _433 = _430.x;
    float _434 = _430.y;
    float _435 = _430.z;
    float _436 = _430.w;
    float _517;
    float _519;
    float _521;
    float _523;
    if (_297 > cbSceneParam._m0[78u].w)
    {
        float _479 = isnan(_297) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _297 : min(cbSceneParam._m0[80u].w, _297));
        float _480 = _479 / _297;
        float _491 = _480 * _349;
        float _492 = _350 * _480;
        float _493 = (-0.0) - _492;
        float _494 = _480 * _351;
        float _496 = (cbSceneParam._m0[77u].w * _493) / _479;
        float _497 = _496 + cbSceneParam._m0[79u].w;
        float _498 = cbSceneParam._m0[79u].w - _492;
        float _504 = sqrt(((_491 * _491) + (_492 * _492)) + (_494 * _494));
        float _507 = (1.0 - (cbSceneParam._m0[77u].w / _479)) * _504;
        float _513 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _515 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _646;
        if (abs((_493 - _496) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _646 = ((((_497 > 0.0) ? exp2(_513 * _497) : (2.0 - exp2(_515 * _497))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _507;
        }
        else
        {
            float _601 = 1.0 / cbSceneParam._m0[80u].x;
            float _602 = isnan(_498) ? _497 : (isnan(_497) ? _498 : max(_497, _498));
            float _603 = isnan(_498) ? _497 : (isnan(_497) ? _498 : min(_497, _498));
            float _612 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : min(_602, 0.0));
            float _613 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : min(_603, 0.0));
            _646 = ((abs(_504 / _493) * cbSceneParam._m0[80u].y) * ((((_612 - _613) * 2.0) - ((exp2(_513 * (isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0)))) - exp2(_513 * (isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0))))) * _601)) - ((exp2(_515 * _612) - exp2(_515 * _613)) * _601))) + (_507 * cbSceneParam._m0[80u].z);
        }
        vec4 _648 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_414, _415, 1.0), 0.0);
        float _657 = exp2((_646 * (-1.44269502162933349609375)) * (1.0 - _648.w));
        float _658 = log2(_657);
        float _674 = log2(_436);
        _517 = (exp2(_674 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_658 * cbSceneParam._m0[78u].x)) * _648.x) / cbSceneParam._m0[78u].x)) + _433;
        _519 = (exp2(_674 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_658 * cbSceneParam._m0[78u].y)) * _648.y) / cbSceneParam._m0[78u].y)) + _434;
        _521 = (exp2(_674 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_658 * cbSceneParam._m0[78u].z)) * _648.z) / cbSceneParam._m0[78u].z)) + _435;
        _523 = _657 * _436;
    }
    else
    {
        _517 = _433;
        _519 = _434;
        _521 = _435;
        _523 = _436;
    }
    bool _684;
    vec4 _533;
    vec4 _556;
    float _558;
    float _562;
    float _563;
    float _564;
    float _567;
    float _570;
    float _573;
    float _574;
    bool _585;
    for (;;)
    {
        _533 = cbMatDynParam._m0[0u];
        float _535 = roundEven(_533.y);
        bool _536 = _535 == 3.0;
        float _537 = log2(_523);
        float _541 = exp2(_537 * cbSceneParam._m0[78u].x);
        float _542 = exp2(_537 * cbSceneParam._m0[78u].y);
        float _543 = exp2(_537 * cbSceneParam._m0[78u].z);
        float _544 = _541 * _391;
        float _545 = _542 * _392;
        float _546 = _543 * _393;
        float _553 = _358 + (-0.5);
        _556 = cbMtdParam._m0[1u];
        _558 = _556.y * _553;
        float _561 = (_535 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _562 = _561 * (_536 ? _544 : (_544 + (cbSceneParam._m0[72u].w * _517)));
        _563 = _561 * (_536 ? _545 : (_545 + (cbSceneParam._m0[72u].w * _519)));
        _564 = _561 * (_536 ? _546 : (_546 + (cbSceneParam._m0[72u].w * _521)));
        _567 = ((_399 * _403) * _541) * _561;
        _570 = ((_400 * _403) * _542) * _561;
        _573 = ((_401 * _403) * _543) * _561;
        _574 = _553 * 0.999000012874603271484375;
        _585 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_585)
        {
            if ((cbInstanceData._m0[_191 + 7u].x + _574) < 0.5)
            {
                _684 = true;
                break;
            }
        }
        uint _638 = _375 + uint(_533.w);
        if ((cbInstanceData._m0[_638].w < 1.0) && ((cbInstanceData._m0[_638].w + _574) < 0.5))
        {
            _684 = true;
            break;
        }
        if ((_558 + 1.0) < _556.x)
        {
            _684 = true;
            break;
        }
        _684 = false;
        break;
    }
    float _689;
    if (_684)
    {
        discard_state = true;
        _689 = 0.0;
    }
    else
    {
        _689 = _408;
    }
    SV_Target.x = _562;
    SV_Target.y = _563;
    SV_Target.z = _564;
    SV_Target.w = _689;
    SV_Target_1.x = _567;
    SV_Target_1.y = _570;
    SV_Target_1.z = _573;
    SV_Target_1.w = _408;
    discard_exit();
}


