#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[16];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_2;
layout(set = 0, binding = 1) uniform texture2D P_Laser_Emissive_Glow_snp_0_Texture2D_3;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD_1;
layout(location = 5) in float TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _837;
float _838;
float _839;
float _840;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _136 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _137 = _136 * NORMAL.x;
    float _138 = _136 * NORMAL.y;
    float _139 = _136 * NORMAL.z;
    float _144;
    float _145;
    float _146;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _144 = (-0.0) - _137;
        _145 = (-0.0) - _138;
        _146 = (-0.0) - _139;
    }
    else
    {
        _144 = _137;
        _145 = _138;
        _146 = _139;
    }
    float _192 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _202 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _192);
    float _203 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _192);
    float _204 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _192);
    float _214 = float(TEXCOORD_4 < cbMtdParam._m0[14u].y);
    vec4 _226 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _229 = _226.x;
    bool _236 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _252 = ((_236 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _229)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _229))) - POSITION_1.w) / cbMtdParam._m0[13u].x;
    float _849 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    float _254 = 1.0 - (isnan(1.0) ? _849 : (isnan(_849) ? 1.0 : min(_849, 1.0)));
    float _860 = isnan(0.0) ? _254 : (isnan(_254) ? 0.0 : max(_254, 0.0));
    float _255 = isnan(1.0) ? _860 : (isnan(_860) ? 1.0 : min(_860, 1.0));
    uint _271 = uint(roundEven(NORMAL.w)) * 13u;
    uint _276 = _271 + 1u;
    uint _281 = _271 + 2u;
    float _298 = sqrt(((cbInstanceData._m0[_276].x * cbInstanceData._m0[_276].x) + (cbInstanceData._m0[_271].x * cbInstanceData._m0[_271].x)) + (cbInstanceData._m0[_281].x * cbInstanceData._m0[_281].x)) * TEXCOORD_1.x;
    float _299 = sqrt(((cbInstanceData._m0[_276].y * cbInstanceData._m0[_276].y) + (cbInstanceData._m0[_271].y * cbInstanceData._m0[_271].y)) + (cbInstanceData._m0[_281].y * cbInstanceData._m0[_281].y)) * TEXCOORD_1.y;
    vec4 _313 = texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * (_298 + (cbMtdParam._m0[15u].x * cbPerFrame._m0[22u].x))) + cbTextureTilingScale._m0[1u].z, ((_299 + (cbMtdParam._m0[15u].y * cbPerFrame._m0[22u].x)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _315 = _313.x;
    vec4 _337 = texture(sampler2D(P_Laser_Emissive_Glow_snp_0_Texture2D_2, SS_DiffuseMap), vec2((((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) + _298) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) + _299) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _339 = _337.x;
    float _345 = ((cbMtdParam._m0[13u].w * TEXCOORD_1.z) * (_214 - (((_255 * _255) * _214) * (3.0 - (_255 * 2.0))))) * (_339 + _315);
    float _359 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _366 = inversesqrt(dot(vec3(_202, _203, _204), vec3(_202, _203, _204)));
    float _373 = dot(vec4(_366 * _202, _366 * _203, _366 * _204, 0.0), vec4(_359 * _144, _359 * _145, _359 * _146, 0.0)) - cbMtdParam._m0[13u].y;
    float _871 = isnan(0.0) ? _373 : (isnan(_373) ? 0.0 : max(_373, 0.0));
    float _380 = exp2(log2(1.0 - (isnan(1.0) ? _871 : (isnan(_871) ? 1.0 : min(_871, 1.0)))) * (isnan(0.001000000047497451305389404296875) ? cbMtdParam._m0[13u].z : (isnan(cbMtdParam._m0[13u].z) ? 0.001000000047497451305389404296875 : max(cbMtdParam._m0[13u].z, 0.001000000047497451305389404296875))));
    float _887 = isnan(0.0) ? _345 : (isnan(_345) ? 0.0 : max(_345, 0.0));
    float _424 = _236 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _464 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _473 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _464);
    float _474 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _464);
    float _475 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _464);
    vec4 _480 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _482 = _480.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _567 = sqrt(((_473 * _473) + (_474 * _474)) + (_475 * _475));
        float _574 = (cbMatDynParam._m0[5u].x * _567) + cbMatDynParam._m0[5u].y;
        float _898 = isnan(0.0) ? _574 : (isnan(_574) ? 0.0 : max(_574, 0.0));
        float _575 = isnan(1.0) ? _898 : (isnan(_898) ? 1.0 : min(_898, 1.0));
        float _579 = (cbMatDynParam._m0[5u].z * _567) + cbMatDynParam._m0[5u].w;
        float _909 = isnan(0.0) ? _579 : (isnan(_579) ? 0.0 : max(_579, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _909 : (isnan(_909) ? 1.0 : min(_909, 1.0))) - _575)) + _575) < ((_482 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    uint _499 = _271 + 9u;
    uint _500 = _499 + uint(cbMatDynParam._m0[0u].w);
    float _506 = (((cbMtdParam._m0[11u].x * ((cbMtdParam._m0[9u].x * _315) + (cbMtdParam._m0[12u].x * _339))) + ((cbMtdParam._m0[10u].x * TEXCOORD_1.z) * _380)) * cbMtdParam._m0[14u].x) * cbInstanceData._m0[_500].x;
    float _507 = (((cbMtdParam._m0[11u].y * ((cbMtdParam._m0[9u].y * _313.y) + (cbMtdParam._m0[12u].y * _337.y))) + ((cbMtdParam._m0[10u].y * TEXCOORD_1.z) * _380)) * cbMtdParam._m0[14u].x) * cbInstanceData._m0[_500].y;
    float _508 = (((cbMtdParam._m0[11u].z * ((cbMtdParam._m0[9u].z * _313.z) + (cbMtdParam._m0[12u].z * _337.z))) + ((cbMtdParam._m0[10u].z * TEXCOORD_1.z) * _380)) * cbMtdParam._m0[14u].x) * cbInstanceData._m0[_500].z;
    float _509 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _510 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0));
    float _511 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _517 = cbMtdParam._m0[2u].x * _506;
    float _518 = cbMtdParam._m0[2u].y * _507;
    float _519 = cbMtdParam._m0[2u].z * _508;
    float _935 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _521 = isnan(1.0) ? _935 : (isnan(_935) ? 1.0 : min(_935, 1.0));
    float _526 = cbInstanceData._m0[_271 + 6u].w * (isnan(1.0) ? _887 : (isnan(_887) ? 1.0 : min(_887, 1.0)));
    float _532 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _533 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _548 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_532, _533, (log2((isnan(cbSceneParam._m0[77u].w) ? _424 : (isnan(_424) ? cbSceneParam._m0[77u].w : min(_424, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _550 = _548.x;
    float _551 = _548.y;
    float _552 = _548.z;
    float _553 = _548.w;
    float _634;
    float _636;
    float _638;
    float _640;
    if (_424 > cbSceneParam._m0[78u].w)
    {
        float _596 = isnan(_424) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _424 : min(cbSceneParam._m0[80u].w, _424));
        float _597 = _596 / _424;
        float _608 = _597 * _473;
        float _609 = _474 * _597;
        float _610 = (-0.0) - _609;
        float _611 = _597 * _475;
        float _613 = (cbSceneParam._m0[77u].w * _610) / _596;
        float _614 = _613 + cbSceneParam._m0[79u].w;
        float _615 = cbSceneParam._m0[79u].w - _609;
        float _621 = sqrt(((_608 * _608) + (_609 * _609)) + (_611 * _611));
        float _624 = (1.0 - (cbSceneParam._m0[77u].w / _596)) * _621;
        float _630 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _632 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _763;
        if (abs((_610 - _613) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _763 = ((((_614 > 0.0) ? exp2(_630 * _614) : (2.0 - exp2(_632 * _614))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _624;
        }
        else
        {
            float _718 = 1.0 / cbSceneParam._m0[80u].x;
            float _719 = isnan(_615) ? _614 : (isnan(_614) ? _615 : max(_614, _615));
            float _720 = isnan(_615) ? _614 : (isnan(_614) ? _615 : min(_614, _615));
            float _729 = isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : min(_719, 0.0));
            float _730 = isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : min(_720, 0.0));
            _763 = ((abs(_621 / _610) * cbSceneParam._m0[80u].y) * ((((_729 - _730) * 2.0) - ((exp2(_630 * (isnan(0.0) ? _719 : (isnan(_719) ? 0.0 : max(_719, 0.0)))) - exp2(_630 * (isnan(0.0) ? _720 : (isnan(_720) ? 0.0 : max(_720, 0.0))))) * _718)) - ((exp2(_632 * _729) - exp2(_632 * _730)) * _718))) + (_624 * cbSceneParam._m0[80u].z);
        }
        vec4 _765 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_532, _533, 1.0), 0.0);
        float _774 = exp2((_763 * (-1.44269502162933349609375)) * (1.0 - _765.w));
        float _775 = log2(_774);
        float _791 = log2(_553);
        _634 = (exp2(_791 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_775 * cbSceneParam._m0[78u].x)) * _765.x) / cbSceneParam._m0[78u].x)) + _550;
        _636 = (exp2(_791 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_775 * cbSceneParam._m0[78u].y)) * _765.y) / cbSceneParam._m0[78u].y)) + _551;
        _638 = (exp2(_791 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_775 * cbSceneParam._m0[78u].z)) * _765.z) / cbSceneParam._m0[78u].z)) + _552;
        _640 = _774 * _553;
    }
    else
    {
        _634 = _550;
        _636 = _551;
        _638 = _552;
        _640 = _553;
    }
    bool _801;
    vec4 _650;
    vec4 _673;
    float _675;
    float _679;
    float _680;
    float _681;
    float _684;
    float _687;
    float _690;
    float _691;
    bool _702;
    for (;;)
    {
        _650 = cbMatDynParam._m0[0u];
        float _652 = roundEven(_650.y);
        bool _653 = _652 == 3.0;
        float _654 = log2(_640);
        float _658 = exp2(_654 * cbSceneParam._m0[78u].x);
        float _659 = exp2(_654 * cbSceneParam._m0[78u].y);
        float _660 = exp2(_654 * cbSceneParam._m0[78u].z);
        float _661 = _658 * _509;
        float _662 = _659 * _510;
        float _663 = _660 * _511;
        float _670 = _482 + (-0.5);
        _673 = cbMtdParam._m0[1u];
        _675 = _673.y * _670;
        float _678 = (_652 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _679 = _678 * (_653 ? _661 : (_661 + (cbSceneParam._m0[72u].w * _634)));
        _680 = _678 * (_653 ? _662 : (_662 + (cbSceneParam._m0[72u].w * _636)));
        _681 = _678 * (_653 ? _663 : (_663 + (cbSceneParam._m0[72u].w * _638)));
        _684 = ((_517 * _521) * _658) * _678;
        _687 = ((_518 * _521) * _659) * _678;
        _690 = ((_519 * _521) * _660) * _678;
        _691 = _670 * 0.999000012874603271484375;
        _702 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_702)
        {
            if ((cbInstanceData._m0[_271 + 7u].x + _691) < 0.5)
            {
                _801 = true;
                break;
            }
        }
        uint _755 = _499 + uint(_650.w);
        if ((cbInstanceData._m0[_755].w < 1.0) && ((cbInstanceData._m0[_755].w + _691) < 0.5))
        {
            _801 = true;
            break;
        }
        if ((_675 + 1.0) < _673.x)
        {
            _801 = true;
            break;
        }
        _801 = false;
        break;
    }
    float _806;
    if (_801)
    {
        discard_state = true;
        _806 = 0.0;
    }
    else
    {
        _806 = _526;
    }
    SV_Target.x = _679;
    SV_Target.y = _680;
    SV_Target.z = _681;
    SV_Target.w = _806;
    SV_Target_1.x = _684;
    SV_Target_1.y = _687;
    SV_Target_1.z = _690;
    SV_Target_1.w = _526;
    discard_exit();
}


