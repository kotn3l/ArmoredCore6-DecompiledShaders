#version 460

out float gl_CullDistance[1];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in vec4 COLOR_1;
layout(location = 4) in ivec2 TEXCOORD;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec3 TEXCOORD_1;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1.x = 0.0;
    TEXCOORD_1.y = 0.0;
    TEXCOORD_1.z = 0.0;
    gl_CullDistance[0u] = 0.0;
    float _146 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _148 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _149 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _159 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _160 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _161 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _167 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _169 = texelFetch(g_InstanceIndexBuffer, int(_167));
    uint _170 = _169.x;
    uint _180 = (floatBitsToUint(cbInstanceData._m0[(_170 * 13u) + 4u]).x + uint(float(NORMAL.w))) * 3u;
    uint _187 = _180 + 1u;
    uint _194 = _180 + 2u;
    precise float _201 = POSITION.x * cbObjMatrix._m0[_180].x;
    precise float _202 = POSITION.y * cbObjMatrix._m0[_180].y;
    precise float _203 = _202 + _201;
    precise float _204 = POSITION.z * cbObjMatrix._m0[_180].z;
    precise float _205 = _204 + _203;
    precise float _206 = 1.0 * cbObjMatrix._m0[_180].w;
    precise float _208 = _206 + _205;
    precise float _209 = POSITION.x * cbObjMatrix._m0[_187].x;
    precise float _210 = POSITION.y * cbObjMatrix._m0[_187].y;
    precise float _211 = _210 + _209;
    precise float _212 = POSITION.z * cbObjMatrix._m0[_187].z;
    precise float _213 = _212 + _211;
    precise float _214 = 1.0 * cbObjMatrix._m0[_187].w;
    precise float _215 = _214 + _213;
    precise float _216 = POSITION.x * cbObjMatrix._m0[_194].x;
    precise float _217 = POSITION.y * cbObjMatrix._m0[_194].y;
    precise float _218 = _217 + _216;
    precise float _219 = POSITION.z * cbObjMatrix._m0[_194].z;
    precise float _220 = _219 + _218;
    precise float _221 = 1.0 * cbObjMatrix._m0[_194].w;
    precise float _222 = _221 + _220;
    float _228 = cbSceneParam._m0[3u].x - _208;
    float _229 = cbSceneParam._m0[3u].y - _215;
    float _230 = cbSceneParam._m0[3u].z - _222;
    precise float _257 = _208 - cbSceneParam._m0[3u].x;
    precise float _258 = _215 - cbSceneParam._m0[3u].y;
    precise float _259 = _222 - cbSceneParam._m0[3u].z;
    precise float _287 = _257 * cbSceneParam._m0[24u].x;
    precise float _288 = _258 * cbSceneParam._m0[24u].y;
    precise float _289 = _288 + _287;
    precise float _290 = _259 * cbSceneParam._m0[24u].z;
    precise float _291 = _290 + _289;
    precise float _292 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _293 = _292 + _291;
    precise float _294 = _257 * cbSceneParam._m0[25u].x;
    precise float _295 = _258 * cbSceneParam._m0[25u].y;
    precise float _296 = _295 + _294;
    precise float _297 = _259 * cbSceneParam._m0[25u].z;
    precise float _298 = _297 + _296;
    precise float _299 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _300 = _299 + _298;
    precise float _301 = _257 * cbSceneParam._m0[26u].x;
    precise float _302 = _258 * cbSceneParam._m0[26u].y;
    precise float _303 = _302 + _301;
    precise float _304 = _259 * cbSceneParam._m0[26u].z;
    precise float _305 = _304 + _303;
    precise float _306 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _307 = _306 + _305;
    precise float _308 = _257 * cbSceneParam._m0[27u].x;
    precise float _309 = _258 * cbSceneParam._m0[27u].y;
    precise float _310 = _309 + _308;
    precise float _311 = _259 * cbSceneParam._m0[27u].z;
    precise float _312 = _311 + _310;
    precise float _313 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _314 = _313 + _312;
    gl_Position.x = _293;
    gl_Position.y = _300;
    gl_Position.z = _307;
    gl_Position.w = _314;
    POSITION_1.x = _293;
    POSITION_1.y = _300;
    POSITION_1.z = _307;
    POSITION_1.w = _314;
    NORMAL_1.x = fma(_149, cbObjMatrix._m0[_180].z, fma(_148, cbObjMatrix._m0[_180].y, cbObjMatrix._m0[_180].x * _146));
    NORMAL_1.y = fma(_149, cbObjMatrix._m0[_187].z, fma(_148, cbObjMatrix._m0[_187].y, cbObjMatrix._m0[_187].x * _146));
    NORMAL_1.z = fma(_149, cbObjMatrix._m0[_194].z, fma(_148, cbObjMatrix._m0[_194].y, cbObjMatrix._m0[_194].x * _146));
    NORMAL_1.w = float(_170);
    TANGENT_1.x = fma(_161, cbObjMatrix._m0[_180].z, fma(_160, cbObjMatrix._m0[_180].y, cbObjMatrix._m0[_180].x * _159));
    TANGENT_1.y = fma(_161, cbObjMatrix._m0[_187].z, fma(_160, cbObjMatrix._m0[_187].y, cbObjMatrix._m0[_187].x * _159));
    TANGENT_1.z = fma(_161, cbObjMatrix._m0[_194].z, fma(_160, cbObjMatrix._m0[_194].y, cbObjMatrix._m0[_194].x * _159));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1.z = COLOR_1.x;
    gl_CullDistance[0u] = sqrt(((_228 * _228) + (_229 * _229)) + (_230 * _230));
}


