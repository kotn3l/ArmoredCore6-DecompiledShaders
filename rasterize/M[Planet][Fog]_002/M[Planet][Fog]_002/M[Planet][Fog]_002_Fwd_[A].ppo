#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[14];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _747;
float _748;
float _749;
float _750;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _113 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _114 = _113 * NORMAL.x;
    float _115 = _113 * NORMAL.y;
    float _116 = _113 * NORMAL.z;
    float _121;
    float _122;
    float _123;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _121 = (-0.0) - _114;
        _122 = (-0.0) - _115;
        _123 = (-0.0) - _116;
    }
    else
    {
        _121 = _114;
        _122 = _115;
        _123 = _116;
    }
    float _170 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _180 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _170);
    float _181 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _170);
    float _182 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _170);
    vec4 _196 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _199 = _196.x;
    bool _206 = floatBitsToUint(cbSceneParam._m0[88u]).x != 0u;
    float _222 = ((_206 ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _199)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _199))) - POSITION_1.w) / cbMtdParam._m0[12u].x;
    float _759 = isnan(0.0) ? _222 : (isnan(_222) ? 0.0 : max(_222, 0.0));
    float _233 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _237 = dot(vec4(_233 * _180, _233 * _181, _233 * _182, 0.0), vec4(_121, _122, _123, 0.0));
    float _240 = _237 - cbMtdParam._m0[12u].w;
    float _770 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _248 = exp2(log2(exp2(log2(1.0 - (isnan(1.0) ? _770 : (isnan(_770) ? 1.0 : min(_770, 1.0))))) * cbMtdParam._m0[12u].y) * cbMtdParam._m0[12u].z);
    float _781 = isnan(0.0) ? _248 : (isnan(_248) ? 0.0 : max(_248, 0.0));
    float _255 = _237 - cbMtdParam._m0[11u].w;
    float _792 = isnan(0.0) ? _255 : (isnan(_255) ? 0.0 : max(_255, 0.0));
    float _264 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _792 : (isnan(_792) ? 1.0 : min(_792, 1.0)))))) * cbMtdParam._m0[11u].y) * cbMtdParam._m0[11u].z);
    float _803 = isnan(0.0) ? _264 : (isnan(_264) ? 0.0 : max(_264, 0.0));
    float _266 = (isnan(1.0) ? _803 : (isnan(_803) ? 1.0 : min(_803, 1.0))) * (isnan(1.0) ? _781 : (isnan(_781) ? 1.0 : min(_781, 1.0)));
    float _267 = _266 * (isnan(1.0) ? _759 : (isnan(_759) ? 1.0 : min(_759, 1.0)));
    bool _282 = floatBitsToUint(cbMtdParam._m0[9u]).x != 0u;
    float _292 = inversesqrt(dot(vec3(cbMtdParam._m0[13u].xyz), vec3(cbMtdParam._m0[13u].xyz)));
    uint _296 = uint(roundEven(NORMAL.w)) * 13u;
    uint _303 = floatBitsToUint(cbInstanceData._m0[_296 + 5u]).x * 14u;
    float _309 = _282 ? cbLight._m0[_303].x : (_292 * cbMtdParam._m0[13u].x);
    float _310 = _282 ? cbLight._m0[_303].y : (_292 * cbMtdParam._m0[13u].y);
    float _311 = _282 ? cbLight._m0[_303].z : (_292 * cbMtdParam._m0[13u].z);
    float _315 = inversesqrt(dot(vec3(_309, _310, _311), vec3(_309, _310, _311)));
    float _316 = _309 * _315;
    float _317 = _310 * _315;
    float _318 = _311 * _315;
    float _322 = inversesqrt(dot(vec3(_316, _317, _318), vec3(_316, _317, _318)));
    float _347 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _351 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _355 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _359 = inversesqrt(dot(vec3(_347, _351, _355), vec3(_347, _351, _355)));
    float _375 = (0.9700000286102294921875 - exp2(log2((dot(vec4(_359 * _347, _359 * _351, _359 * _355, 0.0), vec4(_322 * _316, _322 * _317, _322 * _318, 0.0)) + 1.0) * 0.5) * 0.017999999225139617919921875)) * (-5.0);
    float _814 = isnan(0.0) ? _375 : (isnan(_375) ? 0.0 : max(_375, 0.0));
    float _377 = isnan(1.0) ? _814 : (isnan(_814) ? 1.0 : min(_814, 1.0));
    float _383 = exp2(log2(_377 * 6.5) * 7.0);
    float _825 = isnan(0.0) ? _383 : (isnan(_383) ? 0.0 : max(_383, 0.0));
    float _385 = (isnan(1.0) ? _825 : (isnan(_825) ? 1.0 : min(_825, 1.0))) + _377;
    float _836 = isnan(0.0) ? _385 : (isnan(_385) ? 0.0 : max(_385, 0.0));
    float _386 = isnan(1.0) ? _836 : (isnan(_836) ? 1.0 : min(_836, 1.0));
    float _847 = isnan(0.0) ? _267 : (isnan(_267) ? 0.0 : max(_267, 0.0));
    float _402 = _206 ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _412 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _419 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _421 = _419.w;
    uint _432 = _296 + 9u;
    uint _433 = _432 + uint(cbMatDynParam._m0[0u].w);
    float _439 = (((_386 * (cbMtdParam._m0[9u].y - cbMtdParam._m0[10u].y)) + cbMtdParam._m0[10u].y) * _266) * cbInstanceData._m0[_433].x;
    float _440 = (_266 * ((_386 * (cbMtdParam._m0[9u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z)) * cbInstanceData._m0[_433].y;
    float _441 = (_266 * ((_386 * (cbMtdParam._m0[9u].w - cbMtdParam._m0[10u].w)) + cbMtdParam._m0[10u].w)) * cbInstanceData._m0[_433].z;
    float _442 = isnan(0.0) ? _439 : (isnan(_439) ? 0.0 : max(_439, 0.0));
    float _443 = isnan(0.0) ? _440 : (isnan(_440) ? 0.0 : max(_440, 0.0));
    float _444 = isnan(0.0) ? _441 : (isnan(_441) ? 0.0 : max(_441, 0.0));
    float _450 = cbMtdParam._m0[2u].x * _439;
    float _451 = cbMtdParam._m0[2u].y * _440;
    float _452 = cbMtdParam._m0[2u].z * _441;
    float _873 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _454 = isnan(1.0) ? _873 : (isnan(_873) ? 1.0 : min(_873, 1.0));
    float _460 = cbInstanceData._m0[_296 + 6u].w * (isnan(1.0) ? _847 : (isnan(_847) ? 1.0 : min(_847, 1.0)));
    float _466 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _467 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _482 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_466, _467, (log2((isnan(cbSceneParam._m0[77u].w) ? _402 : (isnan(_402) ? cbSceneParam._m0[77u].w : min(_402, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _484 = _482.x;
    float _485 = _482.y;
    float _486 = _482.z;
    float _487 = _482.w;
    float _547;
    float _549;
    float _551;
    float _553;
    if (_402 > cbSceneParam._m0[78u].w)
    {
        float _509 = isnan(_402) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _402 : min(cbSceneParam._m0[80u].w, _402));
        float _510 = _509 / _402;
        float _521 = _510 * (cbSceneParam._m0[71u].x - (_347 / _412));
        float _522 = (cbSceneParam._m0[71u].y - (_351 / _412)) * _510;
        float _523 = (-0.0) - _522;
        float _524 = _510 * (cbSceneParam._m0[71u].z - (_355 / _412));
        float _526 = (cbSceneParam._m0[77u].w * _523) / _509;
        float _527 = _526 + cbSceneParam._m0[79u].w;
        float _528 = cbSceneParam._m0[79u].w - _522;
        float _534 = sqrt(((_521 * _521) + (_522 * _522)) + (_524 * _524));
        float _537 = (1.0 - (cbSceneParam._m0[77u].w / _509)) * _534;
        float _543 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _545 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _674;
        if (abs((_523 - _526) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _674 = ((((_527 > 0.0) ? exp2(_543 * _527) : (2.0 - exp2(_545 * _527))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _537;
        }
        else
        {
            float _630 = 1.0 / cbSceneParam._m0[80u].x;
            float _631 = isnan(_528) ? _527 : (isnan(_527) ? _528 : max(_527, _528));
            float _632 = isnan(_528) ? _527 : (isnan(_527) ? _528 : min(_527, _528));
            float _641 = isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : min(_631, 0.0));
            float _642 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : min(_632, 0.0));
            _674 = ((abs(_534 / _523) * cbSceneParam._m0[80u].y) * ((((_641 - _642) * 2.0) - ((exp2(_543 * (isnan(0.0) ? _631 : (isnan(_631) ? 0.0 : max(_631, 0.0)))) - exp2(_543 * (isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0))))) * _630)) - ((exp2(_545 * _641) - exp2(_545 * _642)) * _630))) + (_537 * cbSceneParam._m0[80u].z);
        }
        vec4 _676 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_466, _467, 1.0), 0.0);
        float _685 = exp2((_674 * (-1.44269502162933349609375)) * (1.0 - _676.w));
        float _686 = log2(_685);
        float _702 = log2(_487);
        _547 = (exp2(_702 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_686 * cbSceneParam._m0[78u].x)) * _676.x) / cbSceneParam._m0[78u].x)) + _484;
        _549 = (exp2(_702 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_686 * cbSceneParam._m0[78u].y)) * _676.y) / cbSceneParam._m0[78u].y)) + _485;
        _551 = (exp2(_702 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_686 * cbSceneParam._m0[78u].z)) * _676.z) / cbSceneParam._m0[78u].z)) + _486;
        _553 = _685 * _487;
    }
    else
    {
        _547 = _484;
        _549 = _485;
        _551 = _486;
        _553 = _487;
    }
    bool _712;
    vec4 _563;
    vec4 _587;
    float _589;
    float _594;
    float _595;
    float _596;
    float _599;
    float _602;
    float _605;
    float _606;
    bool _617;
    for (;;)
    {
        _563 = cbMatDynParam._m0[0u];
        float _565 = roundEven(_563.y);
        bool _566 = _565 == 3.0;
        float _568 = log2(_553);
        float _572 = exp2(_568 * cbSceneParam._m0[78u].x);
        float _573 = exp2(_568 * cbSceneParam._m0[78u].y);
        float _574 = exp2(_568 * cbSceneParam._m0[78u].z);
        float _575 = _572 * _442;
        float _576 = _573 * _443;
        float _577 = _574 * _444;
        float _584 = _421 + (-0.5);
        _587 = cbMtdParam._m0[1u];
        _589 = _587.y * _584;
        float _593 = (_565 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _594 = _593 * (_566 ? _575 : (_575 + (cbSceneParam._m0[72u].w * _547)));
        _595 = _593 * (_566 ? _576 : (_576 + (cbSceneParam._m0[72u].w * _549)));
        _596 = _593 * (_566 ? _577 : (_577 + (cbSceneParam._m0[72u].w * _551)));
        _599 = ((_450 * _454) * _572) * _593;
        _602 = ((_451 * _454) * _573) * _593;
        _605 = ((_452 * _454) * _574) * _593;
        _606 = _584 * 0.999000012874603271484375;
        _617 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_617)
        {
            if ((cbInstanceData._m0[_296 + 7u].x + _606) < 0.5)
            {
                _712 = true;
                break;
            }
        }
        uint _666 = _432 + uint(_563.w);
        if ((cbInstanceData._m0[_666].w < 1.0) && ((cbInstanceData._m0[_666].w + _606) < 0.5))
        {
            _712 = true;
            break;
        }
        if ((_589 + 1.0) < _587.x)
        {
            _712 = true;
            break;
        }
        _712 = false;
        break;
    }
    float _720;
    if (_712)
    {
        discard_state = true;
        _720 = 0.0;
    }
    else
    {
        _720 = _460;
    }
    SV_Target.x = _594;
    SV_Target.y = _595;
    SV_Target.z = _596;
    SV_Target.w = _720;
    SV_Target_1.x = _599;
    SV_Target_1.y = _602;
    SV_Target_1.z = _605;
    SV_Target_1.w = _460;
    discard_exit();
}


