#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 0) uniform texture2D S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _155 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _156 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _157 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _162 = inversesqrt(dot(vec3(_155, _156, _157), vec3(_155, _156, _157)));
    float _169 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _170 = _169 * NORMAL.x;
    float _171 = _169 * NORMAL.y;
    float _172 = _169 * NORMAL.z;
    float _176 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _184;
    float _185;
    float _186;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _184 = (-0.0) - _170;
        _185 = (-0.0) - _171;
        _186 = (-0.0) - _172;
    }
    else
    {
        _184 = _170;
        _185 = _171;
        _186 = _172;
    }
    vec4 _200 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * TEXCOORD.x) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * TEXCOORD.y) + cbTextureTilingScale._m0[0u].w));
    float _203 = _200.x;
    float _204 = _200.y;
    float _205 = _200.z;
    vec4 _221 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_2, SS_WrapLinear), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _224 = _221.x + cbMtdParam._m0[9u].x;
    vec4 _236 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _240 = _236.z;
    float _244 = (_236.x * 2.0) + (-1.0);
    float _246 = (_236.y * 2.0) + (-1.0);
    float _247 = dot(vec2(_244, _246), vec2(_244, _246));
    float _604 = isnan(0.0) ? _247 : (isnan(_247) ? 0.0 : max(_247, 0.0));
    float _253 = sqrt(1.0 - (isnan(1.0) ? _604 : (isnan(_604) ? 1.0 : min(_604, 1.0))));
    vec4 _266 = texture(sampler2D(S_AMSN_Emissive_Glow_Addition_Soft_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * TEXCOORD.x) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * TEXCOORD.y) + cbTextureTilingScale._m0[3u].w));
    float _271 = _266.x * cbMtdParam._m0[9u].y;
    float _272 = _266.y * cbMtdParam._m0[9u].y;
    float _273 = _266.z * cbMtdParam._m0[9u].y;
    float _276 = fma(_253, _184, fma(_246, _176 * TANGENT.x, (_162 * _155) * _244));
    float _279 = fma(_253, _185, fma(_246, _176 * TANGENT.y, (_162 * _156) * _244));
    float _282 = fma(_253, _186, fma(_246, _176 * TANGENT.z, (_162 * _157) * _244));
    float _286 = inversesqrt(dot(vec3(_276, _279, _282), vec3(_276, _279, _282)));
    float _615 = isnan(0.0) ? _240 : (isnan(_240) ? 0.0 : max(_240, 0.0));
    float _626 = isnan(0.0) ? _203 : (isnan(_203) ? 0.0 : max(_203, 0.0));
    float _288 = isnan(1.0) ? _626 : (isnan(_626) ? 1.0 : min(_626, 1.0));
    float _637 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _289 = isnan(1.0) ? _637 : (isnan(_637) ? 1.0 : min(_637, 1.0));
    float _648 = isnan(0.0) ? _205 : (isnan(_205) ? 0.0 : max(_205, 0.0));
    float _290 = isnan(1.0) ? _648 : (isnan(_648) ? 1.0 : min(_648, 1.0));
    float _659 = isnan(0.0) ? _224 : (isnan(_224) ? 0.0 : max(_224, 0.0));
    uint _293 = uint(roundEven(NORMAL.w));
    float _307 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _349 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _359 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _349);
    float _360 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _349);
    float _361 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _349);
    vec4 _366 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _368 = _366.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _471 = sqrt(((_359 * _359) + (_360 * _360)) + (_361 * _361));
        float _478 = (cbMatDynParam._m0[5u].x * _471) + cbMatDynParam._m0[5u].y;
        float _670 = isnan(0.0) ? _478 : (isnan(_478) ? 0.0 : max(_478, 0.0));
        float _479 = isnan(1.0) ? _670 : (isnan(_670) ? 1.0 : min(_670, 1.0));
        float _483 = (cbMatDynParam._m0[5u].z * _471) + cbMatDynParam._m0[5u].w;
        float _681 = isnan(0.0) ? _483 : (isnan(_483) ? 0.0 : max(_483, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _681 : (isnan(_681) ? 1.0 : min(_681, 1.0))) - _479)) + _479) < ((_368 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _519;
    uint _394;
    uint _396;
    float _406;
    float _407;
    float _408;
    float _409;
    float _410;
    float _411;
    float _446;
    float _447;
    vec4 _451;
    float _453;
    float _454;
    bool _465;
    for (;;)
    {
        _394 = _293 * 13u;
        _396 = _394 + 9u;
        uint _397 = _396 + uint(cbMatDynParam._m0[0u].w);
        float _403 = (cbMtdParam._m0[0u].x * _288) * cbInstanceData._m0[_397].x;
        float _404 = (cbMtdParam._m0[0u].y * _289) * cbInstanceData._m0[_397].y;
        float _405 = (cbMtdParam._m0[0u].z * _290) * cbInstanceData._m0[_397].z;
        float _692 = isnan(0.0) ? _403 : (isnan(_403) ? 0.0 : max(_403, 0.0));
        _406 = isnan(1.0) ? _692 : (isnan(_692) ? 1.0 : min(_692, 1.0));
        float _703 = isnan(0.0) ? _404 : (isnan(_404) ? 0.0 : max(_404, 0.0));
        _407 = isnan(1.0) ? _703 : (isnan(_703) ? 1.0 : min(_703, 1.0));
        float _714 = isnan(0.0) ? _405 : (isnan(_405) ? 0.0 : max(_405, 0.0));
        _408 = isnan(1.0) ? _714 : (isnan(_714) ? 1.0 : min(_714, 1.0));
        _409 = _271 * cbInstanceData._m0[_397].x;
        _410 = _272 * cbInstanceData._m0[_397].y;
        _411 = _273 * cbInstanceData._m0[_397].z;
        vec4 _420 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
        float _422 = _420.x;
        float _443 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _422)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _422))) - _307) * 0.100000001490116119384765625;
        float _725 = isnan(0.0) ? _443 : (isnan(_443) ? 0.0 : max(_443, 0.0));
        float _445 = isnan(1.0) ? _725 : (isnan(_725) ? 1.0 : min(_725, 1.0));
        _446 = _445 * cbInstanceData._m0[_394 + 6u].w;
        _447 = _445 * cbMtdParam._m0[2u].w;
        float _448 = _368 + (-0.5);
        _451 = cbMtdParam._m0[1u];
        _453 = _451.y * _448;
        _454 = _448 * 0.999000012874603271484375;
        _465 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_465)
        {
            if ((cbInstanceData._m0[_394 + 7u].x + _454) < 0.5)
            {
                _519 = true;
                break;
            }
        }
        uint _508 = _396 + uint(cbMatDynParam._m0[0u].w);
        if ((cbInstanceData._m0[_508].w < 1.0) && ((cbInstanceData._m0[_508].w + _454) < 0.5))
        {
            _519 = true;
            break;
        }
        if ((_453 + 1.0) < _451.x)
        {
            _519 = true;
            break;
        }
        _519 = false;
        break;
    }
    if (_519)
    {
        discard_state = true;
    }
    float _553;
    float _554;
    float _555;
    float _556;
    if (cbMtdParam._m0[1u].z != 0.0)
    {
        _553 = _446;
        _554 = _446;
        _555 = _446;
        _556 = _446;
    }
    else
    {
        _553 = _447;
        _554 = 0.0;
        _555 = float(floatBitsToUint(cbInstanceData._m0[_394 + 5u]).x) * 0.0039215688593685626983642578125;
        _556 = TEXCOORD.z;
    }
    SV_Target.x = ((_276 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.y = ((_279 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.z = ((_282 * 0.5) * _286) + 0.500488758087158203125;
    SV_Target.w = _554;
    SV_Target_1.x = isnan(1.0) ? _659 : (isnan(_659) ? 1.0 : min(_659, 1.0));
    SV_Target_1.y = isnan(1.0) ? _615 : (isnan(_615) ? 1.0 : min(_615, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _556;
    SV_Target_2.x = _406;
    SV_Target_2.y = _407;
    SV_Target_2.z = _408;
    SV_Target_2.w = _555;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _554;
    SV_Target_4.x = _409 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _410 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _411 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _553;
    discard_exit();
}


