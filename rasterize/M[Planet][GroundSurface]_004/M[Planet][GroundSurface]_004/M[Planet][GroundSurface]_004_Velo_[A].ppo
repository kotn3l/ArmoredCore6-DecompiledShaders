#version 460

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_6;
layout(location = 7) in vec3 TEXCOORD_7;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _110 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _111 = _110 * NORMAL.x;
    float _112 = _110 * NORMAL.y;
    float _113 = _110 * NORMAL.z;
    float _118;
    float _119;
    float _120;
    if ((gl_FrontFacing ? 4294967295u : 0u) == 0u)
    {
        _118 = (-0.0) - _111;
        _119 = (-0.0) - _112;
        _120 = (-0.0) - _113;
    }
    else
    {
        _118 = _111;
        _119 = _112;
        _120 = _113;
    }
    float _165 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _175 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _165);
    float _176 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _165);
    float _177 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _165);
    float _187 = inversesqrt(dot(vec3(_175, _176, _177), vec3(_175, _176, _177)));
    float _194 = dot(vec4(_187 * _175, _187 * _176, _187 * _177, 0.0), vec4(_118, _119, _120, 0.0)) - cbMtdParam._m0[16u].y;
    float _385 = isnan(0.0) ? _194 : (isnan(_194) ? 0.0 : max(_194, 0.0));
    float _204 = exp2(log2((1.0 - exp2(log2(1.0 - (isnan(1.0) ? _385 : (isnan(_385) ? 1.0 : min(_385, 1.0)))))) * cbMtdParam._m0[16u].w) * cbMtdParam._m0[16u].x);
    float _396 = isnan(0.0) ? _204 : (isnan(_204) ? 0.0 : max(_204, 0.0));
    float _205 = isnan(1.0) ? _396 : (isnan(_396) ? 1.0 : min(_396, 1.0));
    uint _207 = uint(roundEven(NORMAL.w));
    float _221 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_5.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_5.z));
    float _237 = fma(TEXCOORD_5.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_5.x)));
    float _241 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_5.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_5.x))) / _237);
    float _242 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_5.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_5.x))) / _237);
    float _243 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_5.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_5.x))) / _237);
    vec4 _249 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _252 = _249.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _288 = sqrt(((_241 * _241) + (_242 * _242)) + (_243 * _243));
        float _295 = (cbMatDynParam._m0[5u].x * _288) + cbMatDynParam._m0[5u].y;
        float _407 = isnan(0.0) ? _295 : (isnan(_295) ? 0.0 : max(_295, 0.0));
        float _296 = isnan(1.0) ? _407 : (isnan(_407) ? 1.0 : min(_407, 1.0));
        float _300 = (cbMatDynParam._m0[5u].z * _288) + cbMatDynParam._m0[5u].w;
        float _418 = isnan(0.0) ? _300 : (isnan(_300) ? 0.0 : max(_300, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _418 : (isnan(_418) ? 1.0 : min(_418, 1.0))) - _296)) + _296) < ((_252 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _333;
    float _263;
    float _264;
    vec4 _268;
    float _270;
    float _271;
    bool _282;
    for (;;)
    {
        _263 = (TEXCOORD_5.x / TEXCOORD_5.w) - (TEXCOORD_6.x / TEXCOORD_6.w);
        _264 = (TEXCOORD_5.y / TEXCOORD_5.w) - (TEXCOORD_6.y / TEXCOORD_6.w);
        float _265 = _252 + (-0.5);
        _268 = cbMtdParam._m0[1u];
        _270 = _268.y * _265;
        _271 = _265 * 0.999000012874603271484375;
        _282 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_282)
        {
            if ((cbInstanceData._m0[(_207 * 13u) + 7u].x + _271) < 0.5)
            {
                _333 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _271) < 0.5))
        {
            _333 = true;
            break;
        }
        if ((_270 + _205) < _268.x)
        {
            _333 = true;
            break;
        }
        _333 = false;
        break;
    }
    if (_333)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _263) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _264) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _221 / (_221 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


