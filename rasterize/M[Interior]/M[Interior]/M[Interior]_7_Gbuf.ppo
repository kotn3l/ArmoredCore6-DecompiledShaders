#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

float _333;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _129 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _130 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _135 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _136 = _135 * _128;
    float _137 = _135 * _129;
    float _138 = _135 * _130;
    float _142 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _147 = _146 * TANGENT.x;
    float _148 = _146 * TANGENT.y;
    float _149 = _146 * TANGENT.z;
    float _194 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _241 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _257 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _264 = inversesqrt(dot(vec3(_147, _148, _149), vec3(_147, _148, _149)));
    float _277 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _194));
    float _278 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _194));
    float _279 = cbMtdParam._m0[23u].x + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _194));
    float _296 = (-0.0) - dot(vec3(_277, _278, _279), vec3(_257 * _136, _257 * _137, _257 * _138));
    float _297 = (-0.0) - dot(vec3(_277, _278, _279), vec3(_264 * _147, _264 * _148, _264 * _149));
    float _298 = (-0.0) - dot(vec3(_277, _278, _279), vec3((-0.0) - (NORMAL.x * _142), (-0.0) - (NORMAL.y * _142), (-0.0) - (NORMAL.z * _142)));
    float _302 = inversesqrt(dot(vec3(_296, _297, _298), vec3(_296, _297, _298)));
    float _303 = _302 * _298;
    float _308 = ((cbMtdParam._m0[19u].y * _296) * _302) + (((_241.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _309 = ((cbMtdParam._m0[19u].z * _297) * _302) + (((_241.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _312 = fract(cbMtdParam._m0[19u].y * TEXCOORD.x);
    float _313 = fract(cbMtdParam._m0[19u].z * TEXCOORD.y);
    float _331;
    float _334;
    float _336;
    if (_308 > 0.0)
    {
        float _317 = (1.0 - _312) / _308;
        _331 = _317;
        _334 = ((cbMtdParam._m0[16u].z + 1.0) - fract(_317 * _303)) * 0.16666667163372039794921875;
        _336 = (fract((_317 * _309) + _313) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_308 < 0.0)
        {
            float _332 = ((-0.0) - _312) / _308;
            frontier_phi_3_2_ladder = _332;
            frontier_phi_3_2_ladder_1 = (fract(_332 * _303) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_332 * _309) + _313) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _333;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _331 = frontier_phi_3_2_ladder;
        _334 = frontier_phi_3_2_ladder_1;
        _336 = frontier_phi_3_2_ladder_2;
    }
    float _362;
    float _364;
    float _366;
    if (_309 > 0.0)
    {
        float _349 = (1.0 - _313) / _309;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_349 < _331)
        {
            frontier_phi_8_5_ladder = _349;
            frontier_phi_8_5_ladder_1 = (fract((_349 * _308) + _312) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_349 * _303) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _331;
            frontier_phi_8_5_ladder_1 = _334;
            frontier_phi_8_5_ladder_2 = _336;
        }
        _362 = frontier_phi_8_5_ladder;
        _364 = frontier_phi_8_5_ladder_1;
        _366 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_309 < 0.0)
        {
            float _363 = ((-0.0) - _313) / _309;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_363 < _331)
            {
                frontier_phi_8_6_ladder_9_ladder = _363;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_363 * _308) + _312) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_363 * _303) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _331;
                frontier_phi_8_6_ladder_9_ladder_1 = _334;
                frontier_phi_8_6_ladder_9_ladder_2 = _336;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _331;
            frontier_phi_8_6_ladder_1 = _334;
            frontier_phi_8_6_ladder_2 = _336;
        }
        _362 = frontier_phi_8_6_ladder;
        _364 = frontier_phi_8_6_ladder_1;
        _366 = frontier_phi_8_6_ladder_2;
    }
    float _370 = (_303 > 0.0) ? (cbMtdParam._m0[16u].y / _303) : 5000.0;
    float _383;
    float _384;
    if (_370 < _362)
    {
        _383 = ((_312 + cbMtdParam._m0[16u].z) + (_370 * _308)) * 0.16666667163372039794921875;
        _384 = (((_370 * _309) + _313) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _383 = _364;
        _384 = _366;
    }
    vec4 _386 = texture(sampler2D(M_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_383, _384));
    float _391 = _386.x * cbMtdParam._m0[13u].x;
    float _392 = _386.y * cbMtdParam._m0[13u].y;
    float _393 = _386.z * cbMtdParam._m0[13u].z;
    float _504 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _515 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _526 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    uint _411 = uint(roundEven(NORMAL.w)) * 13u;
    uint _413 = (_411 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _419 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _504 : (isnan(_504) ? 1.0 : min(_504, 1.0)))) * cbInstanceData._m0[_413].x;
    float _420 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _515 : (isnan(_515) ? 1.0 : min(_515, 1.0)))) * cbInstanceData._m0[_413].y;
    float _421 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _526 : (isnan(_526) ? 1.0 : min(_526, 1.0)))) * cbInstanceData._m0[_413].z;
    float _537 = isnan(0.0) ? _419 : (isnan(_419) ? 0.0 : max(_419, 0.0));
    float _548 = isnan(0.0) ? _420 : (isnan(_420) ? 0.0 : max(_420, 0.0));
    float _559 = isnan(0.0) ? _421 : (isnan(_421) ? 0.0 : max(_421, 0.0));
    uint _425 = _411 + 6u;
    bool _443 = cbMtdParam._m0[1u].z != 0.0;
    float _444 = _443 ? cbInstanceData._m0[_425].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _444;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _443 ? cbInstanceData._m0[_425].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _537 : (isnan(_537) ? 1.0 : min(_537, 1.0));
    SV_Target_2.y = isnan(1.0) ? _548 : (isnan(_548) ? 1.0 : min(_548, 1.0));
    SV_Target_2.z = isnan(1.0) ? _559 : (isnan(_559) ? 1.0 : min(_559, 1.0));
    SV_Target_2.w = _443 ? cbInstanceData._m0[_425].w : (float(floatBitsToUint(cbInstanceData._m0[_411 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _444;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _444;
}


