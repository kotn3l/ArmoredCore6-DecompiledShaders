#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _989;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _190 = _189 * _182;
    float _191 = _189 * _183;
    float _192 = _189 * _184;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _276 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _279 = _276.x;
    vec4 _297 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _314 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _279) + cbMtdParam._m0[12u].x) * _297.x;
    float _316 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _279) + cbMtdParam._m0[12u].y) * _297.y;
    float _318 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _279) + cbMtdParam._m0[12u].z) * _297.z;
    vec4 _339 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _375 = cbMtdParam._m0[21u].w + _261;
    float _376 = cbMtdParam._m0[22u].x + _262;
    float _377 = cbMtdParam._m0[22u].y + _263;
    float _391 = (-0.0) - dot(vec3(_375, _376, _377), vec3(_190, _191, _192));
    float _392 = (-0.0) - dot(vec3(_375, _376, _377), vec3(_204, _205, _206));
    float _393 = (-0.0) - dot(vec3(_375, _376, _377), vec3((-0.0) - _197, (-0.0) - _198, (-0.0) - _199));
    float _397 = inversesqrt(dot(vec3(_391, _392, _393), vec3(_391, _392, _393)));
    float _400 = _397 * _393;
    float _403 = ((_397 * _391) + ((cbMtdParam._m0[19u].w * _279) * ((_339.x * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].z;
    float _404 = ((_397 * _392) + ((cbMtdParam._m0[20u].x * _279) * ((_339.y * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].y;
    float _405 = fract(TEXCOORD.x);
    float _406 = fract(TEXCOORD.y);
    float _412;
    if (_403 > 0.0)
    {
        _412 = (1.0 - _405) / _403;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_403 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _405) / _403;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _412 = frontier_phi_3_2_ladder;
    }
    float _420;
    if (_404 > 0.0)
    {
        _420 = (1.0 - _406) / _404;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _406) / _404;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _420 = frontier_phi_7_6_ladder;
    }
    float _424 = (_400 > 0.0) ? (cbMtdParam._m0[15u].x / _400) : 5000.0;
    float _425 = isnan(_420) ? _412 : (isnan(_412) ? _420 : min(_412, _420));
    float _426 = isnan(_424) ? _425 : (isnan(_425) ? _424 : min(_425, _424));
    float _430 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _437 = ((_426 * _400) + _430) / _430;
    vec4 _461 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_405 + (-0.5)) + (_426 * _403)) / _437) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_406 + (-0.5)) + (_426 * _404)) / _437) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    vec4 _488 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _492 = _488.z;
    float _495 = (_488.x * 2.0) + (-1.0);
    float _496 = (_488.y * 2.0) + (-1.0);
    float _497 = dot(vec2(_495, _496), vec2(_495, _496));
    float _3097 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _502 = sqrt(1.0 - (isnan(1.0) ? _3097 : (isnan(_3097) ? 1.0 : min(_3097, 1.0))));
    float _505 = fma(_502, _197, fma(_496, _204, _495 * _190));
    float _508 = fma(_502, _198, fma(_496, _205, _495 * _191));
    float _511 = fma(_502, _199, fma(_496, _206, _495 * _192));
    float _515 = inversesqrt(dot(vec3(_505, _508, _511), vec3(_505, _508, _511)));
    float _516 = _515 * _505;
    float _517 = _515 * _508;
    float _518 = _515 * _511;
    float _3108 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _519 = isnan(1.0) ? _3108 : (isnan(_3108) ? 1.0 : min(_3108, 1.0));
    float _3119 = isnan(0.0) ? _314 : (isnan(_314) ? 0.0 : max(_314, 0.0));
    float _3130 = isnan(0.0) ? _316 : (isnan(_316) ? 0.0 : max(_316, 0.0));
    float _3141 = isnan(0.0) ? _318 : (isnan(_318) ? 0.0 : max(_318, 0.0));
    float _538 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _542 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _543 = _261 * _542;
    float _544 = _262 * _542;
    float _545 = _263 * _542;
    float _551 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _552 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _573 = fma(_518, cbSceneParam._m0[5u].z, fma(_517, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _516));
    float _576 = fma(_518, cbSceneParam._m0[6u].z, fma(_517, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _516));
    float _579 = fma(_518, cbSceneParam._m0[7u].z, fma(_517, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _516));
    uint _592 = uint(roundEven(NORMAL.w)) * 13u;
    uint _594 = _592 + 9u;
    uint _595 = _594 + uint(cbMatDynParam._m0[0u].w);
    float _601 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3119 : (isnan(_3119) ? 1.0 : min(_3119, 1.0)))) * cbInstanceData._m0[_595].x;
    float _602 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3130 : (isnan(_3130) ? 1.0 : min(_3130, 1.0)))) * cbInstanceData._m0[_595].y;
    float _603 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3141 : (isnan(_3141) ? 1.0 : min(_3141, 1.0)))) * cbInstanceData._m0[_595].z;
    float _3152 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _604 = isnan(1.0) ? _3152 : (isnan(_3152) ? 1.0 : min(_3152, 1.0));
    float _3163 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _605 = isnan(1.0) ? _3163 : (isnan(_3163) ? 1.0 : min(_3163, 1.0));
    float _3174 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _606 = isnan(1.0) ? _3174 : (isnan(_3174) ? 1.0 : min(_3174, 1.0));
    vec4 _615 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _551, cbSceneParam._m0[86u].y * _552));
    float _618 = _615.x * TEXCOORD.z;
    float _619 = dot(vec3(_516, _517, _518), vec3(_543, _544, _545));
    float _622 = _619 * 2.0;
    float _626 = (_622 * _516) - _543;
    float _627 = (_622 * _517) - _544;
    float _628 = (_622 * _518) - _545;
    float _632 = abs(dot(vec3(_543, _544, _545), vec3(_516, _517, _518)));
    float _3185 = isnan(0.0) ? _632 : (isnan(_632) ? 0.0 : max(_632, 0.0));
    float _634 = sqrt(_519);
    float _647 = exp2((_634 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3185 : (isnan(_3185) ? 1.0 : min(_3185, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_634 * 3.0));
    float _679 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _683 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _687 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _988;
    float _990;
    float _991;
    float _992;
    float _993;
    float _994;
    float _995;
    float _996;
    float _997;
    float _998;
    float _999;
    float _1000;
    float _1001;
    float _1002;
    float _1003;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _715 = fma(_687, cbModelParam._m0[26u].z, fma(_683, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _679));
        float _719 = fma(_687, cbModelParam._m0[27u].z, fma(_683, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _679));
        float _723 = fma(_687, cbModelParam._m0[28u].z, fma(_683, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _679));
        float _746 = _679 + _516;
        float _747 = _683 + _517;
        float _748 = _687 + _518;
        float _758 = fma(_748, cbModelParam._m0[26u].z, fma(_747, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _746)) - _715;
        float _759 = fma(_748, cbModelParam._m0[27u].z, fma(_747, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _746)) - _719;
        float _760 = fma(_748, cbModelParam._m0[28u].z, fma(_747, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _746)) - _723;
        float _764 = inversesqrt(dot(vec3(_758, _759, _760), vec3(_758, _759, _760)));
        float _777 = ((_764 * _758) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_715 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _778 = ((_764 * _759) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_719 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _779 = ((_764 * _760) / cbModelParam._m0[34u].z) + ((((((_723 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _782 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_777, _778, _779), 0.0);
        vec4 _789 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_777, _778, _779), 0.0);
        vec4 _796 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_777, _778, _779), 0.0);
        vec4 _803 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_777, _778, _779), 0.0);
        float _816 = exp2((_782.w + (-0.5)) * 20.0) * 2.0;
        float _817 = _816 * (_782.x + (-0.5));
        float _818 = _816 * (_782.y + (-0.5));
        float _819 = _816 * (_782.z + (-0.5));
        float _826 = exp2((_789.w + (-0.5)) * 20.0) * 2.0;
        float _827 = _826 * (_789.x + (-0.5));
        float _828 = _826 * (_789.y + (-0.5));
        float _829 = _826 * (_789.z + (-0.5));
        float _836 = exp2((_796.w + (-0.5)) * 20.0) * 2.0;
        float _837 = _836 * (_796.x + (-0.5));
        float _838 = _836 * (_796.y + (-0.5));
        float _839 = _836 * (_796.z + (-0.5));
        float _846 = exp2((_803.w + (-0.5)) * 20.0) * 2.0;
        float _847 = _846 * (_803.x + (-0.5));
        float _848 = _846 * (_803.y + (-0.5));
        float _849 = _846 * (_803.z + (-0.5));
        float _850 = isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0));
        float _851 = isnan(0.0) ? _848 : (isnan(_848) ? 0.0 : max(_848, 0.0));
        float _852 = isnan(0.0) ? _849 : (isnan(_849) ? 0.0 : max(_849, 0.0));
        float _853 = _817 * 0.5;
        float _854 = _827 * 0.5;
        float _855 = _837 * 0.5;
        float _856 = dot(vec3(_853, _854, _855), vec3(_853, _854, _855));
        float _861 = (_856 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_856);
        float _870 = (dot(vec3(_516, _517, _518), vec3(_861 * _853, _861 * _854, _861 * _855)) + 1.0) * 0.5;
        float _3211 = isnan(0.0) ? _870 : (isnan(_870) ? 0.0 : max(_870, 0.0));
        float _880 = sqrt(((_854 * _854) + (_853 * _853)) + (_855 * _855)) / (_850 + 9.9999997473787516355514526367188e-06);
        float _3222 = isnan(0.0) ? _880 : (isnan(_880) ? 0.0 : max(_880, 0.0));
        float _881 = isnan(1.0) ? _3222 : (isnan(_3222) ? 1.0 : min(_3222, 1.0));
        float _882 = _881 * 2.0;
        float _886 = (1.0 - _881) / (_881 + 1.0);
        float _3233 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        float _887 = isnan(1.0) ? _3233 : (isnan(_3233) ? 1.0 : min(_3233, 1.0));
        float _896 = ((((1.0 - _887) * (_882 + 2.0)) * exp2(log2(isnan(1.0) ? _3211 : (isnan(_3211) ? 1.0 : min(_3211, 1.0))) * (_882 + 1.0))) + _887) * _850;
        float _897 = _818 * 0.5;
        float _898 = _828 * 0.5;
        float _899 = _838 * 0.5;
        float _900 = dot(vec3(_897, _898, _899), vec3(_897, _898, _899));
        float _905 = (_900 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_900);
        float _913 = (dot(vec3(_516, _517, _518), vec3(_905 * _897, _905 * _898, _905 * _899)) + 1.0) * 0.5;
        float _3244 = isnan(0.0) ? _913 : (isnan(_913) ? 0.0 : max(_913, 0.0));
        float _922 = sqrt(((_898 * _898) + (_897 * _897)) + (_899 * _899)) / (_851 + 9.9999997473787516355514526367188e-06);
        float _3255 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _923 = isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0));
        float _924 = _923 * 2.0;
        float _928 = (1.0 - _923) / (_923 + 1.0);
        float _3266 = isnan(0.0) ? _928 : (isnan(_928) ? 0.0 : max(_928, 0.0));
        float _929 = isnan(1.0) ? _3266 : (isnan(_3266) ? 1.0 : min(_3266, 1.0));
        float _938 = ((((1.0 - _929) * (_924 + 2.0)) * exp2(log2(isnan(1.0) ? _3244 : (isnan(_3244) ? 1.0 : min(_3244, 1.0))) * (_924 + 1.0))) + _929) * _851;
        float _939 = _819 * 0.5;
        float _940 = _829 * 0.5;
        float _941 = _839 * 0.5;
        float _942 = dot(vec3(_939, _940, _941), vec3(_939, _940, _941));
        float _947 = (_942 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_942);
        float _955 = (dot(vec3(_516, _517, _518), vec3(_947 * _939, _947 * _940, _947 * _941)) + 1.0) * 0.5;
        float _3277 = isnan(0.0) ? _955 : (isnan(_955) ? 0.0 : max(_955, 0.0));
        float _964 = sqrt(((_940 * _940) + (_939 * _939)) + (_941 * _941)) / (_852 + 9.9999997473787516355514526367188e-06);
        float _3288 = isnan(0.0) ? _964 : (isnan(_964) ? 0.0 : max(_964, 0.0));
        float _965 = isnan(1.0) ? _3288 : (isnan(_3288) ? 1.0 : min(_3288, 1.0));
        float _966 = _965 * 2.0;
        float _970 = (1.0 - _965) / (_965 + 1.0);
        float _3299 = isnan(0.0) ? _970 : (isnan(_970) ? 0.0 : max(_970, 0.0));
        float _971 = isnan(1.0) ? _3299 : (isnan(_3299) ? 1.0 : min(_3299, 1.0));
        float _980 = ((((1.0 - _971) * (_966 + 2.0)) * exp2(log2(isnan(1.0) ? _3277 : (isnan(_3277) ? 1.0 : min(_3277, 1.0))) * (_966 + 1.0))) + _971) * _852;
        _988 = _819;
        _990 = _818;
        _991 = _817;
        _992 = _829;
        _993 = _828;
        _994 = _827;
        _995 = _839;
        _996 = _838;
        _997 = _837;
        _998 = _852;
        _999 = _851;
        _1000 = _850;
        _1001 = cbModelParam._m0[36u].z * (isnan(0.0) ? _896 : (isnan(_896) ? 0.0 : max(_896, 0.0)));
        _1002 = cbModelParam._m0[36u].z * (isnan(0.0) ? _938 : (isnan(_938) ? 0.0 : max(_938, 0.0)));
        _1003 = cbModelParam._m0[36u].z * (isnan(0.0) ? _980 : (isnan(_980) ? 0.0 : max(_980, 0.0)));
    }
    else
    {
        _988 = _989;
        _990 = _989;
        _991 = _989;
        _992 = _989;
        _993 = _989;
        _994 = _989;
        _995 = _989;
        _996 = _989;
        _997 = _989;
        _998 = _989;
        _999 = _989;
        _1000 = _989;
        _1001 = 0.0;
        _1002 = 0.0;
        _1003 = 0.0;
    }
    float _1298;
    float _1299;
    float _1300;
    float _1301;
    float _1302;
    float _1303;
    float _1304;
    float _1305;
    float _1306;
    float _1307;
    float _1308;
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1029 = fma(_687, cbModelParam._m0[30u].z, fma(_683, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _679));
        float _1033 = fma(_687, cbModelParam._m0[31u].z, fma(_683, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _679));
        float _1037 = fma(_687, cbModelParam._m0[32u].z, fma(_683, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _679));
        float _1060 = _679 + _516;
        float _1061 = _683 + _517;
        float _1062 = _687 + _518;
        float _1072 = fma(_1062, cbModelParam._m0[30u].z, fma(_1061, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1060)) - _1029;
        float _1073 = fma(_1062, cbModelParam._m0[31u].z, fma(_1061, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1060)) - _1033;
        float _1074 = fma(_1062, cbModelParam._m0[32u].z, fma(_1061, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1060)) - _1037;
        float _1078 = inversesqrt(dot(vec3(_1072, _1073, _1074), vec3(_1072, _1073, _1074)));
        float _1091 = ((_1078 * _1072) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1029 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1092 = ((_1078 * _1073) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1033 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1093 = ((_1078 * _1074) / cbModelParam._m0[35u].z) + ((((((_1037 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1095 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1091, _1092, _1093), 0.0);
        vec4 _1102 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1091, _1092, _1093), 0.0);
        vec4 _1109 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1091, _1092, _1093), 0.0);
        vec4 _1116 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1091, _1092, _1093), 0.0);
        float _1128 = exp2((_1095.w + (-0.5)) * 20.0) * 2.0;
        float _1129 = _1128 * (_1095.x + (-0.5));
        float _1130 = _1128 * (_1095.y + (-0.5));
        float _1131 = _1128 * (_1095.z + (-0.5));
        float _1138 = exp2((_1102.w + (-0.5)) * 20.0) * 2.0;
        float _1139 = _1138 * (_1102.x + (-0.5));
        float _1140 = _1138 * (_1102.y + (-0.5));
        float _1141 = _1138 * (_1102.z + (-0.5));
        float _1148 = exp2((_1109.w + (-0.5)) * 20.0) * 2.0;
        float _1149 = _1148 * (_1109.x + (-0.5));
        float _1150 = _1148 * (_1109.y + (-0.5));
        float _1151 = _1148 * (_1109.z + (-0.5));
        float _1158 = exp2((_1116.w + (-0.5)) * 20.0) * 2.0;
        float _1159 = _1158 * (_1116.x + (-0.5));
        float _1160 = _1158 * (_1116.y + (-0.5));
        float _1161 = _1158 * (_1116.z + (-0.5));
        float _1162 = isnan(0.0) ? _1159 : (isnan(_1159) ? 0.0 : max(_1159, 0.0));
        float _1163 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1164 = isnan(0.0) ? _1161 : (isnan(_1161) ? 0.0 : max(_1161, 0.0));
        float _1165 = _1129 * 0.5;
        float _1166 = _1139 * 0.5;
        float _1167 = _1149 * 0.5;
        float _1168 = dot(vec3(_1165, _1166, _1167), vec3(_1165, _1166, _1167));
        float _1173 = (_1168 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1168);
        float _1181 = (dot(vec3(_516, _517, _518), vec3(_1173 * _1165, _1173 * _1166, _1173 * _1167)) + 1.0) * 0.5;
        float _3340 = isnan(0.0) ? _1181 : (isnan(_1181) ? 0.0 : max(_1181, 0.0));
        float _1190 = sqrt(((_1166 * _1166) + (_1165 * _1165)) + (_1167 * _1167)) / (_1162 + 9.9999997473787516355514526367188e-06);
        float _3351 = isnan(0.0) ? _1190 : (isnan(_1190) ? 0.0 : max(_1190, 0.0));
        float _1191 = isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0));
        float _1192 = _1191 * 2.0;
        float _1196 = (1.0 - _1191) / (_1191 + 1.0);
        float _3362 = isnan(0.0) ? _1196 : (isnan(_1196) ? 0.0 : max(_1196, 0.0));
        float _1197 = isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0));
        float _1206 = ((((1.0 - _1197) * (_1192 + 2.0)) * exp2(log2(isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0))) * (_1192 + 1.0))) + _1197) * _1162;
        float _1207 = _1130 * 0.5;
        float _1208 = _1140 * 0.5;
        float _1209 = _1150 * 0.5;
        float _1210 = dot(vec3(_1207, _1208, _1209), vec3(_1207, _1208, _1209));
        float _1215 = (_1210 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1210);
        float _1223 = (dot(vec3(_516, _517, _518), vec3(_1215 * _1207, _1215 * _1208, _1215 * _1209)) + 1.0) * 0.5;
        float _3373 = isnan(0.0) ? _1223 : (isnan(_1223) ? 0.0 : max(_1223, 0.0));
        float _1232 = sqrt(((_1208 * _1208) + (_1207 * _1207)) + (_1209 * _1209)) / (_1163 + 9.9999997473787516355514526367188e-06);
        float _3384 = isnan(0.0) ? _1232 : (isnan(_1232) ? 0.0 : max(_1232, 0.0));
        float _1233 = isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0));
        float _1234 = _1233 * 2.0;
        float _1238 = (1.0 - _1233) / (_1233 + 1.0);
        float _3395 = isnan(0.0) ? _1238 : (isnan(_1238) ? 0.0 : max(_1238, 0.0));
        float _1239 = isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0));
        float _1248 = ((((1.0 - _1239) * (_1234 + 2.0)) * exp2(log2(isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0))) * (_1234 + 1.0))) + _1239) * _1163;
        float _1249 = _1131 * 0.5;
        float _1250 = _1141 * 0.5;
        float _1251 = _1151 * 0.5;
        float _1252 = dot(vec3(_1249, _1250, _1251), vec3(_1249, _1250, _1251));
        float _1257 = (_1252 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1252);
        float _1265 = (dot(vec3(_516, _517, _518), vec3(_1257 * _1249, _1257 * _1250, _1257 * _1251)) + 1.0) * 0.5;
        float _3406 = isnan(0.0) ? _1265 : (isnan(_1265) ? 0.0 : max(_1265, 0.0));
        float _1274 = sqrt(((_1250 * _1250) + (_1249 * _1249)) + (_1251 * _1251)) / (_1164 + 9.9999997473787516355514526367188e-06);
        float _3417 = isnan(0.0) ? _1274 : (isnan(_1274) ? 0.0 : max(_1274, 0.0));
        float _1275 = isnan(1.0) ? _3417 : (isnan(_3417) ? 1.0 : min(_3417, 1.0));
        float _1276 = _1275 * 2.0;
        float _1280 = (1.0 - _1275) / (_1275 + 1.0);
        float _3428 = isnan(0.0) ? _1280 : (isnan(_1280) ? 0.0 : max(_1280, 0.0));
        float _1281 = isnan(1.0) ? _3428 : (isnan(_3428) ? 1.0 : min(_3428, 1.0));
        float _1290 = ((((1.0 - _1281) * (_1276 + 2.0)) * exp2(log2(isnan(1.0) ? _3406 : (isnan(_3406) ? 1.0 : min(_3406, 1.0))) * (_1276 + 1.0))) + _1281) * _1164;
        _1298 = _1131;
        _1299 = _1130;
        _1300 = _1129;
        _1301 = _1141;
        _1302 = _1140;
        _1303 = _1139;
        _1304 = _1151;
        _1305 = _1150;
        _1306 = _1149;
        _1307 = _1164;
        _1308 = _1163;
        _1309 = _1162;
        _1310 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0)));
        _1311 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1248 : (isnan(_1248) ? 0.0 : max(_1248, 0.0)));
        _1312 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1290 : (isnan(_1290) ? 0.0 : max(_1290, 0.0)));
    }
    else
    {
        _1298 = _989;
        _1299 = _989;
        _1300 = _989;
        _1301 = _989;
        _1302 = _989;
        _1303 = _989;
        _1304 = _989;
        _1305 = _989;
        _1306 = _989;
        _1307 = _989;
        _1308 = _989;
        _1309 = _989;
        _1310 = 0.0;
        _1311 = 0.0;
        _1312 = 0.0;
    }
    float _1322 = (cbModelParam._m0[1u].x * (_1310 - _1001)) + _1001;
    float _1323 = (cbModelParam._m0[1u].x * (_1311 - _1002)) + _1002;
    float _1324 = (cbModelParam._m0[1u].x * (_1312 - _1003)) + _1003;
    float _1345 = fma(_1324, cbSceneParam._m0[89u].z, fma(_1323, cbSceneParam._m0[89u].y, _1322 * cbSceneParam._m0[89u].x));
    float _1348 = fma(_1324, cbSceneParam._m0[90u].z, fma(_1323, cbSceneParam._m0[90u].y, _1322 * cbSceneParam._m0[90u].x));
    float _1351 = fma(_1324, cbSceneParam._m0[91u].z, fma(_1323, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1322));
    float _1366 = _626 * 0.5;
    float _1367 = _627 * 0.5;
    float _1368 = _628 * 0.5;
    float _1369 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_1300, _1303, _1306, _1309));
    float _1372 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_1299, _1302, _1305, _1308));
    float _1375 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_1298, _1301, _1304, _1307));
    float _1409;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1382 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_988, _992, _995, _998));
        float _1386 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_990, _993, _996, _999));
        float _1390 = dot(vec4(_1366, _1367, _1368, 1.0), vec4(_991, _994, _997, _1000));
        float _1397 = dot(vec4(cbModelParam._m0[39u]), vec4(_1366, _1367, _1368, 1.0));
        _1409 = dot(vec3(isnan(0.0) ? _1390 : (isnan(_1390) ? 0.0 : max(_1390, 0.0)), isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0)), isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1397) ? 0.0 : (isnan(0.0) ? _1397 : max(0.0, _1397))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1409 = 1.0;
    }
    float _1420;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1411 = dot(vec4(cbModelParam._m0[40u]), vec4(_1366, _1367, _1368, 1.0));
        _1420 = dot(vec3(isnan(0.0) ? _1369 : (isnan(_1369) ? 0.0 : max(_1369, 0.0)), isnan(0.0) ? _1372 : (isnan(_1372) ? 0.0 : max(_1372, 0.0)), isnan(0.0) ? _1375 : (isnan(_1375) ? 0.0 : max(_1375, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1411) ? 0.0 : (isnan(0.0) ? _1411 : max(0.0, _1411))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1420 = 1.0;
    }
    float _1424 = (_1420 * cbModelParam._m0[1u].x) + (_1409 * (1.0 - cbModelParam._m0[1u].x));
    float _1434 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _519);
    float _1435 = isnan(_1434) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1434 : min(cbModelParam._m0[25u].z, _1434));
    float _1516;
    float _1518;
    float _1520;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1483 = fma(_687, cbModelParam._m0[13u].z, fma(_683, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _679)) + cbModelParam._m0[13u].w;
        float _1487 = fma(_687, cbModelParam._m0[14u].z, fma(_683, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _679)) + cbModelParam._m0[14u].w;
        float _1491 = fma(_687, cbModelParam._m0[15u].z, fma(_683, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _679)) + cbModelParam._m0[15u].w;
        float _1494 = fma(_628, cbModelParam._m0[13u].z, fma(_627, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _626));
        float _1497 = fma(_628, cbModelParam._m0[14u].z, fma(_627, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _626));
        float _1500 = fma(_628, cbModelParam._m0[15u].z, fma(_627, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _626));
        float _1528;
        if (_1494 > 0.0)
        {
            _1528 = abs((1.0 - _1483) / _1494);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1494 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1483 + 1.0) / _1494);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1528 = frontier_phi_22_20_ladder;
        }
        float _1897;
        if (_1497 > 0.0)
        {
            _1897 = abs((1.0 - _1487) / _1497);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1497 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1487 + 1.0) / _1497);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1897 = frontier_phi_31_27_ladder;
        }
        float _2213;
        if (_1500 > 0.0)
        {
            _2213 = abs((1.0 - _1491) / _1500);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1500 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1491 + 1.0) / _1500);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _2213 = frontier_phi_45_38_ladder;
        }
        float _2215 = isnan(_1897) ? _1528 : (isnan(_1528) ? _1897 : min(_1528, _1897));
        float _2216 = isnan(_2213) ? _2215 : (isnan(_2215) ? _2213 : min(_2215, _2213));
        float _2220 = (_2216 * _1494) + _1483;
        float _2221 = (_2216 * _1497) + _1487;
        float _2222 = (_2216 * _1500) + _1491;
        float _2223 = _2216 * 9.9999997473787516355514526367188e-05;
        float _2224 = (-1.0) - _2223;
        float _2226 = _2223 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_2222 > _2226) || ((_2222 < _2224) || ((_2221 > _2226) || ((_2221 < _2224) || ((_2220 < _2224) || (_2220 > _2226))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2348 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2222, cbModelParam._m0[9u].z, fma(_2221, cbModelParam._m0[9u].y, _2220 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2222, cbModelParam._m0[10u].z, fma(_2221, cbModelParam._m0[10u].y, _2220 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2222, cbModelParam._m0[11u].z, fma(_2221, cbModelParam._m0[11u].y, _2220 * cbModelParam._m0[11u].x))), _1435);
            frontier_phi_21_45_ladder = _2348.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2348.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2348.x * cbModelParam._m0[1u].y;
        }
        _1516 = frontier_phi_21_45_ladder_2;
        _1518 = frontier_phi_21_45_ladder_1;
        _1520 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1504 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_626, _627, _628), _1435);
        _1516 = _1504.x * cbModelParam._m0[1u].y;
        _1518 = _1504.y * cbModelParam._m0[1u].y;
        _1520 = _1504.z * cbModelParam._m0[1u].y;
    }
    float _1524 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _519);
    float _1525 = isnan(_1524) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1524 : min(cbModelParam._m0[25u].w, _1524));
    float _1613;
    float _1615;
    float _1617;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1577 = fma(_687, cbModelParam._m0[21u].z, fma(_683, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _679)) + cbModelParam._m0[21u].w;
        float _1581 = fma(_687, cbModelParam._m0[22u].z, fma(_683, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _679)) + cbModelParam._m0[22u].w;
        float _1585 = fma(_687, cbModelParam._m0[23u].z, fma(_683, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _679)) + cbModelParam._m0[23u].w;
        float _1588 = fma(_628, cbModelParam._m0[21u].z, fma(_627, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _626));
        float _1591 = fma(_628, cbModelParam._m0[22u].z, fma(_627, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _626));
        float _1594 = fma(_628, cbModelParam._m0[23u].z, fma(_627, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _626));
        float _1902;
        if (_1588 > 0.0)
        {
            _1902 = abs((1.0 - _1577) / _1588);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1588 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1577 + 1.0) / _1588);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1902 = frontier_phi_33_29_ladder;
        }
        float _2239;
        if (_1591 > 0.0)
        {
            _2239 = abs((1.0 - _1581) / _1591);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1591 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1581 + 1.0) / _1591);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _2239 = frontier_phi_47_40_ladder;
        }
        float _2408;
        if (_1594 > 0.0)
        {
            _2408 = abs((1.0 - _1585) / _1594);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1594 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1585 + 1.0) / _1594);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2408 = frontier_phi_61_56_ladder;
        }
        float _2410 = isnan(_2239) ? _1902 : (isnan(_1902) ? _2239 : min(_1902, _2239));
        float _2411 = isnan(_2408) ? _2410 : (isnan(_2410) ? _2408 : min(_2410, _2408));
        float _2415 = (_2411 * _1588) + _1577;
        float _2416 = (_2411 * _1591) + _1581;
        float _2417 = (_2411 * _1594) + _1585;
        float _2418 = _2411 * 9.9999997473787516355514526367188e-05;
        float _2419 = (-1.0) - _2418;
        float _2421 = _2418 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2417 > _2421) || ((_2417 < _2419) || ((_2416 > _2421) || ((_2416 < _2419) || ((_2415 < _2419) || (_2415 > _2421))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2650 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2417, cbModelParam._m0[17u].z, fma(_2416, cbModelParam._m0[17u].y, _2415 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2417, cbModelParam._m0[18u].z, fma(_2416, cbModelParam._m0[18u].y, _2415 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2417, cbModelParam._m0[19u].z, fma(_2416, cbModelParam._m0[19u].y, _2415 * cbModelParam._m0[19u].x))), _1525);
            frontier_phi_30_61_ladder = _2650.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2650.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2650.x * cbModelParam._m0[1u].z;
        }
        _1613 = frontier_phi_30_61_ladder_2;
        _1615 = frontier_phi_30_61_ladder_1;
        _1617 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1597 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_626, _627, _628), _1525);
        _1613 = _1597.x * cbModelParam._m0[1u].z;
        _1615 = _1597.y * cbModelParam._m0[1u].z;
        _1617 = _1597.z * cbModelParam._m0[1u].z;
    }
    float _1629 = ((((1.0 - _647) * ((_634 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_647 * _634)) * _618;
    float _1630 = _1629 * ((cbModelParam._m0[1u].w * (_1613 - _1516)) + _1516);
    float _1631 = _1629 * ((cbModelParam._m0[1u].w * (_1615 - _1518)) + _1518);
    float _1632 = _1629 * ((cbModelParam._m0[1u].w * (_1617 - _1520)) + _1520);
    float _1635 = fma(_1632, cbSceneParam._m0[89u].z, fma(_1631, cbSceneParam._m0[89u].y, _1630 * cbSceneParam._m0[89u].x));
    float _1638 = fma(_1632, cbSceneParam._m0[90u].z, fma(_1631, cbSceneParam._m0[90u].y, _1630 * cbSceneParam._m0[90u].x));
    float _1641 = fma(_1632, cbSceneParam._m0[91u].z, fma(_1631, cbSceneParam._m0[91u].y, _1630 * cbSceneParam._m0[91u].x));
    vec4 _1649 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_551, _552));
    float _1651 = _1649.w;
    float _1663 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1651);
    float _1664 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1651);
    float _1665 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1651);
    uvec4 _1669 = floatBitsToUint(cbInstanceData._m0[_592 + 5u]);
    uint _1671 = _1669.x * 14u;
    uint _1672 = _1671 + 13u;
    float _1677 = _618 + (-1.0);
    float _1680 = (cbLight._m0[_1672].x * _1677) + 1.0;
    float _1681 = (cbLight._m0[_1672].y * _1677) + 1.0;
    uint _1682 = _1671 + 5u;
    float _1688 = isnan(1.0) ? _1681 : (isnan(_1681) ? 1.0 : min(_1681, 1.0));
    uint _1692 = _1671 + 4u;
    float _1701 = isnan(1.0) ? _1680 : (isnan(_1680) ? 1.0 : min(_1680, 1.0));
    uint _1705 = _1671 | 1u;
    float _1716 = dot(vec3(cbLight._m0[_1671].xyz), vec3(_516, _517, _518));
    float _1719 = dot(vec3(cbLight._m0[_1705].xyz), vec3(_516, _517, _518));
    float _3564 = isnan(0.0) ? _1716 : (isnan(_1716) ? 0.0 : max(_1716, 0.0));
    float _3575 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
    float _1724 = (isnan(1.0) ? _3564 : (isnan(_3564) ? 1.0 : min(_3564, 1.0))) * 0.3183098733425140380859375;
    float _1726 = (isnan(1.0) ? _3575 : (isnan(_3575) ? 1.0 : min(_3575, 1.0))) * 0.3183098733425140380859375;
    float _1733 = ((cbLight._m0[_1682].x * _1688) * _1726) + (((cbLight._m0[_1692].x * _1663) * _1701) * _1724);
    float _1734 = ((_1688 * cbLight._m0[_1682].y) * _1726) + (((cbLight._m0[_1692].y * _1664) * _1701) * _1724);
    float _1735 = ((_1688 * cbLight._m0[_1682].z) * _1726) + (((cbLight._m0[_1692].z * _1665) * _1701) * _1724);
    uint _1737 = _1671 + 8u;
    float _1750 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1671].w)) * _519) * 0.949999988079071044921875);
    float _1751 = _1750 * _1750;
    float _1752 = cbLight._m0[_1671].x + _543;
    float _1753 = cbLight._m0[_1671].y + _544;
    float _1754 = cbLight._m0[_1671].z + _545;
    float _1758 = inversesqrt(dot(vec3(_1752, _1753, _1754), vec3(_1752, _1753, _1754)));
    float _1759 = _1758 * _1752;
    float _1760 = _1758 * _1753;
    float _1761 = _1758 * _1754;
    float _1762 = dot(vec3(_516, _517, _518), vec3(cbLight._m0[_1671].xyz));
    float _3586 = isnan(0.0) ? _1762 : (isnan(_1762) ? 0.0 : max(_1762, 0.0));
    float _1765 = isnan(1.0) ? _3586 : (isnan(_3586) ? 1.0 : min(_3586, 1.0));
    float _3597 = isnan(0.0) ? _619 : (isnan(_619) ? 0.0 : max(_619, 0.0));
    float _1766 = isnan(1.0) ? _3597 : (isnan(_3597) ? 1.0 : min(_3597, 1.0));
    float _1767 = dot(vec3(_516, _517, _518), vec3(_1759, _1760, _1761));
    float _3608 = isnan(0.0) ? _1767 : (isnan(_1767) ? 0.0 : max(_1767, 0.0));
    float _1770 = isnan(1.0) ? _3608 : (isnan(_3608) ? 1.0 : min(_3608, 1.0));
    float _1771 = dot(vec3(cbLight._m0[_1671].xyz), vec3(_1759, _1760, _1761));
    float _3619 = isnan(0.0) ? _1771 : (isnan(_1771) ? 0.0 : max(_1771, 0.0));
    float _1775 = _1751 * _1751;
    float _1779 = ((_1770 * _1770) * (_1775 + (-1.0))) + 1.0;
    float _1790 = (exp2(log2(1.0 - (isnan(1.0) ? _3619 : (isnan(_3619) ? 1.0 : min(_3619, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1791 = 1.0 - _1751;
    float _1802 = (0.5 / (((_1766 * ((_1765 * _1791) + _1751)) + 9.9999999392252902907785028219223e-09) + (((_1766 * _1791) + _1751) * _1765))) * _1765;
    float _3630 = isnan(0.0) ? _1802 : (isnan(_1802) ? 0.0 : max(_1802, 0.0));
    float _1804 = (isnan(1.0) ? _3630 : (isnan(_3630) ? 1.0 : min(_3630, 1.0))) * (_1775 / ((_1779 * _1779) * 3.141590118408203125));
    uint _1818 = _1671 + 9u;
    float _1829 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1705].w)) * _519) * 0.949999988079071044921875);
    float _1830 = _1829 * _1829;
    float _1831 = cbLight._m0[_1705].x + _543;
    float _1832 = cbLight._m0[_1705].y + _544;
    float _1833 = cbLight._m0[_1705].z + _545;
    float _1837 = inversesqrt(dot(vec3(_1831, _1832, _1833), vec3(_1831, _1832, _1833)));
    float _1838 = _1837 * _1831;
    float _1839 = _1837 * _1832;
    float _1840 = _1837 * _1833;
    float _1841 = dot(vec3(_516, _517, _518), vec3(cbLight._m0[_1705].xyz));
    float _3641 = isnan(0.0) ? _1841 : (isnan(_1841) ? 0.0 : max(_1841, 0.0));
    float _1844 = isnan(1.0) ? _3641 : (isnan(_3641) ? 1.0 : min(_3641, 1.0));
    float _1845 = dot(vec3(_516, _517, _518), vec3(_1838, _1839, _1840));
    float _3652 = isnan(0.0) ? _1845 : (isnan(_1845) ? 0.0 : max(_1845, 0.0));
    float _1848 = isnan(1.0) ? _3652 : (isnan(_3652) ? 1.0 : min(_3652, 1.0));
    float _1849 = dot(vec3(cbLight._m0[_1705].xyz), vec3(_1838, _1839, _1840));
    float _3663 = isnan(0.0) ? _1849 : (isnan(_1849) ? 0.0 : max(_1849, 0.0));
    float _1853 = _1830 * _1830;
    float _1857 = ((_1848 * _1848) * (_1853 + (-1.0))) + 1.0;
    float _1866 = (exp2(log2(1.0 - (isnan(1.0) ? _3663 : (isnan(_3663) ? 1.0 : min(_3663, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1867 = 1.0 - _1830;
    float _1877 = (0.5 / (((_1766 * ((_1844 * _1867) + _1830)) + 9.9999999392252902907785028219223e-09) + (((_1766 * _1867) + _1830) * _1844))) * _1844;
    float _3674 = isnan(0.0) ? _1877 : (isnan(_1877) ? 0.0 : max(_1877, 0.0));
    float _1879 = (isnan(1.0) ? _3674 : (isnan(_3674) ? 1.0 : min(_3674, 1.0))) * (_1853 / ((_1857 * _1857) * 3.141590118408203125));
    float _1889 = (((_1866 * cbLight._m0[_1818].x) * _1879) * _1688) + ((((cbLight._m0[_1737].x * _1663) * _1790) * _1804) * _1701);
    float _1890 = (((_1866 * cbLight._m0[_1818].y) * _1879) * _1688) + ((((cbLight._m0[_1737].y * _1664) * _1790) * _1804) * _1701);
    float _1891 = (((_1866 * cbLight._m0[_1818].z) * _1879) * _1688) + ((((cbLight._m0[_1737].z * _1665) * _1790) * _1804) * _1701);
    float _2006;
    float _2008;
    float _2010;
    float _2012;
    float _2014;
    float _2016;
    if (_1669.y == 0u)
    {
        float _1946 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1947 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1946;
        float _1948 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1946;
        float _1949 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1946;
        uvec4 _1961 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1962 = _1961.x;
        uint _1973 = uint((float(_1961.y) * floor(float(uint(cbSceneParam._m0[85u].y * _552) / _1962))) + floor(float(uint(cbSceneParam._m0[85u].x * _551) / _1962)));
        float _1983 = (log2(_1949 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1984 = isnan(0.0) ? _1983 : (isnan(_1983) ? 0.0 : max(_1983, 0.0));
        uint _1987 = uint(isnan(14.0) ? _1984 : (isnan(_1984) ? 14.0 : min(_1984, 14.0)));
        uvec4 _1992 = texelFetch(g_lightClusterGridBuffer, int(((_1987 << 2u) + (_1973 << 6u)) >> 2u));
        uint _1993 = _1992.x;
        uint _1994 = _1961.z;
        float _2100;
        float _2102;
        float _2104;
        float _2106;
        float _2108;
        float _2110;
        if (((((1u << ((_1994 >> 4u) & 15u)) + 4294967295u) & _1993) == 0u) || ((_1994 & 240u) == 0u))
        {
            _2100 = 0.0;
            _2102 = 0.0;
            _2104 = 0.0;
            _2106 = 0.0;
            _2108 = 0.0;
            _2110 = 0.0;
        }
        else
        {
            float _2101;
            float _2103;
            float _2105;
            float _2107;
            float _2109;
            float _2111;
            float _2276 = 0.0;
            float _2277 = 0.0;
            float _2278 = 0.0;
            float _2279 = 0.0;
            float _2280 = 0.0;
            float _2281 = 0.0;
            uint _2282 = 0u;
            uint _2291;
            bool _2292;
            for (;;)
            {
                _2291 = texelFetch(g_lightClassification, int((((_1987 << 5u) + (_1973 << 9u)) + (_2282 << 2u)) >> 2u)).x;
                _2292 = _2291 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2292)
                {
                    frontier_phi_58_pred = _2277;
                    frontier_phi_58_pred_1 = _2281;
                    frontier_phi_58_pred_2 = _2280;
                    frontier_phi_58_pred_3 = _2279;
                    frontier_phi_58_pred_4 = _2278;
                    frontier_phi_58_pred_5 = _2276;
                }
                else
                {
                    float _2451;
                    float _2452;
                    float _2453;
                    float _2454;
                    float _2455;
                    float _2456;
                    uint _2457;
                    _2451 = _2276;
                    _2452 = _2277;
                    _2453 = _2278;
                    _2454 = _2279;
                    _2455 = _2280;
                    _2456 = _2281;
                    _2457 = _2291;
                    float _2357;
                    float _2358;
                    float _2359;
                    float _2360;
                    float _2361;
                    float _2362;
                    for (;;)
                    {
                        uint _2461 = uint(findLSB(_2457)) + (_2282 << 5u);
                        uint _2458 = (_2457 + 4294967295u) & _2457;
                        uint _2463 = _2461 * 48u;
                        vec4 _2477 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2463)).x, texelFetch(g_PointLightRenderingBuffer, int(_2463 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2463 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2463 + 3u)).x));
                        uint _2483 = (_2461 * 48u) + 4u;
                        vec4 _2496 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2483)).x, texelFetch(g_PointLightRenderingBuffer, int(_2483 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2483 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2483 + 3u)).x));
                        uint _2502 = (_2461 * 48u) + 8u;
                        vec3 _2513 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2502)).x, texelFetch(g_PointLightRenderingBuffer, int(_2502 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2502 + 2u)).x));
                        float _2517 = _2477.x - _1947;
                        float _2518 = _2477.y - _1948;
                        float _2519 = _2477.z - _1949;
                        float _2520 = dot(vec3(_2517, _2518, _2519), vec3(_2517, _2518, _2519));
                        float _2523 = inversesqrt(_2520);
                        float _2524 = _2523 * _2517;
                        float _2525 = _2523 * _2518;
                        float _2526 = _2523 * _2519;
                        float _2527 = dot(vec3(_573, _576, _579), vec3(_2524, _2525, _2526));
                        float _2532 = 1.0 - (_2520 * _2477.w);
                        float _3695 = isnan(0.0) ? _2532 : (isnan(_2532) ? 0.0 : max(_2532, 0.0));
                        float _2533 = isnan(1.0) ? _3695 : (isnan(_3695) ? 1.0 : min(_3695, 1.0));
                        float _2534 = sqrt(_2520) * _2496.w;
                        float _2537 = 1.39999997615814208984375 / (_2534 + 1.39999997615814208984375);
                        float _2538 = _2537 * _2537;
                        float _2541 = ((1.0 - _2538) * _2527) + _2538;
                        float _2544 = _2534 * _2534;
                        float _2548 = ((isnan(0.0) ? _2541 : (isnan(_2541) ? 0.0 : max(_2541, 0.0))) * _2533) / ((_2544 * 0.699999988079071044921875) + 1.0);
                        float _2552 = (-0.0) - _1947;
                        float _2553 = (-0.0) - _1948;
                        float _2554 = (-0.0) - _1949;
                        float _2558 = inversesqrt(dot(vec3(_2552, _2553, _2554), vec3(_2552, _2553, _2554)));
                        float _2559 = _2558 * _2552;
                        float _2560 = _2558 * _2553;
                        float _2561 = _2558 * _2554;
                        float _2569 = exp2(log2(1.0 / ((_2544 * 3.5) + 5.0)) * 0.25);
                        float _2570 = 1.0 - _634;
                        float _2577 = sqrt(1.0 - ((1.0 - (_2570 * _2570)) * (1.0 - (_2569 * _2569))));
                        float _2578 = _2577 * _2577;
                        float _2579 = _2578 * _2578;
                        float _2580 = _2559 + _2524;
                        float _2581 = _2560 + _2525;
                        float _2582 = _2561 + _2526;
                        float _2586 = inversesqrt(dot(vec3(_2580, _2581, _2582), vec3(_2580, _2581, _2582)));
                        float _2590 = dot(vec3(_573, _576, _579), vec3(_2559, _2560, _2561));
                        float _3711 = isnan(0.0) ? _2590 : (isnan(_2590) ? 0.0 : max(_2590, 0.0));
                        float _2593 = isnan(1.0) ? _3711 : (isnan(_3711) ? 1.0 : min(_3711, 1.0));
                        float _2594 = dot(vec3(_573, _576, _579), vec3(_2586 * _2580, _2586 * _2581, _2586 * _2582));
                        float _3722 = isnan(0.0) ? _2594 : (isnan(_2594) ? 0.0 : max(_2594, 0.0));
                        float _2597 = isnan(1.0) ? _3722 : (isnan(_3722) ? 1.0 : min(_3722, 1.0));
                        float _2601 = ((_2597 * _2597) * (_2579 + (-1.0))) + 1.0;
                        float _2602 = _2537 * _2578;
                        float _2603 = _2602 * _2602;
                        float _2606 = ((1.0 - _2603) * _2527) + _2603;
                        float _3733 = isnan(0.0) ? _2606 : (isnan(_2606) ? 0.0 : max(_2606, 0.0));
                        float _2607 = isnan(1.0) ? _3733 : (isnan(_3733) ? 1.0 : min(_3733, 1.0));
                        float _2608 = 1.0 - _2578;
                        float _2618 = (0.5 / (((_2607 * ((_2593 * _2608) + _2578)) + 9.9999999392252902907785028219223e-09) + (((_2607 * _2608) + _2578) * _2593))) * _2607;
                        float _3744 = isnan(0.0) ? _2618 : (isnan(_2618) ? 0.0 : max(_2618, 0.0));
                        float _2629 = (((_2579 * 3.1415927410125732421875) * (isnan(1.0) ? _3744 : (isnan(_3744) ? 1.0 : min(_3744, 1.0)))) / ((_2601 * _2601) * ((_2544 * 2.1991131305694580078125) + 3.141590118408203125))) * _2533;
                        _2360 = (_2548 * _2496.x) + _2454;
                        _2361 = (_2548 * _2496.y) + _2455;
                        _2362 = (_2548 * _2496.z) + _2456;
                        _2357 = (_2629 * _2513.x) + _2451;
                        _2358 = (_2629 * _2513.y) + _2452;
                        _2359 = (_2629 * _2513.z) + _2453;
                        if (_2458 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2451 = _2357;
                            _2452 = _2358;
                            _2453 = _2359;
                            _2454 = _2360;
                            _2455 = _2361;
                            _2456 = _2362;
                            _2457 = _2458;
                        }
                    }
                    frontier_phi_58_pred = _2358;
                    frontier_phi_58_pred_1 = _2362;
                    frontier_phi_58_pred_2 = _2361;
                    frontier_phi_58_pred_3 = _2360;
                    frontier_phi_58_pred_4 = _2359;
                    frontier_phi_58_pred_5 = _2357;
                }
                _2103 = frontier_phi_58_pred;
                _2111 = frontier_phi_58_pred_1;
                _2109 = frontier_phi_58_pred_2;
                _2107 = frontier_phi_58_pred_3;
                _2105 = frontier_phi_58_pred_4;
                _2101 = frontier_phi_58_pred_5;
                uint _2283 = _2282 + 1u;
                if (_2283 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2276 = _2101;
                    _2277 = _2103;
                    _2278 = _2105;
                    _2279 = _2107;
                    _2280 = _2109;
                    _2281 = _2111;
                    _2282 = _2283;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2100 = _2101;
            _2102 = _2103;
            _2104 = _2105;
            _2106 = _2107;
            _2108 = _2109;
            _2110 = _2111;
        }
        uvec4 _2114 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2115 = _2114.z;
        uint _2117 = (_2115 >> 8u) & 15u;
        float _2244;
        float _2246;
        float _2248;
        float _2250;
        float _2252;
        float _2254;
        if (((4294967295u << _2117) & _1993) == 0u)
        {
            _2244 = _2100;
            _2246 = _2102;
            _2248 = _2104;
            _2250 = _2106;
            _2252 = _2108;
            _2254 = _2110;
        }
        else
        {
            float _2269 = inversesqrt(dot(vec3(_1947, _1948, _1949), vec3(_1947, _1948, _1949)));
            float _2270 = _2269 * _1947;
            float _2271 = _2269 * _1948;
            float _2272 = _2269 * _1949;
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_2117 < ((_2115 >> 12u) & 15u))
            {
                float _2245;
                float _2247;
                float _2249;
                float _2251;
                float _2253;
                float _2255;
                float _2434 = _2100;
                float _2435 = _2102;
                float _2436 = _2104;
                float _2437 = _2106;
                float _2438 = _2108;
                float _2439 = _2110;
                uint _2440 = _2117;
                uint _2449;
                bool _2450;
                for (;;)
                {
                    _2449 = texelFetch(g_lightClassification, int((((_1987 << 5u) + (_1973 << 9u)) + (_2440 << 2u)) >> 2u)).x;
                    _2450 = _2449 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2450)
                    {
                        frontier_phi_67_pred = _2439;
                        frontier_phi_67_pred_1 = _2438;
                        frontier_phi_67_pred_2 = _2437;
                        frontier_phi_67_pred_3 = _2436;
                        frontier_phi_67_pred_4 = _2435;
                        frontier_phi_67_pred_5 = _2434;
                    }
                    else
                    {
                        float _2655;
                        float _2656;
                        float _2657;
                        float _2658;
                        float _2659;
                        float _2660;
                        float _2949;
                        float _2950;
                        float _2951;
                        float _2952;
                        float _2953;
                        float _2954;
                        float _2668 = _2434;
                        float _2669 = _2435;
                        float _2670 = _2436;
                        float _2671 = _2437;
                        float _2672 = _2438;
                        float _2673 = _2439;
                        uint _2674 = _2449;
                        uint _2675;
                        vec4 _2700;
                        float _2701;
                        vec4 _2716;
                        vec3 _2728;
                        vec4 _2744;
                        vec4 _2759;
                        float _2805;
                        bool _2806;
                        for (;;)
                        {
                            uint _2685 = ((_2440 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2674));
                            _2675 = (_2674 + 4294967295u) & _2674;
                            uint _2687 = _2685 * 40u;
                            _2700 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2687)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2687 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2687 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2687 + 3u)).x));
                            _2701 = _2700.w;
                            uint _2703 = (_2685 * 40u) + 4u;
                            _2716 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2703)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2703 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2703 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2703 + 3u)).x));
                            uint _2718 = (_2685 * 40u) + 8u;
                            _2728 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2718)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2718 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2718 + 2u)).x));
                            uint _2731 = (_2685 * 40u) + 16u;
                            _2744 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2731)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2731 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2731 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2731 + 3u)).x));
                            uint _2746 = (_2685 * 40u) + 20u;
                            _2759 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2746)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2746 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2746 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2746 + 3u)).x));
                            uint _2761 = (_2685 * 40u) + 24u;
                            vec4 _2774 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2761)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2761 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2761 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2761 + 3u)).x));
                            uint _2780 = (_2685 * 40u) + 28u;
                            vec4 _2793 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2780)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2780 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2780 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2780 + 3u)).x));
                            _2805 = fma(_1949, _2793.z, fma(_1948, _2793.y, _2793.x * _1947)) + _2793.w;
                            _2806 = !((fma(_1949, _2774.z, fma(_1948, _2774.y, _2774.x * _1947)) + _2774.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2806)
                            {
                                float _2833 = _2700.x - _1947;
                                float _2834 = _2700.y - _1948;
                                float _2835 = _2700.z - _1949;
                                float _2836 = dot(vec3(_2833, _2834, _2835), vec3(_2833, _2834, _2835));
                                float _2839 = inversesqrt(_2836);
                                float _2840 = _2839 * _2833;
                                float _2841 = _2839 * _2834;
                                float _2842 = _2839 * _2835;
                                float _2846 = 1.0 - (_2836 / (_2701 * _2701));
                                float _3755 = isnan(0.0) ? _2846 : (isnan(_2846) ? 0.0 : max(_2846, 0.0));
                                float _2847 = isnan(1.0) ? _3755 : (isnan(_3755) ? 1.0 : min(_3755, 1.0));
                                float _2851 = sqrt(_2836) * _2716.w;
                                float _2853 = 1.39999997615814208984375 / (_2851 + 1.39999997615814208984375);
                                float _2854 = _2853 * _2853;
                                float _2857 = ((1.0 - _2854) * dot(vec3(_2840, _2841, _2842), vec3(_573, _576, _579))) + _2854;
                                float _2860 = _2851 * _2851;
                                float _2864 = (fma(_1949, _2744.z, fma(_1948, _2744.y, _2744.x * _1947)) + _2744.w) / _2805;
                                float _2865 = (fma(_1949, _2759.z, fma(_1948, _2759.y, _2759.x * _1947)) + _2759.w) / _2805;
                                float _2869 = 1.0 - dot(vec2(_2864, _2865), vec2(_2864, _2865));
                                float _3771 = isnan(0.0) ? _2869 : (isnan(_2869) ? 0.0 : max(_2869, 0.0));
                                float _2870 = isnan(1.0) ? _3771 : (isnan(_3771) ? 1.0 : min(_3771, 1.0));
                                float _2871 = _2870 * (((isnan(0.0) ? _2857 : (isnan(_2857) ? 0.0 : max(_2857, 0.0))) * _2847) / ((_2860 * 0.699999988079071044921875) + 1.0));
                                float _2883 = exp2(log2(1.0 / ((_2860 * 3.5) + 5.0)) * 0.25);
                                float _2884 = 1.0 - _634;
                                float _2891 = sqrt(1.0 - ((1.0 - (_2884 * _2884)) * (1.0 - (_2883 * _2883))));
                                float _2892 = _2891 * _2891;
                                float _2893 = _2892 * _2892;
                                float _2894 = _2840 - _2270;
                                float _2895 = _2841 - _2271;
                                float _2896 = _2842 - _2272;
                                float _2900 = inversesqrt(dot(vec3(_2894, _2895, _2896), vec3(_2894, _2895, _2896)));
                                float _2904 = dot(vec3(_573, _576, _579), vec3((-0.0) - _2270, (-0.0) - _2271, (-0.0) - _2272));
                                float _3782 = isnan(0.0) ? _2904 : (isnan(_2904) ? 0.0 : max(_2904, 0.0));
                                float _2907 = isnan(1.0) ? _3782 : (isnan(_3782) ? 1.0 : min(_3782, 1.0));
                                float _2908 = dot(vec3(_573, _576, _579), vec3(_2900 * _2894, _2900 * _2895, _2900 * _2896));
                                float _3793 = isnan(0.0) ? _2908 : (isnan(_2908) ? 0.0 : max(_2908, 0.0));
                                float _2911 = isnan(1.0) ? _3793 : (isnan(_3793) ? 1.0 : min(_3793, 1.0));
                                float _2915 = ((_2911 * _2911) * (_2893 + (-1.0))) + 1.0;
                                float _2916 = _2853 * _2892;
                                float _2917 = _2916 * _2916;
                                float _2923 = ((1.0 - _2917) * dot(vec3(_573, _576, _579), vec3(_2840, _2841, _2842))) + _2917;
                                float _3804 = isnan(0.0) ? _2923 : (isnan(_2923) ? 0.0 : max(_2923, 0.0));
                                float _2924 = isnan(1.0) ? _3804 : (isnan(_3804) ? 1.0 : min(_3804, 1.0));
                                float _2925 = 1.0 - _2892;
                                float _2935 = (0.5 / (((_2924 * ((_2907 * _2925) + _2892)) + 9.9999999392252902907785028219223e-09) + (((_2924 * _2925) + _2892) * _2907))) * _2924;
                                float _3815 = isnan(0.0) ? _2935 : (isnan(_2935) ? 0.0 : max(_2935, 0.0));
                                float _2945 = (_2870 * _2847) * (((_2893 * 3.1415927410125732421875) * (isnan(1.0) ? _3815 : (isnan(_3815) ? 1.0 : min(_3815, 1.0)))) / ((_2915 * _2915) * ((_2860 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _2871 * _2716.z;
                                frontier_phi_73_pred_1 = _2871 * _2716.y;
                                frontier_phi_73_pred_2 = _2871 * _2716.x;
                                frontier_phi_73_pred_3 = _2945 * _2728.z;
                                frontier_phi_73_pred_4 = _2945 * _2728.y;
                                frontier_phi_73_pred_5 = _2945 * _2728.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2954 = frontier_phi_73_pred;
                            _2953 = frontier_phi_73_pred_1;
                            _2952 = frontier_phi_73_pred_2;
                            _2951 = frontier_phi_73_pred_3;
                            _2950 = frontier_phi_73_pred_4;
                            _2949 = frontier_phi_73_pred_5;
                            _2658 = _2952 + _2671;
                            _2659 = _2953 + _2672;
                            _2660 = _2954 + _2673;
                            _2655 = _2949 + _2668;
                            _2656 = _2950 + _2669;
                            _2657 = _2951 + _2670;
                            if (_2675 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2668 = _2655;
                                _2669 = _2656;
                                _2670 = _2657;
                                _2671 = _2658;
                                _2672 = _2659;
                                _2673 = _2660;
                                _2674 = _2675;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2660;
                        frontier_phi_67_pred_1 = _2659;
                        frontier_phi_67_pred_2 = _2658;
                        frontier_phi_67_pred_3 = _2657;
                        frontier_phi_67_pred_4 = _2656;
                        frontier_phi_67_pred_5 = _2655;
                    }
                    _2255 = frontier_phi_67_pred;
                    _2253 = frontier_phi_67_pred_1;
                    _2251 = frontier_phi_67_pred_2;
                    _2249 = frontier_phi_67_pred_3;
                    _2247 = frontier_phi_67_pred_4;
                    _2245 = frontier_phi_67_pred_5;
                    uint _2441 = _2440 + 1u;
                    if (_2441 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2434 = _2245;
                        _2435 = _2247;
                        _2436 = _2249;
                        _2437 = _2251;
                        _2438 = _2253;
                        _2439 = _2255;
                        _2440 = _2441;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _2251;
                frontier_phi_49_50_ladder_1 = _2255;
                frontier_phi_49_50_ladder_2 = _2253;
                frontier_phi_49_50_ladder_3 = _2249;
                frontier_phi_49_50_ladder_4 = _2247;
                frontier_phi_49_50_ladder_5 = _2245;
            }
            else
            {
                frontier_phi_49_50_ladder = _2106;
                frontier_phi_49_50_ladder_1 = _2110;
                frontier_phi_49_50_ladder_2 = _2108;
                frontier_phi_49_50_ladder_3 = _2104;
                frontier_phi_49_50_ladder_4 = _2102;
                frontier_phi_49_50_ladder_5 = _2100;
            }
            _2244 = frontier_phi_49_50_ladder_5;
            _2246 = frontier_phi_49_50_ladder_4;
            _2248 = frontier_phi_49_50_ladder_3;
            _2250 = frontier_phi_49_50_ladder;
            _2252 = frontier_phi_49_50_ladder_2;
            _2254 = frontier_phi_49_50_ladder_1;
        }
        float _2259 = isnan(1.0) ? _618 : (isnan(_618) ? 1.0 : min(_618, 1.0));
        _2006 = (_2259 * _2250) + _1733;
        _2008 = (_2259 * _2252) + _1734;
        _2010 = (_2259 * _2254) + _1735;
        _2012 = ((_2244 * 0.039999999105930328369140625) * _2259) + _1889;
        _2014 = ((_2246 * 0.039999999105930328369140625) * _2259) + _1890;
        _2016 = ((_2248 * 0.039999999105930328369140625) * _2259) + _1891;
    }
    else
    {
        _2006 = _1733;
        _2008 = _1734;
        _2010 = _1735;
        _2012 = _1889;
        _2014 = _1890;
        _2016 = _1891;
    }
    uint _2022 = _594 + uint(cbMatDynParam._m0[0u].w);
    float _3831 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _3842 = isnan(0.0) ? _605 : (isnan(_605) ? 0.0 : max(_605, 0.0));
    float _3853 = isnan(0.0) ? _606 : (isnan(_606) ? 0.0 : max(_606, 0.0));
    float _2047 = (((isnan(1.0) ? _3831 : (isnan(_3831) ? 1.0 : min(_3831, 1.0))) * (_2006 + ((isnan(0.0) ? _1345 : (isnan(_1345) ? 0.0 : max(_1345, 0.0))) * _618))) + ((_2012 + ((isnan(0.0) ? _1635 : (isnan(_1635) ? 0.0 : max(_1635, 0.0))) * _1424)) * cbPerFrame._m0[3u].x)) + (((_461.x * _279) * cbMtdParam._m0[9u].x) * cbInstanceData._m0[_2022].x);
    float _2049 = ((((_461.y * _279) * cbMtdParam._m0[9u].y) * cbInstanceData._m0[_2022].y) + ((_2014 + ((isnan(0.0) ? _1638 : (isnan(_1638) ? 0.0 : max(_1638, 0.0))) * _1424)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3842 : (isnan(_3842) ? 1.0 : min(_3842, 1.0))) * (_2008 + ((isnan(0.0) ? _1348 : (isnan(_1348) ? 0.0 : max(_1348, 0.0))) * _618)));
    float _2051 = ((((_461.z * _279) * cbMtdParam._m0[9u].z) * cbInstanceData._m0[_2022].z) + ((_2016 + ((isnan(0.0) ? _1641 : (isnan(_1641) ? 0.0 : max(_1641, 0.0))) * _1424)) * cbPerFrame._m0[3u].x)) + ((isnan(1.0) ? _3853 : (isnan(_3853) ? 1.0 : min(_3853, 1.0))) * (_2010 + ((isnan(0.0) ? _1351 : (isnan(_1351) ? 0.0 : max(_1351, 0.0))) * _618)));
    uint _2055 = _592 + 6u;
    float _2063 = _551 / cbSceneParam._m0[86u].x;
    float _2064 = _552 / cbSceneParam._m0[86u].y;
    vec4 _2078 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2063, _2064, (log2((isnan(cbSceneParam._m0[77u].w) ? _538 : (isnan(_538) ? cbSceneParam._m0[77u].w : min(_538, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2080 = _2078.x;
    float _2081 = _2078.y;
    float _2082 = _2078.z;
    float _2083 = _2078.w;
    float _2163;
    float _2165;
    float _2167;
    float _2169;
    if (_538 > cbSceneParam._m0[78u].w)
    {
        float _2125 = isnan(_538) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _538 : min(cbSceneParam._m0[80u].w, _538));
        float _2126 = _2125 / _538;
        float _2137 = _2126 * _261;
        float _2138 = _262 * _2126;
        float _2139 = (-0.0) - _2138;
        float _2140 = _2126 * _263;
        float _2142 = (cbSceneParam._m0[77u].w * _2139) / _2125;
        float _2143 = _2142 + cbSceneParam._m0[79u].w;
        float _2144 = cbSceneParam._m0[79u].w - _2138;
        float _2150 = sqrt(((_2137 * _2137) + (_2138 * _2138)) + (_2140 * _2140));
        float _2153 = (1.0 - (cbSceneParam._m0[77u].w / _2125)) * _2150;
        float _2159 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2161 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2370;
        if (abs((_2139 - _2142) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2370 = ((((_2143 > 0.0) ? exp2(_2159 * _2143) : (2.0 - exp2(_2161 * _2143))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2153;
        }
        else
        {
            float _2305 = 1.0 / cbSceneParam._m0[80u].x;
            float _2306 = isnan(_2144) ? _2143 : (isnan(_2143) ? _2144 : max(_2143, _2144));
            float _2307 = isnan(_2144) ? _2143 : (isnan(_2143) ? _2144 : min(_2143, _2144));
            float _2316 = isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : min(_2306, 0.0));
            float _2317 = isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : min(_2307, 0.0));
            _2370 = ((abs(_2150 / _2139) * cbSceneParam._m0[80u].y) * ((((_2316 - _2317) * 2.0) - ((exp2(_2159 * (isnan(0.0) ? _2306 : (isnan(_2306) ? 0.0 : max(_2306, 0.0)))) - exp2(_2159 * (isnan(0.0) ? _2307 : (isnan(_2307) ? 0.0 : max(_2307, 0.0))))) * _2305)) - ((exp2(_2161 * _2316) - exp2(_2161 * _2317)) * _2305))) + (_2153 * cbSceneParam._m0[80u].z);
        }
        vec4 _2372 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2063, _2064, 1.0), 0.0);
        float _2381 = exp2((_2370 * (-1.44269502162933349609375)) * (1.0 - _2372.w));
        float _2382 = log2(_2381);
        float _2398 = log2(_2083);
        _2163 = (exp2(_2398 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2382 * cbSceneParam._m0[78u].x)) * _2372.x) / cbSceneParam._m0[78u].x)) + _2080;
        _2165 = (exp2(_2398 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2382 * cbSceneParam._m0[78u].y)) * _2372.y) / cbSceneParam._m0[78u].y)) + _2081;
        _2167 = (exp2(_2398 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2382 * cbSceneParam._m0[78u].z)) * _2372.z) / cbSceneParam._m0[78u].z)) + _2082;
        _2169 = _2381 * _2083;
    }
    else
    {
        _2163 = _2080;
        _2165 = _2081;
        _2167 = _2082;
        _2169 = _2083;
    }
    float _2181 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2182 = _2181 == 3.0;
    float _2183 = log2(_2169);
    float _2190 = exp2(_2183 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2047 : (isnan(_2047) ? 0.0 : max(_2047, 0.0)));
    float _2191 = exp2(_2183 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2049 : (isnan(_2049) ? 0.0 : max(_2049, 0.0)));
    float _2192 = exp2(_2183 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2051 : (isnan(_2051) ? 0.0 : max(_2051, 0.0)));
    float _2201 = (_2181 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2201 * (_2182 ? _2190 : (_2190 + (cbSceneParam._m0[72u].w * _2163)));
    SV_Target.y = _2201 * (_2182 ? _2191 : (_2191 + (cbSceneParam._m0[72u].w * _2165)));
    SV_Target.z = _2201 * (_2182 ? _2192 : (_2192 + (cbSceneParam._m0[72u].w * _2167)));
    SV_Target.w = cbInstanceData._m0[_2055].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2055].w;
}


