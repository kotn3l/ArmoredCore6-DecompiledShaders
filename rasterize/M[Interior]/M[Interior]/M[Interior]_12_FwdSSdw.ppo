#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _918;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _180 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _181 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _182 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _187 = inversesqrt(dot(vec3(_180, _181, _182), vec3(_180, _181, _182)));
    float _194 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _201 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _249 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _259 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _249);
    float _260 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _249);
    float _261 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _249);
    vec4 _283 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _318 = cbMtdParam._m0[21u].w + _259;
    float _319 = cbMtdParam._m0[22u].x + _260;
    float _320 = cbMtdParam._m0[22u].y + _261;
    float _334 = (-0.0) - dot(vec3(_318, _319, _320), vec3(_187 * _180, _187 * _181, _187 * _182));
    float _335 = (-0.0) - dot(vec3(_318, _319, _320), vec3(_201 * TANGENT.x, _201 * TANGENT.y, _201 * TANGENT.z));
    float _336 = (-0.0) - dot(vec3(_318, _319, _320), vec3((-0.0) - (_194 * NORMAL.x), (-0.0) - (_194 * NORMAL.y), (-0.0) - (_194 * NORMAL.z)));
    float _340 = inversesqrt(dot(vec3(_334, _335, _336), vec3(_334, _335, _336)));
    float _343 = _340 * _336;
    float _344 = (_340 * _334) + (((_283.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _345 = (_340 * _335) + (((_283.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _346 = _344 * cbMtdParam._m0[18u].z;
    float _347 = _345 * cbMtdParam._m0[18u].y;
    float _348 = fract(TEXCOORD.x);
    float _349 = fract(TEXCOORD.y);
    float _355;
    if (_346 > 0.0)
    {
        _355 = (1.0 - _348) / _346;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_346 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _348) / _346;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _355 = frontier_phi_3_2_ladder;
    }
    float _363;
    if (_347 > 0.0)
    {
        _363 = (1.0 - _349) / _347;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_347 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _349) / _347;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _363 = frontier_phi_7_6_ladder;
    }
    bool _365 = _343 > 0.0;
    float _367 = _365 ? (cbMtdParam._m0[15u].x / _343) : 5000.0;
    float _368 = isnan(_363) ? _355 : (isnan(_355) ? _363 : min(_355, _363));
    float _369 = isnan(_367) ? _368 : (isnan(_368) ? _367 : min(_368, _367));
    float _373 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _374 = _348 + (-0.5);
    float _377 = _349 + (-0.5);
    float _380 = ((_369 * _343) + _373) / _373;
    vec4 _404 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_374 + (_369 * _346)) / _380) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_377 + (_369 * _347)) / _380) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _414 = cbMtdParam._m0[9u].x * _404.x;
    float _415 = cbMtdParam._m0[9u].y * _404.y;
    float _416 = cbMtdParam._m0[9u].z * _404.z;
    float _434 = _344 * cbMtdParam._m0[20u].z;
    float _435 = _345 * cbMtdParam._m0[20u].y;
    bool _436 = _434 > 0.0;
    float _441;
    if (_436)
    {
        _441 = (1.0 - _348) / _434;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_434 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _348) / _434;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _441 = frontier_phi_11_10_ladder;
    }
    bool _443 = _435 > 0.0;
    float _448;
    if (_443)
    {
        _448 = (1.0 - _349) / _435;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_435 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _349) / _435;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _448 = frontier_phi_15_14_ladder;
    }
    float _451 = _365 ? (cbMtdParam._m0[16u].x / _343) : 5000.0;
    float _452 = isnan(_448) ? _441 : (isnan(_441) ? _448 : min(_441, _448));
    float _453 = isnan(_451) ? _452 : (isnan(_452) ? _451 : min(_452, _451));
    float _457 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _461 = ((_453 * _343) + _457) / _457;
    float _466 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _468 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _484 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_374 + (_453 * _434)) / _461) + 0.5) + _466) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_377 + (_453 * _435)) / _461) + 0.5) + _468) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _496;
    if (_436)
    {
        _496 = (1.0 - _348) / _434;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_434 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _348) / _434;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _496 = frontier_phi_19_18_ladder;
    }
    float _502;
    if (_443)
    {
        _502 = (1.0 - _349) / _435;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_435 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _349) / _435;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _502 = frontier_phi_23_22_ladder;
    }
    float _504 = isnan(_502) ? _496 : (isnan(_496) ? _502 : min(_496, _502));
    float _505 = isnan(_451) ? _504 : (isnan(_504) ? _451 : min(_504, _451));
    float _512 = ((_505 * _343) + _457) / _457;
    vec4 _533 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_374 + (_505 * _434)) / _512) + 0.5) + _466) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_377 + (_505 * _435)) / _512) + 0.5) + _468) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _535 = _533.x;
    float _542 = (_535 * ((_484.x * cbMtdParam._m0[10u].x) - _414)) + _414;
    float _543 = (_535 * ((_484.y * cbMtdParam._m0[10u].y) - _415)) + _415;
    float _544 = (_535 * ((_484.z * cbMtdParam._m0[10u].z) - _416)) + _416;
    float _2873 = isnan(0.0) ? _542 : (isnan(_542) ? 0.0 : max(_542, 0.0));
    float _2884 = isnan(0.0) ? _543 : (isnan(_543) ? 0.0 : max(_543, 0.0));
    float _2895 = isnan(0.0) ? _544 : (isnan(_544) ? 0.0 : max(_544, 0.0));
    float _563 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _567 = inversesqrt(dot(vec3(_259, _260, _261), vec3(_259, _260, _261)));
    float _568 = _259 * _567;
    float _569 = _260 * _567;
    float _570 = _261 * _567;
    float _576 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _577 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _590 = uint(roundEven(NORMAL.w)) * 13u;
    uint _593 = (_590 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _599 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2873 : (isnan(_2873) ? 1.0 : min(_2873, 1.0)))) * cbInstanceData._m0[_593].x;
    float _600 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2884 : (isnan(_2884) ? 1.0 : min(_2884, 1.0)))) * cbInstanceData._m0[_593].y;
    float _601 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2895 : (isnan(_2895) ? 1.0 : min(_2895, 1.0)))) * cbInstanceData._m0[_593].z;
    float _2906 = isnan(0.0) ? _599 : (isnan(_599) ? 0.0 : max(_599, 0.0));
    float _602 = isnan(1.0) ? _2906 : (isnan(_2906) ? 1.0 : min(_2906, 1.0));
    float _2917 = isnan(0.0) ? _600 : (isnan(_600) ? 0.0 : max(_600, 0.0));
    float _603 = isnan(1.0) ? _2917 : (isnan(_2917) ? 1.0 : min(_2917, 1.0));
    float _2928 = isnan(0.0) ? _601 : (isnan(_601) ? 0.0 : max(_601, 0.0));
    float _604 = isnan(1.0) ? _2928 : (isnan(_2928) ? 1.0 : min(_2928, 1.0));
    vec4 _613 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _576, cbSceneParam._m0[86u].y * _577));
    float _616 = _613.x * TEXCOORD.z;
    float _617 = (-0.0) - _568;
    float _618 = (-0.0) - _569;
    float _619 = (-0.0) - _570;
    float _641 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _645 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _649 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _917;
    float _919;
    float _920;
    float _921;
    float _922;
    float _923;
    float _924;
    float _925;
    float _926;
    float _927;
    float _928;
    float _929;
    float _930;
    float _931;
    float _932;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _705 = (cbModelParam._m0[37u].x * ((((fma(_649, cbModelParam._m0[26u].z, fma(_645, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _641)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _707 = (cbModelParam._m0[37u].y * ((((fma(_649, cbModelParam._m0[27u].z, fma(_645, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _641)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _708 = (((((fma(_649, cbModelParam._m0[28u].z, fma(_645, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _641)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _711 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _718 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _725 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        vec4 _732 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_705, _707, _708), 0.0);
        float _745 = exp2((_711.w + (-0.5)) * 20.0) * 2.0;
        float _746 = _745 * (_711.x + (-0.5));
        float _747 = _745 * (_711.y + (-0.5));
        float _748 = _745 * (_711.z + (-0.5));
        float _755 = exp2((_718.w + (-0.5)) * 20.0) * 2.0;
        float _756 = _755 * (_718.x + (-0.5));
        float _757 = _755 * (_718.y + (-0.5));
        float _758 = _755 * (_718.z + (-0.5));
        float _765 = exp2((_725.w + (-0.5)) * 20.0) * 2.0;
        float _766 = _765 * (_725.x + (-0.5));
        float _767 = _765 * (_725.y + (-0.5));
        float _768 = _765 * (_725.z + (-0.5));
        float _775 = exp2((_732.w + (-0.5)) * 20.0) * 2.0;
        float _776 = _775 * (_732.x + (-0.5));
        float _777 = _775 * (_732.y + (-0.5));
        float _778 = _775 * (_732.z + (-0.5));
        float _779 = isnan(0.0) ? _776 : (isnan(_776) ? 0.0 : max(_776, 0.0));
        float _780 = isnan(0.0) ? _777 : (isnan(_777) ? 0.0 : max(_777, 0.0));
        float _781 = isnan(0.0) ? _778 : (isnan(_778) ? 0.0 : max(_778, 0.0));
        float _782 = _746 * 0.5;
        float _783 = _756 * 0.5;
        float _784 = _766 * 0.5;
        float _785 = dot(vec3(_782, _783, _784), vec3(_782, _783, _784));
        float _790 = (_785 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_785);
        float _799 = (dot(vec3(0.0), vec3(_790 * _782, _790 * _783, _790 * _784)) + 1.0) * 0.5;
        float _2954 = isnan(0.0) ? _799 : (isnan(_799) ? 0.0 : max(_799, 0.0));
        float _809 = sqrt(((_783 * _783) + (_782 * _782)) + (_784 * _784)) / (_779 + 9.9999997473787516355514526367188e-06);
        float _2965 = isnan(0.0) ? _809 : (isnan(_809) ? 0.0 : max(_809, 0.0));
        float _810 = isnan(1.0) ? _2965 : (isnan(_2965) ? 1.0 : min(_2965, 1.0));
        float _811 = _810 * 2.0;
        float _815 = (1.0 - _810) / (_810 + 1.0);
        float _2976 = isnan(0.0) ? _815 : (isnan(_815) ? 0.0 : max(_815, 0.0));
        float _816 = isnan(1.0) ? _2976 : (isnan(_2976) ? 1.0 : min(_2976, 1.0));
        float _825 = ((((1.0 - _816) * (_811 + 2.0)) * exp2(log2(isnan(1.0) ? _2954 : (isnan(_2954) ? 1.0 : min(_2954, 1.0))) * (_811 + 1.0))) + _816) * _779;
        float _826 = _747 * 0.5;
        float _827 = _757 * 0.5;
        float _828 = _767 * 0.5;
        float _829 = dot(vec3(_826, _827, _828), vec3(_826, _827, _828));
        float _834 = (_829 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_829);
        float _842 = (dot(vec3(0.0), vec3(_834 * _826, _834 * _827, _834 * _828)) + 1.0) * 0.5;
        float _2987 = isnan(0.0) ? _842 : (isnan(_842) ? 0.0 : max(_842, 0.0));
        float _851 = sqrt(((_827 * _827) + (_826 * _826)) + (_828 * _828)) / (_780 + 9.9999997473787516355514526367188e-06);
        float _2998 = isnan(0.0) ? _851 : (isnan(_851) ? 0.0 : max(_851, 0.0));
        float _852 = isnan(1.0) ? _2998 : (isnan(_2998) ? 1.0 : min(_2998, 1.0));
        float _853 = _852 * 2.0;
        float _857 = (1.0 - _852) / (_852 + 1.0);
        float _3009 = isnan(0.0) ? _857 : (isnan(_857) ? 0.0 : max(_857, 0.0));
        float _858 = isnan(1.0) ? _3009 : (isnan(_3009) ? 1.0 : min(_3009, 1.0));
        float _867 = ((((1.0 - _858) * (_853 + 2.0)) * exp2(log2(isnan(1.0) ? _2987 : (isnan(_2987) ? 1.0 : min(_2987, 1.0))) * (_853 + 1.0))) + _858) * _780;
        float _868 = _748 * 0.5;
        float _869 = _758 * 0.5;
        float _870 = _768 * 0.5;
        float _871 = dot(vec3(_868, _869, _870), vec3(_868, _869, _870));
        float _876 = (_871 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_871);
        float _884 = (dot(vec3(0.0), vec3(_876 * _868, _876 * _869, _876 * _870)) + 1.0) * 0.5;
        float _3020 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
        float _893 = sqrt(((_869 * _869) + (_868 * _868)) + (_870 * _870)) / (_781 + 9.9999997473787516355514526367188e-06);
        float _3031 = isnan(0.0) ? _893 : (isnan(_893) ? 0.0 : max(_893, 0.0));
        float _894 = isnan(1.0) ? _3031 : (isnan(_3031) ? 1.0 : min(_3031, 1.0));
        float _895 = _894 * 2.0;
        float _899 = (1.0 - _894) / (_894 + 1.0);
        float _3042 = isnan(0.0) ? _899 : (isnan(_899) ? 0.0 : max(_899, 0.0));
        float _900 = isnan(1.0) ? _3042 : (isnan(_3042) ? 1.0 : min(_3042, 1.0));
        float _909 = ((((1.0 - _900) * (_895 + 2.0)) * exp2(log2(isnan(1.0) ? _3020 : (isnan(_3020) ? 1.0 : min(_3020, 1.0))) * (_895 + 1.0))) + _900) * _781;
        _917 = _748;
        _919 = _747;
        _920 = _746;
        _921 = _758;
        _922 = _757;
        _923 = _756;
        _924 = _768;
        _925 = _767;
        _926 = _766;
        _927 = _781;
        _928 = _780;
        _929 = _779;
        _930 = cbModelParam._m0[36u].z * (isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0)));
        _931 = cbModelParam._m0[36u].z * (isnan(0.0) ? _867 : (isnan(_867) ? 0.0 : max(_867, 0.0)));
        _932 = cbModelParam._m0[36u].z * (isnan(0.0) ? _909 : (isnan(_909) ? 0.0 : max(_909, 0.0)));
    }
    else
    {
        _917 = _918;
        _919 = _918;
        _920 = _918;
        _921 = _918;
        _922 = _918;
        _923 = _918;
        _924 = _918;
        _925 = _918;
        _926 = _918;
        _927 = _918;
        _928 = _918;
        _929 = _918;
        _930 = 0.0;
        _931 = 0.0;
        _932 = 0.0;
    }
    float _1193;
    float _1194;
    float _1195;
    float _1196;
    float _1197;
    float _1198;
    float _1199;
    float _1200;
    float _1201;
    float _1202;
    float _1203;
    float _1204;
    float _1205;
    float _1206;
    float _1207;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _986 = (cbModelParam._m0[38u].x * ((((fma(_649, cbModelParam._m0[30u].z, fma(_645, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _641)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _987 = (cbModelParam._m0[38u].y * ((((fma(_649, cbModelParam._m0[31u].z, fma(_645, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _641)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _988 = (((((fma(_649, cbModelParam._m0[32u].z, fma(_645, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _641)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _990 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _997 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _1004 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        vec4 _1011 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_986, _987, _988), 0.0);
        float _1023 = exp2((_990.w + (-0.5)) * 20.0) * 2.0;
        float _1024 = _1023 * (_990.x + (-0.5));
        float _1025 = _1023 * (_990.y + (-0.5));
        float _1026 = _1023 * (_990.z + (-0.5));
        float _1033 = exp2((_997.w + (-0.5)) * 20.0) * 2.0;
        float _1034 = _1033 * (_997.x + (-0.5));
        float _1035 = _1033 * (_997.y + (-0.5));
        float _1036 = _1033 * (_997.z + (-0.5));
        float _1043 = exp2((_1004.w + (-0.5)) * 20.0) * 2.0;
        float _1044 = _1043 * (_1004.x + (-0.5));
        float _1045 = _1043 * (_1004.y + (-0.5));
        float _1046 = _1043 * (_1004.z + (-0.5));
        float _1053 = exp2((_1011.w + (-0.5)) * 20.0) * 2.0;
        float _1054 = _1053 * (_1011.x + (-0.5));
        float _1055 = _1053 * (_1011.y + (-0.5));
        float _1056 = _1053 * (_1011.z + (-0.5));
        float _1057 = isnan(0.0) ? _1054 : (isnan(_1054) ? 0.0 : max(_1054, 0.0));
        float _1058 = isnan(0.0) ? _1055 : (isnan(_1055) ? 0.0 : max(_1055, 0.0));
        float _1059 = isnan(0.0) ? _1056 : (isnan(_1056) ? 0.0 : max(_1056, 0.0));
        float _1060 = _1024 * 0.5;
        float _1061 = _1034 * 0.5;
        float _1062 = _1044 * 0.5;
        float _1063 = dot(vec3(_1060, _1061, _1062), vec3(_1060, _1061, _1062));
        float _1068 = (_1063 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1063);
        float _1076 = (dot(vec3(0.0), vec3(_1068 * _1060, _1068 * _1061, _1068 * _1062)) + 1.0) * 0.5;
        float _3083 = isnan(0.0) ? _1076 : (isnan(_1076) ? 0.0 : max(_1076, 0.0));
        float _1085 = sqrt(((_1061 * _1061) + (_1060 * _1060)) + (_1062 * _1062)) / (_1057 + 9.9999997473787516355514526367188e-06);
        float _3094 = isnan(0.0) ? _1085 : (isnan(_1085) ? 0.0 : max(_1085, 0.0));
        float _1086 = isnan(1.0) ? _3094 : (isnan(_3094) ? 1.0 : min(_3094, 1.0));
        float _1087 = _1086 * 2.0;
        float _1091 = (1.0 - _1086) / (_1086 + 1.0);
        float _3105 = isnan(0.0) ? _1091 : (isnan(_1091) ? 0.0 : max(_1091, 0.0));
        float _1092 = isnan(1.0) ? _3105 : (isnan(_3105) ? 1.0 : min(_3105, 1.0));
        float _1101 = ((((1.0 - _1092) * (_1087 + 2.0)) * exp2(log2(isnan(1.0) ? _3083 : (isnan(_3083) ? 1.0 : min(_3083, 1.0))) * (_1087 + 1.0))) + _1092) * _1057;
        float _1102 = _1025 * 0.5;
        float _1103 = _1035 * 0.5;
        float _1104 = _1045 * 0.5;
        float _1105 = dot(vec3(_1102, _1103, _1104), vec3(_1102, _1103, _1104));
        float _1110 = (_1105 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1105);
        float _1118 = (dot(vec3(0.0), vec3(_1110 * _1102, _1110 * _1103, _1110 * _1104)) + 1.0) * 0.5;
        float _3116 = isnan(0.0) ? _1118 : (isnan(_1118) ? 0.0 : max(_1118, 0.0));
        float _1127 = sqrt(((_1103 * _1103) + (_1102 * _1102)) + (_1104 * _1104)) / (_1058 + 9.9999997473787516355514526367188e-06);
        float _3127 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
        float _1128 = isnan(1.0) ? _3127 : (isnan(_3127) ? 1.0 : min(_3127, 1.0));
        float _1129 = _1128 * 2.0;
        float _1133 = (1.0 - _1128) / (_1128 + 1.0);
        float _3138 = isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0));
        float _1134 = isnan(1.0) ? _3138 : (isnan(_3138) ? 1.0 : min(_3138, 1.0));
        float _1143 = ((((1.0 - _1134) * (_1129 + 2.0)) * exp2(log2(isnan(1.0) ? _3116 : (isnan(_3116) ? 1.0 : min(_3116, 1.0))) * (_1129 + 1.0))) + _1134) * _1058;
        float _1144 = _1026 * 0.5;
        float _1145 = _1036 * 0.5;
        float _1146 = _1046 * 0.5;
        float _1147 = dot(vec3(_1144, _1145, _1146), vec3(_1144, _1145, _1146));
        float _1152 = (_1147 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1147);
        float _1160 = (dot(vec3(0.0), vec3(_1152 * _1144, _1152 * _1145, _1152 * _1146)) + 1.0) * 0.5;
        float _3149 = isnan(0.0) ? _1160 : (isnan(_1160) ? 0.0 : max(_1160, 0.0));
        float _1169 = sqrt(((_1145 * _1145) + (_1144 * _1144)) + (_1146 * _1146)) / (_1059 + 9.9999997473787516355514526367188e-06);
        float _3160 = isnan(0.0) ? _1169 : (isnan(_1169) ? 0.0 : max(_1169, 0.0));
        float _1170 = isnan(1.0) ? _3160 : (isnan(_3160) ? 1.0 : min(_3160, 1.0));
        float _1171 = _1170 * 2.0;
        float _1175 = (1.0 - _1170) / (_1170 + 1.0);
        float _3171 = isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0));
        float _1176 = isnan(1.0) ? _3171 : (isnan(_3171) ? 1.0 : min(_3171, 1.0));
        float _1185 = ((((1.0 - _1176) * (_1171 + 2.0)) * exp2(log2(isnan(1.0) ? _3149 : (isnan(_3149) ? 1.0 : min(_3149, 1.0))) * (_1171 + 1.0))) + _1176) * _1059;
        _1193 = _1026;
        _1194 = _1025;
        _1195 = _1024;
        _1196 = _1036;
        _1197 = _1035;
        _1198 = _1034;
        _1199 = _1046;
        _1200 = _1045;
        _1201 = _1044;
        _1202 = _1059;
        _1203 = _1058;
        _1204 = _1057;
        _1205 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0)));
        _1206 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0)));
        _1207 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1185 : (isnan(_1185) ? 0.0 : max(_1185, 0.0)));
    }
    else
    {
        _1193 = _918;
        _1194 = _918;
        _1195 = _918;
        _1196 = _918;
        _1197 = _918;
        _1198 = _918;
        _1199 = _918;
        _1200 = _918;
        _1201 = _918;
        _1202 = _918;
        _1203 = _918;
        _1204 = _918;
        _1205 = 0.0;
        _1206 = 0.0;
        _1207 = 0.0;
    }
    float _1217 = (cbModelParam._m0[1u].x * (_1205 - _930)) + _930;
    float _1218 = (cbModelParam._m0[1u].x * (_1206 - _931)) + _931;
    float _1219 = (cbModelParam._m0[1u].x * (_1207 - _932)) + _932;
    float _1240 = fma(_1219, cbSceneParam._m0[89u].z, fma(_1218, cbSceneParam._m0[89u].y, _1217 * cbSceneParam._m0[89u].x));
    float _1243 = fma(_1219, cbSceneParam._m0[90u].z, fma(_1218, cbSceneParam._m0[90u].y, _1217 * cbSceneParam._m0[90u].x));
    float _1246 = fma(_1219, cbSceneParam._m0[91u].z, fma(_1218, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1217));
    float _1261 = _568 * (-0.5);
    float _1262 = _569 * (-0.5);
    float _1263 = _570 * (-0.5);
    float _1264 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1195, _1198, _1201, _1204));
    float _1267 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1194, _1197, _1200, _1203));
    float _1270 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_1193, _1196, _1199, _1202));
    float _1304;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1277 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_917, _921, _924, _927));
        float _1281 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_919, _922, _925, _928));
        float _1285 = dot(vec4(_1261, _1262, _1263, 1.0), vec4(_920, _923, _926, _929));
        float _1292 = dot(vec4(cbModelParam._m0[39u]), vec4(_1261, _1262, _1263, 1.0));
        _1304 = dot(vec3(isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0)), isnan(0.0) ? _1281 : (isnan(_1281) ? 0.0 : max(_1281, 0.0)), isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1292) ? 0.0 : (isnan(0.0) ? _1292 : max(0.0, _1292))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1304 = 1.0;
    }
    float _1315;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1306 = dot(vec4(cbModelParam._m0[40u]), vec4(_1261, _1262, _1263, 1.0));
        _1315 = dot(vec3(isnan(0.0) ? _1264 : (isnan(_1264) ? 0.0 : max(_1264, 0.0)), isnan(0.0) ? _1267 : (isnan(_1267) ? 0.0 : max(_1267, 0.0)), isnan(0.0) ? _1270 : (isnan(_1270) ? 0.0 : max(_1270, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1306) ? 0.0 : (isnan(0.0) ? _1306 : max(0.0, _1306))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1315 = 1.0;
    }
    float _1319 = (_1315 * cbModelParam._m0[1u].x) + (_1304 * (1.0 - cbModelParam._m0[1u].x));
    float _1328 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1410;
    float _1412;
    float _1414;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1377 = fma(_649, cbModelParam._m0[13u].z, fma(_645, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _641)) + cbModelParam._m0[13u].w;
        float _1381 = fma(_649, cbModelParam._m0[14u].z, fma(_645, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _641)) + cbModelParam._m0[14u].w;
        float _1385 = fma(_649, cbModelParam._m0[15u].z, fma(_645, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _641)) + cbModelParam._m0[15u].w;
        float _1388 = fma(_619, cbModelParam._m0[13u].z, fma(_618, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _617));
        float _1391 = fma(_619, cbModelParam._m0[14u].z, fma(_618, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _617));
        float _1394 = fma(_619, cbModelParam._m0[15u].z, fma(_618, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _617));
        float _1420;
        if (_1388 > 0.0)
        {
            _1420 = abs((1.0 - _1377) / _1388);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1388 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1377 + 1.0) / _1388);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1420 = frontier_phi_38_36_ladder;
        }
        float _1741;
        if (_1391 > 0.0)
        {
            _1741 = abs((1.0 - _1381) / _1391);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1391 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1381 + 1.0) / _1391);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1741 = frontier_phi_47_43_ladder;
        }
        float _2043;
        if (_1394 > 0.0)
        {
            _2043 = abs((1.0 - _1385) / _1394);
        }
        else
        {
            float frontier_phi_61_54_ladder;
            if (_1394 < 0.0)
            {
                frontier_phi_61_54_ladder = abs((_1385 + 1.0) / _1394);
            }
            else
            {
                frontier_phi_61_54_ladder = 5000.0;
            }
            _2043 = frontier_phi_61_54_ladder;
        }
        float _2045 = isnan(_1741) ? _1420 : (isnan(_1420) ? _1741 : min(_1420, _1741));
        float _2046 = isnan(_2043) ? _2045 : (isnan(_2045) ? _2043 : min(_2045, _2043));
        float _2050 = (_2046 * _1388) + _1377;
        float _2051 = (_2046 * _1391) + _1381;
        float _2052 = (_2046 * _1394) + _1385;
        float _2053 = _2046 * 9.9999997473787516355514526367188e-05;
        float _2054 = (-1.0) - _2053;
        float _2056 = _2053 + 1.0;
        float frontier_phi_37_61_ladder;
        float frontier_phi_37_61_ladder_1;
        float frontier_phi_37_61_ladder_2;
        if ((_2052 > _2056) || ((_2052 < _2054) || ((_2051 > _2056) || ((_2051 < _2054) || ((_2050 < _2054) || (_2050 > _2056))))))
        {
            frontier_phi_37_61_ladder = 0.0;
            frontier_phi_37_61_ladder_1 = 0.0;
            frontier_phi_37_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2175 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2052, cbModelParam._m0[9u].z, fma(_2051, cbModelParam._m0[9u].y, _2050 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2052, cbModelParam._m0[10u].z, fma(_2051, cbModelParam._m0[10u].y, _2050 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2052, cbModelParam._m0[11u].z, fma(_2051, cbModelParam._m0[11u].y, _2050 * cbModelParam._m0[11u].x))), _1328);
            frontier_phi_37_61_ladder = _2175.z * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_1 = _2175.y * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_2 = _2175.x * cbModelParam._m0[1u].y;
        }
        _1410 = frontier_phi_37_61_ladder_2;
        _1412 = frontier_phi_37_61_ladder_1;
        _1414 = frontier_phi_37_61_ladder;
    }
    else
    {
        vec4 _1398 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_617, _618, _619), _1328);
        _1410 = _1398.x * cbModelParam._m0[1u].y;
        _1412 = _1398.y * cbModelParam._m0[1u].y;
        _1414 = _1398.z * cbModelParam._m0[1u].y;
    }
    float _1417 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1505;
    float _1507;
    float _1509;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1469 = fma(_649, cbModelParam._m0[21u].z, fma(_645, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _641)) + cbModelParam._m0[21u].w;
        float _1473 = fma(_649, cbModelParam._m0[22u].z, fma(_645, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _641)) + cbModelParam._m0[22u].w;
        float _1477 = fma(_649, cbModelParam._m0[23u].z, fma(_645, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _641)) + cbModelParam._m0[23u].w;
        float _1480 = fma(_619, cbModelParam._m0[21u].z, fma(_618, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _617));
        float _1483 = fma(_619, cbModelParam._m0[22u].z, fma(_618, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _617));
        float _1486 = fma(_619, cbModelParam._m0[23u].z, fma(_618, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _617));
        float _1746;
        if (_1480 > 0.0)
        {
            _1746 = abs((1.0 - _1469) / _1480);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1480 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1469 + 1.0) / _1480);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1746 = frontier_phi_49_45_ladder;
        }
        float _2069;
        if (_1483 > 0.0)
        {
            _2069 = abs((1.0 - _1473) / _1483);
        }
        else
        {
            float frontier_phi_63_56_ladder;
            if (_1483 < 0.0)
            {
                frontier_phi_63_56_ladder = abs((_1473 + 1.0) / _1483);
            }
            else
            {
                frontier_phi_63_56_ladder = 5000.0;
            }
            _2069 = frontier_phi_63_56_ladder;
        }
        float _2235;
        if (_1486 > 0.0)
        {
            _2235 = abs((1.0 - _1477) / _1486);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_1486 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_1477 + 1.0) / _1486);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _2235 = frontier_phi_77_72_ladder;
        }
        float _2237 = isnan(_2069) ? _1746 : (isnan(_1746) ? _2069 : min(_1746, _2069));
        float _2238 = isnan(_2235) ? _2237 : (isnan(_2237) ? _2235 : min(_2237, _2235));
        float _2242 = (_2238 * _1480) + _1469;
        float _2243 = (_2238 * _1483) + _1473;
        float _2244 = (_2238 * _1486) + _1477;
        float _2245 = _2238 * 9.9999997473787516355514526367188e-05;
        float _2246 = (-1.0) - _2245;
        float _2248 = _2245 + 1.0;
        float frontier_phi_46_77_ladder;
        float frontier_phi_46_77_ladder_1;
        float frontier_phi_46_77_ladder_2;
        if ((_2244 > _2248) || ((_2244 < _2246) || ((_2243 > _2248) || ((_2243 < _2246) || ((_2242 < _2246) || (_2242 > _2248))))))
        {
            frontier_phi_46_77_ladder = 0.0;
            frontier_phi_46_77_ladder_1 = 0.0;
            frontier_phi_46_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2427 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2244, cbModelParam._m0[17u].z, fma(_2243, cbModelParam._m0[17u].y, _2242 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2244, cbModelParam._m0[18u].z, fma(_2243, cbModelParam._m0[18u].y, _2242 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2244, cbModelParam._m0[19u].z, fma(_2243, cbModelParam._m0[19u].y, _2242 * cbModelParam._m0[19u].x))), _1417);
            frontier_phi_46_77_ladder = _2427.z * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_1 = _2427.y * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_2 = _2427.x * cbModelParam._m0[1u].z;
        }
        _1505 = frontier_phi_46_77_ladder_2;
        _1507 = frontier_phi_46_77_ladder_1;
        _1509 = frontier_phi_46_77_ladder;
    }
    else
    {
        vec4 _1489 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_617, _618, _619), _1417);
        _1505 = _1489.x * cbModelParam._m0[1u].z;
        _1507 = _1489.y * cbModelParam._m0[1u].z;
        _1509 = _1489.z * cbModelParam._m0[1u].z;
    }
    float _1521 = _616 * 0.01200000010430812835693359375;
    float _1523 = _1521 * ((cbModelParam._m0[1u].w * (_1505 - _1410)) + _1410);
    float _1524 = _1521 * ((cbModelParam._m0[1u].w * (_1507 - _1412)) + _1412);
    float _1525 = _1521 * ((cbModelParam._m0[1u].w * (_1509 - _1414)) + _1414);
    float _1528 = fma(_1525, cbSceneParam._m0[89u].z, fma(_1524, cbSceneParam._m0[89u].y, _1523 * cbSceneParam._m0[89u].x));
    float _1531 = fma(_1525, cbSceneParam._m0[90u].z, fma(_1524, cbSceneParam._m0[90u].y, _1523 * cbSceneParam._m0[90u].x));
    float _1534 = fma(_1525, cbSceneParam._m0[91u].z, fma(_1524, cbSceneParam._m0[91u].y, _1523 * cbSceneParam._m0[91u].x));
    vec4 _1542 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_576, _577));
    float _1544 = _1542.w;
    float _1557 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1544);
    float _1558 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1544);
    float _1559 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1544);
    uvec4 _1564 = floatBitsToUint(cbInstanceData._m0[_590 + 5u]);
    uint _1566 = _1564.x * 14u;
    uint _1567 = _1566 + 13u;
    float _1572 = _616 + (-1.0);
    float _1575 = (cbLight._m0[_1567].x * _1572) + 1.0;
    float _1576 = (cbLight._m0[_1567].y * _1572) + 1.0;
    uint _1577 = _1566 + 5u;
    float _1583 = isnan(1.0) ? _1576 : (isnan(_1576) ? 1.0 : min(_1576, 1.0));
    uint _1587 = _1566 + 4u;
    float _1596 = isnan(1.0) ? _1575 : (isnan(_1575) ? 1.0 : min(_1575, 1.0));
    uint _1600 = _1566 | 1u;
    float _1611 = dot(vec3(cbLight._m0[_1566].xyz), vec3(0.0));
    float _1614 = dot(vec3(cbLight._m0[_1600].xyz), vec3(0.0));
    float _3307 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
    float _3318 = isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0));
    float _1619 = (isnan(1.0) ? _3307 : (isnan(_3307) ? 1.0 : min(_3307, 1.0))) * 0.3183098733425140380859375;
    float _1621 = (isnan(1.0) ? _3318 : (isnan(_3318) ? 1.0 : min(_3318, 1.0))) * 0.3183098733425140380859375;
    float _1628 = ((cbLight._m0[_1577].x * _1583) * _1621) + (((cbLight._m0[_1587].x * _1557) * _1596) * _1619);
    float _1629 = ((_1583 * cbLight._m0[_1577].y) * _1621) + (((cbLight._m0[_1587].y * _1558) * _1596) * _1619);
    float _1630 = ((_1583 * cbLight._m0[_1577].z) * _1621) + (((cbLight._m0[_1587].z * _1559) * _1596) * _1619);
    uint _1631 = _1566 + 8u;
    float _1637 = cbLight._m0[_1566].x + _568;
    float _1638 = cbLight._m0[_1566].y + _569;
    float _1639 = cbLight._m0[_1566].z + _570;
    float _1643 = inversesqrt(dot(vec3(_1637, _1638, _1639), vec3(_1637, _1638, _1639)));
    float _1647 = dot(vec3(0.0), vec3(cbLight._m0[_1566].xyz));
    float _3329 = isnan(0.0) ? _1647 : (isnan(_1647) ? 0.0 : max(_1647, 0.0));
    float _1650 = isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0));
    float _1651 = dot(vec3(0.0), vec3(_568, _569, _570));
    float _3340 = isnan(0.0) ? _1651 : (isnan(_1651) ? 0.0 : max(_1651, 0.0));
    float _1654 = isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0));
    float _1655 = dot(vec3(cbLight._m0[_1566].xyz), vec3(_1637 * _1643, _1638 * _1643, _1639 * _1643));
    float _3351 = isnan(0.0) ? _1655 : (isnan(_1655) ? 0.0 : max(_1655, 0.0));
    float _1666 = (exp2(log2(1.0 - (isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1672 = (0.5 / ((_1650 + 9.9999999392252902907785028219223e-09) + _1654)) * _1650;
    float _3362 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
    float _1674 = (isnan(1.0) ? _3362 : (isnan(_3362) ? 1.0 : min(_3362, 1.0))) * 0.31831014156341552734375;
    uint _1688 = _1566 + 9u;
    float _1694 = cbLight._m0[_1600].x + _568;
    float _1695 = cbLight._m0[_1600].y + _569;
    float _1696 = cbLight._m0[_1600].z + _570;
    float _1700 = inversesqrt(dot(vec3(_1694, _1695, _1696), vec3(_1694, _1695, _1696)));
    float _1704 = dot(vec3(0.0), vec3(cbLight._m0[_1600].xyz));
    float _3373 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
    float _1707 = isnan(1.0) ? _3373 : (isnan(_3373) ? 1.0 : min(_3373, 1.0));
    float _1708 = dot(vec3(cbLight._m0[_1600].xyz), vec3(_1694 * _1700, _1695 * _1700, _1696 * _1700));
    float _3384 = isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0));
    float _1717 = (exp2(log2(1.0 - (isnan(1.0) ? _3384 : (isnan(_3384) ? 1.0 : min(_3384, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1721 = (0.5 / ((_1707 + 9.9999999392252902907785028219223e-09) + _1654)) * _1707;
    float _3395 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
    float _1723 = (isnan(1.0) ? _3395 : (isnan(_3395) ? 1.0 : min(_3395, 1.0))) * 0.31831014156341552734375;
    float _1733 = (((_1717 * cbLight._m0[_1688].x) * _1723) * _1583) + ((((cbLight._m0[_1631].x * _1557) * _1666) * _1674) * _1596);
    float _1734 = (((_1717 * cbLight._m0[_1688].y) * _1723) * _1583) + ((((cbLight._m0[_1631].y * _1558) * _1666) * _1674) * _1596);
    float _1735 = (((_1717 * cbLight._m0[_1688].z) * _1723) * _1583) + ((((cbLight._m0[_1631].z * _1559) * _1666) * _1674) * _1596);
    float _1851;
    float _1853;
    float _1855;
    float _1857;
    float _1859;
    float _1861;
    if (_1564.y == 0u)
    {
        float _1791 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1792 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1791;
        float _1793 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1791;
        float _1794 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1791;
        uvec4 _1806 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1807 = _1806.x;
        uint _1818 = uint((float(_1806.y) * floor(float(uint(cbSceneParam._m0[85u].y * _577) / _1807))) + floor(float(uint(cbSceneParam._m0[85u].x * _576) / _1807)));
        float _1828 = (log2(_1794 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1829 = isnan(0.0) ? _1828 : (isnan(_1828) ? 0.0 : max(_1828, 0.0));
        uint _1832 = uint(isnan(14.0) ? _1829 : (isnan(_1829) ? 14.0 : min(_1829, 14.0)));
        uvec4 _1837 = texelFetch(g_lightClusterGridBuffer, int(((_1832 << 2u) + (_1818 << 6u)) >> 2u));
        uint _1838 = _1837.x;
        uint _1839 = _1806.z;
        float _1929;
        float _1931;
        float _1933;
        float _1935;
        float _1937;
        float _1939;
        if (((((1u << ((_1839 >> 4u) & 15u)) + 4294967295u) & _1838) == 0u) || ((_1839 & 240u) == 0u))
        {
            _1929 = 0.0;
            _1931 = 0.0;
            _1933 = 0.0;
            _1935 = 0.0;
            _1937 = 0.0;
            _1939 = 0.0;
        }
        else
        {
            float _1930;
            float _1932;
            float _1934;
            float _1936;
            float _1938;
            float _1940;
            float _2103 = 0.0;
            float _2104 = 0.0;
            float _2105 = 0.0;
            float _2106 = 0.0;
            float _2107 = 0.0;
            float _2108 = 0.0;
            uint _2109 = 0u;
            uint _2118;
            bool _2119;
            for (;;)
            {
                _2118 = texelFetch(g_lightClassification, int((((_1832 << 5u) + (_1818 << 9u)) + (_2109 << 2u)) >> 2u)).x;
                _2119 = _2118 == 0u;
                float frontier_phi_74_pred;
                float frontier_phi_74_pred_1;
                float frontier_phi_74_pred_2;
                float frontier_phi_74_pred_3;
                float frontier_phi_74_pred_4;
                float frontier_phi_74_pred_5;
                if (_2119)
                {
                    frontier_phi_74_pred = _2106;
                    frontier_phi_74_pred_1 = _2105;
                    frontier_phi_74_pred_2 = _2104;
                    frontier_phi_74_pred_3 = _2103;
                    frontier_phi_74_pred_4 = _2107;
                    frontier_phi_74_pred_5 = _2108;
                }
                else
                {
                    float _2278;
                    float _2279;
                    float _2280;
                    float _2281;
                    float _2282;
                    float _2283;
                    uint _2284;
                    _2278 = _2103;
                    _2279 = _2104;
                    _2280 = _2105;
                    _2281 = _2106;
                    _2282 = _2107;
                    _2283 = _2108;
                    _2284 = _2118;
                    float _2184;
                    float _2185;
                    float _2186;
                    float _2187;
                    float _2188;
                    float _2189;
                    for (;;)
                    {
                        uint _2288 = uint(findLSB(_2284)) + (_2109 << 5u);
                        uint _2285 = (_2284 + 4294967295u) & _2284;
                        uint _2290 = _2288 * 48u;
                        vec4 _2304 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2290)).x, texelFetch(g_PointLightRenderingBuffer, int(_2290 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2290 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2290 + 3u)).x));
                        uint _2310 = (_2288 * 48u) + 4u;
                        vec4 _2323 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2310)).x, texelFetch(g_PointLightRenderingBuffer, int(_2310 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2310 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2310 + 3u)).x));
                        uint _2329 = (_2288 * 48u) + 8u;
                        vec3 _2340 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2329)).x, texelFetch(g_PointLightRenderingBuffer, int(_2329 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2329 + 2u)).x));
                        float _2344 = _2304.x - _1792;
                        float _2345 = _2304.y - _1793;
                        float _2346 = _2304.z - _1794;
                        float _2347 = dot(vec3(_2344, _2345, _2346), vec3(_2344, _2345, _2346));
                        float _2350 = inversesqrt(_2347);
                        float _2359 = 1.0 - (_2347 * _2304.w);
                        float _3416 = isnan(0.0) ? _2359 : (isnan(_2359) ? 0.0 : max(_2359, 0.0));
                        float _2360 = isnan(1.0) ? _3416 : (isnan(_3416) ? 1.0 : min(_3416, 1.0));
                        float _2361 = sqrt(_2347) * _2323.w;
                        float _2364 = 1.39999997615814208984375 / (_2361 + 1.39999997615814208984375);
                        float _2365 = _2364 * _2364;
                        float _2368 = ((1.0 - _2365) * dot(vec3(0.0), vec3(_2350 * _2344, _2350 * _2345, _2350 * _2346))) + _2365;
                        float _2371 = _2361 * _2361;
                        float _2375 = ((isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0))) * _2360) / ((_2371 * 0.699999988079071044921875) + 1.0);
                        float _2379 = (-0.0) - _1792;
                        float _2380 = (-0.0) - _1793;
                        float _2381 = (-0.0) - _1794;
                        float _2385 = inversesqrt(dot(vec3(_2379, _2380, _2381), vec3(_2379, _2380, _2381)));
                        float _2389 = dot(vec3(0.0), vec3(_2385 * _2379, _2385 * _2380, _2385 * _2381));
                        float _3432 = isnan(0.0) ? _2389 : (isnan(_2389) ? 0.0 : max(_2389, 0.0));
                        float _3443 = isnan(0.0) ? _2368 : (isnan(_2368) ? 0.0 : max(_2368, 0.0));
                        float _2393 = isnan(1.0) ? _3443 : (isnan(_3443) ? 1.0 : min(_3443, 1.0));
                        float _2397 = (0.5 / (((isnan(1.0) ? _3432 : (isnan(_3432) ? 1.0 : min(_3432, 1.0))) + 9.9999999392252902907785028219223e-09) + _2393)) * _2393;
                        float _3454 = isnan(0.0) ? _2397 : (isnan(_2397) ? 0.0 : max(_2397, 0.0));
                        float _2406 = (((isnan(1.0) ? _3454 : (isnan(_3454) ? 1.0 : min(_3454, 1.0))) * 3.1415927410125732421875) / ((_2371 * 2.1991131305694580078125) + 3.141590118408203125)) * _2360;
                        _2187 = (_2375 * _2323.x) + _2281;
                        _2188 = (_2375 * _2323.y) + _2282;
                        _2189 = (_2375 * _2323.z) + _2283;
                        _2184 = (_2406 * _2340.x) + _2278;
                        _2185 = (_2406 * _2340.y) + _2279;
                        _2186 = (_2406 * _2340.z) + _2280;
                        if (_2285 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2278 = _2184;
                            _2279 = _2185;
                            _2280 = _2186;
                            _2281 = _2187;
                            _2282 = _2188;
                            _2283 = _2189;
                            _2284 = _2285;
                        }
                    }
                    frontier_phi_74_pred = _2187;
                    frontier_phi_74_pred_1 = _2186;
                    frontier_phi_74_pred_2 = _2185;
                    frontier_phi_74_pred_3 = _2184;
                    frontier_phi_74_pred_4 = _2188;
                    frontier_phi_74_pred_5 = _2189;
                }
                _1936 = frontier_phi_74_pred;
                _1934 = frontier_phi_74_pred_1;
                _1932 = frontier_phi_74_pred_2;
                _1930 = frontier_phi_74_pred_3;
                _1938 = frontier_phi_74_pred_4;
                _1940 = frontier_phi_74_pred_5;
                uint _2110 = _2109 + 1u;
                if (_2110 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2103 = _1930;
                    _2104 = _1932;
                    _2105 = _1934;
                    _2106 = _1936;
                    _2107 = _1938;
                    _2108 = _1940;
                    _2109 = _2110;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1929 = _1930;
            _1931 = _1932;
            _1933 = _1934;
            _1935 = _1936;
            _1937 = _1938;
            _1939 = _1940;
        }
        uvec4 _1943 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1944 = _1943.z;
        uint _1946 = (_1944 >> 8u) & 15u;
        float _2074;
        float _2076;
        float _2078;
        float _2080;
        float _2082;
        float _2084;
        if (((4294967295u << _1946) & _1838) == 0u)
        {
            _2074 = _1929;
            _2076 = _1931;
            _2078 = _1933;
            _2080 = _1935;
            _2082 = _1937;
            _2084 = _1939;
        }
        else
        {
            float _2099 = inversesqrt(dot(vec3(_1792, _1793, _1794), vec3(_1792, _1793, _1794)));
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            float frontier_phi_65_66_ladder_3;
            float frontier_phi_65_66_ladder_4;
            float frontier_phi_65_66_ladder_5;
            if (_1946 < ((_1944 >> 12u) & 15u))
            {
                float _2075;
                float _2077;
                float _2079;
                float _2081;
                float _2083;
                float _2085;
                float _2261 = _1929;
                float _2262 = _1931;
                float _2263 = _1933;
                float _2264 = _1935;
                float _2265 = _1937;
                float _2266 = _1939;
                uint _2267 = _1946;
                uint _2276;
                bool _2277;
                for (;;)
                {
                    _2276 = texelFetch(g_lightClassification, int((((_1832 << 5u) + (_1818 << 9u)) + (_2267 << 2u)) >> 2u)).x;
                    _2277 = _2276 == 0u;
                    float frontier_phi_83_pred;
                    float frontier_phi_83_pred_1;
                    float frontier_phi_83_pred_2;
                    float frontier_phi_83_pred_3;
                    float frontier_phi_83_pred_4;
                    float frontier_phi_83_pred_5;
                    if (_2277)
                    {
                        frontier_phi_83_pred = _2264;
                        frontier_phi_83_pred_1 = _2263;
                        frontier_phi_83_pred_2 = _2262;
                        frontier_phi_83_pred_3 = _2261;
                        frontier_phi_83_pred_4 = _2266;
                        frontier_phi_83_pred_5 = _2265;
                    }
                    else
                    {
                        float _2432;
                        float _2433;
                        float _2434;
                        float _2435;
                        float _2436;
                        float _2437;
                        float _2681;
                        float _2682;
                        float _2683;
                        float _2684;
                        float _2685;
                        float _2686;
                        float _2445 = _2261;
                        float _2446 = _2262;
                        float _2447 = _2263;
                        float _2448 = _2264;
                        float _2449 = _2265;
                        float _2450 = _2266;
                        uint _2451 = _2276;
                        uint _2452;
                        vec4 _2477;
                        float _2478;
                        vec4 _2493;
                        vec3 _2505;
                        vec4 _2520;
                        vec4 _2535;
                        float _2581;
                        bool _2582;
                        for (;;)
                        {
                            uint _2462 = ((_2267 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2451));
                            _2452 = (_2451 + 4294967295u) & _2451;
                            uint _2464 = _2462 * 40u;
                            _2477 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2464)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2464 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2464 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2464 + 3u)).x));
                            _2478 = _2477.w;
                            uint _2480 = (_2462 * 40u) + 4u;
                            _2493 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2480)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2480 + 3u)).x));
                            uint _2495 = (_2462 * 40u) + 8u;
                            _2505 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2495)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2495 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2495 + 2u)).x));
                            uint _2507 = (_2462 * 40u) + 16u;
                            _2520 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2507)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2507 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2507 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2507 + 3u)).x));
                            uint _2522 = (_2462 * 40u) + 20u;
                            _2535 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2522)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2522 + 3u)).x));
                            uint _2537 = (_2462 * 40u) + 24u;
                            vec4 _2550 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2537)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2537 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2537 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2537 + 3u)).x));
                            uint _2556 = (_2462 * 40u) + 28u;
                            vec4 _2569 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2556)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2556 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2556 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2556 + 3u)).x));
                            _2581 = fma(_1794, _2569.z, fma(_1793, _2569.y, _2569.x * _1792)) + _2569.w;
                            _2582 = !((fma(_1794, _2550.z, fma(_1793, _2550.y, _2550.x * _1792)) + _2550.w) <= 0.0);
                            float frontier_phi_89_pred;
                            float frontier_phi_89_pred_1;
                            float frontier_phi_89_pred_2;
                            float frontier_phi_89_pred_3;
                            float frontier_phi_89_pred_4;
                            float frontier_phi_89_pred_5;
                            if (_2582)
                            {
                                float _2609 = _2477.x - _1792;
                                float _2610 = _2477.y - _1793;
                                float _2611 = _2477.z - _1794;
                                float _2612 = dot(vec3(_2609, _2610, _2611), vec3(_2609, _2610, _2611));
                                float _2615 = inversesqrt(_2612);
                                float _2616 = _2615 * _2609;
                                float _2617 = _2615 * _2610;
                                float _2618 = _2615 * _2611;
                                float _2622 = 1.0 - (_2612 / (_2478 * _2478));
                                float _3465 = isnan(0.0) ? _2622 : (isnan(_2622) ? 0.0 : max(_2622, 0.0));
                                float _2623 = isnan(1.0) ? _3465 : (isnan(_3465) ? 1.0 : min(_3465, 1.0));
                                float _2627 = sqrt(_2612) * _2493.w;
                                float _2629 = 1.39999997615814208984375 / (_2627 + 1.39999997615814208984375);
                                float _2630 = _2629 * _2629;
                                float _2631 = 1.0 - _2630;
                                float _2633 = (_2631 * dot(vec3(_2616, _2617, _2618), vec3(0.0))) + _2630;
                                float _2636 = _2627 * _2627;
                                float _2640 = (fma(_1794, _2520.z, fma(_1793, _2520.y, _2520.x * _1792)) + _2520.w) / _2581;
                                float _2641 = (fma(_1794, _2535.z, fma(_1793, _2535.y, _2535.x * _1792)) + _2535.w) / _2581;
                                float _2645 = 1.0 - dot(vec2(_2640, _2641), vec2(_2640, _2641));
                                float _3481 = isnan(0.0) ? _2645 : (isnan(_2645) ? 0.0 : max(_2645, 0.0));
                                float _2646 = isnan(1.0) ? _3481 : (isnan(_3481) ? 1.0 : min(_3481, 1.0));
                                float _2647 = _2646 * (((isnan(0.0) ? _2633 : (isnan(_2633) ? 0.0 : max(_2633, 0.0))) * _2623) / ((_2636 * 0.699999988079071044921875) + 1.0));
                                float _2657 = dot(vec3(0.0), vec3((-0.0) - (_1792 * _2099), (-0.0) - (_1793 * _2099), (-0.0) - (_1794 * _2099)));
                                float _3492 = isnan(0.0) ? _2657 : (isnan(_2657) ? 0.0 : max(_2657, 0.0));
                                float _2665 = (_2631 * dot(vec3(0.0), vec3(_2616, _2617, _2618))) + _2630;
                                float _3503 = isnan(0.0) ? _2665 : (isnan(_2665) ? 0.0 : max(_2665, 0.0));
                                float _2666 = isnan(1.0) ? _3503 : (isnan(_3503) ? 1.0 : min(_3503, 1.0));
                                float _2670 = (0.5 / (((isnan(1.0) ? _3492 : (isnan(_3492) ? 1.0 : min(_3492, 1.0))) + 9.9999999392252902907785028219223e-09) + _2666)) * _2666;
                                float _3514 = isnan(0.0) ? _2670 : (isnan(_2670) ? 0.0 : max(_2670, 0.0));
                                float _2677 = (_2646 * _2623) * (((isnan(1.0) ? _3514 : (isnan(_3514) ? 1.0 : min(_3514, 1.0))) * 3.1415927410125732421875) / ((_2636 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_89_pred = _2647 * _2493.x;
                                frontier_phi_89_pred_1 = _2677 * _2505.z;
                                frontier_phi_89_pred_2 = _2677 * _2505.y;
                                frontier_phi_89_pred_3 = _2677 * _2505.x;
                                frontier_phi_89_pred_4 = _2647 * _2493.z;
                                frontier_phi_89_pred_5 = _2647 * _2493.y;
                            }
                            else
                            {
                                frontier_phi_89_pred = 0.0;
                                frontier_phi_89_pred_1 = 0.0;
                                frontier_phi_89_pred_2 = 0.0;
                                frontier_phi_89_pred_3 = 0.0;
                                frontier_phi_89_pred_4 = 0.0;
                                frontier_phi_89_pred_5 = 0.0;
                            }
                            _2684 = frontier_phi_89_pred;
                            _2683 = frontier_phi_89_pred_1;
                            _2682 = frontier_phi_89_pred_2;
                            _2681 = frontier_phi_89_pred_3;
                            _2686 = frontier_phi_89_pred_4;
                            _2685 = frontier_phi_89_pred_5;
                            _2435 = _2684 + _2448;
                            _2436 = _2685 + _2449;
                            _2437 = _2686 + _2450;
                            _2432 = _2681 + _2445;
                            _2433 = _2682 + _2446;
                            _2434 = _2683 + _2447;
                            if (_2452 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2445 = _2432;
                                _2446 = _2433;
                                _2447 = _2434;
                                _2448 = _2435;
                                _2449 = _2436;
                                _2450 = _2437;
                                _2451 = _2452;
                                continue;
                            }
                        }
                        frontier_phi_83_pred = _2435;
                        frontier_phi_83_pred_1 = _2434;
                        frontier_phi_83_pred_2 = _2433;
                        frontier_phi_83_pred_3 = _2432;
                        frontier_phi_83_pred_4 = _2437;
                        frontier_phi_83_pred_5 = _2436;
                    }
                    _2081 = frontier_phi_83_pred;
                    _2079 = frontier_phi_83_pred_1;
                    _2077 = frontier_phi_83_pred_2;
                    _2075 = frontier_phi_83_pred_3;
                    _2085 = frontier_phi_83_pred_4;
                    _2083 = frontier_phi_83_pred_5;
                    uint _2268 = _2267 + 1u;
                    if (_2268 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2261 = _2075;
                        _2262 = _2077;
                        _2263 = _2079;
                        _2264 = _2081;
                        _2265 = _2083;
                        _2266 = _2085;
                        _2267 = _2268;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _2085;
                frontier_phi_65_66_ladder_1 = _2083;
                frontier_phi_65_66_ladder_2 = _2079;
                frontier_phi_65_66_ladder_3 = _2077;
                frontier_phi_65_66_ladder_4 = _2081;
                frontier_phi_65_66_ladder_5 = _2075;
            }
            else
            {
                frontier_phi_65_66_ladder = _1939;
                frontier_phi_65_66_ladder_1 = _1937;
                frontier_phi_65_66_ladder_2 = _1933;
                frontier_phi_65_66_ladder_3 = _1931;
                frontier_phi_65_66_ladder_4 = _1935;
                frontier_phi_65_66_ladder_5 = _1929;
            }
            _2074 = frontier_phi_65_66_ladder_5;
            _2076 = frontier_phi_65_66_ladder_3;
            _2078 = frontier_phi_65_66_ladder_2;
            _2080 = frontier_phi_65_66_ladder_4;
            _2082 = frontier_phi_65_66_ladder_1;
            _2084 = frontier_phi_65_66_ladder;
        }
        float _2089 = isnan(1.0) ? _616 : (isnan(_616) ? 1.0 : min(_616, 1.0));
        _1851 = (_2089 * _2080) + _1628;
        _1853 = (_2089 * _2082) + _1629;
        _1855 = (_2089 * _2084) + _1630;
        _1857 = ((_2074 * 0.039999999105930328369140625) * _2089) + _1733;
        _1859 = ((_2076 * 0.039999999105930328369140625) * _2089) + _1734;
        _1861 = ((_2078 * 0.039999999105930328369140625) * _2089) + _1735;
    }
    else
    {
        _1851 = _1628;
        _1853 = _1629;
        _1855 = _1630;
        _1857 = _1733;
        _1859 = _1734;
        _1861 = _1735;
    }
    float _3530 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _3541 = isnan(0.0) ? _603 : (isnan(_603) ? 0.0 : max(_603, 0.0));
    float _3552 = isnan(0.0) ? _604 : (isnan(_604) ? 0.0 : max(_604, 0.0));
    float _1878 = ((isnan(1.0) ? _3530 : (isnan(_3530) ? 1.0 : min(_3530, 1.0))) * (_1851 + ((isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0))) * _616))) + ((_1857 + ((isnan(0.0) ? _1528 : (isnan(_1528) ? 0.0 : max(_1528, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    float _1879 = ((isnan(1.0) ? _3541 : (isnan(_3541) ? 1.0 : min(_3541, 1.0))) * (_1853 + ((isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0))) * _616))) + ((_1859 + ((isnan(0.0) ? _1531 : (isnan(_1531) ? 0.0 : max(_1531, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    float _1880 = ((isnan(1.0) ? _3552 : (isnan(_3552) ? 1.0 : min(_3552, 1.0))) * (_1855 + ((isnan(0.0) ? _1246 : (isnan(_1246) ? 0.0 : max(_1246, 0.0))) * _616))) + ((_1861 + ((isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0))) * _1319)) * cbPerFrame._m0[3u].x);
    uint _1884 = _590 + 6u;
    float _1892 = _576 / cbSceneParam._m0[86u].x;
    float _1893 = _577 / cbSceneParam._m0[86u].y;
    vec4 _1907 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1892, _1893, (log2((isnan(cbSceneParam._m0[77u].w) ? _563 : (isnan(_563) ? cbSceneParam._m0[77u].w : min(_563, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1909 = _1907.x;
    float _1910 = _1907.y;
    float _1911 = _1907.z;
    float _1912 = _1907.w;
    float _1992;
    float _1994;
    float _1996;
    float _1998;
    if (_563 > cbSceneParam._m0[78u].w)
    {
        float _1954 = isnan(_563) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _563 : min(cbSceneParam._m0[80u].w, _563));
        float _1955 = _1954 / _563;
        float _1966 = _1955 * _259;
        float _1967 = _260 * _1955;
        float _1968 = (-0.0) - _1967;
        float _1969 = _1955 * _261;
        float _1971 = (cbSceneParam._m0[77u].w * _1968) / _1954;
        float _1972 = _1971 + cbSceneParam._m0[79u].w;
        float _1973 = cbSceneParam._m0[79u].w - _1967;
        float _1979 = sqrt(((_1966 * _1966) + (_1967 * _1967)) + (_1969 * _1969));
        float _1982 = (1.0 - (cbSceneParam._m0[77u].w / _1954)) * _1979;
        float _1988 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1990 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2197;
        if (abs((_1968 - _1971) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2197 = ((((_1972 > 0.0) ? exp2(_1988 * _1972) : (2.0 - exp2(_1990 * _1972))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1982;
        }
        else
        {
            float _2132 = 1.0 / cbSceneParam._m0[80u].x;
            float _2133 = isnan(_1973) ? _1972 : (isnan(_1972) ? _1973 : max(_1972, _1973));
            float _2134 = isnan(_1973) ? _1972 : (isnan(_1972) ? _1973 : min(_1972, _1973));
            float _2143 = isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : min(_2133, 0.0));
            float _2144 = isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : min(_2134, 0.0));
            _2197 = ((abs(_1979 / _1968) * cbSceneParam._m0[80u].y) * ((((_2143 - _2144) * 2.0) - ((exp2(_1988 * (isnan(0.0) ? _2133 : (isnan(_2133) ? 0.0 : max(_2133, 0.0)))) - exp2(_1988 * (isnan(0.0) ? _2134 : (isnan(_2134) ? 0.0 : max(_2134, 0.0))))) * _2132)) - ((exp2(_1990 * _2143) - exp2(_1990 * _2144)) * _2132))) + (_1982 * cbSceneParam._m0[80u].z);
        }
        vec4 _2199 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1892, _1893, 1.0), 0.0);
        float _2208 = exp2((_2197 * (-1.44269502162933349609375)) * (1.0 - _2199.w));
        float _2209 = log2(_2208);
        float _2225 = log2(_1912);
        _1992 = (exp2(_2225 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2209 * cbSceneParam._m0[78u].x)) * _2199.x) / cbSceneParam._m0[78u].x)) + _1909;
        _1994 = (exp2(_2225 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2209 * cbSceneParam._m0[78u].y)) * _2199.y) / cbSceneParam._m0[78u].y)) + _1910;
        _1996 = (exp2(_2225 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2209 * cbSceneParam._m0[78u].z)) * _2199.z) / cbSceneParam._m0[78u].z)) + _1911;
        _1998 = _2208 * _1912;
    }
    else
    {
        _1992 = _1909;
        _1994 = _1910;
        _1996 = _1911;
        _1998 = _1912;
    }
    float _2010 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2011 = _2010 == 3.0;
    float _2013 = log2(_1998);
    float _2020 = exp2(_2013 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1878 : (isnan(_1878) ? 0.0 : max(_1878, 0.0)));
    float _2021 = exp2(_2013 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1879 : (isnan(_1879) ? 0.0 : max(_1879, 0.0)));
    float _2022 = exp2(_2013 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1880 : (isnan(_1880) ? 0.0 : max(_1880, 0.0)));
    float _2031 = (_2010 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2031 * (_2011 ? _2020 : (_2020 + (cbSceneParam._m0[72u].w * _1992)));
    SV_Target.y = _2031 * (_2011 ? _2021 : (_2021 + (cbSceneParam._m0[72u].w * _1994)));
    SV_Target.z = _2031 * (_2011 ? _2022 : (_2022 + (cbSceneParam._m0[72u].w * _1996)));
    SV_Target.w = cbInstanceData._m0[_1884].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1884].w;
}


