#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _153 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _154 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _155 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _160 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _161 = _160 * _153;
    float _162 = _160 * _154;
    float _163 = _160 * _155;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _174 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _175 = _174 * TANGENT.x;
    float _176 = _174 * TANGENT.y;
    float _177 = _174 * TANGENT.z;
    float _222 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _232 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _222);
    float _233 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _222);
    float _234 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _222);
    vec4 _247 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _250 = _247.x;
    vec4 _268 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _285 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _250) + cbMtdParam._m0[12u].x) * _268.x;
    float _287 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _250) + cbMtdParam._m0[12u].y) * _268.y;
    float _289 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _250) + cbMtdParam._m0[12u].z) * _268.z;
    vec4 _310 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _346 = cbMtdParam._m0[21u].w + _232;
    float _347 = cbMtdParam._m0[22u].x + _233;
    float _348 = cbMtdParam._m0[22u].y + _234;
    float _362 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_161, _162, _163));
    float _363 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_175, _176, _177));
    float _364 = (-0.0) - dot(vec3(_346, _347, _348), vec3((-0.0) - _168, (-0.0) - _169, (-0.0) - _170));
    float _368 = inversesqrt(dot(vec3(_362, _363, _364), vec3(_362, _363, _364)));
    float _371 = _368 * _364;
    float _372 = (_368 * _362) + ((cbMtdParam._m0[19u].w * _250) * ((_310.x * 2.0) + (-1.0)));
    float _373 = (_368 * _363) + ((cbMtdParam._m0[20u].x * _250) * ((_310.y * 2.0) + (-1.0)));
    float _374 = _372 * cbMtdParam._m0[18u].z;
    float _375 = _373 * cbMtdParam._m0[18u].y;
    float _376 = fract(TEXCOORD.x);
    float _377 = fract(TEXCOORD.y);
    float _383;
    if (_374 > 0.0)
    {
        _383 = (1.0 - _376) / _374;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_374 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _376) / _374;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _383 = frontier_phi_3_2_ladder;
    }
    float _391;
    if (_375 > 0.0)
    {
        _391 = (1.0 - _377) / _375;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_375 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _377) / _375;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _391 = frontier_phi_7_6_ladder;
    }
    bool _393 = _371 > 0.0;
    float _395 = _393 ? (cbMtdParam._m0[15u].x / _371) : 5000.0;
    float _396 = isnan(_391) ? _383 : (isnan(_383) ? _391 : min(_383, _391));
    float _397 = isnan(_395) ? _396 : (isnan(_396) ? _395 : min(_396, _395));
    float _401 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _402 = _376 + (-0.5);
    float _405 = _377 + (-0.5);
    float _408 = ((_397 * _371) + _401) / _401;
    vec4 _432 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_402 + (_397 * _374)) / _408) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_405 + (_397 * _375)) / _408) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _445 = (_432.x * _250) * cbMtdParam._m0[9u].x;
    float _446 = (_432.y * _250) * cbMtdParam._m0[9u].y;
    float _447 = (_432.z * _250) * cbMtdParam._m0[9u].z;
    float _465 = _372 * cbMtdParam._m0[20u].z;
    float _466 = _373 * cbMtdParam._m0[20u].y;
    bool _467 = _465 > 0.0;
    float _472;
    if (_467)
    {
        _472 = (1.0 - _376) / _465;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_465 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _376) / _465;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _472 = frontier_phi_11_10_ladder;
    }
    bool _474 = _466 > 0.0;
    float _479;
    if (_474)
    {
        _479 = (1.0 - _377) / _466;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_466 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _377) / _466;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _479 = frontier_phi_15_14_ladder;
    }
    float _482 = _393 ? (cbMtdParam._m0[16u].x / _371) : 5000.0;
    float _483 = isnan(_479) ? _472 : (isnan(_472) ? _479 : min(_472, _479));
    float _484 = isnan(_482) ? _483 : (isnan(_483) ? _482 : min(_483, _482));
    float _488 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _492 = ((_484 * _371) + _488) / _488;
    float _497 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _499 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _515 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_402 + (_484 * _465)) / _492) + 0.5) + _497) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_405 + (_484 * _466)) / _492) + 0.5) + _499) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _530;
    if (_467)
    {
        _530 = (1.0 - _376) / _465;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_465 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _376) / _465;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _530 = frontier_phi_19_18_ladder;
    }
    float _536;
    if (_474)
    {
        _536 = (1.0 - _377) / _466;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_466 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _377) / _466;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _536 = frontier_phi_23_22_ladder;
    }
    float _538 = isnan(_536) ? _530 : (isnan(_530) ? _536 : min(_530, _536));
    float _539 = isnan(_482) ? _538 : (isnan(_538) ? _482 : min(_538, _482));
    float _546 = ((_539 * _371) + _488) / _488;
    vec4 _567 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_402 + (_539 * _465)) / _546) + 0.5) + _497) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_405 + (_539 * _466)) / _546) + 0.5) + _499) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _569 = _567.x;
    float _579 = _250 * 0.1500000059604644775390625;
    float _590 = (_579 * ((_445 - _285) + (((((cbMtdParam._m0[10u].x * _250) * _515.x) - _445) * _250) * _569))) + _285;
    float _591 = (_579 * ((_446 - _287) + (((((cbMtdParam._m0[10u].y * _250) * _515.y) - _446) * _250) * _569))) + _287;
    float _592 = (_579 * ((_447 - _289) + (((((cbMtdParam._m0[10u].z * _250) * _515.z) - _447) * _250) * _569))) + _289;
    vec4 _604 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _608 = _604.z;
    float _611 = (_604.x * 2.0) + (-1.0);
    float _612 = (_604.y * 2.0) + (-1.0);
    float _613 = dot(vec2(_611, _612), vec2(_611, _612));
    float _884 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _618 = sqrt(1.0 - (isnan(1.0) ? _884 : (isnan(_884) ? 1.0 : min(_884, 1.0))));
    float _621 = fma(_618, _168, fma(_612, _175, _611 * _161));
    float _624 = fma(_618, _169, fma(_612, _176, _611 * _162));
    float _627 = fma(_618, _170, fma(_612, _177, _611 * _163));
    float _631 = inversesqrt(dot(vec3(_621, _624, _627), vec3(_621, _624, _627)));
    float _895 = isnan(0.0) ? _608 : (isnan(_608) ? 0.0 : max(_608, 0.0));
    float _906 = isnan(0.0) ? _590 : (isnan(_590) ? 0.0 : max(_590, 0.0));
    float _633 = isnan(1.0) ? _906 : (isnan(_906) ? 1.0 : min(_906, 1.0));
    float _917 = isnan(0.0) ? _591 : (isnan(_591) ? 0.0 : max(_591, 0.0));
    float _634 = isnan(1.0) ? _917 : (isnan(_917) ? 1.0 : min(_917, 1.0));
    float _928 = isnan(0.0) ? _592 : (isnan(_592) ? 0.0 : max(_592, 0.0));
    float _635 = isnan(1.0) ? _928 : (isnan(_928) ? 1.0 : min(_928, 1.0));
    uint _637 = uint(roundEven(NORMAL.w));
    vec4 _642 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _644 = _642.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _705 = sqrt(((_232 * _232) + (_233 * _233)) + (_234 * _234));
        float _712 = (cbMatDynParam._m0[5u].x * _705) + cbMatDynParam._m0[5u].y;
        float _939 = isnan(0.0) ? _712 : (isnan(_712) ? 0.0 : max(_712, 0.0));
        float _713 = isnan(1.0) ? _939 : (isnan(_939) ? 1.0 : min(_939, 1.0));
        float _717 = (cbMatDynParam._m0[5u].z * _705) + cbMatDynParam._m0[5u].w;
        float _950 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _950 : (isnan(_950) ? 1.0 : min(_950, 1.0))) - _713)) + _713) < ((_644 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _745;
    uint _664;
    vec4 _669;
    float _676;
    float _677;
    float _678;
    float _682;
    vec4 _685;
    float _687;
    float _688;
    bool _699;
    for (;;)
    {
        _664 = _637 * 13u;
        _669 = cbInstanceData._m0[(_664 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _673 = (cbMtdParam._m0[0u].x * _633) * _669.x;
        float _674 = (cbMtdParam._m0[0u].y * _634) * _669.y;
        float _675 = (cbMtdParam._m0[0u].z * _635) * _669.z;
        float _961 = isnan(0.0) ? _673 : (isnan(_673) ? 0.0 : max(_673, 0.0));
        _676 = isnan(1.0) ? _961 : (isnan(_961) ? 1.0 : min(_961, 1.0));
        float _972 = isnan(0.0) ? _674 : (isnan(_674) ? 0.0 : max(_674, 0.0));
        _677 = isnan(1.0) ? _972 : (isnan(_972) ? 1.0 : min(_972, 1.0));
        float _983 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        _678 = isnan(1.0) ? _983 : (isnan(_983) ? 1.0 : min(_983, 1.0));
        _682 = cbInstanceData._m0[_664 + 6u].w;
        float _683 = _644 + (-0.5);
        _685 = cbMtdParam._m0[1u];
        _687 = _685.y * _683;
        _688 = _683 * 0.999000012874603271484375;
        _699 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_699)
        {
            if ((cbInstanceData._m0[_664 + 7u].x + _688) < 0.5)
            {
                _745 = true;
                break;
            }
        }
        if ((_669.w < 1.0) && ((_669.w + _688) < 0.5))
        {
            _745 = true;
            break;
        }
        if ((_687 + 1.0) < _685.x)
        {
            _745 = true;
            break;
        }
        _745 = false;
        break;
    }
    if (_745)
    {
        discard_state = true;
    }
    bool _771 = cbMtdParam._m0[1u].z != 0.0;
    float _772 = _771 ? _682 : 0.0;
    SV_Target.x = ((_621 * 0.5) * _631) + 0.500488758087158203125;
    SV_Target.y = ((_624 * 0.5) * _631) + 0.500488758087158203125;
    SV_Target.z = ((_627 * 0.5) * _631) + 0.500488758087158203125;
    SV_Target.w = _772;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _895 : (isnan(_895) ? 1.0 : min(_895, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _771 ? _682 : TEXCOORD.z;
    SV_Target_2.x = _676;
    SV_Target_2.y = _677;
    SV_Target_2.z = _678;
    SV_Target_2.w = _771 ? _682 : (float(floatBitsToUint(cbInstanceData._m0[_664 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _772;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _772;
    discard_exit();
}


