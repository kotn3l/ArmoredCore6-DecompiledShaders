#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Interior_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Interior_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _879;
uint _2019;
uint _2020;
uint _2021;
uint _2255;
uint _2256;
uint _2257;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _285 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _320 = cbMtdParam._m0[21u].w + _261;
    float _321 = cbMtdParam._m0[22u].x + _262;
    float _322 = cbMtdParam._m0[22u].y + _263;
    float _336 = (-0.0) - dot(vec3(_320, _321, _322), vec3(_189 * _182, _189 * _183, _189 * _184));
    float _337 = (-0.0) - dot(vec3(_320, _321, _322), vec3(_203 * TANGENT.x, _203 * TANGENT.y, _203 * TANGENT.z));
    float _338 = (-0.0) - dot(vec3(_320, _321, _322), vec3((-0.0) - (_196 * NORMAL.x), (-0.0) - (_196 * NORMAL.y), (-0.0) - (_196 * NORMAL.z)));
    float _342 = inversesqrt(dot(vec3(_336, _337, _338), vec3(_336, _337, _338)));
    float _345 = _342 * _338;
    float _346 = (_342 * _336) + (((_285.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _347 = (_342 * _337) + (((_285.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _348 = _346 * cbMtdParam._m0[18u].z;
    float _349 = _347 * cbMtdParam._m0[18u].y;
    float _350 = fract(TEXCOORD.x);
    float _351 = fract(TEXCOORD.y);
    float _357;
    if (_348 > 0.0)
    {
        _357 = (1.0 - _350) / _348;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_348 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _350) / _348;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _357 = frontier_phi_3_2_ladder;
    }
    float _365;
    if (_349 > 0.0)
    {
        _365 = (1.0 - _351) / _349;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_349 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _351) / _349;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _365 = frontier_phi_7_6_ladder;
    }
    bool _367 = _345 > 0.0;
    float _369 = _367 ? (cbMtdParam._m0[15u].x / _345) : 5000.0;
    float _370 = isnan(_365) ? _357 : (isnan(_357) ? _365 : min(_357, _365));
    float _371 = isnan(_369) ? _370 : (isnan(_370) ? _369 : min(_370, _369));
    float _375 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _376 = _350 + (-0.5);
    float _379 = _351 + (-0.5);
    float _382 = ((_371 * _345) + _375) / _375;
    vec4 _406 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_376 + (_371 * _348)) / _382) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_379 + (_371 * _349)) / _382) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _416 = cbMtdParam._m0[9u].x * _406.x;
    float _417 = cbMtdParam._m0[9u].y * _406.y;
    float _418 = cbMtdParam._m0[9u].z * _406.z;
    float _436 = _346 * cbMtdParam._m0[20u].z;
    float _437 = _347 * cbMtdParam._m0[20u].y;
    bool _438 = _436 > 0.0;
    float _443;
    if (_438)
    {
        _443 = (1.0 - _350) / _436;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_436 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _350) / _436;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _443 = frontier_phi_11_10_ladder;
    }
    bool _445 = _437 > 0.0;
    float _450;
    if (_445)
    {
        _450 = (1.0 - _351) / _437;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_437 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _351) / _437;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _450 = frontier_phi_15_14_ladder;
    }
    float _453 = _367 ? (cbMtdParam._m0[16u].x / _345) : 5000.0;
    float _454 = isnan(_450) ? _443 : (isnan(_443) ? _450 : min(_443, _450));
    float _455 = isnan(_453) ? _454 : (isnan(_454) ? _453 : min(_454, _453));
    float _459 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _463 = ((_455 * _345) + _459) / _459;
    float _468 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _470 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _486 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_376 + (_455 * _436)) / _463) + 0.5) + _468) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_379 + (_455 * _437)) / _463) + 0.5) + _470) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _498;
    if (_438)
    {
        _498 = (1.0 - _350) / _436;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_436 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _350) / _436;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _498 = frontier_phi_19_18_ladder;
    }
    float _504;
    if (_445)
    {
        _504 = (1.0 - _351) / _437;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_437 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _351) / _437;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _504 = frontier_phi_23_22_ladder;
    }
    float _506 = isnan(_504) ? _498 : (isnan(_498) ? _504 : min(_498, _504));
    float _507 = isnan(_453) ? _506 : (isnan(_506) ? _453 : min(_506, _453));
    float _514 = ((_507 * _345) + _459) / _459;
    vec4 _535 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_376 + (_507 * _436)) / _514) + 0.5) + _468) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_379 + (_507 * _437)) / _514) + 0.5) + _470) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _537 = _535.x;
    float _544 = (_537 * ((_486.x * cbMtdParam._m0[10u].x) - _416)) + _416;
    float _545 = (_537 * ((_486.y * cbMtdParam._m0[10u].y) - _417)) + _417;
    float _546 = (_537 * ((_486.z * cbMtdParam._m0[10u].z) - _418)) + _418;
    float _560 = _346 * cbMtdParam._m0[21u].x;
    float _561 = _347 * cbMtdParam._m0[20u].w;
    bool _562 = _560 > 0.0;
    float _567;
    if (_562)
    {
        _567 = (1.0 - _350) / _560;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_560 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _350) / _560;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _567 = frontier_phi_27_26_ladder;
    }
    bool _569 = _561 > 0.0;
    float _574;
    if (_569)
    {
        _574 = (1.0 - _351) / _561;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_561 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _351) / _561;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _574 = frontier_phi_31_30_ladder;
    }
    float _577 = _367 ? (cbMtdParam._m0[17u].z / _345) : 5000.0;
    float _578 = isnan(_574) ? _567 : (isnan(_567) ? _574 : min(_567, _574));
    float _579 = isnan(_577) ? _578 : (isnan(_578) ? _577 : min(_578, _577));
    float _583 = cbMtdParam._m0[17u].z * cbMtdParam._m0[15u].z;
    float _587 = ((_579 * _345) + _583) / _583;
    float _592 = cbMtdParam._m0[17u].y - cbMtdParam._m0[21u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[21u].y);
    float _594 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[21u].y);
    vec4 _611 = texture(sampler2D(M_Interior_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_376 + (_579 * _560)) / _587) + 0.5) + _592) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_379 + (_579 * _561)) / _587) + 0.5) + _594) / cbMtdParam._m0[21u].z)) + cbTextureTilingScale._m0[7u].w));
    float _623;
    if (_562)
    {
        _623 = (1.0 - _350) / _560;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_560 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _350) / _560;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _623 = frontier_phi_35_34_ladder;
    }
    float _629;
    if (_569)
    {
        _629 = (1.0 - _351) / _561;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_561 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _351) / _561;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _629 = frontier_phi_39_38_ladder;
    }
    float _631 = isnan(_629) ? _623 : (isnan(_623) ? _629 : min(_623, _629));
    float _632 = isnan(_577) ? _631 : (isnan(_631) ? _577 : min(_631, _577));
    float _639 = ((_632 * _345) + _583) / _583;
    vec4 _659 = texture(sampler2D(M_Interior_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_376 + (_632 * _560)) / _639) + 0.5) + _592) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_379 + (_632 * _561)) / _639) + 0.5) + _594) / cbMtdParam._m0[21u].z)) + cbTextureTilingScale._m0[8u].w));
    float _661 = _659.x;
    float _686 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _690 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _691 = _261 * _690;
    float _692 = _262 * _690;
    float _693 = _263 * _690;
    float _699 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _700 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _709 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_699 * cbSceneParam._m0[86u].x, _700 * cbSceneParam._m0[86u].y));
    float _712 = _709.x * TEXCOORD.z;
    float _713 = (-0.0) - _691;
    float _714 = (-0.0) - _692;
    float _715 = (-0.0) - _693;
    float _737 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _741 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _745 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _878;
    float _880;
    float _881;
    float _882;
    float _883;
    float _884;
    float _885;
    float _886;
    float _887;
    float _888;
    float _889;
    float _890;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _801 = (cbModelParam._m0[37u].x * ((((fma(_745, cbModelParam._m0[26u].z, fma(_741, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _737)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _803 = (cbModelParam._m0[37u].y * ((((fma(_745, cbModelParam._m0[27u].z, fma(_741, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _737)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _804 = (((((fma(_745, cbModelParam._m0[28u].z, fma(_741, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _737)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_801, _803, _804), 0.0);
        vec4 _814 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_801, _803, _804), 0.0);
        vec4 _821 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_801, _803, _804), 0.0);
        vec4 _828 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_801, _803, _804), 0.0);
        float _841 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _851 = exp2((_814.w + (-0.5)) * 20.0) * 2.0;
        float _861 = exp2((_821.w + (-0.5)) * 20.0) * 2.0;
        float _871 = exp2((_828.w + (-0.5)) * 20.0) * 2.0;
        float _872 = _871 * (_828.x + (-0.5));
        float _873 = _871 * (_828.y + (-0.5));
        float _874 = _871 * (_828.z + (-0.5));
        _878 = _841 * (_807.z + (-0.5));
        _880 = _841 * (_807.y + (-0.5));
        _881 = _841 * (_807.x + (-0.5));
        _882 = _851 * (_814.z + (-0.5));
        _883 = _851 * (_814.y + (-0.5));
        _884 = _851 * (_814.x + (-0.5));
        _885 = _861 * (_821.z + (-0.5));
        _886 = _861 * (_821.y + (-0.5));
        _887 = _861 * (_821.x + (-0.5));
        _888 = isnan(0.0) ? _874 : (isnan(_874) ? 0.0 : max(_874, 0.0));
        _889 = isnan(0.0) ? _873 : (isnan(_873) ? 0.0 : max(_873, 0.0));
        _890 = isnan(0.0) ? _872 : (isnan(_872) ? 0.0 : max(_872, 0.0));
    }
    else
    {
        _878 = _879;
        _880 = _879;
        _881 = _879;
        _882 = _879;
        _883 = _879;
        _884 = _879;
        _885 = _879;
        _886 = _879;
        _887 = _879;
        _888 = _879;
        _889 = _879;
        _890 = _879;
    }
    float _1018;
    float _1019;
    float _1020;
    float _1021;
    float _1022;
    float _1023;
    float _1024;
    float _1025;
    float _1026;
    float _1027;
    float _1028;
    float _1029;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _944 = (cbModelParam._m0[38u].x * ((((fma(_745, cbModelParam._m0[30u].z, fma(_741, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _737)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _945 = (cbModelParam._m0[38u].y * ((((fma(_745, cbModelParam._m0[31u].z, fma(_741, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _737)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _946 = (((((fma(_745, cbModelParam._m0[32u].z, fma(_741, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _737)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _948 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_944, _945, _946), 0.0);
        vec4 _955 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_944, _945, _946), 0.0);
        vec4 _962 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_944, _945, _946), 0.0);
        vec4 _969 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_944, _945, _946), 0.0);
        float _981 = exp2((_948.w + (-0.5)) * 20.0) * 2.0;
        float _991 = exp2((_955.w + (-0.5)) * 20.0) * 2.0;
        float _1001 = exp2((_962.w + (-0.5)) * 20.0) * 2.0;
        float _1011 = exp2((_969.w + (-0.5)) * 20.0) * 2.0;
        float _1012 = _1011 * (_969.x + (-0.5));
        float _1013 = _1011 * (_969.y + (-0.5));
        float _1014 = _1011 * (_969.z + (-0.5));
        _1018 = _981 * (_948.z + (-0.5));
        _1019 = _981 * (_948.y + (-0.5));
        _1020 = _981 * (_948.x + (-0.5));
        _1021 = _991 * (_955.z + (-0.5));
        _1022 = _991 * (_955.y + (-0.5));
        _1023 = _991 * (_955.x + (-0.5));
        _1024 = _1001 * (_962.z + (-0.5));
        _1025 = _1001 * (_962.y + (-0.5));
        _1026 = _1001 * (_962.x + (-0.5));
        _1027 = isnan(0.0) ? _1014 : (isnan(_1014) ? 0.0 : max(_1014, 0.0));
        _1028 = isnan(0.0) ? _1013 : (isnan(_1013) ? 0.0 : max(_1013, 0.0));
        _1029 = isnan(0.0) ? _1012 : (isnan(_1012) ? 0.0 : max(_1012, 0.0));
    }
    else
    {
        _1018 = _879;
        _1019 = _879;
        _1020 = _879;
        _1021 = _879;
        _1022 = _879;
        _1023 = _879;
        _1024 = _879;
        _1025 = _879;
        _1026 = _879;
        _1027 = _879;
        _1028 = _879;
        _1029 = _879;
    }
    float _1044 = _691 * (-0.5);
    float _1045 = _692 * (-0.5);
    float _1046 = _693 * (-0.5);
    float _1047 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_1020, _1023, _1026, _1029));
    float _1050 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_1019, _1022, _1025, _1028));
    float _1053 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_1018, _1021, _1024, _1027));
    float _1088;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1060 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_878, _882, _885, _888));
        float _1064 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_880, _883, _886, _889));
        float _1068 = dot(vec4(_1044, _1045, _1046, 1.0), vec4(_881, _884, _887, _890));
        float _1075 = dot(vec4(cbModelParam._m0[39u]), vec4(_1044, _1045, _1046, 1.0));
        _1088 = dot(vec3(isnan(0.0) ? _1068 : (isnan(_1068) ? 0.0 : max(_1068, 0.0)), isnan(0.0) ? _1064 : (isnan(_1064) ? 0.0 : max(_1064, 0.0)), isnan(0.0) ? _1060 : (isnan(_1060) ? 0.0 : max(_1060, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1075) ? 0.0 : (isnan(0.0) ? _1075 : max(0.0, _1075))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1088 = 1.0;
    }
    float _1099;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1090 = dot(vec4(cbModelParam._m0[40u]), vec4(_1044, _1045, _1046, 1.0));
        _1099 = dot(vec3(isnan(0.0) ? _1047 : (isnan(_1047) ? 0.0 : max(_1047, 0.0)), isnan(0.0) ? _1050 : (isnan(_1050) ? 0.0 : max(_1050, 0.0)), isnan(0.0) ? _1053 : (isnan(_1053) ? 0.0 : max(_1053, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1090) ? 0.0 : (isnan(0.0) ? _1090 : max(0.0, _1090))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1099 = 1.0;
    }
    float _1103 = (_1099 * cbModelParam._m0[1u].x) + (_1088 * (1.0 - cbModelParam._m0[1u].x));
    float _1109 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1190;
    float _1192;
    float _1194;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1157 = fma(_745, cbModelParam._m0[13u].z, fma(_741, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _737)) + cbModelParam._m0[13u].w;
        float _1161 = fma(_745, cbModelParam._m0[14u].z, fma(_741, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _737)) + cbModelParam._m0[14u].w;
        float _1165 = fma(_745, cbModelParam._m0[15u].z, fma(_741, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _737)) + cbModelParam._m0[15u].w;
        float _1168 = fma(_715, cbModelParam._m0[13u].z, fma(_714, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _713));
        float _1171 = fma(_715, cbModelParam._m0[14u].z, fma(_714, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _713));
        float _1174 = fma(_715, cbModelParam._m0[15u].z, fma(_714, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _713));
        float _1200;
        if (_1168 > 0.0)
        {
            _1200 = abs((1.0 - _1157) / _1168);
        }
        else
        {
            float frontier_phi_54_52_ladder;
            if (_1168 < 0.0)
            {
                frontier_phi_54_52_ladder = abs((_1157 + 1.0) / _1168);
            }
            else
            {
                frontier_phi_54_52_ladder = 5000.0;
            }
            _1200 = frontier_phi_54_52_ladder;
        }
        float _1477;
        if (_1171 > 0.0)
        {
            _1477 = abs((1.0 - _1161) / _1171);
        }
        else
        {
            float frontier_phi_63_59_ladder;
            if (_1171 < 0.0)
            {
                frontier_phi_63_59_ladder = abs((_1161 + 1.0) / _1171);
            }
            else
            {
                frontier_phi_63_59_ladder = 5000.0;
            }
            _1477 = frontier_phi_63_59_ladder;
        }
        float _1772;
        if (_1174 > 0.0)
        {
            _1772 = abs((1.0 - _1165) / _1174);
        }
        else
        {
            float frontier_phi_77_70_ladder;
            if (_1174 < 0.0)
            {
                frontier_phi_77_70_ladder = abs((_1165 + 1.0) / _1174);
            }
            else
            {
                frontier_phi_77_70_ladder = 5000.0;
            }
            _1772 = frontier_phi_77_70_ladder;
        }
        float _1774 = isnan(_1477) ? _1200 : (isnan(_1200) ? _1477 : min(_1200, _1477));
        float _1775 = isnan(_1772) ? _1774 : (isnan(_1774) ? _1772 : min(_1774, _1772));
        float _1779 = (_1775 * _1168) + _1157;
        float _1780 = (_1775 * _1171) + _1161;
        float _1781 = (_1775 * _1174) + _1165;
        float _1782 = _1775 * 9.9999997473787516355514526367188e-05;
        float _1783 = (-1.0) - _1782;
        float _1785 = _1782 + 1.0;
        float frontier_phi_53_77_ladder;
        float frontier_phi_53_77_ladder_1;
        float frontier_phi_53_77_ladder_2;
        if ((_1781 > _1785) || ((_1781 < _1783) || ((_1780 > _1785) || ((_1780 < _1783) || ((_1779 < _1783) || (_1779 > _1785))))))
        {
            frontier_phi_53_77_ladder = 0.0;
            frontier_phi_53_77_ladder_1 = 0.0;
            frontier_phi_53_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1892 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1781, cbModelParam._m0[9u].z, fma(_1780, cbModelParam._m0[9u].y, _1779 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1781, cbModelParam._m0[10u].z, fma(_1780, cbModelParam._m0[10u].y, _1779 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1781, cbModelParam._m0[11u].z, fma(_1780, cbModelParam._m0[11u].y, _1779 * cbModelParam._m0[11u].x))), _1109);
            frontier_phi_53_77_ladder = _1892.z * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_1 = _1892.y * cbModelParam._m0[1u].y;
            frontier_phi_53_77_ladder_2 = _1892.x * cbModelParam._m0[1u].y;
        }
        _1190 = frontier_phi_53_77_ladder_2;
        _1192 = frontier_phi_53_77_ladder_1;
        _1194 = frontier_phi_53_77_ladder;
    }
    else
    {
        vec4 _1178 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_713, _714, _715), _1109);
        _1190 = _1178.x * cbModelParam._m0[1u].y;
        _1192 = _1178.y * cbModelParam._m0[1u].y;
        _1194 = _1178.z * cbModelParam._m0[1u].y;
    }
    float _1197 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1285;
    float _1287;
    float _1289;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1249 = fma(_745, cbModelParam._m0[21u].z, fma(_741, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _737)) + cbModelParam._m0[21u].w;
        float _1253 = fma(_745, cbModelParam._m0[22u].z, fma(_741, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _737)) + cbModelParam._m0[22u].w;
        float _1257 = fma(_745, cbModelParam._m0[23u].z, fma(_741, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _737)) + cbModelParam._m0[23u].w;
        float _1260 = fma(_715, cbModelParam._m0[21u].z, fma(_714, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _713));
        float _1263 = fma(_715, cbModelParam._m0[22u].z, fma(_714, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _713));
        float _1266 = fma(_715, cbModelParam._m0[23u].z, fma(_714, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _713));
        float _1482;
        if (_1260 > 0.0)
        {
            _1482 = abs((1.0 - _1249) / _1260);
        }
        else
        {
            float frontier_phi_65_61_ladder;
            if (_1260 < 0.0)
            {
                frontier_phi_65_61_ladder = abs((_1249 + 1.0) / _1260);
            }
            else
            {
                frontier_phi_65_61_ladder = 5000.0;
            }
            _1482 = frontier_phi_65_61_ladder;
        }
        float _1798;
        if (_1263 > 0.0)
        {
            _1798 = abs((1.0 - _1253) / _1263);
        }
        else
        {
            float frontier_phi_79_72_ladder;
            if (_1263 < 0.0)
            {
                frontier_phi_79_72_ladder = abs((_1253 + 1.0) / _1263);
            }
            else
            {
                frontier_phi_79_72_ladder = 5000.0;
            }
            _1798 = frontier_phi_79_72_ladder;
        }
        float _1949;
        if (_1266 > 0.0)
        {
            _1949 = abs((1.0 - _1257) / _1266);
        }
        else
        {
            float frontier_phi_93_88_ladder;
            if (_1266 < 0.0)
            {
                frontier_phi_93_88_ladder = abs((_1257 + 1.0) / _1266);
            }
            else
            {
                frontier_phi_93_88_ladder = 5000.0;
            }
            _1949 = frontier_phi_93_88_ladder;
        }
        float _1951 = isnan(_1798) ? _1482 : (isnan(_1482) ? _1798 : min(_1482, _1798));
        float _1952 = isnan(_1949) ? _1951 : (isnan(_1951) ? _1949 : min(_1951, _1949));
        float _1956 = (_1952 * _1260) + _1249;
        float _1957 = (_1952 * _1263) + _1253;
        float _1958 = (_1952 * _1266) + _1257;
        float _1959 = _1952 * 9.9999997473787516355514526367188e-05;
        float _1960 = (-1.0) - _1959;
        float _1962 = _1959 + 1.0;
        float frontier_phi_62_93_ladder;
        float frontier_phi_62_93_ladder_1;
        float frontier_phi_62_93_ladder_2;
        if ((_1958 > _1962) || ((_1958 < _1960) || ((_1957 > _1962) || ((_1957 < _1960) || ((_1956 < _1960) || (_1956 > _1962))))))
        {
            frontier_phi_62_93_ladder = 0.0;
            frontier_phi_62_93_ladder_1 = 0.0;
            frontier_phi_62_93_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2118 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1958, cbModelParam._m0[17u].z, fma(_1957, cbModelParam._m0[17u].y, _1956 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1958, cbModelParam._m0[18u].z, fma(_1957, cbModelParam._m0[18u].y, _1956 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1958, cbModelParam._m0[19u].z, fma(_1957, cbModelParam._m0[19u].y, _1956 * cbModelParam._m0[19u].x))), _1197);
            frontier_phi_62_93_ladder = _2118.z * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_1 = _2118.y * cbModelParam._m0[1u].z;
            frontier_phi_62_93_ladder_2 = _2118.x * cbModelParam._m0[1u].z;
        }
        _1285 = frontier_phi_62_93_ladder_2;
        _1287 = frontier_phi_62_93_ladder_1;
        _1289 = frontier_phi_62_93_ladder;
    }
    else
    {
        vec4 _1269 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_713, _714, _715), _1197);
        _1285 = _1269.x * cbModelParam._m0[1u].z;
        _1287 = _1269.y * cbModelParam._m0[1u].z;
        _1289 = _1269.z * cbModelParam._m0[1u].z;
    }
    float _1301 = _712 * 0.01200000010430812835693359375;
    float _1303 = _1301 * ((cbModelParam._m0[1u].w * (_1285 - _1190)) + _1190);
    float _1304 = _1301 * ((cbModelParam._m0[1u].w * (_1287 - _1192)) + _1192);
    float _1305 = _1301 * ((cbModelParam._m0[1u].w * (_1289 - _1194)) + _1194);
    float _1326 = fma(_1305, cbSceneParam._m0[89u].z, fma(_1304, cbSceneParam._m0[89u].y, _1303 * cbSceneParam._m0[89u].x));
    float _1329 = fma(_1305, cbSceneParam._m0[90u].z, fma(_1304, cbSceneParam._m0[90u].y, _1303 * cbSceneParam._m0[90u].x));
    float _1332 = fma(_1305, cbSceneParam._m0[91u].z, fma(_1304, cbSceneParam._m0[91u].y, _1303 * cbSceneParam._m0[91u].x));
    uint _1339 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1344 = floatBitsToUint(cbInstanceData._m0[_1339 + 5u]);
    uint _1346 = _1344.x * 14u;
    uint _1347 = _1346 + 13u;
    float _1352 = _712 + (-1.0);
    float _1355 = (cbLight._m0[_1347].x * _1352) + 1.0;
    float _1356 = (cbLight._m0[_1347].y * _1352) + 1.0;
    uint _1357 = _1346 + 8u;
    float _1368 = cbLight._m0[_1346].x + _691;
    float _1369 = cbLight._m0[_1346].y + _692;
    float _1370 = cbLight._m0[_1346].z + _693;
    float _1374 = inversesqrt(dot(vec3(_1368, _1369, _1370), vec3(_1368, _1369, _1370)));
    float _1378 = dot(vec3(0.0), vec3(cbLight._m0[_1346].xyz));
    float _2680 = isnan(0.0) ? _1378 : (isnan(_1378) ? 0.0 : max(_1378, 0.0));
    float _1381 = isnan(1.0) ? _2680 : (isnan(_2680) ? 1.0 : min(_2680, 1.0));
    float _1382 = dot(vec3(0.0), vec3(_691, _692, _693));
    float _2691 = isnan(0.0) ? _1382 : (isnan(_1382) ? 0.0 : max(_1382, 0.0));
    float _1385 = isnan(1.0) ? _2691 : (isnan(_2691) ? 1.0 : min(_2691, 1.0));
    float _1386 = dot(vec3(cbLight._m0[_1346].xyz), vec3(_1368 * _1374, _1369 * _1374, _1370 * _1374));
    float _2702 = isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0));
    float _1397 = (exp2(log2(1.0 - (isnan(1.0) ? _2702 : (isnan(_2702) ? 1.0 : min(_2702, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1403 = (0.5 / ((_1381 + 9.9999999392252902907785028219223e-09) + _1385)) * _1381;
    float _2713 = isnan(0.0) ? _1403 : (isnan(_1403) ? 0.0 : max(_1403, 0.0));
    float _1405 = (isnan(1.0) ? _2713 : (isnan(_2713) ? 1.0 : min(_2713, 1.0))) * 0.31831014156341552734375;
    float _1407 = isnan(1.0) ? _1355 : (isnan(_1355) ? 1.0 : min(_1355, 1.0));
    uint _1417 = _1346 + 9u;
    uint _1423 = _1346 | 1u;
    float _1429 = cbLight._m0[_1423].x + _691;
    float _1430 = cbLight._m0[_1423].y + _692;
    float _1431 = cbLight._m0[_1423].z + _693;
    float _1435 = inversesqrt(dot(vec3(_1429, _1430, _1431), vec3(_1429, _1430, _1431)));
    float _1439 = dot(vec3(0.0), vec3(cbLight._m0[_1423].xyz));
    float _2729 = isnan(0.0) ? _1439 : (isnan(_1439) ? 0.0 : max(_1439, 0.0));
    float _1442 = isnan(1.0) ? _2729 : (isnan(_2729) ? 1.0 : min(_2729, 1.0));
    float _1443 = dot(vec3(cbLight._m0[_1423].xyz), vec3(_1429 * _1435, _1430 * _1435, _1431 * _1435));
    float _2740 = isnan(0.0) ? _1443 : (isnan(_1443) ? 0.0 : max(_1443, 0.0));
    float _1452 = (exp2(log2(1.0 - (isnan(1.0) ? _2740 : (isnan(_2740) ? 1.0 : min(_2740, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1456 = (0.5 / ((_1442 + 9.9999999392252902907785028219223e-09) + _1385)) * _1442;
    float _2751 = isnan(0.0) ? _1456 : (isnan(_1456) ? 0.0 : max(_1456, 0.0));
    float _1458 = (isnan(1.0) ? _2751 : (isnan(_2751) ? 1.0 : min(_2751, 1.0))) * 0.31831014156341552734375;
    float _1459 = isnan(1.0) ? _1356 : (isnan(_1356) ? 1.0 : min(_1356, 1.0));
    float _1469 = (((_1452 * cbLight._m0[_1417].x) * _1458) * _1459) + (((_1397 * cbLight._m0[_1357].x) * _1405) * _1407);
    float _1470 = (((_1452 * cbLight._m0[_1417].y) * _1458) * _1459) + (((_1397 * cbLight._m0[_1357].y) * _1405) * _1407);
    float _1471 = (((_1452 * cbLight._m0[_1417].z) * _1458) * _1459) + (((_1397 * cbLight._m0[_1357].z) * _1405) * _1407);
    float _1587;
    float _1589;
    float _1591;
    if (_1344.y == 0u)
    {
        float _1527 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1528 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1527;
        float _1529 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1527;
        float _1530 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1527;
        uvec4 _1542 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1543 = _1542.x;
        uint _1554 = uint((float(_1542.y) * floor(float(uint(cbSceneParam._m0[85u].y * _700) / _1543))) + floor(float(uint(cbSceneParam._m0[85u].x * _699) / _1543)));
        float _1564 = (log2(_1530 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1565 = isnan(0.0) ? _1564 : (isnan(_1564) ? 0.0 : max(_1564, 0.0));
        uint _1568 = uint(isnan(14.0) ? _1565 : (isnan(_1565) ? 14.0 : min(_1565, 14.0)));
        uvec4 _1573 = texelFetch(g_lightClusterGridBuffer, int(((_1568 << 2u) + (_1554 << 6u)) >> 2u));
        uint _1574 = _1573.x;
        uint _1575 = _1542.z;
        float _1664;
        float _1666;
        float _1668;
        if (((((1u << ((_1575 >> 4u) & 15u)) + 4294967295u) & _1574) == 0u) || ((_1575 & 240u) == 0u))
        {
            _1664 = 0.0;
            _1666 = 0.0;
            _1668 = 0.0;
        }
        else
        {
            float _1665;
            float _1667;
            float _1669;
            float _1823 = 0.0;
            float _1824 = 0.0;
            float _1825 = 0.0;
            uint _1826 = 0u;
            uint _1835;
            bool _1836;
            for (;;)
            {
                _1835 = texelFetch(g_lightClassification, int((((_1568 << 5u) + (_1554 << 9u)) + (_1826 << 2u)) >> 2u)).x;
                _1836 = _1835 == 0u;
                float frontier_phi_90_pred;
                float frontier_phi_90_pred_1;
                float frontier_phi_90_pred_2;
                if (_1836)
                {
                    frontier_phi_90_pred = _1825;
                    frontier_phi_90_pred_1 = _1824;
                    frontier_phi_90_pred_2 = _1823;
                }
                else
                {
                    float _1989;
                    float _1990;
                    float _1991;
                    uint _1992;
                    _1989 = _1823;
                    _1990 = _1824;
                    _1991 = _1825;
                    _1992 = _1835;
                    float _1901;
                    float _1902;
                    float _1903;
                    for (;;)
                    {
                        uint _1996 = uint(findLSB(_1992)) + (_1826 << 5u);
                        uint _1993 = (_1992 + 4294967295u) & _1992;
                        uint _1998 = _1996 * 48u;
                        vec4 _2012 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_1998)).x, texelFetch(g_PointLightRenderingBuffer, int(_1998 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1998 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1998 + 3u)).x));
                        uint _2029 = (_1996 * 48u) + 8u;
                        vec3 _2040 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2029)).x, texelFetch(g_PointLightRenderingBuffer, int(_2029 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2029 + 2u)).x));
                        float _2044 = _2012.x - _1528;
                        float _2045 = _2012.y - _1529;
                        float _2046 = _2012.z - _1530;
                        float _2047 = dot(vec3(_2044, _2045, _2046), vec3(_2044, _2045, _2046));
                        float _2050 = inversesqrt(_2047);
                        float _2059 = 1.0 - (_2047 * _2012.w);
                        float _2777 = isnan(0.0) ? _2059 : (isnan(_2059) ? 0.0 : max(_2059, 0.0));
                        float _2061 = sqrt(_2047) * uintBitsToFloat(uvec4(_2019, _2020, _2021, texelFetch(g_PointLightRenderingBuffer, int(((_1996 * 48u) + 4u) + 3u)).x)).w;
                        float _2064 = 1.39999997615814208984375 / (_2061 + 1.39999997615814208984375);
                        float _2065 = _2064 * _2064;
                        float _2068 = ((1.0 - _2065) * dot(vec3(0.0), vec3(_2050 * _2044, _2050 * _2045, _2050 * _2046))) + _2065;
                        float _2070 = (-0.0) - _1528;
                        float _2071 = (-0.0) - _1529;
                        float _2072 = (-0.0) - _1530;
                        float _2076 = inversesqrt(dot(vec3(_2070, _2071, _2072), vec3(_2070, _2071, _2072)));
                        float _2080 = dot(vec3(0.0), vec3(_2076 * _2070, _2076 * _2071, _2076 * _2072));
                        float _2788 = isnan(0.0) ? _2080 : (isnan(_2080) ? 0.0 : max(_2080, 0.0));
                        float _2799 = isnan(0.0) ? _2068 : (isnan(_2068) ? 0.0 : max(_2068, 0.0));
                        float _2084 = isnan(1.0) ? _2799 : (isnan(_2799) ? 1.0 : min(_2799, 1.0));
                        float _2088 = (0.5 / (((isnan(1.0) ? _2788 : (isnan(_2788) ? 1.0 : min(_2788, 1.0))) + 9.9999999392252902907785028219223e-09) + _2084)) * _2084;
                        float _2810 = isnan(0.0) ? _2088 : (isnan(_2088) ? 0.0 : max(_2088, 0.0));
                        float _2097 = (((isnan(1.0) ? _2810 : (isnan(_2810) ? 1.0 : min(_2810, 1.0))) * 3.1415927410125732421875) / (((_2061 * _2061) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2777 : (isnan(_2777) ? 1.0 : min(_2777, 1.0)));
                        _1901 = (_2097 * _2040.x) + _1989;
                        _1902 = (_2097 * _2040.y) + _1990;
                        _1903 = (_2097 * _2040.z) + _1991;
                        if (_1993 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _1989 = _1901;
                            _1990 = _1902;
                            _1991 = _1903;
                            _1992 = _1993;
                        }
                    }
                    frontier_phi_90_pred = _1903;
                    frontier_phi_90_pred_1 = _1902;
                    frontier_phi_90_pred_2 = _1901;
                }
                _1669 = frontier_phi_90_pred;
                _1667 = frontier_phi_90_pred_1;
                _1665 = frontier_phi_90_pred_2;
                uint _1827 = _1826 + 1u;
                if (_1827 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1823 = _1665;
                    _1824 = _1667;
                    _1825 = _1669;
                    _1826 = _1827;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1664 = _1665;
            _1666 = _1667;
            _1668 = _1669;
        }
        uvec4 _1672 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1673 = _1672.z;
        uint _1675 = (_1673 >> 8u) & 15u;
        float _1803;
        float _1805;
        float _1807;
        if (((4294967295u << _1675) & _1574) == 0u)
        {
            _1803 = _1664;
            _1805 = _1666;
            _1807 = _1668;
        }
        else
        {
            float _1819 = inversesqrt(dot(vec3(_1528, _1529, _1530), vec3(_1528, _1529, _1530)));
            float frontier_phi_81_82_ladder;
            float frontier_phi_81_82_ladder_1;
            float frontier_phi_81_82_ladder_2;
            if (_1675 < ((_1673 >> 12u) & 15u))
            {
                float _1804;
                float _1806;
                float _1808;
                float _1975 = _1664;
                float _1976 = _1666;
                float _1977 = _1668;
                uint _1978 = _1675;
                uint _1987;
                bool _1988;
                for (;;)
                {
                    _1987 = texelFetch(g_lightClassification, int((((_1568 << 5u) + (_1554 << 9u)) + (_1978 << 2u)) >> 2u)).x;
                    _1988 = _1987 == 0u;
                    float frontier_phi_99_pred;
                    float frontier_phi_99_pred_1;
                    float frontier_phi_99_pred_2;
                    if (_1988)
                    {
                        frontier_phi_99_pred = _1977;
                        frontier_phi_99_pred_1 = _1976;
                        frontier_phi_99_pred_2 = _1975;
                    }
                    else
                    {
                        float _2123;
                        float _2124;
                        float _2125;
                        float _2344;
                        float _2345;
                        float _2346;
                        float _2133 = _1975;
                        float _2134 = _1976;
                        float _2135 = _1977;
                        uint _2136 = _1987;
                        uint _2137;
                        uint _2147;
                        vec4 _2162;
                        float _2163;
                        vec3 _2175;
                        vec4 _2190;
                        vec4 _2205;
                        float _2251;
                        bool _2252;
                        for (;;)
                        {
                            _2147 = ((_1978 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2136));
                            _2137 = (_2136 + 4294967295u) & _2136;
                            uint _2149 = _2147 * 40u;
                            _2162 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2149)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2149 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2149 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2149 + 3u)).x));
                            _2163 = _2162.w;
                            uint _2165 = (_2147 * 40u) + 8u;
                            _2175 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2165)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2165 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2165 + 2u)).x));
                            uint _2177 = (_2147 * 40u) + 16u;
                            _2190 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2177)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2177 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2177 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2177 + 3u)).x));
                            uint _2192 = (_2147 * 40u) + 20u;
                            _2205 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2192)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2192 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2192 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2192 + 3u)).x));
                            uint _2207 = (_2147 * 40u) + 24u;
                            vec4 _2220 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2207)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2207 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2207 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2207 + 3u)).x));
                            uint _2226 = (_2147 * 40u) + 28u;
                            vec4 _2239 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2226)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2226 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2226 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2226 + 3u)).x));
                            _2251 = fma(_1530, _2239.z, fma(_1529, _2239.y, _2239.x * _1528)) + _2239.w;
                            _2252 = !((fma(_1530, _2220.z, fma(_1529, _2220.y, _2220.x * _1528)) + _2220.w) <= 0.0);
                            float frontier_phi_105_pred;
                            float frontier_phi_105_pred_1;
                            float frontier_phi_105_pred_2;
                            if (_2252)
                            {
                                float _2286 = _2162.x - _1528;
                                float _2287 = _2162.y - _1529;
                                float _2288 = _2162.z - _1530;
                                float _2289 = dot(vec3(_2286, _2287, _2288), vec3(_2286, _2287, _2288));
                                float _2292 = inversesqrt(_2289);
                                float _2299 = 1.0 - (_2289 / (_2163 * _2163));
                                float _2821 = isnan(0.0) ? _2299 : (isnan(_2299) ? 0.0 : max(_2299, 0.0));
                                float _2301 = sqrt(_2289) * uintBitsToFloat(uvec4(_2255, _2256, _2257, texelFetch(g_SpotLightRenderingBuffer, int(((_2147 * 40u) + 4u) + 3u)).x)).w;
                                float _2303 = 1.39999997615814208984375 / (_2301 + 1.39999997615814208984375);
                                float _2304 = _2303 * _2303;
                                float _2307 = (fma(_1530, _2190.z, fma(_1529, _2190.y, _2190.x * _1528)) + _2190.w) / _2251;
                                float _2308 = (fma(_1530, _2205.z, fma(_1529, _2205.y, _2205.x * _1528)) + _2205.w) / _2251;
                                float _2312 = 1.0 - dot(vec2(_2307, _2308), vec2(_2307, _2308));
                                float _2832 = isnan(0.0) ? _2312 : (isnan(_2312) ? 0.0 : max(_2312, 0.0));
                                float _2320 = dot(vec3(0.0), vec3((-0.0) - (_1528 * _1819), (-0.0) - (_1529 * _1819), (-0.0) - (_1530 * _1819)));
                                float _2843 = isnan(0.0) ? _2320 : (isnan(_2320) ? 0.0 : max(_2320, 0.0));
                                float _2328 = ((1.0 - _2304) * dot(vec3(0.0), vec3(_2292 * _2286, _2292 * _2287, _2292 * _2288))) + _2304;
                                float _2854 = isnan(0.0) ? _2328 : (isnan(_2328) ? 0.0 : max(_2328, 0.0));
                                float _2329 = isnan(1.0) ? _2854 : (isnan(_2854) ? 1.0 : min(_2854, 1.0));
                                float _2333 = (0.5 / (((isnan(1.0) ? _2843 : (isnan(_2843) ? 1.0 : min(_2843, 1.0))) + 9.9999999392252902907785028219223e-09) + _2329)) * _2329;
                                float _2865 = isnan(0.0) ? _2333 : (isnan(_2333) ? 0.0 : max(_2333, 0.0));
                                float _2340 = ((isnan(1.0) ? _2832 : (isnan(_2832) ? 1.0 : min(_2832, 1.0))) * (isnan(1.0) ? _2821 : (isnan(_2821) ? 1.0 : min(_2821, 1.0)))) * (((isnan(1.0) ? _2865 : (isnan(_2865) ? 1.0 : min(_2865, 1.0))) * 3.1415927410125732421875) / (((_2301 * _2301) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_105_pred = _2340 * _2175.z;
                                frontier_phi_105_pred_1 = _2340 * _2175.y;
                                frontier_phi_105_pred_2 = _2340 * _2175.x;
                            }
                            else
                            {
                                frontier_phi_105_pred = 0.0;
                                frontier_phi_105_pred_1 = 0.0;
                                frontier_phi_105_pred_2 = 0.0;
                            }
                            _2346 = frontier_phi_105_pred;
                            _2345 = frontier_phi_105_pred_1;
                            _2344 = frontier_phi_105_pred_2;
                            _2123 = _2344 + _2133;
                            _2124 = _2345 + _2134;
                            _2125 = _2346 + _2135;
                            if (_2137 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2133 = _2123;
                                _2134 = _2124;
                                _2135 = _2125;
                                _2136 = _2137;
                                continue;
                            }
                        }
                        frontier_phi_99_pred = _2125;
                        frontier_phi_99_pred_1 = _2124;
                        frontier_phi_99_pred_2 = _2123;
                    }
                    _1808 = frontier_phi_99_pred;
                    _1806 = frontier_phi_99_pred_1;
                    _1804 = frontier_phi_99_pred_2;
                    uint _1979 = _1978 + 1u;
                    if (_1979 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _1975 = _1804;
                        _1976 = _1806;
                        _1977 = _1808;
                        _1978 = _1979;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_81_82_ladder = _1806;
                frontier_phi_81_82_ladder_1 = _1804;
                frontier_phi_81_82_ladder_2 = _1808;
            }
            else
            {
                frontier_phi_81_82_ladder = _1666;
                frontier_phi_81_82_ladder_1 = _1664;
                frontier_phi_81_82_ladder_2 = _1668;
            }
            _1803 = frontier_phi_81_82_ladder_1;
            _1805 = frontier_phi_81_82_ladder;
            _1807 = frontier_phi_81_82_ladder_2;
        }
        float _1812 = isnan(1.0) ? _712 : (isnan(_712) ? 1.0 : min(_712, 1.0));
        _1587 = ((_1803 * 0.039999999105930328369140625) * _1812) + _1469;
        _1589 = ((_1805 * 0.039999999105930328369140625) * _1812) + _1470;
        _1591 = ((_1807 * 0.039999999105930328369140625) * _1812) + _1471;
    }
    else
    {
        _1587 = _1469;
        _1589 = _1470;
        _1591 = _1471;
    }
    uint _1598 = (_1339 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1613 = (cbInstanceData._m0[_1598].x * ((_661 * ((_611.x * cbMtdParam._m0[14u].x) - _544)) + _544)) + ((_1587 + ((isnan(0.0) ? _1326 : (isnan(_1326) ? 0.0 : max(_1326, 0.0))) * _1103)) * cbPerFrame._m0[3u].x);
    float _1614 = (cbInstanceData._m0[_1598].y * ((_661 * ((_611.y * cbMtdParam._m0[14u].y) - _545)) + _545)) + ((_1589 + ((isnan(0.0) ? _1329 : (isnan(_1329) ? 0.0 : max(_1329, 0.0))) * _1103)) * cbPerFrame._m0[3u].x);
    float _1615 = (cbInstanceData._m0[_1598].z * ((_661 * ((_611.z * cbMtdParam._m0[14u].z) - _546)) + _546)) + ((_1591 + ((isnan(0.0) ? _1332 : (isnan(_1332) ? 0.0 : max(_1332, 0.0))) * _1103)) * cbPerFrame._m0[3u].x);
    uint _1619 = _1339 + 6u;
    float _1627 = _699 / cbSceneParam._m0[86u].x;
    float _1628 = _700 / cbSceneParam._m0[86u].y;
    vec4 _1642 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1627, _1628, (log2((isnan(cbSceneParam._m0[77u].w) ? _686 : (isnan(_686) ? cbSceneParam._m0[77u].w : min(_686, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1644 = _1642.x;
    float _1645 = _1642.y;
    float _1646 = _1642.z;
    float _1647 = _1642.w;
    float _1721;
    float _1723;
    float _1725;
    float _1727;
    if (_686 > cbSceneParam._m0[78u].w)
    {
        float _1683 = isnan(_686) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _686 : min(cbSceneParam._m0[80u].w, _686));
        float _1684 = _1683 / _686;
        float _1695 = _1684 * _261;
        float _1696 = _262 * _1684;
        float _1697 = (-0.0) - _1696;
        float _1698 = _1684 * _263;
        float _1700 = (cbSceneParam._m0[77u].w * _1697) / _1683;
        float _1701 = _1700 + cbSceneParam._m0[79u].w;
        float _1702 = cbSceneParam._m0[79u].w - _1696;
        float _1708 = sqrt(((_1695 * _1695) + (_1696 * _1696)) + (_1698 * _1698));
        float _1711 = (1.0 - (cbSceneParam._m0[77u].w / _1683)) * _1708;
        float _1717 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1719 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1911;
        if (abs((_1697 - _1700) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1911 = ((((_1701 > 0.0) ? exp2(_1717 * _1701) : (2.0 - exp2(_1719 * _1701))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1711;
        }
        else
        {
            float _1849 = 1.0 / cbSceneParam._m0[80u].x;
            float _1850 = isnan(_1702) ? _1701 : (isnan(_1701) ? _1702 : max(_1701, _1702));
            float _1851 = isnan(_1702) ? _1701 : (isnan(_1701) ? _1702 : min(_1701, _1702));
            float _1860 = isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : min(_1850, 0.0));
            float _1861 = isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : min(_1851, 0.0));
            _1911 = ((abs(_1708 / _1697) * cbSceneParam._m0[80u].y) * ((((_1860 - _1861) * 2.0) - ((exp2(_1717 * (isnan(0.0) ? _1850 : (isnan(_1850) ? 0.0 : max(_1850, 0.0)))) - exp2(_1717 * (isnan(0.0) ? _1851 : (isnan(_1851) ? 0.0 : max(_1851, 0.0))))) * _1849)) - ((exp2(_1719 * _1860) - exp2(_1719 * _1861)) * _1849))) + (_1711 * cbSceneParam._m0[80u].z);
        }
        vec4 _1913 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1627, _1628, 1.0), 0.0);
        float _1922 = exp2((_1911 * (-1.44269502162933349609375)) * (1.0 - _1913.w));
        float _1923 = log2(_1922);
        float _1939 = log2(_1647);
        _1721 = (exp2(_1939 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1923 * cbSceneParam._m0[78u].x)) * _1913.x) / cbSceneParam._m0[78u].x)) + _1644;
        _1723 = (exp2(_1939 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1923 * cbSceneParam._m0[78u].y)) * _1913.y) / cbSceneParam._m0[78u].y)) + _1645;
        _1725 = (exp2(_1939 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1923 * cbSceneParam._m0[78u].z)) * _1913.z) / cbSceneParam._m0[78u].z)) + _1646;
        _1727 = _1922 * _1647;
    }
    else
    {
        _1721 = _1644;
        _1723 = _1645;
        _1725 = _1646;
        _1727 = _1647;
    }
    float _1739 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1740 = _1739 == 3.0;
    float _1742 = log2(_1727);
    float _1749 = exp2(_1742 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1613 : (isnan(_1613) ? 0.0 : max(_1613, 0.0)));
    float _1750 = exp2(_1742 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1614 : (isnan(_1614) ? 0.0 : max(_1614, 0.0)));
    float _1751 = exp2(_1742 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1615 : (isnan(_1615) ? 0.0 : max(_1615, 0.0)));
    float _1760 = (_1739 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1760 * (_1740 ? _1749 : (_1749 + (cbSceneParam._m0[72u].w * _1721)));
    SV_Target.y = _1760 * (_1740 ? _1750 : (_1750 + (cbSceneParam._m0[72u].w * _1723)));
    SV_Target.z = _1760 * (_1740 ? _1751 : (_1751 + (cbSceneParam._m0[72u].w * _1725)));
    SV_Target.w = cbInstanceData._m0[_1619].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1619].w;
}


