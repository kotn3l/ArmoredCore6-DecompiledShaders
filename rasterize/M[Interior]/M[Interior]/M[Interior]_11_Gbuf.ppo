#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _128 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _129 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _130 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _135 = inversesqrt(dot(vec3(_128, _129, _130), vec3(_128, _129, _130)));
    float _142 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _146 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _194 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _228 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _263 = cbMtdParam._m0[21u].w + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _194));
    float _264 = cbMtdParam._m0[22u].x + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _194));
    float _265 = cbMtdParam._m0[22u].y + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _194));
    float _282 = (-0.0) - dot(vec3(_263, _264, _265), vec3(_135 * _128, _135 * _129, _135 * _130));
    float _283 = (-0.0) - dot(vec3(_263, _264, _265), vec3(_146 * TANGENT.x, _146 * TANGENT.y, _146 * TANGENT.z));
    float _284 = (-0.0) - dot(vec3(_263, _264, _265), vec3((-0.0) - (NORMAL.x * _142), (-0.0) - (NORMAL.y * _142), (-0.0) - (NORMAL.z * _142)));
    float _288 = inversesqrt(dot(vec3(_282, _283, _284), vec3(_282, _283, _284)));
    float _291 = _288 * _284;
    float _294 = ((_288 * _282) + (((_228.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w)) * cbMtdParam._m0[18u].z;
    float _295 = ((_288 * _283) + (((_228.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x)) * cbMtdParam._m0[18u].y;
    float _296 = fract(TEXCOORD.x);
    float _297 = fract(TEXCOORD.y);
    float _303;
    if (_294 > 0.0)
    {
        _303 = (1.0 - _296) / _294;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_294 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _296) / _294;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _303 = frontier_phi_3_2_ladder;
    }
    float _311;
    if (_295 > 0.0)
    {
        _311 = (1.0 - _297) / _295;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_295 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _297) / _295;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _311 = frontier_phi_7_6_ladder;
    }
    float _315 = (_291 > 0.0) ? (cbMtdParam._m0[15u].x / _291) : 5000.0;
    float _316 = isnan(_311) ? _303 : (isnan(_303) ? _311 : min(_303, _311));
    float _317 = isnan(_315) ? _316 : (isnan(_316) ? _315 : min(_316, _315));
    float _321 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _328 = ((_317 * _291) + _321) / _321;
    vec4 _352 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_296 + (-0.5)) + (_317 * _294)) / _328) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_297 + (-0.5)) + (_317 * _295)) / _328) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _362 = cbMtdParam._m0[9u].x * _352.x;
    float _363 = cbMtdParam._m0[9u].y * _352.y;
    float _364 = cbMtdParam._m0[9u].z * _352.z;
    float _465 = isnan(0.0) ? _362 : (isnan(_362) ? 0.0 : max(_362, 0.0));
    float _476 = isnan(0.0) ? _363 : (isnan(_363) ? 0.0 : max(_363, 0.0));
    float _487 = isnan(0.0) ? _364 : (isnan(_364) ? 0.0 : max(_364, 0.0));
    uint _382 = uint(roundEven(NORMAL.w)) * 13u;
    uint _385 = (_382 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _391 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _465 : (isnan(_465) ? 1.0 : min(_465, 1.0)))) * cbInstanceData._m0[_385].x;
    float _392 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _476 : (isnan(_476) ? 1.0 : min(_476, 1.0)))) * cbInstanceData._m0[_385].y;
    float _393 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _487 : (isnan(_487) ? 1.0 : min(_487, 1.0)))) * cbInstanceData._m0[_385].z;
    float _498 = isnan(0.0) ? _391 : (isnan(_391) ? 0.0 : max(_391, 0.0));
    float _509 = isnan(0.0) ? _392 : (isnan(_392) ? 0.0 : max(_392, 0.0));
    float _520 = isnan(0.0) ? _393 : (isnan(_393) ? 0.0 : max(_393, 0.0));
    uint _397 = _382 + 6u;
    bool _415 = cbMtdParam._m0[1u].z != 0.0;
    float _416 = _415 ? cbInstanceData._m0[_397].w : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _416;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _415 ? cbInstanceData._m0[_397].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _498 : (isnan(_498) ? 1.0 : min(_498, 1.0));
    SV_Target_2.y = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
    SV_Target_2.z = isnan(1.0) ? _520 : (isnan(_520) ? 1.0 : min(_520, 1.0));
    SV_Target_2.w = _415 ? cbInstanceData._m0[_397].w : (float(floatBitsToUint(cbInstanceData._m0[_382 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _416;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _416;
}


