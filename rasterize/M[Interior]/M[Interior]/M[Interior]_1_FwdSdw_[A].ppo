#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _670;
uint _2138;
uint _2139;
uint _2140;
uint _2363;
uint _2364;
uint _2365;
float _2597;
float _2598;
float _2599;
float _2600;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _200 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _248 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _258 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _248);
    float _259 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _248);
    float _260 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _248);
    vec4 _282 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _317 = cbMtdParam._m0[21u].w + _258;
    float _318 = cbMtdParam._m0[22u].x + _259;
    float _319 = cbMtdParam._m0[22u].y + _260;
    float _336 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_189 * _182, _189 * _183, _189 * _184));
    float _337 = (-0.0) - dot(vec3(_317, _318, _319), vec3(_200 * TANGENT.x, _200 * TANGENT.y, _200 * TANGENT.z));
    float _338 = (-0.0) - dot(vec3(_317, _318, _319), vec3((-0.0) - (NORMAL.x * _196), (-0.0) - (NORMAL.y * _196), (-0.0) - (NORMAL.z * _196)));
    float _342 = inversesqrt(dot(vec3(_336, _337, _338), vec3(_336, _337, _338)));
    float _345 = _342 * _338;
    float _348 = ((_342 * _336) + (((_282.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w)) * cbMtdParam._m0[18u].z;
    float _349 = ((_342 * _337) + (((_282.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x)) * cbMtdParam._m0[18u].y;
    float _350 = fract(TEXCOORD.x);
    float _351 = fract(TEXCOORD.y);
    float _357;
    if (_348 > 0.0)
    {
        _357 = (1.0 - _350) / _348;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_348 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _350) / _348;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _357 = frontier_phi_3_2_ladder;
    }
    float _365;
    if (_349 > 0.0)
    {
        _365 = (1.0 - _351) / _349;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_349 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _351) / _349;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _365 = frontier_phi_7_6_ladder;
    }
    float _369 = (_345 > 0.0) ? (cbMtdParam._m0[15u].x / _345) : 5000.0;
    float _370 = isnan(_365) ? _357 : (isnan(_357) ? _365 : min(_357, _365));
    float _371 = isnan(_369) ? _370 : (isnan(_370) ? _369 : min(_370, _369));
    float _375 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _382 = ((_371 * _345) + _375) / _375;
    vec4 _406 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_350 + (-0.5)) + (_371 * _348)) / _382) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_351 + (-0.5)) + (_371 * _349)) / _382) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _434 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _438 = inversesqrt(dot(vec3(_258, _259, _260), vec3(_258, _259, _260)));
    float _439 = _258 * _438;
    float _440 = _259 * _438;
    float _441 = _260 * _438;
    vec4 _446 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _448 = _446.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _518 = sqrt(((_258 * _258) + (_259 * _259)) + (_260 * _260));
        float _525 = (cbMatDynParam._m0[5u].x * _518) + cbMatDynParam._m0[5u].y;
        float _2619 = isnan(0.0) ? _525 : (isnan(_525) ? 0.0 : max(_525, 0.0));
        float _526 = isnan(1.0) ? _2619 : (isnan(_2619) ? 1.0 : min(_2619, 1.0));
        float _530 = (cbMatDynParam._m0[5u].z * _518) + cbMatDynParam._m0[5u].w;
        float _2630 = isnan(0.0) ? _530 : (isnan(_530) ? 0.0 : max(_530, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _2630 : (isnan(_2630) ? 1.0 : min(_2630, 1.0))) - _526)) + _526) < ((_448 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    float _461 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _462 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _471 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_461 * cbSceneParam._m0[86u].x, _462 * cbSceneParam._m0[86u].y));
    float _474 = _471.x * TEXCOORD.z;
    float _475 = (-0.0) - _439;
    float _476 = (-0.0) - _440;
    float _477 = (-0.0) - _441;
    float _499 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _503 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _507 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _669;
    float _671;
    float _672;
    float _673;
    float _674;
    float _675;
    float _676;
    float _677;
    float _678;
    float _679;
    float _680;
    float _681;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _592 = (cbModelParam._m0[37u].x * ((((fma(_507, cbModelParam._m0[26u].z, fma(_503, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _499)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _594 = (cbModelParam._m0[37u].y * ((((fma(_507, cbModelParam._m0[27u].z, fma(_503, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _499)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _595 = (((((fma(_507, cbModelParam._m0[28u].z, fma(_503, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _499)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _598 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_592, _594, _595), 0.0);
        vec4 _605 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_592, _594, _595), 0.0);
        vec4 _612 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_592, _594, _595), 0.0);
        vec4 _619 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_592, _594, _595), 0.0);
        float _632 = exp2((_598.w + (-0.5)) * 20.0) * 2.0;
        float _642 = exp2((_605.w + (-0.5)) * 20.0) * 2.0;
        float _652 = exp2((_612.w + (-0.5)) * 20.0) * 2.0;
        float _662 = exp2((_619.w + (-0.5)) * 20.0) * 2.0;
        float _663 = _662 * (_619.x + (-0.5));
        float _664 = _662 * (_619.y + (-0.5));
        float _665 = _662 * (_619.z + (-0.5));
        _669 = _632 * (_598.z + (-0.5));
        _671 = _632 * (_598.y + (-0.5));
        _672 = _632 * (_598.x + (-0.5));
        _673 = _642 * (_605.z + (-0.5));
        _674 = _642 * (_605.y + (-0.5));
        _675 = _642 * (_605.x + (-0.5));
        _676 = _652 * (_612.z + (-0.5));
        _677 = _652 * (_612.y + (-0.5));
        _678 = _652 * (_612.x + (-0.5));
        _679 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        _680 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
        _681 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
    }
    else
    {
        _669 = _670;
        _671 = _670;
        _672 = _670;
        _673 = _670;
        _674 = _670;
        _675 = _670;
        _676 = _670;
        _677 = _670;
        _678 = _670;
        _679 = _670;
        _680 = _670;
        _681 = _670;
    }
    float _812;
    float _813;
    float _814;
    float _815;
    float _816;
    float _817;
    float _818;
    float _819;
    float _820;
    float _821;
    float _822;
    float _823;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _738 = (cbModelParam._m0[38u].x * ((((fma(_507, cbModelParam._m0[30u].z, fma(_503, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _499)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _739 = (cbModelParam._m0[38u].y * ((((fma(_507, cbModelParam._m0[31u].z, fma(_503, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _499)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _740 = (((((fma(_507, cbModelParam._m0[32u].z, fma(_503, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _499)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _742 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_738, _739, _740), 0.0);
        vec4 _749 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_738, _739, _740), 0.0);
        vec4 _756 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_738, _739, _740), 0.0);
        vec4 _763 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_738, _739, _740), 0.0);
        float _775 = exp2((_742.w + (-0.5)) * 20.0) * 2.0;
        float _785 = exp2((_749.w + (-0.5)) * 20.0) * 2.0;
        float _795 = exp2((_756.w + (-0.5)) * 20.0) * 2.0;
        float _805 = exp2((_763.w + (-0.5)) * 20.0) * 2.0;
        float _806 = _805 * (_763.x + (-0.5));
        float _807 = _805 * (_763.y + (-0.5));
        float _808 = _805 * (_763.z + (-0.5));
        _812 = _775 * (_742.z + (-0.5));
        _813 = _775 * (_742.y + (-0.5));
        _814 = _775 * (_742.x + (-0.5));
        _815 = _785 * (_749.z + (-0.5));
        _816 = _785 * (_749.y + (-0.5));
        _817 = _785 * (_749.x + (-0.5));
        _818 = _795 * (_756.z + (-0.5));
        _819 = _795 * (_756.y + (-0.5));
        _820 = _795 * (_756.x + (-0.5));
        _821 = isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0));
        _822 = isnan(0.0) ? _807 : (isnan(_807) ? 0.0 : max(_807, 0.0));
        _823 = isnan(0.0) ? _806 : (isnan(_806) ? 0.0 : max(_806, 0.0));
    }
    else
    {
        _812 = _670;
        _813 = _670;
        _814 = _670;
        _815 = _670;
        _816 = _670;
        _817 = _670;
        _818 = _670;
        _819 = _670;
        _820 = _670;
        _821 = _670;
        _822 = _670;
        _823 = _670;
    }
    float _838 = _439 * (-0.5);
    float _839 = _440 * (-0.5);
    float _840 = _441 * (-0.5);
    float _841 = dot(vec4(_838, _839, _840, 1.0), vec4(_814, _817, _820, _823));
    float _844 = dot(vec4(_838, _839, _840, 1.0), vec4(_813, _816, _819, _822));
    float _847 = dot(vec4(_838, _839, _840, 1.0), vec4(_812, _815, _818, _821));
    float _882;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _854 = dot(vec4(_838, _839, _840, 1.0), vec4(_669, _673, _676, _679));
        float _858 = dot(vec4(_838, _839, _840, 1.0), vec4(_671, _674, _677, _680));
        float _862 = dot(vec4(_838, _839, _840, 1.0), vec4(_672, _675, _678, _681));
        float _869 = dot(vec4(cbModelParam._m0[39u]), vec4(_838, _839, _840, 1.0));
        _882 = dot(vec3(isnan(0.0) ? _862 : (isnan(_862) ? 0.0 : max(_862, 0.0)), isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0)), isnan(0.0) ? _854 : (isnan(_854) ? 0.0 : max(_854, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_869) ? 0.0 : (isnan(0.0) ? _869 : max(0.0, _869))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _882 = 1.0;
    }
    float _893;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _884 = dot(vec4(cbModelParam._m0[40u]), vec4(_838, _839, _840, 1.0));
        _893 = dot(vec3(isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0)), isnan(0.0) ? _844 : (isnan(_844) ? 0.0 : max(_844, 0.0)), isnan(0.0) ? _847 : (isnan(_847) ? 0.0 : max(_847, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_884) ? 0.0 : (isnan(0.0) ? _884 : max(0.0, _884))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _893 = 1.0;
    }
    float _897 = (_893 * cbModelParam._m0[1u].x) + (_882 * (1.0 - cbModelParam._m0[1u].x));
    float _903 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _986;
    float _988;
    float _990;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _953 = fma(_507, cbModelParam._m0[13u].z, fma(_503, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _499)) + cbModelParam._m0[13u].w;
        float _957 = fma(_507, cbModelParam._m0[14u].z, fma(_503, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _499)) + cbModelParam._m0[14u].w;
        float _961 = fma(_507, cbModelParam._m0[15u].z, fma(_503, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _499)) + cbModelParam._m0[15u].w;
        float _964 = fma(_477, cbModelParam._m0[13u].z, fma(_476, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _475));
        float _967 = fma(_477, cbModelParam._m0[14u].z, fma(_476, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _475));
        float _970 = fma(_477, cbModelParam._m0[15u].z, fma(_476, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _475));
        float _996;
        if (_964 > 0.0)
        {
            _996 = abs((1.0 - _953) / _964);
        }
        else
        {
            float frontier_phi_25_23_ladder;
            if (_964 < 0.0)
            {
                frontier_phi_25_23_ladder = abs((_953 + 1.0) / _964);
            }
            else
            {
                frontier_phi_25_23_ladder = 5000.0;
            }
            _996 = frontier_phi_25_23_ladder;
        }
        float _1184;
        if (_967 > 0.0)
        {
            _1184 = abs((1.0 - _957) / _967);
        }
        else
        {
            float frontier_phi_34_30_ladder;
            if (_967 < 0.0)
            {
                frontier_phi_34_30_ladder = abs((_957 + 1.0) / _967);
            }
            else
            {
                frontier_phi_34_30_ladder = 5000.0;
            }
            _1184 = frontier_phi_34_30_ladder;
        }
        float _1538;
        if (_970 > 0.0)
        {
            _1538 = abs((1.0 - _961) / _970);
        }
        else
        {
            float frontier_phi_46_41_ladder;
            if (_970 < 0.0)
            {
                frontier_phi_46_41_ladder = abs((_961 + 1.0) / _970);
            }
            else
            {
                frontier_phi_46_41_ladder = 5000.0;
            }
            _1538 = frontier_phi_46_41_ladder;
        }
        float _1540 = isnan(_1184) ? _996 : (isnan(_996) ? _1184 : min(_996, _1184));
        float _1541 = isnan(_1538) ? _1540 : (isnan(_1540) ? _1538 : min(_1540, _1538));
        float _1545 = (_1541 * _964) + _953;
        float _1546 = (_1541 * _967) + _957;
        float _1547 = (_1541 * _970) + _961;
        float _1548 = _1541 * 9.9999997473787516355514526367188e-05;
        float _1550 = (-1.0) - _1548;
        float _1552 = _1548 + 1.0;
        float frontier_phi_24_46_ladder;
        float frontier_phi_24_46_ladder_1;
        float frontier_phi_24_46_ladder_2;
        if ((_1547 > _1552) || ((_1547 < _1550) || ((_1546 > _1552) || ((_1546 < _1550) || ((_1545 < _1550) || (_1545 > _1552))))))
        {
            frontier_phi_24_46_ladder = 0.0;
            frontier_phi_24_46_ladder_1 = 0.0;
            frontier_phi_24_46_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1780 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1547, cbModelParam._m0[9u].z, fma(_1546, cbModelParam._m0[9u].y, _1545 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1547, cbModelParam._m0[10u].z, fma(_1546, cbModelParam._m0[10u].y, _1545 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1547, cbModelParam._m0[11u].z, fma(_1546, cbModelParam._m0[11u].y, _1545 * cbModelParam._m0[11u].x))), _903);
            frontier_phi_24_46_ladder = _1780.z * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_1 = _1780.y * cbModelParam._m0[1u].y;
            frontier_phi_24_46_ladder_2 = _1780.x * cbModelParam._m0[1u].y;
        }
        _986 = frontier_phi_24_46_ladder_2;
        _988 = frontier_phi_24_46_ladder_1;
        _990 = frontier_phi_24_46_ladder;
    }
    else
    {
        vec4 _974 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_475, _476, _477), _903);
        _986 = _974.x * cbModelParam._m0[1u].y;
        _988 = _974.y * cbModelParam._m0[1u].y;
        _990 = _974.z * cbModelParam._m0[1u].y;
    }
    float _993 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1081;
    float _1083;
    float _1085;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1045 = fma(_507, cbModelParam._m0[21u].z, fma(_503, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _499)) + cbModelParam._m0[21u].w;
        float _1049 = fma(_507, cbModelParam._m0[22u].z, fma(_503, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _499)) + cbModelParam._m0[22u].w;
        float _1053 = fma(_507, cbModelParam._m0[23u].z, fma(_503, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _499)) + cbModelParam._m0[23u].w;
        float _1056 = fma(_477, cbModelParam._m0[21u].z, fma(_476, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _475));
        float _1059 = fma(_477, cbModelParam._m0[22u].z, fma(_476, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _475));
        float _1062 = fma(_477, cbModelParam._m0[23u].z, fma(_476, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _475));
        float _1189;
        if (_1056 > 0.0)
        {
            _1189 = abs((1.0 - _1045) / _1056);
        }
        else
        {
            float frontier_phi_36_32_ladder;
            if (_1056 < 0.0)
            {
                frontier_phi_36_32_ladder = abs((_1045 + 1.0) / _1056);
            }
            else
            {
                frontier_phi_36_32_ladder = 5000.0;
            }
            _1189 = frontier_phi_36_32_ladder;
        }
        float _1565;
        if (_1059 > 0.0)
        {
            _1565 = abs((1.0 - _1049) / _1059);
        }
        else
        {
            float frontier_phi_48_43_ladder;
            if (_1059 < 0.0)
            {
                frontier_phi_48_43_ladder = abs((_1049 + 1.0) / _1059);
            }
            else
            {
                frontier_phi_48_43_ladder = 5000.0;
            }
            _1565 = frontier_phi_48_43_ladder;
        }
        float _1905;
        if (_1062 > 0.0)
        {
            _1905 = abs((1.0 - _1053) / _1062);
        }
        else
        {
            float frontier_phi_60_55_ladder;
            if (_1062 < 0.0)
            {
                frontier_phi_60_55_ladder = abs((_1053 + 1.0) / _1062);
            }
            else
            {
                frontier_phi_60_55_ladder = 5000.0;
            }
            _1905 = frontier_phi_60_55_ladder;
        }
        float _1907 = isnan(_1565) ? _1189 : (isnan(_1189) ? _1565 : min(_1189, _1565));
        float _1908 = isnan(_1905) ? _1907 : (isnan(_1907) ? _1905 : min(_1907, _1905));
        float _1912 = (_1908 * _1056) + _1045;
        float _1913 = (_1908 * _1059) + _1049;
        float _1914 = (_1908 * _1062) + _1053;
        float _1915 = _1908 * 9.9999997473787516355514526367188e-05;
        float _1916 = (-1.0) - _1915;
        float _1918 = _1915 + 1.0;
        float frontier_phi_33_60_ladder;
        float frontier_phi_33_60_ladder_1;
        float frontier_phi_33_60_ladder_2;
        if ((_1914 > _1918) || ((_1914 < _1916) || ((_1913 > _1918) || ((_1913 < _1916) || ((_1912 < _1916) || (_1912 > _1918))))))
        {
            frontier_phi_33_60_ladder = 0.0;
            frontier_phi_33_60_ladder_1 = 0.0;
            frontier_phi_33_60_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2036 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1914, cbModelParam._m0[17u].z, fma(_1913, cbModelParam._m0[17u].y, _1912 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1914, cbModelParam._m0[18u].z, fma(_1913, cbModelParam._m0[18u].y, _1912 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1914, cbModelParam._m0[19u].z, fma(_1913, cbModelParam._m0[19u].y, _1912 * cbModelParam._m0[19u].x))), _993);
            frontier_phi_33_60_ladder = _2036.z * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_1 = _2036.y * cbModelParam._m0[1u].z;
            frontier_phi_33_60_ladder_2 = _2036.x * cbModelParam._m0[1u].z;
        }
        _1081 = frontier_phi_33_60_ladder_2;
        _1083 = frontier_phi_33_60_ladder_1;
        _1085 = frontier_phi_33_60_ladder;
    }
    else
    {
        vec4 _1065 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_475, _476, _477), _993);
        _1081 = _1065.x * cbModelParam._m0[1u].z;
        _1083 = _1065.y * cbModelParam._m0[1u].z;
        _1085 = _1065.z * cbModelParam._m0[1u].z;
    }
    float _1097 = _474 * 0.01200000010430812835693359375;
    float _1099 = _1097 * ((cbModelParam._m0[1u].w * (_1081 - _986)) + _986);
    float _1100 = _1097 * ((cbModelParam._m0[1u].w * (_1083 - _988)) + _988);
    float _1101 = _1097 * ((cbModelParam._m0[1u].w * (_1085 - _990)) + _990);
    float _1122 = fma(_1101, cbSceneParam._m0[89u].z, fma(_1100, cbSceneParam._m0[89u].y, _1099 * cbSceneParam._m0[89u].x));
    float _1125 = fma(_1101, cbSceneParam._m0[90u].z, fma(_1100, cbSceneParam._m0[90u].y, _1099 * cbSceneParam._m0[90u].x));
    float _1128 = fma(_1101, cbSceneParam._m0[91u].z, fma(_1100, cbSceneParam._m0[91u].y, _1099 * cbSceneParam._m0[91u].x));
    float _1163 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1167 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1171 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1175 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1176 = _1163 / _1175;
    float _1177 = _1167 / _1175;
    float _1178 = _1171 / _1175;
    float _1326;
    float _1327;
    float _1328;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1205 = ((uint(_1178 > cbSceneParam._m0[59u].y) + uint(_1178 > cbSceneParam._m0[59u].x)) + uint(_1178 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1206 = _1205 + 43u;
        uint _1214 = _1205 + 44u;
        uint _1222 = _1205 + 45u;
        uint _1230 = _1205 + 46u;
        float _1241 = fma(_1175, cbSceneParam._m0[_1206].w, fma(_1171, cbSceneParam._m0[_1206].z, fma(_1167, cbSceneParam._m0[_1206].y, _1163 * cbSceneParam._m0[_1206].x)));
        float _1245 = fma(_1175, cbSceneParam._m0[_1214].w, fma(_1171, cbSceneParam._m0[_1214].z, fma(_1167, cbSceneParam._m0[_1214].y, _1163 * cbSceneParam._m0[_1214].x)));
        float _1253 = fma(_1175, cbSceneParam._m0[_1230].w, fma(_1171, cbSceneParam._m0[_1230].z, fma(_1167, cbSceneParam._m0[_1230].y, _1163 * cbSceneParam._m0[_1230].x)));
        float _1258 = cbSceneParam._m0[33u].z * _1253;
        float _1260 = cbSceneParam._m0[33u].w * _1253;
        float _1263 = fma(_1175, cbSceneParam._m0[_1222].w, fma(_1171, cbSceneParam._m0[_1222].z, fma(_1167, cbSceneParam._m0[_1222].y, _1163 * cbSceneParam._m0[_1222].x))) / _1253;
        float _1311 = (cbSceneParam._m0[33u].x - sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178))) * cbSceneParam._m0[33u].y;
        float _2756 = isnan(0.0) ? _1311 : (isnan(_1311) ? 0.0 : max(_1311, 0.0));
        float _1319 = (isnan(1.0) ? _2756 : (isnan(_2756) ? 1.0 : min(_2756, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1258 + _1241) / _1253, (_1260 + _1245) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1260 + _1241) / _1253, (_1245 - _1258) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1241 - _1258) / _1253, (_1245 - _1260) / _1253), _1263), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1241 - _1260) / _1253, (_1258 + _1245) / _1253), _1263), 0.0)).x), vec4(0.25)));
        _1326 = 1.0 - (_1319 * cbSceneParam._m0[34u].x);
        _1327 = 1.0 - (_1319 * cbSceneParam._m0[34u].y);
        _1328 = 1.0 - (_1319 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1326 = 1.0;
        _1327 = 1.0;
        _1328 = 1.0;
    }
    float _1392;
    float _1394;
    float _1396;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1380 = fma(_1175, cbSceneParam._m0[63u].w, fma(_1171, cbSceneParam._m0[63u].z, fma(_1167, cbSceneParam._m0[63u].y, _1163 * cbSceneParam._m0[63u].x)));
        float _1381 = fma(_1175, cbSceneParam._m0[60u].w, fma(_1171, cbSceneParam._m0[60u].z, fma(_1167, cbSceneParam._m0[60u].y, _1163 * cbSceneParam._m0[60u].x))) / _1380;
        float _1382 = fma(_1175, cbSceneParam._m0[61u].w, fma(_1171, cbSceneParam._m0[61u].z, fma(_1167, cbSceneParam._m0[61u].y, _1163 * cbSceneParam._m0[61u].x))) / _1380;
        float frontier_phi_45_44_ladder;
        float frontier_phi_45_44_ladder_1;
        float frontier_phi_45_44_ladder_2;
        if ((((_1381 >= cbSceneParam._m0[64u].x) && (_1382 >= cbSceneParam._m0[64u].y)) && (_1381 <= cbSceneParam._m0[64u].z)) && (_1382 <= cbSceneParam._m0[64u].w))
        {
            float _1578 = fma(_1175, cbSceneParam._m0[62u].w, fma(_1171, cbSceneParam._m0[62u].z, fma(_1167, cbSceneParam._m0[62u].y, _1163 * cbSceneParam._m0[62u].x))) / _1380;
            float _1582 = isnan(cbSceneParam._m0[41u].w) ? _1578 : (isnan(_1578) ? cbSceneParam._m0[41u].w : max(_1578, cbSceneParam._m0[41u].w));
            float _1625 = (cbSceneParam._m0[33u].x - sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178))) * cbSceneParam._m0[33u].y;
            float _2772 = isnan(0.0) ? _1625 : (isnan(_1625) ? 0.0 : max(_1625, 0.0));
            float _1632 = (isnan(1.0) ? _2772 : (isnan(_2772) ? 1.0 : min(_2772, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1381, cbSceneParam._m0[33u].w + _1382), _1582), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1381, _1382 - cbSceneParam._m0[33u].z), _1582), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1381 - cbSceneParam._m0[33u].z, _1382 - cbSceneParam._m0[33u].w), _1582), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1381 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1382), _1582), 0.0)).x), vec4(0.25)));
            float _1636 = 1.0 - (_1632 * cbSceneParam._m0[34u].x);
            float _1637 = 1.0 - (_1632 * cbSceneParam._m0[34u].y);
            float _1638 = 1.0 - (_1632 * cbSceneParam._m0[34u].z);
            frontier_phi_45_44_ladder = isnan(_1638) ? _1328 : (isnan(_1328) ? _1638 : min(_1328, _1638));
            frontier_phi_45_44_ladder_1 = isnan(_1636) ? _1326 : (isnan(_1326) ? _1636 : min(_1326, _1636));
            frontier_phi_45_44_ladder_2 = isnan(_1637) ? _1327 : (isnan(_1327) ? _1637 : min(_1327, _1637));
        }
        else
        {
            frontier_phi_45_44_ladder = _1328;
            frontier_phi_45_44_ladder_1 = _1326;
            frontier_phi_45_44_ladder_2 = _1327;
        }
        _1392 = frontier_phi_45_44_ladder_1;
        _1394 = frontier_phi_45_44_ladder_2;
        _1396 = frontier_phi_45_44_ladder;
    }
    else
    {
        _1392 = _1326;
        _1394 = _1327;
        _1396 = _1328;
    }
    uint _1398 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1402 = floatBitsToUint(cbInstanceData._m0[_1398 + 5u]);
    uint _1404 = _1402.x * 14u;
    uint _1405 = _1404 + 13u;
    float _1410 = _474 + (-1.0);
    float _1413 = (cbLight._m0[_1405].x * _1410) + 1.0;
    float _1414 = (cbLight._m0[_1405].y * _1410) + 1.0;
    uint _1415 = _1404 + 8u;
    float _1426 = cbLight._m0[_1404].x + _439;
    float _1427 = cbLight._m0[_1404].y + _440;
    float _1428 = cbLight._m0[_1404].z + _441;
    float _1432 = inversesqrt(dot(vec3(_1426, _1427, _1428), vec3(_1426, _1427, _1428)));
    float _1436 = dot(vec3(0.0), vec3(cbLight._m0[_1404].xyz));
    float _2798 = isnan(0.0) ? _1436 : (isnan(_1436) ? 0.0 : max(_1436, 0.0));
    float _1439 = isnan(1.0) ? _2798 : (isnan(_2798) ? 1.0 : min(_2798, 1.0));
    float _1440 = dot(vec3(0.0), vec3(_439, _440, _441));
    float _2809 = isnan(0.0) ? _1440 : (isnan(_1440) ? 0.0 : max(_1440, 0.0));
    float _1443 = isnan(1.0) ? _2809 : (isnan(_2809) ? 1.0 : min(_2809, 1.0));
    float _1444 = dot(vec3(cbLight._m0[_1404].xyz), vec3(_1426 * _1432, _1427 * _1432, _1428 * _1432));
    float _2820 = isnan(0.0) ? _1444 : (isnan(_1444) ? 0.0 : max(_1444, 0.0));
    float _1455 = (exp2(log2(1.0 - (isnan(1.0) ? _2820 : (isnan(_2820) ? 1.0 : min(_2820, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1461 = (0.5 / ((_1439 + 9.9999999392252902907785028219223e-09) + _1443)) * _1439;
    float _2831 = isnan(0.0) ? _1461 : (isnan(_1461) ? 0.0 : max(_1461, 0.0));
    float _1463 = (isnan(1.0) ? _2831 : (isnan(_2831) ? 1.0 : min(_2831, 1.0))) * 0.31831014156341552734375;
    float _1465 = isnan(1.0) ? _1413 : (isnan(_1413) ? 1.0 : min(_1413, 1.0));
    uint _1478 = _1404 + 9u;
    uint _1484 = _1404 | 1u;
    float _1490 = cbLight._m0[_1484].x + _439;
    float _1491 = cbLight._m0[_1484].y + _440;
    float _1492 = cbLight._m0[_1484].z + _441;
    float _1496 = inversesqrt(dot(vec3(_1490, _1491, _1492), vec3(_1490, _1491, _1492)));
    float _1500 = dot(vec3(0.0), vec3(cbLight._m0[_1484].xyz));
    float _2847 = isnan(0.0) ? _1500 : (isnan(_1500) ? 0.0 : max(_1500, 0.0));
    float _1503 = isnan(1.0) ? _2847 : (isnan(_2847) ? 1.0 : min(_2847, 1.0));
    float _1504 = dot(vec3(cbLight._m0[_1484].xyz), vec3(_1490 * _1496, _1491 * _1496, _1492 * _1496));
    float _2858 = isnan(0.0) ? _1504 : (isnan(_1504) ? 0.0 : max(_1504, 0.0));
    float _1513 = (exp2(log2(1.0 - (isnan(1.0) ? _2858 : (isnan(_2858) ? 1.0 : min(_2858, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1517 = (0.5 / ((_1503 + 9.9999999392252902907785028219223e-09) + _1443)) * _1503;
    float _2869 = isnan(0.0) ? _1517 : (isnan(_1517) ? 0.0 : max(_1517, 0.0));
    float _1519 = (isnan(1.0) ? _2869 : (isnan(_2869) ? 1.0 : min(_2869, 1.0))) * 0.31831014156341552734375;
    float _1520 = isnan(1.0) ? _1414 : (isnan(_1414) ? 1.0 : min(_1414, 1.0));
    float _1530 = (((_1513 * cbLight._m0[_1478].x) * _1519) * _1520) + ((((cbLight._m0[_1415].x * _1392) * _1455) * _1463) * _1465);
    float _1531 = (((_1513 * cbLight._m0[_1478].y) * _1519) * _1520) + ((((cbLight._m0[_1415].y * _1394) * _1455) * _1463) * _1465);
    float _1532 = (((_1513 * cbLight._m0[_1478].z) * _1519) * _1520) + ((((cbLight._m0[_1415].z * _1396) * _1455) * _1463) * _1465);
    float _1695;
    float _1697;
    float _1699;
    if (_1402.y == 0u)
    {
        uvec4 _1650 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1651 = _1650.x;
        uint _1662 = uint((float(_1650.y) * floor(float(uint(cbSceneParam._m0[85u].y * _462) / _1651))) + floor(float(uint(cbSceneParam._m0[85u].x * _461) / _1651)));
        float _1672 = (log2(_1178 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1673 = isnan(0.0) ? _1672 : (isnan(_1672) ? 0.0 : max(_1672, 0.0));
        uint _1676 = uint(isnan(14.0) ? _1673 : (isnan(_1673) ? 14.0 : min(_1673, 14.0)));
        uvec4 _1681 = texelFetch(g_lightClusterGridBuffer, int(((_1676 << 2u) + (_1662 << 6u)) >> 2u));
        uint _1682 = _1681.x;
        uint _1683 = _1650.z;
        float _1789;
        float _1791;
        float _1793;
        if (((((1u << ((_1683 >> 4u) & 15u)) + 4294967295u) & _1682) == 0u) || ((_1683 & 240u) == 0u))
        {
            _1789 = 0.0;
            _1791 = 0.0;
            _1793 = 0.0;
        }
        else
        {
            float _1790;
            float _1792;
            float _1794;
            float _1951 = 0.0;
            float _1952 = 0.0;
            float _1953 = 0.0;
            uint _1954 = 0u;
            uint _1963;
            bool _1964;
            for (;;)
            {
                _1963 = texelFetch(g_lightClassification, int((((_1676 << 5u) + (_1662 << 9u)) + (_1954 << 2u)) >> 2u)).x;
                _1964 = _1963 == 0u;
                float frontier_phi_71_pred;
                float frontier_phi_71_pred_1;
                float frontier_phi_71_pred_2;
                if (_1964)
                {
                    frontier_phi_71_pred = _1953;
                    frontier_phi_71_pred_1 = _1952;
                    frontier_phi_71_pred_2 = _1951;
                }
                else
                {
                    float _2108;
                    float _2109;
                    float _2110;
                    uint _2111;
                    _2108 = _1951;
                    _2109 = _1952;
                    _2110 = _1953;
                    _2111 = _1963;
                    float _2041;
                    float _2042;
                    float _2043;
                    for (;;)
                    {
                        uint _2115 = uint(findLSB(_2111)) + (_1954 << 5u);
                        uint _2112 = (_2111 + 4294967295u) & _2111;
                        uint _2117 = _2115 * 48u;
                        vec4 _2131 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2117)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2117 + 3u)).x));
                        uint _2148 = (_2115 * 48u) + 8u;
                        vec3 _2159 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2148)).x, texelFetch(g_PointLightRenderingBuffer, int(_2148 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2148 + 2u)).x));
                        float _2163 = _2131.x - _1176;
                        float _2164 = _2131.y - _1177;
                        float _2165 = _2131.z - _1178;
                        float _2166 = dot(vec3(_2163, _2164, _2165), vec3(_2163, _2164, _2165));
                        float _2169 = inversesqrt(_2166);
                        float _2178 = 1.0 - (_2166 * _2131.w);
                        float _2895 = isnan(0.0) ? _2178 : (isnan(_2178) ? 0.0 : max(_2178, 0.0));
                        float _2180 = sqrt(_2166) * uintBitsToFloat(uvec4(_2138, _2139, _2140, texelFetch(g_PointLightRenderingBuffer, int(((_2115 * 48u) + 4u) + 3u)).x)).w;
                        float _2183 = 1.39999997615814208984375 / (_2180 + 1.39999997615814208984375);
                        float _2184 = _2183 * _2183;
                        float _2187 = ((1.0 - _2184) * dot(vec3(0.0), vec3(_2169 * _2163, _2169 * _2164, _2169 * _2165))) + _2184;
                        float _2189 = (-0.0) - _1176;
                        float _2190 = (-0.0) - _1177;
                        float _2191 = (-0.0) - _1178;
                        float _2195 = inversesqrt(dot(vec3(_2189, _2190, _2191), vec3(_2189, _2190, _2191)));
                        float _2199 = dot(vec3(0.0), vec3(_2195 * _2189, _2195 * _2190, _2195 * _2191));
                        float _2906 = isnan(0.0) ? _2199 : (isnan(_2199) ? 0.0 : max(_2199, 0.0));
                        float _2917 = isnan(0.0) ? _2187 : (isnan(_2187) ? 0.0 : max(_2187, 0.0));
                        float _2203 = isnan(1.0) ? _2917 : (isnan(_2917) ? 1.0 : min(_2917, 1.0));
                        float _2207 = (0.5 / (((isnan(1.0) ? _2906 : (isnan(_2906) ? 1.0 : min(_2906, 1.0))) + 9.9999999392252902907785028219223e-09) + _2203)) * _2203;
                        float _2928 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
                        float _2216 = (((isnan(1.0) ? _2928 : (isnan(_2928) ? 1.0 : min(_2928, 1.0))) * 3.1415927410125732421875) / (((_2180 * _2180) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2895 : (isnan(_2895) ? 1.0 : min(_2895, 1.0)));
                        _2041 = (_2216 * _2159.x) + _2108;
                        _2042 = (_2216 * _2159.y) + _2109;
                        _2043 = (_2216 * _2159.z) + _2110;
                        if (_2112 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2108 = _2041;
                            _2109 = _2042;
                            _2110 = _2043;
                            _2111 = _2112;
                        }
                    }
                    frontier_phi_71_pred = _2043;
                    frontier_phi_71_pred_1 = _2042;
                    frontier_phi_71_pred_2 = _2041;
                }
                _1794 = frontier_phi_71_pred;
                _1792 = frontier_phi_71_pred_1;
                _1790 = frontier_phi_71_pred_2;
                uint _1955 = _1954 + 1u;
                if (_1955 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1951 = _1790;
                    _1952 = _1792;
                    _1953 = _1794;
                    _1954 = _1955;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1789 = _1790;
            _1791 = _1792;
            _1793 = _1794;
        }
        uvec4 _1797 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1798 = _1797.z;
        uint _1800 = (_1798 >> 8u) & 15u;
        float _1931;
        float _1933;
        float _1935;
        if (((4294967295u << _1800) & _1682) == 0u)
        {
            _1931 = _1789;
            _1933 = _1791;
            _1935 = _1793;
        }
        else
        {
            float _1947 = inversesqrt(dot(vec3(_1176, _1177, _1178), vec3(_1176, _1177, _1178)));
            float frontier_phi_62_63_ladder;
            float frontier_phi_62_63_ladder_1;
            float frontier_phi_62_63_ladder_2;
            if (_1800 < ((_1798 >> 12u) & 15u))
            {
                float _1932;
                float _1934;
                float _1936;
                float _2094 = _1789;
                float _2095 = _1791;
                float _2096 = _1793;
                uint _2097 = _1800;
                uint _2106;
                bool _2107;
                for (;;)
                {
                    _2106 = texelFetch(g_lightClassification, int((((_1676 << 5u) + (_1662 << 9u)) + (_2097 << 2u)) >> 2u)).x;
                    _2107 = _2106 == 0u;
                    float frontier_phi_82_pred;
                    float frontier_phi_82_pred_1;
                    float frontier_phi_82_pred_2;
                    if (_2107)
                    {
                        frontier_phi_82_pred = _2094;
                        frontier_phi_82_pred_1 = _2096;
                        frontier_phi_82_pred_2 = _2095;
                    }
                    else
                    {
                        float _2230;
                        float _2231;
                        float _2232;
                        float _2452;
                        float _2453;
                        float _2454;
                        float _2240 = _2094;
                        float _2241 = _2095;
                        float _2242 = _2096;
                        uint _2243 = _2106;
                        uint _2244;
                        uint _2254;
                        vec4 _2269;
                        float _2270;
                        vec3 _2282;
                        vec4 _2298;
                        vec4 _2313;
                        float _2359;
                        bool _2360;
                        for (;;)
                        {
                            _2254 = ((_2097 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2243));
                            _2244 = (_2243 + 4294967295u) & _2243;
                            uint _2256 = _2254 * 40u;
                            _2269 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2256)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2256 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2256 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2256 + 3u)).x));
                            _2270 = _2269.w;
                            uint _2272 = (_2254 * 40u) + 8u;
                            _2282 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2272)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2272 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2272 + 2u)).x));
                            uint _2285 = (_2254 * 40u) + 16u;
                            _2298 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2285)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2285 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2285 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2285 + 3u)).x));
                            uint _2300 = (_2254 * 40u) + 20u;
                            _2313 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2300)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2300 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2300 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2300 + 3u)).x));
                            uint _2315 = (_2254 * 40u) + 24u;
                            vec4 _2328 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2315)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2315 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2315 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2315 + 3u)).x));
                            uint _2334 = (_2254 * 40u) + 28u;
                            vec4 _2347 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2334)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2334 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2334 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2334 + 3u)).x));
                            _2359 = fma(_1178, _2347.z, fma(_1177, _2347.y, _2347.x * _1176)) + _2347.w;
                            _2360 = !((fma(_1178, _2328.z, fma(_1177, _2328.y, _2328.x * _1176)) + _2328.w) <= 0.0);
                            float frontier_phi_88_pred;
                            float frontier_phi_88_pred_1;
                            float frontier_phi_88_pred_2;
                            if (_2360)
                            {
                                float _2394 = _2269.x - _1176;
                                float _2395 = _2269.y - _1177;
                                float _2396 = _2269.z - _1178;
                                float _2397 = dot(vec3(_2394, _2395, _2396), vec3(_2394, _2395, _2396));
                                float _2400 = inversesqrt(_2397);
                                float _2407 = 1.0 - (_2397 / (_2270 * _2270));
                                float _2939 = isnan(0.0) ? _2407 : (isnan(_2407) ? 0.0 : max(_2407, 0.0));
                                float _2409 = sqrt(_2397) * uintBitsToFloat(uvec4(_2363, _2364, _2365, texelFetch(g_SpotLightRenderingBuffer, int(((_2254 * 40u) + 4u) + 3u)).x)).w;
                                float _2411 = 1.39999997615814208984375 / (_2409 + 1.39999997615814208984375);
                                float _2412 = _2411 * _2411;
                                float _2415 = (fma(_1178, _2298.z, fma(_1177, _2298.y, _2298.x * _1176)) + _2298.w) / _2359;
                                float _2416 = (fma(_1178, _2313.z, fma(_1177, _2313.y, _2313.x * _1176)) + _2313.w) / _2359;
                                float _2420 = 1.0 - dot(vec2(_2415, _2416), vec2(_2415, _2416));
                                float _2950 = isnan(0.0) ? _2420 : (isnan(_2420) ? 0.0 : max(_2420, 0.0));
                                float _2428 = dot(vec3(0.0), vec3((-0.0) - (_1176 * _1947), (-0.0) - (_1177 * _1947), (-0.0) - (_1178 * _1947)));
                                float _2961 = isnan(0.0) ? _2428 : (isnan(_2428) ? 0.0 : max(_2428, 0.0));
                                float _2436 = ((1.0 - _2412) * dot(vec3(0.0), vec3(_2400 * _2394, _2400 * _2395, _2400 * _2396))) + _2412;
                                float _2972 = isnan(0.0) ? _2436 : (isnan(_2436) ? 0.0 : max(_2436, 0.0));
                                float _2437 = isnan(1.0) ? _2972 : (isnan(_2972) ? 1.0 : min(_2972, 1.0));
                                float _2441 = (0.5 / (((isnan(1.0) ? _2961 : (isnan(_2961) ? 1.0 : min(_2961, 1.0))) + 9.9999999392252902907785028219223e-09) + _2437)) * _2437;
                                float _2983 = isnan(0.0) ? _2441 : (isnan(_2441) ? 0.0 : max(_2441, 0.0));
                                float _2448 = ((isnan(1.0) ? _2950 : (isnan(_2950) ? 1.0 : min(_2950, 1.0))) * (isnan(1.0) ? _2939 : (isnan(_2939) ? 1.0 : min(_2939, 1.0)))) * (((isnan(1.0) ? _2983 : (isnan(_2983) ? 1.0 : min(_2983, 1.0))) * 3.1415927410125732421875) / (((_2409 * _2409) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_88_pred = _2448 * _2282.x;
                                frontier_phi_88_pred_1 = _2448 * _2282.y;
                                frontier_phi_88_pred_2 = _2448 * _2282.z;
                            }
                            else
                            {
                                frontier_phi_88_pred = 0.0;
                                frontier_phi_88_pred_1 = 0.0;
                                frontier_phi_88_pred_2 = 0.0;
                            }
                            _2452 = frontier_phi_88_pred;
                            _2453 = frontier_phi_88_pred_1;
                            _2454 = frontier_phi_88_pred_2;
                            _2230 = _2452 + _2240;
                            _2231 = _2453 + _2241;
                            _2232 = _2454 + _2242;
                            if (_2244 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2240 = _2230;
                                _2241 = _2231;
                                _2242 = _2232;
                                _2243 = _2244;
                                continue;
                            }
                        }
                        frontier_phi_82_pred = _2230;
                        frontier_phi_82_pred_1 = _2232;
                        frontier_phi_82_pred_2 = _2231;
                    }
                    _1932 = frontier_phi_82_pred;
                    _1936 = frontier_phi_82_pred_1;
                    _1934 = frontier_phi_82_pred_2;
                    uint _2098 = _2097 + 1u;
                    if (_2098 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2094 = _1932;
                        _2095 = _1934;
                        _2096 = _1936;
                        _2097 = _2098;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_62_63_ladder = _1936;
                frontier_phi_62_63_ladder_1 = _1934;
                frontier_phi_62_63_ladder_2 = _1932;
            }
            else
            {
                frontier_phi_62_63_ladder = _1793;
                frontier_phi_62_63_ladder_1 = _1791;
                frontier_phi_62_63_ladder_2 = _1789;
            }
            _1931 = frontier_phi_62_63_ladder_2;
            _1933 = frontier_phi_62_63_ladder_1;
            _1935 = frontier_phi_62_63_ladder;
        }
        float _1940 = isnan(1.0) ? _474 : (isnan(_474) ? 1.0 : min(_474, 1.0));
        _1695 = ((_1931 * 0.039999999105930328369140625) * _1940) + _1530;
        _1697 = ((_1933 * 0.039999999105930328369140625) * _1940) + _1531;
        _1699 = ((_1935 * 0.039999999105930328369140625) * _1940) + _1532;
    }
    else
    {
        _1695 = _1530;
        _1697 = _1531;
        _1699 = _1532;
    }
    uint _1705 = _1398 + 9u;
    uint _1706 = _1705 + uint(cbMatDynParam._m0[0u].w);
    float _1721 = ((cbMtdParam._m0[9u].x * _406.x) * cbInstanceData._m0[_1706].x) + ((_1695 + ((isnan(0.0) ? _1122 : (isnan(_1122) ? 0.0 : max(_1122, 0.0))) * _897)) * cbPerFrame._m0[3u].x);
    float _1722 = ((cbMtdParam._m0[9u].y * _406.y) * cbInstanceData._m0[_1706].y) + ((_1697 + ((isnan(0.0) ? _1125 : (isnan(_1125) ? 0.0 : max(_1125, 0.0))) * _897)) * cbPerFrame._m0[3u].x);
    float _1723 = ((cbMtdParam._m0[9u].z * _406.z) * cbInstanceData._m0[_1706].z) + ((_1699 + ((isnan(0.0) ? _1128 : (isnan(_1128) ? 0.0 : max(_1128, 0.0))) * _897)) * cbPerFrame._m0[3u].x);
    float _1724 = isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0));
    float _1725 = isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0));
    float _1726 = isnan(0.0) ? _1723 : (isnan(_1723) ? 0.0 : max(_1723, 0.0));
    uint _1727 = _1398 + 6u;
    float _1735 = _461 / cbSceneParam._m0[86u].x;
    float _1736 = _462 / cbSceneParam._m0[86u].y;
    vec4 _1750 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1735, _1736, (log2((isnan(cbSceneParam._m0[77u].w) ? _434 : (isnan(_434) ? cbSceneParam._m0[77u].w : min(_434, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1752 = _1750.x;
    float _1753 = _1750.y;
    float _1754 = _1750.z;
    float _1755 = _1750.w;
    float _1845;
    float _1847;
    float _1849;
    float _1851;
    if (_434 > cbSceneParam._m0[78u].w)
    {
        float _1808 = isnan(_434) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _434 : min(cbSceneParam._m0[80u].w, _434));
        float _1809 = _1808 / _434;
        float _1820 = _1809 * _258;
        float _1821 = _259 * _1809;
        float _1822 = (-0.0) - _1821;
        float _1823 = _1809 * _260;
        float _1825 = (cbSceneParam._m0[77u].w * _1822) / _1808;
        float _1826 = _1825 + cbSceneParam._m0[79u].w;
        float _1827 = cbSceneParam._m0[79u].w - _1821;
        float _1833 = sqrt(((_1820 * _1820) + (_1821 * _1821)) + (_1823 * _1823));
        float _1836 = (1.0 - (cbSceneParam._m0[77u].w / _1808)) * _1833;
        float _1841 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1843 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2051;
        if (abs((_1822 - _1825) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2051 = ((((_1826 > 0.0) ? exp2(_1841 * _1826) : (2.0 - exp2(_1843 * _1826))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1836;
        }
        else
        {
            float _1977 = 1.0 / cbSceneParam._m0[80u].x;
            float _1978 = isnan(_1827) ? _1826 : (isnan(_1826) ? _1827 : max(_1826, _1827));
            float _1979 = isnan(_1827) ? _1826 : (isnan(_1826) ? _1827 : min(_1826, _1827));
            float _1988 = isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : min(_1978, 0.0));
            float _1989 = isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : min(_1979, 0.0));
            _2051 = ((abs(_1833 / _1822) * cbSceneParam._m0[80u].y) * ((((_1988 - _1989) * 2.0) - ((exp2(_1841 * (isnan(0.0) ? _1978 : (isnan(_1978) ? 0.0 : max(_1978, 0.0)))) - exp2(_1841 * (isnan(0.0) ? _1979 : (isnan(_1979) ? 0.0 : max(_1979, 0.0))))) * _1977)) - ((exp2(_1843 * _1988) - exp2(_1843 * _1989)) * _1977))) + (_1836 * cbSceneParam._m0[80u].z);
        }
        vec4 _2053 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1735, _1736, 1.0), 0.0);
        float _2062 = exp2((_2051 * (-1.44269502162933349609375)) * (1.0 - _2053.w));
        float _2063 = log2(_2062);
        float _2079 = log2(_1755);
        _1845 = (exp2(_2079 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2063 * cbSceneParam._m0[78u].x)) * _2053.x) / cbSceneParam._m0[78u].x)) + _1752;
        _1847 = (exp2(_2079 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2063 * cbSceneParam._m0[78u].y)) * _2053.y) / cbSceneParam._m0[78u].y)) + _1753;
        _1849 = (exp2(_2079 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2063 * cbSceneParam._m0[78u].z)) * _2053.z) / cbSceneParam._m0[78u].z)) + _1754;
        _1851 = _2062 * _1755;
    }
    else
    {
        _1845 = _1752;
        _1847 = _1753;
        _1849 = _1754;
        _1851 = _1755;
    }
    bool _2089;
    vec4 _1861;
    vec4 _1884;
    float _1886;
    float _1890;
    float _1891;
    float _1892;
    float _1893;
    bool _1904;
    for (;;)
    {
        _1861 = cbMatDynParam._m0[0u];
        float _1863 = roundEven(_1861.y);
        bool _1864 = _1863 == 3.0;
        float _1866 = log2(_1851);
        float _1873 = exp2(_1866 * cbSceneParam._m0[78u].x) * _1724;
        float _1874 = exp2(_1866 * cbSceneParam._m0[78u].y) * _1725;
        float _1875 = exp2(_1866 * cbSceneParam._m0[78u].z) * _1726;
        float _1882 = _448 + (-0.5);
        _1884 = cbMtdParam._m0[1u];
        _1886 = _1884.y * _1882;
        float _1889 = (_1863 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _1890 = _1889 * (_1864 ? _1873 : (_1873 + (cbSceneParam._m0[72u].w * _1845)));
        _1891 = _1889 * (_1864 ? _1874 : (_1874 + (cbSceneParam._m0[72u].w * _1847)));
        _1892 = _1889 * (_1864 ? _1875 : (_1875 + (cbSceneParam._m0[72u].w * _1849)));
        _1893 = _1882 * 0.999000012874603271484375;
        _1904 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_1904)
        {
            if ((cbInstanceData._m0[_1398 + 7u].x + _1893) < 0.5)
            {
                _2089 = true;
                break;
            }
        }
        uint _2012 = _1705 + uint(_1861.w);
        if ((cbInstanceData._m0[_2012].w < 1.0) && ((cbInstanceData._m0[_2012].w + _1893) < 0.5))
        {
            _2089 = true;
            break;
        }
        if ((_1886 + 1.0) < _1884.x)
        {
            _2089 = true;
            break;
        }
        _2089 = false;
        break;
    }
    float _2221;
    if (_2089)
    {
        discard_state = true;
        _2221 = 0.0;
    }
    else
    {
        _2221 = cbInstanceData._m0[_1727].w;
    }
    SV_Target.x = _1890;
    SV_Target.y = _1891;
    SV_Target.z = _1892;
    SV_Target.w = _2221;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1727].w;
    discard_exit();
}


