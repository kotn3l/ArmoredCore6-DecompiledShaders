#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1000;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _182 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _183 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _184 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _189 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _190 = _189 * _182;
    float _191 = _189 * _183;
    float _192 = _189 * _184;
    float _196 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _197 = _196 * NORMAL.x;
    float _198 = _196 * NORMAL.y;
    float _199 = _196 * NORMAL.z;
    float _203 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _204 = _203 * TANGENT.x;
    float _205 = _203 * TANGENT.y;
    float _206 = _203 * TANGENT.z;
    float _251 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _261 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _251);
    float _262 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _251);
    float _263 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _251);
    vec4 _276 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _279 = _276.x;
    vec4 _297 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _314 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _279) + cbMtdParam._m0[12u].x) * _297.x;
    float _316 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _279) + cbMtdParam._m0[12u].y) * _297.y;
    float _318 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _279) + cbMtdParam._m0[12u].z) * _297.z;
    vec4 _339 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _375 = cbMtdParam._m0[21u].w + _261;
    float _376 = cbMtdParam._m0[22u].x + _262;
    float _377 = cbMtdParam._m0[22u].y + _263;
    float _391 = (-0.0) - dot(vec3(_375, _376, _377), vec3(_190, _191, _192));
    float _392 = (-0.0) - dot(vec3(_375, _376, _377), vec3(_204, _205, _206));
    float _393 = (-0.0) - dot(vec3(_375, _376, _377), vec3((-0.0) - _197, (-0.0) - _198, (-0.0) - _199));
    float _397 = inversesqrt(dot(vec3(_391, _392, _393), vec3(_391, _392, _393)));
    float _400 = _397 * _393;
    float _403 = ((_397 * _391) + ((cbMtdParam._m0[19u].w * _279) * ((_339.x * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].z;
    float _404 = ((_397 * _392) + ((cbMtdParam._m0[20u].x * _279) * ((_339.y * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].y;
    float _405 = fract(TEXCOORD.x);
    float _406 = fract(TEXCOORD.y);
    float _412;
    if (_403 > 0.0)
    {
        _412 = (1.0 - _405) / _403;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_403 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _405) / _403;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _412 = frontier_phi_3_2_ladder;
    }
    float _420;
    if (_404 > 0.0)
    {
        _420 = (1.0 - _406) / _404;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_404 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _406) / _404;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _420 = frontier_phi_7_6_ladder;
    }
    float _424 = (_400 > 0.0) ? (cbMtdParam._m0[15u].x / _400) : 5000.0;
    float _425 = isnan(_420) ? _412 : (isnan(_412) ? _420 : min(_412, _420));
    float _426 = isnan(_424) ? _425 : (isnan(_425) ? _424 : min(_425, _424));
    float _430 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _437 = ((_426 * _400) + _430) / _430;
    vec4 _461 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_405 + (-0.5)) + (_426 * _403)) / _437) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_406 + (-0.5)) + (_426 * _404)) / _437) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _477 = _279 * 0.1500000059604644775390625;
    float _485 = (_477 * (((_461.x * _279) * cbMtdParam._m0[9u].x) - _314)) + _314;
    float _486 = (_477 * (((_461.y * _279) * cbMtdParam._m0[9u].y) - _316)) + _316;
    float _487 = (_477 * (((_461.z * _279) * cbMtdParam._m0[9u].z) - _318)) + _318;
    vec4 _499 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _503 = _499.z;
    float _506 = (_499.x * 2.0) + (-1.0);
    float _507 = (_499.y * 2.0) + (-1.0);
    float _508 = dot(vec2(_506, _507), vec2(_506, _507));
    float _3092 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0));
    float _513 = sqrt(1.0 - (isnan(1.0) ? _3092 : (isnan(_3092) ? 1.0 : min(_3092, 1.0))));
    float _516 = fma(_513, _197, fma(_507, _204, _506 * _190));
    float _519 = fma(_513, _198, fma(_507, _205, _506 * _191));
    float _522 = fma(_513, _199, fma(_507, _206, _506 * _192));
    float _526 = inversesqrt(dot(vec3(_516, _519, _522), vec3(_516, _519, _522)));
    float _527 = _526 * _516;
    float _528 = _526 * _519;
    float _529 = _526 * _522;
    float _3103 = isnan(0.0) ? _503 : (isnan(_503) ? 0.0 : max(_503, 0.0));
    float _530 = isnan(1.0) ? _3103 : (isnan(_3103) ? 1.0 : min(_3103, 1.0));
    float _3114 = isnan(0.0) ? _485 : (isnan(_485) ? 0.0 : max(_485, 0.0));
    float _3125 = isnan(0.0) ? _486 : (isnan(_486) ? 0.0 : max(_486, 0.0));
    float _3136 = isnan(0.0) ? _487 : (isnan(_487) ? 0.0 : max(_487, 0.0));
    float _549 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _553 = inversesqrt(dot(vec3(_261, _262, _263), vec3(_261, _262, _263)));
    float _554 = _261 * _553;
    float _555 = _262 * _553;
    float _556 = _263 * _553;
    float _562 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _563 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    float _584 = fma(_529, cbSceneParam._m0[5u].z, fma(_528, cbSceneParam._m0[5u].y, cbSceneParam._m0[5u].x * _527));
    float _587 = fma(_529, cbSceneParam._m0[6u].z, fma(_528, cbSceneParam._m0[6u].y, cbSceneParam._m0[6u].x * _527));
    float _590 = fma(_529, cbSceneParam._m0[7u].z, fma(_528, cbSceneParam._m0[7u].y, cbSceneParam._m0[7u].x * _527));
    uint _603 = uint(roundEven(NORMAL.w)) * 13u;
    uint _606 = (_603 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _612 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _3114 : (isnan(_3114) ? 1.0 : min(_3114, 1.0)))) * cbInstanceData._m0[_606].x;
    float _613 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _3125 : (isnan(_3125) ? 1.0 : min(_3125, 1.0)))) * cbInstanceData._m0[_606].y;
    float _614 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _3136 : (isnan(_3136) ? 1.0 : min(_3136, 1.0)))) * cbInstanceData._m0[_606].z;
    float _3147 = isnan(0.0) ? _612 : (isnan(_612) ? 0.0 : max(_612, 0.0));
    float _615 = isnan(1.0) ? _3147 : (isnan(_3147) ? 1.0 : min(_3147, 1.0));
    float _3158 = isnan(0.0) ? _613 : (isnan(_613) ? 0.0 : max(_613, 0.0));
    float _616 = isnan(1.0) ? _3158 : (isnan(_3158) ? 1.0 : min(_3158, 1.0));
    float _3169 = isnan(0.0) ? _614 : (isnan(_614) ? 0.0 : max(_614, 0.0));
    float _617 = isnan(1.0) ? _3169 : (isnan(_3169) ? 1.0 : min(_3169, 1.0));
    vec4 _626 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _562, cbSceneParam._m0[86u].y * _563));
    float _629 = _626.x * TEXCOORD.z;
    float _630 = dot(vec3(_527, _528, _529), vec3(_554, _555, _556));
    float _633 = _630 * 2.0;
    float _637 = (_633 * _527) - _554;
    float _638 = (_633 * _528) - _555;
    float _639 = (_633 * _529) - _556;
    float _643 = abs(dot(vec3(_554, _555, _556), vec3(_527, _528, _529)));
    float _3180 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
    float _645 = sqrt(_530);
    float _658 = exp2((_645 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3180 : (isnan(_3180) ? 1.0 : min(_3180, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_645 * 3.0));
    float _690 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _694 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _698 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _999;
    float _1001;
    float _1002;
    float _1003;
    float _1004;
    float _1005;
    float _1006;
    float _1007;
    float _1008;
    float _1009;
    float _1010;
    float _1011;
    float _1012;
    float _1013;
    float _1014;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _726 = fma(_698, cbModelParam._m0[26u].z, fma(_694, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _690));
        float _730 = fma(_698, cbModelParam._m0[27u].z, fma(_694, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _690));
        float _734 = fma(_698, cbModelParam._m0[28u].z, fma(_694, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _690));
        float _757 = _690 + _527;
        float _758 = _694 + _528;
        float _759 = _698 + _529;
        float _769 = fma(_759, cbModelParam._m0[26u].z, fma(_758, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _757)) - _726;
        float _770 = fma(_759, cbModelParam._m0[27u].z, fma(_758, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _757)) - _730;
        float _771 = fma(_759, cbModelParam._m0[28u].z, fma(_758, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _757)) - _734;
        float _775 = inversesqrt(dot(vec3(_769, _770, _771), vec3(_769, _770, _771)));
        float _788 = ((_775 * _769) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_726 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _789 = ((_775 * _770) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_730 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _790 = ((_775 * _771) / cbModelParam._m0[34u].z) + ((((((_734 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _793 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_788, _789, _790), 0.0);
        vec4 _800 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_788, _789, _790), 0.0);
        vec4 _807 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_788, _789, _790), 0.0);
        vec4 _814 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_788, _789, _790), 0.0);
        float _827 = exp2((_793.w + (-0.5)) * 20.0) * 2.0;
        float _828 = _827 * (_793.x + (-0.5));
        float _829 = _827 * (_793.y + (-0.5));
        float _830 = _827 * (_793.z + (-0.5));
        float _837 = exp2((_800.w + (-0.5)) * 20.0) * 2.0;
        float _838 = _837 * (_800.x + (-0.5));
        float _839 = _837 * (_800.y + (-0.5));
        float _840 = _837 * (_800.z + (-0.5));
        float _847 = exp2((_807.w + (-0.5)) * 20.0) * 2.0;
        float _848 = _847 * (_807.x + (-0.5));
        float _849 = _847 * (_807.y + (-0.5));
        float _850 = _847 * (_807.z + (-0.5));
        float _857 = exp2((_814.w + (-0.5)) * 20.0) * 2.0;
        float _858 = _857 * (_814.x + (-0.5));
        float _859 = _857 * (_814.y + (-0.5));
        float _860 = _857 * (_814.z + (-0.5));
        float _861 = isnan(0.0) ? _858 : (isnan(_858) ? 0.0 : max(_858, 0.0));
        float _862 = isnan(0.0) ? _859 : (isnan(_859) ? 0.0 : max(_859, 0.0));
        float _863 = isnan(0.0) ? _860 : (isnan(_860) ? 0.0 : max(_860, 0.0));
        float _864 = _828 * 0.5;
        float _865 = _838 * 0.5;
        float _866 = _848 * 0.5;
        float _867 = dot(vec3(_864, _865, _866), vec3(_864, _865, _866));
        float _872 = (_867 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_867);
        float _881 = (dot(vec3(_527, _528, _529), vec3(_872 * _864, _872 * _865, _872 * _866)) + 1.0) * 0.5;
        float _3206 = isnan(0.0) ? _881 : (isnan(_881) ? 0.0 : max(_881, 0.0));
        float _891 = sqrt(((_865 * _865) + (_864 * _864)) + (_866 * _866)) / (_861 + 9.9999997473787516355514526367188e-06);
        float _3217 = isnan(0.0) ? _891 : (isnan(_891) ? 0.0 : max(_891, 0.0));
        float _892 = isnan(1.0) ? _3217 : (isnan(_3217) ? 1.0 : min(_3217, 1.0));
        float _893 = _892 * 2.0;
        float _897 = (1.0 - _892) / (_892 + 1.0);
        float _3228 = isnan(0.0) ? _897 : (isnan(_897) ? 0.0 : max(_897, 0.0));
        float _898 = isnan(1.0) ? _3228 : (isnan(_3228) ? 1.0 : min(_3228, 1.0));
        float _907 = ((((1.0 - _898) * (_893 + 2.0)) * exp2(log2(isnan(1.0) ? _3206 : (isnan(_3206) ? 1.0 : min(_3206, 1.0))) * (_893 + 1.0))) + _898) * _861;
        float _908 = _829 * 0.5;
        float _909 = _839 * 0.5;
        float _910 = _849 * 0.5;
        float _911 = dot(vec3(_908, _909, _910), vec3(_908, _909, _910));
        float _916 = (_911 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_911);
        float _924 = (dot(vec3(_527, _528, _529), vec3(_916 * _908, _916 * _909, _916 * _910)) + 1.0) * 0.5;
        float _3239 = isnan(0.0) ? _924 : (isnan(_924) ? 0.0 : max(_924, 0.0));
        float _933 = sqrt(((_909 * _909) + (_908 * _908)) + (_910 * _910)) / (_862 + 9.9999997473787516355514526367188e-06);
        float _3250 = isnan(0.0) ? _933 : (isnan(_933) ? 0.0 : max(_933, 0.0));
        float _934 = isnan(1.0) ? _3250 : (isnan(_3250) ? 1.0 : min(_3250, 1.0));
        float _935 = _934 * 2.0;
        float _939 = (1.0 - _934) / (_934 + 1.0);
        float _3261 = isnan(0.0) ? _939 : (isnan(_939) ? 0.0 : max(_939, 0.0));
        float _940 = isnan(1.0) ? _3261 : (isnan(_3261) ? 1.0 : min(_3261, 1.0));
        float _949 = ((((1.0 - _940) * (_935 + 2.0)) * exp2(log2(isnan(1.0) ? _3239 : (isnan(_3239) ? 1.0 : min(_3239, 1.0))) * (_935 + 1.0))) + _940) * _862;
        float _950 = _830 * 0.5;
        float _951 = _840 * 0.5;
        float _952 = _850 * 0.5;
        float _953 = dot(vec3(_950, _951, _952), vec3(_950, _951, _952));
        float _958 = (_953 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_953);
        float _966 = (dot(vec3(_527, _528, _529), vec3(_958 * _950, _958 * _951, _958 * _952)) + 1.0) * 0.5;
        float _3272 = isnan(0.0) ? _966 : (isnan(_966) ? 0.0 : max(_966, 0.0));
        float _975 = sqrt(((_951 * _951) + (_950 * _950)) + (_952 * _952)) / (_863 + 9.9999997473787516355514526367188e-06);
        float _3283 = isnan(0.0) ? _975 : (isnan(_975) ? 0.0 : max(_975, 0.0));
        float _976 = isnan(1.0) ? _3283 : (isnan(_3283) ? 1.0 : min(_3283, 1.0));
        float _977 = _976 * 2.0;
        float _981 = (1.0 - _976) / (_976 + 1.0);
        float _3294 = isnan(0.0) ? _981 : (isnan(_981) ? 0.0 : max(_981, 0.0));
        float _982 = isnan(1.0) ? _3294 : (isnan(_3294) ? 1.0 : min(_3294, 1.0));
        float _991 = ((((1.0 - _982) * (_977 + 2.0)) * exp2(log2(isnan(1.0) ? _3272 : (isnan(_3272) ? 1.0 : min(_3272, 1.0))) * (_977 + 1.0))) + _982) * _863;
        _999 = _830;
        _1001 = _829;
        _1002 = _828;
        _1003 = _840;
        _1004 = _839;
        _1005 = _838;
        _1006 = _850;
        _1007 = _849;
        _1008 = _848;
        _1009 = _863;
        _1010 = _862;
        _1011 = _861;
        _1012 = cbModelParam._m0[36u].z * (isnan(0.0) ? _907 : (isnan(_907) ? 0.0 : max(_907, 0.0)));
        _1013 = cbModelParam._m0[36u].z * (isnan(0.0) ? _949 : (isnan(_949) ? 0.0 : max(_949, 0.0)));
        _1014 = cbModelParam._m0[36u].z * (isnan(0.0) ? _991 : (isnan(_991) ? 0.0 : max(_991, 0.0)));
    }
    else
    {
        _999 = _1000;
        _1001 = _1000;
        _1002 = _1000;
        _1003 = _1000;
        _1004 = _1000;
        _1005 = _1000;
        _1006 = _1000;
        _1007 = _1000;
        _1008 = _1000;
        _1009 = _1000;
        _1010 = _1000;
        _1011 = _1000;
        _1012 = 0.0;
        _1013 = 0.0;
        _1014 = 0.0;
    }
    float _1309;
    float _1310;
    float _1311;
    float _1312;
    float _1313;
    float _1314;
    float _1315;
    float _1316;
    float _1317;
    float _1318;
    float _1319;
    float _1320;
    float _1321;
    float _1322;
    float _1323;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1040 = fma(_698, cbModelParam._m0[30u].z, fma(_694, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _690));
        float _1044 = fma(_698, cbModelParam._m0[31u].z, fma(_694, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _690));
        float _1048 = fma(_698, cbModelParam._m0[32u].z, fma(_694, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _690));
        float _1071 = _690 + _527;
        float _1072 = _694 + _528;
        float _1073 = _698 + _529;
        float _1083 = fma(_1073, cbModelParam._m0[30u].z, fma(_1072, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1071)) - _1040;
        float _1084 = fma(_1073, cbModelParam._m0[31u].z, fma(_1072, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1071)) - _1044;
        float _1085 = fma(_1073, cbModelParam._m0[32u].z, fma(_1072, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1071)) - _1048;
        float _1089 = inversesqrt(dot(vec3(_1083, _1084, _1085), vec3(_1083, _1084, _1085)));
        float _1102 = ((_1089 * _1083) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1040 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1103 = ((_1089 * _1084) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1044 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1104 = ((_1089 * _1085) / cbModelParam._m0[35u].z) + ((((((_1048 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1106 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1102, _1103, _1104), 0.0);
        vec4 _1113 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1102, _1103, _1104), 0.0);
        vec4 _1120 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1102, _1103, _1104), 0.0);
        vec4 _1127 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1102, _1103, _1104), 0.0);
        float _1139 = exp2((_1106.w + (-0.5)) * 20.0) * 2.0;
        float _1140 = _1139 * (_1106.x + (-0.5));
        float _1141 = _1139 * (_1106.y + (-0.5));
        float _1142 = _1139 * (_1106.z + (-0.5));
        float _1149 = exp2((_1113.w + (-0.5)) * 20.0) * 2.0;
        float _1150 = _1149 * (_1113.x + (-0.5));
        float _1151 = _1149 * (_1113.y + (-0.5));
        float _1152 = _1149 * (_1113.z + (-0.5));
        float _1159 = exp2((_1120.w + (-0.5)) * 20.0) * 2.0;
        float _1160 = _1159 * (_1120.x + (-0.5));
        float _1161 = _1159 * (_1120.y + (-0.5));
        float _1162 = _1159 * (_1120.z + (-0.5));
        float _1169 = exp2((_1127.w + (-0.5)) * 20.0) * 2.0;
        float _1170 = _1169 * (_1127.x + (-0.5));
        float _1171 = _1169 * (_1127.y + (-0.5));
        float _1172 = _1169 * (_1127.z + (-0.5));
        float _1173 = isnan(0.0) ? _1170 : (isnan(_1170) ? 0.0 : max(_1170, 0.0));
        float _1174 = isnan(0.0) ? _1171 : (isnan(_1171) ? 0.0 : max(_1171, 0.0));
        float _1175 = isnan(0.0) ? _1172 : (isnan(_1172) ? 0.0 : max(_1172, 0.0));
        float _1176 = _1140 * 0.5;
        float _1177 = _1150 * 0.5;
        float _1178 = _1160 * 0.5;
        float _1179 = dot(vec3(_1176, _1177, _1178), vec3(_1176, _1177, _1178));
        float _1184 = (_1179 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1179);
        float _1192 = (dot(vec3(_527, _528, _529), vec3(_1184 * _1176, _1184 * _1177, _1184 * _1178)) + 1.0) * 0.5;
        float _3335 = isnan(0.0) ? _1192 : (isnan(_1192) ? 0.0 : max(_1192, 0.0));
        float _1201 = sqrt(((_1177 * _1177) + (_1176 * _1176)) + (_1178 * _1178)) / (_1173 + 9.9999997473787516355514526367188e-06);
        float _3346 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
        float _1202 = isnan(1.0) ? _3346 : (isnan(_3346) ? 1.0 : min(_3346, 1.0));
        float _1203 = _1202 * 2.0;
        float _1207 = (1.0 - _1202) / (_1202 + 1.0);
        float _3357 = isnan(0.0) ? _1207 : (isnan(_1207) ? 0.0 : max(_1207, 0.0));
        float _1208 = isnan(1.0) ? _3357 : (isnan(_3357) ? 1.0 : min(_3357, 1.0));
        float _1217 = ((((1.0 - _1208) * (_1203 + 2.0)) * exp2(log2(isnan(1.0) ? _3335 : (isnan(_3335) ? 1.0 : min(_3335, 1.0))) * (_1203 + 1.0))) + _1208) * _1173;
        float _1218 = _1141 * 0.5;
        float _1219 = _1151 * 0.5;
        float _1220 = _1161 * 0.5;
        float _1221 = dot(vec3(_1218, _1219, _1220), vec3(_1218, _1219, _1220));
        float _1226 = (_1221 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1221);
        float _1234 = (dot(vec3(_527, _528, _529), vec3(_1226 * _1218, _1226 * _1219, _1226 * _1220)) + 1.0) * 0.5;
        float _3368 = isnan(0.0) ? _1234 : (isnan(_1234) ? 0.0 : max(_1234, 0.0));
        float _1243 = sqrt(((_1219 * _1219) + (_1218 * _1218)) + (_1220 * _1220)) / (_1174 + 9.9999997473787516355514526367188e-06);
        float _3379 = isnan(0.0) ? _1243 : (isnan(_1243) ? 0.0 : max(_1243, 0.0));
        float _1244 = isnan(1.0) ? _3379 : (isnan(_3379) ? 1.0 : min(_3379, 1.0));
        float _1245 = _1244 * 2.0;
        float _1249 = (1.0 - _1244) / (_1244 + 1.0);
        float _3390 = isnan(0.0) ? _1249 : (isnan(_1249) ? 0.0 : max(_1249, 0.0));
        float _1250 = isnan(1.0) ? _3390 : (isnan(_3390) ? 1.0 : min(_3390, 1.0));
        float _1259 = ((((1.0 - _1250) * (_1245 + 2.0)) * exp2(log2(isnan(1.0) ? _3368 : (isnan(_3368) ? 1.0 : min(_3368, 1.0))) * (_1245 + 1.0))) + _1250) * _1174;
        float _1260 = _1142 * 0.5;
        float _1261 = _1152 * 0.5;
        float _1262 = _1162 * 0.5;
        float _1263 = dot(vec3(_1260, _1261, _1262), vec3(_1260, _1261, _1262));
        float _1268 = (_1263 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1263);
        float _1276 = (dot(vec3(_527, _528, _529), vec3(_1268 * _1260, _1268 * _1261, _1268 * _1262)) + 1.0) * 0.5;
        float _3401 = isnan(0.0) ? _1276 : (isnan(_1276) ? 0.0 : max(_1276, 0.0));
        float _1285 = sqrt(((_1261 * _1261) + (_1260 * _1260)) + (_1262 * _1262)) / (_1175 + 9.9999997473787516355514526367188e-06);
        float _3412 = isnan(0.0) ? _1285 : (isnan(_1285) ? 0.0 : max(_1285, 0.0));
        float _1286 = isnan(1.0) ? _3412 : (isnan(_3412) ? 1.0 : min(_3412, 1.0));
        float _1287 = _1286 * 2.0;
        float _1291 = (1.0 - _1286) / (_1286 + 1.0);
        float _3423 = isnan(0.0) ? _1291 : (isnan(_1291) ? 0.0 : max(_1291, 0.0));
        float _1292 = isnan(1.0) ? _3423 : (isnan(_3423) ? 1.0 : min(_3423, 1.0));
        float _1301 = ((((1.0 - _1292) * (_1287 + 2.0)) * exp2(log2(isnan(1.0) ? _3401 : (isnan(_3401) ? 1.0 : min(_3401, 1.0))) * (_1287 + 1.0))) + _1292) * _1175;
        _1309 = _1142;
        _1310 = _1141;
        _1311 = _1140;
        _1312 = _1152;
        _1313 = _1151;
        _1314 = _1150;
        _1315 = _1162;
        _1316 = _1161;
        _1317 = _1160;
        _1318 = _1175;
        _1319 = _1174;
        _1320 = _1173;
        _1321 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1217 : (isnan(_1217) ? 0.0 : max(_1217, 0.0)));
        _1322 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1259 : (isnan(_1259) ? 0.0 : max(_1259, 0.0)));
        _1323 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1301 : (isnan(_1301) ? 0.0 : max(_1301, 0.0)));
    }
    else
    {
        _1309 = _1000;
        _1310 = _1000;
        _1311 = _1000;
        _1312 = _1000;
        _1313 = _1000;
        _1314 = _1000;
        _1315 = _1000;
        _1316 = _1000;
        _1317 = _1000;
        _1318 = _1000;
        _1319 = _1000;
        _1320 = _1000;
        _1321 = 0.0;
        _1322 = 0.0;
        _1323 = 0.0;
    }
    float _1333 = (cbModelParam._m0[1u].x * (_1321 - _1012)) + _1012;
    float _1334 = (cbModelParam._m0[1u].x * (_1322 - _1013)) + _1013;
    float _1335 = (cbModelParam._m0[1u].x * (_1323 - _1014)) + _1014;
    float _1356 = fma(_1335, cbSceneParam._m0[89u].z, fma(_1334, cbSceneParam._m0[89u].y, _1333 * cbSceneParam._m0[89u].x));
    float _1359 = fma(_1335, cbSceneParam._m0[90u].z, fma(_1334, cbSceneParam._m0[90u].y, _1333 * cbSceneParam._m0[90u].x));
    float _1362 = fma(_1335, cbSceneParam._m0[91u].z, fma(_1334, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1333));
    float _1377 = _637 * 0.5;
    float _1378 = _638 * 0.5;
    float _1379 = _639 * 0.5;
    float _1380 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_1311, _1314, _1317, _1320));
    float _1383 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_1310, _1313, _1316, _1319));
    float _1386 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_1309, _1312, _1315, _1318));
    float _1420;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1393 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_999, _1003, _1006, _1009));
        float _1397 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_1001, _1004, _1007, _1010));
        float _1401 = dot(vec4(_1377, _1378, _1379, 1.0), vec4(_1002, _1005, _1008, _1011));
        float _1408 = dot(vec4(cbModelParam._m0[39u]), vec4(_1377, _1378, _1379, 1.0));
        _1420 = dot(vec3(isnan(0.0) ? _1401 : (isnan(_1401) ? 0.0 : max(_1401, 0.0)), isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0)), isnan(0.0) ? _1393 : (isnan(_1393) ? 0.0 : max(_1393, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1408) ? 0.0 : (isnan(0.0) ? _1408 : max(0.0, _1408))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1420 = 1.0;
    }
    float _1431;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1422 = dot(vec4(cbModelParam._m0[40u]), vec4(_1377, _1378, _1379, 1.0));
        _1431 = dot(vec3(isnan(0.0) ? _1380 : (isnan(_1380) ? 0.0 : max(_1380, 0.0)), isnan(0.0) ? _1383 : (isnan(_1383) ? 0.0 : max(_1383, 0.0)), isnan(0.0) ? _1386 : (isnan(_1386) ? 0.0 : max(_1386, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1422) ? 0.0 : (isnan(0.0) ? _1422 : max(0.0, _1422))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1431 = 1.0;
    }
    float _1435 = (_1431 * cbModelParam._m0[1u].x) + (_1420 * (1.0 - cbModelParam._m0[1u].x));
    float _1445 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _530);
    float _1446 = isnan(_1445) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1445 : min(cbModelParam._m0[25u].z, _1445));
    float _1527;
    float _1529;
    float _1531;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1494 = fma(_698, cbModelParam._m0[13u].z, fma(_694, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _690)) + cbModelParam._m0[13u].w;
        float _1498 = fma(_698, cbModelParam._m0[14u].z, fma(_694, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _690)) + cbModelParam._m0[14u].w;
        float _1502 = fma(_698, cbModelParam._m0[15u].z, fma(_694, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _690)) + cbModelParam._m0[15u].w;
        float _1505 = fma(_639, cbModelParam._m0[13u].z, fma(_638, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _637));
        float _1508 = fma(_639, cbModelParam._m0[14u].z, fma(_638, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _637));
        float _1511 = fma(_639, cbModelParam._m0[15u].z, fma(_638, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _637));
        float _1539;
        if (_1505 > 0.0)
        {
            _1539 = abs((1.0 - _1494) / _1505);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1505 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1494 + 1.0) / _1505);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1539 = frontier_phi_22_20_ladder;
        }
        float _1908;
        if (_1508 > 0.0)
        {
            _1908 = abs((1.0 - _1498) / _1508);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1508 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1498 + 1.0) / _1508);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1908 = frontier_phi_31_27_ladder;
        }
        float _2208;
        if (_1511 > 0.0)
        {
            _2208 = abs((1.0 - _1502) / _1511);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1511 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1502 + 1.0) / _1511);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _2208 = frontier_phi_45_38_ladder;
        }
        float _2210 = isnan(_1908) ? _1539 : (isnan(_1539) ? _1908 : min(_1539, _1908));
        float _2211 = isnan(_2208) ? _2210 : (isnan(_2210) ? _2208 : min(_2210, _2208));
        float _2215 = (_2211 * _1505) + _1494;
        float _2216 = (_2211 * _1508) + _1498;
        float _2217 = (_2211 * _1511) + _1502;
        float _2218 = _2211 * 9.9999997473787516355514526367188e-05;
        float _2219 = (-1.0) - _2218;
        float _2221 = _2218 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_2217 > _2221) || ((_2217 < _2219) || ((_2216 > _2221) || ((_2216 < _2219) || ((_2215 < _2219) || (_2215 > _2221))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2343 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2217, cbModelParam._m0[9u].z, fma(_2216, cbModelParam._m0[9u].y, _2215 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2217, cbModelParam._m0[10u].z, fma(_2216, cbModelParam._m0[10u].y, _2215 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2217, cbModelParam._m0[11u].z, fma(_2216, cbModelParam._m0[11u].y, _2215 * cbModelParam._m0[11u].x))), _1446);
            frontier_phi_21_45_ladder = _2343.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2343.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2343.x * cbModelParam._m0[1u].y;
        }
        _1527 = frontier_phi_21_45_ladder_2;
        _1529 = frontier_phi_21_45_ladder_1;
        _1531 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1515 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_637, _638, _639), _1446);
        _1527 = _1515.x * cbModelParam._m0[1u].y;
        _1529 = _1515.y * cbModelParam._m0[1u].y;
        _1531 = _1515.z * cbModelParam._m0[1u].y;
    }
    float _1535 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _530);
    float _1536 = isnan(_1535) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1535 : min(cbModelParam._m0[25u].w, _1535));
    float _1624;
    float _1626;
    float _1628;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1588 = fma(_698, cbModelParam._m0[21u].z, fma(_694, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _690)) + cbModelParam._m0[21u].w;
        float _1592 = fma(_698, cbModelParam._m0[22u].z, fma(_694, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _690)) + cbModelParam._m0[22u].w;
        float _1596 = fma(_698, cbModelParam._m0[23u].z, fma(_694, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _690)) + cbModelParam._m0[23u].w;
        float _1599 = fma(_639, cbModelParam._m0[21u].z, fma(_638, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _637));
        float _1602 = fma(_639, cbModelParam._m0[22u].z, fma(_638, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _637));
        float _1605 = fma(_639, cbModelParam._m0[23u].z, fma(_638, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _637));
        float _1913;
        if (_1599 > 0.0)
        {
            _1913 = abs((1.0 - _1588) / _1599);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1599 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1588 + 1.0) / _1599);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1913 = frontier_phi_33_29_ladder;
        }
        float _2234;
        if (_1602 > 0.0)
        {
            _2234 = abs((1.0 - _1592) / _1602);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1602 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1592 + 1.0) / _1602);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _2234 = frontier_phi_47_40_ladder;
        }
        float _2403;
        if (_1605 > 0.0)
        {
            _2403 = abs((1.0 - _1596) / _1605);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1605 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1596 + 1.0) / _1605);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2403 = frontier_phi_61_56_ladder;
        }
        float _2405 = isnan(_2234) ? _1913 : (isnan(_1913) ? _2234 : min(_1913, _2234));
        float _2406 = isnan(_2403) ? _2405 : (isnan(_2405) ? _2403 : min(_2405, _2403));
        float _2410 = (_2406 * _1599) + _1588;
        float _2411 = (_2406 * _1602) + _1592;
        float _2412 = (_2406 * _1605) + _1596;
        float _2413 = _2406 * 9.9999997473787516355514526367188e-05;
        float _2414 = (-1.0) - _2413;
        float _2416 = _2413 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2412 > _2416) || ((_2412 < _2414) || ((_2411 > _2416) || ((_2411 < _2414) || ((_2410 < _2414) || (_2410 > _2416))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2645 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2412, cbModelParam._m0[17u].z, fma(_2411, cbModelParam._m0[17u].y, _2410 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2412, cbModelParam._m0[18u].z, fma(_2411, cbModelParam._m0[18u].y, _2410 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2412, cbModelParam._m0[19u].z, fma(_2411, cbModelParam._m0[19u].y, _2410 * cbModelParam._m0[19u].x))), _1536);
            frontier_phi_30_61_ladder = _2645.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2645.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2645.x * cbModelParam._m0[1u].z;
        }
        _1624 = frontier_phi_30_61_ladder_2;
        _1626 = frontier_phi_30_61_ladder_1;
        _1628 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1608 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_637, _638, _639), _1536);
        _1624 = _1608.x * cbModelParam._m0[1u].z;
        _1626 = _1608.y * cbModelParam._m0[1u].z;
        _1628 = _1608.z * cbModelParam._m0[1u].z;
    }
    float _1640 = ((((1.0 - _658) * ((_645 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_658 * _645)) * _629;
    float _1641 = _1640 * ((cbModelParam._m0[1u].w * (_1624 - _1527)) + _1527);
    float _1642 = _1640 * ((cbModelParam._m0[1u].w * (_1626 - _1529)) + _1529);
    float _1643 = _1640 * ((cbModelParam._m0[1u].w * (_1628 - _1531)) + _1531);
    float _1646 = fma(_1643, cbSceneParam._m0[89u].z, fma(_1642, cbSceneParam._m0[89u].y, _1641 * cbSceneParam._m0[89u].x));
    float _1649 = fma(_1643, cbSceneParam._m0[90u].z, fma(_1642, cbSceneParam._m0[90u].y, _1641 * cbSceneParam._m0[90u].x));
    float _1652 = fma(_1643, cbSceneParam._m0[91u].z, fma(_1642, cbSceneParam._m0[91u].y, _1641 * cbSceneParam._m0[91u].x));
    vec4 _1660 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_562, _563));
    float _1662 = _1660.w;
    float _1674 = (1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1662);
    float _1675 = (1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1662);
    float _1676 = (1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1662);
    uvec4 _1680 = floatBitsToUint(cbInstanceData._m0[_603 + 5u]);
    uint _1682 = _1680.x * 14u;
    uint _1683 = _1682 + 13u;
    float _1688 = _629 + (-1.0);
    float _1691 = (cbLight._m0[_1683].x * _1688) + 1.0;
    float _1692 = (cbLight._m0[_1683].y * _1688) + 1.0;
    uint _1693 = _1682 + 5u;
    float _1699 = isnan(1.0) ? _1692 : (isnan(_1692) ? 1.0 : min(_1692, 1.0));
    uint _1703 = _1682 + 4u;
    float _1712 = isnan(1.0) ? _1691 : (isnan(_1691) ? 1.0 : min(_1691, 1.0));
    uint _1716 = _1682 | 1u;
    float _1727 = dot(vec3(cbLight._m0[_1682].xyz), vec3(_527, _528, _529));
    float _1730 = dot(vec3(cbLight._m0[_1716].xyz), vec3(_527, _528, _529));
    float _3559 = isnan(0.0) ? _1727 : (isnan(_1727) ? 0.0 : max(_1727, 0.0));
    float _3570 = isnan(0.0) ? _1730 : (isnan(_1730) ? 0.0 : max(_1730, 0.0));
    float _1735 = (isnan(1.0) ? _3559 : (isnan(_3559) ? 1.0 : min(_3559, 1.0))) * 0.3183098733425140380859375;
    float _1737 = (isnan(1.0) ? _3570 : (isnan(_3570) ? 1.0 : min(_3570, 1.0))) * 0.3183098733425140380859375;
    float _1744 = ((cbLight._m0[_1693].x * _1699) * _1737) + (((cbLight._m0[_1703].x * _1674) * _1712) * _1735);
    float _1745 = ((_1699 * cbLight._m0[_1693].y) * _1737) + (((cbLight._m0[_1703].y * _1675) * _1712) * _1735);
    float _1746 = ((_1699 * cbLight._m0[_1693].z) * _1737) + (((cbLight._m0[_1703].z * _1676) * _1712) * _1735);
    uint _1748 = _1682 + 8u;
    float _1761 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1682].w)) * _530) * 0.949999988079071044921875);
    float _1762 = _1761 * _1761;
    float _1763 = cbLight._m0[_1682].x + _554;
    float _1764 = cbLight._m0[_1682].y + _555;
    float _1765 = cbLight._m0[_1682].z + _556;
    float _1769 = inversesqrt(dot(vec3(_1763, _1764, _1765), vec3(_1763, _1764, _1765)));
    float _1770 = _1769 * _1763;
    float _1771 = _1769 * _1764;
    float _1772 = _1769 * _1765;
    float _1773 = dot(vec3(_527, _528, _529), vec3(cbLight._m0[_1682].xyz));
    float _3581 = isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0));
    float _1776 = isnan(1.0) ? _3581 : (isnan(_3581) ? 1.0 : min(_3581, 1.0));
    float _3592 = isnan(0.0) ? _630 : (isnan(_630) ? 0.0 : max(_630, 0.0));
    float _1777 = isnan(1.0) ? _3592 : (isnan(_3592) ? 1.0 : min(_3592, 1.0));
    float _1778 = dot(vec3(_527, _528, _529), vec3(_1770, _1771, _1772));
    float _3603 = isnan(0.0) ? _1778 : (isnan(_1778) ? 0.0 : max(_1778, 0.0));
    float _1781 = isnan(1.0) ? _3603 : (isnan(_3603) ? 1.0 : min(_3603, 1.0));
    float _1782 = dot(vec3(cbLight._m0[_1682].xyz), vec3(_1770, _1771, _1772));
    float _3614 = isnan(0.0) ? _1782 : (isnan(_1782) ? 0.0 : max(_1782, 0.0));
    float _1786 = _1762 * _1762;
    float _1790 = ((_1781 * _1781) * (_1786 + (-1.0))) + 1.0;
    float _1801 = (exp2(log2(1.0 - (isnan(1.0) ? _3614 : (isnan(_3614) ? 1.0 : min(_3614, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1802 = 1.0 - _1762;
    float _1813 = (0.5 / (((_1777 * ((_1776 * _1802) + _1762)) + 9.9999999392252902907785028219223e-09) + (((_1777 * _1802) + _1762) * _1776))) * _1776;
    float _3625 = isnan(0.0) ? _1813 : (isnan(_1813) ? 0.0 : max(_1813, 0.0));
    float _1815 = (isnan(1.0) ? _3625 : (isnan(_3625) ? 1.0 : min(_3625, 1.0))) * (_1786 / ((_1790 * _1790) * 3.141590118408203125));
    uint _1829 = _1682 + 9u;
    float _1840 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_1716].w)) * _530) * 0.949999988079071044921875);
    float _1841 = _1840 * _1840;
    float _1842 = cbLight._m0[_1716].x + _554;
    float _1843 = cbLight._m0[_1716].y + _555;
    float _1844 = cbLight._m0[_1716].z + _556;
    float _1848 = inversesqrt(dot(vec3(_1842, _1843, _1844), vec3(_1842, _1843, _1844)));
    float _1849 = _1848 * _1842;
    float _1850 = _1848 * _1843;
    float _1851 = _1848 * _1844;
    float _1852 = dot(vec3(_527, _528, _529), vec3(cbLight._m0[_1716].xyz));
    float _3636 = isnan(0.0) ? _1852 : (isnan(_1852) ? 0.0 : max(_1852, 0.0));
    float _1855 = isnan(1.0) ? _3636 : (isnan(_3636) ? 1.0 : min(_3636, 1.0));
    float _1856 = dot(vec3(_527, _528, _529), vec3(_1849, _1850, _1851));
    float _3647 = isnan(0.0) ? _1856 : (isnan(_1856) ? 0.0 : max(_1856, 0.0));
    float _1859 = isnan(1.0) ? _3647 : (isnan(_3647) ? 1.0 : min(_3647, 1.0));
    float _1860 = dot(vec3(cbLight._m0[_1716].xyz), vec3(_1849, _1850, _1851));
    float _3658 = isnan(0.0) ? _1860 : (isnan(_1860) ? 0.0 : max(_1860, 0.0));
    float _1864 = _1841 * _1841;
    float _1868 = ((_1859 * _1859) * (_1864 + (-1.0))) + 1.0;
    float _1877 = (exp2(log2(1.0 - (isnan(1.0) ? _3658 : (isnan(_3658) ? 1.0 : min(_3658, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1878 = 1.0 - _1841;
    float _1888 = (0.5 / (((_1777 * ((_1855 * _1878) + _1841)) + 9.9999999392252902907785028219223e-09) + (((_1777 * _1878) + _1841) * _1855))) * _1855;
    float _3669 = isnan(0.0) ? _1888 : (isnan(_1888) ? 0.0 : max(_1888, 0.0));
    float _1890 = (isnan(1.0) ? _3669 : (isnan(_3669) ? 1.0 : min(_3669, 1.0))) * (_1864 / ((_1868 * _1868) * 3.141590118408203125));
    float _1900 = (((_1877 * cbLight._m0[_1829].x) * _1890) * _1699) + ((((cbLight._m0[_1748].x * _1674) * _1801) * _1815) * _1712);
    float _1901 = (((_1877 * cbLight._m0[_1829].y) * _1890) * _1699) + ((((cbLight._m0[_1748].y * _1675) * _1801) * _1815) * _1712);
    float _1902 = (((_1877 * cbLight._m0[_1829].z) * _1890) * _1699) + ((((cbLight._m0[_1748].z * _1676) * _1801) * _1815) * _1712);
    float _2017;
    float _2019;
    float _2021;
    float _2023;
    float _2025;
    float _2027;
    if (_1680.y == 0u)
    {
        float _1957 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1958 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1957;
        float _1959 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1957;
        float _1960 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1957;
        uvec4 _1972 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1973 = _1972.x;
        uint _1984 = uint((float(_1972.y) * floor(float(uint(cbSceneParam._m0[85u].y * _563) / _1973))) + floor(float(uint(cbSceneParam._m0[85u].x * _562) / _1973)));
        float _1994 = (log2(_1960 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1995 = isnan(0.0) ? _1994 : (isnan(_1994) ? 0.0 : max(_1994, 0.0));
        uint _1998 = uint(isnan(14.0) ? _1995 : (isnan(_1995) ? 14.0 : min(_1995, 14.0)));
        uvec4 _2003 = texelFetch(g_lightClusterGridBuffer, int(((_1998 << 2u) + (_1984 << 6u)) >> 2u));
        uint _2004 = _2003.x;
        uint _2005 = _1972.z;
        float _2095;
        float _2097;
        float _2099;
        float _2101;
        float _2103;
        float _2105;
        if (((((1u << ((_2005 >> 4u) & 15u)) + 4294967295u) & _2004) == 0u) || ((_2005 & 240u) == 0u))
        {
            _2095 = 0.0;
            _2097 = 0.0;
            _2099 = 0.0;
            _2101 = 0.0;
            _2103 = 0.0;
            _2105 = 0.0;
        }
        else
        {
            float _2096;
            float _2098;
            float _2100;
            float _2102;
            float _2104;
            float _2106;
            float _2271 = 0.0;
            float _2272 = 0.0;
            float _2273 = 0.0;
            float _2274 = 0.0;
            float _2275 = 0.0;
            float _2276 = 0.0;
            uint _2277 = 0u;
            uint _2286;
            bool _2287;
            for (;;)
            {
                _2286 = texelFetch(g_lightClassification, int((((_1998 << 5u) + (_1984 << 9u)) + (_2277 << 2u)) >> 2u)).x;
                _2287 = _2286 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_2287)
                {
                    frontier_phi_58_pred = _2272;
                    frontier_phi_58_pred_1 = _2276;
                    frontier_phi_58_pred_2 = _2275;
                    frontier_phi_58_pred_3 = _2274;
                    frontier_phi_58_pred_4 = _2273;
                    frontier_phi_58_pred_5 = _2271;
                }
                else
                {
                    float _2446;
                    float _2447;
                    float _2448;
                    float _2449;
                    float _2450;
                    float _2451;
                    uint _2452;
                    _2446 = _2271;
                    _2447 = _2272;
                    _2448 = _2273;
                    _2449 = _2274;
                    _2450 = _2275;
                    _2451 = _2276;
                    _2452 = _2286;
                    float _2352;
                    float _2353;
                    float _2354;
                    float _2355;
                    float _2356;
                    float _2357;
                    for (;;)
                    {
                        uint _2456 = uint(findLSB(_2452)) + (_2277 << 5u);
                        uint _2453 = (_2452 + 4294967295u) & _2452;
                        uint _2458 = _2456 * 48u;
                        vec4 _2472 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2458)).x, texelFetch(g_PointLightRenderingBuffer, int(_2458 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2458 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2458 + 3u)).x));
                        uint _2478 = (_2456 * 48u) + 4u;
                        vec4 _2491 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2478)).x, texelFetch(g_PointLightRenderingBuffer, int(_2478 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2478 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2478 + 3u)).x));
                        uint _2497 = (_2456 * 48u) + 8u;
                        vec3 _2508 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2497)).x, texelFetch(g_PointLightRenderingBuffer, int(_2497 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2497 + 2u)).x));
                        float _2512 = _2472.x - _1958;
                        float _2513 = _2472.y - _1959;
                        float _2514 = _2472.z - _1960;
                        float _2515 = dot(vec3(_2512, _2513, _2514), vec3(_2512, _2513, _2514));
                        float _2518 = inversesqrt(_2515);
                        float _2519 = _2518 * _2512;
                        float _2520 = _2518 * _2513;
                        float _2521 = _2518 * _2514;
                        float _2522 = dot(vec3(_584, _587, _590), vec3(_2519, _2520, _2521));
                        float _2527 = 1.0 - (_2515 * _2472.w);
                        float _3690 = isnan(0.0) ? _2527 : (isnan(_2527) ? 0.0 : max(_2527, 0.0));
                        float _2528 = isnan(1.0) ? _3690 : (isnan(_3690) ? 1.0 : min(_3690, 1.0));
                        float _2529 = sqrt(_2515) * _2491.w;
                        float _2532 = 1.39999997615814208984375 / (_2529 + 1.39999997615814208984375);
                        float _2533 = _2532 * _2532;
                        float _2536 = ((1.0 - _2533) * _2522) + _2533;
                        float _2539 = _2529 * _2529;
                        float _2543 = ((isnan(0.0) ? _2536 : (isnan(_2536) ? 0.0 : max(_2536, 0.0))) * _2528) / ((_2539 * 0.699999988079071044921875) + 1.0);
                        float _2547 = (-0.0) - _1958;
                        float _2548 = (-0.0) - _1959;
                        float _2549 = (-0.0) - _1960;
                        float _2553 = inversesqrt(dot(vec3(_2547, _2548, _2549), vec3(_2547, _2548, _2549)));
                        float _2554 = _2553 * _2547;
                        float _2555 = _2553 * _2548;
                        float _2556 = _2553 * _2549;
                        float _2564 = exp2(log2(1.0 / ((_2539 * 3.5) + 5.0)) * 0.25);
                        float _2565 = 1.0 - _645;
                        float _2572 = sqrt(1.0 - ((1.0 - (_2565 * _2565)) * (1.0 - (_2564 * _2564))));
                        float _2573 = _2572 * _2572;
                        float _2574 = _2573 * _2573;
                        float _2575 = _2554 + _2519;
                        float _2576 = _2555 + _2520;
                        float _2577 = _2556 + _2521;
                        float _2581 = inversesqrt(dot(vec3(_2575, _2576, _2577), vec3(_2575, _2576, _2577)));
                        float _2585 = dot(vec3(_584, _587, _590), vec3(_2554, _2555, _2556));
                        float _3706 = isnan(0.0) ? _2585 : (isnan(_2585) ? 0.0 : max(_2585, 0.0));
                        float _2588 = isnan(1.0) ? _3706 : (isnan(_3706) ? 1.0 : min(_3706, 1.0));
                        float _2589 = dot(vec3(_584, _587, _590), vec3(_2581 * _2575, _2581 * _2576, _2581 * _2577));
                        float _3717 = isnan(0.0) ? _2589 : (isnan(_2589) ? 0.0 : max(_2589, 0.0));
                        float _2592 = isnan(1.0) ? _3717 : (isnan(_3717) ? 1.0 : min(_3717, 1.0));
                        float _2596 = ((_2592 * _2592) * (_2574 + (-1.0))) + 1.0;
                        float _2597 = _2532 * _2573;
                        float _2598 = _2597 * _2597;
                        float _2601 = ((1.0 - _2598) * _2522) + _2598;
                        float _3728 = isnan(0.0) ? _2601 : (isnan(_2601) ? 0.0 : max(_2601, 0.0));
                        float _2602 = isnan(1.0) ? _3728 : (isnan(_3728) ? 1.0 : min(_3728, 1.0));
                        float _2603 = 1.0 - _2573;
                        float _2613 = (0.5 / (((_2602 * ((_2588 * _2603) + _2573)) + 9.9999999392252902907785028219223e-09) + (((_2602 * _2603) + _2573) * _2588))) * _2602;
                        float _3739 = isnan(0.0) ? _2613 : (isnan(_2613) ? 0.0 : max(_2613, 0.0));
                        float _2624 = (((_2574 * 3.1415927410125732421875) * (isnan(1.0) ? _3739 : (isnan(_3739) ? 1.0 : min(_3739, 1.0)))) / ((_2596 * _2596) * ((_2539 * 2.1991131305694580078125) + 3.141590118408203125))) * _2528;
                        _2355 = (_2543 * _2491.x) + _2449;
                        _2356 = (_2543 * _2491.y) + _2450;
                        _2357 = (_2543 * _2491.z) + _2451;
                        _2352 = (_2624 * _2508.x) + _2446;
                        _2353 = (_2624 * _2508.y) + _2447;
                        _2354 = (_2624 * _2508.z) + _2448;
                        if (_2453 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2446 = _2352;
                            _2447 = _2353;
                            _2448 = _2354;
                            _2449 = _2355;
                            _2450 = _2356;
                            _2451 = _2357;
                            _2452 = _2453;
                        }
                    }
                    frontier_phi_58_pred = _2353;
                    frontier_phi_58_pred_1 = _2357;
                    frontier_phi_58_pred_2 = _2356;
                    frontier_phi_58_pred_3 = _2355;
                    frontier_phi_58_pred_4 = _2354;
                    frontier_phi_58_pred_5 = _2352;
                }
                _2098 = frontier_phi_58_pred;
                _2106 = frontier_phi_58_pred_1;
                _2104 = frontier_phi_58_pred_2;
                _2102 = frontier_phi_58_pred_3;
                _2100 = frontier_phi_58_pred_4;
                _2096 = frontier_phi_58_pred_5;
                uint _2278 = _2277 + 1u;
                if (_2278 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2271 = _2096;
                    _2272 = _2098;
                    _2273 = _2100;
                    _2274 = _2102;
                    _2275 = _2104;
                    _2276 = _2106;
                    _2277 = _2278;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2095 = _2096;
            _2097 = _2098;
            _2099 = _2100;
            _2101 = _2102;
            _2103 = _2104;
            _2105 = _2106;
        }
        uvec4 _2109 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2110 = _2109.z;
        uint _2112 = (_2110 >> 8u) & 15u;
        float _2239;
        float _2241;
        float _2243;
        float _2245;
        float _2247;
        float _2249;
        if (((4294967295u << _2112) & _2004) == 0u)
        {
            _2239 = _2095;
            _2241 = _2097;
            _2243 = _2099;
            _2245 = _2101;
            _2247 = _2103;
            _2249 = _2105;
        }
        else
        {
            float _2264 = inversesqrt(dot(vec3(_1958, _1959, _1960), vec3(_1958, _1959, _1960)));
            float _2265 = _2264 * _1958;
            float _2266 = _2264 * _1959;
            float _2267 = _2264 * _1960;
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_2112 < ((_2110 >> 12u) & 15u))
            {
                float _2240;
                float _2242;
                float _2244;
                float _2246;
                float _2248;
                float _2250;
                float _2429 = _2095;
                float _2430 = _2097;
                float _2431 = _2099;
                float _2432 = _2101;
                float _2433 = _2103;
                float _2434 = _2105;
                uint _2435 = _2112;
                uint _2444;
                bool _2445;
                for (;;)
                {
                    _2444 = texelFetch(g_lightClassification, int((((_1998 << 5u) + (_1984 << 9u)) + (_2435 << 2u)) >> 2u)).x;
                    _2445 = _2444 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2445)
                    {
                        frontier_phi_67_pred = _2434;
                        frontier_phi_67_pred_1 = _2433;
                        frontier_phi_67_pred_2 = _2432;
                        frontier_phi_67_pred_3 = _2431;
                        frontier_phi_67_pred_4 = _2430;
                        frontier_phi_67_pred_5 = _2429;
                    }
                    else
                    {
                        float _2650;
                        float _2651;
                        float _2652;
                        float _2653;
                        float _2654;
                        float _2655;
                        float _2944;
                        float _2945;
                        float _2946;
                        float _2947;
                        float _2948;
                        float _2949;
                        float _2663 = _2429;
                        float _2664 = _2430;
                        float _2665 = _2431;
                        float _2666 = _2432;
                        float _2667 = _2433;
                        float _2668 = _2434;
                        uint _2669 = _2444;
                        uint _2670;
                        vec4 _2695;
                        float _2696;
                        vec4 _2711;
                        vec3 _2723;
                        vec4 _2739;
                        vec4 _2754;
                        float _2800;
                        bool _2801;
                        for (;;)
                        {
                            uint _2680 = ((_2435 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2669));
                            _2670 = (_2669 + 4294967295u) & _2669;
                            uint _2682 = _2680 * 40u;
                            _2695 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2682)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2682 + 3u)).x));
                            _2696 = _2695.w;
                            uint _2698 = (_2680 * 40u) + 4u;
                            _2711 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2698)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2698 + 3u)).x));
                            uint _2713 = (_2680 * 40u) + 8u;
                            _2723 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2713)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2713 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2713 + 2u)).x));
                            uint _2726 = (_2680 * 40u) + 16u;
                            _2739 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2726)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2726 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2726 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2726 + 3u)).x));
                            uint _2741 = (_2680 * 40u) + 20u;
                            _2754 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2741)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2741 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2741 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2741 + 3u)).x));
                            uint _2756 = (_2680 * 40u) + 24u;
                            vec4 _2769 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2756)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2756 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2756 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2756 + 3u)).x));
                            uint _2775 = (_2680 * 40u) + 28u;
                            vec4 _2788 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2775)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2775 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2775 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2775 + 3u)).x));
                            _2800 = fma(_1960, _2788.z, fma(_1959, _2788.y, _2788.x * _1958)) + _2788.w;
                            _2801 = !((fma(_1960, _2769.z, fma(_1959, _2769.y, _2769.x * _1958)) + _2769.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2801)
                            {
                                float _2828 = _2695.x - _1958;
                                float _2829 = _2695.y - _1959;
                                float _2830 = _2695.z - _1960;
                                float _2831 = dot(vec3(_2828, _2829, _2830), vec3(_2828, _2829, _2830));
                                float _2834 = inversesqrt(_2831);
                                float _2835 = _2834 * _2828;
                                float _2836 = _2834 * _2829;
                                float _2837 = _2834 * _2830;
                                float _2841 = 1.0 - (_2831 / (_2696 * _2696));
                                float _3750 = isnan(0.0) ? _2841 : (isnan(_2841) ? 0.0 : max(_2841, 0.0));
                                float _2842 = isnan(1.0) ? _3750 : (isnan(_3750) ? 1.0 : min(_3750, 1.0));
                                float _2846 = sqrt(_2831) * _2711.w;
                                float _2848 = 1.39999997615814208984375 / (_2846 + 1.39999997615814208984375);
                                float _2849 = _2848 * _2848;
                                float _2852 = ((1.0 - _2849) * dot(vec3(_2835, _2836, _2837), vec3(_584, _587, _590))) + _2849;
                                float _2855 = _2846 * _2846;
                                float _2859 = (fma(_1960, _2739.z, fma(_1959, _2739.y, _2739.x * _1958)) + _2739.w) / _2800;
                                float _2860 = (fma(_1960, _2754.z, fma(_1959, _2754.y, _2754.x * _1958)) + _2754.w) / _2800;
                                float _2864 = 1.0 - dot(vec2(_2859, _2860), vec2(_2859, _2860));
                                float _3766 = isnan(0.0) ? _2864 : (isnan(_2864) ? 0.0 : max(_2864, 0.0));
                                float _2865 = isnan(1.0) ? _3766 : (isnan(_3766) ? 1.0 : min(_3766, 1.0));
                                float _2866 = _2865 * (((isnan(0.0) ? _2852 : (isnan(_2852) ? 0.0 : max(_2852, 0.0))) * _2842) / ((_2855 * 0.699999988079071044921875) + 1.0));
                                float _2878 = exp2(log2(1.0 / ((_2855 * 3.5) + 5.0)) * 0.25);
                                float _2879 = 1.0 - _645;
                                float _2886 = sqrt(1.0 - ((1.0 - (_2879 * _2879)) * (1.0 - (_2878 * _2878))));
                                float _2887 = _2886 * _2886;
                                float _2888 = _2887 * _2887;
                                float _2889 = _2835 - _2265;
                                float _2890 = _2836 - _2266;
                                float _2891 = _2837 - _2267;
                                float _2895 = inversesqrt(dot(vec3(_2889, _2890, _2891), vec3(_2889, _2890, _2891)));
                                float _2899 = dot(vec3(_584, _587, _590), vec3((-0.0) - _2265, (-0.0) - _2266, (-0.0) - _2267));
                                float _3777 = isnan(0.0) ? _2899 : (isnan(_2899) ? 0.0 : max(_2899, 0.0));
                                float _2902 = isnan(1.0) ? _3777 : (isnan(_3777) ? 1.0 : min(_3777, 1.0));
                                float _2903 = dot(vec3(_584, _587, _590), vec3(_2895 * _2889, _2895 * _2890, _2895 * _2891));
                                float _3788 = isnan(0.0) ? _2903 : (isnan(_2903) ? 0.0 : max(_2903, 0.0));
                                float _2906 = isnan(1.0) ? _3788 : (isnan(_3788) ? 1.0 : min(_3788, 1.0));
                                float _2910 = ((_2906 * _2906) * (_2888 + (-1.0))) + 1.0;
                                float _2911 = _2848 * _2887;
                                float _2912 = _2911 * _2911;
                                float _2918 = ((1.0 - _2912) * dot(vec3(_584, _587, _590), vec3(_2835, _2836, _2837))) + _2912;
                                float _3799 = isnan(0.0) ? _2918 : (isnan(_2918) ? 0.0 : max(_2918, 0.0));
                                float _2919 = isnan(1.0) ? _3799 : (isnan(_3799) ? 1.0 : min(_3799, 1.0));
                                float _2920 = 1.0 - _2887;
                                float _2930 = (0.5 / (((_2919 * ((_2902 * _2920) + _2887)) + 9.9999999392252902907785028219223e-09) + (((_2919 * _2920) + _2887) * _2902))) * _2919;
                                float _3810 = isnan(0.0) ? _2930 : (isnan(_2930) ? 0.0 : max(_2930, 0.0));
                                float _2940 = (_2865 * _2842) * (((_2888 * 3.1415927410125732421875) * (isnan(1.0) ? _3810 : (isnan(_3810) ? 1.0 : min(_3810, 1.0)))) / ((_2910 * _2910) * ((_2855 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_73_pred = _2866 * _2711.z;
                                frontier_phi_73_pred_1 = _2866 * _2711.y;
                                frontier_phi_73_pred_2 = _2866 * _2711.x;
                                frontier_phi_73_pred_3 = _2940 * _2723.z;
                                frontier_phi_73_pred_4 = _2940 * _2723.y;
                                frontier_phi_73_pred_5 = _2940 * _2723.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2949 = frontier_phi_73_pred;
                            _2948 = frontier_phi_73_pred_1;
                            _2947 = frontier_phi_73_pred_2;
                            _2946 = frontier_phi_73_pred_3;
                            _2945 = frontier_phi_73_pred_4;
                            _2944 = frontier_phi_73_pred_5;
                            _2653 = _2947 + _2666;
                            _2654 = _2948 + _2667;
                            _2655 = _2949 + _2668;
                            _2650 = _2944 + _2663;
                            _2651 = _2945 + _2664;
                            _2652 = _2946 + _2665;
                            if (_2670 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2663 = _2650;
                                _2664 = _2651;
                                _2665 = _2652;
                                _2666 = _2653;
                                _2667 = _2654;
                                _2668 = _2655;
                                _2669 = _2670;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2655;
                        frontier_phi_67_pred_1 = _2654;
                        frontier_phi_67_pred_2 = _2653;
                        frontier_phi_67_pred_3 = _2652;
                        frontier_phi_67_pred_4 = _2651;
                        frontier_phi_67_pred_5 = _2650;
                    }
                    _2250 = frontier_phi_67_pred;
                    _2248 = frontier_phi_67_pred_1;
                    _2246 = frontier_phi_67_pred_2;
                    _2244 = frontier_phi_67_pred_3;
                    _2242 = frontier_phi_67_pred_4;
                    _2240 = frontier_phi_67_pred_5;
                    uint _2436 = _2435 + 1u;
                    if (_2436 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2429 = _2240;
                        _2430 = _2242;
                        _2431 = _2244;
                        _2432 = _2246;
                        _2433 = _2248;
                        _2434 = _2250;
                        _2435 = _2436;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _2246;
                frontier_phi_49_50_ladder_1 = _2250;
                frontier_phi_49_50_ladder_2 = _2248;
                frontier_phi_49_50_ladder_3 = _2244;
                frontier_phi_49_50_ladder_4 = _2242;
                frontier_phi_49_50_ladder_5 = _2240;
            }
            else
            {
                frontier_phi_49_50_ladder = _2101;
                frontier_phi_49_50_ladder_1 = _2105;
                frontier_phi_49_50_ladder_2 = _2103;
                frontier_phi_49_50_ladder_3 = _2099;
                frontier_phi_49_50_ladder_4 = _2097;
                frontier_phi_49_50_ladder_5 = _2095;
            }
            _2239 = frontier_phi_49_50_ladder_5;
            _2241 = frontier_phi_49_50_ladder_4;
            _2243 = frontier_phi_49_50_ladder_3;
            _2245 = frontier_phi_49_50_ladder;
            _2247 = frontier_phi_49_50_ladder_2;
            _2249 = frontier_phi_49_50_ladder_1;
        }
        float _2254 = isnan(1.0) ? _629 : (isnan(_629) ? 1.0 : min(_629, 1.0));
        _2017 = (_2254 * _2245) + _1744;
        _2019 = (_2254 * _2247) + _1745;
        _2021 = (_2254 * _2249) + _1746;
        _2023 = ((_2239 * 0.039999999105930328369140625) * _2254) + _1900;
        _2025 = ((_2241 * 0.039999999105930328369140625) * _2254) + _1901;
        _2027 = ((_2243 * 0.039999999105930328369140625) * _2254) + _1902;
    }
    else
    {
        _2017 = _1744;
        _2019 = _1745;
        _2021 = _1746;
        _2023 = _1900;
        _2025 = _1901;
        _2027 = _1902;
    }
    float _3826 = isnan(0.0) ? _615 : (isnan(_615) ? 0.0 : max(_615, 0.0));
    float _3837 = isnan(0.0) ? _616 : (isnan(_616) ? 0.0 : max(_616, 0.0));
    float _3848 = isnan(0.0) ? _617 : (isnan(_617) ? 0.0 : max(_617, 0.0));
    float _2044 = ((isnan(1.0) ? _3826 : (isnan(_3826) ? 1.0 : min(_3826, 1.0))) * (_2017 + ((isnan(0.0) ? _1356 : (isnan(_1356) ? 0.0 : max(_1356, 0.0))) * _629))) + ((_2023 + ((isnan(0.0) ? _1646 : (isnan(_1646) ? 0.0 : max(_1646, 0.0))) * _1435)) * cbPerFrame._m0[3u].x);
    float _2045 = ((isnan(1.0) ? _3837 : (isnan(_3837) ? 1.0 : min(_3837, 1.0))) * (_2019 + ((isnan(0.0) ? _1359 : (isnan(_1359) ? 0.0 : max(_1359, 0.0))) * _629))) + ((_2025 + ((isnan(0.0) ? _1649 : (isnan(_1649) ? 0.0 : max(_1649, 0.0))) * _1435)) * cbPerFrame._m0[3u].x);
    float _2046 = ((isnan(1.0) ? _3848 : (isnan(_3848) ? 1.0 : min(_3848, 1.0))) * (_2021 + ((isnan(0.0) ? _1362 : (isnan(_1362) ? 0.0 : max(_1362, 0.0))) * _629))) + ((_2027 + ((isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0))) * _1435)) * cbPerFrame._m0[3u].x);
    uint _2050 = _603 + 6u;
    float _2058 = _562 / cbSceneParam._m0[86u].x;
    float _2059 = _563 / cbSceneParam._m0[86u].y;
    vec4 _2073 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2058, _2059, (log2((isnan(cbSceneParam._m0[77u].w) ? _549 : (isnan(_549) ? cbSceneParam._m0[77u].w : min(_549, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2075 = _2073.x;
    float _2076 = _2073.y;
    float _2077 = _2073.z;
    float _2078 = _2073.w;
    float _2158;
    float _2160;
    float _2162;
    float _2164;
    if (_549 > cbSceneParam._m0[78u].w)
    {
        float _2120 = isnan(_549) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _549 : min(cbSceneParam._m0[80u].w, _549));
        float _2121 = _2120 / _549;
        float _2132 = _2121 * _261;
        float _2133 = _262 * _2121;
        float _2134 = (-0.0) - _2133;
        float _2135 = _2121 * _263;
        float _2137 = (cbSceneParam._m0[77u].w * _2134) / _2120;
        float _2138 = _2137 + cbSceneParam._m0[79u].w;
        float _2139 = cbSceneParam._m0[79u].w - _2133;
        float _2145 = sqrt(((_2132 * _2132) + (_2133 * _2133)) + (_2135 * _2135));
        float _2148 = (1.0 - (cbSceneParam._m0[77u].w / _2120)) * _2145;
        float _2154 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2156 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2365;
        if (abs((_2134 - _2137) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2365 = ((((_2138 > 0.0) ? exp2(_2154 * _2138) : (2.0 - exp2(_2156 * _2138))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2148;
        }
        else
        {
            float _2300 = 1.0 / cbSceneParam._m0[80u].x;
            float _2301 = isnan(_2139) ? _2138 : (isnan(_2138) ? _2139 : max(_2138, _2139));
            float _2302 = isnan(_2139) ? _2138 : (isnan(_2138) ? _2139 : min(_2138, _2139));
            float _2311 = isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : min(_2301, 0.0));
            float _2312 = isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : min(_2302, 0.0));
            _2365 = ((abs(_2145 / _2134) * cbSceneParam._m0[80u].y) * ((((_2311 - _2312) * 2.0) - ((exp2(_2154 * (isnan(0.0) ? _2301 : (isnan(_2301) ? 0.0 : max(_2301, 0.0)))) - exp2(_2154 * (isnan(0.0) ? _2302 : (isnan(_2302) ? 0.0 : max(_2302, 0.0))))) * _2300)) - ((exp2(_2156 * _2311) - exp2(_2156 * _2312)) * _2300))) + (_2148 * cbSceneParam._m0[80u].z);
        }
        vec4 _2367 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2058, _2059, 1.0), 0.0);
        float _2376 = exp2((_2365 * (-1.44269502162933349609375)) * (1.0 - _2367.w));
        float _2377 = log2(_2376);
        float _2393 = log2(_2078);
        _2158 = (exp2(_2393 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2377 * cbSceneParam._m0[78u].x)) * _2367.x) / cbSceneParam._m0[78u].x)) + _2075;
        _2160 = (exp2(_2393 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2377 * cbSceneParam._m0[78u].y)) * _2367.y) / cbSceneParam._m0[78u].y)) + _2076;
        _2162 = (exp2(_2393 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2377 * cbSceneParam._m0[78u].z)) * _2367.z) / cbSceneParam._m0[78u].z)) + _2077;
        _2164 = _2376 * _2078;
    }
    else
    {
        _2158 = _2075;
        _2160 = _2076;
        _2162 = _2077;
        _2164 = _2078;
    }
    float _2176 = roundEven(cbMatDynParam._m0[0u].y);
    bool _2177 = _2176 == 3.0;
    float _2178 = log2(_2164);
    float _2185 = exp2(_2178 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _2044 : (isnan(_2044) ? 0.0 : max(_2044, 0.0)));
    float _2186 = exp2(_2178 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _2045 : (isnan(_2045) ? 0.0 : max(_2045, 0.0)));
    float _2187 = exp2(_2178 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _2046 : (isnan(_2046) ? 0.0 : max(_2046, 0.0)));
    float _2196 = (_2176 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2196 * (_2177 ? _2185 : (_2185 + (cbSceneParam._m0[72u].w * _2158)));
    SV_Target.y = _2196 * (_2177 ? _2186 : (_2186 + (cbSceneParam._m0[72u].w * _2160)));
    SV_Target.z = _2196 * (_2177 ? _2187 : (_2187 + (cbSceneParam._m0[72u].w * _2162)));
    SV_Target.w = cbInstanceData._m0[_2050].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_2050].w;
}


