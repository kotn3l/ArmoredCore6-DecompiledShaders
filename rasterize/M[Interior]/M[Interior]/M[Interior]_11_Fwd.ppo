#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _784;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _174 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _175 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _176 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _181 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _188 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _192 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _240 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _250 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _240);
    float _251 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _240);
    float _252 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _240);
    vec4 _274 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _309 = cbMtdParam._m0[21u].w + _250;
    float _310 = cbMtdParam._m0[22u].x + _251;
    float _311 = cbMtdParam._m0[22u].y + _252;
    float _328 = (-0.0) - dot(vec3(_309, _310, _311), vec3(_181 * _174, _181 * _175, _181 * _176));
    float _329 = (-0.0) - dot(vec3(_309, _310, _311), vec3(_192 * TANGENT.x, _192 * TANGENT.y, _192 * TANGENT.z));
    float _330 = (-0.0) - dot(vec3(_309, _310, _311), vec3((-0.0) - (NORMAL.x * _188), (-0.0) - (NORMAL.y * _188), (-0.0) - (NORMAL.z * _188)));
    float _334 = inversesqrt(dot(vec3(_328, _329, _330), vec3(_328, _329, _330)));
    float _337 = _334 * _330;
    float _340 = ((_334 * _328) + (((_274.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w)) * cbMtdParam._m0[18u].z;
    float _341 = ((_334 * _329) + (((_274.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x)) * cbMtdParam._m0[18u].y;
    float _342 = fract(TEXCOORD.x);
    float _343 = fract(TEXCOORD.y);
    float _349;
    if (_340 > 0.0)
    {
        _349 = (1.0 - _342) / _340;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_340 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _342) / _340;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _349 = frontier_phi_3_2_ladder;
    }
    float _357;
    if (_341 > 0.0)
    {
        _357 = (1.0 - _343) / _341;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_341 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _343) / _341;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _357 = frontier_phi_7_6_ladder;
    }
    float _361 = (_337 > 0.0) ? (cbMtdParam._m0[15u].x / _337) : 5000.0;
    float _362 = isnan(_357) ? _349 : (isnan(_349) ? _357 : min(_349, _357));
    float _363 = isnan(_361) ? _362 : (isnan(_362) ? _361 : min(_362, _361));
    float _367 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _374 = ((_363 * _337) + _367) / _367;
    vec4 _398 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_342 + (-0.5)) + (_363 * _340)) / _374) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_343 + (-0.5)) + (_363 * _341)) / _374) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _408 = cbMtdParam._m0[9u].x * _398.x;
    float _409 = cbMtdParam._m0[9u].y * _398.y;
    float _410 = cbMtdParam._m0[9u].z * _398.z;
    float _2672 = isnan(0.0) ? _408 : (isnan(_408) ? 0.0 : max(_408, 0.0));
    float _2683 = isnan(0.0) ? _409 : (isnan(_409) ? 0.0 : max(_409, 0.0));
    float _2694 = isnan(0.0) ? _410 : (isnan(_410) ? 0.0 : max(_410, 0.0));
    float _429 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _433 = inversesqrt(dot(vec3(_250, _251, _252), vec3(_250, _251, _252)));
    float _434 = _250 * _433;
    float _435 = _251 * _433;
    float _436 = _252 * _433;
    float _442 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _443 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _456 = uint(roundEven(NORMAL.w)) * 13u;
    uint _459 = (_456 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _465 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2672 : (isnan(_2672) ? 1.0 : min(_2672, 1.0)))) * cbInstanceData._m0[_459].x;
    float _466 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2683 : (isnan(_2683) ? 1.0 : min(_2683, 1.0)))) * cbInstanceData._m0[_459].y;
    float _467 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2694 : (isnan(_2694) ? 1.0 : min(_2694, 1.0)))) * cbInstanceData._m0[_459].z;
    float _2705 = isnan(0.0) ? _465 : (isnan(_465) ? 0.0 : max(_465, 0.0));
    float _468 = isnan(1.0) ? _2705 : (isnan(_2705) ? 1.0 : min(_2705, 1.0));
    float _2716 = isnan(0.0) ? _466 : (isnan(_466) ? 0.0 : max(_466, 0.0));
    float _469 = isnan(1.0) ? _2716 : (isnan(_2716) ? 1.0 : min(_2716, 1.0));
    float _2727 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _470 = isnan(1.0) ? _2727 : (isnan(_2727) ? 1.0 : min(_2727, 1.0));
    vec4 _479 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _442, cbSceneParam._m0[86u].y * _443));
    float _482 = _479.x * TEXCOORD.z;
    float _483 = (-0.0) - _434;
    float _484 = (-0.0) - _435;
    float _485 = (-0.0) - _436;
    float _507 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _511 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _515 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _783;
    float _785;
    float _786;
    float _787;
    float _788;
    float _789;
    float _790;
    float _791;
    float _792;
    float _793;
    float _794;
    float _795;
    float _796;
    float _797;
    float _798;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _571 = (cbModelParam._m0[37u].x * ((((fma(_515, cbModelParam._m0[26u].z, fma(_511, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _507)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _573 = (cbModelParam._m0[37u].y * ((((fma(_515, cbModelParam._m0[27u].z, fma(_511, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _507)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _574 = (((((fma(_515, cbModelParam._m0[28u].z, fma(_511, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _507)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _577 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _584 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _591 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        vec4 _598 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_571, _573, _574), 0.0);
        float _611 = exp2((_577.w + (-0.5)) * 20.0) * 2.0;
        float _612 = _611 * (_577.x + (-0.5));
        float _613 = _611 * (_577.y + (-0.5));
        float _614 = _611 * (_577.z + (-0.5));
        float _621 = exp2((_584.w + (-0.5)) * 20.0) * 2.0;
        float _622 = _621 * (_584.x + (-0.5));
        float _623 = _621 * (_584.y + (-0.5));
        float _624 = _621 * (_584.z + (-0.5));
        float _631 = exp2((_591.w + (-0.5)) * 20.0) * 2.0;
        float _632 = _631 * (_591.x + (-0.5));
        float _633 = _631 * (_591.y + (-0.5));
        float _634 = _631 * (_591.z + (-0.5));
        float _641 = exp2((_598.w + (-0.5)) * 20.0) * 2.0;
        float _642 = _641 * (_598.x + (-0.5));
        float _643 = _641 * (_598.y + (-0.5));
        float _644 = _641 * (_598.z + (-0.5));
        float _645 = isnan(0.0) ? _642 : (isnan(_642) ? 0.0 : max(_642, 0.0));
        float _646 = isnan(0.0) ? _643 : (isnan(_643) ? 0.0 : max(_643, 0.0));
        float _647 = isnan(0.0) ? _644 : (isnan(_644) ? 0.0 : max(_644, 0.0));
        float _648 = _612 * 0.5;
        float _649 = _622 * 0.5;
        float _650 = _632 * 0.5;
        float _651 = dot(vec3(_648, _649, _650), vec3(_648, _649, _650));
        float _656 = (_651 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_651);
        float _665 = (dot(vec3(0.0), vec3(_656 * _648, _656 * _649, _656 * _650)) + 1.0) * 0.5;
        float _2753 = isnan(0.0) ? _665 : (isnan(_665) ? 0.0 : max(_665, 0.0));
        float _675 = sqrt(((_649 * _649) + (_648 * _648)) + (_650 * _650)) / (_645 + 9.9999997473787516355514526367188e-06);
        float _2764 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        float _676 = isnan(1.0) ? _2764 : (isnan(_2764) ? 1.0 : min(_2764, 1.0));
        float _677 = _676 * 2.0;
        float _681 = (1.0 - _676) / (_676 + 1.0);
        float _2775 = isnan(0.0) ? _681 : (isnan(_681) ? 0.0 : max(_681, 0.0));
        float _682 = isnan(1.0) ? _2775 : (isnan(_2775) ? 1.0 : min(_2775, 1.0));
        float _691 = ((((1.0 - _682) * (_677 + 2.0)) * exp2(log2(isnan(1.0) ? _2753 : (isnan(_2753) ? 1.0 : min(_2753, 1.0))) * (_677 + 1.0))) + _682) * _645;
        float _692 = _613 * 0.5;
        float _693 = _623 * 0.5;
        float _694 = _633 * 0.5;
        float _695 = dot(vec3(_692, _693, _694), vec3(_692, _693, _694));
        float _700 = (_695 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_695);
        float _708 = (dot(vec3(0.0), vec3(_700 * _692, _700 * _693, _700 * _694)) + 1.0) * 0.5;
        float _2786 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _717 = sqrt(((_693 * _693) + (_692 * _692)) + (_694 * _694)) / (_646 + 9.9999997473787516355514526367188e-06);
        float _2797 = isnan(0.0) ? _717 : (isnan(_717) ? 0.0 : max(_717, 0.0));
        float _718 = isnan(1.0) ? _2797 : (isnan(_2797) ? 1.0 : min(_2797, 1.0));
        float _719 = _718 * 2.0;
        float _723 = (1.0 - _718) / (_718 + 1.0);
        float _2808 = isnan(0.0) ? _723 : (isnan(_723) ? 0.0 : max(_723, 0.0));
        float _724 = isnan(1.0) ? _2808 : (isnan(_2808) ? 1.0 : min(_2808, 1.0));
        float _733 = ((((1.0 - _724) * (_719 + 2.0)) * exp2(log2(isnan(1.0) ? _2786 : (isnan(_2786) ? 1.0 : min(_2786, 1.0))) * (_719 + 1.0))) + _724) * _646;
        float _734 = _614 * 0.5;
        float _735 = _624 * 0.5;
        float _736 = _634 * 0.5;
        float _737 = dot(vec3(_734, _735, _736), vec3(_734, _735, _736));
        float _742 = (_737 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_737);
        float _750 = (dot(vec3(0.0), vec3(_742 * _734, _742 * _735, _742 * _736)) + 1.0) * 0.5;
        float _2819 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        float _759 = sqrt(((_735 * _735) + (_734 * _734)) + (_736 * _736)) / (_647 + 9.9999997473787516355514526367188e-06);
        float _2830 = isnan(0.0) ? _759 : (isnan(_759) ? 0.0 : max(_759, 0.0));
        float _760 = isnan(1.0) ? _2830 : (isnan(_2830) ? 1.0 : min(_2830, 1.0));
        float _761 = _760 * 2.0;
        float _765 = (1.0 - _760) / (_760 + 1.0);
        float _2841 = isnan(0.0) ? _765 : (isnan(_765) ? 0.0 : max(_765, 0.0));
        float _766 = isnan(1.0) ? _2841 : (isnan(_2841) ? 1.0 : min(_2841, 1.0));
        float _775 = ((((1.0 - _766) * (_761 + 2.0)) * exp2(log2(isnan(1.0) ? _2819 : (isnan(_2819) ? 1.0 : min(_2819, 1.0))) * (_761 + 1.0))) + _766) * _647;
        _783 = _614;
        _785 = _613;
        _786 = _612;
        _787 = _624;
        _788 = _623;
        _789 = _622;
        _790 = _634;
        _791 = _633;
        _792 = _632;
        _793 = _647;
        _794 = _646;
        _795 = _645;
        _796 = cbModelParam._m0[36u].z * (isnan(0.0) ? _691 : (isnan(_691) ? 0.0 : max(_691, 0.0)));
        _797 = cbModelParam._m0[36u].z * (isnan(0.0) ? _733 : (isnan(_733) ? 0.0 : max(_733, 0.0)));
        _798 = cbModelParam._m0[36u].z * (isnan(0.0) ? _775 : (isnan(_775) ? 0.0 : max(_775, 0.0)));
    }
    else
    {
        _783 = _784;
        _785 = _784;
        _786 = _784;
        _787 = _784;
        _788 = _784;
        _789 = _784;
        _790 = _784;
        _791 = _784;
        _792 = _784;
        _793 = _784;
        _794 = _784;
        _795 = _784;
        _796 = 0.0;
        _797 = 0.0;
        _798 = 0.0;
    }
    float _1059;
    float _1060;
    float _1061;
    float _1062;
    float _1063;
    float _1064;
    float _1065;
    float _1066;
    float _1067;
    float _1068;
    float _1069;
    float _1070;
    float _1071;
    float _1072;
    float _1073;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _852 = (cbModelParam._m0[38u].x * ((((fma(_515, cbModelParam._m0[30u].z, fma(_511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _507)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _853 = (cbModelParam._m0[38u].y * ((((fma(_515, cbModelParam._m0[31u].z, fma(_511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _507)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _854 = (((((fma(_515, cbModelParam._m0[32u].z, fma(_511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _507)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _856 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _863 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _870 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        vec4 _877 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_852, _853, _854), 0.0);
        float _889 = exp2((_856.w + (-0.5)) * 20.0) * 2.0;
        float _890 = _889 * (_856.x + (-0.5));
        float _891 = _889 * (_856.y + (-0.5));
        float _892 = _889 * (_856.z + (-0.5));
        float _899 = exp2((_863.w + (-0.5)) * 20.0) * 2.0;
        float _900 = _899 * (_863.x + (-0.5));
        float _901 = _899 * (_863.y + (-0.5));
        float _902 = _899 * (_863.z + (-0.5));
        float _909 = exp2((_870.w + (-0.5)) * 20.0) * 2.0;
        float _910 = _909 * (_870.x + (-0.5));
        float _911 = _909 * (_870.y + (-0.5));
        float _912 = _909 * (_870.z + (-0.5));
        float _919 = exp2((_877.w + (-0.5)) * 20.0) * 2.0;
        float _920 = _919 * (_877.x + (-0.5));
        float _921 = _919 * (_877.y + (-0.5));
        float _922 = _919 * (_877.z + (-0.5));
        float _923 = isnan(0.0) ? _920 : (isnan(_920) ? 0.0 : max(_920, 0.0));
        float _924 = isnan(0.0) ? _921 : (isnan(_921) ? 0.0 : max(_921, 0.0));
        float _925 = isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0));
        float _926 = _890 * 0.5;
        float _927 = _900 * 0.5;
        float _928 = _910 * 0.5;
        float _929 = dot(vec3(_926, _927, _928), vec3(_926, _927, _928));
        float _934 = (_929 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_929);
        float _942 = (dot(vec3(0.0), vec3(_934 * _926, _934 * _927, _934 * _928)) + 1.0) * 0.5;
        float _2882 = isnan(0.0) ? _942 : (isnan(_942) ? 0.0 : max(_942, 0.0));
        float _951 = sqrt(((_927 * _927) + (_926 * _926)) + (_928 * _928)) / (_923 + 9.9999997473787516355514526367188e-06);
        float _2893 = isnan(0.0) ? _951 : (isnan(_951) ? 0.0 : max(_951, 0.0));
        float _952 = isnan(1.0) ? _2893 : (isnan(_2893) ? 1.0 : min(_2893, 1.0));
        float _953 = _952 * 2.0;
        float _957 = (1.0 - _952) / (_952 + 1.0);
        float _2904 = isnan(0.0) ? _957 : (isnan(_957) ? 0.0 : max(_957, 0.0));
        float _958 = isnan(1.0) ? _2904 : (isnan(_2904) ? 1.0 : min(_2904, 1.0));
        float _967 = ((((1.0 - _958) * (_953 + 2.0)) * exp2(log2(isnan(1.0) ? _2882 : (isnan(_2882) ? 1.0 : min(_2882, 1.0))) * (_953 + 1.0))) + _958) * _923;
        float _968 = _891 * 0.5;
        float _969 = _901 * 0.5;
        float _970 = _911 * 0.5;
        float _971 = dot(vec3(_968, _969, _970), vec3(_968, _969, _970));
        float _976 = (_971 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_971);
        float _984 = (dot(vec3(0.0), vec3(_976 * _968, _976 * _969, _976 * _970)) + 1.0) * 0.5;
        float _2915 = isnan(0.0) ? _984 : (isnan(_984) ? 0.0 : max(_984, 0.0));
        float _993 = sqrt(((_969 * _969) + (_968 * _968)) + (_970 * _970)) / (_924 + 9.9999997473787516355514526367188e-06);
        float _2926 = isnan(0.0) ? _993 : (isnan(_993) ? 0.0 : max(_993, 0.0));
        float _994 = isnan(1.0) ? _2926 : (isnan(_2926) ? 1.0 : min(_2926, 1.0));
        float _995 = _994 * 2.0;
        float _999 = (1.0 - _994) / (_994 + 1.0);
        float _2937 = isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0));
        float _1000 = isnan(1.0) ? _2937 : (isnan(_2937) ? 1.0 : min(_2937, 1.0));
        float _1009 = ((((1.0 - _1000) * (_995 + 2.0)) * exp2(log2(isnan(1.0) ? _2915 : (isnan(_2915) ? 1.0 : min(_2915, 1.0))) * (_995 + 1.0))) + _1000) * _924;
        float _1010 = _892 * 0.5;
        float _1011 = _902 * 0.5;
        float _1012 = _912 * 0.5;
        float _1013 = dot(vec3(_1010, _1011, _1012), vec3(_1010, _1011, _1012));
        float _1018 = (_1013 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1013);
        float _1026 = (dot(vec3(0.0), vec3(_1018 * _1010, _1018 * _1011, _1018 * _1012)) + 1.0) * 0.5;
        float _2948 = isnan(0.0) ? _1026 : (isnan(_1026) ? 0.0 : max(_1026, 0.0));
        float _1035 = sqrt(((_1011 * _1011) + (_1010 * _1010)) + (_1012 * _1012)) / (_925 + 9.9999997473787516355514526367188e-06);
        float _2959 = isnan(0.0) ? _1035 : (isnan(_1035) ? 0.0 : max(_1035, 0.0));
        float _1036 = isnan(1.0) ? _2959 : (isnan(_2959) ? 1.0 : min(_2959, 1.0));
        float _1037 = _1036 * 2.0;
        float _1041 = (1.0 - _1036) / (_1036 + 1.0);
        float _2970 = isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0));
        float _1042 = isnan(1.0) ? _2970 : (isnan(_2970) ? 1.0 : min(_2970, 1.0));
        float _1051 = ((((1.0 - _1042) * (_1037 + 2.0)) * exp2(log2(isnan(1.0) ? _2948 : (isnan(_2948) ? 1.0 : min(_2948, 1.0))) * (_1037 + 1.0))) + _1042) * _925;
        _1059 = _892;
        _1060 = _891;
        _1061 = _890;
        _1062 = _902;
        _1063 = _901;
        _1064 = _900;
        _1065 = _912;
        _1066 = _911;
        _1067 = _910;
        _1068 = _925;
        _1069 = _924;
        _1070 = _923;
        _1071 = cbModelParam._m0[36u].w * (isnan(0.0) ? _967 : (isnan(_967) ? 0.0 : max(_967, 0.0)));
        _1072 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1009 : (isnan(_1009) ? 0.0 : max(_1009, 0.0)));
        _1073 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1051 : (isnan(_1051) ? 0.0 : max(_1051, 0.0)));
    }
    else
    {
        _1059 = _784;
        _1060 = _784;
        _1061 = _784;
        _1062 = _784;
        _1063 = _784;
        _1064 = _784;
        _1065 = _784;
        _1066 = _784;
        _1067 = _784;
        _1068 = _784;
        _1069 = _784;
        _1070 = _784;
        _1071 = 0.0;
        _1072 = 0.0;
        _1073 = 0.0;
    }
    float _1083 = (cbModelParam._m0[1u].x * (_1071 - _796)) + _796;
    float _1084 = (cbModelParam._m0[1u].x * (_1072 - _797)) + _797;
    float _1085 = (cbModelParam._m0[1u].x * (_1073 - _798)) + _798;
    float _1106 = fma(_1085, cbSceneParam._m0[89u].z, fma(_1084, cbSceneParam._m0[89u].y, _1083 * cbSceneParam._m0[89u].x));
    float _1109 = fma(_1085, cbSceneParam._m0[90u].z, fma(_1084, cbSceneParam._m0[90u].y, _1083 * cbSceneParam._m0[90u].x));
    float _1112 = fma(_1085, cbSceneParam._m0[91u].z, fma(_1084, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1083));
    float _1127 = _434 * (-0.5);
    float _1128 = _435 * (-0.5);
    float _1129 = _436 * (-0.5);
    float _1130 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1061, _1064, _1067, _1070));
    float _1133 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1060, _1063, _1066, _1069));
    float _1136 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_1059, _1062, _1065, _1068));
    float _1170;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1143 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_783, _787, _790, _793));
        float _1147 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_785, _788, _791, _794));
        float _1151 = dot(vec4(_1127, _1128, _1129, 1.0), vec4(_786, _789, _792, _795));
        float _1158 = dot(vec4(cbModelParam._m0[39u]), vec4(_1127, _1128, _1129, 1.0));
        _1170 = dot(vec3(isnan(0.0) ? _1151 : (isnan(_1151) ? 0.0 : max(_1151, 0.0)), isnan(0.0) ? _1147 : (isnan(_1147) ? 0.0 : max(_1147, 0.0)), isnan(0.0) ? _1143 : (isnan(_1143) ? 0.0 : max(_1143, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1158) ? 0.0 : (isnan(0.0) ? _1158 : max(0.0, _1158))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1170 = 1.0;
    }
    float _1181;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1172 = dot(vec4(cbModelParam._m0[40u]), vec4(_1127, _1128, _1129, 1.0));
        _1181 = dot(vec3(isnan(0.0) ? _1130 : (isnan(_1130) ? 0.0 : max(_1130, 0.0)), isnan(0.0) ? _1133 : (isnan(_1133) ? 0.0 : max(_1133, 0.0)), isnan(0.0) ? _1136 : (isnan(_1136) ? 0.0 : max(_1136, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1172) ? 0.0 : (isnan(0.0) ? _1172 : max(0.0, _1172))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1181 = 1.0;
    }
    float _1185 = (_1181 * cbModelParam._m0[1u].x) + (_1170 * (1.0 - cbModelParam._m0[1u].x));
    float _1194 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1276;
    float _1278;
    float _1280;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1243 = fma(_515, cbModelParam._m0[13u].z, fma(_511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _507)) + cbModelParam._m0[13u].w;
        float _1247 = fma(_515, cbModelParam._m0[14u].z, fma(_511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _507)) + cbModelParam._m0[14u].w;
        float _1251 = fma(_515, cbModelParam._m0[15u].z, fma(_511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _507)) + cbModelParam._m0[15u].w;
        float _1254 = fma(_485, cbModelParam._m0[13u].z, fma(_484, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _483));
        float _1257 = fma(_485, cbModelParam._m0[14u].z, fma(_484, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _483));
        float _1260 = fma(_485, cbModelParam._m0[15u].z, fma(_484, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _483));
        float _1286;
        if (_1254 > 0.0)
        {
            _1286 = abs((1.0 - _1243) / _1254);
        }
        else
        {
            float frontier_phi_22_20_ladder;
            if (_1254 < 0.0)
            {
                frontier_phi_22_20_ladder = abs((_1243 + 1.0) / _1254);
            }
            else
            {
                frontier_phi_22_20_ladder = 5000.0;
            }
            _1286 = frontier_phi_22_20_ladder;
        }
        float _1582;
        if (_1257 > 0.0)
        {
            _1582 = abs((1.0 - _1247) / _1257);
        }
        else
        {
            float frontier_phi_31_27_ladder;
            if (_1257 < 0.0)
            {
                frontier_phi_31_27_ladder = abs((_1247 + 1.0) / _1257);
            }
            else
            {
                frontier_phi_31_27_ladder = 5000.0;
            }
            _1582 = frontier_phi_31_27_ladder;
        }
        float _1885;
        if (_1260 > 0.0)
        {
            _1885 = abs((1.0 - _1251) / _1260);
        }
        else
        {
            float frontier_phi_45_38_ladder;
            if (_1260 < 0.0)
            {
                frontier_phi_45_38_ladder = abs((_1251 + 1.0) / _1260);
            }
            else
            {
                frontier_phi_45_38_ladder = 5000.0;
            }
            _1885 = frontier_phi_45_38_ladder;
        }
        float _1887 = isnan(_1582) ? _1286 : (isnan(_1286) ? _1582 : min(_1286, _1582));
        float _1888 = isnan(_1885) ? _1887 : (isnan(_1887) ? _1885 : min(_1887, _1885));
        float _1892 = (_1888 * _1254) + _1243;
        float _1893 = (_1888 * _1257) + _1247;
        float _1894 = (_1888 * _1260) + _1251;
        float _1895 = _1888 * 9.9999997473787516355514526367188e-05;
        float _1896 = (-1.0) - _1895;
        float _1898 = _1895 + 1.0;
        float frontier_phi_21_45_ladder;
        float frontier_phi_21_45_ladder_1;
        float frontier_phi_21_45_ladder_2;
        if ((_1894 > _1898) || ((_1894 < _1896) || ((_1893 > _1898) || ((_1893 < _1896) || ((_1892 < _1896) || (_1892 > _1898))))))
        {
            frontier_phi_21_45_ladder = 0.0;
            frontier_phi_21_45_ladder_1 = 0.0;
            frontier_phi_21_45_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2017 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1894, cbModelParam._m0[9u].z, fma(_1893, cbModelParam._m0[9u].y, _1892 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1894, cbModelParam._m0[10u].z, fma(_1893, cbModelParam._m0[10u].y, _1892 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1894, cbModelParam._m0[11u].z, fma(_1893, cbModelParam._m0[11u].y, _1892 * cbModelParam._m0[11u].x))), _1194);
            frontier_phi_21_45_ladder = _2017.z * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_1 = _2017.y * cbModelParam._m0[1u].y;
            frontier_phi_21_45_ladder_2 = _2017.x * cbModelParam._m0[1u].y;
        }
        _1276 = frontier_phi_21_45_ladder_2;
        _1278 = frontier_phi_21_45_ladder_1;
        _1280 = frontier_phi_21_45_ladder;
    }
    else
    {
        vec4 _1264 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_483, _484, _485), _1194);
        _1276 = _1264.x * cbModelParam._m0[1u].y;
        _1278 = _1264.y * cbModelParam._m0[1u].y;
        _1280 = _1264.z * cbModelParam._m0[1u].y;
    }
    float _1283 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1371;
    float _1373;
    float _1375;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1335 = fma(_515, cbModelParam._m0[21u].z, fma(_511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _507)) + cbModelParam._m0[21u].w;
        float _1339 = fma(_515, cbModelParam._m0[22u].z, fma(_511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _507)) + cbModelParam._m0[22u].w;
        float _1343 = fma(_515, cbModelParam._m0[23u].z, fma(_511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _507)) + cbModelParam._m0[23u].w;
        float _1346 = fma(_485, cbModelParam._m0[21u].z, fma(_484, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _483));
        float _1349 = fma(_485, cbModelParam._m0[22u].z, fma(_484, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _483));
        float _1352 = fma(_485, cbModelParam._m0[23u].z, fma(_484, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _483));
        float _1587;
        if (_1346 > 0.0)
        {
            _1587 = abs((1.0 - _1335) / _1346);
        }
        else
        {
            float frontier_phi_33_29_ladder;
            if (_1346 < 0.0)
            {
                frontier_phi_33_29_ladder = abs((_1335 + 1.0) / _1346);
            }
            else
            {
                frontier_phi_33_29_ladder = 5000.0;
            }
            _1587 = frontier_phi_33_29_ladder;
        }
        float _1911;
        if (_1349 > 0.0)
        {
            _1911 = abs((1.0 - _1339) / _1349);
        }
        else
        {
            float frontier_phi_47_40_ladder;
            if (_1349 < 0.0)
            {
                frontier_phi_47_40_ladder = abs((_1339 + 1.0) / _1349);
            }
            else
            {
                frontier_phi_47_40_ladder = 5000.0;
            }
            _1911 = frontier_phi_47_40_ladder;
        }
        float _2077;
        if (_1352 > 0.0)
        {
            _2077 = abs((1.0 - _1343) / _1352);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1352 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1343 + 1.0) / _1352);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _2077 = frontier_phi_61_56_ladder;
        }
        float _2079 = isnan(_1911) ? _1587 : (isnan(_1587) ? _1911 : min(_1587, _1911));
        float _2080 = isnan(_2077) ? _2079 : (isnan(_2079) ? _2077 : min(_2079, _2077));
        float _2084 = (_2080 * _1346) + _1335;
        float _2085 = (_2080 * _1349) + _1339;
        float _2086 = (_2080 * _1352) + _1343;
        float _2087 = _2080 * 9.9999997473787516355514526367188e-05;
        float _2088 = (-1.0) - _2087;
        float _2090 = _2087 + 1.0;
        float frontier_phi_30_61_ladder;
        float frontier_phi_30_61_ladder_1;
        float frontier_phi_30_61_ladder_2;
        if ((_2086 > _2090) || ((_2086 < _2088) || ((_2085 > _2090) || ((_2085 < _2088) || ((_2084 < _2088) || (_2084 > _2090))))))
        {
            frontier_phi_30_61_ladder = 0.0;
            frontier_phi_30_61_ladder_1 = 0.0;
            frontier_phi_30_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2269 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2086, cbModelParam._m0[17u].z, fma(_2085, cbModelParam._m0[17u].y, _2084 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2086, cbModelParam._m0[18u].z, fma(_2085, cbModelParam._m0[18u].y, _2084 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2086, cbModelParam._m0[19u].z, fma(_2085, cbModelParam._m0[19u].y, _2084 * cbModelParam._m0[19u].x))), _1283);
            frontier_phi_30_61_ladder = _2269.z * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_1 = _2269.y * cbModelParam._m0[1u].z;
            frontier_phi_30_61_ladder_2 = _2269.x * cbModelParam._m0[1u].z;
        }
        _1371 = frontier_phi_30_61_ladder_2;
        _1373 = frontier_phi_30_61_ladder_1;
        _1375 = frontier_phi_30_61_ladder;
    }
    else
    {
        vec4 _1355 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_483, _484, _485), _1283);
        _1371 = _1355.x * cbModelParam._m0[1u].z;
        _1373 = _1355.y * cbModelParam._m0[1u].z;
        _1375 = _1355.z * cbModelParam._m0[1u].z;
    }
    float _1387 = _482 * 0.01200000010430812835693359375;
    float _1389 = _1387 * ((cbModelParam._m0[1u].w * (_1371 - _1276)) + _1276);
    float _1390 = _1387 * ((cbModelParam._m0[1u].w * (_1373 - _1278)) + _1278);
    float _1391 = _1387 * ((cbModelParam._m0[1u].w * (_1375 - _1280)) + _1280);
    float _1394 = fma(_1391, cbSceneParam._m0[89u].z, fma(_1390, cbSceneParam._m0[89u].y, _1389 * cbSceneParam._m0[89u].x));
    float _1397 = fma(_1391, cbSceneParam._m0[90u].z, fma(_1390, cbSceneParam._m0[90u].y, _1389 * cbSceneParam._m0[90u].x));
    float _1400 = fma(_1391, cbSceneParam._m0[91u].z, fma(_1390, cbSceneParam._m0[91u].y, _1389 * cbSceneParam._m0[91u].x));
    uvec4 _1411 = floatBitsToUint(cbInstanceData._m0[_456 + 5u]);
    uint _1413 = _1411.x * 14u;
    uint _1414 = _1413 + 13u;
    float _1419 = _482 + (-1.0);
    float _1422 = (cbLight._m0[_1414].x * _1419) + 1.0;
    float _1423 = (cbLight._m0[_1414].y * _1419) + 1.0;
    uint _1424 = _1413 + 5u;
    float _1430 = isnan(1.0) ? _1423 : (isnan(_1423) ? 1.0 : min(_1423, 1.0));
    uint _1434 = _1413 + 4u;
    float _1440 = isnan(1.0) ? _1422 : (isnan(_1422) ? 1.0 : min(_1422, 1.0));
    uint _1444 = _1413 | 1u;
    float _1455 = dot(vec3(cbLight._m0[_1413].xyz), vec3(0.0));
    float _1458 = dot(vec3(cbLight._m0[_1444].xyz), vec3(0.0));
    float _3106 = isnan(0.0) ? _1455 : (isnan(_1455) ? 0.0 : max(_1455, 0.0));
    float _3117 = isnan(0.0) ? _1458 : (isnan(_1458) ? 0.0 : max(_1458, 0.0));
    float _1463 = (isnan(1.0) ? _3106 : (isnan(_3106) ? 1.0 : min(_3106, 1.0))) * 0.3183098733425140380859375;
    float _1465 = (isnan(1.0) ? _3117 : (isnan(_3117) ? 1.0 : min(_3117, 1.0))) * 0.3183098733425140380859375;
    float _1472 = ((cbLight._m0[_1424].x * _1430) * _1465) + ((cbLight._m0[_1434].x * _1440) * _1463);
    float _1473 = ((_1430 * cbLight._m0[_1424].y) * _1465) + ((_1440 * cbLight._m0[_1434].y) * _1463);
    float _1474 = ((_1430 * cbLight._m0[_1424].z) * _1465) + ((_1440 * cbLight._m0[_1434].z) * _1463);
    uint _1475 = _1413 + 8u;
    float _1481 = cbLight._m0[_1413].x + _434;
    float _1482 = cbLight._m0[_1413].y + _435;
    float _1483 = cbLight._m0[_1413].z + _436;
    float _1487 = inversesqrt(dot(vec3(_1481, _1482, _1483), vec3(_1481, _1482, _1483)));
    float _1491 = dot(vec3(0.0), vec3(cbLight._m0[_1413].xyz));
    float _3128 = isnan(0.0) ? _1491 : (isnan(_1491) ? 0.0 : max(_1491, 0.0));
    float _1494 = isnan(1.0) ? _3128 : (isnan(_3128) ? 1.0 : min(_3128, 1.0));
    float _1495 = dot(vec3(0.0), vec3(_434, _435, _436));
    float _3139 = isnan(0.0) ? _1495 : (isnan(_1495) ? 0.0 : max(_1495, 0.0));
    float _1498 = isnan(1.0) ? _3139 : (isnan(_3139) ? 1.0 : min(_3139, 1.0));
    float _1499 = dot(vec3(cbLight._m0[_1413].xyz), vec3(_1481 * _1487, _1482 * _1487, _1483 * _1487));
    float _3150 = isnan(0.0) ? _1499 : (isnan(_1499) ? 0.0 : max(_1499, 0.0));
    float _1510 = (exp2(log2(1.0 - (isnan(1.0) ? _3150 : (isnan(_3150) ? 1.0 : min(_3150, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1516 = (0.5 / ((_1494 + 9.9999999392252902907785028219223e-09) + _1498)) * _1494;
    float _3161 = isnan(0.0) ? _1516 : (isnan(_1516) ? 0.0 : max(_1516, 0.0));
    float _1518 = (isnan(1.0) ? _3161 : (isnan(_3161) ? 1.0 : min(_3161, 1.0))) * 0.31831014156341552734375;
    uint _1529 = _1413 + 9u;
    float _1535 = cbLight._m0[_1444].x + _434;
    float _1536 = cbLight._m0[_1444].y + _435;
    float _1537 = cbLight._m0[_1444].z + _436;
    float _1541 = inversesqrt(dot(vec3(_1535, _1536, _1537), vec3(_1535, _1536, _1537)));
    float _1545 = dot(vec3(0.0), vec3(cbLight._m0[_1444].xyz));
    float _3172 = isnan(0.0) ? _1545 : (isnan(_1545) ? 0.0 : max(_1545, 0.0));
    float _1548 = isnan(1.0) ? _3172 : (isnan(_3172) ? 1.0 : min(_3172, 1.0));
    float _1549 = dot(vec3(cbLight._m0[_1444].xyz), vec3(_1535 * _1541, _1536 * _1541, _1537 * _1541));
    float _3183 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
    float _1558 = (exp2(log2(1.0 - (isnan(1.0) ? _3183 : (isnan(_3183) ? 1.0 : min(_3183, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1562 = (0.5 / ((_1548 + 9.9999999392252902907785028219223e-09) + _1498)) * _1548;
    float _3194 = isnan(0.0) ? _1562 : (isnan(_1562) ? 0.0 : max(_1562, 0.0));
    float _1564 = (isnan(1.0) ? _3194 : (isnan(_3194) ? 1.0 : min(_3194, 1.0))) * 0.31831014156341552734375;
    float _1574 = (((_1558 * cbLight._m0[_1529].x) * _1564) * _1430) + (((_1510 * cbLight._m0[_1475].x) * _1518) * _1440);
    float _1575 = (((_1558 * cbLight._m0[_1529].y) * _1564) * _1430) + (((_1510 * cbLight._m0[_1475].y) * _1518) * _1440);
    float _1576 = (((_1558 * cbLight._m0[_1529].z) * _1564) * _1430) + (((_1510 * cbLight._m0[_1475].z) * _1518) * _1440);
    float _1693;
    float _1695;
    float _1697;
    float _1699;
    float _1701;
    float _1703;
    if (_1411.y == 0u)
    {
        float _1632 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1633 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1632;
        float _1634 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1632;
        float _1635 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1632;
        uvec4 _1647 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1648 = _1647.x;
        uint _1659 = uint((float(_1647.y) * floor(float(uint(cbSceneParam._m0[85u].y * _443) / _1648))) + floor(float(uint(cbSceneParam._m0[85u].x * _442) / _1648)));
        float _1669 = (log2(_1635 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1670 = isnan(0.0) ? _1669 : (isnan(_1669) ? 0.0 : max(_1669, 0.0));
        uint _1673 = uint(isnan(14.0) ? _1670 : (isnan(_1670) ? 14.0 : min(_1670, 14.0)));
        uvec4 _1679 = texelFetch(g_lightClusterGridBuffer, int(((_1673 << 2u) + (_1659 << 6u)) >> 2u));
        uint _1680 = _1679.x;
        uint _1681 = _1647.z;
        float _1771;
        float _1773;
        float _1775;
        float _1777;
        float _1779;
        float _1781;
        if (((((1u << ((_1681 >> 4u) & 15u)) + 4294967295u) & _1680) == 0u) || ((_1681 & 240u) == 0u))
        {
            _1771 = 0.0;
            _1773 = 0.0;
            _1775 = 0.0;
            _1777 = 0.0;
            _1779 = 0.0;
            _1781 = 0.0;
        }
        else
        {
            float _1772;
            float _1774;
            float _1776;
            float _1778;
            float _1780;
            float _1782;
            float _1945 = 0.0;
            float _1946 = 0.0;
            float _1947 = 0.0;
            float _1948 = 0.0;
            float _1949 = 0.0;
            float _1950 = 0.0;
            uint _1951 = 0u;
            uint _1960;
            bool _1961;
            for (;;)
            {
                _1960 = texelFetch(g_lightClassification, int((((_1673 << 5u) + (_1659 << 9u)) + (_1951 << 2u)) >> 2u)).x;
                _1961 = _1960 == 0u;
                float frontier_phi_58_pred;
                float frontier_phi_58_pred_1;
                float frontier_phi_58_pred_2;
                float frontier_phi_58_pred_3;
                float frontier_phi_58_pred_4;
                float frontier_phi_58_pred_5;
                if (_1961)
                {
                    frontier_phi_58_pred = _1946;
                    frontier_phi_58_pred_1 = _1950;
                    frontier_phi_58_pred_2 = _1949;
                    frontier_phi_58_pred_3 = _1948;
                    frontier_phi_58_pred_4 = _1947;
                    frontier_phi_58_pred_5 = _1945;
                }
                else
                {
                    float _2120;
                    float _2121;
                    float _2122;
                    float _2123;
                    float _2124;
                    float _2125;
                    uint _2126;
                    _2120 = _1945;
                    _2121 = _1946;
                    _2122 = _1947;
                    _2123 = _1948;
                    _2124 = _1949;
                    _2125 = _1950;
                    _2126 = _1960;
                    float _2026;
                    float _2027;
                    float _2028;
                    float _2029;
                    float _2030;
                    float _2031;
                    for (;;)
                    {
                        uint _2130 = uint(findLSB(_2126)) + (_1951 << 5u);
                        uint _2127 = (_2126 + 4294967295u) & _2126;
                        uint _2132 = _2130 * 48u;
                        vec4 _2146 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2132)).x, texelFetch(g_PointLightRenderingBuffer, int(_2132 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2132 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2132 + 3u)).x));
                        uint _2152 = (_2130 * 48u) + 4u;
                        vec4 _2165 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2152)).x, texelFetch(g_PointLightRenderingBuffer, int(_2152 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2152 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2152 + 3u)).x));
                        uint _2171 = (_2130 * 48u) + 8u;
                        vec3 _2182 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2171)).x, texelFetch(g_PointLightRenderingBuffer, int(_2171 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2171 + 2u)).x));
                        float _2186 = _2146.x - _1633;
                        float _2187 = _2146.y - _1634;
                        float _2188 = _2146.z - _1635;
                        float _2189 = dot(vec3(_2186, _2187, _2188), vec3(_2186, _2187, _2188));
                        float _2192 = inversesqrt(_2189);
                        float _2201 = 1.0 - (_2189 * _2146.w);
                        float _3215 = isnan(0.0) ? _2201 : (isnan(_2201) ? 0.0 : max(_2201, 0.0));
                        float _2202 = isnan(1.0) ? _3215 : (isnan(_3215) ? 1.0 : min(_3215, 1.0));
                        float _2203 = sqrt(_2189) * _2165.w;
                        float _2206 = 1.39999997615814208984375 / (_2203 + 1.39999997615814208984375);
                        float _2207 = _2206 * _2206;
                        float _2210 = ((1.0 - _2207) * dot(vec3(0.0), vec3(_2192 * _2186, _2192 * _2187, _2192 * _2188))) + _2207;
                        float _2213 = _2203 * _2203;
                        float _2217 = ((isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0))) * _2202) / ((_2213 * 0.699999988079071044921875) + 1.0);
                        float _2221 = (-0.0) - _1633;
                        float _2222 = (-0.0) - _1634;
                        float _2223 = (-0.0) - _1635;
                        float _2227 = inversesqrt(dot(vec3(_2221, _2222, _2223), vec3(_2221, _2222, _2223)));
                        float _2231 = dot(vec3(0.0), vec3(_2227 * _2221, _2227 * _2222, _2227 * _2223));
                        float _3231 = isnan(0.0) ? _2231 : (isnan(_2231) ? 0.0 : max(_2231, 0.0));
                        float _3242 = isnan(0.0) ? _2210 : (isnan(_2210) ? 0.0 : max(_2210, 0.0));
                        float _2235 = isnan(1.0) ? _3242 : (isnan(_3242) ? 1.0 : min(_3242, 1.0));
                        float _2239 = (0.5 / (((isnan(1.0) ? _3231 : (isnan(_3231) ? 1.0 : min(_3231, 1.0))) + 9.9999999392252902907785028219223e-09) + _2235)) * _2235;
                        float _3253 = isnan(0.0) ? _2239 : (isnan(_2239) ? 0.0 : max(_2239, 0.0));
                        float _2248 = (((isnan(1.0) ? _3253 : (isnan(_3253) ? 1.0 : min(_3253, 1.0))) * 3.1415927410125732421875) / ((_2213 * 2.1991131305694580078125) + 3.141590118408203125)) * _2202;
                        _2029 = (_2217 * _2165.x) + _2123;
                        _2030 = (_2217 * _2165.y) + _2124;
                        _2031 = (_2217 * _2165.z) + _2125;
                        _2026 = (_2248 * _2182.x) + _2120;
                        _2027 = (_2248 * _2182.y) + _2121;
                        _2028 = (_2248 * _2182.z) + _2122;
                        if (_2127 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2120 = _2026;
                            _2121 = _2027;
                            _2122 = _2028;
                            _2123 = _2029;
                            _2124 = _2030;
                            _2125 = _2031;
                            _2126 = _2127;
                        }
                    }
                    frontier_phi_58_pred = _2027;
                    frontier_phi_58_pred_1 = _2031;
                    frontier_phi_58_pred_2 = _2030;
                    frontier_phi_58_pred_3 = _2029;
                    frontier_phi_58_pred_4 = _2028;
                    frontier_phi_58_pred_5 = _2026;
                }
                _1774 = frontier_phi_58_pred;
                _1782 = frontier_phi_58_pred_1;
                _1780 = frontier_phi_58_pred_2;
                _1778 = frontier_phi_58_pred_3;
                _1776 = frontier_phi_58_pred_4;
                _1772 = frontier_phi_58_pred_5;
                uint _1952 = _1951 + 1u;
                if (_1952 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1945 = _1772;
                    _1946 = _1774;
                    _1947 = _1776;
                    _1948 = _1778;
                    _1949 = _1780;
                    _1950 = _1782;
                    _1951 = _1952;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1771 = _1772;
            _1773 = _1774;
            _1775 = _1776;
            _1777 = _1778;
            _1779 = _1780;
            _1781 = _1782;
        }
        uvec4 _1785 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1786 = _1785.z;
        uint _1788 = (_1786 >> 8u) & 15u;
        float _1916;
        float _1918;
        float _1920;
        float _1922;
        float _1924;
        float _1926;
        if (((4294967295u << _1788) & _1680) == 0u)
        {
            _1916 = _1771;
            _1918 = _1773;
            _1920 = _1775;
            _1922 = _1777;
            _1924 = _1779;
            _1926 = _1781;
        }
        else
        {
            float _1941 = inversesqrt(dot(vec3(_1633, _1634, _1635), vec3(_1633, _1634, _1635)));
            float frontier_phi_49_50_ladder;
            float frontier_phi_49_50_ladder_1;
            float frontier_phi_49_50_ladder_2;
            float frontier_phi_49_50_ladder_3;
            float frontier_phi_49_50_ladder_4;
            float frontier_phi_49_50_ladder_5;
            if (_1788 < ((_1786 >> 12u) & 15u))
            {
                float _1917;
                float _1919;
                float _1921;
                float _1923;
                float _1925;
                float _1927;
                float _2103 = _1771;
                float _2104 = _1773;
                float _2105 = _1775;
                float _2106 = _1777;
                float _2107 = _1779;
                float _2108 = _1781;
                uint _2109 = _1788;
                uint _2118;
                bool _2119;
                for (;;)
                {
                    _2118 = texelFetch(g_lightClassification, int((((_1673 << 5u) + (_1659 << 9u)) + (_2109 << 2u)) >> 2u)).x;
                    _2119 = _2118 == 0u;
                    float frontier_phi_67_pred;
                    float frontier_phi_67_pred_1;
                    float frontier_phi_67_pred_2;
                    float frontier_phi_67_pred_3;
                    float frontier_phi_67_pred_4;
                    float frontier_phi_67_pred_5;
                    if (_2119)
                    {
                        frontier_phi_67_pred = _2108;
                        frontier_phi_67_pred_1 = _2107;
                        frontier_phi_67_pred_2 = _2106;
                        frontier_phi_67_pred_3 = _2105;
                        frontier_phi_67_pred_4 = _2104;
                        frontier_phi_67_pred_5 = _2103;
                    }
                    else
                    {
                        float _2274;
                        float _2275;
                        float _2276;
                        float _2277;
                        float _2278;
                        float _2279;
                        float _2524;
                        float _2525;
                        float _2526;
                        float _2527;
                        float _2528;
                        float _2529;
                        float _2287 = _2103;
                        float _2288 = _2104;
                        float _2289 = _2105;
                        float _2290 = _2106;
                        float _2291 = _2107;
                        float _2292 = _2108;
                        uint _2293 = _2118;
                        uint _2294;
                        vec4 _2319;
                        float _2320;
                        vec4 _2335;
                        vec3 _2347;
                        vec4 _2363;
                        vec4 _2378;
                        float _2424;
                        bool _2425;
                        for (;;)
                        {
                            uint _2304 = ((_2109 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2293));
                            _2294 = (_2293 + 4294967295u) & _2293;
                            uint _2306 = _2304 * 40u;
                            _2319 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2306)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2306 + 3u)).x));
                            _2320 = _2319.w;
                            uint _2322 = (_2304 * 40u) + 4u;
                            _2335 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2322)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2322 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2322 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2322 + 3u)).x));
                            uint _2337 = (_2304 * 40u) + 8u;
                            _2347 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2337)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2337 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2337 + 2u)).x));
                            uint _2350 = (_2304 * 40u) + 16u;
                            _2363 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2350)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2350 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2350 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2350 + 3u)).x));
                            uint _2365 = (_2304 * 40u) + 20u;
                            _2378 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2365)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2365 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2365 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2365 + 3u)).x));
                            uint _2380 = (_2304 * 40u) + 24u;
                            vec4 _2393 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2380)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2380 + 3u)).x));
                            uint _2399 = (_2304 * 40u) + 28u;
                            vec4 _2412 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2399)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 3u)).x));
                            _2424 = fma(_1635, _2412.z, fma(_1634, _2412.y, _2412.x * _1633)) + _2412.w;
                            _2425 = !((fma(_1635, _2393.z, fma(_1634, _2393.y, _2393.x * _1633)) + _2393.w) <= 0.0);
                            float frontier_phi_73_pred;
                            float frontier_phi_73_pred_1;
                            float frontier_phi_73_pred_2;
                            float frontier_phi_73_pred_3;
                            float frontier_phi_73_pred_4;
                            float frontier_phi_73_pred_5;
                            if (_2425)
                            {
                                float _2452 = _2319.x - _1633;
                                float _2453 = _2319.y - _1634;
                                float _2454 = _2319.z - _1635;
                                float _2455 = dot(vec3(_2452, _2453, _2454), vec3(_2452, _2453, _2454));
                                float _2458 = inversesqrt(_2455);
                                float _2459 = _2458 * _2452;
                                float _2460 = _2458 * _2453;
                                float _2461 = _2458 * _2454;
                                float _2465 = 1.0 - (_2455 / (_2320 * _2320));
                                float _3264 = isnan(0.0) ? _2465 : (isnan(_2465) ? 0.0 : max(_2465, 0.0));
                                float _2466 = isnan(1.0) ? _3264 : (isnan(_3264) ? 1.0 : min(_3264, 1.0));
                                float _2470 = sqrt(_2455) * _2335.w;
                                float _2472 = 1.39999997615814208984375 / (_2470 + 1.39999997615814208984375);
                                float _2473 = _2472 * _2472;
                                float _2474 = 1.0 - _2473;
                                float _2476 = (_2474 * dot(vec3(_2459, _2460, _2461), vec3(0.0))) + _2473;
                                float _2479 = _2470 * _2470;
                                float _2483 = (fma(_1635, _2363.z, fma(_1634, _2363.y, _2363.x * _1633)) + _2363.w) / _2424;
                                float _2484 = (fma(_1635, _2378.z, fma(_1634, _2378.y, _2378.x * _1633)) + _2378.w) / _2424;
                                float _2488 = 1.0 - dot(vec2(_2483, _2484), vec2(_2483, _2484));
                                float _3280 = isnan(0.0) ? _2488 : (isnan(_2488) ? 0.0 : max(_2488, 0.0));
                                float _2489 = isnan(1.0) ? _3280 : (isnan(_3280) ? 1.0 : min(_3280, 1.0));
                                float _2490 = _2489 * (((isnan(0.0) ? _2476 : (isnan(_2476) ? 0.0 : max(_2476, 0.0))) * _2466) / ((_2479 * 0.699999988079071044921875) + 1.0));
                                float _2500 = dot(vec3(0.0), vec3((-0.0) - (_1633 * _1941), (-0.0) - (_1634 * _1941), (-0.0) - (_1635 * _1941)));
                                float _3291 = isnan(0.0) ? _2500 : (isnan(_2500) ? 0.0 : max(_2500, 0.0));
                                float _2508 = (_2474 * dot(vec3(0.0), vec3(_2459, _2460, _2461))) + _2473;
                                float _3302 = isnan(0.0) ? _2508 : (isnan(_2508) ? 0.0 : max(_2508, 0.0));
                                float _2509 = isnan(1.0) ? _3302 : (isnan(_3302) ? 1.0 : min(_3302, 1.0));
                                float _2513 = (0.5 / (((isnan(1.0) ? _3291 : (isnan(_3291) ? 1.0 : min(_3291, 1.0))) + 9.9999999392252902907785028219223e-09) + _2509)) * _2509;
                                float _3313 = isnan(0.0) ? _2513 : (isnan(_2513) ? 0.0 : max(_2513, 0.0));
                                float _2520 = (_2489 * _2466) * (((isnan(1.0) ? _3313 : (isnan(_3313) ? 1.0 : min(_3313, 1.0))) * 3.1415927410125732421875) / ((_2479 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_73_pred = _2490 * _2335.z;
                                frontier_phi_73_pred_1 = _2490 * _2335.y;
                                frontier_phi_73_pred_2 = _2490 * _2335.x;
                                frontier_phi_73_pred_3 = _2520 * _2347.z;
                                frontier_phi_73_pred_4 = _2520 * _2347.y;
                                frontier_phi_73_pred_5 = _2520 * _2347.x;
                            }
                            else
                            {
                                frontier_phi_73_pred = 0.0;
                                frontier_phi_73_pred_1 = 0.0;
                                frontier_phi_73_pred_2 = 0.0;
                                frontier_phi_73_pred_3 = 0.0;
                                frontier_phi_73_pred_4 = 0.0;
                                frontier_phi_73_pred_5 = 0.0;
                            }
                            _2529 = frontier_phi_73_pred;
                            _2528 = frontier_phi_73_pred_1;
                            _2527 = frontier_phi_73_pred_2;
                            _2526 = frontier_phi_73_pred_3;
                            _2525 = frontier_phi_73_pred_4;
                            _2524 = frontier_phi_73_pred_5;
                            _2277 = _2527 + _2290;
                            _2278 = _2528 + _2291;
                            _2279 = _2529 + _2292;
                            _2274 = _2524 + _2287;
                            _2275 = _2525 + _2288;
                            _2276 = _2526 + _2289;
                            if (_2294 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2287 = _2274;
                                _2288 = _2275;
                                _2289 = _2276;
                                _2290 = _2277;
                                _2291 = _2278;
                                _2292 = _2279;
                                _2293 = _2294;
                                continue;
                            }
                        }
                        frontier_phi_67_pred = _2279;
                        frontier_phi_67_pred_1 = _2278;
                        frontier_phi_67_pred_2 = _2277;
                        frontier_phi_67_pred_3 = _2276;
                        frontier_phi_67_pred_4 = _2275;
                        frontier_phi_67_pred_5 = _2274;
                    }
                    _1927 = frontier_phi_67_pred;
                    _1925 = frontier_phi_67_pred_1;
                    _1923 = frontier_phi_67_pred_2;
                    _1921 = frontier_phi_67_pred_3;
                    _1919 = frontier_phi_67_pred_4;
                    _1917 = frontier_phi_67_pred_5;
                    uint _2110 = _2109 + 1u;
                    if (_2110 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2103 = _1917;
                        _2104 = _1919;
                        _2105 = _1921;
                        _2106 = _1923;
                        _2107 = _1925;
                        _2108 = _1927;
                        _2109 = _2110;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_49_50_ladder = _1923;
                frontier_phi_49_50_ladder_1 = _1927;
                frontier_phi_49_50_ladder_2 = _1925;
                frontier_phi_49_50_ladder_3 = _1921;
                frontier_phi_49_50_ladder_4 = _1919;
                frontier_phi_49_50_ladder_5 = _1917;
            }
            else
            {
                frontier_phi_49_50_ladder = _1777;
                frontier_phi_49_50_ladder_1 = _1781;
                frontier_phi_49_50_ladder_2 = _1779;
                frontier_phi_49_50_ladder_3 = _1775;
                frontier_phi_49_50_ladder_4 = _1773;
                frontier_phi_49_50_ladder_5 = _1771;
            }
            _1916 = frontier_phi_49_50_ladder_5;
            _1918 = frontier_phi_49_50_ladder_4;
            _1920 = frontier_phi_49_50_ladder_3;
            _1922 = frontier_phi_49_50_ladder;
            _1924 = frontier_phi_49_50_ladder_2;
            _1926 = frontier_phi_49_50_ladder_1;
        }
        float _1931 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
        _1693 = (_1931 * _1922) + _1472;
        _1695 = (_1931 * _1924) + _1473;
        _1697 = (_1931 * _1926) + _1474;
        _1699 = ((_1916 * 0.039999999105930328369140625) * _1931) + _1574;
        _1701 = ((_1918 * 0.039999999105930328369140625) * _1931) + _1575;
        _1703 = ((_1920 * 0.039999999105930328369140625) * _1931) + _1576;
    }
    else
    {
        _1693 = _1472;
        _1695 = _1473;
        _1697 = _1474;
        _1699 = _1574;
        _1701 = _1575;
        _1703 = _1576;
    }
    float _3329 = isnan(0.0) ? _468 : (isnan(_468) ? 0.0 : max(_468, 0.0));
    float _3340 = isnan(0.0) ? _469 : (isnan(_469) ? 0.0 : max(_469, 0.0));
    float _3351 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _1720 = ((isnan(1.0) ? _3329 : (isnan(_3329) ? 1.0 : min(_3329, 1.0))) * (_1693 + ((isnan(0.0) ? _1106 : (isnan(_1106) ? 0.0 : max(_1106, 0.0))) * _482))) + ((_1699 + ((isnan(0.0) ? _1394 : (isnan(_1394) ? 0.0 : max(_1394, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    float _1721 = ((isnan(1.0) ? _3340 : (isnan(_3340) ? 1.0 : min(_3340, 1.0))) * (_1695 + ((isnan(0.0) ? _1109 : (isnan(_1109) ? 0.0 : max(_1109, 0.0))) * _482))) + ((_1701 + ((isnan(0.0) ? _1397 : (isnan(_1397) ? 0.0 : max(_1397, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    float _1722 = ((isnan(1.0) ? _3351 : (isnan(_3351) ? 1.0 : min(_3351, 1.0))) * (_1697 + ((isnan(0.0) ? _1112 : (isnan(_1112) ? 0.0 : max(_1112, 0.0))) * _482))) + ((_1703 + ((isnan(0.0) ? _1400 : (isnan(_1400) ? 0.0 : max(_1400, 0.0))) * _1185)) * cbPerFrame._m0[3u].x);
    uint _1726 = _456 + 6u;
    float _1734 = _442 / cbSceneParam._m0[86u].x;
    float _1735 = _443 / cbSceneParam._m0[86u].y;
    vec4 _1749 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1734, _1735, (log2((isnan(cbSceneParam._m0[77u].w) ? _429 : (isnan(_429) ? cbSceneParam._m0[77u].w : min(_429, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1751 = _1749.x;
    float _1752 = _1749.y;
    float _1753 = _1749.z;
    float _1754 = _1749.w;
    float _1834;
    float _1836;
    float _1838;
    float _1840;
    if (_429 > cbSceneParam._m0[78u].w)
    {
        float _1796 = isnan(_429) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _429 : min(cbSceneParam._m0[80u].w, _429));
        float _1797 = _1796 / _429;
        float _1808 = _1797 * _250;
        float _1809 = _251 * _1797;
        float _1810 = (-0.0) - _1809;
        float _1811 = _1797 * _252;
        float _1813 = (cbSceneParam._m0[77u].w * _1810) / _1796;
        float _1814 = _1813 + cbSceneParam._m0[79u].w;
        float _1815 = cbSceneParam._m0[79u].w - _1809;
        float _1821 = sqrt(((_1808 * _1808) + (_1809 * _1809)) + (_1811 * _1811));
        float _1824 = (1.0 - (cbSceneParam._m0[77u].w / _1796)) * _1821;
        float _1830 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1832 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2039;
        if (abs((_1810 - _1813) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2039 = ((((_1814 > 0.0) ? exp2(_1830 * _1814) : (2.0 - exp2(_1832 * _1814))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1824;
        }
        else
        {
            float _1974 = 1.0 / cbSceneParam._m0[80u].x;
            float _1975 = isnan(_1815) ? _1814 : (isnan(_1814) ? _1815 : max(_1814, _1815));
            float _1976 = isnan(_1815) ? _1814 : (isnan(_1814) ? _1815 : min(_1814, _1815));
            float _1985 = isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : min(_1975, 0.0));
            float _1986 = isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : min(_1976, 0.0));
            _2039 = ((abs(_1821 / _1810) * cbSceneParam._m0[80u].y) * ((((_1985 - _1986) * 2.0) - ((exp2(_1830 * (isnan(0.0) ? _1975 : (isnan(_1975) ? 0.0 : max(_1975, 0.0)))) - exp2(_1830 * (isnan(0.0) ? _1976 : (isnan(_1976) ? 0.0 : max(_1976, 0.0))))) * _1974)) - ((exp2(_1832 * _1985) - exp2(_1832 * _1986)) * _1974))) + (_1824 * cbSceneParam._m0[80u].z);
        }
        vec4 _2041 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1734, _1735, 1.0), 0.0);
        float _2050 = exp2((_2039 * (-1.44269502162933349609375)) * (1.0 - _2041.w));
        float _2051 = log2(_2050);
        float _2067 = log2(_1754);
        _1834 = (exp2(_2067 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2051 * cbSceneParam._m0[78u].x)) * _2041.x) / cbSceneParam._m0[78u].x)) + _1751;
        _1836 = (exp2(_2067 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2051 * cbSceneParam._m0[78u].y)) * _2041.y) / cbSceneParam._m0[78u].y)) + _1752;
        _1838 = (exp2(_2067 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2051 * cbSceneParam._m0[78u].z)) * _2041.z) / cbSceneParam._m0[78u].z)) + _1753;
        _1840 = _2050 * _1754;
    }
    else
    {
        _1834 = _1751;
        _1836 = _1752;
        _1838 = _1753;
        _1840 = _1754;
    }
    float _1852 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1853 = _1852 == 3.0;
    float _1855 = log2(_1840);
    float _1862 = exp2(_1855 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0)));
    float _1863 = exp2(_1855 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1721 : (isnan(_1721) ? 0.0 : max(_1721, 0.0)));
    float _1864 = exp2(_1855 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1722 : (isnan(_1722) ? 0.0 : max(_1722, 0.0)));
    float _1873 = (_1852 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1873 * (_1853 ? _1862 : (_1862 + (cbSceneParam._m0[72u].w * _1834)));
    SV_Target.y = _1873 * (_1853 ? _1863 : (_1863 + (cbSceneParam._m0[72u].w * _1836)));
    SV_Target.z = _1873 * (_1853 ? _1864 : (_1864 + (cbSceneParam._m0[72u].w * _1838)));
    SV_Target.w = cbInstanceData._m0[_1726].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1726].w;
}


