#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _153 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _154 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _155 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _160 = inversesqrt(dot(vec3(_153, _154, _155), vec3(_153, _154, _155)));
    float _161 = _160 * _153;
    float _162 = _160 * _154;
    float _163 = _160 * _155;
    float _167 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _168 = _167 * NORMAL.x;
    float _169 = _167 * NORMAL.y;
    float _170 = _167 * NORMAL.z;
    float _174 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _175 = _174 * TANGENT.x;
    float _176 = _174 * TANGENT.y;
    float _177 = _174 * TANGENT.z;
    float _222 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _232 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _222);
    float _233 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _222);
    float _234 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _222);
    vec4 _247 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _250 = _247.x;
    vec4 _268 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _285 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _250) + cbMtdParam._m0[12u].x) * _268.x;
    float _287 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _250) + cbMtdParam._m0[12u].y) * _268.y;
    float _289 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _250) + cbMtdParam._m0[12u].z) * _268.z;
    vec4 _310 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _346 = cbMtdParam._m0[21u].w + _232;
    float _347 = cbMtdParam._m0[22u].x + _233;
    float _348 = cbMtdParam._m0[22u].y + _234;
    float _362 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_161, _162, _163));
    float _363 = (-0.0) - dot(vec3(_346, _347, _348), vec3(_175, _176, _177));
    float _364 = (-0.0) - dot(vec3(_346, _347, _348), vec3((-0.0) - _168, (-0.0) - _169, (-0.0) - _170));
    float _368 = inversesqrt(dot(vec3(_362, _363, _364), vec3(_362, _363, _364)));
    float _371 = _368 * _364;
    float _372 = (_368 * _362) + ((cbMtdParam._m0[19u].w * _250) * ((_310.x * 2.0) + (-1.0)));
    float _373 = (_368 * _363) + ((cbMtdParam._m0[20u].x * _250) * ((_310.y * 2.0) + (-1.0)));
    float _374 = _372 * cbMtdParam._m0[18u].z;
    float _375 = _373 * cbMtdParam._m0[18u].y;
    float _376 = fract(TEXCOORD.x);
    float _377 = fract(TEXCOORD.y);
    float _383;
    if (_374 > 0.0)
    {
        _383 = (1.0 - _376) / _374;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_374 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _376) / _374;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _383 = frontier_phi_3_2_ladder;
    }
    float _391;
    if (_375 > 0.0)
    {
        _391 = (1.0 - _377) / _375;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_375 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _377) / _375;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _391 = frontier_phi_7_6_ladder;
    }
    bool _393 = _371 > 0.0;
    float _395 = _393 ? (cbMtdParam._m0[15u].x / _371) : 5000.0;
    float _396 = isnan(_391) ? _383 : (isnan(_383) ? _391 : min(_383, _391));
    float _397 = isnan(_395) ? _396 : (isnan(_396) ? _395 : min(_396, _395));
    float _401 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _402 = _376 + (-0.5);
    float _405 = _377 + (-0.5);
    float _408 = ((_397 * _371) + _401) / _401;
    vec4 _432 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_402 + (_397 * _374)) / _408) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_405 + (_397 * _375)) / _408) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _445 = (_432.x * _250) * cbMtdParam._m0[9u].x;
    float _446 = (_432.y * _250) * cbMtdParam._m0[9u].y;
    float _447 = (_432.z * _250) * cbMtdParam._m0[9u].z;
    float _465 = _372 * cbMtdParam._m0[20u].z;
    float _466 = _373 * cbMtdParam._m0[20u].y;
    bool _467 = _465 > 0.0;
    float _472;
    if (_467)
    {
        _472 = (1.0 - _376) / _465;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_465 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _376) / _465;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _472 = frontier_phi_11_10_ladder;
    }
    bool _474 = _466 > 0.0;
    float _479;
    if (_474)
    {
        _479 = (1.0 - _377) / _466;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_466 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _377) / _466;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _479 = frontier_phi_15_14_ladder;
    }
    float _482 = _393 ? (cbMtdParam._m0[16u].x / _371) : 5000.0;
    float _483 = isnan(_479) ? _472 : (isnan(_472) ? _479 : min(_472, _479));
    float _484 = isnan(_482) ? _483 : (isnan(_483) ? _482 : min(_483, _482));
    float _488 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _492 = ((_484 * _371) + _488) / _488;
    float _497 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _499 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _515 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_402 + (_484 * _465)) / _492) + 0.5) + _497) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_405 + (_484 * _466)) / _492) + 0.5) + _499) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _530;
    if (_467)
    {
        _530 = (1.0 - _376) / _465;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_465 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _376) / _465;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _530 = frontier_phi_19_18_ladder;
    }
    float _536;
    if (_474)
    {
        _536 = (1.0 - _377) / _466;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_466 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _377) / _466;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _536 = frontier_phi_23_22_ladder;
    }
    float _538 = isnan(_536) ? _530 : (isnan(_530) ? _536 : min(_530, _536));
    float _539 = isnan(_482) ? _538 : (isnan(_538) ? _482 : min(_538, _482));
    float _546 = ((_539 * _371) + _488) / _488;
    vec4 _567 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_402 + (_539 * _465)) / _546) + 0.5) + _497) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_405 + (_539 * _466)) / _546) + 0.5) + _499) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _569 = _567.x;
    float _579 = (((((cbMtdParam._m0[10u].x * _250) * _515.x) - _445) * _250) * _569) + _445;
    float _580 = (((((cbMtdParam._m0[10u].y * _250) * _515.y) - _446) * _250) * _569) + _446;
    float _581 = (((((cbMtdParam._m0[10u].z * _250) * _515.z) - _447) * _250) * _569) + _447;
    vec4 _593 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _597 = _593.z;
    float _600 = (_593.x * 2.0) + (-1.0);
    float _601 = (_593.y * 2.0) + (-1.0);
    float _602 = dot(vec2(_600, _601), vec2(_600, _601));
    float _883 = isnan(0.0) ? _602 : (isnan(_602) ? 0.0 : max(_602, 0.0));
    float _607 = sqrt(1.0 - (isnan(1.0) ? _883 : (isnan(_883) ? 1.0 : min(_883, 1.0))));
    float _610 = fma(_607, _168, fma(_601, _175, _600 * _161));
    float _613 = fma(_607, _169, fma(_601, _176, _600 * _162));
    float _616 = fma(_607, _170, fma(_601, _177, _600 * _163));
    float _620 = inversesqrt(dot(vec3(_610, _613, _616), vec3(_610, _613, _616)));
    float _894 = isnan(0.0) ? _597 : (isnan(_597) ? 0.0 : max(_597, 0.0));
    float _905 = isnan(0.0) ? _285 : (isnan(_285) ? 0.0 : max(_285, 0.0));
    float _622 = isnan(1.0) ? _905 : (isnan(_905) ? 1.0 : min(_905, 1.0));
    float _916 = isnan(0.0) ? _287 : (isnan(_287) ? 0.0 : max(_287, 0.0));
    float _623 = isnan(1.0) ? _916 : (isnan(_916) ? 1.0 : min(_916, 1.0));
    float _927 = isnan(0.0) ? _289 : (isnan(_289) ? 0.0 : max(_289, 0.0));
    float _624 = isnan(1.0) ? _927 : (isnan(_927) ? 1.0 : min(_927, 1.0));
    uint _626 = uint(roundEven(NORMAL.w));
    vec4 _631 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _633 = _631.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _697 = sqrt(((_232 * _232) + (_233 * _233)) + (_234 * _234));
        float _704 = (cbMatDynParam._m0[5u].x * _697) + cbMatDynParam._m0[5u].y;
        float _938 = isnan(0.0) ? _704 : (isnan(_704) ? 0.0 : max(_704, 0.0));
        float _705 = isnan(1.0) ? _938 : (isnan(_938) ? 1.0 : min(_938, 1.0));
        float _709 = (cbMatDynParam._m0[5u].z * _697) + cbMatDynParam._m0[5u].w;
        float _949 = isnan(0.0) ? _709 : (isnan(_709) ? 0.0 : max(_709, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _949 : (isnan(_949) ? 1.0 : min(_949, 1.0))) - _705)) + _705) < ((_633 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _737;
    uint _653;
    vec4 _658;
    float _665;
    float _666;
    float _667;
    float _668;
    float _669;
    float _670;
    float _674;
    vec4 _677;
    float _679;
    float _680;
    bool _691;
    for (;;)
    {
        _653 = _626 * 13u;
        _658 = cbInstanceData._m0[(_653 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _662 = (cbMtdParam._m0[0u].x * _622) * _658.x;
        float _663 = (cbMtdParam._m0[0u].y * _623) * _658.y;
        float _664 = (cbMtdParam._m0[0u].z * _624) * _658.z;
        float _960 = isnan(0.0) ? _662 : (isnan(_662) ? 0.0 : max(_662, 0.0));
        _665 = isnan(1.0) ? _960 : (isnan(_960) ? 1.0 : min(_960, 1.0));
        float _971 = isnan(0.0) ? _663 : (isnan(_663) ? 0.0 : max(_663, 0.0));
        _666 = isnan(1.0) ? _971 : (isnan(_971) ? 1.0 : min(_971, 1.0));
        float _982 = isnan(0.0) ? _664 : (isnan(_664) ? 0.0 : max(_664, 0.0));
        _667 = isnan(1.0) ? _982 : (isnan(_982) ? 1.0 : min(_982, 1.0));
        _668 = _658.x * _579;
        _669 = _658.y * _580;
        _670 = _658.z * _581;
        _674 = cbInstanceData._m0[_653 + 6u].w;
        float _675 = _633 + (-0.5);
        _677 = cbMtdParam._m0[1u];
        _679 = _677.y * _675;
        _680 = _675 * 0.999000012874603271484375;
        _691 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_691)
        {
            if ((cbInstanceData._m0[_653 + 7u].x + _680) < 0.5)
            {
                _737 = true;
                break;
            }
        }
        if ((_658.w < 1.0) && ((_658.w + _680) < 0.5))
        {
            _737 = true;
            break;
        }
        if ((_679 + 1.0) < _677.x)
        {
            _737 = true;
            break;
        }
        _737 = false;
        break;
    }
    if (_737)
    {
        discard_state = true;
    }
    bool _770 = cbMtdParam._m0[1u].z != 0.0;
    float _771 = _770 ? _674 : 0.0;
    SV_Target.x = ((_610 * 0.5) * _620) + 0.500488758087158203125;
    SV_Target.y = ((_613 * 0.5) * _620) + 0.500488758087158203125;
    SV_Target.z = ((_616 * 0.5) * _620) + 0.500488758087158203125;
    SV_Target.w = _771;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _894 : (isnan(_894) ? 1.0 : min(_894, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _770 ? _674 : TEXCOORD.z;
    SV_Target_2.x = _665;
    SV_Target_2.y = _666;
    SV_Target_2.z = _667;
    SV_Target_2.w = _770 ? _674 : (float(floatBitsToUint(cbInstanceData._m0[_653 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _771;
    SV_Target_4.x = _668 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _669 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _670 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _771;
    discard_exit();
}


