#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _378;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _174 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _175 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _176 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _181 = inversesqrt(dot(vec3(_174, _175, _176), vec3(_174, _175, _176)));
    float _182 = _181 * _174;
    float _183 = _181 * _175;
    float _184 = _181 * _176;
    float _188 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _192 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _193 = _192 * TANGENT.x;
    float _194 = _192 * TANGENT.y;
    float _195 = _192 * TANGENT.z;
    float _240 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _250 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _240);
    float _251 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _240);
    float _252 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _240);
    vec4 _287 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _303 = inversesqrt(dot(vec3(_182, _183, _184), vec3(_182, _183, _184)));
    float _310 = inversesqrt(dot(vec3(_193, _194, _195), vec3(_193, _194, _195)));
    float _322 = cbMtdParam._m0[22u].z + _250;
    float _323 = cbMtdParam._m0[22u].w + _251;
    float _324 = cbMtdParam._m0[23u].x + _252;
    float _341 = (-0.0) - dot(vec3(_322, _323, _324), vec3(_303 * _182, _303 * _183, _303 * _184));
    float _342 = (-0.0) - dot(vec3(_322, _323, _324), vec3(_310 * _193, _310 * _194, _310 * _195));
    float _343 = (-0.0) - dot(vec3(_322, _323, _324), vec3((-0.0) - (NORMAL.x * _188), (-0.0) - (NORMAL.y * _188), (-0.0) - (NORMAL.z * _188)));
    float _347 = inversesqrt(dot(vec3(_341, _342, _343), vec3(_341, _342, _343)));
    float _348 = _347 * _343;
    float _353 = ((cbMtdParam._m0[19u].y * _341) * _347) + (((_287.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _354 = ((cbMtdParam._m0[19u].z * _342) * _347) + (((_287.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _357 = fract(cbMtdParam._m0[19u].y * TEXCOORD.x);
    float _358 = fract(cbMtdParam._m0[19u].z * TEXCOORD.y);
    float _376;
    float _379;
    float _381;
    if (_353 > 0.0)
    {
        float _362 = (1.0 - _357) / _353;
        _376 = _362;
        _379 = ((cbMtdParam._m0[16u].z + 1.0) - fract(_362 * _348)) * 0.16666667163372039794921875;
        _381 = (fract((_362 * _354) + _358) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_353 < 0.0)
        {
            float _377 = ((-0.0) - _357) / _353;
            frontier_phi_3_2_ladder = (fract((_377 * _354) + _358) * 0.16666667163372039794921875) + 0.666666686534881591796875;
            frontier_phi_3_2_ladder_1 = _377;
            frontier_phi_3_2_ladder_2 = (fract(_377 * _348) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _378;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _376 = frontier_phi_3_2_ladder_1;
        _379 = frontier_phi_3_2_ladder_2;
        _381 = frontier_phi_3_2_ladder;
    }
    float _407;
    float _409;
    float _411;
    if (_354 > 0.0)
    {
        float _394 = (1.0 - _358) / _354;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_394 < _376)
        {
            frontier_phi_8_5_ladder = (fract((_394 * _353) + _357) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_1 = _394;
            frontier_phi_8_5_ladder_2 = (fract(_394 * _348) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _379;
            frontier_phi_8_5_ladder_1 = _376;
            frontier_phi_8_5_ladder_2 = _381;
        }
        _407 = frontier_phi_8_5_ladder_1;
        _409 = frontier_phi_8_5_ladder;
        _411 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_354 < 0.0)
        {
            float _408 = ((-0.0) - _358) / _354;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_408 < _376)
            {
                frontier_phi_8_6_ladder_9_ladder = (fract((_408 * _353) + _357) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = _408;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_408 * _348) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _379;
                frontier_phi_8_6_ladder_9_ladder_1 = _376;
                frontier_phi_8_6_ladder_9_ladder_2 = _381;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _379;
            frontier_phi_8_6_ladder_1 = _376;
            frontier_phi_8_6_ladder_2 = _381;
        }
        _407 = frontier_phi_8_6_ladder_1;
        _409 = frontier_phi_8_6_ladder;
        _411 = frontier_phi_8_6_ladder_2;
    }
    float _415 = (_348 > 0.0) ? (cbMtdParam._m0[16u].y / _348) : 5000.0;
    float _428;
    float _429;
    if (_415 < _407)
    {
        _428 = ((_357 + cbMtdParam._m0[16u].z) + (_415 * _353)) * 0.16666667163372039794921875;
        _429 = (((_415 * _354) + _358) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _428 = _409;
        _429 = _411;
    }
    vec4 _431 = texture(sampler2D(M_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_428, _429));
    float _436 = _431.x * cbMtdParam._m0[13u].x;
    float _437 = _431.y * cbMtdParam._m0[13u].y;
    float _438 = _431.z * cbMtdParam._m0[13u].z;
    float _2712 = isnan(0.0) ? _436 : (isnan(_436) ? 0.0 : max(_436, 0.0));
    float _2723 = isnan(0.0) ? _437 : (isnan(_437) ? 0.0 : max(_437, 0.0));
    float _2734 = isnan(0.0) ? _438 : (isnan(_438) ? 0.0 : max(_438, 0.0));
    float _457 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _461 = inversesqrt(dot(vec3(_250, _251, _252), vec3(_250, _251, _252)));
    float _462 = _250 * _461;
    float _463 = _251 * _461;
    float _464 = _252 * _461;
    float _470 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _471 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    uint _484 = uint(roundEven(NORMAL.w)) * 13u;
    uint _486 = (_484 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _492 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _2712 : (isnan(_2712) ? 1.0 : min(_2712, 1.0)))) * cbInstanceData._m0[_486].x;
    float _493 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _2723 : (isnan(_2723) ? 1.0 : min(_2723, 1.0)))) * cbInstanceData._m0[_486].y;
    float _494 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _2734 : (isnan(_2734) ? 1.0 : min(_2734, 1.0)))) * cbInstanceData._m0[_486].z;
    float _2745 = isnan(0.0) ? _492 : (isnan(_492) ? 0.0 : max(_492, 0.0));
    float _495 = isnan(1.0) ? _2745 : (isnan(_2745) ? 1.0 : min(_2745, 1.0));
    float _2756 = isnan(0.0) ? _493 : (isnan(_493) ? 0.0 : max(_493, 0.0));
    float _496 = isnan(1.0) ? _2756 : (isnan(_2756) ? 1.0 : min(_2756, 1.0));
    float _2767 = isnan(0.0) ? _494 : (isnan(_494) ? 0.0 : max(_494, 0.0));
    float _497 = isnan(1.0) ? _2767 : (isnan(_2767) ? 1.0 : min(_2767, 1.0));
    vec4 _506 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _470, cbSceneParam._m0[86u].y * _471));
    float _509 = _506.x * TEXCOORD.z;
    float _510 = (-0.0) - _462;
    float _511 = (-0.0) - _463;
    float _512 = (-0.0) - _464;
    float _534 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _538 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _542 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _816;
    float _817;
    float _818;
    float _819;
    float _820;
    float _821;
    float _822;
    float _823;
    float _824;
    float _825;
    float _826;
    float _827;
    float _828;
    float _829;
    float _830;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _604 = (cbModelParam._m0[37u].x * ((((fma(_542, cbModelParam._m0[26u].z, fma(_538, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _534)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _606 = (cbModelParam._m0[37u].y * ((((fma(_542, cbModelParam._m0[27u].z, fma(_538, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _534)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _607 = (((((fma(_542, cbModelParam._m0[28u].z, fma(_538, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _534)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _610 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_604, _606, _607), 0.0);
        vec4 _617 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_604, _606, _607), 0.0);
        vec4 _624 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_604, _606, _607), 0.0);
        vec4 _631 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_604, _606, _607), 0.0);
        float _644 = exp2((_610.w + (-0.5)) * 20.0) * 2.0;
        float _645 = _644 * (_610.x + (-0.5));
        float _646 = _644 * (_610.y + (-0.5));
        float _647 = _644 * (_610.z + (-0.5));
        float _654 = exp2((_617.w + (-0.5)) * 20.0) * 2.0;
        float _655 = _654 * (_617.x + (-0.5));
        float _656 = _654 * (_617.y + (-0.5));
        float _657 = _654 * (_617.z + (-0.5));
        float _664 = exp2((_624.w + (-0.5)) * 20.0) * 2.0;
        float _665 = _664 * (_624.x + (-0.5));
        float _666 = _664 * (_624.y + (-0.5));
        float _667 = _664 * (_624.z + (-0.5));
        float _674 = exp2((_631.w + (-0.5)) * 20.0) * 2.0;
        float _675 = _674 * (_631.x + (-0.5));
        float _676 = _674 * (_631.y + (-0.5));
        float _677 = _674 * (_631.z + (-0.5));
        float _678 = isnan(0.0) ? _675 : (isnan(_675) ? 0.0 : max(_675, 0.0));
        float _679 = isnan(0.0) ? _676 : (isnan(_676) ? 0.0 : max(_676, 0.0));
        float _680 = isnan(0.0) ? _677 : (isnan(_677) ? 0.0 : max(_677, 0.0));
        float _681 = _645 * 0.5;
        float _682 = _655 * 0.5;
        float _683 = _665 * 0.5;
        float _684 = dot(vec3(_681, _682, _683), vec3(_681, _682, _683));
        float _689 = (_684 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_684);
        float _698 = (dot(vec3(0.0), vec3(_689 * _681, _689 * _682, _689 * _683)) + 1.0) * 0.5;
        float _2793 = isnan(0.0) ? _698 : (isnan(_698) ? 0.0 : max(_698, 0.0));
        float _708 = sqrt(((_682 * _682) + (_681 * _681)) + (_683 * _683)) / (_678 + 9.9999997473787516355514526367188e-06);
        float _2804 = isnan(0.0) ? _708 : (isnan(_708) ? 0.0 : max(_708, 0.0));
        float _709 = isnan(1.0) ? _2804 : (isnan(_2804) ? 1.0 : min(_2804, 1.0));
        float _710 = _709 * 2.0;
        float _714 = (1.0 - _709) / (_709 + 1.0);
        float _2815 = isnan(0.0) ? _714 : (isnan(_714) ? 0.0 : max(_714, 0.0));
        float _715 = isnan(1.0) ? _2815 : (isnan(_2815) ? 1.0 : min(_2815, 1.0));
        float _724 = ((((1.0 - _715) * (_710 + 2.0)) * exp2(log2(isnan(1.0) ? _2793 : (isnan(_2793) ? 1.0 : min(_2793, 1.0))) * (_710 + 1.0))) + _715) * _678;
        float _725 = _646 * 0.5;
        float _726 = _656 * 0.5;
        float _727 = _666 * 0.5;
        float _728 = dot(vec3(_725, _726, _727), vec3(_725, _726, _727));
        float _733 = (_728 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_728);
        float _741 = (dot(vec3(0.0), vec3(_733 * _725, _733 * _726, _733 * _727)) + 1.0) * 0.5;
        float _2826 = isnan(0.0) ? _741 : (isnan(_741) ? 0.0 : max(_741, 0.0));
        float _750 = sqrt(((_726 * _726) + (_725 * _725)) + (_727 * _727)) / (_679 + 9.9999997473787516355514526367188e-06);
        float _2837 = isnan(0.0) ? _750 : (isnan(_750) ? 0.0 : max(_750, 0.0));
        float _751 = isnan(1.0) ? _2837 : (isnan(_2837) ? 1.0 : min(_2837, 1.0));
        float _752 = _751 * 2.0;
        float _756 = (1.0 - _751) / (_751 + 1.0);
        float _2848 = isnan(0.0) ? _756 : (isnan(_756) ? 0.0 : max(_756, 0.0));
        float _757 = isnan(1.0) ? _2848 : (isnan(_2848) ? 1.0 : min(_2848, 1.0));
        float _766 = ((((1.0 - _757) * (_752 + 2.0)) * exp2(log2(isnan(1.0) ? _2826 : (isnan(_2826) ? 1.0 : min(_2826, 1.0))) * (_752 + 1.0))) + _757) * _679;
        float _767 = _647 * 0.5;
        float _768 = _657 * 0.5;
        float _769 = _667 * 0.5;
        float _770 = dot(vec3(_767, _768, _769), vec3(_767, _768, _769));
        float _775 = (_770 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_770);
        float _783 = (dot(vec3(0.0), vec3(_775 * _767, _775 * _768, _775 * _769)) + 1.0) * 0.5;
        float _2859 = isnan(0.0) ? _783 : (isnan(_783) ? 0.0 : max(_783, 0.0));
        float _792 = sqrt(((_768 * _768) + (_767 * _767)) + (_769 * _769)) / (_680 + 9.9999997473787516355514526367188e-06);
        float _2870 = isnan(0.0) ? _792 : (isnan(_792) ? 0.0 : max(_792, 0.0));
        float _793 = isnan(1.0) ? _2870 : (isnan(_2870) ? 1.0 : min(_2870, 1.0));
        float _794 = _793 * 2.0;
        float _798 = (1.0 - _793) / (_793 + 1.0);
        float _2881 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
        float _799 = isnan(1.0) ? _2881 : (isnan(_2881) ? 1.0 : min(_2881, 1.0));
        float _808 = ((((1.0 - _799) * (_794 + 2.0)) * exp2(log2(isnan(1.0) ? _2859 : (isnan(_2859) ? 1.0 : min(_2859, 1.0))) * (_794 + 1.0))) + _799) * _680;
        _816 = _647;
        _817 = _646;
        _818 = _645;
        _819 = _657;
        _820 = _656;
        _821 = _655;
        _822 = _667;
        _823 = _666;
        _824 = _665;
        _825 = _680;
        _826 = _679;
        _827 = _678;
        _828 = cbModelParam._m0[36u].z * (isnan(0.0) ? _724 : (isnan(_724) ? 0.0 : max(_724, 0.0)));
        _829 = cbModelParam._m0[36u].z * (isnan(0.0) ? _766 : (isnan(_766) ? 0.0 : max(_766, 0.0)));
        _830 = cbModelParam._m0[36u].z * (isnan(0.0) ? _808 : (isnan(_808) ? 0.0 : max(_808, 0.0)));
    }
    else
    {
        _816 = _378;
        _817 = _378;
        _818 = _378;
        _819 = _378;
        _820 = _378;
        _821 = _378;
        _822 = _378;
        _823 = _378;
        _824 = _378;
        _825 = _378;
        _826 = _378;
        _827 = _378;
        _828 = 0.0;
        _829 = 0.0;
        _830 = 0.0;
    }
    float _1091;
    float _1092;
    float _1093;
    float _1094;
    float _1095;
    float _1096;
    float _1097;
    float _1098;
    float _1099;
    float _1100;
    float _1101;
    float _1102;
    float _1103;
    float _1104;
    float _1105;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _884 = (cbModelParam._m0[38u].x * ((((fma(_542, cbModelParam._m0[30u].z, fma(_538, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _534)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _885 = (cbModelParam._m0[38u].y * ((((fma(_542, cbModelParam._m0[31u].z, fma(_538, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _534)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _886 = (((((fma(_542, cbModelParam._m0[32u].z, fma(_538, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _534)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _888 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _895 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _902 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        vec4 _909 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_884, _885, _886), 0.0);
        float _921 = exp2((_888.w + (-0.5)) * 20.0) * 2.0;
        float _922 = _921 * (_888.x + (-0.5));
        float _923 = _921 * (_888.y + (-0.5));
        float _924 = _921 * (_888.z + (-0.5));
        float _931 = exp2((_895.w + (-0.5)) * 20.0) * 2.0;
        float _932 = _931 * (_895.x + (-0.5));
        float _933 = _931 * (_895.y + (-0.5));
        float _934 = _931 * (_895.z + (-0.5));
        float _941 = exp2((_902.w + (-0.5)) * 20.0) * 2.0;
        float _942 = _941 * (_902.x + (-0.5));
        float _943 = _941 * (_902.y + (-0.5));
        float _944 = _941 * (_902.z + (-0.5));
        float _951 = exp2((_909.w + (-0.5)) * 20.0) * 2.0;
        float _952 = _951 * (_909.x + (-0.5));
        float _953 = _951 * (_909.y + (-0.5));
        float _954 = _951 * (_909.z + (-0.5));
        float _955 = isnan(0.0) ? _952 : (isnan(_952) ? 0.0 : max(_952, 0.0));
        float _956 = isnan(0.0) ? _953 : (isnan(_953) ? 0.0 : max(_953, 0.0));
        float _957 = isnan(0.0) ? _954 : (isnan(_954) ? 0.0 : max(_954, 0.0));
        float _958 = _922 * 0.5;
        float _959 = _932 * 0.5;
        float _960 = _942 * 0.5;
        float _961 = dot(vec3(_958, _959, _960), vec3(_958, _959, _960));
        float _966 = (_961 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_961);
        float _974 = (dot(vec3(0.0), vec3(_966 * _958, _966 * _959, _966 * _960)) + 1.0) * 0.5;
        float _2922 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
        float _983 = sqrt(((_959 * _959) + (_958 * _958)) + (_960 * _960)) / (_955 + 9.9999997473787516355514526367188e-06);
        float _2933 = isnan(0.0) ? _983 : (isnan(_983) ? 0.0 : max(_983, 0.0));
        float _984 = isnan(1.0) ? _2933 : (isnan(_2933) ? 1.0 : min(_2933, 1.0));
        float _985 = _984 * 2.0;
        float _989 = (1.0 - _984) / (_984 + 1.0);
        float _2944 = isnan(0.0) ? _989 : (isnan(_989) ? 0.0 : max(_989, 0.0));
        float _990 = isnan(1.0) ? _2944 : (isnan(_2944) ? 1.0 : min(_2944, 1.0));
        float _999 = ((((1.0 - _990) * (_985 + 2.0)) * exp2(log2(isnan(1.0) ? _2922 : (isnan(_2922) ? 1.0 : min(_2922, 1.0))) * (_985 + 1.0))) + _990) * _955;
        float _1000 = _923 * 0.5;
        float _1001 = _933 * 0.5;
        float _1002 = _943 * 0.5;
        float _1003 = dot(vec3(_1000, _1001, _1002), vec3(_1000, _1001, _1002));
        float _1008 = (_1003 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1003);
        float _1016 = (dot(vec3(0.0), vec3(_1008 * _1000, _1008 * _1001, _1008 * _1002)) + 1.0) * 0.5;
        float _2955 = isnan(0.0) ? _1016 : (isnan(_1016) ? 0.0 : max(_1016, 0.0));
        float _1025 = sqrt(((_1001 * _1001) + (_1000 * _1000)) + (_1002 * _1002)) / (_956 + 9.9999997473787516355514526367188e-06);
        float _2966 = isnan(0.0) ? _1025 : (isnan(_1025) ? 0.0 : max(_1025, 0.0));
        float _1026 = isnan(1.0) ? _2966 : (isnan(_2966) ? 1.0 : min(_2966, 1.0));
        float _1027 = _1026 * 2.0;
        float _1031 = (1.0 - _1026) / (_1026 + 1.0);
        float _2977 = isnan(0.0) ? _1031 : (isnan(_1031) ? 0.0 : max(_1031, 0.0));
        float _1032 = isnan(1.0) ? _2977 : (isnan(_2977) ? 1.0 : min(_2977, 1.0));
        float _1041 = ((((1.0 - _1032) * (_1027 + 2.0)) * exp2(log2(isnan(1.0) ? _2955 : (isnan(_2955) ? 1.0 : min(_2955, 1.0))) * (_1027 + 1.0))) + _1032) * _956;
        float _1042 = _924 * 0.5;
        float _1043 = _934 * 0.5;
        float _1044 = _944 * 0.5;
        float _1045 = dot(vec3(_1042, _1043, _1044), vec3(_1042, _1043, _1044));
        float _1050 = (_1045 == 0.0) ? 3.4028234663852885981170418348452e+38 : inversesqrt(_1045);
        float _1058 = (dot(vec3(0.0), vec3(_1050 * _1042, _1050 * _1043, _1050 * _1044)) + 1.0) * 0.5;
        float _2988 = isnan(0.0) ? _1058 : (isnan(_1058) ? 0.0 : max(_1058, 0.0));
        float _1067 = sqrt(((_1043 * _1043) + (_1042 * _1042)) + (_1044 * _1044)) / (_957 + 9.9999997473787516355514526367188e-06);
        float _2999 = isnan(0.0) ? _1067 : (isnan(_1067) ? 0.0 : max(_1067, 0.0));
        float _1068 = isnan(1.0) ? _2999 : (isnan(_2999) ? 1.0 : min(_2999, 1.0));
        float _1069 = _1068 * 2.0;
        float _1073 = (1.0 - _1068) / (_1068 + 1.0);
        float _3010 = isnan(0.0) ? _1073 : (isnan(_1073) ? 0.0 : max(_1073, 0.0));
        float _1074 = isnan(1.0) ? _3010 : (isnan(_3010) ? 1.0 : min(_3010, 1.0));
        float _1083 = ((((1.0 - _1074) * (_1069 + 2.0)) * exp2(log2(isnan(1.0) ? _2988 : (isnan(_2988) ? 1.0 : min(_2988, 1.0))) * (_1069 + 1.0))) + _1074) * _957;
        _1091 = _924;
        _1092 = _923;
        _1093 = _922;
        _1094 = _934;
        _1095 = _933;
        _1096 = _932;
        _1097 = _944;
        _1098 = _943;
        _1099 = _942;
        _1100 = _957;
        _1101 = _956;
        _1102 = _955;
        _1103 = cbModelParam._m0[36u].w * (isnan(0.0) ? _999 : (isnan(_999) ? 0.0 : max(_999, 0.0)));
        _1104 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1041 : (isnan(_1041) ? 0.0 : max(_1041, 0.0)));
        _1105 = cbModelParam._m0[36u].w * (isnan(0.0) ? _1083 : (isnan(_1083) ? 0.0 : max(_1083, 0.0)));
    }
    else
    {
        _1091 = _378;
        _1092 = _378;
        _1093 = _378;
        _1094 = _378;
        _1095 = _378;
        _1096 = _378;
        _1097 = _378;
        _1098 = _378;
        _1099 = _378;
        _1100 = _378;
        _1101 = _378;
        _1102 = _378;
        _1103 = 0.0;
        _1104 = 0.0;
        _1105 = 0.0;
    }
    float _1115 = (cbModelParam._m0[1u].x * (_1103 - _828)) + _828;
    float _1116 = (cbModelParam._m0[1u].x * (_1104 - _829)) + _829;
    float _1117 = (cbModelParam._m0[1u].x * (_1105 - _830)) + _830;
    float _1138 = fma(_1117, cbSceneParam._m0[89u].z, fma(_1116, cbSceneParam._m0[89u].y, _1115 * cbSceneParam._m0[89u].x));
    float _1141 = fma(_1117, cbSceneParam._m0[90u].z, fma(_1116, cbSceneParam._m0[90u].y, _1115 * cbSceneParam._m0[90u].x));
    float _1144 = fma(_1117, cbSceneParam._m0[91u].z, fma(_1116, cbSceneParam._m0[91u].y, cbSceneParam._m0[91u].x * _1115));
    float _1159 = _462 * (-0.5);
    float _1160 = _463 * (-0.5);
    float _1161 = _464 * (-0.5);
    float _1162 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_1093, _1096, _1099, _1102));
    float _1165 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_1092, _1095, _1098, _1101));
    float _1168 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_1091, _1094, _1097, _1100));
    float _1202;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1175 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_816, _819, _822, _825));
        float _1179 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_817, _820, _823, _826));
        float _1183 = dot(vec4(_1159, _1160, _1161, 1.0), vec4(_818, _821, _824, _827));
        float _1190 = dot(vec4(cbModelParam._m0[39u]), vec4(_1159, _1160, _1161, 1.0));
        _1202 = dot(vec3(isnan(0.0) ? _1183 : (isnan(_1183) ? 0.0 : max(_1183, 0.0)), isnan(0.0) ? _1179 : (isnan(_1179) ? 0.0 : max(_1179, 0.0)), isnan(0.0) ? _1175 : (isnan(_1175) ? 0.0 : max(_1175, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1190) ? 0.0 : (isnan(0.0) ? _1190 : max(0.0, _1190))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1202 = 1.0;
    }
    float _1213;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1204 = dot(vec4(cbModelParam._m0[40u]), vec4(_1159, _1160, _1161, 1.0));
        _1213 = dot(vec3(isnan(0.0) ? _1162 : (isnan(_1162) ? 0.0 : max(_1162, 0.0)), isnan(0.0) ? _1165 : (isnan(_1165) ? 0.0 : max(_1165, 0.0)), isnan(0.0) ? _1168 : (isnan(_1168) ? 0.0 : max(_1168, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1204) ? 0.0 : (isnan(0.0) ? _1204 : max(0.0, _1204))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1213 = 1.0;
    }
    float _1217 = (_1213 * cbModelParam._m0[1u].x) + (_1202 * (1.0 - cbModelParam._m0[1u].x));
    float _1226 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1309;
    float _1311;
    float _1313;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1276 = fma(_542, cbModelParam._m0[13u].z, fma(_538, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _534)) + cbModelParam._m0[13u].w;
        float _1280 = fma(_542, cbModelParam._m0[14u].z, fma(_538, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _534)) + cbModelParam._m0[14u].w;
        float _1284 = fma(_542, cbModelParam._m0[15u].z, fma(_538, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _534)) + cbModelParam._m0[15u].w;
        float _1287 = fma(_512, cbModelParam._m0[13u].z, fma(_511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _510));
        float _1290 = fma(_512, cbModelParam._m0[14u].z, fma(_511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _510));
        float _1293 = fma(_512, cbModelParam._m0[15u].z, fma(_511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _510));
        float _1319;
        if (_1287 > 0.0)
        {
            _1319 = abs((1.0 - _1276) / _1287);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_1287 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_1276 + 1.0) / _1287);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _1319 = frontier_phi_26_24_ladder;
        }
        float _1617;
        if (_1290 > 0.0)
        {
            _1617 = abs((1.0 - _1280) / _1290);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_1290 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_1280 + 1.0) / _1290);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1617 = frontier_phi_35_31_ladder;
        }
        float _1920;
        if (_1293 > 0.0)
        {
            _1920 = abs((1.0 - _1284) / _1293);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_1293 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_1284 + 1.0) / _1293);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _1920 = frontier_phi_49_42_ladder;
        }
        float _1922 = isnan(_1617) ? _1319 : (isnan(_1319) ? _1617 : min(_1319, _1617));
        float _1923 = isnan(_1920) ? _1922 : (isnan(_1922) ? _1920 : min(_1922, _1920));
        float _1927 = (_1923 * _1287) + _1276;
        float _1928 = (_1923 * _1290) + _1280;
        float _1929 = (_1923 * _1293) + _1284;
        float _1930 = _1923 * 9.9999997473787516355514526367188e-05;
        float _1931 = (-1.0) - _1930;
        float _1933 = _1930 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1929 > _1933) || ((_1929 < _1931) || ((_1928 > _1933) || ((_1928 < _1931) || ((_1927 < _1931) || (_1927 > _1933))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2052 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1929, cbModelParam._m0[9u].z, fma(_1928, cbModelParam._m0[9u].y, _1927 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1929, cbModelParam._m0[10u].z, fma(_1928, cbModelParam._m0[10u].y, _1927 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1929, cbModelParam._m0[11u].z, fma(_1928, cbModelParam._m0[11u].y, _1927 * cbModelParam._m0[11u].x))), _1226);
            frontier_phi_25_49_ladder = _2052.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _2052.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _2052.x * cbModelParam._m0[1u].y;
        }
        _1309 = frontier_phi_25_49_ladder_2;
        _1311 = frontier_phi_25_49_ladder_1;
        _1313 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _1297 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_510, _511, _512), _1226);
        _1309 = _1297.x * cbModelParam._m0[1u].y;
        _1311 = _1297.y * cbModelParam._m0[1u].y;
        _1313 = _1297.z * cbModelParam._m0[1u].y;
    }
    float _1316 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1406;
    float _1408;
    float _1410;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1370 = fma(_542, cbModelParam._m0[21u].z, fma(_538, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _534)) + cbModelParam._m0[21u].w;
        float _1374 = fma(_542, cbModelParam._m0[22u].z, fma(_538, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _534)) + cbModelParam._m0[22u].w;
        float _1378 = fma(_542, cbModelParam._m0[23u].z, fma(_538, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _534)) + cbModelParam._m0[23u].w;
        float _1381 = fma(_512, cbModelParam._m0[21u].z, fma(_511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _510));
        float _1384 = fma(_512, cbModelParam._m0[22u].z, fma(_511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _510));
        float _1387 = fma(_512, cbModelParam._m0[23u].z, fma(_511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _510));
        float _1622;
        if (_1381 > 0.0)
        {
            _1622 = abs((1.0 - _1370) / _1381);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1381 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1370 + 1.0) / _1381);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1622 = frontier_phi_37_33_ladder;
        }
        float _1946;
        if (_1384 > 0.0)
        {
            _1946 = abs((1.0 - _1374) / _1384);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1384 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1374 + 1.0) / _1384);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _1946 = frontier_phi_51_44_ladder;
        }
        float _2112;
        if (_1387 > 0.0)
        {
            _2112 = abs((1.0 - _1378) / _1387);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1387 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1378 + 1.0) / _1387);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _2112 = frontier_phi_65_60_ladder;
        }
        float _2114 = isnan(_1946) ? _1622 : (isnan(_1622) ? _1946 : min(_1622, _1946));
        float _2115 = isnan(_2112) ? _2114 : (isnan(_2114) ? _2112 : min(_2114, _2112));
        float _2119 = (_2115 * _1381) + _1370;
        float _2120 = (_2115 * _1384) + _1374;
        float _2121 = (_2115 * _1387) + _1378;
        float _2122 = _2115 * 9.9999997473787516355514526367188e-05;
        float _2123 = (-1.0) - _2122;
        float _2125 = _2122 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_2121 > _2125) || ((_2121 < _2123) || ((_2120 > _2125) || ((_2120 < _2123) || ((_2119 < _2123) || (_2119 > _2125))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2304 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2121, cbModelParam._m0[17u].z, fma(_2120, cbModelParam._m0[17u].y, _2119 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2121, cbModelParam._m0[18u].z, fma(_2120, cbModelParam._m0[18u].y, _2119 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2121, cbModelParam._m0[19u].z, fma(_2120, cbModelParam._m0[19u].y, _2119 * cbModelParam._m0[19u].x))), _1316);
            frontier_phi_34_65_ladder = _2304.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _2304.x * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _2304.z * cbModelParam._m0[1u].z;
        }
        _1406 = frontier_phi_34_65_ladder_1;
        _1408 = frontier_phi_34_65_ladder;
        _1410 = frontier_phi_34_65_ladder_2;
    }
    else
    {
        vec4 _1390 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_510, _511, _512), _1316);
        _1406 = _1390.x * cbModelParam._m0[1u].z;
        _1408 = _1390.y * cbModelParam._m0[1u].z;
        _1410 = _1390.z * cbModelParam._m0[1u].z;
    }
    float _1422 = _509 * 0.01200000010430812835693359375;
    float _1424 = _1422 * ((cbModelParam._m0[1u].w * (_1406 - _1309)) + _1309);
    float _1425 = _1422 * ((cbModelParam._m0[1u].w * (_1408 - _1311)) + _1311);
    float _1426 = _1422 * ((cbModelParam._m0[1u].w * (_1410 - _1313)) + _1313);
    float _1429 = fma(_1426, cbSceneParam._m0[89u].z, fma(_1425, cbSceneParam._m0[89u].y, _1424 * cbSceneParam._m0[89u].x));
    float _1432 = fma(_1426, cbSceneParam._m0[90u].z, fma(_1425, cbSceneParam._m0[90u].y, _1424 * cbSceneParam._m0[90u].x));
    float _1435 = fma(_1426, cbSceneParam._m0[91u].z, fma(_1425, cbSceneParam._m0[91u].y, _1424 * cbSceneParam._m0[91u].x));
    uvec4 _1446 = floatBitsToUint(cbInstanceData._m0[_484 + 5u]);
    uint _1448 = _1446.x * 14u;
    uint _1449 = _1448 + 13u;
    float _1454 = _509 + (-1.0);
    float _1457 = (cbLight._m0[_1449].x * _1454) + 1.0;
    float _1458 = (cbLight._m0[_1449].y * _1454) + 1.0;
    uint _1459 = _1448 + 5u;
    float _1465 = isnan(1.0) ? _1458 : (isnan(_1458) ? 1.0 : min(_1458, 1.0));
    uint _1469 = _1448 + 4u;
    float _1475 = isnan(1.0) ? _1457 : (isnan(_1457) ? 1.0 : min(_1457, 1.0));
    uint _1479 = _1448 | 1u;
    float _1490 = dot(vec3(cbLight._m0[_1448].xyz), vec3(0.0));
    float _1493 = dot(vec3(cbLight._m0[_1479].xyz), vec3(0.0));
    float _3146 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _3157 = isnan(0.0) ? _1493 : (isnan(_1493) ? 0.0 : max(_1493, 0.0));
    float _1498 = (isnan(1.0) ? _3146 : (isnan(_3146) ? 1.0 : min(_3146, 1.0))) * 0.3183098733425140380859375;
    float _1500 = (isnan(1.0) ? _3157 : (isnan(_3157) ? 1.0 : min(_3157, 1.0))) * 0.3183098733425140380859375;
    float _1507 = ((cbLight._m0[_1459].x * _1465) * _1500) + ((cbLight._m0[_1469].x * _1475) * _1498);
    float _1508 = ((_1465 * cbLight._m0[_1459].y) * _1500) + ((_1475 * cbLight._m0[_1469].y) * _1498);
    float _1509 = ((_1465 * cbLight._m0[_1459].z) * _1500) + ((_1475 * cbLight._m0[_1469].z) * _1498);
    uint _1510 = _1448 + 8u;
    float _1516 = cbLight._m0[_1448].x + _462;
    float _1517 = cbLight._m0[_1448].y + _463;
    float _1518 = cbLight._m0[_1448].z + _464;
    float _1522 = inversesqrt(dot(vec3(_1516, _1517, _1518), vec3(_1516, _1517, _1518)));
    float _1526 = dot(vec3(0.0), vec3(cbLight._m0[_1448].xyz));
    float _3168 = isnan(0.0) ? _1526 : (isnan(_1526) ? 0.0 : max(_1526, 0.0));
    float _1529 = isnan(1.0) ? _3168 : (isnan(_3168) ? 1.0 : min(_3168, 1.0));
    float _1530 = dot(vec3(0.0), vec3(_462, _463, _464));
    float _3179 = isnan(0.0) ? _1530 : (isnan(_1530) ? 0.0 : max(_1530, 0.0));
    float _1533 = isnan(1.0) ? _3179 : (isnan(_3179) ? 1.0 : min(_3179, 1.0));
    float _1534 = dot(vec3(cbLight._m0[_1448].xyz), vec3(_1516 * _1522, _1517 * _1522, _1518 * _1522));
    float _3190 = isnan(0.0) ? _1534 : (isnan(_1534) ? 0.0 : max(_1534, 0.0));
    float _1545 = (exp2(log2(1.0 - (isnan(1.0) ? _3190 : (isnan(_3190) ? 1.0 : min(_3190, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1551 = (0.5 / ((_1529 + 9.9999999392252902907785028219223e-09) + _1533)) * _1529;
    float _3201 = isnan(0.0) ? _1551 : (isnan(_1551) ? 0.0 : max(_1551, 0.0));
    float _1553 = (isnan(1.0) ? _3201 : (isnan(_3201) ? 1.0 : min(_3201, 1.0))) * 0.31831014156341552734375;
    uint _1564 = _1448 + 9u;
    float _1570 = cbLight._m0[_1479].x + _462;
    float _1571 = cbLight._m0[_1479].y + _463;
    float _1572 = cbLight._m0[_1479].z + _464;
    float _1576 = inversesqrt(dot(vec3(_1570, _1571, _1572), vec3(_1570, _1571, _1572)));
    float _1580 = dot(vec3(0.0), vec3(cbLight._m0[_1479].xyz));
    float _3212 = isnan(0.0) ? _1580 : (isnan(_1580) ? 0.0 : max(_1580, 0.0));
    float _1583 = isnan(1.0) ? _3212 : (isnan(_3212) ? 1.0 : min(_3212, 1.0));
    float _1584 = dot(vec3(cbLight._m0[_1479].xyz), vec3(_1570 * _1576, _1571 * _1576, _1572 * _1576));
    float _3223 = isnan(0.0) ? _1584 : (isnan(_1584) ? 0.0 : max(_1584, 0.0));
    float _1593 = (exp2(log2(1.0 - (isnan(1.0) ? _3223 : (isnan(_3223) ? 1.0 : min(_3223, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1597 = (0.5 / ((_1583 + 9.9999999392252902907785028219223e-09) + _1533)) * _1583;
    float _3234 = isnan(0.0) ? _1597 : (isnan(_1597) ? 0.0 : max(_1597, 0.0));
    float _1599 = (isnan(1.0) ? _3234 : (isnan(_3234) ? 1.0 : min(_3234, 1.0))) * 0.31831014156341552734375;
    float _1609 = (((_1593 * cbLight._m0[_1564].x) * _1599) * _1465) + (((_1545 * cbLight._m0[_1510].x) * _1553) * _1475);
    float _1610 = (((_1593 * cbLight._m0[_1564].y) * _1599) * _1465) + (((_1545 * cbLight._m0[_1510].y) * _1553) * _1475);
    float _1611 = (((_1593 * cbLight._m0[_1564].z) * _1599) * _1465) + (((_1545 * cbLight._m0[_1510].z) * _1553) * _1475);
    float _1728;
    float _1730;
    float _1732;
    float _1734;
    float _1736;
    float _1738;
    if (_1446.y == 0u)
    {
        float _1667 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1668 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1667;
        float _1669 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1667;
        float _1670 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1667;
        uvec4 _1682 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1683 = _1682.x;
        uint _1694 = uint((float(_1682.y) * floor(float(uint(cbSceneParam._m0[85u].y * _471) / _1683))) + floor(float(uint(cbSceneParam._m0[85u].x * _470) / _1683)));
        float _1704 = (log2(_1670 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1705 = isnan(0.0) ? _1704 : (isnan(_1704) ? 0.0 : max(_1704, 0.0));
        uint _1708 = uint(isnan(14.0) ? _1705 : (isnan(_1705) ? 14.0 : min(_1705, 14.0)));
        uvec4 _1714 = texelFetch(g_lightClusterGridBuffer, int(((_1708 << 2u) + (_1694 << 6u)) >> 2u));
        uint _1715 = _1714.x;
        uint _1716 = _1682.z;
        float _1806;
        float _1808;
        float _1810;
        float _1812;
        float _1814;
        float _1816;
        if (((((1u << ((_1716 >> 4u) & 15u)) + 4294967295u) & _1715) == 0u) || ((_1716 & 240u) == 0u))
        {
            _1806 = 0.0;
            _1808 = 0.0;
            _1810 = 0.0;
            _1812 = 0.0;
            _1814 = 0.0;
            _1816 = 0.0;
        }
        else
        {
            float _1807;
            float _1809;
            float _1811;
            float _1813;
            float _1815;
            float _1817;
            float _1980 = 0.0;
            float _1981 = 0.0;
            float _1982 = 0.0;
            float _1983 = 0.0;
            float _1984 = 0.0;
            float _1985 = 0.0;
            uint _1986 = 0u;
            uint _1995;
            bool _1996;
            for (;;)
            {
                _1995 = texelFetch(g_lightClassification, int((((_1708 << 5u) + (_1694 << 9u)) + (_1986 << 2u)) >> 2u)).x;
                _1996 = _1995 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                float frontier_phi_62_pred_3;
                float frontier_phi_62_pred_4;
                float frontier_phi_62_pred_5;
                if (_1996)
                {
                    frontier_phi_62_pred = _1981;
                    frontier_phi_62_pred_1 = _1980;
                    frontier_phi_62_pred_2 = _1982;
                    frontier_phi_62_pred_3 = _1985;
                    frontier_phi_62_pred_4 = _1984;
                    frontier_phi_62_pred_5 = _1983;
                }
                else
                {
                    float _2155;
                    float _2156;
                    float _2157;
                    float _2158;
                    float _2159;
                    float _2160;
                    uint _2161;
                    _2155 = _1980;
                    _2156 = _1981;
                    _2157 = _1982;
                    _2158 = _1983;
                    _2159 = _1984;
                    _2160 = _1985;
                    _2161 = _1995;
                    float _2061;
                    float _2062;
                    float _2063;
                    float _2064;
                    float _2065;
                    float _2066;
                    for (;;)
                    {
                        uint _2165 = uint(findLSB(_2161)) + (_1986 << 5u);
                        uint _2162 = (_2161 + 4294967295u) & _2161;
                        uint _2167 = _2165 * 48u;
                        vec4 _2181 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2167)).x, texelFetch(g_PointLightRenderingBuffer, int(_2167 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2167 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2167 + 3u)).x));
                        uint _2187 = (_2165 * 48u) + 4u;
                        vec4 _2200 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2187)).x, texelFetch(g_PointLightRenderingBuffer, int(_2187 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2187 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2187 + 3u)).x));
                        uint _2206 = (_2165 * 48u) + 8u;
                        vec3 _2217 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2206)).x, texelFetch(g_PointLightRenderingBuffer, int(_2206 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2206 + 2u)).x));
                        float _2221 = _2181.x - _1668;
                        float _2222 = _2181.y - _1669;
                        float _2223 = _2181.z - _1670;
                        float _2224 = dot(vec3(_2221, _2222, _2223), vec3(_2221, _2222, _2223));
                        float _2227 = inversesqrt(_2224);
                        float _2236 = 1.0 - (_2224 * _2181.w);
                        float _3255 = isnan(0.0) ? _2236 : (isnan(_2236) ? 0.0 : max(_2236, 0.0));
                        float _2237 = isnan(1.0) ? _3255 : (isnan(_3255) ? 1.0 : min(_3255, 1.0));
                        float _2238 = sqrt(_2224) * _2200.w;
                        float _2241 = 1.39999997615814208984375 / (_2238 + 1.39999997615814208984375);
                        float _2242 = _2241 * _2241;
                        float _2245 = ((1.0 - _2242) * dot(vec3(0.0), vec3(_2227 * _2221, _2227 * _2222, _2227 * _2223))) + _2242;
                        float _2248 = _2238 * _2238;
                        float _2252 = ((isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0))) * _2237) / ((_2248 * 0.699999988079071044921875) + 1.0);
                        float _2256 = (-0.0) - _1668;
                        float _2257 = (-0.0) - _1669;
                        float _2258 = (-0.0) - _1670;
                        float _2262 = inversesqrt(dot(vec3(_2256, _2257, _2258), vec3(_2256, _2257, _2258)));
                        float _2266 = dot(vec3(0.0), vec3(_2262 * _2256, _2262 * _2257, _2262 * _2258));
                        float _3271 = isnan(0.0) ? _2266 : (isnan(_2266) ? 0.0 : max(_2266, 0.0));
                        float _3282 = isnan(0.0) ? _2245 : (isnan(_2245) ? 0.0 : max(_2245, 0.0));
                        float _2270 = isnan(1.0) ? _3282 : (isnan(_3282) ? 1.0 : min(_3282, 1.0));
                        float _2274 = (0.5 / (((isnan(1.0) ? _3271 : (isnan(_3271) ? 1.0 : min(_3271, 1.0))) + 9.9999999392252902907785028219223e-09) + _2270)) * _2270;
                        float _3293 = isnan(0.0) ? _2274 : (isnan(_2274) ? 0.0 : max(_2274, 0.0));
                        float _2283 = (((isnan(1.0) ? _3293 : (isnan(_3293) ? 1.0 : min(_3293, 1.0))) * 3.1415927410125732421875) / ((_2248 * 2.1991131305694580078125) + 3.141590118408203125)) * _2237;
                        _2064 = (_2252 * _2200.x) + _2158;
                        _2065 = (_2252 * _2200.y) + _2159;
                        _2066 = (_2252 * _2200.z) + _2160;
                        _2061 = (_2283 * _2217.x) + _2155;
                        _2062 = (_2283 * _2217.y) + _2156;
                        _2063 = (_2283 * _2217.z) + _2157;
                        if (_2162 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2155 = _2061;
                            _2156 = _2062;
                            _2157 = _2063;
                            _2158 = _2064;
                            _2159 = _2065;
                            _2160 = _2066;
                            _2161 = _2162;
                        }
                    }
                    frontier_phi_62_pred = _2062;
                    frontier_phi_62_pred_1 = _2061;
                    frontier_phi_62_pred_2 = _2063;
                    frontier_phi_62_pred_3 = _2066;
                    frontier_phi_62_pred_4 = _2065;
                    frontier_phi_62_pred_5 = _2064;
                }
                _1809 = frontier_phi_62_pred;
                _1807 = frontier_phi_62_pred_1;
                _1811 = frontier_phi_62_pred_2;
                _1817 = frontier_phi_62_pred_3;
                _1815 = frontier_phi_62_pred_4;
                _1813 = frontier_phi_62_pred_5;
                uint _1987 = _1986 + 1u;
                if (_1987 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1980 = _1807;
                    _1981 = _1809;
                    _1982 = _1811;
                    _1983 = _1813;
                    _1984 = _1815;
                    _1985 = _1817;
                    _1986 = _1987;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1806 = _1807;
            _1808 = _1809;
            _1810 = _1811;
            _1812 = _1813;
            _1814 = _1815;
            _1816 = _1817;
        }
        uvec4 _1820 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1821 = _1820.z;
        uint _1823 = (_1821 >> 8u) & 15u;
        float _1951;
        float _1953;
        float _1955;
        float _1957;
        float _1959;
        float _1961;
        if (((4294967295u << _1823) & _1715) == 0u)
        {
            _1951 = _1806;
            _1953 = _1808;
            _1955 = _1810;
            _1957 = _1812;
            _1959 = _1814;
            _1961 = _1816;
        }
        else
        {
            float _1976 = inversesqrt(dot(vec3(_1668, _1669, _1670), vec3(_1668, _1669, _1670)));
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            float frontier_phi_53_54_ladder_3;
            float frontier_phi_53_54_ladder_4;
            float frontier_phi_53_54_ladder_5;
            if (_1823 < ((_1821 >> 12u) & 15u))
            {
                float _1952;
                float _1954;
                float _1956;
                float _1958;
                float _1960;
                float _1962;
                float _2138 = _1806;
                float _2139 = _1808;
                float _2140 = _1810;
                float _2141 = _1812;
                float _2142 = _1814;
                float _2143 = _1816;
                uint _2144 = _1823;
                uint _2153;
                bool _2154;
                for (;;)
                {
                    _2153 = texelFetch(g_lightClassification, int((((_1708 << 5u) + (_1694 << 9u)) + (_2144 << 2u)) >> 2u)).x;
                    _2154 = _2153 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    float frontier_phi_71_pred_3;
                    float frontier_phi_71_pred_4;
                    float frontier_phi_71_pred_5;
                    if (_2154)
                    {
                        frontier_phi_71_pred = _2139;
                        frontier_phi_71_pred_1 = _2138;
                        frontier_phi_71_pred_2 = _2143;
                        frontier_phi_71_pred_3 = _2142;
                        frontier_phi_71_pred_4 = _2141;
                        frontier_phi_71_pred_5 = _2140;
                    }
                    else
                    {
                        float _2309;
                        float _2310;
                        float _2311;
                        float _2312;
                        float _2313;
                        float _2314;
                        float _2558;
                        float _2559;
                        float _2560;
                        float _2561;
                        float _2562;
                        float _2563;
                        float _2322 = _2138;
                        float _2323 = _2139;
                        float _2324 = _2140;
                        float _2325 = _2141;
                        float _2326 = _2142;
                        float _2327 = _2143;
                        uint _2328 = _2153;
                        uint _2329;
                        vec4 _2354;
                        float _2355;
                        vec4 _2370;
                        vec3 _2382;
                        vec4 _2397;
                        vec4 _2412;
                        float _2458;
                        bool _2459;
                        for (;;)
                        {
                            uint _2339 = ((_2144 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2328));
                            _2329 = (_2328 + 4294967295u) & _2328;
                            uint _2341 = _2339 * 40u;
                            _2354 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2341)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2341 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2341 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2341 + 3u)).x));
                            _2355 = _2354.w;
                            uint _2357 = (_2339 * 40u) + 4u;
                            _2370 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2357)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2357 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2357 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2357 + 3u)).x));
                            uint _2372 = (_2339 * 40u) + 8u;
                            _2382 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2372)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2372 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2372 + 2u)).x));
                            uint _2384 = (_2339 * 40u) + 16u;
                            _2397 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2384)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2384 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2384 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2384 + 3u)).x));
                            uint _2399 = (_2339 * 40u) + 20u;
                            _2412 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2399)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2399 + 3u)).x));
                            uint _2414 = (_2339 * 40u) + 24u;
                            vec4 _2427 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2414)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2414 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2414 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2414 + 3u)).x));
                            uint _2433 = (_2339 * 40u) + 28u;
                            vec4 _2446 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2433)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2433 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2433 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2433 + 3u)).x));
                            _2458 = fma(_1670, _2446.z, fma(_1669, _2446.y, _2446.x * _1668)) + _2446.w;
                            _2459 = !((fma(_1670, _2427.z, fma(_1669, _2427.y, _2427.x * _1668)) + _2427.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            float frontier_phi_77_pred_3;
                            float frontier_phi_77_pred_4;
                            float frontier_phi_77_pred_5;
                            if (_2459)
                            {
                                float _2486 = _2354.x - _1668;
                                float _2487 = _2354.y - _1669;
                                float _2488 = _2354.z - _1670;
                                float _2489 = dot(vec3(_2486, _2487, _2488), vec3(_2486, _2487, _2488));
                                float _2492 = inversesqrt(_2489);
                                float _2493 = _2492 * _2486;
                                float _2494 = _2492 * _2487;
                                float _2495 = _2492 * _2488;
                                float _2499 = 1.0 - (_2489 / (_2355 * _2355));
                                float _3304 = isnan(0.0) ? _2499 : (isnan(_2499) ? 0.0 : max(_2499, 0.0));
                                float _2500 = isnan(1.0) ? _3304 : (isnan(_3304) ? 1.0 : min(_3304, 1.0));
                                float _2504 = sqrt(_2489) * _2370.w;
                                float _2506 = 1.39999997615814208984375 / (_2504 + 1.39999997615814208984375);
                                float _2507 = _2506 * _2506;
                                float _2508 = 1.0 - _2507;
                                float _2510 = (_2508 * dot(vec3(_2493, _2494, _2495), vec3(0.0))) + _2507;
                                float _2513 = _2504 * _2504;
                                float _2517 = (fma(_1670, _2397.z, fma(_1669, _2397.y, _2397.x * _1668)) + _2397.w) / _2458;
                                float _2518 = (fma(_1670, _2412.z, fma(_1669, _2412.y, _2412.x * _1668)) + _2412.w) / _2458;
                                float _2522 = 1.0 - dot(vec2(_2517, _2518), vec2(_2517, _2518));
                                float _3320 = isnan(0.0) ? _2522 : (isnan(_2522) ? 0.0 : max(_2522, 0.0));
                                float _2523 = isnan(1.0) ? _3320 : (isnan(_3320) ? 1.0 : min(_3320, 1.0));
                                float _2524 = _2523 * (((isnan(0.0) ? _2510 : (isnan(_2510) ? 0.0 : max(_2510, 0.0))) * _2500) / ((_2513 * 0.699999988079071044921875) + 1.0));
                                float _2534 = dot(vec3(0.0), vec3((-0.0) - (_1668 * _1976), (-0.0) - (_1669 * _1976), (-0.0) - (_1670 * _1976)));
                                float _3331 = isnan(0.0) ? _2534 : (isnan(_2534) ? 0.0 : max(_2534, 0.0));
                                float _2542 = (_2508 * dot(vec3(0.0), vec3(_2493, _2494, _2495))) + _2507;
                                float _3342 = isnan(0.0) ? _2542 : (isnan(_2542) ? 0.0 : max(_2542, 0.0));
                                float _2543 = isnan(1.0) ? _3342 : (isnan(_3342) ? 1.0 : min(_3342, 1.0));
                                float _2547 = (0.5 / (((isnan(1.0) ? _3331 : (isnan(_3331) ? 1.0 : min(_3331, 1.0))) + 9.9999999392252902907785028219223e-09) + _2543)) * _2543;
                                float _3353 = isnan(0.0) ? _2547 : (isnan(_2547) ? 0.0 : max(_2547, 0.0));
                                float _2554 = (_2523 * _2500) * (((isnan(1.0) ? _3353 : (isnan(_3353) ? 1.0 : min(_3353, 1.0))) * 3.1415927410125732421875) / ((_2513 * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_77_pred = _2554 * _2382.y;
                                frontier_phi_77_pred_1 = _2554 * _2382.x;
                                frontier_phi_77_pred_2 = _2524 * _2370.z;
                                frontier_phi_77_pred_3 = _2524 * _2370.y;
                                frontier_phi_77_pred_4 = _2524 * _2370.x;
                                frontier_phi_77_pred_5 = _2554 * _2382.z;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                                frontier_phi_77_pred_3 = 0.0;
                                frontier_phi_77_pred_4 = 0.0;
                                frontier_phi_77_pred_5 = 0.0;
                            }
                            _2559 = frontier_phi_77_pred;
                            _2558 = frontier_phi_77_pred_1;
                            _2563 = frontier_phi_77_pred_2;
                            _2562 = frontier_phi_77_pred_3;
                            _2561 = frontier_phi_77_pred_4;
                            _2560 = frontier_phi_77_pred_5;
                            _2312 = _2561 + _2325;
                            _2313 = _2562 + _2326;
                            _2314 = _2563 + _2327;
                            _2309 = _2558 + _2322;
                            _2310 = _2559 + _2323;
                            _2311 = _2560 + _2324;
                            if (_2329 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2322 = _2309;
                                _2323 = _2310;
                                _2324 = _2311;
                                _2325 = _2312;
                                _2326 = _2313;
                                _2327 = _2314;
                                _2328 = _2329;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _2310;
                        frontier_phi_71_pred_1 = _2309;
                        frontier_phi_71_pred_2 = _2314;
                        frontier_phi_71_pred_3 = _2313;
                        frontier_phi_71_pred_4 = _2312;
                        frontier_phi_71_pred_5 = _2311;
                    }
                    _1954 = frontier_phi_71_pred;
                    _1952 = frontier_phi_71_pred_1;
                    _1962 = frontier_phi_71_pred_2;
                    _1960 = frontier_phi_71_pred_3;
                    _1958 = frontier_phi_71_pred_4;
                    _1956 = frontier_phi_71_pred_5;
                    uint _2145 = _2144 + 1u;
                    if (_2145 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2138 = _1952;
                        _2139 = _1954;
                        _2140 = _1956;
                        _2141 = _1958;
                        _2142 = _1960;
                        _2143 = _1962;
                        _2144 = _2145;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _1962;
                frontier_phi_53_54_ladder_1 = _1958;
                frontier_phi_53_54_ladder_2 = _1956;
                frontier_phi_53_54_ladder_3 = _1954;
                frontier_phi_53_54_ladder_4 = _1952;
                frontier_phi_53_54_ladder_5 = _1960;
            }
            else
            {
                frontier_phi_53_54_ladder = _1816;
                frontier_phi_53_54_ladder_1 = _1812;
                frontier_phi_53_54_ladder_2 = _1810;
                frontier_phi_53_54_ladder_3 = _1808;
                frontier_phi_53_54_ladder_4 = _1806;
                frontier_phi_53_54_ladder_5 = _1814;
            }
            _1951 = frontier_phi_53_54_ladder_4;
            _1953 = frontier_phi_53_54_ladder_3;
            _1955 = frontier_phi_53_54_ladder_2;
            _1957 = frontier_phi_53_54_ladder_1;
            _1959 = frontier_phi_53_54_ladder_5;
            _1961 = frontier_phi_53_54_ladder;
        }
        float _1966 = isnan(1.0) ? _509 : (isnan(_509) ? 1.0 : min(_509, 1.0));
        _1728 = (_1966 * _1957) + _1507;
        _1730 = (_1966 * _1959) + _1508;
        _1732 = (_1966 * _1961) + _1509;
        _1734 = ((_1951 * 0.039999999105930328369140625) * _1966) + _1609;
        _1736 = ((_1953 * 0.039999999105930328369140625) * _1966) + _1610;
        _1738 = ((_1955 * 0.039999999105930328369140625) * _1966) + _1611;
    }
    else
    {
        _1728 = _1507;
        _1730 = _1508;
        _1732 = _1509;
        _1734 = _1609;
        _1736 = _1610;
        _1738 = _1611;
    }
    float _3369 = isnan(0.0) ? _495 : (isnan(_495) ? 0.0 : max(_495, 0.0));
    float _3380 = isnan(0.0) ? _496 : (isnan(_496) ? 0.0 : max(_496, 0.0));
    float _3391 = isnan(0.0) ? _497 : (isnan(_497) ? 0.0 : max(_497, 0.0));
    float _1755 = ((isnan(1.0) ? _3369 : (isnan(_3369) ? 1.0 : min(_3369, 1.0))) * (_1728 + ((isnan(0.0) ? _1138 : (isnan(_1138) ? 0.0 : max(_1138, 0.0))) * _509))) + ((_1734 + ((isnan(0.0) ? _1429 : (isnan(_1429) ? 0.0 : max(_1429, 0.0))) * _1217)) * cbPerFrame._m0[3u].x);
    float _1756 = ((isnan(1.0) ? _3380 : (isnan(_3380) ? 1.0 : min(_3380, 1.0))) * (_1730 + ((isnan(0.0) ? _1141 : (isnan(_1141) ? 0.0 : max(_1141, 0.0))) * _509))) + ((_1736 + ((isnan(0.0) ? _1432 : (isnan(_1432) ? 0.0 : max(_1432, 0.0))) * _1217)) * cbPerFrame._m0[3u].x);
    float _1757 = ((isnan(1.0) ? _3391 : (isnan(_3391) ? 1.0 : min(_3391, 1.0))) * (_1732 + ((isnan(0.0) ? _1144 : (isnan(_1144) ? 0.0 : max(_1144, 0.0))) * _509))) + ((_1738 + ((isnan(0.0) ? _1435 : (isnan(_1435) ? 0.0 : max(_1435, 0.0))) * _1217)) * cbPerFrame._m0[3u].x);
    uint _1761 = _484 + 6u;
    float _1769 = _470 / cbSceneParam._m0[86u].x;
    float _1770 = _471 / cbSceneParam._m0[86u].y;
    vec4 _1784 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1769, _1770, (log2((isnan(cbSceneParam._m0[77u].w) ? _457 : (isnan(_457) ? cbSceneParam._m0[77u].w : min(_457, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1786 = _1784.x;
    float _1787 = _1784.y;
    float _1788 = _1784.z;
    float _1789 = _1784.w;
    float _1869;
    float _1871;
    float _1873;
    float _1875;
    if (_457 > cbSceneParam._m0[78u].w)
    {
        float _1831 = isnan(_457) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _457 : min(cbSceneParam._m0[80u].w, _457));
        float _1832 = _1831 / _457;
        float _1843 = _1832 * _250;
        float _1844 = _251 * _1832;
        float _1845 = (-0.0) - _1844;
        float _1846 = _1832 * _252;
        float _1848 = (cbSceneParam._m0[77u].w * _1845) / _1831;
        float _1849 = _1848 + cbSceneParam._m0[79u].w;
        float _1850 = cbSceneParam._m0[79u].w - _1844;
        float _1856 = sqrt(((_1843 * _1843) + (_1844 * _1844)) + (_1846 * _1846));
        float _1859 = (1.0 - (cbSceneParam._m0[77u].w / _1831)) * _1856;
        float _1865 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1867 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2074;
        if (abs((_1845 - _1848) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2074 = ((((_1849 > 0.0) ? exp2(_1865 * _1849) : (2.0 - exp2(_1867 * _1849))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1859;
        }
        else
        {
            float _2009 = 1.0 / cbSceneParam._m0[80u].x;
            float _2010 = isnan(_1850) ? _1849 : (isnan(_1849) ? _1850 : max(_1849, _1850));
            float _2011 = isnan(_1850) ? _1849 : (isnan(_1849) ? _1850 : min(_1849, _1850));
            float _2020 = isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : min(_2010, 0.0));
            float _2021 = isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : min(_2011, 0.0));
            _2074 = ((abs(_1856 / _1845) * cbSceneParam._m0[80u].y) * ((((_2020 - _2021) * 2.0) - ((exp2(_1865 * (isnan(0.0) ? _2010 : (isnan(_2010) ? 0.0 : max(_2010, 0.0)))) - exp2(_1865 * (isnan(0.0) ? _2011 : (isnan(_2011) ? 0.0 : max(_2011, 0.0))))) * _2009)) - ((exp2(_1867 * _2020) - exp2(_1867 * _2021)) * _2009))) + (_1859 * cbSceneParam._m0[80u].z);
        }
        vec4 _2076 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1769, _1770, 1.0), 0.0);
        float _2085 = exp2((_2074 * (-1.44269502162933349609375)) * (1.0 - _2076.w));
        float _2086 = log2(_2085);
        float _2102 = log2(_1789);
        _1869 = (exp2(_2102 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].x)) * _2076.x) / cbSceneParam._m0[78u].x)) + _1786;
        _1871 = (exp2(_2102 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].y)) * _2076.y) / cbSceneParam._m0[78u].y)) + _1787;
        _1873 = (exp2(_2102 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2086 * cbSceneParam._m0[78u].z)) * _2076.z) / cbSceneParam._m0[78u].z)) + _1788;
        _1875 = _2085 * _1789;
    }
    else
    {
        _1869 = _1786;
        _1871 = _1787;
        _1873 = _1788;
        _1875 = _1789;
    }
    float _1887 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1888 = _1887 == 3.0;
    float _1890 = log2(_1875);
    float _1897 = exp2(_1890 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)));
    float _1898 = exp2(_1890 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1756 : (isnan(_1756) ? 0.0 : max(_1756, 0.0)));
    float _1899 = exp2(_1890 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1757 : (isnan(_1757) ? 0.0 : max(_1757, 0.0)));
    float _1908 = (_1887 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1908 * (_1888 ? _1897 : (_1897 + (cbSceneParam._m0[72u].w * _1869)));
    SV_Target.y = _1908 * (_1888 ? _1898 : (_1898 + (cbSceneParam._m0[72u].w * _1871)));
    SV_Target.z = _1908 * (_1888 ? _1899 : (_1899 + (cbSceneParam._m0[72u].w * _1873)));
    SV_Target.w = cbInstanceData._m0[_1761].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1761].w;
}


