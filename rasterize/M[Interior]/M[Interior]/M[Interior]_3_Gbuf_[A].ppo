#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 7) uniform texture2D M_Interior_snp_0_Texture2D_7;
layout(set = 0, binding = 8) uniform texture2D M_Interior_snp_0_Texture2D_8;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _151 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _152 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _153 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _158 = inversesqrt(dot(vec3(_151, _152, _153), vec3(_151, _152, _153)));
    float _165 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _172 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _220 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _230 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _220);
    float _231 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _220);
    float _232 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _220);
    vec4 _254 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _289 = cbMtdParam._m0[21u].w + _230;
    float _290 = cbMtdParam._m0[22u].x + _231;
    float _291 = cbMtdParam._m0[22u].y + _232;
    float _305 = (-0.0) - dot(vec3(_289, _290, _291), vec3(_158 * _151, _158 * _152, _158 * _153));
    float _306 = (-0.0) - dot(vec3(_289, _290, _291), vec3(_172 * TANGENT.x, _172 * TANGENT.y, _172 * TANGENT.z));
    float _307 = (-0.0) - dot(vec3(_289, _290, _291), vec3((-0.0) - (_165 * NORMAL.x), (-0.0) - (_165 * NORMAL.y), (-0.0) - (_165 * NORMAL.z)));
    float _311 = inversesqrt(dot(vec3(_305, _306, _307), vec3(_305, _306, _307)));
    float _314 = _311 * _307;
    float _315 = (_311 * _305) + (((_254.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _316 = (_311 * _306) + (((_254.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _317 = _315 * cbMtdParam._m0[18u].z;
    float _318 = _316 * cbMtdParam._m0[18u].y;
    float _319 = fract(TEXCOORD.x);
    float _320 = fract(TEXCOORD.y);
    float _326;
    if (_317 > 0.0)
    {
        _326 = (1.0 - _319) / _317;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_317 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _319) / _317;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _326 = frontier_phi_3_2_ladder;
    }
    float _334;
    if (_318 > 0.0)
    {
        _334 = (1.0 - _320) / _318;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_318 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _320) / _318;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _334 = frontier_phi_7_6_ladder;
    }
    bool _336 = _314 > 0.0;
    float _338 = _336 ? (cbMtdParam._m0[15u].x / _314) : 5000.0;
    float _339 = isnan(_334) ? _326 : (isnan(_326) ? _334 : min(_326, _334));
    float _340 = isnan(_338) ? _339 : (isnan(_339) ? _338 : min(_339, _338));
    float _344 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _345 = _319 + (-0.5);
    float _348 = _320 + (-0.5);
    float _351 = ((_340 * _314) + _344) / _344;
    vec4 _375 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_345 + (_340 * _317)) / _351) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_348 + (_340 * _318)) / _351) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _385 = cbMtdParam._m0[9u].x * _375.x;
    float _386 = cbMtdParam._m0[9u].y * _375.y;
    float _387 = cbMtdParam._m0[9u].z * _375.z;
    float _405 = _315 * cbMtdParam._m0[20u].z;
    float _406 = _316 * cbMtdParam._m0[20u].y;
    bool _407 = _405 > 0.0;
    float _412;
    if (_407)
    {
        _412 = (1.0 - _319) / _405;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_405 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _319) / _405;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _412 = frontier_phi_11_10_ladder;
    }
    bool _414 = _406 > 0.0;
    float _419;
    if (_414)
    {
        _419 = (1.0 - _320) / _406;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _320) / _406;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _419 = frontier_phi_15_14_ladder;
    }
    float _422 = _336 ? (cbMtdParam._m0[16u].x / _314) : 5000.0;
    float _423 = isnan(_419) ? _412 : (isnan(_412) ? _419 : min(_412, _419));
    float _424 = isnan(_422) ? _423 : (isnan(_423) ? _422 : min(_423, _422));
    float _428 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _432 = ((_424 * _314) + _428) / _428;
    float _437 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _439 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _455 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_345 + (_424 * _405)) / _432) + 0.5) + _437) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_348 + (_424 * _406)) / _432) + 0.5) + _439) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _467;
    if (_407)
    {
        _467 = (1.0 - _319) / _405;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_405 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _319) / _405;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _467 = frontier_phi_19_18_ladder;
    }
    float _473;
    if (_414)
    {
        _473 = (1.0 - _320) / _406;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_406 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _320) / _406;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _473 = frontier_phi_23_22_ladder;
    }
    float _475 = isnan(_473) ? _467 : (isnan(_467) ? _473 : min(_467, _473));
    float _476 = isnan(_422) ? _475 : (isnan(_475) ? _422 : min(_475, _422));
    float _483 = ((_476 * _314) + _428) / _428;
    vec4 _504 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_345 + (_476 * _405)) / _483) + 0.5) + _437) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_348 + (_476 * _406)) / _483) + 0.5) + _439) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _506 = _504.x;
    float _513 = (_506 * ((_455.x * cbMtdParam._m0[10u].x) - _385)) + _385;
    float _514 = (_506 * ((_455.y * cbMtdParam._m0[10u].y) - _386)) + _386;
    float _515 = (_506 * ((_455.z * cbMtdParam._m0[10u].z) - _387)) + _387;
    float _529 = _315 * cbMtdParam._m0[21u].x;
    float _530 = _316 * cbMtdParam._m0[20u].w;
    bool _531 = _529 > 0.0;
    float _536;
    if (_531)
    {
        _536 = (1.0 - _319) / _529;
    }
    else
    {
        float frontier_phi_27_26_ladder;
        if (_529 < 0.0)
        {
            frontier_phi_27_26_ladder = ((-0.0) - _319) / _529;
        }
        else
        {
            frontier_phi_27_26_ladder = 5000.0;
        }
        _536 = frontier_phi_27_26_ladder;
    }
    bool _538 = _530 > 0.0;
    float _543;
    if (_538)
    {
        _543 = (1.0 - _320) / _530;
    }
    else
    {
        float frontier_phi_31_30_ladder;
        if (_530 < 0.0)
        {
            frontier_phi_31_30_ladder = ((-0.0) - _320) / _530;
        }
        else
        {
            frontier_phi_31_30_ladder = 5000.0;
        }
        _543 = frontier_phi_31_30_ladder;
    }
    float _546 = _336 ? (cbMtdParam._m0[17u].z / _314) : 5000.0;
    float _547 = isnan(_543) ? _536 : (isnan(_536) ? _543 : min(_536, _543));
    float _548 = isnan(_546) ? _547 : (isnan(_547) ? _546 : min(_547, _546));
    float _552 = cbMtdParam._m0[17u].z * cbMtdParam._m0[15u].z;
    float _556 = ((_548 * _314) + _552) / _552;
    float _561 = cbMtdParam._m0[17u].y - cbMtdParam._m0[21u].y * trunc(cbMtdParam._m0[17u].y / cbMtdParam._m0[21u].y);
    float _563 = floor(cbMtdParam._m0[17u].y / cbMtdParam._m0[21u].y);
    vec4 _580 = texture(sampler2D(M_Interior_snp_0_Texture2D_7, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[7u].x * (((((_345 + (_548 * _529)) / _556) + 0.5) + _561) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[7u].z, (cbTextureTilingScale._m0[7u].y * (((((_348 + (_548 * _530)) / _556) + 0.5) + _563) / cbMtdParam._m0[21u].z)) + cbTextureTilingScale._m0[7u].w));
    float _592;
    if (_531)
    {
        _592 = (1.0 - _319) / _529;
    }
    else
    {
        float frontier_phi_35_34_ladder;
        if (_529 < 0.0)
        {
            frontier_phi_35_34_ladder = ((-0.0) - _319) / _529;
        }
        else
        {
            frontier_phi_35_34_ladder = 5000.0;
        }
        _592 = frontier_phi_35_34_ladder;
    }
    float _598;
    if (_538)
    {
        _598 = (1.0 - _320) / _530;
    }
    else
    {
        float frontier_phi_39_38_ladder;
        if (_530 < 0.0)
        {
            frontier_phi_39_38_ladder = ((-0.0) - _320) / _530;
        }
        else
        {
            frontier_phi_39_38_ladder = 5000.0;
        }
        _598 = frontier_phi_39_38_ladder;
    }
    float _600 = isnan(_598) ? _592 : (isnan(_592) ? _598 : min(_592, _598));
    float _601 = isnan(_546) ? _600 : (isnan(_600) ? _546 : min(_600, _546));
    float _608 = ((_601 * _314) + _552) / _552;
    vec4 _628 = texture(sampler2D(M_Interior_snp_0_Texture2D_8, SS_WrapLinear), vec2((cbTextureTilingScale._m0[8u].x * (((((_345 + (_601 * _529)) / _608) + 0.5) + _561) / cbMtdParam._m0[21u].y)) + cbTextureTilingScale._m0[8u].z, (cbTextureTilingScale._m0[8u].y * (((((_348 + (_601 * _530)) / _608) + 0.5) + _563) / cbMtdParam._m0[21u].z)) + cbTextureTilingScale._m0[8u].w));
    float _630 = _628.x;
    float _637 = (_630 * ((_580.x * cbMtdParam._m0[14u].x) - _513)) + _513;
    float _638 = (_630 * ((_580.y * cbMtdParam._m0[14u].y) - _514)) + _514;
    float _639 = (_630 * ((_580.z * cbMtdParam._m0[14u].z) - _515)) + _515;
    uint _641 = uint(roundEven(NORMAL.w));
    vec4 _646 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _648 = _646.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _698 = sqrt(((_230 * _230) + (_231 * _231)) + (_232 * _232));
        float _705 = (cbMatDynParam._m0[5u].x * _698) + cbMatDynParam._m0[5u].y;
        float _918 = isnan(0.0) ? _705 : (isnan(_705) ? 0.0 : max(_705, 0.0));
        float _706 = isnan(1.0) ? _918 : (isnan(_918) ? 1.0 : min(_918, 1.0));
        float _710 = (cbMatDynParam._m0[5u].z * _698) + cbMatDynParam._m0[5u].w;
        float _929 = isnan(0.0) ? _710 : (isnan(_710) ? 0.0 : max(_710, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _929 : (isnan(_929) ? 1.0 : min(_929, 1.0))) - _706)) + _706) < ((_648 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _737;
    uint _660;
    vec4 _665;
    float _669;
    float _670;
    float _671;
    float _675;
    vec4 _678;
    float _680;
    float _681;
    bool _692;
    for (;;)
    {
        _660 = _641 * 13u;
        _665 = cbInstanceData._m0[(_660 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        _669 = _665.x * _637;
        _670 = _665.y * _638;
        _671 = _665.z * _639;
        _675 = cbInstanceData._m0[_660 + 6u].w;
        float _676 = _648 + (-0.5);
        _678 = cbMtdParam._m0[1u];
        _680 = _678.y * _676;
        _681 = _676 * 0.999000012874603271484375;
        _692 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_692)
        {
            if ((cbInstanceData._m0[_660 + 7u].x + _681) < 0.5)
            {
                _737 = true;
                break;
            }
        }
        if ((_665.w < 1.0) && ((_665.w + _681) < 0.5))
        {
            _737 = true;
            break;
        }
        if ((_680 + 1.0) < _678.x)
        {
            _737 = true;
            break;
        }
        _737 = false;
        break;
    }
    if (_737)
    {
        discard_state = true;
    }
    bool _760 = cbMtdParam._m0[1u].z != 0.0;
    float _761 = _760 ? _675 : 0.0;
    SV_Target.x = 0.500488758087158203125;
    SV_Target.y = 0.500488758087158203125;
    SV_Target.z = 0.500488758087158203125;
    SV_Target.w = _761;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _760 ? _675 : TEXCOORD.z;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = _760 ? _675 : (float(floatBitsToUint(cbInstanceData._m0[_660 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _761;
    SV_Target_4.x = _669 * cbSceneParam._m0[72u].z;
    SV_Target_4.y = _670 * cbSceneParam._m0[72u].z;
    SV_Target_4.z = _671 * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _761;
    discard_exit();
}


