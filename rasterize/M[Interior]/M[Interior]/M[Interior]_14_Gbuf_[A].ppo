#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _149 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _150 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _151 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _156 = inversesqrt(dot(vec3(_149, _150, _151), vec3(_149, _150, _151)));
    float _157 = _156 * _149;
    float _158 = _156 * _150;
    float _159 = _156 * _151;
    float _163 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _164 = _163 * NORMAL.x;
    float _165 = _163 * NORMAL.y;
    float _166 = _163 * NORMAL.z;
    float _170 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _171 = _170 * TANGENT.x;
    float _172 = _170 * TANGENT.y;
    float _173 = _170 * TANGENT.z;
    float _218 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _228 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _218);
    float _229 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _218);
    float _230 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _218);
    vec4 _243 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _246 = _243.x;
    vec4 _264 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _281 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _246) + cbMtdParam._m0[12u].x) * _264.x;
    float _283 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _246) + cbMtdParam._m0[12u].y) * _264.y;
    float _285 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _246) + cbMtdParam._m0[12u].z) * _264.z;
    vec4 _306 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _342 = cbMtdParam._m0[21u].w + _228;
    float _343 = cbMtdParam._m0[22u].x + _229;
    float _344 = cbMtdParam._m0[22u].y + _230;
    float _358 = (-0.0) - dot(vec3(_342, _343, _344), vec3(_157, _158, _159));
    float _359 = (-0.0) - dot(vec3(_342, _343, _344), vec3(_171, _172, _173));
    float _360 = (-0.0) - dot(vec3(_342, _343, _344), vec3((-0.0) - _164, (-0.0) - _165, (-0.0) - _166));
    float _364 = inversesqrt(dot(vec3(_358, _359, _360), vec3(_358, _359, _360)));
    float _367 = _364 * _360;
    float _370 = ((_364 * _358) + ((cbMtdParam._m0[19u].w * _246) * ((_306.x * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].z;
    float _371 = ((_364 * _359) + ((cbMtdParam._m0[20u].x * _246) * ((_306.y * 2.0) + (-1.0)))) * cbMtdParam._m0[18u].y;
    float _372 = fract(TEXCOORD.x);
    float _373 = fract(TEXCOORD.y);
    float _379;
    if (_370 > 0.0)
    {
        _379 = (1.0 - _372) / _370;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_370 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _372) / _370;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _379 = frontier_phi_3_2_ladder;
    }
    float _387;
    if (_371 > 0.0)
    {
        _387 = (1.0 - _373) / _371;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_371 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _373) / _371;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _387 = frontier_phi_7_6_ladder;
    }
    float _391 = (_367 > 0.0) ? (cbMtdParam._m0[15u].x / _367) : 5000.0;
    float _392 = isnan(_387) ? _379 : (isnan(_379) ? _387 : min(_379, _387));
    float _393 = isnan(_391) ? _392 : (isnan(_392) ? _391 : min(_392, _391));
    float _397 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _404 = ((_393 * _367) + _397) / _397;
    vec4 _428 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * ((((((_372 + (-0.5)) + (_393 * _370)) / _404) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * ((((((_373 + (-0.5)) + (_393 * _371)) / _404) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _444 = _246 * 0.1500000059604644775390625;
    float _452 = (_444 * (((_428.x * _246) * cbMtdParam._m0[9u].x) - _281)) + _281;
    float _453 = (_444 * (((_428.y * _246) * cbMtdParam._m0[9u].y) - _283)) + _283;
    float _454 = (_444 * (((_428.z * _246) * cbMtdParam._m0[9u].z) - _285)) + _285;
    vec4 _466 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _470 = _466.z;
    float _473 = (_466.x * 2.0) + (-1.0);
    float _474 = (_466.y * 2.0) + (-1.0);
    float _475 = dot(vec2(_473, _474), vec2(_473, _474));
    float _703 = isnan(0.0) ? _475 : (isnan(_475) ? 0.0 : max(_475, 0.0));
    float _480 = sqrt(1.0 - (isnan(1.0) ? _703 : (isnan(_703) ? 1.0 : min(_703, 1.0))));
    float _483 = fma(_480, _164, fma(_474, _171, _473 * _157));
    float _486 = fma(_480, _165, fma(_474, _172, _473 * _158));
    float _489 = fma(_480, _166, fma(_474, _173, _473 * _159));
    float _493 = inversesqrt(dot(vec3(_483, _486, _489), vec3(_483, _486, _489)));
    float _714 = isnan(0.0) ? _470 : (isnan(_470) ? 0.0 : max(_470, 0.0));
    float _725 = isnan(0.0) ? _452 : (isnan(_452) ? 0.0 : max(_452, 0.0));
    float _495 = isnan(1.0) ? _725 : (isnan(_725) ? 1.0 : min(_725, 1.0));
    float _736 = isnan(0.0) ? _453 : (isnan(_453) ? 0.0 : max(_453, 0.0));
    float _496 = isnan(1.0) ? _736 : (isnan(_736) ? 1.0 : min(_736, 1.0));
    float _747 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _497 = isnan(1.0) ? _747 : (isnan(_747) ? 1.0 : min(_747, 1.0));
    uint _499 = uint(roundEven(NORMAL.w));
    vec4 _504 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _506 = _504.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _568 = sqrt(((_228 * _228) + (_229 * _229)) + (_230 * _230));
        float _575 = (cbMatDynParam._m0[5u].x * _568) + cbMatDynParam._m0[5u].y;
        float _758 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
        float _576 = isnan(1.0) ? _758 : (isnan(_758) ? 1.0 : min(_758, 1.0));
        float _580 = (cbMatDynParam._m0[5u].z * _568) + cbMatDynParam._m0[5u].w;
        float _769 = isnan(0.0) ? _580 : (isnan(_580) ? 0.0 : max(_580, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _769 : (isnan(_769) ? 1.0 : min(_769, 1.0))) - _576)) + _576) < ((_506 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _608;
    uint _527;
    vec4 _532;
    float _539;
    float _540;
    float _541;
    float _545;
    vec4 _548;
    float _550;
    float _551;
    bool _562;
    for (;;)
    {
        _527 = _499 * 13u;
        _532 = cbInstanceData._m0[(_527 + 9u) + uint(cbMatDynParam._m0[0u].w)];
        float _536 = (cbMtdParam._m0[0u].x * _495) * _532.x;
        float _537 = (cbMtdParam._m0[0u].y * _496) * _532.y;
        float _538 = (cbMtdParam._m0[0u].z * _497) * _532.z;
        float _780 = isnan(0.0) ? _536 : (isnan(_536) ? 0.0 : max(_536, 0.0));
        _539 = isnan(1.0) ? _780 : (isnan(_780) ? 1.0 : min(_780, 1.0));
        float _791 = isnan(0.0) ? _537 : (isnan(_537) ? 0.0 : max(_537, 0.0));
        _540 = isnan(1.0) ? _791 : (isnan(_791) ? 1.0 : min(_791, 1.0));
        float _802 = isnan(0.0) ? _538 : (isnan(_538) ? 0.0 : max(_538, 0.0));
        _541 = isnan(1.0) ? _802 : (isnan(_802) ? 1.0 : min(_802, 1.0));
        _545 = cbInstanceData._m0[_527 + 6u].w;
        float _546 = _506 + (-0.5);
        _548 = cbMtdParam._m0[1u];
        _550 = _548.y * _546;
        _551 = _546 * 0.999000012874603271484375;
        _562 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_562)
        {
            if ((cbInstanceData._m0[_527 + 7u].x + _551) < 0.5)
            {
                _608 = true;
                break;
            }
        }
        if ((_532.w < 1.0) && ((_532.w + _551) < 0.5))
        {
            _608 = true;
            break;
        }
        if ((_550 + 1.0) < _548.x)
        {
            _608 = true;
            break;
        }
        _608 = false;
        break;
    }
    if (_608)
    {
        discard_state = true;
    }
    bool _634 = cbMtdParam._m0[1u].z != 0.0;
    float _635 = _634 ? _545 : 0.0;
    SV_Target.x = ((_483 * 0.5) * _493) + 0.500488758087158203125;
    SV_Target.y = ((_486 * 0.5) * _493) + 0.500488758087158203125;
    SV_Target.z = ((_489 * 0.5) * _493) + 0.500488758087158203125;
    SV_Target.w = _635;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _714 : (isnan(_714) ? 1.0 : min(_714, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _634 ? _545 : TEXCOORD.z;
    SV_Target_2.x = _539;
    SV_Target_2.y = _540;
    SV_Target_2.z = _541;
    SV_Target_2.w = _634 ? _545 : (float(floatBitsToUint(cbInstanceData._m0[_527 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _635;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = _635;
    discard_exit();
}


