#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 1) uniform texture2D M_Interior_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Interior_snp_0_Texture2D_2;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 9) uniform texture2D M_Interior_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
layout(location = 2) out vec4 SV_Target_2;
layout(location = 3) out vec4 SV_Target_3;
layout(location = 4) out vec4 SV_Target_4;

float _394;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    SV_Target_2.x = 0.0;
    SV_Target_2.y = 0.0;
    SV_Target_2.z = 0.0;
    SV_Target_2.w = 0.0;
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = 0.0;
    SV_Target_4.x = 0.0;
    SV_Target_4.y = 0.0;
    SV_Target_4.z = 0.0;
    SV_Target_4.w = 0.0;
    float _136 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _137 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _138 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _143 = inversesqrt(dot(vec3(_136, _137, _138), vec3(_136, _137, _138)));
    float _144 = _143 * _136;
    float _145 = _143 * _137;
    float _146 = _143 * _138;
    float _150 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _151 = _150 * NORMAL.x;
    float _152 = _150 * NORMAL.y;
    float _153 = _150 * NORMAL.z;
    float _157 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _158 = _157 * TANGENT.x;
    float _159 = _157 * TANGENT.y;
    float _160 = _157 * TANGENT.z;
    float _205 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _230 = texture(sampler2D(M_Interior_snp_0_Texture2D_9, SS_WrapLinear), vec2((cbTextureTilingScale._m0[9u].x * TEXCOORD.x) + cbTextureTilingScale._m0[9u].z, (cbTextureTilingScale._m0[9u].y * TEXCOORD.y) + cbTextureTilingScale._m0[9u].w));
    float _233 = _230.x;
    vec4 _251 = texture(sampler2D(M_Interior_snp_0_Texture2D_1, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[1u].x * TEXCOORD.x) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * TEXCOORD.y) + cbTextureTilingScale._m0[1u].w));
    float _268 = (((cbMtdParam._m0[11u].x - cbMtdParam._m0[12u].x) * _233) + cbMtdParam._m0[12u].x) * _251.x;
    float _270 = (((cbMtdParam._m0[11u].y - cbMtdParam._m0[12u].y) * _233) + cbMtdParam._m0[12u].y) * _251.y;
    float _272 = (((cbMtdParam._m0[11u].z - cbMtdParam._m0[12u].z) * _233) + cbMtdParam._m0[12u].z) * _251.z;
    vec4 _306 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _321 = inversesqrt(dot(vec3(_144, _145, _146), vec3(_144, _145, _146)));
    float _328 = inversesqrt(dot(vec3(_158, _159, _160), vec3(_158, _159, _160)));
    float _341 = cbMtdParam._m0[22u].z + (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _205));
    float _342 = cbMtdParam._m0[22u].w + (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _205));
    float _343 = cbMtdParam._m0[23u].x + (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _205));
    float _357 = (-0.0) - dot(vec3(_341, _342, _343), vec3(_321 * _144, _321 * _145, _321 * _146));
    float _358 = (-0.0) - dot(vec3(_341, _342, _343), vec3(_328 * _158, _328 * _159, _328 * _160));
    float _359 = (-0.0) - dot(vec3(_341, _342, _343), vec3((-0.0) - _151, (-0.0) - _152, (-0.0) - _153));
    float _363 = inversesqrt(dot(vec3(_357, _358, _359), vec3(_357, _358, _359)));
    float _364 = _363 * _359;
    float _369 = ((cbMtdParam._m0[19u].y * _357) * _363) + (((_306.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _370 = ((cbMtdParam._m0[19u].z * _358) * _363) + (((_306.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _373 = fract(cbMtdParam._m0[19u].y * TEXCOORD.x);
    float _374 = fract(cbMtdParam._m0[19u].z * TEXCOORD.y);
    float _392;
    float _395;
    float _397;
    if (_369 > 0.0)
    {
        float _378 = (1.0 - _373) / _369;
        _392 = _378;
        _395 = ((cbMtdParam._m0[16u].z + 1.0) - fract(_378 * _364)) * 0.16666667163372039794921875;
        _397 = (fract((_378 * _370) + _374) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_369 < 0.0)
        {
            float _393 = ((-0.0) - _373) / _369;
            frontier_phi_3_2_ladder = _393;
            frontier_phi_3_2_ladder_1 = (fract(_393 * _364) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_2 = (fract((_393 * _370) + _374) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = _394;
            frontier_phi_3_2_ladder_1 = 0.0;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _392 = frontier_phi_3_2_ladder;
        _395 = frontier_phi_3_2_ladder_1;
        _397 = frontier_phi_3_2_ladder_2;
    }
    float _423;
    float _425;
    float _427;
    if (_370 > 0.0)
    {
        float _410 = (1.0 - _374) / _370;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_410 < _392)
        {
            frontier_phi_8_5_ladder = _410;
            frontier_phi_8_5_ladder_1 = (fract((_410 * _369) + _373) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = (fract(_410 * _364) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
        }
        else
        {
            frontier_phi_8_5_ladder = _392;
            frontier_phi_8_5_ladder_1 = _395;
            frontier_phi_8_5_ladder_2 = _397;
        }
        _423 = frontier_phi_8_5_ladder;
        _425 = frontier_phi_8_5_ladder_1;
        _427 = frontier_phi_8_5_ladder_2;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_370 < 0.0)
        {
            float _424 = ((-0.0) - _374) / _370;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_424 < _392)
            {
                frontier_phi_8_6_ladder_9_ladder = _424;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_424 * _369) + _373) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = fract(_424 * _364) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _392;
                frontier_phi_8_6_ladder_9_ladder_1 = _395;
                frontier_phi_8_6_ladder_9_ladder_2 = _397;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _392;
            frontier_phi_8_6_ladder_1 = _395;
            frontier_phi_8_6_ladder_2 = _397;
        }
        _423 = frontier_phi_8_6_ladder;
        _425 = frontier_phi_8_6_ladder_1;
        _427 = frontier_phi_8_6_ladder_2;
    }
    float _431 = (_364 > 0.0) ? (cbMtdParam._m0[16u].y / _364) : 5000.0;
    float _444;
    float _445;
    if (_431 < _423)
    {
        _444 = ((_373 + cbMtdParam._m0[16u].z) + (_431 * _369)) * 0.16666667163372039794921875;
        _445 = (((_431 * _370) + _374) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _444 = _425;
        _445 = _427;
    }
    vec4 _447 = texture(sampler2D(M_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_444, _445));
    vec4 _463 = texture(sampler2D(M_Interior_snp_0_Texture2D_2, SS_BumpMap), vec2((cbTextureTilingScale._m0[2u].x * TEXCOORD.x) + cbTextureTilingScale._m0[2u].z, (cbTextureTilingScale._m0[2u].y * TEXCOORD.y) + cbTextureTilingScale._m0[2u].w));
    float _467 = _463.z;
    float _470 = (_463.x * 2.0) + (-1.0);
    float _471 = (_463.y * 2.0) + (-1.0);
    float _472 = dot(vec2(_470, _471), vec2(_470, _471));
    float _627 = isnan(0.0) ? _472 : (isnan(_472) ? 0.0 : max(_472, 0.0));
    float _477 = sqrt(1.0 - (isnan(1.0) ? _627 : (isnan(_627) ? 1.0 : min(_627, 1.0))));
    float _480 = fma(_477, _151, fma(_471, _158, _470 * _144));
    float _483 = fma(_477, _152, fma(_471, _159, _470 * _145));
    float _486 = fma(_477, _153, fma(_471, _160, _470 * _146));
    float _490 = inversesqrt(dot(vec3(_480, _483, _486), vec3(_480, _483, _486)));
    float _638 = isnan(0.0) ? _467 : (isnan(_467) ? 0.0 : max(_467, 0.0));
    float _649 = isnan(0.0) ? _268 : (isnan(_268) ? 0.0 : max(_268, 0.0));
    float _660 = isnan(0.0) ? _270 : (isnan(_270) ? 0.0 : max(_270, 0.0));
    float _671 = isnan(0.0) ? _272 : (isnan(_272) ? 0.0 : max(_272, 0.0));
    uint _509 = uint(roundEven(NORMAL.w)) * 13u;
    uint _511 = (_509 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _517 = (cbMtdParam._m0[0u].x * (isnan(1.0) ? _649 : (isnan(_649) ? 1.0 : min(_649, 1.0)))) * cbInstanceData._m0[_511].x;
    float _518 = (cbMtdParam._m0[0u].y * (isnan(1.0) ? _660 : (isnan(_660) ? 1.0 : min(_660, 1.0)))) * cbInstanceData._m0[_511].y;
    float _519 = (cbMtdParam._m0[0u].z * (isnan(1.0) ? _671 : (isnan(_671) ? 1.0 : min(_671, 1.0)))) * cbInstanceData._m0[_511].z;
    float _682 = isnan(0.0) ? _517 : (isnan(_517) ? 0.0 : max(_517, 0.0));
    float _693 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _704 = isnan(0.0) ? _519 : (isnan(_519) ? 0.0 : max(_519, 0.0));
    uint _523 = _509 + 6u;
    bool _567 = cbMtdParam._m0[1u].z != 0.0;
    float _568 = _567 ? cbInstanceData._m0[_523].w : 0.0;
    SV_Target.x = ((_480 * 0.5) * _490) + 0.500488758087158203125;
    SV_Target.y = ((_483 * 0.5) * _490) + 0.500488758087158203125;
    SV_Target.z = ((_486 * 0.5) * _490) + 0.500488758087158203125;
    SV_Target.w = _568;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = isnan(1.0) ? _638 : (isnan(_638) ? 1.0 : min(_638, 1.0));
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _567 ? cbInstanceData._m0[_523].w : TEXCOORD.z;
    SV_Target_2.x = isnan(1.0) ? _682 : (isnan(_682) ? 1.0 : min(_682, 1.0));
    SV_Target_2.y = isnan(1.0) ? _693 : (isnan(_693) ? 1.0 : min(_693, 1.0));
    SV_Target_2.z = isnan(1.0) ? _704 : (isnan(_704) ? 1.0 : min(_704, 1.0));
    SV_Target_2.w = _567 ? cbInstanceData._m0[_523].w : (float(floatBitsToUint(cbInstanceData._m0[_509 + 5u]).x) * 0.0039215688593685626983642578125);
    SV_Target_3.x = 0.0;
    SV_Target_3.y = 0.0;
    SV_Target_3.z = 0.0;
    SV_Target_3.w = _568;
    SV_Target_4.x = (((cbMtdParam._m0[13u].x * _233) * _447.x) * cbInstanceData._m0[_511].x) * cbSceneParam._m0[72u].z;
    SV_Target_4.y = (((cbMtdParam._m0[13u].y * _233) * _447.y) * cbInstanceData._m0[_511].y) * cbSceneParam._m0[72u].z;
    SV_Target_4.z = (((cbMtdParam._m0[13u].z * _233) * _447.z) * cbInstanceData._m0[_511].z) * cbSceneParam._m0[72u].z;
    SV_Target_4.w = _568;
}


