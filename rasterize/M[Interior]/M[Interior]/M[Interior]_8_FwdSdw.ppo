#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;
layout(set = 0, binding = 12) uniform samplerShadow SS_Shadow;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _382;
uint _2095;
uint _2096;
uint _2097;
uint _2310;
uint _2311;
uint _2312;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _186 = _185 * _178;
    float _187 = _185 * _179;
    float _188 = _185 * _180;
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _196 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _197 = _196 * TANGENT.x;
    float _198 = _196 * TANGENT.y;
    float _199 = _196 * TANGENT.z;
    float _244 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _254 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _244);
    float _255 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _244);
    float _256 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _244);
    vec4 _291 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _307 = inversesqrt(dot(vec3(_186, _187, _188), vec3(_186, _187, _188)));
    float _314 = inversesqrt(dot(vec3(_197, _198, _199), vec3(_197, _198, _199)));
    float _326 = cbMtdParam._m0[22u].z + _254;
    float _327 = cbMtdParam._m0[22u].w + _255;
    float _328 = cbMtdParam._m0[23u].x + _256;
    float _345 = (-0.0) - dot(vec3(_326, _327, _328), vec3(_307 * _186, _307 * _187, _307 * _188));
    float _346 = (-0.0) - dot(vec3(_326, _327, _328), vec3(_314 * _197, _314 * _198, _314 * _199));
    float _347 = (-0.0) - dot(vec3(_326, _327, _328), vec3((-0.0) - (NORMAL.x * _192), (-0.0) - (NORMAL.y * _192), (-0.0) - (NORMAL.z * _192)));
    float _351 = inversesqrt(dot(vec3(_345, _346, _347), vec3(_345, _346, _347)));
    float _352 = _351 * _347;
    float _357 = ((cbMtdParam._m0[19u].y * _345) * _351) + (((_291.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _358 = ((cbMtdParam._m0[19u].z * _346) * _351) + (((_291.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _361 = fract(cbMtdParam._m0[19u].y * TEXCOORD.x);
    float _362 = fract(cbMtdParam._m0[19u].z * TEXCOORD.y);
    float _380;
    float _383;
    float _385;
    if (_357 > 0.0)
    {
        float _366 = (1.0 - _361) / _357;
        _380 = _366;
        _383 = ((cbMtdParam._m0[16u].z + 1.0) - fract(_366 * _352)) * 0.16666667163372039794921875;
        _385 = (fract((_366 * _358) + _362) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_357 < 0.0)
        {
            float _381 = ((-0.0) - _361) / _357;
            frontier_phi_3_2_ladder = (fract(_381 * _352) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_1 = _381;
            frontier_phi_3_2_ladder_2 = (fract((_381 * _358) + _362) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _382;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _380 = frontier_phi_3_2_ladder_1;
        _383 = frontier_phi_3_2_ladder;
        _385 = frontier_phi_3_2_ladder_2;
    }
    float _411;
    float _413;
    float _415;
    if (_358 > 0.0)
    {
        float _398 = (1.0 - _362) / _358;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_398 < _380)
        {
            frontier_phi_8_5_ladder = (fract(_398 * _352) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_1 = (fract((_398 * _357) + _361) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_8_5_ladder_2 = _398;
        }
        else
        {
            frontier_phi_8_5_ladder = _385;
            frontier_phi_8_5_ladder_1 = _383;
            frontier_phi_8_5_ladder_2 = _380;
        }
        _411 = frontier_phi_8_5_ladder_2;
        _413 = frontier_phi_8_5_ladder_1;
        _415 = frontier_phi_8_5_ladder;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_358 < 0.0)
        {
            float _412 = ((-0.0) - _362) / _358;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_412 < _380)
            {
                frontier_phi_8_6_ladder_9_ladder = fract(_412 * _352) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_1 = (fract((_412 * _357) + _361) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = _412;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _385;
                frontier_phi_8_6_ladder_9_ladder_1 = _383;
                frontier_phi_8_6_ladder_9_ladder_2 = _380;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _385;
            frontier_phi_8_6_ladder_1 = _383;
            frontier_phi_8_6_ladder_2 = _380;
        }
        _411 = frontier_phi_8_6_ladder_2;
        _413 = frontier_phi_8_6_ladder_1;
        _415 = frontier_phi_8_6_ladder;
    }
    float _419 = (_352 > 0.0) ? (cbMtdParam._m0[16u].y / _352) : 5000.0;
    float _432;
    float _433;
    if (_419 < _411)
    {
        _432 = ((_361 + cbMtdParam._m0[16u].z) + (_419 * _357)) * 0.16666667163372039794921875;
        _433 = (((_419 * _358) + _362) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _432 = _413;
        _433 = _415;
    }
    vec4 _435 = texture(sampler2D(M_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_432, _433));
    float _458 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _462 = inversesqrt(dot(vec3(_254, _255, _256), vec3(_254, _255, _256)));
    float _463 = _254 * _462;
    float _464 = _255 * _462;
    float _465 = _256 * _462;
    float _471 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _472 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _481 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_471 * cbSceneParam._m0[86u].x, _472 * cbSceneParam._m0[86u].y));
    float _484 = _481.x * TEXCOORD.z;
    float _485 = (-0.0) - _463;
    float _486 = (-0.0) - _464;
    float _487 = (-0.0) - _465;
    float _509 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _513 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _517 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _656;
    float _657;
    float _658;
    float _659;
    float _660;
    float _661;
    float _662;
    float _663;
    float _664;
    float _665;
    float _666;
    float _667;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _579 = (cbModelParam._m0[37u].x * ((((fma(_517, cbModelParam._m0[26u].z, fma(_513, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _509)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _581 = (cbModelParam._m0[37u].y * ((((fma(_517, cbModelParam._m0[27u].z, fma(_513, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _509)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _582 = (((((fma(_517, cbModelParam._m0[28u].z, fma(_513, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _509)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _585 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_579, _581, _582), 0.0);
        vec4 _592 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_579, _581, _582), 0.0);
        vec4 _599 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_579, _581, _582), 0.0);
        vec4 _606 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_579, _581, _582), 0.0);
        float _619 = exp2((_585.w + (-0.5)) * 20.0) * 2.0;
        float _629 = exp2((_592.w + (-0.5)) * 20.0) * 2.0;
        float _639 = exp2((_599.w + (-0.5)) * 20.0) * 2.0;
        float _649 = exp2((_606.w + (-0.5)) * 20.0) * 2.0;
        float _650 = _649 * (_606.x + (-0.5));
        float _651 = _649 * (_606.y + (-0.5));
        float _652 = _649 * (_606.z + (-0.5));
        _656 = _619 * (_585.z + (-0.5));
        _657 = _619 * (_585.y + (-0.5));
        _658 = _619 * (_585.x + (-0.5));
        _659 = _629 * (_592.z + (-0.5));
        _660 = _629 * (_592.y + (-0.5));
        _661 = _629 * (_592.x + (-0.5));
        _662 = _639 * (_599.z + (-0.5));
        _663 = _639 * (_599.y + (-0.5));
        _664 = _639 * (_599.x + (-0.5));
        _665 = isnan(0.0) ? _652 : (isnan(_652) ? 0.0 : max(_652, 0.0));
        _666 = isnan(0.0) ? _651 : (isnan(_651) ? 0.0 : max(_651, 0.0));
        _667 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
    }
    else
    {
        _656 = _382;
        _657 = _382;
        _658 = _382;
        _659 = _382;
        _660 = _382;
        _661 = _382;
        _662 = _382;
        _663 = _382;
        _664 = _382;
        _665 = _382;
        _666 = _382;
        _667 = _382;
    }
    float _795;
    float _796;
    float _797;
    float _798;
    float _799;
    float _800;
    float _801;
    float _802;
    float _803;
    float _804;
    float _805;
    float _806;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _721 = (cbModelParam._m0[38u].x * ((((fma(_517, cbModelParam._m0[30u].z, fma(_513, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _509)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _722 = (cbModelParam._m0[38u].y * ((((fma(_517, cbModelParam._m0[31u].z, fma(_513, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _509)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _723 = (((((fma(_517, cbModelParam._m0[32u].z, fma(_513, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _509)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _725 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_721, _722, _723), 0.0);
        vec4 _732 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_721, _722, _723), 0.0);
        vec4 _739 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_721, _722, _723), 0.0);
        vec4 _746 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_721, _722, _723), 0.0);
        float _758 = exp2((_725.w + (-0.5)) * 20.0) * 2.0;
        float _768 = exp2((_732.w + (-0.5)) * 20.0) * 2.0;
        float _778 = exp2((_739.w + (-0.5)) * 20.0) * 2.0;
        float _788 = exp2((_746.w + (-0.5)) * 20.0) * 2.0;
        float _789 = _788 * (_746.x + (-0.5));
        float _790 = _788 * (_746.y + (-0.5));
        float _791 = _788 * (_746.z + (-0.5));
        _795 = _758 * (_725.z + (-0.5));
        _796 = _758 * (_725.y + (-0.5));
        _797 = _758 * (_725.x + (-0.5));
        _798 = _768 * (_732.z + (-0.5));
        _799 = _768 * (_732.y + (-0.5));
        _800 = _768 * (_732.x + (-0.5));
        _801 = _778 * (_739.z + (-0.5));
        _802 = _778 * (_739.y + (-0.5));
        _803 = _778 * (_739.x + (-0.5));
        _804 = isnan(0.0) ? _791 : (isnan(_791) ? 0.0 : max(_791, 0.0));
        _805 = isnan(0.0) ? _790 : (isnan(_790) ? 0.0 : max(_790, 0.0));
        _806 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
    }
    else
    {
        _795 = _382;
        _796 = _382;
        _797 = _382;
        _798 = _382;
        _799 = _382;
        _800 = _382;
        _801 = _382;
        _802 = _382;
        _803 = _382;
        _804 = _382;
        _805 = _382;
        _806 = _382;
    }
    float _821 = _463 * (-0.5);
    float _822 = _464 * (-0.5);
    float _823 = _465 * (-0.5);
    float _824 = dot(vec4(_821, _822, _823, 1.0), vec4(_797, _800, _803, _806));
    float _827 = dot(vec4(_821, _822, _823, 1.0), vec4(_796, _799, _802, _805));
    float _830 = dot(vec4(_821, _822, _823, 1.0), vec4(_795, _798, _801, _804));
    float _865;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _837 = dot(vec4(_821, _822, _823, 1.0), vec4(_656, _659, _662, _665));
        float _841 = dot(vec4(_821, _822, _823, 1.0), vec4(_657, _660, _663, _666));
        float _845 = dot(vec4(_821, _822, _823, 1.0), vec4(_658, _661, _664, _667));
        float _852 = dot(vec4(cbModelParam._m0[39u]), vec4(_821, _822, _823, 1.0));
        _865 = dot(vec3(isnan(0.0) ? _845 : (isnan(_845) ? 0.0 : max(_845, 0.0)), isnan(0.0) ? _841 : (isnan(_841) ? 0.0 : max(_841, 0.0)), isnan(0.0) ? _837 : (isnan(_837) ? 0.0 : max(_837, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_852) ? 0.0 : (isnan(0.0) ? _852 : max(0.0, _852))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _865 = 1.0;
    }
    float _876;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _867 = dot(vec4(cbModelParam._m0[40u]), vec4(_821, _822, _823, 1.0));
        _876 = dot(vec3(isnan(0.0) ? _824 : (isnan(_824) ? 0.0 : max(_824, 0.0)), isnan(0.0) ? _827 : (isnan(_827) ? 0.0 : max(_827, 0.0)), isnan(0.0) ? _830 : (isnan(_830) ? 0.0 : max(_830, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_867) ? 0.0 : (isnan(0.0) ? _867 : max(0.0, _867))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _876 = 1.0;
    }
    float _880 = (_876 * cbModelParam._m0[1u].x) + (_865 * (1.0 - cbModelParam._m0[1u].x));
    float _886 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _969;
    float _971;
    float _973;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _936 = fma(_517, cbModelParam._m0[13u].z, fma(_513, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _509)) + cbModelParam._m0[13u].w;
        float _940 = fma(_517, cbModelParam._m0[14u].z, fma(_513, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _509)) + cbModelParam._m0[14u].w;
        float _944 = fma(_517, cbModelParam._m0[15u].z, fma(_513, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _509)) + cbModelParam._m0[15u].w;
        float _947 = fma(_487, cbModelParam._m0[13u].z, fma(_486, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _485));
        float _950 = fma(_487, cbModelParam._m0[14u].z, fma(_486, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _485));
        float _953 = fma(_487, cbModelParam._m0[15u].z, fma(_486, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _485));
        float _979;
        if (_947 > 0.0)
        {
            _979 = abs((1.0 - _936) / _947);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_947 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_936 + 1.0) / _947);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _979 = frontier_phi_26_24_ladder;
        }
        float _1169;
        if (_950 > 0.0)
        {
            _1169 = abs((1.0 - _940) / _950);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_950 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_940 + 1.0) / _950);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1169 = frontier_phi_35_31_ladder;
        }
        float _1524;
        if (_953 > 0.0)
        {
            _1524 = abs((1.0 - _944) / _953);
        }
        else
        {
            float frontier_phi_47_42_ladder;
            if (_953 < 0.0)
            {
                frontier_phi_47_42_ladder = abs((_944 + 1.0) / _953);
            }
            else
            {
                frontier_phi_47_42_ladder = 5000.0;
            }
            _1524 = frontier_phi_47_42_ladder;
        }
        float _1526 = isnan(_1169) ? _979 : (isnan(_979) ? _1169 : min(_979, _1169));
        float _1527 = isnan(_1524) ? _1526 : (isnan(_1526) ? _1524 : min(_1526, _1524));
        float _1531 = (_1527 * _947) + _936;
        float _1532 = (_1527 * _950) + _940;
        float _1533 = (_1527 * _953) + _944;
        float _1534 = _1527 * 9.9999997473787516355514526367188e-05;
        float _1536 = (-1.0) - _1534;
        float _1538 = _1534 + 1.0;
        float frontier_phi_25_47_ladder;
        float frontier_phi_25_47_ladder_1;
        float frontier_phi_25_47_ladder_2;
        if ((_1533 > _1538) || ((_1533 < _1536) || ((_1532 > _1538) || ((_1532 < _1536) || ((_1531 < _1536) || (_1531 > _1538))))))
        {
            frontier_phi_25_47_ladder = 0.0;
            frontier_phi_25_47_ladder_1 = 0.0;
            frontier_phi_25_47_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1767 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1533, cbModelParam._m0[9u].z, fma(_1532, cbModelParam._m0[9u].y, _1531 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1533, cbModelParam._m0[10u].z, fma(_1532, cbModelParam._m0[10u].y, _1531 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1533, cbModelParam._m0[11u].z, fma(_1532, cbModelParam._m0[11u].y, _1531 * cbModelParam._m0[11u].x))), _886);
            frontier_phi_25_47_ladder = _1767.z * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_1 = _1767.y * cbModelParam._m0[1u].y;
            frontier_phi_25_47_ladder_2 = _1767.x * cbModelParam._m0[1u].y;
        }
        _969 = frontier_phi_25_47_ladder_2;
        _971 = frontier_phi_25_47_ladder_1;
        _973 = frontier_phi_25_47_ladder;
    }
    else
    {
        vec4 _957 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_485, _486, _487), _886);
        _969 = _957.x * cbModelParam._m0[1u].y;
        _971 = _957.y * cbModelParam._m0[1u].y;
        _973 = _957.z * cbModelParam._m0[1u].y;
    }
    float _976 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1066;
    float _1068;
    float _1070;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1030 = fma(_517, cbModelParam._m0[21u].z, fma(_513, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _509)) + cbModelParam._m0[21u].w;
        float _1034 = fma(_517, cbModelParam._m0[22u].z, fma(_513, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _509)) + cbModelParam._m0[22u].w;
        float _1038 = fma(_517, cbModelParam._m0[23u].z, fma(_513, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _509)) + cbModelParam._m0[23u].w;
        float _1041 = fma(_487, cbModelParam._m0[21u].z, fma(_486, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _485));
        float _1044 = fma(_487, cbModelParam._m0[22u].z, fma(_486, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _485));
        float _1047 = fma(_487, cbModelParam._m0[23u].z, fma(_486, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _485));
        float _1174;
        if (_1041 > 0.0)
        {
            _1174 = abs((1.0 - _1030) / _1041);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1041 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1030 + 1.0) / _1041);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1174 = frontier_phi_37_33_ladder;
        }
        float _1551;
        if (_1044 > 0.0)
        {
            _1551 = abs((1.0 - _1034) / _1044);
        }
        else
        {
            float frontier_phi_49_44_ladder;
            if (_1044 < 0.0)
            {
                frontier_phi_49_44_ladder = abs((_1034 + 1.0) / _1044);
            }
            else
            {
                frontier_phi_49_44_ladder = 5000.0;
            }
            _1551 = frontier_phi_49_44_ladder;
        }
        float _1883;
        if (_1047 > 0.0)
        {
            _1883 = abs((1.0 - _1038) / _1047);
        }
        else
        {
            float frontier_phi_61_56_ladder;
            if (_1047 < 0.0)
            {
                frontier_phi_61_56_ladder = abs((_1038 + 1.0) / _1047);
            }
            else
            {
                frontier_phi_61_56_ladder = 5000.0;
            }
            _1883 = frontier_phi_61_56_ladder;
        }
        float _1885 = isnan(_1551) ? _1174 : (isnan(_1174) ? _1551 : min(_1174, _1551));
        float _1886 = isnan(_1883) ? _1885 : (isnan(_1885) ? _1883 : min(_1885, _1883));
        float _1890 = (_1886 * _1041) + _1030;
        float _1891 = (_1886 * _1044) + _1034;
        float _1892 = (_1886 * _1047) + _1038;
        float _1893 = _1886 * 9.9999997473787516355514526367188e-05;
        float _1894 = (-1.0) - _1893;
        float _1896 = _1893 + 1.0;
        float frontier_phi_34_61_ladder;
        float frontier_phi_34_61_ladder_1;
        float frontier_phi_34_61_ladder_2;
        if ((_1892 > _1896) || ((_1892 < _1894) || ((_1891 > _1896) || ((_1891 < _1894) || ((_1890 < _1894) || (_1890 > _1896))))))
        {
            frontier_phi_34_61_ladder = 0.0;
            frontier_phi_34_61_ladder_1 = 0.0;
            frontier_phi_34_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1998 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1892, cbModelParam._m0[17u].z, fma(_1891, cbModelParam._m0[17u].y, _1890 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1892, cbModelParam._m0[18u].z, fma(_1891, cbModelParam._m0[18u].y, _1890 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1892, cbModelParam._m0[19u].z, fma(_1891, cbModelParam._m0[19u].y, _1890 * cbModelParam._m0[19u].x))), _976);
            frontier_phi_34_61_ladder = _1998.y * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_1 = _1998.z * cbModelParam._m0[1u].z;
            frontier_phi_34_61_ladder_2 = _1998.x * cbModelParam._m0[1u].z;
        }
        _1066 = frontier_phi_34_61_ladder_2;
        _1068 = frontier_phi_34_61_ladder;
        _1070 = frontier_phi_34_61_ladder_1;
    }
    else
    {
        vec4 _1050 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_485, _486, _487), _976);
        _1066 = _1050.x * cbModelParam._m0[1u].z;
        _1068 = _1050.y * cbModelParam._m0[1u].z;
        _1070 = _1050.z * cbModelParam._m0[1u].z;
    }
    float _1082 = _484 * 0.01200000010430812835693359375;
    float _1084 = _1082 * ((cbModelParam._m0[1u].w * (_1066 - _969)) + _969);
    float _1085 = _1082 * ((cbModelParam._m0[1u].w * (_1068 - _971)) + _971);
    float _1086 = _1082 * ((cbModelParam._m0[1u].w * (_1070 - _973)) + _973);
    float _1107 = fma(_1086, cbSceneParam._m0[89u].z, fma(_1085, cbSceneParam._m0[89u].y, _1084 * cbSceneParam._m0[89u].x));
    float _1110 = fma(_1086, cbSceneParam._m0[90u].z, fma(_1085, cbSceneParam._m0[90u].y, _1084 * cbSceneParam._m0[90u].x));
    float _1113 = fma(_1086, cbSceneParam._m0[91u].z, fma(_1085, cbSceneParam._m0[91u].y, _1084 * cbSceneParam._m0[91u].x));
    float _1148 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x)));
    float _1152 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x)));
    float _1156 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x)));
    float _1160 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
    float _1161 = _1148 / _1160;
    float _1162 = _1152 / _1160;
    float _1163 = _1156 / _1160;
    float _1311;
    float _1312;
    float _1313;
    if (cbSceneParam._m0[59u].w != 0.0)
    {
        uint _1190 = ((uint(_1163 > cbSceneParam._m0[59u].y) + uint(_1163 > cbSceneParam._m0[59u].x)) + uint(_1163 > cbSceneParam._m0[59u].z)) << 2u;
        uint _1191 = _1190 + 43u;
        uint _1199 = _1190 + 44u;
        uint _1207 = _1190 + 45u;
        uint _1215 = _1190 + 46u;
        float _1226 = fma(_1160, cbSceneParam._m0[_1191].w, fma(_1156, cbSceneParam._m0[_1191].z, fma(_1152, cbSceneParam._m0[_1191].y, _1148 * cbSceneParam._m0[_1191].x)));
        float _1230 = fma(_1160, cbSceneParam._m0[_1199].w, fma(_1156, cbSceneParam._m0[_1199].z, fma(_1152, cbSceneParam._m0[_1199].y, _1148 * cbSceneParam._m0[_1199].x)));
        float _1238 = fma(_1160, cbSceneParam._m0[_1215].w, fma(_1156, cbSceneParam._m0[_1215].z, fma(_1152, cbSceneParam._m0[_1215].y, _1148 * cbSceneParam._m0[_1215].x)));
        float _1243 = cbSceneParam._m0[33u].z * _1238;
        float _1245 = cbSceneParam._m0[33u].w * _1238;
        float _1248 = fma(_1160, cbSceneParam._m0[_1207].w, fma(_1156, cbSceneParam._m0[_1207].z, fma(_1152, cbSceneParam._m0[_1207].y, _1148 * cbSceneParam._m0[_1207].x))) / _1238;
        float _1296 = (cbSceneParam._m0[33u].x - sqrt(((_1162 * _1162) + (_1161 * _1161)) + (_1163 * _1163))) * cbSceneParam._m0[33u].y;
        float _2662 = isnan(0.0) ? _1296 : (isnan(_1296) ? 0.0 : max(_1296, 0.0));
        float _1304 = (isnan(1.0) ? _2662 : (isnan(_2662) ? 1.0 : min(_2662, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1243 + _1226) / _1238, (_1245 + _1230) / _1238), _1248), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1245 + _1226) / _1238, (_1230 - _1243) / _1238), _1248), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1226 - _1243) / _1238, (_1230 - _1245) / _1238), _1248), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2((_1226 - _1245) / _1238, (_1243 + _1230) / _1238), _1248), 0.0)).x), vec4(0.25)));
        _1311 = 1.0 - (_1304 * cbSceneParam._m0[34u].x);
        _1312 = 1.0 - (_1304 * cbSceneParam._m0[34u].y);
        _1313 = 1.0 - (_1304 * cbSceneParam._m0[34u].z);
    }
    else
    {
        _1311 = 1.0;
        _1312 = 1.0;
        _1313 = 1.0;
    }
    float _1377;
    float _1379;
    float _1381;
    if ((cbSceneParam._m0[64u].z > 0.0) && (cbSceneParam._m0[64u].w > 0.0))
    {
        float _1365 = fma(_1160, cbSceneParam._m0[63u].w, fma(_1156, cbSceneParam._m0[63u].z, fma(_1152, cbSceneParam._m0[63u].y, _1148 * cbSceneParam._m0[63u].x)));
        float _1366 = fma(_1160, cbSceneParam._m0[60u].w, fma(_1156, cbSceneParam._m0[60u].z, fma(_1152, cbSceneParam._m0[60u].y, _1148 * cbSceneParam._m0[60u].x))) / _1365;
        float _1367 = fma(_1160, cbSceneParam._m0[61u].w, fma(_1156, cbSceneParam._m0[61u].z, fma(_1152, cbSceneParam._m0[61u].y, _1148 * cbSceneParam._m0[61u].x))) / _1365;
        float frontier_phi_46_45_ladder;
        float frontier_phi_46_45_ladder_1;
        float frontier_phi_46_45_ladder_2;
        if ((((_1366 >= cbSceneParam._m0[64u].x) && (_1367 >= cbSceneParam._m0[64u].y)) && (_1366 <= cbSceneParam._m0[64u].z)) && (_1367 <= cbSceneParam._m0[64u].w))
        {
            float _1564 = fma(_1160, cbSceneParam._m0[62u].w, fma(_1156, cbSceneParam._m0[62u].z, fma(_1152, cbSceneParam._m0[62u].y, _1148 * cbSceneParam._m0[62u].x))) / _1365;
            float _1568 = isnan(cbSceneParam._m0[41u].w) ? _1564 : (isnan(_1564) ? cbSceneParam._m0[41u].w : max(_1564, cbSceneParam._m0[41u].w));
            float _1611 = (cbSceneParam._m0[33u].x - sqrt(((_1162 * _1162) + (_1161 * _1161)) + (_1163 * _1163))) * cbSceneParam._m0[33u].y;
            float _2678 = isnan(0.0) ? _1611 : (isnan(_1611) ? 0.0 : max(_1611, 0.0));
            float _1618 = (isnan(1.0) ? _2678 : (isnan(_2678) ? 1.0 : min(_2678, 1.0))) * (1.0 - dot(vec4(vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].z + _1366, cbSceneParam._m0[33u].w + _1367), _1568), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(cbSceneParam._m0[33u].w + _1366, _1367 - cbSceneParam._m0[33u].z), _1568), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1366 - cbSceneParam._m0[33u].z, _1367 - cbSceneParam._m0[33u].w), _1568), 0.0)).x, vec4(textureLod(sampler2DShadow(g_ShadowTexture, SS_Shadow), vec3(vec2(_1366 - cbSceneParam._m0[33u].w, cbSceneParam._m0[33u].z + _1367), _1568), 0.0)).x), vec4(0.25)));
            float _1622 = 1.0 - (_1618 * cbSceneParam._m0[34u].x);
            float _1623 = 1.0 - (_1618 * cbSceneParam._m0[34u].y);
            float _1624 = 1.0 - (_1618 * cbSceneParam._m0[34u].z);
            frontier_phi_46_45_ladder = isnan(_1624) ? _1313 : (isnan(_1313) ? _1624 : min(_1313, _1624));
            frontier_phi_46_45_ladder_1 = isnan(_1623) ? _1312 : (isnan(_1312) ? _1623 : min(_1312, _1623));
            frontier_phi_46_45_ladder_2 = isnan(_1622) ? _1311 : (isnan(_1311) ? _1622 : min(_1311, _1622));
        }
        else
        {
            frontier_phi_46_45_ladder = _1313;
            frontier_phi_46_45_ladder_1 = _1312;
            frontier_phi_46_45_ladder_2 = _1311;
        }
        _1377 = frontier_phi_46_45_ladder_2;
        _1379 = frontier_phi_46_45_ladder_1;
        _1381 = frontier_phi_46_45_ladder;
    }
    else
    {
        _1377 = _1311;
        _1379 = _1312;
        _1381 = _1313;
    }
    uint _1383 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1388 = floatBitsToUint(cbInstanceData._m0[_1383 + 5u]);
    uint _1390 = _1388.x * 14u;
    uint _1391 = _1390 + 13u;
    float _1396 = _484 + (-1.0);
    float _1399 = (cbLight._m0[_1391].x * _1396) + 1.0;
    float _1400 = (cbLight._m0[_1391].y * _1396) + 1.0;
    uint _1401 = _1390 + 8u;
    float _1412 = cbLight._m0[_1390].x + _463;
    float _1413 = cbLight._m0[_1390].y + _464;
    float _1414 = cbLight._m0[_1390].z + _465;
    float _1418 = inversesqrt(dot(vec3(_1412, _1413, _1414), vec3(_1412, _1413, _1414)));
    float _1422 = dot(vec3(0.0), vec3(cbLight._m0[_1390].xyz));
    float _2704 = isnan(0.0) ? _1422 : (isnan(_1422) ? 0.0 : max(_1422, 0.0));
    float _1425 = isnan(1.0) ? _2704 : (isnan(_2704) ? 1.0 : min(_2704, 1.0));
    float _1426 = dot(vec3(0.0), vec3(_463, _464, _465));
    float _2715 = isnan(0.0) ? _1426 : (isnan(_1426) ? 0.0 : max(_1426, 0.0));
    float _1429 = isnan(1.0) ? _2715 : (isnan(_2715) ? 1.0 : min(_2715, 1.0));
    float _1430 = dot(vec3(cbLight._m0[_1390].xyz), vec3(_1412 * _1418, _1413 * _1418, _1414 * _1418));
    float _2726 = isnan(0.0) ? _1430 : (isnan(_1430) ? 0.0 : max(_1430, 0.0));
    float _1441 = (exp2(log2(1.0 - (isnan(1.0) ? _2726 : (isnan(_2726) ? 1.0 : min(_2726, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1447 = (0.5 / ((_1425 + 9.9999999392252902907785028219223e-09) + _1429)) * _1425;
    float _2737 = isnan(0.0) ? _1447 : (isnan(_1447) ? 0.0 : max(_1447, 0.0));
    float _1449 = (isnan(1.0) ? _2737 : (isnan(_2737) ? 1.0 : min(_2737, 1.0))) * 0.31831014156341552734375;
    float _1451 = isnan(1.0) ? _1399 : (isnan(_1399) ? 1.0 : min(_1399, 1.0));
    uint _1464 = _1390 + 9u;
    uint _1470 = _1390 | 1u;
    float _1476 = cbLight._m0[_1470].x + _463;
    float _1477 = cbLight._m0[_1470].y + _464;
    float _1478 = cbLight._m0[_1470].z + _465;
    float _1482 = inversesqrt(dot(vec3(_1476, _1477, _1478), vec3(_1476, _1477, _1478)));
    float _1486 = dot(vec3(0.0), vec3(cbLight._m0[_1470].xyz));
    float _2753 = isnan(0.0) ? _1486 : (isnan(_1486) ? 0.0 : max(_1486, 0.0));
    float _1489 = isnan(1.0) ? _2753 : (isnan(_2753) ? 1.0 : min(_2753, 1.0));
    float _1490 = dot(vec3(cbLight._m0[_1470].xyz), vec3(_1476 * _1482, _1477 * _1482, _1478 * _1482));
    float _2764 = isnan(0.0) ? _1490 : (isnan(_1490) ? 0.0 : max(_1490, 0.0));
    float _1499 = (exp2(log2(1.0 - (isnan(1.0) ? _2764 : (isnan(_2764) ? 1.0 : min(_2764, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1503 = (0.5 / ((_1489 + 9.9999999392252902907785028219223e-09) + _1429)) * _1489;
    float _2775 = isnan(0.0) ? _1503 : (isnan(_1503) ? 0.0 : max(_1503, 0.0));
    float _1505 = (isnan(1.0) ? _2775 : (isnan(_2775) ? 1.0 : min(_2775, 1.0))) * 0.31831014156341552734375;
    float _1506 = isnan(1.0) ? _1400 : (isnan(_1400) ? 1.0 : min(_1400, 1.0));
    float _1516 = (((_1499 * cbLight._m0[_1464].x) * _1505) * _1506) + ((((cbLight._m0[_1401].x * _1377) * _1441) * _1449) * _1451);
    float _1517 = (((_1499 * cbLight._m0[_1464].y) * _1505) * _1506) + ((((cbLight._m0[_1401].y * _1379) * _1441) * _1449) * _1451);
    float _1518 = (((_1499 * cbLight._m0[_1464].z) * _1505) * _1506) + ((((cbLight._m0[_1401].z * _1381) * _1441) * _1449) * _1451);
    float _1682;
    float _1684;
    float _1686;
    if (_1388.y == 0u)
    {
        uvec4 _1636 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1637 = _1636.x;
        uint _1648 = uint((float(_1636.y) * floor(float(uint(cbSceneParam._m0[85u].y * _472) / _1637))) + floor(float(uint(cbSceneParam._m0[85u].x * _471) / _1637)));
        float _1658 = (log2(_1163 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1659 = isnan(0.0) ? _1658 : (isnan(_1658) ? 0.0 : max(_1658, 0.0));
        uint _1662 = uint(isnan(14.0) ? _1659 : (isnan(_1659) ? 14.0 : min(_1659, 14.0)));
        uvec4 _1668 = texelFetch(g_lightClusterGridBuffer, int(((_1662 << 2u) + (_1648 << 6u)) >> 2u));
        uint _1669 = _1668.x;
        uint _1670 = _1636.z;
        float _1776;
        float _1778;
        float _1780;
        if (((((1u << ((_1670 >> 4u) & 15u)) + 4294967295u) & _1669) == 0u) || ((_1670 & 240u) == 0u))
        {
            _1776 = 0.0;
            _1778 = 0.0;
            _1780 = 0.0;
        }
        else
        {
            float _1777;
            float _1779;
            float _1781;
            float _1929 = 0.0;
            float _1930 = 0.0;
            float _1931 = 0.0;
            uint _1932 = 0u;
            uint _1941;
            bool _1942;
            for (;;)
            {
                _1941 = texelFetch(g_lightClassification, int((((_1662 << 5u) + (_1648 << 9u)) + (_1932 << 2u)) >> 2u)).x;
                _1942 = _1941 == 0u;
                float frontier_phi_70_pred;
                float frontier_phi_70_pred_1;
                float frontier_phi_70_pred_2;
                if (_1942)
                {
                    frontier_phi_70_pred = _1931;
                    frontier_phi_70_pred_1 = _1930;
                    frontier_phi_70_pred_2 = _1929;
                }
                else
                {
                    float _2065;
                    float _2066;
                    float _2067;
                    uint _2068;
                    _2065 = _1929;
                    _2066 = _1930;
                    _2067 = _1931;
                    _2068 = _1941;
                    float _2003;
                    float _2004;
                    float _2005;
                    for (;;)
                    {
                        uint _2072 = uint(findLSB(_2068)) + (_1932 << 5u);
                        uint _2069 = (_2068 + 4294967295u) & _2068;
                        uint _2074 = _2072 * 48u;
                        vec4 _2088 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2074)).x, texelFetch(g_PointLightRenderingBuffer, int(_2074 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2074 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2074 + 3u)).x));
                        uint _2105 = (_2072 * 48u) + 8u;
                        vec3 _2116 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2105)).x, texelFetch(g_PointLightRenderingBuffer, int(_2105 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2105 + 2u)).x));
                        float _2120 = _2088.x - _1161;
                        float _2121 = _2088.y - _1162;
                        float _2122 = _2088.z - _1163;
                        float _2123 = dot(vec3(_2120, _2121, _2122), vec3(_2120, _2121, _2122));
                        float _2126 = inversesqrt(_2123);
                        float _2135 = 1.0 - (_2123 * _2088.w);
                        float _2801 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
                        float _2137 = sqrt(_2123) * uintBitsToFloat(uvec4(_2095, _2096, _2097, texelFetch(g_PointLightRenderingBuffer, int(((_2072 * 48u) + 4u) + 3u)).x)).w;
                        float _2140 = 1.39999997615814208984375 / (_2137 + 1.39999997615814208984375);
                        float _2141 = _2140 * _2140;
                        float _2144 = ((1.0 - _2141) * dot(vec3(0.0), vec3(_2126 * _2120, _2126 * _2121, _2126 * _2122))) + _2141;
                        float _2146 = (-0.0) - _1161;
                        float _2147 = (-0.0) - _1162;
                        float _2148 = (-0.0) - _1163;
                        float _2152 = inversesqrt(dot(vec3(_2146, _2147, _2148), vec3(_2146, _2147, _2148)));
                        float _2156 = dot(vec3(0.0), vec3(_2152 * _2146, _2152 * _2147, _2152 * _2148));
                        float _2812 = isnan(0.0) ? _2156 : (isnan(_2156) ? 0.0 : max(_2156, 0.0));
                        float _2823 = isnan(0.0) ? _2144 : (isnan(_2144) ? 0.0 : max(_2144, 0.0));
                        float _2160 = isnan(1.0) ? _2823 : (isnan(_2823) ? 1.0 : min(_2823, 1.0));
                        float _2164 = (0.5 / (((isnan(1.0) ? _2812 : (isnan(_2812) ? 1.0 : min(_2812, 1.0))) + 9.9999999392252902907785028219223e-09) + _2160)) * _2160;
                        float _2834 = isnan(0.0) ? _2164 : (isnan(_2164) ? 0.0 : max(_2164, 0.0));
                        float _2173 = (((isnan(1.0) ? _2834 : (isnan(_2834) ? 1.0 : min(_2834, 1.0))) * 3.1415927410125732421875) / (((_2137 * _2137) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2801 : (isnan(_2801) ? 1.0 : min(_2801, 1.0)));
                        _2003 = (_2173 * _2116.x) + _2065;
                        _2004 = (_2173 * _2116.y) + _2066;
                        _2005 = (_2173 * _2116.z) + _2067;
                        if (_2069 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2065 = _2003;
                            _2066 = _2004;
                            _2067 = _2005;
                            _2068 = _2069;
                        }
                    }
                    frontier_phi_70_pred = _2005;
                    frontier_phi_70_pred_1 = _2004;
                    frontier_phi_70_pred_2 = _2003;
                }
                _1781 = frontier_phi_70_pred;
                _1779 = frontier_phi_70_pred_1;
                _1777 = frontier_phi_70_pred_2;
                uint _1933 = _1932 + 1u;
                if (_1933 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1929 = _1777;
                    _1930 = _1779;
                    _1931 = _1781;
                    _1932 = _1933;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1776 = _1777;
            _1778 = _1779;
            _1780 = _1781;
        }
        uvec4 _1784 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1785 = _1784.z;
        uint _1787 = (_1785 >> 8u) & 15u;
        float _1909;
        float _1911;
        float _1913;
        if (((4294967295u << _1787) & _1669) == 0u)
        {
            _1909 = _1776;
            _1911 = _1778;
            _1913 = _1780;
        }
        else
        {
            float _1925 = inversesqrt(dot(vec3(_1161, _1162, _1163), vec3(_1161, _1162, _1163)));
            float frontier_phi_63_64_ladder;
            float frontier_phi_63_64_ladder_1;
            float frontier_phi_63_64_ladder_2;
            if (_1787 < ((_1785 >> 12u) & 15u))
            {
                float _1910;
                float _1912;
                float _1914;
                float _2051 = _1776;
                float _2052 = _1778;
                float _2053 = _1780;
                uint _2054 = _1787;
                uint _2063;
                bool _2064;
                for (;;)
                {
                    _2063 = texelFetch(g_lightClassification, int((((_1662 << 5u) + (_1648 << 9u)) + (_2054 << 2u)) >> 2u)).x;
                    _2064 = _2063 == 0u;
                    float frontier_phi_76_pred;
                    float frontier_phi_76_pred_1;
                    float frontier_phi_76_pred_2;
                    if (_2064)
                    {
                        frontier_phi_76_pred = _2051;
                        frontier_phi_76_pred_1 = _2053;
                        frontier_phi_76_pred_2 = _2052;
                    }
                    else
                    {
                        float _2178;
                        float _2179;
                        float _2180;
                        float _2399;
                        float _2400;
                        float _2401;
                        float _2188 = _2051;
                        float _2189 = _2052;
                        float _2190 = _2053;
                        uint _2191 = _2063;
                        uint _2192;
                        uint _2202;
                        vec4 _2217;
                        float _2218;
                        vec3 _2230;
                        vec4 _2245;
                        vec4 _2260;
                        float _2306;
                        bool _2307;
                        for (;;)
                        {
                            _2202 = ((_2054 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2191));
                            _2192 = (_2191 + 4294967295u) & _2191;
                            uint _2204 = _2202 * 40u;
                            _2217 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2204)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2204 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2204 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2204 + 3u)).x));
                            _2218 = _2217.w;
                            uint _2220 = (_2202 * 40u) + 8u;
                            _2230 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2220)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2220 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2220 + 2u)).x));
                            uint _2232 = (_2202 * 40u) + 16u;
                            _2245 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2232)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2232 + 3u)).x));
                            uint _2247 = (_2202 * 40u) + 20u;
                            _2260 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2247)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2247 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2247 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2247 + 3u)).x));
                            uint _2262 = (_2202 * 40u) + 24u;
                            vec4 _2275 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2262)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2262 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2262 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2262 + 3u)).x));
                            uint _2281 = (_2202 * 40u) + 28u;
                            vec4 _2294 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2281)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2281 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2281 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2281 + 3u)).x));
                            _2306 = fma(_1163, _2294.z, fma(_1162, _2294.y, _2294.x * _1161)) + _2294.w;
                            _2307 = !((fma(_1163, _2275.z, fma(_1162, _2275.y, _2275.x * _1161)) + _2275.w) <= 0.0);
                            float frontier_phi_82_pred;
                            float frontier_phi_82_pred_1;
                            float frontier_phi_82_pred_2;
                            if (_2307)
                            {
                                float _2341 = _2217.x - _1161;
                                float _2342 = _2217.y - _1162;
                                float _2343 = _2217.z - _1163;
                                float _2344 = dot(vec3(_2341, _2342, _2343), vec3(_2341, _2342, _2343));
                                float _2347 = inversesqrt(_2344);
                                float _2354 = 1.0 - (_2344 / (_2218 * _2218));
                                float _2845 = isnan(0.0) ? _2354 : (isnan(_2354) ? 0.0 : max(_2354, 0.0));
                                float _2356 = sqrt(_2344) * uintBitsToFloat(uvec4(_2310, _2311, _2312, texelFetch(g_SpotLightRenderingBuffer, int(((_2202 * 40u) + 4u) + 3u)).x)).w;
                                float _2358 = 1.39999997615814208984375 / (_2356 + 1.39999997615814208984375);
                                float _2359 = _2358 * _2358;
                                float _2362 = (fma(_1163, _2245.z, fma(_1162, _2245.y, _2245.x * _1161)) + _2245.w) / _2306;
                                float _2363 = (fma(_1163, _2260.z, fma(_1162, _2260.y, _2260.x * _1161)) + _2260.w) / _2306;
                                float _2367 = 1.0 - dot(vec2(_2362, _2363), vec2(_2362, _2363));
                                float _2856 = isnan(0.0) ? _2367 : (isnan(_2367) ? 0.0 : max(_2367, 0.0));
                                float _2375 = dot(vec3(0.0), vec3((-0.0) - (_1161 * _1925), (-0.0) - (_1162 * _1925), (-0.0) - (_1163 * _1925)));
                                float _2867 = isnan(0.0) ? _2375 : (isnan(_2375) ? 0.0 : max(_2375, 0.0));
                                float _2383 = ((1.0 - _2359) * dot(vec3(0.0), vec3(_2347 * _2341, _2347 * _2342, _2347 * _2343))) + _2359;
                                float _2878 = isnan(0.0) ? _2383 : (isnan(_2383) ? 0.0 : max(_2383, 0.0));
                                float _2384 = isnan(1.0) ? _2878 : (isnan(_2878) ? 1.0 : min(_2878, 1.0));
                                float _2388 = (0.5 / (((isnan(1.0) ? _2867 : (isnan(_2867) ? 1.0 : min(_2867, 1.0))) + 9.9999999392252902907785028219223e-09) + _2384)) * _2384;
                                float _2889 = isnan(0.0) ? _2388 : (isnan(_2388) ? 0.0 : max(_2388, 0.0));
                                float _2395 = ((isnan(1.0) ? _2856 : (isnan(_2856) ? 1.0 : min(_2856, 1.0))) * (isnan(1.0) ? _2845 : (isnan(_2845) ? 1.0 : min(_2845, 1.0)))) * (((isnan(1.0) ? _2889 : (isnan(_2889) ? 1.0 : min(_2889, 1.0))) * 3.1415927410125732421875) / (((_2356 * _2356) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_82_pred = _2395 * _2230.z;
                                frontier_phi_82_pred_1 = _2395 * _2230.y;
                                frontier_phi_82_pred_2 = _2395 * _2230.x;
                            }
                            else
                            {
                                frontier_phi_82_pred = 0.0;
                                frontier_phi_82_pred_1 = 0.0;
                                frontier_phi_82_pred_2 = 0.0;
                            }
                            _2401 = frontier_phi_82_pred;
                            _2400 = frontier_phi_82_pred_1;
                            _2399 = frontier_phi_82_pred_2;
                            _2178 = _2399 + _2188;
                            _2179 = _2400 + _2189;
                            _2180 = _2401 + _2190;
                            if (_2192 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2188 = _2178;
                                _2189 = _2179;
                                _2190 = _2180;
                                _2191 = _2192;
                                continue;
                            }
                        }
                        frontier_phi_76_pred = _2178;
                        frontier_phi_76_pred_1 = _2180;
                        frontier_phi_76_pred_2 = _2179;
                    }
                    _1910 = frontier_phi_76_pred;
                    _1914 = frontier_phi_76_pred_1;
                    _1912 = frontier_phi_76_pred_2;
                    uint _2055 = _2054 + 1u;
                    if (_2055 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2051 = _1910;
                        _2052 = _1912;
                        _2053 = _1914;
                        _2054 = _2055;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_63_64_ladder = _1914;
                frontier_phi_63_64_ladder_1 = _1912;
                frontier_phi_63_64_ladder_2 = _1910;
            }
            else
            {
                frontier_phi_63_64_ladder = _1780;
                frontier_phi_63_64_ladder_1 = _1778;
                frontier_phi_63_64_ladder_2 = _1776;
            }
            _1909 = frontier_phi_63_64_ladder_2;
            _1911 = frontier_phi_63_64_ladder_1;
            _1913 = frontier_phi_63_64_ladder;
        }
        float _1918 = isnan(1.0) ? _484 : (isnan(_484) ? 1.0 : min(_484, 1.0));
        _1682 = ((_1909 * 0.039999999105930328369140625) * _1918) + _1516;
        _1684 = ((_1911 * 0.039999999105930328369140625) * _1918) + _1517;
        _1686 = ((_1913 * 0.039999999105930328369140625) * _1918) + _1518;
    }
    else
    {
        _1682 = _1516;
        _1684 = _1517;
        _1686 = _1518;
    }
    uint _1693 = (_1383 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1708 = ((_435.x * cbMtdParam._m0[13u].x) * cbInstanceData._m0[_1693].x) + ((_1682 + ((isnan(0.0) ? _1107 : (isnan(_1107) ? 0.0 : max(_1107, 0.0))) * _880)) * cbPerFrame._m0[3u].x);
    float _1709 = ((_435.y * cbMtdParam._m0[13u].y) * cbInstanceData._m0[_1693].y) + ((_1684 + ((isnan(0.0) ? _1110 : (isnan(_1110) ? 0.0 : max(_1110, 0.0))) * _880)) * cbPerFrame._m0[3u].x);
    float _1710 = ((_435.z * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_1693].z) + ((_1686 + ((isnan(0.0) ? _1113 : (isnan(_1113) ? 0.0 : max(_1113, 0.0))) * _880)) * cbPerFrame._m0[3u].x);
    uint _1714 = _1383 + 6u;
    float _1722 = _471 / cbSceneParam._m0[86u].x;
    float _1723 = _472 / cbSceneParam._m0[86u].y;
    vec4 _1737 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1722, _1723, (log2((isnan(cbSceneParam._m0[77u].w) ? _458 : (isnan(_458) ? cbSceneParam._m0[77u].w : min(_458, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1739 = _1737.x;
    float _1740 = _1737.y;
    float _1741 = _1737.z;
    float _1742 = _1737.w;
    float _1832;
    float _1834;
    float _1836;
    float _1838;
    if (_458 > cbSceneParam._m0[78u].w)
    {
        float _1795 = isnan(_458) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _458 : min(cbSceneParam._m0[80u].w, _458));
        float _1796 = _1795 / _458;
        float _1807 = _1796 * _254;
        float _1808 = _255 * _1796;
        float _1809 = (-0.0) - _1808;
        float _1810 = _1796 * _256;
        float _1812 = (cbSceneParam._m0[77u].w * _1809) / _1795;
        float _1813 = _1812 + cbSceneParam._m0[79u].w;
        float _1814 = cbSceneParam._m0[79u].w - _1808;
        float _1820 = sqrt(((_1807 * _1807) + (_1808 * _1808)) + (_1810 * _1810));
        float _1823 = (1.0 - (cbSceneParam._m0[77u].w / _1795)) * _1820;
        float _1828 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1830 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2013;
        if (abs((_1809 - _1812) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2013 = ((((_1813 > 0.0) ? exp2(_1828 * _1813) : (2.0 - exp2(_1830 * _1813))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1823;
        }
        else
        {
            float _1955 = 1.0 / cbSceneParam._m0[80u].x;
            float _1956 = isnan(_1814) ? _1813 : (isnan(_1813) ? _1814 : max(_1813, _1814));
            float _1957 = isnan(_1814) ? _1813 : (isnan(_1813) ? _1814 : min(_1813, _1814));
            float _1966 = isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : min(_1956, 0.0));
            float _1967 = isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : min(_1957, 0.0));
            _2013 = ((abs(_1820 / _1809) * cbSceneParam._m0[80u].y) * ((((_1966 - _1967) * 2.0) - ((exp2(_1828 * (isnan(0.0) ? _1956 : (isnan(_1956) ? 0.0 : max(_1956, 0.0)))) - exp2(_1828 * (isnan(0.0) ? _1957 : (isnan(_1957) ? 0.0 : max(_1957, 0.0))))) * _1955)) - ((exp2(_1830 * _1966) - exp2(_1830 * _1967)) * _1955))) + (_1823 * cbSceneParam._m0[80u].z);
        }
        vec4 _2015 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1722, _1723, 1.0), 0.0);
        float _2024 = exp2((_2013 * (-1.44269502162933349609375)) * (1.0 - _2015.w));
        float _2025 = log2(_2024);
        float _2041 = log2(_1742);
        _1832 = (exp2(_2041 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2025 * cbSceneParam._m0[78u].x)) * _2015.x) / cbSceneParam._m0[78u].x)) + _1739;
        _1834 = (exp2(_2041 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2025 * cbSceneParam._m0[78u].y)) * _2015.y) / cbSceneParam._m0[78u].y)) + _1740;
        _1836 = (exp2(_2041 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2025 * cbSceneParam._m0[78u].z)) * _2015.z) / cbSceneParam._m0[78u].z)) + _1741;
        _1838 = _2024 * _1742;
    }
    else
    {
        _1832 = _1739;
        _1834 = _1740;
        _1836 = _1741;
        _1838 = _1742;
    }
    float _1850 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1851 = _1850 == 3.0;
    float _1853 = log2(_1838);
    float _1860 = exp2(_1853 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1708 : (isnan(_1708) ? 0.0 : max(_1708, 0.0)));
    float _1861 = exp2(_1853 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1709 : (isnan(_1709) ? 0.0 : max(_1709, 0.0)));
    float _1862 = exp2(_1853 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1710 : (isnan(_1710) ? 0.0 : max(_1710, 0.0)));
    float _1871 = (_1850 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1871 * (_1851 ? _1860 : (_1860 + (cbSceneParam._m0[72u].w * _1832)));
    SV_Target.y = _1871 * (_1851 ? _1861 : (_1861 + (cbSceneParam._m0[72u].w * _1834)));
    SV_Target.z = _1871 * (_1851 ? _1862 : (_1862 + (cbSceneParam._m0[72u].w * _1836)));
    SV_Target.w = cbInstanceData._m0[_1714].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1714].w;
}


