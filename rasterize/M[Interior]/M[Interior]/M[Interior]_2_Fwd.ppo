#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Interior_snp_0_Texture2D_0;
layout(set = 0, binding = 3) uniform texture2D M_Interior_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 6) uniform texture2D M_Interior_snp_0_Texture2D_6;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _751;
uint _1893;
uint _1894;
uint _1895;
uint _2129;
uint _2130;
uint _2131;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _178 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _179 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _180 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _185 = inversesqrt(dot(vec3(_178, _179, _180), vec3(_178, _179, _180)));
    float _192 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _199 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _247 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _257 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _247);
    float _258 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _247);
    float _259 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _247);
    vec4 _281 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _316 = cbMtdParam._m0[21u].w + _257;
    float _317 = cbMtdParam._m0[22u].x + _258;
    float _318 = cbMtdParam._m0[22u].y + _259;
    float _332 = (-0.0) - dot(vec3(_316, _317, _318), vec3(_185 * _178, _185 * _179, _185 * _180));
    float _333 = (-0.0) - dot(vec3(_316, _317, _318), vec3(_199 * TANGENT.x, _199 * TANGENT.y, _199 * TANGENT.z));
    float _334 = (-0.0) - dot(vec3(_316, _317, _318), vec3((-0.0) - (_192 * NORMAL.x), (-0.0) - (_192 * NORMAL.y), (-0.0) - (_192 * NORMAL.z)));
    float _338 = inversesqrt(dot(vec3(_332, _333, _334), vec3(_332, _333, _334)));
    float _341 = _338 * _334;
    float _342 = (_338 * _332) + (((_281.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _343 = (_338 * _333) + (((_281.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _344 = _342 * cbMtdParam._m0[18u].z;
    float _345 = _343 * cbMtdParam._m0[18u].y;
    float _346 = fract(TEXCOORD.x);
    float _347 = fract(TEXCOORD.y);
    float _353;
    if (_344 > 0.0)
    {
        _353 = (1.0 - _346) / _344;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        if (_344 < 0.0)
        {
            frontier_phi_3_2_ladder = ((-0.0) - _346) / _344;
        }
        else
        {
            frontier_phi_3_2_ladder = 5000.0;
        }
        _353 = frontier_phi_3_2_ladder;
    }
    float _361;
    if (_345 > 0.0)
    {
        _361 = (1.0 - _347) / _345;
    }
    else
    {
        float frontier_phi_7_6_ladder;
        if (_345 < 0.0)
        {
            frontier_phi_7_6_ladder = ((-0.0) - _347) / _345;
        }
        else
        {
            frontier_phi_7_6_ladder = 5000.0;
        }
        _361 = frontier_phi_7_6_ladder;
    }
    bool _363 = _341 > 0.0;
    float _365 = _363 ? (cbMtdParam._m0[15u].x / _341) : 5000.0;
    float _366 = isnan(_361) ? _353 : (isnan(_353) ? _361 : min(_353, _361));
    float _367 = isnan(_365) ? _366 : (isnan(_366) ? _365 : min(_366, _365));
    float _371 = cbMtdParam._m0[15u].y * cbMtdParam._m0[15u].x;
    float _372 = _346 + (-0.5);
    float _375 = _347 + (-0.5);
    float _378 = ((_367 * _341) + _371) / _371;
    vec4 _402 = texture(sampler2D(M_Interior_snp_0_Texture2D_3, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[3u].x * (((((_372 + (_367 * _344)) / _378) + 0.5) + (cbMtdParam._m0[15u].w - cbMtdParam._m0[18u].w * trunc(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w))) / cbMtdParam._m0[18u].w)) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (((((_375 + (_367 * _345)) / _378) + 0.5) + floor(cbMtdParam._m0[15u].w / cbMtdParam._m0[18u].w)) / cbMtdParam._m0[19u].x)) + cbTextureTilingScale._m0[3u].w));
    float _412 = cbMtdParam._m0[9u].x * _402.x;
    float _413 = cbMtdParam._m0[9u].y * _402.y;
    float _414 = cbMtdParam._m0[9u].z * _402.z;
    float _432 = _342 * cbMtdParam._m0[20u].z;
    float _433 = _343 * cbMtdParam._m0[20u].y;
    bool _434 = _432 > 0.0;
    float _439;
    if (_434)
    {
        _439 = (1.0 - _346) / _432;
    }
    else
    {
        float frontier_phi_11_10_ladder;
        if (_432 < 0.0)
        {
            frontier_phi_11_10_ladder = ((-0.0) - _346) / _432;
        }
        else
        {
            frontier_phi_11_10_ladder = 5000.0;
        }
        _439 = frontier_phi_11_10_ladder;
    }
    bool _441 = _433 > 0.0;
    float _446;
    if (_441)
    {
        _446 = (1.0 - _347) / _433;
    }
    else
    {
        float frontier_phi_15_14_ladder;
        if (_433 < 0.0)
        {
            frontier_phi_15_14_ladder = ((-0.0) - _347) / _433;
        }
        else
        {
            frontier_phi_15_14_ladder = 5000.0;
        }
        _446 = frontier_phi_15_14_ladder;
    }
    float _449 = _363 ? (cbMtdParam._m0[16u].x / _341) : 5000.0;
    float _450 = isnan(_446) ? _439 : (isnan(_439) ? _446 : min(_439, _446));
    float _451 = isnan(_449) ? _450 : (isnan(_450) ? _449 : min(_450, _449));
    float _455 = cbMtdParam._m0[17u].x * cbMtdParam._m0[16u].x;
    float _459 = ((_451 * _341) + _455) / _455;
    float _464 = cbMtdParam._m0[16u].w - cbMtdParam._m0[17u].w * trunc(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    float _466 = floor(cbMtdParam._m0[16u].w / cbMtdParam._m0[17u].w);
    vec4 _482 = texture(sampler2D(M_Interior_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (((((_372 + (_451 * _432)) / _459) + 0.5) + _464) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * (((((_375 + (_451 * _433)) / _459) + 0.5) + _466) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[0u].w));
    float _494;
    if (_434)
    {
        _494 = (1.0 - _346) / _432;
    }
    else
    {
        float frontier_phi_19_18_ladder;
        if (_432 < 0.0)
        {
            frontier_phi_19_18_ladder = ((-0.0) - _346) / _432;
        }
        else
        {
            frontier_phi_19_18_ladder = 5000.0;
        }
        _494 = frontier_phi_19_18_ladder;
    }
    float _500;
    if (_441)
    {
        _500 = (1.0 - _347) / _433;
    }
    else
    {
        float frontier_phi_23_22_ladder;
        if (_433 < 0.0)
        {
            frontier_phi_23_22_ladder = ((-0.0) - _347) / _433;
        }
        else
        {
            frontier_phi_23_22_ladder = 5000.0;
        }
        _500 = frontier_phi_23_22_ladder;
    }
    float _502 = isnan(_500) ? _494 : (isnan(_494) ? _500 : min(_494, _500));
    float _503 = isnan(_449) ? _502 : (isnan(_502) ? _449 : min(_502, _449));
    float _510 = ((_503 * _341) + _455) / _455;
    vec4 _531 = texture(sampler2D(M_Interior_snp_0_Texture2D_6, SS_WrapLinear), vec2((cbTextureTilingScale._m0[6u].x * (((((_372 + (_503 * _432)) / _510) + 0.5) + _464) / cbMtdParam._m0[17u].w)) + cbTextureTilingScale._m0[6u].z, (cbTextureTilingScale._m0[6u].y * (((((_375 + (_503 * _433)) / _510) + 0.5) + _466) / cbMtdParam._m0[18u].x)) + cbTextureTilingScale._m0[6u].w));
    float _533 = _531.x;
    float _558 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _562 = inversesqrt(dot(vec3(_257, _258, _259), vec3(_257, _258, _259)));
    float _563 = _257 * _562;
    float _564 = _258 * _562;
    float _565 = _259 * _562;
    float _571 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _572 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _581 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_571 * cbSceneParam._m0[86u].x, _572 * cbSceneParam._m0[86u].y));
    float _584 = _581.x * TEXCOORD.z;
    float _585 = (-0.0) - _563;
    float _586 = (-0.0) - _564;
    float _587 = (-0.0) - _565;
    float _609 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _613 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _617 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _750;
    float _752;
    float _753;
    float _754;
    float _755;
    float _756;
    float _757;
    float _758;
    float _759;
    float _760;
    float _761;
    float _762;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _673 = (cbModelParam._m0[37u].x * ((((fma(_617, cbModelParam._m0[26u].z, fma(_613, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _609)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _675 = (cbModelParam._m0[37u].y * ((((fma(_617, cbModelParam._m0[27u].z, fma(_613, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _609)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _676 = (((((fma(_617, cbModelParam._m0[28u].z, fma(_613, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _609)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _679 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_673, _675, _676), 0.0);
        vec4 _686 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_673, _675, _676), 0.0);
        vec4 _693 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_673, _675, _676), 0.0);
        vec4 _700 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_673, _675, _676), 0.0);
        float _713 = exp2((_679.w + (-0.5)) * 20.0) * 2.0;
        float _723 = exp2((_686.w + (-0.5)) * 20.0) * 2.0;
        float _733 = exp2((_693.w + (-0.5)) * 20.0) * 2.0;
        float _743 = exp2((_700.w + (-0.5)) * 20.0) * 2.0;
        float _744 = _743 * (_700.x + (-0.5));
        float _745 = _743 * (_700.y + (-0.5));
        float _746 = _743 * (_700.z + (-0.5));
        _750 = _713 * (_679.z + (-0.5));
        _752 = _713 * (_679.y + (-0.5));
        _753 = _713 * (_679.x + (-0.5));
        _754 = _723 * (_686.z + (-0.5));
        _755 = _723 * (_686.y + (-0.5));
        _756 = _723 * (_686.x + (-0.5));
        _757 = _733 * (_693.z + (-0.5));
        _758 = _733 * (_693.y + (-0.5));
        _759 = _733 * (_693.x + (-0.5));
        _760 = isnan(0.0) ? _746 : (isnan(_746) ? 0.0 : max(_746, 0.0));
        _761 = isnan(0.0) ? _745 : (isnan(_745) ? 0.0 : max(_745, 0.0));
        _762 = isnan(0.0) ? _744 : (isnan(_744) ? 0.0 : max(_744, 0.0));
    }
    else
    {
        _750 = _751;
        _752 = _751;
        _753 = _751;
        _754 = _751;
        _755 = _751;
        _756 = _751;
        _757 = _751;
        _758 = _751;
        _759 = _751;
        _760 = _751;
        _761 = _751;
        _762 = _751;
    }
    float _890;
    float _891;
    float _892;
    float _893;
    float _894;
    float _895;
    float _896;
    float _897;
    float _898;
    float _899;
    float _900;
    float _901;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _816 = (cbModelParam._m0[38u].x * ((((fma(_617, cbModelParam._m0[30u].z, fma(_613, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _609)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _817 = (cbModelParam._m0[38u].y * ((((fma(_617, cbModelParam._m0[31u].z, fma(_613, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _609)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _818 = (((((fma(_617, cbModelParam._m0[32u].z, fma(_613, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _609)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _820 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _827 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _834 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        vec4 _841 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_816, _817, _818), 0.0);
        float _853 = exp2((_820.w + (-0.5)) * 20.0) * 2.0;
        float _863 = exp2((_827.w + (-0.5)) * 20.0) * 2.0;
        float _873 = exp2((_834.w + (-0.5)) * 20.0) * 2.0;
        float _883 = exp2((_841.w + (-0.5)) * 20.0) * 2.0;
        float _884 = _883 * (_841.x + (-0.5));
        float _885 = _883 * (_841.y + (-0.5));
        float _886 = _883 * (_841.z + (-0.5));
        _890 = _853 * (_820.z + (-0.5));
        _891 = _853 * (_820.y + (-0.5));
        _892 = _853 * (_820.x + (-0.5));
        _893 = _863 * (_827.z + (-0.5));
        _894 = _863 * (_827.y + (-0.5));
        _895 = _863 * (_827.x + (-0.5));
        _896 = _873 * (_834.z + (-0.5));
        _897 = _873 * (_834.y + (-0.5));
        _898 = _873 * (_834.x + (-0.5));
        _899 = isnan(0.0) ? _886 : (isnan(_886) ? 0.0 : max(_886, 0.0));
        _900 = isnan(0.0) ? _885 : (isnan(_885) ? 0.0 : max(_885, 0.0));
        _901 = isnan(0.0) ? _884 : (isnan(_884) ? 0.0 : max(_884, 0.0));
    }
    else
    {
        _890 = _751;
        _891 = _751;
        _892 = _751;
        _893 = _751;
        _894 = _751;
        _895 = _751;
        _896 = _751;
        _897 = _751;
        _898 = _751;
        _899 = _751;
        _900 = _751;
        _901 = _751;
    }
    float _916 = _563 * (-0.5);
    float _917 = _564 * (-0.5);
    float _918 = _565 * (-0.5);
    float _919 = dot(vec4(_916, _917, _918, 1.0), vec4(_892, _895, _898, _901));
    float _922 = dot(vec4(_916, _917, _918, 1.0), vec4(_891, _894, _897, _900));
    float _925 = dot(vec4(_916, _917, _918, 1.0), vec4(_890, _893, _896, _899));
    float _960;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _932 = dot(vec4(_916, _917, _918, 1.0), vec4(_750, _754, _757, _760));
        float _936 = dot(vec4(_916, _917, _918, 1.0), vec4(_752, _755, _758, _761));
        float _940 = dot(vec4(_916, _917, _918, 1.0), vec4(_753, _756, _759, _762));
        float _947 = dot(vec4(cbModelParam._m0[39u]), vec4(_916, _917, _918, 1.0));
        _960 = dot(vec3(isnan(0.0) ? _940 : (isnan(_940) ? 0.0 : max(_940, 0.0)), isnan(0.0) ? _936 : (isnan(_936) ? 0.0 : max(_936, 0.0)), isnan(0.0) ? _932 : (isnan(_932) ? 0.0 : max(_932, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_947) ? 0.0 : (isnan(0.0) ? _947 : max(0.0, _947))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _960 = 1.0;
    }
    float _971;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _962 = dot(vec4(cbModelParam._m0[40u]), vec4(_916, _917, _918, 1.0));
        _971 = dot(vec3(isnan(0.0) ? _919 : (isnan(_919) ? 0.0 : max(_919, 0.0)), isnan(0.0) ? _922 : (isnan(_922) ? 0.0 : max(_922, 0.0)), isnan(0.0) ? _925 : (isnan(_925) ? 0.0 : max(_925, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_962) ? 0.0 : (isnan(0.0) ? _962 : max(0.0, _962))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _971 = 1.0;
    }
    float _975 = (_971 * cbModelParam._m0[1u].x) + (_960 * (1.0 - cbModelParam._m0[1u].x));
    float _981 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _1064;
    float _1066;
    float _1068;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1031 = fma(_617, cbModelParam._m0[13u].z, fma(_613, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _609)) + cbModelParam._m0[13u].w;
        float _1035 = fma(_617, cbModelParam._m0[14u].z, fma(_613, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _609)) + cbModelParam._m0[14u].w;
        float _1039 = fma(_617, cbModelParam._m0[15u].z, fma(_613, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _609)) + cbModelParam._m0[15u].w;
        float _1042 = fma(_587, cbModelParam._m0[13u].z, fma(_586, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _585));
        float _1045 = fma(_587, cbModelParam._m0[14u].z, fma(_586, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _585));
        float _1048 = fma(_587, cbModelParam._m0[15u].z, fma(_586, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _585));
        float _1074;
        if (_1042 > 0.0)
        {
            _1074 = abs((1.0 - _1031) / _1042);
        }
        else
        {
            float frontier_phi_38_36_ladder;
            if (_1042 < 0.0)
            {
                frontier_phi_38_36_ladder = abs((_1031 + 1.0) / _1042);
            }
            else
            {
                frontier_phi_38_36_ladder = 5000.0;
            }
            _1074 = frontier_phi_38_36_ladder;
        }
        float _1351;
        if (_1045 > 0.0)
        {
            _1351 = abs((1.0 - _1035) / _1045);
        }
        else
        {
            float frontier_phi_47_43_ladder;
            if (_1045 < 0.0)
            {
                frontier_phi_47_43_ladder = abs((_1035 + 1.0) / _1045);
            }
            else
            {
                frontier_phi_47_43_ladder = 5000.0;
            }
            _1351 = frontier_phi_47_43_ladder;
        }
        float _1646;
        if (_1048 > 0.0)
        {
            _1646 = abs((1.0 - _1039) / _1048);
        }
        else
        {
            float frontier_phi_61_54_ladder;
            if (_1048 < 0.0)
            {
                frontier_phi_61_54_ladder = abs((_1039 + 1.0) / _1048);
            }
            else
            {
                frontier_phi_61_54_ladder = 5000.0;
            }
            _1646 = frontier_phi_61_54_ladder;
        }
        float _1648 = isnan(_1351) ? _1074 : (isnan(_1074) ? _1351 : min(_1074, _1351));
        float _1649 = isnan(_1646) ? _1648 : (isnan(_1648) ? _1646 : min(_1648, _1646));
        float _1653 = (_1649 * _1042) + _1031;
        float _1654 = (_1649 * _1045) + _1035;
        float _1655 = (_1649 * _1048) + _1039;
        float _1656 = _1649 * 9.9999997473787516355514526367188e-05;
        float _1657 = (-1.0) - _1656;
        float _1659 = _1656 + 1.0;
        float frontier_phi_37_61_ladder;
        float frontier_phi_37_61_ladder_1;
        float frontier_phi_37_61_ladder_2;
        if ((_1655 > _1659) || ((_1655 < _1657) || ((_1654 > _1659) || ((_1654 < _1657) || ((_1653 < _1657) || (_1653 > _1659))))))
        {
            frontier_phi_37_61_ladder = 0.0;
            frontier_phi_37_61_ladder_1 = 0.0;
            frontier_phi_37_61_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1766 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1655, cbModelParam._m0[9u].z, fma(_1654, cbModelParam._m0[9u].y, _1653 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1655, cbModelParam._m0[10u].z, fma(_1654, cbModelParam._m0[10u].y, _1653 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1655, cbModelParam._m0[11u].z, fma(_1654, cbModelParam._m0[11u].y, _1653 * cbModelParam._m0[11u].x))), _981);
            frontier_phi_37_61_ladder = _1766.z * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_1 = _1766.y * cbModelParam._m0[1u].y;
            frontier_phi_37_61_ladder_2 = _1766.x * cbModelParam._m0[1u].y;
        }
        _1064 = frontier_phi_37_61_ladder_2;
        _1066 = frontier_phi_37_61_ladder_1;
        _1068 = frontier_phi_37_61_ladder;
    }
    else
    {
        vec4 _1052 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_585, _586, _587), _981);
        _1064 = _1052.x * cbModelParam._m0[1u].y;
        _1066 = _1052.y * cbModelParam._m0[1u].y;
        _1068 = _1052.z * cbModelParam._m0[1u].y;
    }
    float _1071 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1159;
    float _1161;
    float _1163;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1123 = fma(_617, cbModelParam._m0[21u].z, fma(_613, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _609)) + cbModelParam._m0[21u].w;
        float _1127 = fma(_617, cbModelParam._m0[22u].z, fma(_613, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _609)) + cbModelParam._m0[22u].w;
        float _1131 = fma(_617, cbModelParam._m0[23u].z, fma(_613, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _609)) + cbModelParam._m0[23u].w;
        float _1134 = fma(_587, cbModelParam._m0[21u].z, fma(_586, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _585));
        float _1137 = fma(_587, cbModelParam._m0[22u].z, fma(_586, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _585));
        float _1140 = fma(_587, cbModelParam._m0[23u].z, fma(_586, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _585));
        float _1356;
        if (_1134 > 0.0)
        {
            _1356 = abs((1.0 - _1123) / _1134);
        }
        else
        {
            float frontier_phi_49_45_ladder;
            if (_1134 < 0.0)
            {
                frontier_phi_49_45_ladder = abs((_1123 + 1.0) / _1134);
            }
            else
            {
                frontier_phi_49_45_ladder = 5000.0;
            }
            _1356 = frontier_phi_49_45_ladder;
        }
        float _1672;
        if (_1137 > 0.0)
        {
            _1672 = abs((1.0 - _1127) / _1137);
        }
        else
        {
            float frontier_phi_63_56_ladder;
            if (_1137 < 0.0)
            {
                frontier_phi_63_56_ladder = abs((_1127 + 1.0) / _1137);
            }
            else
            {
                frontier_phi_63_56_ladder = 5000.0;
            }
            _1672 = frontier_phi_63_56_ladder;
        }
        float _1823;
        if (_1140 > 0.0)
        {
            _1823 = abs((1.0 - _1131) / _1140);
        }
        else
        {
            float frontier_phi_77_72_ladder;
            if (_1140 < 0.0)
            {
                frontier_phi_77_72_ladder = abs((_1131 + 1.0) / _1140);
            }
            else
            {
                frontier_phi_77_72_ladder = 5000.0;
            }
            _1823 = frontier_phi_77_72_ladder;
        }
        float _1825 = isnan(_1672) ? _1356 : (isnan(_1356) ? _1672 : min(_1356, _1672));
        float _1826 = isnan(_1823) ? _1825 : (isnan(_1825) ? _1823 : min(_1825, _1823));
        float _1830 = (_1826 * _1134) + _1123;
        float _1831 = (_1826 * _1137) + _1127;
        float _1832 = (_1826 * _1140) + _1131;
        float _1833 = _1826 * 9.9999997473787516355514526367188e-05;
        float _1834 = (-1.0) - _1833;
        float _1836 = _1833 + 1.0;
        float frontier_phi_46_77_ladder;
        float frontier_phi_46_77_ladder_1;
        float frontier_phi_46_77_ladder_2;
        if ((_1832 > _1836) || ((_1832 < _1834) || ((_1831 > _1836) || ((_1831 < _1834) || ((_1830 < _1834) || (_1830 > _1836))))))
        {
            frontier_phi_46_77_ladder = 0.0;
            frontier_phi_46_77_ladder_1 = 0.0;
            frontier_phi_46_77_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1992 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1832, cbModelParam._m0[17u].z, fma(_1831, cbModelParam._m0[17u].y, _1830 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1832, cbModelParam._m0[18u].z, fma(_1831, cbModelParam._m0[18u].y, _1830 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1832, cbModelParam._m0[19u].z, fma(_1831, cbModelParam._m0[19u].y, _1830 * cbModelParam._m0[19u].x))), _1071);
            frontier_phi_46_77_ladder = _1992.z * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_1 = _1992.x * cbModelParam._m0[1u].z;
            frontier_phi_46_77_ladder_2 = _1992.y * cbModelParam._m0[1u].z;
        }
        _1159 = frontier_phi_46_77_ladder_1;
        _1161 = frontier_phi_46_77_ladder_2;
        _1163 = frontier_phi_46_77_ladder;
    }
    else
    {
        vec4 _1143 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_585, _586, _587), _1071);
        _1159 = _1143.x * cbModelParam._m0[1u].z;
        _1161 = _1143.y * cbModelParam._m0[1u].z;
        _1163 = _1143.z * cbModelParam._m0[1u].z;
    }
    float _1175 = _584 * 0.01200000010430812835693359375;
    float _1177 = _1175 * ((cbModelParam._m0[1u].w * (_1159 - _1064)) + _1064);
    float _1178 = _1175 * ((cbModelParam._m0[1u].w * (_1161 - _1066)) + _1066);
    float _1179 = _1175 * ((cbModelParam._m0[1u].w * (_1163 - _1068)) + _1068);
    float _1200 = fma(_1179, cbSceneParam._m0[89u].z, fma(_1178, cbSceneParam._m0[89u].y, _1177 * cbSceneParam._m0[89u].x));
    float _1203 = fma(_1179, cbSceneParam._m0[90u].z, fma(_1178, cbSceneParam._m0[90u].y, _1177 * cbSceneParam._m0[90u].x));
    float _1206 = fma(_1179, cbSceneParam._m0[91u].z, fma(_1178, cbSceneParam._m0[91u].y, _1177 * cbSceneParam._m0[91u].x));
    uint _1213 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1218 = floatBitsToUint(cbInstanceData._m0[_1213 + 5u]);
    uint _1220 = _1218.x * 14u;
    uint _1221 = _1220 + 13u;
    float _1226 = _584 + (-1.0);
    float _1229 = (cbLight._m0[_1221].x * _1226) + 1.0;
    float _1230 = (cbLight._m0[_1221].y * _1226) + 1.0;
    uint _1231 = _1220 + 8u;
    float _1242 = cbLight._m0[_1220].x + _563;
    float _1243 = cbLight._m0[_1220].y + _564;
    float _1244 = cbLight._m0[_1220].z + _565;
    float _1248 = inversesqrt(dot(vec3(_1242, _1243, _1244), vec3(_1242, _1243, _1244)));
    float _1252 = dot(vec3(0.0), vec3(cbLight._m0[_1220].xyz));
    float _2510 = isnan(0.0) ? _1252 : (isnan(_1252) ? 0.0 : max(_1252, 0.0));
    float _1255 = isnan(1.0) ? _2510 : (isnan(_2510) ? 1.0 : min(_2510, 1.0));
    float _1256 = dot(vec3(0.0), vec3(_563, _564, _565));
    float _2521 = isnan(0.0) ? _1256 : (isnan(_1256) ? 0.0 : max(_1256, 0.0));
    float _1259 = isnan(1.0) ? _2521 : (isnan(_2521) ? 1.0 : min(_2521, 1.0));
    float _1260 = dot(vec3(cbLight._m0[_1220].xyz), vec3(_1242 * _1248, _1243 * _1248, _1244 * _1248));
    float _2532 = isnan(0.0) ? _1260 : (isnan(_1260) ? 0.0 : max(_1260, 0.0));
    float _1271 = (exp2(log2(1.0 - (isnan(1.0) ? _2532 : (isnan(_2532) ? 1.0 : min(_2532, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1277 = (0.5 / ((_1255 + 9.9999999392252902907785028219223e-09) + _1259)) * _1255;
    float _2543 = isnan(0.0) ? _1277 : (isnan(_1277) ? 0.0 : max(_1277, 0.0));
    float _1279 = (isnan(1.0) ? _2543 : (isnan(_2543) ? 1.0 : min(_2543, 1.0))) * 0.31831014156341552734375;
    float _1281 = isnan(1.0) ? _1229 : (isnan(_1229) ? 1.0 : min(_1229, 1.0));
    uint _1291 = _1220 + 9u;
    uint _1297 = _1220 | 1u;
    float _1303 = cbLight._m0[_1297].x + _563;
    float _1304 = cbLight._m0[_1297].y + _564;
    float _1305 = cbLight._m0[_1297].z + _565;
    float _1309 = inversesqrt(dot(vec3(_1303, _1304, _1305), vec3(_1303, _1304, _1305)));
    float _1313 = dot(vec3(0.0), vec3(cbLight._m0[_1297].xyz));
    float _2559 = isnan(0.0) ? _1313 : (isnan(_1313) ? 0.0 : max(_1313, 0.0));
    float _1316 = isnan(1.0) ? _2559 : (isnan(_2559) ? 1.0 : min(_2559, 1.0));
    float _1317 = dot(vec3(cbLight._m0[_1297].xyz), vec3(_1303 * _1309, _1304 * _1309, _1305 * _1309));
    float _2570 = isnan(0.0) ? _1317 : (isnan(_1317) ? 0.0 : max(_1317, 0.0));
    float _1326 = (exp2(log2(1.0 - (isnan(1.0) ? _2570 : (isnan(_2570) ? 1.0 : min(_2570, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1330 = (0.5 / ((_1316 + 9.9999999392252902907785028219223e-09) + _1259)) * _1316;
    float _2581 = isnan(0.0) ? _1330 : (isnan(_1330) ? 0.0 : max(_1330, 0.0));
    float _1332 = (isnan(1.0) ? _2581 : (isnan(_2581) ? 1.0 : min(_2581, 1.0))) * 0.31831014156341552734375;
    float _1333 = isnan(1.0) ? _1230 : (isnan(_1230) ? 1.0 : min(_1230, 1.0));
    float _1343 = (((_1326 * cbLight._m0[_1291].x) * _1332) * _1333) + (((_1271 * cbLight._m0[_1231].x) * _1279) * _1281);
    float _1344 = (((_1326 * cbLight._m0[_1291].y) * _1332) * _1333) + (((_1271 * cbLight._m0[_1231].y) * _1279) * _1281);
    float _1345 = (((_1326 * cbLight._m0[_1291].z) * _1332) * _1333) + (((_1271 * cbLight._m0[_1231].z) * _1279) * _1281);
    float _1461;
    float _1463;
    float _1465;
    if (_1218.y == 0u)
    {
        float _1401 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1402 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1401;
        float _1403 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1401;
        float _1404 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1401;
        uvec4 _1416 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1417 = _1416.x;
        uint _1428 = uint((float(_1416.y) * floor(float(uint(cbSceneParam._m0[85u].y * _572) / _1417))) + floor(float(uint(cbSceneParam._m0[85u].x * _571) / _1417)));
        float _1438 = (log2(_1404 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1439 = isnan(0.0) ? _1438 : (isnan(_1438) ? 0.0 : max(_1438, 0.0));
        uint _1442 = uint(isnan(14.0) ? _1439 : (isnan(_1439) ? 14.0 : min(_1439, 14.0)));
        uvec4 _1447 = texelFetch(g_lightClusterGridBuffer, int(((_1442 << 2u) + (_1428 << 6u)) >> 2u));
        uint _1448 = _1447.x;
        uint _1449 = _1416.z;
        float _1538;
        float _1540;
        float _1542;
        if (((((1u << ((_1449 >> 4u) & 15u)) + 4294967295u) & _1448) == 0u) || ((_1449 & 240u) == 0u))
        {
            _1538 = 0.0;
            _1540 = 0.0;
            _1542 = 0.0;
        }
        else
        {
            float _1539;
            float _1541;
            float _1543;
            float _1697 = 0.0;
            float _1698 = 0.0;
            float _1699 = 0.0;
            uint _1700 = 0u;
            uint _1709;
            bool _1710;
            for (;;)
            {
                _1709 = texelFetch(g_lightClassification, int((((_1442 << 5u) + (_1428 << 9u)) + (_1700 << 2u)) >> 2u)).x;
                _1710 = _1709 == 0u;
                float frontier_phi_74_pred;
                float frontier_phi_74_pred_1;
                float frontier_phi_74_pred_2;
                if (_1710)
                {
                    frontier_phi_74_pred = _1699;
                    frontier_phi_74_pred_1 = _1698;
                    frontier_phi_74_pred_2 = _1697;
                }
                else
                {
                    float _1863;
                    float _1864;
                    float _1865;
                    uint _1866;
                    _1863 = _1697;
                    _1864 = _1698;
                    _1865 = _1699;
                    _1866 = _1709;
                    float _1775;
                    float _1776;
                    float _1777;
                    for (;;)
                    {
                        uint _1870 = uint(findLSB(_1866)) + (_1700 << 5u);
                        uint _1867 = (_1866 + 4294967295u) & _1866;
                        uint _1872 = _1870 * 48u;
                        vec4 _1886 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_1872)).x, texelFetch(g_PointLightRenderingBuffer, int(_1872 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1872 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1872 + 3u)).x));
                        uint _1903 = (_1870 * 48u) + 8u;
                        vec3 _1914 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_1903)).x, texelFetch(g_PointLightRenderingBuffer, int(_1903 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1903 + 2u)).x));
                        float _1918 = _1886.x - _1402;
                        float _1919 = _1886.y - _1403;
                        float _1920 = _1886.z - _1404;
                        float _1921 = dot(vec3(_1918, _1919, _1920), vec3(_1918, _1919, _1920));
                        float _1924 = inversesqrt(_1921);
                        float _1933 = 1.0 - (_1921 * _1886.w);
                        float _2607 = isnan(0.0) ? _1933 : (isnan(_1933) ? 0.0 : max(_1933, 0.0));
                        float _1935 = sqrt(_1921) * uintBitsToFloat(uvec4(_1893, _1894, _1895, texelFetch(g_PointLightRenderingBuffer, int(((_1870 * 48u) + 4u) + 3u)).x)).w;
                        float _1938 = 1.39999997615814208984375 / (_1935 + 1.39999997615814208984375);
                        float _1939 = _1938 * _1938;
                        float _1942 = ((1.0 - _1939) * dot(vec3(0.0), vec3(_1924 * _1918, _1924 * _1919, _1924 * _1920))) + _1939;
                        float _1944 = (-0.0) - _1402;
                        float _1945 = (-0.0) - _1403;
                        float _1946 = (-0.0) - _1404;
                        float _1950 = inversesqrt(dot(vec3(_1944, _1945, _1946), vec3(_1944, _1945, _1946)));
                        float _1954 = dot(vec3(0.0), vec3(_1950 * _1944, _1950 * _1945, _1950 * _1946));
                        float _2618 = isnan(0.0) ? _1954 : (isnan(_1954) ? 0.0 : max(_1954, 0.0));
                        float _2629 = isnan(0.0) ? _1942 : (isnan(_1942) ? 0.0 : max(_1942, 0.0));
                        float _1958 = isnan(1.0) ? _2629 : (isnan(_2629) ? 1.0 : min(_2629, 1.0));
                        float _1962 = (0.5 / (((isnan(1.0) ? _2618 : (isnan(_2618) ? 1.0 : min(_2618, 1.0))) + 9.9999999392252902907785028219223e-09) + _1958)) * _1958;
                        float _2640 = isnan(0.0) ? _1962 : (isnan(_1962) ? 0.0 : max(_1962, 0.0));
                        float _1971 = (((isnan(1.0) ? _2640 : (isnan(_2640) ? 1.0 : min(_2640, 1.0))) * 3.1415927410125732421875) / (((_1935 * _1935) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2607 : (isnan(_2607) ? 1.0 : min(_2607, 1.0)));
                        _1775 = (_1971 * _1914.x) + _1863;
                        _1776 = (_1971 * _1914.y) + _1864;
                        _1777 = (_1971 * _1914.z) + _1865;
                        if (_1867 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _1863 = _1775;
                            _1864 = _1776;
                            _1865 = _1777;
                            _1866 = _1867;
                        }
                    }
                    frontier_phi_74_pred = _1777;
                    frontier_phi_74_pred_1 = _1776;
                    frontier_phi_74_pred_2 = _1775;
                }
                _1543 = frontier_phi_74_pred;
                _1541 = frontier_phi_74_pred_1;
                _1539 = frontier_phi_74_pred_2;
                uint _1701 = _1700 + 1u;
                if (_1701 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1697 = _1539;
                    _1698 = _1541;
                    _1699 = _1543;
                    _1700 = _1701;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1538 = _1539;
            _1540 = _1541;
            _1542 = _1543;
        }
        uvec4 _1546 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1547 = _1546.z;
        uint _1549 = (_1547 >> 8u) & 15u;
        float _1677;
        float _1679;
        float _1681;
        if (((4294967295u << _1549) & _1448) == 0u)
        {
            _1677 = _1538;
            _1679 = _1540;
            _1681 = _1542;
        }
        else
        {
            float _1693 = inversesqrt(dot(vec3(_1402, _1403, _1404), vec3(_1402, _1403, _1404)));
            float frontier_phi_65_66_ladder;
            float frontier_phi_65_66_ladder_1;
            float frontier_phi_65_66_ladder_2;
            if (_1549 < ((_1547 >> 12u) & 15u))
            {
                float _1678;
                float _1680;
                float _1682;
                float _1849 = _1538;
                float _1850 = _1540;
                float _1851 = _1542;
                uint _1852 = _1549;
                uint _1861;
                bool _1862;
                for (;;)
                {
                    _1861 = texelFetch(g_lightClassification, int((((_1442 << 5u) + (_1428 << 9u)) + (_1852 << 2u)) >> 2u)).x;
                    _1862 = _1861 == 0u;
                    float frontier_phi_83_pred;
                    float frontier_phi_83_pred_1;
                    float frontier_phi_83_pred_2;
                    if (_1862)
                    {
                        frontier_phi_83_pred = _1851;
                        frontier_phi_83_pred_1 = _1850;
                        frontier_phi_83_pred_2 = _1849;
                    }
                    else
                    {
                        float _1997;
                        float _1998;
                        float _1999;
                        float _2218;
                        float _2219;
                        float _2220;
                        float _2007 = _1849;
                        float _2008 = _1850;
                        float _2009 = _1851;
                        uint _2010 = _1861;
                        uint _2011;
                        uint _2021;
                        vec4 _2036;
                        float _2037;
                        vec3 _2049;
                        vec4 _2064;
                        vec4 _2079;
                        float _2125;
                        bool _2126;
                        for (;;)
                        {
                            _2021 = ((_1852 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_2010));
                            _2011 = (_2010 + 4294967295u) & _2010;
                            uint _2023 = _2021 * 40u;
                            _2036 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2023)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2023 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2023 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2023 + 3u)).x));
                            _2037 = _2036.w;
                            uint _2039 = (_2021 * 40u) + 8u;
                            _2049 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_2039)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2039 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2039 + 2u)).x));
                            uint _2051 = (_2021 * 40u) + 16u;
                            _2064 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2051)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2051 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2051 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2051 + 3u)).x));
                            uint _2066 = (_2021 * 40u) + 20u;
                            _2079 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2066)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2066 + 3u)).x));
                            uint _2081 = (_2021 * 40u) + 24u;
                            vec4 _2094 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2081)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2081 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2081 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2081 + 3u)).x));
                            uint _2100 = (_2021 * 40u) + 28u;
                            vec4 _2113 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2100)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2100 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2100 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2100 + 3u)).x));
                            _2125 = fma(_1404, _2113.z, fma(_1403, _2113.y, _2113.x * _1402)) + _2113.w;
                            _2126 = !((fma(_1404, _2094.z, fma(_1403, _2094.y, _2094.x * _1402)) + _2094.w) <= 0.0);
                            float frontier_phi_89_pred;
                            float frontier_phi_89_pred_1;
                            float frontier_phi_89_pred_2;
                            if (_2126)
                            {
                                float _2160 = _2036.x - _1402;
                                float _2161 = _2036.y - _1403;
                                float _2162 = _2036.z - _1404;
                                float _2163 = dot(vec3(_2160, _2161, _2162), vec3(_2160, _2161, _2162));
                                float _2166 = inversesqrt(_2163);
                                float _2173 = 1.0 - (_2163 / (_2037 * _2037));
                                float _2651 = isnan(0.0) ? _2173 : (isnan(_2173) ? 0.0 : max(_2173, 0.0));
                                float _2175 = sqrt(_2163) * uintBitsToFloat(uvec4(_2129, _2130, _2131, texelFetch(g_SpotLightRenderingBuffer, int(((_2021 * 40u) + 4u) + 3u)).x)).w;
                                float _2177 = 1.39999997615814208984375 / (_2175 + 1.39999997615814208984375);
                                float _2178 = _2177 * _2177;
                                float _2181 = (fma(_1404, _2064.z, fma(_1403, _2064.y, _2064.x * _1402)) + _2064.w) / _2125;
                                float _2182 = (fma(_1404, _2079.z, fma(_1403, _2079.y, _2079.x * _1402)) + _2079.w) / _2125;
                                float _2186 = 1.0 - dot(vec2(_2181, _2182), vec2(_2181, _2182));
                                float _2662 = isnan(0.0) ? _2186 : (isnan(_2186) ? 0.0 : max(_2186, 0.0));
                                float _2194 = dot(vec3(0.0), vec3((-0.0) - (_1402 * _1693), (-0.0) - (_1403 * _1693), (-0.0) - (_1404 * _1693)));
                                float _2673 = isnan(0.0) ? _2194 : (isnan(_2194) ? 0.0 : max(_2194, 0.0));
                                float _2202 = ((1.0 - _2178) * dot(vec3(0.0), vec3(_2166 * _2160, _2166 * _2161, _2166 * _2162))) + _2178;
                                float _2684 = isnan(0.0) ? _2202 : (isnan(_2202) ? 0.0 : max(_2202, 0.0));
                                float _2203 = isnan(1.0) ? _2684 : (isnan(_2684) ? 1.0 : min(_2684, 1.0));
                                float _2207 = (0.5 / (((isnan(1.0) ? _2673 : (isnan(_2673) ? 1.0 : min(_2673, 1.0))) + 9.9999999392252902907785028219223e-09) + _2203)) * _2203;
                                float _2695 = isnan(0.0) ? _2207 : (isnan(_2207) ? 0.0 : max(_2207, 0.0));
                                float _2214 = ((isnan(1.0) ? _2662 : (isnan(_2662) ? 1.0 : min(_2662, 1.0))) * (isnan(1.0) ? _2651 : (isnan(_2651) ? 1.0 : min(_2651, 1.0)))) * (((isnan(1.0) ? _2695 : (isnan(_2695) ? 1.0 : min(_2695, 1.0))) * 3.1415927410125732421875) / (((_2175 * _2175) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_89_pred = _2214 * _2049.x;
                                frontier_phi_89_pred_1 = _2214 * _2049.z;
                                frontier_phi_89_pred_2 = _2214 * _2049.y;
                            }
                            else
                            {
                                frontier_phi_89_pred = 0.0;
                                frontier_phi_89_pred_1 = 0.0;
                                frontier_phi_89_pred_2 = 0.0;
                            }
                            _2218 = frontier_phi_89_pred;
                            _2220 = frontier_phi_89_pred_1;
                            _2219 = frontier_phi_89_pred_2;
                            _1997 = _2218 + _2007;
                            _1998 = _2219 + _2008;
                            _1999 = _2220 + _2009;
                            if (_2011 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _2007 = _1997;
                                _2008 = _1998;
                                _2009 = _1999;
                                _2010 = _2011;
                                continue;
                            }
                        }
                        frontier_phi_83_pred = _1999;
                        frontier_phi_83_pred_1 = _1998;
                        frontier_phi_83_pred_2 = _1997;
                    }
                    _1682 = frontier_phi_83_pred;
                    _1680 = frontier_phi_83_pred_1;
                    _1678 = frontier_phi_83_pred_2;
                    uint _1853 = _1852 + 1u;
                    if (_1853 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _1849 = _1678;
                        _1850 = _1680;
                        _1851 = _1682;
                        _1852 = _1853;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_65_66_ladder = _1680;
                frontier_phi_65_66_ladder_1 = _1678;
                frontier_phi_65_66_ladder_2 = _1682;
            }
            else
            {
                frontier_phi_65_66_ladder = _1540;
                frontier_phi_65_66_ladder_1 = _1538;
                frontier_phi_65_66_ladder_2 = _1542;
            }
            _1677 = frontier_phi_65_66_ladder_1;
            _1679 = frontier_phi_65_66_ladder;
            _1681 = frontier_phi_65_66_ladder_2;
        }
        float _1686 = isnan(1.0) ? _584 : (isnan(_584) ? 1.0 : min(_584, 1.0));
        _1461 = ((_1677 * 0.039999999105930328369140625) * _1686) + _1343;
        _1463 = ((_1679 * 0.039999999105930328369140625) * _1686) + _1344;
        _1465 = ((_1681 * 0.039999999105930328369140625) * _1686) + _1345;
    }
    else
    {
        _1461 = _1343;
        _1463 = _1344;
        _1465 = _1345;
    }
    uint _1472 = (_1213 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1487 = (cbInstanceData._m0[_1472].x * ((_533 * ((_482.x * cbMtdParam._m0[10u].x) - _412)) + _412)) + ((_1461 + ((isnan(0.0) ? _1200 : (isnan(_1200) ? 0.0 : max(_1200, 0.0))) * _975)) * cbPerFrame._m0[3u].x);
    float _1488 = (cbInstanceData._m0[_1472].y * ((_533 * ((_482.y * cbMtdParam._m0[10u].y) - _413)) + _413)) + ((_1463 + ((isnan(0.0) ? _1203 : (isnan(_1203) ? 0.0 : max(_1203, 0.0))) * _975)) * cbPerFrame._m0[3u].x);
    float _1489 = (cbInstanceData._m0[_1472].z * ((_533 * ((_482.z * cbMtdParam._m0[10u].z) - _414)) + _414)) + ((_1465 + ((isnan(0.0) ? _1206 : (isnan(_1206) ? 0.0 : max(_1206, 0.0))) * _975)) * cbPerFrame._m0[3u].x);
    uint _1493 = _1213 + 6u;
    float _1501 = _571 / cbSceneParam._m0[86u].x;
    float _1502 = _572 / cbSceneParam._m0[86u].y;
    vec4 _1516 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1501, _1502, (log2((isnan(cbSceneParam._m0[77u].w) ? _558 : (isnan(_558) ? cbSceneParam._m0[77u].w : min(_558, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1518 = _1516.x;
    float _1519 = _1516.y;
    float _1520 = _1516.z;
    float _1521 = _1516.w;
    float _1595;
    float _1597;
    float _1599;
    float _1601;
    if (_558 > cbSceneParam._m0[78u].w)
    {
        float _1557 = isnan(_558) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _558 : min(cbSceneParam._m0[80u].w, _558));
        float _1558 = _1557 / _558;
        float _1569 = _1558 * _257;
        float _1570 = _258 * _1558;
        float _1571 = (-0.0) - _1570;
        float _1572 = _1558 * _259;
        float _1574 = (cbSceneParam._m0[77u].w * _1571) / _1557;
        float _1575 = _1574 + cbSceneParam._m0[79u].w;
        float _1576 = cbSceneParam._m0[79u].w - _1570;
        float _1582 = sqrt(((_1569 * _1569) + (_1570 * _1570)) + (_1572 * _1572));
        float _1585 = (1.0 - (cbSceneParam._m0[77u].w / _1557)) * _1582;
        float _1591 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1593 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1785;
        if (abs((_1571 - _1574) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1785 = ((((_1575 > 0.0) ? exp2(_1591 * _1575) : (2.0 - exp2(_1593 * _1575))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1585;
        }
        else
        {
            float _1723 = 1.0 / cbSceneParam._m0[80u].x;
            float _1724 = isnan(_1576) ? _1575 : (isnan(_1575) ? _1576 : max(_1575, _1576));
            float _1725 = isnan(_1576) ? _1575 : (isnan(_1575) ? _1576 : min(_1575, _1576));
            float _1734 = isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : min(_1724, 0.0));
            float _1735 = isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : min(_1725, 0.0));
            _1785 = ((abs(_1582 / _1571) * cbSceneParam._m0[80u].y) * ((((_1734 - _1735) * 2.0) - ((exp2(_1591 * (isnan(0.0) ? _1724 : (isnan(_1724) ? 0.0 : max(_1724, 0.0)))) - exp2(_1591 * (isnan(0.0) ? _1725 : (isnan(_1725) ? 0.0 : max(_1725, 0.0))))) * _1723)) - ((exp2(_1593 * _1734) - exp2(_1593 * _1735)) * _1723))) + (_1585 * cbSceneParam._m0[80u].z);
        }
        vec4 _1787 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1501, _1502, 1.0), 0.0);
        float _1796 = exp2((_1785 * (-1.44269502162933349609375)) * (1.0 - _1787.w));
        float _1797 = log2(_1796);
        float _1813 = log2(_1521);
        _1595 = (exp2(_1813 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1797 * cbSceneParam._m0[78u].x)) * _1787.x) / cbSceneParam._m0[78u].x)) + _1518;
        _1597 = (exp2(_1813 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1797 * cbSceneParam._m0[78u].y)) * _1787.y) / cbSceneParam._m0[78u].y)) + _1519;
        _1599 = (exp2(_1813 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1797 * cbSceneParam._m0[78u].z)) * _1787.z) / cbSceneParam._m0[78u].z)) + _1520;
        _1601 = _1796 * _1521;
    }
    else
    {
        _1595 = _1518;
        _1597 = _1519;
        _1599 = _1520;
        _1601 = _1521;
    }
    float _1613 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1614 = _1613 == 3.0;
    float _1616 = log2(_1601);
    float _1623 = exp2(_1616 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1487 : (isnan(_1487) ? 0.0 : max(_1487, 0.0)));
    float _1624 = exp2(_1616 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1488 : (isnan(_1488) ? 0.0 : max(_1488, 0.0)));
    float _1625 = exp2(_1616 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1489 : (isnan(_1489) ? 0.0 : max(_1489, 0.0)));
    float _1634 = (_1613 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1634 * (_1614 ? _1623 : (_1623 + (cbSceneParam._m0[72u].w * _1595)));
    SV_Target.y = _1634 * (_1614 ? _1624 : (_1624 + (cbSceneParam._m0[72u].w * _1597)));
    SV_Target.z = _1634 * (_1614 ? _1625 : (_1625 + (cbSceneParam._m0[72u].w * _1599)));
    SV_Target.w = cbInstanceData._m0[_1493].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1493].w;
}


