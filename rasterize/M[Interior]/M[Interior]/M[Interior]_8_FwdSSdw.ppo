#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[24];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 32) uniform texture2D g_ShadowTexture;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 4) uniform texture2D M_Interior_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Interior_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _380;
uint _1821;
uint _1822;
uint _1823;
uint _2057;
uint _2058;
uint _2059;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _176 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _177 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _178 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _183 = inversesqrt(dot(vec3(_176, _177, _178), vec3(_176, _177, _178)));
    float _184 = _183 * _176;
    float _185 = _183 * _177;
    float _186 = _183 * _178;
    float _190 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _194 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _195 = _194 * TANGENT.x;
    float _196 = _194 * TANGENT.y;
    float _197 = _194 * TANGENT.z;
    float _242 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _252 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _242);
    float _253 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _242);
    float _254 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _242);
    vec4 _289 = texture(sampler2D(M_Interior_snp_0_Texture2D_4, SS_BumpMap), vec2((cbTextureTilingScale._m0[4u].x * TEXCOORD.x) + cbTextureTilingScale._m0[4u].z, (cbTextureTilingScale._m0[4u].y * TEXCOORD.y) + cbTextureTilingScale._m0[4u].w));
    float _305 = inversesqrt(dot(vec3(_184, _185, _186), vec3(_184, _185, _186)));
    float _312 = inversesqrt(dot(vec3(_195, _196, _197), vec3(_195, _196, _197)));
    float _324 = cbMtdParam._m0[22u].z + _252;
    float _325 = cbMtdParam._m0[22u].w + _253;
    float _326 = cbMtdParam._m0[23u].x + _254;
    float _343 = (-0.0) - dot(vec3(_324, _325, _326), vec3(_305 * _184, _305 * _185, _305 * _186));
    float _344 = (-0.0) - dot(vec3(_324, _325, _326), vec3(_312 * _195, _312 * _196, _312 * _197));
    float _345 = (-0.0) - dot(vec3(_324, _325, _326), vec3((-0.0) - (NORMAL.x * _190), (-0.0) - (NORMAL.y * _190), (-0.0) - (NORMAL.z * _190)));
    float _349 = inversesqrt(dot(vec3(_343, _344, _345), vec3(_343, _344, _345)));
    float _350 = _349 * _345;
    float _355 = ((cbMtdParam._m0[19u].y * _343) * _349) + (((_289.x * 2.0) + (-1.0)) * cbMtdParam._m0[19u].w);
    float _356 = ((cbMtdParam._m0[19u].z * _344) * _349) + (((_289.y * 2.0) + (-1.0)) * cbMtdParam._m0[20u].x);
    float _359 = fract(cbMtdParam._m0[19u].y * TEXCOORD.x);
    float _360 = fract(cbMtdParam._m0[19u].z * TEXCOORD.y);
    float _378;
    float _381;
    float _383;
    if (_355 > 0.0)
    {
        float _364 = (1.0 - _359) / _355;
        _378 = _364;
        _381 = ((cbMtdParam._m0[16u].z + 1.0) - fract(_364 * _350)) * 0.16666667163372039794921875;
        _383 = (fract((_364 * _356) + _360) * 0.16666667163372039794921875) + 0.5;
    }
    else
    {
        float frontier_phi_3_2_ladder;
        float frontier_phi_3_2_ladder_1;
        float frontier_phi_3_2_ladder_2;
        if (_355 < 0.0)
        {
            float _379 = ((-0.0) - _359) / _355;
            frontier_phi_3_2_ladder = (fract(_379 * _350) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            frontier_phi_3_2_ladder_1 = _379;
            frontier_phi_3_2_ladder_2 = (fract((_379 * _356) + _360) * 0.16666667163372039794921875) + 0.666666686534881591796875;
        }
        else
        {
            frontier_phi_3_2_ladder = 0.0;
            frontier_phi_3_2_ladder_1 = _380;
            frontier_phi_3_2_ladder_2 = 0.0;
        }
        _378 = frontier_phi_3_2_ladder_1;
        _381 = frontier_phi_3_2_ladder;
        _383 = frontier_phi_3_2_ladder_2;
    }
    float _409;
    float _411;
    float _413;
    if (_356 > 0.0)
    {
        float _396 = (1.0 - _360) / _356;
        float frontier_phi_8_5_ladder;
        float frontier_phi_8_5_ladder_1;
        float frontier_phi_8_5_ladder_2;
        if (_396 < _378)
        {
            frontier_phi_8_5_ladder = _396;
            frontier_phi_8_5_ladder_1 = (fract(_396 * _350) * 0.16666667163372039794921875) + 0.3333333432674407958984375;
            frontier_phi_8_5_ladder_2 = (fract((_396 * _355) + _359) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
        }
        else
        {
            frontier_phi_8_5_ladder = _378;
            frontier_phi_8_5_ladder_1 = _383;
            frontier_phi_8_5_ladder_2 = _381;
        }
        _409 = frontier_phi_8_5_ladder;
        _411 = frontier_phi_8_5_ladder_2;
        _413 = frontier_phi_8_5_ladder_1;
    }
    else
    {
        float frontier_phi_8_6_ladder;
        float frontier_phi_8_6_ladder_1;
        float frontier_phi_8_6_ladder_2;
        if (_356 < 0.0)
        {
            float _410 = ((-0.0) - _360) / _356;
            float frontier_phi_8_6_ladder_9_ladder;
            float frontier_phi_8_6_ladder_9_ladder_1;
            float frontier_phi_8_6_ladder_9_ladder_2;
            if (_410 < _378)
            {
                frontier_phi_8_6_ladder_9_ladder = _410;
                frontier_phi_8_6_ladder_9_ladder_1 = fract(_410 * _350) * 0.16666667163372039794921875;
                frontier_phi_8_6_ladder_9_ladder_2 = (fract((_410 * _355) + _359) + cbMtdParam._m0[16u].z) * 0.16666667163372039794921875;
            }
            else
            {
                frontier_phi_8_6_ladder_9_ladder = _378;
                frontier_phi_8_6_ladder_9_ladder_1 = _383;
                frontier_phi_8_6_ladder_9_ladder_2 = _381;
            }
            frontier_phi_8_6_ladder = frontier_phi_8_6_ladder_9_ladder;
            frontier_phi_8_6_ladder_1 = frontier_phi_8_6_ladder_9_ladder_1;
            frontier_phi_8_6_ladder_2 = frontier_phi_8_6_ladder_9_ladder_2;
        }
        else
        {
            frontier_phi_8_6_ladder = _378;
            frontier_phi_8_6_ladder_1 = _383;
            frontier_phi_8_6_ladder_2 = _381;
        }
        _409 = frontier_phi_8_6_ladder;
        _411 = frontier_phi_8_6_ladder_2;
        _413 = frontier_phi_8_6_ladder_1;
    }
    float _417 = (_350 > 0.0) ? (cbMtdParam._m0[16u].y / _350) : 5000.0;
    float _430;
    float _431;
    if (_417 < _409)
    {
        _430 = ((_359 + cbMtdParam._m0[16u].z) + (_417 * _355)) * 0.16666667163372039794921875;
        _431 = (((_417 * _356) + _360) * 0.16666667163372039794921875) + 0.16666667163372039794921875;
    }
    else
    {
        _430 = _411;
        _431 = _413;
    }
    vec4 _433 = texture(sampler2D(M_Interior_snp_0_Texture2D_5, SS_DiffuseMap), vec2(_430, _431));
    float _456 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _460 = inversesqrt(dot(vec3(_252, _253, _254), vec3(_252, _253, _254)));
    float _461 = _252 * _460;
    float _462 = _253 * _460;
    float _463 = _254 * _460;
    float _469 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _470 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _479 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(_469 * cbSceneParam._m0[86u].x, _470 * cbSceneParam._m0[86u].y));
    float _482 = _479.x * TEXCOORD.z;
    float _483 = (-0.0) - _461;
    float _484 = (-0.0) - _462;
    float _485 = (-0.0) - _463;
    float _507 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _511 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _515 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _654;
    float _655;
    float _656;
    float _657;
    float _658;
    float _659;
    float _660;
    float _661;
    float _662;
    float _663;
    float _664;
    float _665;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _577 = (cbModelParam._m0[37u].x * ((((fma(_515, cbModelParam._m0[26u].z, fma(_511, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _507)) + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _579 = (cbModelParam._m0[37u].y * ((((fma(_515, cbModelParam._m0[27u].z, fma(_511, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _507)) + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _580 = (((((fma(_515, cbModelParam._m0[28u].z, fma(_511, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _507)) + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _583 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_577, _579, _580), 0.0);
        vec4 _590 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_577, _579, _580), 0.0);
        vec4 _597 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_577, _579, _580), 0.0);
        vec4 _604 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_577, _579, _580), 0.0);
        float _617 = exp2((_583.w + (-0.5)) * 20.0) * 2.0;
        float _627 = exp2((_590.w + (-0.5)) * 20.0) * 2.0;
        float _637 = exp2((_597.w + (-0.5)) * 20.0) * 2.0;
        float _647 = exp2((_604.w + (-0.5)) * 20.0) * 2.0;
        float _648 = _647 * (_604.x + (-0.5));
        float _649 = _647 * (_604.y + (-0.5));
        float _650 = _647 * (_604.z + (-0.5));
        _654 = _617 * (_583.z + (-0.5));
        _655 = _617 * (_583.y + (-0.5));
        _656 = _617 * (_583.x + (-0.5));
        _657 = _627 * (_590.z + (-0.5));
        _658 = _627 * (_590.y + (-0.5));
        _659 = _627 * (_590.x + (-0.5));
        _660 = _637 * (_597.z + (-0.5));
        _661 = _637 * (_597.y + (-0.5));
        _662 = _637 * (_597.x + (-0.5));
        _663 = isnan(0.0) ? _650 : (isnan(_650) ? 0.0 : max(_650, 0.0));
        _664 = isnan(0.0) ? _649 : (isnan(_649) ? 0.0 : max(_649, 0.0));
        _665 = isnan(0.0) ? _648 : (isnan(_648) ? 0.0 : max(_648, 0.0));
    }
    else
    {
        _654 = _380;
        _655 = _380;
        _656 = _380;
        _657 = _380;
        _658 = _380;
        _659 = _380;
        _660 = _380;
        _661 = _380;
        _662 = _380;
        _663 = _380;
        _664 = _380;
        _665 = _380;
    }
    float _793;
    float _794;
    float _795;
    float _796;
    float _797;
    float _798;
    float _799;
    float _800;
    float _801;
    float _802;
    float _803;
    float _804;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _719 = (cbModelParam._m0[38u].x * ((((fma(_515, cbModelParam._m0[30u].z, fma(_511, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _507)) + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _720 = (cbModelParam._m0[38u].y * ((((fma(_515, cbModelParam._m0[31u].z, fma(_511, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _507)) + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + uintBitsToFloat(0x7fc00000u /* nan */);
        float _721 = (((((fma(_515, cbModelParam._m0[32u].z, fma(_511, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _507)) + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + uintBitsToFloat(0x7fc00000u /* nan */);
        vec4 _723 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_719, _720, _721), 0.0);
        vec4 _730 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_719, _720, _721), 0.0);
        vec4 _737 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_719, _720, _721), 0.0);
        vec4 _744 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_719, _720, _721), 0.0);
        float _756 = exp2((_723.w + (-0.5)) * 20.0) * 2.0;
        float _766 = exp2((_730.w + (-0.5)) * 20.0) * 2.0;
        float _776 = exp2((_737.w + (-0.5)) * 20.0) * 2.0;
        float _786 = exp2((_744.w + (-0.5)) * 20.0) * 2.0;
        float _787 = _786 * (_744.x + (-0.5));
        float _788 = _786 * (_744.y + (-0.5));
        float _789 = _786 * (_744.z + (-0.5));
        _793 = _756 * (_723.z + (-0.5));
        _794 = _756 * (_723.y + (-0.5));
        _795 = _756 * (_723.x + (-0.5));
        _796 = _766 * (_730.z + (-0.5));
        _797 = _766 * (_730.y + (-0.5));
        _798 = _766 * (_730.x + (-0.5));
        _799 = _776 * (_737.z + (-0.5));
        _800 = _776 * (_737.y + (-0.5));
        _801 = _776 * (_737.x + (-0.5));
        _802 = isnan(0.0) ? _789 : (isnan(_789) ? 0.0 : max(_789, 0.0));
        _803 = isnan(0.0) ? _788 : (isnan(_788) ? 0.0 : max(_788, 0.0));
        _804 = isnan(0.0) ? _787 : (isnan(_787) ? 0.0 : max(_787, 0.0));
    }
    else
    {
        _793 = _380;
        _794 = _380;
        _795 = _380;
        _796 = _380;
        _797 = _380;
        _798 = _380;
        _799 = _380;
        _800 = _380;
        _801 = _380;
        _802 = _380;
        _803 = _380;
        _804 = _380;
    }
    float _819 = _461 * (-0.5);
    float _820 = _462 * (-0.5);
    float _821 = _463 * (-0.5);
    float _822 = dot(vec4(_819, _820, _821, 1.0), vec4(_795, _798, _801, _804));
    float _825 = dot(vec4(_819, _820, _821, 1.0), vec4(_794, _797, _800, _803));
    float _828 = dot(vec4(_819, _820, _821, 1.0), vec4(_793, _796, _799, _802));
    float _863;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _835 = dot(vec4(_819, _820, _821, 1.0), vec4(_654, _657, _660, _663));
        float _839 = dot(vec4(_819, _820, _821, 1.0), vec4(_655, _658, _661, _664));
        float _843 = dot(vec4(_819, _820, _821, 1.0), vec4(_656, _659, _662, _665));
        float _850 = dot(vec4(cbModelParam._m0[39u]), vec4(_819, _820, _821, 1.0));
        _863 = dot(vec3(isnan(0.0) ? _843 : (isnan(_843) ? 0.0 : max(_843, 0.0)), isnan(0.0) ? _839 : (isnan(_839) ? 0.0 : max(_839, 0.0)), isnan(0.0) ? _835 : (isnan(_835) ? 0.0 : max(_835, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_850) ? 0.0 : (isnan(0.0) ? _850 : max(0.0, _850))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _863 = 1.0;
    }
    float _874;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _865 = dot(vec4(cbModelParam._m0[40u]), vec4(_819, _820, _821, 1.0));
        _874 = dot(vec3(isnan(0.0) ? _822 : (isnan(_822) ? 0.0 : max(_822, 0.0)), isnan(0.0) ? _825 : (isnan(_825) ? 0.0 : max(_825, 0.0)), isnan(0.0) ? _828 : (isnan(_828) ? 0.0 : max(_828, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_865) ? 0.0 : (isnan(0.0) ? _865 : max(0.0, _865))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _874 = 1.0;
    }
    float _878 = (_874 * cbModelParam._m0[1u].x) + (_863 * (1.0 - cbModelParam._m0[1u].x));
    float _884 = isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? cbModelParam._m0[25u].z : min(cbModelParam._m0[25u].z, cbModelParam._m0[25u].z));
    float _967;
    float _969;
    float _971;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _934 = fma(_515, cbModelParam._m0[13u].z, fma(_511, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _507)) + cbModelParam._m0[13u].w;
        float _938 = fma(_515, cbModelParam._m0[14u].z, fma(_511, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _507)) + cbModelParam._m0[14u].w;
        float _942 = fma(_515, cbModelParam._m0[15u].z, fma(_511, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _507)) + cbModelParam._m0[15u].w;
        float _945 = fma(_485, cbModelParam._m0[13u].z, fma(_484, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _483));
        float _948 = fma(_485, cbModelParam._m0[14u].z, fma(_484, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _483));
        float _951 = fma(_485, cbModelParam._m0[15u].z, fma(_484, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _483));
        float _977;
        if (_945 > 0.0)
        {
            _977 = abs((1.0 - _934) / _945);
        }
        else
        {
            float frontier_phi_26_24_ladder;
            if (_945 < 0.0)
            {
                frontier_phi_26_24_ladder = abs((_934 + 1.0) / _945);
            }
            else
            {
                frontier_phi_26_24_ladder = 5000.0;
            }
            _977 = frontier_phi_26_24_ladder;
        }
        float _1278;
        if (_948 > 0.0)
        {
            _1278 = abs((1.0 - _938) / _948);
        }
        else
        {
            float frontier_phi_35_31_ladder;
            if (_948 < 0.0)
            {
                frontier_phi_35_31_ladder = abs((_938 + 1.0) / _948);
            }
            else
            {
                frontier_phi_35_31_ladder = 5000.0;
            }
            _1278 = frontier_phi_35_31_ladder;
        }
        float _1574;
        if (_951 > 0.0)
        {
            _1574 = abs((1.0 - _942) / _951);
        }
        else
        {
            float frontier_phi_49_42_ladder;
            if (_951 < 0.0)
            {
                frontier_phi_49_42_ladder = abs((_942 + 1.0) / _951);
            }
            else
            {
                frontier_phi_49_42_ladder = 5000.0;
            }
            _1574 = frontier_phi_49_42_ladder;
        }
        float _1576 = isnan(_1278) ? _977 : (isnan(_977) ? _1278 : min(_977, _1278));
        float _1577 = isnan(_1574) ? _1576 : (isnan(_1576) ? _1574 : min(_1576, _1574));
        float _1581 = (_1577 * _945) + _934;
        float _1582 = (_1577 * _948) + _938;
        float _1583 = (_1577 * _951) + _942;
        float _1584 = _1577 * 9.9999997473787516355514526367188e-05;
        float _1585 = (-1.0) - _1584;
        float _1587 = _1584 + 1.0;
        float frontier_phi_25_49_ladder;
        float frontier_phi_25_49_ladder_1;
        float frontier_phi_25_49_ladder_2;
        if ((_1583 > _1587) || ((_1583 < _1585) || ((_1582 > _1587) || ((_1582 < _1585) || ((_1581 < _1585) || (_1581 > _1587))))))
        {
            frontier_phi_25_49_ladder = 0.0;
            frontier_phi_25_49_ladder_1 = 0.0;
            frontier_phi_25_49_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1694 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_1583, cbModelParam._m0[9u].z, fma(_1582, cbModelParam._m0[9u].y, _1581 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_1583, cbModelParam._m0[10u].z, fma(_1582, cbModelParam._m0[10u].y, _1581 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_1583, cbModelParam._m0[11u].z, fma(_1582, cbModelParam._m0[11u].y, _1581 * cbModelParam._m0[11u].x))), _884);
            frontier_phi_25_49_ladder = _1694.z * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_1 = _1694.y * cbModelParam._m0[1u].y;
            frontier_phi_25_49_ladder_2 = _1694.x * cbModelParam._m0[1u].y;
        }
        _967 = frontier_phi_25_49_ladder_2;
        _969 = frontier_phi_25_49_ladder_1;
        _971 = frontier_phi_25_49_ladder;
    }
    else
    {
        vec4 _955 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_483, _484, _485), _884);
        _967 = _955.x * cbModelParam._m0[1u].y;
        _969 = _955.y * cbModelParam._m0[1u].y;
        _971 = _955.z * cbModelParam._m0[1u].y;
    }
    float _974 = isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? cbModelParam._m0[25u].w : min(cbModelParam._m0[25u].w, cbModelParam._m0[25u].w));
    float _1064;
    float _1066;
    float _1068;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1028 = fma(_515, cbModelParam._m0[21u].z, fma(_511, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _507)) + cbModelParam._m0[21u].w;
        float _1032 = fma(_515, cbModelParam._m0[22u].z, fma(_511, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _507)) + cbModelParam._m0[22u].w;
        float _1036 = fma(_515, cbModelParam._m0[23u].z, fma(_511, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _507)) + cbModelParam._m0[23u].w;
        float _1039 = fma(_485, cbModelParam._m0[21u].z, fma(_484, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _483));
        float _1042 = fma(_485, cbModelParam._m0[22u].z, fma(_484, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _483));
        float _1045 = fma(_485, cbModelParam._m0[23u].z, fma(_484, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _483));
        float _1283;
        if (_1039 > 0.0)
        {
            _1283 = abs((1.0 - _1028) / _1039);
        }
        else
        {
            float frontier_phi_37_33_ladder;
            if (_1039 < 0.0)
            {
                frontier_phi_37_33_ladder = abs((_1028 + 1.0) / _1039);
            }
            else
            {
                frontier_phi_37_33_ladder = 5000.0;
            }
            _1283 = frontier_phi_37_33_ladder;
        }
        float _1600;
        if (_1042 > 0.0)
        {
            _1600 = abs((1.0 - _1032) / _1042);
        }
        else
        {
            float frontier_phi_51_44_ladder;
            if (_1042 < 0.0)
            {
                frontier_phi_51_44_ladder = abs((_1032 + 1.0) / _1042);
            }
            else
            {
                frontier_phi_51_44_ladder = 5000.0;
            }
            _1600 = frontier_phi_51_44_ladder;
        }
        float _1751;
        if (_1045 > 0.0)
        {
            _1751 = abs((1.0 - _1036) / _1045);
        }
        else
        {
            float frontier_phi_65_60_ladder;
            if (_1045 < 0.0)
            {
                frontier_phi_65_60_ladder = abs((_1036 + 1.0) / _1045);
            }
            else
            {
                frontier_phi_65_60_ladder = 5000.0;
            }
            _1751 = frontier_phi_65_60_ladder;
        }
        float _1753 = isnan(_1600) ? _1283 : (isnan(_1283) ? _1600 : min(_1283, _1600));
        float _1754 = isnan(_1751) ? _1753 : (isnan(_1753) ? _1751 : min(_1753, _1751));
        float _1758 = (_1754 * _1039) + _1028;
        float _1759 = (_1754 * _1042) + _1032;
        float _1760 = (_1754 * _1045) + _1036;
        float _1761 = _1754 * 9.9999997473787516355514526367188e-05;
        float _1762 = (-1.0) - _1761;
        float _1764 = _1761 + 1.0;
        float frontier_phi_34_65_ladder;
        float frontier_phi_34_65_ladder_1;
        float frontier_phi_34_65_ladder_2;
        if ((_1760 > _1764) || ((_1760 < _1762) || ((_1759 > _1764) || ((_1759 < _1762) || ((_1758 < _1762) || (_1758 > _1764))))))
        {
            frontier_phi_34_65_ladder = 0.0;
            frontier_phi_34_65_ladder_1 = 0.0;
            frontier_phi_34_65_ladder_2 = 0.0;
        }
        else
        {
            vec4 _1920 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_1760, cbModelParam._m0[17u].z, fma(_1759, cbModelParam._m0[17u].y, _1758 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_1760, cbModelParam._m0[18u].z, fma(_1759, cbModelParam._m0[18u].y, _1758 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_1760, cbModelParam._m0[19u].z, fma(_1759, cbModelParam._m0[19u].y, _1758 * cbModelParam._m0[19u].x))), _974);
            frontier_phi_34_65_ladder = _1920.z * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_1 = _1920.y * cbModelParam._m0[1u].z;
            frontier_phi_34_65_ladder_2 = _1920.x * cbModelParam._m0[1u].z;
        }
        _1064 = frontier_phi_34_65_ladder_2;
        _1066 = frontier_phi_34_65_ladder_1;
        _1068 = frontier_phi_34_65_ladder;
    }
    else
    {
        vec4 _1048 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_483, _484, _485), _974);
        _1064 = _1048.x * cbModelParam._m0[1u].z;
        _1066 = _1048.y * cbModelParam._m0[1u].z;
        _1068 = _1048.z * cbModelParam._m0[1u].z;
    }
    float _1080 = _482 * 0.01200000010430812835693359375;
    float _1082 = _1080 * ((cbModelParam._m0[1u].w * (_1064 - _967)) + _967);
    float _1083 = _1080 * ((cbModelParam._m0[1u].w * (_1066 - _969)) + _969);
    float _1084 = _1080 * ((cbModelParam._m0[1u].w * (_1068 - _971)) + _971);
    float _1105 = fma(_1084, cbSceneParam._m0[89u].z, fma(_1083, cbSceneParam._m0[89u].y, _1082 * cbSceneParam._m0[89u].x));
    float _1108 = fma(_1084, cbSceneParam._m0[90u].z, fma(_1083, cbSceneParam._m0[90u].y, _1082 * cbSceneParam._m0[90u].x));
    float _1111 = fma(_1084, cbSceneParam._m0[91u].z, fma(_1083, cbSceneParam._m0[91u].y, _1082 * cbSceneParam._m0[91u].x));
    vec4 _1119 = texture(sampler2D(g_ShadowTexture, SS_WrapLinear), vec2(_469, _470));
    float _1121 = _1119.w;
    uint _1137 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _1142 = floatBitsToUint(cbInstanceData._m0[_1137 + 5u]);
    uint _1144 = _1142.x * 14u;
    uint _1145 = _1144 + 13u;
    float _1150 = _482 + (-1.0);
    float _1153 = (cbLight._m0[_1145].x * _1150) + 1.0;
    float _1154 = (cbLight._m0[_1145].y * _1150) + 1.0;
    uint _1155 = _1144 + 8u;
    float _1166 = cbLight._m0[_1144].x + _461;
    float _1167 = cbLight._m0[_1144].y + _462;
    float _1168 = cbLight._m0[_1144].z + _463;
    float _1172 = inversesqrt(dot(vec3(_1166, _1167, _1168), vec3(_1166, _1167, _1168)));
    float _1176 = dot(vec3(0.0), vec3(cbLight._m0[_1144].xyz));
    float _2400 = isnan(0.0) ? _1176 : (isnan(_1176) ? 0.0 : max(_1176, 0.0));
    float _1179 = isnan(1.0) ? _2400 : (isnan(_2400) ? 1.0 : min(_2400, 1.0));
    float _1180 = dot(vec3(0.0), vec3(_461, _462, _463));
    float _2411 = isnan(0.0) ? _1180 : (isnan(_1180) ? 0.0 : max(_1180, 0.0));
    float _1183 = isnan(1.0) ? _2411 : (isnan(_2411) ? 1.0 : min(_2411, 1.0));
    float _1184 = dot(vec3(cbLight._m0[_1144].xyz), vec3(_1166 * _1172, _1167 * _1172, _1168 * _1172));
    float _2422 = isnan(0.0) ? _1184 : (isnan(_1184) ? 0.0 : max(_1184, 0.0));
    float _1195 = (exp2(log2(1.0 - (isnan(1.0) ? _2422 : (isnan(_2422) ? 1.0 : min(_2422, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1201 = (0.5 / ((_1179 + 9.9999999392252902907785028219223e-09) + _1183)) * _1179;
    float _2433 = isnan(0.0) ? _1201 : (isnan(_1201) ? 0.0 : max(_1201, 0.0));
    float _1203 = (isnan(1.0) ? _2433 : (isnan(_2433) ? 1.0 : min(_2433, 1.0))) * 0.31831014156341552734375;
    float _1205 = isnan(1.0) ? _1153 : (isnan(_1153) ? 1.0 : min(_1153, 1.0));
    uint _1218 = _1144 + 9u;
    uint _1224 = _1144 | 1u;
    float _1230 = cbLight._m0[_1224].x + _461;
    float _1231 = cbLight._m0[_1224].y + _462;
    float _1232 = cbLight._m0[_1224].z + _463;
    float _1236 = inversesqrt(dot(vec3(_1230, _1231, _1232), vec3(_1230, _1231, _1232)));
    float _1240 = dot(vec3(0.0), vec3(cbLight._m0[_1224].xyz));
    float _2449 = isnan(0.0) ? _1240 : (isnan(_1240) ? 0.0 : max(_1240, 0.0));
    float _1243 = isnan(1.0) ? _2449 : (isnan(_2449) ? 1.0 : min(_2449, 1.0));
    float _1244 = dot(vec3(cbLight._m0[_1224].xyz), vec3(_1230 * _1236, _1231 * _1236, _1232 * _1236));
    float _2460 = isnan(0.0) ? _1244 : (isnan(_1244) ? 0.0 : max(_1244, 0.0));
    float _1253 = (exp2(log2(1.0 - (isnan(1.0) ? _2460 : (isnan(_2460) ? 1.0 : min(_2460, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _1257 = (0.5 / ((_1243 + 9.9999999392252902907785028219223e-09) + _1183)) * _1243;
    float _2471 = isnan(0.0) ? _1257 : (isnan(_1257) ? 0.0 : max(_1257, 0.0));
    float _1259 = (isnan(1.0) ? _2471 : (isnan(_2471) ? 1.0 : min(_2471, 1.0))) * 0.31831014156341552734375;
    float _1260 = isnan(1.0) ? _1154 : (isnan(_1154) ? 1.0 : min(_1154, 1.0));
    float _1270 = (((_1253 * cbLight._m0[_1218].x) * _1259) * _1260) + ((((cbLight._m0[_1155].x * ((1.0 - cbSceneParam._m0[34u].x) + (cbSceneParam._m0[34u].x * _1121))) * _1195) * _1203) * _1205);
    float _1271 = (((_1253 * cbLight._m0[_1218].y) * _1259) * _1260) + ((((cbLight._m0[_1155].y * ((1.0 - cbSceneParam._m0[34u].y) + (cbSceneParam._m0[34u].y * _1121))) * _1195) * _1203) * _1205);
    float _1272 = (((_1253 * cbLight._m0[_1218].z) * _1259) * _1260) + ((((cbLight._m0[_1155].z * ((1.0 - cbSceneParam._m0[34u].z) + (cbSceneParam._m0[34u].z * _1121))) * _1195) * _1203) * _1205);
    float _1389;
    float _1391;
    float _1393;
    if (_1142.y == 0u)
    {
        float _1328 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _1329 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _1328;
        float _1330 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _1328;
        float _1331 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _1328;
        uvec4 _1343 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1344 = _1343.x;
        uint _1355 = uint((float(_1343.y) * floor(float(uint(cbSceneParam._m0[85u].y * _470) / _1344))) + floor(float(uint(cbSceneParam._m0[85u].x * _469) / _1344)));
        float _1365 = (log2(_1331 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _1366 = isnan(0.0) ? _1365 : (isnan(_1365) ? 0.0 : max(_1365, 0.0));
        uint _1369 = uint(isnan(14.0) ? _1366 : (isnan(_1366) ? 14.0 : min(_1366, 14.0)));
        uvec4 _1375 = texelFetch(g_lightClusterGridBuffer, int(((_1369 << 2u) + (_1355 << 6u)) >> 2u));
        uint _1376 = _1375.x;
        uint _1377 = _1343.z;
        float _1466;
        float _1468;
        float _1470;
        if (((((1u << ((_1377 >> 4u) & 15u)) + 4294967295u) & _1376) == 0u) || ((_1377 & 240u) == 0u))
        {
            _1466 = 0.0;
            _1468 = 0.0;
            _1470 = 0.0;
        }
        else
        {
            float _1467;
            float _1469;
            float _1471;
            float _1625 = 0.0;
            float _1626 = 0.0;
            float _1627 = 0.0;
            uint _1628 = 0u;
            uint _1637;
            bool _1638;
            for (;;)
            {
                _1637 = texelFetch(g_lightClassification, int((((_1369 << 5u) + (_1355 << 9u)) + (_1628 << 2u)) >> 2u)).x;
                _1638 = _1637 == 0u;
                float frontier_phi_62_pred;
                float frontier_phi_62_pred_1;
                float frontier_phi_62_pred_2;
                if (_1638)
                {
                    frontier_phi_62_pred = _1627;
                    frontier_phi_62_pred_1 = _1626;
                    frontier_phi_62_pred_2 = _1625;
                }
                else
                {
                    float _1791;
                    float _1792;
                    float _1793;
                    uint _1794;
                    _1791 = _1625;
                    _1792 = _1626;
                    _1793 = _1627;
                    _1794 = _1637;
                    float _1703;
                    float _1704;
                    float _1705;
                    for (;;)
                    {
                        uint _1798 = uint(findLSB(_1794)) + (_1628 << 5u);
                        uint _1795 = (_1794 + 4294967295u) & _1794;
                        uint _1800 = _1798 * 48u;
                        vec4 _1814 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_1800)).x, texelFetch(g_PointLightRenderingBuffer, int(_1800 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1800 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1800 + 3u)).x));
                        uint _1831 = (_1798 * 48u) + 8u;
                        vec3 _1842 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_1831)).x, texelFetch(g_PointLightRenderingBuffer, int(_1831 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_1831 + 2u)).x));
                        float _1846 = _1814.x - _1329;
                        float _1847 = _1814.y - _1330;
                        float _1848 = _1814.z - _1331;
                        float _1849 = dot(vec3(_1846, _1847, _1848), vec3(_1846, _1847, _1848));
                        float _1852 = inversesqrt(_1849);
                        float _1861 = 1.0 - (_1849 * _1814.w);
                        float _2497 = isnan(0.0) ? _1861 : (isnan(_1861) ? 0.0 : max(_1861, 0.0));
                        float _1863 = sqrt(_1849) * uintBitsToFloat(uvec4(_1821, _1822, _1823, texelFetch(g_PointLightRenderingBuffer, int(((_1798 * 48u) + 4u) + 3u)).x)).w;
                        float _1866 = 1.39999997615814208984375 / (_1863 + 1.39999997615814208984375);
                        float _1867 = _1866 * _1866;
                        float _1870 = ((1.0 - _1867) * dot(vec3(0.0), vec3(_1852 * _1846, _1852 * _1847, _1852 * _1848))) + _1867;
                        float _1872 = (-0.0) - _1329;
                        float _1873 = (-0.0) - _1330;
                        float _1874 = (-0.0) - _1331;
                        float _1878 = inversesqrt(dot(vec3(_1872, _1873, _1874), vec3(_1872, _1873, _1874)));
                        float _1882 = dot(vec3(0.0), vec3(_1878 * _1872, _1878 * _1873, _1878 * _1874));
                        float _2508 = isnan(0.0) ? _1882 : (isnan(_1882) ? 0.0 : max(_1882, 0.0));
                        float _2519 = isnan(0.0) ? _1870 : (isnan(_1870) ? 0.0 : max(_1870, 0.0));
                        float _1886 = isnan(1.0) ? _2519 : (isnan(_2519) ? 1.0 : min(_2519, 1.0));
                        float _1890 = (0.5 / (((isnan(1.0) ? _2508 : (isnan(_2508) ? 1.0 : min(_2508, 1.0))) + 9.9999999392252902907785028219223e-09) + _1886)) * _1886;
                        float _2530 = isnan(0.0) ? _1890 : (isnan(_1890) ? 0.0 : max(_1890, 0.0));
                        float _1899 = (((isnan(1.0) ? _2530 : (isnan(_2530) ? 1.0 : min(_2530, 1.0))) * 3.1415927410125732421875) / (((_1863 * _1863) * 2.1991131305694580078125) + 3.141590118408203125)) * (isnan(1.0) ? _2497 : (isnan(_2497) ? 1.0 : min(_2497, 1.0)));
                        _1703 = (_1899 * _1842.x) + _1791;
                        _1704 = (_1899 * _1842.y) + _1792;
                        _1705 = (_1899 * _1842.z) + _1793;
                        if (_1795 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _1791 = _1703;
                            _1792 = _1704;
                            _1793 = _1705;
                            _1794 = _1795;
                        }
                    }
                    frontier_phi_62_pred = _1705;
                    frontier_phi_62_pred_1 = _1704;
                    frontier_phi_62_pred_2 = _1703;
                }
                _1471 = frontier_phi_62_pred;
                _1469 = frontier_phi_62_pred_1;
                _1467 = frontier_phi_62_pred_2;
                uint _1629 = _1628 + 1u;
                if (_1629 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _1625 = _1467;
                    _1626 = _1469;
                    _1627 = _1471;
                    _1628 = _1629;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _1466 = _1467;
            _1468 = _1469;
            _1470 = _1471;
        }
        uvec4 _1474 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _1475 = _1474.z;
        uint _1477 = (_1475 >> 8u) & 15u;
        float _1605;
        float _1607;
        float _1609;
        if (((4294967295u << _1477) & _1376) == 0u)
        {
            _1605 = _1466;
            _1607 = _1468;
            _1609 = _1470;
        }
        else
        {
            float _1621 = inversesqrt(dot(vec3(_1329, _1330, _1331), vec3(_1329, _1330, _1331)));
            float frontier_phi_53_54_ladder;
            float frontier_phi_53_54_ladder_1;
            float frontier_phi_53_54_ladder_2;
            if (_1477 < ((_1475 >> 12u) & 15u))
            {
                float _1606;
                float _1608;
                float _1610;
                float _1777 = _1466;
                float _1778 = _1468;
                float _1779 = _1470;
                uint _1780 = _1477;
                uint _1789;
                bool _1790;
                for (;;)
                {
                    _1789 = texelFetch(g_lightClassification, int((((_1369 << 5u) + (_1355 << 9u)) + (_1780 << 2u)) >> 2u)).x;
                    _1790 = _1789 == 0u;
                    float frontier_phi_71_pred;
                    float frontier_phi_71_pred_1;
                    float frontier_phi_71_pred_2;
                    if (_1790)
                    {
                        frontier_phi_71_pred = _1779;
                        frontier_phi_71_pred_1 = _1778;
                        frontier_phi_71_pred_2 = _1777;
                    }
                    else
                    {
                        float _1925;
                        float _1926;
                        float _1927;
                        float _2146;
                        float _2147;
                        float _2148;
                        float _1935 = _1777;
                        float _1936 = _1778;
                        float _1937 = _1779;
                        uint _1938 = _1789;
                        uint _1939;
                        uint _1949;
                        vec4 _1964;
                        float _1965;
                        vec3 _1977;
                        vec4 _1992;
                        vec4 _2007;
                        float _2053;
                        bool _2054;
                        for (;;)
                        {
                            _1949 = ((_1780 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_1938));
                            _1939 = (_1938 + 4294967295u) & _1938;
                            uint _1951 = _1949 * 40u;
                            _1964 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_1951)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1951 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1951 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1951 + 3u)).x));
                            _1965 = _1964.w;
                            uint _1967 = (_1949 * 40u) + 8u;
                            _1977 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_1967)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1967 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1967 + 2u)).x));
                            uint _1979 = (_1949 * 40u) + 16u;
                            _1992 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_1979)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1979 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1979 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1979 + 3u)).x));
                            uint _1994 = (_1949 * 40u) + 20u;
                            _2007 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_1994)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1994 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1994 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_1994 + 3u)).x));
                            uint _2009 = (_1949 * 40u) + 24u;
                            vec4 _2022 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2009)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2009 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2009 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2009 + 3u)).x));
                            uint _2028 = (_1949 * 40u) + 28u;
                            vec4 _2041 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_2028)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2028 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2028 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_2028 + 3u)).x));
                            _2053 = fma(_1331, _2041.z, fma(_1330, _2041.y, _2041.x * _1329)) + _2041.w;
                            _2054 = !((fma(_1331, _2022.z, fma(_1330, _2022.y, _2022.x * _1329)) + _2022.w) <= 0.0);
                            float frontier_phi_77_pred;
                            float frontier_phi_77_pred_1;
                            float frontier_phi_77_pred_2;
                            if (_2054)
                            {
                                float _2088 = _1964.x - _1329;
                                float _2089 = _1964.y - _1330;
                                float _2090 = _1964.z - _1331;
                                float _2091 = dot(vec3(_2088, _2089, _2090), vec3(_2088, _2089, _2090));
                                float _2094 = inversesqrt(_2091);
                                float _2101 = 1.0 - (_2091 / (_1965 * _1965));
                                float _2541 = isnan(0.0) ? _2101 : (isnan(_2101) ? 0.0 : max(_2101, 0.0));
                                float _2103 = sqrt(_2091) * uintBitsToFloat(uvec4(_2057, _2058, _2059, texelFetch(g_SpotLightRenderingBuffer, int(((_1949 * 40u) + 4u) + 3u)).x)).w;
                                float _2105 = 1.39999997615814208984375 / (_2103 + 1.39999997615814208984375);
                                float _2106 = _2105 * _2105;
                                float _2109 = (fma(_1331, _1992.z, fma(_1330, _1992.y, _1992.x * _1329)) + _1992.w) / _2053;
                                float _2110 = (fma(_1331, _2007.z, fma(_1330, _2007.y, _2007.x * _1329)) + _2007.w) / _2053;
                                float _2114 = 1.0 - dot(vec2(_2109, _2110), vec2(_2109, _2110));
                                float _2552 = isnan(0.0) ? _2114 : (isnan(_2114) ? 0.0 : max(_2114, 0.0));
                                float _2122 = dot(vec3(0.0), vec3((-0.0) - (_1329 * _1621), (-0.0) - (_1330 * _1621), (-0.0) - (_1331 * _1621)));
                                float _2563 = isnan(0.0) ? _2122 : (isnan(_2122) ? 0.0 : max(_2122, 0.0));
                                float _2130 = ((1.0 - _2106) * dot(vec3(0.0), vec3(_2094 * _2088, _2094 * _2089, _2094 * _2090))) + _2106;
                                float _2574 = isnan(0.0) ? _2130 : (isnan(_2130) ? 0.0 : max(_2130, 0.0));
                                float _2131 = isnan(1.0) ? _2574 : (isnan(_2574) ? 1.0 : min(_2574, 1.0));
                                float _2135 = (0.5 / (((isnan(1.0) ? _2563 : (isnan(_2563) ? 1.0 : min(_2563, 1.0))) + 9.9999999392252902907785028219223e-09) + _2131)) * _2131;
                                float _2585 = isnan(0.0) ? _2135 : (isnan(_2135) ? 0.0 : max(_2135, 0.0));
                                float _2142 = ((isnan(1.0) ? _2552 : (isnan(_2552) ? 1.0 : min(_2552, 1.0))) * (isnan(1.0) ? _2541 : (isnan(_2541) ? 1.0 : min(_2541, 1.0)))) * (((isnan(1.0) ? _2585 : (isnan(_2585) ? 1.0 : min(_2585, 1.0))) * 3.1415927410125732421875) / (((_2103 * _2103) * 2.1991131305694580078125) + 3.141590118408203125));
                                frontier_phi_77_pred = _2142 * _1977.z;
                                frontier_phi_77_pred_1 = _2142 * _1977.x;
                                frontier_phi_77_pred_2 = _2142 * _1977.y;
                            }
                            else
                            {
                                frontier_phi_77_pred = 0.0;
                                frontier_phi_77_pred_1 = 0.0;
                                frontier_phi_77_pred_2 = 0.0;
                            }
                            _2148 = frontier_phi_77_pred;
                            _2146 = frontier_phi_77_pred_1;
                            _2147 = frontier_phi_77_pred_2;
                            _1925 = _2146 + _1935;
                            _1926 = _2147 + _1936;
                            _1927 = _2148 + _1937;
                            if (_1939 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _1935 = _1925;
                                _1936 = _1926;
                                _1937 = _1927;
                                _1938 = _1939;
                                continue;
                            }
                        }
                        frontier_phi_71_pred = _1927;
                        frontier_phi_71_pred_1 = _1926;
                        frontier_phi_71_pred_2 = _1925;
                    }
                    _1610 = frontier_phi_71_pred;
                    _1608 = frontier_phi_71_pred_1;
                    _1606 = frontier_phi_71_pred_2;
                    uint _1781 = _1780 + 1u;
                    if (_1781 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _1777 = _1606;
                        _1778 = _1608;
                        _1779 = _1610;
                        _1780 = _1781;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_53_54_ladder = _1608;
                frontier_phi_53_54_ladder_1 = _1606;
                frontier_phi_53_54_ladder_2 = _1610;
            }
            else
            {
                frontier_phi_53_54_ladder = _1468;
                frontier_phi_53_54_ladder_1 = _1466;
                frontier_phi_53_54_ladder_2 = _1470;
            }
            _1605 = frontier_phi_53_54_ladder_1;
            _1607 = frontier_phi_53_54_ladder;
            _1609 = frontier_phi_53_54_ladder_2;
        }
        float _1614 = isnan(1.0) ? _482 : (isnan(_482) ? 1.0 : min(_482, 1.0));
        _1389 = ((_1605 * 0.039999999105930328369140625) * _1614) + _1270;
        _1391 = ((_1607 * 0.039999999105930328369140625) * _1614) + _1271;
        _1393 = ((_1609 * 0.039999999105930328369140625) * _1614) + _1272;
    }
    else
    {
        _1389 = _1270;
        _1391 = _1271;
        _1393 = _1272;
    }
    uint _1400 = (_1137 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _1415 = ((_433.x * cbMtdParam._m0[13u].x) * cbInstanceData._m0[_1400].x) + ((_1389 + ((isnan(0.0) ? _1105 : (isnan(_1105) ? 0.0 : max(_1105, 0.0))) * _878)) * cbPerFrame._m0[3u].x);
    float _1416 = ((_433.y * cbMtdParam._m0[13u].y) * cbInstanceData._m0[_1400].y) + ((_1391 + ((isnan(0.0) ? _1108 : (isnan(_1108) ? 0.0 : max(_1108, 0.0))) * _878)) * cbPerFrame._m0[3u].x);
    float _1417 = ((_433.z * cbMtdParam._m0[13u].z) * cbInstanceData._m0[_1400].z) + ((_1393 + ((isnan(0.0) ? _1111 : (isnan(_1111) ? 0.0 : max(_1111, 0.0))) * _878)) * cbPerFrame._m0[3u].x);
    uint _1421 = _1137 + 6u;
    float _1429 = _469 / cbSceneParam._m0[86u].x;
    float _1430 = _470 / cbSceneParam._m0[86u].y;
    vec4 _1444 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1429, _1430, (log2((isnan(cbSceneParam._m0[77u].w) ? _456 : (isnan(_456) ? cbSceneParam._m0[77u].w : min(_456, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _1446 = _1444.x;
    float _1447 = _1444.y;
    float _1448 = _1444.z;
    float _1449 = _1444.w;
    float _1523;
    float _1525;
    float _1527;
    float _1529;
    if (_456 > cbSceneParam._m0[78u].w)
    {
        float _1485 = isnan(_456) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _456 : min(cbSceneParam._m0[80u].w, _456));
        float _1486 = _1485 / _456;
        float _1497 = _1486 * _252;
        float _1498 = _253 * _1486;
        float _1499 = (-0.0) - _1498;
        float _1500 = _1486 * _254;
        float _1502 = (cbSceneParam._m0[77u].w * _1499) / _1485;
        float _1503 = _1502 + cbSceneParam._m0[79u].w;
        float _1504 = cbSceneParam._m0[79u].w - _1498;
        float _1510 = sqrt(((_1497 * _1497) + (_1498 * _1498)) + (_1500 * _1500));
        float _1513 = (1.0 - (cbSceneParam._m0[77u].w / _1485)) * _1510;
        float _1519 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _1521 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _1713;
        if (abs((_1499 - _1502) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _1713 = ((((_1503 > 0.0) ? exp2(_1519 * _1503) : (2.0 - exp2(_1521 * _1503))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _1513;
        }
        else
        {
            float _1651 = 1.0 / cbSceneParam._m0[80u].x;
            float _1652 = isnan(_1504) ? _1503 : (isnan(_1503) ? _1504 : max(_1503, _1504));
            float _1653 = isnan(_1504) ? _1503 : (isnan(_1503) ? _1504 : min(_1503, _1504));
            float _1662 = isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : min(_1652, 0.0));
            float _1663 = isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : min(_1653, 0.0));
            _1713 = ((abs(_1510 / _1499) * cbSceneParam._m0[80u].y) * ((((_1662 - _1663) * 2.0) - ((exp2(_1519 * (isnan(0.0) ? _1652 : (isnan(_1652) ? 0.0 : max(_1652, 0.0)))) - exp2(_1519 * (isnan(0.0) ? _1653 : (isnan(_1653) ? 0.0 : max(_1653, 0.0))))) * _1651)) - ((exp2(_1521 * _1662) - exp2(_1521 * _1663)) * _1651))) + (_1513 * cbSceneParam._m0[80u].z);
        }
        vec4 _1715 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_1429, _1430, 1.0), 0.0);
        float _1724 = exp2((_1713 * (-1.44269502162933349609375)) * (1.0 - _1715.w));
        float _1725 = log2(_1724);
        float _1741 = log2(_1449);
        _1523 = (exp2(_1741 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_1725 * cbSceneParam._m0[78u].x)) * _1715.x) / cbSceneParam._m0[78u].x)) + _1446;
        _1525 = (exp2(_1741 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_1725 * cbSceneParam._m0[78u].y)) * _1715.y) / cbSceneParam._m0[78u].y)) + _1447;
        _1527 = (exp2(_1741 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_1725 * cbSceneParam._m0[78u].z)) * _1715.z) / cbSceneParam._m0[78u].z)) + _1448;
        _1529 = _1724 * _1449;
    }
    else
    {
        _1523 = _1446;
        _1525 = _1447;
        _1527 = _1448;
        _1529 = _1449;
    }
    float _1541 = roundEven(cbMatDynParam._m0[0u].y);
    bool _1542 = _1541 == 3.0;
    float _1544 = log2(_1529);
    float _1551 = exp2(_1544 * cbSceneParam._m0[78u].x) * (isnan(0.0) ? _1415 : (isnan(_1415) ? 0.0 : max(_1415, 0.0)));
    float _1552 = exp2(_1544 * cbSceneParam._m0[78u].y) * (isnan(0.0) ? _1416 : (isnan(_1416) ? 0.0 : max(_1416, 0.0)));
    float _1553 = exp2(_1544 * cbSceneParam._m0[78u].z) * (isnan(0.0) ? _1417 : (isnan(_1417) ? 0.0 : max(_1417, 0.0)));
    float _1562 = (_1541 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _1562 * (_1542 ? _1551 : (_1551 + (cbSceneParam._m0[72u].w * _1523)));
    SV_Target.y = _1562 * (_1542 ? _1552 : (_1552 + (cbSceneParam._m0[72u].w * _1525)));
    SV_Target.z = _1562 * (_1542 ? _1553 : (_1553 + (cbSceneParam._m0[72u].w * _1527)));
    SV_Target.w = cbInstanceData._m0[_1421].w;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = cbInstanceData._m0[_1421].w;
}


