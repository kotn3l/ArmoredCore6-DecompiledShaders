#version 460

out float gl_ClipDistance[2];

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec2 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 NORMAL_1;
layout(location = 2) out vec4 TANGENT_1;
layout(location = 3) out vec3 TEXCOORD_1_1;
layout(location = 4) out vec4 TEXCOORD_4;
layout(location = 5) out vec2 TEXCOORD_8;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_1_1.x = 0.0;
    TEXCOORD_1_1.y = 0.0;
    TEXCOORD_1_1.z = 0.0;
    TEXCOORD_4.x = 0.0;
    TEXCOORD_4.y = 0.0;
    TEXCOORD_4.z = 0.0;
    TEXCOORD_4.w = 0.0;
    TEXCOORD_8.x = 0.0;
    TEXCOORD_8.y = 0.0;
    gl_ClipDistance[0u] = 0.0;
    gl_ClipDistance[1u] = 0.0;
    float _177 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _179 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _180 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _189 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _190 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _191 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _201 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _203 = texelFetch(g_InstanceIndexBuffer, int(_201));
    uint _204 = _203.x;
    precise float _205 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _210 = isnan(_205) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _205 : max(0.001000000047497451305389404296875, _205));
    precise float _212 = BLENDWEIGHT.x / _210;
    precise float _213 = BLENDWEIGHT.y / _210;
    precise float _214 = BLENDWEIGHT.z / _210;
    precise float _215 = BLENDWEIGHT.w / _210;
    uint _217 = _204 * 13u;
    uvec4 _222 = floatBitsToUint(cbInstanceData._m0[_217 + 4u]);
    uint _223 = _222.x;
    uint _225 = (_223 + uint(float(BLENDINDICES.x))) * 3u;
    uint _232 = _225 + 1u;
    uint _239 = _225 + 2u;
    precise float _246 = _212 * cbObjMatrix._m0[_225].x;
    precise float _247 = _212 * cbObjMatrix._m0[_232].x;
    precise float _248 = _212 * cbObjMatrix._m0[_239].x;
    precise float _249 = _212 * cbObjMatrix._m0[_225].y;
    precise float _250 = _212 * cbObjMatrix._m0[_232].y;
    precise float _251 = _212 * cbObjMatrix._m0[_239].y;
    precise float _252 = _212 * cbObjMatrix._m0[_225].z;
    precise float _253 = _212 * cbObjMatrix._m0[_232].z;
    precise float _254 = _212 * cbObjMatrix._m0[_239].z;
    precise float _255 = _212 * cbObjMatrix._m0[_225].w;
    precise float _256 = _212 * cbObjMatrix._m0[_232].w;
    precise float _257 = _212 * cbObjMatrix._m0[_239].w;
    uint _260 = (_223 + uint(float(BLENDINDICES.y))) * 3u;
    uint _267 = _260 + 1u;
    uint _274 = _260 + 2u;
    precise float _281 = _213 * cbObjMatrix._m0[_260].x;
    precise float _282 = _213 * cbObjMatrix._m0[_267].x;
    precise float _283 = _213 * cbObjMatrix._m0[_274].x;
    precise float _284 = _213 * cbObjMatrix._m0[_260].y;
    precise float _285 = _213 * cbObjMatrix._m0[_267].y;
    precise float _286 = _213 * cbObjMatrix._m0[_274].y;
    precise float _287 = _213 * cbObjMatrix._m0[_260].z;
    precise float _288 = _213 * cbObjMatrix._m0[_267].z;
    precise float _289 = _213 * cbObjMatrix._m0[_274].z;
    precise float _290 = _213 * cbObjMatrix._m0[_260].w;
    precise float _291 = _213 * cbObjMatrix._m0[_267].w;
    precise float _292 = _213 * cbObjMatrix._m0[_274].w;
    precise float _293 = _246 + _281;
    precise float _294 = _247 + _282;
    precise float _295 = _248 + _283;
    precise float _296 = _249 + _284;
    precise float _297 = _250 + _285;
    precise float _298 = _251 + _286;
    precise float _299 = _252 + _287;
    precise float _300 = _253 + _288;
    precise float _301 = _254 + _289;
    precise float _302 = _255 + _290;
    precise float _303 = _256 + _291;
    precise float _304 = _257 + _292;
    uint _307 = (_223 + uint(float(BLENDINDICES.z))) * 3u;
    uint _314 = _307 + 1u;
    uint _321 = _307 + 2u;
    precise float _328 = _214 * cbObjMatrix._m0[_307].x;
    precise float _329 = _214 * cbObjMatrix._m0[_314].x;
    precise float _330 = _214 * cbObjMatrix._m0[_321].x;
    precise float _331 = _214 * cbObjMatrix._m0[_307].y;
    precise float _332 = _214 * cbObjMatrix._m0[_314].y;
    precise float _333 = _214 * cbObjMatrix._m0[_321].y;
    precise float _334 = _214 * cbObjMatrix._m0[_307].z;
    precise float _335 = _214 * cbObjMatrix._m0[_314].z;
    precise float _336 = _214 * cbObjMatrix._m0[_321].z;
    precise float _337 = _214 * cbObjMatrix._m0[_307].w;
    precise float _338 = _214 * cbObjMatrix._m0[_314].w;
    precise float _339 = _214 * cbObjMatrix._m0[_321].w;
    precise float _340 = _293 + _328;
    precise float _341 = _294 + _329;
    precise float _342 = _295 + _330;
    precise float _343 = _296 + _331;
    precise float _344 = _297 + _332;
    precise float _345 = _298 + _333;
    precise float _346 = _299 + _334;
    precise float _347 = _300 + _335;
    precise float _348 = _301 + _336;
    precise float _349 = _302 + _337;
    precise float _350 = _303 + _338;
    precise float _351 = _304 + _339;
    uint _354 = (_223 + uint(float(BLENDINDICES.w))) * 3u;
    uint _361 = _354 + 1u;
    uint _368 = _354 + 2u;
    precise float _375 = _215 * cbObjMatrix._m0[_354].x;
    precise float _376 = _215 * cbObjMatrix._m0[_361].x;
    precise float _377 = _215 * cbObjMatrix._m0[_368].x;
    precise float _378 = _215 * cbObjMatrix._m0[_354].y;
    precise float _379 = _215 * cbObjMatrix._m0[_361].y;
    precise float _380 = _215 * cbObjMatrix._m0[_368].y;
    precise float _381 = _215 * cbObjMatrix._m0[_354].z;
    precise float _382 = _215 * cbObjMatrix._m0[_361].z;
    precise float _383 = _215 * cbObjMatrix._m0[_368].z;
    precise float _384 = _215 * cbObjMatrix._m0[_354].w;
    precise float _385 = _215 * cbObjMatrix._m0[_361].w;
    precise float _386 = _215 * cbObjMatrix._m0[_368].w;
    precise float _387 = _340 + _375;
    precise float _388 = _341 + _376;
    precise float _389 = _342 + _377;
    precise float _390 = _343 + _378;
    precise float _391 = _344 + _379;
    precise float _392 = _345 + _380;
    precise float _393 = _346 + _381;
    precise float _394 = _347 + _382;
    precise float _395 = _348 + _383;
    precise float _396 = _349 + _384;
    precise float _397 = _350 + _385;
    precise float _398 = _351 + _386;
    precise float _399 = POSITION.x * _387;
    precise float _400 = POSITION.y * _390;
    precise float _401 = _400 + _399;
    precise float _402 = POSITION.z * _393;
    precise float _403 = _402 + _401;
    precise float _404 = 1.0 * _396;
    precise float _405 = _404 + _403;
    precise float _406 = POSITION.x * _388;
    precise float _407 = POSITION.y * _391;
    precise float _408 = _407 + _406;
    precise float _409 = POSITION.z * _394;
    precise float _410 = _409 + _408;
    precise float _411 = 1.0 * _397;
    precise float _412 = _411 + _410;
    precise float _413 = POSITION.x * _389;
    precise float _414 = POSITION.y * _392;
    precise float _415 = _414 + _413;
    precise float _416 = POSITION.z * _395;
    precise float _417 = _416 + _415;
    precise float _418 = 1.0 * _398;
    precise float _419 = _418 + _417;
    precise float _444 = _405 - cbSceneParam._m0[3u].x;
    precise float _445 = _412 - cbSceneParam._m0[3u].y;
    precise float _446 = _419 - cbSceneParam._m0[3u].z;
    precise float _474 = _444 * cbSceneParam._m0[24u].x;
    precise float _475 = _445 * cbSceneParam._m0[24u].y;
    precise float _476 = _475 + _474;
    precise float _477 = _446 * cbSceneParam._m0[24u].z;
    precise float _478 = _477 + _476;
    precise float _479 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _480 = _479 + _478;
    precise float _481 = _444 * cbSceneParam._m0[25u].x;
    precise float _482 = _445 * cbSceneParam._m0[25u].y;
    precise float _483 = _482 + _481;
    precise float _484 = _446 * cbSceneParam._m0[25u].z;
    precise float _485 = _484 + _483;
    precise float _486 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _487 = _486 + _485;
    precise float _488 = _444 * cbSceneParam._m0[26u].x;
    precise float _489 = _445 * cbSceneParam._m0[26u].y;
    precise float _490 = _489 + _488;
    precise float _491 = _446 * cbSceneParam._m0[26u].z;
    precise float _492 = _491 + _490;
    precise float _493 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _494 = _493 + _492;
    precise float _495 = _444 * cbSceneParam._m0[27u].x;
    precise float _496 = _445 * cbSceneParam._m0[27u].y;
    precise float _497 = _496 + _495;
    precise float _498 = _446 * cbSceneParam._m0[27u].z;
    precise float _499 = _498 + _497;
    precise float _500 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _501 = _500 + _499;
    gl_Position.x = _480;
    gl_Position.y = _487;
    gl_Position.z = _494;
    gl_Position.w = _501;
    NORMAL_1.x = fma(_180, _393, fma(_179, _390, _387 * _177));
    NORMAL_1.y = fma(_180, _394, fma(_179, _391, _388 * _177));
    NORMAL_1.z = fma(_180, _395, fma(_179, _392, _389 * _177));
    NORMAL_1.w = float(_204);
    TANGENT_1.x = fma(_191, _393, fma(_190, _390, _387 * _189));
    TANGENT_1.y = fma(_191, _394, fma(_190, _391, _388 * _189));
    TANGENT_1.z = fma(_191, _395, fma(_190, _392, _389 * _189));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_1_1.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_1_1.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_1_1.z = COLOR_1.x;
    TEXCOORD_4.x = TEXCOORD_1.x;
    TEXCOORD_4.y = TEXCOORD_1.y;
    TEXCOORD_4.z = TEXCOORD_1.z;
    TEXCOORD_4.w = COLOR_1.w;
    TEXCOORD_8.x = _494;
    TEXCOORD_8.y = _501;
    gl_ClipDistance[0u] = dot(vec4(_480, _487, _494, _501), vec4(cbSceneParam._m0[4u]));
    gl_ClipDistance[1u] = dot(vec4(_480, _487, _494, _501), vec4(cbInstanceData._m0[_217 + 3u]));
}


