#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _563;
float _564;
float _565;
float _566;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _156 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].x + TEXCOORD_1.x) + ((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[12u].x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].y + TEXCOORD_1.y) + ((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[12u].x)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _162 = _156.w;
    float _163 = _156.x * cbMtdParam._m0[9u].x;
    float _164 = _156.y * cbMtdParam._m0[9u].y;
    float _165 = _156.z * cbMtdParam._m0[9u].z;
    float _171 = (_162 * TEXCOORD_4.w) * cbMtdParam._m0[13u].y;
    float _575 = isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0));
    float _193 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _212 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _220 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _222 = _220.w;
    uint _242 = uint(roundEven(NORMAL.w)) * 13u;
    uint _243 = _242 + 9u;
    uint _244 = _243 + uint(cbMatDynParam._m0[0u].w);
    float _250 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _163 : (isnan(_163) ? 0.0 : max(_163, 0.0)))) * cbInstanceData._m0[_244].x;
    float _251 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0)))) * cbInstanceData._m0[_244].y;
    float _252 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _165 : (isnan(_165) ? 0.0 : max(_165, 0.0)))) * cbInstanceData._m0[_244].z;
    float _253 = isnan(0.0) ? _250 : (isnan(_250) ? 0.0 : max(_250, 0.0));
    float _254 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
    float _255 = isnan(0.0) ? _252 : (isnan(_252) ? 0.0 : max(_252, 0.0));
    float _261 = cbInstanceData._m0[_242 + 6u].w * (isnan(1.0) ? _575 : (isnan(_575) ? 1.0 : min(_575, 1.0)));
    float _267 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _268 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _283 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_267, _268, (log2((isnan(cbSceneParam._m0[77u].w) ? _193 : (isnan(_193) ? cbSceneParam._m0[77u].w : min(_193, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _285 = _283.x;
    float _286 = _283.y;
    float _287 = _283.z;
    float _288 = _283.w;
    float _373;
    float _375;
    float _377;
    float _379;
    if (_193 > cbSceneParam._m0[78u].w)
    {
        float _334 = isnan(_193) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _193 : min(cbSceneParam._m0[80u].w, _193));
        float _335 = _334 / _193;
        float _346 = _335 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _212));
        float _347 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _212)) * _335;
        float _348 = (-0.0) - _347;
        float _350 = _335 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _212));
        float _352 = (cbSceneParam._m0[77u].w * _348) / _334;
        float _353 = _352 + cbSceneParam._m0[79u].w;
        float _354 = cbSceneParam._m0[79u].w - _347;
        float _360 = sqrt(((_346 * _346) + (_347 * _347)) + (_350 * _350));
        float _363 = (1.0 - (cbSceneParam._m0[77u].w / _334)) * _360;
        float _369 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _371 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _492;
        if (abs((_348 - _352) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _492 = ((((_353 > 0.0) ? exp2(_369 * _353) : (2.0 - exp2(_371 * _353))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _363;
        }
        else
        {
            float _447 = 1.0 / cbSceneParam._m0[80u].x;
            float _448 = isnan(_354) ? _353 : (isnan(_353) ? _354 : max(_353, _354));
            float _449 = isnan(_354) ? _353 : (isnan(_353) ? _354 : min(_353, _354));
            float _458 = isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : min(_448, 0.0));
            float _459 = isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : min(_449, 0.0));
            _492 = ((abs(_360 / _348) * cbSceneParam._m0[80u].y) * ((((_458 - _459) * 2.0) - ((exp2(_369 * (isnan(0.0) ? _448 : (isnan(_448) ? 0.0 : max(_448, 0.0)))) - exp2(_369 * (isnan(0.0) ? _449 : (isnan(_449) ? 0.0 : max(_449, 0.0))))) * _447)) - ((exp2(_371 * _458) - exp2(_371 * _459)) * _447))) + (_363 * cbSceneParam._m0[80u].z);
        }
        vec4 _494 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_267, _268, 1.0), 0.0);
        float _503 = exp2((_492 * (-1.44269502162933349609375)) * (1.0 - _494.w));
        float _504 = log2(_503);
        float _520 = log2(_288);
        _373 = (exp2(_520 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_504 * cbSceneParam._m0[78u].x)) * _494.x) / cbSceneParam._m0[78u].x)) + _285;
        _375 = (exp2(_520 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_504 * cbSceneParam._m0[78u].y)) * _494.y) / cbSceneParam._m0[78u].y)) + _286;
        _377 = (exp2(_520 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_504 * cbSceneParam._m0[78u].z)) * _494.z) / cbSceneParam._m0[78u].z)) + _287;
        _379 = _503 * _288;
    }
    else
    {
        _373 = _285;
        _375 = _286;
        _377 = _287;
        _379 = _288;
    }
    bool _530;
    vec4 _389;
    vec4 _413;
    float _415;
    float _420;
    float _421;
    float _422;
    float _423;
    bool _434;
    for (;;)
    {
        _389 = cbMatDynParam._m0[0u];
        float _391 = roundEven(_389.y);
        bool _392 = _391 == 3.0;
        float _394 = log2(_379);
        float _401 = exp2(_394 * cbSceneParam._m0[78u].x) * _253;
        float _402 = exp2(_394 * cbSceneParam._m0[78u].y) * _254;
        float _403 = exp2(_394 * cbSceneParam._m0[78u].z) * _255;
        float _410 = _222 + (-0.5);
        _413 = cbMtdParam._m0[1u];
        _415 = _413.y * _410;
        float _419 = (_391 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _420 = _419 * (_392 ? _401 : (_401 + (cbSceneParam._m0[72u].w * _373)));
        _421 = _419 * (_392 ? _402 : (_402 + (cbSceneParam._m0[72u].w * _375)));
        _422 = _419 * (_392 ? _403 : (_403 + (cbSceneParam._m0[72u].w * _377)));
        _423 = _410 * 0.999000012874603271484375;
        _434 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_434)
        {
            if ((cbInstanceData._m0[_242 + 7u].x + _423) < 0.5)
            {
                _530 = true;
                break;
            }
        }
        uint _484 = _243 + uint(_389.w);
        if ((cbInstanceData._m0[_484].w < 1.0) && ((cbInstanceData._m0[_484].w + _423) < 0.5))
        {
            _530 = true;
            break;
        }
        if ((_415 + _162) < _413.x)
        {
            _530 = true;
            break;
        }
        _530 = false;
        break;
    }
    float _538;
    if (_530)
    {
        discard_state = true;
        _538 = 0.0;
    }
    else
    {
        _538 = _261;
    }
    SV_Target.x = _420;
    SV_Target.y = _421;
    SV_Target.z = _422;
    SV_Target.w = _538;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _261;
    discard_exit();
}


