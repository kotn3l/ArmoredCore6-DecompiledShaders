#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_SkyCloud_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _622;
float _623;
float _624;
float _625;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _149 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[15u].x + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[15u].y + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _155 = _149.w;
    float _156 = _149.x * cbMtdParam._m0[9u].x;
    float _157 = _149.y * cbMtdParam._m0[9u].y;
    float _158 = _149.z * cbMtdParam._m0[9u].z;
    float _164 = (_155 * TEXCOORD_4.w) * cbMtdParam._m0[13u].y;
    float _180 = abs((fract(cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _634 = isnan(0.0) ? _180 : (isnan(_180) ? 0.0 : max(_180, 0.0));
    float _182 = isnan(1.0) ? _634 : (isnan(_634) ? 1.0 : min(_634, 1.0));
    float _193 = (((_182 * _182) * (3.0 - (_182 * 2.0))) * cbMtdParam._m0[13u].w) - cbMtdParam._m0[12u].y;
    vec4 _219 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_1, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].z + TEXCOORD_1.x) + cbMtdParam._m0[16u].x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMtdParam._m0[15u].w + TEXCOORD_1.y) + cbMtdParam._m0[16u].y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _224 = (_193 * cbMtdParam._m0[10u].x) * _219.x;
    float _225 = (_193 * cbMtdParam._m0[10u].y) * _219.y;
    float _226 = (_193 * cbMtdParam._m0[10u].z) * _219.z;
    float _645 = isnan(0.0) ? _164 : (isnan(_164) ? 0.0 : max(_164, 0.0));
    float _252 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _270 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _278 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _280 = _278.w;
    uint _300 = uint(roundEven(NORMAL.w)) * 13u;
    uint _301 = _300 + 9u;
    uint _302 = _301 + uint(cbMatDynParam._m0[0u].w);
    float _309 = cbInstanceData._m0[_302].x * ((_224 - (_224 * TEXCOORD_4.x)) + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _156 : (isnan(_156) ? 0.0 : max(_156, 0.0)))));
    float _311 = cbInstanceData._m0[_302].y * ((_225 - (_225 * TEXCOORD_4.y)) + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _157 : (isnan(_157) ? 0.0 : max(_157, 0.0)))));
    float _313 = cbInstanceData._m0[_302].z * ((_226 - (_226 * TEXCOORD_4.z)) + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _158 : (isnan(_158) ? 0.0 : max(_158, 0.0)))));
    float _314 = isnan(0.0) ? _309 : (isnan(_309) ? 0.0 : max(_309, 0.0));
    float _315 = isnan(0.0) ? _311 : (isnan(_311) ? 0.0 : max(_311, 0.0));
    float _316 = isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0));
    float _322 = cbInstanceData._m0[_300 + 6u].w * (isnan(1.0) ? _645 : (isnan(_645) ? 1.0 : min(_645, 1.0)));
    float _328 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _329 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _344 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_328, _329, (log2((isnan(cbSceneParam._m0[77u].w) ? _252 : (isnan(_252) ? cbSceneParam._m0[77u].w : min(_252, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _346 = _344.x;
    float _347 = _344.y;
    float _348 = _344.z;
    float _349 = _344.w;
    float _434;
    float _436;
    float _438;
    float _440;
    if (_252 > cbSceneParam._m0[78u].w)
    {
        float _395 = isnan(_252) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _252 : min(cbSceneParam._m0[80u].w, _252));
        float _396 = _395 / _252;
        float _407 = _396 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _270));
        float _408 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _270)) * _396;
        float _409 = (-0.0) - _408;
        float _411 = _396 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _270));
        float _413 = (cbSceneParam._m0[77u].w * _409) / _395;
        float _414 = _413 + cbSceneParam._m0[79u].w;
        float _415 = cbSceneParam._m0[79u].w - _408;
        float _421 = sqrt(((_407 * _407) + (_408 * _408)) + (_411 * _411));
        float _424 = (1.0 - (cbSceneParam._m0[77u].w / _395)) * _421;
        float _430 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _432 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _551;
        if (abs((_409 - _413) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _551 = ((((_414 > 0.0) ? exp2(_430 * _414) : (2.0 - exp2(_432 * _414))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _424;
        }
        else
        {
            float _506 = 1.0 / cbSceneParam._m0[80u].x;
            float _507 = isnan(_415) ? _414 : (isnan(_414) ? _415 : max(_414, _415));
            float _508 = isnan(_415) ? _414 : (isnan(_414) ? _415 : min(_414, _415));
            float _517 = isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : min(_507, 0.0));
            float _518 = isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : min(_508, 0.0));
            _551 = ((abs(_421 / _409) * cbSceneParam._m0[80u].y) * ((((_517 - _518) * 2.0) - ((exp2(_430 * (isnan(0.0) ? _507 : (isnan(_507) ? 0.0 : max(_507, 0.0)))) - exp2(_430 * (isnan(0.0) ? _508 : (isnan(_508) ? 0.0 : max(_508, 0.0))))) * _506)) - ((exp2(_432 * _517) - exp2(_432 * _518)) * _506))) + (_424 * cbSceneParam._m0[80u].z);
        }
        vec4 _553 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_328, _329, 1.0), 0.0);
        float _562 = exp2((_551 * (-1.44269502162933349609375)) * (1.0 - _553.w));
        float _563 = log2(_562);
        float _579 = log2(_349);
        _434 = (exp2(_579 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_563 * cbSceneParam._m0[78u].x)) * _553.x) / cbSceneParam._m0[78u].x)) + _346;
        _436 = (exp2(_579 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_563 * cbSceneParam._m0[78u].y)) * _553.y) / cbSceneParam._m0[78u].y)) + _347;
        _438 = (exp2(_579 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_563 * cbSceneParam._m0[78u].z)) * _553.z) / cbSceneParam._m0[78u].z)) + _348;
        _440 = _562 * _349;
    }
    else
    {
        _434 = _346;
        _436 = _347;
        _438 = _348;
        _440 = _349;
    }
    bool _589;
    vec4 _450;
    vec4 _473;
    float _475;
    float _479;
    float _480;
    float _481;
    float _482;
    bool _493;
    for (;;)
    {
        _450 = cbMatDynParam._m0[0u];
        float _452 = roundEven(_450.y);
        bool _453 = _452 == 3.0;
        float _454 = log2(_440);
        float _461 = exp2(_454 * cbSceneParam._m0[78u].x) * _314;
        float _462 = exp2(_454 * cbSceneParam._m0[78u].y) * _315;
        float _463 = exp2(_454 * cbSceneParam._m0[78u].z) * _316;
        float _470 = _280 + (-0.5);
        _473 = cbMtdParam._m0[1u];
        _475 = _473.y * _470;
        float _478 = (_452 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _479 = _478 * (_453 ? _461 : (_461 + (cbSceneParam._m0[72u].w * _434)));
        _480 = _478 * (_453 ? _462 : (_462 + (cbSceneParam._m0[72u].w * _436)));
        _481 = _478 * (_453 ? _463 : (_463 + (cbSceneParam._m0[72u].w * _438)));
        _482 = _470 * 0.999000012874603271484375;
        _493 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_493)
        {
            if ((cbInstanceData._m0[_300 + 7u].x + _482) < 0.5)
            {
                _589 = true;
                break;
            }
        }
        uint _543 = _301 + uint(_450.w);
        if ((cbInstanceData._m0[_543].w < 1.0) && ((cbInstanceData._m0[_543].w + _482) < 0.5))
        {
            _589 = true;
            break;
        }
        if ((_475 + _155) < _473.x)
        {
            _589 = true;
            break;
        }
        _589 = false;
        break;
    }
    float _597;
    if (_589)
    {
        discard_state = true;
        _597 = 0.0;
    }
    else
    {
        _597 = _322;
    }
    SV_Target.x = _479;
    SV_Target.y = _480;
    SV_Target.z = _481;
    SV_Target.w = _597;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _322;
    discard_exit();
}


