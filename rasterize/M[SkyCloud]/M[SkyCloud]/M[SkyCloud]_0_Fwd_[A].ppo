#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud_snp_0_Texture2D_0;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _539;
float _540;
float _541;
float _542;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _132 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_0, SS_DiffuseMap), vec2((cbTextureTilingScale._m0[0u].x * (cbMtdParam._m0[15u].x + TEXCOORD_1.x)) + cbTextureTilingScale._m0[0u].z, ((cbMtdParam._m0[15u].y + TEXCOORD_1.y) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _138 = _132.w;
    float _139 = _132.x * cbMtdParam._m0[9u].x;
    float _140 = _132.y * cbMtdParam._m0[9u].y;
    float _141 = _132.z * cbMtdParam._m0[9u].z;
    float _147 = (_138 * TEXCOORD_4.w) * cbMtdParam._m0[13u].y;
    float _551 = isnan(0.0) ? _147 : (isnan(_147) ? 0.0 : max(_147, 0.0));
    float _169 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _188 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _196 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _198 = _196.w;
    uint _218 = uint(roundEven(NORMAL.w)) * 13u;
    uint _219 = _218 + 9u;
    uint _220 = _219 + uint(cbMatDynParam._m0[0u].w);
    float _226 = (cbMtdParam._m0[0u].x * (isnan(0.0) ? _139 : (isnan(_139) ? 0.0 : max(_139, 0.0)))) * cbInstanceData._m0[_220].x;
    float _227 = (cbMtdParam._m0[0u].y * (isnan(0.0) ? _140 : (isnan(_140) ? 0.0 : max(_140, 0.0)))) * cbInstanceData._m0[_220].y;
    float _228 = (cbMtdParam._m0[0u].z * (isnan(0.0) ? _141 : (isnan(_141) ? 0.0 : max(_141, 0.0)))) * cbInstanceData._m0[_220].z;
    float _229 = isnan(0.0) ? _226 : (isnan(_226) ? 0.0 : max(_226, 0.0));
    float _230 = isnan(0.0) ? _227 : (isnan(_227) ? 0.0 : max(_227, 0.0));
    float _231 = isnan(0.0) ? _228 : (isnan(_228) ? 0.0 : max(_228, 0.0));
    float _237 = cbInstanceData._m0[_218 + 6u].w * (isnan(1.0) ? _551 : (isnan(_551) ? 1.0 : min(_551, 1.0)));
    float _243 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _244 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _259 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_243, _244, (log2((isnan(cbSceneParam._m0[77u].w) ? _169 : (isnan(_169) ? cbSceneParam._m0[77u].w : min(_169, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _261 = _259.x;
    float _262 = _259.y;
    float _263 = _259.z;
    float _264 = _259.w;
    float _349;
    float _351;
    float _353;
    float _355;
    if (_169 > cbSceneParam._m0[78u].w)
    {
        float _310 = isnan(_169) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _169 : min(cbSceneParam._m0[80u].w, _169));
        float _311 = _310 / _169;
        float _322 = _311 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _188));
        float _323 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _188)) * _311;
        float _324 = (-0.0) - _323;
        float _326 = _311 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _188));
        float _328 = (cbSceneParam._m0[77u].w * _324) / _310;
        float _329 = _328 + cbSceneParam._m0[79u].w;
        float _330 = cbSceneParam._m0[79u].w - _323;
        float _336 = sqrt(((_322 * _322) + (_323 * _323)) + (_326 * _326));
        float _339 = (1.0 - (cbSceneParam._m0[77u].w / _310)) * _336;
        float _345 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _347 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _468;
        if (abs((_324 - _328) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _468 = ((((_329 > 0.0) ? exp2(_345 * _329) : (2.0 - exp2(_347 * _329))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _339;
        }
        else
        {
            float _423 = 1.0 / cbSceneParam._m0[80u].x;
            float _424 = isnan(_330) ? _329 : (isnan(_329) ? _330 : max(_329, _330));
            float _425 = isnan(_330) ? _329 : (isnan(_329) ? _330 : min(_329, _330));
            float _434 = isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : min(_424, 0.0));
            float _435 = isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : min(_425, 0.0));
            _468 = ((abs(_336 / _324) * cbSceneParam._m0[80u].y) * ((((_434 - _435) * 2.0) - ((exp2(_345 * (isnan(0.0) ? _424 : (isnan(_424) ? 0.0 : max(_424, 0.0)))) - exp2(_345 * (isnan(0.0) ? _425 : (isnan(_425) ? 0.0 : max(_425, 0.0))))) * _423)) - ((exp2(_347 * _434) - exp2(_347 * _435)) * _423))) + (_339 * cbSceneParam._m0[80u].z);
        }
        vec4 _470 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_243, _244, 1.0), 0.0);
        float _479 = exp2((_468 * (-1.44269502162933349609375)) * (1.0 - _470.w));
        float _480 = log2(_479);
        float _496 = log2(_264);
        _349 = (exp2(_496 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_480 * cbSceneParam._m0[78u].x)) * _470.x) / cbSceneParam._m0[78u].x)) + _261;
        _351 = (exp2(_496 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_480 * cbSceneParam._m0[78u].y)) * _470.y) / cbSceneParam._m0[78u].y)) + _262;
        _353 = (exp2(_496 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_480 * cbSceneParam._m0[78u].z)) * _470.z) / cbSceneParam._m0[78u].z)) + _263;
        _355 = _479 * _264;
    }
    else
    {
        _349 = _261;
        _351 = _262;
        _353 = _263;
        _355 = _264;
    }
    bool _506;
    vec4 _365;
    vec4 _389;
    float _391;
    float _396;
    float _397;
    float _398;
    float _399;
    bool _410;
    for (;;)
    {
        _365 = cbMatDynParam._m0[0u];
        float _367 = roundEven(_365.y);
        bool _368 = _367 == 3.0;
        float _370 = log2(_355);
        float _377 = exp2(_370 * cbSceneParam._m0[78u].x) * _229;
        float _378 = exp2(_370 * cbSceneParam._m0[78u].y) * _230;
        float _379 = exp2(_370 * cbSceneParam._m0[78u].z) * _231;
        float _386 = _198 + (-0.5);
        _389 = cbMtdParam._m0[1u];
        _391 = _389.y * _386;
        float _395 = (_367 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _396 = _395 * (_368 ? _377 : (_377 + (cbSceneParam._m0[72u].w * _349)));
        _397 = _395 * (_368 ? _378 : (_378 + (cbSceneParam._m0[72u].w * _351)));
        _398 = _395 * (_368 ? _379 : (_379 + (cbSceneParam._m0[72u].w * _353)));
        _399 = _386 * 0.999000012874603271484375;
        _410 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_410)
        {
            if ((cbInstanceData._m0[_218 + 7u].x + _399) < 0.5)
            {
                _506 = true;
                break;
            }
        }
        uint _460 = _219 + uint(_365.w);
        if ((cbInstanceData._m0[_460].w < 1.0) && ((cbInstanceData._m0[_460].w + _399) < 0.5))
        {
            _506 = true;
            break;
        }
        if ((_391 + _138) < _389.x)
        {
            _506 = true;
            break;
        }
        _506 = false;
        break;
    }
    float _514;
    if (_506)
    {
        discard_state = true;
        _514 = 0.0;
    }
    else
    {
        _514 = _237;
    }
    SV_Target.x = _396;
    SV_Target.y = _397;
    SV_Target.z = _398;
    SV_Target.w = _514;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _237;
    discard_exit();
}


