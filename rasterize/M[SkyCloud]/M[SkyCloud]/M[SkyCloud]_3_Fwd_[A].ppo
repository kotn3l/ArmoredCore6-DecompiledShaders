#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[19];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 0) uniform texture2D M_SkyCloud_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_SkyCloud_snp_0_Texture2D_1;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD_1;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;
bool discard_state;

float _643;
float _644;
float _645;
float _646;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    vec4 _164 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_0, SS_DiffuseMap), vec2((((cbMtdParam._m0[15u].x + TEXCOORD_1.x) + ((cbMtdParam._m0[14u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[12u].x)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMtdParam._m0[15u].y + TEXCOORD_1.y) + ((cbMtdParam._m0[14u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[12u].x)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _170 = _164.w;
    float _171 = _164.x * cbMtdParam._m0[9u].x;
    float _172 = _164.y * cbMtdParam._m0[9u].y;
    float _173 = _164.z * cbMtdParam._m0[9u].z;
    float _179 = (_170 * TEXCOORD_4.w) * cbMtdParam._m0[13u].y;
    float _195 = abs((fract(cbMtdParam._m0[13u].z * cbPerFrame._m0[22u].x) * 2.0) + (-1.0));
    float _655 = isnan(0.0) ? _195 : (isnan(_195) ? 0.0 : max(_195, 0.0));
    float _197 = isnan(1.0) ? _655 : (isnan(_655) ? 1.0 : min(_655, 1.0));
    float _205 = (((_197 * _197) * (3.0 - (_197 * 2.0))) * cbMtdParam._m0[13u].w) - cbMtdParam._m0[12u].y;
    vec4 _240 = texture(sampler2D(M_SkyCloud_snp_0_Texture2D_1, SS_DiffuseMap), vec2(((((cbMtdParam._m0[15u].z + TEXCOORD_1.x) + cbMtdParam._m0[16u].x) + ((cbMtdParam._m0[16u].z * cbPerFrame._m0[22u].x) * cbMtdParam._m0[14u].y)) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, ((((cbMtdParam._m0[15u].w + TEXCOORD_1.y) + cbMtdParam._m0[16u].y) + ((cbMtdParam._m0[16u].w * cbPerFrame._m0[22u].x) * cbMtdParam._m0[14u].y)) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _245 = (_205 * cbMtdParam._m0[10u].x) * _240.x;
    float _246 = (_205 * cbMtdParam._m0[10u].y) * _240.y;
    float _247 = (_205 * cbMtdParam._m0[10u].z) * _240.z;
    float _666 = isnan(0.0) ? _179 : (isnan(_179) ? 0.0 : max(_179, 0.0));
    float _273 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _291 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    vec4 _299 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _301 = _299.w;
    uint _321 = uint(roundEven(NORMAL.w)) * 13u;
    uint _322 = _321 + 9u;
    uint _323 = _322 + uint(cbMatDynParam._m0[0u].w);
    float _330 = cbInstanceData._m0[_323].x * ((_245 - (_245 * TEXCOORD_4.x)) + (cbMtdParam._m0[0u].x * (isnan(0.0) ? _171 : (isnan(_171) ? 0.0 : max(_171, 0.0)))));
    float _332 = cbInstanceData._m0[_323].y * ((_246 - (_246 * TEXCOORD_4.y)) + (cbMtdParam._m0[0u].y * (isnan(0.0) ? _172 : (isnan(_172) ? 0.0 : max(_172, 0.0)))));
    float _334 = cbInstanceData._m0[_323].z * ((_247 - (_247 * TEXCOORD_4.z)) + (cbMtdParam._m0[0u].z * (isnan(0.0) ? _173 : (isnan(_173) ? 0.0 : max(_173, 0.0)))));
    float _335 = isnan(0.0) ? _330 : (isnan(_330) ? 0.0 : max(_330, 0.0));
    float _336 = isnan(0.0) ? _332 : (isnan(_332) ? 0.0 : max(_332, 0.0));
    float _337 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _343 = cbInstanceData._m0[_321 + 6u].w * (isnan(1.0) ? _666 : (isnan(_666) ? 1.0 : min(_666, 1.0)));
    float _349 = (cbSceneParam._m0[85u].z * gl_FragCoord.x) / cbSceneParam._m0[86u].x;
    float _350 = (cbSceneParam._m0[85u].w * gl_FragCoord.y) / cbSceneParam._m0[86u].y;
    vec4 _365 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_349, _350, (log2((isnan(cbSceneParam._m0[77u].w) ? _273 : (isnan(_273) ? cbSceneParam._m0[77u].w : min(_273, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _367 = _365.x;
    float _368 = _365.y;
    float _369 = _365.z;
    float _370 = _365.w;
    float _455;
    float _457;
    float _459;
    float _461;
    if (_273 > cbSceneParam._m0[78u].w)
    {
        float _416 = isnan(_273) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _273 : min(cbSceneParam._m0[80u].w, _273));
        float _417 = _416 / _273;
        float _428 = _417 * (cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _291));
        float _429 = (cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _291)) * _417;
        float _430 = (-0.0) - _429;
        float _432 = _417 * (cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _291));
        float _434 = (cbSceneParam._m0[77u].w * _430) / _416;
        float _435 = _434 + cbSceneParam._m0[79u].w;
        float _436 = cbSceneParam._m0[79u].w - _429;
        float _442 = sqrt(((_428 * _428) + (_429 * _429)) + (_432 * _432));
        float _445 = (1.0 - (cbSceneParam._m0[77u].w / _416)) * _442;
        float _451 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _453 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _572;
        if (abs((_430 - _434) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _572 = ((((_435 > 0.0) ? exp2(_451 * _435) : (2.0 - exp2(_453 * _435))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _445;
        }
        else
        {
            float _527 = 1.0 / cbSceneParam._m0[80u].x;
            float _528 = isnan(_436) ? _435 : (isnan(_435) ? _436 : max(_435, _436));
            float _529 = isnan(_436) ? _435 : (isnan(_435) ? _436 : min(_435, _436));
            float _538 = isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : min(_528, 0.0));
            float _539 = isnan(0.0) ? _529 : (isnan(_529) ? 0.0 : min(_529, 0.0));
            _572 = ((abs(_442 / _430) * cbSceneParam._m0[80u].y) * ((((_538 - _539) * 2.0) - ((exp2(_451 * (isnan(0.0) ? _528 : (isnan(_528) ? 0.0 : max(_528, 0.0)))) - exp2(_451 * (isnan(0.0) ? _529 : (isnan(_529) ? 0.0 : max(_529, 0.0))))) * _527)) - ((exp2(_453 * _538) - exp2(_453 * _539)) * _527))) + (_445 * cbSceneParam._m0[80u].z);
        }
        vec4 _574 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_349, _350, 1.0), 0.0);
        float _583 = exp2((_572 * (-1.44269502162933349609375)) * (1.0 - _574.w));
        float _584 = log2(_583);
        float _600 = log2(_370);
        _455 = (exp2(_600 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_584 * cbSceneParam._m0[78u].x)) * _574.x) / cbSceneParam._m0[78u].x)) + _367;
        _457 = (exp2(_600 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_584 * cbSceneParam._m0[78u].y)) * _574.y) / cbSceneParam._m0[78u].y)) + _368;
        _459 = (exp2(_600 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_584 * cbSceneParam._m0[78u].z)) * _574.z) / cbSceneParam._m0[78u].z)) + _369;
        _461 = _583 * _370;
    }
    else
    {
        _455 = _367;
        _457 = _368;
        _459 = _369;
        _461 = _370;
    }
    bool _610;
    vec4 _471;
    vec4 _494;
    float _496;
    float _500;
    float _501;
    float _502;
    float _503;
    bool _514;
    for (;;)
    {
        _471 = cbMatDynParam._m0[0u];
        float _473 = roundEven(_471.y);
        bool _474 = _473 == 3.0;
        float _475 = log2(_461);
        float _482 = exp2(_475 * cbSceneParam._m0[78u].x) * _335;
        float _483 = exp2(_475 * cbSceneParam._m0[78u].y) * _336;
        float _484 = exp2(_475 * cbSceneParam._m0[78u].z) * _337;
        float _491 = _301 + (-0.5);
        _494 = cbMtdParam._m0[1u];
        _496 = _494.y * _491;
        float _499 = (_473 != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
        _500 = _499 * (_474 ? _482 : (_482 + (cbSceneParam._m0[72u].w * _455)));
        _501 = _499 * (_474 ? _483 : (_483 + (cbSceneParam._m0[72u].w * _457)));
        _502 = _499 * (_474 ? _484 : (_484 + (cbSceneParam._m0[72u].w * _459)));
        _503 = _491 * 0.999000012874603271484375;
        _514 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_514)
        {
            if ((cbInstanceData._m0[_321 + 7u].x + _503) < 0.5)
            {
                _610 = true;
                break;
            }
        }
        uint _564 = _322 + uint(_471.w);
        if ((cbInstanceData._m0[_564].w < 1.0) && ((cbInstanceData._m0[_564].w + _503) < 0.5))
        {
            _610 = true;
            break;
        }
        if ((_496 + _170) < _494.x)
        {
            _610 = true;
            break;
        }
        _610 = false;
        break;
    }
    float _618;
    if (_610)
    {
        discard_state = true;
        _618 = 0.0;
    }
    else
    {
        _618 = _343;
    }
    SV_Target.x = _500;
    SV_Target.y = _501;
    SV_Target.z = _502;
    SV_Target.w = _618;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = _343;
    discard_exit();
}


