#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[10];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2DArray P_ACParts_Marking_snp_0_Texture2DArray_0;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec3 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_5;
layout(location = 6) in vec4 TEXCOORD_6;
layout(location = 7) in vec3 TEXCOORD_7;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    float _103 = TEXCOORD.x * 16.0;
    vec4 _127 = texture(sampler2DArray(P_ACParts_Marking_snp_0_Texture2DArray_0, SS_ClampLinear), vec3((cbTextureTilingScale._m0[0u].x * fract(_103)) + cbTextureTilingScale._m0[0u].z, (cbTextureTilingScale._m0[0u].y * fract(TEXCOORD.y)) + cbTextureTilingScale._m0[0u].w, floor(cbMtdParam._m0[9u].z + _103)));
    float _129 = _127.w;
    uint _131 = uint(roundEven(NORMAL.w));
    float _145 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_5.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_5.z));
    float _187 = fma(TEXCOORD_5.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_5.x)));
    float _197 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_5.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_5.x))) / _187);
    float _198 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_5.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_5.x))) / _187);
    float _199 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_5.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_5.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_5.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_5.x))) / _187);
    vec4 _205 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _208 = _205.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _244 = sqrt(((_197 * _197) + (_198 * _198)) + (_199 * _199));
        float _251 = (cbMatDynParam._m0[5u].x * _244) + cbMatDynParam._m0[5u].y;
        float _340 = isnan(0.0) ? _251 : (isnan(_251) ? 0.0 : max(_251, 0.0));
        float _253 = isnan(1.0) ? _340 : (isnan(_340) ? 1.0 : min(_340, 1.0));
        float _257 = (cbMatDynParam._m0[5u].z * _244) + cbMatDynParam._m0[5u].w;
        float _351 = isnan(0.0) ? _257 : (isnan(_257) ? 0.0 : max(_257, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _351 : (isnan(_351) ? 1.0 : min(_351, 1.0))) - _253)) + _253) < ((_208 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _290;
    float _219;
    float _220;
    vec4 _224;
    float _226;
    float _227;
    bool _238;
    for (;;)
    {
        _219 = (TEXCOORD_5.x / TEXCOORD_5.w) - (TEXCOORD_6.x / TEXCOORD_6.w);
        _220 = (TEXCOORD_5.y / TEXCOORD_5.w) - (TEXCOORD_6.y / TEXCOORD_6.w);
        float _221 = _208 + (-0.5);
        _224 = cbMtdParam._m0[1u];
        _226 = _224.y * _221;
        _227 = _221 * 0.999000012874603271484375;
        _238 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_238)
        {
            if ((cbInstanceData._m0[(_131 * 13u) + 7u].x + _227) < 0.5)
            {
                _290 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _227) < 0.5))
        {
            _290 = true;
            break;
        }
        if ((_226 + _129) < _224.x)
        {
            _290 = true;
            break;
        }
        _290 = false;
        break;
    }
    if (_290)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _219) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _220) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _145 / (_145 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


