#version 460

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 5, std140) uniform cbObjMatrixUBO
{
    vec4 _m0[6];
} cbObjMatrix;

layout(set = 0, binding = 10, std140) uniform cbInstanceIdxParamUBO
{
    vec4 _m0[1];
} cbInstanceIdxParam;

layout(set = 0, binding = 11, std140) uniform cbTexScrollUBO
{
    vec4 _m0[4];
} cbTexScroll;

layout(set = 0, binding = 25) uniform usamplerBuffer g_InstanceIndexBuffer;

layout(location = 0) in vec3 POSITION;
layout(location = 1) in uvec4 NORMAL;
layout(location = 2) in uvec4 TANGENT;
layout(location = 3) in uvec4 BLENDINDICES;
layout(location = 4) in vec4 BLENDWEIGHT;
layout(location = 5) in vec4 COLOR_1;
layout(location = 6) in ivec4 TEXCOORD;
layout(location = 7) in vec4 TEXCOORD_1;
layout(location = 1) out vec4 POSITION_1;
layout(location = 2) out vec4 NORMAL_1;
layout(location = 3) out vec4 TANGENT_1;
layout(location = 4) out vec4 TEXCOORD_2;
layout(location = 5) out vec4 TEXCOORD_5;
layout(location = 6) out vec2 TEXCOORD_9;

void main()
{
    gl_Position.x = 0.0;
    gl_Position.y = 0.0;
    gl_Position.z = 0.0;
    gl_Position.w = 0.0;
    POSITION_1.x = 0.0;
    POSITION_1.y = 0.0;
    POSITION_1.z = 0.0;
    POSITION_1.w = 0.0;
    NORMAL_1.x = 0.0;
    NORMAL_1.y = 0.0;
    NORMAL_1.z = 0.0;
    NORMAL_1.w = 0.0;
    TANGENT_1.x = 0.0;
    TANGENT_1.y = 0.0;
    TANGENT_1.z = 0.0;
    TANGENT_1.w = 0.0;
    TEXCOORD_2.x = 0.0;
    TEXCOORD_2.y = 0.0;
    TEXCOORD_2.z = 0.0;
    TEXCOORD_2.w = 0.0;
    TEXCOORD_5.x = 0.0;
    TEXCOORD_5.y = 0.0;
    TEXCOORD_5.z = 0.0;
    TEXCOORD_5.w = 0.0;
    TEXCOORD_9.x = 0.0;
    TEXCOORD_9.y = 0.0;
    float _195 = (float(NORMAL.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _197 = (float(NORMAL.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _198 = (float(NORMAL.z) + (-127.0)) * 0.0078740157186985015869140625;
    float _207 = (float(TANGENT.x) + (-127.0)) * 0.0078740157186985015869140625;
    float _208 = (float(TANGENT.y) + (-127.0)) * 0.0078740157186985015869140625;
    float _209 = (float(TANGENT.z) + (-127.0)) * 0.0078740157186985015869140625;
    uint _219 = floatBitsToUint(cbInstanceIdxParam._m0[0u]).x + (uint(gl_InstanceIndex) - uint(gl_BaseInstance));
    uvec4 _221 = texelFetch(g_InstanceIndexBuffer, int(_219));
    uint _222 = _221.x;
    precise float _223 = dot(vec4(1.0), vec4(BLENDWEIGHT.x, BLENDWEIGHT.y, BLENDWEIGHT.z, BLENDWEIGHT.w));
    float _228 = isnan(_223) ? 0.001000000047497451305389404296875 : (isnan(0.001000000047497451305389404296875) ? _223 : max(0.001000000047497451305389404296875, _223));
    precise float _230 = BLENDWEIGHT.x / _228;
    precise float _231 = BLENDWEIGHT.y / _228;
    precise float _232 = BLENDWEIGHT.z / _228;
    precise float _233 = BLENDWEIGHT.w / _228;
    uvec4 _240 = floatBitsToUint(cbInstanceData._m0[(_222 * 13u) + 4u]);
    uint _241 = _240.x;
    uint _243 = (_241 + uint(float(BLENDINDICES.x))) * 3u;
    uint _250 = _243 + 1u;
    uint _257 = _243 + 2u;
    precise float _264 = _230 * cbObjMatrix._m0[_243].x;
    precise float _265 = _230 * cbObjMatrix._m0[_250].x;
    precise float _266 = _230 * cbObjMatrix._m0[_257].x;
    precise float _267 = _230 * cbObjMatrix._m0[_243].y;
    precise float _268 = _230 * cbObjMatrix._m0[_250].y;
    precise float _269 = _230 * cbObjMatrix._m0[_257].y;
    precise float _270 = _230 * cbObjMatrix._m0[_243].z;
    precise float _271 = _230 * cbObjMatrix._m0[_250].z;
    precise float _272 = _230 * cbObjMatrix._m0[_257].z;
    precise float _273 = _230 * cbObjMatrix._m0[_243].w;
    precise float _274 = _230 * cbObjMatrix._m0[_250].w;
    precise float _275 = _230 * cbObjMatrix._m0[_257].w;
    uint _278 = (_241 + uint(float(BLENDINDICES.y))) * 3u;
    uint _285 = _278 + 1u;
    uint _292 = _278 + 2u;
    precise float _299 = _231 * cbObjMatrix._m0[_278].x;
    precise float _300 = _231 * cbObjMatrix._m0[_285].x;
    precise float _301 = _231 * cbObjMatrix._m0[_292].x;
    precise float _302 = _231 * cbObjMatrix._m0[_278].y;
    precise float _303 = _231 * cbObjMatrix._m0[_285].y;
    precise float _304 = _231 * cbObjMatrix._m0[_292].y;
    precise float _305 = _231 * cbObjMatrix._m0[_278].z;
    precise float _306 = _231 * cbObjMatrix._m0[_285].z;
    precise float _307 = _231 * cbObjMatrix._m0[_292].z;
    precise float _308 = _231 * cbObjMatrix._m0[_278].w;
    precise float _309 = _231 * cbObjMatrix._m0[_285].w;
    precise float _310 = _231 * cbObjMatrix._m0[_292].w;
    precise float _311 = _264 + _299;
    precise float _312 = _265 + _300;
    precise float _313 = _266 + _301;
    precise float _314 = _267 + _302;
    precise float _315 = _268 + _303;
    precise float _316 = _269 + _304;
    precise float _317 = _270 + _305;
    precise float _318 = _271 + _306;
    precise float _319 = _272 + _307;
    precise float _320 = _273 + _308;
    precise float _321 = _274 + _309;
    precise float _322 = _275 + _310;
    uint _325 = (_241 + uint(float(BLENDINDICES.z))) * 3u;
    uint _332 = _325 + 1u;
    uint _339 = _325 + 2u;
    precise float _346 = _232 * cbObjMatrix._m0[_325].x;
    precise float _347 = _232 * cbObjMatrix._m0[_332].x;
    precise float _348 = _232 * cbObjMatrix._m0[_339].x;
    precise float _349 = _232 * cbObjMatrix._m0[_325].y;
    precise float _350 = _232 * cbObjMatrix._m0[_332].y;
    precise float _351 = _232 * cbObjMatrix._m0[_339].y;
    precise float _352 = _232 * cbObjMatrix._m0[_325].z;
    precise float _353 = _232 * cbObjMatrix._m0[_332].z;
    precise float _354 = _232 * cbObjMatrix._m0[_339].z;
    precise float _355 = _232 * cbObjMatrix._m0[_325].w;
    precise float _356 = _232 * cbObjMatrix._m0[_332].w;
    precise float _357 = _232 * cbObjMatrix._m0[_339].w;
    precise float _358 = _311 + _346;
    precise float _359 = _312 + _347;
    precise float _360 = _313 + _348;
    precise float _361 = _314 + _349;
    precise float _362 = _315 + _350;
    precise float _363 = _316 + _351;
    precise float _364 = _317 + _352;
    precise float _365 = _318 + _353;
    precise float _366 = _319 + _354;
    precise float _367 = _320 + _355;
    precise float _368 = _321 + _356;
    precise float _369 = _322 + _357;
    uint _372 = (_241 + uint(float(BLENDINDICES.w))) * 3u;
    uint _379 = _372 + 1u;
    uint _386 = _372 + 2u;
    precise float _393 = _233 * cbObjMatrix._m0[_372].x;
    precise float _394 = _233 * cbObjMatrix._m0[_379].x;
    precise float _395 = _233 * cbObjMatrix._m0[_386].x;
    precise float _396 = _233 * cbObjMatrix._m0[_372].y;
    precise float _397 = _233 * cbObjMatrix._m0[_379].y;
    precise float _398 = _233 * cbObjMatrix._m0[_386].y;
    precise float _399 = _233 * cbObjMatrix._m0[_372].z;
    precise float _400 = _233 * cbObjMatrix._m0[_379].z;
    precise float _401 = _233 * cbObjMatrix._m0[_386].z;
    precise float _402 = _233 * cbObjMatrix._m0[_372].w;
    precise float _403 = _233 * cbObjMatrix._m0[_379].w;
    precise float _404 = _233 * cbObjMatrix._m0[_386].w;
    precise float _405 = _358 + _393;
    precise float _406 = _359 + _394;
    precise float _407 = _360 + _395;
    precise float _408 = _361 + _396;
    precise float _409 = _362 + _397;
    precise float _410 = _363 + _398;
    precise float _411 = _364 + _399;
    precise float _412 = _365 + _400;
    precise float _413 = _366 + _401;
    precise float _414 = _367 + _402;
    precise float _415 = _368 + _403;
    precise float _416 = _369 + _404;
    precise float _417 = POSITION.x * _405;
    precise float _418 = POSITION.y * _408;
    precise float _419 = _418 + _417;
    precise float _420 = POSITION.z * _411;
    precise float _421 = _420 + _419;
    precise float _422 = 1.0 * _414;
    precise float _423 = _422 + _421;
    precise float _424 = POSITION.x * _406;
    precise float _425 = POSITION.y * _409;
    precise float _426 = _425 + _424;
    precise float _427 = POSITION.z * _412;
    precise float _428 = _427 + _426;
    precise float _429 = 1.0 * _415;
    precise float _430 = _429 + _428;
    precise float _431 = POSITION.x * _407;
    precise float _432 = POSITION.y * _410;
    precise float _433 = _432 + _431;
    precise float _434 = POSITION.z * _413;
    precise float _435 = _434 + _433;
    precise float _436 = 1.0 * _416;
    precise float _437 = _436 + _435;
    precise float _462 = _423 - cbSceneParam._m0[3u].x;
    precise float _463 = _430 - cbSceneParam._m0[3u].y;
    precise float _464 = _437 - cbSceneParam._m0[3u].z;
    precise float _492 = _462 * cbSceneParam._m0[24u].x;
    precise float _493 = _463 * cbSceneParam._m0[24u].y;
    precise float _494 = _493 + _492;
    precise float _495 = _464 * cbSceneParam._m0[24u].z;
    precise float _496 = _495 + _494;
    precise float _497 = 1.0 * cbSceneParam._m0[24u].w;
    precise float _498 = _497 + _496;
    precise float _499 = _462 * cbSceneParam._m0[25u].x;
    precise float _500 = _463 * cbSceneParam._m0[25u].y;
    precise float _501 = _500 + _499;
    precise float _502 = _464 * cbSceneParam._m0[25u].z;
    precise float _503 = _502 + _501;
    precise float _504 = 1.0 * cbSceneParam._m0[25u].w;
    precise float _505 = _504 + _503;
    precise float _506 = _462 * cbSceneParam._m0[26u].x;
    precise float _507 = _463 * cbSceneParam._m0[26u].y;
    precise float _508 = _507 + _506;
    precise float _509 = _464 * cbSceneParam._m0[26u].z;
    precise float _510 = _509 + _508;
    precise float _511 = 1.0 * cbSceneParam._m0[26u].w;
    precise float _512 = _511 + _510;
    precise float _513 = _462 * cbSceneParam._m0[27u].x;
    precise float _514 = _463 * cbSceneParam._m0[27u].y;
    precise float _515 = _514 + _513;
    precise float _516 = _464 * cbSceneParam._m0[27u].z;
    precise float _517 = _516 + _515;
    precise float _518 = 1.0 * cbSceneParam._m0[27u].w;
    precise float _519 = _518 + _517;
    gl_Position.x = _498;
    gl_Position.y = _505;
    gl_Position.z = _512;
    gl_Position.w = _519;
    POSITION_1.x = _498;
    POSITION_1.y = _505;
    POSITION_1.z = _512;
    POSITION_1.w = _519;
    NORMAL_1.x = fma(_198, _411, fma(_197, _408, _405 * _195));
    NORMAL_1.y = fma(_198, _412, fma(_197, _409, _406 * _195));
    NORMAL_1.z = fma(_198, _413, fma(_197, _410, _407 * _195));
    NORMAL_1.w = float(_222);
    TANGENT_1.x = fma(_209, _411, fma(_208, _408, _405 * _207));
    TANGENT_1.y = fma(_209, _412, fma(_208, _409, _406 * _207));
    TANGENT_1.z = fma(_209, _413, fma(_208, _410, _407 * _207));
    TANGENT_1.w = (float(TANGENT.w) + (-127.0)) * 0.0078740157186985015869140625;
    TEXCOORD_2.x = ((float(int(uint(TEXCOORD.x))) * 0.00048828125) * cbTexScroll._m0[0u].x) + cbTexScroll._m0[0u].z;
    TEXCOORD_2.y = ((float(int(uint(TEXCOORD.y))) * 0.00048828125) * cbTexScroll._m0[0u].y) + cbTexScroll._m0[0u].w;
    TEXCOORD_2.z = ((float(int(uint(TEXCOORD.z))) * 0.00048828125) * cbTexScroll._m0[1u].x) + cbTexScroll._m0[1u].z;
    TEXCOORD_2.w = ((float(int(uint(TEXCOORD.w))) * 0.00048828125) * cbTexScroll._m0[1u].y) + cbTexScroll._m0[1u].w;
    TEXCOORD_5.x = TEXCOORD_1.x;
    TEXCOORD_5.y = TEXCOORD_1.y;
    TEXCOORD_5.z = TEXCOORD_1.z;
    TEXCOORD_5.w = COLOR_1.x;
    TEXCOORD_9.x = _512;
    TEXCOORD_9.y = _519;
}


