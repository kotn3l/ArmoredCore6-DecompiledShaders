#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[9];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[20];
} cbMatDynParam;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 38) uniform texture2D g_DitherTexture;
layout(set = 0, binding = 0) uniform texture2D Nolight_OpacityBlend_snp_0_Texture2D_4;
layout(set = 0, binding = 1) uniform texture2D Nolight_OpacityBlend_snp_0_Texture2D_5;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 6) uniform sampler SS_WrapPoint;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_4;
layout(location = 6) in vec4 TEXCOORD_10;
layout(location = 7) in vec4 TEXCOORD_11;
layout(location = 8) in vec3 TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
bool discard_state;

void discard_exit()
{
    if (discard_state)
    {
        discard;
    }
}

void main()
{
    discard_state = false;
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    vec4 _141 = texture(sampler2D(Nolight_OpacityBlend_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((cbMatDynParam._m0[18u].z * cbPerFrame._m0[22u].x) + TEXCOORD.z) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((cbMatDynParam._m0[18u].w * cbPerFrame._m0[22u].x) + TEXCOORD.w) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _162 = texture(sampler2D(Nolight_OpacityBlend_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((cbMatDynParam._m0[18u].x * cbPerFrame._m0[22u].x) + TEXCOORD_4.x) * cbTextureTilingScale._m0[1u].x) + cbTextureTilingScale._m0[1u].z, (((cbMatDynParam._m0[18u].y * cbPerFrame._m0[22u].x) + TEXCOORD_4.y) * cbTextureTilingScale._m0[1u].y) + cbTextureTilingScale._m0[1u].w));
    float _166 = (_141.x * TEXCOORD_4.z) * _162.x;
    uint _169 = uint(roundEven(NORMAL.w));
    float _183 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? TEXCOORD_10.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * TEXCOORD_10.z));
    float _226 = fma(TEXCOORD_10.w, cbSceneParam._m0[11u].w, fma(TEXCOORD_10.z, cbSceneParam._m0[11u].z, fma(TEXCOORD_10.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * TEXCOORD_10.x)));
    float _236 = cbSceneParam._m0[71u].x - (fma(TEXCOORD_10.w, cbSceneParam._m0[8u].w, fma(TEXCOORD_10.z, cbSceneParam._m0[8u].z, fma(TEXCOORD_10.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * TEXCOORD_10.x))) / _226);
    float _237 = cbSceneParam._m0[71u].y - (fma(TEXCOORD_10.w, cbSceneParam._m0[9u].w, fma(TEXCOORD_10.z, cbSceneParam._m0[9u].z, fma(TEXCOORD_10.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * TEXCOORD_10.x))) / _226);
    float _238 = cbSceneParam._m0[71u].z - (fma(TEXCOORD_10.w, cbSceneParam._m0[10u].w, fma(TEXCOORD_10.z, cbSceneParam._m0[10u].z, fma(TEXCOORD_10.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * TEXCOORD_10.x))) / _226);
    vec4 _243 = texture(sampler2D(g_DitherTexture, SS_WrapPoint), vec2(gl_FragCoord.x * 0.125, gl_FragCoord.y * 0.125));
    float _245 = _243.w;
    if (!(floatBitsToUint(cbMatDynParam._m0[6u]).x == 0u))
    {
        float _281 = sqrt(((_236 * _236) + (_237 * _237)) + (_238 * _238));
        float _288 = (cbMatDynParam._m0[5u].x * _281) + cbMatDynParam._m0[5u].y;
        float _377 = isnan(0.0) ? _288 : (isnan(_288) ? 0.0 : max(_288, 0.0));
        float _290 = isnan(1.0) ? _377 : (isnan(_377) ? 1.0 : min(_377, 1.0));
        float _294 = (cbMatDynParam._m0[5u].z * _281) + cbMatDynParam._m0[5u].w;
        float _388 = isnan(0.0) ? _294 : (isnan(_294) ? 0.0 : max(_294, 0.0));
        if (((cbMatDynParam._m0[6u].y * ((isnan(1.0) ? _388 : (isnan(_388) ? 1.0 : min(_388, 1.0))) - _290)) + _290) < ((_245 * 0.9900000095367431640625) + 0.00999999977648258209228515625))
        {
            discard_state = true;
        }
    }
    bool _327;
    float _256;
    float _257;
    vec4 _261;
    float _263;
    float _264;
    bool _275;
    for (;;)
    {
        _256 = (TEXCOORD_10.x / TEXCOORD_10.w) - (TEXCOORD_11.x / TEXCOORD_11.w);
        _257 = (TEXCOORD_10.y / TEXCOORD_10.w) - (TEXCOORD_11.y / TEXCOORD_11.w);
        float _258 = _245 + (-0.5);
        _261 = cbMtdParam._m0[1u];
        _263 = _261.y * _258;
        _264 = _258 * 0.999000012874603271484375;
        _275 = (cbModelParam._m0[2u].x > 0.0) && (floatBitsToUint(cbMatDynParam._m0[0u]).x != 0u);
        if (_275)
        {
            if ((cbInstanceData._m0[(_169 * 13u) + 7u].x + _264) < 0.5)
            {
                _327 = true;
                break;
            }
        }
        if ((cbInstanceData._m0[6u].w < 1.0) && ((cbInstanceData._m0[6u].w + _264) < 0.5))
        {
            _327 = true;
            break;
        }
        if ((_263 + _166) < _261.x)
        {
            _327 = true;
            break;
        }
        _327 = false;
        break;
    }
    if (_327)
    {
        discard_state = true;
    }
    SV_Target.x = ((cbModelParam._m0[0u].x * _256) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.y = ((cbModelParam._m0[0u].y * _257) * cbSceneParam._m0[70u].x) + cbSceneParam._m0[70u].y;
    SV_Target.z = _183 / (_183 + 10.0);
    SV_Target.w = 1.0;
    discard_exit();
}


