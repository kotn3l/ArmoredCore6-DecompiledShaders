#version 460

layout(set = 0, binding = 1, std140) uniform cbTextureTilingScaleUBO
{
    vec4 _m0[25];
} cbTextureTilingScale;

layout(set = 0, binding = 3, std140) uniform cbMtdParamUBO
{
    vec4 _m0[39];
} cbMtdParam;

layout(set = 0, binding = 8, std140) uniform cbSceneParamUBO
{
    vec4 _m0[128];
} cbSceneParam;

layout(set = 0, binding = 9, std140) uniform cbPerFrameUBO
{
    vec4 _m0[23];
} cbPerFrame;

layout(set = 0, binding = 4, std140) uniform cbInstanceDataUBO
{
    vec4 _m0[26];
} cbInstanceData;

layout(set = 0, binding = 2, std140) uniform cbMatDynParamUBO
{
    vec4 _m0[17];
} cbMatDynParam;

layout(set = 0, binding = 5, std140) uniform cbLightUBO
{
    vec4 _m0[28];
} cbLight;

layout(set = 0, binding = 7, std140) uniform cbModelParamUBO
{
    vec4 _m0[41];
} cbModelParam;

layout(set = 0, binding = 30) uniform textureCube g_IBLTexture;
layout(set = 0, binding = 31) uniform textureCube g_IBLTexture2;
layout(set = 0, binding = 33) uniform texture2D g_SSAOTexture;
layout(set = 0, binding = 55) uniform texture2D g_RefractionTexture;
layout(set = 0, binding = 57) uniform texture2D g_WaterSimulationNormalTexture;
layout(set = 0, binding = 47) uniform texture3D g_VolumeFog0;
layout(set = 0, binding = 56) uniform texture2D g_DepthTexture;
layout(set = 0, binding = 26) uniform texture3D g_IrradianceVolumeX;
layout(set = 0, binding = 27) uniform texture3D g_IrradianceVolumeY;
layout(set = 0, binding = 28) uniform texture3D g_IrradianceVolumeZ;
layout(set = 0, binding = 29) uniform texture3D g_IrradianceVolumeW;
layout(set = 0, binding = 34) uniform texture3D g_IrradianceVolume2X;
layout(set = 0, binding = 35) uniform texture3D g_IrradianceVolume2Y;
layout(set = 0, binding = 36) uniform texture3D g_IrradianceVolume2Z;
layout(set = 0, binding = 37) uniform texture3D g_IrradianceVolume2W;
layout(set = 0, binding = 61) uniform usamplerBuffer g_PointLightRenderingBuffer;
layout(set = 0, binding = 62) uniform usamplerBuffer g_SpotLightRenderingBuffer;
layout(set = 0, binding = 59) uniform usamplerBuffer g_lightClassification;
layout(set = 0, binding = 60) uniform usamplerBuffer g_lightClusterGridBuffer;
layout(set = 0, binding = 0) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0;
layout(set = 0, binding = 1) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1;
layout(set = 0, binding = 2) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2;
layout(set = 0, binding = 3) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3;
layout(set = 0, binding = 4) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4;
layout(set = 0, binding = 5) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5;
layout(set = 0, binding = 6) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8;
layout(set = 0, binding = 7) uniform texture2D M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9;
layout(set = 0, binding = 0) uniform sampler SS_DiffuseMap;
layout(set = 0, binding = 2) uniform sampler SS_BumpMap;
layout(set = 0, binding = 7) uniform sampler SS_ClampPoint;
layout(set = 0, binding = 8) uniform sampler SS_WrapLinear;
layout(set = 0, binding = 9) uniform sampler SS_ClampLinear;

layout(location = 1) in vec4 POSITION_1;
layout(location = 2) in vec4 NORMAL;
layout(location = 3) in vec4 TANGENT;
layout(location = 4) in vec4 TEXCOORD;
layout(location = 5) in vec4 TEXCOORD_3;
layout(location = 6) in vec4 TEXCOORD_7;
layout(location = 7) in float TEXCOORD_12;
layout(location = 0) out vec4 SV_Target;
layout(location = 1) out vec4 SV_Target_1;

float _1555;
uint _2951;
uint _2952;
uint _2953;
uint _3233;
uint _3234;
uint _3235;

void main()
{
    SV_Target.x = 0.0;
    SV_Target.y = 0.0;
    SV_Target.z = 0.0;
    SV_Target.w = 0.0;
    SV_Target_1.x = 0.0;
    SV_Target_1.y = 0.0;
    SV_Target_1.z = 0.0;
    SV_Target_1.w = 0.0;
    float _216 = ((NORMAL.y * TANGENT.z) - (NORMAL.z * TANGENT.y)) * TANGENT.w;
    float _217 = ((NORMAL.z * TANGENT.x) - (NORMAL.x * TANGENT.z)) * TANGENT.w;
    float _218 = ((NORMAL.x * TANGENT.y) - (NORMAL.y * TANGENT.x)) * TANGENT.w;
    float _224 = inversesqrt(dot(vec3(_216, _217, _218), vec3(_216, _217, _218)));
    float _225 = _224 * _216;
    float _226 = _224 * _217;
    float _227 = _224 * _218;
    float _231 = inversesqrt(dot(vec3(NORMAL.x, NORMAL.y, NORMAL.z), vec3(NORMAL.x, NORMAL.y, NORMAL.z)));
    float _232 = _231 * NORMAL.x;
    float _233 = _231 * NORMAL.y;
    float _234 = _231 * NORMAL.z;
    float _238 = inversesqrt(dot(vec3(TANGENT.x, TANGENT.y, TANGENT.z), vec3(TANGENT.x, TANGENT.y, TANGENT.z)));
    float _239 = _238 * TANGENT.x;
    float _240 = _238 * TANGENT.y;
    float _241 = _238 * TANGENT.z;
    float _285 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _295 = cbSceneParam._m0[71u].x - (fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x))) / _285);
    float _296 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _285);
    float _297 = cbSceneParam._m0[71u].z - (fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x))) / _285);
    float _313 = cbMtdParam._m0[18u].z - cbMtdParam._m0[18u].y;
    float _315 = (sqrt(((_295 * _295) + (_296 * _296)) + (_297 * _297)) - cbMtdParam._m0[18u].y) / (isnan(0.0) ? _313 : (isnan(_313) ? 0.0 : max(_313, 0.0)));
    float _317 = cbMtdParam._m0[18u].w + _315;
    float _322 = _317 * cbMtdParam._m0[19u].y;
    float _3480 = isnan(0.0) ? _322 : (isnan(_322) ? 0.0 : max(_322, 0.0));
    float _325 = (isnan(1.0) ? _3480 : (isnan(_3480) ? 1.0 : min(_3480, 1.0))) * cbMtdParam._m0[23u].y;
    float _3491 = isnan(0.0) ? _325 : (isnan(_325) ? 0.0 : max(_325, 0.0));
    float _326 = isnan(1.0) ? _3491 : (isnan(_3491) ? 1.0 : min(_3491, 1.0));
    float _3502 = isnan(0.0) ? _315 : (isnan(_315) ? 0.0 : max(_315, 0.0));
    float _331 = isnan(1.0) ? _3502 : (isnan(_3502) ? 1.0 : min(_3502, 1.0));
    float _334 = ((cbMtdParam._m0[17u].w - cbMtdParam._m0[17u].x) * _331) + cbMtdParam._m0[17u].x;
    float _355 = cbMtdParam._m0[20u].z * _317;
    float _3513 = isnan(0.0) ? _355 : (isnan(_355) ? 0.0 : max(_355, 0.0));
    vec4 _373 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(cbSceneParam._m0[85u].z * gl_FragCoord.x, cbSceneParam._m0[85u].w * gl_FragCoord.y));
    float _376 = _373.x;
    float _400 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _376)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _376))) - POSITION_1.w) / cbMtdParam._m0[17u].z;
    float _3524 = isnan(0.0) ? _400 : (isnan(_400) ? 0.0 : max(_400, 0.0));
    float _401 = isnan(1.0) ? _3524 : (isnan(_3524) ? 1.0 : min(_3524, 1.0));
    float _406 = 1.0 - (isnan(cbMtdParam._m0[21u].w) ? _401 : (isnan(_401) ? cbMtdParam._m0[21u].w : max(_401, cbMtdParam._m0[21u].w)));
    float _425 = (cbMtdParam._m0[24u].w + cbPerFrame._m0[22u].x) * cbMtdParam._m0[17u].y;
    float _433 = cbMtdParam._m0[30u].w * TEXCOORD.x;
    float _434 = cbMtdParam._m0[31u].x * TEXCOORD.y;
    vec4 _448 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_2, SS_BumpMap), vec2((((_425 * cbMtdParam._m0[31u].w) + _433) * cbTextureTilingScale._m0[2u].x) + cbTextureTilingScale._m0[2u].z, ((_434 + (_425 * cbMtdParam._m0[32u].x)) * cbTextureTilingScale._m0[2u].y) + cbTextureTilingScale._m0[2u].w));
    float _450 = _448.x;
    float _451 = _448.y;
    float _454 = _448.z - _331;
    float _3540 = isnan(0.0) ? _454 : (isnan(_454) ? 0.0 : max(_454, 0.0));
    float _455 = isnan(1.0) ? _3540 : (isnan(_3540) ? 1.0 : min(_3540, 1.0));
    float _467 = (_455 * 0.00999999977648258209228515625) + TEXCOORD.x;
    float _469 = (_455 * (-0.00999999977648258209228515625)) + TEXCOORD.y;
    vec4 _482 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_467 + (cbMtdParam._m0[27u].y * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_469 + (cbMtdParam._m0[27u].z * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _486 = _482.z;
    vec4 _499 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((_467 + (cbMtdParam._m0[26u].w * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((_469 + (cbMtdParam._m0[27u].x * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _503 = _499.z;
    float _506 = (_406 - _448.w) + (isnan(_503) ? _486 : (isnan(_486) ? _503 : max(_486, _503)));
    float _3556 = isnan(0.0) ? _506 : (isnan(_506) ? 0.0 : max(_506, 0.0));
    float _508 = (((cbMtdParam._m0[21u].z + TEXCOORD_3.x) - (_406 * cbMtdParam._m0[18u].x)) * (isnan(1.0) ? _3513 : (isnan(_3513) ? 1.0 : min(_3513, 1.0)))) * (isnan(1.0) ? _3556 : (isnan(_3556) ? 1.0 : min(_3556, 1.0)));
    float _510 = _508 - (_508 * TEXCOORD_7.w);
    float _518 = (POSITION_1.w - cbMtdParam._m0[24u].y) * (1.0 / cbMtdParam._m0[24u].x);
    float _3567 = isnan(0.0) ? _518 : (isnan(_518) ? 0.0 : max(_518, 0.0));
    float _519 = isnan(1.0) ? _3567 : (isnan(_3567) ? 1.0 : min(_3567, 1.0));
    float _533 = (cbMtdParam._m0[29u].w * _425) + _433;
    float _534 = (cbMtdParam._m0[30u].x * _425) + _434;
    float _541 = cbMtdParam._m0[29u].y * _425;
    float _542 = cbMtdParam._m0[29u].z * _425;
    vec4 _562 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * (_541 + (_433 * cbMtdParam._m0[31u].y))) + cbTextureTilingScale._m0[3u].z, (cbTextureTilingScale._m0[3u].y * (_542 + (_434 * cbMtdParam._m0[31u].z))) + cbTextureTilingScale._m0[3u].w));
    float _569 = (_562.x * 2.0) + (-1.0);
    float _571 = (_562.y * 2.0) + (-1.0);
    float _575 = 1.0 - dot(vec2(_569, _571), vec2(_569, _571));
    float _3578 = isnan(0.0) ? _575 : (isnan(_575) ? 0.0 : max(_575, 0.0));
    float _577 = sqrt(isnan(1.0) ? _3578 : (isnan(_3578) ? 1.0 : min(_3578, 1.0)));
    float _580 = fma(_577, _232, fma(_571, _239, _569 * _225));
    float _583 = fma(_577, _233, fma(_571, _240, _569 * _226));
    float _586 = fma(_577, _234, fma(_571, _241, _569 * _227));
    float _590 = inversesqrt(dot(vec3(_580, _583, _586), vec3(_580, _583, _586)));
    float _591 = cbPerFrame._m0[22u].x * 2.0;
    float _592 = _591 * cbMtdParam._m0[22u].w;
    float _596 = ((_580 * 0.5) * _590) + (-0.25);
    float _600 = ((_583 * 0.5) * _590) + (-0.25);
    float _601 = _600 * cbMtdParam._m0[23u].x;
    float _603 = (-0.0) - (cbMtdParam._m0[23u].x * _596);
    float _604 = fract(_592);
    float _606 = fract(_592 + 0.5);
    float _617 = abs((_604 * 2.0) + (-1.0));
    vec4 _634 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_604 * _603) + _533) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_601 * _604) + _534) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _636 = _634.x;
    float _637 = _634.y;
    float _638 = _634.z;
    vec4 _639 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_5, SS_DiffuseMap), vec2((((_606 * _603) + _533) * cbTextureTilingScale._m0[5u].x) + cbTextureTilingScale._m0[5u].z, (((_601 * _606) + _534) * cbTextureTilingScale._m0[5u].y) + cbTextureTilingScale._m0[5u].w));
    float _650 = ((_639.x - _636) * _617) + _636;
    float _651 = ((_639.y - _637) * _617) + _637;
    float _652 = ((_639.z - _638) * _617) + _638;
    float _668 = (cbMtdParam._m0[28u].w * _425) + _433;
    float _669 = (cbMtdParam._m0[29u].x * _425) + _434;
    float _672 = _591 * cbMtdParam._m0[22u].z;
    float _673 = _600 * cbMtdParam._m0[22u].y;
    float _675 = (-0.0) - (cbMtdParam._m0[22u].y * _596);
    float _676 = fract(_672);
    float _678 = fract(_672 + 0.5);
    float _689 = abs((_676 * 2.0) + (-1.0));
    vec4 _706 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_676 * _675) + _668) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_673 * _676) + _669) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _708 = _706.x;
    float _709 = _706.y;
    float _710 = _706.z;
    vec4 _711 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_4, SS_DiffuseMap), vec2((((_678 * _675) + _668) * cbTextureTilingScale._m0[4u].x) + cbTextureTilingScale._m0[4u].z, (((_673 * _678) + _669) * cbTextureTilingScale._m0[4u].y) + cbTextureTilingScale._m0[4u].w));
    float _745 = (((((cbMtdParam._m0[14u].x - cbMtdParam._m0[16u].x) * _650) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].x) * (((_711.x - _708) * _689) + _708)) + (_650 * cbMtdParam._m0[15u].x);
    float _748 = (((((cbMtdParam._m0[14u].y - cbMtdParam._m0[16u].y) * _651) * cbMtdParam._m0[25u].x) + cbMtdParam._m0[16u].y) * (((_711.y - _709) * _689) + _709)) + (_651 * cbMtdParam._m0[15u].y);
    float _751 = ((((cbMtdParam._m0[25u].x * _652) * (cbMtdParam._m0[14u].z - cbMtdParam._m0[16u].z)) + cbMtdParam._m0[16u].z) * (((_711.z - _710) * _689) + _710)) + (_652 * cbMtdParam._m0[15u].z);
    float _755 = _745 - (_745 * _519);
    float _756 = _748 - (_748 * _519);
    float _757 = _751 - (_751 * _519);
    float _762 = (POSITION_1.w - cbMtdParam._m0[23u].w) * (1.0 / cbMtdParam._m0[23u].z);
    float _3589 = isnan(0.0) ? _762 : (isnan(_762) ? 0.0 : max(_762, 0.0));
    float _763 = isnan(1.0) ? _3589 : (isnan(_3589) ? 1.0 : min(_3589, 1.0));
    float _773 = (cbMtdParam._m0[30u].y * _425) + _433;
    float _774 = (cbMtdParam._m0[30u].z * _425) + _434;
    vec4 _787 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_3, SS_BumpMap), vec2((cbTextureTilingScale._m0[3u].x * ((_433 * cbMtdParam._m0[32u].y) + _541)) + cbTextureTilingScale._m0[3u].z, (((_434 * cbMtdParam._m0[32u].z) + _542) * cbTextureTilingScale._m0[3u].y) + cbTextureTilingScale._m0[3u].w));
    float _793 = (_787.x * 2.0) + (-1.0);
    float _794 = (_787.y * 2.0) + (-1.0);
    float _798 = 1.0 - dot(vec2(_793, _794), vec2(_793, _794));
    float _3600 = isnan(0.0) ? _798 : (isnan(_798) ? 0.0 : max(_798, 0.0));
    float _800 = sqrt(isnan(1.0) ? _3600 : (isnan(_3600) ? 1.0 : min(_3600, 1.0)));
    float _803 = fma(_800, _232, fma(_794, _239, _793 * _225));
    float _806 = fma(_800, _233, fma(_794, _240, _793 * _226));
    float _809 = fma(_800, _234, fma(_794, _241, _793 * _227));
    float _813 = inversesqrt(dot(vec3(_803, _806, _809), vec3(_803, _806, _809)));
    float _814 = _591 * cbMtdParam._m0[25u].w;
    float _821 = (((_806 * 0.5) * _813) + (-0.25)) * cbMtdParam._m0[25u].z;
    float _823 = (-0.0) - (cbMtdParam._m0[25u].z * (((_803 * 0.5) * _813) + (-0.25)));
    float _824 = fract(_814);
    float _826 = fract(_814 + 0.5);
    float _829 = (_824 * _823) + _773;
    float _830 = (_821 * _824) + _774;
    float _833 = (_826 * _823) + _773;
    float _834 = (_821 * _826) + _774;
    float _837 = abs((_824 * 2.0) + (-1.0));
    vec4 _854 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_829 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_830 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _856 = _854.x;
    float _857 = _854.y;
    float _858 = _854.z;
    vec4 _859 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_8, SS_DiffuseMap), vec2((_833 * cbTextureTilingScale._m0[6u].x) + cbTextureTilingScale._m0[6u].z, (_834 * cbTextureTilingScale._m0[6u].y) + cbTextureTilingScale._m0[6u].w));
    float _870 = ((_859.x - _856) * _837) + _856;
    float _871 = ((_859.y - _857) * _837) + _857;
    float _872 = ((_859.z - _858) * _837) + _858;
    vec4 _897 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_829 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_830 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _899 = _897.x;
    float _900 = _897.y;
    float _901 = _897.z;
    vec4 _902 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_9, SS_DiffuseMap), vec2((_833 * cbTextureTilingScale._m0[7u].x) + cbTextureTilingScale._m0[7u].z, (_834 * cbTextureTilingScale._m0[7u].y) + cbTextureTilingScale._m0[7u].w));
    float _953 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].x) * ((_755 + (_510 * cbMtdParam._m0[12u].x)) + ((((_870 * cbMtdParam._m0[9u].x) - _755) + (((((cbMtdParam._m0[11u].x - cbMtdParam._m0[10u].x) * _870) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].x) * (((_902.x - _899) * _837) + _899))) * _763));
    float _955 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].y) * ((_756 + (_510 * cbMtdParam._m0[12u].y)) + ((((_871 * cbMtdParam._m0[9u].y) - _756) + (((((cbMtdParam._m0[11u].y - cbMtdParam._m0[10u].y) * _871) * cbMtdParam._m0[25u].y) + cbMtdParam._m0[10u].y) * (((_902.y - _900) * _837) + _900))) * _763));
    float _957 = (cbMtdParam._m0[24u].z * cbMtdParam._m0[13u].z) * ((_757 + (_510 * cbMtdParam._m0[12u].z)) + ((((_872 * cbMtdParam._m0[9u].z) - _757) + ((((cbMtdParam._m0[25u].y * _872) * (cbMtdParam._m0[11u].z - cbMtdParam._m0[10u].z)) + cbMtdParam._m0[10u].z) * (((_902.z - _901) * _837) + _901))) * _763));
    float _3611 = isnan(0.0) ? TEXCOORD_3.y : (isnan(TEXCOORD_3.y) ? 0.0 : max(TEXCOORD_3.y, 0.0));
    float _964 = isnan(1.0) ? _3611 : (isnan(_3611) ? 1.0 : min(_3611, 1.0));
    float _974 = _315 / cbMtdParam._m0[20u].x;
    float _3622 = isnan(0.0) ? _974 : (isnan(_974) ? 0.0 : max(_974, 0.0));
    float _975 = isnan(1.0) ? _3622 : (isnan(_3622) ? 1.0 : min(_3622, 1.0));
    float _1003 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1007 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    vec4 _1023 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_1, SS_BumpMap), vec2((cbTextureTilingScale._m0[1u].x * ((_1003 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[32u].w * _425))) + cbTextureTilingScale._m0[1u].z, (cbTextureTilingScale._m0[1u].y * ((_1007 / cbMtdParam._m0[19u].x) + (cbMtdParam._m0[33u].x * _425))) + cbTextureTilingScale._m0[1u].w));
    float _1027 = _455 * 0.23999999463558197021484375;
    float _1029 = _455 * (-0.20000000298023223876953125);
    float _1040 = cbMtdParam._m0[33u].w * TEXCOORD.x;
    float _1041 = cbMtdParam._m0[34u].x * TEXCOORD.y;
    vec4 _1056 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2(((((cbMtdParam._m0[33u].y * _425) + _1027) + _1040) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, ((((cbMtdParam._m0[33u].z * _425) + _1029) + _1041) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    vec4 _1072 = texture(sampler2D(M_Cutscene_Water_Melange_Glow_Opacity_snp_0_Texture2D_0, SS_BumpMap), vec2((((_1040 + _1027) + (cbMtdParam._m0[34u].y * _425)) * cbTextureTilingScale._m0[0u].x) + cbTextureTilingScale._m0[0u].z, (((_1041 + _1029) + (cbMtdParam._m0[34u].z * _425)) * cbTextureTilingScale._m0[0u].y) + cbTextureTilingScale._m0[0u].w));
    float _1092 = (((_499.x + (-0.5)) * 0.5) + _482.x) + (((_1056.x + (-1.0)) + _1072.x) * cbMtdParam._m0[21u].y);
    float _1093 = (((_499.y + (-0.5)) * 0.5) + _482.y) + (((_1056.y + (-1.0)) + _1072.y) * cbMtdParam._m0[21u].y);
    float _1098 = ((_1023.x - _1092) * _975) + _1092;
    float _1099 = ((_1023.y - _1093) * _975) + _1093;
    float _1101 = _315 / cbMtdParam._m0[19u].w;
    float _3633 = isnan(0.0) ? _1101 : (isnan(_1101) ? 0.0 : max(_1101, 0.0));
    float _1102 = isnan(1.0) ? _3633 : (isnan(_3633) ? 1.0 : min(_3633, 1.0));
    float _1118 = ((((_964 * (0.5 - _450)) + _450) + (((_1098 + (-0.5)) + ((0.5 - _1098) * _1102)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1119 = ((((_964 * (0.5 - _451)) + _451) + (((_1099 + (-0.5)) + ((0.5 - _1099) * _1102)) * 0.60000002384185791015625)) * 2.0) + (-1.0);
    float _1120 = dot(vec2(_1118, _1119), vec2(_1118, _1119));
    float _3644 = isnan(0.0) ? _1120 : (isnan(_1120) ? 0.0 : max(_1120, 0.0));
    float _1125 = sqrt(1.0 - (isnan(1.0) ? _3644 : (isnan(_3644) ? 1.0 : min(_3644, 1.0))));
    float _1127 = cbMtdParam._m0[20u].w * _317;
    float _3655 = isnan(0.0) ? _1127 : (isnan(_1127) ? 0.0 : max(_1127, 0.0));
    float _1133 = ((cbMtdParam._m0[21u].x - cbMtdParam._m0[19u].z) * (isnan(1.0) ? _3655 : (isnan(_3655) ? 1.0 : min(_3655, 1.0)))) + cbMtdParam._m0[19u].z;
    float _1138 = _1118 - (_1133 * _1118);
    float _1139 = _1119 - (_1133 * _1119);
    float _1140 = (_1133 * (1.0 - _1125)) + _1125;
    float _1150 = fma(_1125, _232, fma(_1119, _239, _1118 * _225));
    float _1153 = fma(_1125, _233, fma(_1119, _240, _1118 * _226));
    float _1156 = fma(_1125, _234, fma(_1119, _241, _1118 * _227));
    float _1160 = inversesqrt(dot(vec3(_1150, _1153, _1156), vec3(_1150, _1153, _1156)));
    float _1161 = _1160 * _1150;
    float _1162 = _1160 * _1153;
    float _1163 = _1160 * _1156;
    float _1166 = fma(_1140, _232, fma(_1139, _239, _1138 * _225));
    float _1169 = fma(_1140, _233, fma(_1139, _240, _1138 * _226));
    float _1172 = fma(_1140, _234, fma(_1139, _241, _1138 * _227));
    float _1176 = inversesqrt(dot(vec3(_1166, _1169, _1172), vec3(_1166, _1169, _1172)));
    float _1177 = _1176 * _1166;
    float _1178 = _1176 * _1169;
    float _1179 = _1176 * _1172;
    float _3666 = isnan(0.0) ? _326 : (isnan(_326) ? 0.0 : max(_326, 0.0));
    float _3677 = isnan(0.0) ? _334 : (isnan(_334) ? 0.0 : max(_334, 0.0));
    float _1181 = isnan(1.0) ? _3677 : (isnan(_3677) ? 1.0 : min(_3677, 1.0));
    float _1195 = (floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? POSITION_1.w : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * POSITION_1.z));
    float _1215 = fma(POSITION_1.w, cbSceneParam._m0[11u].w, fma(POSITION_1.z, cbSceneParam._m0[11u].z, fma(POSITION_1.y, cbSceneParam._m0[11u].y, cbSceneParam._m0[11u].x * POSITION_1.x)));
    float _1224 = cbSceneParam._m0[71u].x - (_1003 / _1215);
    float _1225 = cbSceneParam._m0[71u].y - (fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x))) / _1215);
    float _1226 = cbSceneParam._m0[71u].z - (_1007 / _1215);
    float _1230 = inversesqrt(dot(vec3(_1224, _1225, _1226), vec3(_1224, _1225, _1226)));
    float _1231 = _1224 * _1230;
    float _1232 = _1225 * _1230;
    float _1233 = _1226 * _1230;
    float _1238 = cbSceneParam._m0[85u].z * gl_FragCoord.x;
    float _1239 = cbSceneParam._m0[85u].w * gl_FragCoord.y;
    vec4 _1241 = texture(sampler2D(g_WaterSimulationNormalTexture, SS_ClampLinear), vec2(TEXCOORD.z, TEXCOORD.w));
    float _1250 = (_1241.x * 2.0) + (-1.0);
    float _1251 = (_1241.y * 2.0) + (-1.0);
    float _1252 = (_1241.z * 2.0) + (-1.0);
    float _1256 = inversesqrt(dot(vec3(_1250, _1251, _1252), vec3(_1250, _1251, _1252)));
    float _1267 = ((TEXCOORD.w >= 1.0) || (((TEXCOORD.z <= 0.0) || (TEXCOORD.z >= 1.0)) || (TEXCOORD.w <= 0.0))) ? 0.0 : _1241.w;
    float _1274 = (((_1250 * _1256) - _1161) * _1267) + _1161;
    float _1275 = (((_1251 * _1256) - _1162) * _1267) + _1162;
    float _1276 = (((_1252 * _1256) - _1163) * _1267) + _1163;
    float _1294 = fma(_1276, cbSceneParam._m0[5u].z, fma(_1275, cbSceneParam._m0[5u].y, _1274 * cbSceneParam._m0[5u].x));
    float _1297 = fma(_1276, cbSceneParam._m0[6u].z, fma(_1275, cbSceneParam._m0[6u].y, _1274 * cbSceneParam._m0[6u].x));
    float _1300 = fma(_1276, cbSceneParam._m0[7u].z, fma(_1275, cbSceneParam._m0[7u].y, _1274 * cbSceneParam._m0[7u].x));
    vec4 _1309 = texture(sampler2D(g_SSAOTexture, SS_WrapLinear), vec2(cbSceneParam._m0[86u].x * _1238, cbSceneParam._m0[86u].y * _1239));
    float _1312 = _1309.x * TEXCOORD_3.w;
    float _1316 = abs(dot(vec3(_1231, _1232, _1233), vec3(_1274, _1275, _1276)));
    float _3688 = isnan(0.0) ? _1316 : (isnan(_1316) ? 0.0 : max(_1316, 0.0));
    float _1328 = dot(vec3(_1177, _1178, _1179), vec3(_1231, _1232, _1233)) * 2.0;
    float _1332 = (_1328 * _1177) - _1231;
    float _1333 = (_1328 * _1178) - _1232;
    float _1334 = (_1328 * _1179) - _1233;
    float _1338 = abs(dot(vec3(_1231, _1232, _1233), vec3(_1177, _1178, _1179)));
    float _3699 = isnan(0.0) ? _1338 : (isnan(_1338) ? 0.0 : max(_1338, 0.0));
    float _1340 = sqrt(_1181);
    float _1352 = exp2((_1340 * 5.0) * log2(1.0 - ((isnan(1.0) ? _3699 : (isnan(_3699) ? 1.0 : min(_3699, 1.0))) * 0.999000012874603271484375))) / (4.0 - (_1340 * 3.0));
    float _1383 = fma(POSITION_1.w, cbSceneParam._m0[8u].w, fma(POSITION_1.z, cbSceneParam._m0[8u].z, fma(POSITION_1.y, cbSceneParam._m0[8u].y, cbSceneParam._m0[8u].x * POSITION_1.x)));
    float _1387 = fma(POSITION_1.w, cbSceneParam._m0[9u].w, fma(POSITION_1.z, cbSceneParam._m0[9u].z, fma(POSITION_1.y, cbSceneParam._m0[9u].y, cbSceneParam._m0[9u].x * POSITION_1.x)));
    float _1391 = fma(POSITION_1.w, cbSceneParam._m0[10u].w, fma(POSITION_1.z, cbSceneParam._m0[10u].z, fma(POSITION_1.y, cbSceneParam._m0[10u].y, cbSceneParam._m0[10u].x * POSITION_1.x)));
    float _1554;
    float _1556;
    float _1557;
    float _1558;
    float _1559;
    float _1560;
    float _1561;
    float _1562;
    float _1563;
    float _1564;
    float _1565;
    float _1566;
    if (cbModelParam._m0[36u].x > 0.0)
    {
        float _1417 = fma(_1391, cbModelParam._m0[26u].z, fma(_1387, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1383));
        float _1421 = fma(_1391, cbModelParam._m0[27u].z, fma(_1387, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1383));
        float _1425 = fma(_1391, cbModelParam._m0[28u].z, fma(_1387, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1383));
        float _1448 = _1383 + _1177;
        float _1449 = _1387 + _1178;
        float _1450 = _1391 + _1179;
        float _1460 = fma(_1450, cbModelParam._m0[26u].z, fma(_1449, cbModelParam._m0[26u].y, cbModelParam._m0[26u].x * _1448)) - _1417;
        float _1461 = fma(_1450, cbModelParam._m0[27u].z, fma(_1449, cbModelParam._m0[27u].y, cbModelParam._m0[27u].x * _1448)) - _1421;
        float _1462 = fma(_1450, cbModelParam._m0[28u].z, fma(_1449, cbModelParam._m0[28u].y, cbModelParam._m0[28u].x * _1448)) - _1425;
        float _1466 = inversesqrt(dot(vec3(_1460, _1461, _1462), vec3(_1460, _1461, _1462)));
        float _1478 = ((_1466 * _1460) / cbModelParam._m0[34u].x) + ((cbModelParam._m0[37u].x * ((((_1417 + cbModelParam._m0[26u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1479 = ((_1466 * _1461) / cbModelParam._m0[34u].y) + ((cbModelParam._m0[37u].y * ((((_1421 + cbModelParam._m0[27u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1480 = ((_1466 * _1462) / cbModelParam._m0[34u].z) + ((((((_1425 + cbModelParam._m0[28u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[37u].z) + 0.5);
        vec4 _1483 = textureLod(sampler3D(g_IrradianceVolumeX, SS_ClampLinear), vec3(_1478, _1479, _1480), 0.0);
        vec4 _1490 = textureLod(sampler3D(g_IrradianceVolumeY, SS_ClampLinear), vec3(_1478, _1479, _1480), 0.0);
        vec4 _1497 = textureLod(sampler3D(g_IrradianceVolumeZ, SS_ClampLinear), vec3(_1478, _1479, _1480), 0.0);
        vec4 _1504 = textureLod(sampler3D(g_IrradianceVolumeW, SS_ClampLinear), vec3(_1478, _1479, _1480), 0.0);
        float _1517 = exp2((_1483.w + (-0.5)) * 20.0) * 2.0;
        float _1527 = exp2((_1490.w + (-0.5)) * 20.0) * 2.0;
        float _1537 = exp2((_1497.w + (-0.5)) * 20.0) * 2.0;
        float _1547 = exp2((_1504.w + (-0.5)) * 20.0) * 2.0;
        float _1548 = _1547 * (_1504.x + (-0.5));
        float _1549 = _1547 * (_1504.y + (-0.5));
        float _1550 = _1547 * (_1504.z + (-0.5));
        _1554 = _1517 * (_1483.z + (-0.5));
        _1556 = _1517 * (_1483.y + (-0.5));
        _1557 = _1517 * (_1483.x + (-0.5));
        _1558 = _1527 * (_1490.z + (-0.5));
        _1559 = _1527 * (_1490.y + (-0.5));
        _1560 = _1527 * (_1490.x + (-0.5));
        _1561 = _1537 * (_1497.z + (-0.5));
        _1562 = _1537 * (_1497.y + (-0.5));
        _1563 = _1537 * (_1497.x + (-0.5));
        _1564 = isnan(0.0) ? _1550 : (isnan(_1550) ? 0.0 : max(_1550, 0.0));
        _1565 = isnan(0.0) ? _1549 : (isnan(_1549) ? 0.0 : max(_1549, 0.0));
        _1566 = isnan(0.0) ? _1548 : (isnan(_1548) ? 0.0 : max(_1548, 0.0));
    }
    else
    {
        _1554 = _1555;
        _1556 = _1555;
        _1557 = _1555;
        _1558 = _1555;
        _1559 = _1555;
        _1560 = _1555;
        _1561 = _1555;
        _1562 = _1555;
        _1563 = _1555;
        _1564 = _1555;
        _1565 = _1555;
        _1566 = _1555;
    }
    float _1724;
    float _1725;
    float _1726;
    float _1727;
    float _1728;
    float _1729;
    float _1730;
    float _1731;
    float _1732;
    float _1733;
    float _1734;
    float _1735;
    if (cbModelParam._m0[36u].y > 0.0)
    {
        float _1589 = fma(_1391, cbModelParam._m0[30u].z, fma(_1387, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1383));
        float _1593 = fma(_1391, cbModelParam._m0[31u].z, fma(_1387, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1383));
        float _1597 = fma(_1391, cbModelParam._m0[32u].z, fma(_1387, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1383));
        float _1620 = _1383 + _1177;
        float _1621 = _1387 + _1178;
        float _1622 = _1391 + _1179;
        float _1632 = fma(_1622, cbModelParam._m0[30u].z, fma(_1621, cbModelParam._m0[30u].y, cbModelParam._m0[30u].x * _1620)) - _1589;
        float _1633 = fma(_1622, cbModelParam._m0[31u].z, fma(_1621, cbModelParam._m0[31u].y, cbModelParam._m0[31u].x * _1620)) - _1593;
        float _1634 = fma(_1622, cbModelParam._m0[32u].z, fma(_1621, cbModelParam._m0[32u].y, cbModelParam._m0[32u].x * _1620)) - _1597;
        float _1638 = inversesqrt(dot(vec3(_1632, _1633, _1634), vec3(_1632, _1633, _1634)));
        float _1650 = ((_1638 * _1632) / cbModelParam._m0[35u].x) + ((cbModelParam._m0[38u].x * ((((_1589 + cbModelParam._m0[30u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1651 = ((_1638 * _1633) / cbModelParam._m0[35u].y) + ((cbModelParam._m0[38u].y * ((((_1593 + cbModelParam._m0[31u].w) + 1.0) * 0.5) + (-0.5))) + 0.5);
        float _1652 = ((_1638 * _1634) / cbModelParam._m0[35u].z) + ((((((_1597 + cbModelParam._m0[32u].w) + 1.0) * 0.5) + (-0.5)) * cbModelParam._m0[38u].z) + 0.5);
        vec4 _1654 = textureLod(sampler3D(g_IrradianceVolume2X, SS_ClampLinear), vec3(_1650, _1651, _1652), 0.0);
        vec4 _1661 = textureLod(sampler3D(g_IrradianceVolume2Y, SS_ClampLinear), vec3(_1650, _1651, _1652), 0.0);
        vec4 _1668 = textureLod(sampler3D(g_IrradianceVolume2Z, SS_ClampLinear), vec3(_1650, _1651, _1652), 0.0);
        vec4 _1675 = textureLod(sampler3D(g_IrradianceVolume2W, SS_ClampLinear), vec3(_1650, _1651, _1652), 0.0);
        float _1687 = exp2((_1654.w + (-0.5)) * 20.0) * 2.0;
        float _1697 = exp2((_1661.w + (-0.5)) * 20.0) * 2.0;
        float _1707 = exp2((_1668.w + (-0.5)) * 20.0) * 2.0;
        float _1717 = exp2((_1675.w + (-0.5)) * 20.0) * 2.0;
        float _1718 = _1717 * (_1675.x + (-0.5));
        float _1719 = _1717 * (_1675.y + (-0.5));
        float _1720 = _1717 * (_1675.z + (-0.5));
        _1724 = _1687 * (_1654.z + (-0.5));
        _1725 = _1687 * (_1654.y + (-0.5));
        _1726 = _1687 * (_1654.x + (-0.5));
        _1727 = _1697 * (_1661.z + (-0.5));
        _1728 = _1697 * (_1661.y + (-0.5));
        _1729 = _1697 * (_1661.x + (-0.5));
        _1730 = _1707 * (_1668.z + (-0.5));
        _1731 = _1707 * (_1668.y + (-0.5));
        _1732 = _1707 * (_1668.x + (-0.5));
        _1733 = isnan(0.0) ? _1720 : (isnan(_1720) ? 0.0 : max(_1720, 0.0));
        _1734 = isnan(0.0) ? _1719 : (isnan(_1719) ? 0.0 : max(_1719, 0.0));
        _1735 = isnan(0.0) ? _1718 : (isnan(_1718) ? 0.0 : max(_1718, 0.0));
    }
    else
    {
        _1724 = _1555;
        _1725 = _1555;
        _1726 = _1555;
        _1727 = _1555;
        _1728 = _1555;
        _1729 = _1555;
        _1730 = _1555;
        _1731 = _1555;
        _1732 = _1555;
        _1733 = _1555;
        _1734 = _1555;
        _1735 = _1555;
    }
    float _1749 = _1332 * 0.5;
    float _1750 = _1333 * 0.5;
    float _1751 = _1334 * 0.5;
    float _1752 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1726, _1729, _1732, _1735));
    float _1755 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1725, _1728, _1731, _1734));
    float _1758 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1724, _1727, _1730, _1733));
    float _1793;
    if (cbModelParam._m0[39u].w > 0.0)
    {
        float _1765 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1554, _1558, _1561, _1564));
        float _1769 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1556, _1559, _1562, _1565));
        float _1773 = dot(vec4(_1749, _1750, _1751, 1.0), vec4(_1557, _1560, _1563, _1566));
        float _1780 = dot(vec4(cbModelParam._m0[39u]), vec4(_1749, _1750, _1751, 1.0));
        _1793 = dot(vec3(isnan(0.0) ? _1773 : (isnan(_1773) ? 0.0 : max(_1773, 0.0)), isnan(0.0) ? _1769 : (isnan(_1769) ? 0.0 : max(_1769, 0.0)), isnan(0.0) ? _1765 : (isnan(_1765) ? 0.0 : max(_1765, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1780) ? 0.0 : (isnan(0.0) ? _1780 : max(0.0, _1780))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1793 = 1.0;
    }
    float _1804;
    if (cbModelParam._m0[40u].w > 0.0)
    {
        float _1795 = dot(vec4(cbModelParam._m0[40u]), vec4(_1749, _1750, _1751, 1.0));
        _1804 = dot(vec3(isnan(0.0) ? _1752 : (isnan(_1752) ? 0.0 : max(_1752, 0.0)), isnan(0.0) ? _1755 : (isnan(_1755) ? 0.0 : max(_1755, 0.0)), isnan(0.0) ? _1758 : (isnan(_1758) ? 0.0 : max(_1758, 0.0))), vec3(0.2989099919795989990234375, 0.586610019207000732421875, 0.11448000371456146240234375)) / ((isnan(_1795) ? 0.0 : (isnan(0.0) ? _1795 : max(0.0, _1795))) + 9.9999997473787516355514526367188e-06);
    }
    else
    {
        _1804 = 1.0;
    }
    float _1808 = (_1804 * cbModelParam._m0[1u].x) + (_1793 * (1.0 - cbModelParam._m0[1u].x));
    float _1815 = cbModelParam._m0[25u].z - (cbModelParam._m0[25u].z * _1181);
    float _1816 = isnan(_1815) ? cbModelParam._m0[25u].z : (isnan(cbModelParam._m0[25u].z) ? _1815 : min(cbModelParam._m0[25u].z, _1815));
    float _1896;
    float _1898;
    float _1900;
    if (cbModelParam._m0[25u].x > 0.0)
    {
        float _1863 = fma(_1391, cbModelParam._m0[13u].z, fma(_1387, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1383)) + cbModelParam._m0[13u].w;
        float _1867 = fma(_1391, cbModelParam._m0[14u].z, fma(_1387, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1383)) + cbModelParam._m0[14u].w;
        float _1871 = fma(_1391, cbModelParam._m0[15u].z, fma(_1387, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1383)) + cbModelParam._m0[15u].w;
        float _1874 = fma(_1334, cbModelParam._m0[13u].z, fma(_1333, cbModelParam._m0[13u].y, cbModelParam._m0[13u].x * _1332));
        float _1877 = fma(_1334, cbModelParam._m0[14u].z, fma(_1333, cbModelParam._m0[14u].y, cbModelParam._m0[14u].x * _1332));
        float _1880 = fma(_1334, cbModelParam._m0[15u].z, fma(_1333, cbModelParam._m0[15u].y, cbModelParam._m0[15u].x * _1332));
        float _1908;
        if (_1874 > 0.0)
        {
            _1908 = abs((1.0 - _1863) / _1874);
        }
        else
        {
            float frontier_phi_14_12_ladder;
            if (_1874 < 0.0)
            {
                frontier_phi_14_12_ladder = abs((_1863 + 1.0) / _1874);
            }
            else
            {
                frontier_phi_14_12_ladder = 5000.0;
            }
            _1908 = frontier_phi_14_12_ladder;
        }
        float _2238;
        if (_1877 > 0.0)
        {
            _2238 = abs((1.0 - _1867) / _1877);
        }
        else
        {
            float frontier_phi_23_19_ladder;
            if (_1877 < 0.0)
            {
                frontier_phi_23_19_ladder = abs((_1867 + 1.0) / _1877);
            }
            else
            {
                frontier_phi_23_19_ladder = 5000.0;
            }
            _2238 = frontier_phi_23_19_ladder;
        }
        float _2701;
        if (_1880 > 0.0)
        {
            _2701 = abs((1.0 - _1871) / _1880);
        }
        else
        {
            float frontier_phi_37_30_ladder;
            if (_1880 < 0.0)
            {
                frontier_phi_37_30_ladder = abs((_1871 + 1.0) / _1880);
            }
            else
            {
                frontier_phi_37_30_ladder = 5000.0;
            }
            _2701 = frontier_phi_37_30_ladder;
        }
        float _2703 = isnan(_2238) ? _1908 : (isnan(_1908) ? _2238 : min(_1908, _2238));
        float _2704 = isnan(_2701) ? _2703 : (isnan(_2703) ? _2701 : min(_2703, _2701));
        float _2708 = (_2704 * _1874) + _1863;
        float _2709 = (_2704 * _1877) + _1867;
        float _2710 = (_2704 * _1880) + _1871;
        float _2711 = _2704 * 9.9999997473787516355514526367188e-05;
        float _2712 = (-1.0) - _2711;
        float _2714 = _2711 + 1.0;
        float frontier_phi_13_37_ladder;
        float frontier_phi_13_37_ladder_1;
        float frontier_phi_13_37_ladder_2;
        if ((_2710 > _2714) || ((_2710 < _2712) || ((_2709 > _2714) || ((_2709 < _2712) || ((_2708 < _2712) || (_2708 > _2714))))))
        {
            frontier_phi_13_37_ladder = 0.0;
            frontier_phi_13_37_ladder_1 = 0.0;
            frontier_phi_13_37_ladder_2 = 0.0;
        }
        else
        {
            vec4 _2824 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3((cbModelParam._m0[9u].w - cbModelParam._m0[7u].x) + fma(_2710, cbModelParam._m0[9u].z, fma(_2709, cbModelParam._m0[9u].y, _2708 * cbModelParam._m0[9u].x)), (cbModelParam._m0[10u].w - cbModelParam._m0[7u].y) + fma(_2710, cbModelParam._m0[10u].z, fma(_2709, cbModelParam._m0[10u].y, _2708 * cbModelParam._m0[10u].x)), (cbModelParam._m0[11u].w - cbModelParam._m0[7u].z) + fma(_2710, cbModelParam._m0[11u].z, fma(_2709, cbModelParam._m0[11u].y, _2708 * cbModelParam._m0[11u].x))), _1816);
            frontier_phi_13_37_ladder = _2824.y * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_1 = _2824.x * cbModelParam._m0[1u].y;
            frontier_phi_13_37_ladder_2 = _2824.z * cbModelParam._m0[1u].y;
        }
        _1896 = frontier_phi_13_37_ladder_1;
        _1898 = frontier_phi_13_37_ladder;
        _1900 = frontier_phi_13_37_ladder_2;
    }
    else
    {
        vec4 _1884 = textureLod(samplerCube(g_IBLTexture, SS_WrapLinear), vec3(_1332, _1333, _1334), _1816);
        _1896 = _1884.x * cbModelParam._m0[1u].y;
        _1898 = _1884.y * cbModelParam._m0[1u].y;
        _1900 = _1884.z * cbModelParam._m0[1u].y;
    }
    float _1904 = cbModelParam._m0[25u].w - (cbModelParam._m0[25u].w * _1181);
    float _1905 = isnan(_1904) ? cbModelParam._m0[25u].w : (isnan(cbModelParam._m0[25u].w) ? _1904 : min(cbModelParam._m0[25u].w, _1904));
    float _1994;
    float _1996;
    float _1998;
    if (cbModelParam._m0[25u].y > 0.0)
    {
        float _1958 = fma(_1391, cbModelParam._m0[21u].z, fma(_1387, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1383)) + cbModelParam._m0[21u].w;
        float _1962 = fma(_1391, cbModelParam._m0[22u].z, fma(_1387, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1383)) + cbModelParam._m0[22u].w;
        float _1966 = fma(_1391, cbModelParam._m0[23u].z, fma(_1387, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1383)) + cbModelParam._m0[23u].w;
        float _1969 = fma(_1334, cbModelParam._m0[21u].z, fma(_1333, cbModelParam._m0[21u].y, cbModelParam._m0[21u].x * _1332));
        float _1972 = fma(_1334, cbModelParam._m0[22u].z, fma(_1333, cbModelParam._m0[22u].y, cbModelParam._m0[22u].x * _1332));
        float _1975 = fma(_1334, cbModelParam._m0[23u].z, fma(_1333, cbModelParam._m0[23u].y, cbModelParam._m0[23u].x * _1332));
        float _2243;
        if (_1969 > 0.0)
        {
            _2243 = abs((1.0 - _1958) / _1969);
        }
        else
        {
            float frontier_phi_25_21_ladder;
            if (_1969 < 0.0)
            {
                frontier_phi_25_21_ladder = abs((_1958 + 1.0) / _1969);
            }
            else
            {
                frontier_phi_25_21_ladder = 5000.0;
            }
            _2243 = frontier_phi_25_21_ladder;
        }
        float _2727;
        if (_1972 > 0.0)
        {
            _2727 = abs((1.0 - _1962) / _1972);
        }
        else
        {
            float frontier_phi_39_32_ladder;
            if (_1972 < 0.0)
            {
                frontier_phi_39_32_ladder = abs((_1962 + 1.0) / _1972);
            }
            else
            {
                frontier_phi_39_32_ladder = 5000.0;
            }
            _2727 = frontier_phi_39_32_ladder;
        }
        float _2881;
        if (_1975 > 0.0)
        {
            _2881 = abs((1.0 - _1966) / _1975);
        }
        else
        {
            float frontier_phi_53_48_ladder;
            if (_1975 < 0.0)
            {
                frontier_phi_53_48_ladder = abs((_1966 + 1.0) / _1975);
            }
            else
            {
                frontier_phi_53_48_ladder = 5000.0;
            }
            _2881 = frontier_phi_53_48_ladder;
        }
        float _2883 = isnan(_2727) ? _2243 : (isnan(_2243) ? _2727 : min(_2243, _2727));
        float _2884 = isnan(_2881) ? _2883 : (isnan(_2883) ? _2881 : min(_2883, _2881));
        float _2888 = (_2884 * _1969) + _1958;
        float _2889 = (_2884 * _1972) + _1962;
        float _2890 = (_2884 * _1975) + _1966;
        float _2891 = _2884 * 9.9999997473787516355514526367188e-05;
        float _2892 = (-1.0) - _2891;
        float _2894 = _2891 + 1.0;
        float frontier_phi_22_53_ladder;
        float frontier_phi_22_53_ladder_1;
        float frontier_phi_22_53_ladder_2;
        if ((_2890 > _2894) || ((_2890 < _2892) || ((_2889 > _2894) || ((_2889 < _2892) || ((_2888 < _2892) || (_2888 > _2894))))))
        {
            frontier_phi_22_53_ladder = 0.0;
            frontier_phi_22_53_ladder_1 = 0.0;
            frontier_phi_22_53_ladder_2 = 0.0;
        }
        else
        {
            vec4 _3096 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3((cbModelParam._m0[17u].w - cbModelParam._m0[8u].x) + fma(_2890, cbModelParam._m0[17u].z, fma(_2889, cbModelParam._m0[17u].y, _2888 * cbModelParam._m0[17u].x)), (cbModelParam._m0[18u].w - cbModelParam._m0[8u].y) + fma(_2890, cbModelParam._m0[18u].z, fma(_2889, cbModelParam._m0[18u].y, _2888 * cbModelParam._m0[18u].x)), (cbModelParam._m0[19u].w - cbModelParam._m0[8u].z) + fma(_2890, cbModelParam._m0[19u].z, fma(_2889, cbModelParam._m0[19u].y, _2888 * cbModelParam._m0[19u].x))), _1905);
            frontier_phi_22_53_ladder = _3096.z * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_1 = _3096.y * cbModelParam._m0[1u].z;
            frontier_phi_22_53_ladder_2 = _3096.x * cbModelParam._m0[1u].z;
        }
        _1994 = frontier_phi_22_53_ladder_2;
        _1996 = frontier_phi_22_53_ladder_1;
        _1998 = frontier_phi_22_53_ladder;
    }
    else
    {
        vec4 _1978 = textureLod(samplerCube(g_IBLTexture2, SS_WrapLinear), vec3(_1332, _1333, _1334), _1905);
        _1994 = _1978.x * cbModelParam._m0[1u].z;
        _1996 = _1978.y * cbModelParam._m0[1u].z;
        _1998 = _1978.z * cbModelParam._m0[1u].z;
    }
    float _2010 = ((((1.0 - _1352) * ((_1340 * 0.60000002384185791015625) + 0.4000000059604644775390625)) * 0.039999999105930328369140625) + (_1352 * _1340)) * _1312;
    float _2011 = _2010 * ((cbModelParam._m0[1u].w * (_1994 - _1896)) + _1896);
    float _2012 = _2010 * ((cbModelParam._m0[1u].w * (_1996 - _1898)) + _1898);
    float _2013 = _2010 * ((cbModelParam._m0[1u].w * (_1998 - _1900)) + _1900);
    float _2034 = fma(_2013, cbSceneParam._m0[89u].z, fma(_2012, cbSceneParam._m0[89u].y, _2011 * cbSceneParam._m0[89u].x));
    float _2037 = fma(_2013, cbSceneParam._m0[90u].z, fma(_2012, cbSceneParam._m0[90u].y, _2011 * cbSceneParam._m0[90u].x));
    float _2040 = fma(_2013, cbSceneParam._m0[91u].z, fma(_2012, cbSceneParam._m0[91u].y, _2011 * cbSceneParam._m0[91u].x));
    uint _2047 = uint(roundEven(NORMAL.w)) * 13u;
    uvec4 _2051 = floatBitsToUint(cbInstanceData._m0[_2047 + 5u]);
    uint _2053 = _2051.x * 14u;
    uint _2054 = _2053 + 13u;
    float _2059 = _1312 + (-1.0);
    float _2062 = (cbLight._m0[_2054].x * _2059) + 1.0;
    float _2063 = (cbLight._m0[_2054].y * _2059) + 1.0;
    uint _2067 = _2053 + 8u;
    float _2083 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2053].w)) * _1181) * 0.949999988079071044921875);
    float _2084 = _2083 * _2083;
    float _2085 = cbLight._m0[_2053].x + _1231;
    float _2086 = cbLight._m0[_2053].y + _1232;
    float _2087 = cbLight._m0[_2053].z + _1233;
    float _2091 = inversesqrt(dot(vec3(_2085, _2086, _2087), vec3(_2085, _2086, _2087)));
    float _2092 = _2091 * _2085;
    float _2093 = _2091 * _2086;
    float _2094 = _2091 * _2087;
    float _2095 = dot(vec3(_1274, _1275, _1276), vec3(cbLight._m0[_2053].xyz));
    float _3825 = isnan(0.0) ? _2095 : (isnan(_2095) ? 0.0 : max(_2095, 0.0));
    float _2098 = isnan(1.0) ? _3825 : (isnan(_3825) ? 1.0 : min(_3825, 1.0));
    float _2099 = dot(vec3(_1274, _1275, _1276), vec3(_1231, _1232, _1233));
    float _3836 = isnan(0.0) ? _2099 : (isnan(_2099) ? 0.0 : max(_2099, 0.0));
    float _2102 = isnan(1.0) ? _3836 : (isnan(_3836) ? 1.0 : min(_3836, 1.0));
    float _2103 = dot(vec3(_1274, _1275, _1276), vec3(_2092, _2093, _2094));
    float _3847 = isnan(0.0) ? _2103 : (isnan(_2103) ? 0.0 : max(_2103, 0.0));
    float _2106 = isnan(1.0) ? _3847 : (isnan(_3847) ? 1.0 : min(_3847, 1.0));
    float _2107 = dot(vec3(cbLight._m0[_2053].xyz), vec3(_2092, _2093, _2094));
    float _3858 = isnan(0.0) ? _2107 : (isnan(_2107) ? 0.0 : max(_2107, 0.0));
    float _2111 = _2084 * _2084;
    float _2115 = ((_2106 * _2106) * (_2111 + (-1.0))) + 1.0;
    float _2126 = (exp2(log2(1.0 - (isnan(1.0) ? _3858 : (isnan(_3858) ? 1.0 : min(_3858, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2127 = 1.0 - _2084;
    float _2138 = (0.5 / (((_2102 * ((_2098 * _2127) + _2084)) + 9.9999999392252902907785028219223e-09) + (((_2102 * _2127) + _2084) * _2098))) * _2098;
    float _3869 = isnan(0.0) ? _2138 : (isnan(_2138) ? 0.0 : max(_2138, 0.0));
    float _2140 = (isnan(1.0) ? _3869 : (isnan(_3869) ? 1.0 : min(_3869, 1.0))) * (_2111 / ((_2115 * _2115) * 3.141590118408203125));
    float _2141 = isnan(1.0) ? _2062 : (isnan(_2062) ? 1.0 : min(_2062, 1.0));
    uint _2151 = _2053 | 1u;
    uint _2155 = _2053 + 9u;
    float _2169 = 1.0 - (sqrt((1.0 - (0.07500000298023223876953125 / cbLight._m0[_2151].w)) * _1181) * 0.949999988079071044921875);
    float _2170 = _2169 * _2169;
    float _2171 = cbLight._m0[_2151].x + _1231;
    float _2172 = cbLight._m0[_2151].y + _1232;
    float _2173 = cbLight._m0[_2151].z + _1233;
    float _2177 = inversesqrt(dot(vec3(_2171, _2172, _2173), vec3(_2171, _2172, _2173)));
    float _2178 = _2177 * _2171;
    float _2179 = _2177 * _2172;
    float _2180 = _2177 * _2173;
    float _2181 = dot(vec3(_1274, _1275, _1276), vec3(cbLight._m0[_2151].xyz));
    float _3885 = isnan(0.0) ? _2181 : (isnan(_2181) ? 0.0 : max(_2181, 0.0));
    float _2184 = isnan(1.0) ? _3885 : (isnan(_3885) ? 1.0 : min(_3885, 1.0));
    float _2185 = dot(vec3(_1274, _1275, _1276), vec3(_2178, _2179, _2180));
    float _3896 = isnan(0.0) ? _2185 : (isnan(_2185) ? 0.0 : max(_2185, 0.0));
    float _2188 = isnan(1.0) ? _3896 : (isnan(_3896) ? 1.0 : min(_3896, 1.0));
    float _2189 = dot(vec3(cbLight._m0[_2151].xyz), vec3(_2178, _2179, _2180));
    float _3907 = isnan(0.0) ? _2189 : (isnan(_2189) ? 0.0 : max(_2189, 0.0));
    float _2193 = _2170 * _2170;
    float _2197 = ((_2188 * _2188) * (_2193 + (-1.0))) + 1.0;
    float _2206 = (exp2(log2(1.0 - (isnan(1.0) ? _3907 : (isnan(_3907) ? 1.0 : min(_3907, 1.0)))) * 5.0) * 0.959999978542327880859375) + 0.039999999105930328369140625;
    float _2207 = 1.0 - _2170;
    float _2217 = (0.5 / (((_2102 * ((_2184 * _2207) + _2170)) + 9.9999999392252902907785028219223e-09) + (((_2102 * _2207) + _2170) * _2184))) * _2184;
    float _3918 = isnan(0.0) ? _2217 : (isnan(_2217) ? 0.0 : max(_2217, 0.0));
    float _2219 = (isnan(1.0) ? _3918 : (isnan(_3918) ? 1.0 : min(_3918, 1.0))) * (_2193 / ((_2197 * _2197) * 3.141590118408203125));
    float _2220 = isnan(1.0) ? _2063 : (isnan(_2063) ? 1.0 : min(_2063, 1.0));
    float _2230 = (((_2206 * cbLight._m0[_2155].x) * _2219) * _2220) + (((_2126 * cbLight._m0[_2067].x) * _2140) * _2141);
    float _2231 = (((_2206 * cbLight._m0[_2155].y) * _2219) * _2220) + (((_2126 * cbLight._m0[_2067].y) * _2140) * _2141);
    float _2232 = (((_2206 * cbLight._m0[_2155].z) * _2219) * _2220) + (((_2126 * cbLight._m0[_2067].z) * _2140) * _2141);
    float _2347;
    float _2349;
    float _2351;
    if (_2051.y == 0u)
    {
        float _2287 = fma(POSITION_1.w, cbSceneParam._m0[15u].w, fma(POSITION_1.z, cbSceneParam._m0[15u].z, fma(POSITION_1.y, cbSceneParam._m0[15u].y, cbSceneParam._m0[15u].x * POSITION_1.x)));
        float _2288 = fma(POSITION_1.w, cbSceneParam._m0[12u].w, fma(POSITION_1.z, cbSceneParam._m0[12u].z, fma(POSITION_1.y, cbSceneParam._m0[12u].y, cbSceneParam._m0[12u].x * POSITION_1.x))) / _2287;
        float _2289 = fma(POSITION_1.w, cbSceneParam._m0[13u].w, fma(POSITION_1.z, cbSceneParam._m0[13u].z, fma(POSITION_1.y, cbSceneParam._m0[13u].y, cbSceneParam._m0[13u].x * POSITION_1.x))) / _2287;
        float _2290 = fma(POSITION_1.w, cbSceneParam._m0[14u].w, fma(POSITION_1.z, cbSceneParam._m0[14u].z, fma(POSITION_1.y, cbSceneParam._m0[14u].y, cbSceneParam._m0[14u].x * POSITION_1.x))) / _2287;
        uvec4 _2302 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2303 = _2302.x;
        uint _2314 = uint((float(_2302.y) * floor(float(uint(cbSceneParam._m0[85u].y * _1239) / _2303))) + floor(float(uint(cbSceneParam._m0[85u].x * _1238) / _2303)));
        float _2324 = (log2(_2290 - cbSceneParam._m0[65u].x) - cbSceneParam._m0[65u].z) / cbSceneParam._m0[65u].y;
        float _2325 = isnan(0.0) ? _2324 : (isnan(_2324) ? 0.0 : max(_2324, 0.0));
        uint _2328 = uint(isnan(14.0) ? _2325 : (isnan(_2325) ? 14.0 : min(_2325, 14.0)));
        uvec4 _2333 = texelFetch(g_lightClusterGridBuffer, int(((_2328 << 2u) + (_2314 << 6u)) >> 2u));
        uint _2334 = _2333.x;
        uint _2335 = _2302.z;
        float _2551;
        float _2553;
        float _2555;
        if (((((1u << ((_2335 >> 4u) & 15u)) + 4294967295u) & _2334) == 0u) || ((_2335 & 240u) == 0u))
        {
            _2551 = 0.0;
            _2553 = 0.0;
            _2555 = 0.0;
        }
        else
        {
            float _2552;
            float _2554;
            float _2556;
            float _2755 = 0.0;
            float _2756 = 0.0;
            float _2757 = 0.0;
            uint _2758 = 0u;
            uint _2767;
            bool _2768;
            for (;;)
            {
                _2767 = texelFetch(g_lightClassification, int((((_2328 << 5u) + (_2314 << 9u)) + (_2758 << 2u)) >> 2u)).x;
                _2768 = _2767 == 0u;
                float frontier_phi_50_pred;
                float frontier_phi_50_pred_1;
                float frontier_phi_50_pred_2;
                if (_2768)
                {
                    frontier_phi_50_pred = _2757;
                    frontier_phi_50_pred_1 = _2755;
                    frontier_phi_50_pred_2 = _2756;
                }
                else
                {
                    float _2921;
                    float _2922;
                    float _2923;
                    uint _2924;
                    _2921 = _2755;
                    _2922 = _2756;
                    _2923 = _2757;
                    _2924 = _2767;
                    float _2833;
                    float _2834;
                    float _2835;
                    for (;;)
                    {
                        uint _2928 = uint(findLSB(_2924)) + (_2758 << 5u);
                        uint _2925 = (_2924 + 4294967295u) & _2924;
                        uint _2930 = _2928 * 48u;
                        vec4 _2944 = uintBitsToFloat(uvec4(texelFetch(g_PointLightRenderingBuffer, int(_2930)).x, texelFetch(g_PointLightRenderingBuffer, int(_2930 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2930 + 2u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2930 + 3u)).x));
                        uint _2961 = (_2928 * 48u) + 8u;
                        vec3 _2972 = uintBitsToFloat(uvec3(texelFetch(g_PointLightRenderingBuffer, int(_2961)).x, texelFetch(g_PointLightRenderingBuffer, int(_2961 + 1u)).x, texelFetch(g_PointLightRenderingBuffer, int(_2961 + 2u)).x));
                        float _2976 = _2944.x - _2288;
                        float _2977 = _2944.y - _2289;
                        float _2978 = _2944.z - _2290;
                        float _2979 = dot(vec3(_2976, _2977, _2978), vec3(_2976, _2977, _2978));
                        float _2982 = inversesqrt(_2979);
                        float _2983 = _2982 * _2976;
                        float _2984 = _2982 * _2977;
                        float _2985 = _2982 * _2978;
                        float _2991 = 1.0 - (_2979 * _2944.w);
                        float _3944 = isnan(0.0) ? _2991 : (isnan(_2991) ? 0.0 : max(_2991, 0.0));
                        float _2993 = sqrt(_2979) * uintBitsToFloat(uvec4(_2951, _2952, _2953, texelFetch(g_PointLightRenderingBuffer, int(((_2928 * 48u) + 4u) + 3u)).x)).w;
                        float _2997 = _2993 * _2993;
                        float _2998 = (-0.0) - _2288;
                        float _2999 = (-0.0) - _2289;
                        float _3000 = (-0.0) - _2290;
                        float _3004 = inversesqrt(dot(vec3(_2998, _2999, _3000), vec3(_2998, _2999, _3000)));
                        float _3005 = _3004 * _2998;
                        float _3006 = _3004 * _2999;
                        float _3007 = _3004 * _3000;
                        float _3015 = exp2(log2(1.0 / ((_2997 * 3.5) + 5.0)) * 0.25);
                        float _3016 = 1.0 - _1340;
                        float _3023 = sqrt(1.0 - ((1.0 - (_3016 * _3016)) * (1.0 - (_3015 * _3015))));
                        float _3024 = _3023 * _3023;
                        float _3025 = _3024 * _3024;
                        float _3026 = _3005 + _2983;
                        float _3027 = _3006 + _2984;
                        float _3028 = _3007 + _2985;
                        float _3032 = inversesqrt(dot(vec3(_3026, _3027, _3028), vec3(_3026, _3027, _3028)));
                        float _3036 = dot(vec3(_1294, _1297, _1300), vec3(_3005, _3006, _3007));
                        float _3955 = isnan(0.0) ? _3036 : (isnan(_3036) ? 0.0 : max(_3036, 0.0));
                        float _3039 = isnan(1.0) ? _3955 : (isnan(_3955) ? 1.0 : min(_3955, 1.0));
                        float _3040 = dot(vec3(_1294, _1297, _1300), vec3(_3032 * _3026, _3032 * _3027, _3032 * _3028));
                        float _3966 = isnan(0.0) ? _3040 : (isnan(_3040) ? 0.0 : max(_3040, 0.0));
                        float _3043 = isnan(1.0) ? _3966 : (isnan(_3966) ? 1.0 : min(_3966, 1.0));
                        float _3047 = ((_3043 * _3043) * (_3025 + (-1.0))) + 1.0;
                        float _3048 = (1.39999997615814208984375 / (_2993 + 1.39999997615814208984375)) * _3024;
                        float _3049 = _3048 * _3048;
                        float _3052 = ((1.0 - _3049) * dot(vec3(_1294, _1297, _1300), vec3(_2983, _2984, _2985))) + _3049;
                        float _3977 = isnan(0.0) ? _3052 : (isnan(_3052) ? 0.0 : max(_3052, 0.0));
                        float _3053 = isnan(1.0) ? _3977 : (isnan(_3977) ? 1.0 : min(_3977, 1.0));
                        float _3054 = 1.0 - _3024;
                        float _3064 = (0.5 / (((_3053 * ((_3039 * _3054) + _3024)) + 9.9999999392252902907785028219223e-09) + (((_3053 * _3054) + _3024) * _3039))) * _3053;
                        float _3988 = isnan(0.0) ? _3064 : (isnan(_3064) ? 0.0 : max(_3064, 0.0));
                        float _3075 = (((_3025 * 3.1415927410125732421875) * (isnan(1.0) ? _3988 : (isnan(_3988) ? 1.0 : min(_3988, 1.0)))) / ((_3047 * _3047) * ((_2997 * 2.1991131305694580078125) + 3.141590118408203125))) * (isnan(1.0) ? _3944 : (isnan(_3944) ? 1.0 : min(_3944, 1.0)));
                        _2833 = (_3075 * _2972.x) + _2921;
                        _2834 = (_3075 * _2972.y) + _2922;
                        _2835 = (_3075 * _2972.z) + _2923;
                        if (_2925 == 0u)
                        {
                            break;
                        }
                        else
                        {
                            _2921 = _2833;
                            _2922 = _2834;
                            _2923 = _2835;
                            _2924 = _2925;
                        }
                    }
                    frontier_phi_50_pred = _2835;
                    frontier_phi_50_pred_1 = _2833;
                    frontier_phi_50_pred_2 = _2834;
                }
                _2556 = frontier_phi_50_pred;
                _2552 = frontier_phi_50_pred_1;
                _2554 = frontier_phi_50_pred_2;
                uint _2759 = _2758 + 1u;
                if (_2759 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 4u) & 15u))
                {
                    _2755 = _2552;
                    _2756 = _2554;
                    _2757 = _2556;
                    _2758 = _2759;
                    continue;
                }
                else
                {
                    break;
                }
            }
            _2551 = _2552;
            _2553 = _2554;
            _2555 = _2556;
        }
        uvec4 _2559 = floatBitsToUint(cbSceneParam._m0[66u]);
        uint _2560 = _2559.z;
        uint _2562 = (_2560 >> 8u) & 15u;
        float _2732;
        float _2734;
        float _2736;
        if (((4294967295u << _2562) & _2334) == 0u)
        {
            _2732 = _2551;
            _2734 = _2553;
            _2736 = _2555;
        }
        else
        {
            float _2748 = inversesqrt(dot(vec3(_2288, _2289, _2290), vec3(_2288, _2289, _2290)));
            float _2749 = _2748 * _2288;
            float _2750 = _2748 * _2289;
            float _2751 = _2748 * _2290;
            float frontier_phi_41_42_ladder;
            float frontier_phi_41_42_ladder_1;
            float frontier_phi_41_42_ladder_2;
            if (_2562 < ((_2560 >> 12u) & 15u))
            {
                float _2733;
                float _2735;
                float _2737;
                float _2907 = _2551;
                float _2908 = _2553;
                float _2909 = _2555;
                uint _2910 = _2562;
                uint _2919;
                bool _2920;
                for (;;)
                {
                    _2919 = texelFetch(g_lightClassification, int((((_2328 << 5u) + (_2314 << 9u)) + (_2910 << 2u)) >> 2u)).x;
                    _2920 = _2919 == 0u;
                    float frontier_phi_59_pred;
                    float frontier_phi_59_pred_1;
                    float frontier_phi_59_pred_2;
                    if (_2920)
                    {
                        frontier_phi_59_pred = _2907;
                        frontier_phi_59_pred_1 = _2909;
                        frontier_phi_59_pred_2 = _2908;
                    }
                    else
                    {
                        float _3101;
                        float _3102;
                        float _3103;
                        float _3364;
                        float _3365;
                        float _3366;
                        float _3111 = _2907;
                        float _3112 = _2908;
                        float _3113 = _2909;
                        uint _3114 = _2919;
                        uint _3115;
                        uint _3125;
                        vec4 _3140;
                        float _3141;
                        vec3 _3153;
                        vec4 _3168;
                        vec4 _3183;
                        float _3229;
                        bool _3230;
                        for (;;)
                        {
                            _3125 = ((_2910 - ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 8u) & 15u)) << 5u) + uint(findLSB(_3114));
                            _3115 = (_3114 + 4294967295u) & _3114;
                            uint _3127 = _3125 * 40u;
                            _3140 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3127)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3127 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3127 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3127 + 3u)).x));
                            _3141 = _3140.w;
                            uint _3143 = (_3125 * 40u) + 8u;
                            _3153 = uintBitsToFloat(uvec3(texelFetch(g_SpotLightRenderingBuffer, int(_3143)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3143 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3143 + 2u)).x));
                            uint _3155 = (_3125 * 40u) + 16u;
                            _3168 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3155)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3155 + 3u)).x));
                            uint _3170 = (_3125 * 40u) + 20u;
                            _3183 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3170)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3170 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3170 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3170 + 3u)).x));
                            uint _3185 = (_3125 * 40u) + 24u;
                            vec4 _3198 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3185)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3185 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3185 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3185 + 3u)).x));
                            uint _3204 = (_3125 * 40u) + 28u;
                            vec4 _3217 = uintBitsToFloat(uvec4(texelFetch(g_SpotLightRenderingBuffer, int(_3204)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3204 + 1u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3204 + 2u)).x, texelFetch(g_SpotLightRenderingBuffer, int(_3204 + 3u)).x));
                            _3229 = fma(_2290, _3217.z, fma(_2289, _3217.y, _3217.x * _2288)) + _3217.w;
                            _3230 = !((fma(_2290, _3198.z, fma(_2289, _3198.y, _3198.x * _2288)) + _3198.w) <= 0.0);
                            float frontier_phi_65_pred;
                            float frontier_phi_65_pred_1;
                            float frontier_phi_65_pred_2;
                            if (_3230)
                            {
                                float _3264 = _3140.x - _2288;
                                float _3265 = _3140.y - _2289;
                                float _3266 = _3140.z - _2290;
                                float _3267 = dot(vec3(_3264, _3265, _3266), vec3(_3264, _3265, _3266));
                                float _3270 = inversesqrt(_3267);
                                float _3271 = _3270 * _3264;
                                float _3272 = _3270 * _3265;
                                float _3273 = _3270 * _3266;
                                float _3277 = 1.0 - (_3267 / (_3141 * _3141));
                                float _3999 = isnan(0.0) ? _3277 : (isnan(_3277) ? 0.0 : max(_3277, 0.0));
                                float _3279 = sqrt(_3267) * uintBitsToFloat(uvec4(_3233, _3234, _3235, texelFetch(g_SpotLightRenderingBuffer, int(((_3125 * 40u) + 4u) + 3u)).x)).w;
                                float _3282 = _3279 * _3279;
                                float _3283 = (fma(_2290, _3168.z, fma(_2289, _3168.y, _3168.x * _2288)) + _3168.w) / _3229;
                                float _3284 = (fma(_2290, _3183.z, fma(_2289, _3183.y, _3183.x * _2288)) + _3183.w) / _3229;
                                float _3288 = 1.0 - dot(vec2(_3283, _3284), vec2(_3283, _3284));
                                float _4010 = isnan(0.0) ? _3288 : (isnan(_3288) ? 0.0 : max(_3288, 0.0));
                                float _3298 = exp2(log2(1.0 / ((_3282 * 3.5) + 5.0)) * 0.25);
                                float _3299 = 1.0 - _1340;
                                float _3306 = sqrt(1.0 - ((1.0 - (_3299 * _3299)) * (1.0 - (_3298 * _3298))));
                                float _3307 = _3306 * _3306;
                                float _3308 = _3307 * _3307;
                                float _3309 = _3271 - _2749;
                                float _3310 = _3272 - _2750;
                                float _3311 = _3273 - _2751;
                                float _3315 = inversesqrt(dot(vec3(_3309, _3310, _3311), vec3(_3309, _3310, _3311)));
                                float _3319 = dot(vec3(_1294, _1297, _1300), vec3((-0.0) - _2749, (-0.0) - _2750, (-0.0) - _2751));
                                float _4021 = isnan(0.0) ? _3319 : (isnan(_3319) ? 0.0 : max(_3319, 0.0));
                                float _3322 = isnan(1.0) ? _4021 : (isnan(_4021) ? 1.0 : min(_4021, 1.0));
                                float _3323 = dot(vec3(_1294, _1297, _1300), vec3(_3315 * _3309, _3315 * _3310, _3315 * _3311));
                                float _4032 = isnan(0.0) ? _3323 : (isnan(_3323) ? 0.0 : max(_3323, 0.0));
                                float _3326 = isnan(1.0) ? _4032 : (isnan(_4032) ? 1.0 : min(_4032, 1.0));
                                float _3330 = ((_3326 * _3326) * (_3308 + (-1.0))) + 1.0;
                                float _3331 = (1.39999997615814208984375 / (_3279 + 1.39999997615814208984375)) * _3307;
                                float _3332 = _3331 * _3331;
                                float _3338 = ((1.0 - _3332) * dot(vec3(_1294, _1297, _1300), vec3(_3271, _3272, _3273))) + _3332;
                                float _4043 = isnan(0.0) ? _3338 : (isnan(_3338) ? 0.0 : max(_3338, 0.0));
                                float _3339 = isnan(1.0) ? _4043 : (isnan(_4043) ? 1.0 : min(_4043, 1.0));
                                float _3340 = 1.0 - _3307;
                                float _3350 = (0.5 / (((_3339 * ((_3322 * _3340) + _3307)) + 9.9999999392252902907785028219223e-09) + (((_3339 * _3340) + _3307) * _3322))) * _3339;
                                float _4054 = isnan(0.0) ? _3350 : (isnan(_3350) ? 0.0 : max(_3350, 0.0));
                                float _3360 = ((isnan(1.0) ? _4010 : (isnan(_4010) ? 1.0 : min(_4010, 1.0))) * (isnan(1.0) ? _3999 : (isnan(_3999) ? 1.0 : min(_3999, 1.0)))) * (((_3308 * 3.1415927410125732421875) * (isnan(1.0) ? _4054 : (isnan(_4054) ? 1.0 : min(_4054, 1.0)))) / ((_3330 * _3330) * ((_3282 * 2.1991131305694580078125) + 3.141590118408203125)));
                                frontier_phi_65_pred = _3360 * _3153.z;
                                frontier_phi_65_pred_1 = _3360 * _3153.y;
                                frontier_phi_65_pred_2 = _3360 * _3153.x;
                            }
                            else
                            {
                                frontier_phi_65_pred = 0.0;
                                frontier_phi_65_pred_1 = 0.0;
                                frontier_phi_65_pred_2 = 0.0;
                            }
                            _3366 = frontier_phi_65_pred;
                            _3365 = frontier_phi_65_pred_1;
                            _3364 = frontier_phi_65_pred_2;
                            _3101 = _3364 + _3111;
                            _3102 = _3365 + _3112;
                            _3103 = _3366 + _3113;
                            if (_3115 == 0u)
                            {
                                break;
                            }
                            else
                            {
                                _3111 = _3101;
                                _3112 = _3102;
                                _3113 = _3103;
                                _3114 = _3115;
                                continue;
                            }
                        }
                        frontier_phi_59_pred = _3101;
                        frontier_phi_59_pred_1 = _3103;
                        frontier_phi_59_pred_2 = _3102;
                    }
                    _2733 = frontier_phi_59_pred;
                    _2737 = frontier_phi_59_pred_1;
                    _2735 = frontier_phi_59_pred_2;
                    uint _2911 = _2910 + 1u;
                    if (_2911 < ((floatBitsToUint(cbSceneParam._m0[66u]).z >> 12u) & 15u))
                    {
                        _2907 = _2733;
                        _2908 = _2735;
                        _2909 = _2737;
                        _2910 = _2911;
                        continue;
                    }
                    else
                    {
                        break;
                    }
                }
                frontier_phi_41_42_ladder = _2737;
                frontier_phi_41_42_ladder_1 = _2733;
                frontier_phi_41_42_ladder_2 = _2735;
            }
            else
            {
                frontier_phi_41_42_ladder = _2555;
                frontier_phi_41_42_ladder_1 = _2551;
                frontier_phi_41_42_ladder_2 = _2553;
            }
            _2732 = frontier_phi_41_42_ladder_1;
            _2734 = frontier_phi_41_42_ladder_2;
            _2736 = frontier_phi_41_42_ladder;
        }
        float _2741 = isnan(1.0) ? _1312 : (isnan(_1312) ? 1.0 : min(_1312, 1.0));
        _2347 = ((_2732 * 0.039999999105930328369140625) * _2741) + _2230;
        _2349 = ((_2734 * 0.039999999105930328369140625) * _2741) + _2231;
        _2351 = ((_2736 * 0.039999999105930328369140625) * _2741) + _2232;
    }
    else
    {
        _2347 = _2230;
        _2349 = _2231;
        _2351 = _2232;
    }
    uint _2358 = (_2047 + 9u) + uint(cbMatDynParam._m0[0u].w);
    float _2364 = cbInstanceData._m0[_2358].x * (_953 - (_953 * TEXCOORD_7.x));
    float _2365 = cbInstanceData._m0[_2358].y * (_955 - (_955 * TEXCOORD_7.y));
    float _2366 = cbInstanceData._m0[_2358].z * (_957 - (_957 * TEXCOORD_7.z));
    float _2386 = cbSceneParam._m0[86u].x - (cbSceneParam._m0[85u].z * 0.5);
    float _2387 = cbSceneParam._m0[86u].y - (cbSceneParam._m0[85u].w * 0.5);
    float _2388 = cbSceneParam._m0[86u].x * ((_1238 / cbSceneParam._m0[86u].x) + ((0.0999999940395355224609375 / (_1195 + 10.0)) * dot(vec3(_1274, _1275, _1276), vec3(_225, _226, _227))));
    float _2389 = isnan(_2386) ? _2388 : (isnan(_2388) ? _2386 : min(_2388, _2386));
    float _2390 = isnan(_2387) ? _1239 : (isnan(_1239) ? _2387 : min(_1239, _2387));
    vec4 _2392 = textureLod(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2389, _2390), 0.0);
    float _2394 = _2392.x;
    bool _2414 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2394)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2394))) > _1195;
    float _2415 = _2414 ? _2389 : _1238;
    float _2416 = _2414 ? _2390 : _1239;
    vec4 _2418 = texture(sampler2D(g_RefractionTexture, SS_ClampLinear), vec2(_2415, _2416));
    vec4 _2423 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_2415, _2416));
    float _2425 = _2423.x;
    float _2445 = ((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2425)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2425))) - _1195;
    bool _2452 = floatBitsToUint(cbSceneParam._m0[69u]).z != 0u;
    float _2456 = (isnan(_2445) ? 0.0 : (isnan(0.0) ? _2445 : max(0.0, _2445))) * (-1.44269502162933349609375);
    float _2476 = 0.4799999892711639404296875 - (exp2(log2(1.0 - (isnan(1.0) ? _3688 : (isnan(_3688) ? 1.0 : min(_3688, 1.0)))) * 5.0) * 0.4799999892711639404296875);
    float _2487 = (_2364 + ((_2347 + ((isnan(0.0) ? _2034 : (isnan(_2034) ? 0.0 : max(_2034, 0.0))) * _1808)) * cbPerFrame._m0[3u].x)) + (((_2476 * _2418.x) * exp2(_2456 * (_2452 ? 0.0 : cbMtdParam._m0[35u].y))) * cbSceneParam._m0[72u].w);
    float _2489 = (_2365 + ((_2349 + ((isnan(0.0) ? _2037 : (isnan(_2037) ? 0.0 : max(_2037, 0.0))) * _1808)) * cbPerFrame._m0[3u].x)) + (((_2476 * _2418.y) * exp2(_2456 * (_2452 ? 0.0 : cbMtdParam._m0[35u].z))) * cbSceneParam._m0[72u].w);
    float _2491 = (_2366 + ((_2351 + ((isnan(0.0) ? _2040 : (isnan(_2040) ? 0.0 : max(_2040, 0.0))) * _1808)) * cbPerFrame._m0[3u].x)) + (((_2476 * _2418.z) * exp2(_2456 * (_2452 ? 0.0 : cbMtdParam._m0[35u].w))) * cbSceneParam._m0[72u].w);
    float _4100 = isnan(0.0) ? cbMtdParam._m0[2u].w : (isnan(cbMtdParam._m0[2u].w) ? 0.0 : max(cbMtdParam._m0[2u].w, 0.0));
    float _2504 = isnan(1.0) ? _4100 : (isnan(_4100) ? 1.0 : min(_4100, 1.0));
    float _2514 = _1238 / cbSceneParam._m0[86u].x;
    float _2515 = _1239 / cbSceneParam._m0[86u].y;
    vec4 _2529 = texture(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2514, _2515, (log2((isnan(cbSceneParam._m0[77u].w) ? _1195 : (isnan(_1195) ? cbSceneParam._m0[77u].w : min(_1195, cbSceneParam._m0[77u].w))) + cbSceneParam._m0[77u].x) * cbSceneParam._m0[77u].y) + cbSceneParam._m0[77u].z));
    float _2531 = _2529.x;
    float _2532 = _2529.y;
    float _2533 = _2529.z;
    float _2534 = _2529.w;
    float _2607;
    float _2609;
    float _2611;
    float _2613;
    if (_1195 > cbSceneParam._m0[78u].w)
    {
        float _2570 = isnan(_1195) ? cbSceneParam._m0[80u].w : (isnan(cbSceneParam._m0[80u].w) ? _1195 : min(cbSceneParam._m0[80u].w, _1195));
        float _2571 = _2570 / _1195;
        float _2582 = _2571 * _1224;
        float _2583 = _1225 * _2571;
        float _2584 = (-0.0) - _2583;
        float _2585 = _2571 * _1226;
        float _2587 = (cbSceneParam._m0[77u].w * _2584) / _2570;
        float _2588 = _2587 + cbSceneParam._m0[79u].w;
        float _2589 = cbSceneParam._m0[79u].w - _2583;
        float _2595 = sqrt(((_2582 * _2582) + (_2583 * _2583)) + (_2585 * _2585));
        float _2598 = (1.0 - (cbSceneParam._m0[77u].w / _2570)) * _2595;
        float _2604 = cbSceneParam._m0[80u].x * (-1.44269502162933349609375);
        float _2605 = cbSceneParam._m0[80u].x * 1.44269502162933349609375;
        float _2843;
        if (abs((_2584 - _2587) * cbSceneParam._m0[80u].x) < 9.9999997473787516355514526367188e-05)
        {
            _2843 = ((((_2588 > 0.0) ? exp2(_2604 * _2588) : (2.0 - exp2(_2605 * _2588))) * cbSceneParam._m0[80u].y) + cbSceneParam._m0[80u].z) * _2598;
        }
        else
        {
            float _2781 = 1.0 / cbSceneParam._m0[80u].x;
            float _2782 = isnan(_2589) ? _2588 : (isnan(_2588) ? _2589 : max(_2588, _2589));
            float _2783 = isnan(_2589) ? _2588 : (isnan(_2588) ? _2589 : min(_2588, _2589));
            float _2792 = isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : min(_2782, 0.0));
            float _2793 = isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : min(_2783, 0.0));
            _2843 = ((abs(_2595 / _2584) * cbSceneParam._m0[80u].y) * ((((_2792 - _2793) * 2.0) - ((exp2(_2604 * (isnan(0.0) ? _2782 : (isnan(_2782) ? 0.0 : max(_2782, 0.0)))) - exp2(_2604 * (isnan(0.0) ? _2783 : (isnan(_2783) ? 0.0 : max(_2783, 0.0))))) * _2781)) - ((exp2(_2605 * _2792) - exp2(_2605 * _2793)) * _2781))) + (_2598 * cbSceneParam._m0[80u].z);
        }
        vec4 _2845 = textureLod(sampler3D(g_VolumeFog0, SS_ClampLinear), vec3(_2514, _2515, 1.0), 0.0);
        float _2854 = exp2((_2843 * (-1.44269502162933349609375)) * (1.0 - _2845.w));
        float _2855 = log2(_2854);
        float _2871 = log2(_2534);
        _2607 = (exp2(_2871 * cbSceneParam._m0[78u].x) * (((1.0 - exp2(_2855 * cbSceneParam._m0[78u].x)) * _2845.x) / cbSceneParam._m0[78u].x)) + _2531;
        _2609 = (exp2(_2871 * cbSceneParam._m0[78u].y) * (((1.0 - exp2(_2855 * cbSceneParam._m0[78u].y)) * _2845.y) / cbSceneParam._m0[78u].y)) + _2532;
        _2611 = (exp2(_2871 * cbSceneParam._m0[78u].z) * (((1.0 - exp2(_2855 * cbSceneParam._m0[78u].z)) * _2845.z) / cbSceneParam._m0[78u].z)) + _2533;
        _2613 = _2854 * _2534;
    }
    else
    {
        _2607 = _2531;
        _2609 = _2532;
        _2611 = _2533;
        _2613 = _2534;
    }
    bool _2625 = roundEven(cbMatDynParam._m0[0u].y) == 3.0;
    float _2626 = log2(_2613);
    float _2630 = exp2(_2626 * cbSceneParam._m0[78u].x);
    float _2631 = exp2(_2626 * cbSceneParam._m0[78u].y);
    float _2632 = exp2(_2626 * cbSceneParam._m0[78u].z);
    float _2633 = _2630 * (isnan(0.0) ? _2487 : (isnan(_2487) ? 0.0 : max(_2487, 0.0)));
    float _2634 = _2631 * (isnan(0.0) ? _2489 : (isnan(_2489) ? 0.0 : max(_2489, 0.0)));
    float _2635 = _2632 * (isnan(0.0) ? _2491 : (isnan(_2491) ? 0.0 : max(_2491, 0.0)));
    vec4 _2643 = texture(sampler2D(g_DepthTexture, SS_ClampPoint), vec2(_1238, _1239));
    float _2645 = _2643.x;
    float _2666 = (((floatBitsToUint(cbSceneParam._m0[88u]).x != 0u) ? (((-0.0) - cbSceneParam._m0[2u].z) / (cbSceneParam._m0[2u].x - _2645)) : (cbSceneParam._m0[0u].x - (cbSceneParam._m0[0u].z * _2645))) - _1195) * cbMtdParam._m0[20u].y;
    float _4151 = isnan(0.0) ? _2666 : (isnan(_2666) ? 0.0 : max(_2666, 0.0));
    float _2667 = isnan(1.0) ? _4151 : (isnan(_4151) ? 1.0 : min(_4151, 1.0));
    float _2668 = (cbInstanceData._m0[_2047 + 6u].w * (isnan(1.0) ? _3666 : (isnan(_3666) ? 1.0 : min(_3666, 1.0)))) * _2667;
    float _2677 = (roundEven(cbMatDynParam._m0[0u].y) != 2.0) ? cbSceneParam._m0[72u].z : 1.0;
    SV_Target.x = _2677 * (_2625 ? _2633 : (_2633 + (cbSceneParam._m0[72u].w * _2607)));
    SV_Target.y = _2677 * (_2625 ? _2634 : (_2634 + (cbSceneParam._m0[72u].w * _2609)));
    SV_Target.z = _2677 * (_2625 ? _2635 : (_2635 + (cbSceneParam._m0[72u].w * _2611)));
    SV_Target.w = _2668;
    SV_Target_1.x = ((((cbMtdParam._m0[2u].x * _2364) * _2504) * _2630) * _2667) * _2677;
    SV_Target_1.y = ((((cbMtdParam._m0[2u].y * _2365) * _2504) * _2631) * _2667) * _2677;
    SV_Target_1.z = ((((cbMtdParam._m0[2u].z * _2366) * _2504) * _2632) * _2667) * _2677;
    SV_Target_1.w = _2668;
}


